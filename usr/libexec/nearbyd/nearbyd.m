void *sub_100002DE4(unsigned char *__dst, void *__src, unint64_t a3)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t vars8;

  v5 = __dst;
  if (a3 > 0x16)
  {
    if (a3 >= 0x7FFFFFFFFFFFFFF8) {
      sub_10000B220();
    }
    v6 = (a3 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a3 | 7) != 0x17) {
      v6 = a3 | 7;
    }
    v7 = v6 + 1;
    v8 = operator new(v6 + 1);
    v5[1] = a3;
    v5[2] = v7 | 0x8000000000000000;
    *v5 = v8;
    v5 = v8;
  }
  else
  {
    __dst[23] = a3;
  }

  return memmove(v5, __src, a3 + 1);
}

uint64_t sub_100002E84(uint64_t a1, double *a2, long double *a3)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100415B24();
  }
  int v6 = vcvtmd_s64_f64((*a2 + 90.0) * 10.0) + (int)(floor(*a3 * 10.0) * 100000.0);
  v7 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100415A8C((unsigned __int8 *)a1, v6, v7);
  }
  if (*(unsigned char *)a1 && v6 == *(_DWORD *)(a1 + 4))
  {
    uint64_t v8 = *(unsigned __int8 *)(a1 + 8);
    uint64_t v9 = v8 != 0;
    v10 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
      sub_100415A1C(v8, v10, v11, v12, v13, v14, v15, v16);
    }
  }
  else
  {
    uint64_t v17 = a1 + 16;
    uint64_t v18 = *(void *)(a1 + 24);
    if (v18 == a1 + 16)
    {
LABEL_14:
      *(unsigned char *)a1 = 0;
      *(_DWORD *)(a1 + 4) = 0;
      *(unsigned char *)(a1 + 8) = 0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
        sub_100415904();
      }
      uint64_t v9 = sub_1001969E4(a1, *a2, *a3);
      if (v9)
      {
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
          sub_1004158D0();
        }
        v20 = operator new(0x18uLL);
        v20[4] = v6;
        uint64_t v21 = *(void *)(a1 + 16);
        *(void *)v20 = v21;
        *((void *)v20 + 1) = v17;
        *(void *)(v21 + 8) = v20;
        *(void *)(a1 + 16) = v20;
        ++*(void *)(a1 + 32);
      }
      *(unsigned char *)a1 = 1;
      *(_DWORD *)(a1 + 4) = v6;
      *(unsigned char *)(a1 + 8) = v9;
      v22 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
        sub_100415860(v9, v22, v23, v24, v25, v26, v27, v28);
      }
    }
    else
    {
      while (1)
      {
        v19 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
          sub_1004159DC(&v30, v31, v19);
        }
        if (v6 == *(_DWORD *)(v18 + 16)) {
          break;
        }
        uint64_t v18 = *(void *)(v18 + 8);
        if (v18 == v17) {
          goto LABEL_14;
        }
      }
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
        sub_1004159A8();
      }
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
        sub_100415974();
      }
      return 1;
    }
  }
  return v9;
}

void sub_100003118(char *a1@<X1>, std::string *a2@<X8>)
{
  sub_100007C0C((uint64_t)&v9);
  sub_100004950(__p, a1);
  if ((v8 & 0x80u) == 0) {
    v4 = __p;
  }
  else {
    v4 = (void **)__p[0];
  }
  if ((v8 & 0x80u) == 0) {
    std::string::size_type v5 = v8;
  }
  else {
    std::string::size_type v5 = (std::string::size_type)__p[1];
  }
  int v6 = std::string::append(&v9, (const std::string::value_type *)v4, v5);
  *a2 = *v6;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  if ((char)v8 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v9.__r_.__value_.__l.__data_);
  }
}

void sub_1000031BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1000031F0(uint64_t a1)
{
  sub_100007D00();
  sub_100003118(off_10089EEB0, (std::string *)&v4);
  v2 = (void **)(a1 + 64);
  if (*(char *)(a1 + 87) < 0) {
    operator delete(*v2);
  }
  *(_OWORD *)v2 = *(_OWORD *)&v4.st_dev;
  *(void *)(a1 + 80) = *(void *)&v4.st_uid;
  if (*(char *)(a1 + 87) < 0) {
    v2 = (void **)*v2;
  }
  return stat((const char *)v2, &v4) == 0;
}

BOOL sub_100003274(uint64_t a1, uint64_t a2, std::string *a3)
{
  stat v4 = (std::string *)a2;
  std::string::size_type v5 = (char *)(a2 + 23);
  if (*(char *)(a2 + 23) < 0)
  {
    uint64_t v6 = *(void *)(a2 + 8);
    if (!v6) {
      return v6 != 0;
    }
  }
  else
  {
    uint64_t v6 = *(unsigned __int8 *)(a2 + 23);
    if (!*(unsigned char *)(a2 + 23)) {
      return v6 != 0;
    }
  }
  v7 = sub_100003520((void *)(a1 + 112), (unsigned __int8 *)a2);
  if (!v7)
  {
    v7 = sub_100003520(qword_1008AC5D8, (unsigned __int8 *)v4);
    if (!v7)
    {
      unsigned __int8 v8 = qword_1008AB7B8;
      if (os_log_type_enabled((os_log_t)qword_1008AB7B8, OS_LOG_TYPE_DEFAULT))
      {
        std::string v9 = v4;
        if (*v5 < 0) {
          std::string v9 = (std::string *)v4->__r_.__value_.__r.__words[0];
        }
        *(_DWORD *)__p = 136315138;
        *(void *)&__p[4] = v9;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "regulatory,comp,getRegulatoryCountryParams,cantFind,country,%s", __p, 0xCu);
      }
      sub_100004950(__p, off_10089F758[0]);
      v7 = sub_100003520(qword_1008AC5D8, __p);
      if (v20 < 0) {
        operator delete(*(void **)__p);
      }
      v10 = qword_1008AB7B8;
      BOOL v11 = os_log_type_enabled((os_log_t)qword_1008AB7B8, OS_LOG_TYPE_DEFAULT);
      if (!v7) {
        sub_1004382F8(v11, v10);
      }
      if (v11)
      {
        uint64_t v12 = v4;
        if (*v5 < 0) {
          uint64_t v12 = (std::string *)v4->__r_.__value_.__r.__words[0];
        }
        *(_DWORD *)__p = 136315138;
        *(void *)&__p[4] = v12;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "regulatory,comp,getRegulatoryCountryParams,cantFind,country,%s,setting it to unknown.", __p, 0xCu);
      }
      std::string::assign(v4, off_10089F758[0]);
    }
  }
  uint64_t v13 = qword_1008AB7B8;
  if (os_log_type_enabled((os_log_t)qword_1008AB7B8, OS_LOG_TYPE_DEBUG)) {
    sub_100438384(v5, v4, v13);
  }
  std::string::operator=(a3, (const std::string *)(v7 + 40));
  std::string::operator=(a3 + 1, (const std::string *)(v7 + 64));
  unsigned __int8 v14 = v7[90];
  LOWORD(a3[2].__r_.__value_.__l.__data_) = *((_WORD *)v7 + 44);
  uint64_t v15 = a3 + 2;
  v15->__r_.__value_.__s.__data_[2] = v14;
  int v16 = *v5;
  if (v16 < 0)
  {
    if (v4->__r_.__value_.__l.__size_ != 2) {
      return v6 != 0;
    }
    stat v4 = (std::string *)v4->__r_.__value_.__r.__words[0];
  }
  else if (v16 != 2)
  {
    return v6 != 0;
  }
  if (LOWORD(v4->__r_.__value_.__l.__data_) == 20035)
  {
    int v17 = *((_DWORD *)sub_100007D00() + 144);
    if ((v17 - 19) < 5 || (v17 - 118) <= 3)
    {
      if (os_log_type_enabled((os_log_t)qword_1008AB7B8, OS_LOG_TYPE_DEBUG)) {
        sub_100438350();
      }
      v15->__r_.__value_.__s.__data_[0] = 0;
    }
  }
  return v6 != 0;
}

void sub_1000034FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

unsigned __int8 *sub_100003520(void *a1, unsigned __int8 *a2)
{
  unint64_t v4 = sub_100003624((uint64_t)(a1 + 3), (uint64_t)a2);
  int8x8_t v5 = (int8x8_t)a1[1];
  if (!*(void *)&v5) {
    return 0;
  }
  unint64_t v6 = v4;
  uint8x8_t v7 = (uint8x8_t)vcnt_s8(v5);
  v7.i16[0] = vaddlv_u8(v7);
  unint64_t v8 = v7.u32[0];
  if (v7.u32[0] > 1uLL)
  {
    unint64_t v9 = v4;
    if (v4 >= *(void *)&v5) {
      unint64_t v9 = v4 % *(void *)&v5;
    }
  }
  else
  {
    unint64_t v9 = (*(void *)&v5 - 1) & v4;
  }
  v10 = *(unsigned __int8 ***)(*a1 + 8 * v9);
  if (!v10) {
    return 0;
  }
  BOOL v11 = *v10;
  if (*v10)
  {
    uint64_t v12 = (uint64_t)(a1 + 4);
    do
    {
      unint64_t v13 = *((void *)v11 + 1);
      if (v13 == v6)
      {
        if (sub_100007880(v12, v11 + 16, a2)) {
          return v11;
        }
      }
      else
      {
        if (v8 > 1)
        {
          if (v13 >= *(void *)&v5) {
            v13 %= *(void *)&v5;
          }
        }
        else
        {
          v13 &= *(void *)&v5 - 1;
        }
        if (v13 != v9) {
          return 0;
        }
      }
      BOOL v11 = *(unsigned __int8 **)v11;
    }
    while (v11);
  }
  return v11;
}

unint64_t sub_100003624(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    unint64_t v3 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(void *)a2;
    unint64_t v3 = v2;
  }
  return sub_10000375C((uint64_t)&v5, (uint64_t *)a2, v3);
}

unint64_t sub_100003664(_DWORD *a1, unint64_t a2)
{
  if (a2 < 9)
  {
    if (a2 < 4)
    {
      unint64_t result = 0x9AE16A3B2F90404FLL;
      if (a2)
      {
        unint64_t v8 = (0xC949D7C7509E6557 * (a2 + 4 * *((unsigned __int8 *)a1 + a2 - 1))) ^ (0x9AE16A3B2F90404FLL
                                                                                      * (*(unsigned __int8 *)a1 | ((unint64_t)*((unsigned __int8 *)a1 + (a2 >> 1)) << 8)));
        return 0x9AE16A3B2F90404FLL * (v8 ^ (v8 >> 47));
      }
    }
    else
    {
      uint64_t v6 = *(unsigned int *)((char *)a1 + a2 - 4);
      unint64_t v7 = 0x9DDFEA08EB382D69 * (((8 * *a1) + a2) ^ v6);
      return 0x9DDFEA08EB382D69
           * ((0x9DDFEA08EB382D69 * (v6 ^ (v7 >> 47) ^ v7)) ^ ((0x9DDFEA08EB382D69 * (v6 ^ (v7 >> 47) ^ v7)) >> 47));
    }
  }
  else
  {
    uint64_t v3 = *(void *)((char *)a1 + a2 - 8);
    uint64_t v4 = __ROR8__(v3 + a2, a2);
    return (0x9DDFEA08EB382D69
          * ((0x9DDFEA08EB382D69
            * (v4 ^ ((0x9DDFEA08EB382D69 * (v4 ^ *(void *)a1)) >> 47) ^ (0x9DDFEA08EB382D69 * (v4 ^ *(void *)a1)))) ^ ((0x9DDFEA08EB382D69 * (v4 ^ ((0x9DDFEA08EB382D69 * (v4 ^ *(void *)a1)) >> 47) ^ (0x9DDFEA08EB382D69 * (v4 ^ *(void *)a1)))) >> 47))) ^ v3;
  }
  return result;
}

unint64_t sub_10000375C(uint64_t a1, uint64_t *a2, unint64_t a3)
{
  if (a3 > 0x20)
  {
    if (a3 > 0x40)
    {
      uint64_t v4 = *(uint64_t *)((char *)a2 + a3 - 48);
      uint64_t v5 = *(uint64_t *)((char *)a2 + a3 - 40);
      uint64_t v6 = *(uint64_t *)((char *)a2 + a3 - 24);
      uint64_t v8 = *(uint64_t *)((char *)a2 + a3 - 64);
      uint64_t v7 = *(uint64_t *)((char *)a2 + a3 - 56);
      uint64_t v9 = *(uint64_t *)((char *)a2 + a3 - 16);
      uint64_t v10 = *(uint64_t *)((char *)a2 + a3 - 8);
      unint64_t v11 = v7 + v9;
      unint64_t v12 = 0x9DDFEA08EB382D69
          * (v6 ^ ((0x9DDFEA08EB382D69 * (v6 ^ (v4 + a3))) >> 47) ^ (0x9DDFEA08EB382D69 * (v6 ^ (v4 + a3))));
      unint64_t v13 = 0x9DDFEA08EB382D69 * (v12 ^ (v12 >> 47));
      unint64_t v14 = v8 + a3 + v7 + v4;
      uint64_t v15 = v14 + v5;
      unint64_t v16 = __ROR8__(v14, 44) + v8 + a3 + __ROR8__(v5 + v8 + a3 - 0x622015F714C7D297 * (v12 ^ (v12 >> 47)), 21);
      uint64_t v17 = v7 + v9 + *(uint64_t *)((char *)a2 + a3 - 32) - 0x4B6D499041670D8DLL;
      uint64_t v18 = v17 + v6 + v9;
      uint64_t v19 = __ROR8__(v18, 44);
      uint64_t v20 = v18 + v10;
      uint64_t v21 = v19 + v17 + __ROR8__(v17 + v5 + v10, 21);
      uint64_t v23 = *a2;
      v22 = a2 + 4;
      unint64_t v24 = v23 - 0x4B6D499041670D8DLL * v5;
      uint64_t v25 = -(uint64_t)((a3 - 1) & 0xFFFFFFFFFFFFFFC0);
      do
      {
        uint64_t v26 = *(v22 - 3);
        uint64_t v27 = v24 + v15 + v11 + v26;
        uint64_t v28 = v22[2];
        uint64_t v29 = v22[3];
        uint64_t v30 = v22[1];
        unint64_t v11 = v30 + v15 - 0x4B6D499041670D8DLL * __ROR8__(v11 + v16 + v28, 42);
        uint64_t v31 = v13 + v20;
        uint64_t v32 = *(v22 - 2);
        uint64_t v33 = *(v22 - 1);
        uint64_t v34 = *(v22 - 4) - 0x4B6D499041670D8DLL * v16;
        uint64_t v35 = v34 + v20 + v33;
        uint64_t v36 = v34 + v26 + v32;
        uint64_t v15 = v36 + v33;
        uint64_t v37 = __ROR8__(v36, 44) + v34;
        unint64_t v38 = (0xB492B66FBE98F273 * __ROR8__(v27, 37)) ^ v21;
        unint64_t v24 = 0xB492B66FBE98F273 * __ROR8__(v31, 33);
        unint64_t v16 = v37 + __ROR8__(v35 + v38, 21);
        unint64_t v39 = v24 + v21 + *v22;
        uint64_t v20 = v39 + v30 + v28 + v29;
        uint64_t v21 = __ROR8__(v39 + v30 + v28, 44) + v39 + __ROR8__(v11 + v32 + v39 + v29, 21);
        v22 += 8;
        unint64_t v13 = v38;
        v25 += 64;
      }
      while (v25);
      unint64_t v40 = v24
          - 0x622015F714C7D297
          * ((0x9DDFEA08EB382D69
            * (v21 ^ ((0x9DDFEA08EB382D69 * (v21 ^ v16)) >> 47) ^ (0x9DDFEA08EB382D69 * (v21 ^ v16)))) ^ ((0x9DDFEA08EB382D69 * (v21 ^ ((0x9DDFEA08EB382D69 * (v21 ^ v16)) >> 47) ^ (0x9DDFEA08EB382D69 * (v21 ^ v16)))) >> 47));
      unint64_t v41 = 0x9DDFEA08EB382D69
          * (v40 ^ (v38
                  - 0x4B6D499041670D8DLL * (v11 ^ (v11 >> 47))
                  - 0x622015F714C7D297
                  * ((0x9DDFEA08EB382D69
                    * (v20 ^ ((0x9DDFEA08EB382D69 * (v20 ^ v15)) >> 47) ^ (0x9DDFEA08EB382D69 * (v20 ^ v15)))) ^ ((0x9DDFEA08EB382D69 * (v20 ^ ((0x9DDFEA08EB382D69 * (v20 ^ v15)) >> 47) ^ (0x9DDFEA08EB382D69 * (v20 ^ v15)))) >> 47))));
      return 0x9DDFEA08EB382D69
           * ((0x9DDFEA08EB382D69 * (v40 ^ (v41 >> 47) ^ v41)) ^ ((0x9DDFEA08EB382D69 * (v40 ^ (v41 >> 47) ^ v41)) >> 47));
    }
    else
    {
      return sub_10003B42C(a2, a3);
    }
  }
  else if (a3 > 0x10)
  {
    return sub_10003B380(a2, a3);
  }
  else
  {
    return sub_100003664(a2, a3);
  }
}

void sub_100003964(uint64_t a1)
{
  if (!*(_WORD *)(a1 + 400))
  {
    if (os_log_type_enabled((os_log_t)qword_1008A7E88, OS_LOG_TYPE_FAULT)) {
      sub_10042C36C();
    }
    unint64_t v12 = qword_1008A7E88;
    if (os_log_type_enabled((os_log_t)qword_1008A7E88, OS_LOG_TYPE_INFO))
    {
      int v13 = 136315650;
      unint64_t v14 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Libraries/DaemonCore/Ranging/Monitors/PRLocationMonitor.mm";
      __int16 v15 = 1024;
      int v16 = 445;
      __int16 v17 = 2080;
      uint64_t v18 = "_releaseAssertion";
LABEL_18:
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "%s:%d: assertion failure in %s", (uint8_t *)&v13, 0x1Cu);
    }
LABEL_19:
    abort();
  }
  --*(_WORD *)(a1 + 400);
  unint64_t v2 = qword_1008A7E88;
  if (os_log_type_enabled((os_log_t)qword_1008A7E88, OS_LOG_TYPE_INFO))
  {
    int v3 = *(unsigned __int16 *)(a1 + 400);
    int v13 = 67109120;
    LODWORD(v14) = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "regulatory,geo,loc,checkRegulatoryIso,refCountForReleasingAssertion,%d", (uint8_t *)&v13, 8u);
  }
  if (!*(_WORD *)(a1 + 400))
  {
    uint64_t v4 = qword_1008A7E88;
    if (*(void *)(a1 + 392))
    {
      uint64_t v5 = (uint64_t *)(a1 + 392);
      if (os_log_type_enabled((os_log_t)qword_1008A7E88, OS_LOG_TYPE_INFO))
      {
        LOWORD(v13) = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "regulatory,geo,loc,checkRegulatoryIso,releaseAssertion", (uint8_t *)&v13, 2u);
      }
      sub_1000077C4(v5, 0, v6, v7, v8, v9, v10, v11);
      return;
    }
    if (os_log_type_enabled((os_log_t)qword_1008A7E88, OS_LOG_TYPE_FAULT)) {
      sub_10042C3A0();
    }
    unint64_t v12 = qword_1008A7E88;
    if (os_log_type_enabled((os_log_t)qword_1008A7E88, OS_LOG_TYPE_INFO))
    {
      int v13 = 136315650;
      unint64_t v14 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Libraries/DaemonCore/Ranging/Monitors/PRLocationMonitor.mm";
      __int16 v15 = 1024;
      int v16 = 451;
      __int16 v17 = 2080;
      uint64_t v18 = "_releaseAssertion";
      goto LABEL_18;
    }
    goto LABEL_19;
  }
}

void sub_100003B90(uint64_t a1)
{
  int v1 = *(unsigned __int16 *)(a1 + 400);
  if (v1 == 0xFFFF)
  {
    if (os_log_type_enabled((os_log_t)qword_1008A7E88, OS_LOG_TYPE_FAULT)) {
      sub_10042C214();
    }
    uint64_t v6 = qword_1008A7E88;
    if (os_log_type_enabled((os_log_t)qword_1008A7E88, OS_LOG_TYPE_INFO))
    {
      __p[0] = 136315650;
      *(void *)&__p[1] = "/Library/Caches/com.apple.xbs/Sources/Proximity/Libraries/DaemonCore/Ranging/Monitors/PRLocationMonitor.mm";
      __int16 v9 = 1024;
      int v10 = 432;
      __int16 v11 = 2080;
      unint64_t v12 = "_acquireAssertion";
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "%s:%d: assertion failure in %s", (uint8_t *)__p, 0x1Cu);
    }
    abort();
  }
  *(_WORD *)(a1 + 400) = v1 + 1;
  int v3 = qword_1008A7E88;
  if (os_log_type_enabled((os_log_t)qword_1008A7E88, OS_LOG_TYPE_INFO))
  {
    int v4 = *(unsigned __int16 *)(a1 + 400);
    __p[0] = 67109120;
    __p[1] = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "regulatory,geo,loc,checkRegulatoryIso,refCountForAcquiringAssertion,%d", (uint8_t *)__p, 8u);
  }
  if (*(_WORD *)(a1 + 400) == 1)
  {
    uint64_t v5 = qword_1008A7E88;
    if (!*(void *)(a1 + 392))
    {
      if (os_log_type_enabled((os_log_t)qword_1008A7E88, OS_LOG_TYPE_INFO))
      {
        LOWORD(__p[0]) = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "regulatory,geo,loc,checkRegulatoryIso,acquireAssertion", (uint8_t *)__p, 2u);
      }
      operator new();
    }
    if (os_log_type_enabled((os_log_t)qword_1008A7E88, OS_LOG_TYPE_FAULT)) {
      sub_10042C248();
    }
    uint64_t v7 = qword_1008A7E88;
    if (os_log_type_enabled((os_log_t)qword_1008A7E88, OS_LOG_TYPE_INFO))
    {
      __p[0] = 136315650;
      *(void *)&__p[1] = "/Library/Caches/com.apple.xbs/Sources/Proximity/Libraries/DaemonCore/Ranging/Monitors/PRLocationMonitor.mm";
      __int16 v9 = 1024;
      int v10 = 438;
      __int16 v11 = 2080;
      unint64_t v12 = "_acquireAssertion";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%s:%d: assertion failure in %s", (uint8_t *)__p, 0x1Cu);
    }
    abort();
  }
}

void sub_100003E30(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  operator delete();
}

void sub_100003E74(uint64_t a1, void *a2, unsigned char *a3)
{
  id v5 = a2;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
  uint64_t v6 = [v5 iso3166CountryCode2];

  if (!v6) {
    goto LABEL_26;
  }
  uint64_t v7 = [v5 iso3166CountryCode2];
  if ([v7 isEqualToString:@"IR"])
  {
  }
  else
  {
    uint64_t v8 = [v5 iso3166CountryCode2];
    unsigned int v9 = [v8 isEqualToString:@"KP"];

    if (!v9) {
      goto LABEL_6;
    }
  }
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
LABEL_6:
  if ([v5 isCoastalWaters] == (id)1)
  {
    int v10 = [v5 iso3166CountryCode2];
    if ([v10 isEqualToString:@"US"])
    {

LABEL_10:
      *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 0;
      *a3 = 1;
      goto LABEL_26;
    }
    __int16 v11 = [v5 iso3166CountryCode2];
    unsigned int v12 = [v11 isEqualToString:@"KO"];

    if (v12) {
      goto LABEL_10;
    }
  }
  id v13 = [v5 iso3166CountryCode2];
  sub_100004950(&v24, (char *)[v13 UTF8String]);

  __int16 v22 = 0;
  *(_OWORD *)uint64_t v20 = 0u;
  long long v21 = 0u;
  *(_OWORD *)uint64_t v19 = 0u;
  char v23 = -1;
  unint64_t v14 = sub_100006A00();
  if (SHIBYTE(v25) < 0)
  {
    sub_100002DE4(__p, (void *)v24, *((unint64_t *)&v24 + 1));
  }
  else
  {
    *(_OWORD *)__p = v24;
    uint64_t v18 = v25;
  }
  BOOL v15 = sub_100003274((uint64_t)v14, (uint64_t)__p, (std::string *)v19);
  BOOL v16 = v15;
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if (!v15) {
      goto LABEL_20;
    }
LABEL_18:
    if (!(v22 | HIBYTE(v22)))
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 0;
      *a3 = 1;
    }
    goto LABEL_20;
  }
  operator delete(__p[0]);
  if (v16) {
    goto LABEL_18;
  }
LABEL_20:
  if (SHIBYTE(v21) < 0) {
    operator delete(v20[1]);
  }
  if (SHIBYTE(v20[0]) < 0) {
    operator delete(v19[0]);
  }
  if (SHIBYTE(v25) < 0) {
    operator delete((void *)v24);
  }
LABEL_26:
}

void sub_1000040B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16)
{
  _Unwind_Resume(a1);
}

void sub_100004120(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v24 = 0;
  uint64_t v25 = &v24;
  uint64_t v26 = 0x2020000000;
  char v27 = 1;
  uint64_t v20 = 0;
  long long v21 = &v20;
  uint64_t v22 = 0x2020000000;
  char v23 = 1;
  sub_100003964(v7);
  uint64_t v8 = qword_1008A7E88;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008A7E88, OS_LOG_TYPE_ERROR)) {
      sub_10042C2F4((uint64_t)v6, v8);
    }
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008A7E88, OS_LOG_TYPE_DEBUG)) {
      sub_10042C27C((uint64_t)v5, v8);
    }
    *((unsigned char *)v25 + 24) = 0;
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 3221225472;
    v19[2] = sub_100003E74;
    v19[3] = &unk_10085E688;
    v19[4] = &v24;
    v19[5] = &v20;
    [v5 enumerateObjectsUsingBlock:v19];
  }
  unsigned int v9 = qword_1008A7E88;
  if (os_log_type_enabled((os_log_t)qword_1008A7E88, OS_LOG_TYPE_DEBUG))
  {
    int v12 = *((unsigned __int8 *)v21 + 24);
    int v13 = *(unsigned __int8 *)(a1 + 64);
    int v14 = *((unsigned __int8 *)v25 + 24);
    *(_DWORD *)buf = 67175425;
    *(_DWORD *)uint64_t v29 = v12;
    *(_WORD *)&v29[4] = 1025;
    *(_DWORD *)&v29[6] = v13;
    LOWORD(v30) = 1025;
    *(_DWORD *)((char *)&v30 + 2) = v6 == 0;
    HIWORD(v30) = 1025;
    *(_DWORD *)uint64_t v31 = v14;
    _os_log_debug_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "regulatory,geo,loc,checkRegulatoryIso,tileMapCoversRegion,%{private}d,tileMapUnrestricted,%{private}d,geoServicesAvailable,%{private}d,geoServicesUnrestricted,%{private}d", buf, 0x1Au);
  }
  memset(&__str, 0, sizeof(__str));
  if (*((unsigned char *)v21 + 24) && *(unsigned char *)(a1 + 64) || !v6 && *((unsigned char *)v25 + 24)) {
    int v10 = off_10089F780;
  }
  else {
    int v10 = off_10089F778;
  }
  std::string::assign(&__str, *v10);
  std::string::operator=((std::string *)(v7 + 8), &__str);
  if (*(void *)(v7 + 120))
  {
    __int16 v11 = qword_1008A7E88;
    if (os_log_type_enabled((os_log_t)qword_1008A7E88, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v15 = v7 + 8;
      if (*(char *)(v7 + 31) < 0) {
        uint64_t v15 = *(void *)(v7 + 8);
      }
      uint64_t v16 = *(void *)(a1 + 40);
      uint64_t v17 = *(void *)(a1 + 48);
      *(_DWORD *)buf = 136315651;
      *(void *)uint64_t v29 = v15;
      *(_WORD *)&v29[8] = 2049;
      uint64_t v30 = v16;
      *(_WORD *)uint64_t v31 = 2049;
      *(void *)&v31[2] = v17;
      _os_log_debug_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "regulatory,geo,loc,fOnRegulatoryRegion,%s,ll,%{private}.6f,%{private}.6f", buf, 0x20u);
    }
    sub_100007824(v7 + 96, v7 + 8, *(unsigned char *)(a1 + 65), *(double *)(a1 + 56));
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  _Block_object_dispose(&v20, 8);
  _Block_object_dispose(&v24, 8);
}

void sub_100004430(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  _Block_object_dispose(&a22, 8);
  _Block_object_dispose(&a26, 8);

  _Unwind_Resume(a1);
}

uint64_t start()
{
  sub_10004A480();
  if ((_set_user_dir_suffix() & 1) == 0)
  {
    int v1 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
      sub_10040FA14(v1);
    }
  }
  unint64_t v2 = +[NSFileManager defaultManager];
  NSFileAttributeKey v28 = NSFilePosixPermissions;
  uint64_t v29 = &off_100878658;
  int v3 = +[NSDictionary dictionaryWithObjects:&v29 forKeys:&v28 count:1];
  int v4 = NSTemporaryDirectory();
  id v21 = 0;
  [v2 setAttributes:v3 ofItemAtPath:v4 error:&v21];
  id v5 = v21;

  if (v5)
  {
    id v6 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      id v17 = [v5 description];
      uint64_t v18 = (const char *)[v17 UTF8String];
      *(_DWORD *)buf = 136315138;
      char v23 = v18;
      _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "Error while trying to set permissions on temporary directory: %s", buf, 0xCu);
    }
  }
  uint64_t v8 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "starting daemon - ranging service", buf, 2u);
  }
  if (+[NIPlatformInfo isInternalBuild])
  {
    unsigned int v9 = +[NSUserDefaults standardUserDefaults];
    unsigned int v10 = [v9 BOOLForKey:@"ForceCrash_Startup"];

    if (v10)
    {
      uint64_t v19 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
        sub_10040F9D0(v19);
      }
      uint64_t v20 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 136315650;
        char v23 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/nearbyd.mm";
        __int16 v24 = 1024;
        int v25 = 48;
        __int16 v26 = 2080;
        char v27 = "main";
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "%s:%d: assertion failure in %s", buf, 0x1Cu);
      }
      abort();
    }
  }
  __int16 v11 = objc_alloc_init(PRDaemon);
  [(PRDaemon *)v11 run];
  do
  {
    int v13 = +[NSRunLoop currentRunLoop];
    int v14 = +[NSDate distantFuture];
    unsigned __int8 v15 = [v13 runMode:NSDefaultRunLoopMode beforeDate:v14];
  }
  while ((v15 & 1) != 0);

  return 0;
}

void sub_1000047EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000486C(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  va_list v18 = (va_list)&a9;
  unsigned int v10 = sub_100004B70();
  sub_100004AF8((uint64_t)v10);
  sub_100004950(&v15, a1);
  __int16 v11 = std::string::append(&v15, "\n");
  long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  int64_t v17 = v11->__r_.__value_.__r.__words[2];
  *(_OWORD *)__p = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  int v13 = (std::mutex *)sub_100004A68();
  if (v17 >= 0) {
    int v14 = __p;
  }
  else {
    int v14 = (void **)__p[0];
  }
  sub_100004A04(v13, (const char *)v14, v18);
  if (SHIBYTE(v17) < 0) {
    operator delete(__p[0]);
  }
}

void sub_100004920(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100004950(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_10000B220();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    id v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v4;
    id v6 = a1;
    if (!v4) {
      goto LABEL_9;
    }
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((unsigned char *)v6 + v5) = 0;
  return a1;
}

void sub_100004A04(std::mutex *a1, const char *a2, va_list a3)
{
  std::mutex::lock(a1);
  vprintf(a2, a3);
  fflush(__stdoutp);

  std::mutex::unlock(a1);
}

uint64_t *sub_100004A68()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089F740, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089F740))
  {
    qword_10089F700 = 850045863;
    unk_10089F708 = 0u;
    unk_10089F718 = 0u;
    unk_10089F728 = 0u;
    qword_10089F738 = 0;
    __cxa_atexit((void (*)(void *))std::mutex::~mutex, &qword_10089F700, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089F740);
  }
  return &qword_10089F700;
}

void sub_100004AF8(uint64_t a1)
{
  int v1 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  os_log_with_args();

  std::mutex::unlock(v1);
}

uint64_t *sub_100004B70()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089F6F8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089F6F8))
  {
    qword_10089F6B8 = 850045863;
    xmmword_10089F6C0 = 0u;
    unk_10089F6D0 = 0u;
    xmmword_10089F6E0 = 0u;
    qword_10089F6F0 = 0;
    qword_10089F6B0 = (uint64_t)os_log_create("com.apple.librose", "client");
    __cxa_atexit((void (*)(void *))sub_1003A9920, &qword_10089F6B0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089F6F8);
  }
  return &qword_10089F6B0;
}

void sub_100004D58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100004E2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100004E44(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(a1 + 32);
  unsigned __int8 v8 = atomic_load((unsigned __int8 *)(v7 + 144));
  if (v8)
  {
    if (v5 && v6) {
      sub_100004F0C(v7, v5, v6);
    }
  }
  else
  {
    unsigned int v9 = qword_1008A8048;
    if (os_log_type_enabled((os_log_t)qword_1008A8048, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#regulatory,regulatory,geo,mcc,notMonitoring", v10, 2u);
    }
  }
}

void sub_100004EF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100004F0C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (*(unsigned char *)(a1 + 112) == 1)
  {
    uint64_t v7 = qword_1008A8048;
    if (os_log_type_enabled((os_log_t)qword_1008A8048, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#regulatory,regulatory,geo,mcc,processCellInfo,ignoreInAirplaneMode", buf, 2u);
    }
  }
  else
  {
    BOOL v28 = 0;
    int v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    uint64_t v8 = sub_100005364(a1, v5, &v28);
    if (v8)
    {
      char v9 = sub_10000545C(v8, v6, (uint64_t)&v25);
      *(void *)buf = &v28;
      unsigned int v10 = sub_10000529C((uint64_t **)(a1 + 32), (int *)&v28, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf);
      if (*((char *)v10 + 63) < 0) {
        __int16 v11 = v10[6];
      }
      else {
        __int16 v11 = (uint64_t *)*((unsigned __int8 *)v10 + 63);
      }
      if (v11) {
        char v13 = v9;
      }
      else {
        char v13 = 1;
      }
      if (v13)
      {
        sub_100006384(a1, v28, (uint64_t)&v25, 0);
      }
      else
      {
        int v14 = (id)qword_1008A8048;
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
        {
          int64_t v17 = v23;
          sub_1002F11C4(v28, v23);
          if (v24 < 0) {
            int64_t v17 = (void **)v23[0];
          }
          if (SHIBYTE(v27) < 0)
          {
            if (v26) {
              va_list v18 = (const char *)v25;
            }
            else {
              va_list v18 = "__";
            }
          }
          else if (HIBYTE(v27))
          {
            va_list v18 = (const char *)&v25;
          }
          else
          {
            va_list v18 = "__";
          }
          uint64_t v29 = (int *)&v28;
          uint64_t v19 = sub_10000529C((uint64_t **)(a1 + 32), (int *)&v28, (uint64_t)&unk_1004BC2F8, &v29);
          uint64_t v20 = v19 + 5;
          if (*((char *)v19 + 63) < 0) {
            uint64_t v20 = (void *)*v20;
          }
          *(_DWORD *)buf = 136315906;
          *(void *)&uint8_t buf[4] = v17;
          __int16 v31 = 1024;
          int v32 = 0;
          __int16 v33 = 2080;
          uint64_t v34 = v18;
          __int16 v35 = 2080;
          uint64_t v36 = v20;
          _os_log_debug_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "#regulatory,regulatory,geo,mcc,onCellMonitorUpdate,slot:%s,mccValid:%d,mcc:%s,fCurrentIsoFromMcc:%s,downgradingCurrentToLastKnown", buf, 0x26u);
          if (v24 < 0) {
            operator delete(v23[0]);
          }
        }

        int v15 = v28;
        *(void *)buf = &v28;
        uint64_t v16 = sub_10000529C((uint64_t **)(a1 + 32), (int *)&v28, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf);
        if (*((char *)v16 + 63) < 0)
        {
          sub_100002DE4(__p, v16[5], (unint64_t)v16[6]);
        }
        else
        {
          *(_OWORD *)__p = *(_OWORD *)(v16 + 5);
          uint64_t v22 = v16[7];
        }
        sub_1000064F4(a1, v15, (const char *)__p, 1);
        if (SHIBYTE(v22) < 0) {
          operator delete(__p[0]);
        }
      }
    }
    else
    {
      long long v12 = qword_1008A8048;
      if (os_log_type_enabled((os_log_t)qword_1008A8048, OS_LOG_TYPE_ERROR)) {
        sub_10042D7B4(v12);
      }
    }
    if (SHIBYTE(v27) < 0) {
      operator delete(v25);
    }
  }
}

void sub_100005230(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a21 < 0) {
    operator delete(__p);
  }

  if (a27 < 0) {
    operator delete(a22);
  }

  _Unwind_Resume(a1);
}

uint64_t **sub_10000529C(uint64_t **a1, int *a2, uint64_t a3, _DWORD **a4)
{
  uint64_t v7 = a1 + 1;
  id v6 = a1[1];
  if (v6)
  {
    int v8 = *a2;
    while (1)
    {
      while (1)
      {
        char v9 = (uint64_t **)v6;
        int v10 = *((_DWORD *)v6 + 8);
        if (v8 >= v10) {
          break;
        }
        id v6 = *v9;
        uint64_t v7 = v9;
        if (!*v9) {
          goto LABEL_10;
        }
      }
      if (v10 >= v8) {
        break;
      }
      id v6 = v9[1];
      if (!v6)
      {
        uint64_t v7 = v9 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    char v9 = a1 + 1;
LABEL_10:
    __int16 v11 = operator new(0x40uLL);
    v11[8] = **a4;
    *((void *)v11 + 6) = 0;
    *((void *)v11 + 7) = 0;
    *((void *)v11 + 5) = 0;
    sub_100026D98(a1, (uint64_t)v9, v7, (uint64_t *)v11);
    return (uint64_t **)v11;
  }
  return v9;
}

uint64_t sub_100005364(uint64_t a1, void *a2, BOOL *a3)
{
  id v5 = a2;
  if (sub_100005424(*(_DWORD *)(a1 + 116)))
  {
    if ([v5 slotID] == (id)1 || objc_msgSend(v5, "slotID") == (id)2)
    {
      BOOL v6 = [v5 slotID] != (id)1;
LABEL_7:
      *a3 = v6;
      uint64_t v8 = 1;
      goto LABEL_9;
    }
LABEL_8:
    uint64_t v8 = 0;
    goto LABEL_9;
  }
  if (!sub_10039CF88(*(_DWORD *)(a1 + 116))) {
    goto LABEL_8;
  }
  id v7 = [v5 slotID];
  BOOL v6 = 0;
  uint64_t v8 = 0;
  if (v7 == (id)1) {
    goto LABEL_7;
  }
LABEL_9:

  return v8;
}

void sub_100005414(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_100005424(int a1)
{
  return (a1 - 100) >= 0x16 && (a1 - 200) >= 2 && a1 != 999 && a1 != 997;
}

uint64_t sub_10000545C(uint64_t a1, void *a2, uint64_t a3)
{
  id v4 = a2;
  id v5 = v4;
  int __val = -1;
  if (*(char *)(a3 + 23) < 0)
  {
    **(unsigned char **)a3 = 0;
    *(void *)(a3 + 8) = 0;
    if (!v4)
    {
LABEL_71:
      uint64_t v47 = 0;
      goto LABEL_72;
    }
  }
  else
  {
    *(unsigned char *)a3 = 0;
    *(unsigned char *)(a3 + 23) = 0;
    if (!v4) {
      goto LABEL_71;
    }
  }
  BOOL v6 = [v4 legacyInfo];

  if (!v6) {
    goto LABEL_71;
  }
  id v7 = [v5 legacyInfo];

  CFIndex Count = CFArrayGetCount((CFArrayRef)v7);
  if (Count < 1) {
    goto LABEL_71;
  }
  CFIndex v9 = 0;
  key = (void *)kCTCellMonitorCellType;
  CFTypeRef cf2 = (CFTypeRef)kCTCellMonitorCellTypeServing;
  v56 = (void *)kCTCellMonitorMCC;
  v55 = (void *)kCTCellMonitorCellRadioAccessTechnology;
  CFTypeRef v54 = (CFTypeRef)kCTCellMonitorRadioAccessTechnologyCDMA1x;
  CFTypeRef v50 = (CFTypeRef)kCTCellMonitorRadioAccessTechnologyCDMAEVDO;
  CFTypeRef v49 = (CFTypeRef)kCTCellMonitorRadioAccessTechnologyCDMAHybrid;
  v51 = (void *)kCTCellMonitorDerivedMCC;
  v53 = (void *)kCTCellMonitorSID;
  v52 = (void *)kCTCellMonitorNID;
  while (1)
  {
    CFDictionaryRef ValueAtIndex = (const __CFDictionary *)CFArrayGetValueAtIndex((CFArrayRef)v7, v9);
    CFDictionaryRef v11 = ValueAtIndex;
    if (!ValueAtIndex || (CFTypeID v12 = CFGetTypeID(ValueAtIndex), v12 != CFDictionaryGetTypeID()))
    {
      uint64_t v34 = qword_1008A8048;
      if (!os_log_type_enabled((os_log_t)qword_1008A8048, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_44;
      }
      LOWORD(buf.__r_.__value_.__l.__data_) = 0;
      __int16 v35 = v34;
      uint64_t v36 = "#regulatory,lvalue cellDict is not of type CFDictionary";
LABEL_43:
      _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, v36, (uint8_t *)&buf, 2u);
      goto LABEL_44;
    }
    Value = CFDictionaryGetValue(v11, key);
    int v14 = Value;
    if (!Value || (CFTypeID v15 = CFGetTypeID(Value), v15 != CFStringGetTypeID()))
    {
      uint64_t v37 = qword_1008A8048;
      if (!os_log_type_enabled((os_log_t)qword_1008A8048, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_44;
      }
      LOWORD(buf.__r_.__value_.__l.__data_) = 0;
      __int16 v35 = v37;
      uint64_t v36 = "#regulatory,lvalue cellType is not of type CFString";
      goto LABEL_43;
    }
    if (!CFEqual(v14, cf2)) {
      goto LABEL_44;
    }
    CFNumberRef v16 = (const __CFNumber *)CFDictionaryGetValue(v11, v56);
    CFNumberRef v17 = v16;
    if (!v16 || (CFTypeID v18 = CFGetTypeID(v16), v18 != CFNumberGetTypeID()))
    {
      uint64_t v19 = qword_1008A8048;
      if (os_log_type_enabled((os_log_t)qword_1008A8048, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(buf.__r_.__value_.__l.__data_) = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "#regulatory,lvalue mccRef is not of type CFNumber", (uint8_t *)&buf, 2u);
      }
      CFNumberRef v17 = 0;
    }
    uint64_t v20 = CFDictionaryGetValue(v11, v55);
    id v21 = v20;
    if (!v20 || (CFTypeID v22 = CFGetTypeID(v20), v22 != CFStringGetTypeID()))
    {
      unint64_t v38 = qword_1008A8048;
      if (os_log_type_enabled((os_log_t)qword_1008A8048, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(buf.__r_.__value_.__l.__data_) = 0;
        _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEFAULT, "#regulatory,lvalue ratStr is not of type CFString", (uint8_t *)&buf, 2u);
      }
      if (v17) {
        goto LABEL_65;
      }
      goto LABEL_44;
    }
    if (!CFEqual(v21, v54) && !CFEqual(v21, v50)) {
      break;
    }
    BOOL v23 = 1;
    if (v17) {
      goto LABEL_23;
    }
LABEL_51:
    if (v17) {
      goto LABEL_65;
    }
    if (v23 && CFDictionaryContainsKey(v11, v51))
    {
      CFArrayRef v39 = (const __CFArray *)CFDictionaryGetValue(v11, v51);
      CFArrayRef v40 = v39;
      if (!v39 || (CFTypeID v41 = CFGetTypeID(v39), v41 != CFArrayGetTypeID()))
      {
        uint64_t v45 = qword_1008A8048;
        if (!os_log_type_enabled((os_log_t)qword_1008A8048, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_44;
        }
        LOWORD(buf.__r_.__value_.__l.__data_) = 0;
        __int16 v35 = v45;
        uint64_t v36 = "#regulatory,lvalue derivedMccList is not of type CFArray";
        goto LABEL_43;
      }
      if (CFArrayGetCount(v40) >= 1)
      {
        CFNumberRef v42 = (const __CFNumber *)CFArrayGetValueAtIndex(v40, 0);
        CFNumberRef v17 = v42;
        if (v42)
        {
          CFTypeID v43 = CFGetTypeID(v42);
          if (v43 == CFNumberGetTypeID()) {
            goto LABEL_65;
          }
        }
        uint64_t v44 = qword_1008A8048;
        if (os_log_type_enabled((os_log_t)qword_1008A8048, OS_LOG_TYPE_DEFAULT))
        {
          LOWORD(buf.__r_.__value_.__l.__data_) = 0;
          __int16 v35 = v44;
          uint64_t v36 = "#regulatory,lvalue mccRef is not of type CFNumber";
          goto LABEL_43;
        }
      }
    }
LABEL_44:
    if (Count == ++v9) {
      goto LABEL_71;
    }
  }
  BOOL v23 = CFEqual(v21, v49) != 0;
  if (!v17) {
    goto LABEL_51;
  }
LABEL_23:
  if (!v23) {
    goto LABEL_51;
  }
  uint64_t v59 = -1;
  if (!CFDictionaryContainsKey(v11, v53) || !CFDictionaryContainsKey(v11, v52)) {
    goto LABEL_65;
  }
  CFNumberRef v24 = (const __CFNumber *)CFDictionaryGetValue(v11, v53);
  CFNumberRef v25 = v24;
  if (!v24 || (CFTypeID v26 = CFGetTypeID(v24), v26 != CFNumberGetTypeID()))
  {
    uint64_t v27 = qword_1008A8048;
    if (os_log_type_enabled((os_log_t)qword_1008A8048, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(buf.__r_.__value_.__l.__data_) = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "#regulatory,lvalue sid is not of type CFNumber", (uint8_t *)&buf, 2u);
    }
    CFNumberRef v25 = 0;
  }
  CFNumberRef v28 = (const __CFNumber *)CFDictionaryGetValue(v11, v52);
  CFNumberRef v29 = v28;
  if (v28)
  {
    CFTypeID v30 = CFGetTypeID(v28);
    if (v30 == CFNumberGetTypeID())
    {
      if (!v25) {
        goto LABEL_65;
      }
      int v31 = CFNumberGetValue(v25, kCFNumberIntType, (char *)&v59 + 4);
      int v32 = CFNumberGetValue(v29, kCFNumberIntType, &v59);
      if (!v31 || !v32 || v59) {
        goto LABEL_65;
      }
      __int16 v33 = qword_1008A8048;
      if (os_log_type_enabled((os_log_t)qword_1008A8048, OS_LOG_TYPE_DEBUG))
      {
        LODWORD(buf.__r_.__value_.__l.__data_) = 138412802;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v17;
        WORD2(buf.__r_.__value_.__r.__words[1]) = 1024;
        *(_DWORD *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = HIDWORD(v59);
        WORD1(buf.__r_.__value_.__r.__words[2]) = 1024;
        HIDWORD(buf.__r_.__value_.__r.__words[2]) = v59;
        _os_log_debug_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEBUG, "#regulatory,regulatory,geo,mcc,cdmaRatWithInvalidContents,mcc:%@,sid:%d,nid:%d", (uint8_t *)&buf, 0x18u);
      }
      goto LABEL_44;
    }
  }
  v46 = qword_1008A8048;
  if (os_log_type_enabled((os_log_t)qword_1008A8048, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(buf.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v46, OS_LOG_TYPE_DEFAULT, "#regulatory,lvalue nid is not of type CFNumber", (uint8_t *)&buf, 2u);
  }
LABEL_65:
  if (!CFNumberGetValue(v17, kCFNumberIntType, &__val) || !__val)
  {
    std::string::assign((std::string *)a3, "000");
    goto LABEL_71;
  }
  std::to_string(&buf, __val);
  if (*(char *)(a3 + 23) < 0) {
    operator delete(*(void **)a3);
  }
  *(std::string *)a3 = buf;
  uint64_t v47 = 1;
LABEL_72:

  return v47;
}

void sub_100005AF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000062F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17)
{
  _Unwind_Resume(a1);
}

void sub_100006384(uint64_t a1, int a2, uint64_t a3, int a4)
{
  int v13 = a2;
  if (*(unsigned char *)(a1 + 112) == 1)
  {
    id v4 = qword_1008A8048;
    if (os_log_type_enabled((os_log_t)qword_1008A8048, OS_LOG_TYPE_DEBUG)) {
      sub_10042D8E0(v4);
    }
  }
  else
  {
    memset(&__str, 0, sizeof(__str));
    uint64_t v7 = *(unsigned __int8 *)(a3 + 23);
    if ((v7 & 0x80u) != 0) {
      uint64_t v7 = *(void *)(a3 + 8);
    }
    if (v7)
    {
      sub_10000737C(a1, (const void **)a3, (long long *)&v11);
      std::string __str = v11;
    }
    v11.__r_.__value_.__r.__words[0] = (std::string::size_type)&v13;
    uint64_t v8 = sub_10000529C((uint64_t **)(a1 + 32), &v13, (uint64_t)&unk_1004BC2F8, &v11);
    std::string::operator=((std::string *)(v8 + 5), &__str);
    int v9 = v13;
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      sub_100002DE4(&__p, __str.__r_.__value_.__l.__data_, __str.__r_.__value_.__l.__size_);
    }
    else {
      std::string __p = __str;
    }
    sub_1000064F4(a1, v9, (const char *)&__p, a4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
  }
}

void sub_1000064BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000064F4(uint64_t a1, int a2, const char *a3, int a4)
{
  int v31 = a2;
  sub_100006A00();
  uint64_t result = sub_100006B64();
  if (!*(void *)(a1 + 80)) {
    return result;
  }
  int v8 = result;
  if (result)
  {
    a4 = 0;
    if (a3[23] < 0)
    {
      **(unsigned char **)a3 = 0;
      *((void *)a3 + 1) = 0;
    }
    else
    {
      *a3 = 0;
      *((unsigned char *)a3 + 23) = 0;
    }
  }
  double v9 = sub_100006C38();
  int v10 = (uint64_t **)(a1 + 120);
  *(void *)std::string buf = &v31;
  double v11 = v9 - *((double *)sub_100006930((uint64_t **)(a1 + 120), &v31, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf) + 10);
  if (v11 > 3600.0) {
    goto LABEL_27;
  }
  int v12 = v31;
  *(void *)std::string buf = &v31;
  if (!*((unsigned char *)sub_100006930((uint64_t **)(a1 + 120), &v31, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf) + 40)) {
    goto LABEL_27;
  }
  *(void *)std::string buf = &v31;
  int v13 = sub_100006930((uint64_t **)(a1 + 120), &v31, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf);
  uint64_t v14 = *((unsigned __int8 *)v13 + 71);
  if ((v14 & 0x80u) == 0) {
    CFTypeID v15 = (uint64_t *)*((unsigned __int8 *)v13 + 71);
  }
  else {
    CFTypeID v15 = v13[7];
  }
  CFNumberRef v16 = (uint64_t *)*((unsigned __int8 *)a3 + 23);
  int v17 = (char)v16;
  if ((char)v16 < 0) {
    CFNumberRef v16 = (uint64_t *)*((void *)a3 + 1);
  }
  if (v15 != v16) {
    goto LABEL_27;
  }
  CFTypeID v18 = (const void **)(v13 + 6);
  if (v17 >= 0) {
    uint64_t v19 = a3;
  }
  else {
    uint64_t v19 = *(const char **)a3;
  }
  if ((v14 & 0x80) == 0)
  {
    if (*((unsigned char *)v13 + 71))
    {
      while (*(unsigned __int8 *)v18 == *(unsigned __int8 *)v19)
      {
        CFTypeID v18 = (const void **)((char *)v18 + 1);
        ++v19;
        if (!--v14) {
          goto LABEL_23;
        }
      }
      goto LABEL_27;
    }
LABEL_23:
    BOOL v20 = (v12 & 0xFFFFFFFE) == 2;
    *(void *)std::string buf = &v31;
    uint64_t result = (uint64_t)sub_100006930((uint64_t **)(a1 + 120), &v31, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf);
    int v21 = *(unsigned __int8 *)(result + 72) != a4 || v20;
    if (v21 != 1) {
      return result;
    }
    goto LABEL_27;
  }
  if (!memcmp(*v18, v19, (size_t)v13[7])) {
    goto LABEL_23;
  }
LABEL_27:
  CFTypeID v22 = (id)qword_1008A8048;
  if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
  {
    sub_100004950(v29, off_10085FB60[v31]);
    CFNumberRef v25 = v30 >= 0 ? v29 : (void **)v29[0];
    if (a3[23] < 0) {
      CFTypeID v26 = *((void *)a3 + 1) ? *(char **)a3 : "__";
    }
    else {
      CFTypeID v26 = a3[23] ? (char *)a3 : "__";
    }
    *(_DWORD *)std::string buf = 136316162;
    *(void *)&uint8_t buf[4] = v25;
    __int16 v33 = 2080;
    uint64_t v34 = v26;
    __int16 v35 = 1024;
    int v36 = a4;
    __int16 v37 = 1024;
    int v38 = v8;
    __int16 v39 = 1024;
    BOOL v40 = v11 > 3600.0;
    _os_log_debug_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEBUG, "#regulatory,regulatory,geo,mcc,bubbledUp,slot:%s,mcc:%s,isLastKnown:%d,simulateOOS:%d,isMccUpdateOld:%d", buf, 0x28u);
    if (v30 < 0) {
      operator delete(v29[0]);
    }
  }

  int v23 = v31;
  if (a3[23] < 0)
  {
    sub_100002DE4(__p, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)a3;
    uint64_t v28 = *((void *)a3 + 2);
  }
  sub_1002F24B0(a1 + 56, v23, (uint64_t)__p, a4);
  if (SHIBYTE(v28) < 0) {
    operator delete(__p[0]);
  }
  *(void *)std::string buf = &v31;
  *((unsigned char *)sub_100006930(v10, &v31, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf) + 40) = 1;
  *(void *)std::string buf = &v31;
  CFNumberRef v24 = sub_100006930(v10, &v31, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf);
  std::string::operator=((std::string *)v24 + 2, (const std::string *)a3);
  *(void *)std::string buf = &v31;
  *((unsigned char *)sub_100006930(v10, &v31, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf) + 72) = a4;
  *(void *)std::string buf = &v31;
  uint64_t result = (uint64_t)sub_100006930(v10, &v31, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf);
  *(double *)(result + 80) = v9;
  return result;
}

void sub_100006900(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  _Unwind_Resume(a1);
}

uint64_t **sub_100006930(uint64_t **a1, int *a2, uint64_t a3, _DWORD **a4)
{
  uint64_t v7 = a1 + 1;
  BOOL v6 = a1[1];
  if (v6)
  {
    int v8 = *a2;
    while (1)
    {
      while (1)
      {
        double v9 = (uint64_t **)v6;
        int v10 = *((_DWORD *)v6 + 8);
        if (v8 >= v10) {
          break;
        }
        BOOL v6 = *v9;
        uint64_t v7 = v9;
        if (!*v9) {
          goto LABEL_10;
        }
      }
      if (v10 >= v8) {
        break;
      }
      BOOL v6 = v9[1];
      if (!v6)
      {
        uint64_t v7 = v9 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    double v9 = a1 + 1;
LABEL_10:
    double v11 = (char *)operator new(0x58uLL);
    *((_DWORD *)v11 + 8) = **a4;
    *(_OWORD *)(v11 + 72) = 0u;
    *(_OWORD *)(v11 + 56) = 0u;
    *(_OWORD *)(v11 + 40) = 0u;
    sub_100026D98(a1, (uint64_t)v9, v7, (uint64_t *)v11);
    return (uint64_t **)v11;
  }
  return v9;
}

void *sub_100006A00()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089ED98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089ED98))
  {
    sub_1003CCE4C(&unk_10089ECB8);
    __cxa_atexit((void (*)(void *))sub_1001FBDF8, &unk_10089ECB8, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089ED98);
  }
  return &unk_10089ECB8;
}

void sub_100006A84(_Unwind_Exception *a1)
{
}

double sub_100006A9C(unint64_t a1)
{
  double v2 = *(double *)&qword_10089FF58;
  if (*(double *)&qword_10089FF58 == 0.0)
  {
    if (mach_timebase_info(&info)) {
      sub_10040E678();
    }
    if (info.denom)
    {
      uint32_t denom = info.denom;
      uint32_t numer = info.numer;
      do
      {
        uint32_t v5 = denom;
        uint32_t denom = numer % denom;
        uint32_t numer = v5;
      }
      while (denom);
    }
    else
    {
      uint32_t v5 = info.numer;
    }
    unsigned int v6 = 1000000000;
    uint32_t v7 = info.numer / v5;
    do
    {
      uint32_t v8 = v7;
      uint32_t v7 = v6;
      unsigned int v6 = v8 % v6;
    }
    while (v6);
    double v2 = (double)(info.numer / v5 / v7) / (double)(0x3B9ACA00 / v7 * (unint64_t)(info.denom / v5));
    *(double *)&qword_10089FF58 = v2;
  }
  return v2 * (double)a1;
}

uint64_t sub_100006B64()
{
  char v1 = 0;
  LODWORD(result) = sub_100006BA0((uint64_t)off_10089F7E8[0], &v1);
  if (v1) {
    return result;
  }
  else {
    return 0;
  }
}

BOOL sub_100006BA0(uint64_t a1, unsigned char *a2)
{
  int v3 = +[NSString stringWithUTF8String:a1];
  id v4 = +[NSUserDefaults standardUserDefaults];
  uint32_t v5 = v4;
  if (v4) {
    *a2 = [v4 BOOLForKey:v3];
  }

  return v5 != 0;
}

void sub_100006C1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

double sub_100006C38()
{
  uint64_t v0 = mach_continuous_time();

  return sub_100006A9C(v0);
}

void sub_100006C60(uint64_t a1, int a2, double a3, double a4, double a5, double a6, double a7)
{
}

void sub_100006C68(uint64_t a1, int a2, double a3, double a4, double a5, double a6, double a7)
{
  double v18 = a4;
  double v19 = a3;
  double v16 = a6;
  double v17 = a5;
  int v10 = sub_100006A00();
  unsigned int v11 = a2 & ~sub_100006D84((uint64_t)v10, &v19, &v18, &v17, &v16);
  double v13 = v18;
  double v12 = v19;
  double v14 = v16;
  double v15 = v17;
  *(double *)(a1 + 48) = v19;
  *(double *)(a1 + 56) = v13;
  *(double *)(a1 + 64) = v15;
  *(double *)(a1 + 72) = v14;
  *(unsigned char *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  sub_100006D00(a1 + 160, v12, v13, v14, a7);
  sub_100006E80(a1, v11, v19, v18, v16, a7);
}

uint64_t sub_100006D00(uint64_t a1, double a2, double a3, double a4, double a5)
{
  double v10 = a2;
  double v8 = a4;
  double v9 = a3;
  double v7 = a5;
  uint64_t v5 = *(void *)(a1 + 24);
  if (!v5) {
    sub_100027894();
  }
  return (*(uint64_t (**)(uint64_t, double *, double *, double *, double *))(*(void *)v5 + 48))(v5, &v10, &v9, &v8, &v7);
}

void sub_100006D68(uint64_t a1, double *a2, double *a3, double *a4, double *a5)
{
}

uint64_t sub_100006D84(uint64_t a1, double *a2, double *a3, void *a4, double *a5)
{
  char v15 = 0;
  BOOL v9 = 0;
  BOOL v10 = 0;
  if (sub_100006BA0((uint64_t)off_10089F7B8[0], &v15) && v15 != 0)
  {
    BOOL v10 = sub_1003CEC04((uint64_t)off_10089F7C0[0], a2);
    BOOL v9 = sub_1003CEC04((uint64_t)off_10089F7C8[0], a3);
    BOOL v12 = sub_1003CEC04((uint64_t)off_10089F7D0[0], a5);
    if (v10 && v9)
    {
      if (os_log_type_enabled((os_log_t)qword_1008AB7B8, OS_LOG_TYPE_DEBUG)) {
        sub_1004385B0();
      }
      *a4 = 0;
    }
    if (!v12) {
      *a5 = 0.0;
    }
  }
  return v10 & v9;
}

void sub_100006E80(uint64_t a1, int a2, double a3, double a4, double a5, double a6)
{
  double v21 = a4;
  double v22 = a3;
  double v12 = sub_100006C38();
  if (!*(unsigned char *)(a1 + 32)) {
    goto LABEL_4;
  }
  double v13 = *(double *)(a1 + 40);
  if (v12 <= v13) {
    sub_10042C1E8();
  }
  if (v12 - v13 >= 600.0)
  {
LABEL_4:
    double v14 = qword_1008A7E88;
    if (os_log_type_enabled((os_log_t)qword_1008A7E88, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 134284801;
      double v24 = a3;
      __int16 v25 = 2049;
      double v26 = a4;
      __int16 v27 = 2049;
      double v28 = a5;
      __int16 v29 = 1025;
      int v30 = a2;
      __int16 v31 = 2049;
      double v32 = a6;
      __int16 v33 = 2048;
      uint64_t v34 = 0x4082C00000000000;
      _os_log_debug_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "regulatory,geo,loc,checkRegulatoryIso,lat,%{private}.6f,lon,%{private}.6f,unc,%{private}.2f,isLastKnownLocation,%{private}d,ts,%{private}.2f,checkInterval,%.2f", buf, 0x3Au);
    }
    *(double *)(a1 + 40) = v12;
    *(unsigned char *)(a1 + 32) = 1;
    if (sub_1000031F0(a1 + 224)) {
      char v15 = sub_100002E84(a1 + 224, &v22, &v21);
    }
    else {
      char v15 = 1;
    }
    sub_100003B90(a1);
    id v16 = [objc_alloc((Class)GEOLocation) initWithGEOCoordinate:v22, v21];
    [v16 setHorizontalAccuracy:a5];
    uint64_t v17 = *(void *)a1;
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    v18[2] = sub_100004120;
    v18[3] = &unk_10085E6A8;
    v18[4] = a1;
    char v19 = v15;
    *(double *)&v18[5] = v22;
    *(double *)&v18[6] = v21;
    char v20 = a2;
    *(double *)&v18[7] = a6;
    +[GEOGeographicMetadataRequester fetchPossibleTerritoriesForLocation:v16 responseQueue:v17 responseBlock:v18];
  }
}

void sub_1000070B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000070D0(double *a1, double a2, double a3, double a4, double a5)
{
  double v9 = CFAbsoluteTimeGetCurrent() - a5;
  if (v9 < a1[2])
  {
    a1[67] = a2;
    a1[68] = a3;
    a1[69] = a4;
    a1[70] = v9;
    sub_10000714C((uint64_t)(a1 + 35), 2);
    *(_OWORD *)(a1 + 67) = 0u;
    *(_OWORD *)(a1 + 69) = 0u;
  }
}

uint64_t sub_10000714C(uint64_t a1, uint64_t a2)
{
  ++*(_DWORD *)(a1 + 112);
  uint64_t v2 = *(unsigned int *)(a1 + 4);
  int v30 = *(_DWORD *)(a1 + 4);
  uint64_t v3 = *(void *)(a1 + 32);
  if (!v3) {
    sub_100416814();
  }
  if (!*(unsigned char *)(a1 + 48)) {
    sub_100416840();
  }
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5) {
    goto LABEL_13;
  }
  unsigned int v6 = a2;
  double v7 = (uint64_t **)(a1 + 8);
  uint64_t v8 = a1 + 16;
  do
  {
    int v9 = *(_DWORD *)(v5 + 32);
    BOOL v10 = v9 < (int)v2;
    if (v9 >= (int)v2) {
      unsigned int v11 = (uint64_t *)v5;
    }
    else {
      unsigned int v11 = (uint64_t *)(v5 + 8);
    }
    if (!v10) {
      uint64_t v8 = v5;
    }
    uint64_t v5 = *v11;
  }
  while (*v11);
  if (v8 == a1 + 16 || (int)v2 < *(_DWORD *)(v8 + 32)) {
LABEL_13:
  }
    sub_10041686C();
  double v12 = *(uint64_t (**)(void *, uint64_t))(v8 + 40);
  uint64_t v13 = *(void *)(v8 + 48);
  double v14 = (void *)(v3 + (v13 >> 1));
  if (v13) {
    double v12 = *(uint64_t (**)(void *, uint64_t))(*v14 + v12);
  }
  int v15 = v12(v14, a2);
  int v16 = v15;
  int v29 = v15;
  if (v6 <= 1 && v15 != v2) {
    sub_1004168F0();
  }
  if (v15 != v2)
  {
    uint64_t v17 = *(void *)(a1 + 32);
    __int16 v31 = &v30;
    double v18 = sub_1001A254C(v7, &v30, (uint64_t)&unk_1004BC2F8, &v31);
    char v19 = v18[5];
    uint64_t v20 = (uint64_t)v18[6];
    double v21 = (void *)(v17 + (v20 >> 1));
    if (v20) {
      char v19 = *(uint64_t **)(*v21 + v19);
    }
    int v22 = ((uint64_t (*)(void *, uint64_t))v19)(v21, 1);
    if (v22 != v30) {
      sub_1004168C4();
    }
    *(_DWORD *)(a1 + 4) = v16;
    uint64_t v23 = *(void *)(a1 + 32);
    __int16 v31 = &v29;
    double v24 = sub_1001A254C(v7, &v29, (uint64_t)&unk_1004BC2F8, &v31);
    __int16 v25 = v24[5];
    uint64_t v26 = (uint64_t)v24[6];
    __int16 v27 = (void *)(v23 + (v26 >> 1));
    if (v26) {
      __int16 v25 = *(uint64_t **)(*v27 + v25);
    }
    uint64_t v2 = ((uint64_t (*)(void *, void))v25)(v27, 0);
    if (v2 != v29) {
      sub_100416898();
    }
  }
  --*(_DWORD *)(a1 + 112);
  return v2;
}

uint64_t sub_100007320(uint64_t a1, int a2)
{
  if (a2 == 7)
  {
    uint64_t result = sub_10028B210(a1);
    if (result)
    {
      if (*(unsigned char *)(a1 + 440)) {
        return 2;
      }
      else {
        return 1;
      }
    }
  }
  else
  {
    if (!a2) {
      sub_1000220A0(a1 + 448, 1);
    }
    return 0;
  }
  return result;
}

void sub_10000737C(uint64_t a1@<X0>, const void **a2@<X1>, long long *a3@<X8>)
{
  unsigned int v6 = (uint64_t **)(a1 + 88);
  uint64_t v7 = sub_100007494(a1 + 88, a2);
  if (a1 + 96 == v7)
  {
    sub_1002F2034((unsigned __int16 *)a2, a3);
    sub_1002F27B8((char *)v11, (long long *)a2, a3);
    sub_1002F2C10(v6, (const void **)v11, (uint64_t)v11);
    if (v14 < 0) {
      operator delete(__p);
    }
    if (v12 < 0) {
      operator delete(v11[0]);
    }
  }
  else if (*(char *)(v7 + 79) < 0)
  {
    int v9 = *(void **)(v7 + 56);
    unint64_t v10 = *(void *)(v7 + 64);
    sub_100002DE4(a3, v9, v10);
  }
  else
  {
    long long v8 = *(_OWORD *)(v7 + 56);
    *((void *)a3 + 2) = *(void *)(v7 + 72);
    *a3 = v8;
  }
}

void sub_100007468(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1001F8580((uint64_t)&a9);
  if (*(char *)(v9 + 23) < 0) {
    operator delete(*(void **)v9);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100007494(uint64_t a1, const void **a2)
{
  uint64_t v2 = a1 + 8;
  uint64_t v3 = *(void *)(a1 + 8);
  if (!v3) {
    return v2;
  }
  uint64_t v5 = a1 + 16;
  uint64_t v6 = a1 + 8;
  do
  {
    BOOL v7 = sub_100007524(v5, (const void **)(v3 + 32), a2);
    long long v8 = (uint64_t *)(v3 + 8);
    if (!v7)
    {
      long long v8 = (uint64_t *)v3;
      uint64_t v6 = v3;
    }
    uint64_t v3 = *v8;
  }
  while (*v8);
  if (v6 == v2 || sub_100007524(v5, a2, (const void **)(v6 + 32))) {
    return v2;
  }
  return v6;
}

BOOL sub_100007524(uint64_t a1, const void **a2, const void **a3)
{
  int v3 = *((char *)a3 + 23);
  int v4 = *((char *)a2 + 23);
  if (v4 >= 0) {
    size_t v5 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v5 = (size_t)a2[1];
  }
  if (v4 >= 0) {
    uint64_t v6 = a2;
  }
  else {
    uint64_t v6 = *a2;
  }
  if (v3 >= 0) {
    size_t v7 = *((unsigned __int8 *)a3 + 23);
  }
  else {
    size_t v7 = (size_t)a3[1];
  }
  if (v3 >= 0) {
    long long v8 = a3;
  }
  else {
    long long v8 = *a3;
  }
  if (v7 >= v5) {
    size_t v9 = v5;
  }
  else {
    size_t v9 = v7;
  }
  int v10 = memcmp(v6, v8, v9);
  if (v10) {
    return v10 < 0;
  }
  else {
    return v5 < v7;
  }
}

id sub_100007598(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _watchdogLoop];
}

void *sub_1000075A0(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v6 = *a2;
  unint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    uint8x8_t v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      unint64_t v3 = *a2;
      if (v6 >= v7) {
        unint64_t v3 = v6 % v7;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & v6;
    }
    size_t v9 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v9)
    {
      for (i = *v9; i; i = (void *)*i)
      {
        unint64_t v11 = i[1];
        if (v11 == v6)
        {
          if (i[2] == v6) {
            return i;
          }
        }
        else
        {
          if (v8.u32[0] > 1uLL)
          {
            if (v11 >= v7) {
              v11 %= v7;
            }
          }
          else
          {
            v11 &= v7 - 1;
          }
          if (v11 != v3) {
            break;
          }
        }
      }
    }
  }
  i = operator new(0x28uLL);
  void *i = 0;
  i[1] = v6;
  *((_OWORD *)i + 1) = *(_OWORD *)a3;
  i[4] = *(void *)(a3 + 16);
  float v12 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v13 = *(float *)(a1 + 32);
  if (!v7 || (float)(v13 * (float)v7) < v12)
  {
    BOOL v14 = 1;
    if (v7 >= 3) {
      BOOL v14 = (v7 & (v7 - 1)) != 0;
    }
    unint64_t v15 = v14 | (2 * v7);
    unint64_t v16 = vcvtps_u32_f32(v12 / v13);
    if (v15 <= v16) {
      size_t v17 = v16;
    }
    else {
      size_t v17 = v15;
    }
    sub_10002AA24(a1, v17);
    unint64_t v7 = *(void *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v6 >= v7) {
        unint64_t v3 = v6 % v7;
      }
      else {
        unint64_t v3 = v6;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & v6;
    }
  }
  uint64_t v18 = *(void *)a1;
  char v19 = *(void **)(*(void *)a1 + 8 * v3);
  if (v19)
  {
    void *i = *v19;
LABEL_38:
    void *v19 = i;
    goto LABEL_39;
  }
  void *i = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = i;
  *(void *)(v18 + 8 * v3) = a1 + 16;
  if (*i)
  {
    unint64_t v20 = *(void *)(*i + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v20 >= v7) {
        v20 %= v7;
      }
    }
    else
    {
      v20 &= v7 - 1;
    }
    char v19 = (void *)(*(void *)a1 + 8 * v20);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_1000077B0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000077C4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_100007980(result, a2, a3, a4, a5, a6, a7, a8);
    operator delete();
  }
  return result;
}

void sub_100007814(uint64_t a1, const std::string *a2, unsigned __int8 *a3, double *a4)
{
}

uint64_t sub_100007824(uint64_t a1, uint64_t a2, char a3, double a4)
{
  char v7 = a3;
  double v6 = a4;
  uint64_t v4 = *(void *)(a1 + 24);
  if (!v4) {
    sub_100027894();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, char *, double *))(*(void *)v4 + 48))(v4, a2, &v7, &v6);
}

uint64_t sub_100007880(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  unint64_t v3 = a3;
  uint64_t v4 = a2[23];
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = a2[23];
  }
  else {
    uint64_t v5 = *((void *)a2 + 1);
  }
  uint64_t v6 = a3[23];
  int v7 = (char)v6;
  if ((v6 & 0x80u) != 0) {
    uint64_t v6 = *((void *)a3 + 1);
  }
  if (v5 != v6) {
    return 0;
  }
  if (v7 < 0) {
    unint64_t v3 = *(unsigned __int8 **)a3;
  }
  if ((v4 & 0x80) != 0) {
    return memcmp(*(const void **)a2, v3, *((void *)a2 + 1)) == 0;
  }
  if (!a2[23]) {
    return 1;
  }
  uint64_t v8 = v4 - 1;
  do
  {
    int v10 = *a2++;
    int v9 = v10;
    int v12 = *v3++;
    int v11 = v12;
    BOOL v14 = v8-- != 0;
    uint64_t result = v9 == v11;
  }
  while (v9 == v11 && v14);
  return result;
}

uint64_t sub_100007928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v9 = sub_100007A4C(a1, a2, a3, a4, a5, a6, a7, a8);
  sub_100007AF4(a1, v10, v11, v12, v13, v14, v15, v16);
  if ((v9 & 1) == 0) {
    sub_1003A97C4("Unable to release a power assertion", v17, v18, v19, v20, v21, v22, v23, v25);
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void *sub_100007984(void *__dst, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = a4;
  int v9 = a3;
  if (*(char *)(a2 + 23) < 0)
  {
    sub_100002DE4(__dst, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    long long v11 = *(_OWORD *)a2;
    __dst[2] = *(void *)(a2 + 16);
    *(_OWORD *)__dst = v11;
  }
  *((_DWORD *)__dst + 6) = 0;
  __dst[4] = 0;
  if (v9 && (sub_1003E035C((uint64_t)__dst, a2, a3, a4, a5, a6, a7, a8) & 1) == 0) {
    sub_1003A97C4("Unable to create a power assertion", a2, a3, a4, a5, a6, a7, a8, v27);
  }
  if (v8 && (sub_100007B68((uint64_t)__dst, a2, a3, a4, a5, a6, a7, a8) & 1) == 0)
  {
    sub_100007A4C((uint64_t)__dst, v12, v13, v14, v15, v16, v17, v18);
    sub_1003A97C4("Unable to create an OS transaction", v19, v20, v21, v22, v23, v24, v25, v27);
  }
  return __dst;
}

void sub_100007A2C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100007A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = a1;
  IOPMAssertionID v9 = *(_DWORD *)(a1 + 24);
  if (v9)
  {
    if (IOPMAssertionRelease(v9))
    {
      sub_1003A9600("Failed to release powerAssertionId (%u) for %s, return value: 0x%x", v10, v11, v12, v13, v14, v15, v16, *(unsigned int *)(v8 + 24));
      return 0;
    }
    sub_10000486C("Successfully released powerAssertionId (%u) for %s", v10, v11, v12, v13, v14, v15, v16, *(unsigned int *)(v8 + 24));
    *(_DWORD *)(v8 + 24) = 0;
  }
  else
  {
    if (*(char *)(v8 + 23) < 0) {
      uint64_t v8 = *(void *)v8;
    }
    sub_10000486C("power assertion ID is already null for %s", a2, a3, a4, a5, a6, a7, a8, v8);
  }
  return 1;
}

uint64_t sub_100007AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = a1;
  IOPMAssertionID v9 = *(void **)(a1 + 32);
  if (v9)
  {
    os_release(v9);
    *(void *)(v8 + 32) = 0;
    if (*(char *)(v8 + 23) < 0) {
      uint64_t v8 = *(void *)v8;
    }
    sub_10000486C("Successfully released os transaction for %s", v10, v11, v12, v13, v14, v15, v16, v8);
  }
  else
  {
    if (*(char *)(v8 + 23) < 0) {
      uint64_t v8 = *(void *)v8;
    }
    sub_10000486C("os transaction ID is already null for %s", a2, a3, a4, a5, a6, a7, a8, v8);
  }
  return 1;
}

uint64_t sub_100007B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = a1;
  if (*(void *)(a1 + 32))
  {
    if (*(char *)(a1 + 23) < 0) {
      uint64_t v8 = *(void *)a1;
    }
    sub_10000486C("os transaction ID already created for %s", a2, a3, a4, a5, a6, a7, a8, v8);
    return 1;
  }
  uint64_t v9 = os_transaction_create();
  *(void *)(v8 + 32) = v9;
  int v17 = *(char *)(v8 + 23);
  if (v9)
  {
    if (v17 < 0) {
      uint64_t v8 = *(void *)v8;
    }
    sub_10000486C("Successfully created os transaction for %s", v10, v11, v12, v13, v14, v15, v16, v8);
    return 1;
  }
  if (v17 < 0) {
    uint64_t v8 = *(void *)v8;
  }
  sub_1003A9600("Failed to create os transaction for %s", v10, v11, v12, v13, v14, v15, v16, v8);
  return 0;
}

void sub_100007C0C(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1008AB8E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1008AB8E0))
  {
    xmmword_1008AB8C8 = 0uLL;
    unk_1008AB8D8 = 0;
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008AB8C8, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1008AB8E0);
  }
  if (qword_1008AB8E8 != -1) {
    dispatch_once(&qword_1008AB8E8, &stru_100863E00);
  }
  if (byte_1008AB8DF < 0)
  {
    long long v2 = xmmword_1008AB8C8;
    sub_100002DE4((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_1008AB8C8;
    *(void *)(a1 + 16) = unk_1008AB8D8;
  }
}

void *sub_100007D00()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089CE00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089CE00))
  {
    sub_1003D265C(&unk_10089CB10);
    __cxa_atexit((void (*)(void *))sub_10000AF20, &unk_10089CB10, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089CE00);
  }
  return &unk_10089CB10;
}

void sub_100007D84(_Unwind_Exception *a1)
{
}

void sub_100007D9C(uint64_t a1, const std::string *a2, int a3, double a4)
{
  uint64_t v8 = qword_1008A4500;
  if (os_log_type_enabled((os_log_t)qword_1008A4500, OS_LOG_TYPE_DEBUG))
  {
    if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v16 = a2;
    }
    else {
      uint64_t v16 = (const std::string *)a2->__r_.__value_.__r.__words[0];
    }
    int v17 = 136315650;
    uint64_t v18 = v16;
    __int16 v19 = 1024;
    int v20 = a3;
    __int16 v21 = 2048;
    double v22 = a4;
    _os_log_debug_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "regulatory,geo,monitor,processLocation:%s,isLastKnown:%d,ts:%.2f", (uint8_t *)&v17, 0x1Cu);
  }
  uint64_t v9 = *(unsigned __int8 *)(a1 + 239);
  if ((v9 & 0x80u) == 0) {
    uint64_t v10 = *(unsigned __int8 *)(a1 + 239);
  }
  else {
    uint64_t v10 = *(void *)(a1 + 224);
  }
  std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  int v12 = (char)size;
  if ((size & 0x80u) != 0) {
    std::string::size_type size = a2->__r_.__value_.__l.__size_;
  }
  if (v10 != size) {
    goto LABEL_21;
  }
  if (v12 >= 0) {
    uint64_t v13 = a2;
  }
  else {
    uint64_t v13 = (const std::string *)a2->__r_.__value_.__r.__words[0];
  }
  if ((v9 & 0x80) != 0)
  {
    if (memcmp(*(const void **)(a1 + 216), v13, *(void *)(a1 + 224))) {
      goto LABEL_21;
    }
  }
  else if (*(unsigned char *)(a1 + 239))
  {
    uint64_t v14 = (unsigned __int8 *)(a1 + 216);
    while (*v14 == v13->__r_.__value_.__s.__data_[0])
    {
      ++v14;
      uint64_t v13 = (const std::string *)((char *)v13 + 1);
      if (!--v9) {
        goto LABEL_18;
      }
    }
    goto LABEL_21;
  }
LABEL_18:
  if (sub_100007FA8(a1 + 216) && !*(unsigned char *)(a1 + 433) && !*(unsigned char *)(a1 + 432))
  {
    *(double *)(a1 + 248) = a4;
    uint64_t v15 = (unsigned char *)(a1 + 240);
    goto LABEL_26;
  }
LABEL_21:
  std::string::operator=((std::string *)(a1 + 216), a2);
  *(unsigned char *)(a1 + 240) = a3;
  uint64_t v15 = (unsigned char *)(a1 + 240);
  *(double *)(a1 + 248) = a4;
  if (!sub_1001F9EF0((void *)(a1 + 216)) && sub_1001FA38C(a1 + 376))
  {
    std::string::assign((std::string *)(a1 + 376), off_10089F780[0]);
    if (os_log_type_enabled((os_log_t)qword_1008A4500, OS_LOG_TYPE_DEBUG)) {
      sub_10041DCE8();
    }
  }
  sub_1001F94B8(a1);
LABEL_26:
  *uint64_t v15 = 1;
}

BOOL sub_100007FA8(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0)
  {
    if (*(void *)(a1 + 8)) {
      return CFAbsoluteTimeGetCurrent() - *(double *)(a1 + 32) < *(double *)&qword_10089ECB0;
    }
  }
  else if (*(unsigned char *)(a1 + 23))
  {
    return CFAbsoluteTimeGetCurrent() - *(double *)(a1 + 32) < *(double *)&qword_10089ECB0;
  }
  return 0;
}

void sub_1000080F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100008164(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100008408(_Unwind_Exception *a1)
{
  objc_destroyWeak(v6);
  objc_destroyWeak(v3);
  objc_destroyWeak(v5);
  objc_destroyWeak(v4);
  objc_destroyWeak((id *)(v7 - 96));
  objc_destroyWeak((id *)(v7 - 88));

  _Unwind_Resume(a1);
}

void sub_10000847C(uint64_t a1)
{
  long long v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(_DWORD *)(a1 + 48);
    v6[0] = 67109120;
    v6[1] = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "connection interrupted for pid: %d", (uint8_t *)v6, 8u);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained handleXPCDisconnection:v5];
  }
}

void sub_100008554(_Unwind_Exception *a1)
{
  int v3 = v2;

  _Unwind_Resume(a1);
}

void sub_100008574(uint64_t a1)
{
  long long v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(_DWORD *)(a1 + 48);
    v6[0] = 67109120;
    v6[1] = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "connection invalidated for pid: %d", (uint8_t *)v6, 8u);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained handleXPCDisconnection:v5];
  }
}

void sub_10000864C(_Unwind_Exception *a1)
{
  int v3 = v2;

  _Unwind_Resume(a1);
}

void sub_100008808(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000088D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id PRErrorWithCodeAndUserInfo(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = +[NSMutableDictionary dictionary];
  id v5 = v4;
  if (a1 > 199)
  {
    if (a1 > 998)
    {
      switch(a1)
      {
        case 999:
          CFStringRef v7 = @"Internal Error";
          goto LABEL_30;
        case 2000:
          CFStringRef v7 = @"Unsupported global parameters combination.";
          goto LABEL_30;
        case 2002:
          CFStringRef v7 = @"Time conversion failed.";
          goto LABEL_30;
      }
    }
    else
    {
      switch(a1)
      {
        case 200:
          CFStringRef v7 = @"Failed to start estimating proximity to peer.";
          goto LABEL_30;
        case 201:
          CFStringRef v7 = @"Failed to stop estimating proximity to peer.";
          goto LABEL_30;
        case 202:
          CFStringRef v7 = @"Failed to consume RSSI sample.";
LABEL_30:
          uint64_t v6 = &NSLocalizedDescriptionKey;
          goto LABEL_31;
      }
    }
LABEL_15:
    CFStringRef v7 = @"Undefined Error";
    goto LABEL_30;
  }
  uint64_t v6 = &NSLocalizedDescriptionKey;
  CFStringRef v7 = @"Failed to place service request.";
  switch(a1)
  {
    case 'd':
      [v4 setObject:@"Unsupported ranging configuration." forKeyedSubscript:NSLocalizedDescriptionKey];
      [v5 setObject:@"Missing parameters or invalid values provided." forKeyedSubscript:NSLocalizedFailureReasonErrorKey];
      CFStringRef v7 = @"Make sure that the values provided are supported in this version.";
      uint64_t v6 = &NSLocalizedRecoverySuggestionErrorKey;
      break;
    case 'e':
      break;
    case 'f':
      CFStringRef v7 = @"Failed to initiate a ranging session.";
      break;
    case 'g':
      CFStringRef v7 = @"Failed to stop a ranging session.";
      break;
    case 'h':
      CFStringRef v7 = @"Failed to set Rose config.";
      break;
    case 'i':
    case 'k':
      goto LABEL_15;
    case 'j':
      CFStringRef v7 = @"Invalid peer information.";
      break;
    case 'l':
      CFStringRef v7 = @"Invalid ticket id.";
      break;
    case 'm':
      CFStringRef v7 = @"Rose Provider not ready.";
      break;
    case 'n':
      CFStringRef v7 = @"Timeout.";
      break;
    case 'o':
      CFStringRef v7 = @"Unexpected service state.";
      break;
    case 'p':
      CFStringRef v7 = @"Not user triggered request.";
      break;
    case 'q':
      CFStringRef v7 = @"Client has no registered request.";
      break;
    default:
      if (a1 != 10) {
        goto LABEL_15;
      }
      [v4 setObject:@"Unsupported operation." forKeyedSubscript:NSLocalizedDescriptionKey];
      CFStringRef v7 = @"This platform does not support the operation requested.";
      uint64_t v6 = &NSLocalizedFailureReasonErrorKey;
      break;
  }
LABEL_31:
  [v5 setObject:v7 forKeyedSubscript:*v6];
  if (v3) {
    [v5 addEntriesFromDictionary:v3];
  }
  uint64_t v8 = +[NSError errorWithDomain:@"com.apple.Proximity.ErrorDomain" code:a1 userInfo:v5];

  return v8;
}

void *sub_100008BD0@<X0>(int a1@<W0>, void *a2@<X8>)
{
  if (a1) {
    long long v2 = "TriggerRequired";
  }
  else {
    long long v2 = "NoTriggerRequired";
  }
  return sub_100004950(a2, v2);
}

void *sub_100008BF0@<X0>(int a1@<W0>, void *a2@<X8>)
{
  if (a1) {
    long long v2 = "BTAidedAcquisition";
  }
  else {
    long long v2 = "DirectAcquisition";
  }
  return sub_100004950(a2, v2);
}

void *sub_100008C10@<X0>(int a1@<W0>, void *a2@<X8>)
{
  if (a1 == 100)
  {
    long long v2 = "Unspecified";
  }
  else if (a1 == 1)
  {
    long long v2 = "Responder";
  }
  else
  {
    long long v2 = "Initiator";
  }
  return sub_100004950(a2, v2);
}

void *sub_100008C4C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100845FC0[a1]);
}

void *sub_100008C60@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100846018[a1]);
}

void *sub_100008C74@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100846060[a1]);
}

void *sub_100008C88@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100846080[a1]);
}

unint64_t sub_100008C9C(unsigned int a1, uint64_t a2)
{
  return a1 | (unint64_t)(a2 << 32);
}

uint64_t sub_100008CAC(uint64_t a1)
{
  long long v2 = *(void **)a1;
  if (v2)
  {
    *(void *)(a1 + 8) = v2;
    operator delete(v2);
  }
  return a1;
}

void sub_100008D64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100009098(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  _Unwind_Resume(a1);
}

id sub_1000090F0(void *a1)
{
  uint64_t v1 = [a1 valueForEntitlement:@"com.apple.private.nearbyd.regulatory-assistance"];
  if (v1 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
    id v2 = [v1 BOOLValue];
  }
  else {
    id v2 = 0;
  }

  return v2;
}

void sub_10000915C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000916C(uint64_t a1)
{
  id v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(_DWORD *)(a1 + 40);
    v6[0] = 67109120;
    v6[1] = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "connection interrupted for pid: %d", (uint8_t *)v6, 8u);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained handleXPCDisconnection];
  }
}

void sub_100009230(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100009248(uint64_t a1)
{
  id v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(_DWORD *)(a1 + 40);
    v6[0] = 67109120;
    v6[1] = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "connection invalidated for pid: %d", (uint8_t *)v6, 8u);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained handleXPCDisconnection];
  }
}

void sub_10000930C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100009420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

void sub_100009440(uint64_t a1, int a2, uint64_t a3)
{
  if (a2 && *(unsigned char *)(a3 + 24))
  {
    WORD1(v5) = *(_WORD *)(a3 + 20);
    LOBYTE(v5) = *(unsigned char *)(a3 + 18);
    id v6 = [objc_alloc((Class)PRChipInfo) initWithECID:*(void *)a3 chipID:*(unsigned __int16 *)(a3 + 8) boardID:*(unsigned __int16 *)(a3 + 10) bootMode:*(unsigned int *)(a3 + 12) prodMode:*(unsigned __int8 *)(a3 + 16) secureMode:*(unsigned __int8 *)(a3 + 17) securityDomain:v5];
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    uint64_t v4 = *(void (**)(void))(*(void *)(a1 + 32) + 16);
    v4();
  }
}

void sub_100009550(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000095D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100009654(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100009714(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10000AE90((uint64_t)va);

  _Unwind_Resume(a1);
}

void sub_1000097F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000098BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100009988(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100009A54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100009DE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  sub_10000AE90((uint64_t)&a9);
  if (a29 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_100009E78(id a1, id a2, id a3, BOOL *a4)
{
  id v5 = a2;
  id v6 = a3;
  CFStringRef v7 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 138412546;
    id v9 = v5;
    __int16 v10 = 2112;
    id v11 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "    %@ : %@", (uint8_t *)&v8, 0x16u);
  }
}

void sub_100009F48(id a1, NSString *a2, unint64_t a3, BOOL *a4)
{
  uint64_t v4 = a2;
  id v5 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    int v6 = 138477827;
    CFStringRef v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%{private}@", (uint8_t *)&v6, 0xCu);
  }
}

void sub_100009FF4(id a1, NSString *a2, unint64_t a3, BOOL *a4)
{
  uint64_t v4 = a2;
  id v5 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    int v6 = 138543362;
    CFStringRef v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%{public}@", (uint8_t *)&v6, 0xCu);
  }
}

void sub_10000A178(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000A230(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000A2A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10000A320(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10000A3A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10000A4A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10000A600(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000A6C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10000A778(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10000A8F0(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_10000AB04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_10000ABB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000ADB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000AE44()
{
  exception = __cxa_allocate_exception(8uLL);
}

uint64_t sub_10000AE90(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 112))
  {
    sub_10000AED4(a1 + 32);
    if (*(char *)(a1 + 23) < 0) {
      operator delete(*(void **)a1);
    }
  }
  return a1;
}

uint64_t sub_10000AED4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 64))
  {
    if (*(char *)(a1 + 63) < 0) {
      operator delete(*(void **)(a1 + 40));
    }
    if (*(char *)(a1 + 31) < 0) {
      operator delete(*(void **)(a1 + 8));
    }
  }
  return a1;
}

uint64_t sub_10000AF20(uint64_t a1)
{
  sub_10000AF74((void *)(a1 + 712));
  std::mutex::~mutex((std::mutex *)(a1 + 648));
  std::mutex::~mutex((std::mutex *)(a1 + 584));
  sub_10000AFF8(a1 + 216);

  return sub_10000AE90(a1);
}

void *sub_10000AF74(void *a1)
{
  id v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_10000AFF8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 352))
  {
    CFStringRef v7 = (void **)(a1 + 328);
    sub_10000B09C(&v7);
    if (*(unsigned char *)(a1 + 312))
    {
      id v2 = *(void **)(a1 + 288);
      if (v2)
      {
        *(void *)(a1 + 296) = v2;
        operator delete(v2);
      }
    }
    if (*(unsigned char *)(a1 + 248))
    {
      int v3 = *(void **)(a1 + 224);
      if (v3)
      {
        *(void *)(a1 + 232) = v3;
        operator delete(v3);
      }
    }
    if (*(unsigned char *)(a1 + 184))
    {
      uint64_t v4 = *(void **)(a1 + 160);
      if (v4)
      {
        *(void *)(a1 + 168) = v4;
        operator delete(v4);
      }
    }
    if (*(unsigned char *)(a1 + 120))
    {
      id v5 = *(void **)(a1 + 96);
      if (v5)
      {
        *(void *)(a1 + 104) = v5;
        operator delete(v5);
      }
    }
  }
  return a1;
}

void sub_10000B09C(void ***a1)
{
  id v2 = *a1;
  if (*v2)
  {
    sub_10000B0F0((uint64_t *)v2);
    int v3 = **a1;
    operator delete(v3);
  }
}

void sub_10000B0F0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 40)
  {
    uint64_t v4 = *(void **)(i - 24);
    if (v4)
    {
      *(void *)(i - 16) = v4;
      operator delete(v4);
    }
  }
  a1[1] = v2;
}

unsigned char *sub_10000B140(unsigned char *__dst, uint64_t a2)
{
  *__dst = 0;
  __dst[112] = 0;
  if (*(unsigned char *)(a2 + 112))
  {
    sub_10000B198(__dst, (long long *)a2);
    __dst[112] = 1;
  }
  return __dst;
}

void sub_10000B184(_Unwind_Exception *a1)
{
  sub_10000AE90(v1);
  _Unwind_Resume(a1);
}

void *sub_10000B198(void *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_100002DE4(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)__dst = v4;
  }
  *((_DWORD *)__dst + 6) = *((_DWORD *)a2 + 6);
  sub_10000B2C8((unsigned char *)__dst + 32, (uint64_t)(a2 + 2));
  __dst[13] = *((void *)a2 + 13);
  return __dst;
}

void sub_10000B204(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_10000B220()
{
}

void sub_10000B238(const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_10000B294(exception, a1);
}

void sub_10000B280(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_10000B294(std::logic_error *a1, const char *a2)
{
  uint64_t result = std::logic_error::logic_error(a1, a2);
  return result;
}

unsigned char *sub_10000B2C8(unsigned char *a1, uint64_t a2)
{
  *a1 = 0;
  a1[64] = 0;
  if (*(unsigned char *)(a2 + 64))
  {
    sub_10000B320((uint64_t)a1, (int *)a2);
    a1[64] = 1;
  }
  return a1;
}

void sub_10000B30C(_Unwind_Exception *a1)
{
  sub_10000AED4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10000B320(uint64_t a1, int *a2)
{
  int v4 = *a2;
  *(_WORD *)(a1 + 4) = *((_WORD *)a2 + 2);
  *(_DWORD *)a1 = v4;
  if (*((char *)a2 + 31) < 0)
  {
    sub_100002DE4((unsigned char *)(a1 + 8), *((void **)a2 + 1), *((void *)a2 + 2));
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 2);
    *(void *)(a1 + 24) = *((void *)a2 + 3);
    *(_OWORD *)(a1 + 8) = v5;
  }
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  int v6 = (unsigned char *)(a1 + 40);
  if (*((char *)a2 + 63) < 0)
  {
    sub_100002DE4(v6, *((void **)a2 + 5), *((void *)a2 + 6));
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 10);
    *(void *)(a1 + 56) = *((void *)a2 + 7);
    *(_OWORD *)int v6 = v7;
  }
  return a1;
}

void sub_10000B3C4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_10000B3E0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_10000B3FC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C888, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C888))
  {
    sub_100004950(qword_10089C870, "PRRoseProviderNetworkListener");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C870, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C888);
  }
}

void sub_10000B494(_Unwind_Exception *a1)
{
}

void sub_10000B4AC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8A8))
  {
    sub_100004950(&qword_10089C890, "com.apple.nearbyd.accessory.download");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C890, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8A8);
  }
}

void sub_10000B544(_Unwind_Exception *a1)
{
}

void sub_10000B55C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8C8))
  {
    sub_100004950(&qword_10089C8B0, "com.apple.nearbyd.accessory.files");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C8B0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8C8);
  }
}

void sub_10000B5F4(_Unwind_Exception *a1)
{
}

void sub_10000B60C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8E8))
  {
    sub_100004950(qword_10089C8D0, "MA_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8D0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8E8);
  }
}

void sub_10000B6A4(_Unwind_Exception *a1)
{
}

void sub_10000B6BC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C908, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C908))
  {
    sub_100004950(qword_10089C8F0, "MB_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8F0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C908);
  }
}

void sub_10000B754(_Unwind_Exception *a1)
{
}

void sub_10000B76C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C928, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C928))
  {
    sub_100004950(qword_10089C910, "D");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C910, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C928);
  }
}

void sub_10000B804(_Unwind_Exception *a1)
{
}

void sub_10000B81C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C948, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C948))
  {
    sub_100004950(&qword_10089C930, "A");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C930, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C948);
  }
}

void sub_10000B8B4(_Unwind_Exception *a1)
{
}

void sub_10000B8CC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C968, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C968))
  {
    sub_100004950(qword_10089C950, "FAS.bin");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C950, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C968);
  }
}

void sub_10000B964(_Unwind_Exception *a1)
{
}

void sub_10000B97C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C988, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C988))
  {
    qword_10089C970 = 0;
    qword_10089C978 = 0;
    qword_10089C980 = 0;
    uint64_t v0 = operator new(0x30uLL);
    qword_10089C978 = (uint64_t)(v0 + 3);
    qword_10089C980 = (uint64_t)(v0 + 3);
    _OWORD *v0 = xmmword_10049FE38;
    v0[1] = unk_10049FE48;
    v0[2] = xmmword_10049FE58;
    qword_10089C970 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_100008CAC, &qword_10089C970, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C988);
  }
}

void sub_10000BA38(_Unwind_Exception *a1)
{
}

void sub_10000BA50()
{
  sub_10039D144();
  uint64_t v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  int v3 = std::string::append(&v38, ".bin");
  long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_10089F868 = v3->__r_.__value_.__r.__words[2];
  xmmword_10089F858 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089F858, (void *)&_mh_execute_header);
  sub_10039D144();
  long long v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  long long v7 = std::string::append(&v38, ".bin");
  long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_10089F880 = v7->__r_.__value_.__r.__words[2];
  xmmword_10089F870 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089F870, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  id v11 = std::string::append(&v38, ".bin");
  long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_10089F898 = v11->__r_.__value_.__r.__words[2];
  xmmword_10089F888 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089F888, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  uint64_t v15 = std::string::append(&v38, ".bin");
  long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_10089F8B0 = v15->__r_.__value_.__r.__words[2];
  xmmword_10089F8A0 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089F8A0, (void *)&_mh_execute_header);
  sub_10039D144();
  int v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  __int16 v19 = std::string::append(&v38, ".bin");
  long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_10089F8C8 = v19->__r_.__value_.__r.__words[2];
  xmmword_10089F8B8 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089F8B8, (void *)&_mh_execute_header);
  sub_10039D144();
  __int16 v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  uint64_t v23 = std::string::append(&v38, ".bin");
  long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_10089F8E0 = v23->__r_.__value_.__r.__words[2];
  xmmword_10089F8D0 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089F8D0, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  uint64_t v27 = std::string::append(&v38, ".bin");
  long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_10089F8F8 = v27->__r_.__value_.__r.__words[2];
  xmmword_10089F8E8 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089F8E8, (void *)&_mh_execute_header);
  sub_10039D144();
  int v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  __int16 v31 = std::string::append(&v38, ".bin");
  long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_10089F910 = v31->__r_.__value_.__r.__words[2];
  xmmword_10089F900 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089F900, (void *)&_mh_execute_header);
  sub_10039D144();
  __int16 v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  __int16 v35 = std::string::append(&v38, ".bin");
  long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_10089F928 = v35->__r_.__value_.__r.__words[2];
  xmmword_10089F918 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089F918, (void *)&_mh_execute_header);
}

void sub_10000C090(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_10000C1C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000C4EC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v7);
  objc_destroyWeak(v6);
  objc_destroyWeak(v5);
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v8 - 104));
  _Unwind_Resume(a1);
}

void sub_10000C554()
{
}

void sub_10000C55C()
{
}

void sub_10000C564()
{
}

void sub_10000C56C(uint64_t a1, void *a2)
{
  long long v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained didLoseDevice:v3];
}

void sub_10000C5C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10000C5E0(uint64_t a1, void *a2)
{
  long long v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained didDiscoverDevice:v3];
}

void sub_10000C63C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10000C654(uint64_t a1)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
    sub_10040B82C();
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained bluetoothServiceInterrupted];
}

void sub_10000C6B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000C6C0(uint64_t a1, void *a2)
{
  long long v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained didFailWithError:v3];
}

void sub_10000C71C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10000C734(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained bluetoothStateChanged];
}

void sub_10000C77C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10000C790(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained bluetoothAdvertisingAddressChanged];
}

void sub_10000C7D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10000C7EC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained systemOverrideNotification];
}

void sub_10000C834(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10000C888(id a1)
{
  uint64_t v1 = +[NSUserDefaults standardUserDefaults];
  byte_10089F938 = [v1 BOOLForKey:@"EnableMarconiBypass"];
  long long v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    if (byte_10089F938) {
      CFStringRef v3 = @"Yes";
    }
    else {
      CFStringRef v3 = @"No";
    }
    int v4 = 138412290;
    CFStringRef v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#ble,Marconi bypass enabled: %@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_10000C978(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000CD94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  _Unwind_Resume(a1);
}

void sub_10000CDE0(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = sub_100006C38();
  double v5 = *(double *)(a1 + 48);
  id WeakRetained = (char *)objc_loadWeakRetained((id *)(a1 + 40));
  long long v7 = (id *)WeakRetained;
  if (WeakRetained)
  {
    double v8 = v4 - v5;
    uint64_t v9 = WeakRetained + 16;
    if (*((_DWORD *)WeakRetained + 4) == 1)
    {
      id v10 = objc_loadWeakRetained((id *)WeakRetained + 3);
      if (v3)
      {
        id v11 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
          sub_10040BA44((uint64_t)v3, v11, v12, v8);
        }
        *uint64_t v9 = 3;
        [v10 didFinishActivatingWithDiscoveryTokenData:0 error:v3];
      }
      else
      {
        uint64_t v13 = [v7[1] tokenData];

        long long v14 = qword_1008ABDE0;
        if (v13)
        {
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
          {
            int v26 = 134217984;
            double v27 = v8;
            _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "#ble,Activation succeeded [%0.6f s]", (uint8_t *)&v26, 0xCu);
          }
          *uint64_t v9 = 2;
          uint64_t v15 = +[NIServerSpatialInteractionPayloadAggregator sharedInstance];
          [v15 addPayloadChangeObserver:*(void *)(a1 + 32)];

          [v7 _executeActivationPendingOperations];
          long long v16 = [v7[1] tokenData];
          [v10 didFinishActivatingWithDiscoveryTokenData:v16 error:0];

          [v7 bluetoothStateChanged];
          [v7 bluetoothAdvertisingAddressChanged];
        }
        else
        {
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
            sub_10040B9D4(v14, v17, v18, v19, v20, v21, v22, v23);
          }
          *uint64_t v9 = 3;
          NSErrorUserInfoKey v28 = NSLocalizedFailureReasonErrorKey;
          CFStringRef v29 = @"Activated session had no token";
          long long v24 = +[NSDictionary dictionaryWithObjects:&v29 forKeys:&v28 count:1];
          uint64_t v25 = +[NSError errorWithDomain:@"com.apple.NearbyInteraction" code:-10017 userInfo:v24];
          [v10 didFinishActivatingWithDiscoveryTokenData:0 error:v25];
        }
      }
    }
    else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
    {
      sub_10040BAC0();
    }
  }
}

void sub_10000D08C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000D47C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_10000D4B4(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addPeerDiscoveryToken:a2];
}

void sub_10000D61C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000D8A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  _Unwind_Resume(a1);
}

void sub_10000D90C(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = sub_100006C38();
  double v5 = *(double *)(a1 + 48);
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    double v7 = v4 - v5;
    double v8 = (id)qword_1008ABDE0;
    uint64_t v9 = v8;
    if (v3)
    {
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        id v11 = CUPrintNSObjectMasked();
        int v12 = 138478339;
        uint64_t v13 = v11;
        __int16 v14 = 2048;
        double v15 = v7;
        __int16 v16 = 2112;
        id v17 = v3;
        _os_log_error_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "#ble,addPeerToken %{private}@ failed [%0.6f s]. Error: %@", (uint8_t *)&v12, 0x20u);
      }
      [WeakRetained[6] removeObject:*(void *)(a1 + 32)];
    }
    else
    {
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        id v10 = CUPrintNSObjectMasked();
        int v12 = 138478083;
        uint64_t v13 = v10;
        __int16 v14 = 2048;
        double v15 = v7;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#ble,addPeerToken %{private}@ succeeded [%0.6f s]", (uint8_t *)&v12, 0x16u);
      }
    }
  }
}

void sub_10000DAA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000DDE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  uint64_t v20 = v19;

  _Unwind_Resume(a1);
}

void sub_10000DE70(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = sub_100006C38();
  double v5 = *(double *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    double v7 = v4 - v5;
    double v8 = (id)qword_1008ABDE0;
    uint64_t v9 = v8;
    if (v3)
    {
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        id v10 = CUPrintNSObjectMasked();
        int v12 = 138478339;
        uint64_t v13 = v10;
        __int16 v14 = 2048;
        double v15 = v7;
        __int16 v16 = 2112;
        id v17 = v3;
        _os_log_error_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "#ble,removePeerToken %{private}@ failed [%0.6f s]. Error: %@", (uint8_t *)&v12, 0x20u);
      }
    }
    else if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      id v11 = CUPrintNSObjectMasked();
      int v12 = 138478083;
      uint64_t v13 = v11;
      __int16 v14 = 2048;
      double v15 = v7;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#ble,removePeerToken %{private}@ succeeded [%0.6f s]", (uint8_t *)&v12, 0x16u);
    }
  }
}

void sub_10000DFF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000E1E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000E7E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000ED8C(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained[1] setScanRate:30];
    double v4 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void *)(a1 + 40);
      unsigned int v6 = [v3[1] scanRate];
      int v7 = 134218240;
      uint64_t v8 = v5;
      __int16 v9 = 1024;
      unsigned int v10 = v6;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#ble,startScanningWithBurstPeriod burst expired [%0.1f s]. Setting BT scan rate to %d.", (uint8_t *)&v7, 0x12u);
    }

    [v3 _cancelScanRateAdjustmentTimer];
  }
}

void sub_10000EE80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000F138(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_10000F164(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) removePeerDiscoveryToken:a2];
}

void sub_10000F2FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000F870(_Unwind_Exception *a1)
{
  uint64_t v5 = v2;

  _Unwind_Resume(a1);
}

void sub_10000FA74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10000FACC(void *a1)
{
  id v1 = a1;
  if ([v1 length] != (id)6) {
    __assert_rtn("PRBluetoothAdvertisingAddressToU64Identifier", "PRBLEDiscoverySession.mm", 1078, "[bluetoothAddress length] == kPRBluetoothAdvertisingAddressLengthBytes");
  }
  uint64_t v6 = 0;
  id v2 = [v1 copy];
  id v3 = [v2 _reverse];
  [v3 getBytes:&v6 length:[v1 length]];

  uint64_t v4 = v6;
  return v4;
}

void sub_10000FB78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000FD10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000FD98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100010068(_Unwind_Exception *exception_object)
{
}

void sub_100010108(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100010344(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000104C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000104D4(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

void sub_1000104E4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_10001050C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x16u);
}

void sub_100010548(float a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(float *)a6 = a1;
  *(void *)(a6 + 4) = v7;
  *(_WORD *)(a6 + 12) = 2080;
  *(void *)(a6 + 14) = v6;
}

void *sub_10001058C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100846290[a1]);
}

void *sub_1000105A0@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_1008462E8[a1]);
}

void *sub_1000105B4@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100846330[a1]);
}

void *sub_1000105C8@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100846350[a1]);
}

uint64_t sub_1000105DC(void *a1, unsigned __int8 *a2, void *a3)
{
  id v5 = a1;
  uint64_t v6 = v5;
  if (v5)
  {
    uint64_t v7 = [v5 objectForKey:PRP2PArgsRangingRole];
    v134 = [v6 objectForKey:PRP2PArgsRangingInterval];
    uint64_t v8 = [v6 objectForKey:PRP2PArgsTxAntennaMask];
    v133 = [v6 objectForKey:PRP2PArgsRxAntennaMask];
    v124 = [v6 objectForKey:PRP2PArgsRxSyncSearchAntennaMask];
    v129 = [v6 objectForKey:PRDebugConfigArgTxAntennaMask2];
    v123 = [v6 objectForKey:PRDebugConfigArgRxAntennaMask2];
    v116 = [v6 objectForKey:PRDebugConfigArgRxSyncSearchAntennaMask2];
    v128 = [v6 objectForKey:PRDebugConfigArgSOIRSSIThreshold2];
    v132 = [v6 objectForKey:PRP2PArgsTxPreamble];
    v131 = [v6 objectForKey:PRP2PArgsRxPreamble];
    v130 = [v6 objectForKey:PRP2PArgsTxPacketType];
    v126 = [v6 objectForKey:PRP2PArgsRxPacketType];
    v127 = [v6 objectForKey:PRP2PArgsRoseDebugFlags];
    v125 = [v6 objectForKey:PRP2PArgsDualRangingMode];
    v122 = [v6 objectForKey:PRDebugConfigArgNAccessSlotsMin];
    v118 = [v6 objectForKey:PRDebugConfigArgNAccessSlotsMax];
    v121 = [v6 objectForKey:PRDebugConfigArgRangingIntervalMin];
    v117 = [v6 objectForKey:PRDebugConfigArgRangingIntervalMax];
    v119 = [v6 objectForKey:PRDebugConfigArgRxMiniSlotSize];
    v120 = [v6 objectForKey:PRDebugConfigArgTxMiniSlotSize];
    int v9 = *((_DWORD *)sub_100007D00() + 187);
    if (v7)
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        unsigned __int8 v10 = [v7 intValue];
        sub_1003A8144(v10, v11, v12, v13, v14, v15, v16, v17);
        unsigned __int8 v18 = [v7 integerValue];
        if (!a2[1]) {
          a2[1] = 1;
        }
        *a2 = v18;
        uint64_t v19 = (id)qword_1008ABDE0;
        if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
        {
          if (!a2[1]) {
            sub_10000AE44();
          }
          int v20 = *a2;
          *(_DWORD *)std::string buf = 67109120;
          *(_DWORD *)&uint8_t buf[4] = v20;
          _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "[Range Params] got role: %d", buf, 8u);
        }
      }
    }
    if (v134)
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        unsigned __int16 v21 = (unsigned __int16)[v134 integerValue];
        if (!a2[78]) {
          a2[78] = 1;
        }
        *((_WORD *)a2 + 38) = v21;
        uint64_t v22 = (id)qword_1008ABDE0;
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
        {
          if (!a2[78]) {
            sub_10000AE44();
          }
          int v23 = *((unsigned __int16 *)a2 + 38);
          *(_DWORD *)std::string buf = 67109120;
          *(_DWORD *)&uint8_t buf[4] = v23;
          _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "[Range Params] got interval_ms: %d", buf, 8u);
        }
      }
    }
    if (v8)
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        if (!sub_100012C24(v8))
        {
          CFTypeID v43 = (id)qword_1008ABDE0;
          if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR)) {
            sub_10040C7A0((uint64_t)buf, (int)[v8 intValue]);
          }

          if (!a3) {
            goto LABEL_314;
          }
          NSErrorUserInfoKey v177 = NSLocalizedDescriptionKey;
          CFStringRef v178 = @"got invalid tx_ant_mask.";
          uint64_t v44 = +[NSDictionary dictionaryWithObjects:&v178 forKeys:&v177 count:1];
          PRErrorWithCodeAndUserInfo(100, v44);
          id v45 = (id)objc_claimAutoreleasedReturnValue();
          goto LABEL_236;
        }
        unsigned __int8 v24 = [v8 integerValue];
        if (!a2[3]) {
          a2[3] = 1;
        }
        a2[2] = v24;
        uint64_t v25 = (id)qword_1008ABDE0;
        if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
        {
          if (!a2[3]) {
            sub_10000AE44();
          }
          int v26 = a2[2];
          *(_DWORD *)std::string buf = 67109120;
          *(_DWORD *)&uint8_t buf[4] = v26;
          _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "[Range Params] got tx_ant_mask: 0x%x", buf, 8u);
        }
      }
    }
    if (v133)
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & (v124 != 0)) == 1)
      {
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          if (!sub_100012CA8(v133))
          {
            v46 = (id)qword_1008ABDE0;
            if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR)) {
              sub_10040C768((uint64_t)buf, (int)[v133 intValue]);
            }

            if (!a3) {
              goto LABEL_314;
            }
            NSErrorUserInfoKey v175 = NSLocalizedDescriptionKey;
            CFStringRef v176 = @"got invalid rx_ant_mask.";
            uint64_t v44 = +[NSDictionary dictionaryWithObjects:&v176 forKeys:&v175 count:1];
            PRErrorWithCodeAndUserInfo(100, v44);
            id v45 = (id)objc_claimAutoreleasedReturnValue();
            goto LABEL_236;
          }
          unsigned __int8 v27 = [v133 integerValue];
          if (!a2[5]) {
            a2[5] = 1;
          }
          a2[4] = v27;
          NSErrorUserInfoKey v28 = (id)qword_1008ABDE0;
          if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
          {
            if (!a2[5]) {
              sub_10000AE44();
            }
            int v29 = a2[4];
            *(_DWORD *)std::string buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = v29;
            _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "[Range Params] got rx_ant_mask: 0x%x", buf, 8u);
          }

          if ((sub_100012D04(v124, v133) & 1) == 0)
          {
            uint64_t v47 = (id)qword_1008ABDE0;
            if (os_log_type_enabled(v47, OS_LOG_TYPE_ERROR)) {
              sub_10040C730((uint64_t)buf, (int)[v124 intValue]);
            }

            if (!a3) {
              goto LABEL_314;
            }
            NSErrorUserInfoKey v173 = NSLocalizedDescriptionKey;
            CFStringRef v174 = @"got invalid rx_sync_search_ant_mask.";
            uint64_t v44 = +[NSDictionary dictionaryWithObjects:&v174 forKeys:&v173 count:1];
            PRErrorWithCodeAndUserInfo(100, v44);
            id v45 = (id)objc_claimAutoreleasedReturnValue();
            goto LABEL_236;
          }
          unsigned __int8 v30 = [v124 integerValue];
          if (!a2[7]) {
            a2[7] = 1;
          }
          a2[6] = v30;
          __int16 v31 = (id)qword_1008ABDE0;
          if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
          {
            if (!a2[7]) {
              sub_10000AE44();
            }
            int v32 = a2[6];
            *(_DWORD *)std::string buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = v32;
            _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "[Range Params] got rx_sync_search_ant_mask: 0x%x", buf, 8u);
          }
        }
      }
    }
    if (!v129
      || (objc_opt_class(), (objc_opt_isKindOfClass() & (v123 != 0)) != 1)
      || (objc_opt_class(), (objc_opt_isKindOfClass() & (v116 != 0)) != 1)
      || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
    {
LABEL_114:
      if (v128)
      {
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          unsigned __int16 v59 = (unsigned __int16)[v128 integerValue];
          if (!a2[74]) {
            a2[74] = 1;
          }
          *((_WORD *)a2 + 36) = v59;
          v60 = (id)qword_1008ABDE0;
          if (os_log_type_enabled(v60, OS_LOG_TYPE_DEFAULT))
          {
            if (!a2[74]) {
              sub_10000AE44();
            }
            int v61 = *((__int16 *)a2 + 36);
            *(_DWORD *)std::string buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = v61;
            _os_log_impl((void *)&_mh_execute_header, v60, OS_LOG_TYPE_DEFAULT, "[Range Params] got soi_rssi_thd2: 0x%x", buf, 8u);
          }
        }
      }
      if (v132)
      {
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          sub_1003A7C10([v132 intValue], 1);
          *((_WORD *)a2 + 4) = sub_1003A7C10([v132 integerValue], v9) | 0x100;
          v62 = (id)qword_1008ABDE0;
          if (os_log_type_enabled(v62, OS_LOG_TYPE_DEFAULT))
          {
            if (!a2[9]) {
              sub_10000AE44();
            }
            sub_1003A7E38(a2[8]);
            if (v164 >= 0) {
              v63 = buf;
            }
            else {
              v63 = *(uint8_t **)buf;
            }
            *(_DWORD *)v165 = 136315138;
            v166 = v63;
            _os_log_impl((void *)&_mh_execute_header, v62, OS_LOG_TYPE_DEFAULT, "[Range Params] got tx_preamble: %s", v165, 0xCu);
            if (v164 < 0) {
              operator delete(*(void **)buf);
            }
          }
        }
      }
      if (v131)
      {
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          sub_1003A7C10([v131 intValue], v9);
          *((_WORD *)a2 + 5) = sub_1003A7C10([v131 integerValue], v9) | 0x100;
          v64 = (id)qword_1008ABDE0;
          if (os_log_type_enabled(v64, OS_LOG_TYPE_DEFAULT))
          {
            if (!a2[11]) {
              sub_10000AE44();
            }
            sub_1003A7E38(a2[10]);
            if (v164 >= 0) {
              v65 = buf;
            }
            else {
              v65 = *(uint8_t **)buf;
            }
            *(_DWORD *)v165 = 136315138;
            v166 = v65;
            _os_log_impl((void *)&_mh_execute_header, v64, OS_LOG_TYPE_DEFAULT, "[Range Params] got rx_preamble: %s", v165, 0xCu);
            if (v164 < 0) {
              operator delete(*(void **)buf);
            }
          }
        }
      }
      if (v130)
      {
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          uint64_t v66 = sub_1003A90BC([v130 intValue]);
          if ((v66 & 0xFF0000) == 0)
          {
            v67 = (id)qword_1008ABDE0;
            if (os_log_type_enabled(v67, OS_LOG_TYPE_ERROR)) {
              sub_10040C5E0((uint64_t)buf, (int)[v130 intValue]);
            }

            if (a3)
            {
              NSErrorUserInfoKey v161 = NSLocalizedDescriptionKey;
              CFStringRef v162 = @"got invalid tx_pkt_type.";
              uint64_t v44 = +[NSDictionary dictionaryWithObjects:&v162 forKeys:&v161 count:1];
              PRErrorWithCodeAndUserInfo(100, v44);
              id v45 = (id)objc_claimAutoreleasedReturnValue();
              goto LABEL_236;
            }
LABEL_314:
            uint64_t v42 = 0;
            goto LABEL_315;
          }
          if (!a2[14]) {
            a2[14] = 1;
          }
          *((_WORD *)a2 + 6) = v66;
          v68 = (id)qword_1008ABDE0;
          if (os_log_type_enabled(v68, OS_LOG_TYPE_DEFAULT))
          {
            if (!a2[14]) {
              sub_10000AE44();
            }
            sub_1003A9184(a2 + 12);
            if (v164 >= 0) {
              v69 = buf;
            }
            else {
              v69 = *(uint8_t **)buf;
            }
            *(_DWORD *)v165 = 136315138;
            v166 = v69;
            _os_log_impl((void *)&_mh_execute_header, v68, OS_LOG_TYPE_DEFAULT, "[Range Params] got tx_pkt_type: %s", v165, 0xCu);
            if (v164 < 0) {
              operator delete(*(void **)buf);
            }
          }
        }
      }
      if (v126)
      {
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          uint64_t v70 = sub_1003A90BC([v126 intValue]);
          if ((v70 & 0xFF0000) == 0)
          {
            v71 = (id)qword_1008ABDE0;
            if (os_log_type_enabled(v71, OS_LOG_TYPE_ERROR)) {
              sub_10040C5A8((uint64_t)buf, (int)[v130 intValue]);
            }

            if (a3)
            {
              NSErrorUserInfoKey v159 = NSLocalizedDescriptionKey;
              CFStringRef v160 = @"got invalid tx_pkt_type.";
              uint64_t v44 = +[NSDictionary dictionaryWithObjects:&v160 forKeys:&v159 count:1];
              PRErrorWithCodeAndUserInfo(100, v44);
              id v45 = (id)objc_claimAutoreleasedReturnValue();
              goto LABEL_236;
            }
            goto LABEL_314;
          }
          if (!a2[17]) {
            a2[17] = 1;
          }
          *(_WORD *)(a2 + 15) = v70;
          v72 = (id)qword_1008ABDE0;
          if (os_log_type_enabled(v72, OS_LOG_TYPE_DEFAULT))
          {
            if (!a2[17]) {
              sub_10000AE44();
            }
            sub_1003A9184(a2 + 15);
            if (v164 >= 0) {
              v73 = buf;
            }
            else {
              v73 = *(uint8_t **)buf;
            }
            *(_DWORD *)v165 = 136315138;
            v166 = v73;
            _os_log_impl((void *)&_mh_execute_header, v72, OS_LOG_TYPE_DEFAULT, "[Range Params] got rx_pkt_type: %s", v165, 0xCu);
            if (v164 < 0) {
              operator delete(*(void **)buf);
            }
          }
        }
      }
      if (v127)
      {
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          if (([v127 intValue] & 0x80000000) != 0
            || (int)[v127 intValue] >= 0x10000)
          {
            v74 = (id)qword_1008ABDE0;
            if (os_log_type_enabled(v74, OS_LOG_TYPE_ERROR)) {
              sub_10040C570((uint64_t)buf, (int)[v127 intValue]);
            }

            if (a3)
            {
              NSErrorUserInfoKey v157 = NSLocalizedDescriptionKey;
              CFStringRef v158 = @"got invalid debug_flags.";
              uint64_t v44 = +[NSDictionary dictionaryWithObjects:&v158 forKeys:&v157 count:1];
              PRErrorWithCodeAndUserInfo(100, v44);
              id v45 = (id)objc_claimAutoreleasedReturnValue();
              goto LABEL_236;
            }
            goto LABEL_314;
          }
          unsigned __int16 v75 = (unsigned __int16)[v127 integerValue];
          if (!a2[24]) {
            a2[24] = 1;
          }
          *((_WORD *)a2 + 11) = v75;
          v76 = (id)qword_1008ABDE0;
          if (os_log_type_enabled(v76, OS_LOG_TYPE_DEFAULT))
          {
            if (!a2[24]) {
              sub_10000AE44();
            }
            int v77 = *((unsigned __int16 *)a2 + 11);
            *(_DWORD *)std::string buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = v77;
            _os_log_impl((void *)&_mh_execute_header, v76, OS_LOG_TYPE_DEFAULT, "[Range Params] got debug_flags: %d", buf, 8u);
          }
        }
      }
      if (v125)
      {
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          if ([v125 intValue] && objc_msgSend(v125, "intValue") != 1)
          {
            v95 = (id)qword_1008ABDE0;
            if (os_log_type_enabled(v95, OS_LOG_TYPE_ERROR)) {
              sub_10040C538((uint64_t)buf, (int)[v125 intValue]);
            }

            if (a3)
            {
              NSErrorUserInfoKey v155 = NSLocalizedDescriptionKey;
              CFStringRef v156 = @"got invalid dual_ranging_enable.";
              uint64_t v44 = +[NSDictionary dictionaryWithObjects:&v156 forKeys:&v155 count:1];
              PRErrorWithCodeAndUserInfo(100, v44);
              id v45 = (id)objc_claimAutoreleasedReturnValue();
              goto LABEL_236;
            }
            goto LABEL_314;
          }
          unsigned __int8 v78 = [v125 integerValue];
          if (!a2[65]) {
            a2[65] = 1;
          }
          a2[64] = v78;
          v79 = (id)qword_1008ABDE0;
          if (os_log_type_enabled(v79, OS_LOG_TYPE_DEFAULT))
          {
            if (!a2[65]) {
              sub_10000AE44();
            }
            int v80 = a2[64];
            *(_DWORD *)std::string buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = v80;
            _os_log_impl((void *)&_mh_execute_header, v79, OS_LOG_TYPE_DEFAULT, "[Range Params] got dual_ranging_enable: %d", buf, 8u);
          }
        }
      }
      if (v122)
      {
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & (v118 != 0)) == 1)
        {
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            if ((int)[v122 intValue] <= 0)
            {
              v81 = (id)qword_1008ABDE0;
              if (os_log_type_enabled(v81, OS_LOG_TYPE_ERROR)) {
                sub_10040C500((uint64_t)buf, (int)[v122 intValue]);
              }

              if (a3)
              {
                NSErrorUserInfoKey v153 = NSLocalizedDescriptionKey;
                CFStringRef v154 = @"got invalid naccess_slots_min.";
                v82 = +[NSDictionary dictionaryWithObjects:&v154 forKeys:&v153 count:1];
                PRErrorWithCodeAndUserInfo(100, v82);
                *a3 = (id)objc_claimAutoreleasedReturnValue();
              }
            }
            unsigned __int8 v83 = [v122 integerValue];
            if (!a2[105]) {
              a2[105] = 1;
            }
            a2[104] = v83;
            v84 = (id)qword_1008ABDE0;
            if (os_log_type_enabled(v84, OS_LOG_TYPE_DEFAULT))
            {
              if (!a2[105]) {
                sub_10000AE44();
              }
              int v85 = a2[104];
              *(_DWORD *)v165 = 67109120;
              LODWORD(v166) = v85;
              _os_log_impl((void *)&_mh_execute_header, v84, OS_LOG_TYPE_DEFAULT, "[Range Params] got naccess_slots_min: %d", v165, 8u);
            }

            if ((int)[v118 intValue] <= 0)
            {
              v86 = (id)qword_1008ABDE0;
              if (os_log_type_enabled(v86, OS_LOG_TYPE_ERROR)) {
                sub_10040C500((uint64_t)v165, (int)[v118 intValue]);
              }

              if (a3)
              {
                NSErrorUserInfoKey v151 = NSLocalizedDescriptionKey;
                CFStringRef v152 = @"got invalid naccess_slots_max.";
                v87 = +[NSDictionary dictionaryWithObjects:&v152 forKeys:&v151 count:1];
                PRErrorWithCodeAndUserInfo(100, v87);
                *a3 = (id)objc_claimAutoreleasedReturnValue();
              }
            }
            unsigned __int8 v88 = [v118 integerValue];
            if (!a2[107]) {
              a2[107] = 1;
            }
            a2[106] = v88;
            v89 = (id)qword_1008ABDE0;
            if (os_log_type_enabled(v89, OS_LOG_TYPE_DEFAULT))
            {
              if (!a2[107]) {
                sub_10000AE44();
              }
              int v90 = a2[106];
              *(_DWORD *)v149 = 67109120;
              int v150 = v90;
              _os_log_impl((void *)&_mh_execute_header, v89, OS_LOG_TYPE_DEFAULT, "[Range Params] got naccess_slots_max: %d", v149, 8u);
            }

            if (v7)
            {
              objc_opt_class();
              if (objc_opt_isKindOfClass())
              {
                if ([v7 intValue])
                {
                  if ([v7 intValue] == 1)
                  {
                    int v91 = [v122 intValue];
                    if (v91 > (int)[v118 intValue])
                    {
                      v92 = (id)qword_1008ABDE0;
                      if (os_log_type_enabled(v92, OS_LOG_TYPE_ERROR)) {
                        sub_10040C4CC();
                      }

                      if (a3)
                      {
                        NSErrorUserInfoKey v145 = NSLocalizedDescriptionKey;
                        CFStringRef v146 = @"naccess_slots_min must be less than or equal to naccess_slots_max for responder.";
                        v93 = +[NSDictionary dictionaryWithObjects:&v146 forKeys:&v145 count:1];
                        v94 = PRErrorWithCodeAndUserInfo(100, v93);
LABEL_242:
                        *a3 = v94;
                      }
                    }
                  }
                }
                else
                {
                  unsigned int v96 = [v122 intValue];
                  if (v96 != [v118 intValue])
                  {
                    v97 = (id)qword_1008ABDE0;
                    if (os_log_type_enabled(v97, OS_LOG_TYPE_ERROR)) {
                      sub_10040C498();
                    }

                    if (a3)
                    {
                      NSErrorUserInfoKey v147 = NSLocalizedDescriptionKey;
                      CFStringRef v148 = @"naccess_slots_min must equal naccess_slots_max for initiator.";
                      v93 = +[NSDictionary dictionaryWithObjects:&v148 forKeys:&v147 count:1];
                      v94 = PRErrorWithCodeAndUserInfo(100, v93);
                      goto LABEL_242;
                    }
                  }
                }
              }
            }
          }
        }
      }
      if (v121)
      {
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & (v117 != 0)) == 1)
        {
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            signed int v98 = [v121 intValue];
            if ((uint64_t)[v117 integerValue] >= v98)
            {
              if ((int)[v121 intValue] >= 0x10000)
              {
                v101 = (id)qword_1008ABDE0;
                if (os_log_type_enabled(v101, OS_LOG_TYPE_ERROR)) {
                  sub_10040C460((uint64_t)v149, (int)[v121 intValue]);
                }

                if (a3)
                {
                  NSErrorUserInfoKey v141 = NSLocalizedDescriptionKey;
                  CFStringRef v142 = @"got invalid interval_min_ms.";
                  v102 = +[NSDictionary dictionaryWithObjects:&v142 forKeys:&v141 count:1];
                  PRErrorWithCodeAndUserInfo(100, v102);
                  *a3 = (id)objc_claimAutoreleasedReturnValue();
                }
              }
              unsigned __int16 v103 = (unsigned __int16)[v121 integerValue];
              if (!a2[98]) {
                a2[98] = 1;
              }
              *((_WORD *)a2 + 48) = v103;
              v104 = (id)qword_1008ABDE0;
              if (os_log_type_enabled(v104, OS_LOG_TYPE_DEFAULT))
              {
                if (!a2[98]) {
                  sub_10000AE44();
                }
                int v105 = *((unsigned __int16 *)a2 + 48);
                *(_DWORD *)v139 = 67109120;
                int v140 = v105;
                _os_log_impl((void *)&_mh_execute_header, v104, OS_LOG_TYPE_DEFAULT, "[Range Params] got interval_min_ms: %d", v139, 8u);
              }

              if ((int)[v117 intValue] >= 0x10000)
              {
                v106 = (id)qword_1008ABDE0;
                if (os_log_type_enabled(v106, OS_LOG_TYPE_ERROR)) {
                  sub_10040C428((uint64_t)v139, (int)[v117 intValue]);
                }

                if (a3)
                {
                  NSErrorUserInfoKey v137 = NSLocalizedDescriptionKey;
                  CFStringRef v138 = @"got invalid interval_max_ms.";
                  v107 = +[NSDictionary dictionaryWithObjects:&v138 forKeys:&v137 count:1];
                  PRErrorWithCodeAndUserInfo(100, v107);
                  *a3 = (id)objc_claimAutoreleasedReturnValue();
                }
              }
              unsigned __int16 v108 = (unsigned __int16)[v117 integerValue];
              if (!a2[102]) {
                a2[102] = 1;
              }
              *((_WORD *)a2 + 50) = v108;
              v100 = (id)qword_1008ABDE0;
              if (os_log_type_enabled(v100, OS_LOG_TYPE_DEFAULT))
              {
                if (!a2[102]) {
                  sub_10000AE44();
                }
                int v109 = *((unsigned __int16 *)a2 + 50);
                *(_DWORD *)v135 = 67109120;
                int v136 = v109;
                _os_log_impl((void *)&_mh_execute_header, v100, OS_LOG_TYPE_DEFAULT, "[Range Params] got interval_max_ms: %d", v135, 8u);
              }
            }
            else
            {
              v99 = (id)qword_1008ABDE0;
              if (os_log_type_enabled(v99, OS_LOG_TYPE_ERROR)) {
                sub_10040C3F4();
              }

              if (!a3) {
                goto LABEL_272;
              }
              NSErrorUserInfoKey v143 = NSLocalizedDescriptionKey;
              CFStringRef v144 = @"interval_min_ms must be less than or equal to interval_max_ms.";
              v100 = +[NSDictionary dictionaryWithObjects:&v144 forKeys:&v143 count:1];
              PRErrorWithCodeAndUserInfo(100, v100);
              *a3 = (id)objc_claimAutoreleasedReturnValue();
            }
          }
        }
      }
LABEL_272:
      if (v119)
      {
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          unsigned __int8 v110 = [v119 integerValue];
          if (!a2[21]) {
            a2[21] = 1;
          }
          a2[20] = v110;
          v111 = (id)qword_1008ABDE0;
          if (os_log_type_enabled(v111, OS_LOG_TYPE_DEFAULT))
          {
            if (!a2[21]) {
              sub_10000AE44();
            }
            int v112 = a2[20];
            *(_DWORD *)v135 = 67109120;
            int v136 = v112;
            _os_log_impl((void *)&_mh_execute_header, v111, OS_LOG_TYPE_DEFAULT, "[Range Params] got rx_mslot_sz_250us: %d", v135, 8u);
          }
        }
      }
      if (!v120 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
      {
        uint64_t v42 = 1;
        goto LABEL_315;
      }
      unsigned __int8 v113 = [v120 integerValue];
      if (!a2[19]) {
        a2[19] = 1;
      }
      a2[18] = v113;
      uint64_t v44 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v44, OS_LOG_TYPE_DEFAULT))
      {
        if (!a2[19]) {
          sub_10000AE44();
        }
        int v114 = a2[18];
        *(_DWORD *)v135 = 67109120;
        int v136 = v114;
        _os_log_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_DEFAULT, "[Range Params] got tx_mslot_sz_250us: %d", v135, 8u);
      }
      uint64_t v42 = 1;
LABEL_288:

LABEL_315:
      goto LABEL_316;
    }
    if (![v129 intValue]
      && ![v123 intValue]
      && ![v116 intValue])
    {
      unsigned __int8 v51 = [v129 integerValue];
      if (!a2[67]) {
        a2[67] = 1;
      }
      a2[66] = v51;
      unsigned __int8 v52 = [v123 integerValue];
      if (!a2[69]) {
        a2[69] = 1;
      }
      a2[68] = v52;
      unsigned __int8 v53 = [v116 integerValue];
      if (!a2[71]) {
        a2[71] = 1;
      }
      a2[70] = v53;
      CFTypeRef v54 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT))
      {
        if (!a2[67]) {
          sub_10000AE44();
        }
        int v55 = a2[66];
        *(_DWORD *)std::string buf = 67109120;
        *(_DWORD *)&uint8_t buf[4] = v55;
        _os_log_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_DEFAULT, "[Range Params] got tx_ant_mask2: 0x%x", buf, 8u);
      }

      v56 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v56, OS_LOG_TYPE_DEFAULT))
      {
        if (!a2[69]) {
          sub_10000AE44();
        }
        int v57 = a2[68];
        *(_DWORD *)std::string buf = 67109120;
        *(_DWORD *)&uint8_t buf[4] = v57;
        _os_log_impl((void *)&_mh_execute_header, v56, OS_LOG_TYPE_DEFAULT, "[Range Params] got rx_ant_mask2: 0x%x", buf, 8u);
      }

      BOOL v40 = (id)qword_1008ABDE0;
      if (!os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_113;
      }
      if (!a2[71]) {
        sub_10000AE44();
      }
      int v58 = a2[70];
      *(_DWORD *)std::string buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = v58;
      goto LABEL_112;
    }
    if (sub_100012C24(v129))
    {
      unsigned __int8 v33 = [v129 integerValue];
      if (!a2[67]) {
        a2[67] = 1;
      }
      a2[66] = v33;
      long long v34 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
      {
        if (!a2[67]) {
          sub_10000AE44();
        }
        int v35 = a2[66];
        *(_DWORD *)std::string buf = 67109120;
        *(_DWORD *)&uint8_t buf[4] = v35;
        _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, "[Range Params] got tx_ant_mask2: 0x%x", buf, 8u);
      }

      if (sub_100012CA8(v123))
      {
        unsigned __int8 v36 = [v123 integerValue];
        if (!a2[69]) {
          a2[69] = 1;
        }
        a2[68] = v36;
        std::string v37 = (id)qword_1008ABDE0;
        if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
        {
          if (!a2[69]) {
            sub_10000AE44();
          }
          int v38 = a2[68];
          *(_DWORD *)std::string buf = 67109120;
          *(_DWORD *)&uint8_t buf[4] = v38;
          _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, "[Range Params] got rx_ant_mask2: 0x%x", buf, 8u);
        }

        if (sub_100012D04(v116, v123))
        {
          unsigned __int8 v39 = [v116 integerValue];
          if (!a2[71]) {
            a2[71] = 1;
          }
          a2[70] = v39;
          BOOL v40 = (id)qword_1008ABDE0;
          if (!os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT)) {
            goto LABEL_113;
          }
          if (!a2[71]) {
            sub_10000AE44();
          }
          int v41 = a2[70];
          *(_DWORD *)std::string buf = 67109120;
          *(_DWORD *)&uint8_t buf[4] = v41;
LABEL_112:
          _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEFAULT, "[Range Params] got rx_sync_search_ant_mask2: 0x%x", buf, 8u);
LABEL_113:

          goto LABEL_114;
        }
        CFTypeRef v50 = (id)qword_1008ABDE0;
        if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR)) {
          sub_10040C688((uint64_t)buf, (int)[v116 intValue]);
        }

        if (!a3) {
          goto LABEL_314;
        }
        NSErrorUserInfoKey v167 = NSLocalizedDescriptionKey;
        CFStringRef v168 = @"got invalid rx_sync_search_ant_mask2.";
        uint64_t v44 = +[NSDictionary dictionaryWithObjects:&v168 forKeys:&v167 count:1];
        PRErrorWithCodeAndUserInfo(100, v44);
        id v45 = (id)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        CFTypeRef v49 = (id)qword_1008ABDE0;
        if (os_log_type_enabled(v49, OS_LOG_TYPE_ERROR)) {
          sub_10040C6C0((uint64_t)buf, (int)[v123 intValue]);
        }

        if (!a3) {
          goto LABEL_314;
        }
        NSErrorUserInfoKey v169 = NSLocalizedDescriptionKey;
        CFStringRef v170 = @"got invalid rx_ant_mask2.";
        uint64_t v44 = +[NSDictionary dictionaryWithObjects:&v170 forKeys:&v169 count:1];
        PRErrorWithCodeAndUserInfo(100, v44);
        id v45 = (id)objc_claimAutoreleasedReturnValue();
      }
    }
    else
    {
      v48 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v48, OS_LOG_TYPE_ERROR)) {
        sub_10040C6F8((uint64_t)buf, (int)[v129 intValue]);
      }

      if (!a3) {
        goto LABEL_314;
      }
      NSErrorUserInfoKey v171 = NSLocalizedDescriptionKey;
      CFStringRef v172 = @"got invalid tx_ant_mask2.";
      uint64_t v44 = +[NSDictionary dictionaryWithObjects:&v172 forKeys:&v171 count:1];
      PRErrorWithCodeAndUserInfo(100, v44);
      id v45 = (id)objc_claimAutoreleasedReturnValue();
    }
LABEL_236:
    uint64_t v42 = 0;
    *a3 = v45;
    goto LABEL_288;
  }
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
    sub_10040C3C0();
  }
  if (a3)
  {
    NSErrorUserInfoKey v179 = NSLocalizedDescriptionKey;
    CFStringRef v180 = @"No user debug options provided.";
    uint64_t v7 = +[NSDictionary dictionaryWithObjects:&v180 forKeys:&v179 count:1];
    PRErrorWithCodeAndUserInfo(100, v7);
    uint64_t v42 = 0;
    *a3 = (id)objc_claimAutoreleasedReturnValue();
LABEL_316:

    goto LABEL_317;
  }
  uint64_t v42 = 0;
LABEL_317:

  return v42;
}

void sub_100012A60()
{
  __cxa_end_catch();
  JUMPOUT(0x100012B5CLL);
}

void sub_100012A84(_Unwind_Exception *exception_object, int a2)
{
  if (a2) {
    sub_100012C10(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100012A98()
{
  JUMPOUT(0x100012BFCLL);
}

void sub_100012AA4()
{
}

void sub_100012B58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *a20,void *a21,void *a22,void *a23,void *a24,void *a25,void *a26,void *a27,void *a28)
{
  _Unwind_Resume(a1);
}

void sub_100012C10(void *a1)
{
}

BOOL sub_100012C24(void *a1)
{
  id v1 = a1;
  BOOL v2 = [v1 intValue] == 1
    || [v1 intValue] == 2
    || [v1 intValue] == 4
    || [v1 intValue] == 8;

  return v2;
}

void sub_100012C98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_100012CA8(void *a1)
{
  id v1 = a1;
  if ([v1 intValue]) {
    BOOL v2 = (int)[v1 intValue] < 15;
  }
  else {
    BOOL v2 = 0;
  }

  return v2;
}

void sub_100012CF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100012D04(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  int v5 = 0;
  int v6 = 0;
  LOBYTE(v7) = [v3 intValue] != 0;
  do
  {
    int v8 = [v3 intValue];
    if (v8 >> v6 >= 0) {
      int v9 = (v8 >> v6) & 1;
    }
    else {
      int v9 = -((v8 >> v6) & 1);
    }
    v5 += v9;
    unsigned int v7 = (v5 < 3) & v7;
    ++v6;
  }
  while (v6 != 4);
  unsigned int v10 = [v3 intValue];
  unsigned int v11 = [v4 intValue];
  if ((v11 & v10) == [v3 intValue]) {
    uint64_t v12 = v7;
  }
  else {
    uint64_t v12 = 0;
  }

  return v12;
}

void sub_100012DC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100012DE0(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = v3;
  if (v3)
  {
    uint64_t v5 = PRDebugConfigArgDebugLevel;
    int v6 = [v3 objectForKey:PRDebugConfigArgDebugLevel];
    if (v6)
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        unsigned int v7 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)std::string buf = 138412290;
          unsigned __int8 v18 = v6;
          _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "[Debug Options] got debugLevel: %@", buf, 0xCu);
        }
        if ((int)[v6 intValue] < 1 || (int)objc_msgSend(v6, "intValue") >= 4)
        {
          if (!a2)
          {
            uint64_t v9 = 0;
            goto LABEL_21;
          }
          NSErrorUserInfoKey v15 = NSLocalizedDescriptionKey;
          CFStringRef v16 = @"Invalid debug level. Only 1-3 allowed.";
          int v8 = +[NSDictionary dictionaryWithObjects:&v16 forKeys:&v15 count:1];
          PRErrorWithCodeAndUserInfo(100, v8);
          uint64_t v9 = 0;
          *a2 = (id)objc_claimAutoreleasedReturnValue();
          goto LABEL_20;
        }
        unsigned int v10 = +[PRGlobalDebugSettings sharedSettings];
        [v10 setObject:v6 forKey:v5];
      }
    }
    uint64_t v11 = PRDebugConfigArgLeadingEdgeThresholds;
    int v8 = [v4 objectForKey:PRDebugConfigArgLeadingEdgeThresholds];
    if (v8)
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        uint64_t v12 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)std::string buf = 138412290;
          unsigned __int8 v18 = v8;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "[Debug Options] got LE thresholds: %@", buf, 0xCu);
        }
        uint64_t v13 = +[PRGlobalDebugSettings sharedSettings];
        [v13 setObject:v8 forKey:v11];
      }
    }
    uint64_t v9 = 1;
LABEL_20:

    goto LABEL_21;
  }
  if (a2)
  {
    NSErrorUserInfoKey v19 = NSLocalizedDescriptionKey;
    CFStringRef v20 = @"No user global debug options provided.";
    int v6 = +[NSDictionary dictionaryWithObjects:&v20 forKeys:&v19 count:1];
    PRErrorWithCodeAndUserInfo(999, v6);
    uint64_t v9 = 0;
    *a2 = (id)objc_claimAutoreleasedReturnValue();
LABEL_21:

    goto LABEL_22;
  }
  uint64_t v9 = 0;
LABEL_22:

  return v9;
}

void sub_1000130B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001311C(void *a1, int a2, os_log_t log, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, a5, 8u);
}

uint64_t sub_100013138(uint64_t result, int a2, float a3)
{
  *(float *)uint64_t result = a3;
  *(_DWORD *)(result + 4) = a2;
  return result;
}

void sub_100013144()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C888, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C888))
  {
    sub_100004950(qword_10089C870, "PRRoseProviderNetworkListener");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C870, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C888);
  }
}

void sub_1000131DC(_Unwind_Exception *a1)
{
}

void sub_1000131F4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8A8))
  {
    sub_100004950(&qword_10089C890, "com.apple.nearbyd.accessory.download");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C890, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8A8);
  }
}

void sub_10001328C(_Unwind_Exception *a1)
{
}

void sub_1000132A4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8C8))
  {
    sub_100004950(&qword_10089C8B0, "com.apple.nearbyd.accessory.files");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C8B0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8C8);
  }
}

void sub_10001333C(_Unwind_Exception *a1)
{
}

void sub_100013354()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8E8))
  {
    sub_100004950(qword_10089C8D0, "MA_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8D0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8E8);
  }
}

void sub_1000133EC(_Unwind_Exception *a1)
{
}

void sub_100013404()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C908, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C908))
  {
    sub_100004950(qword_10089C8F0, "MB_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8F0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C908);
  }
}

void sub_10001349C(_Unwind_Exception *a1)
{
}

void sub_1000134B4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C928, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C928))
  {
    sub_100004950(qword_10089C910, "D");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C910, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C928);
  }
}

void sub_10001354C(_Unwind_Exception *a1)
{
}

void sub_100013564()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C948, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C948))
  {
    sub_100004950(&qword_10089C930, "A");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C930, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C948);
  }
}

void sub_1000135FC(_Unwind_Exception *a1)
{
}

void sub_100013614()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C968, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C968))
  {
    sub_100004950(qword_10089C950, "FAS.bin");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C950, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C968);
  }
}

void sub_1000136AC(_Unwind_Exception *a1)
{
}

void sub_1000136C4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C988, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C988))
  {
    qword_10089C970 = 0;
    qword_10089C978 = 0;
    qword_10089C980 = 0;
    uint64_t v0 = operator new(0x30uLL);
    qword_10089C978 = (uint64_t)(v0 + 3);
    qword_10089C980 = (uint64_t)(v0 + 3);
    _OWORD *v0 = xmmword_10049FEB0;
    v0[1] = unk_10049FEC0;
    v0[2] = xmmword_10049FED0;
    qword_10089C970 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_100008CAC, &qword_10089C970, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C988);
  }
}

void sub_100013780(_Unwind_Exception *a1)
{
}

void sub_100013798()
{
  sub_10039D144();
  id v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  id v3 = std::string::append(&v38, ".bin");
  long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_10089F950 = v3->__r_.__value_.__r.__words[2];
  xmmword_10089F940 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089F940, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  unsigned int v7 = std::string::append(&v38, ".bin");
  long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_10089F968 = v7->__r_.__value_.__r.__words[2];
  xmmword_10089F958 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089F958, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  uint64_t v11 = std::string::append(&v38, ".bin");
  long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_10089F980 = v11->__r_.__value_.__r.__words[2];
  xmmword_10089F970 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089F970, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  NSErrorUserInfoKey v15 = std::string::append(&v38, ".bin");
  long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_10089F998 = v15->__r_.__value_.__r.__words[2];
  xmmword_10089F988 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089F988, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  NSErrorUserInfoKey v19 = std::string::append(&v38, ".bin");
  long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_10089F9B0 = v19->__r_.__value_.__r.__words[2];
  xmmword_10089F9A0 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089F9A0, (void *)&_mh_execute_header);
  sub_10039D144();
  unsigned __int16 v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  int v23 = std::string::append(&v38, ".bin");
  long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_10089F9C8 = v23->__r_.__value_.__r.__words[2];
  xmmword_10089F9B8 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089F9B8, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  unsigned __int8 v27 = std::string::append(&v38, ".bin");
  long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_10089F9E0 = v27->__r_.__value_.__r.__words[2];
  xmmword_10089F9D0 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089F9D0, (void *)&_mh_execute_header);
  sub_10039D144();
  int v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  __int16 v31 = std::string::append(&v38, ".bin");
  long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_10089F9F8 = v31->__r_.__value_.__r.__words[2];
  xmmword_10089F9E8 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089F9E8, (void *)&_mh_execute_header);
  sub_10039D144();
  unsigned __int8 v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  int v35 = std::string::append(&v38, ".bin");
  long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_10089FA10 = v35->__r_.__value_.__r.__words[2];
  xmmword_10089FA00 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FA00, (void *)&_mh_execute_header);
}

void sub_100013DD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100013E4C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_1008464A0[a1]);
}

void *sub_100013E60@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_1008464F8[a1]);
}

void *sub_100013E74@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100846540[a1]);
}

void *sub_100013E88@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100846560[a1]);
}

void sub_10001412C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id location)
{
  _Unwind_Resume(a1);
}

void sub_1000142A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100014474(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14)
{
  if (a10) {
    std::__shared_weak_count::__release_weak(a10);
  }
  if (a12) {
    sub_10001A970(a12);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000145EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_10001A970(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_10001470C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_100014738(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10040C810();
    }
  }
  else
  {
    [v5 didFailWithError:*(void *)(a1 + 32)];
  }
}

void sub_1000147B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100014914(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained handleError:*(void *)(a1 + 32)];
}

void sub_100014964(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100014A38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, ...)
{
  va_start(va, a7);

  sub_10001A934((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100014A58(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10040C810();
    }
  }
  else
  {
    [v5 didReceiveNewSolutions:*(void *)(a1 + 32)];
  }
}

void sub_100014AD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100014B58(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10040C810();
    }
  }
  else
  {
    [v5 rangingServiceDidUpdateState:*(void *)(a1 + 32) cause:*(void *)(a1 + 40)];
  }
}

void sub_100014BD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100014C84(_Unwind_Exception *a1)
{
  sub_10001A934(v1 - 32);
  _Unwind_Resume(a1);
}

void sub_100014C98(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10040C810();
    }
  }
  else
  {
    [v5 rangingRequestDidUpdateStatus:*(void *)(a1 + 32)];
  }
}

void sub_100014D18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100014FA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001508C(uint64_t a1)
{
  long long v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));

  if (WeakRetained)
  {
    long long v4 = objc_loadWeakRetained(v2);
    switch(*(void *)(a1 + 48))
    {
      case 0:
        id v5 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)NSErrorUserInfoKey v19 = 0;
          _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "PRRangingManager PRRangingRequestStatusUnknown #companion-retry", v19, 2u);
        }
        NSErrorUserInfoKey v20 = NSLocalizedDescriptionKey;
        CFStringRef v21 = @"Unexpected PRRangingRequestStatusUnknown";
        id v6 = +[NSDictionary dictionaryWithObjects:&v21 forKeys:&v20 count:1];
        unsigned int v7 = PRErrorWithCodeAndUserInfo(999, v6);

        [v4 handleError:v7];
        break;
      case 1:
        long long v8 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)NSErrorUserInfoKey v19 = 0;
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "PRRangingManager PRRangingRequestStatusDidStart #companion-retry", v19, 2u);
        }
        if (v4[16] != 3)
        {
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
            sub_10040C878();
          }
          NSErrorUserInfoKey v26 = NSLocalizedDescriptionKey;
          CFStringRef v27 = @"Unexpected PRRangingRequestStatusDidStart";
          uint64_t v9 = +[NSDictionary dictionaryWithObjects:&v27 forKeys:&v26 count:1];
          long long v10 = PRErrorWithCodeAndUserInfo(999, v9);

          [v4 handleError:v10];
        }
        int v11 = 4;
        goto LABEL_30;
      case 2:
        long long v12 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)NSErrorUserInfoKey v19 = 0;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "PRRangingManager PRRangingRequestStatusStopped #companion-retry", v19, 2u);
        }
        if ((v4[16] & 0xFFFFFFFE) != 4)
        {
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
            sub_10040C8E0();
          }
          NSErrorUserInfoKey v22 = NSLocalizedDescriptionKey;
          CFStringRef v23 = @"Unexpected PRRangingRequestStatusStopped";
          uint64_t v13 = +[NSDictionary dictionaryWithObjects:&v23 forKeys:&v22 count:1];
          long long v14 = PRErrorWithCodeAndUserInfo(999, v13);

          [v4 handleError:v14];
        }
        v4[16] = 1;
        [v4 combineAndReportLocalAndCompanionRangingRequestStatus];
        break;
      case 3:
        NSErrorUserInfoKey v15 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)NSErrorUserInfoKey v19 = 0;
          _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "PRRangingManager PRRangingRequestStatusInvalidated #companion-retry", v19, 2u);
        }
        [v4 reportRangingRequestStatusUpdate:*(void *)(a1 + 48)];
        break;
      case 4:
        long long v16 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)NSErrorUserInfoKey v19 = 0;
          _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "PRRangingManager PRRangingRequestStatusFailedToStart #companion-retry", v19, 2u);
        }
        if (v4[16] != 3)
        {
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
            sub_10040C8AC();
          }
          NSErrorUserInfoKey v24 = NSLocalizedDescriptionKey;
          CFStringRef v25 = @"Unexpected PRRangingRequestStatusFailedToStart";
          uint64_t v17 = +[NSDictionary dictionaryWithObjects:&v25 forKeys:&v24 count:1];
          long long v18 = PRErrorWithCodeAndUserInfo(999, v17);

          [v4 handleError:v18];
        }
        int v11 = 1;
LABEL_30:
        v4[16] = v11;
        [*(id *)(a1 + 32) combineAndReportLocalAndCompanionRangingRequestStatus];
        break;
      default:
        break;
    }
  }
}

void sub_1000154D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100015608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_100015620(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10040C810();
    }
  }
  else
  {
    [v5 remoteDevice:*(void *)(a1 + 32) didChangeState:*(void *)(a1 + 40)];
  }
}

void sub_1000156A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100015780(uint64_t a1)
{
  long long v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));

  if (WeakRetained)
  {
    long long v4 = (id *)objc_loadWeakRetained(v2);
    id v5 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v33) = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "PRRangingManager didReceiveSessionStartNotification #companion-retry", (uint8_t *)&v33, 2u);
    }
    if (*((_DWORD *)v4 + 16) == 2)
    {
      if (*((_DWORD *)v4 + 17) == 3)
      {
        id v6 = *(void **)(a1 + 32);
        if (!v6
          || ![v6 notificationType]
          && ([*(id *)(a1 + 32) bluetoothConnectionEventCounterValue],
              unsigned int v7 = objc_claimAutoreleasedReturnValue(),
              BOOL v8 = v7 == 0,
              v7,
              v8))
        {
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
            sub_10040C914();
          }
          NSErrorUserInfoKey v35 = NSLocalizedDescriptionKey;
          CFStringRef v36 = @"Unexpected didReceiveSessionStartNotification notification values";
          uint64_t v9 = +[NSDictionary dictionaryWithObjects:&v36 forKeys:&v35 count:1];
          long long v10 = PRErrorWithCodeAndUserInfo(999, v9);

          [v4 handleError:v10];
        }
        *((_DWORD *)v4 + 16) = 3;
        int v11 = [*(id *)(a1 + 32) bluetoothConnectionEventCounterValue];
        long long v12 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          int v33 = 138412290;
          long long v34 = v11;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "PRRangingManager futureEventCounterValue == %@ #companion-retry", (uint8_t *)&v33, 0xCu);
        }
        uint64_t v13 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          LOWORD(v33) = 0;
          _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "_companionRangingManager startRangingWithParameters #companion-retry", (uint8_t *)&v33, 2u);
        }
        unsigned __int16 v14 = (unsigned __int16)[v11 intValue];
        id v15 = v4[13];
        long long v16 = [v4[14] UUID];
        [v15 startRangingOnDevice:v16 targetEventCounter:v14];

        *((_DWORD *)v4 + 17) = 4;
      }
      else
      {
        CFStringRef v25 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
          sub_10040C954((uint64_t)v4 + 68, v25, v26, v27, v28, v29, v30, v31);
        }
        NSErrorUserInfoKey v37 = NSLocalizedDescriptionKey;
        CFStringRef v38 = @"Unexpected didReceiveSessionStartNotification due to companionRangingState";
        long long v32 = +[NSDictionary dictionaryWithObjects:&v38 forKeys:&v37 count:1];
        int v11 = PRErrorWithCodeAndUserInfo(999, v32);

        [v4 handleError:v11];
      }
    }
    else
    {
      uint64_t v17 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
        sub_10040C9C4((uint64_t)(v4 + 8), v17, v18, v19, v20, v21, v22, v23);
      }
      NSErrorUserInfoKey v39 = NSLocalizedDescriptionKey;
      CFStringRef v40 = @"Unexpected didReceiveSessionStartNotification due to localRangingState";
      NSErrorUserInfoKey v24 = +[NSDictionary dictionaryWithObjects:&v40 forKeys:&v39 count:1];
      int v11 = PRErrorWithCodeAndUserInfo(999, v24);

      [v4 handleError:v11];
    }
  }
}

void sub_100015AF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001661C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, std::__shared_weak_count *a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,std::__shared_weak_count *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  objc_sync_exit(v32);
  if (a10) {
    sub_10001A970(a10);
  }

  _Unwind_Resume(a1);
}

void sub_100016CAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100016EE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100017370(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  _Unwind_Resume(a1);
}

void sub_100017628(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100017B00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, std::__shared_weak_count *a13)
{
  _Unwind_Resume(a1);
}

void sub_100017DC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  if (a11) {
    std::__shared_weak_count::__release_weak(a11);
  }
  if (a14) {
    sub_10001A970(a14);
  }

  _Unwind_Resume(a1);
}

void sub_100017F5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000180D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000185F8(_Unwind_Exception *a1)
{
  if (v1) {
    sub_10001A970(v1);
  }
  _Unwind_Resume(a1);
}

void sub_100018838(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100018A80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100018D6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100019064(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100019468(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000197EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100019ADC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100019F4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001A1B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001A464(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001A578(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001A750(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_10001A8A4(void *a1, void *a2)
{
  id v3 = (std::__shared_weak_count *)a2[1];
  *a1 = *a2;
  if (!v3)
  {
    a1[1] = 0;
LABEL_5:
    sub_10001A8E8();
  }
  long long v4 = std::__shared_weak_count::lock(v3);
  a1[1] = v4;
  if (!v4) {
    goto LABEL_5;
  }
  return a1;
}

void sub_10001A8E8()
{
  exception = __cxa_allocate_exception(8uLL);
}

uint64_t sub_10001A934(uint64_t a1)
{
  id v2 = *(id *)(a1 + 8);

  return a1;
}

void sub_10001A970(std::__shared_weak_count *a1)
{
  if (!atomic_fetch_add(&a1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))a1->__on_zero_shared)(a1);
    std::__shared_weak_count::__release_weak(a1);
  }
}

void sub_10001A9E4(id *a1@<X1>, void *a2@<X8>)
{
  long long v4 = operator new(0x48uLL);
  sub_10001AA58(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;

  sub_10001ABCC((uint64_t)a2, v4 + 4, (uint64_t)(v4 + 3));
}

void sub_10001AA44(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_10001AA58(void *a1, id *location)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_100846460;
  sub_10001AB64((int)&v4, (uint64_t)(a1 + 3), location);
  return a1;
}

void sub_10001AAB4(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_10001AAC8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100846460;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10001AAE8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100846460;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_10001AB3C(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_10001AB64(int a1, uint64_t a2, id *location)
{
  id WeakRetained = objc_loadWeakRetained(location);
  sub_1002CA5B0(a2, WeakRetained);
}

void sub_10001ABB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10001ABCC(uint64_t a1, void *a2, uint64_t a3)
{
  if (a2)
  {
    char v4 = (std::__shared_weak_count *)a2[1];
    if (!v4 || v4->__shared_owners_ == -1)
    {
      id v5 = *(std::__shared_weak_count **)(a1 + 8);
      if (v5)
      {
        atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v5->__shared_weak_owners_, 1uLL, memory_order_relaxed);
        char v4 = (std::__shared_weak_count *)a2[1];
      }
      *a2 = a3;
      a2[1] = v5;
      if (v4) {
        std::__shared_weak_count::__release_weak(v4);
      }
      if (v5)
      {
        sub_10001A970(v5);
      }
    }
  }
}

void sub_10001AC6C(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void sub_10001AC98(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 8u);
}

void sub_10001ACCC(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x12u);
}

void sub_10001ACEC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C888, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C888))
  {
    sub_100004950(qword_10089C870, "PRRoseProviderNetworkListener");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C870, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C888);
  }
}

void sub_10001AD84(_Unwind_Exception *a1)
{
}

void sub_10001AD9C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8A8))
  {
    sub_100004950(&qword_10089C890, "com.apple.nearbyd.accessory.download");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C890, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8A8);
  }
}

void sub_10001AE34(_Unwind_Exception *a1)
{
}

void sub_10001AE4C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8C8))
  {
    sub_100004950(&qword_10089C8B0, "com.apple.nearbyd.accessory.files");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C8B0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8C8);
  }
}

void sub_10001AEE4(_Unwind_Exception *a1)
{
}

void sub_10001AEFC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8E8))
  {
    sub_100004950(qword_10089C8D0, "MA_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8D0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8E8);
  }
}

void sub_10001AF94(_Unwind_Exception *a1)
{
}

void sub_10001AFAC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C908, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C908))
  {
    sub_100004950(qword_10089C8F0, "MB_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8F0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C908);
  }
}

void sub_10001B044(_Unwind_Exception *a1)
{
}

void sub_10001B05C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C928, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C928))
  {
    sub_100004950(qword_10089C910, "D");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C910, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C928);
  }
}

void sub_10001B0F4(_Unwind_Exception *a1)
{
}

void sub_10001B10C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C948, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C948))
  {
    sub_100004950(&qword_10089C930, "A");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C930, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C948);
  }
}

void sub_10001B1A4(_Unwind_Exception *a1)
{
}

void sub_10001B1BC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C968, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C968))
  {
    sub_100004950(qword_10089C950, "FAS.bin");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C950, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C968);
  }
}

void sub_10001B254(_Unwind_Exception *a1)
{
}

void sub_10001B26C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C988, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C988))
  {
    qword_10089C970 = 0;
    qword_10089C978 = 0;
    qword_10089C980 = 0;
    uint64_t v0 = operator new(0x30uLL);
    qword_10089C978 = (uint64_t)(v0 + 3);
    qword_10089C980 = (uint64_t)(v0 + 3);
    _OWORD *v0 = xmmword_10049FF08;
    v0[1] = unk_10049FF18;
    v0[2] = xmmword_10049FF28;
    qword_10089C970 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_100008CAC, &qword_10089C970, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C988);
  }
}

void sub_10001B328(_Unwind_Exception *a1)
{
}

void sub_10001B340()
{
  sub_10039D144();
  uint64_t v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  id v3 = std::string::append(&v38, ".bin");
  long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_10089FA28 = v3->__r_.__value_.__r.__words[2];
  xmmword_10089FA18 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FA18, (void *)&_mh_execute_header);
  sub_10039D144();
  id v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  unsigned int v7 = std::string::append(&v38, ".bin");
  long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_10089FA40 = v7->__r_.__value_.__r.__words[2];
  xmmword_10089FA30 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FA30, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  int v11 = std::string::append(&v38, ".bin");
  long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_10089FA58 = v11->__r_.__value_.__r.__words[2];
  xmmword_10089FA48 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FA48, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  id v15 = std::string::append(&v38, ".bin");
  long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_10089FA70 = v15->__r_.__value_.__r.__words[2];
  xmmword_10089FA60 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FA60, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  uint64_t v19 = std::string::append(&v38, ".bin");
  long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_10089FA88 = v19->__r_.__value_.__r.__words[2];
  xmmword_10089FA78 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FA78, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  uint64_t v23 = std::string::append(&v38, ".bin");
  long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_10089FAA0 = v23->__r_.__value_.__r.__words[2];
  xmmword_10089FA90 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FA90, (void *)&_mh_execute_header);
  sub_10039D144();
  CFStringRef v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  uint64_t v27 = std::string::append(&v38, ".bin");
  long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_10089FAB8 = v27->__r_.__value_.__r.__words[2];
  xmmword_10089FAA8 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FAA8, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  uint64_t v31 = std::string::append(&v38, ".bin");
  long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_10089FAD0 = v31->__r_.__value_.__r.__words[2];
  xmmword_10089FAC0 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FAC0, (void *)&_mh_execute_header);
  sub_10039D144();
  int v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  NSErrorUserInfoKey v35 = std::string::append(&v38, ".bin");
  long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_10089FAE8 = v35->__r_.__value_.__r.__words[2];
  xmmword_10089FAD8 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FAD8, (void *)&_mh_execute_header);
}

void sub_10001B980(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10001B9F4@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_1008465F8[a1]);
}

void *sub_10001BA08@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100846650[a1]);
}

void *sub_10001BA1C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100846698[a1]);
}

void *sub_10001BA30@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_1008466B8[a1]);
}

void sub_10001BA74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001BC5C(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_10001BDBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10001BF34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001C044(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_10001C070(uint64_t a1, void *a2)
{
  id v3 = a2;
  xpc_activity_state_t state = xpc_activity_get_state(v3);
  id v5 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string buf = 134217984;
    xpc_activity_state_t v13 = state;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "PRXPCActivityManager state: %ld", buf, 0xCu);
  }
  if (state == 2)
  {
    uint64_t v7 = *(void *)(a1 + 40);
    long long v8 = *(NSObject **)(v7 + 8);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_10001C21C;
    v10[3] = &unk_100846588;
    v10[4] = v7;
    id v11 = *(id *)(a1 + 48);
    dispatch_sync(v8, v10);
  }
  else if (state)
  {
    uint64_t v9 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
      sub_10040CF80(state, v9);
    }
  }
  else
  {
    xpc_object_t v6 = xpc_activity_copy_criteria(v3);
    if (!v6) {
      xpc_activity_set_criteria(v3, *(xpc_object_t *)(a1 + 32));
    }
  }
}

void sub_10001C1FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_10001C21C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) runActivityWithIdentifier:*(void *)(a1 + 40)];
}

void sub_10001C3B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001C684(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

id sub_10001C6B0(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_10001C6FC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C888, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C888))
  {
    sub_100004950(qword_10089C870, "PRRoseProviderNetworkListener");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C870, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C888);
  }
}

void sub_10001C794(_Unwind_Exception *a1)
{
}

void sub_10001C7AC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8A8))
  {
    sub_100004950(&qword_10089C890, "com.apple.nearbyd.accessory.download");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C890, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8A8);
  }
}

void sub_10001C844(_Unwind_Exception *a1)
{
}

void sub_10001C85C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8C8))
  {
    sub_100004950(&qword_10089C8B0, "com.apple.nearbyd.accessory.files");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C8B0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8C8);
  }
}

void sub_10001C8F4(_Unwind_Exception *a1)
{
}

void sub_10001C90C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8E8))
  {
    sub_100004950(qword_10089C8D0, "MA_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8D0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8E8);
  }
}

void sub_10001C9A4(_Unwind_Exception *a1)
{
}

void sub_10001C9BC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C908, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C908))
  {
    sub_100004950(qword_10089C8F0, "MB_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8F0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C908);
  }
}

void sub_10001CA54(_Unwind_Exception *a1)
{
}

void sub_10001CA6C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C928, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C928))
  {
    sub_100004950(qword_10089C910, "D");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C910, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C928);
  }
}

void sub_10001CB04(_Unwind_Exception *a1)
{
}

void sub_10001CB1C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C948, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C948))
  {
    sub_100004950(&qword_10089C930, "A");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C930, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C948);
  }
}

void sub_10001CBB4(_Unwind_Exception *a1)
{
}

void sub_10001CBCC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C968, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C968))
  {
    sub_100004950(qword_10089C950, "FAS.bin");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C950, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C968);
  }
}

void sub_10001CC64(_Unwind_Exception *a1)
{
}

void sub_10001CC7C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C988, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C988))
  {
    qword_10089C970 = 0;
    qword_10089C978 = 0;
    qword_10089C980 = 0;
    uint64_t v0 = operator new(0x30uLL);
    qword_10089C978 = (uint64_t)(v0 + 3);
    qword_10089C980 = (uint64_t)(v0 + 3);
    _OWORD *v0 = xmmword_10049FF88;
    v0[1] = unk_10049FF98;
    v0[2] = xmmword_10049FFA8;
    qword_10089C970 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_100008CAC, &qword_10089C970, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C988);
  }
}

void sub_10001CD38(_Unwind_Exception *a1)
{
}

void sub_10001CD50()
{
  sub_10039D144();
  uint64_t v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  id v3 = std::string::append(&v38, ".bin");
  long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_10089FB00 = v3->__r_.__value_.__r.__words[2];
  xmmword_10089FAF0 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FAF0, (void *)&_mh_execute_header);
  sub_10039D144();
  id v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  uint64_t v7 = std::string::append(&v38, ".bin");
  long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_10089FB18 = v7->__r_.__value_.__r.__words[2];
  xmmword_10089FB08 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FB08, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  id v11 = std::string::append(&v38, ".bin");
  long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_10089FB30 = v11->__r_.__value_.__r.__words[2];
  xmmword_10089FB20 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FB20, (void *)&_mh_execute_header);
  sub_10039D144();
  xpc_activity_state_t v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  id v15 = std::string::append(&v38, ".bin");
  long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_10089FB48 = v15->__r_.__value_.__r.__words[2];
  xmmword_10089FB38 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FB38, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  uint64_t v19 = std::string::append(&v38, ".bin");
  long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_10089FB60 = v19->__r_.__value_.__r.__words[2];
  xmmword_10089FB50 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FB50, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  uint64_t v23 = std::string::append(&v38, ".bin");
  long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_10089FB78 = v23->__r_.__value_.__r.__words[2];
  xmmword_10089FB68 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FB68, (void *)&_mh_execute_header);
  sub_10039D144();
  CFStringRef v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  uint64_t v27 = std::string::append(&v38, ".bin");
  long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_10089FB90 = v27->__r_.__value_.__r.__words[2];
  xmmword_10089FB80 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FB80, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  uint64_t v31 = std::string::append(&v38, ".bin");
  long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_10089FBA8 = v31->__r_.__value_.__r.__words[2];
  xmmword_10089FB98 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FB98, (void *)&_mh_execute_header);
  sub_10039D144();
  int v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  NSErrorUserInfoKey v35 = std::string::append(&v38, ".bin");
  long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_10089FBC0 = v35->__r_.__value_.__r.__words[2];
  xmmword_10089FBB0 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FBB0, (void *)&_mh_execute_header);
}

void sub_10001D390(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10001D404()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089FDA0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089FDA0))
  {
    sub_10001EEF4((uint64_t)&unk_10089FBC8);
    __cxa_atexit((void (*)(void *))sub_10001D4A0, &unk_10089FBC8, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089FDA0);
  }
  return &unk_10089FBC8;
}

void sub_10001D488(_Unwind_Exception *a1)
{
}

unint64_t sub_10001D4A4(uint64_t a1, void *a2)
{
  id v3 = a2;
  long long v4 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  if (sub_10001D658())
  {
    id v5 = [v3 length];
    long long v6 = qword_1008ABDE0;
    if (v5 == (id)6)
    {
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        int v20 = 138412290;
        id v21 = v3;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#wifi-service,New self ID: %@", (uint8_t *)&v20, 0xCu);
      }
      id v7 = [v3 copy];
      long long v8 = *(void **)(a1 + 192);
      *(void *)(a1 + 192) = v7;

      *(unsigned char *)(a1 + 54) = 1;
      sub_10001DA2C(a1, 0.0);
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
    else
    {
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
        sub_10040D118(v6, v12, v13, v14, v15, v16, v17, v18);
      }
      uint64_t v9 = &_mh_execute_header;
      uint64_t v10 = 2;
    }
  }
  else
  {
    id v11 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
    {
      LOWORD(v20) = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "#wifi-service,ignoring self id on unsupported platform", (uint8_t *)&v20, 2u);
    }
    uint64_t v10 = 0;
    uint64_t v9 = &_mh_execute_header;
  }
  std::mutex::unlock(v4);

  return v10 | (unint64_t)v9;
}

void sub_10001D630(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10001D658()
{
  uint64_t v0 = sub_1002220CC();
  uint64_t v1 = sub_100221F28();
  long long v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    int v10 = 138412290;
    id v11 = v0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#wifi-service,wifi chipset: %@", (uint8_t *)&v10, 0xCu);
  }
  id v3 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    int v10 = 138412290;
    id v11 = v1;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#wifi-service,productType: %@", (uint8_t *)&v10, 0xCu);
  }
  if (v0)
  {
    if ((([v0 hasPrefix:@"4357"] & 1) != 0
       || ([v0 hasPrefix:@"4377"] & 1) != 0
       || ([v0 hasPrefix:@"4378"] & 1) != 0
       || ([v0 hasPrefix:@"4387"] & 1) != 0
       || ([v0 hasPrefix:@"4388"] & 1) != 0
       || ([v0 hasPrefix:@"4399"] & 1) != 0
       || [v0 hasPrefix:@"marconi"])
      && (([v1 hasPrefix:@"iPhone"] & 1) != 0
       || ([v1 hasPrefix:@"AudioAccessory1"] & 1) != 0
       || ([v1 hasPrefix:@"Mac"] & 1) != 0
       || ([v1 hasPrefix:@"iMac"] & 1) != 0
       || ([v1 hasPrefix:@"RealityDevice"] & 1) != 0
       || ([v1 hasPrefix:@"Watch"] & 1) != 0
       || ([v1 hasPrefix:@"AudioAccessory6,1"] & 1) != 0
       || [v1 hasPrefix:@"AudioAccessory5,"]))
    {
      long long v4 = qword_1008ABDE0;
      uint64_t v5 = 1;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
      {
        LOWORD(v10) = 0;
        long long v6 = "#wifi-service,Found ranging supported capability via chipset.";
LABEL_31:
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, v6, (uint8_t *)&v10, 2u);
        goto LABEL_35;
      }
      goto LABEL_35;
    }
    long long v8 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
    {
      LOWORD(v10) = 0;
      uint64_t v9 = "#wifi-service,Ranging not supported - via chipset.";
      goto LABEL_40;
    }
    goto LABEL_34;
  }
  if (!v1)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10040D18C();
    }
    goto LABEL_34;
  }
  if (([v1 hasPrefix:@"Watch"] & 1) == 0
    && ([v1 hasPrefix:@"Mac"] & 1) == 0
    && ([v1 hasPrefix:@"iMac"] & 1) == 0
    && ([v1 hasPrefix:@"AudioAccessory6,1"] & 1) == 0
    && ![v1 hasPrefix:@"AudioAccessory5,"])
  {
    long long v8 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
    {
      LOWORD(v10) = 0;
      uint64_t v9 = "#wifi-service,Ranging not supported - via product type.";
LABEL_40:
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, v9, (uint8_t *)&v10, 2u);
    }
LABEL_34:
    uint64_t v5 = 0;
    goto LABEL_35;
  }
  long long v4 = qword_1008ABDE0;
  uint64_t v5 = 1;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
  {
    LOWORD(v10) = 0;
    long long v6 = "#wifi-service,Found ranging supported capability via product type.";
    goto LABEL_31;
  }
LABEL_35:

  return v5;
}

void sub_10001DA08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001DA2C(uint64_t a1, double a2)
{
  if (!*(unsigned char *)(a1 + 49))
  {
    *(unsigned char *)(a1 + 49) = 1;
    if (a2 <= 0.0)
    {
      uint64_t v5 = *(NSObject **)(a1 + 80);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_100020280;
      block[3] = &unk_1008466D8;
      block[4] = a1;
      dispatch_async(v5, block);
    }
    else
    {
      dispatch_time_t v3 = dispatch_time(0, (uint64_t)(a2 * 1000000000.0));
      long long v4 = *(NSObject **)(a1 + 80);
      v6[0] = _NSConcreteStackBlock;
      v6[1] = 3221225472;
      _DWORD v6[2] = sub_1000208B4;
      v6[3] = &unk_1008466D8;
      v6[4] = a1;
      dispatch_after(v3, v4, v6);
    }
  }
}

uint64_t sub_10001DB30(uint64_t a1)
{
  long long v2 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  if (sub_10001D658())
  {
    uint64_t v3 = *(void *)(a1 + 416);
    if (!v3)
    {
      uint64_t v3 = 1;
      *(void *)(a1 + 416) = 1;
    }
    *(void *)(a1 + 416) = v3 + 1;
  }
  else
  {
    long long v4 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "#wifi-service,ignoring ticket IDs on unsupported platform", v6, 2u);
    }
    uint64_t v3 = 0;
  }
  std::mutex::unlock(v2);
  return v3;
}

void sub_10001DBE4(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_10001DBF8(uint64_t a1, long long *a2, uint64_t a3, void *a4)
{
  id v7 = a4;
  std::mutex::lock((std::mutex *)(a1 + 88));
  sub_100027124((uint64_t)v9, a3);
  id v8 = v7;
  id v10 = v8;
  sub_100025750(__p, a2, (uint64_t)v9);
  sub_100026BF8((uint64_t **)(a1 + 424), (const void **)__p, (long long *)__p);

  sub_10000AF74(v13);
  if (v12 < 0) {
    operator delete(__p[0]);
  }

  sub_10000AF74(v9);
  std::mutex::unlock((std::mutex *)(a1 + 88));
}

void sub_10001DCF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id a13, char a14)
{
  sub_10001DD40((uint64_t)&a14);

  sub_10000AF74(&a9);
  std::mutex::unlock(v14);

  _Unwind_Resume(a1);
}

uint64_t sub_10001DD40(uint64_t a1)
{
  long long v2 = (void *)(a1 + 24);

  sub_10000AF74(v2);
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_10001DD88(uint64_t a1, const void **a2)
{
  long long v4 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  sub_1000271BC((uint64_t **)(a1 + 424), a2);

  std::mutex::unlock(v4);
}

void sub_10001DDE0(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

unint64_t sub_10001DDF4(uint64_t a1, uint64_t *a2)
{
  long long v4 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  if (sub_10001D658())
  {
    if (a2[1] == *a2)
    {
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
        sub_10040D1C0();
      }
      goto LABEL_22;
    }
    int v5 = sub_100049A1C(*a2);
    uint64_t v6 = *a2;
    uint64_t v7 = a2[1];
    if (*a2 != v7)
    {
      while (1)
      {
        sub_10002580C((uint64_t)v20, v6);
        BOOL v8 = sub_100049A1C((uint64_t)v20) == v5;

        sub_100026B74(v25);
        sub_100026AF0(v24);
        sub_100026A6C(v23);

        if (!v8) {
          break;
        }
        v6 += 168;
        if (v6 == v7) {
          goto LABEL_6;
        }
      }
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
        sub_10040D2C4();
      }
      goto LABEL_22;
    }
LABEL_6:
    if (!v5)
    {
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
        sub_10040D1F4();
      }
      goto LABEL_22;
    }
    double v9 = sub_100006C38();
    int v10 = *(_DWORD *)(a1 + 448);
    switch(v10)
    {
      case 0:
        double v15 = v9;
        if (v5 == 2)
        {
          uint64_t v17 = qword_1008ABDE0;
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
          {
            LOWORD(v20[0]) = 0;
            _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "#wifi-service,setting self role to responder", (uint8_t *)v20, 2u);
          }
          if (sub_10001E2F4(a1) && os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
            sub_10040D228();
          }
          *(_DWORD *)(a1 + 448) = 2;
          sub_10001E360(a1, (id **)a2);
          sub_1002D7B90(*(void *)(a1 + 64), 1022611261 * ((unint64_t)(a2[1] - *a2) >> 3), v15);
        }
        else if (v5 == 1)
        {
          uint64_t v16 = qword_1008ABDE0;
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
          {
            LOWORD(v20[0]) = 0;
            _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "#wifi-service,setting self role to initiator", (uint8_t *)v20, 2u);
          }
          if (sub_10001E2F4(a1) && os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
            sub_10040D228();
          }
          *(_DWORD *)(a1 + 448) = 1;
          sub_10001E360(a1, (id **)a2);
          sub_1002D7BC4(*(void *)(a1 + 64), 1022611261 * ((unint64_t)(a2[1] - *a2) >> 3), v15);
        }
        goto LABEL_42;
      case 1:
        if (v5 != 1)
        {
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
            sub_10040D25C();
          }
          goto LABEL_22;
        }
        break;
      case 2:
        if (v5 != 2)
        {
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
            sub_10040D290();
          }
LABEL_22:
          uint64_t v13 = &_mh_execute_header;
          uint64_t v12 = 2;
          goto LABEL_23;
        }
        break;
      default:
LABEL_42:
        uint64_t v18 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v19 = *(void *)(a1 + 232);
          LODWORD(v20[0]) = 134217984;
          *(void *)((char *)v20 + 4) = v19;
          _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "#wifi-service,start ranging - peer map holds %lu peers", (uint8_t *)v20, 0xCu);
        }
        sub_10001DA2C(a1, 0.0);
        uint64_t v13 = 0;
        uint64_t v12 = 0;
        goto LABEL_23;
    }
    sub_10001E360(a1, (id **)a2);
    goto LABEL_42;
  }
  id v11 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
  {
    LOWORD(v20[0]) = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "#wifi-service,ignoring range request on unsupported platform", (uint8_t *)v20, 2u);
  }
  uint64_t v12 = 0;
  uint64_t v13 = &_mh_execute_header;
LABEL_23:
  std::mutex::unlock(v4);
  return v12 | (unint64_t)v13;
}

void sub_10001E258(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10001E290(uint64_t a1)
{
  sub_100026B74((void *)(a1 + 112));
  sub_100026AF0((void *)(a1 + 80));
  sub_100026A6C((void *)(a1 + 48));

  return a1;
}

BOOL sub_10001E2F4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 232);
  if (!v1)
  {
    if (*(_DWORD *)(a1 + 448))
    {
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
        sub_10040D2F8();
      }
      uint64_t v1 = *(void *)(a1 + 232);
    }
    else
    {
      uint64_t v1 = 0;
    }
  }
  return v1 != 0;
}

void sub_10001E360(uint64_t a1, id **a2)
{
  if (!*(unsigned char *)(a1 + 56))
  {
    long long v4 = qword_1008ABDE0;
    BOOL v5 = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT);
    if (v5)
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#wifi-service,Peers added while not ready", buf, 2u);
    }
    sub_100021EE0(v5, 1, a2);
  }
  uint64_t v6 = *a2;
  long long v32 = a2[1];
  if (*a2 != v32)
  {
    long long v30 = (uint64_t **)(a1 + 216);
    uint64_t v31 = (void *)(a1 + 224);
    while (1)
    {
      uint64_t v7 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        sub_100049A04(v6);
        id v8 = (id)objc_claimAutoreleasedReturnValue();
        sub_100049A24((uint64_t)v6);
        id v9 = (id)objc_claimAutoreleasedReturnValue();
        int v10 = sub_100049A34((uint64_t)v6);
        *(_DWORD *)std::string buf = 138412802;
        *(void *)&uint8_t buf[4] = v8;
        *(_WORD *)&unsigned char buf[12] = 2112;
        *(void *)&buf[14] = v9;
        __int16 v48 = 2112;
        CFTypeRef v49 = v10;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#wifi-service,Adding to map peer ID: %@; client queue: %@, peer mac: %@",
          buf,
          0x20u);
      }
      id v11 = (id *)sub_100049A3C((uint64_t)v6);
      uint64_t v12 = sub_100049A04(v6);
      if (!v12) {
        goto LABEL_25;
      }
      uint64_t v13 = sub_100049A0C((uint64_t)v6);
      if (!v13) {
        break;
      }
      uint64_t v14 = sub_100049A14((uint64_t)v6);
      BOOL v15 = v14 == 0;

      if (v15) {
        goto LABEL_25;
      }
      uint64_t v16 = (void *)*v31;
      if (!*v31) {
        goto LABEL_23;
      }
      uint64_t v17 = v31;
      do
      {
        unint64_t v18 = v16[4];
        BOOL v19 = v18 >= (unint64_t)v11;
        if (v18 >= (unint64_t)v11) {
          int v20 = v16;
        }
        else {
          int v20 = v16 + 1;
        }
        if (v19) {
          uint64_t v17 = v16;
        }
        uint64_t v16 = (void *)*v20;
      }
      while (*v20);
      if (v17 != v31 && (unint64_t)v11 >= v17[4])
      {
        unint64_t v22 = v17[5];
        uint64_t v23 = v17[6];
        if (v22 != v23)
        {
          do
          {
            sub_10002580C((uint64_t)buf, v22);
            long long v24 = sub_100049A0C((uint64_t)buf);
            CFStringRef v25 = sub_100049A0C((uint64_t)v6);
            unsigned __int8 v26 = [v24 isEqualToData:v25];

            if ((v26 & 1) == 0)
            {
              uint64_t v27 = (id)qword_1008ABDE0;
              if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
              {
                sub_100049A04(v6);
                objc_claimAutoreleasedReturnValue();
                sub_10040D358();
              }

              sub_10002580C((uint64_t)&v40, (uint64_t)v6);
              int v33 = 0;
              long long v34 = 0;
              NSErrorUserInfoKey v35 = 0;
              std::string v38 = (void ***)&v33;
              char v39 = 0;
              int v33 = (id **)operator new(0xA8uLL);
              long long v34 = (void **)v33;
              NSErrorUserInfoKey v35 = (void **)(v33 + 21);
              long long v34 = (void **)sub_100027C7C((uint64_t)&v35, (uint64_t)&v40, (uint64_t)v46, (uint64_t)v33);
              sub_100021A4C((uint64_t)v34, v28, (id **)&v33);
              std::string v38 = (void ***)&v33;
              sub_100027BE4((void ***)&v38);

              sub_100026B74(v45);
              sub_100026AF0(v44);
              sub_100026A6C(v43);
            }
            sub_100026B74(v54);
            sub_100026AF0(v53);
            sub_100026A6C(v52);

            v22 += 168;
          }
          while (v22 != v23);
          unint64_t v22 = v17[6];
        }
        if (v22 >= v17[7])
        {
          uint64_t v29 = sub_100027DF4(v17 + 5, (uint64_t)v6);
        }
        else
        {
          sub_10002580C(v22, (uint64_t)v6);
          uint64_t v29 = v22 + 168;
          v17[6] = v22 + 168;
        }
        v17[6] = v29;
      }
      else
      {
LABEL_23:
        sub_10002580C((uint64_t)buf, (uint64_t)v6);
        int v33 = 0;
        long long v34 = 0;
        NSErrorUserInfoKey v35 = 0;
        std::string v38 = (void ***)&v33;
        char v39 = 0;
        int v33 = (id **)operator new(0xA8uLL);
        long long v34 = (void **)v33;
        NSErrorUserInfoKey v35 = (void **)(v33 + 21);
        long long v34 = (void **)sub_100027C7C((uint64_t)&v35, (uint64_t)buf, (uint64_t)v56, (uint64_t)v33);
        CFStringRef v40 = v11;
        v42[0] = 0;
        v42[1] = 0;
        id v41 = 0;
        sub_10002791C(&v41, (uint64_t)v33, (uint64_t)v34, 0xCF3CF3CF3CF3CF3DLL * (((char *)v34 - (char *)v33) >> 3));
        sub_100027D20(v30, (unint64_t *)&v40, (uint64_t)&v40);
        std::string v38 = (void ***)&v41;
        sub_100027BE4((void ***)&v38);
        std::string v38 = (void ***)&v33;
        sub_100027BE4((void ***)&v38);

        sub_100026B74(v54);
        sub_100026AF0(v53);
        sub_100026A6C(v52);
      }
LABEL_28:
      v6 += 21;
      if (v6 == v32) {
        return;
      }
    }

LABEL_25:
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10040D32C(&v36, v37);
    }
    sub_10002580C((uint64_t)buf, (uint64_t)v6);
    CFStringRef v40 = 0;
    id v41 = 0;
    v42[0] = 0;
    int v33 = &v40;
    LOBYTE(v34) = 0;
    CFStringRef v40 = (id *)operator new(0xA8uLL);
    id v41 = v40;
    v42[0] = v40 + 21;
    id v41 = (id)sub_100027C7C((uint64_t)v42, (uint64_t)buf, (uint64_t)v56, (uint64_t)v40);
    sub_100021A4C((uint64_t)v41, v21, &v40);
    int v33 = &v40;
    sub_100027BE4((void ***)&v33);

    sub_100026B74(v54);
    sub_100026AF0(v53);
    sub_100026A6C(v52);

    goto LABEL_28;
  }
}

void sub_10001E9C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
  *(void *)(v56 + 48) = v55;
  _Unwind_Resume(exception_object);
}

void sub_10001EAFC(uint64_t a1, uint64_t a2)
{
  long long v4 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  if (sub_10001D658())
  {
    if (sub_10001E2F4(a1))
    {
      if (*(void *)(a2 + 8) == *(void *)a2)
      {
        sub_1000277D8(a1 + 216, *(char **)(a1 + 224));
        *(void *)(a1 + 216) = a1 + 224;
        *(void *)(a1 + 224) = 0;
        *(void *)(a1 + 232) = 0;
      }
      else
      {
        sub_10001EC28(a1, (id **)a2);
        if (*(void *)(a1 + 232))
        {
LABEL_12:
          sub_10001DA2C(a1, 0.0);
          goto LABEL_13;
        }
      }
      *(_DWORD *)(a1 + 448) = 0;
      goto LABEL_12;
    }
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10040D39C();
    }
  }
  else
  {
    BOOL v5 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "#wifi-service,ignoring ranging stop on unsupported platform", v6, 2u);
    }
  }
LABEL_13:
  std::mutex::unlock(v4);
}

void sub_10001EC14(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_10001EC28(uint64_t a1, id **a2)
{
  long long v2 = *a2;
  uint64_t v3 = a2[1];
  if (*a2 != v3)
  {
    long long v4 = (void *)(a1 + 224);
    int v20 = (uint64_t **)(a1 + 216);
    do
    {
      BOOL v5 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        sub_100049A04(v2);
        id v6 = (id)objc_claimAutoreleasedReturnValue();
        uint64_t v7 = sub_100049A24((uint64_t)v2);
        *(_DWORD *)std::string buf = 138412546;
        id v22 = v6;
        __int16 v23 = 2112;
        long long v24 = v7;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#wifi-service,Removing from map peer ID: %@; client queue: %@",
          buf,
          0x16u);
      }
      unint64_t v8 = sub_100049A3C((uint64_t)v2);
      id v9 = (void *)*v4;
      if (!*v4) {
        goto LABEL_16;
      }
      uint64_t v10 = (uint64_t)v4;
      do
      {
        unint64_t v11 = v9[4];
        BOOL v12 = v11 >= v8;
        if (v11 >= v8) {
          uint64_t v13 = v9;
        }
        else {
          uint64_t v13 = v9 + 1;
        }
        if (v12) {
          uint64_t v10 = (uint64_t)v9;
        }
        id v9 = (void *)*v13;
      }
      while (*v13);
      if ((void *)v10 != v4 && v8 >= *(void *)(v10 + 32))
      {
        uint64_t v15 = *(void *)(v10 + 40);
        if (v15 == *(void *)(v10 + 48))
        {
          sub_1000287A4(v20, v10);
        }
        else
        {
          char v16 = 0;
          do
          {
            if (sub_1000498C4(v15, (uint64_t)v2))
            {
              sub_10002834C((uint64_t *)(v15 + 168), *(uint64_t **)(v10 + 48), v15);
              uint64_t v18 = v17;
              for (uint64_t i = *(void *)(v10 + 48); i != v18; sub_100027B78(v10 + 56, i))
                i -= 168;
              *(void *)(v10 + 48) = v18;
              char v16 = 1;
            }
            else
            {
              v15 += 168;
              uint64_t v18 = *(void *)(v10 + 48);
            }
          }
          while (v15 != v18);
          if (*(void *)(v10 + 40) == v18) {
            sub_1000287A4(v20, v10);
          }
          if (v16) {
            goto LABEL_19;
          }
        }
        uint64_t v14 = (id)qword_1008ABDE0;
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        {
          sub_100049A04(v2);
          objc_claimAutoreleasedReturnValue();
          sub_10040D414();
        }
      }
      else
      {
LABEL_16:
        uint64_t v14 = (id)qword_1008ABDE0;
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        {
          sub_100049A04(v2);
          objc_claimAutoreleasedReturnValue();
          sub_10040D3D0();
        }
      }

LABEL_19:
      v2 += 21;
    }
    while (v2 != v3);
  }
}

void sub_10001EEC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10001EEF4(uint64_t a1)
{
  *(_DWORD *)a1 = 1084227584;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 48) = 1;
  *(_DWORD *)(a1 + 49) = 0;
  *(_DWORD *)(a1 + 52) = 0;
  *(unsigned char *)(a1 + 56) = 1;
  *(void *)(a1 + 88) = 850045863;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 64) = 0;
  *(unsigned char *)(a1 + 168) = 0;
  *(unsigned char *)(a1 + 176) = 0;
  *(unsigned char *)(a1 + 184) = 0;
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 224) = 0;
  *(unsigned char *)(a1 + 160) = 0;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(unsigned char *)(a1 + 240) = 0;
  *(void *)(a1 + 216) = a1 + 224;
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = 0;
  *(unsigned char *)(a1 + 408) = 0;
  *(void *)(a1 + 416) = 0;
  *(void *)(a1 + 432) = 0;
  *(void *)(a1 + 424) = a1 + 432;
  *(void *)(a1 + 440) = 0;
  *(void *)(a1 + 448) = 0;
  *(_DWORD *)(a1 + 456) = 0;
  if (sub_10001D658())
  {
    long long v2 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_DEFAULT, 0);
    dispatch_queue_t v3 = dispatch_queue_create("com.apple.nearbyd.WiFiRanging", v2);
    long long v4 = *(void **)(a1 + 80);
    *(void *)(a1 + 80) = v3;

    sub_10001F090(a1);
    *(void *)(a1 + 460) = 0;
  }
  return a1;
}

void sub_10001F018(_Unwind_Exception *a1)
{
  uint64_t v7 = v5;

  sub_100027838(v6, *(void **)(v1 + 432));
  sub_100025904(v4);
  sub_1000277D8(v3, *(char **)(v1 + 224));

  std::mutex::~mutex(v2);
  id v9 = *(std::__shared_weak_count **)(v1 + 72);
  if (v9) {
    sub_10001A970(v9);
  }
  _Unwind_Resume(a1);
}

const void *sub_10001F090(uint64_t a1)
{
  if (!sub_10001D658()) {
    return 0;
  }
  uint64_t result = *(const void **)(a1 + 16);
  if (result)
  {
    if (*(unsigned char *)(a1 + 55)) {
      return result;
    }
    uint64_t v3 = (const void *)WiFiManagerClientCopyInterfaces();
    BOOL v4 = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR);
    if (v3)
    {
      if (v4) {
        sub_10040D6A0();
      }
      CFRelease(v3);
      *(unsigned char *)(a1 + 55) = 1;
      return *(const void **)(a1 + 16);
    }
    if (v4) {
      sub_10040D66C();
    }
    goto LABEL_32;
  }
  BOOL v5 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(buf.__sig) = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#wifi-service,calling WiFiManagerClientCreate", (uint8_t *)&buf, 2u);
  }
  uint64_t v6 = (const void *)WiFiManagerClientCreate();
  *(void *)(a1 + 16) = v6;
  if (!v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10040D458();
    }
    sub_10001F614(a1, 1);
    sub_10001F86C(a1);
    return 0;
  }
  CFRetain(v6);
  if (pthread_attr_init(&buf))
  {
    uint64_t v7 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
      sub_10040D5F4(v7, v8, v9, v10, v11, v12, v13, v14);
    }
  }
  else if (pthread_attr_setdetachstate(&buf, 2))
  {
    uint64_t v15 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
      sub_10040D57C(v15, v16, v17, v18, v19, v20, v21, v22);
    }
  }
  else if (pthread_create((pthread_t *)(a1 + 8), &buf, (void *(__cdecl *)(void *))sub_10002210C, *(void **)(a1 + 16)))
  {
    __int16 v23 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
      sub_10040D504(v23, v24, v25, v26, v27, v28, v29, v30);
    }
  }
  else
  {
    if (!pthread_attr_destroy(&buf))
    {
      char v39 = (const void *)WiFiManagerClientCopyInterfaces();
      if (v39)
      {
        CFRelease(v39);
        CFStringRef v40 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)uint64_t v42 = 0;
          _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_INFO, "#wifi-service,Interfaces found at manager creation.", v42, 2u);
        }
        *(unsigned char *)(a1 + 55) = 1;
      }
      else
      {
        id v41 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)uint64_t v42 = 0;
          _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, "#wifi-service,No interfaces when creating manager. Setting up attachment callback.", v42, 2u);
        }
        WiFiManagerClientRegisterDeviceAttachmentCallback();
      }
      return *(const void **)(a1 + 16);
    }
    uint64_t v31 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
      sub_10040D48C(v31, v32, v33, v34, v35, v36, v37, v38);
    }
  }
  sub_10001F614(a1, 1);
  sub_10001F86C(a1);
LABEL_32:
  uint64_t result = *(const void **)(a1 + 16);
  if (result)
  {
    CFRelease(result);
    uint64_t result = 0;
    *(void *)(a1 + 16) = 0;
  }
  return result;
}

uint64_t sub_10001F3A8(uint64_t a1)
{
  if (*(void *)(a1 + 8))
  {
    long long v2 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)BOOL v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#wifi-service,cancelling wifi ranging runloop thread", v5, 2u);
    }
    pthread_cancel(*(pthread_t *)(a1 + 8));
  }
  sub_100027838(a1 + 424, *(void **)(a1 + 432));
  sub_100025904(a1 + 240);
  sub_1000277D8(a1 + 216, *(char **)(a1 + 224));

  std::mutex::~mutex((std::mutex *)(a1 + 88));
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 72);
  if (v3) {
    sub_10001A970(v3);
  }
  return a1;
}

void sub_10001F488(uint64_t a1)
{
  char v2 = sub_10001D658();
  uint64_t v3 = qword_1008ABDE0;
  if (v2)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)pthread_attr_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#wifi-service,creating awdl request", buf, 2u);
    }
    BOOL v4 = +[NSMutableDictionary dictionary];
    BOOL v5 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#wifi-service,starting awdl in follow mode", v8, 2u);
    }
    uint64_t v6 = +[NSNumber numberWithInt:1];
    [v4 setValue:v6 forKey:@"APPLE80211KEY_AWDL_INFO_ASSISTED_DISCOVERY_FOLLOW"];

    uint64_t v7 = +[NSNumber numberWithInt:1];
    [v4 setValue:v7 forKey:@"AWDL_INFO_PEER_PREFERRED_BAND"];

    sub_10001F954(a1, v4);
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10040D6D4();
    }
    sub_10001F614(a1, 0);
    sub_10001F86C(a1);
  }
}

void sub_10001F5F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001F614(uint64_t a1, int a2)
{
  char v2 = *(void **)(a1 + 216);
  uint64_t v11 = (void *)(a1 + 224);
  if (v2 != (void *)(a1 + 224))
  {
    do
    {
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      sub_10002791C(&v12, v2[5], v2[6], 0xCF3CF3CF3CF3CF3DLL * ((uint64_t)(v2[6] - v2[5]) >> 3));
      BOOL v5 = v12;
      BOOL v4 = v13;
      while (v5 != v4)
      {
        sub_100049A50((uint64_t)v5, (uint64_t)v18);
        if (v18[3])
        {
          uint64_t v6 = sub_100049A24((uint64_t)v5);
          block[0] = _NSConcreteStackBlock;
          block[1] = 3321888768;
          block[2] = sub_100021C00;
          block[3] = &unk_1008466F8;
          sub_1000276A8((uint64_t)v16, (uint64_t)v18);
          int v17 = a2;
          dispatch_async(v6, block);

          sub_100026AF0(v16);
        }
        else
        {
          uint64_t v7 = (id)qword_1008ABDE0;
          if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
          {
            sub_100049A04(v5);
            objc_claimAutoreleasedReturnValue();
            sub_10040D708();
          }
        }
        sub_100026AF0(v18);
        v5 += 21;
      }
      v18[0] = (void **)&v12;
      sub_100027BE4(v18);
      uint64_t v8 = (void *)v2[1];
      if (v8)
      {
        do
        {
          uint64_t v9 = v8;
          uint64_t v8 = (void *)*v8;
        }
        while (v8);
      }
      else
      {
        do
        {
          uint64_t v9 = (void *)v2[2];
          BOOL v10 = *v9 == (void)v2;
          char v2 = v9;
        }
        while (!v10);
      }
      char v2 = v9;
    }
    while (v9 != v11);
  }
}

void sub_10001F820(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void **a27)
{
  sub_100026AF0(&a27);
  a27 = (void **)&a12;
  sub_100027BE4(&a27);
  _Unwind_Resume(a1);
}

void sub_10001F86C(uint64_t a1)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
    sub_10040D74C();
  }
  sub_1000277D8(a1 + 216, *(char **)(a1 + 224));
  *(void *)(a1 + 216) = a1 + 224;
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = 0;
  *(_DWORD *)(a1 + 448) = 0;
  *(_DWORD *)(a1 + 456) = 0;
  *(_WORD *)(a1 + 50) = 0;
  *(unsigned char *)(a1 + 52) = 0;
  if (*(unsigned char *)(a1 + 184)) {
    *(unsigned char *)(a1 + 184) = 0;
  }
  *(_WORD *)(a1 + 54) = 0;
  if (*(void *)(a1 + 40))
  {
    if (sub_100020048(a1))
    {
      sub_100020048(a1);
      WiFiDeviceClientStopNetwork();
    }
    char v2 = *(const void **)(a1 + 40);
    if (v2)
    {
      CFRelease(v2);
      *(void *)(a1 + 40) = 0;
    }
  }
  uint64_t v3 = *(const void **)(a1 + 32);
  if (v3)
  {
    CFRelease(v3);
    *(void *)(a1 + 32) = 0;
  }
  BOOL v4 = *(const void **)(a1 + 24);
  if (v4)
  {
    CFRelease(v4);
    *(void *)(a1 + 24) = 0;
  }
}

void sub_10001F954(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (sub_100020048(a1))
  {
    if (sub_100022278(a1, 0))
    {
      if (*(unsigned char *)(a1 + 53))
      {
        double v4 = sub_10002D570();
        if (!*(unsigned char *)(a1 + 168)) {
          __assert_rtn("startNetwork", "PRWiFiRangingService_MW.mm", 1211, "fStartNetworkCallbackWaitStartTime.has_value()");
        }
        if (v4 - *(double *)(a1 + 160) <= 5.0)
        {
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
            sub_10040D8EC();
          }
          goto LABEL_37;
        }
        *(unsigned char *)(a1 + 52) = 0;
        if (*(unsigned char *)(a1 + 184)) {
          *(unsigned char *)(a1 + 184) = 0;
        }
      }
      BOOL v5 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t v11 = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#wifi-service,starting network", v11, 2u);
      }
      sub_100020048(a1);
      int started = WiFiDeviceClientStartNetwork();
      *(_DWORD *)(a1 + 456) = 1;
      *(unsigned char *)(a1 + 53) = 1;
      *(double *)(a1 + 160) = sub_10002D570();
      *(unsigned char *)(a1 + 168) = 1;
      if (!started)
      {
        double v10 = 0.0;
        goto LABEL_36;
      }
      *(_DWORD *)(a1 + 456) = 0;
      *(unsigned char *)(a1 + 53) = 0;
      *(unsigned char *)(a1 + 168) = 0;
      if (started <= 36)
      {
        if (started != -3930)
        {
          if (started == 1)
          {
            if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
              sub_10040D850();
            }
            int v7 = -1;
            goto LABEL_32;
          }
          goto LABEL_29;
        }
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
          sub_10040D81C();
        }
        double v10 = 1.0;
LABEL_36:
        sub_10001DA2C(a1, v10);
        goto LABEL_37;
      }
      if (started != 37)
      {
        if (started == 82)
        {
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
            sub_10040D8B8();
          }
          goto LABEL_31;
        }
LABEL_29:
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
          sub_10040D7B4();
        }
LABEL_31:
        int v7 = 1;
LABEL_32:
        sub_10001F614(a1, v7);
        sub_10001F86C(a1);
        goto LABEL_37;
      }
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
        sub_10040D884();
      }
    }
    else
    {
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
        sub_10040D920();
      }
      dispatch_time_t v8 = dispatch_time(0, 1000000000);
      uint64_t v9 = *(NSObject **)(a1 + 80);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_100022538;
      block[3] = &unk_1008466D8;
      void block[4] = a1;
      dispatch_after(v8, v9, block);
    }
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_10040D780();
  }
LABEL_37:
}

void sub_10001FC88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001FCA0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 52))
  {
    char v2 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v15) = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#wifi-service,Not stopping AWDL due to lingering results callback", (uint8_t *)&v15, 2u);
    }
    if (!*(unsigned char *)(a1 + 184)) {
      sub_10040DA74();
    }
    double v3 = sub_10002D570();
    double v4 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      if (!*(unsigned char *)(a1 + 184)) {
        sub_10000AE44();
      }
      uint64_t v5 = *(void *)(a1 + 176);
      int v15 = 134218240;
      double v16 = v3;
      __int16 v17 = 2048;
      uint64_t v18 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#wifi-service,time: %f, time of results callback: %f", (uint8_t *)&v15, 0x16u);
    }

    if (!*(unsigned char *)(a1 + 184)) {
      sub_10000AE44();
    }
    if (v3 - *(double *)(a1 + 176) > 5.0)
    {
      *(unsigned char *)(a1 + 52) = 0;
      *(unsigned char *)(a1 + 184) = 0;
    }
    double v6 = 0.5;
LABEL_23:
    sub_10001DA2C(a1, v6);
    return;
  }
  if (*(unsigned char *)(a1 + 53))
  {
    int v7 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v15) = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#wifi-service,not stopping AWDL due to lingering start network callback", (uint8_t *)&v15, 2u);
    }
    double v8 = sub_10002D570();
    if (!*(unsigned char *)(a1 + 168)) {
      sub_10040DA48();
    }
    double v9 = v8;
    double v10 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      if (!*(unsigned char *)(a1 + 168)) {
        sub_10000AE44();
      }
      uint64_t v11 = *(void *)(a1 + 160);
      int v15 = 134218240;
      double v16 = v9;
      __int16 v17 = 2048;
      uint64_t v18 = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#wifi-service,time: %f, time of start network callback: %f", (uint8_t *)&v15, 0x16u);
    }

    if (!*(unsigned char *)(a1 + 168)) {
      sub_10000AE44();
    }
    if (v9 - *(double *)(a1 + 160) > 5.0)
    {
      *(unsigned char *)(a1 + 53) = 0;
      *(unsigned char *)(a1 + 168) = 0;
    }
    double v6 = 1.0;
    goto LABEL_23;
  }
  *(unsigned char *)(a1 + 50) = 0;
  uint64_t v12 = sub_100020048(a1);
  if (!v12 || !*(void *)(a1 + 40))
  {
    uint64_t v14 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10040D954(v12, a1, v14);
    }
    goto LABEL_29;
  }
  int v13 = WiFiDeviceClientStopNetwork();
  *(_DWORD *)(a1 + 456) = 4;
  if (v13)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10040D9E0();
    }
LABEL_29:
    sub_10001F614(a1, 1);
    sub_10001F86C(a1);
    return;
  }

  sub_10001DA2C(a1, 0.0);
}

void sub_10002002C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100020048(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (!result)
  {
    uint64_t result = sub_10001F090(a1);
    if (result)
    {
      double v3 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
      {
        LOWORD(v13) = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "#wifi-service,Calling WiFiManagerClientCopyInterfaces for AWDL interface", (uint8_t *)&v13, 2u);
      }
      sub_10001F090(a1);
      CFArrayRef v4 = (const __CFArray *)WiFiManagerClientCopyInterfaces();
      if (v4)
      {
        CFArrayRef v5 = v4;
        CFIndex Count = CFArrayGetCount(v4);
        if (Count >= 1)
        {
          CFIndex v7 = Count;
          CFIndex v8 = 0;
          while (1)
          {
            CFDictionaryRef ValueAtIndex = CFArrayGetValueAtIndex(v5, v8);
            if (ValueAtIndex)
            {
              double v10 = ValueAtIndex;
              uint64_t v11 = qword_1008ABDE0;
              if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
              {
                LOWORD(v13) = 0;
                _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "#wifi-service,Calling WiFiDeviceClientIsInterfaceAWDL", (uint8_t *)&v13, 2u);
              }
              if (WiFiDeviceClientIsInterfaceAWDL()) {
                break;
              }
            }
            if (v7 == ++v8) {
              goto LABEL_21;
            }
          }
          uint64_t v12 = qword_1008ABDE0;
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
          {
            int v13 = 138412290;
            uint64_t v14 = v10;
            _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "#wifi-service,WiFiDeviceClientIsInterfaceAWDL returned true for %@", (uint8_t *)&v13, 0xCu);
          }
          *(void *)(a1 + 32) = v10;
          CFRetain(v10);
          sub_1000221BC(a1);
        }
LABEL_21:
        CFRelease(v5);
        uint64_t result = *(void *)(a1 + 32);
        if (!result)
        {
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
            sub_10040DAD4();
          }
          sub_10001F614(a1, 1);
          sub_10001F86C(a1);
          return *(void *)(a1 + 32);
        }
      }
      else
      {
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
          sub_10040DAA0();
        }
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_100020280(uint64_t a1)
{
  return sub_100020288(*(void *)(a1 + 32));
}

void sub_100020288(uint64_t a1)
{
  char v2 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  *(unsigned char *)(a1 + 49) = 0;
  if (*(unsigned char *)(a1 + 55))
  {
    switch(*(_DWORD *)(a1 + 456))
    {
      case 0:
        double v3 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)uint64_t v25 = 0;
          _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#wifi-service,Current AWDL state is down", v25, 2u);
        }
        if (sub_10001E2F4(a1))
        {
          CFArrayRef v4 = qword_1008ABDE0;
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)uint64_t v25 = 0;
            _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#wifi-service,Current AWDL state is down - starting awdl", v25, 2u);
          }
          sub_10001F488(a1);
        }
        else if (*(_DWORD *)(a1 + 448))
        {
          uint64_t v19 = qword_1008ABDE0;
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)uint64_t v25 = 0;
            _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "#wifi-service,Setting ranging role to unspecified", v25, 2u);
          }
          *(_DWORD *)(a1 + 448) = 0;
        }
        goto LABEL_55;
      case 1:
        BOOL v7 = sub_10001E2F4(a1);
        CFIndex v8 = qword_1008ABDE0;
        BOOL v9 = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT);
        if (!v7)
        {
          if (!v9) {
            goto LABEL_54;
          }
          *(_WORD *)uint64_t v25 = 0;
          uint64_t v18 = "#wifi-service,Current AWDL state is starting but we don't have a range request active!";
          goto LABEL_53;
        }
        if (v9)
        {
          *(_WORD *)uint64_t v25 = 0;
          double v10 = "#wifi-service,Current AWDL state is starting";
          uint64_t v11 = v8;
          goto LABEL_36;
        }
        goto LABEL_55;
      case 2:
        uint64_t v12 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)uint64_t v25 = 0;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "#wifi-service,Current AWDL state is up", v25, 2u);
        }
        if (!sub_10001E2F4(a1))
        {
          CFIndex v8 = qword_1008ABDE0;
          if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT)) {
            goto LABEL_54;
          }
          *(_WORD *)uint64_t v25 = 0;
          uint64_t v18 = "#wifi-service,Current AWDL state is up - stopping awdl";
          goto LABEL_53;
        }
        int v13 = *(_DWORD *)(a1 + 448);
        switch(v13)
        {
          case 2:
            uint64_t v21 = qword_1008ABDE0;
            if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)uint64_t v25 = 0;
              _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "#wifi-service,Current AWDL state is up - waiting to respond", v25, 2u);
            }
            if (*(void *)(a1 + 192)) {
              goto LABEL_71;
            }
            if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
              goto LABEL_60;
            }
            break;
          case 1:
            uint64_t v22 = qword_1008ABDE0;
            if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)uint64_t v25 = 0;
              _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "#wifi-service,Current AWDL state is up - waiting to initiate", v25, 2u);
            }
            if (*(void *)(a1 + 192)) {
              goto LABEL_71;
            }
            if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
            {
LABEL_60:
              sub_10040DB70();
              goto LABEL_55;
            }
            break;
          case 0:
            if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
              sub_10040DB3C();
            }
            goto LABEL_54;
          default:
            goto LABEL_55;
        }
        goto LABEL_55;
      case 3:
        uint64_t v14 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)uint64_t v25 = 0;
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "#wifi-service,Current AWDL state is ready for ranging", v25, 2u);
        }
        BOOL v15 = sub_10001E2F4(a1);
        int v16 = *(_DWORD *)(a1 + 448);
        if (!v15)
        {
          if (v16 == 2)
          {
            uint64_t v20 = qword_1008ABDE0;
            if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)uint64_t v25 = 0;
              _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "#wifi-service,Current AWDL state is ready for ranging - stopping responder ranging", v25, 2u);
            }
            sub_100020DB0(a1);
          }
          CFIndex v8 = qword_1008ABDE0;
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)uint64_t v25 = 0;
            uint64_t v18 = "#wifi-service,Current AWDL state is ready for ranging - stopping awdl";
            goto LABEL_53;
          }
          goto LABEL_54;
        }
        switch(v16)
        {
          case 2:
            if (!*(unsigned char *)(a1 + 54))
            {
              __int16 v23 = qword_1008ABDE0;
              if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)uint64_t v25 = 0;
                _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "#wifi-service,Current AWDL state is ready for ranging - requesting responder ranging", v25, 2u);
              }
              sub_100020DB0(a1);
              goto LABEL_55;
            }
            break;
          case 1:
            if (!*(unsigned char *)(a1 + 54))
            {
              uint64_t v24 = qword_1008ABDE0;
              if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)uint64_t v25 = 0;
                _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "#wifi-service,Current AWDL state is ready for ranging - requesting initiator ranging", v25, 2u);
              }
              sub_100020A80(a1);
              goto LABEL_55;
            }
            break;
          case 0:
            if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
              sub_10040DBA4();
            }
            goto LABEL_54;
          default:
            goto LABEL_55;
        }
LABEL_71:
        sub_1000208BC(a1);
        goto LABEL_55;
      case 4:
        uint64_t v17 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)uint64_t v25 = 0;
          double v10 = "#wifi-service,Current AWDL state is stopping";
          uint64_t v11 = v17;
LABEL_36:
          _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, v10, v25, 2u);
        }
        goto LABEL_55;
      case 5:
        CFIndex v8 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)uint64_t v25 = 0;
          uint64_t v18 = "#wifi-service,Current AWDL state is unavailable";
LABEL_53:
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, v18, v25, 2u);
        }
LABEL_54:
        sub_10001FCA0(a1);
        goto LABEL_55;
      default:
        goto LABEL_55;
    }
  }
  uint64_t v5 = sub_10001F090(a1);
  double v6 = qword_1008ABDE0;
  if (v5)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#wifi-service,State machine cannot continue until wifi device is attached.", v25, 2u);
    }
    sub_10001DA2C(a1, 0.5);
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_10040DB08();
  }
LABEL_55:
  std::mutex::unlock(v2);
}

void sub_100020888(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000208B4(uint64_t a1)
{
  return sub_100020288(*(void *)(a1 + 32));
}

void sub_1000208BC(uint64_t a1)
{
  if (*(void *)(a1 + 192))
  {
    if ((*(_DWORD *)(a1 + 456) & 0xFFFFFFFE) == 2)
    {
      char v2 = +[NSMutableDictionary dictionary];
      [v2 setValue:*(void *)(a1 + 192) forKey:@"RANGING_TOKEN_ID"];
      double v3 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v4 = *(void *)(a1 + 192);
        int v5 = 138412290;
        uint64_t v6 = v4;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#wifi-service,setting self ranging ID to %@", (uint8_t *)&v5, 0xCu);
      }
      sub_1000215D0(a1);
      if (WiFiDeviceClientSetRangingIdentifier())
      {
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
          sub_10040DC0C();
        }
        sub_10001F614(a1, 1);
        sub_10001F86C(a1);
      }
      else
      {
        *(_DWORD *)(a1 + 456) = 3;
        *(unsigned char *)(a1 + 54) = 0;
        sub_10001DA2C(a1, 0.0);
      }
    }
    else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
    {
      sub_10040DC74();
    }
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_10040DBD8();
  }
}

void sub_100020A64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100020A80(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 56))
  {
    if (*(unsigned char *)(a1 + 52))
    {
      double v2 = sub_10002D570();
      if (!*(unsigned char *)(a1 + 184)) {
        sub_10040DDF8();
      }
      if (v2 - *(double *)(a1 + 176) > 5.0)
      {
        *(unsigned char *)(a1 + 52) = 0;
        *(unsigned char *)(a1 + 184) = 0;
      }
      sub_10001DA2C(a1, 0.5);
      return;
    }
    CFArrayRef v3 = (const __CFArray *)sub_100020F88(a1);
    if (CFArrayGetCount(v3) < 1)
    {
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
        sub_10040DDC4();
      }
    }
    else
    {
      double Count = (double)CFArrayGetCount(v3);
      int v5 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)pthread_attr_t buf = 134349312;
        CFIndex v12 = CFArrayGetCount(v3);
        __int16 v13 = 2050;
        double v14 = Count;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#wifi-service,WiFiDeviceClientRangingStartAsync, num peers, %{public}ld, timeout, %{public}lf", buf, 0x16u);
      }

      sub_1000215D0(a1);
      WiFiDeviceClientRegisterRangingReportCallback();
      *(unsigned char *)(a1 + 52) = 1;
      *(double *)(a1 + 176) = sub_10002D570();
      *(unsigned char *)(a1 + 184) = 1;
      sub_1000215D0(a1);
      int started = WiFiDeviceClientRangingStartAsync();
      if (!started) {
        goto LABEL_29;
      }
      if (started == -3930)
      {
        BOOL v7 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
          sub_10040DD44(v7);
        }
        *(unsigned char *)(a1 + 52) = 0;
        if (*(unsigned char *)(a1 + 184)) {
          *(unsigned char *)(a1 + 184) = 0;
        }
        dispatch_time_t v8 = dispatch_time(0, 1000000000);
        BOOL v9 = *(NSObject **)(a1 + 80);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_100021800;
        block[3] = &unk_1008466D8;
        void block[4] = a1;
        dispatch_after(v8, v9, block);
        return;
      }
      *(unsigned char *)(a1 + 52) = 0;
      if (*(unsigned char *)(a1 + 184)) {
        *(unsigned char *)(a1 + 184) = 0;
      }
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
        sub_10040DCDC();
      }
      *(_DWORD *)(a1 + 456) = 5;
    }
    sub_10001DA2C(a1, 0.0);
LABEL_29:
    CFRelease(v3);
    return;
  }
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
    sub_10040DCA8();
  }
}

void sub_100020D98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100020DB0(uint64_t a1)
{
  CFArrayRef v2 = (const __CFArray *)sub_100020F88(a1);
  CFIndex Count = CFArrayGetCount(v2);
  uint64_t v4 = qword_1008ABDE0;
  if (Count < 1)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v6) = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#wifi-service,WiFiDeviceClientSetRangeable FALSE", (uint8_t *)&v6, 2u);
    }
    sub_1000215D0(a1);
    if (!WiFiDeviceClientSetRangeable()) {
      goto LABEL_13;
    }
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      goto LABEL_11;
    }
    goto LABEL_12;
  }
  int v5 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v6 = 134349056;
    CFIndex v7 = CFArrayGetCount(v2);
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#wifi-service,WiFiDeviceClientSetRangeable TRUE, num peers, %{public}ld", (uint8_t *)&v6, 0xCu);
  }

  sub_1000215D0(a1);
  WiFiDeviceClientRegisterRangingReportCallback();
  sub_1000215D0(a1);
  if (WiFiDeviceClientSetRangeable())
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
LABEL_11:
    }
      sub_10040DE24();
LABEL_12:
    *(_DWORD *)(a1 + 456) = 5;
LABEL_13:
    sub_10001DA2C(a1, 0.0);
  }
  CFRelease(v2);
}

void sub_100020F70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_100020F88(uint64_t a1)
{
  id v1 = [objc_alloc((Class)NSMutableArray) initWithCapacity:4];
  v41[0] = 0;
  v41[1] = 0;
  CFStringRef v40 = v41;
  uint64_t v33 = +[NSNumber numberWithInt:4];
  uint64_t v34 = sub_100221F28();
  CFArrayRef v3 = *(void **)(a1 + 216);
  if (v3 != (void *)(a1 + 224))
  {
    *(void *)&long long v2 = 67109120;
    long long v31 = v2;
    do
    {
      uint64_t v37 = 0;
      uint64_t v38 = 0;
      uint64_t v39 = 0;
      unint64_t v4 = v3[4];
      sub_10002791C(&v37, v3[5], v3[6], 0xCF3CF3CF3CF3CF3DLL * ((uint64_t)(v3[6] - v3[5]) >> 3));
      if (v38 == v37)
      {
        int v6 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
          sub_10040DE8C(v50, v4, &v51, v6);
        }
      }
      else if ([v1 count] == (id)4)
      {
        int v5 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
          sub_10040DF38(v48, v49, v5);
        }
      }
      else
      {
        sub_10002580C((uint64_t)v44, v37);
        uint64_t v7 = v37;
        uint64_t v8 = v38;
        while (v7 != v8)
        {
          BOOL v9 = sub_100049A14(v7);
          double v10 = sub_100049A14((uint64_t)v44);
          BOOL v11 = v9 > v10;

          if (v11) {
            sub_100022540((uint64_t)v44, v7);
          }
          v7 += 168;
        }
        CFIndex v12 = sub_100049A04((id *)v44);
        id v13 = [v12 copy];

        double v14 = sub_100049A0C((uint64_t)v44);
        id v15 = [v14 copy];

        int v16 = sub_100049A14((uint64_t)v44);
        id v17 = [v16 copy];

        uint64_t v18 = sub_100049A34((uint64_t)v44);
        id v19 = [v18 copy];

        uint64_t v20 = qword_1008ABDE0;
        if (v13 && v15 && v17)
        {
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)pthread_attr_t buf = 138412290;
            id v43 = v19;
            _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "#wifi-service,peer mac addr: %@", buf, 0xCu);
          }
          uint64_t v21 = qword_1008ABDE0;
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)pthread_attr_t buf = 138412290;
            id v43 = v13;
            _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "#wifi-service,array of peers ranging ID %@", buf, 0xCu);
          }
          id v22 = objc_alloc_init((Class)NSMutableDictionary);
          [v22 setValue:v19 forKey:@"STATION_MAC"];
          [v22 setValue:v13 forKey:@"RANGING_TOKEN_ID"];
          [v22 setValue:v15 forKey:@"RANGING_PMK"];
          [v22 setValue:v17 forKey:@"RANGING_NUM_MEASUREMENTS"];
          __int16 v23 = +[NSNumber numberWithInt:1];
          [v22 setValue:v23 forKey:@"APPLE80211KEY_AWDL_INFO_ASSISTED_DISCOVERY_FOLLOW"];

          if (([v34 hasPrefix:@"iPhone"] & 1) != 0
            || [v34 hasPrefix:@"RealityDevice"])
          {
            [v22 setValue:v33 forKey:@"RANGING_CORE_MASK" v31];
          }
          id v24 = [v22 copy:v31];
          [v1 addObject:v24];

          uint64_t v25 = qword_1008ABDE0;
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
          {
            int v26 = *(unsigned __int8 *)(a1 + 48);
            *(_DWORD *)pthread_attr_t buf = v31;
            LODWORD(v43) = v26;
            _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "#wifi-service,follow mode for peer dict: %i", buf, 8u);
          }
        }
        else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
        {
          sub_10040DF84(&v35, v36);
        }

        sub_100026B74(v47);
        sub_100026AF0(v46);
        sub_100026A6C(v45);
      }
      v44[0] = (void **)&v37;
      sub_100027BE4(v44);
      uint64_t v27 = (void *)v3[1];
      if (v27)
      {
        do
        {
          uint64_t v28 = v27;
          uint64_t v27 = (void *)*v27;
        }
        while (v27);
      }
      else
      {
        do
        {
          uint64_t v28 = (void *)v3[2];
          BOOL v29 = *v28 == (void)v3;
          CFArrayRef v3 = v28;
        }
        while (!v29);
      }
      CFArrayRef v3 = v28;
    }
    while (v28 != (void *)(a1 + 224));
  }

  sub_1000277D8((uint64_t)&v40, v41[0]);
  return v1;
}

void sub_1000214CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,char *a29)
{
  sub_1000277D8((uint64_t)&a28, a29);
  _Unwind_Resume(a1);
}

uint64_t sub_1000215D0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (!result)
  {
    uint64_t result = sub_10001F090(a1);
    if (result)
    {
      CFArrayRef v3 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
      {
        LOWORD(v13) = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "#wifi-service,Calling WiFiManagerClientCopyInterfaces for device interface", (uint8_t *)&v13, 2u);
      }
      sub_10001F090(a1);
      CFArrayRef v4 = (const __CFArray *)WiFiManagerClientCopyInterfaces();
      if (v4)
      {
        CFArrayRef v5 = v4;
        CFIndex Count = CFArrayGetCount(v4);
        if (Count >= 1)
        {
          CFIndex v7 = Count;
          CFIndex v8 = 0;
          while (1)
          {
            CFDictionaryRef ValueAtIndex = CFArrayGetValueAtIndex(v5, v8);
            if (ValueAtIndex)
            {
              double v10 = ValueAtIndex;
              BOOL v11 = qword_1008ABDE0;
              if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
              {
                LOWORD(v13) = 0;
                _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "#wifi-service,Calling WiFiDeviceClientGetInterfaceRoleIndex", (uint8_t *)&v13, 2u);
              }
              if (!WiFiDeviceClientGetInterfaceRoleIndex()) {
                break;
              }
            }
            if (v7 == ++v8) {
              goto LABEL_21;
            }
          }
          CFIndex v12 = qword_1008ABDE0;
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
          {
            int v13 = 138412290;
            double v14 = v10;
            _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "#wifi-service,WiFiDeviceClientGetInterfaceRoleIndex is main interface, device, %@", (uint8_t *)&v13, 0xCu);
          }
          *(void *)(a1 + 24) = v10;
          CFRetain(v10);
        }
LABEL_21:
        CFRelease(v5);
        uint64_t result = *(void *)(a1 + 24);
        if (!result)
        {
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
            sub_10040DFB0();
          }
          sub_10001F614(a1, 1);
          sub_10001F86C(a1);
          return *(void *)(a1 + 24);
        }
      }
      else
      {
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
          sub_10040DAA0();
        }
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_100021800(uint64_t a1)
{
  return sub_100020288(*(void *)(a1 + 32));
}

void sub_100021808(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v2 = a2[1];
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  CFArrayRef v4 = *(std::__shared_weak_count **)(a1 + 72);
  *(void *)(a1 + 64) = v3;
  *(void *)(a1 + 72) = v2;
  if (v4) {
    sub_10001A970(v4);
  }
}

void sub_100021834(uint64_t a1, int a2)
{
  if (*(unsigned char *)(a1 + 408))
  {
    uint64_t v3 = (id *)(a1 + 240);
    sub_100049A50(a1 + 240, (uint64_t)v19);
    if (v19[3])
    {
      CFArrayRef v4 = sub_100049A24((uint64_t)v3);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3321888768;
      block[2] = sub_1000219D4;
      block[3] = &unk_1008466F8;
      sub_1000276A8((uint64_t)v17, (uint64_t)v19);
      int v18 = a2;
      dispatch_async(v4, block);

      sub_100026AF0(v17);
    }
    else
    {
      int v13 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        double v14 = sub_100049A04(v3);
        sub_10040E05C(v14, v15, v13);
      }
    }
    sub_100026AF0(v19);
  }
  else
  {
    CFArrayRef v5 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
      sub_10040DFE4(v5, v6, v7, v8, v9, v10, v11, v12);
    }
  }
}

void sub_1000219A0(_Unwind_Exception *a1)
{
  sub_100026AF0((void *)(v2 - 72));
  _Unwind_Resume(a1);
}

uint64_t sub_1000219D4(uint64_t a1)
{
  return sub_1000219E4(a1 + 32, *(_DWORD *)(a1 + 64));
}

uint64_t sub_1000219E4(uint64_t a1, int a2)
{
  int v4 = a2;
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2) {
    sub_100027894();
  }
  return (*(uint64_t (**)(uint64_t, int *))(*(void *)v2 + 48))(v2, &v4);
}

uint64_t sub_100021A38(uint64_t a1, uint64_t a2)
{
  return sub_1000276A8(a1 + 32, a2 + 32);
}

void *sub_100021A44(uint64_t a1)
{
  return sub_100026AF0((void *)(a1 + 32));
}

void sub_100021A4C(uint64_t a1, uint64_t a2, id **a3)
{
  uint64_t v3 = *a3;
  int v4 = a3[1];
  if (*a3 != v4)
  {
    do
    {
      sub_100049A50((uint64_t)v3, (uint64_t)v9);
      if (v9[3])
      {
        CFArrayRef v5 = sub_100049A24((uint64_t)v3);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3321888768;
        block[2] = sub_100021BF4;
        block[3] = &unk_100846728;
        sub_1000276A8((uint64_t)v8, (uint64_t)v9);
        dispatch_async(v5, block);

        sub_100026AF0(v8);
      }
      else
      {
        uint64_t v6 = (id)qword_1008ABDE0;
        if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
        {
          sub_100049A04(v3);
          objc_claimAutoreleasedReturnValue();
          sub_10040D708();
        }
      }
      sub_100026AF0(v9);
      v3 += 21;
    }
    while (v3 != v4);
  }
}

void sub_100021BC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);

  sub_100026AF0((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100021BF4(uint64_t a1)
{
  return sub_1000219E4(a1 + 32, 2);
}

uint64_t sub_100021C00(uint64_t a1)
{
  return sub_1000219E4(a1 + 32, *(_DWORD *)(a1 + 64));
}

void sub_100021C10(uint64_t a1, int a2)
{
  uint64_t v2 = *(void **)(a1 + 216);
  uint64_t v11 = (void *)(a1 + 224);
  if (v2 != (void *)(a1 + 224))
  {
    do
    {
      uint64_t v12 = 0;
      int v13 = 0;
      uint64_t v14 = 0;
      sub_10002791C(&v12, v2[5], v2[6], 0xCF3CF3CF3CF3CF3DLL * ((uint64_t)(v2[6] - v2[5]) >> 3));
      CFArrayRef v5 = v12;
      int v4 = v13;
      while (v5 != v4)
      {
        sub_100049A5C((uint64_t)v5, (uint64_t)v18);
        if (v18[3])
        {
          uint64_t v6 = sub_100049A24((uint64_t)v5);
          block[0] = _NSConcreteStackBlock;
          block[1] = 3321888768;
          block[2] = sub_100021E68;
          block[3] = &unk_100846758;
          sub_100027740((uint64_t)v16, (uint64_t)v18);
          int v17 = a2;
          dispatch_async(v6, block);

          sub_100026B74(v16);
        }
        else
        {
          uint64_t v7 = (id)qword_1008ABDE0;
          if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
          {
            sub_100049A04(v5);
            objc_claimAutoreleasedReturnValue();
            sub_10040E0B4();
          }
        }
        sub_100026B74(v18);
        v5 += 21;
      }
      v18[0] = (void **)&v12;
      sub_100027BE4(v18);
      uint64_t v8 = (void *)v2[1];
      if (v8)
      {
        do
        {
          uint64_t v9 = v8;
          uint64_t v8 = (void *)*v8;
        }
        while (v8);
      }
      else
      {
        do
        {
          uint64_t v9 = (void *)v2[2];
          BOOL v10 = *v9 == (void)v2;
          uint64_t v2 = v9;
        }
        while (!v10);
      }
      uint64_t v2 = v9;
    }
    while (v9 != v11);
  }
}

void sub_100021E1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void **a27)
{
  sub_100026B74(&a27);
  a27 = (void **)&a12;
  sub_100027BE4(&a27);
  _Unwind_Resume(a1);
}

uint64_t sub_100021E68(uint64_t a1)
{
  return sub_100021E78(a1 + 32, *(_DWORD *)(a1 + 64));
}

uint64_t sub_100021E78(uint64_t a1, int a2)
{
  int v4 = a2;
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2) {
    sub_100027894();
  }
  return (*(uint64_t (**)(uint64_t, int *))(*(void *)v2 + 48))(v2, &v4);
}

uint64_t sub_100021ECC(uint64_t a1, uint64_t a2)
{
  return sub_100027740(a1 + 32, a2 + 32);
}

void *sub_100021ED8(uint64_t a1)
{
  return sub_100026B74((void *)(a1 + 32));
}

void sub_100021EE0(uint64_t a1, int a2, id **a3)
{
  uint64_t v3 = *a3;
  int v4 = a3[1];
  if (*a3 != v4)
  {
    do
    {
      sub_100049A5C((uint64_t)v3, (uint64_t)v11);
      if (v11[3])
      {
        uint64_t v6 = sub_100049A24((uint64_t)v3);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3321888768;
        block[2] = sub_100022090;
        block[3] = &unk_100846758;
        sub_100027740((uint64_t)v9, (uint64_t)v11);
        int v10 = a2;
        dispatch_async(v6, block);

        sub_100026B74(v9);
      }
      else
      {
        uint64_t v7 = (id)qword_1008ABDE0;
        if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        {
          sub_100049A04(v3);
          objc_claimAutoreleasedReturnValue();
          sub_10040E0B4();
        }
      }
      sub_100026B74(v11);
      v3 += 21;
    }
    while (v3 != v4);
  }
}

void sub_10002205C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);

  sub_100026B74((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100022090(uint64_t a1)
{
  return sub_100021E78(a1 + 32, *(_DWORD *)(a1 + 64));
}

uint64_t sub_1000220A0(uint64_t a1, char a2)
{
  char v4 = a2;
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2) {
    sub_100027894();
  }
  return (*(uint64_t (**)(uint64_t, char *))(*(void *)v2 + 48))(v2, &v4);
}

uint64_t sub_1000220F4(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 460) == 1) {
    return 0;
  }
  else {
    return sub_10001D658();
  }
}

uint64_t sub_10002210C(uint64_t a1)
{
  if (a1)
  {
    id v1 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)pthread_attr_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "#wifi-service,WiFiManagerClientScheduleWithRunLoop", buf, 2u);
    }
    CFRunLoopGetCurrent();
    WiFiManagerClientScheduleWithRunLoop();
    while (1)
      CFRunLoopRun();
  }
  printf("%s: managerClient is NULL!", "__wifiManagerEventsThread");
  return 0;
}

void sub_1000221BC(uint64_t a1)
{
  uint64_t v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "#wifi-service,registerfForStateChanges", v3, 2u);
  }
  if (sub_100020048(a1))
  {
    WiFiDeviceClientRegisterVirtualInterfaceStateChangeCallback();
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_10040E0F8();
  }
}

BOOL sub_100022278(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (!v3)
  {
    char v4 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)pthread_attr_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "#wifi-service,checkRangingReady - copying interface state info", buf, 2u);
    }
    *(void *)pthread_attr_t buf = 0;
    sub_100020048(a1);
    WiFiDeviceClientCopyInterfaceStateInfo();
    id v3 = *(id *)buf;
  }
  CFArrayRef v5 = [v3 objectForKeyedSubscript:@"RANGING_ALLOWED"];
  uint64_t v6 = v5;
  if (v5)
  {
    if ([v5 BOOLValue])
    {
      if (!*(unsigned char *)(a1 + 56))
      {
        uint64_t v7 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)pthread_attr_t buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#wifi-service,checkRangingReady - true - report to clients", buf, 2u);
        }
        sub_100021C10(a1, 0);
        if (sub_10001E2F4(a1))
        {
          uint64_t v8 = *(NSObject **)(a1 + 80);
          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472;
          block[2] = sub_100022530;
          block[3] = &unk_1008466D8;
          void block[4] = a1;
          dispatch_async(v8, block);
        }
      }
      BOOL v9 = 1;
      *(unsigned char *)(a1 + 56) = 1;
    }
    else
    {
      if (*(unsigned char *)(a1 + 56))
      {
        uint64_t v12 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)pthread_attr_t buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "#wifi-service,checkRangingReady - false - report to clients", buf, 2u);
        }
        sub_100021C10(a1, 1);
      }
      BOOL v9 = 0;
      *(unsigned char *)(a1 + 56) = 0;
    }
  }
  else
  {
    int v10 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
    {
      if (*(unsigned char *)(a1 + 56)) {
        uint64_t v11 = "true";
      }
      else {
        uint64_t v11 = "false";
      }
      *(_DWORD *)pthread_attr_t buf = 136315138;
      *(void *)&uint8_t buf[4] = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "#wifi-service,checkRangingReady - no info - currently %s", buf, 0xCu);
    }
    BOOL v9 = *(unsigned char *)(a1 + 56) != 0;
  }

  return v9;
}

void sub_10002250C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100022530(uint64_t a1)
{
}

uint64_t sub_100022538(uint64_t a1)
{
  return sub_100020288(*(void *)(a1 + 32));
}

uint64_t sub_100022540(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  objc_storeStrong((id *)(a1 + 32), *(id *)(a2 + 32));
  objc_storeStrong((id *)(a1 + 40), *(id *)(a2 + 40));
  sub_100025E54((void *)(a1 + 48), a2 + 48);
  sub_100025EC8((void *)(a1 + 80), a2 + 80);
  sub_100025F3C((void *)(a1 + 112), a2 + 112);
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  objc_storeStrong((id *)(a1 + 152), *(id *)(a2 + 152));
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  return a1;
}

id sub_1000225DC(uint64_t a1)
{
  id v2 = [objc_alloc((Class)NSMutableArray) initWithCapacity:4];
  if (*(unsigned char *)(a1 + 408))
  {
    uint64_t v3 = a1 + 240;
    char v4 = sub_100049A04((id *)(a1 + 240));
    id v5 = [v4 copy];

    uint64_t v6 = sub_100049A0C(v3);
    id v7 = [v6 copy];

    uint64_t v8 = sub_100049A14(v3);
    id v9 = [v8 copy];

    int v10 = sub_100049A34(v3);
    id v11 = [v10 copy];

    uint64_t v12 = +[NSNumber numberWithInt:4];
    int v13 = sub_100221F28();
    if (v5 && v7 && v9)
    {
      id v14 = objc_alloc_init((Class)NSMutableDictionary);
      [v14 setValue:v11 forKey:@"STATION_MAC"];
      [v14 setValue:v5 forKey:@"RANGING_TOKEN_ID"];
      [v14 setValue:v7 forKey:@"RANGING_PMK"];
      [v14 setValue:v9 forKey:@"RANGING_NUM_MEASUREMENTS"];
      if (([v13 hasPrefix:@"iPhone"] & 1) != 0
        || [v13 hasPrefix:@"RealityDevice"])
      {
        [v14 setValue:v12 forKey:@"RANGING_CORE_MASK"];
      }
      id v15 = [v14 copy];
      [v2 addObject:v15];
    }
    else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
    {
      sub_10040E1A4();
    }
  }
  else
  {
    int v16 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
      sub_10040E12C(v16, v17, v18, v19, v20, v21, v22, v23);
    }
  }
  return v2;
}

void sub_100022808(_Unwind_Exception *a1)
{
  int v10 = v9;

  _Unwind_Resume(a1);
}

void sub_1000228AC(uint64_t a1@<X0>, const __CFArray *a2@<X1>, long long *a3@<X8>)
{
  long long v132 = 0uLL;
  unint64_t v133 = 0;
  sub_100004950(v130, "Dictionary error,");
  if (a2) {
    CFIndex Count = CFArrayGetCount(a2);
  }
  else {
    CFIndex Count = 0;
  }
  uint64_t v6 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)pthread_attr_t buf = 134349056;
    *(void *)&uint8_t buf[4] = Count;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "#wifi-service,parsing wifi callback data, nPeers %{public}ld", buf, 0xCu);
  }
  if (*(unsigned char *)(a1 + 48) || *(unsigned char *)(a1 + 408))
  {
    if (Count >= 1)
    {
      for (CFIndex i = 0; i != Count; ++i)
      {
        CFDictionaryRef ValueAtIndex = (const __CFDictionary *)CFArrayGetValueAtIndex(a2, i);
        CFDictionaryRef v9 = ValueAtIndex;
        if (ValueAtIndex && (CFTypeID v10 = CFGetTypeID(ValueAtIndex), v10 == CFDictionaryGetTypeID()))
        {
          if (!*(unsigned char *)(a1 + 48))
          {
            sub_100049A34(a1 + 240);
            id v14 = (id)objc_claimAutoreleasedReturnValue();
LABEL_26:
            uint64_t v21 = v14;
            uint64_t v137 = 0;
            [v14 getBytes:&v137 length:6];
            uint64_t v129 = v137;
            uint64_t v22 = qword_1008ABDE0;
            if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)pthread_attr_t buf = 138412290;
              *(void *)&uint8_t buf[4] = v21;
              _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "#wifi-service,macAddress %@", buf, 0xCu);
            }
            int valuePtr = 0;
            CFNumberRef Value = (const __CFNumber *)CFDictionaryGetValue(v9, @"RANGING_STATUS");
            CFNumberRef v24 = Value;
            if (Value && (CFTypeID v25 = CFGetTypeID(Value), v25 == CFNumberGetTypeID()))
            {
              CFNumberGetValue(v24, kCFNumberSInt32Type, &valuePtr);
            }
            else
            {
              int v26 = qword_1008ABDE0;
              if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
              {
                unsigned __int16 v59 = v130;
                if (v131 < 0) {
                  unsigned __int16 v59 = (void **)v130[0];
                }
                *(_DWORD *)pthread_attr_t buf = 136446210;
                *(void *)&uint8_t buf[4] = v59;
                _os_log_error_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_ERROR, "#wifi-service,%{public}s status type", buf, 0xCu);
              }
            }
            uint64_t v27 = qword_1008ABDE0;
            if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)pthread_attr_t buf = 138412546;
              *(void *)&uint8_t buf[4] = v21;
              *(_WORD *)&unsigned char buf[12] = 1024;
              *(_DWORD *)&buf[14] = valuePtr;
              _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_INFO, "#wifi-service,Ranging result from %@ resulted in status value of: %d", buf, 0x12u);
            }
            if (*(_DWORD *)(a1 + 448) == 2 || *(_DWORD *)(a1 + 452) == 2)
            {
              uint64_t v28 = qword_1008ABDE0;
              if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)pthread_attr_t buf = 138412290;
                *(void *)&uint8_t buf[4] = v21;
                _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_INFO, "#wifi-service,received responder indicator of ranging to %@", buf, 0xCu);
              }
              uint64_t v29 = v129;
              uint64_t v30 = operator new(0x18uLL);
              *(void *)uint64_t v30 = 0xFFFFFF9CFFFEFB67;
              v30[4] = 0;
              *((void *)v30 + 2) = 0;
              *(void *)pthread_attr_t buf = v29;
              *(void *)&uint8_t buf[8] = 0;
              *(_DWORD *)&uint8_t buf[16] = -998637568;
              memset(v135, 0, sizeof(v135));
              sub_1000266F4(v135, v30, (uint64_t)(v30 + 12), 1uLL);
              int v136 = 0;
              operator delete(v30);
              uint64_t v31 = *((void *)&v132 + 1);
              if (*((void *)&v132 + 1) < v133)
              {
                long long v32 = *(_OWORD *)buf;
                *(_DWORD *)(*((void *)&v132 + 1) + 16) = *(_DWORD *)&buf[16];
                *(_OWORD *)uint64_t v31 = v32;
                *(void *)(v31 + 32) = 0;
                *(void *)(v31 + 40) = 0;
                *(void *)(v31 + 24) = 0;
                *(_OWORD *)(v31 + 24) = *(_OWORD *)v135;
                *(void *)(v31 + 40) = *(void *)&v135[16];
                memset(v135, 0, sizeof(v135));
                *(_DWORD *)(v31 + 48) = v136;
                *((void *)&v132 + 1) = v31 + 56;
LABEL_141:

                continue;
              }
              uint64_t v33 = sub_100028894((uint64_t *)&v132, (uint64_t)buf);
              uint64_t v34 = *(void **)v135;
              *((void *)&v132 + 1) = v33;
              if (!*(void *)v135) {
                goto LABEL_141;
              }
              *(void *)&v135[8] = *(void *)v135;
LABEL_42:
              operator delete(v34);
              goto LABEL_141;
            }
            double v127 = 0.0;
            CFNumberRef v35 = (const __CFNumber *)CFDictionaryGetValue(v9, @"RANGING_DISTANCE");
            CFNumberRef v36 = v35;
            if (!v35 || (CFTypeID v37 = CFGetTypeID(v35), v37 != CFNumberGetTypeID()))
            {
              uint64_t v41 = qword_1008ABDE0;
              if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
                goto LABEL_141;
              }
              uint64_t v42 = v130;
              if (v131 < 0) {
                uint64_t v42 = (void **)v130[0];
              }
              *(_DWORD *)pthread_attr_t buf = 136446210;
              *(void *)&uint8_t buf[4] = v42;
              id v43 = v41;
              uint64_t v44 = "#wifi-service,%{public}s distance type";
LABEL_74:
              _os_log_error_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_ERROR, v44, buf, 0xCu);
              goto LABEL_141;
            }
            CFNumberGetValue(v36, kCFNumberDoubleType, &v127);
            __int16 v126 = 0;
            CFNumberRef v38 = (const __CFNumber *)CFDictionaryGetValue(v9, @"RANGING_FLAGS");
            CFNumberRef v39 = v38;
            if (v38 && (CFTypeID v40 = CFGetTypeID(v38), v40 == CFNumberGetTypeID()))
            {
              CFNumberGetValue(v39, kCFNumberSInt16Type, &v126);
            }
            else
            {
              id v45 = qword_1008ABDE0;
              if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
              {
                v46 = v130;
                if (v131 < 0) {
                  v46 = (void **)v130[0];
                }
                *(_DWORD *)pthread_attr_t buf = 136315138;
                *(void *)&uint8_t buf[4] = v46;
                _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEFAULT, "#wifi-service,#Warning %s flags", buf, 0xCu);
              }
            }
            uint64_t v125 = 0;
            CFNumberRef v47 = (const __CFNumber *)CFDictionaryGetValue(v9, @"RANGING_SD");
            CFNumberRef v48 = v47;
            if (v47 && (CFTypeID v49 = CFGetTypeID(v47), v49 == CFNumberGetTypeID()))
            {
              CFNumberGetValue(v48, kCFNumberDoubleType, &v125);
            }
            else
            {
              id v50 = qword_1008ABDE0;
              if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
              {
                int8x8_t v51 = v130;
                if (v131 < 0) {
                  int8x8_t v51 = (void **)v130[0];
                }
                *(_DWORD *)pthread_attr_t buf = 136315138;
                *(void *)&uint8_t buf[4] = v51;
                _os_log_impl((void *)&_mh_execute_header, v50, OS_LOG_TYPE_DEFAULT, "#wifi-service,#Warning %s stdDev", buf, 0xCu);
              }
            }
            uint64_t v124 = 0;
            CFNumberRef v52 = (const __CFNumber *)CFDictionaryGetValue(v9, @"RANGING_VALID_COUNT");
            CFNumberRef v53 = v52;
            if (!v52 || (CFTypeID v54 = CFGetTypeID(v52), v54 != CFNumberGetTypeID()))
            {
              uint64_t v57 = qword_1008ABDE0;
              if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
                goto LABEL_141;
              }
              int v58 = v130;
              if (v131 < 0) {
                int v58 = (void **)v130[0];
              }
              *(_DWORD *)pthread_attr_t buf = 136446210;
              *(void *)&uint8_t buf[4] = v58;
              id v43 = v57;
              uint64_t v44 = "#wifi-service,%{public}s count type";
              goto LABEL_74;
            }
            CFNumberGetValue(v53, kCFNumberLongType, &v124);
            if (v124 >= 9)
            {
              uint64_t v55 = qword_1008ABDE0;
              if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
                goto LABEL_141;
              }
              uint64_t v56 = v130;
              if (v131 < 0) {
                uint64_t v56 = (void **)v130[0];
              }
              *(_DWORD *)pthread_attr_t buf = 136446210;
              *(void *)&uint8_t buf[4] = v56;
              id v43 = v55;
              uint64_t v44 = "#wifi-service,%{public}s too many measurements in burst";
              goto LABEL_74;
            }
            v121 = 0;
            v122 = 0;
            uint64_t v123 = 0;
            CFArrayRef v60 = (const __CFArray *)CFDictionaryGetValue(v9, @"RANGING_RESULTS");
            CFArrayRef cf = v60;
            if (!v60 || (CFTypeID v61 = CFGetTypeID(v60), v62 = v61 == CFArrayGetTypeID(), v63 = cf, !v62))
            {
              v99 = qword_1008ABDE0;
              if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
              {
                v107 = v130;
                if (v131 < 0) {
                  v107 = (void **)v130[0];
                }
                *(_DWORD *)pthread_attr_t buf = 136446210;
                *(void *)&uint8_t buf[4] = v107;
                _os_log_error_impl((void *)&_mh_execute_header, v99, OS_LOG_TYPE_ERROR, "#wifi-service,%{public}s results array type", buf, 0xCu);
              }
LABEL_127:
              unint64_t v100 = 126 - 2 * __clz(0xAAAAAAAAAAAAAAABLL * ((v122 - v121) >> 3));
              if (v122 == v121) {
                uint64_t v101 = 0;
              }
              else {
                uint64_t v101 = v100;
              }
              sub_100028C6C((unint64_t)v121, (unint64_t)v122, v101, 1);
              if (v122 == v121)
              {
                if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
                  sub_10040E218(&v114, v115);
                }
              }
              else
              {
                uint64_t v102 = *((void *)&v132 + 1);
                if (*((void *)&v132 + 1) >= v133)
                {
                  uint64_t v103 = sub_100029A3C((uint64_t *)&v132, &v129, &v127, (uint64_t)&v121);
                }
                else
                {
                  sub_100029B7C((uint64_t)&v133, *((uint64_t *)&v132 + 1), &v129, &v127, (uint64_t)&v121);
                  uint64_t v103 = v102 + 56;
                }
                *((void *)&v132 + 1) = v103;
                v104 = qword_1008ABDE0;
                if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
                {
                  *(_DWORD *)pthread_attr_t buf = 67110144;
                  *(_DWORD *)&uint8_t buf[4] = i;
                  *(_WORD *)&uint8_t buf[8] = 1024;
                  *(_DWORD *)&buf[10] = valuePtr;
                  *(_WORD *)&buf[14] = 2048;
                  *(double *)&uint8_t buf[16] = v127;
                  *(_WORD *)v135 = 2048;
                  *(void *)&v135[2] = v125;
                  *(_WORD *)&v135[10] = 2048;
                  *(void *)&v135[12] = v124;
                  _os_log_impl((void *)&_mh_execute_header, v104, OS_LOG_TYPE_DEFAULT, "#wifi-service,WRTT, peer # %i, status %d, distance %f, uncertainty %f, num meas %li", buf, 0x2Cu);
                }
              }
LABEL_139:
              uint64_t v34 = v121;
              if (!v121) {
                goto LABEL_141;
              }
              v122 = v121;
              goto LABEL_42;
            }
            CFIndex v64 = CFArrayGetCount(cf);
            if (v64 != v124)
            {
              CFIndex v105 = v64;
              v106 = qword_1008ABDE0;
              if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
              {
                unsigned __int16 v108 = v130;
                if (v131 < 0) {
                  unsigned __int16 v108 = (void **)v130[0];
                }
                *(_DWORD *)pthread_attr_t buf = 136446722;
                *(void *)&uint8_t buf[4] = v108;
                *(_WORD *)&unsigned char buf[12] = 2050;
                *(void *)&buf[14] = v105;
                *(_WORD *)&unsigned char buf[22] = 2050;
                *(void *)v135 = v124;
                _os_log_error_impl((void *)&_mh_execute_header, v106, OS_LOG_TYPE_ERROR, "#wifi-service,%{public}s array length %{public}lu not equal to valid measurements %{public}lu", buf, 0x20u);
              }
              goto LABEL_139;
            }
            CFIndex v110 = v64;
            if (v64 < 1) {
              goto LABEL_127;
            }
            CFIndex v65 = 0;
            while (2)
            {
              CFIndex v112 = v65;
              CFDictionaryRef v66 = (const __CFDictionary *)CFArrayGetValueAtIndex(v63, v65);
              CFDictionaryRef v67 = v66;
              if (v66 && (CFTypeID v68 = CFGetTypeID(v66), v68 == CFDictionaryGetTypeID()))
              {
                int v120 = 0;
                CFNumberRef v69 = (const __CFNumber *)CFDictionaryGetValue(v67, @"RANGING_RSSI");
                CFNumberRef v70 = v69;
                if (v69 && (CFTypeID v71 = CFGetTypeID(v69), v71 == CFNumberGetTypeID()))
                {
                  CFNumberGetValue(v70, kCFNumberSInt32Type, &v120);
                  int v119 = 0;
                  CFNumberRef v72 = (const __CFNumber *)CFDictionaryGetValue(v67, @"RANGING_RTT");
                  CFNumberRef v73 = v72;
                  if (v72 && (CFTypeID v74 = CFGetTypeID(v72), v74 == CFNumberGetTypeID()))
                  {
                    CFNumberGetValue(v73, kCFNumberSInt32Type, &v119);
                    unsigned __int8 v118 = 0;
                    CFNumberRef v75 = (const __CFNumber *)CFDictionaryGetValue(v67, @"RANGING_CORE_ID");
                    CFNumberRef v76 = v75;
                    if (v75 && (CFTypeID v77 = CFGetTypeID(v75), v77 == CFNumberGetTypeID()))
                    {
                      CFNumberGetValue(v76, kCFNumberSInt8Type, &v118);
                      unsigned __int8 v117 = 0;
                      CFNumberRef v78 = (const __CFNumber *)CFDictionaryGetValue(v67, @"RANGING_PEER_CORE_ID");
                      CFNumberRef v79 = v78;
                      if (v78 && (CFTypeID v80 = CFGetTypeID(v78), v80 == CFNumberGetTypeID()))
                      {
                        CFNumberGetValue(v79, kCFNumberSInt8Type, &v117);
                        uint64_t v116 = 0;
                        CFNumberRef v81 = (const __CFNumber *)CFDictionaryGetValue(v67, @"RANGING_RESULT_TIMESTAMP");
                        CFNumberRef v82 = v81;
                        if (v81)
                        {
                          CFTypeID v83 = CFGetTypeID(v81);
                          if (v83 == CFNumberGetTypeID())
                          {
                            CFNumberGetValue(v82, kCFNumberSInt64Type, &v116);
                            v84 = qword_1008ABDE0;
                            if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
                            {
                              *(_DWORD *)pthread_attr_t buf = 138413570;
                              *(void *)&uint8_t buf[4] = v21;
                              *(_WORD *)&unsigned char buf[12] = 1024;
                              *(_DWORD *)&buf[14] = v120;
                              *(_WORD *)&buf[18] = 1024;
                              *(_DWORD *)&buf[20] = v119;
                              *(_WORD *)v135 = 1024;
                              *(_DWORD *)&v135[2] = v118;
                              *(_WORD *)&v135[6] = 1024;
                              *(_DWORD *)&v135[8] = v117;
                              *(_WORD *)&v135[12] = 2048;
                              *(void *)&v135[14] = v116;
                              _os_log_impl((void *)&_mh_execute_header, v84, OS_LOG_TYPE_DEFAULT, "#wifi-service,WRTT: id: %@, rssi: %i, rtt: %i, coreID: %u, peerCoreID: %u, timestamp: 0x%llx", buf, 0x2Eu);
                            }
                            sub_100023978((void **)&v121, &v119, &v120, (char *)&v118, (char *)&v117, &v116);
LABEL_124:
                            CFArrayRef v63 = cf;
                            CFIndex v65 = v112 + 1;
                            if (v110 == v112 + 1) {
                              goto LABEL_127;
                            }
                            continue;
                          }
                        }
                        uint64_t v97 = qword_1008ABDE0;
                        if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
                          goto LABEL_124;
                        }
                        signed int v98 = v130;
                        if (v131 < 0) {
                          signed int v98 = (void **)v130[0];
                        }
                        *(_DWORD *)pthread_attr_t buf = 136446466;
                        *(void *)&uint8_t buf[4] = v98;
                        *(_WORD *)&unsigned char buf[12] = 2050;
                        *(void *)&buf[14] = v112;
                        v87 = v97;
                        unsigned __int8 v88 = "#wifi-service,%{public}s timestamp %{public}ld type";
                      }
                      else
                      {
                        uint64_t v95 = qword_1008ABDE0;
                        if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
                          goto LABEL_124;
                        }
                        unsigned int v96 = v130;
                        if (v131 < 0) {
                          unsigned int v96 = (void **)v130[0];
                        }
                        *(_DWORD *)pthread_attr_t buf = 136446466;
                        *(void *)&uint8_t buf[4] = v96;
                        *(_WORD *)&unsigned char buf[12] = 2050;
                        *(void *)&buf[14] = v112;
                        v87 = v95;
                        unsigned __int8 v88 = "#wifi-service,%{public}s peerCoreID %{public}ld type";
                      }
                    }
                    else
                    {
                      uint64_t v93 = qword_1008ABDE0;
                      if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
                        goto LABEL_124;
                      }
                      v94 = v130;
                      if (v131 < 0) {
                        v94 = (void **)v130[0];
                      }
                      *(_DWORD *)pthread_attr_t buf = 136446466;
                      *(void *)&uint8_t buf[4] = v94;
                      *(_WORD *)&unsigned char buf[12] = 2050;
                      *(void *)&buf[14] = v112;
                      v87 = v93;
                      unsigned __int8 v88 = "#wifi-service,%{public}s selfCoreID %{public}ld type";
                    }
                  }
                  else
                  {
                    uint64_t v91 = qword_1008ABDE0;
                    if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
                      goto LABEL_124;
                    }
                    v92 = v130;
                    if (v131 < 0) {
                      v92 = (void **)v130[0];
                    }
                    *(_DWORD *)pthread_attr_t buf = 136446466;
                    *(void *)&uint8_t buf[4] = v92;
                    *(_WORD *)&unsigned char buf[12] = 2050;
                    *(void *)&buf[14] = v112;
                    v87 = v91;
                    unsigned __int8 v88 = "#wifi-service,%{public}s oneRtt %{public}ld type";
                  }
                }
                else
                {
                  uint64_t v89 = qword_1008ABDE0;
                  if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
                    goto LABEL_124;
                  }
                  int v90 = v130;
                  if (v131 < 0) {
                    int v90 = (void **)v130[0];
                  }
                  *(_DWORD *)pthread_attr_t buf = 136446466;
                  *(void *)&uint8_t buf[4] = v90;
                  *(_WORD *)&unsigned char buf[12] = 2050;
                  *(void *)&buf[14] = v112;
                  v87 = v89;
                  unsigned __int8 v88 = "#wifi-service,%{public}s oneRssi %{public}ld type";
                }
              }
              else
              {
                uint64_t v85 = qword_1008ABDE0;
                if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
                  goto LABEL_124;
                }
                v86 = v130;
                if (v131 < 0) {
                  v86 = (void **)v130[0];
                }
                *(_DWORD *)pthread_attr_t buf = 136446466;
                *(void *)&uint8_t buf[4] = v86;
                *(_WORD *)&unsigned char buf[12] = 2050;
                *(void *)&buf[14] = v112;
                v87 = v85;
                unsigned __int8 v88 = "#wifi-service,%{public}s oneMeas %{public}ld type";
              }
              break;
            }
            _os_log_error_impl((void *)&_mh_execute_header, v87, OS_LOG_TYPE_ERROR, v88, buf, 0x16u);
            goto LABEL_124;
          }
          id v11 = (void *)CFDictionaryGetValue(v9, @"RANGING_TOKEN_ID");
          uint64_t v12 = v11;
          if (v11)
          {
            CFTypeID v13 = CFGetTypeID(v11);
            if (v13 == CFDataGetTypeID())
            {
              id v14 = v12;
              goto LABEL_26;
            }
          }
          uint64_t v19 = qword_1008ABDE0;
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
          {
            uint64_t v20 = v130;
            if (v131 < 0) {
              uint64_t v20 = (void **)v130[0];
            }
            *(_DWORD *)pthread_attr_t buf = 136446210;
            *(void *)&uint8_t buf[4] = v20;
            uint64_t v17 = v19;
            uint64_t v18 = "#wifi-service,%{public}s ranging token id type";
LABEL_20:
            _os_log_error_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, v18, buf, 0xCu);
          }
        }
        else
        {
          uint64_t v15 = qword_1008ABDE0;
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
          {
            int v16 = v130;
            if (v131 < 0) {
              int v16 = (void **)v130[0];
            }
            *(_DWORD *)pthread_attr_t buf = 136446210;
            *(void *)&uint8_t buf[4] = v16;
            uint64_t v17 = v15;
            uint64_t v18 = "#wifi-service,%{public}s dictionary type";
            goto LABEL_20;
          }
        }
      }
    }
    *a3 = v132;
    *((void *)a3 + 2) = v133;
    int v109 = &v132;
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
      sub_10040E1D8();
    }
    int v109 = a3;
  }
  *(void *)int v109 = 0;
  *((void *)v109 + 1) = 0;
  *((void *)v109 + 2) = 0;
  if (v131 < 0) {
    operator delete(v130[0]);
  }
  *(void *)pthread_attr_t buf = &v132;
  sub_1000287F0((void ***)buf);
}

void sub_1000238B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,void *__p,uint64_t a42)
{
  if (__p) {
    operator delete(__p);
  }

  if (*(char *)(v43 - 225) < 0) {
    operator delete(*(void **)(v43 - 248));
  }
  *(void *)(v43 - 192) = v43 - 224;
  sub_1000287F0((void ***)(v43 - 192));
  _Unwind_Resume(a1);
}

char *sub_100023978(void **a1, _DWORD *a2, int *a3, char *a4, char *a5, uint64_t *a6)
{
  id v14 = a1[2];
  uint64_t v12 = (uint64_t)(a1 + 2);
  CFTypeID v13 = v14;
  unint64_t v15 = *(void *)(v12 - 8);
  if (v15 >= (unint64_t)v14)
  {
    unint64_t v21 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v15 - (void)*a1) >> 3);
    unint64_t v22 = v21 + 1;
    if (v21 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1000267C4();
    }
    unint64_t v23 = 0xAAAAAAAAAAAAAAABLL * ((v13 - (unsigned char *)*a1) >> 3);
    if (2 * v23 > v22) {
      unint64_t v22 = 2 * v23;
    }
    if (v23 >= 0x555555555555555) {
      unint64_t v24 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v24 = v22;
    }
    CFTypeID v25 = (char *)sub_1000267DC(v12, v24);
    int v26 = *a3;
    uint64_t v27 = &v25[24 * v21];
    uint64_t v29 = &v25[24 * v28];
    char v30 = *a4;
    char v31 = *a5;
    uint64_t v32 = *a6;
    *(_DWORD *)uint64_t v27 = *a2;
    *((_DWORD *)v27 + 1) = v26;
    v27[8] = v30;
    v27[9] = v31;
    *((void *)v27 + 2) = v32;
    uint64_t v20 = v27 + 24;
    uint64_t v34 = (char *)*a1;
    uint64_t v33 = (char *)a1[1];
    if (v33 != *a1)
    {
      do
      {
        long long v35 = *(_OWORD *)(v33 - 24);
        *((void *)v27 - 1) = *((void *)v33 - 1);
        *(_OWORD *)(v27 - 24) = v35;
        v27 -= 24;
        v33 -= 24;
      }
      while (v33 != v34);
      uint64_t v33 = (char *)*a1;
    }
    *a1 = v27;
    a1[1] = v20;
    a1[2] = v29;
    if (v33) {
      operator delete(v33);
    }
  }
  else
  {
    int v16 = *a3;
    char v17 = *a4;
    char v18 = *a5;
    uint64_t v19 = *a6;
    *(_DWORD *)unint64_t v15 = *a2;
    *(_DWORD *)(v15 + 4) = v16;
    *(unsigned char *)(v15 + 8) = v17;
    *(unsigned char *)(v15 + 9) = v18;
    *(void *)(v15 + 16) = v19;
    uint64_t v20 = (char *)(v15 + 24);
  }
  a1[1] = v20;
  return v20 - 24;
}

void sub_100023AE0(uint64_t a1, uint64_t a2, const __CFArray *a3, uint64_t a4, int a5)
{
  uint64_t v8 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  if (a5)
  {
    *(unsigned char *)(a1 + 52) = 0;
    if (*(unsigned char *)(a1 + 184)) {
      *(unsigned char *)(a1 + 184) = 0;
    }
  }
  CFDictionaryRef v9 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)pthread_attr_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "#wifi-service,onWiFiDeviceClientRangingCallback", buf, 2u);
  }
  unint64_t v24 = v8;
  uint64_t v25 = a1;
  sub_1000228AC(a1, a3, &v36);
  int v26 = (long long *)*((void *)&v36 + 1);
  CFTypeID v10 = (long long *)v36;
  if ((void)v36 != *((void *)&v36 + 1))
  {
    id v11 = (void *)(a1 + 224);
    do
    {
      long long v12 = *v10;
      int v31 = *((_DWORD *)v10 + 4);
      *(_OWORD *)pthread_attr_t buf = v12;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      uint64_t v32 = 0;
      sub_1000266F4(&v32, *((const void **)v10 + 3), *((void *)v10 + 4), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)v10 + 4) - *((void *)v10 + 3)) >> 3));
      int v35 = *((_DWORD *)v10 + 12);
      uint64_t v13 = *(void *)buf;
      id v14 = (void *)*v11;
      if (!*v11) {
        goto LABEL_19;
      }
      unint64_t v15 = v11;
      do
      {
        unint64_t v16 = v14[4];
        BOOL v17 = v16 >= *(void *)buf;
        if (v16 >= *(void *)buf) {
          char v18 = v14;
        }
        else {
          char v18 = v14 + 1;
        }
        if (v17) {
          unint64_t v15 = v14;
        }
        id v14 = (void *)*v18;
      }
      while (*v18);
      if (v15 != v11 && *(void *)buf >= v15[4])
      {
        uint64_t v27 = 0;
        uint64_t v28 = 0;
        uint64_t v29 = 0;
        sub_10002791C(&v27, v15[5], v15[6], 0xCF3CF3CF3CF3CF3DLL * ((uint64_t)(v15[6] - v15[5]) >> 3));
        unint64_t v21 = v27;
        uint64_t v20 = v28;
        while (v21 != v20)
        {
          sub_100049A44((uint64_t)v21, (uint64_t)v45);
          *(void *)&uint8_t buf[8] = sub_100049A2C((uint64_t)v21);
          if (v46)
          {
            unint64_t v22 = sub_100049A24((uint64_t)v21);
            block[0] = _NSConcreteStackBlock;
            block[1] = 3321888768;
            block[2] = sub_100023F7C;
            block[3] = &unk_100846788;
            sub_100027610((uint64_t)v38, (uint64_t)v45);
            long long v39 = *(_OWORD *)buf;
            int v40 = v31;
            uint64_t v42 = 0;
            uint64_t v43 = 0;
            std::string __p = 0;
            sub_1000266F4(&__p, v32, (uint64_t)v33, 0xAAAAAAAAAAAAAAABLL * ((v33 - (unsigned char *)v32) >> 3));
            int v44 = v35;
            dispatch_async(v22, block);

            if (__p)
            {
              uint64_t v42 = __p;
              operator delete(__p);
            }
            sub_100026A6C(v38);
          }
          else
          {
            unint64_t v23 = (id)qword_1008ABDE0;
            if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
            {
              sub_100049A04(v21);
              objc_claimAutoreleasedReturnValue();
              sub_10040E244();
            }
          }
          sub_100026A6C(v45);
          v21 += 21;
        }
        *(void *)id v45 = &v27;
        sub_100027BE4((void ***)v45);
      }
      else
      {
LABEL_19:
        uint64_t v19 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)id v45 = 134217984;
          *(void *)&void v45[4] = v13;
          _os_log_error_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "#wifi-service,Received results for unmatched peer ID %llu", v45, 0xCu);
        }
      }
      if (v32)
      {
        uint64_t v33 = v32;
        operator delete(v32);
      }
      CFTypeID v10 = (long long *)((char *)v10 + 56);
    }
    while (v10 != v26);
  }
  if (a5) {
    sub_10001DA2C(v25, 0.0);
  }
  *(void *)pthread_attr_t buf = &v36;
  sub_1000287F0((void ***)buf);
  std::mutex::unlock(v24);
}

void sub_100023ECC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::mutex *a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_100023F7C(uint64_t a1)
{
  long long v8 = *(_OWORD *)(a1 + 64);
  int v9 = *(_DWORD *)(a1 + 80);
  id v11 = 0;
  uint64_t v12 = 0;
  std::string __p = 0;
  sub_1000266F4(&__p, *(const void **)(a1 + 88), *(void *)(a1 + 96), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 96) - *(void *)(a1 + 88)) >> 3));
  int v13 = *(_DWORD *)(a1 + 112);
  uint64_t v4 = 0;
  id v5 = 0;
  uint64_t v3 = 0;
  uint64_t v6 = &v3;
  char v7 = 0;
  uint64_t v3 = (char *)operator new(0x38uLL);
  uint64_t v4 = (uint64_t)v3;
  id v5 = v3 + 56;
  uint64_t v4 = sub_100029C40((uint64_t)&v5, &v8, &v14, (uint64_t)v3);
  uint64_t v2 = *(void *)(a1 + 56);
  if (!v2) {
    sub_100027894();
  }
  (*(void (**)(uint64_t, char **))(*(void *)v2 + 48))(v2, &v3);
  uint64_t v6 = &v3;
  sub_1000287F0((void ***)&v6);
  if (__p)
  {
    id v11 = __p;
    operator delete(__p);
  }
}

void sub_1000240BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p)
  {
    a19 = (uint64_t)__p;
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void *sub_100024104(uint64_t a1, uint64_t a2)
{
  sub_100027610(a1 + 32, a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  int v5 = *(_DWORD *)(a2 + 80);
  *(void *)(a1 + 88) = 0;
  *(_DWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 64) = v4;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  uint64_t result = sub_1000266F4((void *)(a1 + 88), *(const void **)(a2 + 88), *(void *)(a2 + 96), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 96) - *(void *)(a2 + 88)) >> 3));
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  return result;
}

void sub_100024180(_Unwind_Exception *a1)
{
  sub_100026A6C(v1);
  _Unwind_Resume(a1);
}

void *sub_100024194(void *a1)
{
  uint64_t v2 = (void *)a1[11];
  if (v2)
  {
    a1[12] = v2;
    operator delete(v2);
  }

  return sub_100026A6C(a1 + 4);
}

void sub_1000241D8(uint64_t a1, uint64_t a2, const __CFArray *a3)
{
  int v5 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  uint64_t v6 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)pthread_attr_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "#wifi-service,onWiFiDeviceClientRangingCallback2p4GHz", buf, 2u);
  }
  sub_1000228AC(a1, a3, &v20);
  long long v8 = (long long *)*((void *)&v20 + 1);
  char v7 = (long long *)v20;
  if ((void)v20 == *((void *)&v20 + 1)) {
    goto LABEL_25;
  }
  do
  {
    long long v9 = *v7;
    int v15 = *((_DWORD *)v7 + 4);
    *(_OWORD *)pthread_attr_t buf = v9;
    BOOL v17 = 0;
    uint64_t v18 = 0;
    unint64_t v16 = 0;
    sub_1000266F4(&v16, *((const void **)v7 + 3), *((void *)v7 + 4), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)v7 + 4) - *((void *)v7 + 3)) >> 3));
    int v19 = *((_DWORD *)v7 + 12);
    int v10 = *(unsigned __int8 *)(a1 + 408);
    if (*(unsigned char *)(a1 + 408))
    {
      sub_100049A44(a1 + 240, (uint64_t)v29);
      *(void *)&uint8_t buf[8] = sub_100049A2C(a1 + 240);
      if (v29[3])
      {
        id v11 = sub_100049A24(a1 + 240);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3321888768;
        block[2] = sub_1000245A4;
        block[3] = &unk_100846788;
        sub_100027610((uint64_t)v22, (uint64_t)v29);
        long long v23 = *(_OWORD *)buf;
        int v24 = v15;
        int v26 = 0;
        uint64_t v27 = 0;
        std::string __p = 0;
        sub_1000266F4(&__p, v16, (uint64_t)v17, 0xAAAAAAAAAAAAAAABLL * ((v17 - (unsigned char *)v16) >> 3));
        int v28 = v19;
        dispatch_async(v11, block);

        if (__p)
        {
          int v26 = __p;
          operator delete(__p);
        }
        sub_100026A6C(v22);
      }
      else
      {
        int v13 = (id)qword_1008ABDE0;
        if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
        {
          sub_100049A04((id *)(a1 + 240));
          objc_claimAutoreleasedReturnValue();
          sub_10040E244();
        }
      }
      sub_100026A6C(v29);
    }
    else
    {
      uint64_t v12 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
        sub_10040E288(v30, &v31, v12);
      }
    }
    if (v16)
    {
      BOOL v17 = v16;
      operator delete(v16);
    }
    if (!v10) {
      break;
    }
    char v7 = (long long *)((char *)v7 + 56);
  }
  while (v7 != v8);
  if ((void)v20 == *((void *)&v20 + 1))
  {
LABEL_25:
    if (*(unsigned char *)(a1 + 408)) {
      sub_100021834(a1, 4);
    }
  }
  *(_DWORD *)(a1 + 452) = 0;
  *(unsigned char *)(a1 + 48) = 1;
  *(void *)pthread_attr_t buf = &v20;
  sub_1000287F0((void ***)buf);
  std::mutex::unlock(v5);
}

void sub_100024514(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::mutex *a9, uint64_t a10, uint64_t a11, uint64_t a12, char *a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  a13 = &a20;
  sub_1000287F0((void ***)&a13);
  std::mutex::unlock(v20);
  _Unwind_Resume(a1);
}

void sub_1000245A4(uint64_t a1)
{
  *(_OWORD *)pthread_attr_t buf = *(_OWORD *)(a1 + 64);
  int v10 = *(_DWORD *)(a1 + 80);
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  std::string __p = 0;
  sub_1000266F4(&__p, *(const void **)(a1 + 88), *(void *)(a1 + 96), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 96) - *(void *)(a1 + 88)) >> 3));
  int v14 = *(_DWORD *)(a1 + 112);
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  long long v4 = 0;
  char v7 = &v4;
  char v8 = 0;
  long long v4 = (char *)operator new(0x38uLL);
  uint64_t v5 = (uint64_t)v4;
  uint64_t v6 = v4 + 56;
  uint64_t v5 = sub_100029C40((uint64_t)&v6, (long long *)buf, &v15, (uint64_t)v4);
  uint64_t v2 = *(void *)(a1 + 56);
  if (!v2) {
    sub_100027894();
  }
  (*(void (**)(uint64_t, char **))(*(void *)v2 + 48))(v2, &v4);
  char v7 = &v4;
  sub_1000287F0((void ***)&v7);
  if (__p)
  {
    uint64_t v12 = __p;
    operator delete(__p);
  }
  uint64_t v3 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)pthread_attr_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#wifi-service,peer callback", buf, 2u);
  }
}

void sub_100024728(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p)
  {
    a19 = (uint64_t)__p;
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_100024770(uint64_t a1, uint64_t a2, int a3, const void *a4)
{
  char v7 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  *(unsigned char *)(a1 + 53) = 0;
  if (*(unsigned char *)(a1 + 168)) {
    *(unsigned char *)(a1 + 168) = 0;
  }
  char v8 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "#wifi-service,onWiFiDeviceClientStartNetworkCallback", v11, 2u);
  }
  BOOL v9 = a3 == 37 || a3 == 0;
  if (v9 && a4)
  {
    if (a3 == 37 && os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10040E30C();
    }
    if (!*(_DWORD *)(a1 + 464)) {
      *(unsigned char *)(a1 + 50) = 1;
    }
    if (*(void *)(a1 + 40))
    {
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
        sub_10040E2D8();
      }
      CFRelease(*(CFTypeRef *)(a1 + 40));
      *(void *)(a1 + 40) = 0;
    }
    *(void *)(a1 + 40) = a4;
    CFRetain(a4);
  }
  else
  {
    BOOL v10 = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR);
    if (a3 == 37)
    {
      if (v10) {
        sub_10040E340();
      }
      sub_10001F614(a1, 1);
      sub_10001F86C(a1);
    }
    else if (v10)
    {
      sub_10040E374();
    }
  }
  sub_100024914(a1);
  std::mutex::unlock(v7);
}

void sub_100024900(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_100024914(uint64_t a1)
{
  uint64_t v2 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(unsigned __int8 *)(a1 + 51);
    int v4 = *(unsigned __int8 *)(a1 + 50);
    sub_100024F90(*(_DWORD *)(a1 + 456), __p);
    uint64_t v5 = v12 >= 0 ? __p : (void **)__p[0];
    *(_DWORD *)pthread_attr_t buf = 67109634;
    int v14 = v3;
    __int16 v15 = 1024;
    int v16 = v4;
    __int16 v17 = 2080;
    uint64_t v18 = v5;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#wifi-service,handling AWDL state update; awdlLinkIsUp: %d, followModeIsUp %d, AWDLActivityState: %s",
      buf,
      0x18u);
    if (v12 < 0) {
      operator delete(__p[0]);
    }
  }

  if (!*(unsigned char *)(a1 + 51))
  {
    if (*(_DWORD *)(a1 + 456) < 2u) {
      return;
    }
    uint64_t v6 = (int *)(a1 + 456);
LABEL_14:
    char v8 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)pthread_attr_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#wifi-service,AWDL link is down", buf, 2u);
    }
    int v9 = 5;
LABEL_17:
    *uint64_t v6 = v9;
    sub_10001DA2C(a1, 0.0);
    return;
  }
  uint64_t v6 = (int *)(a1 + 456);
  unsigned int v7 = *(_DWORD *)(a1 + 456);
  if (!*(unsigned char *)(a1 + 50) && !*(_DWORD *)(a1 + 464))
  {
    if (v7 < 2) {
      return;
    }
    goto LABEL_14;
  }
  if ((v7 & 0xFFFFFFFE) != 2 && sub_10001E2F4(a1))
  {
    BOOL v10 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)pthread_attr_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#wifi-service,AWDL link is available", buf, 2u);
    }
    int v9 = 2;
    goto LABEL_17;
  }
}

void sub_100024B0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100024B24(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  uint64_t v6 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    v8[0] = 67109120;
    v8[1] = a3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#wifi-service,WiFiDeviceClientStopNetwork callback with error: %d", (uint8_t *)v8, 8u);
  }
  unsigned int v7 = *(const void **)(a1 + 40);
  if (v7)
  {
    CFRelease(v7);
    *(void *)(a1 + 40) = 0;
  }
  *(_DWORD *)(a1 + 456) = 0;
  sub_10001DA2C(a1, 0.0);
  std::mutex::unlock(v5);
}

void sub_100024C08(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_100024C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  if (a3)
  {
    uint64_t v6 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)pthread_attr_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "#wifi-service,Device attachment callback - success", buf, 2u);
    }
    *(unsigned char *)(a1 + 55) = 1;
  }
  else
  {
    unsigned int v7 = (const void *)WiFiManagerClientCopyInterfaces();
    char v8 = qword_1008ABDE0;
    if (v7)
    {
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)BOOL v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "#wifi-service,Device attachment callback - success via interfaces copy", v10, 2u);
      }
      *(unsigned char *)(a1 + 55) = 1;
      CFRelease(v7);
    }
    else
    {
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
        sub_10040E3E8();
      }
      sub_10001F614(a1, 1);
      sub_10001F86C(a1);
      int v9 = *(const void **)(a1 + 16);
      if (v9)
      {
        CFRelease(v9);
        *(void *)(a1 + 16) = 0;
      }
    }
  }
  std::mutex::unlock(v5);
}

void sub_100024D68(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_100024D7C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  uint64_t v6 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
  {
    LOWORD(v13) = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "#wifi-service,onWifiDeviceClientVirtualInterfaceStateChangeCallback", (uint8_t *)&v13, 2u);
  }
  id v7 = a3;
  objc_storeStrong((id *)(a1 + 208), a3);
  char v8 = [v7 objectForKeyedSubscript:@"LINK_CHANGED_IS_LINKDOWN"];
  int v9 = v8;
  if (v8)
  {
    if ([v8 BOOLValue]) {
      *(unsigned char *)(a1 + 51) = 0;
    }
    else {
      *(unsigned char *)(a1 + 51) = 1;
    }
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_10040E41C();
  }
  BOOL v10 = [v7 objectForKeyedSubscript:@"AWDL_INFO"];
  id v11 = [v10 objectForKeyedSubscript:@"AWDL_IF_MAC_ADDRESS"];
  char v12 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    int v13 = 138412290;
    int v14 = v11;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "#wifi-service,self mac address awdl: %@", (uint8_t *)&v13, 0xCu);
  }
  sub_100022278(a1, v7);
  sub_100024914(a1);

  std::mutex::unlock(v5);
}

void sub_100024F48(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void *sub_100024F90@<X0>(int a1@<W1>, void *a2@<X8>)
{
  return sub_100004950(a2, off_1008467F8[a1]);
}

void sub_100024FA4(uint64_t a1, void *a2, uint64_t a3)
{
}

unint64_t sub_100024FB0(uint64_t a1, id **a2, int a3)
{
  uint64_t v6 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  if ((sub_10001D658() & 1) == 0)
  {
    BOOL v10 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)pthread_attr_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "#wifi-service,startRangingWithAuthPeer, ignoring range request on unsupported platform", buf, 2u);
    }
    uint64_t v11 = 0;
    char v12 = &_mh_execute_header;
    goto LABEL_44;
  }
  id v7 = qword_1008ABDE0;
  BOOL v8 = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT);
  if (a3 == 1)
  {
    if (v8)
    {
      *(_WORD *)pthread_attr_t buf = 0;
      int v9 = "#wifi-service,WRTT, startRangingWithAuthPeer as initiator";
LABEL_10:
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, v9, buf, 2u);
    }
  }
  else if (v8)
  {
    *(_WORD *)pthread_attr_t buf = 0;
    int v9 = "#wifi-service,WRTT, startRangingWithAuthPeer as responder";
    goto LABEL_10;
  }
  if (*(unsigned char *)(a1 + 408))
  {
    int v13 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)pthread_attr_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "#wifi-service,Received a start ranging request while servicing a previous request", buf, 2u);
    }
    char v12 = &_mh_execute_header;
    uint64_t v11 = 5;
    goto LABEL_44;
  }
  int v14 = sub_100049A04(*a2);
  if (v14)
  {
    __int16 v15 = sub_100049A0C((uint64_t)*a2);
    if (v15)
    {
      int v16 = sub_100049A14((uint64_t)*a2);
      BOOL v17 = v16 == 0;

      if (!v17)
      {
        *(_DWORD *)(a1 + 452) = a3;
        *(unsigned char *)(a1 + 48) = 0;
        sub_100025548(a1 + 240, (uint64_t)*a2);
        CFArrayRef v18 = (const __CFArray *)sub_1000225DC(a1);
        if (CFArrayGetCount(v18) < 1)
        {
          uint64_t v27 = qword_1008ABDE0;
          if (a3 == 1)
          {
            if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
              sub_10040DDC4();
            }
            goto LABEL_43;
          }
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)pthread_attr_t buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "#wifi-service,WiFiDeviceClientSetRangeable FALSE", buf, 2u);
          }
          sub_1000215D0(a1);
          if (!WiFiDeviceClientSetRangeable()
            || !os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
          {
            goto LABEL_43;
          }
          goto LABEL_42;
        }
        double v19 = (double)CFArrayGetCount(v18) * 15.0;
        long long v20 = (id)qword_1008ABDE0;
        BOOL v21 = os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT);
        if (a3 == 1)
        {
          if (v21)
          {
            CFIndex Count = CFArrayGetCount(v18);
            *(_DWORD *)pthread_attr_t buf = 134349312;
            *(void *)&uint8_t buf[4] = Count;
            *(_WORD *)&unsigned char buf[12] = 2050;
            *(double *)&buf[14] = v19;
            long long v23 = "#wifi-service,WiFiDeviceClientRangingStartAsync, num peers, %{public}ld, timeout, %{public}lf";
            int v24 = v20;
            uint32_t v25 = 22;
LABEL_31:
            _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, v23, buf, v25);
          }
        }
        else if (v21)
        {
          CFIndex v28 = CFArrayGetCount(v18);
          *(_DWORD *)pthread_attr_t buf = 134349056;
          *(void *)&uint8_t buf[4] = v28;
          long long v23 = "#wifi-service,WiFiDeviceClientSetRangeable TRUE, num peers, %{public}ld";
          int v24 = v20;
          uint32_t v25 = 12;
          goto LABEL_31;
        }

        sub_1000215D0(a1);
        WiFiDeviceClientRegisterRangingReportCallback();
        if (a3 == 1)
        {
          sub_1000215D0(a1);
          if (WiFiDeviceClientRangingStartAsync())
          {
            char v12 = &_mh_execute_header;
            uint64_t v11 = 4;
            goto LABEL_44;
          }
LABEL_43:
          CFRelease(v18);
          char v12 = 0;
          uint64_t v11 = 0;
          goto LABEL_44;
        }
        sub_1000215D0(a1);
        if (!WiFiDeviceClientSetRangeable()
          || !os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
        {
          goto LABEL_43;
        }
LABEL_42:
        sub_10040DE24();
        goto LABEL_43;
      }
    }
    else
    {
    }
  }
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
    sub_10040E450();
  }
  sub_10002580C((uint64_t)buf, (uint64_t)*a2);
  char v30 = 0;
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  uint64_t v33 = &v30;
  char v34 = 0;
  char v30 = (id *)operator new(0xA8uLL);
  uint64_t v31 = v30;
  uint64_t v32 = v30 + 21;
  uint64_t v31 = (id *)sub_100027C7C((uint64_t)&v32, (uint64_t)buf, (uint64_t)&v41, (uint64_t)v30);
  sub_100021A4C((uint64_t)v31, v26, &v30);
  uint64_t v33 = &v30;
  sub_100027BE4((void ***)&v33);

  sub_100026B74(v40);
  sub_100026AF0(v39);
  sub_100026A6C(v38);

  char v12 = &_mh_execute_header;
  uint64_t v11 = 2;
LABEL_44:
  std::mutex::unlock(v6);
  return v11 | (unint64_t)v12;
}

void sub_1000254B4(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100025548(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 168))
  {
    sub_100022540(a1, a2);
  }
  else
  {
    sub_10002580C(a1, a2);
    *(unsigned char *)(a1 + 168) = 1;
  }
  return a1;
}

void sub_100025590(uint64_t a1)
{
  uint64_t v2 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  int v3 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)pthread_attr_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#wifi-service,stopRangingWithAuthPeer", buf, 2u);
  }
  if (sub_10001D658())
  {
    if (*(unsigned char *)(a1 + 408))
    {
      sub_1000225DC(a1);
      sub_1000215D0(a1);
      if (WiFiDeviceClientSetRangeable())
      {
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
          sub_10040DE24();
        }
      }
    }
    sub_1000256E4(a1 + 240);
    *(_DWORD *)(a1 + 452) = 0;
    *(unsigned char *)(a1 + 48) = 1;
  }
  else
  {
    int v4 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "#wifi-service,ignoring ranging stop on unsupported platform", v5, 2u);
    }
  }
  std::mutex::unlock(v2);
}

void sub_1000256C8(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1000256E4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 168))
  {

    sub_100026B74((void *)(a1 + 112));
    sub_100026AF0((void *)(a1 + 80));
    sub_100026A6C((void *)(a1 + 48));

    *(unsigned char *)(a1 + 168) = 0;
  }
}

void *sub_100025750(void *__dst, long long *a2, uint64_t a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_100002DE4(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)__dst = v5;
  }
  sub_100027124((uint64_t)(__dst + 3), a3);
  __dst[7] = *(id *)(a3 + 32);
  return __dst;
}

void sub_1000257BC(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000257D8()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  uint64_t v1 = std::bad_array_new_length::bad_array_new_length(exception);
}

uint64_t sub_10002580C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(id *)a2;
  *(void *)(a1 + 8) = *(id *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(id *)(a2 + 32);
  *(void *)(a1 + 40) = *(id *)(a2 + 40);
  sub_100027610(a1 + 48, a2 + 48);
  sub_1000276A8(a1 + 80, a2 + 80);
  sub_100027740(a1 + 112, a2 + 112);
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  id v4 = *(id *)(a2 + 152);
  uint64_t v5 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = v4;
  *(void *)(a1 + 160) = v5;
  return a1;
}

void sub_1000258B8(_Unwind_Exception *a1)
{
  sub_100026AF0(v3);
  sub_100026A6C(v2);

  _Unwind_Resume(a1);
}

uint64_t sub_100025904(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 168))
  {

    sub_100026B74((void *)(a1 + 112));
    sub_100026AF0((void *)(a1 + 80));
    sub_100026A6C((void *)(a1 + 48));
  }
  return a1;
}

void sub_100025970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    sub_100024B24(a4, a2, a2);
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_10040E484();
  }
}

void sub_1000259D0(uint64_t a1, const __CFArray *a2, int a3, uint64_t a4)
{
  id v7 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    if (a2) {
      CFIndex Count = CFArrayGetCount(a2);
    }
    else {
      CFIndex Count = -1;
    }
    v11[0] = 67109376;
    v11[1] = a3;
    __int16 v12 = 2050;
    CFIndex v13 = Count;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#wifi-service,WiFiDeviceClientRangingCallback got called: error=%i results=%{public}ld", (uint8_t *)v11, 0x12u);
  }

  if (a4)
  {
    sub_100023AE0(a4, v9, a2, v10, 1);
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_10040E4B8();
  }
}

void sub_100025AE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100025B00(uint64_t a1, const __CFArray *a2, uint64_t a3)
{
  uint64_t v5 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    if (a2) {
      CFIndex Count = CFArrayGetCount(a2);
    }
    else {
      CFIndex Count = -1;
    }
    int v9 = 134349056;
    CFIndex v10 = Count;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#wifi-service,WiFiDeviceClientRangingReportCallback got called: results=%{public}ld", (uint8_t *)&v9, 0xCu);
  }

  if (a3)
  {
    sub_100023AE0(a3, v7, a2, v8, 0);
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_10040E4EC();
  }
}

void sub_100025C00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100025C18(uint64_t a1, const __CFArray *a2, uint64_t a3)
{
  uint64_t v5 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    if (a2) {
      CFIndex Count = CFArrayGetCount(a2);
    }
    else {
      CFIndex Count = -1;
    }
    int v9 = 134349056;
    CFIndex v10 = Count;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#wifi-service,WiFiDeviceClientRangingReportCallback got called: results=%{public}ld", (uint8_t *)&v9, 0xCu);
  }

  if (a3)
  {
    sub_100023AE0(a3, v7, a2, v8, 0);
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_10040E4EC();
  }
}

void sub_100025D18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100025D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    sub_100024B24(a4, a2, a2);
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_10040E484();
  }
}

void sub_100025D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_100024C1C(a3, a2, a2);
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_10040E520();
  }
}

void sub_100025DF0(uint64_t a1, uint64_t a2, const void *a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    sub_100024770(a5, a2, a2, a3);
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_10040E554();
  }
}

void *sub_100025E54(void *a1, uint64_t a2)
{
  sub_100027610((uint64_t)v4, a2);
  sub_100025FB0(v4, a1);
  sub_100026A6C(v4);
  return a1;
}

void *sub_100025EC8(void *a1, uint64_t a2)
{
  sub_1000276A8((uint64_t)v4, a2);
  sub_10002621C(v4, a1);
  sub_100026AF0(v4);
  return a1;
}

void *sub_100025F3C(void *a1, uint64_t a2)
{
  sub_100027740((uint64_t)v4, a2);
  sub_100026488(v4, a1);
  sub_100026B74(v4);
  return a1;
}

void *sub_100025FB0(void *result, void *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    uint64_t v4 = (void *)result[3];
    uint64_t v5 = (void *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(void *, void *))(*result + 24))(result, v6);
        (*(void (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        v3[3] = 0;
        (*(void (**)(void, void *))(*(void *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(void))(*(void *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        v3[3] = v3;
        (*(void (**)(void *, void *))(v6[0] + 24))(v6, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(void *, void *))(*result + 24))(result, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(void *, void *))(*a2 + 24))(a2, result);
      uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_100026210(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100012C10(a1);
}

void *sub_10002621C(void *result, void *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    uint64_t v4 = (void *)result[3];
    uint64_t v5 = (void *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(void *, void *))(*result + 24))(result, v6);
        (*(void (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        v3[3] = 0;
        (*(void (**)(void, void *))(*(void *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(void))(*(void *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        v3[3] = v3;
        (*(void (**)(void *, void *))(v6[0] + 24))(v6, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(void *, void *))(*result + 24))(result, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(void *, void *))(*a2 + 24))(a2, result);
      uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_10002647C(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100012C10(a1);
}

void *sub_100026488(void *result, void *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    uint64_t v4 = (void *)result[3];
    uint64_t v5 = (void *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(void *, void *))(*result + 24))(result, v6);
        (*(void (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        v3[3] = 0;
        (*(void (**)(void, void *))(*(void *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(void))(*(void *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        v3[3] = v3;
        (*(void (**)(void *, void *))(v6[0] + 24))(v6, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(void *, void *))(*result + 24))(result, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(void *, void *))(*a2 + 24))(a2, result);
      uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_1000266E8(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100012C10(a1);
}

void *sub_1000266F4(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    uint64_t result = sub_100026770(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_100026754(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_100026770(void *a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    sub_1000267C4();
  }
  uint64_t result = (char *)sub_1000267DC((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[24 * v4];
  return result;
}

void sub_1000267C4()
{
}

void *sub_1000267DC(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    sub_1000257D8();
  }
  return operator new(24 * a2);
}

void sub_100026824(uint64_t a1, const __CFArray *a2, int a3, uint64_t a4)
{
  uint64_t v7 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    if (a2) {
      CFIndex Count = CFArrayGetCount(a2);
    }
    else {
      CFIndex Count = -1;
    }
    v10[0] = 67109376;
    v10[1] = a3;
    __int16 v11 = 2050;
    CFIndex v12 = Count;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#wifi-service,WiFiDeviceClientRangingCallback got called: error=%i results=%{public}ld", (uint8_t *)v10, 0x12u);
  }

  if (a4)
  {
    sub_1000241D8(a4, v9, a2);
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_10040E4B8();
  }
}

void sub_10002693C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100026954(uint64_t a1, const __CFArray *a2, uint64_t a3)
{
  uint64_t v5 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    if (a2) {
      CFIndex Count = CFArrayGetCount(a2);
    }
    else {
      CFIndex Count = -1;
    }
    int v8 = 134349056;
    CFIndex v9 = Count;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#wifi-service,WiFiDeviceClientRangingReportCallback got called: results=%{public}ld", (uint8_t *)&v8, 0xCu);
  }

  if (a3)
  {
    sub_1000241D8(a3, v7, a2);
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_10040E4EC();
  }
}

void sub_100026A54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_100026A6C(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_100026AF0(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_100026B74(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t *sub_100026BF8(uint64_t **a1, const void **a2, long long *a3)
{
  uint64_t v5 = (uint64_t **)sub_100026C8C((uint64_t)a1, &v10, a2);
  uint64_t v6 = *v5;
  if (!*v5)
  {
    uint64_t v7 = v5;
    sub_100026D2C((uint64_t)a1, a3, (uint64_t)v9);
    sub_100026D98(a1, v10, v7, v9[0]);
    uint64_t v6 = v9[0];
    v9[0] = 0;
    sub_100027070((uint64_t)v9, 0);
  }
  return v6;
}

void *sub_100026C8C(uint64_t a1, void *a2, const void **a3)
{
  uint64_t v5 = (void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    uint64_t v7 = a1 + 16;
    do
    {
      while (1)
      {
        int v8 = (void *)v4;
        CFIndex v9 = (const void **)(v4 + 32);
        if (!sub_100007524(v7, a3, (const void **)(v4 + 32))) {
          break;
        }
        uint64_t v4 = *v8;
        uint64_t v5 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (!sub_100007524(v7, v9, a3)) {
        break;
      }
      uint64_t v5 = v8 + 1;
      uint64_t v4 = v8[1];
    }
    while (v4);
  }
  else
  {
    int v8 = (void *)(a1 + 8);
  }
LABEL_10:
  *a2 = v8;
  return v5;
}

void *sub_100026D2C@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x60uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = sub_100026DF0(v6 + 4, a2);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_100026D80(_Unwind_Exception *a1)
{
  sub_100027070(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t *sub_100026D98(uint64_t **a1, uint64_t a2, uint64_t **a3, uint64_t *a4)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = a2;
  *a3 = a4;
  uint64_t v5 = (uint64_t *)**a1;
  if (v5)
  {
    *a1 = v5;
    a4 = *a3;
  }
  uint64_t result = sub_100026ED8(a1[1], a4);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return result;
}

void *sub_100026DF0(void *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_100002DE4(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)__dst = v4;
  }
  sub_100026E58((uint64_t)(__dst + 3), (uint64_t)a2 + 24);
  uint64_t v5 = *((void *)a2 + 7);
  *((void *)a2 + 7) = 0;
  __dst[7] = v5;
  return __dst;
}

uint64_t sub_100026E58(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(*(void *)*v3 + 24))(*v3, a1);
      return a1;
    }
    *(void *)(a1 + 24) = v4;
  }
  else
  {
    uint64_t v3 = (void *)(a1 + 24);
  }
  *uint64_t v3 = 0;
  return a1;
}

uint64_t *sub_100026ED8(uint64_t *result, uint64_t *a2)
{
  *((unsigned char *)a2 + 24) = a2 == result;
  if (a2 != result)
  {
    do
    {
      uint64_t v2 = (uint64_t *)a2[2];
      if (*((unsigned char *)v2 + 24)) {
        return result;
      }
      uint64_t v3 = (uint64_t *)v2[2];
      uint64_t v4 = (uint64_t *)*v3;
      if ((uint64_t *)*v3 == v2)
      {
        uint64_t v7 = v3[1];
        if (!v7 || (int v8 = *(unsigned __int8 *)(v7 + 24), v5 = (unsigned char *)(v7 + 24), v8))
        {
          if ((uint64_t *)*v2 == a2)
          {
            CFIndex v9 = (uint64_t **)a2[2];
          }
          else
          {
            CFIndex v9 = (uint64_t **)v2[1];
            uint64_t v10 = *v9;
            v2[1] = (uint64_t)*v9;
            if (v10)
            {
              _DWORD v10[2] = (uint64_t)v2;
              uint64_t v3 = (uint64_t *)v2[2];
            }
            v9[2] = v3;
            *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = v9;
            *CFIndex v9 = v2;
            v2[2] = (uint64_t)v9;
            uint64_t v3 = v9[2];
            uint64_t v2 = (uint64_t *)*v3;
          }
          *((unsigned char *)v9 + 24) = 1;
          *((unsigned char *)v3 + 24) = 0;
          uint64_t v13 = v2[1];
          *uint64_t v3 = v13;
          if (v13) {
            *(void *)(v13 + 16) = v3;
          }
          v2[2] = v3[2];
          *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
          v2[1] = (uint64_t)v3;
          goto LABEL_27;
        }
      }
      else if (!v4 || (int v6 = *((unsigned __int8 *)v4 + 24), v5 = v4 + 3, v6))
      {
        if ((uint64_t *)*v2 == a2)
        {
          uint64_t v11 = a2[1];
          *uint64_t v2 = v11;
          if (v11)
          {
            *(void *)(v11 + 16) = v2;
            uint64_t v3 = (uint64_t *)v2[2];
          }
          a2[2] = (uint64_t)v3;
          *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = a2;
          a2[1] = (uint64_t)v2;
          v2[2] = (uint64_t)a2;
          uint64_t v3 = (uint64_t *)a2[2];
        }
        else
        {
          a2 = (uint64_t *)a2[2];
        }
        *((unsigned char *)a2 + 24) = 1;
        *((unsigned char *)v3 + 24) = 0;
        uint64_t v2 = (uint64_t *)v3[1];
        uint64_t v12 = *v2;
        v3[1] = *v2;
        if (v12) {
          *(void *)(v12 + 16) = v3;
        }
        v2[2] = v3[2];
        *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
        *uint64_t v2 = (uint64_t)v3;
LABEL_27:
        v3[2] = (uint64_t)v2;
        return result;
      }
      *((unsigned char *)v2 + 24) = 1;
      a2 = v3;
      *((unsigned char *)v3 + 24) = v3 == result;
      *uint64_t v5 = 1;
    }
    while (v3 != result);
  }
  return result;
}

void sub_100027070(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_1000270C8((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

void sub_1000270C8(uint64_t a1)
{
  uint64_t v2 = (void *)(a1 + 24);

  sub_10000AF74(v2);
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v3 = *(void **)a1;
    operator delete(v3);
  }
}

uint64_t sub_100027124(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_1000271BC(uint64_t **a1, const void **a2)
{
  uint64_t v3 = (uint64_t *)sub_100007494((uint64_t)a1, a2);
  if (a1 + 1 == (uint64_t **)v3) {
    return 0;
  }
  uint64_t v4 = v3;
  sub_100027218(a1, v3);
  sub_1000270C8((uint64_t)(v4 + 4));
  operator delete(v4);
  return 1;
}

uint64_t *sub_100027218(uint64_t **a1, uint64_t *a2)
{
  uint64_t v2 = (uint64_t *)a2[1];
  if (v2)
  {
    do
    {
      uint64_t v3 = v2;
      uint64_t v2 = (uint64_t *)*v2;
    }
    while (v2);
  }
  else
  {
    uint64_t v4 = a2;
    do
    {
      uint64_t v3 = (uint64_t *)v4[2];
      BOOL v5 = *v3 == (void)v4;
      uint64_t v4 = v3;
    }
    while (!v5);
  }
  if (*a1 == a2) {
    *a1 = v3;
  }
  int v6 = a1[1];
  a1[2] = (uint64_t *)((char *)a1[2] - 1);
  sub_10002728C(v6, a2);
  return v3;
}

uint64_t *sub_10002728C(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2;
  if (*a2)
  {
    uint64_t v4 = (uint64_t *)a2[1];
    if (!v4)
    {
      uint64_t v3 = a2;
      goto LABEL_7;
    }
    do
    {
      uint64_t v3 = v4;
      uint64_t v4 = (uint64_t *)*v4;
    }
    while (v4);
  }
  uint64_t v2 = v3[1];
  if (v2)
  {
LABEL_7:
    int v5 = 0;
    *(void *)(v2 + 16) = v3[2];
    goto LABEL_8;
  }
  int v5 = 1;
LABEL_8:
  int v6 = (uint64_t **)v3[2];
  uint64_t v7 = *v6;
  if (*v6 == v3)
  {
    *int v6 = (uint64_t *)v2;
    if (v3 == result)
    {
      uint64_t v7 = 0;
      uint64_t result = (uint64_t *)v2;
    }
    else
    {
      uint64_t v7 = v6[1];
    }
  }
  else
  {
    v6[1] = (uint64_t *)v2;
  }
  int v8 = *((unsigned __int8 *)v3 + 24);
  if (v3 != a2)
  {
    uint64_t v9 = a2[2];
    v3[2] = v9;
    *(void *)(v9 + 8 * (*(void *)a2[2] != (void)a2)) = v3;
    uint64_t v11 = *a2;
    uint64_t v10 = a2[1];
    *(void *)(v11 + 16) = v3;
    *uint64_t v3 = v11;
    v3[1] = v10;
    if (v10) {
      *(void *)(v10 + 16) = v3;
    }
    *((unsigned char *)v3 + 24) = *((unsigned char *)a2 + 24);
    if (result == a2) {
      uint64_t result = v3;
    }
  }
  if (!v8 || !result) {
    return result;
  }
  if (!v5)
  {
    *(unsigned char *)(v2 + 24) = 1;
    return result;
  }
  while (1)
  {
    uint64_t v12 = v7[2];
    if (*(uint64_t **)v12 == v7) {
      break;
    }
    if (!*((unsigned char *)v7 + 24))
    {
      *((unsigned char *)v7 + 24) = 1;
      *(unsigned char *)(v12 + 24) = 0;
      uint64_t v13 = *(uint64_t **)(v12 + 8);
      uint64_t v14 = *v13;
      *(void *)(v12 + 8) = *v13;
      if (v14) {
        *(void *)(v14 + 16) = v12;
      }
      v13[2] = *(void *)(v12 + 16);
      *(void *)(*(void *)(v12 + 16) + 8 * (**(void **)(v12 + 16) != v12)) = v13;
      *uint64_t v13 = v12;
      *(void *)(v12 + 16) = v13;
      if (result == (uint64_t *)*v7) {
        uint64_t result = v7;
      }
      uint64_t v7 = *(uint64_t **)(*v7 + 8);
    }
    __int16 v15 = (void *)*v7;
    if (*v7 && !*((unsigned char *)v15 + 24))
    {
      int v16 = (uint64_t *)v7[1];
      if (!v16) {
        goto LABEL_56;
      }
LABEL_55:
      if (*((unsigned char *)v16 + 24))
      {
LABEL_56:
        *((unsigned char *)v15 + 24) = 1;
        *((unsigned char *)v7 + 24) = 0;
        uint64_t v22 = v15[1];
        uint64_t *v7 = v22;
        if (v22) {
          *(void *)(v22 + 16) = v7;
        }
        v15[2] = v7[2];
        *(void *)(v7[2] + 8 * (*(void *)v7[2] != (void)v7)) = v15;
        v15[1] = v7;
        v7[2] = (uint64_t)v15;
        int v16 = v7;
      }
      else
      {
        __int16 v15 = v7;
      }
      uint64_t v23 = v15[2];
      *((unsigned char *)v15 + 24) = *(unsigned char *)(v23 + 24);
      *(unsigned char *)(v23 + 24) = 1;
      *((unsigned char *)v16 + 24) = 1;
      int v24 = *(uint64_t **)(v23 + 8);
      uint64_t v25 = *v24;
      *(void *)(v23 + 8) = *v24;
      if (v25) {
        *(void *)(v25 + 16) = v23;
      }
      v24[2] = *(void *)(v23 + 16);
      *(void *)(*(void *)(v23 + 16) + 8 * (**(void **)(v23 + 16) != v23)) = v24;
      *int v24 = v23;
      goto LABEL_72;
    }
    int v16 = (uint64_t *)v7[1];
    if (v16 && !*((unsigned char *)v16 + 24)) {
      goto LABEL_55;
    }
    *((unsigned char *)v7 + 24) = 0;
    BOOL v17 = (uint64_t *)v7[2];
    if (v17 == result)
    {
      BOOL v17 = result;
LABEL_53:
      *((unsigned char *)v17 + 24) = 1;
      return result;
    }
    if (!*((unsigned char *)v17 + 24)) {
      goto LABEL_53;
    }
LABEL_49:
    uint64_t v7 = *(uint64_t **)(v17[2] + 8 * (*(void *)v17[2] == (void)v17));
  }
  if (!*((unsigned char *)v7 + 24))
  {
    *((unsigned char *)v7 + 24) = 1;
    *(unsigned char *)(v12 + 24) = 0;
    uint64_t v18 = v7[1];
    *(void *)uint64_t v12 = v18;
    if (v18) {
      *(void *)(v18 + 16) = v12;
    }
    v7[2] = *(void *)(v12 + 16);
    *(void *)(*(void *)(v12 + 16) + 8 * (**(void **)(v12 + 16) != v12)) = v7;
    v7[1] = v12;
    *(void *)(v12 + 16) = v7;
    if (result == (uint64_t *)v12) {
      uint64_t result = v7;
    }
    uint64_t v7 = *(uint64_t **)v12;
  }
  double v19 = (void *)*v7;
  if (*v7 && !*((unsigned char *)v19 + 24)) {
    goto LABEL_68;
  }
  long long v20 = (uint64_t *)v7[1];
  if (!v20 || *((unsigned char *)v20 + 24))
  {
    *((unsigned char *)v7 + 24) = 0;
    BOOL v17 = (uint64_t *)v7[2];
    if (*((unsigned char *)v17 + 24)) {
      BOOL v21 = v17 == result;
    }
    else {
      BOOL v21 = 1;
    }
    if (v21) {
      goto LABEL_53;
    }
    goto LABEL_49;
  }
  if (v19 && !*((unsigned char *)v19 + 24))
  {
LABEL_68:
    long long v20 = v7;
  }
  else
  {
    *((unsigned char *)v20 + 24) = 1;
    *((unsigned char *)v7 + 24) = 0;
    uint64_t v26 = *v20;
    v7[1] = *v20;
    if (v26) {
      *(void *)(v26 + 16) = v7;
    }
    _OWORD v20[2] = v7[2];
    *(void *)(v7[2] + 8 * (*(void *)v7[2] != (void)v7)) = v20;
    uint64_t *v20 = (uint64_t)v7;
    v7[2] = (uint64_t)v20;
    double v19 = v7;
  }
  uint64_t v23 = v20[2];
  *((unsigned char *)v20 + 24) = *(unsigned char *)(v23 + 24);
  *(unsigned char *)(v23 + 24) = 1;
  *((unsigned char *)v19 + 24) = 1;
  int v24 = *(uint64_t **)v23;
  uint64_t v27 = *(void *)(*(void *)v23 + 8);
  *(void *)uint64_t v23 = v27;
  if (v27) {
    *(void *)(v27 + 16) = v23;
  }
  v24[2] = *(void *)(v23 + 16);
  *(void *)(*(void *)(v23 + 16) + 8 * (**(void **)(v23 + 16) != v23)) = v24;
  v24[1] = v23;
LABEL_72:
  *(void *)(v23 + 16) = v24;
  return result;
}

uint64_t sub_100027610(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_1000276A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_100027740(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_1000277D8(uint64_t a1, char *a2)
{
  if (a2)
  {
    sub_1000277D8(a1, *(void *)a2);
    sub_1000277D8(a1, *((void *)a2 + 1));
    uint64_t v4 = (void **)(a2 + 40);
    sub_100027BE4(&v4);
    operator delete(a2);
  }
}

void sub_100027838(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100027838(a1, *a2);
    sub_100027838(a1, a2[1]);
    sub_1000270C8((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void sub_100027894()
{
  exception = __cxa_allocate_exception(8uLL);
  void *exception = &off_1008467E0;
}

void sub_1000278E4(std::exception *a1)
{
  std::exception::~exception(a1);

  operator delete();
}

void *sub_10002791C(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    int v6 = result;
    sub_1000279A4(result, a4);
    uint64_t result = (void *)sub_100027A48((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_100027984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_100027BE4(&a9);
  _Unwind_Resume(a1);
}

char *sub_1000279A4(void *a1, unint64_t a2)
{
  if (a2 >= 0x186186186186187) {
    sub_1000267C4();
  }
  uint64_t result = (char *)sub_1000279FC((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[168 * v4];
  return result;
}

void *sub_1000279FC(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x186186186186187) {
    sub_1000257D8();
  }
  return operator new(168 * a2);
}

uint64_t sub_100027A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  uint64_t v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  _DWORD v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      sub_10002580C(v4, v6);
      v6 += 168;
      uint64_t v4 = v11 + 168;
      v11 += 168;
    }
    while (v6 != a3);
  }
  char v9 = 1;
  sub_100027AEC((uint64_t)v8);
  return v4;
}

void sub_100027AD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100027AEC(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_100027B24((uint64_t *)a1);
  }
  return a1;
}

void sub_100027B24(uint64_t *a1)
{
  uint64_t v2 = (uint64_t *)a1[1];
  uint64_t v1 = (uint64_t *)a1[2];
  uint64_t v3 = *v1;
  uint64_t v4 = *v2;
  if (*v1 != *v2)
  {
    uint64_t v5 = *a1;
    do
    {
      v3 -= 168;
      sub_100027B78(v5, v3);
    }
    while (v3 != v4);
  }
}

void sub_100027B78(uint64_t a1, uint64_t a2)
{
  sub_100026B74((void *)(a2 + 112));
  sub_100026AF0((void *)(a2 + 80));
  sub_100026A6C((void *)(a2 + 48));

  uint64_t v3 = *(void **)a2;
}

void sub_100027BE4(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 168;
        sub_100027B78((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t sub_100027C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  uint64_t v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  _DWORD v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      sub_10002580C(v4, v6);
      v6 += 168;
      uint64_t v4 = v11 + 168;
      v11 += 168;
    }
    while (v6 != a3);
  }
  char v9 = 1;
  sub_100027AEC((uint64_t)v8);
  return v4;
}

void sub_100027D0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t **sub_100027D20(uint64_t **a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v6 = a1 + 1;
  uint64_t v5 = a1[1];
  if (v5)
  {
    unint64_t v7 = *a2;
    while (1)
    {
      while (1)
      {
        int v8 = (uint64_t **)v5;
        unint64_t v9 = v5[4];
        if (v7 >= v9) {
          break;
        }
        uint64_t v5 = *v8;
        uint64_t v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (v9 >= v7) {
        break;
      }
      uint64_t v5 = v8[1];
      if (!v5)
      {
        uint64_t v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    int v8 = a1 + 1;
LABEL_10:
    uint64_t v10 = (char *)operator new(0x40uLL);
    *((void *)v10 + 4) = *(void *)a3;
    *(_OWORD *)(v10 + 40) = *(_OWORD *)(a3 + 8);
    *((void *)v10 + 7) = *(void *)(a3 + 24);
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
    *(void *)(a3 + 24) = 0;
    sub_100026D98(a1, (uint64_t)v8, v6, (uint64_t *)v10);
    return (uint64_t **)v10;
  }
  return v8;
}

uint64_t sub_100027DF4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xCF3CF3CF3CF3CF3DLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0x186186186186186) {
    sub_1000267C4();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xCF3CF3CF3CF3CF3DLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0xC30C30C30C30C3) {
    unint64_t v9 = 0x186186186186186;
  }
  else {
    unint64_t v9 = v5;
  }
  BOOL v17 = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)sub_1000279FC(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v13 = v10;
  uint64_t v14 = &v10[168 * v4];
  int v16 = &v10[168 * v9];
  sub_10002580C((uint64_t)v14, a2);
  __int16 v15 = v14 + 168;
  sub_100027F14(a1, &v13);
  uint64_t v11 = a1[1];
  sub_1000282D0(&v13);
  return v11;
}

void sub_100027F00(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000282D0((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100027F14(uint64_t *a1, void *a2)
{
  uint64_t result = sub_100027F8C((uint64_t)(a1 + 2), a1[1], (long long *)a1[1], *a1, (long long *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_100027F8C(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, long long *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  char v14 = 0;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    unint64_t v9 = a3;
    do
    {
      unint64_t v9 = (long long *)((char *)v9 - 168);
      sub_100028044(a1, v7 - 168, v9);
      uint64_t v7 = *((void *)&v16 + 1) - 168;
      *((void *)&v16 + 1) -= 168;
    }
    while (v9 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  sub_100028244((uint64_t)v13);
  return v11;
}

uint64_t sub_100028044(uint64_t a1, uint64_t a2, long long *a3)
{
  long long v5 = *a3;
  *a3 = 0u;
  *(_OWORD *)a2 = v5;
  *(_OWORD *)(a2 + 16) = a3[1];
  long long v6 = a3[2];
  a3[2] = 0u;
  *(_OWORD *)(a2 + 32) = v6;
  sub_1000280C4(a2 + 48, (uint64_t)(a3 + 3));
  sub_100028144(a2 + 80, (uint64_t)(a3 + 5));
  uint64_t result = sub_1000281C4(a2 + 112, (uint64_t)(a3 + 7));
  *(_DWORD *)(a2 + 144) = *((_DWORD *)a3 + 36);
  uint64_t v8 = *((void *)a3 + 19);
  uint64_t v9 = *((void *)a3 + 20);
  *((void *)a3 + 19) = 0;
  *(void *)(a2 + 152) = v8;
  *(void *)(a2 + 160) = v9;
  return result;
}

uint64_t sub_1000280C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(*(void *)*v3 + 24))(*v3, a1);
      return a1;
    }
    *(void *)(a1 + 24) = v4;
  }
  else
  {
    uint64_t v3 = (void *)(a1 + 24);
  }
  *uint64_t v3 = 0;
  return a1;
}

uint64_t sub_100028144(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(*(void *)*v3 + 24))(*v3, a1);
      return a1;
    }
    *(void *)(a1 + 24) = v4;
  }
  else
  {
    uint64_t v3 = (void *)(a1 + 24);
  }
  *uint64_t v3 = 0;
  return a1;
}

uint64_t sub_1000281C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(*(void *)*v3 + 24))(*v3, a1);
      return a1;
    }
    *(void *)(a1 + 24) = v4;
  }
  else
  {
    uint64_t v3 = (void *)(a1 + 24);
  }
  *uint64_t v3 = 0;
  return a1;
}

uint64_t sub_100028244(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_10002827C((uint64_t *)a1);
  }
  return a1;
}

void sub_10002827C(uint64_t *a1)
{
  uint64_t v1 = *(void *)(a1[2] + 8);
  uint64_t v2 = *(void *)(a1[1] + 8);
  if (v1 != v2)
  {
    uint64_t v3 = *a1;
    do
    {
      sub_100027B78(v3, v1);
      v1 += 168;
    }
    while (v1 != v2);
  }
}

void **sub_1000282D0(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void sub_100028304(void *a1)
{
  uint64_t v2 = a1[1];
  for (uint64_t i = a1[2]; i != v2; uint64_t i = a1[2])
  {
    uint64_t v4 = a1[4];
    a1[2] = i - 168;
    sub_100027B78(v4, i - 168);
  }
}

uint64_t *sub_10002834C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  if (a1 != a2)
  {
    do
    {
      sub_1000283AC(a3, v4);
      v4 += 21;
      a3 += 168;
    }
    while (v4 != a2);
    return a2;
  }
  return v4;
}

uint64_t sub_1000283AC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *a2 = 0;
  long long v5 = *(void **)a1;
  *(void *)a1 = v4;

  uint64_t v6 = a2[1];
  a2[1] = 0;
  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v6;

  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  uint64_t v8 = a2[4];
  a2[4] = 0;
  uint64_t v9 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v8;

  uint64_t v10 = a2[5];
  a2[5] = 0;
  uint64_t v11 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v10;

  sub_100028480((void *)(a1 + 48), (uint64_t)(a2 + 6));
  sub_10002858C((void *)(a1 + 80), (uint64_t)(a2 + 10));
  sub_100028698((void *)(a1 + 112), (uint64_t)(a2 + 14));
  *(_DWORD *)(a1 + 144) = *((_DWORD *)a2 + 36);
  uint64_t v12 = a2[19];
  a2[19] = 0;
  uint64_t v13 = *(void **)(a1 + 152);
  *(void *)(a1 + 152) = v12;

  *(void *)(a1 + 160) = a2[20];
  return a1;
}

void *sub_100028480(void *a1, uint64_t a2)
{
  sub_100028504(a1);
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      a1[3] = a1;
      (*(void (**)(void, void *))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      a1[3] = v4;
      *(void *)(a2 + 24) = 0;
    }
  }
  else
  {
    a1[3] = 0;
  }
  return a1;
}

void *sub_100028504(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  a1[3] = 0;
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_10002858C(void *a1, uint64_t a2)
{
  sub_100028610(a1);
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      a1[3] = a1;
      (*(void (**)(void, void *))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      a1[3] = v4;
      *(void *)(a2 + 24) = 0;
    }
  }
  else
  {
    a1[3] = 0;
  }
  return a1;
}

void *sub_100028610(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  a1[3] = 0;
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_100028698(void *a1, uint64_t a2)
{
  sub_10002871C(a1);
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      a1[3] = a1;
      (*(void (**)(void, void *))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      a1[3] = v4;
      *(void *)(a2 + 24) = 0;
    }
  }
  else
  {
    a1[3] = 0;
  }
  return a1;
}

void *sub_10002871C(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  a1[3] = 0;
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t *sub_1000287A4(uint64_t **a1, uint64_t a2)
{
  uint64_t v3 = sub_100027218(a1, (uint64_t *)a2);
  long long v5 = (void **)(a2 + 40);
  sub_100027BE4(&v5);
  operator delete((void *)a2);
  return v3;
}

void sub_1000287F0(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_100028844((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_100028844(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 56)
  {
    uint64_t v4 = *(void **)(i - 32);
    if (v4)
    {
      *(void *)(i - 24) = v4;
      operator delete(v4);
    }
  }
  a1[1] = v2;
}

uint64_t sub_100028894(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = 0x6DB6DB6DB6DB6DB7 * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) > 0x492492492492492) {
    sub_1000267C4();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0x6DB6DB6DB6DB6DB7 * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x249249249249249) {
    unint64_t v9 = 0x492492492492492;
  }
  else {
    unint64_t v9 = v5;
  }
  void v16[4] = a1 + 2;
  uint64_t v10 = (char *)sub_100028A48(v7, v9);
  uint64_t v11 = &v10[56 * v4];
  v16[0] = v10;
  v16[1] = v11;
  v16[3] = &v10[56 * v12];
  int v13 = *(_DWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)a2;
  *((_DWORD *)v11 + 4) = v13;
  *((void *)v11 + 4) = 0;
  *((void *)v11 + 5) = 0;
  *((void *)v11 + 3) = 0;
  *(_OWORD *)(v11 + 24) = *(_OWORD *)(a2 + 24);
  *((void *)v11 + 5) = *(void *)(a2 + 40);
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0;
  *((_DWORD *)v11 + 12) = *(_DWORD *)(a2 + 48);
  v16[2] = v11 + 56;
  sub_1000289D0(a1, v16);
  uint64_t v14 = a1[1];
  sub_100028BD8((uint64_t)v16);
  return v14;
}

void sub_1000289BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100028BD8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000289D0(uint64_t *a1, void *a2)
{
  uint64_t result = sub_100028A94((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *sub_100028A48(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x492492492492493) {
    sub_1000257D8();
  }
  return operator new(56 * a2);
}

uint64_t sub_100028A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v14 = a6;
  *((void *)&v14 + 1) = a7;
  long long v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  _DWORD v11[2] = &v14;
  if (a3 == a5)
  {
    uint64_t v9 = a6;
  }
  else
  {
    do
    {
      long long v8 = *(_OWORD *)(a3 - 56);
      *(_DWORD *)(v7 - 40) = *(_DWORD *)(a3 - 40);
      *(_OWORD *)(v7 - 56) = v8;
      *(void *)(v7 - 24) = 0;
      *(void *)(v7 - 16) = 0;
      *(void *)(v7 - 32) = 0;
      *(_OWORD *)(v7 - 32) = *(_OWORD *)(a3 - 32);
      *(void *)(v7 - 16) = *(void *)(a3 - 16);
      *(void *)(a3 - 24) = 0;
      *(void *)(a3 - 16) = 0;
      *(void *)(a3 - 32) = 0;
      *(_DWORD *)(v7 - 8) = *(_DWORD *)(a3 - 8);
      uint64_t v7 = *((void *)&v14 + 1) - 56;
      *((void *)&v14 + 1) -= 56;
      a3 -= 56;
    }
    while (a3 != a5);
    uint64_t v9 = v14;
  }
  char v12 = 1;
  sub_100028B58((uint64_t)v11);
  return v9;
}

uint64_t sub_100028B58(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_100028B90(a1);
  }
  return a1;
}

void sub_100028B90(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    uint64_t v3 = *(void **)(v1 + 24);
    if (v3)
    {
      *(void *)(v1 + 32) = v3;
      operator delete(v3);
    }
    v1 += 56;
  }
}

uint64_t sub_100028BD8(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_100028C10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  while (v2 != a2)
  {
    *(void *)(a1 + 16) = v2 - 56;
    uint64_t v5 = *(void **)(v2 - 32);
    if (v5)
    {
      *(void *)(v2 - 24) = v5;
      operator delete(v5);
      uint64_t v2 = *(void *)(a1 + 16);
    }
    else
    {
      v2 -= 56;
    }
  }
}

void sub_100028C6C(unint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  while (2)
  {
    unint64_t v10 = a1;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          a1 = v10;
          uint64_t v11 = a2 - v10;
          unint64_t v12 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2 - v10) >> 3);
          if (v5 || !v4)
          {
            switch(v12)
            {
              case 0uLL:
              case 1uLL:
                return;
              case 2uLL:
                if (*(void *)(a2 - 8) < *(void *)(v10 + 16))
                {
                  uint64_t v119 = *(void *)(v10 + 16);
                  long long v110 = *(_OWORD *)v10;
                  long long v47 = *(_OWORD *)(a2 - 24);
                  *(void *)(v10 + 16) = *(void *)(a2 - 8);
                  *(_OWORD *)unint64_t v10 = v47;
                  *(void *)(a2 - 8) = v119;
                  *(_OWORD *)(a2 - 24) = v110;
                }
                break;
              case 3uLL:
                sub_1000295B4((long long *)v10, (long long *)(v10 + 24), (long long *)(a2 - 24));
                break;
              case 4uLL:
                sub_10002996C(v10, v10 + 24, v10 + 48, a2 - 24);
                break;
              case 5uLL:
                CFNumberRef v48 = (long long *)(v10 + 24);
                CFTypeID v49 = (long long *)(v10 + 48);
                id v50 = (long long *)(v10 + 72);
                sub_10002996C(v10, v10 + 24, v10 + 48, v10 + 72);
                if (*(void *)(a2 - 8) < *(void *)(v10 + 88))
                {
                  long long v51 = *v50;
                  uint64_t v52 = *(void *)(v10 + 88);
                  uint64_t v53 = *(void *)(a2 - 8);
                  *id v50 = *(_OWORD *)(a2 - 24);
                  *(void *)(v10 + 88) = v53;
                  *(void *)(a2 - 8) = v52;
                  *(_OWORD *)(a2 - 24) = v51;
                  if (*(void *)(v10 + 88) < *(void *)(v10 + 64))
                  {
                    uint64_t v54 = *(void *)(v10 + 64);
                    long long v55 = *v49;
                    *CFTypeID v49 = *v50;
                    *(void *)(v10 + 64) = *(void *)(v10 + 88);
                    *id v50 = v55;
                    *(void *)(v10 + 88) = v54;
                    if (*(void *)(v10 + 64) < *(void *)(v10 + 40))
                    {
                      uint64_t v56 = *(void *)(v10 + 40);
                      long long v57 = *v48;
                      long long *v48 = *v49;
                      *(void *)(v10 + 40) = *(void *)(v10 + 64);
                      *CFTypeID v49 = v57;
                      *(void *)(v10 + 64) = v56;
                      if (*(void *)(v10 + 40) < *(void *)(v10 + 16))
                      {
                        uint64_t v120 = *(void *)(v10 + 16);
                        long long v111 = *(_OWORD *)v10;
                        *(_OWORD *)unint64_t v10 = *v48;
                        *(void *)(v10 + 16) = *(void *)(v10 + 40);
                        long long *v48 = v111;
                        *(void *)(v10 + 40) = v120;
                      }
                    }
                  }
                }
                break;
              default:
                JUMPOUT(0);
            }
            return;
          }
          if (v11 <= 575)
          {
            int v58 = (_OWORD *)(v10 + 24);
            BOOL v60 = v10 == a2 || v58 == (_OWORD *)a2;
            if (a4)
            {
              if (!v60)
              {
                uint64_t v61 = 0;
                BOOL v62 = (_OWORD *)v10;
                do
                {
                  unint64_t v63 = *((void *)v62 + 5);
                  unint64_t v64 = *((void *)v62 + 2);
                  BOOL v62 = v58;
                  if (v63 < v64)
                  {
                    long long v112 = *v58;
                    uint64_t v65 = v61;
                    while (1)
                    {
                      uint64_t v66 = v10 + v65;
                      *(_OWORD *)(v66 + 24) = *(_OWORD *)(v10 + v65);
                      *(void *)(v66 + 40) = *(void *)(v10 + v65 + 16);
                      if (!v65) {
                        break;
                      }
                      v65 -= 24;
                      if (v63 >= *(void *)(v66 - 8))
                      {
                        uint64_t v67 = v10 + v65 + 24;
                        goto LABEL_83;
                      }
                    }
                    uint64_t v67 = v10;
LABEL_83:
                    *(_OWORD *)uint64_t v67 = v112;
                    *(void *)(v67 + 16) = v63;
                  }
                  int v58 = (_OWORD *)((char *)v62 + 24);
                  v61 += 24;
                }
                while ((_OWORD *)((char *)v62 + 24) != (_OWORD *)a2);
              }
            }
            else if (!v60)
            {
              do
              {
                unint64_t v100 = *(void *)(a1 + 40);
                unint64_t v101 = *(void *)(a1 + 16);
                a1 = (unint64_t)v58;
                if (v100 < v101)
                {
                  long long v115 = *v58;
                  uint64_t v102 = v58;
                  do
                  {
                    _OWORD *v102 = *(_OWORD *)((char *)v102 - 24);
                    *((void *)v102 + 2) = *((void *)v102 - 1);
                    unint64_t v103 = *((void *)v102 - 4);
                    uint64_t v102 = (_OWORD *)((char *)v102 - 24);
                  }
                  while (v100 < v103);
                  _OWORD *v102 = v115;
                  *((void *)v102 + 2) = v100;
                }
                int v58 = (_OWORD *)(a1 + 24);
              }
              while (a1 + 24 != a2);
            }
            return;
          }
          if (!a3)
          {
            if (v10 != a2)
            {
              int64_t v68 = (v12 - 2) >> 1;
              int64_t v69 = v68;
              do
              {
                int64_t v70 = v69;
                if (v68 >= v69)
                {
                  uint64_t v71 = (2 * v69) | 1;
                  unint64_t v72 = v10 + 24 * v71;
                  if (2 * v70 + 2 < (uint64_t)v12)
                  {
                    unint64_t v73 = *(void *)(v72 + 16);
                    unint64_t v74 = *(void *)(v72 + 40);
                    v72 += 24 * (v73 < v74);
                    if (v73 < v74) {
                      uint64_t v71 = 2 * v70 + 2;
                    }
                  }
                  unint64_t v75 = v10 + 24 * v70;
                  unint64_t v76 = *(void *)(v75 + 16);
                  if (*(void *)(v72 + 16) >= v76)
                  {
                    long long v113 = *(_OWORD *)v75;
                    do
                    {
                      unint64_t v77 = v75;
                      unint64_t v75 = v72;
                      long long v78 = *(_OWORD *)v72;
                      *(void *)(v77 + 16) = *(void *)(v72 + 16);
                      *(_OWORD *)unint64_t v77 = v78;
                      if (v68 < v71) {
                        break;
                      }
                      uint64_t v79 = (2 * v71) | 1;
                      unint64_t v72 = v10 + 24 * v79;
                      uint64_t v80 = 2 * v71 + 2;
                      if (v80 < (uint64_t)v12)
                      {
                        unint64_t v81 = *(void *)(v72 + 16);
                        unint64_t v82 = *(void *)(v72 + 40);
                        v72 += 24 * (v81 < v82);
                        if (v81 < v82) {
                          uint64_t v79 = v80;
                        }
                      }
                      uint64_t v71 = v79;
                    }
                    while (*(void *)(v72 + 16) >= v76);
                    *(_OWORD *)unint64_t v75 = v113;
                    *(void *)(v75 + 16) = v76;
                  }
                }
                int64_t v69 = v70 - 1;
              }
              while (v70);
              int64_t v83 = v11 / 0x18uLL;
              do
              {
                uint64_t v84 = 0;
                uint64_t v121 = *(void *)(v10 + 16);
                long long v114 = *(_OWORD *)v10;
                unint64_t v85 = v10;
                do
                {
                  uint64_t v86 = v85 + 24 * v84 + 24;
                  uint64_t v87 = (2 * v84) | 1;
                  uint64_t v88 = 2 * v84 + 2;
                  if (v88 < v83)
                  {
                    unint64_t v89 = *(void *)(v86 + 16);
                    unint64_t v90 = *(void *)(v86 + 40);
                    v86 += 24 * (v89 < v90);
                    if (v89 < v90) {
                      uint64_t v87 = v88;
                    }
                  }
                  long long v91 = *(_OWORD *)v86;
                  *(void *)(v85 + 16) = *(void *)(v86 + 16);
                  *(_OWORD *)unint64_t v85 = v91;
                  unint64_t v85 = v86;
                  uint64_t v84 = v87;
                }
                while (v87 <= (uint64_t)((unint64_t)(v83 - 2) >> 1));
                a2 -= 24;
                if (v86 == a2)
                {
                  *(void *)(v86 + 16) = v121;
                  *(_OWORD *)uint64_t v86 = v114;
                }
                else
                {
                  long long v92 = *(_OWORD *)a2;
                  *(void *)(v86 + 16) = *(void *)(a2 + 16);
                  *(_OWORD *)uint64_t v86 = v92;
                  *(void *)(a2 + 16) = v121;
                  *(_OWORD *)a2 = v114;
                  uint64_t v93 = v86 - v10 + 24;
                  if (v93 >= 25)
                  {
                    unint64_t v94 = (v93 / 0x18uLL - 2) >> 1;
                    uint64_t v95 = v10 + 24 * v94;
                    unint64_t v96 = *(void *)(v86 + 16);
                    if (*(void *)(v95 + 16) < v96)
                    {
                      long long v106 = *(_OWORD *)v86;
                      do
                      {
                        uint64_t v97 = v86;
                        uint64_t v86 = v95;
                        long long v98 = *(_OWORD *)v95;
                        *(void *)(v97 + 16) = *(void *)(v95 + 16);
                        *(_OWORD *)uint64_t v97 = v98;
                        if (!v94) {
                          break;
                        }
                        unint64_t v94 = (v94 - 1) >> 1;
                        uint64_t v95 = v10 + 24 * v94;
                      }
                      while (*(void *)(v95 + 16) < v96);
                      *(_OWORD *)uint64_t v86 = v106;
                      *(void *)(v86 + 16) = v96;
                    }
                  }
                }
              }
              while (v83-- > 2);
            }
            return;
          }
          unint64_t v13 = v12 >> 1;
          unint64_t v14 = v10 + 24 * (v12 >> 1);
          if ((unint64_t)v11 >= 0xC01)
          {
            sub_1000295B4((long long *)a1, (long long *)(a1 + 24 * (v12 >> 1)), (long long *)(a2 - 24));
            uint64_t v15 = 3 * v13;
            long long v16 = (long long *)(a1 + 24 * v13 - 24);
            sub_1000295B4((long long *)(a1 + 24), v16, (long long *)(a2 - 48));
            BOOL v17 = (long long *)(a1 + 24 + 8 * v15);
            sub_1000295B4((long long *)(a1 + 48), v17, (long long *)(a2 - 72));
            sub_1000295B4(v16, (long long *)v14, v17);
            uint64_t v116 = *(void *)(a1 + 16);
            long long v107 = *(_OWORD *)a1;
            uint64_t v18 = *(void *)(v14 + 16);
            *(_OWORD *)a1 = *(_OWORD *)v14;
            *(void *)(a1 + 16) = v18;
            *(void *)(v14 + 16) = v116;
            *(_OWORD *)unint64_t v14 = v107;
          }
          else
          {
            sub_1000295B4((long long *)(a1 + 24 * (v12 >> 1)), (long long *)a1, (long long *)(a2 - 24));
          }
          --a3;
          if (a4) {
            break;
          }
          unint64_t v19 = *(void *)(a1 + 16);
          if (*(void *)(a1 - 8) < v19) {
            goto LABEL_12;
          }
          long long v105 = *(_OWORD *)a1;
          if (v19 >= *(void *)(a2 - 8))
          {
            unint64_t v37 = a1 + 24;
            do
            {
              unint64_t v10 = v37;
              if (v37 >= a2) {
                break;
              }
              unint64_t v38 = *(void *)(v37 + 16);
              v37 += 24;
            }
            while (v19 >= v38);
          }
          else
          {
            unint64_t v35 = a1;
            do
            {
              unint64_t v10 = v35 + 24;
              unint64_t v36 = *(void *)(v35 + 40);
              v35 += 24;
            }
            while (v19 >= v36);
          }
          unint64_t v39 = a2;
          if (v10 < a2)
          {
            unint64_t v40 = a2;
            do
            {
              unint64_t v39 = v40 - 24;
              unint64_t v41 = *(void *)(v40 - 8);
              v40 -= 24;
            }
            while (v19 < v41);
          }
          while (v10 < v39)
          {
            uint64_t v118 = *(void *)(v10 + 16);
            long long v109 = *(_OWORD *)v10;
            long long v42 = *(_OWORD *)v39;
            *(void *)(v10 + 16) = *(void *)(v39 + 16);
            *(_OWORD *)unint64_t v10 = v42;
            *(void *)(v39 + 16) = v118;
            *(_OWORD *)unint64_t v39 = v109;
            do
            {
              unint64_t v43 = *(void *)(v10 + 40);
              v10 += 24;
            }
            while (v19 >= v43);
            do
            {
              unint64_t v44 = *(void *)(v39 - 8);
              v39 -= 24;
            }
            while (v19 < v44);
          }
          id v45 = (long long *)(v10 - 24);
          BOOL v4 = v10 - 24 >= a1;
          BOOL v5 = v10 - 24 == a1;
          if (v10 - 24 != a1)
          {
            long long v46 = *v45;
            *(void *)(a1 + 16) = *(void *)(v10 - 8);
            *(_OWORD *)a1 = v46;
          }
          a4 = 0;
          *id v45 = v105;
          *(void *)(v10 - 8) = v19;
        }
        unint64_t v19 = *(void *)(a1 + 16);
LABEL_12:
        uint64_t v20 = 0;
        long long v104 = *(_OWORD *)a1;
        do
        {
          unint64_t v21 = *(void *)(a1 + v20 + 40);
          v20 += 24;
        }
        while (v21 < v19);
        unint64_t v22 = a1 + v20;
        unint64_t v23 = a2;
        if (v20 == 24)
        {
          unint64_t v26 = a2;
          while (v22 < v26)
          {
            unint64_t v24 = v26 - 24;
            unint64_t v27 = *(void *)(v26 - 8);
            v26 -= 24;
            if (v27 < v19) {
              goto LABEL_22;
            }
          }
          unint64_t v24 = v26;
        }
        else
        {
          do
          {
            unint64_t v24 = v23 - 24;
            unint64_t v25 = *(void *)(v23 - 8);
            v23 -= 24;
          }
          while (v25 >= v19);
        }
LABEL_22:
        unint64_t v10 = v22;
        if (v22 < v24)
        {
          unint64_t v28 = v24;
          do
          {
            uint64_t v117 = *(void *)(v10 + 16);
            long long v108 = *(_OWORD *)v10;
            long long v29 = *(_OWORD *)v28;
            *(void *)(v10 + 16) = *(void *)(v28 + 16);
            *(_OWORD *)unint64_t v10 = v29;
            *(void *)(v28 + 16) = v117;
            *(_OWORD *)unint64_t v28 = v108;
            do
            {
              unint64_t v30 = *(void *)(v10 + 40);
              v10 += 24;
            }
            while (v30 < v19);
            do
            {
              unint64_t v31 = *(void *)(v28 - 8);
              v28 -= 24;
            }
            while (v31 >= v19);
          }
          while (v10 < v28);
        }
        uint64_t v32 = (long long *)(v10 - 24);
        if (v10 - 24 != a1)
        {
          long long v33 = *v32;
          *(void *)(a1 + 16) = *(void *)(v10 - 8);
          *(_OWORD *)a1 = v33;
        }
        *uint64_t v32 = v104;
        *(void *)(v10 - 8) = v19;
        if (v22 >= v24) {
          break;
        }
LABEL_33:
        sub_100028C6C(a1, v10 - 24, a3, a4 & 1);
        a4 = 0;
      }
      BOOL v34 = sub_1000296A4(a1, v10 - 24);
      if (sub_1000296A4(v10, a2)) {
        break;
      }
      if (!v34) {
        goto LABEL_33;
      }
    }
    a2 = v10 - 24;
    if (!v34) {
      continue;
    }
    break;
  }
}

long long *sub_1000295B4(long long *result, long long *a2, long long *a3)
{
  unint64_t v3 = *((void *)a2 + 2);
  unint64_t v4 = *((void *)a3 + 2);
  if (v3 >= *((void *)result + 2))
  {
    if (v4 < v3)
    {
      uint64_t v8 = *((void *)a2 + 2);
      long long v9 = *a2;
      uint64_t v10 = *((void *)a3 + 2);
      *a2 = *a3;
      *((void *)a2 + 2) = v10;
      *a3 = v9;
      *((void *)a3 + 2) = v8;
      if (*((void *)a2 + 2) < *((void *)result + 2))
      {
        uint64_t v11 = *((void *)result + 2);
        long long v12 = *result;
        uint64_t v13 = *((void *)a2 + 2);
        *uint64_t result = *a2;
        *((void *)result + 2) = v13;
        *a2 = v12;
        *((void *)a2 + 2) = v11;
      }
    }
  }
  else
  {
    if (v4 >= v3)
    {
      uint64_t v14 = *((void *)result + 2);
      long long v15 = *result;
      uint64_t v16 = *((void *)a2 + 2);
      *uint64_t result = *a2;
      *((void *)result + 2) = v16;
      *a2 = v15;
      *((void *)a2 + 2) = v14;
      if (*((void *)a3 + 2) >= *((void *)a2 + 2)) {
        return result;
      }
      uint64_t v5 = *((void *)a2 + 2);
      long long v6 = *a2;
      uint64_t v17 = *((void *)a3 + 2);
      *a2 = *a3;
      *((void *)a2 + 2) = v17;
    }
    else
    {
      uint64_t v5 = *((void *)result + 2);
      long long v6 = *result;
      uint64_t v7 = *((void *)a3 + 2);
      *uint64_t result = *a3;
      *((void *)result + 2) = v7;
    }
    *a3 = v6;
    *((void *)a3 + 2) = v5;
  }
  return result;
}

BOOL sub_1000296A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (a2 - a1) >> 3;
  BOOL result = 1;
  switch(0xAAAAAAAAAAAAAAABLL * v4)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      if (*(void *)(a2 - 8) < *(void *)(a1 + 16))
      {
        uint64_t v6 = *(void *)(a1 + 16);
        long long v7 = *(_OWORD *)a1;
        uint64_t v8 = *(void *)(a2 - 8);
        *(_OWORD *)a1 = *(_OWORD *)(a2 - 24);
        *(void *)(a1 + 16) = v8;
        *(_OWORD *)(a2 - 24) = v7;
        *(void *)(a2 - 8) = v6;
      }
      return result;
    case 3uLL:
      sub_1000295B4((long long *)a1, (long long *)(a1 + 24), (long long *)(a2 - 24));
      return 1;
    case 4uLL:
      sub_10002996C(a1, a1 + 24, a1 + 48, a2 - 24);
      return 1;
    case 5uLL:
      uint64_t v17 = (long long *)(a1 + 24);
      uint64_t v18 = (long long *)(a1 + 48);
      unint64_t v19 = (long long *)(a1 + 72);
      sub_10002996C(a1, a1 + 24, a1 + 48, a1 + 72);
      if (*(void *)(a2 - 8) < *(void *)(a1 + 88))
      {
        uint64_t v20 = *(void *)(a1 + 88);
        long long v21 = *v19;
        uint64_t v22 = *(void *)(a2 - 8);
        long long *v19 = *(_OWORD *)(a2 - 24);
        *(void *)(a1 + 88) = v22;
        *(_OWORD *)(a2 - 24) = v21;
        *(void *)(a2 - 8) = v20;
        if (*(void *)(a1 + 88) < *(void *)(a1 + 64))
        {
          uint64_t v23 = *(void *)(a1 + 64);
          long long v24 = *v18;
          *uint64_t v18 = *v19;
          *(void *)(a1 + 64) = *(void *)(a1 + 88);
          long long *v19 = v24;
          *(void *)(a1 + 88) = v23;
          if (*(void *)(a1 + 64) < *(void *)(a1 + 40))
          {
            uint64_t v25 = *(void *)(a1 + 40);
            long long v26 = *v17;
            *uint64_t v17 = *v18;
            *(void *)(a1 + 40) = *(void *)(a1 + 64);
            *uint64_t v18 = v26;
            *(void *)(a1 + 64) = v25;
            if (*(void *)(a1 + 40) < *(void *)(a1 + 16))
            {
              uint64_t v27 = *(void *)(a1 + 16);
              long long v28 = *(_OWORD *)a1;
              *(_OWORD *)a1 = *v17;
              *(void *)(a1 + 16) = *(void *)(a1 + 40);
              *uint64_t v17 = v28;
              *(void *)(a1 + 40) = v27;
            }
          }
        }
      }
      return 1;
    default:
      uint64_t v9 = a1 + 48;
      sub_1000295B4((long long *)a1, (long long *)(a1 + 24), (long long *)(a1 + 48));
      uint64_t v10 = a1 + 72;
      if (a1 + 72 == a2) {
        return 1;
      }
      uint64_t v11 = 0;
      int v12 = 0;
      break;
  }
  while (1)
  {
    unint64_t v13 = *(void *)(v10 + 16);
    if (v13 < *(void *)(v9 + 16))
    {
      long long v29 = *(_OWORD *)v10;
      uint64_t v14 = v11;
      while (1)
      {
        uint64_t v15 = a1 + v14;
        *(_OWORD *)(v15 + 72) = *(_OWORD *)(a1 + v14 + 48);
        *(void *)(v15 + 88) = *(void *)(a1 + v14 + 64);
        if (v14 == -48) {
          break;
        }
        v14 -= 24;
        if (v13 >= *(void *)(v15 + 40))
        {
          uint64_t v16 = a1 + v14 + 72;
          goto LABEL_12;
        }
      }
      uint64_t v16 = a1;
LABEL_12:
      *(_OWORD *)uint64_t v16 = v29;
      *(void *)(v16 + 16) = v13;
      if (++v12 == 8) {
        return v10 + 24 == a2;
      }
    }
    uint64_t v9 = v10;
    v11 += 24;
    v10 += 24;
    if (v10 == a2) {
      return 1;
    }
  }
}

__n128 sub_10002996C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1000295B4((long long *)a1, (long long *)a2, (long long *)a3);
  if (*(void *)(a4 + 16) < *(void *)(a3 + 16))
  {
    uint64_t v9 = *(void *)(a3 + 16);
    __n128 result = *(__n128 *)a3;
    uint64_t v10 = *(void *)(a4 + 16);
    *(_OWORD *)a3 = *(_OWORD *)a4;
    *(void *)(a3 + 16) = v10;
    *(__n128 *)a4 = result;
    *(void *)(a4 + 16) = v9;
    if (*(void *)(a3 + 16) < *(void *)(a2 + 16))
    {
      uint64_t v11 = *(void *)(a2 + 16);
      __n128 result = *(__n128 *)a2;
      uint64_t v12 = *(void *)(a3 + 16);
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(void *)(a2 + 16) = v12;
      *(__n128 *)a3 = result;
      *(void *)(a3 + 16) = v11;
      if (*(void *)(a2 + 16) < *(void *)(a1 + 16))
      {
        uint64_t v13 = *(void *)(a1 + 16);
        __n128 result = *(__n128 *)a1;
        uint64_t v14 = *(void *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(void *)(a1 + 16) = v14;
        *(__n128 *)a2 = result;
        *(void *)(a2 + 16) = v13;
      }
    }
  }
  return result;
}

uint64_t sub_100029A3C(uint64_t *a1, uint64_t *a2, double *a3, uint64_t a4)
{
  uint64_t v5 = 0x6DB6DB6DB6DB6DB7 * ((a1[1] - *a1) >> 3);
  unint64_t v6 = v5 + 1;
  if ((unint64_t)(v5 + 1) > 0x492492492492492) {
    sub_1000267C4();
  }
  if (0xDB6DB6DB6DB6DB6ELL * ((a1[2] - *a1) >> 3) > v6) {
    unint64_t v6 = 0xDB6DB6DB6DB6DB6ELL * ((a1[2] - *a1) >> 3);
  }
  if ((unint64_t)(0x6DB6DB6DB6DB6DB7 * ((a1[2] - *a1) >> 3)) >= 0x249249249249249) {
    unint64_t v10 = 0x492492492492492;
  }
  else {
    unint64_t v10 = v6;
  }
  uint64_t v18 = a1 + 2;
  if (v10) {
    uint64_t v11 = (char *)sub_100028A48((uint64_t)(a1 + 2), v10);
  }
  else {
    uint64_t v11 = 0;
  }
  uint64_t v14 = v11;
  uint64_t v15 = &v11[56 * v5];
  uint64_t v17 = &v11[56 * v10];
  sub_100029B7C((uint64_t)(a1 + 2), (uint64_t)v15, a2, a3, a4);
  uint64_t v16 = v15 + 56;
  sub_1000289D0(a1, &v14);
  uint64_t v12 = a1[1];
  sub_100028BD8((uint64_t)&v14);
  return v12;
}

void sub_100029B68(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100028BD8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100029B7C(uint64_t a1, uint64_t a2, uint64_t *a3, double *a4, uint64_t a5)
{
  uint64_t v6 = *a3;
  float v7 = *a4;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  std::string __p = 0;
  sub_1000266F4(&__p, *(const void **)a5, *(void *)(a5 + 8), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a5 + 8) - *(void *)a5) >> 3));
  *(void *)a2 = v6;
  *(void *)(a2 + 8) = 0;
  *(float *)(a2 + 16) = v7;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0;
  sub_1000266F4((void *)(a2 + 24), __p, (uint64_t)v9, 0xAAAAAAAAAAAAAAABLL * ((v9 - (unsigned char *)__p) >> 3));
  *(_DWORD *)(a2 + 48) = 0;
  if (__p)
  {
    uint64_t v9 = __p;
    operator delete(__p);
  }
}

void sub_100029C24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100029C40(uint64_t a1, long long *a2, long long *a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v11 = a4;
  uint64_t v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  char v10 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      long long v7 = *v6;
      *(_DWORD *)(v4 + 16) = *((_DWORD *)v6 + 4);
      *(_OWORD *)uint64_t v4 = v7;
      *(void *)(v4 + 24) = 0;
      *(void *)(v4 + 32) = 0;
      *(void *)(v4 + 40) = 0;
      sub_1000266F4((void *)(v4 + 24), *((const void **)v6 + 3), *((void *)v6 + 4), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)v6 + 4) - *((void *)v6 + 3)) >> 3));
      *(_DWORD *)(v4 + 48) = *((_DWORD *)v6 + 12);
      uint64_t v4 = v12 + 56;
      v12 += 56;
      uint64_t v6 = (long long *)((char *)v6 + 56);
    }
    while (v6 != a3);
  }
  char v10 = 1;
  sub_100029D18((uint64_t)v9);
  return v4;
}

void sub_100029D04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100029D18(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_100029D50(a1);
  }
  return a1;
}

void sub_100029D50(uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 16);
  uint64_t v2 = **(void **)(a1 + 8);
  while (v1 != v2)
  {
    unint64_t v3 = *(void **)(v1 - 32);
    if (v3)
    {
      *(void *)(v1 - 24) = v3;
      operator delete(v3);
    }
    v1 -= 56;
  }
}

void sub_100029DB0(void *a1@<X0>, const char *a2@<X3>, uint8_t *a3@<X4>, NSObject *a4@<X8>)
{
  _os_log_error_impl(a1, a4, OS_LOG_TYPE_ERROR, a2, a3, 0xCu);
}

void sub_100029DDC(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xEu);
}

void sub_100029DF8(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 0xCu);
}

uint64_t sub_100029E14(uint64_t result, float *a2, void *a3, float a4)
{
  *a2 = a4;
  *a3 = result;
  return result;
}

void sub_100029E20(void *a1, int a2, os_log_t log, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, a5, 2u);
}

unsigned char *sub_100029E3C(unsigned char *result, unsigned char *a2)
{
  *__n128 result = 0;
  *a2 = 0;
  return result;
}

void *sub_100029E58@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100846848[a1]);
}

void *sub_100029E6C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_1008468A0[a1]);
}

void *sub_100029E80@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_1008468E8[a1]);
}

void *sub_100029E94@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100846908[a1]);
}

void sub_100029F2C(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_10002A220(_Unwind_Exception *a1)
{
  std::mutex::unlock(v4);

  _Unwind_Resume(a1);
}

id sub_10002A2A4(uint64_t a1)
{
  CFStringRef v5 = @"authStatus";
  uint64_t v1 = *(int *)(a1 + 32);
  if (v1 > 4) {
    CFStringRef v2 = @"Authorized";
  }
  else {
    CFStringRef v2 = off_100846928[v1];
  }
  CFStringRef v6 = v2;
  unint64_t v3 = +[NSDictionary dictionaryWithObjects:&v6 forKeys:&v5 count:1];

  return v3;
}

CFStringRef sub_10002A350(unsigned int a1)
{
  if (a1 > 4) {
    return @"Authorized";
  }
  else {
    return off_100846928[a1];
  }
}

void sub_10002A4FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t *sub_10002A590(void *a1, int *a2)
{
  __n128 result = sub_10002A5C8(a1, a2);
  if (result)
  {
    sub_10002A67C(a1, result);
    return (uint64_t *)1;
  }
  return result;
}

uint64_t *sub_10002A5C8(void *a1, int *a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0;
  }
  unint64_t v3 = *a2;
  uint8x8_t v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL)
  {
    unint64_t v5 = *a2;
    if (*(void *)&v2 <= v3) {
      unint64_t v5 = v3 % *(void *)&v2;
    }
  }
  else
  {
    unint64_t v5 = (*(void *)&v2 - 1) & v3;
  }
  CFStringRef v6 = *(uint64_t ***)(*a1 + 8 * v5);
  if (!v6) {
    return 0;
  }
  for (__n128 result = *v6; result; __n128 result = (uint64_t *)*result)
  {
    unint64_t v8 = result[1];
    if (v8 == v3)
    {
      if (*((_DWORD *)result + 4) == v3) {
        return result;
      }
    }
    else
    {
      if (v4.u32[0] > 1uLL)
      {
        if (v8 >= *(void *)&v2) {
          v8 %= *(void *)&v2;
        }
      }
      else
      {
        v8 &= *(void *)&v2 - 1;
      }
      if (v8 != v5) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_10002A67C(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  sub_10002A6C0(a1, a2, (uint64_t)&__p);
  unint64_t v3 = __p;
  std::string __p = 0;
  if (v3) {
    operator delete(v3);
  }
  return v2;
}

void *sub_10002A6C0@<X0>(void *result@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  int8x8_t v3 = (int8x8_t)result[1];
  unint64_t v4 = a2[1];
  uint8x8_t v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    if (v4 >= *(void *)&v3) {
      v4 %= *(void *)&v3;
    }
  }
  else
  {
    v4 &= *(void *)&v3 - 1;
  }
  CFStringRef v6 = *(void **)(*result + 8 * v4);
  do
  {
    long long v7 = v6;
    CFStringRef v6 = (void *)*v6;
  }
  while (v6 != a2);
  if (v7 == result + 2) {
    goto LABEL_18;
  }
  unint64_t v8 = v7[1];
  if (v5.u32[0] > 1uLL)
  {
    if (v8 >= *(void *)&v3) {
      v8 %= *(void *)&v3;
    }
  }
  else
  {
    v8 &= *(void *)&v3 - 1;
  }
  if (v8 != v4)
  {
LABEL_18:
    if (!*a2) {
      goto LABEL_19;
    }
    unint64_t v9 = *(void *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v9 >= *(void *)&v3) {
        v9 %= *(void *)&v3;
      }
    }
    else
    {
      v9 &= *(void *)&v3 - 1;
    }
    if (v9 != v4) {
LABEL_19:
    }
      *(void *)(*result + 8 * v4) = 0;
  }
  uint64_t v10 = *a2;
  if (*a2)
  {
    unint64_t v11 = *(void *)(v10 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v11 >= *(void *)&v3) {
        v11 %= *(void *)&v3;
      }
    }
    else
    {
      v11 &= *(void *)&v3 - 1;
    }
    if (v11 != v4)
    {
      *(void *)(*result + 8 * v11) = v7;
      uint64_t v10 = *a2;
    }
  }
  void *v7 = v10;
  *a2 = 0;
  --result[3];
  *(void *)a3 = a2;
  *(void *)(a3 + 8) = result + 2;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void *sub_10002A7F4(uint64_t a1, int *a2, uint64_t a3, _DWORD **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
    uint64_t v10 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      unint64_t v11 = *v10;
      if (*v10)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v12 == v7)
          {
            if (*((_DWORD *)v11 + 4) == v7) {
              return v11;
            }
          }
          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8) {
                v12 %= v8;
              }
            }
            else
            {
              v12 &= v8 - 1;
            }
            if (v12 != v4) {
              break;
            }
          }
          unint64_t v11 = (void *)*v11;
        }
        while (v11);
      }
    }
  }
  unint64_t v11 = operator new(0x30uLL);
  *unint64_t v11 = 0;
  v11[1] = v7;
  *((_DWORD *)v11 + 4) = **a4;
  void v11[3] = 0;
  void v11[4] = 0;
  v11[5] = 0;
  *((_DWORD *)v11 + 6) = 2;
  float v13 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    BOOL v15 = 1;
    if (v8 >= 3) {
      BOOL v15 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v16 = v15 | (2 * v8);
    unint64_t v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17) {
      size_t v18 = v17;
    }
    else {
      size_t v18 = v16;
    }
    sub_10002AA24(a1, v18);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
      else {
        unint64_t v4 = v7;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
  }
  uint64_t v19 = *(void *)a1;
  uint64_t v20 = *(void **)(*(void *)a1 + 8 * v4);
  if (v20)
  {
    *unint64_t v11 = *v20;
LABEL_38:
    void *v20 = v11;
    goto LABEL_39;
  }
  *unint64_t v11 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v11;
  *(void *)(v19 + 8 * v4) = a1 + 16;
  if (*v11)
  {
    unint64_t v21 = *(void *)(*v11 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v21 >= v8) {
        v21 %= v8;
      }
    }
    else
    {
      v21 &= v8 - 1;
    }
    uint64_t v20 = (void *)(*(void *)a1 + 8 * v21);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return v11;
}

void sub_10002AA10(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_10002AA24(uint64_t a1, size_t __n)
{
  if (__n == 1)
  {
    size_t prime = 2;
  }
  else
  {
    size_t prime = __n;
    if ((__n & (__n - 1)) != 0) {
      size_t prime = std::__next_prime(__n);
    }
  }
  int8x8_t v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(void *)&v4) {
    goto LABEL_16;
  }
  if (prime < *(void *)&v4)
  {
    unint64_t v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v4 < 3uLL || (uint8x8_t v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      unint64_t v5 = std::__next_prime(v5);
    }
    else
    {
      uint64_t v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2) {
        unint64_t v5 = v7;
      }
    }
    if (prime <= v5) {
      size_t prime = v5;
    }
    if (prime < *(void *)&v4)
    {
LABEL_16:
      sub_10002AB14(a1, prime);
    }
  }
}

void sub_10002AB14(uint64_t a1, unint64_t a2)
{
  if (a2)
  {
    if (a2 >> 61) {
      sub_1000257D8();
    }
    int8x8_t v4 = operator new(8 * a2);
    unint64_t v5 = *(void **)a1;
    *(void *)a1 = v4;
    if (v5) {
      operator delete(v5);
    }
    uint64_t v6 = 0;
    *(void *)(a1 + 8) = a2;
    do
      *(void *)(*(void *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    uint64_t v7 = *(void **)(a1 + 16);
    if (v7)
    {
      unint64_t v8 = v7[1];
      uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2) {
          v8 %= a2;
        }
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v8) = a1 + 16;
      unint64_t v11 = (void *)*v7;
      if (*v7)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= a2) {
              v12 %= a2;
            }
          }
          else
          {
            v12 &= a2 - 1;
          }
          if (v12 != v8)
          {
            if (!*(void *)(*(void *)a1 + 8 * v12))
            {
              *(void *)(*(void *)a1 + 8 * v12) = v7;
              goto LABEL_24;
            }
            void *v7 = *v11;
            *unint64_t v11 = **(void **)(*(void *)a1 + 8 * v12);
            **(void **)(*(void *)a1 + 8 * v12) = v11;
            unint64_t v11 = v7;
          }
          unint64_t v12 = v8;
LABEL_24:
          uint64_t v7 = v11;
          unint64_t v11 = (void *)*v11;
          unint64_t v8 = v12;
        }
        while (v11);
      }
    }
  }
  else
  {
    uint64_t v10 = *(void **)a1;
    *(void *)a1 = 0;
    if (v10) {
      operator delete(v10);
    }
    *(void *)(a1 + 8) = 0;
  }
}

uint64_t sub_10002AC70(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  if (v2)
  {
    do
    {
      int8x8_t v3 = (void *)*v2;
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
  int8x8_t v4 = *(void **)a1;
  *(void *)a1 = 0;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

void *sub_10002ACBC@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100846978[a1]);
}

void *sub_10002ACD0@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_1008469D0[a1]);
}

void *sub_10002ACE4@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100846A18[a1]);
}

void *sub_10002ACF8@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100846A38[a1]);
}

void sub_10002ADF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002AE6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002B0F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(v24);
  objc_destroyWeak((id *)(v25 - 88));

  _Unwind_Resume(a1);
}

void sub_10002B160(uint64_t a1)
{
  uint64_t v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(_DWORD *)(a1 + 48);
    v6[0] = 67109120;
    v6[1] = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "connection interrupted for pid: %d", (uint8_t *)v6, 8u);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  unint64_t v5 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained handleXPCDisconnection:*(void *)(a1 + 32)];
  }
}

void sub_10002B228(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002B240(uint64_t a1)
{
  uint64_t v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(_DWORD *)(a1 + 48);
    v6[0] = 67109120;
    v6[1] = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "connection invalidated for pid: %d", (uint8_t *)v6, 8u);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  unint64_t v5 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained handleXPCDisconnection:*(void *)(a1 + 32)];
  }
}

void sub_10002B308(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002B4BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002B58C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002B5EC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C888, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C888))
  {
    sub_100004950(qword_10089C870, "PRRoseProviderNetworkListener");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C870, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C888);
  }
}

void sub_10002B684(_Unwind_Exception *a1)
{
}

void sub_10002B69C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8A8))
  {
    sub_100004950(&qword_10089C890, "com.apple.nearbyd.accessory.download");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C890, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8A8);
  }
}

void sub_10002B734(_Unwind_Exception *a1)
{
}

void sub_10002B74C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8C8))
  {
    sub_100004950(&qword_10089C8B0, "com.apple.nearbyd.accessory.files");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C8B0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8C8);
  }
}

void sub_10002B7E4(_Unwind_Exception *a1)
{
}

void sub_10002B7FC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8E8))
  {
    sub_100004950(qword_10089C8D0, "MA_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8D0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8E8);
  }
}

void sub_10002B894(_Unwind_Exception *a1)
{
}

void sub_10002B8AC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C908, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C908))
  {
    sub_100004950(qword_10089C8F0, "MB_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8F0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C908);
  }
}

void sub_10002B944(_Unwind_Exception *a1)
{
}

void sub_10002B95C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C928, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C928))
  {
    sub_100004950(qword_10089C910, "D");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C910, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C928);
  }
}

void sub_10002B9F4(_Unwind_Exception *a1)
{
}

void sub_10002BA0C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C948, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C948))
  {
    sub_100004950(&qword_10089C930, "A");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C930, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C948);
  }
}

void sub_10002BAA4(_Unwind_Exception *a1)
{
}

void sub_10002BABC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C968, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C968))
  {
    sub_100004950(qword_10089C950, "FAS.bin");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C950, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C968);
  }
}

void sub_10002BB54(_Unwind_Exception *a1)
{
}

void sub_10002BB6C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C988, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C988))
  {
    qword_10089C970 = 0;
    qword_10089C978 = 0;
    qword_10089C980 = 0;
    uint64_t v0 = operator new(0x30uLL);
    qword_10089C978 = (uint64_t)(v0 + 3);
    qword_10089C980 = (uint64_t)(v0 + 3);
    _OWORD *v0 = xmmword_1004A0080;
    v0[1] = *(_OWORD *)algn_1004A0090;
    v0[2] = xmmword_1004A00A0;
    qword_10089C970 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_100008CAC, &qword_10089C970, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C988);
  }
}

void sub_10002BC28(_Unwind_Exception *a1)
{
}

void sub_10002BC40()
{
  sub_10039D144();
  uint64_t v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  int v3 = std::string::append(&v38, ".bin");
  long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_10089FDB8 = v3->__r_.__value_.__r.__words[2];
  xmmword_10089FDA8 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FDA8, (void *)&_mh_execute_header);
  sub_10039D144();
  unint64_t v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  uint64_t v7 = std::string::append(&v38, ".bin");
  long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_10089FDD0 = v7->__r_.__value_.__r.__words[2];
  xmmword_10089FDC0 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FDC0, (void *)&_mh_execute_header);
  sub_10039D144();
  uint8x8_t v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  unint64_t v11 = std::string::append(&v38, ".bin");
  long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_10089FDE8 = v11->__r_.__value_.__r.__words[2];
  xmmword_10089FDD8 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FDD8, (void *)&_mh_execute_header);
  sub_10039D144();
  float v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  BOOL v15 = std::string::append(&v38, ".bin");
  long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_10089FE00 = v15->__r_.__value_.__r.__words[2];
  xmmword_10089FDF0 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FDF0, (void *)&_mh_execute_header);
  sub_10039D144();
  unint64_t v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  uint64_t v19 = std::string::append(&v38, ".bin");
  long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_10089FE18 = v19->__r_.__value_.__r.__words[2];
  xmmword_10089FE08 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FE08, (void *)&_mh_execute_header);
  sub_10039D144();
  unint64_t v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  uint64_t v23 = std::string::append(&v38, ".bin");
  long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_10089FE30 = v23->__r_.__value_.__r.__words[2];
  xmmword_10089FE20 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FE20, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  uint64_t v27 = std::string::append(&v38, ".bin");
  long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_10089FE48 = v27->__r_.__value_.__r.__words[2];
  xmmword_10089FE38 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FE38, (void *)&_mh_execute_header);
  sub_10039D144();
  long long v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  unint64_t v31 = std::string::append(&v38, ".bin");
  long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_10089FE60 = v31->__r_.__value_.__r.__words[2];
  xmmword_10089FE50 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FE50, (void *)&_mh_execute_header);
  sub_10039D144();
  long long v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  unint64_t v35 = std::string::append(&v38, ".bin");
  long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_10089FE78 = v35->__r_.__value_.__r.__words[2];
  xmmword_10089FE68 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FE68, (void *)&_mh_execute_header);
}

void sub_10002C280(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10002C2F4@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100846A58[a1]);
}

void *sub_10002C308@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100846AB0[a1]);
}

void *sub_10002C31C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100846AF8[a1]);
}

void *sub_10002C330@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100846B18[a1]);
}

void sub_10002C55C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002C668(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_10001A970(a12);
  }
  if (a10) {
    sub_10001A970(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_10002C740(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_10001A970(a12);
  }
  if (a10) {
    sub_10001A970(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_10002C7E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    std::__shared_weak_count::__release_weak(a12);
  }
  if (a10) {
    sub_10001A970(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_10002C868()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C888, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C888))
  {
    sub_100004950(qword_10089C870, "PRRoseProviderNetworkListener");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C870, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C888);
  }
}

void sub_10002C900(_Unwind_Exception *a1)
{
}

void sub_10002C918()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8A8))
  {
    sub_100004950(&qword_10089C890, "com.apple.nearbyd.accessory.download");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C890, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8A8);
  }
}

void sub_10002C9B0(_Unwind_Exception *a1)
{
}

void sub_10002C9C8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8C8))
  {
    sub_100004950(&qword_10089C8B0, "com.apple.nearbyd.accessory.files");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C8B0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8C8);
  }
}

void sub_10002CA60(_Unwind_Exception *a1)
{
}

void sub_10002CA78()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8E8))
  {
    sub_100004950(qword_10089C8D0, "MA_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8D0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8E8);
  }
}

void sub_10002CB10(_Unwind_Exception *a1)
{
}

void sub_10002CB28()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C908, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C908))
  {
    sub_100004950(qword_10089C8F0, "MB_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8F0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C908);
  }
}

void sub_10002CBC0(_Unwind_Exception *a1)
{
}

void sub_10002CBD8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C928, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C928))
  {
    sub_100004950(qword_10089C910, "D");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C910, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C928);
  }
}

void sub_10002CC70(_Unwind_Exception *a1)
{
}

void sub_10002CC88()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C948, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C948))
  {
    sub_100004950(&qword_10089C930, "A");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C930, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C948);
  }
}

void sub_10002CD20(_Unwind_Exception *a1)
{
}

void sub_10002CD38()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C968, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C968))
  {
    sub_100004950(qword_10089C950, "FAS.bin");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C950, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C968);
  }
}

void sub_10002CDD0(_Unwind_Exception *a1)
{
}

void sub_10002CDE8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C988, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C988))
  {
    qword_10089C970 = 0;
    qword_10089C978 = 0;
    qword_10089C980 = 0;
    uint64_t v0 = operator new(0x30uLL);
    qword_10089C978 = (uint64_t)(v0 + 3);
    qword_10089C980 = (uint64_t)(v0 + 3);
    _OWORD *v0 = xmmword_1004A00B0;
    v0[1] = unk_1004A00C0;
    v0[2] = xmmword_1004A00D0;
    qword_10089C970 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_100008CAC, &qword_10089C970, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C988);
  }
}

void sub_10002CEA4(_Unwind_Exception *a1)
{
}

void sub_10002CEBC()
{
  sub_10039D144();
  uint64_t v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  int v3 = std::string::append(&v38, ".bin");
  long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_10089FE90 = v3->__r_.__value_.__r.__words[2];
  xmmword_10089FE80 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FE80, (void *)&_mh_execute_header);
  sub_10039D144();
  unint64_t v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  uint64_t v7 = std::string::append(&v38, ".bin");
  long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_10089FEA8 = v7->__r_.__value_.__r.__words[2];
  xmmword_10089FE98 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FE98, (void *)&_mh_execute_header);
  sub_10039D144();
  uint8x8_t v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  unint64_t v11 = std::string::append(&v38, ".bin");
  long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_10089FEC0 = v11->__r_.__value_.__r.__words[2];
  xmmword_10089FEB0 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FEB0, (void *)&_mh_execute_header);
  sub_10039D144();
  float v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  BOOL v15 = std::string::append(&v38, ".bin");
  long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_10089FED8 = v15->__r_.__value_.__r.__words[2];
  xmmword_10089FEC8 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FEC8, (void *)&_mh_execute_header);
  sub_10039D144();
  unint64_t v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  uint64_t v19 = std::string::append(&v38, ".bin");
  long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_10089FEF0 = v19->__r_.__value_.__r.__words[2];
  xmmword_10089FEE0 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FEE0, (void *)&_mh_execute_header);
  sub_10039D144();
  unint64_t v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  uint64_t v23 = std::string::append(&v38, ".bin");
  long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_10089FF08 = v23->__r_.__value_.__r.__words[2];
  xmmword_10089FEF8 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FEF8, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  uint64_t v27 = std::string::append(&v38, ".bin");
  long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_10089FF20 = v27->__r_.__value_.__r.__words[2];
  xmmword_10089FF10 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FF10, (void *)&_mh_execute_header);
  sub_10039D144();
  long long v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  unint64_t v31 = std::string::append(&v38, ".bin");
  long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_10089FF38 = v31->__r_.__value_.__r.__words[2];
  xmmword_10089FF28 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FF28, (void *)&_mh_execute_header);
  sub_10039D144();
  long long v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  unint64_t v35 = std::string::append(&v38, ".bin");
  long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_10089FF50 = v35->__r_.__value_.__r.__words[2];
  xmmword_10089FF40 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FF40, (void *)&_mh_execute_header);
}

void sub_10002D4FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_10002D570()
{
  uint64_t v0 = mach_absolute_time();

  return sub_100006A9C(v0);
}

BOOL sub_10002D598(double *a1, double *a2, double *a3)
{
  int times = mach_get_times();
  if (!times)
  {
    if (a1) {
      *a1 = (double)v9 / 1000000000.0 + (double)v8 - kCFAbsoluteTimeIntervalSince1970;
    }
    if (a2) {
      *a2 = sub_100006A9C(0);
    }
    if (a3) {
      *a3 = sub_100006A9C(0);
    }
  }
  return times == 0;
}

id sub_10002D648(void *a1, int a2)
{
  id v3 = a1;
  memset(&v16, 0, sizeof(v16));
  sub_10002DB50(&v14, (size_t)[v3 length]);
  [v3 getBytes:v14 length:[v3 length]];
  long long v4 = (unsigned __int8 *)v14;
  unint64_t v5 = v15;
  if (v14 == v15)
  {
    uint64_t v9 = &v16;
  }
  else
  {
    do
    {
      id v6 = +[NSString stringWithFormat:@"%02X", *v4];
      sub_100004950(__p, (char *)[v6 UTF8String]);

      if ((v13 & 0x80u) == 0) {
        uint64_t v7 = __p;
      }
      else {
        uint64_t v7 = (void **)__p[0];
      }
      if ((v13 & 0x80u) == 0) {
        std::string::size_type v8 = v13;
      }
      else {
        std::string::size_type v8 = (std::string::size_type)__p[1];
      }
      if (a2) {
        std::string::insert(&v16, 0, (const std::string::value_type *)v7, v8);
      }
      else {
        std::string::append(&v16, (const std::string::value_type *)v7, v8);
      }
      if ((char)v13 < 0) {
        operator delete(__p[0]);
      }
      ++v4;
    }
    while (v4 != v5);
    if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v9 = &v16;
    }
    else {
      uint64_t v9 = (std::string *)v16.__r_.__value_.__r.__words[0];
    }
  }
  long long v10 = +[NSString stringWithUTF8String:v9];
  if (v14)
  {
    BOOL v15 = (unsigned __int8 *)v14;
    operator delete(v14);
  }
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }

  return v10;
}

void sub_10002D7D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

char *sub_10002D834(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v6 = +[NSPropertyListSerialization dataWithPropertyList:v4 format:200 options:0 error:0];
  if ((unint64_t)[v6 length] > 0x8000)
  {
    uint64_t v7 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"WARNING: statedump too big (%d > %d)", [v6 length], 0x8000);
    id v14 = v3;
    BOOL v15 = v7;
    std::string::size_type v8 = +[NSDictionary dictionaryWithObjects:&v15 forKeys:&v14 count:1];
    uint64_t v9 = +[NSPropertyListSerialization dataWithPropertyList:v8 format:200 options:0 error:0];

    id v6 = (void *)v9;
  }
  long long v10 = (char *)malloc_type_calloc(1uLL, (size_t)[v6 length] + 200, 0x7E1CA1B2uLL);
  *(_DWORD *)long long v10 = 1;
  *((_DWORD *)v10 + 1) = [v6 length];
  id v11 = +[NSString stringWithFormat:@"[nearbyd] %@", v3];
  strlcpy(v10 + 136, (const char *)[v11 UTF8String], 0x40uLL);

  id v12 = v6;
  memcpy(v10 + 200, [v12 bytes], (size_t)[v12 length]);

  return v10;
}

void sub_10002DA20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

char *sub_10002DA78(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v8 = v3;
  id v9 = v4;
  unint64_t v5 = +[NSDictionary dictionaryWithObjects:&v9 forKeys:&v8 count:1];
  id v6 = sub_10002D834(v3, v5);

  return v6;
}

void sub_10002DB28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_10002DB50(void *a1, size_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_10002DBC4(a1, a2);
    id v4 = (char *)a1[1];
    unint64_t v5 = &v4[a2];
    bzero(v4, a2);
    a1[1] = v5;
  }
  return a1;
}

void sub_10002DBA8(_Unwind_Exception *exception_object)
{
  id v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_10002DBC4(void *a1, size_t __sz)
{
  if ((__sz & 0x8000000000000000) != 0) {
    sub_1000267C4();
  }
  __n128 result = (char *)operator new(__sz);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[__sz];
  return result;
}

uint64_t sub_10002DC08(uint64_t a1, uint64_t a2, int a3)
{
  *(void *)a1 = a2;
  *(_DWORD *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 1;
  *(void *)(a1 + 40) = 0;
  uint64_t v4 = +[NSData dataWithBytes:&unk_1004A00E0 length:64];
  unint64_t v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v4;

  return a1;
}

void sub_10002DC6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10002DC8C(uint64_t a1, void *a2, int a3, void *a4)
{
  id v7 = a2;
  id v8 = a4;
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0x402E000000000000;
  return a1;
}

uint64_t sub_10002DCE4(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t *a7, void *a8)
{
  id v15 = a6;
  if (*((char *)a2 + 23) < 0)
  {
    sub_100002DE4((unsigned char *)a1, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v16 = *a2;
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    *(_OWORD *)a1 = v16;
  }
  sub_100027610(a1 + 24, a3);
  sub_1000276A8(a1 + 56, a4);
  sub_100027740(a1 + 88, a5);
  *(unsigned char *)(a1 + 120) = 0;
  *(unsigned char *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = 0;
  id v17 = v15;
  uint64_t v19 = *a7;
  uint64_t v18 = a7[1];
  *(void *)(a1 + 184) = v17;
  *(void *)(a1 + 192) = v19;
  *(void *)(a1 + 200) = v18;
  if (v18) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v18 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v20 = a8[1];
  *(void *)(a1 + 208) = *a8;
  *(void *)(a1 + 216) = v20;
  if (v20) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v20 + 8), 1uLL, memory_order_relaxed);
  }
  *(_OWORD *)(a1 + 232) = 0u;
  *(void *)(a1 + 312) = 0;
  *(void *)(a1 + 344) = 0;
  *(void *)(a1 + 376) = 0;
  *(_DWORD *)(a1 + 384) = 0;
  *(void *)(a1 + 392) = 0;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(void *)(a1 + 280) = 0;
  unint64_t v21 = sub_10001D404();
  *(void *)(a1 + 224) = sub_10001DB30((uint64_t)v21);
  long long v22 = sub_10001D404();
  uint64_t v23 = (std::__shared_weak_count *)a8[1];
  uint64_t v29 = *a8;
  long long v30 = v23;
  if (v23) {
    atomic_fetch_add_explicit(&v23->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_100021808((uint64_t)v22, &v29);
  if (v30) {
    sub_10001A970(v30);
  }
  long long v24 = +[NSUserDefaults standardUserDefaults];
  unsigned int v25 = [v24 integerForKey:@"WiFiServiceNumMeas"];
  int v26 = v25;
  if (v25 <= 8)
  {
    if (((1 << v25) & 0x116) != 0)
    {
      dword_10089D108 = v25;
      goto LABEL_15;
    }
    if (!v25) {
      goto LABEL_15;
    }
  }
  long long v28 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
    sub_10040E6A4(v26, v28);
  }
LABEL_15:

  return a1;
}

void sub_10002DEE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10002DFB0(uint64_t a1)
{
  if (*(void *)(a1 + 48)) {
    sub_10002E098((const std::string *)a1);
  }

  sub_100026B74((void *)(a1 + 352));
  sub_100026AF0((void *)(a1 + 320));
  sub_100026A6C((void *)(a1 + 288));

  long long v2 = *(std::__shared_weak_count **)(a1 + 216);
  if (v2) {
    sub_10001A970(v2);
  }
  id v3 = *(std::__shared_weak_count **)(a1 + 200);
  if (v3) {
    sub_10001A970(v3);
  }

  uint64_t v4 = *(void *)(a1 + 176);
  *(void *)(a1 + 176) = 0;
  if (v4) {
    sub_10002ED50(a1 + 176, v4);
  }
  sub_10002ED14(a1 + 120);
  sub_100026B74((void *)(a1 + 88));
  sub_100026AF0((void *)(a1 + 56));
  sub_100026A6C((void *)(a1 + 24));
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void *sub_10002E098(const std::string *a1)
{
  long long v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#wifi,WiFiRanging Invalidate ranging session", v5, 2u);
  }
  uint64_t data = (uint64_t)a1[8].__r_.__value_.__l.__data_;
  if (data) {
    sub_10029E9E8(data, a1[9].__r_.__value_.__l.__size_, a1);
  }
  sub_10002E144((uint64_t)a1);
  sub_10002E19C((uint64_t)a1);
  sub_100028504(a1[1].__r_.__value_.__r.__words);
  return sub_100028610(&a1[2].__r_.__value_.__l.__size_);
}

void sub_10002E144(uint64_t a1)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 184));
  long long v2 = *(NSObject **)(a1 + 232);
  if (v2)
  {
    dispatch_source_cancel(v2);
    id v3 = *(void **)(a1 + 232);
    *(void *)(a1 + 232) = 0;
  }
}

void sub_10002E19C(uint64_t a1)
{
  long long v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)pthread_attr_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#wifi,WiFiRanging Stop ranging session", buf, 2u);
  }
  if (*(void *)(a1 + 176) && *(unsigned char *)(a1 + 168))
  {
    BOOL v3 = *(unsigned char *)(a1 + 152) == 0;
    uint64_t v4 = sub_10001D404();
    sub_10002580C((uint64_t)buf, *(void *)(a1 + 176));
    id v6 = 0;
    uint64_t v7 = 0;
    id v8 = 0;
    id v9 = &v6;
    char v10 = 0;
    id v6 = (char *)operator new(0xA8uLL);
    uint64_t v7 = (uint64_t)v6;
    id v8 = v6 + 168;
    uint64_t v7 = sub_100027C7C((uint64_t)&v8, (uint64_t)buf, (uint64_t)&v18, (uint64_t)v6);
    if (v3) {
      sub_100025590((uint64_t)v4);
    }
    else {
      sub_10001EAFC((uint64_t)v4, (uint64_t)&v6);
    }
    id v9 = &v6;
    sub_100027BE4((void ***)&v9);

    sub_100026B74(v17);
    sub_100026AF0(v16);
    sub_100026A6C(v15);
  }
  else
  {
    unint64_t v5 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)pthread_attr_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#wifi,Ranging session not stopped since ranging session never started or no active peer in ranging session", buf, 2u);
    }
  }
}

void sub_10002E408(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va1, a5);
  va_start(va, a5);
  id v6 = va_arg(va1, void **);
  uint64_t v8 = va_arg(va1, void);
  sub_100027BE4((void ***)va);
  sub_10001E290((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_10002E458(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    int buf = 67109120;
    LODWORD(buf_4) = dword_10089D108;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#wifi,WiFiRanging Start ranging session; using %d measurements",
      (uint8_t *)&buf,
      8u);
  }
  sub_10002E9E8(a1 + 120, a2);
  id v5 = objc_alloc((Class)NSNumber);
  id v6 = [v5 initWithInt:dword_10089D108];
  v15[0] = *(void *)a2;
  v15[1] = v6;
  id v14 = [objc_alloc((Class)NSData) initWithBytes:v15 length:6];
  id v7 = *(id *)(a2 + 16);
  id location = 0;
  id v13 = v7;
  if (*(unsigned char *)(a2 + 32))
  {
    uint64_t v8 = +[NSData dataWithBytes:&unk_1004A00E0 length:64];
    id v9 = location;
    id location = v8;
  }
  else
  {
    objc_storeStrong(&location, *(id *)(a2 + 24));
    char v10 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      int buf = 138412290;
      id buf_4 = v13;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#wifi,peer address: %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v11 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    int buf = 138412290;
    id buf_4 = location;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "#wifi,secure key: %@", (uint8_t *)&buf, 0xCu);
  }
  sub_10002EA74();
}

void sub_10002E958(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,void *a21,void *a22,uint64_t a23,void *a24,void **a25,uint64_t a26,char a27)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10002E9E8(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 48);
  int v5 = *(_DWORD *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = v5;
  if (v4)
  {
    objc_storeStrong((id *)(a1 + 16), *(id *)(a2 + 16));
    objc_storeStrong((id *)(a1 + 24), *(id *)(a2 + 24));
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  else
  {
    *(void *)(a1 + 16) = *(id *)(a2 + 16);
    *(void *)(a1 + 24) = *(id *)(a2 + 24);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(unsigned char *)(a1 + 48) = 1;
  }
  return a1;
}

void sub_10002EA74()
{
}

void sub_10002EBB0(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va2, a3);
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v8 = va_arg(va2, void);
  uint64_t v10 = va_arg(va2, void);
  uint64_t v11 = va_arg(va2, void);
  uint64_t v12 = va_arg(va2, void);
  sub_100026B74((uint64_t *)va);
  sub_100026AF0((uint64_t *)va1);
  sub_100026A6C((uint64_t *)va2);
  operator delete();
}

void sub_10002EC04(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  long long v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#wifi,One-shot ranging session timeout", v3, 2u);
  }
  sub_10002E19C(v1);
  sub_1000219E4(v1 + 56, 6);
  sub_10002E144(v1);
}

void *sub_10002EC8C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  if ((a1 + 1) >= 8) {
    sub_10040E760();
  }
  long long v2 = off_100846B38[a1 + 1];

  return sub_100004950(a2, v2);
}

void *sub_10002ECD0@<X0>(int a1@<W0>, void *a2@<X8>)
{
  if (a1)
  {
    if (a1 != 1) {
      sub_10040E78C();
    }
    uint64_t v3 = "NOT_READY";
  }
  else
  {
    uint64_t v3 = "READY";
  }
  return sub_100004950(a2, v3);
}

uint64_t sub_10002ED14(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48))
  {
  }
  return a1;
}

void sub_10002ED50(uint64_t a1, uint64_t a2)
{
  if (a2)
  {

    sub_100026B74((void *)(a2 + 112));
    sub_100026AF0((void *)(a2 + 80));
    sub_100026A6C((void *)(a2 + 48));

    operator delete();
  }
}

void *sub_10002EDDC@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100846B78[a1]);
}

void *sub_10002EDF0@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100846BD0[a1]);
}

void *sub_10002EE04@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100846C18[a1]);
}

void *sub_10002EE18@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100846C38[a1]);
}

void sub_10002EF18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002EF8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002F214(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(v24);
  objc_destroyWeak((id *)(v25 - 88));

  _Unwind_Resume(a1);
}

void sub_10002F280(uint64_t a1)
{
  uint64_t v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(_DWORD *)(a1 + 48);
    v6[0] = 67109120;
    v6[1] = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "connection interrupted for pid: %d", (uint8_t *)v6, 8u);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v5 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained handleXPCDisconnection:*(void *)(a1 + 32)];
  }
}

void sub_10002F348(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002F360(uint64_t a1)
{
  uint64_t v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(_DWORD *)(a1 + 48);
    v6[0] = 67109120;
    v6[1] = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "connection invalidated for pid: %d", (uint8_t *)v6, 8u);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v5 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained handleXPCDisconnection:*(void *)(a1 + 32)];
  }
}

void sub_10002F428(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002F5DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002F6AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002F70C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C888, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C888))
  {
    sub_100004950(qword_10089C870, "PRRoseProviderNetworkListener");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C870, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C888);
  }
}

void sub_10002F7A4(_Unwind_Exception *a1)
{
}

void sub_10002F7BC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8A8))
  {
    sub_100004950(&qword_10089C890, "com.apple.nearbyd.accessory.download");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C890, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8A8);
  }
}

void sub_10002F854(_Unwind_Exception *a1)
{
}

void sub_10002F86C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8C8))
  {
    sub_100004950(&qword_10089C8B0, "com.apple.nearbyd.accessory.files");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C8B0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8C8);
  }
}

void sub_10002F904(_Unwind_Exception *a1)
{
}

void sub_10002F91C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8E8))
  {
    sub_100004950(qword_10089C8D0, "MA_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8D0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8E8);
  }
}

void sub_10002F9B4(_Unwind_Exception *a1)
{
}

void sub_10002F9CC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C908, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C908))
  {
    sub_100004950(qword_10089C8F0, "MB_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8F0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C908);
  }
}

void sub_10002FA64(_Unwind_Exception *a1)
{
}

void sub_10002FA7C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C928, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C928))
  {
    sub_100004950(qword_10089C910, "D");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C910, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C928);
  }
}

void sub_10002FB14(_Unwind_Exception *a1)
{
}

void sub_10002FB2C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C948, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C948))
  {
    sub_100004950(&qword_10089C930, "A");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C930, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C948);
  }
}

void sub_10002FBC4(_Unwind_Exception *a1)
{
}

void sub_10002FBDC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C968, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C968))
  {
    sub_100004950(qword_10089C950, "FAS.bin");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C950, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C968);
  }
}

void sub_10002FC74(_Unwind_Exception *a1)
{
}

void sub_10002FC8C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C988, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C988))
  {
    qword_10089C970 = 0;
    qword_10089C978 = 0;
    qword_10089C980 = 0;
    uint64_t v0 = operator new(0x30uLL);
    qword_10089C978 = (uint64_t)(v0 + 3);
    qword_10089C980 = (uint64_t)(v0 + 3);
    _OWORD *v0 = xmmword_1004A0120;
    v0[1] = *(_OWORD *)algn_1004A0130;
    v0[2] = xmmword_1004A0140;
    qword_10089C970 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_100008CAC, &qword_10089C970, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C988);
  }
}

void sub_10002FD48(_Unwind_Exception *a1)
{
}

void sub_10002FD60()
{
  sub_10039D144();
  uint64_t v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  int v3 = std::string::append(&v38, ".bin");
  long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_10089FF70 = v3->__r_.__value_.__r.__words[2];
  xmmword_10089FF60 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FF60, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  uint64_t v7 = std::string::append(&v38, ".bin");
  long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_10089FF88 = v7->__r_.__value_.__r.__words[2];
  xmmword_10089FF78 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FF78, (void *)&_mh_execute_header);
  sub_10039D144();
  id v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  uint64_t v11 = std::string::append(&v38, ".bin");
  long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_10089FFA0 = v11->__r_.__value_.__r.__words[2];
  xmmword_10089FF90 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FF90, (void *)&_mh_execute_header);
  sub_10039D144();
  id v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  id v15 = std::string::append(&v38, ".bin");
  long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_10089FFB8 = v15->__r_.__value_.__r.__words[2];
  xmmword_10089FFA8 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FFA8, (void *)&_mh_execute_header);
  sub_10039D144();
  id v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  uint64_t v19 = std::string::append(&v38, ".bin");
  long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_10089FFD0 = v19->__r_.__value_.__r.__words[2];
  xmmword_10089FFC0 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FFC0, (void *)&_mh_execute_header);
  sub_10039D144();
  unint64_t v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  uint64_t v23 = std::string::append(&v38, ".bin");
  long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_10089FFE8 = v23->__r_.__value_.__r.__words[2];
  xmmword_10089FFD8 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FFD8, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  uint64_t v27 = std::string::append(&v38, ".bin");
  long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1008A0000 = v27->__r_.__value_.__r.__words[2];
  xmmword_10089FFF0 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089FFF0, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  unint64_t v31 = std::string::append(&v38, ".bin");
  long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1008A0018 = v31->__r_.__value_.__r.__words[2];
  xmmword_1008A0008 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0008, (void *)&_mh_execute_header);
  sub_10039D144();
  long long v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  unint64_t v35 = std::string::append(&v38, ".bin");
  long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1008A0030 = v35->__r_.__value_.__r.__words[2];
  xmmword_1008A0020 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0020, (void *)&_mh_execute_header);
}

void sub_1000303A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_100030414(double a1)
{
  return a1 / 180.0 * 3.14159265;
}

double sub_100030430(double a1)
{
  return a1 * 180.0 / 3.14159265;
}

double sub_10003044C(double a1)
{
  return a1 / 1.0e12 * 299792458.0;
}

double sub_100030468(double a1)
{
  return a1 / 299792458.0 * 1.0e12;
}

double sub_100030484(double a1)
{
  return a1 * 299792458.0;
}

double sub_100030494(double a1)
{
  return a1 * 1.0e12;
}

double sub_1000304A4(double a1)
{
  return a1 / 1000.0;
}

double sub_1000304B4(double a1)
{
  return a1 / 1.0e12;
}

double sub_1000304C4(double a1)
{
  return a1 / 1000000000.0;
}

long double sub_1000304D4(long double *a1, double *a2, double a3, double a4)
{
  double v6 = a4 / 180.0 * 3.14159265;
  __double2 v7 = __sincos_stret(a3 / 180.0 * 3.14159265);
  __double2 v8 = __sincos_stret(v6);
  *a1 = asin(v7.__cosval * v8.__sinval) * 180.0 / 3.14159265;
  long double result = atan2(-(v7.__sinval * v8.__sinval), v8.__cosval) * 180.0 / 3.14159265;
  *a2 = result;
  return result;
}

void sub_10003057C(double *a1, long double *a2, double a3, double a4)
{
  __double2 v7 = __sincos_stret(a3 / 180.0 * 3.14159265);
  __double2 v8 = __sincos_stret(a4 / 180.0 * 3.14159265);
  *a2 = acos(v7.__cosval * v8.__cosval) * 180.0 / 3.14159265;
  double v9 = atan2(-(v7.__cosval * v8.__sinval), v7.__sinval) * 180.0 / 3.14159265;
  if (v9 < 0.0) {
    double v9 = v9 + 360.0;
  }
  *a1 = v9;
}

void sub_100030688(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100030794(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100030800(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  long long v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)NIServerClient;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1000308B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10003095C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_100030974(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 uwbSessionDidFailWithError:*(void *)(a1 + 32)];
  }
}

void sub_1000309D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100030A84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_100030A9C(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 uwbSessionDidInvalidateWithError:*(void *)(a1 + 32)];
  }
}

void sub_100030B00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100030BB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_100030BC8(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 didRemoveNearbyObjects:*(void *)(a1 + 32) withReason:*(void *)(a1 + 40)];
  }
}

void sub_100030C2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100030CD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_100030CF0(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 didUpdateNearbyObjects:*(void *)(a1 + 32)];
  }
}

void sub_100030D54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100030DDC(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 uwbSessionInterruptedWithReason:*(void *)(a1 + 32) timestamp:*(double *)(a1 + 40)];
  }
}

void sub_100030E44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100030ECC(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 uwbSessionInterruptionReasonEnded:*(void *)(a1 + 32) timestamp:*(double *)(a1 + 40)];
  }
}

void sub_100030F34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100030FE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_100030FF8(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 didDiscoverNearbyObject:*(void *)(a1 + 32)];
  }
}

void sub_10003105C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10003115C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_10003118C(void *a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 object:a1[4] didUpdateRegion:a1[5] previousRegion:a1[6]];
  }
}

void sub_1000311F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100031278(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 didUpdateMotionState:*(void *)(a1 + 32)];
  }
}

void sub_1000312DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100031360(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 didUpdateHealthStatus:*(void *)(a1 + 32)];
  }
}

void sub_1000313C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100031470(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_100031488(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 relayDCKMessage:*(void *)(a1 + 32)];
  }
}

void sub_1000314EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000315C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1000315E4(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 didGenerateShareableConfigurationData:*(void *)(a1 + 32) forObject:*(void *)(a1 + 40)];
  }
}

void sub_100031648(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000316F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_10003170C(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 didUpdateLocalDiscoveryToken:*(void *)(a1 + 32)];
  }
}

void sub_100031770(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100031824(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_10003183C(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 didReceiveRangingAuthRecommendation:*(unsigned __int8 *)(a1 + 40) forObject:*(void *)(a1 + 32)];
  }
}

void sub_1000318A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100031978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_10003199C(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 didUpdateAlgorithmState:*(void *)(a1 + 32) forObject:*(void *)(a1 + 40)];
  }
}

void sub_100031A00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100031A84(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 didUpdateHomeDeviceUWBRangingAvailability:*(unsigned __int8 *)(a1 + 32)];
  }
}

void sub_100031AE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100031BBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_100031BE0(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 didProcessAcwgM1MsgWithResponse:*(void *)(a1 + 32) error:*(void *)(a1 + 40)];
  }
}

void sub_100031C44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100031D18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_100031D3C(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 didProcessAcwgM3MsgWithResponse:*(void *)(a1 + 32) error:*(void *)(a1 + 40)];
  }
}

void sub_100031DA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100031E74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_100031E98(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 didProcessAcwgRangingSessionResumeRequestMsgWithResponse:*(void *)(a1 + 32) error:*(void *)(a1 + 40)];
  }
}

void sub_100031EFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100031F84(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 requestAcwgRangingSessionSuspend:*(unsigned int *)(a1 + 40) withSuspendTriggerReason:*(void *)(a1 + 32)];
  }
}

void sub_100031FEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100032070(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 didStartAcwgRanging:*(void *)(a1 + 32)];
  }
}

void sub_1000320D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100032158(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 didSuspendAcwgRanging:*(void *)(a1 + 32)];
  }
}

void sub_1000321BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100032270(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_100032288(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 didPrefetchAcwgUrsk:*(unsigned int *)(a1 + 40) error:*(void *)(a1 + 32)];
  }
}

void sub_1000322F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10003239C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1000323B4(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 systemDidUpdateState:*(void *)(a1 + 32)];
  }
}

void sub_100032418(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000324CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_1000324E4(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 systemDidUpdateResourceUsageLimitExceeded:*(unsigned __int8 *)(a1 + 40) forSessionConfigurationTypeWithName:*(void *)(a1 + 32)];
  }
}

void sub_10003254C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000326BC(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_10003274C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003284C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

double sub_1000328AC()
{
  double v0 = 2.5;
  uint64_t v1 = MGGetProductType();
  int v2 = v1;
  if (v1 > 2159747552)
  {
    if (v1 <= 2940697644)
    {
      if (v1 > 2688879998)
      {
        if (v1 > 2793418700)
        {
          if (v1 == 2793418701) {
            return v0;
          }
          uint64_t v3 = 2795618603;
        }
        else
        {
          if (v1 == 2688879999) {
            return v0;
          }
          uint64_t v3 = 2722529672;
        }
      }
      else if (v1 > 2309863437)
      {
        if (v1 == 2309863438) {
          return v0;
        }
        uint64_t v3 = 2311900306;
      }
      else
      {
        if (v1 == 2159747553) {
          return v0;
        }
        uint64_t v3 = 2270970153;
      }
    }
    else if (v1 <= 3585085678)
    {
      if (v1 > 3001488777)
      {
        if (v1 == 3001488778) {
          return v0;
        }
        uint64_t v3 = 3242623367;
      }
      else
      {
        if (v1 == 2940697645) {
          return v0;
        }
        uint64_t v3 = 2941181571;
      }
    }
    else if (v1 <= 3825599859)
    {
      if (v1 == 3585085679) {
        return v0;
      }
      uint64_t v3 = 3743999268;
    }
    else
    {
      if (v1 == 3825599860 || v1 == 3885279870) {
        return v0;
      }
      uint64_t v3 = 4201643249;
    }
  }
  else if (v1 <= 1169082143)
  {
    if (v1 > 689804741)
    {
      if (v1 > 910181309)
      {
        if (v1 == 910181310) {
          return v0;
        }
        uint64_t v3 = 1060988941;
      }
      else
      {
        if (v1 == 689804742) {
          return v0;
        }
        uint64_t v3 = 851437781;
      }
    }
    else if (v1 > 502329936)
    {
      if (v1 == 502329937) {
        return v0;
      }
      uint64_t v3 = 574536383;
    }
    else
    {
      if (v1 == 133314240) {
        return v0;
      }
      uint64_t v3 = 330877086;
    }
  }
  else if (v1 <= 1434404432)
  {
    if (v1 > 1371389548)
    {
      if (v1 == 1371389549) {
        return v0;
      }
      uint64_t v3 = 1429914406;
    }
    else
    {
      if (v1 == 1169082144) {
        return v0;
      }
      uint64_t v3 = 1234705395;
    }
  }
  else
  {
    if (v1 <= 1721691076)
    {
      if (v1 == 1434404433) {
        return v0;
      }
      if (v1 == 1608945770) {
        return 4.0;
      }
      goto LABEL_53;
    }
    if (v1 == 1721691077 || v1 == 2021146989) {
      return v0;
    }
    uint64_t v3 = 2080700391;
  }
  if (v1 == v3) {
    return v0;
  }
LABEL_53:
  id v5 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
    sub_10040E7FC(v2, v5);
  }
  return v0;
}

double sub_100032BEC()
{
  uint64_t v0 = MGGetProductType();
  double result = 4.0;
  if (v0 == 1608945770) {
    return 5.0;
  }
  return result;
}

uint64_t sub_100032C1C(uint64_t a1)
{
  int v2 = *(void **)a1;
  if (v2)
  {
    *(void *)(a1 + 8) = v2;
    operator delete(v2);
  }
  return a1;
}

void sub_100032F48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100032FB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)NIServerAnalyticsManager;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1000339B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  _Unwind_Resume(a1);
}

id sub_100033AD0(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_1000351EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_100035234(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_100035F18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100036D94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_100036E08(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_1000395E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,void *a44)
{
  _Unwind_Resume(a1);
}

id sub_100039CE4(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

id sub_100039CEC(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

id sub_100039CF4(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

id sub_100039CFC(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_100039F08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003A42C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_10003A4AC(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_10003A4DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003A8BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_10003A930(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_10003AB88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10003AC1C(void *a1)
{
  int v2 = (void **)a1[1];
  uint64_t v3 = (void **)a1[2];
  a1[5] = 0;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v3 = (void **)a1[2];
      int v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 16;
  }
  else
  {
    if (v5 != 2) {
      goto LABEL_9;
    }
    uint64_t v6 = 32;
  }
  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    __double2 v7 = *v2++;
    operator delete(v7);
  }

  return sub_10003ACC4((uint64_t)a1);
}

uint64_t sub_10003ACC4(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != v3) {
    *(void *)(a1 + 16) = v2 + ((v3 - v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  unint64_t v4 = *(void **)a1;
  if (*(void *)a1) {
    operator delete(v4);
  }
  return a1;
}

void *sub_10003AD14(void *result, const void *a2, uint64_t a3, size_t __sz)
{
  if (__sz)
  {
    uint64_t v6 = result;
    double result = sub_10002DBC4(result, __sz);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      double result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_10003AD74(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10003AD90(uint64_t a1)
{
  sub_10003ADCC(a1, *(void ***)(a1 + 16));
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_10003ADCC(int a1, void **__p)
{
  if (__p)
  {
    uint64_t v2 = __p;
    do
    {
      uint64_t v3 = (void **)*v2;
      if (*((char *)v2 + 39) < 0) {
        operator delete(v2[2]);
      }
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
}

void *sub_10003AE18(uint64_t a1, int *a2, uint64_t a3, _DWORD **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
    long long v10 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      uint64_t v11 = *v10;
      if (*v10)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v12 == v7)
          {
            if (*((_DWORD *)v11 + 4) == v7) {
              return v11;
            }
          }
          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8) {
                v12 %= v8;
              }
            }
            else
            {
              v12 &= v8 - 1;
            }
            if (v12 != v4) {
              break;
            }
          }
          uint64_t v11 = (void *)*v11;
        }
        while (v11);
      }
    }
  }
  uint64_t v11 = operator new(0x18uLL);
  *uint64_t v11 = 0;
  v11[1] = v7;
  *((_DWORD *)v11 + 4) = **a4;
  *((unsigned char *)v11 + 20) = 0;
  float v13 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    BOOL v15 = 1;
    if (v8 >= 3) {
      BOOL v15 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v16 = v15 | (2 * v8);
    unint64_t v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17) {
      size_t v18 = v17;
    }
    else {
      size_t v18 = v16;
    }
    sub_10002AA24(a1, v18);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
      else {
        unint64_t v4 = v7;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
  }
  uint64_t v19 = *(void *)a1;
  long long v20 = *(void **)(*(void *)a1 + 8 * v4);
  if (v20)
  {
    *uint64_t v11 = *v20;
LABEL_38:
    void *v20 = v11;
    goto LABEL_39;
  }
  *uint64_t v11 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v11;
  *(void *)(v19 + 8 * v4) = a1 + 16;
  if (*v11)
  {
    unint64_t v21 = *(void *)(*v11 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v21 >= v8) {
        v21 %= v8;
      }
    }
    else
    {
      v21 &= v8 - 1;
    }
    long long v20 = (void *)(*(void *)a1 + 8 * v21);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return v11;
}

void sub_10003B028(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_10003B03C(uint64_t a1, unsigned __int8 *a2, uint64_t a3, long long **a4)
{
  unint64_t v8 = (void *)(a1 + 24);
  unint64_t v9 = sub_100003624(a1 + 24, (uint64_t)a2);
  unint64_t v10 = v9;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v4 = v9;
      if (v9 >= v11) {
        unint64_t v4 = v9 % v11;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v9;
    }
    float v14 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      for (uint64_t i = *v14; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v16 = *((void *)i + 1);
        if (v16 == v10)
        {
          if (sub_100007880(a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11) {
              v16 %= v11;
            }
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4) {
            break;
          }
        }
      }
    }
  }
  sub_10003B2D4(a1, v10, a4, (uint64_t)v26);
  float v17 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v18 = *(float *)(a1 + 32);
  if (!v11 || (float)(v18 * (float)v11) < v17)
  {
    BOOL v19 = 1;
    if (v11 >= 3) {
      BOOL v19 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v11);
    unint64_t v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21) {
      size_t v22 = v21;
    }
    else {
      size_t v22 = v20;
    }
    sub_10002AA24(a1, v22);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
      else {
        unint64_t v4 = v10;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
  }
  uint64_t v23 = *(void **)(*(void *)a1 + 8 * v4);
  if (v23)
  {
    *(void *)v26[0] = *v23;
    *uint64_t v23 = v26[0];
  }
  else
  {
    *(void *)v26[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v26[0];
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*(void *)v26[0])
    {
      unint64_t v24 = *(void *)(*(void *)v26[0] + 8);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v24 >= v11) {
          v24 %= v11;
        }
      }
      else
      {
        v24 &= v11 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v24) = v26[0];
    }
  }
  uint64_t i = (unsigned __int8 *)v26[0];
  ++*v8;
  return i;
}

void sub_10003B2B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void **__p, uint64_t a13)
{
  if (__p) {
    sub_10003B4EC((uint64_t)&a13, __p);
  }
  _Unwind_Resume(exception_object);
}

unsigned char *sub_10003B2D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long **a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  unint64_t v8 = (char *)operator new(0x30uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 16) = 0;
  *(void *)unint64_t v8 = 0;
  *((void *)v8 + 1) = a2;
  double result = v8 + 16;
  unint64_t v10 = *a3;
  if (*((char *)*a3 + 23) < 0)
  {
    double result = sub_100002DE4(result, *(void **)v10, *((void *)v10 + 1));
  }
  else
  {
    long long v11 = *v10;
    *((void *)v8 + 4) = *((void *)v10 + 2);
    *(_OWORD *)double result = v11;
  }
  v8[40] = 0;
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

void sub_10003B364(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  sub_10003B4EC(v3, v2);
  _Unwind_Resume(a1);
}

unint64_t sub_10003B380(void *a1, uint64_t a2)
{
  uint64_t v2 = a1[1];
  unint64_t v3 = 0xB492B66FBE98F273 * *a1;
  uint64_t v4 = __ROR8__(0x9AE16A3B2F90404FLL * *(void *)((char *)a1 + a2 - 8), 30) + __ROR8__(v3 - v2, 43);
  unint64_t v5 = v3 + a2 + __ROR8__(v2 ^ 0xC949D7C7509E6557, 20) - 0x9AE16A3B2F90404FLL * *(void *)((char *)a1 + a2 - 8);
  unint64_t v6 = 0x9DDFEA08EB382D69 * (v5 ^ (v4 - 0x3C5A37A36834CED9 * *(void *)((char *)a1 + a2 - 16)));
  return 0x9DDFEA08EB382D69
       * ((0x9DDFEA08EB382D69 * (v5 ^ (v6 >> 47) ^ v6)) ^ ((0x9DDFEA08EB382D69 * (v5 ^ (v6 >> 47) ^ v6)) >> 47));
}

unint64_t sub_10003B42C(void *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)((char *)a1 + a2 - 16);
  uint64_t v3 = *a1 - 0x3C5A37A36834CED9 * (v2 + a2);
  uint64_t v5 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v6 = __ROR8__(v3 + v4, 52);
  uint64_t v7 = v3 + a1[1];
  uint64_t v8 = __ROR8__(v7, 7);
  uint64_t v9 = v7 + v5;
  uint64_t v10 = *(void *)((char *)a1 + a2 - 32) + v5;
  uint64_t v11 = v8 + __ROR8__(*a1 - 0x3C5A37A36834CED9 * (v2 + a2), 37) + v6 + __ROR8__(v9, 31);
  uint64_t v12 = *(void *)((char *)a1 + a2 - 24) + v10 + v2;
  unint64_t v13 = 0xC3A5C85C97CB3127 * (v12 + *(void *)((char *)a1 + a2 - 8) + v4 + v11)
      - 0x651E95C4D06FBFB1
      * (v9
       + v4
       + __ROR8__(v10, 37)
       + __ROR8__(*(void *)((char *)a1 + a2 - 24) + v10, 7)
       + __ROR8__(*(void *)((char *)a1 + a2 - 8) + v4 + v10, 52)
       + __ROR8__(v12, 31));
  return 0x9AE16A3B2F90404FLL
       * ((v11 - 0x3C5A37A36834CED9 * (v13 ^ (v13 >> 47))) ^ ((v11 - 0x3C5A37A36834CED9 * (v13 ^ (v13 >> 47))) >> 47));
}

void sub_10003B4EC(uint64_t a1, void **__p)
{
  if (*(unsigned char *)(a1 + 8))
  {
    if (*((char *)__p + 39) < 0) {
      operator delete(__p[2]);
    }
  }
  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

void *sub_10003B54C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    sub_1000257D8();
  }
  return operator new(4 * a2);
}

void *sub_10003B584(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    double result = sub_10003B600(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      double result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_10003B5E4(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_10003B600(void *a1, unint64_t a2)
{
  if (a2 >> 62) {
    sub_1000267C4();
  }
  double result = (char *)sub_10003B54C((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[4 * v4];
  return result;
}

void sub_10003B644()
{
  qword_1008A0040 = 0;
  unk_1008A0048 = 0;
  qword_1008A0038 = 0;
  uint64_t v1 = operator new(0x40uLL);
  qword_1008A0040 = (uint64_t)(v1 + 4);
  unk_1008A0048 = v1 + 4;
  *uint64_t v1 = xmmword_1004A01F0;
  v1[1] = unk_1004A0200;
  v1[2] = xmmword_1004A0210;
  v1[3] = unk_1004A0220;
  qword_1008A0038 = (uint64_t)v1;
  __cxa_atexit((void (*)(void *))sub_100032C1C, &qword_1008A0038, (void *)&_mh_execute_header);
  qword_1008A0058 = 0;
  unk_1008A0060 = 0;
  qword_1008A0050 = 0;
  uint64_t v2 = operator new(0x10uLL);
  qword_1008A0058 = (uint64_t)(v2 + 1);
  unk_1008A0060 = v2 + 1;
  *uint64_t v2 = xmmword_1004A0230;
  qword_1008A0050 = (uint64_t)v2;
  __cxa_atexit((void (*)(void *))sub_100032C1C, &qword_1008A0050, (void *)&_mh_execute_header);
  __cxa_atexit((void (*)(void *))&std::mutex::~mutex, &stru_10089D170, (void *)&_mh_execute_header);
  xmmword_1008A0068 = 0u;
  unk_1008A0078 = 0u;
  dword_1008A0088 = 1065353216;
  __cxa_atexit((void (*)(void *))sub_100032C50, &xmmword_1008A0068, (void *)&_mh_execute_header);
  xmmword_1008A0090 = 0u;
  unk_1008A00A0 = 0u;
  dword_1008A00B0 = 1065353216;
  __cxa_atexit((void (*)(void *))sub_100032C54, &xmmword_1008A0090, (void *)&_mh_execute_header);
}

void *sub_10003B7A8@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100846F38[a1]);
}

void *sub_10003B7BC@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100846F90[a1]);
}

void *sub_10003B7D0@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100846FD8[a1]);
}

void *sub_10003B7E4@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100846FF8[a1]);
}

void sub_10003B998(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_10003BAFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003BBDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)PRBeaconRangingClientProxy;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_10003BCCC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14)
{
  if (a10) {
    std::__shared_weak_count::__release_weak(a10);
  }
  if (a12) {
    sub_10001A970(a12);
  }
  _Unwind_Resume(exception_object);
}

void sub_10003BD70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_10001A970(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_10003BE20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_10003BE38(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10040E93C();
    }
  }
  else
  {
    [v5 didFailWithError:*(void *)(a1 + 32)];
  }
}

void sub_10003BEB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003C13C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::mutex *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  std::mutex::unlock(a10);
  sub_10001A934((uint64_t)&a29);

  _Unwind_Resume(a1);
}

void sub_10003C1A0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10040E93C();
    }
  }
  else
  {
    [v5 didReceiveNewSolutions:*(void *)(a1 + 32)];
  }
}

void sub_10003C220(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003C2A0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10040E93C();
    }
  }
  else
  {
    [v5 rangingServiceDidUpdateState:*(void *)(a1 + 32) cause:*(void *)(a1 + 40)];
  }
}

void sub_10003C320(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003C3CC(_Unwind_Exception *a1)
{
  sub_10001A934(v1 - 32);
  _Unwind_Resume(a1);
}

void sub_10003C3E0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10040E93C();
    }
  }
  else
  {
    [v5 rangingRequestDidUpdateStatus:*(void *)(a1 + 32)];
  }
}

void sub_10003C460(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003C640(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003C854(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003CDB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22)
{
  uint64_t v25 = *(void **)(v23 - 144);
  if (v25)
  {
    *(void *)(v23 - 136) = v25;
    operator delete(v25);
  }

  _Unwind_Resume(a1);
}

char *sub_10003CECC(void **a1, int *a2)
{
  id v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  id v5 = v6;
  unint64_t v7 = *(void *)(v4 - 8);
  if (v7 >= (unint64_t)v6)
  {
    unint64_t v10 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v7 - (void)*a1) >> 3);
    unint64_t v11 = v10 + 1;
    if (v10 + 1 > 0x666666666666666) {
      sub_1000267C4();
    }
    unint64_t v12 = 0xCCCCCCCCCCCCCCCDLL * ((v5 - (unsigned char *)*a1) >> 3);
    if (2 * v12 > v11) {
      unint64_t v11 = 2 * v12;
    }
    if (v12 >= 0x333333333333333) {
      unint64_t v13 = 0x666666666666666;
    }
    else {
      unint64_t v13 = v11;
    }
    float v14 = (char *)sub_10003E580(v4, v13);
    BOOL v15 = &v14[40 * v10];
    float v17 = &v14[40 * v16];
    *(_DWORD *)BOOL v15 = 2;
    void v15[4] = 0;
    *((_WORD *)v15 + 10) = 0;
    v15[29] = 0;
    int v18 = *a2;
    *((_WORD *)v15 + 17) = *((_WORD *)a2 + 2);
    *(_DWORD *)(v15 + 30) = v18;
    v15[36] = 1;
    uint64_t v9 = v15 + 40;
    unint64_t v20 = (char *)*a1;
    BOOL v19 = (char *)a1[1];
    if (v19 != *a1)
    {
      do
      {
        long long v21 = *(_OWORD *)(v19 - 40);
        long long v22 = *(_OWORD *)(v19 - 24);
        *(void *)(v15 - 11) = *(void *)(v19 - 11);
        *(_OWORD *)(v15 - 24) = v22;
        *(_OWORD *)(v15 - 40) = v21;
        v15 -= 40;
        v19 -= 40;
      }
      while (v19 != v20);
      BOOL v19 = (char *)*a1;
    }
    *a1 = v15;
    a1[1] = v9;
    a1[2] = v17;
    if (v19) {
      operator delete(v19);
    }
  }
  else
  {
    *(_DWORD *)unint64_t v7 = 2;
    *(unsigned char *)(v7 + 4) = 0;
    *(_WORD *)(v7 + 20) = 0;
    *(unsigned char *)(v7 + 29) = 0;
    int v8 = *a2;
    *(_WORD *)(v7 + 34) = *((_WORD *)a2 + 2);
    *(_DWORD *)(v7 + 30) = v8;
    *(unsigned char *)(v7 + 36) = 1;
    uint64_t v9 = (char *)(v7 + 40);
  }
  a1[1] = v9;
  return v9 - 40;
}

void sub_10003D19C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003D6AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  long long v22 = v20;

  if (v17) {
    sub_10001A970(v17);
  }

  _Unwind_Resume(a1);
}

void sub_10003DB8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::mutex *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  _Unwind_Resume(a1);
}

id sub_10003DC1C(uint64_t a1)
{
  v6[0] = @"numOfResponders";
  uint64_t v2 = +[NSNumber numberWithInt:*(unsigned int *)(a1 + 40)];
  v6[1] = @"sessionDuration";
  v7[0] = v2;
  uint64_t v3 = +[NSNumber numberWithDouble:*(double *)(a1 + 32)];
  v7[1] = v3;
  uint64_t v4 = +[NSDictionary dictionaryWithObjects:v7 forKeys:v6 count:2];

  return v4;
}

void sub_10003DCFC(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;

  _Unwind_Resume(a1);
}

id sub_10003DD24(uint64_t a1)
{
  v6[0] = @"responderLatency";
  uint64_t v2 = +[NSNumber numberWithDouble:*(double *)(a1 + 32)];
  v6[1] = @"numOfResponders";
  v7[0] = v2;
  uint64_t v3 = +[NSNumber numberWithInt:*(unsigned int *)(a1 + 40)];
  v7[1] = v3;
  uint64_t v4 = +[NSDictionary dictionaryWithObjects:v7 forKeys:v6 count:2];

  return v4;
}

void sub_10003DE04(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;

  _Unwind_Resume(a1);
}

void sub_10003E284(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if (v16) {
    sub_10001A970(v16);
  }
  _Unwind_Resume(a1);
}

void sub_10003E3E8(void **a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = operator new(0x48uLL);
  sub_10003E45C(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;

  sub_10001ABCC((uint64_t)a2, v4 + 4, (uint64_t)(v4 + 3));
}

void sub_10003E448(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_10003E45C(void *a1, void **a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_100846460;
  sub_1002CA5B0((uint64_t)(a1 + 3), *a2);
  return a1;
}

void sub_10003E4A8(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_10003E4BC(uint64_t **a1, unint64_t *a2, uint64_t *a3)
{
  id v6 = a1 + 1;
  id v5 = a1[1];
  if (v5)
  {
    unint64_t v7 = *a2;
    while (1)
    {
      while (1)
      {
        int v8 = (uint64_t **)v5;
        unint64_t v9 = v5[4];
        if (v7 >= v9) {
          break;
        }
        id v5 = *v8;
        id v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (v9 >= v7) {
        break;
      }
      id v5 = v8[1];
      if (!v5)
      {
        id v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    int v8 = a1 + 1;
LABEL_10:
    unint64_t v10 = (uint64_t *)operator new(0x30uLL);
    v10[4] = *a3;
    void v10[5] = a3[1];
    sub_100026D98(a1, (uint64_t)v8, v6, v10);
    return v10;
  }
  return (uint64_t *)v8;
}

void *sub_10003E580(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x666666666666667) {
    sub_1000257D8();
  }
  return operator new(40 * a2);
}

void sub_10003E5CC()
{
}

void *sub_10003E5E0(uint64_t a1)
{
  double result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *double result = off_100846E38;
  result[1] = v3;
  return result;
}

uint64_t sub_10003E628(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100846E38;
  a2[1] = v2;
  return result;
}

void sub_10003E654(uint64_t a1, id *a2)
{
  id v3 = *a2;
  (*(void (**)(void))(**(void **)(a1 + 8) + 16))();
}

void sub_10003E6D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10003E6E4(uint64_t a1, uint64_t a2)
{
  if (sub_10003E730(a2, (uint64_t)&off_100846EA8)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_10003E724()
{
  return &off_100846EA8;
}

BOOL sub_10003E730(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  if (v2 == v3) {
    return 1;
  }
  if ((v3 & v2) < 0 != __OFSUB__(v2, v3)) {
    return strcmp((const char *)(v2 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL)) == 0;
  }
  return 0;
}

void *sub_10003E780(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_10003E808()
{
}

void *sub_10003E81C(uint64_t a1)
{
  double result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *double result = off_100846EC8;
  result[1] = v3;
  return result;
}

uint64_t sub_10003E864(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100846EC8;
  a2[1] = v2;
  return result;
}

void sub_10003E890(uint64_t a1, id *a2)
{
  id v3 = *a2;
  (*(void (**)(void))(**(void **)(a1 + 8) + 16))();
}

void sub_10003E90C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10003E920(uint64_t a1, uint64_t a2)
{
  if (sub_10003E730(a2, (uint64_t)&off_100846F28)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_10003E960()
{
  return &off_100846F28;
}

void sub_10003E96C(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10003E96C(a1, *a2);
    sub_10003E96C(a1, a2[1]);
    operator delete(a2);
  }
}

void sub_10003E9C0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C888, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C888))
  {
    sub_100004950(qword_10089C870, "PRRoseProviderNetworkListener");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C870, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C888);
  }
}

void sub_10003EA58(_Unwind_Exception *a1)
{
}

void sub_10003EA70()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8A8))
  {
    sub_100004950(&qword_10089C890, "com.apple.nearbyd.accessory.download");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C890, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8A8);
  }
}

void sub_10003EB08(_Unwind_Exception *a1)
{
}

void sub_10003EB20()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8C8))
  {
    sub_100004950(&qword_10089C8B0, "com.apple.nearbyd.accessory.files");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C8B0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8C8);
  }
}

void sub_10003EBB8(_Unwind_Exception *a1)
{
}

void sub_10003EBD0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8E8))
  {
    sub_100004950(qword_10089C8D0, "MA_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8D0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8E8);
  }
}

void sub_10003EC68(_Unwind_Exception *a1)
{
}

void sub_10003EC80()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C908, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C908))
  {
    sub_100004950(qword_10089C8F0, "MB_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8F0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C908);
  }
}

void sub_10003ED18(_Unwind_Exception *a1)
{
}

void sub_10003ED30()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C928, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C928))
  {
    sub_100004950(qword_10089C910, "D");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C910, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C928);
  }
}

void sub_10003EDC8(_Unwind_Exception *a1)
{
}

void sub_10003EDE0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C948, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C948))
  {
    sub_100004950(&qword_10089C930, "A");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C930, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C948);
  }
}

void sub_10003EE78(_Unwind_Exception *a1)
{
}

void sub_10003EE90()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C968, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C968))
  {
    sub_100004950(qword_10089C950, "FAS.bin");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C950, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C968);
  }
}

void sub_10003EF28(_Unwind_Exception *a1)
{
}

void sub_10003EF40()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C988, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C988))
  {
    qword_10089C970 = 0;
    qword_10089C978 = 0;
    qword_10089C980 = 0;
    uint64_t v0 = operator new(0x30uLL);
    qword_10089C978 = (uint64_t)(v0 + 3);
    qword_10089C980 = (uint64_t)(v0 + 3);
    _OWORD *v0 = xmmword_1004A02B8;
    v0[1] = unk_1004A02C8;
    v0[2] = xmmword_1004A02D8;
    qword_10089C970 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_100008CAC, &qword_10089C970, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C988);
  }
}

void sub_10003EFFC(_Unwind_Exception *a1)
{
}

void sub_10003F014()
{
  sub_10039D144();
  uint64_t v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  id v3 = std::string::append(&v38, ".bin");
  long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1008A00D0 = v3->__r_.__value_.__r.__words[2];
  xmmword_1008A00C0 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A00C0, (void *)&_mh_execute_header);
  sub_10039D144();
  id v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  unint64_t v7 = std::string::append(&v38, ".bin");
  long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1008A00E8 = v7->__r_.__value_.__r.__words[2];
  xmmword_1008A00D8 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A00D8, (void *)&_mh_execute_header);
  sub_10039D144();
  unint64_t v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  unint64_t v11 = std::string::append(&v38, ".bin");
  long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1008A0100 = v11->__r_.__value_.__r.__words[2];
  xmmword_1008A00F0 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A00F0, (void *)&_mh_execute_header);
  sub_10039D144();
  unint64_t v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  BOOL v15 = std::string::append(&v38, ".bin");
  long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1008A0118 = v15->__r_.__value_.__r.__words[2];
  xmmword_1008A0108 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0108, (void *)&_mh_execute_header);
  sub_10039D144();
  float v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  BOOL v19 = std::string::append(&v38, ".bin");
  long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1008A0130 = v19->__r_.__value_.__r.__words[2];
  xmmword_1008A0120 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0120, (void *)&_mh_execute_header);
  sub_10039D144();
  long long v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  uint64_t v23 = std::string::append(&v38, ".bin");
  long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1008A0148 = v23->__r_.__value_.__r.__words[2];
  xmmword_1008A0138 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0138, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  uint64_t v27 = std::string::append(&v38, ".bin");
  long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1008A0160 = v27->__r_.__value_.__r.__words[2];
  xmmword_1008A0150 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0150, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  unint64_t v31 = std::string::append(&v38, ".bin");
  long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1008A0178 = v31->__r_.__value_.__r.__words[2];
  xmmword_1008A0168 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0168, (void *)&_mh_execute_header);
  sub_10039D144();
  long long v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  unint64_t v35 = std::string::append(&v38, ".bin");
  long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1008A0190 = v35->__r_.__value_.__r.__words[2];
  xmmword_1008A0180 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0180, (void *)&_mh_execute_header);
}

void sub_10003F654(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_10003F6C8(float a1, float a2)
{
  __float2 v3 = __sincosf_stret(a1 * 0.5);
  float32x4_t v10 = vmulq_n_f32((float32x4_t)xmmword_1004A0490, v3.__sinval);
  __float2 v4 = __sincosf_stret(a2 * 0.5);
  float32x4_t v5 = vmulq_n_f32((float32x4_t)xmmword_1004A04A0, v4.__sinval);
  v6.i32[0] = LODWORD(v4.__cosval);
  v6.f32[1] = -v5.f32[2];
  v6.i32[2] = v5.i32[1];
  *(float32x2_t *)v7.f32 = vneg_f32(*(float32x2_t *)v5.f32);
  v6.i32[3] = v7.i32[0];
  v8.i32[0] = vdupq_laneq_s32((int32x4_t)v5, 2).u32[0];
  v8.i32[1] = LODWORD(v4.__cosval);
  v8.i64[1] = v7.i64[0];
  v7.i32[0] = vdup_lane_s32(*(int32x2_t *)v7.f32, 1).u32[0];
  v7.i32[1] = v5.i32[0];
  v7.i32[2] = LODWORD(v4.__cosval);
  v7.f32[3] = -v5.f32[2];
  v5.i32[3] = LODWORD(v4.__cosval);
  *(void *)&double result = vmlaq_n_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v6, v10.f32[0]), v8, *(float32x2_t *)v10.f32, 1), v7, v10, 2), v5, v3.__cosval).u64[0];
  return result;
}

double sub_10003F778(float *a1)
{
  __float2 v2 = __sincosf_stret(*a1);
  return COERCE_DOUBLE(__PAIR64__(v2.__cosval * __sincosf_stret(a1[1]).__sinval, LODWORD(v2.__sinval)));
}

void sub_10003F818(_Unwind_Exception *exception_object)
{
  __float2 v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_10003F834(unint64_t *a1, size_t a2)
{
  float32x4_t v5 = (char *)a1[1];
  __float2 v4 = (char *)a1[2];
  if (v4 - v5 >= a2)
  {
    if (a2)
    {
      bzero((void *)a1[1], a2);
      v5 += a2;
    }
    a1[1] = (unint64_t)v5;
  }
  else
  {
    unint64_t v6 = *a1;
    float32x4_t v7 = &v5[-*a1];
    unint64_t v8 = (unint64_t)&v7[a2];
    if ((uint64_t)&v7[a2] < 0) {
      sub_1000267C4();
    }
    unint64_t v9 = (unint64_t)&v4[-v6];
    if (2 * v9 > v8) {
      unint64_t v8 = 2 * v9;
    }
    if (v9 >= 0x3FFFFFFFFFFFFFFFLL) {
      size_t v10 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      size_t v10 = v8;
    }
    if (v10) {
      unint64_t v11 = (unint64_t)operator new(v10);
    }
    else {
      unint64_t v11 = 0;
    }
    long long v12 = &v7[v11];
    unint64_t v13 = (char *)(v11 + v10);
    bzero(v12, a2);
    if (v5 == (char *)v6)
    {
      unint64_t v11 = (unint64_t)v12;
    }
    else
    {
      long long v14 = &v5[~v6];
      do
      {
        char v15 = *--v5;
        (v14--)[v11] = v15;
      }
      while (v5 != (char *)v6);
      float32x4_t v5 = (char *)*a1;
    }
    *a1 = v11;
    a1[1] = (unint64_t)&v12[a2];
    a1[2] = (unint64_t)v13;
    if (v5)
    {
      operator delete(v5);
    }
  }
}

void *sub_10003F970@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_1008470E0[a1]);
}

void *sub_10003F984@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100847138[a1]);
}

void *sub_10003F998@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100847180[a1]);
}

void *sub_10003F9AC@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_1008471A0[a1]);
}

void sub_10003FBCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003FE60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_10003FE80(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10040EB10();
    }
  }
  else
  {
    [v5 didFailWithError:*(void *)(a1 + 32)];
  }
}

void sub_10003FF00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004005C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained handleError:*(void *)(a1 + 32)];
}

void sub_1000400AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000401D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004044C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100040488(uint64_t a1)
{
  __float2 v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));

  if (WeakRetained)
  {
    id v4 = objc_loadWeakRetained(v2);
    [v4 handleError:*(void *)(a1 + 32)];
  }
}

void sub_10004050C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10004070C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100040750(id *a1)
{
  __float2 v2 = a1 + 6;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);

  if (WeakRetained)
  {
    id v4 = objc_loadWeakRetained(v2);
    id v5 = v4;
    if (!*((unsigned char *)v4 + 58))
    {
      id v6 = (void *)v4[1];
      long long v32 = _NSConcreteStackBlock;
      uint64_t v33 = 3221225472;
      long long v34 = sub_100040D40;
      unint64_t v35 = &unk_100847048;
      id v36 = a1[4];
      id v37 = a1[5];
      [v6 actOnRemoteObjectAndScheduleBarrierBlock:&v32];
    }
    id v7 = a1[5];
    if (v7)
    {
      unint64_t v8 = [v7 domain];
      if ([v8 isEqualToString:kCLErrorDomainPrivate])
      {
        BOOL v9 = [a1[5] code] == (id)2;

        if (v9)
        {
          NSErrorUserInfoKey v38 = NSLocalizedDescriptionKey;
          CFStringRef v39 = @"Failed to resolve UUID";
          size_t v10 = +[NSDictionary dictionaryWithObjects:&v39 forKeys:&v38 count:1];
          unint64_t v11 = PRErrorWithCodeAndUserInfo(303, v10);

          unsigned int v12 = *((_DWORD *)v5 + 18);
          if (v12 <= 8)
          {
            if (((1 << v12) & 0x1EE) != 0)
            {
              [v5 handleError:v11];
            }
            else if (v12 == 4)
            {
              uint64_t v29 = (id)qword_1008ABDE0;
              if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
              {
                id v30 = [a1[4] UUIDString];
                id v31 = [v30 UTF8String];
                *(_DWORD *)int buf = 136315138;
                id v41 = v31;
                _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "#btranging-retry Already UT ranging - ignored failed to connect due to failed token error on device %s", buf, 0xCu);
              }
            }
          }

          goto LABEL_35;
        }
      }
      else
      {
      }
      int v17 = *((_DWORD *)v5 + 18);
      if ((v17 - 2) < 2)
      {
        long long v22 = (id)qword_1008ABDE0;
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
        {
          id v23 = [a1[4] UUIDString];
          id v24 = [v23 UTF8String];
          *(_DWORD *)int buf = 136315138;
          id v41 = v24;
          _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "#btranging-retry reattempt connect for startUTAggressiveAdvertisement on device %s", buf, 0xCu);
        }
        [*((id *)v5 + 8) connectDevice:a1[4]];
        uint64_t v21 = 2;
      }
      else
      {
        if ((v17 - 5) >= 2)
        {
          if (v17 == 8)
          {
            [v5 setCurrentTask:0];
            [v5 informDelegateOwnerRangeStoppedonDevice:a1[4]];
          }
          goto LABEL_35;
        }
        long long v18 = (id)qword_1008ABDE0;
        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
        {
          id v19 = [a1[4] UUIDString];
          id v20 = [v19 UTF8String];
          *(_DWORD *)int buf = 136315138;
          id v41 = v20;
          _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "#btranging-retry reattempt connect for startAggressiveAdvertisement on device %s", buf, 0xCu);
        }
        [*((id *)v5 + 8) connectDevice:a1[4]];
        uint64_t v21 = 5;
      }
    }
    else
    {
      int v13 = *((_DWORD *)v5 + 18);
      if (v13 == 5)
      {
        uint64_t v25 = (id)qword_1008ABDE0;
        if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
        {
          id v26 = [a1[4] UUIDString];
          id v27 = [v26 UTF8String];
          *(_DWORD *)int buf = 136315138;
          id v41 = v27;
          _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "#btranging-retry command startAggressiveAdvertisingOnDevice on device %s", buf, 0xCu);
        }
        [*((id *)v5 + 8) startAggressiveAdvertisingOnDevice:a1[4] withTimeout:30];
        uint64_t v21 = 6;
      }
      else
      {
        if (v13 == 4)
        {
          long long v28 = qword_1008ABDE0;
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)int buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "#btranging-retry received didConnect when UT ranging - resending agg adv", buf, 2u);
          }
        }
        else
        {
          if (v13 != 2)
          {
LABEL_35:

            return;
          }
          long long v14 = (id)qword_1008ABDE0;
          if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
          {
            id v15 = [a1[4] UUIDString];
            id v16 = [v15 UTF8String];
            *(_DWORD *)int buf = 136315138;
            id v41 = v16;
            _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "#btranging-retry command startUTAggressiveAdvertisement on device %s", buf, 0xCu);
          }
        }
        [*((id *)v5 + 8) startUnauthorizedAggressiveAdvertisingOnDevice:a1[4] v32, v33, v34, v35];
        uint64_t v21 = 3;
      }
    }
    [v5 setCurrentTask:v21, v32, v33, v34, v35];
    goto LABEL_35;
  }
}

void sub_100040C6C(_Unwind_Exception *a1)
{
  id v5 = v2;

  _Unwind_Resume(a1);
}

void sub_100040D40(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10040EB10();
    }
  }
  else
  {
    [v5 didConnectDevice:*(void *)(a1 + 32) error:*(void *)(a1 + 40)];
  }
}

void sub_100040DC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100040F8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100040FC4(uint64_t a1)
{
  __float2 v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));

  if (WeakRetained)
  {
    id v4 = (id *)objc_loadWeakRetained(v2);
    id v5 = v4;
    int v6 = *((_DWORD *)v4 + 18);
    if ((v6 - 5) < 3)
    {
      size_t v10 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        id v11 = [*(id *)(a1 + 32) UUIDString];
        int v12 = 136315138;
        id v13 = [v11 UTF8String];
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#btranging-retry reattempt connect for startAggressiveAdvertisement on device %s", (uint8_t *)&v12, 0xCu);
      }
      [v5[8] connectDevice:*(void *)(a1 + 32)];
      uint64_t v9 = 5;
    }
    else
    {
      if ((v6 - 2) >= 2)
      {
        if (v6 == 8)
        {
          [v4 setCurrentTask:0];
          [v5 informDelegateOwnerRangeStoppedonDevice:*(void *)(a1 + 32)];
        }
        goto LABEL_11;
      }
      id v7 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        id v8 = [*(id *)(a1 + 32) UUIDString];
        int v12 = 136315138;
        id v13 = [v8 UTF8String];
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#btranging-retry reattempt connect for startUTAggressiveAdvertisement on device %s", (uint8_t *)&v12, 0xCu);
      }
      [v5[8] connectDevice:*(void *)(a1 + 32)];
      uint64_t v9 = 2;
    }
    [v5 setCurrentTask:v9];
LABEL_11:
  }
}

void sub_10004119C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100041338(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100041360(id *a1)
{
  __float2 v2 = a1 + 7;
  id WeakRetained = objc_loadWeakRetained(a1 + 7);

  if (WeakRetained)
  {
    id v4 = objc_loadWeakRetained(v2);
    id v5 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      id v6 = [a1[4] UUIDString];
      id v7 = [v6 UTF8String];
      unsigned int v8 = [a1[5] intValue];
      id v9 = a1[6];
      *(_DWORD *)int buf = 136315650;
      id v22 = v7;
      __int16 v23 = 1024;
      unsigned int v24 = v8;
      __int16 v25 = 2112;
      id v26 = v9;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#btranging-retry _accessoryManager didFetchTxPower from %s txPower:%d #error:%@", buf, 0x1Cu);
    }
    int v10 = *((_DWORD *)v4 + 18);
    if (a1[6])
    {
      if (v10 == 1)
      {
        id v11 = (id)qword_1008ABDE0;
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
        {
          id v12 = [a1[4] UUIDString];
          id v13 = [v12 UTF8String];
          *(_DWORD *)int buf = 136315138;
          id v22 = v13;
          _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "#btranging-retry reattempt to fetch tx power on device %s", buf, 0xCu);
        }
LABEL_14:

        [*((id *)v4 + 8) fetchTxPowerFromDevice:a1[4] asOwner:*((unsigned char *)v4 + 56) == 0];
      }
    }
    else if (v10 == 1)
    {
      if ([a1[5] intValue] + 50 > 0x64)
      {
        id v11 = (id)qword_1008ABDE0;
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
        {
          id v15 = [a1[4] UUIDString];
          id v16 = [v15 UTF8String];
          *(_DWORD *)int buf = 136315138;
          id v22 = v16;
          _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "#btranging-retry received unfeasible Tx Power from device - reattempt to fetch tx power on device %s", buf, 0xCu);
        }
        goto LABEL_14;
      }
      [v4 setCurrentTask:0];
      *((unsigned char *)v4 + 57) = 1;
      long long v14 = (void *)*((void *)v4 + 1);
      v17[0] = _NSConcreteStackBlock;
      v17[1] = 3221225472;
      v17[2] = sub_1000416EC;
      v17[3] = &unk_100847098;
      id v18 = a1[5];
      id v19 = a1[4];
      id v20 = a1[6];
      [v14 actOnRemoteObjectAndScheduleBarrierBlock:v17];
    }
  }
}

void sub_100041668(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000416EC(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10040EB10();
    }
  }
  else
  {
    [v5 didFetchTxPower:a1[4] fromDevice:a1[5] withError:a1[6]];
  }
}

void sub_100041770(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000418BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000418E0(id *a1)
{
  __float2 v2 = a1 + 6;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);

  if (WeakRetained)
  {
    id v4 = (id *)objc_loadWeakRetained(v2);
    id v5 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      id v6 = [a1[4] UUIDString];
      id v7 = [v6 UTF8String];
      id v8 = a1[5];
      *(_DWORD *)int buf = 136315394;
      id v20 = v7;
      __int16 v21 = 2112;
      id v22 = v8;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#btranging-retry _accessoryManager didStartUnauthorizedAggressiveAdvertisingOnDevice %s #error:%@", buf, 0x16u);
    }
    if (a1[5])
    {
      if ((v4[9] & 0xFFFFFFFE) == 2)
      {
        id v9 = (id)qword_1008ABDE0;
        if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        {
          id v10 = [a1[4] UUIDString];
          id v11 = [v10 UTF8String];
          *(_DWORD *)int buf = 136315138;
          id v20 = v11;
          _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#btranging-retry reattempt connect for startUTAggressiveAdvertisement on device %s", buf, 0xCu);
        }
        [v4[8] connectDevice:a1[4]];
        [v4 setCurrentTask:2];
      }
    }
    else
    {
      id v12 = v4[1];
      id v13 = _NSConcreteStackBlock;
      uint64_t v14 = 3221225472;
      id v15 = sub_100041BA0;
      id v16 = &unk_100847048;
      id v17 = a1[4];
      id v18 = a1[5];
      [v12 actOnRemoteObjectAndScheduleBarrierBlock:&v13];
      if ((v4[9] & 0xFFFFFFFE) == 2) {
        [v4 setCurrentTask:4, v13, v14, v15, v16, v17];
      }
    }
  }
}

void sub_100041B28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100041BA0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10040EB10();
    }
  }
  else
  {
    [v5 didStartRangingOnDevice:*(void *)(a1 + 32) withError:*(void *)(a1 + 40)];
  }
}

void sub_100041C20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100041D6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100041D90(id *a1)
{
  __float2 v2 = a1 + 6;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);

  if (WeakRetained)
  {
    id v4 = (id *)objc_loadWeakRetained(v2);
    id v5 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      id v6 = [a1[4] UUIDString];
      id v7 = [v6 UTF8String];
      id v8 = a1[5];
      *(_DWORD *)int buf = 136315394;
      id v34 = v7;
      __int16 v35 = 2112;
      id v36 = v8;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#btranging-retry _accessoryManager didStartAggressiveAdvertisingOnDevice %s #error:%@", buf, 0x16u);
    }
    id v9 = a1[5];
    if (v9)
    {
      id v10 = [v9 domain];
      if ([v10 isEqualToString:kCLErrorDomainPrivate])
      {
        BOOL v11 = [a1[5] code] == (id)27;

        if (v11)
        {
          if ((*((_DWORD *)v4 + 18) - 5) >= 2)
          {
LABEL_24:

            return;
          }
          id v12 = (id)qword_1008ABDE0;
          if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
          {
            id v13 = [a1[4] UUIDString];
            id v14 = [v13 UTF8String];
            *(_DWORD *)int buf = 136315138;
            id v34 = v14;
            _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "#btranging-retry could not start ranging - invalid state on device %s", buf, 0xCu);
          }
          [v4[8] stopMonitoringForAvengerAdvertisementsForBTFinding];
          NSErrorUserInfoKey v31 = NSLocalizedDescriptionKey;
          CFStringRef v32 = @"Invalid state for start agg adv";
          id v15 = +[NSDictionary dictionaryWithObjects:&v32 forKeys:&v31 count:1];
          id v16 = PRErrorWithCodeAndUserInfo(304, v15);

          [v4 handleError:v16];
LABEL_23:

          goto LABEL_24;
        }
      }
      else
      {
      }
      if ((*((_DWORD *)v4 + 18) - 5) <= 1)
      {
        id v19 = (id)qword_1008ABDE0;
        if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
        {
          id v20 = [a1[4] UUIDString];
          id v21 = [v20 UTF8String];
          *(_DWORD *)int buf = 136315138;
          id v34 = v21;
          _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "#btranging-retry reattempt connect for startAggressiveAdvertisement on device %s", buf, 0xCu);
        }
        [v4[8] connectDevice:a1[4]];
        [v4 setCurrentTask:5];
      }
      goto LABEL_24;
    }
    id v17 = v4[1];
    __int16 v25 = _NSConcreteStackBlock;
    uint64_t v26 = 3221225472;
    id v27 = sub_10004224C;
    long long v28 = &unk_100847048;
    id v29 = a1[4];
    id v30 = a1[5];
    [v17 actOnRemoteObjectAndScheduleBarrierBlock:&v25];
    int v18 = *((_DWORD *)v4 + 18);
    if ((v18 - 5) >= 2)
    {
      if (v18 == 8)
      {
        id v22 = (id)qword_1008ABDE0;
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
        {
          [a1[4] UUIDString:v25, v26, v27, v28];
          id v23 = objc_claimAutoreleasedReturnValue();
          id v24 = [v23 UTF8String];
          *(_DWORD *)int buf = 136315138;
          id v34 = v24;
          _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "#btranging-retry command to stop agg adv on device %s", buf, 0xCu);
        }
        [v4[8] stopAggressiveAdvertisingOnDevice:a1[4]];
      }
    }
    else
    {
      [v4 setCurrentTask:7 v25 v26 v27 v28];
    }

    id v16 = v29;
    goto LABEL_23;
  }
}

void sub_10004217C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004224C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10040EB10();
    }
  }
  else
  {
    [v5 didStartRangingOnDevice:*(void *)(a1 + 32) withError:*(void *)(a1 + 40)];
  }
}

void sub_1000422CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100042418(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004243C(uint64_t a1)
{
  __float2 v2 = (id *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));

  if (WeakRetained)
  {
    id v4 = objc_loadWeakRetained(v2);
    id v5 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      id v6 = [*(id *)(a1 + 32) UUIDString];
      id v7 = [v6 UTF8String];
      uint64_t v8 = *(void *)(a1 + 40);
      int v16 = 136315394;
      id v17 = v7;
      __int16 v18 = 2112;
      uint64_t v19 = v8;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#btranging-retry _accessoryManager didStopAggressiveAdvertisingOnDevice %s #error:%@", (uint8_t *)&v16, 0x16u);
    }
    int v9 = *((_DWORD *)v4 + 18);
    if (*(void *)(a1 + 40))
    {
      if (v9 == 8)
      {
        id v10 = (id)qword_1008ABDE0;
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          id v11 = [*(id *)(a1 + 32) UUIDString];
          id v12 = [v11 UTF8String];
          int v16 = 136315138;
          id v17 = v12;
          _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#btranging-retry command to reattempt stopAggressiveAdvertising on device %s", (uint8_t *)&v16, 0xCu);
        }
        [*((id *)v4 + 8) stopAggressiveAdvertisingOnDevice:*(void *)(a1 + 32)];
      }
    }
    else if ((v9 - 5) >= 3)
    {
      if (v9 == 8)
      {
        [v4 setCurrentTask:0];
        [v4 informDelegateOwnerRangeStoppedonDevice:*(void *)(a1 + 32)];
      }
    }
    else
    {
      id v13 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        id v14 = [*(id *)(a1 + 32) UUIDString];
        id v15 = [v14 UTF8String];
        int v16 = 136315138;
        id v17 = v15;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "#btranging-retry received didStopAggressiveAdvertising for %s when owner ranging - reattempt connect for startAggressiveAdvertisement", (uint8_t *)&v16, 0xCu);
      }
      [*((id *)v4 + 8) connectDevice:*(void *)(a1 + 32)];
      [v4 setCurrentTask:5];
    }
  }
}

void sub_100042690(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004282C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100042850(uint64_t a1)
{
  __float2 v2 = (id *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));

  if (WeakRetained)
  {
    id v4 = objc_loadWeakRetained(v2);
    id v5 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      id v6 = [*(id *)(a1 + 32) UUIDString];
      id v7 = [v6 UTF8String];
      uint64_t v8 = *(void *)(a1 + 40);
      int v13 = 136315394;
      id v14 = v7;
      __int16 v15 = 2112;
      uint64_t v16 = v8;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#btranging-retry _accessoryManager didCompleteAggressiveAdvertisingOnDevice %s #error:%@", (uint8_t *)&v13, 0x16u);
    }
    int v9 = *((_DWORD *)v4 + 18);
    if (*(void *)(a1 + 40))
    {
      if ((v9 - 5) > 2)
      {
LABEL_12:

        return;
      }
      id v10 = (id)qword_1008ABDE0;
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
LABEL_11:

        [*((id *)v4 + 8) connectDevice:*(void *)(a1 + 32)];
        [v4 setCurrentTask:5];
        goto LABEL_12;
      }
    }
    else
    {
      if ((v9 - 5) >= 3)
      {
        if (v9 == 8)
        {
          [v4 setCurrentTask:0];
          [v4 informDelegateOwnerRangeStoppedonDevice:*(void *)(a1 + 32)];
        }
        goto LABEL_12;
      }
      id v10 = (id)qword_1008ABDE0;
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
    }
    id v11 = [*(id *)(a1 + 32) UUIDString];
    id v12 = [v11 UTF8String];
    int v13 = 136315138;
    id v14 = v12;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#btranging-retry received didCompleteAggressiveAdvertisingOnDevice %s when owner ranging - reattempt connect for startAggressiveAdvertisement", (uint8_t *)&v13, 0xCu);

    goto LABEL_11;
  }
}

void sub_100042A98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100042D24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100042D8C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10040EB10();
    }
  }
  else
  {
    [v5 didReceiveNewBTRSSI:*(void *)(a1 + 32)];
  }
}

void sub_100042E0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100042EB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_100042ECC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10040EB10();
    }
  }
  else
  {
    [v5 didStopOwnerRangingOnDevice:*(void *)(a1 + 32) withError:0];
  }
}

void sub_100042F50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100043098(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100043224(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_10004325C(uint64_t a1)
{
  __float2 v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));

  if (WeakRetained)
  {
    id v4 = (id *)objc_loadWeakRetained(v2);
    id v5 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      id v6 = [*(id *)(a1 + 32) UUIDString];
      int v7 = 136315138;
      id v8 = [v6 UTF8String];
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#btranging-retry command accessory manager to fetch tx power for %s", (uint8_t *)&v7, 0xCu);
    }
    [v4[8] fetchTxPowerFromDevice:*(void *)(a1 + 32) asOwner:*((unsigned char *)v4 + 56) == 0];
  }
}

void sub_10004336C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000434BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_1000434F0(uint64_t a1)
{
  __float2 v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));

  if (WeakRetained)
  {
    id v4 = (id *)objc_loadWeakRetained(v2);
    id v5 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v9) = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#btranging-retry command startMonitoringForAdvertisements", (uint8_t *)&v9, 2u);
    }
    [v4[8] startMonitoringForAvengerAdvertisementsForBTFinding];
    id v6 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      id v7 = [*(id *)(a1 + 32) UUIDString];
      id v8 = [v7 UTF8String];
      int v9 = 136315138;
      id v10 = v8;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#btranging-retry command connect to set agg adv on device %s", (uint8_t *)&v9, 0xCu);
    }
    [v4[8] connectDevice:*(void *)(a1 + 32)];
  }
}

void sub_100043638(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004374C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_100043774(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));

  if (WeakRetained)
  {
    __float2 v3 = (id *)objc_loadWeakRetained(v1);
    id v4 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#btranging-retry command stopMonitoringForAdvertisements", v5, 2u);
    }
    [v3[8] stopMonitoringForAvengerAdvertisementsForBTFinding];
  }
}

void sub_10004380C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100043940(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_100043974(uint64_t a1)
{
  __float2 v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));

  if (WeakRetained)
  {
    id v4 = (id *)objc_loadWeakRetained(v2);
    id v5 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v9) = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#btranging-retry command startMonitoringForAdvertisements", (uint8_t *)&v9, 2u);
    }
    [v4[8] startMonitoringForAvengerAdvertisementsForBTFinding];
    id v6 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      id v7 = [*(id *)(a1 + 32) UUIDString];
      id v8 = [v7 UTF8String];
      int v9 = 136315138;
      id v10 = v8;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#btranging-retry command connect to set agg adv on device %s", (uint8_t *)&v9, 0xCu);
    }
    [v4[8] connectDevice:*(void *)(a1 + 32)];
  }
}

void sub_100043ABC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100043C00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_100043C34(uint64_t a1)
{
  __float2 v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));

  if (WeakRetained)
  {
    id v4 = (id *)objc_loadWeakRetained(v2);
    id v5 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      id v6 = [*(id *)(a1 + 32) UUIDString];
      int v8 = 136315138;
      id v9 = [v6 UTF8String];
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#btranging-retry command stopAggressiveAdvertising on device %s", (uint8_t *)&v8, 0xCu);
    }
    [v4[8] stopAggressiveAdvertisingOnDevice:*(void *)(a1 + 32)];
    id v7 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v8) = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#btranging-retry command stopMonitoringForAdvertisements", (uint8_t *)&v8, 2u);
    }
    [v4[8] stopMonitoringForAvengerAdvertisementsForBTFinding];
  }
}

void sub_100043D84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100043E90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100043FB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000440AC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C888, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C888))
  {
    sub_100004950(qword_10089C870, "PRRoseProviderNetworkListener");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C870, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C888);
  }
}

void sub_100044144(_Unwind_Exception *a1)
{
}

void sub_10004415C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8A8))
  {
    sub_100004950(&qword_10089C890, "com.apple.nearbyd.accessory.download");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C890, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8A8);
  }
}

void sub_1000441F4(_Unwind_Exception *a1)
{
}

void sub_10004420C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8C8))
  {
    sub_100004950(&qword_10089C8B0, "com.apple.nearbyd.accessory.files");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C8B0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8C8);
  }
}

void sub_1000442A4(_Unwind_Exception *a1)
{
}

void sub_1000442BC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8E8))
  {
    sub_100004950(qword_10089C8D0, "MA_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8D0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8E8);
  }
}

void sub_100044354(_Unwind_Exception *a1)
{
}

void sub_10004436C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C908, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C908))
  {
    sub_100004950(qword_10089C8F0, "MB_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8F0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C908);
  }
}

void sub_100044404(_Unwind_Exception *a1)
{
}

void sub_10004441C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C928, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C928))
  {
    sub_100004950(qword_10089C910, "D");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C910, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C928);
  }
}

void sub_1000444B4(_Unwind_Exception *a1)
{
}

void sub_1000444CC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C948, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C948))
  {
    sub_100004950(&qword_10089C930, "A");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C930, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C948);
  }
}

void sub_100044564(_Unwind_Exception *a1)
{
}

void sub_10004457C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C968, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C968))
  {
    sub_100004950(qword_10089C950, "FAS.bin");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C950, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C968);
  }
}

void sub_100044614(_Unwind_Exception *a1)
{
}

void sub_10004462C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C988, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C988))
  {
    qword_10089C970 = 0;
    qword_10089C978 = 0;
    qword_10089C980 = 0;
    uint64_t v0 = operator new(0x30uLL);
    qword_10089C978 = (uint64_t)(v0 + 3);
    qword_10089C980 = (uint64_t)(v0 + 3);
    _OWORD *v0 = xmmword_1004A04C0;
    v0[1] = *(_OWORD *)algn_1004A04D0;
    v0[2] = xmmword_1004A04E0;
    qword_10089C970 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_100008CAC, &qword_10089C970, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C988);
  }
}

void sub_1000446E8(_Unwind_Exception *a1)
{
}

void sub_100044700()
{
  sub_10039D144();
  uint64_t v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  __float2 v3 = std::string::append(&v38, ".bin");
  long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1008A01A8 = v3->__r_.__value_.__r.__words[2];
  xmmword_1008A0198 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0198, (void *)&_mh_execute_header);
  sub_10039D144();
  id v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  id v7 = std::string::append(&v38, ".bin");
  long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1008A01C0 = v7->__r_.__value_.__r.__words[2];
  xmmword_1008A01B0 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A01B0, (void *)&_mh_execute_header);
  sub_10039D144();
  id v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  id v11 = std::string::append(&v38, ".bin");
  long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1008A01D8 = v11->__r_.__value_.__r.__words[2];
  xmmword_1008A01C8 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A01C8, (void *)&_mh_execute_header);
  sub_10039D144();
  int v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  __int16 v15 = std::string::append(&v38, ".bin");
  long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1008A01F0 = v15->__r_.__value_.__r.__words[2];
  xmmword_1008A01E0 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A01E0, (void *)&_mh_execute_header);
  sub_10039D144();
  id v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  uint64_t v19 = std::string::append(&v38, ".bin");
  long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1008A0208 = v19->__r_.__value_.__r.__words[2];
  xmmword_1008A01F8 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A01F8, (void *)&_mh_execute_header);
  sub_10039D144();
  id v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  id v23 = std::string::append(&v38, ".bin");
  long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1008A0220 = v23->__r_.__value_.__r.__words[2];
  xmmword_1008A0210 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0210, (void *)&_mh_execute_header);
  sub_10039D144();
  __int16 v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  id v27 = std::string::append(&v38, ".bin");
  long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1008A0238 = v27->__r_.__value_.__r.__words[2];
  xmmword_1008A0228 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0228, (void *)&_mh_execute_header);
  sub_10039D144();
  id v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  NSErrorUserInfoKey v31 = std::string::append(&v38, ".bin");
  long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1008A0250 = v31->__r_.__value_.__r.__words[2];
  xmmword_1008A0240 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0240, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  __int16 v35 = std::string::append(&v38, ".bin");
  long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1008A0268 = v35->__r_.__value_.__r.__words[2];
  xmmword_1008A0258 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0258, (void *)&_mh_execute_header);
}

void sub_100044D40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100044DB4@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, (&off_100847208)[a1]);
}

void *sub_100044DC8@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, (&off_100847260)[a1]);
}

void *sub_100044DDC@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, (&off_1008472A8)[a1]);
}

void *sub_100044DF0@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, (&off_1008472C8)[a1]);
}

void sub_100044FDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id location)
{
  id v17 = v16;

  _Unwind_Resume(a1);
}

void sub_100045154(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004522C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)PRRangingServiceProxy;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_10004531C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14)
{
  if (a10) {
    std::__shared_weak_count::__release_weak(a10);
  }
  if (a12) {
    sub_10001A970(a12);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000453BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_10001A970(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_10004546C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_100045484(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10040EBFC();
    }
  }
  else
  {
    [v5 didFailWithError:*(void *)(a1 + 32)];
  }
}

void sub_100045504(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000455AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1000455C4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10040EBFC();
    }
  }
  else
  {
    [v5 didReceiveNewSolutions:*(void *)(a1 + 32)];
  }
}

void sub_100045644(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000456C4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10040EBFC();
    }
  }
  else
  {
    [v5 rangingServiceDidUpdateState:*(void *)(a1 + 32) cause:*(void *)(a1 + 40)];
  }
}

void sub_100045744(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000457C4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10040EBFC();
    }
  }
  else
  {
    [v5 rangingRequestDidUpdateStatus:*(void *)(a1 + 32)];
  }
}

void sub_100045844(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000458F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_100045908(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10040EBFC();
    }
  }
  else
  {
    [v5 remoteDevice:*(void *)(a1 + 32) didChangeState:*(void *)(a1 + 40)];
  }
}

void sub_100045988(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000463C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, std::__shared_weak_count *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::__shared_weak_count *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  _Unwind_Resume(a1);
}

void sub_100046930(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  _Unwind_Resume(a1);
}

void sub_100046CCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  _Unwind_Resume(a1);
}

void sub_100046DE0(id *a1@<X1>, void *a2@<X8>)
{
  long long v4 = operator new(0x48uLL);
  sub_100046E54(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;

  sub_10001ABCC((uint64_t)a2, v4 + 4, (uint64_t)(v4 + 3));
}

void sub_100046E40(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_100046E54(void *a1, id *location)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_100846460;
  sub_100046EC4((int)&v4, (uint64_t)(a1 + 3), location);
  return a1;
}

void sub_100046EB0(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_100046EC4(int a1, uint64_t a2, id *location)
{
  id WeakRetained = objc_loadWeakRetained(location);
  sub_1002CA5B0(a2, WeakRetained);
}

void sub_100046F18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100046F2C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C888, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C888))
  {
    sub_100004950(qword_10089C870, "PRRoseProviderNetworkListener");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C870, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C888);
  }
}

void sub_100046FC4(_Unwind_Exception *a1)
{
}

void sub_100046FDC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8A8))
  {
    sub_100004950(&qword_10089C890, "com.apple.nearbyd.accessory.download");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C890, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8A8);
  }
}

void sub_100047074(_Unwind_Exception *a1)
{
}

void sub_10004708C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8C8))
  {
    sub_100004950(&qword_10089C8B0, "com.apple.nearbyd.accessory.files");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C8B0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8C8);
  }
}

void sub_100047124(_Unwind_Exception *a1)
{
}

void sub_10004713C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8E8))
  {
    sub_100004950(qword_10089C8D0, "MA_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8D0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8E8);
  }
}

void sub_1000471D4(_Unwind_Exception *a1)
{
}

void sub_1000471EC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C908, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C908))
  {
    sub_100004950(qword_10089C8F0, "MB_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8F0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C908);
  }
}

void sub_100047284(_Unwind_Exception *a1)
{
}

void sub_10004729C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C928, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C928))
  {
    sub_100004950(qword_10089C910, "D");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C910, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C928);
  }
}

void sub_100047334(_Unwind_Exception *a1)
{
}

void sub_10004734C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C948, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C948))
  {
    sub_100004950(&qword_10089C930, "A");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C930, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C948);
  }
}

void sub_1000473E4(_Unwind_Exception *a1)
{
}

void sub_1000473FC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C968, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C968))
  {
    sub_100004950(qword_10089C950, "FAS.bin");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C950, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C968);
  }
}

void sub_100047494(_Unwind_Exception *a1)
{
}

void sub_1000474AC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C988, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C988))
  {
    qword_10089C970 = 0;
    qword_10089C978 = 0;
    qword_10089C980 = 0;
    uint64_t v0 = operator new(0x30uLL);
    qword_10089C978 = (uint64_t)(v0 + 3);
    qword_10089C980 = (uint64_t)(v0 + 3);
    _OWORD *v0 = xmmword_1004A04F0;
    v0[1] = unk_1004A0500;
    v0[2] = xmmword_1004A0510;
    qword_10089C970 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_100008CAC, &qword_10089C970, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C988);
  }
}

void sub_100047568(_Unwind_Exception *a1)
{
}

void sub_100047580()
{
  sub_10039D144();
  uint64_t v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  __float2 v3 = std::string::append(&v38, ".bin");
  long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1008A0280 = v3->__r_.__value_.__r.__words[2];
  xmmword_1008A0270 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0270, (void *)&_mh_execute_header);
  sub_10039D144();
  id v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  id v7 = std::string::append(&v38, ".bin");
  long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1008A0298 = v7->__r_.__value_.__r.__words[2];
  xmmword_1008A0288 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0288, (void *)&_mh_execute_header);
  sub_10039D144();
  id v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  id v11 = std::string::append(&v38, ".bin");
  long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1008A02B0 = v11->__r_.__value_.__r.__words[2];
  xmmword_1008A02A0 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A02A0, (void *)&_mh_execute_header);
  sub_10039D144();
  int v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  __int16 v15 = std::string::append(&v38, ".bin");
  long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1008A02C8 = v15->__r_.__value_.__r.__words[2];
  xmmword_1008A02B8 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A02B8, (void *)&_mh_execute_header);
  sub_10039D144();
  id v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  uint64_t v19 = std::string::append(&v38, ".bin");
  long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1008A02E0 = v19->__r_.__value_.__r.__words[2];
  xmmword_1008A02D0 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A02D0, (void *)&_mh_execute_header);
  sub_10039D144();
  id v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  id v23 = std::string::append(&v38, ".bin");
  long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1008A02F8 = v23->__r_.__value_.__r.__words[2];
  xmmword_1008A02E8 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A02E8, (void *)&_mh_execute_header);
  sub_10039D144();
  __int16 v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  id v27 = std::string::append(&v38, ".bin");
  long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1008A0310 = v27->__r_.__value_.__r.__words[2];
  xmmword_1008A0300 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0300, (void *)&_mh_execute_header);
  sub_10039D144();
  id v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  NSErrorUserInfoKey v31 = std::string::append(&v38, ".bin");
  long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1008A0328 = v31->__r_.__value_.__r.__words[2];
  xmmword_1008A0318 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0318, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  __int16 v35 = std::string::append(&v38, ".bin");
  long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1008A0340 = v35->__r_.__value_.__r.__words[2];
  xmmword_1008A0330 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0330, (void *)&_mh_execute_header);
}

void sub_100047BC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100047C34@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100847450[a1]);
}

void *sub_100047C48@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_1008474A8[a1]);
}

void *sub_100047C5C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_1008474F0[a1]);
}

void *sub_100047C70@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100847510[a1]);
}

void sub_100047D58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_10003E780((uint64_t *)va);

  _Unwind_Resume(a1);
}

void sub_100047F04(id a1, OS_xpc_object *a2)
{
  long long v2 = a2;
  string = xpc_dictionary_get_string(v2, _xpc_event_key_name);
  long long v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 136315138;
    long long v6 = string;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "[PRDaemon] Got iokit XPC event: %s", (uint8_t *)&v5, 0xCu);
  }
}

void sub_100047FCC(_Unwind_Exception *exception_object)
{
}

void sub_100047FE4(id a1, OS_xpc_object *a2)
{
  long long v2 = a2;
  string = xpc_dictionary_get_string(v2, _xpc_event_key_name);
  long long v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 136315138;
    long long v6 = string;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "[PRDaemon] Got notifyd XPC event: %s", (uint8_t *)&v5, 0xCu);
  }
}

void sub_1000480AC(_Unwind_Exception *exception_object)
{
}

void sub_1000480C4(id a1, OS_xpc_object *a2)
{
  long long v2 = a2;
  __float2 v3 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    long long v4 = CUPrintXPC();
    int v5 = 138477827;
    long long v6 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "[PRDaemon] Got CBDiscovery XPC event: %{private}@", (uint8_t *)&v5, 0xCu);
  }
}

void sub_100048194(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000482D0(uint64_t a1)
{
  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterAddObserver(DarwinNotifyCenter, *(const void **)(a1 + 32), (CFNotificationCallback)sub_1000483E4, @"com.apple.mobile.keybagd.first_unlock", 0, CFNotificationSuspensionBehaviorDeliverImmediately);
  __float2 v3 = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterAddObserver(v3, *(const void **)(a1 + 32), (CFNotificationCallback)sub_1000483E4, @"com.apple.mobile.keybagd.lock_status", 0, CFNotificationSuspensionBehaviorDeliverImmediately);
  int v4 = MKBDeviceUnlockedSinceBoot();
  int v5 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    v6[0] = 67109120;
    v6[1] = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "[PRDaemon] Registered for MobileKeybag notifications. Checking MKBDeviceUnlockedSinceBoot: %d [<0 = error, 0 = no, 1 = yes]", (uint8_t *)v6, 8u);
  }
  if (v4 == 1) {
    [*(id *)(a1 + 32) deviceHasUnlockedSinceBoot];
  }
}

void sub_1000483E4(uint64_t a1, void *a2, uint64_t a3)
{
  int v5 = MKBDeviceUnlockedSinceBoot();
  long long v6 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = 138412546;
    uint64_t v8 = a3;
    __int16 v9 = 1024;
    int v10 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "[PRDaemon] MobileKeybag notification %@ fired. Checking MKBDeviceUnlockedSinceBoot: %d [<0 = error, 0 = no, 1 = yes]", (uint8_t *)&v7, 0x12u);
  }
  if (v5 == 1) {
    [a2 deviceHasUnlockedSinceBoot];
  }
}

void sub_100048544(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  long long v2 = *(NSObject **)(v1 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000485B8;
  block[3] = &unk_1008473B0;
  void block[4] = v1;
  dispatch_async(v2, block);
}

void sub_1000485B8(uint64_t a1)
{
  long long v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "[PRDaemon] Device unlocked since boot: performing actions", v8, 2u);
  }
  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterRemoveObserver(DarwinNotifyCenter, *(const void **)(a1 + 32), @"com.apple.mobile.keybagd.first_unlock", 0);
  int v4 = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterRemoveObserver(v4, *(const void **)(a1 + 32), @"com.apple.mobile.keybagd.lock_status", 0);
  int v5 = sub_1002F6464();
  sub_1002F67D4((uint64_t)v5);
  long long v6 = +[NIServerFindableDeviceProxySessionManager sharedInstance];
  [v6 notifyDeviceUnlockedSinceBoot];

  int v7 = +[NIServerSystemConfigurator sharedInstance];
  [v7 activate];
}

void sub_100048694(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000486FC()
{
}

void *sub_100048710()
{
  double result = operator new(0x10uLL);
  *double result = off_1008473E0;
  return result;
}

void sub_100048748(uint64_t a1, void *a2)
{
  *a2 = off_1008473E0;
}

void sub_100048770(uint64_t a1, id *a2)
{
  id v2 = *a2;
  __float2 v3 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    int v5 = 138412290;
    id v6 = v2;
    _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "[PRDaemon] PRRangingManager default error handler. Got error: %@", (uint8_t *)&v5, 0xCu);
  }
  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, "PRRangingManager default error handler.");
}

void sub_100048830(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100048858(uint64_t a1, uint64_t a2)
{
  if (sub_10003E730(a2, (uint64_t)&off_100847440)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_100048898()
{
  return &off_100847440;
}

void sub_1000488A4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C888, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C888))
  {
    sub_100004950(qword_10089C870, "PRRoseProviderNetworkListener");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C870, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C888);
  }
}

void sub_10004893C(_Unwind_Exception *a1)
{
}

void sub_100048954()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8A8))
  {
    sub_100004950(&qword_10089C890, "com.apple.nearbyd.accessory.download");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C890, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8A8);
  }
}

void sub_1000489EC(_Unwind_Exception *a1)
{
}

void sub_100048A04()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8C8))
  {
    sub_100004950(&qword_10089C8B0, "com.apple.nearbyd.accessory.files");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C8B0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8C8);
  }
}

void sub_100048A9C(_Unwind_Exception *a1)
{
}

void sub_100048AB4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8E8))
  {
    sub_100004950(qword_10089C8D0, "MA_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8D0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8E8);
  }
}

void sub_100048B4C(_Unwind_Exception *a1)
{
}

void sub_100048B64()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C908, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C908))
  {
    sub_100004950(qword_10089C8F0, "MB_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8F0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C908);
  }
}

void sub_100048BFC(_Unwind_Exception *a1)
{
}

void sub_100048C14()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C928, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C928))
  {
    sub_100004950(qword_10089C910, "D");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C910, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C928);
  }
}

void sub_100048CAC(_Unwind_Exception *a1)
{
}

void sub_100048CC4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C948, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C948))
  {
    sub_100004950(&qword_10089C930, "A");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C930, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C948);
  }
}

void sub_100048D5C(_Unwind_Exception *a1)
{
}

void sub_100048D74()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C968, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C968))
  {
    sub_100004950(qword_10089C950, "FAS.bin");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C950, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C968);
  }
}

void sub_100048E0C(_Unwind_Exception *a1)
{
}

void sub_100048E24()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C988, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C988))
  {
    qword_10089C970 = 0;
    qword_10089C978 = 0;
    qword_10089C980 = 0;
    uint64_t v0 = operator new(0x30uLL);
    qword_10089C978 = (uint64_t)(v0 + 3);
    qword_10089C980 = (uint64_t)(v0 + 3);
    _OWORD *v0 = xmmword_1004A0520;
    v0[1] = *(_OWORD *)algn_1004A0530;
    v0[2] = xmmword_1004A0540;
    qword_10089C970 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_100008CAC, &qword_10089C970, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C988);
  }
}

void sub_100048EE0(_Unwind_Exception *a1)
{
}

void sub_100048EF8()
{
  sub_10039D144();
  uint64_t v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  __float2 v3 = std::string::append(&v38, ".bin");
  long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1008A0358 = v3->__r_.__value_.__r.__words[2];
  xmmword_1008A0348 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0348, (void *)&_mh_execute_header);
  sub_10039D144();
  int v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  int v7 = std::string::append(&v38, ".bin");
  long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1008A0370 = v7->__r_.__value_.__r.__words[2];
  xmmword_1008A0360 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0360, (void *)&_mh_execute_header);
  sub_10039D144();
  __int16 v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  id v11 = std::string::append(&v38, ".bin");
  long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1008A0388 = v11->__r_.__value_.__r.__words[2];
  xmmword_1008A0378 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0378, (void *)&_mh_execute_header);
  sub_10039D144();
  int v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  __int16 v15 = std::string::append(&v38, ".bin");
  long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1008A03A0 = v15->__r_.__value_.__r.__words[2];
  xmmword_1008A0390 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0390, (void *)&_mh_execute_header);
  sub_10039D144();
  id v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  uint64_t v19 = std::string::append(&v38, ".bin");
  long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1008A03B8 = v19->__r_.__value_.__r.__words[2];
  xmmword_1008A03A8 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A03A8, (void *)&_mh_execute_header);
  sub_10039D144();
  id v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  id v23 = std::string::append(&v38, ".bin");
  long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1008A03D0 = v23->__r_.__value_.__r.__words[2];
  xmmword_1008A03C0 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A03C0, (void *)&_mh_execute_header);
  sub_10039D144();
  __int16 v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  id v27 = std::string::append(&v38, ".bin");
  long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1008A03E8 = v27->__r_.__value_.__r.__words[2];
  xmmword_1008A03D8 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A03D8, (void *)&_mh_execute_header);
  sub_10039D144();
  id v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  NSErrorUserInfoKey v31 = std::string::append(&v38, ".bin");
  long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1008A0400 = v31->__r_.__value_.__r.__words[2];
  xmmword_1008A03F0 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A03F0, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  __int16 v35 = std::string::append(&v38, ".bin");
  long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1008A0418 = v35->__r_.__value_.__r.__words[2];
  xmmword_1008A0408 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0408, (void *)&_mh_execute_header);
}

void sub_100049538(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000495AC(uint64_t a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, void *a10, uint64_t a11)
{
  id v18 = a2;
  id v19 = a3;
  id v20 = a4;
  id v21 = a5;
  id v36 = a10;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  sub_100027610(a1 + 48, a6);
  sub_1000276A8(a1 + 80, a7);
  sub_100027740(a1 + 112, a8);
  *(_DWORD *)(a1 + 144) = a9;
  id v22 = v36;
  *(void *)(a1 + 152) = v22;
  *(void *)(a1 + 160) = a11;
  id v23 = [v18 copy];
  long long v24 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v23;

  id v25 = [v19 copy];
  long long v26 = *(void **)a1;
  *(void *)a1 = v25;

  id v27 = [v20 copy];
  long long v28 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v27;

  id v29 = [v21 copy];
  long long v30 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v29;

  if ((unint64_t)[*(id *)a1 length] > 6)
  {
    long long v32 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10040ED10(v32);
    }
    if (*(void *)(a1 + 104)) {
      sub_1000219E4(a1 + 80, 2);
    }
    uint64_t v31 = 0xDEADDEADBEEFLL;
  }
  else
  {
    uint64_t v37 = 0;
    [*(id *)a1 getBytes:&v37 length:[*(id *)a1 length]];
    uint64_t v31 = v37;
  }
  *(void *)(a1 + 16) = v31;
  if ((unint64_t)[*(id *)(a1 + 8) length] > 6)
  {
    long long v34 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10040ECCC(v34);
    }
    if (*(void *)(a1 + 104)) {
      sub_1000219E4(a1 + 80, 2);
    }
    uint64_t v33 = 0xDEADDEADBEEFLL;
  }
  else
  {
    uint64_t v37 = 0;
    [*(id *)(a1 + 8) getBytes:&v37 length:[*(id *)(a1 + 8) length]];
    uint64_t v33 = v37;
  }
  *(void *)(a1 + 24) = v33;

  return a1;
}

void sub_100049824(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  sub_100026B74(v17);
  sub_100026AF0(v16);
  sub_100026A6C(v15);

  _Unwind_Resume(a1);
}

uint64_t sub_1000498B0(uint64_t a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, void *a10, uint64_t a11)
{
  return sub_1000495AC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

BOOL sub_1000498C4(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)a1;
  id v5 = *(id *)a2;
  if ([v4 isEqualToData:v5])
  {
    id v6 = *(id *)(a1 + 32);
    id v7 = *(id *)(a2 + 32);
    if ([v6 isEqualToData:v7])
    {
      id v8 = *(id *)(a1 + 40);
      id v9 = *(id *)(a2 + 40);
      BOOL v11 = [v8 isEqualToNumber:v9]
         && *(_DWORD *)(a1 + 144) == *(_DWORD *)(a2 + 144)
         && *(void *)(a1 + 152) == *(void *)(a2 + 152)
         && *(void *)(a1 + 160) == *(void *)(a2 + 160);
    }
    else
    {
      BOOL v11 = 0;
    }
  }
  else
  {
    BOOL v11 = 0;
  }

  return v11;
}

void sub_1000499D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_100049A04(id *a1)
{
  return *a1;
}

id sub_100049A0C(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

id sub_100049A14(uint64_t a1)
{
  return *(id *)(a1 + 40);
}

uint64_t sub_100049A1C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 144);
}

id sub_100049A24(uint64_t a1)
{
  return *(id *)(a1 + 152);
}

uint64_t sub_100049A2C(uint64_t a1)
{
  return *(void *)(a1 + 160);
}

id sub_100049A34(uint64_t a1)
{
  return *(id *)(a1 + 8);
}

uint64_t sub_100049A3C(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_100049A44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100027610(a2, a1 + 48);
}

uint64_t sub_100049A50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000276A8(a2, a1 + 80);
}

uint64_t sub_100049A5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100027740(a2, a1 + 112);
}

void sub_10004A480()
{
  os_log_t v0 = os_log_create("com.apple.nearbyd", "general");
  uint64_t v1 = (void *)qword_1008ABDE0;
  qword_1008ABDE0 = (uint64_t)v0;
}

void *sub_10004A4C4@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_1008475F8[a1]);
}

void *sub_10004A4D8@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100847650[a1]);
}

void *sub_10004A4EC@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100847698[a1]);
}

void *sub_10004A500@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_1008476B8[a1]);
}

void sub_10004A54C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004A874(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004A9D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  long long v10 = v9;

  a9.super_class = (Class)NIServerSessionContainer;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_10004AAB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_10001A970(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_10004AB60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004AC58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004ACE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004AE30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004B290(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004C3B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  _Unwind_Resume(a1);
}

void sub_10004C604(uint64_t a1, void *a2)
{
  long long v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _handleSpecializedSessionInvalidation:v3];
}

void sub_10004C660(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10004C678(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _handleSpecializedSessionBackgroundSupportUpdate:a2];
}

void sub_10004C6C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10004C944(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004CAB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004CE10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004CF8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004D1EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004D474(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004D610(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004D7AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004DA1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004DCAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004DEE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004E0E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004E364(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004E574(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004E780(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004E8F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004EA80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004EC38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004EDF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004EFA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004F144(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004F2C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004F368(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  BOOL v11 = v10;

  _Unwind_Resume(a1);
}

void sub_10004F414(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  BOOL v11 = v10;

  _Unwind_Resume(a1);
}

void sub_10004F508(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10004F598(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004F5F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004F690(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10004FA04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  long long v26 = v24;

  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10004FAB0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10004FAC0(uint64_t a1)
{
}

void sub_10004FAC8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 tokenVariant] == (id)1)
  {
    if (*(unsigned char *)(a1 + 56))
    {
      [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) addObject:v3];
    }
    else
    {
      uint64_t v4 = *(void *)(a1 + 40);
      NSErrorUserInfoKey v8 = NSLocalizedFailureReasonErrorKey;
      CFStringRef v9 = @"Not allowed to configure findable local device.";
      id v5 = +[NSDictionary dictionaryWithObjects:&v9 forKeys:&v8 count:1];
      id v6 = +[NSError errorWithDomain:@"com.apple.NearbyInteraction" code:-10020 userInfo:v5];
      (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v6);

      id v7 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v7, OS_LOG_TYPE_FAULT))
      {
        [*(id *)(a1 + 32) signingIdentity];
        objc_claimAutoreleasedReturnValue();
        [*(id *)(a1 + 32) pid];
        sub_10040F424();
      }
    }
  }
}

void sub_10004FC38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004FF0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004FFA8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 tokenVariant] == (id)1)
  {
    if (*(unsigned char *)(a1 + 56))
    {
      [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) addObject:v3];
    }
    else
    {
      uint64_t v4 = *(void *)(a1 + 40);
      NSErrorUserInfoKey v8 = NSLocalizedFailureReasonErrorKey;
      CFStringRef v9 = @"Not allowed to configure findable local device.";
      id v5 = +[NSDictionary dictionaryWithObjects:&v9 forKeys:&v8 count:1];
      id v6 = +[NSError errorWithDomain:@"com.apple.NearbyInteraction" code:-10020 userInfo:v5];
      (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v6);

      id v7 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v7, OS_LOG_TYPE_FAULT))
      {
        [*(id *)(a1 + 32) signingIdentity];
        objc_claimAutoreleasedReturnValue();
        [*(id *)(a1 + 32) pid];
        sub_10040F424();
      }
    }
  }
}

void sub_100050118(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000503A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000505D0(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1000507EC(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_100050A9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100050AF4(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v19 = WeakRetained;
    id v3 = objc_opt_new();
    id v4 = objc_loadWeakRetained(v19 + 39);
    id v5 = [v4 allSessionsPrintableState];
    [v3 addEntriesFromDictionary:v5];

    id v6 = +[NIServerSystemConfigurator sharedInstance];
    id v7 = [v6 printableState];
    [v3 setObject:v7 forKey:@"System Configurator"];

    NSErrorUserInfoKey v8 = +[NIServerHomeDeviceService sharedInstance];
    CFStringRef v9 = [v8 printableState];
    [v3 setObject:v9 forKey:@"Home Device Service"];

    long long v10 = +[NIServerAccessoryGATTServiceManager sharedInstance];
    BOOL v11 = [v10 printableState];
    [v3 setObject:v11 forKey:@"Accessory GATT Service"];

    long long v12 = +[NIServerNearbyAccessoryRangingService sharedInstance];
    int v13 = [v12 printableState];
    [v3 setObject:v13 forKey:@"Accessory Ranging Service"];

    long long v14 = +[NIServerFindingSession sharedServicePrintableState];
    [v3 setObject:v14 forKey:@"Finding Service"];

    __int16 v15 = +[NIServerFindableDeviceProxySessionManager sharedInstance];
    long long v16 = [v15 printableState];
    [v3 setObject:v16 forKey:@"Findable Device"];

    id v17 = sub_1002F6464();
    id v18 = sub_1002F5504((uint64_t)v17);
    [v3 addEntriesFromDictionary:v18];

    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    id WeakRetained = v19;
  }
}

void sub_100050D1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100050F40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100051154(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10005136C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000514C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100051738(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000519B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100051B5C(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v2 - 40));

  _Unwind_Resume(a1);
}

void sub_100051B74(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    id v3 = [WeakRetained remote];
    [v3 uwbSessionDidInvalidateWithError:*(void *)(a1 + 32)];

    id WeakRetained = v4;
  }
}

void sub_100051BD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100051D5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_100051D84(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained) {
    [WeakRetained _updateClientAppVisibilityInterruption];
  }
}

void sub_100051DD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100051FC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100052230(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100052444(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000524D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000525B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000526D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000527F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100052C7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
  _Unwind_Resume(a1);
}

void sub_100052EA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100053034(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000530F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100053354(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10005376C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000538B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000539A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000539CC(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained[23] consumeBluetoothSample:v5];
  }
}

void sub_100053A30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100053DD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31)
{
  _Block_object_dispose(&a26, 8);
  _Unwind_Resume(a1);
}

void sub_100053E6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  id v3 = +[NSString stringWithFormat:@"    %@", a2];
  [v2 addObject:];
}

void sub_100053EDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10005413C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100054168(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (!WeakRetained) {
    goto LABEL_22;
  }
  sub_100004950(v11, off_100847718[*(int *)(a1 + 40)]);
  sub_100004950(__p, off_100847740[*(int *)(a1 + 44)]);
  id v3 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    id v4 = v11;
    if (v12 < 0) {
      id v4 = (void **)v11[0];
    }
    id v5 = __p;
    if (v10 < 0) {
      id v5 = (void **)__p[0];
    }
    *(_DWORD *)int buf = 136315394;
    long long v14 = v4;
    __int16 v15 = 2080;
    long long v16 = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#ses-container,UWB system changed state: '%s' with cause: '%s'. Sending to specialized session", buf, 0x16u);
  }
  id v6 = WeakRetained[23];
  if (v6)
  {
    if ([v6 requiresNarrowbandToRun] == (id)2)
    {
      id v7 = [WeakRetained _fatalErrorForUwbServiceState:*(unsigned int *)(a1 + 40) cause:*(unsigned int *)(a1 + 44)];
      if (v7) {
        goto LABEL_14;
      }
      [WeakRetained _updateInterruptionForUWBServiceState:*(unsigned int *)(a1 + 40) cause:*(unsigned int *)(a1 + 44) requiresNarrowBand:1];
    }
    else if ([WeakRetained[23] requiresUWBToRun] == (id)2)
    {
      id v7 = [WeakRetained _fatalErrorForUwbServiceState:*(unsigned int *)(a1 + 40) cause:*(unsigned int *)(a1 + 44)];
      if (v7)
      {
LABEL_14:
        NSErrorUserInfoKey v8 = [WeakRetained remote];
        [v8 uwbSessionDidFailWithError:v7];

        goto LABEL_18;
      }
      [WeakRetained _updateInterruptionForUWBServiceState:*(unsigned int *)(a1 + 40) cause:*(unsigned int *)(a1 + 44) requiresNarrowBand:0];
    }
    [WeakRetained[23] rangingServiceDidUpdateState:*(unsigned int *)(a1 + 40) cause:*(unsigned int *)(a1 + 44)];
  }
LABEL_18:
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  if (v12 < 0) {
    operator delete(v11[0]);
  }
LABEL_22:
}

void sub_100054370(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  id v23 = v21;

  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }

  _Unwind_Resume(a1);
}

void sub_100054694(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100054774(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100054818(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000548A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000549A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100054A10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100054A78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100054DF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100054E28(uint64_t a1)
{
  uint64_t v2 = a1 + 16;
  *(void *)a1 = v4;
  *(void *)(a1 + *(void *)(v4 - 24)) = v3;
  *(void *)(a1 + 8) = 0;
  id v5 = (std::ios_base *)(a1 + *(void *)(*(void *)a1 - 24));
  std::ios_base::init(v5, (void *)(a1 + 24));
  v5[1].__vftable = 0;
  v5[1].__fmtflags_ = -1;
  *(void *)(a1 + 16) = v7;
  *(void *)(v2 + *(void *)(v7 - 24)) = v6;
  *(void *)a1 = v8;
  std::streambuf::basic_streambuf();
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_DWORD *)(a1 + 120) = 24;
  return a1;
}

void sub_1000550D8(_Unwind_Exception *a1)
{
}

uint64_t sub_100055100(uint64_t a1)
{
  *(void *)(a1 + 16) = v3;
  if (*(char *)(a1 + 111) < 0) {
    operator delete(*(void **)(a1 + 88));
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  std::ios::~ios();
  return a1;
}

void sub_10005535C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_1000555CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100055784(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000558F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100055AF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_100055D20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_100055F18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10005601C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10005609C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000560FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10005615C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100056328(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_100056628(void *a1, uint64_t a2, uint64_t a3)
{
  std::ostream::sentry::sentry();
  if (v13)
  {
    uint64_t v6 = (uint64_t)a1 + *(void *)(*a1 - 24);
    uint64_t v7 = *(void *)(v6 + 40);
    int v8 = *(_DWORD *)(v6 + 8);
    int v9 = *(_DWORD *)(v6 + 144);
    if (v9 == -1)
    {
      std::ios_base::getloc((const std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)));
      char v10 = std::locale::use_facet(&v14, &std::ctype<char>::id);
      int v9 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v10->__vftable[2].~facet_0)(v10, 32);
      std::locale::~locale(&v14);
      *(_DWORD *)(v6 + 144) = v9;
    }
    if ((v8 & 0xB0) == 0x20) {
      uint64_t v11 = a2 + a3;
    }
    else {
      uint64_t v11 = a2;
    }
    if (!sub_1000567CC(v7, a2, v11, a2 + a3, v6, (char)v9)) {
      std::ios_base::clear((std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(void *)(*a1 - 24) + 32) | 5);
    }
  }
  std::ostream::sentry::~sentry();
  return a1;
}

void sub_100056764(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, std::locale a12)
{
  std::ostream::sentry::~sentry();
  __cxa_begin_catch(a1);
  std::ios_base::__set_badbit_and_consider_rethrow((std::ios_base *)((char *)v12 + *(void *)(*v12 - 24)));
  __cxa_end_catch();
  JUMPOUT(0x100056744);
}

void sub_1000567B8(_Unwind_Exception *a1)
{
}

uint64_t sub_1000567CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int __c)
{
  uint64_t v6 = a1;
  if (a1)
  {
    uint64_t v11 = *(void *)(a5 + 24);
    if (v11 <= a4 - a2) {
      int64_t v12 = 0;
    }
    else {
      int64_t v12 = v11 - (a4 - a2);
    }
    if (a3 - a2 >= 1 && (*(uint64_t (**)(uint64_t))(*(void *)a1 + 96))(a1) != a3 - a2) {
      return 0;
    }
    if (v12 >= 1)
    {
      sub_100056954(__p, v12, __c);
      char v13 = v18 >= 0 ? __p : (void **)__p[0];
      uint64_t v14 = (*(uint64_t (**)(uint64_t, void **, int64_t))(*(void *)v6 + 96))(v6, v13, v12);
      if (v18 < 0) {
        operator delete(__p[0]);
      }
      if (v14 != v12) {
        return 0;
      }
    }
    uint64_t v15 = a4 - a3;
    if (v15 < 1 || (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v6 + 96))(v6, a3, v15) == v15) {
      *(void *)(a5 + 24) = 0;
    }
    else {
      return 0;
    }
  }
  return v6;
}

void sub_100056938(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100056954(void *__b, size_t __len, int __c)
{
  if (__len >= 0x7FFFFFFFFFFFFFF8) {
    sub_10000B220();
  }
  if (__len >= 0x17)
  {
    size_t v7 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17) {
      size_t v7 = __len | 7;
    }
    size_t v8 = v7 + 1;
    uint64_t v6 = operator new(v7 + 1);
    __b[1] = __len;
    __b[2] = v8 | 0x8000000000000000;
    *__b = v6;
  }
  else
  {
    *((unsigned char *)__b + 23) = __len;
    uint64_t v6 = __b;
    if (!__len) {
      goto LABEL_9;
    }
  }
  memset(v6, __c, __len);
LABEL_9:
  *((unsigned char *)v6 + __len) = 0;
  return __b;
}

void sub_100056A00(void *a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = operator new(0x48uLL);
  sub_100056A74(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;

  sub_10001ABCC((uint64_t)a2, v4 + 4, (uint64_t)(v4 + 3));
}

void sub_100056A60(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_100056A74(void *a1, void *a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_100846460;
  sub_1002CA668(a1 + 3, *a2);
  return a1;
}

void sub_100056AC0(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void *sub_100056AD4(void *result)
{
  if (result[3])
  {
    uint64_t v1 = result;
    double result = (void *)result[2];
    if (result)
    {
      do
      {
        uint64_t v2 = (void *)*result;
        operator delete(result);
        double result = v2;
      }
      while (v2);
    }
    v1[2] = 0;
    uint64_t v3 = v1[1];
    if (v3)
    {
      for (uint64_t i = 0; i != v3; ++i)
        *(void *)(*v1 + 8 * i) = 0;
    }
    v1[3] = 0;
  }
  return result;
}

void *sub_100056B3C(void *a1, unint64_t *a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0;
  }
  unint64_t v3 = *a2;
  uint8x8_t v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL)
  {
    unint64_t v5 = *a2;
    if (v3 >= *(void *)&v2) {
      unint64_t v5 = v3 % *(void *)&v2;
    }
  }
  else
  {
    unint64_t v5 = (*(void *)&v2 - 1) & v3;
  }
  uint64_t v6 = *(void **)(*a1 + 8 * v5);
  if (!v6) {
    return 0;
  }
  double result = (void *)*v6;
  if (*v6)
  {
    do
    {
      unint64_t v8 = result[1];
      if (v8 == v3)
      {
        if (result[2] == v3) {
          return result;
        }
      }
      else
      {
        if (v4.u32[0] > 1uLL)
        {
          if (v8 >= *(void *)&v2) {
            v8 %= *(void *)&v2;
          }
        }
        else
        {
          v8 &= *(void *)&v2 - 1;
        }
        if (v8 != v5) {
          return 0;
        }
      }
      double result = (void *)*result;
    }
    while (result);
  }
  return result;
}

void *sub_100056BF0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61) {
    sub_1000257D8();
  }
  return operator new(8 * a2);
}

void sub_100056C38(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 2u);
}

uint64_t sub_100056C6C(uint64_t result, uint64_t a2, int a3, float a4)
{
  *(float *)a2 = a4;
  *(void *)(a2 + 4) = result;
  *(_WORD *)(a2 + 12) = 1024;
  *(_DWORD *)(a2 + 14) = a3;
  return result;
}

void sub_100056C94(void *a1@<X0>, const char *a2@<X3>, uint8_t *a3@<X4>, NSObject *a4@<X8>)
{
  _os_log_fault_impl(a1, a4, OS_LOG_TYPE_FAULT, a2, a3, 0x12u);
}

void sub_100056CB0(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

void sub_100056CBC(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void sub_100056CEC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C888, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C888))
  {
    sub_100004950(qword_10089C870, "PRRoseProviderNetworkListener");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C870, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C888);
  }
}

void sub_100056D84(_Unwind_Exception *a1)
{
}

void sub_100056D9C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8A8))
  {
    sub_100004950(&qword_10089C890, "com.apple.nearbyd.accessory.download");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C890, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8A8);
  }
}

void sub_100056E34(_Unwind_Exception *a1)
{
}

void sub_100056E4C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8C8))
  {
    sub_100004950(&qword_10089C8B0, "com.apple.nearbyd.accessory.files");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C8B0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8C8);
  }
}

void sub_100056EE4(_Unwind_Exception *a1)
{
}

void sub_100056EFC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8E8))
  {
    sub_100004950(qword_10089C8D0, "MA_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8D0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8E8);
  }
}

void sub_100056F94(_Unwind_Exception *a1)
{
}

void sub_100056FAC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C908, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C908))
  {
    sub_100004950(qword_10089C8F0, "MB_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8F0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C908);
  }
}

void sub_100057044(_Unwind_Exception *a1)
{
}

void sub_10005705C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C928, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C928))
  {
    sub_100004950(qword_10089C910, "D");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C910, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C928);
  }
}

void sub_1000570F4(_Unwind_Exception *a1)
{
}

void sub_10005710C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C948, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C948))
  {
    sub_100004950(&qword_10089C930, "A");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C930, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C948);
  }
}

void sub_1000571A4(_Unwind_Exception *a1)
{
}

void sub_1000571BC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C968, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C968))
  {
    sub_100004950(qword_10089C950, "FAS.bin");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C950, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C968);
  }
}

void sub_100057254(_Unwind_Exception *a1)
{
}

void sub_10005726C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C988, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C988))
  {
    qword_10089C970 = 0;
    qword_10089C978 = 0;
    qword_10089C980 = 0;
    os_log_t v0 = operator new(0x30uLL);
    qword_10089C978 = (uint64_t)(v0 + 3);
    qword_10089C980 = (uint64_t)(v0 + 3);
    _OWORD *v0 = xmmword_1004A05F8;
    v0[1] = unk_1004A0608;
    v0[2] = xmmword_1004A0618;
    qword_10089C970 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_100008CAC, &qword_10089C970, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C988);
  }
}

void sub_100057328(_Unwind_Exception *a1)
{
}

void sub_100057340()
{
  sub_10039D144();
  uint64_t v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  unint64_t v3 = std::string::append(&v38, ".bin");
  long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1008A0438 = v3->__r_.__value_.__r.__words[2];
  xmmword_1008A0428 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0428, (void *)&_mh_execute_header);
  sub_10039D144();
  unint64_t v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  size_t v7 = std::string::append(&v38, ".bin");
  long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1008A0450 = v7->__r_.__value_.__r.__words[2];
  xmmword_1008A0440 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0440, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  uint64_t v11 = std::string::append(&v38, ".bin");
  long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1008A0468 = v11->__r_.__value_.__r.__words[2];
  xmmword_1008A0458 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0458, (void *)&_mh_execute_header);
  sub_10039D144();
  char v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  uint64_t v15 = std::string::append(&v38, ".bin");
  long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1008A0480 = v15->__r_.__value_.__r.__words[2];
  xmmword_1008A0470 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0470, (void *)&_mh_execute_header);
  sub_10039D144();
  id v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  id v19 = std::string::append(&v38, ".bin");
  long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1008A0498 = v19->__r_.__value_.__r.__words[2];
  xmmword_1008A0488 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0488, (void *)&_mh_execute_header);
  sub_10039D144();
  id v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  id v23 = std::string::append(&v38, ".bin");
  long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1008A04B0 = v23->__r_.__value_.__r.__words[2];
  xmmword_1008A04A0 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A04A0, (void *)&_mh_execute_header);
  sub_10039D144();
  id v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  id v27 = std::string::append(&v38, ".bin");
  long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1008A04C8 = v27->__r_.__value_.__r.__words[2];
  xmmword_1008A04B8 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A04B8, (void *)&_mh_execute_header);
  sub_10039D144();
  id v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  uint64_t v31 = std::string::append(&v38, ".bin");
  long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1008A04E0 = v31->__r_.__value_.__r.__words[2];
  xmmword_1008A04D0 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A04D0, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  __int16 v35 = std::string::append(&v38, ".bin");
  long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1008A04F8 = v35->__r_.__value_.__r.__words[2];
  xmmword_1008A04E8 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A04E8, (void *)&_mh_execute_header);
}

void sub_100057980(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1000579F4@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100847810[a1]);
}

void *sub_100057A08@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100847868[a1]);
}

void *sub_100057A1C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_1008478B0[a1]);
}

void *sub_100057A30@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_1008478D0[a1]);
}

void sub_100057A44(void *a1)
{
  id v1 = a1;
  char v2 = os_variant_allows_internal_security_policies();
  if (v1) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  if ((v3 & 1) == 0) {
    goto LABEL_23;
  }
  long long v4 = sub_1002F6464();
  uint64_t v6 = *((void *)v4 + 20);
  unint64_t v5 = (std::__shared_weak_count *)*((void *)v4 + 21);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (v6)
  {
    size_t v7 = [v1 objectForKeyedSubscript:@"Label"];
    if (!v7) {
      goto LABEL_20;
    }
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      goto LABEL_20;
    }
    long long v8 = [v1 objectForKeyedSubscript:@"Source"];
    if (!v8 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
    {
LABEL_19:

LABEL_20:
      goto LABEL_21;
    }
    sub_100004950(&__p, (char *)[v7 UTF8String]);
    if ([v8 isEqualToString:@"DirectUserInput"])
    {
      int v9 = 1;
    }
    else
    {
      if (![v8 isEqualToString:@"ClientApp"]) {
        goto LABEL_17;
      }
      int v9 = 2;
    }
    double v10 = sub_100006C38();
    sub_10029EC38(v6, &__p, v9, v10);
LABEL_17:
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    goto LABEL_19;
  }
LABEL_21:
  if (v5) {
    sub_10001A970(v5);
  }
LABEL_23:
}

void sub_100057BB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (v16) {
    sub_10001A970(v16);
  }

  _Unwind_Resume(a1);
}

void sub_100057C18()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C888, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C888))
  {
    sub_100004950(qword_10089C870, "PRRoseProviderNetworkListener");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C870, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C888);
  }
}

void sub_100057CB0(_Unwind_Exception *a1)
{
}

void sub_100057CC8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8A8))
  {
    sub_100004950(&qword_10089C890, "com.apple.nearbyd.accessory.download");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C890, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8A8);
  }
}

void sub_100057D60(_Unwind_Exception *a1)
{
}

void sub_100057D78()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8C8))
  {
    sub_100004950(&qword_10089C8B0, "com.apple.nearbyd.accessory.files");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C8B0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8C8);
  }
}

void sub_100057E10(_Unwind_Exception *a1)
{
}

void sub_100057E28()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8E8))
  {
    sub_100004950(qword_10089C8D0, "MA_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8D0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8E8);
  }
}

void sub_100057EC0(_Unwind_Exception *a1)
{
}

void sub_100057ED8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C908, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C908))
  {
    sub_100004950(qword_10089C8F0, "MB_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8F0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C908);
  }
}

void sub_100057F70(_Unwind_Exception *a1)
{
}

void sub_100057F88()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C928, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C928))
  {
    sub_100004950(qword_10089C910, "D");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C910, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C928);
  }
}

void sub_100058020(_Unwind_Exception *a1)
{
}

void sub_100058038()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C948, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C948))
  {
    sub_100004950(&qword_10089C930, "A");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C930, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C948);
  }
}

void sub_1000580D0(_Unwind_Exception *a1)
{
}

void sub_1000580E8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C968, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C968))
  {
    sub_100004950(qword_10089C950, "FAS.bin");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C950, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C968);
  }
}

void sub_100058180(_Unwind_Exception *a1)
{
}

void sub_100058198()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C988, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C988))
  {
    qword_10089C970 = 0;
    qword_10089C978 = 0;
    qword_10089C980 = 0;
    os_log_t v0 = operator new(0x30uLL);
    qword_10089C978 = (uint64_t)(v0 + 3);
    qword_10089C980 = (uint64_t)(v0 + 3);
    _OWORD *v0 = xmmword_1004A0650;
    v0[1] = unk_1004A0660;
    v0[2] = xmmword_1004A0670;
    qword_10089C970 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_100008CAC, &qword_10089C970, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C988);
  }
}

void sub_100058254(_Unwind_Exception *a1)
{
}

void sub_10005826C()
{
  sub_10039D144();
  id v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  char v3 = std::string::append(&v38, ".bin");
  long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1008A0510 = v3->__r_.__value_.__r.__words[2];
  xmmword_1008A0500 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0500, (void *)&_mh_execute_header);
  sub_10039D144();
  unint64_t v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  size_t v7 = std::string::append(&v38, ".bin");
  long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1008A0528 = v7->__r_.__value_.__r.__words[2];
  xmmword_1008A0518 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0518, (void *)&_mh_execute_header);
  sub_10039D144();
  int v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  uint64_t v11 = std::string::append(&v38, ".bin");
  long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1008A0540 = v11->__r_.__value_.__r.__words[2];
  xmmword_1008A0530 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0530, (void *)&_mh_execute_header);
  sub_10039D144();
  char v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  uint64_t v15 = std::string::append(&v38, ".bin");
  long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1008A0558 = v15->__r_.__value_.__r.__words[2];
  xmmword_1008A0548 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0548, (void *)&_mh_execute_header);
  sub_10039D144();
  id v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  id v19 = std::string::append(&v38, ".bin");
  long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1008A0570 = v19->__r_.__value_.__r.__words[2];
  xmmword_1008A0560 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0560, (void *)&_mh_execute_header);
  sub_10039D144();
  id v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  id v23 = std::string::append(&v38, ".bin");
  long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1008A0588 = v23->__r_.__value_.__r.__words[2];
  xmmword_1008A0578 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0578, (void *)&_mh_execute_header);
  sub_10039D144();
  id v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  id v27 = std::string::append(&v38, ".bin");
  long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1008A05A0 = v27->__r_.__value_.__r.__words[2];
  xmmword_1008A0590 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0590, (void *)&_mh_execute_header);
  sub_10039D144();
  id v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  uint64_t v31 = std::string::append(&v38, ".bin");
  long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1008A05B8 = v31->__r_.__value_.__r.__words[2];
  xmmword_1008A05A8 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A05A8, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  __int16 v35 = std::string::append(&v38, ".bin");
  long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1008A05D0 = v35->__r_.__value_.__r.__words[2];
  xmmword_1008A05C0 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A05C0, (void *)&_mh_execute_header);
}

void sub_1000588AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100058920@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_1008478F0[a1]);
}

void *sub_100058934@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100847948[a1]);
}

void *sub_100058948@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100847990[a1]);
}

void *sub_10005895C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_1008479B0[a1]);
}

void sub_100058A5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100058AD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100058D74(_Unwind_Exception *a1)
{
  objc_destroyWeak(v6);
  objc_destroyWeak(v3);
  objc_destroyWeak(v5);
  objc_destroyWeak(v4);
  objc_destroyWeak((id *)(v7 - 96));
  objc_destroyWeak((id *)(v7 - 88));

  _Unwind_Resume(a1);
}

void sub_100058DE8(uint64_t a1)
{
  long long v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(_DWORD *)(a1 + 48);
    v6[0] = 67109120;
    v6[1] = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "connection interrupted for pid: %d", (uint8_t *)v6, 8u);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained handleXPCDisconnection:v5];
  }
}

void sub_100058EC0(_Unwind_Exception *a1)
{
  int v3 = v2;

  _Unwind_Resume(a1);
}

void sub_100058EE0(uint64_t a1)
{
  long long v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(_DWORD *)(a1 + 48);
    v6[0] = 67109120;
    v6[1] = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "connection invalidated for pid: %d", (uint8_t *)v6, 8u);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained handleXPCDisconnection:v5];
  }
}

void sub_100058FB8(_Unwind_Exception *a1)
{
  int v3 = v2;

  _Unwind_Resume(a1);
}

void sub_100059174(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100059244(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000592A4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C888, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C888))
  {
    sub_100004950(qword_10089C870, "PRRoseProviderNetworkListener");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C870, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C888);
  }
}

void sub_10005933C(_Unwind_Exception *a1)
{
}

void sub_100059354()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8A8))
  {
    sub_100004950(&qword_10089C890, "com.apple.nearbyd.accessory.download");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C890, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8A8);
  }
}

void sub_1000593EC(_Unwind_Exception *a1)
{
}

void sub_100059404()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8C8))
  {
    sub_100004950(&qword_10089C8B0, "com.apple.nearbyd.accessory.files");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C8B0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8C8);
  }
}

void sub_10005949C(_Unwind_Exception *a1)
{
}

void sub_1000594B4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8E8))
  {
    sub_100004950(qword_10089C8D0, "MA_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8D0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8E8);
  }
}

void sub_10005954C(_Unwind_Exception *a1)
{
}

void sub_100059564()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C908, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C908))
  {
    sub_100004950(qword_10089C8F0, "MB_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8F0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C908);
  }
}

void sub_1000595FC(_Unwind_Exception *a1)
{
}

void sub_100059614()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C928, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C928))
  {
    sub_100004950(qword_10089C910, "D");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C910, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C928);
  }
}

void sub_1000596AC(_Unwind_Exception *a1)
{
}

void sub_1000596C4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C948, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C948))
  {
    sub_100004950(&qword_10089C930, "A");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C930, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C948);
  }
}

void sub_10005975C(_Unwind_Exception *a1)
{
}

void sub_100059774()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C968, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C968))
  {
    sub_100004950(qword_10089C950, "FAS.bin");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C950, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C968);
  }
}

void sub_10005980C(_Unwind_Exception *a1)
{
}

void sub_100059824()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C988, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C988))
  {
    qword_10089C970 = 0;
    qword_10089C978 = 0;
    qword_10089C980 = 0;
    os_log_t v0 = operator new(0x30uLL);
    qword_10089C978 = (uint64_t)(v0 + 3);
    qword_10089C980 = (uint64_t)(v0 + 3);
    _OWORD *v0 = xmmword_1004A0680;
    v0[1] = *(_OWORD *)algn_1004A0690;
    v0[2] = xmmword_1004A06A0;
    qword_10089C970 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_100008CAC, &qword_10089C970, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C988);
  }
}

void sub_1000598E0(_Unwind_Exception *a1)
{
}

void sub_1000598F8()
{
  sub_10039D144();
  id v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  int v3 = std::string::append(&v38, ".bin");
  long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1008A05E8 = v3->__r_.__value_.__r.__words[2];
  xmmword_1008A05D8 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A05D8, (void *)&_mh_execute_header);
  sub_10039D144();
  id v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  uint64_t v7 = std::string::append(&v38, ".bin");
  long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1008A0600 = v7->__r_.__value_.__r.__words[2];
  xmmword_1008A05F0 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A05F0, (void *)&_mh_execute_header);
  sub_10039D144();
  int v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  uint64_t v11 = std::string::append(&v38, ".bin");
  long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1008A0618 = v11->__r_.__value_.__r.__words[2];
  xmmword_1008A0608 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0608, (void *)&_mh_execute_header);
  sub_10039D144();
  char v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  uint64_t v15 = std::string::append(&v38, ".bin");
  long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1008A0630 = v15->__r_.__value_.__r.__words[2];
  xmmword_1008A0620 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0620, (void *)&_mh_execute_header);
  sub_10039D144();
  id v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  id v19 = std::string::append(&v38, ".bin");
  long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1008A0648 = v19->__r_.__value_.__r.__words[2];
  xmmword_1008A0638 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0638, (void *)&_mh_execute_header);
  sub_10039D144();
  id v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  id v23 = std::string::append(&v38, ".bin");
  long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1008A0660 = v23->__r_.__value_.__r.__words[2];
  xmmword_1008A0650 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0650, (void *)&_mh_execute_header);
  sub_10039D144();
  id v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  id v27 = std::string::append(&v38, ".bin");
  long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1008A0678 = v27->__r_.__value_.__r.__words[2];
  xmmword_1008A0668 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0668, (void *)&_mh_execute_header);
  sub_10039D144();
  id v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  uint64_t v31 = std::string::append(&v38, ".bin");
  long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1008A0690 = v31->__r_.__value_.__r.__words[2];
  xmmword_1008A0680 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0680, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  __int16 v35 = std::string::append(&v38, ".bin");
  long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1008A06A8 = v35->__r_.__value_.__r.__words[2];
  xmmword_1008A0698 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A0698, (void *)&_mh_execute_header);
}

void sub_100059F38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_100059FAC()
{
  os_log_t v0 = (wireless_diagnostics::google::protobuf::DescriptorPool *)sub_10005ABBC();
  wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v0);
  sub_100004950(__p, "CLPVisionEvent.proto");
  uint64_t FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName();
  uint64_t v2 = FileByName;
  if (v4 < 0)
  {
    operator delete(__p[0]);
    if (v2) {
      goto LABEL_6;
    }
  }
  else if (FileByName)
  {
    goto LABEL_6;
  }
  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)__p);
LABEL_6:
  qword_1008A06B0 = *(void *)(v2 + 80);
  operator new();
}

void sub_10005AB1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

void sub_10005ABBC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_1008A0828 & 1) == 0)
  {
    byte_1008A0828 = 1;
    wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc", a4);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)&unk_1004A0838, (const void *)0x13B4, v4);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile();
    operator new();
  }
}

void sub_10005B050()
{
}

uint64_t sub_10005B1E8()
{
  if (qword_1008ABDE8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABDE8 + 8))(qword_1008ABDE8);
  }
  if (qword_1008A06B8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A06B8 + 8))(qword_1008A06B8);
  }
  if (qword_1008ABDF0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABDF0 + 8))(qword_1008ABDF0);
  }
  if (qword_1008A06C8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A06C8 + 8))(qword_1008A06C8);
  }
  if (qword_1008ABDF8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABDF8 + 8))(qword_1008ABDF8);
  }
  if (qword_1008A06D8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A06D8 + 8))(qword_1008A06D8);
  }
  if (qword_1008ABE00) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABE00 + 8))(qword_1008ABE00);
  }
  if (qword_1008A06E8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A06E8 + 8))(qword_1008A06E8);
  }
  if (qword_1008ABE08) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABE08 + 8))(qword_1008ABE08);
  }
  if (qword_1008A06F8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A06F8 + 8))(qword_1008A06F8);
  }
  if (qword_1008ABE10) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABE10 + 8))(qword_1008ABE10);
  }
  if (qword_1008A0708) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0708 + 8))(qword_1008A0708);
  }
  if (qword_1008ABE18) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABE18 + 8))(qword_1008ABE18);
  }
  if (qword_1008A0718) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0718 + 8))(qword_1008A0718);
  }
  if (qword_1008ABE20) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABE20 + 8))(qword_1008ABE20);
  }
  if (qword_1008A0728) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0728 + 8))(qword_1008A0728);
  }
  if (qword_1008ABE28) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABE28 + 8))(qword_1008ABE28);
  }
  if (qword_1008A0738) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0738 + 8))(qword_1008A0738);
  }
  if (qword_1008ABE30) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABE30 + 8))(qword_1008ABE30);
  }
  if (qword_1008A0748) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0748 + 8))(qword_1008A0748);
  }
  if (qword_1008ABE38) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABE38 + 8))(qword_1008ABE38);
  }
  if (qword_1008A0758) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0758 + 8))(qword_1008A0758);
  }
  if (qword_1008ABE40) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABE40 + 8))(qword_1008ABE40);
  }
  if (qword_1008A0768) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0768 + 8))(qword_1008A0768);
  }
  if (qword_1008ABE48) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABE48 + 8))(qword_1008ABE48);
  }
  if (qword_1008A0778) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0778 + 8))(qword_1008A0778);
  }
  if (qword_1008ABE50) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABE50 + 8))(qword_1008ABE50);
  }
  if (qword_1008A0788) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0788 + 8))(qword_1008A0788);
  }
  if (qword_1008ABE58) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABE58 + 8))(qword_1008ABE58);
  }
  if (qword_1008A0798) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0798 + 8))(qword_1008A0798);
  }
  if (qword_1008ABE60) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABE60 + 8))(qword_1008ABE60);
  }
  if (qword_1008A07A8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A07A8 + 8))(qword_1008A07A8);
  }
  if (qword_1008ABE68) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABE68 + 8))(qword_1008ABE68);
  }
  if (qword_1008A07B8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A07B8 + 8))(qword_1008A07B8);
  }
  if (qword_1008ABE70) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABE70 + 8))(qword_1008ABE70);
  }
  if (qword_1008A07C8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A07C8 + 8))(qword_1008A07C8);
  }
  if (qword_1008ABE78) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABE78 + 8))(qword_1008ABE78);
  }
  if (qword_1008A07D8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A07D8 + 8))(qword_1008A07D8);
  }
  if (qword_1008ABE80) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABE80 + 8))(qword_1008ABE80);
  }
  if (qword_1008A07E8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A07E8 + 8))(qword_1008A07E8);
  }
  if (qword_1008ABE88) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABE88 + 8))(qword_1008ABE88);
  }
  uint64_t result = qword_1008A07F8;
  if (qword_1008A07F8)
  {
    id v1 = *(uint64_t (**)(void))(*(void *)qword_1008A07F8 + 8);
    return v1();
  }
  return result;
}

uint64_t sub_10005B9F0()
{
  uint64_t v0 = qword_1008A0830;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v22[1] = sub_100059FAC;
    char v23 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v22);
  }
  if (!qword_1008ABDE8) {
    ((void (*)(void))sub_10005ABBC)();
  }
  uint64_t v1 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABDF0) {
    sub_10005ABBC(v1);
  }
  uint64_t v2 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABDF8) {
    sub_10005ABBC(v2);
  }
  uint64_t v3 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABE00) {
    sub_10005ABBC(v3);
  }
  uint64_t v4 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABE08) {
    sub_10005ABBC(v4);
  }
  uint64_t v5 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABE10) {
    sub_10005ABBC(v5);
  }
  uint64_t v6 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABE18) {
    sub_10005ABBC(v6);
  }
  uint64_t v7 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABE20) {
    sub_10005ABBC(v7);
  }
  uint64_t v8 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABE28) {
    sub_10005ABBC(v8);
  }
  uint64_t v9 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABE30) {
    sub_10005ABBC(v9);
  }
  uint64_t v10 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABE38) {
    sub_10005ABBC(v10);
  }
  uint64_t v11 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABE40) {
    sub_10005ABBC(v11);
  }
  uint64_t v12 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABE48) {
    sub_10005ABBC(v12);
  }
  uint64_t v13 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABE50) {
    sub_10005ABBC(v13);
  }
  uint64_t v14 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABE58) {
    sub_10005ABBC(v14);
  }
  uint64_t v15 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABE60) {
    sub_10005ABBC(v15);
  }
  uint64_t v16 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABE68) {
    sub_10005ABBC(v16);
  }
  uint64_t v17 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABE70) {
    sub_10005ABBC(v17);
  }
  uint64_t v18 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABE78) {
    sub_10005ABBC(v18);
  }
  uint64_t v19 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABE80) {
    sub_10005ABBC(v19);
  }
  uint64_t v20 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABE88) {
    sub_10005ABBC(v20);
  }
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
}

void sub_10005BD68(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10005BD84(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_1008ABDE8;
  if (qword_1008ABDE8)
  {
    *(void *)(result + 16) = qword_1008ABDE8;
  }
  else
  {
    uint64_t result = sub_10005ABBC(result);
    uint64_t v2 = qword_1008ABDE8;
    v1[2] = qword_1008ABDE8;
    if (!v2)
    {
      uint64_t result = sub_10005ABBC(result);
      uint64_t v2 = qword_1008ABDE8;
    }
  }
  v1[3] = v2;
  uint64_t v3 = qword_1008ABE18;
  if (!qword_1008ABE18)
  {
    uint64_t result = sub_10005ABBC(result);
    uint64_t v3 = qword_1008ABE18;
  }
  v1[4] = v3;
  uint64_t v4 = qword_1008ABE20;
  if (!qword_1008ABE20)
  {
    uint64_t result = sub_10005ABBC(result);
    uint64_t v4 = qword_1008ABE20;
  }
  v1[6] = v4;
  uint64_t v5 = qword_1008ABE00;
  if (qword_1008ABE00)
  {
    v1[8] = qword_1008ABE00;
  }
  else
  {
    uint64_t result = sub_10005ABBC(result);
    uint64_t v5 = qword_1008ABE00;
    v1[8] = qword_1008ABE00;
    if (!v5)
    {
      uint64_t result = sub_10005ABBC(result);
      uint64_t v5 = qword_1008ABE00;
    }
  }
  v1[9] = v5;
  uint64_t v6 = qword_1008ABE10;
  if (!qword_1008ABE10)
  {
    uint64_t result = sub_10005ABBC(result);
    uint64_t v6 = qword_1008ABE10;
  }
  v1[10] = v6;
  return result;
}

uint64_t sub_10005BE4C(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_1008ABDE8;
  if (!qword_1008ABDE8)
  {
    uint64_t result = sub_10005ABBC(result);
    uint64_t v2 = qword_1008ABDE8;
  }
  v1[2] = v2;
  uint64_t v3 = qword_1008ABE08;
  if (qword_1008ABE08)
  {
    v1[3] = qword_1008ABE08;
  }
  else
  {
    uint64_t result = sub_10005ABBC(result);
    uint64_t v3 = qword_1008ABE08;
    v1[3] = qword_1008ABE08;
    if (!v3)
    {
      uint64_t result = sub_10005ABBC(result);
      uint64_t v3 = qword_1008ABE08;
    }
  }
  v1[4] = v3;
  uint64_t v4 = qword_1008ABDF8;
  if (!qword_1008ABDF8)
  {
    uint64_t result = sub_10005ABBC(result);
    uint64_t v4 = qword_1008ABDF8;
  }
  v1[5] = v4;
  uint64_t v5 = qword_1008ABE38;
  if (!qword_1008ABE38)
  {
    uint64_t result = sub_10005ABBC(result);
    uint64_t v5 = qword_1008ABE38;
  }
  v1[7] = v5;
  uint64_t v6 = qword_1008ABE50;
  if (!qword_1008ABE50)
  {
    uint64_t result = sub_10005ABBC(result);
    uint64_t v6 = qword_1008ABE50;
  }
  v1[8] = v6;
  return result;
}

uint64_t sub_10005BEFC(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_1008ABDE8;
  if (!qword_1008ABDE8)
  {
    uint64_t result = sub_10005ABBC(result);
    uint64_t v2 = qword_1008ABDE8;
  }
  v1[2] = v2;
  uint64_t v3 = qword_1008ABE60;
  if (!qword_1008ABE60)
  {
    uint64_t result = sub_10005ABBC(result);
    uint64_t v3 = qword_1008ABE60;
  }
  v1[3] = v3;
  uint64_t v4 = qword_1008ABE08;
  if (!qword_1008ABE08)
  {
    uint64_t result = sub_10005ABBC(result);
    uint64_t v4 = qword_1008ABE08;
  }
  v1[4] = v4;
  uint64_t v5 = qword_1008ABE70;
  if (!qword_1008ABE70)
  {
    uint64_t result = sub_10005ABBC(result);
    uint64_t v5 = qword_1008ABE70;
  }
  v1[5] = v5;
  uint64_t v6 = qword_1008ABE80;
  if (!qword_1008ABE80)
  {
    uint64_t result = sub_10005ABBC(result);
    uint64_t v6 = qword_1008ABE80;
  }
  v1[6] = v6;
  return result;
}

uint64_t sub_10005BF94(uint64_t a1)
{
  *(void *)a1 = off_1008479E0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return a1;
}

void sub_10005BFE0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10005BFF4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 44);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((*(unsigned char *)(a2 + 44) & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 44) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_10:
    uint64_t v8 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 44) |= 2u;
    *(void *)(a1 + 24) = v8;
    if ((*(_DWORD *)(a2 + 44) & 4) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 44) |= 1u;
  *(void *)(a1 + 16) = v7;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_6:
  if ((v4 & 4) != 0)
  {
LABEL_7:
    uint64_t v5 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(void *)(a1 + 32) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10005C0D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10005C0EC(uint64_t a1)
{
  *(void *)a1 = off_1008479E0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10005C140(uint64_t a1)
{
  *(void *)a1 = off_1008479E0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_10005C1A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_10005C1B0()
{
}

void sub_10005C1F0()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10005C214(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 44))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 9) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10005C238(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v9 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v10 = TagFallback & 7;
        if (v10 != 1) {
          goto LABEL_28;
        }
        unint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v14;
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
LABEL_18:
          unint64_t v14 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
            return 0;
          }
          *(void *)(a1 + 24) = v14;
          *(_DWORD *)(a1 + 44) |= 2u;
          uint64_t v12 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v12 < *((void *)this + 2) && *v12 == 25)
          {
            *((void *)this + 1) = v12 + 1;
            goto LABEL_22;
          }
        }
      }
      if (v9 == 2)
      {
        int v10 = TagFallback & 7;
        if (v10 != 1) {
          goto LABEL_28;
        }
        goto LABEL_18;
      }
      if (v9 != 3)
      {
        int v10 = TagFallback & 7;
        goto LABEL_28;
      }
      int v10 = TagFallback & 7;
      if (v10 == 1) {
        break;
      }
LABEL_28:
      if (v10 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
    }
      }
LABEL_22:
    unint64_t v14 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
      return 0;
    }
    *(void *)(a1 + 32) = v14;
    *(_DWORD *)(a1 + 44) |= 4u;
  }
  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_10005C410(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 44);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_12:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
    if ((*(_DWORD *)(v4 + 44) & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
  int v5 = *(_DWORD *)(v4 + 44);
  if ((v5 & 2) != 0) {
    goto LABEL_12;
  }
LABEL_3:
  if ((v5 & 4) != 0) {
LABEL_4:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v4 + 32), a3);
LABEL_5:
  uint64_t v8 = *(void **)(v4 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v8;
  if (v8 && *v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

uint64_t sub_10005C4C0(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_10:
    uint64_t v10 = *(void *)(a1 + 24);
    *(unsigned char *)a2 = 17;
    *(void *)(a2 + 1) = v10;
    a2 += 9;
    if ((*(_DWORD *)(a1 + 44) & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  uint64_t v9 = *(void *)(a1 + 16);
  *(unsigned char *)a2 = 9;
  *(void *)(a2 + 1) = v9;
  a2 += 9;
  int v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_3:
  if ((v3 & 4) != 0)
  {
LABEL_4:
    uint64_t v4 = *(void *)(a1 + 32);
    *(unsigned char *)a2 = 25;
    *(void *)(a2 + 1) = v4;
    a2 += 9;
  }
LABEL_5:
  uint64_t v7 = *(void **)(a1 + 8);
  int v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  unsigned int v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v5, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
}

uint64_t sub_10005C5E8(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 44);
  unsigned int v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0) {
    v4 += 9;
  }
  if ((v3 & 4) != 0) {
    v4 += 9;
  }
  if (*(unsigned char *)(a1 + 44)) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v8 = *(void **)(a1 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v7 = v8;
  if (v8 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
  *(_DWORD *)(a1 + 40) = v5;
  return v5;
}

uint64_t sub_10005C65C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10005BFF4((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10005C730(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10005C748(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10005C7D4()
{
  return 1;
}

uint64_t sub_10005C7DC()
{
  uint64_t v0 = qword_1008A0830;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100059FAC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A06B0;
}

void sub_10005C870(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_10005C884(void *a1)
{
  *a1 = off_100847A90;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_10005C8D0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10005C8E4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    sub_10006F57C(a1 + 16, *(_DWORD *)(a1 + 24) + v4);
    memcpy((void *)(*(void *)(a1 + 16) + 4 * *(int *)(a1 + 24)), *(const void **)(a2 + 16), 4 * *(int *)(a2 + 24));
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10005C9A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10005C9BC(void *a1)
{
  *a1 = off_100847A90;
  if (a1[2]) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10005CA34(void *a1)
{
  sub_10005C9BC(a1);

  operator delete();
}

uint64_t sub_10005CA6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

uint64_t sub_10005CA74(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008ABDF0;
  if (!qword_1008ABDF0)
  {
    sub_10005ABBC(0, a2, a3, a4);
    return qword_1008ABDF0;
  }
  return result;
}

void sub_10005CAA4()
{
}

void sub_10005CAE4()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10005CB08(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  *((_DWORD *)result + 7) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10005CB20(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = a1 + 16;
  unsigned int v7 = a1 + 8;
  while (1)
  {
    while (1)
    {
      uint64_t v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v8;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v8 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      int v10 = TagFallback & 7;
      if ((TagFallback & 0xFFFFFFF8) != 8) {
        break;
      }
      if (v10 != 2)
      {
        if (v10 != 5) {
          break;
        }
        goto LABEL_15;
      }
      uint64_t result = sub_10005CDA4(this, v6);
      if (!result) {
        return result;
      }
      while (1)
      {
        long long v22 = (unsigned char *)*((void *)this + 1);
        char v23 = (unsigned char *)*((void *)this + 2);
        if (v22 >= v23 || *v22 != 13) {
          break;
        }
        *((void *)this + 1) = v22 + 1;
LABEL_15:
        v24[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v24) & 1) == 0) {
          return 0;
        }
        unsigned int v12 = v24[0];
        int v13 = *(_DWORD *)(a1 + 24);
        if (v13 == *(_DWORD *)(a1 + 28))
        {
          sub_10006F57C(v6, v13 + 1);
          int v13 = *(_DWORD *)(a1 + 24);
        }
        uint64_t v14 = *(void *)(a1 + 16);
        int v15 = v13 + 1;
        *(_DWORD *)(a1 + 24) = v13 + 1;
        *(_DWORD *)(v14 + 4 * v13) = v12;
        uint64_t v16 = *((void *)this + 1);
        int v17 = *((_DWORD *)this + 4) - v16;
        if (v17 >= 1)
        {
          signed int v18 = v17 / 5u;
          int v19 = v18 >= *(_DWORD *)(a1 + 28) - v15 ? *(_DWORD *)(a1 + 28) - v15 : v18;
          if (v19 >= 1)
          {
            int v20 = 0;
            while (*(unsigned char *)v16 == 13)
            {
              int v21 = *(_DWORD *)(v16 + 1);
              if (v15 >= *(_DWORD *)(a1 + 28))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v24);
                int v15 = *(_DWORD *)(a1 + 24);
                uint64_t v14 = *(void *)(a1 + 16);
              }
              *(_DWORD *)(a1 + 24) = v15 + 1;
              *(_DWORD *)(v14 + 4 * v15) = v21;
              ++v20;
              v16 += 5;
              ++v15;
              if (v19 == v20)
              {
                int v20 = v19;
                break;
              }
            }
            if (v20) {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 5 * v20);
            }
          }
        }
      }
      if (v22 == v23 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (v10 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
  }
    }
}

void sub_10005CD8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10005CDA4(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a2)
{
  unsigned int v11 = 0;
  int v4 = (char *)*((void *)this + 1);
  if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v11);
    if (!result) {
      return result;
    }
    unsigned int v5 = v11;
  }
  else
  {
    unsigned int v5 = *v4;
    unsigned int v11 = v5;
    *((void *)this + 1) = v4 + 1;
  }
  int v7 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v5);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) < 1)
  {
LABEL_11:
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v7);
    return 1;
  }
  else
  {
    while (1)
    {
      unsigned int v12 = 0;
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v12);
      if (!result) {
        break;
      }
      unsigned int v8 = v12;
      int v9 = *(_DWORD *)(a2 + 8);
      if (v9 == *(_DWORD *)(a2 + 12))
      {
        sub_10006F57C(a2, v9 + 1);
        int v9 = *(_DWORD *)(a2 + 8);
      }
      uint64_t v10 = *(void *)a2;
      *(_DWORD *)(a2 + 8) = v9 + 1;
      *(_DWORD *)(v10 + 4 * v9) = v8;
      if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) <= 0) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

uint64_t sub_10005CEA0(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  if (*(int *)(this + 24) >= 1)
  {
    uint64_t v5 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(*(void *)(v4 + 16) + 4 * v5++), a3);
    while (v5 < *(int *)(v4 + 24));
  }
  unsigned int v8 = *(void **)(v4 + 8);
  int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  uint64_t v6 = v8;
  if (v8 && *v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

uint64_t sub_10005CF3C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  if (*(int *)(a1 + 24) >= 1)
  {
    uint64_t v3 = 0;
    do
    {
      int v4 = *(_DWORD *)(*(void *)(a1 + 16) + 4 * v3);
      *(unsigned char *)a2 = 13;
      *(_DWORD *)(a2 + 1) = v4;
      a2 += 5;
      ++v3;
    }
    while (v3 < *(int *)(a1 + 24));
  }
  int v7 = *(void **)(a1 + 8);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v5, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
}

uint64_t sub_10005CFAC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v5 = *(void **)(a1 + 8);
  uint64_t v3 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v4 = v5;
  uint64_t v6 = (5 * *((_DWORD *)v3 + 4));
  if (v5 && *v4 != v4[1]) {
    uint64_t v6 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v3, a2)
  }
       + v6;
  *(_DWORD *)(a1 + 32) = v6;
  return v6;
}

uint64_t sub_10005CFF8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10005C8E4((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10005D0CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10005D0E4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10005D170()
{
  return 1;
}

uint64_t sub_10005D178()
{
  uint64_t v0 = qword_1008A0830;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100059FAC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A06C0;
}

void sub_10005D20C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_10005D220(void *a1)
{
  *a1 = off_100847B40;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_10005D26C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10005D280(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    sub_10006F628(a1 + 16, *(_DWORD *)(a1 + 24) + v4);
    memcpy((void *)(*(void *)(a1 + 16) + 8 * *(int *)(a1 + 24)), *(const void **)(a2 + 16), 8 * *(int *)(a2 + 24));
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10005D340(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10005D358(void *a1)
{
  *a1 = off_100847B40;
  if (a1[2]) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10005D3D0(void *a1)
{
  sub_10005D358(a1);

  operator delete();
}

uint64_t sub_10005D408(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_10005D410()
{
}

void sub_10005D450()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10005D474(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  *((_DWORD *)result + 7) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10005D48C(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = a1 + 16;
  unsigned int v7 = a1 + 8;
  while (1)
  {
LABEL_2:
    unsigned int v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    int v10 = TagFallback & 7;
    if ((TagFallback & 0xFFFFFFF8) == 8)
    {
      if (v10 == 1)
      {
        while (1)
        {
          v24[0] = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v24) & 1) == 0) {
            return 0;
          }
          unint64_t v12 = v24[0];
          int v13 = *(_DWORD *)(a1 + 24);
          if (v13 == *(_DWORD *)(a1 + 28))
          {
            sub_10006F628(v6, v13 + 1);
            int v13 = *(_DWORD *)(a1 + 24);
          }
          uint64_t v14 = *(void *)(a1 + 16);
          int v15 = v13 + 1;
          *(_DWORD *)(a1 + 24) = v13 + 1;
          *(void *)(v14 + 8 * v13) = v12;
          uint64_t v16 = *((void *)this + 1);
          int v17 = *((_DWORD *)this + 4) - v16;
          if (v17 >= 1)
          {
            signed int v18 = v17 / 9u;
            int v19 = v18 >= *(_DWORD *)(a1 + 28) - v15 ? *(_DWORD *)(a1 + 28) - v15 : v18;
            if (v19 >= 1)
            {
              int v20 = 0;
              while (*(unsigned char *)v16 == 9)
              {
                uint64_t v21 = *(void *)(v16 + 1);
                if (v15 >= *(_DWORD *)(a1 + 28))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v24);
                  int v15 = *(_DWORD *)(a1 + 24);
                  uint64_t v14 = *(void *)(a1 + 16);
                }
                *(_DWORD *)(a1 + 24) = v15 + 1;
                *(void *)(v14 + 8 * v15) = v21;
                ++v20;
                v16 += 9;
                ++v15;
                if (v19 == v20)
                {
                  int v20 = v19;
                  break;
                }
              }
              if (v20) {
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * v20);
              }
            }
          }
LABEL_31:
          long long v22 = (unsigned char *)*((void *)this + 1);
          char v23 = (unsigned char *)*((void *)this + 2);
          if (v22 >= v23 || *v22 != 9)
          {
            if (v22 == v23 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)this + 36) = 1;
              return result;
            }
            goto LABEL_2;
          }
          *((void *)this + 1) = v22 + 1;
        }
      }
      if (v10 == 2) {
        break;
      }
    }
    if (v10 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
  }
    }
  uint64_t result = sub_10005D718(this, v6);
  if (result) {
    goto LABEL_31;
  }
  return result;
}

void sub_10005D700(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10005D718(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a2)
{
  unsigned int v11 = 0;
  int v4 = (char *)*((void *)this + 1);
  if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v11);
    if (!result) {
      return result;
    }
    unsigned int v5 = v11;
  }
  else
  {
    unsigned int v5 = *v4;
    unsigned int v11 = v5;
    *((void *)this + 1) = v4 + 1;
  }
  int v7 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v5);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) < 1)
  {
LABEL_11:
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v7);
    return 1;
  }
  else
  {
    while (1)
    {
      unint64_t v12 = 0;
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12);
      if (!result) {
        break;
      }
      unint64_t v8 = v12;
      int v9 = *(_DWORD *)(a2 + 8);
      if (v9 == *(_DWORD *)(a2 + 12))
      {
        sub_10006F628(a2, v9 + 1);
        int v9 = *(_DWORD *)(a2 + 8);
      }
      uint64_t v10 = *(void *)a2;
      *(_DWORD *)(a2 + 8) = v9 + 1;
      *(void *)(v10 + 8 * v9) = v8;
      if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) <= 0) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

uint64_t sub_10005D814(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  if (*(int *)(this + 24) >= 1)
  {
    uint64_t v5 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(*(void *)(v4 + 16) + 8 * v5++), a3);
    while (v5 < *(int *)(v4 + 24));
  }
  unint64_t v8 = *(void **)(v4 + 8);
  int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  uint64_t v6 = v8;
  if (v8 && *v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

uint64_t sub_10005D8B0(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  if (*(int *)(a1 + 24) >= 1)
  {
    uint64_t v3 = 0;
    do
    {
      uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * v3);
      *(unsigned char *)a2 = 9;
      *(void *)(a2 + 1) = v4;
      a2 += 9;
      ++v3;
    }
    while (v3 < *(int *)(a1 + 24));
  }
  int v7 = *(void **)(a1 + 8);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v5, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
}

uint64_t sub_10005D940(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v5 = *(void **)(a1 + 8);
  uint64_t v3 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v4 = v5;
  uint64_t v6 = (9 * *((_DWORD *)v3 + 4));
  if (v5 && *v4 != v4[1]) {
    uint64_t v6 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v3, a2)
  }
       + v6;
  *(_DWORD *)(a1 + 32) = v6;
  return v6;
}

uint64_t sub_10005D98C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10005D280((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10005DA60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10005DA78(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10005DB04()
{
  return 1;
}

uint64_t sub_10005DB0C()
{
  uint64_t v0 = qword_1008A0830;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100059FAC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A06D0;
}

void sub_10005DBA0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10005DBB4(uint64_t a1)
{
  *(void *)a1 = off_100847BF0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  return a1;
}

void sub_10005DC04(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10005DC18(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), *(_DWORD *)(a2 + 24) + a1[6]);
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 16) + 8 * v4);
      int v6 = a1[7];
      uint64_t v7 = (int)a1[6];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[8])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), v6 + 1);
          int v6 = a1[7];
        }
        a1[7] = v6 + 1;
        sub_10006F6D4();
      }
      uint64_t v8 = *((void *)a1 + 2);
      a1[6] = v7 + 1;
      sub_10005C8E4(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 24));
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10005DD4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10005DD64(uint64_t *a1)
{
  *a1 = (uint64_t)off_100847BF0;
  sub_10006F938(a1 + 2);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10005DDC8(uint64_t *a1)
{
  sub_10005DD64(a1);

  operator delete();
}

uint64_t sub_10005DE00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_10005DE08()
{
}

void sub_10005DE48()
{
}

uint64_t sub_10005DE6C(uint64_t a1)
{
  uint64_t result = sub_10006F8C8(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 8);
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)v3 + 9) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return result;
}

uint64_t sub_10005DEC0(int *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4);
  unsigned int v7 = a1 + 8;
  while (1)
  {
LABEL_2:
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
    }
    if (TagFallback == 10)
    {
      while (1)
      {
        int v10 = a1[7];
        uint64_t v11 = a1[6];
        if ((int)v11 >= v10)
        {
          if (v10 == a1[8])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v10 + 1);
            int v10 = a1[7];
          }
          a1[7] = v10 + 1;
          sub_10006F6D4();
        }
        uint64_t v12 = *((void *)a1 + 2);
        a1[6] = v11 + 1;
        uint64_t v13 = *(void *)(v12 + 8 * v11);
        unsigned int v26 = 0;
        uint64_t v14 = (char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26))return 0; {
        }
          }
        else
        {
          unsigned int v26 = *v14;
          *((void *)this + 1) = v14 + 1;
        }
        int v15 = *((_DWORD *)this + 14);
        int v16 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v15 + 1;
        if (v15 >= v16) {
          return 0;
        }
        int v17 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v26);
        if (!sub_10005CB20(v13, this, v18, v19) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v17);
        int v20 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)this + 14) = v22;
        }
        char v23 = (unsigned char *)*((void *)this + 1);
        long long v24 = (unsigned char *)*((void *)this + 2);
        if (v23 >= v24 || *v23 != 10)
        {
          if (v23 == v24 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((void *)this + 1) = v23 + 1;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_10005E0BC(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(int *)(this + 24) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 16) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 24));
  }
  int v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10005E158(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  if (*((int *)this + 6) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = *(void *)(*((void *)this + 2) + 8 * v5);
      *(unsigned char *)a2 = 10;
      unsigned int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v6 + 32);
      if (v7 > 0x7F)
      {
        uint64_t v8 = (char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, (int)a2 + 1, a3);
      }
      else
      {
        *((unsigned char *)a2 + 1) = (_BYTE)v7;
        uint64_t v8 = (char *)a2 + 2;
      }
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10005CF3C(v6, (uint64_t)v8, a3);
      ++v5;
    }
    while (v5 < *((int *)this + 6));
  }
  uint64_t v11 = (void *)*((void *)this + 1);
  int v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v9 = v11;
  if (!v11 || *v9 == v9[1]) {
    return a2;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v10, a2, a3);
}

uint64_t sub_10005E224(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 24);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005CFAC(*(void *)(*(void *)(a1 + 16) + 8 * v4), a2);
      int v6 = (int)v5;
      if (v5 >= 0x80) {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
      }
      else {
        int v7 = 1;
      }
      uint64_t v3 = (v6 + v3 + v7);
      ++v4;
    }
    while (v4 < *(int *)(a1 + 24));
  }
  uint64_t v8 = *(void **)(a1 + 8);
  if (v8 && *v8 != v8[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  }
  *(_DWORD *)(a1 + 40) = v3;
  return v3;
}

uint64_t sub_10005E2C4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10005DC18(a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10005E398(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10005E3B0(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10005E43C()
{
  return 1;
}

uint64_t sub_10005E444()
{
  uint64_t v0 = qword_1008A0830;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100059FAC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A06E0;
}

void sub_10005E4D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10005E4EC(uint64_t a1)
{
  *(void *)a1 = off_100847CA0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  return a1;
}

void sub_10005E53C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10005E550(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), *(_DWORD *)(a2 + 24) + a1[6]);
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 16) + 8 * v4);
      int v6 = a1[7];
      uint64_t v7 = (int)a1[6];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[8])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), v6 + 1);
          int v6 = a1[7];
        }
        a1[7] = v6 + 1;
        sub_10006F738();
      }
      uint64_t v8 = *((void *)a1 + 2);
      a1[6] = v7 + 1;
      sub_10005D280(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 24));
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10005E684(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10005E69C(uint64_t *a1)
{
  *a1 = (uint64_t)off_100847CA0;
  sub_10006F938(a1 + 2);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10005E700(uint64_t *a1)
{
  sub_10005E69C(a1);

  operator delete();
}

uint64_t sub_10005E738(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

uint64_t sub_10005E740(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008ABE08;
  if (!qword_1008ABE08)
  {
    sub_10005ABBC(0, a2, a3, a4);
    return qword_1008ABE08;
  }
  return result;
}

void sub_10005E770()
{
}

void sub_10005E7B0()
{
}

uint64_t sub_10005E7D4(uint64_t a1)
{
  uint64_t result = sub_10006F8C8(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 8);
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)v3 + 9) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return result;
}

uint64_t sub_10005E828(int *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4);
  unsigned int v7 = a1 + 8;
  while (1)
  {
LABEL_2:
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
    }
    if (TagFallback == 10)
    {
      while (1)
      {
        int v10 = a1[7];
        uint64_t v11 = a1[6];
        if ((int)v11 >= v10)
        {
          if (v10 == a1[8])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v10 + 1);
            int v10 = a1[7];
          }
          a1[7] = v10 + 1;
          sub_10006F738();
        }
        uint64_t v12 = *((void *)a1 + 2);
        a1[6] = v11 + 1;
        uint64_t v13 = *(void *)(v12 + 8 * v11);
        unsigned int v26 = 0;
        uint64_t v14 = (char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26))return 0; {
        }
          }
        else
        {
          unsigned int v26 = *v14;
          *((void *)this + 1) = v14 + 1;
        }
        int v15 = *((_DWORD *)this + 14);
        int v16 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v15 + 1;
        if (v15 >= v16) {
          return 0;
        }
        int v17 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v26);
        if (!sub_10005D48C(v13, this, v18, v19) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v17);
        int v20 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)this + 14) = v22;
        }
        char v23 = (unsigned char *)*((void *)this + 1);
        long long v24 = (unsigned char *)*((void *)this + 2);
        if (v23 >= v24 || *v23 != 10)
        {
          if (v23 == v24 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((void *)this + 1) = v23 + 1;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_10005EA24(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(int *)(this + 24) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 16) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 24));
  }
  int v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10005EAC0(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  if (*((int *)this + 6) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = *(void *)(*((void *)this + 2) + 8 * v5);
      *(unsigned char *)a2 = 10;
      unsigned int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v6 + 32);
      if (v7 > 0x7F)
      {
        uint64_t v8 = (char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, (int)a2 + 1, a3);
      }
      else
      {
        *((unsigned char *)a2 + 1) = (_BYTE)v7;
        uint64_t v8 = (char *)a2 + 2;
      }
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10005D8B0(v6, (uint64_t)v8, a3);
      ++v5;
    }
    while (v5 < *((int *)this + 6));
  }
  uint64_t v11 = (void *)*((void *)this + 1);
  int v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v9 = v11;
  if (!v11 || *v9 == v9[1]) {
    return a2;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v10, a2, a3);
}

uint64_t sub_10005EB8C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 24);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005D940(*(void *)(*(void *)(a1 + 16) + 8 * v4), a2);
      int v6 = (int)v5;
      if (v5 >= 0x80) {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
      }
      else {
        int v7 = 1;
      }
      uint64_t v3 = (v6 + v3 + v7);
      ++v4;
    }
    while (v4 < *(int *)(a1 + 24));
  }
  uint64_t v8 = *(void **)(a1 + 8);
  if (v8 && *v8 != v8[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  }
  *(_DWORD *)(a1 + 40) = v3;
  return v3;
}

uint64_t sub_10005EC2C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10005E550(a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10005ED00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10005ED18(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10005EDA4()
{
  return 1;
}

uint64_t sub_10005EDAC()
{
  uint64_t v0 = qword_1008A0830;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100059FAC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A06F0;
}

void sub_10005EE40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_10005EE54(void *a1)
{
  *a1 = off_100847D50;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_10005EEA0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10005EEB4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      uint64_t v5 = *(void *)(a2 + 16);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(void *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v6 = *(void *)(a2 + 24);
      *(_DWORD *)(a1 + 36) |= 2u;
      *(void *)(a1 + 24) = v6;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10005EF6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10005EF84(uint64_t a1)
{
  *(void *)a1 = off_100847D50;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10005EFD8(uint64_t a1)
{
  *(void *)a1 = off_100847D50;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_10005F040(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_10005F048()
{
}

void sub_10005F088()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10005F0AC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 36))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10005F0CC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  do
  {
    while (1)
    {
      while (1)
      {
        int v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_22;
        }
        unint64_t v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v12;
        *(_DWORD *)(a1 + 36) |= 1u;
        int v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 17)
        {
          *((void *)this + 1) = v10 + 1;
          goto LABEL_16;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        int v9 = TagFallback & 7;
        goto LABEL_22;
      }
      int v9 = TagFallback & 7;
      if (v9 == 1) {
        break;
      }
LABEL_22:
      if (v9 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
    }
      }
LABEL_16:
    unint64_t v12 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
      return 0;
    }
    *(void *)(a1 + 24) = v12;
    *(_DWORD *)(a1 + 36) |= 2u;
  }
  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_10005F244(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 36);
  if (v5)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    int v5 = *(_DWORD *)(v4 + 36);
  }
  if ((v5 & 2) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  }
  uint64_t v8 = *(void **)(v4 + 8);
  int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v8;
  if (v8 && *v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

uint64_t sub_10005F2D0(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 36);
  if (v3)
  {
    uint64_t v4 = *(void *)(a1 + 16);
    *(unsigned char *)a2 = 9;
    *(void *)(a2 + 1) = v4;
    a2 += 9;
    int v3 = *(_DWORD *)(a1 + 36);
  }
  if ((v3 & 2) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    *(unsigned char *)a2 = 17;
    *(void *)(a2 + 1) = v5;
    a2 += 9;
  }
  uint64_t v8 = *(void **)(a1 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v7 = v8;
  if (!v8 || *v7 == v7[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
}

uint64_t sub_10005F398(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 36);
  unsigned int v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0) {
    v4 += 9;
  }
  if (*(unsigned char *)(a1 + 36)) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v8 = *(void **)(a1 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v7 = v8;
  if (v8 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
  *(_DWORD *)(a1 + 32) = v5;
  return v5;
}

uint64_t sub_10005F400(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10005EEB4((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10005F4D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10005F4EC(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10005F578()
{
  return 1;
}

uint64_t sub_10005F580()
{
  uint64_t v0 = qword_1008A0830;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100059FAC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A0700;
}

void sub_10005F614(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10005F628(uint64_t a1)
{
  *(void *)a1 = off_100847E00;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 60) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return a1;
}

void sub_10005F67C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10005F690(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  int v4 = *(_DWORD *)(a2 + 72);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v8 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 72) |= 1u;
    *(void *)(a1 + 16) = v8;
    int v4 = *(_DWORD *)(a2 + 72);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_22;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v9 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 72) |= 2u;
  *(_DWORD *)(a1 + 24) = v9;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v10 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 72) |= 4u;
  *(_DWORD *)(a1 + 28) = v10;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_23:
  int v11 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 72) |= 8u;
  *(_DWORD *)(a1 + 32) = v11;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_25:
    int v13 = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 72) |= 0x20u;
    *(_DWORD *)(a1 + 40) = v13;
    int v4 = *(_DWORD *)(a2 + 72);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_24:
  int v12 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 72) |= 0x10u;
  *(_DWORD *)(a1 + 36) = v12;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x20) != 0) {
    goto LABEL_25;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_26:
  int v14 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 72) |= 0x40u;
  *(_DWORD *)(a1 + 44) = v14;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 72) |= 0x80u;
    *(_DWORD *)(a1 + 48) = v5;
    int v4 = *(_DWORD *)(a2 + 72);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v4 & 0x100) != 0)
  {
    int v15 = *(_DWORD *)(a2 + 52);
    *(_DWORD *)(a1 + 72) |= 0x100u;
    *(_DWORD *)(a1 + 52) = v15;
    int v4 = *(_DWORD *)(a2 + 72);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
LABEL_30:
      int v17 = *(_DWORD *)(a2 + 60);
      *(_DWORD *)(a1 + 72) |= 0x400u;
      *(_DWORD *)(a1 + 60) = v17;
      if ((*(_DWORD *)(a2 + 72) & 0x800) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
      goto LABEL_18;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  int v16 = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 72) |= 0x200u;
  *(_DWORD *)(a1 + 56) = v16;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x400) != 0) {
    goto LABEL_30;
  }
LABEL_17:
  if ((v4 & 0x800) != 0)
  {
LABEL_18:
    int v6 = *(_DWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 72) |= 0x800u;
    *(_DWORD *)(a1 + 64) = v6;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10005F89C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10005F8B4(uint64_t a1)
{
  *(void *)a1 = off_100847E00;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10005F908(uint64_t a1)
{
  *(void *)a1 = off_100847E00;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_10005F970(uint64_t result, int a2)
{
  *(_DWORD *)(result + 68) = a2;
  return result;
}

void sub_10005F978()
{
}

void sub_10005F9B8()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10005F9DC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 72);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(a1 + 60) = 0;
    *(void *)(a1 + 52) = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 16) = 0;
  if (v3) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10005FA18(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unint64_t v43 = (unint64_t *)(a1 + 16);
  unint64_t v44 = (unsigned int *)(a1 + 24);
  id v45 = (unsigned int *)(a1 + 28);
  long long v46 = (unsigned int *)(a1 + 32);
  long long v47 = (unsigned int *)(a1 + 36);
  int v6 = (unsigned int *)(a1 + 40);
  int v7 = (unsigned int *)(a1 + 44);
  uint64_t v8 = (unsigned int *)(a1 + 48);
  int v9 = (unsigned int *)(a1 + 52);
  int v10 = (unsigned int *)(a1 + 56);
  int v11 = (unsigned int *)(a1 + 60);
  int v12 = (unsigned int *)(a1 + 64);
  unsigned int v13 = a1 + 8;
  while (2)
  {
    int v14 = (char *)*((void *)this + 1);
    if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v14;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v14 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        uint64_t v18 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        if ((unint64_t)v18 < v17 && (*v18 & 0x80000000) == 0)
        {
          *unint64_t v43 = *v18;
          int v19 = v18 + 1;
          *((void *)this + 1) = v19;
LABEL_40:
          *(_DWORD *)(a1 + 72) |= 1u;
          if ((unint64_t)v19 < v17 && *v19 == 16)
          {
            int v20 = v19 + 1;
            *((void *)this + 1) = v20;
            goto LABEL_43;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v43);
        if (result)
        {
          int v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
          goto LABEL_40;
        }
        break;
      case 2u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
LABEL_43:
        if ((unint64_t)v20 >= v17 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v44);
          if (!result) {
            return result;
          }
          uint64_t v31 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          *unint64_t v44 = *v20;
          uint64_t v31 = v20 + 1;
          *((void *)this + 1) = v31;
        }
        *(_DWORD *)(a1 + 72) |= 2u;
        if ((unint64_t)v31 >= v17 || *v31 != 24) {
          continue;
        }
        BOOL v21 = v31 + 1;
        *((void *)this + 1) = v21;
LABEL_51:
        if ((unint64_t)v21 >= v17 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v45);
          if (!result) {
            return result;
          }
          long long v32 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          *id v45 = *v21;
          long long v32 = v21 + 1;
          *((void *)this + 1) = v32;
        }
        *(_DWORD *)(a1 + 72) |= 4u;
        if ((unint64_t)v32 >= v17 || *v32 != 32) {
          continue;
        }
        int v22 = v32 + 1;
        *((void *)this + 1) = v22;
LABEL_59:
        if ((unint64_t)v22 >= v17 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v46);
          if (!result) {
            return result;
          }
          uint64_t v33 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v46 = *v22;
          uint64_t v33 = v22 + 1;
          *((void *)this + 1) = v33;
        }
        *(_DWORD *)(a1 + 72) |= 8u;
        if ((unint64_t)v33 >= v17 || *v33 != 40) {
          continue;
        }
        char v23 = v33 + 1;
        *((void *)this + 1) = v23;
LABEL_67:
        if ((unint64_t)v23 >= v17 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v47);
          if (!result) {
            return result;
          }
          long long v34 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          *long long v47 = *v23;
          long long v34 = v23 + 1;
          *((void *)this + 1) = v34;
        }
        *(_DWORD *)(a1 + 72) |= 0x10u;
        if ((unint64_t)v34 >= v17 || *v34 != 48) {
          continue;
        }
        long long v24 = v34 + 1;
        *((void *)this + 1) = v24;
LABEL_75:
        if ((unint64_t)v24 >= v17 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          __int16 v35 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v24;
          __int16 v35 = v24 + 1;
          *((void *)this + 1) = v35;
        }
        *(_DWORD *)(a1 + 72) |= 0x20u;
        if ((unint64_t)v35 >= v17 || *v35 != 56) {
          continue;
        }
        id v25 = v35 + 1;
        *((void *)this + 1) = v25;
LABEL_83:
        if ((unint64_t)v25 >= v17 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          long long v36 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v25;
          long long v36 = v25 + 1;
          *((void *)this + 1) = v36;
        }
        *(_DWORD *)(a1 + 72) |= 0x40u;
        if ((unint64_t)v36 >= v17 || *v36 != 64) {
          continue;
        }
        unsigned int v26 = v36 + 1;
        *((void *)this + 1) = v26;
LABEL_91:
        if ((unint64_t)v26 >= v17 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          std::string v37 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v8 = *v26;
          std::string v37 = v26 + 1;
          *((void *)this + 1) = v37;
        }
        *(_DWORD *)(a1 + 72) |= 0x80u;
        if ((unint64_t)v37 >= v17 || *v37 != 72) {
          continue;
        }
        id v27 = v37 + 1;
        *((void *)this + 1) = v27;
LABEL_99:
        if ((unint64_t)v27 >= v17 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          std::string v38 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          *int v9 = *v27;
          std::string v38 = v27 + 1;
          *((void *)this + 1) = v38;
        }
        *(_DWORD *)(a1 + 72) |= 0x100u;
        if ((unint64_t)v38 >= v17 || *v38 != 80) {
          continue;
        }
        long long v28 = v38 + 1;
        *((void *)this + 1) = v28;
LABEL_107:
        if ((unint64_t)v28 >= v17 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!result) {
            return result;
          }
          CFStringRef v39 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v10 = *v28;
          CFStringRef v39 = v28 + 1;
          *((void *)this + 1) = v39;
        }
        *(_DWORD *)(a1 + 72) |= 0x200u;
        if ((unint64_t)v39 >= v17 || *v39 != 88) {
          continue;
        }
        id v29 = v39 + 1;
        *((void *)this + 1) = v29;
LABEL_115:
        if ((unint64_t)v29 >= v17 || *v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!result) {
            return result;
          }
          unint64_t v40 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          *int v11 = *v29;
          unint64_t v40 = v29 + 1;
          *((void *)this + 1) = v40;
        }
        *(_DWORD *)(a1 + 72) |= 0x400u;
        if ((unint64_t)v40 >= v17 || *v40 != 96) {
          continue;
        }
        long long v30 = v40 + 1;
        *((void *)this + 1) = v30;
LABEL_123:
        if ((unint64_t)v30 >= v17 || *v30 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v12);
          if (!result) {
            return result;
          }
          id v41 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          *int v12 = *v30;
          id v41 = (unsigned __int8 *)(v30 + 1);
          *((void *)this + 1) = v41;
        }
        *(_DWORD *)(a1 + 72) |= 0x800u;
        if (v41 != (unsigned __int8 *)v17 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        BOOL v21 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_51;
      case 4u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        int v22 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_59;
      case 5u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        char v23 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_67;
      case 6u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        long long v24 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_75;
      case 7u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        id v25 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_83;
      case 8u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        unsigned int v26 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_91;
      case 9u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        id v27 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_99;
      case 0xAu:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        long long v28 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_107;
      case 0xBu:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        id v29 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_115;
      case 0xCu:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        long long v30 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_123;
      default:
        int v16 = TagFallback & 7;
LABEL_34:
        if (v16 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v13, a4))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_1000600D8(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 72);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 16), (unint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 72);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_22;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 28), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 32), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 36), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 40), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 44), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 48), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(v5 + 52), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
LABEL_30:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(_DWORD *)(v5 + 60), a2, a4);
    if ((*(_DWORD *)(v5 + 72) & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_DWORD *)(v5 + 56), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x400) != 0) {
    goto LABEL_30;
  }
LABEL_12:
  if ((v6 & 0x800) != 0) {
LABEL_13:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(_DWORD *)(v5 + 64), a2, a4);
LABEL_14:
  int v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100060284(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  int v5 = *((_DWORD *)this + 18);
  if (v5)
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 2);
    *(unsigned char *)a2 = 8;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v6, (unint64_t)a2 + 1, a3);
    int v5 = *((_DWORD *)this + 18);
  }
  if ((v5 & 2) != 0)
  {
    int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    *(unsigned char *)uint64_t v3 = 16;
    if (v7 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v7;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 72) & 4) != 0)
  {
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    *(unsigned char *)uint64_t v3 = 24;
    if (v8 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v8;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 72) & 8) != 0)
  {
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    *(unsigned char *)uint64_t v3 = 32;
    if (v9 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v9;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 72) & 0x10) != 0)
  {
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    *(unsigned char *)uint64_t v3 = 40;
    if (v10 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v10;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 72) & 0x20) != 0)
  {
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    *(unsigned char *)uint64_t v3 = 48;
    if (v11 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v11;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 72) & 0x40) != 0)
  {
    int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    *(unsigned char *)uint64_t v3 = 56;
    if (v12 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v12;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 72) & 0x80) != 0)
  {
    unsigned int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    *(unsigned char *)uint64_t v3 = 64;
    if (v13 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v13;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if (*((unsigned char *)this + 73))
  {
    int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
    *(unsigned char *)uint64_t v3 = 72;
    if (v14 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v14;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 73) & 2) != 0)
  {
    int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    *(unsigned char *)uint64_t v3 = 80;
    if (v15 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v15;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 73) & 4) != 0)
  {
    int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
    *(unsigned char *)uint64_t v3 = 88;
    if (v16 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v16, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v16;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 73) & 8) != 0)
  {
    unint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    *(unsigned char *)uint64_t v3 = 96;
    if (v17 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v17;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  int v20 = (void *)*((void *)this + 1);
  int v19 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v18 = v20;
  if (!v20 || *v18 == v18[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v19, v3, a3);
}

uint64_t sub_100060540(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 72);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_42;
  }
  if (v3)
  {
    uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16), (unint64_t)a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 72);
    if ((v3 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    int v3 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    int v6 = 1;
  }
  uint64_t v4 = (v4 + v6 + 1);
LABEL_11:
  if ((v3 & 4) != 0)
  {
    int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      int v3 = *(_DWORD *)(a1 + 72);
    }
    else
    {
      int v8 = 1;
    }
    uint64_t v4 = (v4 + v8 + 1);
    if ((v3 & 8) == 0)
    {
LABEL_13:
      if ((v3 & 0x10) == 0) {
        goto LABEL_14;
      }
      goto LABEL_26;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_13;
  }
  int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
    int v3 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    int v10 = 1;
  }
  uint64_t v4 = (v4 + v10 + 1);
  if ((v3 & 0x10) == 0)
  {
LABEL_14:
    if ((v3 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_30;
  }
LABEL_26:
  int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    int v3 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    int v12 = 1;
  }
  uint64_t v4 = (v4 + v12 + 1);
  if ((v3 & 0x20) == 0)
  {
LABEL_15:
    if ((v3 & 0x40) == 0) {
      goto LABEL_16;
    }
    goto LABEL_34;
  }
LABEL_30:
  unsigned int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    int v14 = 2;
  }
  uint64_t v4 = (v14 + v4);
  if ((v3 & 0x40) == 0)
  {
LABEL_16:
    if ((v3 & 0x80) == 0) {
      goto LABEL_42;
    }
    goto LABEL_38;
  }
LABEL_34:
  int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
  if (v15 >= 0x80)
  {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    int v16 = 2;
  }
  uint64_t v4 = (v16 + v4);
  if ((v3 & 0x80) != 0)
  {
LABEL_38:
    unint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
    if (v17 >= 0x80)
    {
      int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2)
          + 1;
      int v3 = *(_DWORD *)(a1 + 72);
    }
    else
    {
      int v18 = 2;
    }
    uint64_t v4 = (v18 + v4);
  }
LABEL_42:
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
      if (v19 >= 0x80)
      {
        int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2)
            + 1;
        int v3 = *(_DWORD *)(a1 + 72);
      }
      else
      {
        int v20 = 2;
      }
      uint64_t v4 = (v20 + v4);
      if ((v3 & 0x200) == 0)
      {
LABEL_45:
        if ((v3 & 0x400) == 0) {
          goto LABEL_46;
        }
        goto LABEL_56;
      }
    }
    else if ((v3 & 0x200) == 0)
    {
      goto LABEL_45;
    }
    BOOL v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
    if (v21 >= 0x80)
    {
      int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2)
          + 1;
      int v3 = *(_DWORD *)(a1 + 72);
    }
    else
    {
      int v22 = 2;
    }
    uint64_t v4 = (v22 + v4);
    if ((v3 & 0x400) == 0)
    {
LABEL_46:
      if ((v3 & 0x800) == 0) {
        goto LABEL_64;
      }
LABEL_60:
      id v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
      if (v25 >= 0x80) {
        int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2)
      }
            + 1;
      else {
        int v26 = 2;
      }
      uint64_t v4 = (v26 + v4);
      goto LABEL_64;
    }
LABEL_56:
    char v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
    if (v23 >= 0x80)
    {
      int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2)
          + 1;
      int v3 = *(_DWORD *)(a1 + 72);
    }
    else
    {
      int v24 = 2;
    }
    uint64_t v4 = (v24 + v4);
    if ((v3 & 0x800) == 0) {
      goto LABEL_64;
    }
    goto LABEL_60;
  }
LABEL_64:
  id v27 = *(void **)(a1 + 8);
  if (v27 && *v27 != v27[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 68) = v4;
  return v4;
}

uint64_t sub_1000607A0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10005F690((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100060874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10006088C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100060918()
{
  return 1;
}

uint64_t sub_100060920()
{
  uint64_t v0 = qword_1008A0830;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100059FAC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A0710;
}

void sub_1000609B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000609C8(uint64_t a1)
{
  *(void *)a1 = off_100847EB0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 60) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return a1;
}

void sub_100060A1C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100060A30(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  int v4 = *(_DWORD *)(a2 + 72);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v8 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 72) |= 1u;
    *(void *)(a1 + 16) = v8;
    int v4 = *(_DWORD *)(a2 + 72);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_22;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v9 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 72) |= 2u;
  *(_DWORD *)(a1 + 24) = v9;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v10 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 72) |= 4u;
  *(_DWORD *)(a1 + 28) = v10;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_23:
  int v11 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 72) |= 8u;
  *(_DWORD *)(a1 + 32) = v11;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_25:
    int v13 = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 72) |= 0x20u;
    *(_DWORD *)(a1 + 40) = v13;
    int v4 = *(_DWORD *)(a2 + 72);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_24:
  int v12 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 72) |= 0x10u;
  *(_DWORD *)(a1 + 36) = v12;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x20) != 0) {
    goto LABEL_25;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_26:
  int v14 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 72) |= 0x40u;
  *(_DWORD *)(a1 + 44) = v14;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 72) |= 0x80u;
    *(_DWORD *)(a1 + 48) = v5;
    int v4 = *(_DWORD *)(a2 + 72);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v4 & 0x100) != 0)
  {
    int v15 = *(_DWORD *)(a2 + 52);
    *(_DWORD *)(a1 + 72) |= 0x100u;
    *(_DWORD *)(a1 + 52) = v15;
    int v4 = *(_DWORD *)(a2 + 72);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
LABEL_30:
      int v17 = *(_DWORD *)(a2 + 60);
      *(_DWORD *)(a1 + 72) |= 0x400u;
      *(_DWORD *)(a1 + 60) = v17;
      if ((*(_DWORD *)(a2 + 72) & 0x800) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
      goto LABEL_18;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  int v16 = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 72) |= 0x200u;
  *(_DWORD *)(a1 + 56) = v16;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x400) != 0) {
    goto LABEL_30;
  }
LABEL_17:
  if ((v4 & 0x800) != 0)
  {
LABEL_18:
    int v6 = *(_DWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 72) |= 0x800u;
    *(_DWORD *)(a1 + 64) = v6;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100060C3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100060C54(uint64_t a1)
{
  *(void *)a1 = off_100847EB0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100060CA8(uint64_t a1)
{
  *(void *)a1 = off_100847EB0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100060D10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 68) = a2;
  return result;
}

void sub_100060D18()
{
}

void sub_100060D58()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100060D7C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 72);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(a1 + 60) = 0;
    *(void *)(a1 + 52) = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 16) = 0;
  if (v3) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100060DB8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unint64_t v43 = (unint64_t *)(a1 + 16);
  unint64_t v44 = (unsigned int *)(a1 + 24);
  id v45 = (unsigned int *)(a1 + 28);
  long long v46 = (unsigned int *)(a1 + 32);
  long long v47 = (unsigned int *)(a1 + 36);
  int v6 = (unsigned int *)(a1 + 40);
  int v7 = (unsigned int *)(a1 + 44);
  uint64_t v8 = (unsigned int *)(a1 + 48);
  int v9 = (unsigned int *)(a1 + 52);
  int v10 = (unsigned int *)(a1 + 56);
  int v11 = (unsigned int *)(a1 + 60);
  int v12 = (unsigned int *)(a1 + 64);
  unsigned int v13 = a1 + 8;
  while (2)
  {
    int v14 = (char *)*((void *)this + 1);
    if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v14;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v14 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        if ((unint64_t)v18 < v17 && (*v18 & 0x80000000) == 0)
        {
          *unint64_t v43 = *v18;
          int v19 = v18 + 1;
          *((void *)this + 1) = v19;
LABEL_40:
          *(_DWORD *)(a1 + 72) |= 1u;
          if ((unint64_t)v19 < v17 && *v19 == 16)
          {
            int v20 = v19 + 1;
            *((void *)this + 1) = v20;
            goto LABEL_43;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v43);
        if (result)
        {
          int v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
          goto LABEL_40;
        }
        break;
      case 2u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
LABEL_43:
        if ((unint64_t)v20 >= v17 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v44);
          if (!result) {
            return result;
          }
          uint64_t v31 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          *unint64_t v44 = *v20;
          uint64_t v31 = v20 + 1;
          *((void *)this + 1) = v31;
        }
        *(_DWORD *)(a1 + 72) |= 2u;
        if ((unint64_t)v31 >= v17 || *v31 != 24) {
          continue;
        }
        BOOL v21 = v31 + 1;
        *((void *)this + 1) = v21;
LABEL_51:
        if ((unint64_t)v21 >= v17 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v45);
          if (!result) {
            return result;
          }
          long long v32 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          *id v45 = *v21;
          long long v32 = v21 + 1;
          *((void *)this + 1) = v32;
        }
        *(_DWORD *)(a1 + 72) |= 4u;
        if ((unint64_t)v32 >= v17 || *v32 != 32) {
          continue;
        }
        int v22 = v32 + 1;
        *((void *)this + 1) = v22;
LABEL_59:
        if ((unint64_t)v22 >= v17 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v46);
          if (!result) {
            return result;
          }
          uint64_t v33 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v46 = *v22;
          uint64_t v33 = v22 + 1;
          *((void *)this + 1) = v33;
        }
        *(_DWORD *)(a1 + 72) |= 8u;
        if ((unint64_t)v33 >= v17 || *v33 != 40) {
          continue;
        }
        char v23 = v33 + 1;
        *((void *)this + 1) = v23;
LABEL_67:
        if ((unint64_t)v23 >= v17 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v47);
          if (!result) {
            return result;
          }
          long long v34 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          *long long v47 = *v23;
          long long v34 = v23 + 1;
          *((void *)this + 1) = v34;
        }
        *(_DWORD *)(a1 + 72) |= 0x10u;
        if ((unint64_t)v34 >= v17 || *v34 != 48) {
          continue;
        }
        int v24 = v34 + 1;
        *((void *)this + 1) = v24;
LABEL_75:
        if ((unint64_t)v24 >= v17 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          __int16 v35 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v24;
          __int16 v35 = v24 + 1;
          *((void *)this + 1) = v35;
        }
        *(_DWORD *)(a1 + 72) |= 0x20u;
        if ((unint64_t)v35 >= v17 || *v35 != 56) {
          continue;
        }
        id v25 = v35 + 1;
        *((void *)this + 1) = v25;
LABEL_83:
        if ((unint64_t)v25 >= v17 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          long long v36 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v25;
          long long v36 = v25 + 1;
          *((void *)this + 1) = v36;
        }
        *(_DWORD *)(a1 + 72) |= 0x40u;
        if ((unint64_t)v36 >= v17 || *v36 != 64) {
          continue;
        }
        int v26 = v36 + 1;
        *((void *)this + 1) = v26;
LABEL_91:
        if ((unint64_t)v26 >= v17 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          std::string v37 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v8 = *v26;
          std::string v37 = v26 + 1;
          *((void *)this + 1) = v37;
        }
        *(_DWORD *)(a1 + 72) |= 0x80u;
        if ((unint64_t)v37 >= v17 || *v37 != 72) {
          continue;
        }
        id v27 = v37 + 1;
        *((void *)this + 1) = v27;
LABEL_99:
        if ((unint64_t)v27 >= v17 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          std::string v38 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          *int v9 = *v27;
          std::string v38 = v27 + 1;
          *((void *)this + 1) = v38;
        }
        *(_DWORD *)(a1 + 72) |= 0x100u;
        if ((unint64_t)v38 >= v17 || *v38 != 80) {
          continue;
        }
        long long v28 = v38 + 1;
        *((void *)this + 1) = v28;
LABEL_107:
        if ((unint64_t)v28 >= v17 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!result) {
            return result;
          }
          CFStringRef v39 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v10 = *v28;
          CFStringRef v39 = v28 + 1;
          *((void *)this + 1) = v39;
        }
        *(_DWORD *)(a1 + 72) |= 0x200u;
        if ((unint64_t)v39 >= v17 || *v39 != 88) {
          continue;
        }
        id v29 = v39 + 1;
        *((void *)this + 1) = v29;
LABEL_115:
        if ((unint64_t)v29 >= v17 || *v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!result) {
            return result;
          }
          unint64_t v40 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          *int v11 = *v29;
          unint64_t v40 = v29 + 1;
          *((void *)this + 1) = v40;
        }
        *(_DWORD *)(a1 + 72) |= 0x400u;
        if ((unint64_t)v40 >= v17 || *v40 != 96) {
          continue;
        }
        long long v30 = v40 + 1;
        *((void *)this + 1) = v30;
LABEL_123:
        if ((unint64_t)v30 >= v17 || *v30 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v12);
          if (!result) {
            return result;
          }
          id v41 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          *int v12 = *v30;
          id v41 = (unsigned __int8 *)(v30 + 1);
          *((void *)this + 1) = v41;
        }
        *(_DWORD *)(a1 + 72) |= 0x800u;
        if (v41 != (unsigned __int8 *)v17 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        BOOL v21 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_51;
      case 4u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        int v22 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_59;
      case 5u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        char v23 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_67;
      case 6u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        int v24 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_75;
      case 7u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        id v25 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_83;
      case 8u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        int v26 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_91;
      case 9u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        id v27 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_99;
      case 0xAu:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        long long v28 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_107;
      case 0xBu:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        id v29 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_115;
      case 0xCu:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        long long v30 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_123;
      default:
        int v16 = TagFallback & 7;
LABEL_34:
        if (v16 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v13, a4))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_100061478(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 72);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 16), (unint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 72);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_22;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 28), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 32), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 36), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 40), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 44), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 48), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(v5 + 52), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
LABEL_30:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(_DWORD *)(v5 + 60), a2, a4);
    if ((*(_DWORD *)(v5 + 72) & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_DWORD *)(v5 + 56), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x400) != 0) {
    goto LABEL_30;
  }
LABEL_12:
  if ((v6 & 0x800) != 0) {
LABEL_13:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(_DWORD *)(v5 + 64), a2, a4);
LABEL_14:
  int v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100061624(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  int v5 = *((_DWORD *)this + 18);
  if (v5)
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 2);
    *(unsigned char *)a2 = 8;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v6, (unint64_t)a2 + 1, a3);
    int v5 = *((_DWORD *)this + 18);
  }
  if ((v5 & 2) != 0)
  {
    int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    *(unsigned char *)uint64_t v3 = 16;
    if (v7 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v7;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 72) & 4) != 0)
  {
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    *(unsigned char *)uint64_t v3 = 24;
    if (v8 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v8;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 72) & 8) != 0)
  {
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    *(unsigned char *)uint64_t v3 = 32;
    if (v9 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v9;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 72) & 0x10) != 0)
  {
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    *(unsigned char *)uint64_t v3 = 40;
    if (v10 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v10;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 72) & 0x20) != 0)
  {
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    *(unsigned char *)uint64_t v3 = 48;
    if (v11 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v11;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 72) & 0x40) != 0)
  {
    int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    *(unsigned char *)uint64_t v3 = 56;
    if (v12 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v12;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 72) & 0x80) != 0)
  {
    unsigned int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    *(unsigned char *)uint64_t v3 = 64;
    if (v13 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v13;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if (*((unsigned char *)this + 73))
  {
    int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
    *(unsigned char *)uint64_t v3 = 72;
    if (v14 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v14;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 73) & 2) != 0)
  {
    int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    *(unsigned char *)uint64_t v3 = 80;
    if (v15 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v15;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 73) & 4) != 0)
  {
    int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
    *(unsigned char *)uint64_t v3 = 88;
    if (v16 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v16, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v16;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 73) & 8) != 0)
  {
    unint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    *(unsigned char *)uint64_t v3 = 96;
    if (v17 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v17;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  int v20 = (void *)*((void *)this + 1);
  int v19 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v18 = v20;
  if (!v20 || *v18 == v18[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v19, v3, a3);
}

uint64_t sub_1000618E0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 72);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_42;
  }
  if (v3)
  {
    uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16), (unint64_t)a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 72);
    if ((v3 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    int v3 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    int v6 = 1;
  }
  uint64_t v4 = (v4 + v6 + 1);
LABEL_11:
  if ((v3 & 4) != 0)
  {
    int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      int v3 = *(_DWORD *)(a1 + 72);
    }
    else
    {
      int v8 = 1;
    }
    uint64_t v4 = (v4 + v8 + 1);
    if ((v3 & 8) == 0)
    {
LABEL_13:
      if ((v3 & 0x10) == 0) {
        goto LABEL_14;
      }
      goto LABEL_26;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_13;
  }
  int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
    int v3 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    int v10 = 1;
  }
  uint64_t v4 = (v4 + v10 + 1);
  if ((v3 & 0x10) == 0)
  {
LABEL_14:
    if ((v3 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_30;
  }
LABEL_26:
  int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    int v3 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    int v12 = 1;
  }
  uint64_t v4 = (v4 + v12 + 1);
  if ((v3 & 0x20) == 0)
  {
LABEL_15:
    if ((v3 & 0x40) == 0) {
      goto LABEL_16;
    }
    goto LABEL_34;
  }
LABEL_30:
  unsigned int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    int v14 = 2;
  }
  uint64_t v4 = (v14 + v4);
  if ((v3 & 0x40) == 0)
  {
LABEL_16:
    if ((v3 & 0x80) == 0) {
      goto LABEL_42;
    }
    goto LABEL_38;
  }
LABEL_34:
  int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
  if (v15 >= 0x80)
  {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    int v16 = 2;
  }
  uint64_t v4 = (v16 + v4);
  if ((v3 & 0x80) != 0)
  {
LABEL_38:
    unint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
    if (v17 >= 0x80)
    {
      int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2)
          + 1;
      int v3 = *(_DWORD *)(a1 + 72);
    }
    else
    {
      int v18 = 2;
    }
    uint64_t v4 = (v18 + v4);
  }
LABEL_42:
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
      if (v19 >= 0x80)
      {
        int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2)
            + 1;
        int v3 = *(_DWORD *)(a1 + 72);
      }
      else
      {
        int v20 = 2;
      }
      uint64_t v4 = (v20 + v4);
      if ((v3 & 0x200) == 0)
      {
LABEL_45:
        if ((v3 & 0x400) == 0) {
          goto LABEL_46;
        }
        goto LABEL_56;
      }
    }
    else if ((v3 & 0x200) == 0)
    {
      goto LABEL_45;
    }
    BOOL v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
    if (v21 >= 0x80)
    {
      int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2)
          + 1;
      int v3 = *(_DWORD *)(a1 + 72);
    }
    else
    {
      int v22 = 2;
    }
    uint64_t v4 = (v22 + v4);
    if ((v3 & 0x400) == 0)
    {
LABEL_46:
      if ((v3 & 0x800) == 0) {
        goto LABEL_64;
      }
LABEL_60:
      id v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
      if (v25 >= 0x80) {
        int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2)
      }
            + 1;
      else {
        int v26 = 2;
      }
      uint64_t v4 = (v26 + v4);
      goto LABEL_64;
    }
LABEL_56:
    char v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
    if (v23 >= 0x80)
    {
      int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2)
          + 1;
      int v3 = *(_DWORD *)(a1 + 72);
    }
    else
    {
      int v24 = 2;
    }
    uint64_t v4 = (v24 + v4);
    if ((v3 & 0x800) == 0) {
      goto LABEL_64;
    }
    goto LABEL_60;
  }
LABEL_64:
  id v27 = *(void **)(a1 + 8);
  if (v27 && *v27 != v27[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 68) = v4;
  return v4;
}

uint64_t sub_100061B40(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100060A30((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100061C14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100061C2C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100061CB8()
{
  return 1;
}

uint64_t sub_100061CC0()
{
  uint64_t v0 = qword_1008A0830;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100059FAC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A0720;
}

void sub_100061D54(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100061D68(uint64_t a1)
{
  *(void *)a1 = off_100847F60;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 88) = 0xFFFFFFFFLL;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(_DWORD *)(a1 + 96) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 64) = 0;
  return a1;
}

void sub_100061DD4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100061DE8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v25);
  }
  int v4 = *(_DWORD *)(a2 + 96);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      int v5 = *(_DWORD *)(a2 + 88);
      if ((v5 + 1) >= 6) {
        sub_10040FA9C();
      }
      *(_DWORD *)(a1 + 96) |= 1u;
      *(_DWORD *)(a1 + 88) = v5;
      int v4 = *(_DWORD *)(a2 + 96);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 96) |= 2u;
      uint64_t v6 = *(void *)(a1 + 16);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 16);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_1008ABE28 + 16);
      }
      sub_10005BFF4(v6, v7);
      int v4 = *(_DWORD *)(a2 + 96);
    }
    if ((v4 & 4) != 0)
    {
      *(_DWORD *)(a1 + 96) |= 4u;
      uint64_t v8 = *(void *)(a1 + 24);
      if (!v8) {
        operator new();
      }
      uint64_t v9 = *(void *)(a2 + 24);
      if (!v9) {
        uint64_t v9 = *(void *)(qword_1008ABE28 + 24);
      }
      sub_10005BFF4(v8, v9);
      int v4 = *(_DWORD *)(a2 + 96);
    }
    if ((v4 & 8) != 0)
    {
      *(_DWORD *)(a1 + 96) |= 8u;
      uint64_t v10 = *(void *)(a1 + 32);
      if (!v10) {
        operator new();
      }
      uint64_t v11 = *(void *)(a2 + 32);
      if (!v11) {
        uint64_t v11 = *(void *)(qword_1008ABE28 + 32);
      }
      sub_10005F690(v10, v11);
      int v4 = *(_DWORD *)(a2 + 96);
    }
    if ((v4 & 0x10) != 0)
    {
      int v12 = *(const std::string **)(a2 + 40);
      *(_DWORD *)(a1 + 96) |= 0x10u;
      unsigned int v13 = *(std::string **)(a1 + 40);
      if (v13 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      std::string::operator=(v13, v12);
      int v4 = *(_DWORD *)(a2 + 96);
    }
    if ((v4 & 0x20) != 0)
    {
      *(_DWORD *)(a1 + 96) |= 0x20u;
      uint64_t v14 = *(void *)(a1 + 48);
      if (!v14) {
        operator new();
      }
      uint64_t v15 = *(void *)(a2 + 48);
      if (!v15) {
        uint64_t v15 = *(void *)(qword_1008ABE28 + 48);
      }
      sub_100060A30(v14, v15);
      int v4 = *(_DWORD *)(a2 + 96);
    }
    if ((v4 & 0x40) != 0)
    {
      int v16 = *(const std::string **)(a2 + 56);
      *(_DWORD *)(a1 + 96) |= 0x40u;
      unint64_t v17 = *(std::string **)(a1 + 56);
      if (v17 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      std::string::operator=(v17, v16);
      int v4 = *(_DWORD *)(a2 + 96);
    }
    if ((v4 & 0x80) != 0)
    {
      *(_DWORD *)(a1 + 96) |= 0x80u;
      int v18 = *(_DWORD **)(a1 + 64);
      if (!v18) {
        operator new();
      }
      uint64_t v19 = *(void *)(a2 + 64);
      if (!v19) {
        uint64_t v19 = *(void *)(qword_1008ABE28 + 64);
      }
      sub_10005DC18(v18, v19);
      int v4 = *(_DWORD *)(a2 + 96);
    }
  }
  if ((v4 & 0xFF00) != 0)
  {
    if ((v4 & 0x100) != 0)
    {
      *(_DWORD *)(a1 + 96) |= 0x100u;
      int v20 = *(_DWORD **)(a1 + 72);
      if (!v20) {
        operator new();
      }
      uint64_t v21 = *(void *)(a2 + 72);
      if (!v21) {
        uint64_t v21 = *(void *)(qword_1008ABE28 + 72);
      }
      sub_10005DC18(v20, v21);
      int v4 = *(_DWORD *)(a2 + 96);
    }
    if ((v4 & 0x200) != 0)
    {
      *(_DWORD *)(a1 + 96) |= 0x200u;
      uint64_t v22 = *(void *)(a1 + 80);
      if (!v22) {
        operator new();
      }
      uint64_t v23 = *(void *)(a2 + 80);
      if (!v23) {
        uint64_t v23 = *(void *)(qword_1008ABE28 + 80);
      }
      sub_10005EEB4(v22, v23);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000621DC()
{
}

void sub_10006225C(void *a1)
{
  *a1 = off_100847F60;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_1000622BC(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void *sub_1000622BC(void *result)
{
  int v1 = result;
  uint64_t v2 = result[5];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  uint64_t v4 = result[7];
  if ((_UNKNOWN *)v4 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    operator delete();
  }
  if ((void *)qword_1008ABE28 != result)
  {
    uint64_t v6 = result[2];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = v1[3];
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = v1[4];
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = v1[6];
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
    uint64_t v10 = v1[8];
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    uint64_t v11 = v1[9];
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
    uint64_t result = (void *)v1[10];
    if (result)
    {
      int v12 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v12();
    }
  }
  return result;
}

void sub_1000624C0(void *a1)
{
  sub_10006225C(a1);

  operator delete();
}

uint64_t sub_1000624F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 92) = a2;
  return result;
}

void sub_100062500()
{
}

void sub_100062540()
{
}

uint64_t sub_100062564(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 96);
  if ((_BYTE)v2)
  {
    *(_DWORD *)(this + 88) = -1;
    if ((v2 & 2) != 0)
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(unsigned char *)(this + 44))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
          *(void *)(this + 32) = 0;
        }
        uint64_t v3 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 36) = 0;
        if (v3) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    if ((*(unsigned char *)(v1 + 96) & 4) != 0)
    {
      this = *(void *)(v1 + 24);
      if (this)
      {
        if (*(unsigned char *)(this + 44))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
          *(void *)(this + 32) = 0;
        }
        uint64_t v4 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 36) = 0;
        if (v4) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    int v5 = *(_DWORD *)(v1 + 96);
    if ((v5 & 8) != 0)
    {
      this = *(void *)(v1 + 32);
      if (this)
      {
        this = (uint64_t)sub_10005F9DC(this);
        int v5 = *(_DWORD *)(v1 + 96);
      }
    }
    if ((v5 & 0x10) != 0)
    {
      uint64_t v6 = *(void *)(v1 + 40);
      if ((_UNKNOWN *)v6 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v6 + 23) < 0)
        {
          **(unsigned char **)uint64_t v6 = 0;
          *(void *)(v6 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v6 = 0;
          *(unsigned char *)(v6 + 23) = 0;
        }
      }
    }
    int v7 = *(_DWORD *)(v1 + 96);
    if ((v7 & 0x20) != 0)
    {
      this = *(void *)(v1 + 48);
      if (this)
      {
        this = (uint64_t)sub_100060D7C(this);
        int v7 = *(_DWORD *)(v1 + 96);
      }
    }
    if ((v7 & 0x40) != 0)
    {
      uint64_t v8 = *(void *)(v1 + 56);
      if ((_UNKNOWN *)v8 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v8 + 23) < 0)
        {
          **(unsigned char **)uint64_t v8 = 0;
          *(void *)(v8 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v8 = 0;
          *(unsigned char *)(v8 + 23) = 0;
        }
      }
    }
    int v2 = *(_DWORD *)(v1 + 96);
    if ((v2 & 0x80) != 0)
    {
      this = *(void *)(v1 + 64);
      if (this)
      {
        this = sub_10005DE6C(this);
        int v2 = *(_DWORD *)(v1 + 96);
      }
    }
  }
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      this = *(void *)(v1 + 72);
      if (this)
      {
        this = sub_10005DE6C(this);
        int v2 = *(_DWORD *)(v1 + 96);
      }
    }
    if ((v2 & 0x200) != 0)
    {
      this = *(void *)(v1 + 80);
      if (this)
      {
        if (*(unsigned char *)(this + 36))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
        }
        uint64_t v9 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 28) = 0;
        if (v9) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
  }
  uint64_t v11 = *(void *)(v1 + 8);
  uint64_t v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v10 + 22) = 0;
  if (v11)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v10);
  }
  return this;
}

uint64_t sub_100062714(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (2)
  {
    int v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        unsigned int v86 = 0;
        uint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 < *((void *)this + 2) && (*v10 & 0x80000000) == 0)
        {
          signed int v11 = *v10;
          *((void *)this + 1) = v10 + 1;
          goto LABEL_35;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v86);
        if (result)
        {
          signed int v11 = v86;
LABEL_35:
          if ((v11 + 1) > 5)
          {
            wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 1, v11);
          }
          else
          {
            *(_DWORD *)(a1 + 96) |= 1u;
            *(_DWORD *)(a1 + 88) = v11;
          }
          unsigned int v13 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v13 < *((void *)this + 2) && *v13 == 18)
          {
            *((void *)this + 1) = v13 + 1;
            goto LABEL_40;
          }
          continue;
        }
        break;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_30;
        }
LABEL_40:
        *(_DWORD *)(a1 + 96) |= 2u;
        uint64_t v14 = *(void *)(a1 + 16);
        if (!v14) {
          operator new();
        }
        unsigned int v86 = 0;
        uint64_t v15 = (char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v86))return 0; {
        }
          }
        else
        {
          unsigned int v86 = *v15;
          *((void *)this + 1) = v15 + 1;
        }
        int v16 = *((_DWORD *)this + 14);
        int v17 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v16 + 1;
        if (v16 >= v17) {
          return 0;
        }
        int v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v86);
        if (!sub_10005C238(v14, this, v19, v20) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
        int v21 = *((_DWORD *)this + 14);
        BOOL v22 = __OFSUB__(v21, 1);
        int v23 = v21 - 1;
        if (v23 < 0 == v22) {
          *((_DWORD *)this + 14) = v23;
        }
        int v24 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 != 26) {
          continue;
        }
        *((void *)this + 1) = v24 + 1;
LABEL_54:
        *(_DWORD *)(a1 + 96) |= 4u;
        uint64_t v25 = *(void *)(a1 + 24);
        if (!v25) {
          operator new();
        }
        unsigned int v86 = 0;
        int v26 = (char *)*((void *)this + 1);
        if ((unint64_t)v26 >= *((void *)this + 2) || *v26 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v86))return 0; {
        }
          }
        else
        {
          unsigned int v86 = *v26;
          *((void *)this + 1) = v26 + 1;
        }
        int v27 = *((_DWORD *)this + 14);
        int v28 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v27 + 1;
        if (v27 >= v28) {
          return 0;
        }
        int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v86);
        if (!sub_10005C238(v25, this, v30, v31) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
        int v32 = *((_DWORD *)this + 14);
        BOOL v22 = __OFSUB__(v32, 1);
        int v33 = v32 - 1;
        if (v33 < 0 == v22) {
          *((_DWORD *)this + 14) = v33;
        }
        long long v34 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v34 >= *((void *)this + 2) || *v34 != 34) {
          continue;
        }
        *((void *)this + 1) = v34 + 1;
LABEL_68:
        *(_DWORD *)(a1 + 96) |= 8u;
        uint64_t v35 = *(void *)(a1 + 32);
        if (!v35) {
          operator new();
        }
        unsigned int v86 = 0;
        long long v36 = (char *)*((void *)this + 1);
        if ((unint64_t)v36 >= *((void *)this + 2) || *v36 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v86))return 0; {
        }
          }
        else
        {
          unsigned int v86 = *v36;
          *((void *)this + 1) = v36 + 1;
        }
        int v37 = *((_DWORD *)this + 14);
        int v38 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v37 + 1;
        if (v37 >= v38) {
          return 0;
        }
        int v39 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v86);
        if (!sub_10005FA18(v35, this, v40, v41) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v39);
        int v42 = *((_DWORD *)this + 14);
        BOOL v22 = __OFSUB__(v42, 1);
        int v43 = v42 - 1;
        if (v43 < 0 == v22) {
          *((_DWORD *)this + 14) = v43;
        }
        unint64_t v44 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v44 >= *((void *)this + 2) || *v44 != 42) {
          continue;
        }
        *((void *)this + 1) = v44 + 1;
LABEL_82:
        *(_DWORD *)(a1 + 96) |= 0x10u;
        if (*(_UNKNOWN **)(a1 + 40) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
        if (!result) {
          return result;
        }
        id v45 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v45 >= *((void *)this + 2) || *v45 != 50) {
          continue;
        }
        *((void *)this + 1) = v45 + 1;
LABEL_88:
        *(_DWORD *)(a1 + 96) |= 0x20u;
        uint64_t v46 = *(void *)(a1 + 48);
        if (!v46) {
          operator new();
        }
        unsigned int v86 = 0;
        long long v47 = (char *)*((void *)this + 1);
        if ((unint64_t)v47 >= *((void *)this + 2) || *v47 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v86))return 0; {
        }
          }
        else
        {
          unsigned int v86 = *v47;
          *((void *)this + 1) = v47 + 1;
        }
        int v48 = *((_DWORD *)this + 14);
        int v49 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v48 + 1;
        if (v48 >= v49) {
          return 0;
        }
        int v50 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v86);
        if (!sub_100060DB8(v46, this, v51, v52) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v50);
        int v53 = *((_DWORD *)this + 14);
        BOOL v22 = __OFSUB__(v53, 1);
        int v54 = v53 - 1;
        if (v54 < 0 == v22) {
          *((_DWORD *)this + 14) = v54;
        }
        long long v55 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v55 >= *((void *)this + 2) || *v55 != 58) {
          continue;
        }
        *((void *)this + 1) = v55 + 1;
LABEL_102:
        *(_DWORD *)(a1 + 96) |= 0x40u;
        if (*(_UNKNOWN **)(a1 + 56) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
        if (!result) {
          return result;
        }
        uint64_t v56 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v56 >= *((void *)this + 2) || *v56 != 66) {
          continue;
        }
        *((void *)this + 1) = v56 + 1;
LABEL_108:
        *(_DWORD *)(a1 + 96) |= 0x80u;
        long long v57 = *(int **)(a1 + 64);
        if (!v57) {
          operator new();
        }
        unsigned int v86 = 0;
        int v58 = (char *)*((void *)this + 1);
        if ((unint64_t)v58 >= *((void *)this + 2) || *v58 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v86))return 0; {
        }
          }
        else
        {
          unsigned int v86 = *v58;
          *((void *)this + 1) = v58 + 1;
        }
        int v59 = *((_DWORD *)this + 14);
        int v60 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v59 + 1;
        if (v59 >= v60) {
          return 0;
        }
        int v61 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v86);
        if (!sub_10005DEC0(v57, this, v62, v63) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v61);
        int v64 = *((_DWORD *)this + 14);
        BOOL v22 = __OFSUB__(v64, 1);
        int v65 = v64 - 1;
        if (v65 < 0 == v22) {
          *((_DWORD *)this + 14) = v65;
        }
        uint64_t v66 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v66 >= *((void *)this + 2) || *v66 != 74) {
          continue;
        }
        *((void *)this + 1) = v66 + 1;
LABEL_122:
        *(_DWORD *)(a1 + 96) |= 0x100u;
        uint64_t v67 = *(int **)(a1 + 72);
        if (!v67) {
          operator new();
        }
        unsigned int v86 = 0;
        int64_t v68 = (char *)*((void *)this + 1);
        if ((unint64_t)v68 >= *((void *)this + 2) || *v68 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v86))return 0; {
        }
          }
        else
        {
          unsigned int v86 = *v68;
          *((void *)this + 1) = v68 + 1;
        }
        int v69 = *((_DWORD *)this + 14);
        int v70 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v69 + 1;
        if (v69 >= v70) {
          return 0;
        }
        int v71 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v86);
        if (!sub_10005DEC0(v67, this, v72, v73) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v71);
        int v74 = *((_DWORD *)this + 14);
        BOOL v22 = __OFSUB__(v74, 1);
        int v75 = v74 - 1;
        if (v75 < 0 == v22) {
          *((_DWORD *)this + 14) = v75;
        }
        unint64_t v76 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v76 >= *((void *)this + 2) || *v76 != 82) {
          continue;
        }
        *((void *)this + 1) = v76 + 1;
LABEL_136:
        *(_DWORD *)(a1 + 96) |= 0x200u;
        uint64_t v77 = *(void *)(a1 + 80);
        if (!v77) {
          operator new();
        }
        unsigned int v86 = 0;
        long long v78 = (char *)*((void *)this + 1);
        if ((unint64_t)v78 >= *((void *)this + 2) || *v78 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v86))return 0; {
        }
          }
        else
        {
          unsigned int v86 = *v78;
          *((void *)this + 1) = v78 + 1;
        }
        int v79 = *((_DWORD *)this + 14);
        int v80 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v79 + 1;
        if (v79 >= v80) {
          return 0;
        }
        int v81 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v86);
        if (!sub_10005F0CC(v77, this, v82, v83) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v81);
        int v84 = *((_DWORD *)this + 14);
        BOOL v22 = __OFSUB__(v84, 1);
        int v85 = v84 - 1;
        if (v85 < 0 == v22) {
          *((_DWORD *)this + 14) = v85;
        }
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_54;
        }
        goto LABEL_30;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_68;
        }
        goto LABEL_30;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_82;
        }
        goto LABEL_30;
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_88;
        }
        goto LABEL_30;
      case 7u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_102;
        }
        goto LABEL_30;
      case 8u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_108;
        }
        goto LABEL_30;
      case 9u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_122;
        }
        goto LABEL_30;
      case 0xAu:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_30;
        }
        goto LABEL_136;
      default:
        int v9 = TagFallback & 7;
LABEL_30:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
    return result;
  }
}

void sub_100063080()
{
}

uint64_t sub_100063114(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 96);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 88), (int)a2, a4);
    int v6 = *(_DWORD *)(v5 + 96);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1008ABE28 + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_16:
  uint64_t v8 = *(void *)(v5 + 24);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1008ABE28 + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_19:
  uint64_t v9 = *(void *)(v5 + 32);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_1008ABE28 + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_23:
  uint64_t v10 = *(void *)(v5 + 48);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_1008ABE28 + 48);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_30;
  }
LABEL_27:
  uint64_t v11 = *(void *)(v5 + 64);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_1008ABE28 + 64);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v11, a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_36;
    }
    goto LABEL_33;
  }
LABEL_30:
  uint64_t v12 = *(void *)(v5 + 72);
  if (!v12) {
    uint64_t v12 = *(void *)(qword_1008ABE28 + 72);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v12, a2, a4);
  if ((*(_DWORD *)(v5 + 96) & 0x200) != 0)
  {
LABEL_33:
    uint64_t v13 = *(void *)(v5 + 80);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_1008ABE28 + 80);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v13, a2, a4);
  }
LABEL_36:
  int v16 = *(void **)(v5 + 8);
  uint64_t v15 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v14 = v16;
  if (v16 && *v14 != v14[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v15, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000632F8(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  if (*((unsigned char *)this + 96))
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 22);
    *(unsigned char *)a2 = 8;
    uint64_t v7 = (char *)a2 + 1;
    if ((v6 & 0x80000000) != 0)
    {
      uint64_t v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v6, (unint64_t)v7, a3);
    }
    else
    {
      if (v6 <= 0x7F)
      {
        *((unsigned char *)v4 + 1) = (_BYTE)v6;
        uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
        goto LABEL_8;
      }
      uint64_t v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, v7, a3);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v8;
  }
LABEL_8:
  int v9 = *((_DWORD *)this + 24);
  if ((v9 & 2) != 0)
  {
    uint64_t v10 = *((void *)this + 2);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_1008ABE28 + 16);
    }
    *(unsigned char *)uint64_t v4 = 18;
    uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v10 + 40);
    if (v11 > 0x7F)
    {
      uint64_t v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v11;
      uint64_t v12 = (uint64_t)v4 + 2;
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10005C4C0(v10, v12, a3);
    int v9 = *((_DWORD *)this + 24);
    if ((v9 & 4) == 0)
    {
LABEL_10:
      if ((v9 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_30;
    }
  }
  else if ((v9 & 4) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v13 = *((void *)this + 3);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_1008ABE28 + 24);
  }
  *(unsigned char *)uint64_t v4 = 26;
  uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v13 + 40);
  if (v14 > 0x7F)
  {
    uint64_t v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v14;
    uint64_t v15 = (uint64_t)v4 + 2;
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10005C4C0(v13, v15, a3);
  int v9 = *((_DWORD *)this + 24);
  if ((v9 & 8) == 0)
  {
LABEL_11:
    if ((v9 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_36;
  }
LABEL_30:
  int v16 = (unsigned int *)*((void *)this + 4);
  if (!v16) {
    int v16 = *(unsigned int **)(qword_1008ABE28 + 32);
  }
  *(unsigned char *)uint64_t v4 = 34;
  int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16[17];
  if (v17 > 0x7F)
  {
    int v18 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v17;
    int v18 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  uint64_t v4 = sub_100060284((wireless_diagnostics::google::protobuf::internal::WireFormat *)v16, v18, a3);
  int v9 = *((_DWORD *)this + 24);
  if ((v9 & 0x10) == 0)
  {
LABEL_12:
    if ((v9 & 0x20) == 0) {
      goto LABEL_13;
    }
    goto LABEL_49;
  }
LABEL_36:
  uint64_t v19 = *((void *)this + 5);
  *(unsigned char *)uint64_t v4 = 42;
  if (*(char *)(v19 + 23) < 0) {
    int v20 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v19 + 8);
  }
  else {
    int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v19 + 23);
  }
  if (v20 > 0x7F)
  {
    int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v20, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v20;
    int v21 = v4 + 2;
  }
  int v22 = *(char *)(v19 + 23);
  if (v22 >= 0) {
    int v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v19;
  }
  else {
    int v23 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v19;
  }
  if (v22 >= 0) {
    int v24 = (const void *)*(unsigned __int8 *)(v19 + 23);
  }
  else {
    int v24 = (const void *)*(unsigned int *)(v19 + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v23, v24, v21, a4);
  int v9 = *((_DWORD *)this + 24);
  if ((v9 & 0x20) == 0)
  {
LABEL_13:
    if ((v9 & 0x40) == 0) {
      goto LABEL_14;
    }
    goto LABEL_55;
  }
LABEL_49:
  uint64_t v25 = (unsigned int *)*((void *)this + 6);
  if (!v25) {
    uint64_t v25 = *(unsigned int **)(qword_1008ABE28 + 48);
  }
  *(unsigned char *)uint64_t v4 = 50;
  int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v25[17];
  if (v26 > 0x7F)
  {
    int v27 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v26, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v26;
    int v27 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  uint64_t v4 = sub_100061624((wireless_diagnostics::google::protobuf::internal::WireFormat *)v25, v27, a3);
  int v9 = *((_DWORD *)this + 24);
  if ((v9 & 0x40) == 0)
  {
LABEL_14:
    if ((v9 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_68;
  }
LABEL_55:
  uint64_t v28 = *((void *)this + 7);
  *(unsigned char *)uint64_t v4 = 58;
  if (*(char *)(v28 + 23) < 0) {
    int v29 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v28 + 8);
  }
  else {
    int v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v28 + 23);
  }
  if (v29 > 0x7F)
  {
    int v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v29, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v29;
    int v30 = v4 + 2;
  }
  int v31 = *(char *)(v28 + 23);
  if (v31 >= 0) {
    int v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v28;
  }
  else {
    int v32 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v28;
  }
  if (v31 >= 0) {
    int v33 = (const void *)*(unsigned __int8 *)(v28 + 23);
  }
  else {
    int v33 = (const void *)*(unsigned int *)(v28 + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v32, v33, v30, a4);
  int v9 = *((_DWORD *)this + 24);
  if ((v9 & 0x80) == 0)
  {
LABEL_15:
    if ((v9 & 0x100) == 0) {
      goto LABEL_16;
    }
    goto LABEL_74;
  }
LABEL_68:
  long long v34 = (unsigned int *)*((void *)this + 8);
  if (!v34) {
    long long v34 = *(unsigned int **)(qword_1008ABE28 + 64);
  }
  *(unsigned char *)uint64_t v4 = 66;
  uint64_t v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v34[10];
  if (v35 > 0x7F)
  {
    long long v36 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v35, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v35;
    long long v36 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  uint64_t v4 = sub_10005E158((wireless_diagnostics::google::protobuf::internal::WireFormat *)v34, v36, a3);
  int v9 = *((_DWORD *)this + 24);
  if ((v9 & 0x100) == 0)
  {
LABEL_16:
    if ((v9 & 0x200) == 0) {
      goto LABEL_86;
    }
    goto LABEL_80;
  }
LABEL_74:
  int v37 = (unsigned int *)*((void *)this + 9);
  if (!v37) {
    int v37 = *(unsigned int **)(qword_1008ABE28 + 72);
  }
  *(unsigned char *)uint64_t v4 = 74;
  int v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v37[10];
  if (v38 > 0x7F)
  {
    int v39 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v38, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v38;
    int v39 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  uint64_t v4 = sub_10005E158((wireless_diagnostics::google::protobuf::internal::WireFormat *)v37, v39, a3);
  if ((*((_DWORD *)this + 24) & 0x200) != 0)
  {
LABEL_80:
    uint64_t v40 = *((void *)this + 10);
    if (!v40) {
      uint64_t v40 = *(void *)(qword_1008ABE28 + 80);
    }
    *(unsigned char *)uint64_t v4 = 82;
    id v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v40 + 32);
    if (v41 > 0x7F)
    {
      uint64_t v42 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v41, (int)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v41;
      uint64_t v42 = (uint64_t)v4 + 2;
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10005F2D0(v40, v42, a3);
  }
LABEL_86:
  id v45 = (void *)*((void *)this + 1);
  unint64_t v44 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v43 = v45;
  if (!v45 || *v43 == v43[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v44, v4, a3);
}

uint64_t sub_1000636E0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 96);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_67;
  }
  if (v3)
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 88);
    if ((v5 & 0x80000000) != 0)
    {
      int v6 = 10;
    }
    else if (v5 >= 0x80)
    {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
      int v3 = *(_DWORD *)(a1 + 96);
    }
    else
    {
      int v6 = 1;
    }
    uint64_t v4 = (v6 + 1);
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
  }
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1008ABE28 + 16);
  }
  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005C5E8(v7, a2);
  int v9 = (int)v8;
  if (v8 >= 0x80) {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
  }
  else {
    int v10 = 1;
  }
  uint64_t v4 = (v4 + v9 + v10 + 1);
  int v3 = *(_DWORD *)(a1 + 96);
LABEL_18:
  if ((v3 & 4) != 0)
  {
    uint64_t v11 = *(void *)(a1 + 24);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_1008ABE28 + 24);
    }
    uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005C5E8(v11, a2);
    int v13 = (int)v12;
    if (v12 >= 0x80) {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
    }
    else {
      int v14 = 1;
    }
    uint64_t v4 = (v4 + v13 + v14 + 1);
    int v3 = *(_DWORD *)(a1 + 96);
    if ((v3 & 8) == 0)
    {
LABEL_20:
      if ((v3 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_37;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_20;
  }
  uint64_t v15 = *(void *)(a1 + 32);
  if (!v15) {
    uint64_t v15 = *(void *)(qword_1008ABE28 + 32);
  }
  int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100060540(v15, a2);
  int v17 = (int)v16;
  if (v16 >= 0x80) {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
  }
  else {
    int v18 = 1;
  }
  uint64_t v4 = (v4 + v17 + v18 + 1);
  int v3 = *(_DWORD *)(a1 + 96);
  if ((v3 & 0x10) == 0)
  {
LABEL_21:
    if ((v3 & 0x20) == 0) {
      goto LABEL_22;
    }
    goto LABEL_46;
  }
LABEL_37:
  uint64_t v19 = *(void *)(a1 + 40);
  int v20 = *(unsigned __int8 *)(v19 + 23);
  char v21 = v20;
  uint64_t v22 = *(void *)(v19 + 8);
  if ((v20 & 0x80u) == 0) {
    unint64_t v23 = *(unsigned __int8 *)(v19 + 23);
  }
  else {
    unint64_t v23 = v22;
  }
  if (v23 >= 0x80)
  {
    int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v23, a2);
    int v20 = *(unsigned __int8 *)(v19 + 23);
    uint64_t v22 = *(void *)(v19 + 8);
    int v3 = *(_DWORD *)(a1 + 96);
    char v21 = *(unsigned char *)(v19 + 23);
  }
  else
  {
    int v24 = 1;
  }
  if (v21 < 0) {
    int v20 = v22;
  }
  uint64_t v4 = (v4 + v24 + v20 + 1);
  if ((v3 & 0x20) == 0)
  {
LABEL_22:
    if ((v3 & 0x40) == 0) {
      goto LABEL_23;
    }
    goto LABEL_52;
  }
LABEL_46:
  uint64_t v25 = *(void *)(a1 + 48);
  if (!v25) {
    uint64_t v25 = *(void *)(qword_1008ABE28 + 48);
  }
  int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000618E0(v25, a2);
  int v27 = (int)v26;
  if (v26 >= 0x80) {
    int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26, a2);
  }
  else {
    int v28 = 1;
  }
  uint64_t v4 = (v4 + v27 + v28 + 1);
  int v3 = *(_DWORD *)(a1 + 96);
  if ((v3 & 0x40) == 0)
  {
LABEL_23:
    if ((v3 & 0x80) == 0) {
      goto LABEL_67;
    }
    goto LABEL_61;
  }
LABEL_52:
  uint64_t v29 = *(void *)(a1 + 56);
  int v30 = *(unsigned __int8 *)(v29 + 23);
  char v31 = v30;
  uint64_t v32 = *(void *)(v29 + 8);
  if ((v30 & 0x80u) == 0) {
    unint64_t v33 = *(unsigned __int8 *)(v29 + 23);
  }
  else {
    unint64_t v33 = v32;
  }
  if (v33 >= 0x80)
  {
    int v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v33, a2);
    int v30 = *(unsigned __int8 *)(v29 + 23);
    uint64_t v32 = *(void *)(v29 + 8);
    int v3 = *(_DWORD *)(a1 + 96);
    char v31 = *(unsigned char *)(v29 + 23);
  }
  else
  {
    int v34 = 1;
  }
  if (v31 < 0) {
    int v30 = v32;
  }
  uint64_t v4 = (v4 + v34 + v30 + 1);
  if ((v3 & 0x80) != 0)
  {
LABEL_61:
    uint64_t v35 = *(void *)(a1 + 64);
    if (!v35) {
      uint64_t v35 = *(void *)(qword_1008ABE28 + 64);
    }
    long long v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005E224(v35, a2);
    int v37 = (int)v36;
    if (v36 >= 0x80) {
      int v38 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v36, a2);
    }
    else {
      int v38 = 1;
    }
    uint64_t v4 = (v4 + v37 + v38 + 1);
    int v3 = *(_DWORD *)(a1 + 96);
  }
LABEL_67:
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      uint64_t v39 = *(void *)(a1 + 72);
      if (!v39) {
        uint64_t v39 = *(void *)(qword_1008ABE28 + 72);
      }
      uint64_t v40 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005E224(v39, a2);
      int v41 = (int)v40;
      if (v40 >= 0x80) {
        int v42 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v40, a2);
      }
      else {
        int v42 = 1;
      }
      uint64_t v4 = (v4 + v41 + v42 + 1);
      int v3 = *(_DWORD *)(a1 + 96);
    }
    if ((v3 & 0x200) != 0)
    {
      uint64_t v43 = *(void *)(a1 + 80);
      if (!v43) {
        uint64_t v43 = *(void *)(qword_1008ABE28 + 80);
      }
      unint64_t v44 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005F398(v43, a2);
      int v45 = (int)v44;
      if (v44 >= 0x80) {
        int v46 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v44, a2);
      }
      else {
        int v46 = 1;
      }
      uint64_t v4 = (v4 + v45 + v46 + 1);
    }
  }
  long long v47 = *(void **)(a1 + 8);
  if (v47 && *v47 != v47[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 92) = v4;
  return v4;
}

uint64_t sub_100063A44(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100061DE8((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100063B18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100063B30(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100063BBC()
{
  return 1;
}

uint64_t sub_100063BC4()
{
  uint64_t v0 = qword_1008A0830;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100059FAC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A0730;
}

void sub_100063C58(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_100063C6C(void *a1)
{
  *a1 = off_100848010;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_100063CB8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100063CCC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      uint64_t v5 = *(void *)(a2 + 16);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(void *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v6 = *(void *)(a2 + 24);
      *(_DWORD *)(a1 + 36) |= 2u;
      *(void *)(a1 + 24) = v6;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100063D84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100063D9C(uint64_t a1)
{
  *(void *)a1 = off_100848010;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100063DF0(uint64_t a1)
{
  *(void *)a1 = off_100848010;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100063E58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_100063E60()
{
}

void sub_100063EA0()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100063EC4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 36))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100063EE4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_22;
        }
        unint64_t v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v12;
        *(_DWORD *)(a1 + 36) |= 1u;
        int v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 17)
        {
          *((void *)this + 1) = v10 + 1;
          goto LABEL_16;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        int v9 = TagFallback & 7;
        goto LABEL_22;
      }
      int v9 = TagFallback & 7;
      if (v9 == 1) {
        break;
      }
LABEL_22:
      if (v9 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
    }
      }
LABEL_16:
    unint64_t v12 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
      return 0;
    }
    *(void *)(a1 + 24) = v12;
    *(_DWORD *)(a1 + 36) |= 2u;
  }
  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_10006405C(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 36);
  if (v5)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    int v5 = *(_DWORD *)(v4 + 36);
  }
  if ((v5 & 2) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  }
  uint64_t v8 = *(void **)(v4 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v8;
  if (v8 && *v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

uint64_t sub_1000640E8(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 36);
  if (v3)
  {
    uint64_t v4 = *(void *)(a1 + 16);
    *(unsigned char *)a2 = 9;
    *(void *)(a2 + 1) = v4;
    a2 += 9;
    int v3 = *(_DWORD *)(a1 + 36);
  }
  if ((v3 & 2) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    *(unsigned char *)a2 = 17;
    *(void *)(a2 + 1) = v5;
    a2 += 9;
  }
  uint64_t v8 = *(void **)(a1 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v7 = v8;
  if (!v8 || *v7 == v7[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
}

uint64_t sub_1000641B0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 36);
  unsigned int v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0) {
    v4 += 9;
  }
  if (*(unsigned char *)(a1 + 36)) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v8 = *(void **)(a1 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v7 = v8;
  if (v8 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
  *(_DWORD *)(a1 + 32) = v5;
  return v5;
}

uint64_t sub_100064218(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100063CCC((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1000642EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100064304(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100064390()
{
  return 1;
}

uint64_t sub_100064398()
{
  uint64_t v0 = qword_1008A0830;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100059FAC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A0740;
}

void sub_10006442C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100064440(uint64_t a1)
{
  *(void *)a1 = off_1008480C0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return a1;
}

void sub_10006448C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000644A0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 44);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 44))
    {
      *(_DWORD *)(a1 + 44) |= 1u;
      uint64_t v5 = *(void *)(a1 + 16);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 16);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_1008ABE38 + 16);
      }
      sub_100063CCC(v5, v6);
      int v4 = *(_DWORD *)(a2 + 44);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v7 = *(void *)(a2 + 24);
      *(_DWORD *)(a1 + 44) |= 2u;
      *(void *)(a1 + 24) = v7;
      int v4 = *(_DWORD *)(a2 + 44);
    }
    if ((v4 & 4) != 0)
    {
      *(_DWORD *)(a1 + 44) |= 4u;
      uint64_t v8 = *(void *)(a1 + 32);
      if (!v8) {
        operator new();
      }
      uint64_t v9 = *(void *)(a2 + 32);
      if (!v9) {
        uint64_t v9 = *(void *)(qword_1008ABE38 + 32);
      }
      sub_10005BFF4(v8, v9);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000645FC()
{
}

void sub_100064648(void *a1)
{
  *a1 = off_1008480C0;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_1000646A8(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void *sub_1000646A8(void *result)
{
  if ((void *)qword_1008ABE38 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t result = (void *)v1[4];
    if (result)
    {
      char v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_10006474C(void *a1)
{
  sub_100064648(a1);

  operator delete();
}

uint64_t sub_100064784(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_10006478C()
{
}

void sub_1000647CC()
{
}

uint64_t sub_1000647F0(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 44))
  {
    if (*(unsigned char *)(this + 44))
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(unsigned char *)(this + 36))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
        }
        uint64_t v2 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 28) = 0;
        if (v2) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    *(void *)(v1 + 24) = 0;
    if ((*(unsigned char *)(v1 + 44) & 4) != 0)
    {
      this = *(void *)(v1 + 32);
      if (this)
      {
        if (*(unsigned char *)(this + 44))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
          *(void *)(this + 32) = 0;
        }
        uint64_t v3 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 36) = 0;
        if (v3) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
  }
  uint64_t v5 = *(void *)(v1 + 8);
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 9) = 0;
  if (v5)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return this;
}

uint64_t sub_1000648A0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v9 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_21;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v12 = *(void *)(a1 + 16);
        if (!v12) {
          operator new();
        }
        v34[0] = 0;
        int v13 = (char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v34))return 0; {
        }
          }
        else
        {
          v34[0] = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        int v14 = *((_DWORD *)this + 14);
        int v15 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v14 + 1;
        if (v14 >= v15) {
          return 0;
        }
        int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34[0]);
        if (!sub_100063EE4(v12, this, v17, v18) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
        int v19 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v19, 1);
        int v21 = v19 - 1;
        if (v21 < 0 == v20) {
          *((_DWORD *)this + 14) = v21;
        }
        uint64_t v22 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v22 < *((void *)this + 2) && *v22 == 17)
        {
          *((void *)this + 1) = v22 + 1;
          goto LABEL_33;
        }
      }
      if (v9 != 2) {
        break;
      }
      int v10 = TagFallback & 7;
      if (v10 != 1) {
        goto LABEL_21;
      }
LABEL_33:
      *(void *)int v34 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v34) & 1) == 0)return 0; {
      *(void *)(a1 + 24) = *(void *)v34;
      }
      int v11 = *(_DWORD *)(a1 + 44) | 2;
      *(_DWORD *)(a1 + 44) = v11;
      unint64_t v23 = (unsigned char *)*((void *)this + 1);
      if ((unint64_t)v23 < *((void *)this + 2) && *v23 == 26)
      {
        *((void *)this + 1) = v23 + 1;
LABEL_37:
        *(_DWORD *)(a1 + 44) = v11 | 4;
        uint64_t v24 = *(void *)(a1 + 32);
        if (!v24) {
          operator new();
        }
        v34[0] = 0;
        uint64_t v25 = (char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v34))return 0; {
        }
          }
        else
        {
          v34[0] = *v25;
          *((void *)this + 1) = v25 + 1;
        }
        int v26 = *((_DWORD *)this + 14);
        int v27 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v26 + 1;
        if (v26 >= v27) {
          return 0;
        }
        int v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34[0]);
        if (!sub_10005C238(v24, this, v29, v30) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
        int v31 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v31, 1);
        int v32 = v31 - 1;
        if (v32 < 0 == v20) {
          *((_DWORD *)this + 14) = v32;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v9 == 3)
    {
      int v10 = TagFallback & 7;
      if (v10 == 2)
      {
        int v11 = *(_DWORD *)(a1 + 44);
        goto LABEL_37;
      }
    }
    else
    {
      int v10 = TagFallback & 7;
    }
LABEL_21:
    if (v10 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
  }
    }
}

void sub_100064BC8()
{
}

uint64_t sub_100064C00(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 44);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
    if ((*(_DWORD *)(v5 + 44) & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v7 = *(void *)(this + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1008ABE38 + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    goto LABEL_12;
  }
LABEL_9:
  uint64_t v8 = *(void *)(v5 + 32);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1008ABE38 + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
LABEL_12:
  int v11 = *(void **)(v5 + 8);
  int v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v9 = v11;
  if (v11 && *v9 != v9[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v10, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100064CD0(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  int v5 = *((_DWORD *)this + 11);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_11:
    uint64_t v10 = *((void *)this + 3);
    *(unsigned char *)uint64_t v3 = 17;
    *(void *)((char *)v3 + 1) = v10;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
    if ((*((_DWORD *)this + 11) & 4) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v6 = *((void *)this + 2);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_1008ABE38 + 16);
  }
  *(unsigned char *)a2 = 10;
  unsigned int v7 = a2 + 1;
  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v6 + 32);
  if (v8 > 0x7F)
  {
    uint64_t v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v7, a3);
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v8;
    uint64_t v9 = (uint64_t)v3 + 2;
  }
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000640E8(v6, v9, a3);
  int v5 = *((_DWORD *)this + 11);
  if ((v5 & 2) != 0) {
    goto LABEL_11;
  }
LABEL_3:
  if ((v5 & 4) == 0) {
    goto LABEL_18;
  }
LABEL_12:
  uint64_t v11 = *((void *)this + 4);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_1008ABE38 + 32);
  }
  *(unsigned char *)uint64_t v3 = 26;
  uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v11 + 40);
  if (v12 > 0x7F)
  {
    uint64_t v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)v3 + 1, a3);
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v12;
    uint64_t v13 = (uint64_t)v3 + 2;
  }
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10005C4C0(v11, v13, a3);
LABEL_18:
  int v16 = (void *)*((void *)this + 1);
  int v15 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v14 = v16;
  if (!v16 || *v14 == v14[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v15, v3, a3);
}

uint64_t sub_100064E38(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 44);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 44))
    {
      uint64_t v6 = *(void *)(a1 + 16);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_1008ABE38 + 16);
      }
      unsigned int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000641B0(v6, a2);
      int v8 = (int)v7;
      if (v7 >= 0x80) {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      }
      else {
        int v9 = 1;
      }
      unsigned int v4 = v8 + v9 + 1;
      int v3 = *(_DWORD *)(a1 + 44);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 4) != 0)
    {
      uint64_t v10 = *(void *)(a1 + 32);
      if (!v10) {
        uint64_t v10 = *(void *)(qword_1008ABE38 + 32);
      }
      uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005C5E8(v10, a2);
      int v12 = (int)v11;
      if (v11 >= 0x80) {
        int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
      }
      else {
        int v13 = 1;
      }
      uint64_t v5 = (v5 + v12 + v13 + 1);
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  int v14 = *(void **)(a1 + 8);
  if (v14 && *v14 != v14[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 40) = v5;
  return v5;
}

uint64_t sub_100064F34(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000644A0((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100065008(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100065020(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1000650AC()
{
  return 1;
}

uint64_t sub_1000650B4()
{
  uint64_t v0 = qword_1008A0830;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100059FAC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A0750;
}

void sub_100065148(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10006515C(uint64_t a1)
{
  *(void *)a1 = off_100848170;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(void *)(a1 + 72) = 0xFFFFFFFFLL;
  *(_DWORD *)(a1 + 80) = 0;
  *(void *)(a1 + 64) = 0;
  return a1;
}

void sub_1000651BC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000651D0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 80);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 80))
    {
      *(_DWORD *)(a1 + 80) |= 1u;
      uint64_t v5 = *(void *)(a1 + 16);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 16);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_1008ABE40 + 16);
      }
      sub_10005BFF4(v5, v6);
      int v4 = *(_DWORD *)(a2 + 80);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 80) |= 2u;
      unsigned int v7 = *(_DWORD **)(a1 + 24);
      if (!v7) {
        operator new();
      }
      uint64_t v8 = *(void *)(a2 + 24);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_1008ABE40 + 24);
      }
      sub_10005E550(v7, v8);
      int v4 = *(_DWORD *)(a2 + 80);
    }
    if ((v4 & 4) != 0)
    {
      *(_DWORD *)(a1 + 80) |= 4u;
      int v9 = *(_DWORD **)(a1 + 32);
      if (!v9) {
        operator new();
      }
      uint64_t v10 = *(void *)(a2 + 32);
      if (!v10) {
        uint64_t v10 = *(void *)(qword_1008ABE40 + 32);
      }
      sub_10005E550(v9, v10);
      int v4 = *(_DWORD *)(a2 + 80);
    }
    if ((v4 & 8) != 0)
    {
      *(_DWORD *)(a1 + 80) |= 8u;
      uint64_t v11 = *(void *)(a1 + 40);
      if (!v11) {
        operator new();
      }
      uint64_t v12 = *(void *)(a2 + 40);
      if (!v12) {
        uint64_t v12 = *(void *)(qword_1008ABE40 + 40);
      }
      sub_10005D280(v11, v12);
      int v4 = *(_DWORD *)(a2 + 80);
    }
    if ((v4 & 0x10) != 0)
    {
      uint64_t v13 = *(void *)(a2 + 48);
      *(_DWORD *)(a1 + 80) |= 0x10u;
      *(void *)(a1 + 48) = v13;
      int v4 = *(_DWORD *)(a2 + 80);
    }
    if ((v4 & 0x20) != 0)
    {
      int v14 = *(_DWORD *)(a2 + 72);
      if ((v14 + 1) >= 4) {
        sub_10040FAC8();
      }
      *(_DWORD *)(a1 + 80) |= 0x20u;
      *(_DWORD *)(a1 + 72) = v14;
      int v4 = *(_DWORD *)(a2 + 80);
    }
    if ((v4 & 0x40) != 0)
    {
      *(_DWORD *)(a1 + 80) |= 0x40u;
      uint64_t v15 = *(void *)(a1 + 56);
      if (!v15) {
        operator new();
      }
      uint64_t v16 = *(void *)(a2 + 56);
      if (!v16) {
        uint64_t v16 = *(void *)(qword_1008ABE40 + 56);
      }
      sub_1000644A0(v15, v16);
      int v4 = *(_DWORD *)(a2 + 80);
    }
    if ((v4 & 0x80) != 0)
    {
      *(_DWORD *)(a1 + 80) |= 0x80u;
      uint64_t v17 = *(void *)(a1 + 64);
      if (!v17) {
        operator new();
      }
      uint64_t v18 = *(void *)(a2 + 64);
      if (!v18) {
        uint64_t v18 = *(void *)(qword_1008ABE40 + 64);
      }
      sub_10006695C(v17, v18);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000654C8()
{
}

void sub_100065554(void *a1)
{
  *a1 = off_100848170;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_1000655B4(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void *sub_1000655B4(void *result)
{
  if ((void *)qword_1008ABE40 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[3];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[4];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[5];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = v1[7];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t result = (void *)v1[8];
    if (result)
    {
      unsigned int v7 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v7();
    }
  }
  return result;
}

void sub_100065708(void *a1)
{
  sub_100065554(a1);

  operator delete();
}

uint64_t sub_100065740(uint64_t result, int a2)
{
  *(_DWORD *)(result + 76) = a2;
  return result;
}

void sub_100065748()
{
}

void sub_100065788()
{
}

uint64_t sub_1000657AC(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 80))
  {
    if (*(unsigned char *)(this + 80))
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(unsigned char *)(this + 44))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
          *(void *)(this + 32) = 0;
        }
        uint64_t v2 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 36) = 0;
        if (v2) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    int v3 = *(_DWORD *)(v1 + 80);
    if ((v3 & 2) != 0)
    {
      this = *(void *)(v1 + 24);
      if (this)
      {
        this = sub_10005E7D4(this);
        int v3 = *(_DWORD *)(v1 + 80);
      }
    }
    if ((v3 & 4) != 0)
    {
      this = *(void *)(v1 + 32);
      if (this)
      {
        this = sub_10005E7D4(this);
        int v3 = *(_DWORD *)(v1 + 80);
      }
    }
    if ((v3 & 8) != 0)
    {
      this = *(void *)(v1 + 40);
      if (this)
      {
        uint64_t v4 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 16) = 0;
        *(_DWORD *)(this + 28) = 0;
        if (v4) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    *(void *)(v1 + 48) = 0;
    *(_DWORD *)(v1 + 72) = -1;
    int v5 = *(_DWORD *)(v1 + 80);
    if ((v5 & 0x40) != 0)
    {
      this = *(void *)(v1 + 56);
      if (this)
      {
        this = sub_1000647F0(this);
        int v5 = *(_DWORD *)(v1 + 80);
      }
    }
    if ((v5 & 0x80) != 0)
    {
      this = *(void *)(v1 + 64);
      if (this) {
        this = sub_1000658AC(this);
      }
    }
  }
  uint64_t v7 = *(void *)(v1 + 8);
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v6 + 18) = 0;
  if (v7)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v6);
  }
  return this;
}

uint64_t sub_1000658AC(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 28))
  {
    this = *(void *)(this + 16);
    if (this) {
      this = sub_100066E88(this);
    }
  }
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v2 + 5) = 0;
  if (v3)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v2);
  }
  return this;
}

uint64_t sub_10006590C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 < *((void *)this + 2) && (*v7 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 80) |= 1u;
        uint64_t v10 = *(void *)(a1 + 16);
        if (!v10) {
          operator new();
        }
        v76[0] = 0;
        uint64_t v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76))return 0; {
        }
          }
        else
        {
          v76[0] = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        int v14 = *((_DWORD *)this + 14);
        int v15 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v14 + 1;
        if (v14 >= v15) {
          return 0;
        }
        int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v76[0]);
        if (!sub_10005C238(v10, this, v17, v18) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
        int v19 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v19, 1);
        int v21 = v19 - 1;
        if (v21 < 0 == v20) {
          *((_DWORD *)this + 14) = v21;
        }
        uint64_t v22 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 != 18) {
          continue;
        }
        *((void *)this + 1) = v22 + 1;
        goto LABEL_40;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_28;
        }
LABEL_40:
        *(_DWORD *)(a1 + 80) |= 2u;
        unint64_t v23 = *(int **)(a1 + 24);
        if (!v23) {
          operator new();
        }
        v76[0] = 0;
        uint64_t v24 = (char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76))return 0; {
        }
          }
        else
        {
          v76[0] = *v24;
          *((void *)this + 1) = v24 + 1;
        }
        int v25 = *((_DWORD *)this + 14);
        int v26 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v25 + 1;
        if (v25 >= v26) {
          return 0;
        }
        int v27 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v76[0]);
        if (!sub_10005E828(v23, this, v28, v29) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v27);
        int v30 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v30, 1);
        int v31 = v30 - 1;
        if (v31 < 0 == v20) {
          *((_DWORD *)this + 14) = v31;
        }
        int v32 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 != 26) {
          continue;
        }
        *((void *)this + 1) = v32 + 1;
LABEL_54:
        *(_DWORD *)(a1 + 80) |= 4u;
        unint64_t v33 = *(int **)(a1 + 32);
        if (!v33) {
          operator new();
        }
        v76[0] = 0;
        int v34 = (char *)*((void *)this + 1);
        if ((unint64_t)v34 >= *((void *)this + 2) || *v34 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76))return 0; {
        }
          }
        else
        {
          v76[0] = *v34;
          *((void *)this + 1) = v34 + 1;
        }
        int v35 = *((_DWORD *)this + 14);
        int v36 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v35 + 1;
        if (v35 >= v36) {
          return 0;
        }
        int v37 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v76[0]);
        if (!sub_10005E828(v33, this, v38, v39) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v37);
        int v40 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v40, 1);
        int v41 = v40 - 1;
        if (v41 < 0 == v20) {
          *((_DWORD *)this + 14) = v41;
        }
        int v42 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v42 >= *((void *)this + 2) || *v42 != 34) {
          continue;
        }
        *((void *)this + 1) = v42 + 1;
LABEL_68:
        *(_DWORD *)(a1 + 80) |= 8u;
        uint64_t v43 = *(void *)(a1 + 40);
        if (!v43) {
          operator new();
        }
        v76[0] = 0;
        unint64_t v44 = (char *)*((void *)this + 1);
        if ((unint64_t)v44 >= *((void *)this + 2) || *v44 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76))return 0; {
        }
          }
        else
        {
          v76[0] = *v44;
          *((void *)this + 1) = v44 + 1;
        }
        int v45 = *((_DWORD *)this + 14);
        int v46 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v45 + 1;
        if (v45 >= v46) {
          return 0;
        }
        int v47 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v76[0]);
        if (!sub_10005D48C(v43, this, v48, v49) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v47);
        int v50 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v50, 1);
        int v51 = v50 - 1;
        if (v51 < 0 == v20) {
          *((_DWORD *)this + 14) = v51;
        }
        uint64_t v52 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v52 >= *((void *)this + 2) || *v52 != 41) {
          continue;
        }
        *((void *)this + 1) = v52 + 1;
LABEL_82:
        *(void *)unint64_t v76 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v76) & 1) == 0)return 0; {
        *(void *)(a1 + 48) = *(void *)v76;
        }
        *(_DWORD *)(a1 + 80) |= 0x10u;
        int v53 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v53 >= v12 || *v53 != 48) {
          continue;
        }
        uint64_t v13 = v53 + 1;
        *((void *)this + 1) = v13;
LABEL_86:
        v76[0] = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76);
          if (!result) {
            return result;
          }
          signed int v54 = v76[0];
        }
        else
        {
          signed int v54 = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        if ((v54 + 1) > 3)
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 6, v54);
        }
        else
        {
          *(_DWORD *)(a1 + 80) |= 0x20u;
          *(_DWORD *)(a1 + 72) = v54;
        }
        uint64_t v56 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v56 >= *((void *)this + 2) || *v56 != 58) {
          continue;
        }
        *((void *)this + 1) = v56 + 1;
LABEL_97:
        *(_DWORD *)(a1 + 80) |= 0x40u;
        uint64_t v57 = *(void *)(a1 + 56);
        if (!v57) {
          operator new();
        }
        v76[0] = 0;
        int v58 = (char *)*((void *)this + 1);
        if ((unint64_t)v58 >= *((void *)this + 2) || *v58 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76))return 0; {
        }
          }
        else
        {
          v76[0] = *v58;
          *((void *)this + 1) = v58 + 1;
        }
        int v59 = *((_DWORD *)this + 14);
        int v60 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v59 + 1;
        if (v59 >= v60) {
          return 0;
        }
        int v61 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v76[0]);
        if (!sub_1000648A0(v57, this, v62, v63) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v61);
        int v64 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v64, 1);
        int v65 = v64 - 1;
        if (v65 < 0 == v20) {
          *((_DWORD *)this + 14) = v65;
        }
        uint64_t v66 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v66 >= *((void *)this + 2) || *v66 != 66) {
          continue;
        }
        *((void *)this + 1) = v66 + 1;
LABEL_111:
        *(_DWORD *)(a1 + 80) |= 0x80u;
        uint64_t v67 = *(void *)(a1 + 64);
        if (!v67) {
          operator new();
        }
        v76[0] = 0;
        int64_t v68 = (char *)*((void *)this + 1);
        if ((unint64_t)v68 >= *((void *)this + 2) || *v68 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76))return 0; {
        }
          }
        else
        {
          v76[0] = *v68;
          *((void *)this + 1) = v68 + 1;
        }
        int v69 = *((_DWORD *)this + 14);
        int v70 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v69 + 1;
        if (v69 >= v70) {
          return 0;
        }
        int v71 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v76[0]);
        if (!sub_100067794(v67, this, v72, v73) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v71);
        int v74 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v74, 1);
        int v75 = v74 - 1;
        if (v75 < 0 == v20) {
          *((_DWORD *)this + 14) = v75;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_54;
        }
        goto LABEL_28;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_68;
        }
        goto LABEL_28;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_82;
        }
        goto LABEL_28;
      case 6u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_86;
      case 7u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_97;
        }
        goto LABEL_28;
      case 8u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_28;
        }
        goto LABEL_111;
      default:
        int v9 = TagFallback & 7;
LABEL_28:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_1000660D0()
{
}

uint64_t sub_100066168(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 80);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 16);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1008ABE40 + 16);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 80);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1008ABE40 + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_16:
  uint64_t v9 = *(void *)(v5 + 32);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_1008ABE40 + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_19:
  uint64_t v10 = *(void *)(v5 + 40);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_1008ABE40 + 40);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 72), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_30;
    }
    goto LABEL_27;
  }
LABEL_24:
  uint64_t v11 = *(void *)(v5 + 56);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_1008ABE40 + 56);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v11, a2, a4);
  if ((*(_DWORD *)(v5 + 80) & 0x80) != 0)
  {
LABEL_27:
    uint64_t v12 = *(void *)(v5 + 64);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_1008ABE40 + 64);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v12, a2, a4);
  }
LABEL_30:
  int v15 = *(void **)(v5 + 8);
  int v14 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v13 = v15;
  if (v15 && *v13 != v13[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v14, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100066304(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  int v5 = *((_DWORD *)this + 20);
  if (v5)
  {
    uint64_t v6 = *((void *)this + 2);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1008ABE40 + 16);
    }
    *(unsigned char *)a2 = 10;
    unsigned int v7 = a2 + 1;
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v6 + 40);
    if (v8 > 0x7F)
    {
      uint64_t v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v7, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v8;
      uint64_t v9 = (uint64_t)v3 + 2;
    }
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10005C4C0(v6, v9, a3);
    int v5 = *((_DWORD *)this + 20);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v10 = (unsigned int *)*((void *)this + 3);
  if (!v10) {
    uint64_t v10 = *(unsigned int **)(qword_1008ABE40 + 24);
  }
  *(unsigned char *)uint64_t v3 = 18;
  uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10[10];
  if (v11 > 0x7F)
  {
    uint64_t v12 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)v3 + 1, a3);
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v11;
    uint64_t v12 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  }
  uint64_t v3 = sub_10005EAC0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v10, v12, a3);
  int v5 = *((_DWORD *)this + 20);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_26;
  }
LABEL_20:
  uint64_t v13 = (unsigned int *)*((void *)this + 4);
  if (!v13) {
    uint64_t v13 = *(unsigned int **)(qword_1008ABE40 + 32);
  }
  *(unsigned char *)uint64_t v3 = 26;
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13[10];
  if (v14 > 0x7F)
  {
    int v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, (int)v3 + 1, a3);
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v14;
    int v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  }
  uint64_t v3 = sub_10005EAC0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v13, v15, a3);
  int v5 = *((_DWORD *)this + 20);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_32;
  }
LABEL_26:
  uint64_t v16 = *((void *)this + 5);
  if (!v16) {
    uint64_t v16 = *(void *)(qword_1008ABE40 + 40);
  }
  *(unsigned char *)uint64_t v3 = 34;
  uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v16 + 32);
  if (v17 > 0x7F)
  {
    uint64_t v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, (int)v3 + 1, a3);
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v17;
    uint64_t v18 = (uint64_t)v3 + 2;
  }
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10005D8B0(v16, v18, a3);
  int v5 = *((_DWORD *)this + 20);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_39;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t v19 = *((void *)this + 6);
  *(unsigned char *)uint64_t v3 = 41;
  *(void *)((char *)v3 + 1) = v19;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  if ((*((_DWORD *)this + 20) & 0x20) == 0) {
    goto LABEL_39;
  }
LABEL_33:
  BOOL v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 18);
  *(unsigned char *)uint64_t v3 = 48;
  unint64_t v21 = (unint64_t)v3 + 1;
  if ((v20 & 0x80000000) != 0)
  {
    uint64_t v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v20, v21, a3);
  }
  else
  {
    if (v20 <= 0x7F)
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v20;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      goto LABEL_39;
    }
    uint64_t v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v20, v21, a3);
  }
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v22;
LABEL_39:
  int v23 = *((_DWORD *)this + 20);
  if ((v23 & 0x40) != 0)
  {
    uint64_t v24 = (unsigned int *)*((void *)this + 7);
    if (!v24) {
      uint64_t v24 = *(unsigned int **)(qword_1008ABE40 + 56);
    }
    *(unsigned char *)uint64_t v3 = 58;
    int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v24[10];
    if (v25 > 0x7F)
    {
      int v26 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v25, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v25;
      int v26 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
    uint64_t v3 = sub_100064CD0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v24, v26, a3);
    int v23 = *((_DWORD *)this + 20);
  }
  if ((v23 & 0x80) != 0)
  {
    int v27 = (unsigned int *)*((void *)this + 8);
    if (!v27) {
      int v27 = *(unsigned int **)(qword_1008ABE40 + 64);
    }
    *(unsigned char *)uint64_t v3 = 66;
    uint64_t v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v27[6];
    if (v28 > 0x7F)
    {
      uint64_t v29 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v28, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v28;
      uint64_t v29 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
    uint64_t v3 = sub_1000679EC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v27, v29, a3);
  }
  int v32 = (void *)*((void *)this + 1);
  int v31 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v30 = v32;
  if (!v32 || *v30 == v30[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v31, v3, a3);
}

uint64_t sub_100066608(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 80);
  if (!(_BYTE)v3)
  {
    uint64_t v5 = 0;
    goto LABEL_58;
  }
  if ((*(unsigned char *)(a1 + 80) & 1) == 0)
  {
    unsigned int v4 = 0;
    if ((*(unsigned char *)(a1 + 80) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_1008ABE40 + 16);
  }
  unsigned int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005C5E8(v6, a2);
  int v8 = (int)v7;
  if (v7 >= 0x80) {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
  }
  else {
    int v9 = 1;
  }
  unsigned int v4 = v8 + v9 + 1;
  int v3 = *(_DWORD *)(a1 + 80);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    uint64_t v10 = *(void *)(a1 + 24);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_1008ABE40 + 24);
    }
    uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005EB8C(v10, a2);
    int v12 = (int)v11;
    if (v11 >= 0x80) {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    }
    else {
      int v13 = 1;
    }
    v4 += v12 + v13 + 1;
    int v3 = *(_DWORD *)(a1 + 80);
  }
LABEL_18:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_33;
    }
    goto LABEL_27;
  }
  uint64_t v14 = *(void *)(a1 + 32);
  if (!v14) {
    uint64_t v14 = *(void *)(qword_1008ABE40 + 32);
  }
  int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005EB8C(v14, a2);
  int v16 = (int)v15;
  if (v15 >= 0x80) {
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
  }
  else {
    int v17 = 1;
  }
  v4 += v16 + v17 + 1;
  int v3 = *(_DWORD *)(a1 + 80);
  if ((v3 & 8) != 0)
  {
LABEL_27:
    uint64_t v18 = *(void *)(a1 + 40);
    if (!v18) {
      uint64_t v18 = *(void *)(qword_1008ABE40 + 40);
    }
    uint64_t v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005D940(v18, a2);
    int v20 = (int)v19;
    if (v19 >= 0x80) {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2);
    }
    else {
      int v21 = 1;
    }
    v4 += v20 + v21 + 1;
    int v3 = *(_DWORD *)(a1 + 80);
  }
LABEL_33:
  if ((v3 & 0x10) != 0) {
    uint64_t v5 = v4 + 9;
  }
  else {
    uint64_t v5 = v4;
  }
  if ((v3 & 0x20) != 0)
  {
    uint64_t v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 72);
    if ((v22 & 0x80000000) != 0)
    {
      int v23 = 11;
    }
    else if (v22 >= 0x80)
    {
      int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2)
          + 1;
      int v3 = *(_DWORD *)(a1 + 80);
    }
    else
    {
      int v23 = 2;
    }
    uint64_t v5 = (v23 + v5);
    if ((v3 & 0x40) == 0)
    {
LABEL_38:
      if ((v3 & 0x80) == 0) {
        goto LABEL_58;
      }
      goto LABEL_52;
    }
  }
  else if ((v3 & 0x40) == 0)
  {
    goto LABEL_38;
  }
  uint64_t v24 = *(void *)(a1 + 56);
  if (!v24) {
    uint64_t v24 = *(void *)(qword_1008ABE40 + 56);
  }
  int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100064E38(v24, a2);
  int v26 = (int)v25;
  if (v25 >= 0x80) {
    int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2);
  }
  else {
    int v27 = 1;
  }
  uint64_t v5 = (v5 + v26 + v27 + 1);
  if ((*(_DWORD *)(a1 + 80) & 0x80) != 0)
  {
LABEL_52:
    uint64_t v28 = *(void *)(a1 + 64);
    if (!v28) {
      uint64_t v28 = *(void *)(qword_1008ABE40 + 64);
    }
    uint64_t v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100067A9C(v28, a2);
    int v30 = (int)v29;
    if (v29 >= 0x80) {
      int v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29, a2);
    }
    else {
      int v31 = 1;
    }
    uint64_t v5 = (v5 + v30 + v31 + 1);
  }
LABEL_58:
  int v32 = *(void **)(a1 + 8);
  if (v32 && *v32 != v32[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 76) = v5;
  return v5;
}

uint64_t sub_100066870(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000651D0((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100066944(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10006695C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (*(unsigned char *)(a2 + 28))
  {
    *(_DWORD *)(a1 + 28) |= 1u;
    uint64_t v4 = *(void *)(a1 + 16);
    if (!v4) {
      operator new();
    }
    uint64_t v5 = *(void *)(a2 + 16);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_1008ABE50 + 16);
    }
    sub_100066C18(v4, v5);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100066A3C()
{
}

uint64_t sub_100066A74(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100066B00()
{
  return 1;
}

uint64_t sub_100066B08()
{
  uint64_t v0 = qword_1008A0830;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100059FAC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A0760;
}

void sub_100066B9C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100066BB0(uint64_t a1)
{
  *(void *)a1 = off_100848220;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_100066C04(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100066C18(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), *(_DWORD *)(a2 + 32) + *(_DWORD *)(a1 + 32));
  if (*(int *)(a2 + 32) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 24) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 36);
      uint64_t v7 = *(int *)(a1 + 32);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 40))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), v6 + 1);
          int v6 = *(_DWORD *)(a1 + 36);
        }
        *(_DWORD *)(a1 + 36) = v6 + 1;
        sub_10006F79C();
      }
      uint64_t v8 = *(void *)(a1 + 24);
      *(_DWORD *)(a1 + 32) = v7 + 1;
      sub_100063CCC(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 32));
  }
  if (*(unsigned char *)(a2 + 52))
  {
    uint64_t v9 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 52) |= 1u;
    *(void *)(a1 + 16) = v9;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100066D68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100066D80(uint64_t *a1)
{
  *a1 = (uint64_t)off_100848220;
  sub_10006F938(a1 + 3);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100066DE4(uint64_t *a1)
{
  sub_100066D80(a1);

  operator delete();
}

uint64_t sub_100066E1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) = a2;
  return result;
}

void sub_100066E24()
{
}

void sub_100066E64()
{
}

uint64_t sub_100066E88(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 52)) {
    *(void *)(a1 + 16) = 0;
  }
  uint64_t result = sub_10006F8C8(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 8);
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)v3 + 11) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return result;
}

uint64_t sub_100066EE8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (unint64_t *)(a1 + 16);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24);
  unsigned int v8 = a1 + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v9;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v9 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_16;
        }
        int v12 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v12 >= v13 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!result) {
            return result;
          }
          uint64_t v14 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v12;
          uint64_t v14 = v12 + 1;
          *((void *)this + 1) = v14;
        }
        *(_DWORD *)(a1 + 52) |= 1u;
        if ((unint64_t)v14 < v13 && *v14 == 18) {
          goto LABEL_23;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v11 = TagFallback & 7;
      if (v11 != 2) {
        goto LABEL_16;
      }
      while (1)
      {
        int v16 = *(_DWORD *)(a1 + 36);
        uint64_t v17 = *(int *)(a1 + 32);
        if ((int)v17 >= v16)
        {
          if (v16 == *(_DWORD *)(a1 + 40))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v16 + 1);
            int v16 = *(_DWORD *)(a1 + 36);
          }
          *(_DWORD *)(a1 + 36) = v16 + 1;
          sub_10006F79C();
        }
        uint64_t v18 = *(void *)(a1 + 24);
        *(_DWORD *)(a1 + 32) = v17 + 1;
        uint64_t v19 = *(void *)(v18 + 8 * v17);
        unsigned int v30 = 0;
        int v20 = (char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v30))return 0; {
        }
          }
        else
        {
          unsigned int v30 = *v20;
          *((void *)this + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)this + 14);
        int v22 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v21 + 1;
        if (v21 >= v22) {
          return 0;
        }
        int v23 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v30);
        if (!sub_100063EE4(v19, this, v24, v25) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v23);
        int v26 = *((_DWORD *)this + 14);
        BOOL v27 = __OFSUB__(v26, 1);
        int v28 = v26 - 1;
        if (v28 < 0 == v27) {
          *((_DWORD *)this + 14) = v28;
        }
        uint64_t v14 = (unsigned char *)*((void *)this + 1);
        uint64_t v29 = (unsigned char *)*((void *)this + 2);
        if (v14 >= v29 || *v14 != 18) {
          break;
        }
LABEL_23:
        *((void *)this + 1) = v14 + 1;
      }
      if (v14 == v29 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v11 = TagFallback & 7;
LABEL_16:
    if (v11 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v8, a4) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_100067174(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 52)) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 16), (unint64_t)a2, a4);
  }
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 24) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 32));
  }
  uint64_t v9 = *(void **)(v5 + 8);
  unsigned int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100067228(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  char v3 = a2;
  if (*((unsigned char *)this + 52))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 2);
    *(unsigned char *)a2 = 8;
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v5, (unint64_t)a2 + 1, a3);
  }
  if (*((int *)this + 8) >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t v7 = *(void *)(*((void *)this + 3) + 8 * v6);
      *(unsigned char *)char v3 = 18;
      unsigned int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v7 + 32);
      if (v8 > 0x7F)
      {
        uint64_t v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)v3 + 1, a3);
      }
      else
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v8;
        uint64_t v9 = (uint64_t)v3 + 2;
      }
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000640E8(v7, v9, a3);
      ++v6;
    }
    while (v6 < *((int *)this + 8));
  }
  int v12 = (void *)*((void *)this + 1);
  int v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v10 = v12;
  if (!v12 || *v10 == v10[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v11, v3, a3);
}

uint64_t sub_100067314(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (*(unsigned char *)(a1 + 52)) {
    int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16), (unint64_t)a2)+ 1;
  }
  else {
    int v3 = 0;
  }
  int v4 = *(_DWORD *)(a1 + 32);
  uint64_t v5 = (v4 + v3);
  if (v4 >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000641B0(*(void *)(*(void *)(a1 + 24) + 8 * v6), a2);
      int v8 = (int)v7;
      if (v7 >= 0x80) {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      }
      else {
        int v9 = 1;
      }
      uint64_t v5 = (v8 + v5 + v9);
      ++v6;
    }
    while (v6 < *(int *)(a1 + 32));
  }
  uint64_t v10 = *(void **)(a1 + 8);
  if (v10 && *v10 != v10[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 48) = v5;
  return v5;
}

uint64_t sub_1000673D4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100066C18((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1000674A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000674C0(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10006754C()
{
  return 1;
}

uint64_t sub_100067554()
{
  uint64_t v0 = qword_1008A0830;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100059FAC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A0770;
}

void sub_1000675E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_1000675FC(void *a1)
{
  *a1 = off_1008482D0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  return a1;
}

void sub_100067644(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_100067658(void *a1)
{
  *a1 = off_1008482D0;
  if ((void *)qword_1008ABE50 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1000676F0(void *a1)
{
  sub_100067658(a1);

  operator delete();
}

uint64_t sub_100067728(uint64_t result, int a2)
{
  *(_DWORD *)(result + 24) = a2;
  return result;
}

void sub_100067730()
{
}

void sub_100067770()
{
}

uint64_t sub_100067794(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      uint64_t v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
      }
      if (TagFallback != 10) {
        break;
      }
      *(_DWORD *)(a1 + 28) |= 1u;
      uint64_t v9 = *(void *)(a1 + 16);
      if (!v9) {
        operator new();
      }
      unsigned int v20 = 0;
      uint64_t v10 = (char *)*((void *)this + 1);
      if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v20))return 0; {
      }
        }
      else
      {
        unsigned int v20 = *v10;
        *((void *)this + 1) = v10 + 1;
      }
      int v11 = *((_DWORD *)this + 14);
      int v12 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v11 + 1;
      if (v11 >= v12) {
        return 0;
      }
      int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v20);
      if (!sub_100066EE8(v9, this, v14, v15) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
      int v16 = *((_DWORD *)this + 14);
      BOOL v17 = __OFSUB__(v16, 1);
      int v18 = v16 - 1;
      if (v18 < 0 == v17) {
        *((_DWORD *)this + 14) = v18;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
  }
    }
  return 1;
}

void sub_100067944()
{
}

uint64_t sub_100067968(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 28))
  {
    uint64_t v6 = *(void *)(this + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1008ABE50 + 16);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  uint64_t v9 = *(void **)(v5 + 8);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000679EC(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  if (*((unsigned char *)this + 28))
  {
    uint64_t v4 = (unsigned int *)*((void *)this + 2);
    if (!v4) {
      uint64_t v4 = *(unsigned int **)(qword_1008ABE50 + 16);
    }
    *(unsigned char *)a2 = 10;
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v4[12];
    if (v5 > 0x7F)
    {
      uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v5, (int)a2 + 1, a3);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v5;
      uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
    a2 = sub_100067228((wireless_diagnostics::google::protobuf::internal::WireFormat *)v4, v6, a3);
  }
  uint64_t v9 = (void *)*((void *)this + 1);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v7 = v9;
  if (!v9 || *v7 == v7[1]) {
    return a2;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v8, a2, a3);
}

uint64_t sub_100067A9C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (*(unsigned char *)(a1 + 28))
  {
    uint64_t v4 = *(void *)(a1 + 16);
    if (!v4) {
      uint64_t v4 = *(void *)(qword_1008ABE50 + 16);
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100067314(v4, a2);
    int v6 = (int)v5;
    if (v5 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    }
    else {
      int v7 = 1;
    }
    uint64_t v3 = (v6 + v7 + 1);
  }
  else
  {
    uint64_t v3 = 0;
  }
  int v8 = *(void **)(a1 + 8);
  if (v8 && *v8 != v8[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  }
  *(_DWORD *)(a1 + 24) = v3;
  return v3;
}

uint64_t sub_100067B30(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10006695C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100067C04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100067C1C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100067CA8()
{
  return 1;
}

uint64_t sub_100067CB0()
{
  uint64_t v0 = qword_1008A0830;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100059FAC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A0780;
}

void sub_100067D44(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100067D58(uint64_t a1)
{
  *(void *)a1 = off_100848380;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(_OWORD *)(a1 + 40) = xmmword_1004A06B0;
  return a1;
}

void sub_100067DB0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100067DC4(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), *(_DWORD *)(a2 + 24) + a1[6]);
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 16) + 8 * v4);
      int v6 = a1[7];
      uint64_t v7 = (int)a1[6];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[8])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), v6 + 1);
          int v6 = a1[7];
        }
        a1[7] = v6 + 1;
        sub_10006F800();
      }
      uint64_t v8 = *((void *)a1 + 2);
      a1[6] = v7 + 1;
      sub_1000651D0(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 24));
  }
  LOBYTE(v9) = *(unsigned char *)(a2 + 52);
  if ((_BYTE)v9)
  {
    if (*(unsigned char *)(a2 + 52))
    {
      int v10 = *(_DWORD *)(a2 + 40);
      if ((v10 + 1) >= 6) {
        sub_10040FB20();
      }
      a1[13] |= 1u;
      a1[10] = v10;
      int v9 = *(_DWORD *)(a2 + 52);
    }
    if ((v9 & 4) != 0)
    {
      unsigned int v11 = *(_DWORD *)(a2 + 44);
      if (v11 >= 9) {
        sub_10040FAF4();
      }
      a1[13] |= 4u;
      a1[11] = v11;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100067F50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100067F68(uint64_t *a1)
{
  *a1 = (uint64_t)off_100848380;
  sub_10006F938(a1 + 2);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100067FCC(uint64_t *a1)
{
  sub_100067F68(a1);

  operator delete();
}

uint64_t sub_100068004(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) = a2;
  return result;
}

void sub_10006800C()
{
}

void sub_10006804C()
{
}

uint64_t sub_100068070(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 52)) {
    *(void *)(a1 + 40) = 0x8FFFFFFFFLL;
  }
  uint64_t result = sub_10006F8C8(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 8);
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)v3 + 11) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return result;
}

uint64_t sub_1000680D8(int *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4);
  while (1)
  {
    while (1)
    {
LABEL_2:
      uint64_t v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v8;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v8 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      unsigned int v10 = TagFallback >> 3;
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_19;
      }
      unsigned int v34 = 0;
      uint64_t v14 = (char *)*((void *)this + 1);
      if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34);
        if (!result) {
          return result;
        }
        signed int v15 = v34;
      }
      else
      {
        signed int v15 = *v14;
        *((void *)this + 1) = v14 + 1;
      }
      if ((v15 + 1) > 5)
      {
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 1, v15);
      }
      else
      {
        a1[13] |= 1u;
        a1[10] = v15;
      }
      BOOL v17 = (unsigned char *)*((void *)this + 1);
      if ((unint64_t)v17 < *((void *)this + 2) && *v17 == 18)
      {
        while (1)
        {
          *((void *)this + 1) = v17 + 1;
LABEL_31:
          int v18 = a1[7];
          uint64_t v19 = a1[6];
          if ((int)v19 >= v18)
          {
            if (v18 == a1[8])
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v18 + 1);
              int v18 = a1[7];
            }
            a1[7] = v18 + 1;
            sub_10006F800();
          }
          uint64_t v20 = *((void *)a1 + 2);
          a1[6] = v19 + 1;
          uint64_t v21 = *(void *)(v20 + 8 * v19);
          unsigned int v35 = 0;
          int v22 = (char *)*((void *)this + 1);
          if ((unint64_t)v22 >= *((void *)this + 2) || *v22 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v35))return 0; {
          }
            }
          else
          {
            unsigned int v35 = *v22;
            *((void *)this + 1) = v22 + 1;
          }
          int v23 = *((_DWORD *)this + 14);
          int v24 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v23 + 1;
          if (v23 >= v24) {
            return 0;
          }
          int v25 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v35);
          if (!sub_10006590C(v21, this, v26, v27) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v25);
          int v28 = *((_DWORD *)this + 14);
          BOOL v29 = __OFSUB__(v28, 1);
          int v30 = v28 - 1;
          if (v30 < 0 == v29) {
            *((_DWORD *)this + 14) = v30;
          }
          BOOL v17 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
          if ((unint64_t)v17 >= v13) {
            break;
          }
          int v31 = *v17;
          if (v31 != 18)
          {
            if (v31 == 24)
            {
              int v12 = v17 + 1;
              *((void *)this + 1) = v12;
LABEL_49:
              unsigned int v33 = 0;
              if ((unint64_t)v12 >= v13 || *v12 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v33);
                if (!result) {
                  return result;
                }
                unsigned int v32 = v33;
              }
              else
              {
                unsigned int v32 = *v12;
                *((void *)this + 1) = v12 + 1;
              }
              if (v32 > 8)
              {
                wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 3, (int)v32);
              }
              else
              {
                a1[13] |= 4u;
                a1[11] = v32;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
            }
            goto LABEL_2;
          }
        }
      }
    }
    if (v10 == 2)
    {
      int v11 = TagFallback & 7;
      if (v11 != 2) {
        goto LABEL_19;
      }
      goto LABEL_31;
    }
    if (v10 == 3)
    {
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v12 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_49;
      }
    }
    else
    {
      int v11 = TagFallback & 7;
    }
LABEL_19:
    if (v11 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_100068414(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 52)) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 40), (int)a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 16) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 24));
  }
  if ((*(unsigned char *)(v5 + 52) & 4) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 44), (int)a2, a4);
  }
  int v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000684E0(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  char v3 = a2;
  if (*((unsigned char *)this + 52))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 10);
    *(unsigned char *)a2 = 8;
    uint64_t v6 = (char *)a2 + 1;
    if ((v5 & 0x80000000) != 0)
    {
      uint64_t v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v5, (unint64_t)v6, a3);
    }
    else
    {
      if (v5 <= 0x7F)
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v5;
        char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        goto LABEL_8;
      }
      uint64_t v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v5, v6, a3);
    }
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v7;
  }
LABEL_8:
  if (*((int *)this + 6) >= 1)
  {
    uint64_t v8 = 0;
    do
    {
      int v9 = *(unsigned int **)(*((void *)this + 2) + 8 * v8);
      *(unsigned char *)char v3 = 18;
      unsigned int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9[19];
      if (v10 > 0x7F)
      {
        int v11 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, (int)v3 + 1, a3);
      }
      else
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v10;
        int v11 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      }
      char v3 = sub_100066304((wireless_diagnostics::google::protobuf::internal::WireFormat *)v9, v11, a3);
      ++v8;
    }
    while (v8 < *((int *)this + 6));
  }
  if ((*((unsigned char *)this + 52) & 4) != 0)
  {
    int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 11);
    *(unsigned char *)char v3 = 24;
    unint64_t v13 = (unint64_t)v3 + 1;
    if ((v12 & 0x80000000) != 0)
    {
      uint64_t v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v12, v13, a3);
    }
    else
    {
      if (v12 <= 0x7F)
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v12;
        char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        goto LABEL_21;
      }
      uint64_t v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, v13, a3);
    }
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v14;
  }
LABEL_21:
  BOOL v17 = (void *)*((void *)this + 1);
  int v16 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  signed int v15 = v17;
  if (!v17 || *v15 == v15[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v16, v3, a3);
}

uint64_t sub_10006862C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  char v3 = *(unsigned char *)(a1 + 52);
  if (!v3)
  {
    int v4 = 0;
    goto LABEL_19;
  }
  if (*(unsigned char *)(a1 + 52))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
    if ((v5 & 0x80000000) != 0)
    {
      int v4 = 11;
      if ((v3 & 4) == 0) {
        goto LABEL_19;
      }
    }
    else if (v5 >= 0x80)
    {
      int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      if ((*(_DWORD *)(a1 + 52) & 4) == 0) {
        goto LABEL_19;
      }
    }
    else
    {
      int v4 = 2;
      if ((v3 & 4) == 0) {
        goto LABEL_19;
      }
    }
  }
  else
  {
    int v4 = 0;
    if ((*(unsigned char *)(a1 + 52) & 4) == 0) {
      goto LABEL_19;
    }
  }
  uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
  if ((v6 & 0x80000000) != 0)
  {
    int v7 = 11;
  }
  else if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
  }
  else
  {
    int v7 = 2;
  }
  v4 += v7;
LABEL_19:
  int v8 = *(_DWORD *)(a1 + 24);
  uint64_t v9 = (v8 + v4);
  if (v8 >= 1)
  {
    uint64_t v10 = 0;
    do
    {
      int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100066608(*(void *)(*(void *)(a1 + 16) + 8 * v10), a2);
      int v12 = (int)v11;
      if (v11 >= 0x80) {
        int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
      }
      else {
        int v13 = 1;
      }
      uint64_t v9 = (v12 + v9 + v13);
      ++v10;
    }
    while (v10 < *(int *)(a1 + 24));
  }
  uint64_t v14 = *(void **)(a1 + 8);
  if (v14 && *v14 != v14[1]) {
    uint64_t v9 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v9;
  }
  *(_DWORD *)(a1 + 48) = v9;
  return v9;
}

uint64_t sub_100068754(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100067DC4(a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100068828(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100068840(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1000688CC()
{
  return 1;
}

uint64_t sub_1000688D4()
{
  uint64_t v0 = qword_1008A0830;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100059FAC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A0790;
}

void sub_100068968(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_10006897C(void *a1)
{
  *a1 = off_100848430;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_1000689C8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000689DC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      *(_DWORD *)(a1 + 36) |= 1u;
      uint64_t v5 = *(void *)(a1 + 16);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 16);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_1008ABE60 + 16);
      }
      sub_10005D280(v5, v6);
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v7 = *(void *)(a2 + 24);
      *(_DWORD *)(a1 + 36) |= 2u;
      *(void *)(a1 + 24) = v7;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100068ADC()
{
}

void sub_100068B14(void *a1)
{
  *a1 = off_100848430;
  if ((void *)qword_1008ABE60 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100068BAC(void *a1)
{
  sub_100068B14(a1);

  operator delete();
}

uint64_t sub_100068BE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_100068BEC()
{
}

void sub_100068C2C()
{
}

uint64_t sub_100068C50(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 36))
  {
    if (*(unsigned char *)(this + 36))
    {
      this = *(void *)(this + 16);
      if (this)
      {
        uint64_t v2 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 16) = 0;
        *(_DWORD *)(this + 28) = 0;
        if (v2) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    *(void *)(v1 + 24) = 0;
  }
  uint64_t v4 = *(void *)(v1 + 8);
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v3 + 7) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return this;
}

uint64_t sub_100068CC8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      uint64_t v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (TagFallback >> 3 != 2)
      {
        int v9 = TagFallback & 7;
        goto LABEL_18;
      }
      int v9 = TagFallback & 7;
      if (v9 == 1)
      {
LABEL_30:
        unint64_t v22 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v22) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 24) = v22;
        *(_DWORD *)(a1 + 36) |= 2u;
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
      else
      {
LABEL_18:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
      }
        }
    }
    int v9 = TagFallback & 7;
    if (v9 != 2) {
      goto LABEL_18;
    }
    *(_DWORD *)(a1 + 36) |= 1u;
    uint64_t v10 = *(void *)(a1 + 16);
    if (!v10) {
      operator new();
    }
    unsigned int v23 = 0;
    int v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23)) {
        return 0;
      }
    }
    else
    {
      unsigned int v23 = *v11;
      *((void *)this + 1) = v11 + 1;
    }
    int v12 = *((_DWORD *)this + 14);
    int v13 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v12 + 1;
    if (v12 >= v13) {
      return 0;
    }
    int v14 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v23);
    if (!sub_10005D48C(v10, this, v15, v16) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v14);
    int v17 = *((_DWORD *)this + 14);
    BOOL v18 = __OFSUB__(v17, 1);
    int v19 = v17 - 1;
    if (v19 < 0 == v18) {
      *((_DWORD *)this + 14) = v19;
    }
    uint64_t v20 = (unsigned char *)*((void *)this + 1);
    if ((unint64_t)v20 < *((void *)this + 2) && *v20 == 17)
    {
      *((void *)this + 1) = v20 + 1;
      goto LABEL_30;
    }
  }
}

void sub_100068EEC()
{
}

uint64_t sub_100068F10(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 36);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 16);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1008ABE60 + 16);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
  }
  if ((v6 & 2) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  }
  uint64_t v10 = *(void **)(v5 + 8);
  int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v8 = v10;
  if (v10 && *v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

unsigned char *sub_100068FAC(wireless_diagnostics::google::protobuf::internal::WireFormat *this, unsigned char *a2, unsigned __int8 *a3)
{
  int v4 = *((_DWORD *)this + 9);
  if (v4)
  {
    uint64_t v5 = *((void *)this + 2);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_1008ABE60 + 16);
    }
    *a2 = 10;
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v5 + 32);
    if (v6 > 0x7F)
    {
      uint64_t v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, (int)a2 + 1, a3);
    }
    else
    {
      a2[1] = (_BYTE)v6;
      uint64_t v7 = (uint64_t)(a2 + 2);
    }
    a2 = (unsigned char *)sub_10005D8B0(v5, v7, a3);
    int v4 = *((_DWORD *)this + 9);
  }
  if ((v4 & 2) != 0)
  {
    uint64_t v8 = *((void *)this + 3);
    *a2 = 17;
    *(void *)(a2 + 1) = v8;
    a2 += 9;
  }
  int v11 = (void *)*((void *)this + 1);
  uint64_t v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v9 = v11;
  if (!v11 || *v9 == v9[1]) {
    return a2;
  }

  return (unsigned char *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v10, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_1000690B0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 36))
    {
      uint64_t v6 = *(void *)(a1 + 16);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_1008ABE60 + 16);
      }
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005D940(v6, a2);
      int v8 = (int)v7;
      if (v7 >= 0x80) {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      }
      else {
        int v9 = 1;
      }
      unsigned int v4 = v8 + v9 + 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  uint64_t v10 = *(void **)(a1 + 8);
  if (v10 && *v10 != v10[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 32) = v5;
  return v5;
}

uint64_t sub_100069160(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000689DC((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100069234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10006924C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1000692D8()
{
  return 1;
}

uint64_t sub_1000692E0()
{
  uint64_t v0 = qword_1008A0830;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100059FAC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A07A0;
}

void sub_100069374(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_100069388(void *a1)
{
  *a1 = off_1008484E0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_1000693D4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000693E8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    sub_10006F57C(a1 + 16, *(_DWORD *)(a1 + 24) + v4);
    memcpy((void *)(*(void *)(a1 + 16) + 4 * *(int *)(a1 + 24)), *(const void **)(a2 + 16), 4 * *(int *)(a2 + 24));
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000694A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000694C0(void *a1)
{
  *a1 = off_1008484E0;
  if (a1[2]) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100069538(void *a1)
{
  sub_1000694C0(a1);

  operator delete();
}

uint64_t sub_100069570(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_100069578()
{
}

void sub_1000695B8()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000695DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  *((_DWORD *)result + 7) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1000695F4(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = a1 + 16;
  unsigned int v7 = a1 + 8;
  while (1)
  {
    while (1)
    {
      int v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v8;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v8 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      int v10 = TagFallback & 7;
      if ((TagFallback & 0xFFFFFFF8) != 8) {
        break;
      }
      if (v10 != 2)
      {
        if (v10 != 5) {
          break;
        }
        goto LABEL_15;
      }
      uint64_t result = sub_10005CDA4(this, v6);
      if (!result) {
        return result;
      }
      while (1)
      {
        unint64_t v22 = (unsigned char *)*((void *)this + 1);
        unsigned int v23 = (unsigned char *)*((void *)this + 2);
        if (v22 >= v23 || *v22 != 13) {
          break;
        }
        *((void *)this + 1) = v22 + 1;
LABEL_15:
        v24[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v24) & 1) == 0) {
          return 0;
        }
        unsigned int v12 = v24[0];
        int v13 = *(_DWORD *)(a1 + 24);
        if (v13 == *(_DWORD *)(a1 + 28))
        {
          sub_10006F57C(v6, v13 + 1);
          int v13 = *(_DWORD *)(a1 + 24);
        }
        uint64_t v14 = *(void *)(a1 + 16);
        int v15 = v13 + 1;
        *(_DWORD *)(a1 + 24) = v13 + 1;
        *(_DWORD *)(v14 + 4 * v13) = v12;
        uint64_t v16 = *((void *)this + 1);
        int v17 = *((_DWORD *)this + 4) - v16;
        if (v17 >= 1)
        {
          signed int v18 = v17 / 5u;
          int v19 = v18 >= *(_DWORD *)(a1 + 28) - v15 ? *(_DWORD *)(a1 + 28) - v15 : v18;
          if (v19 >= 1)
          {
            int v20 = 0;
            while (*(unsigned char *)v16 == 13)
            {
              int v21 = *(_DWORD *)(v16 + 1);
              if (v15 >= *(_DWORD *)(a1 + 28))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v24);
                int v15 = *(_DWORD *)(a1 + 24);
                uint64_t v14 = *(void *)(a1 + 16);
              }
              *(_DWORD *)(a1 + 24) = v15 + 1;
              *(_DWORD *)(v14 + 4 * v15) = v21;
              ++v20;
              v16 += 5;
              ++v15;
              if (v19 == v20)
              {
                int v20 = v19;
                break;
              }
            }
            if (v20) {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 5 * v20);
            }
          }
        }
      }
      if (v22 == v23 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (v10 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
  }
    }
}

void sub_100069860(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100069878(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  if (*(int *)(this + 24) >= 1)
  {
    uint64_t v5 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(*(void *)(v4 + 16) + 4 * v5++), a3);
    while (v5 < *(int *)(v4 + 24));
  }
  int v8 = *(void **)(v4 + 8);
  unsigned int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  uint64_t v6 = v8;
  if (v8 && *v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

uint64_t sub_100069914(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  if (*(int *)(a1 + 24) >= 1)
  {
    uint64_t v3 = 0;
    do
    {
      int v4 = *(_DWORD *)(*(void *)(a1 + 16) + 4 * v3);
      *(unsigned char *)a2 = 13;
      *(_DWORD *)(a2 + 1) = v4;
      a2 += 5;
      ++v3;
    }
    while (v3 < *(int *)(a1 + 24));
  }
  unsigned int v7 = *(void **)(a1 + 8);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v5, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
}

uint64_t sub_100069984(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v5 = *(void **)(a1 + 8);
  uint64_t v3 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v4 = v5;
  uint64_t v6 = (5 * *((_DWORD *)v3 + 4));
  if (v5 && *v4 != v4[1]) {
    uint64_t v6 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v3, a2)
  }
       + v6;
  *(_DWORD *)(a1 + 32) = v6;
  return v6;
}

uint64_t sub_1000699D0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000693E8((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100069AA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100069ABC(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100069B48()
{
  return 1;
}

uint64_t sub_100069B50()
{
  uint64_t v0 = qword_1008A0830;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100059FAC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A07B0;
}

void sub_100069BE4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100069BF8(uint64_t a1)
{
  *(void *)a1 = off_100848590;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  return a1;
}

void sub_100069C48(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100069C5C(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), *(_DWORD *)(a2 + 24) + a1[6]);
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 16) + 8 * v4);
      int v6 = a1[7];
      uint64_t v7 = (int)a1[6];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[8])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), v6 + 1);
          int v6 = a1[7];
        }
        a1[7] = v6 + 1;
        sub_10006F864();
      }
      uint64_t v8 = *((void *)a1 + 2);
      a1[6] = v7 + 1;
      sub_1000693E8(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 24));
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100069D90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100069DA8(uint64_t *a1)
{
  *a1 = (uint64_t)off_100848590;
  sub_10006F938(a1 + 2);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100069E0C(uint64_t *a1)
{
  sub_100069DA8(a1);

  operator delete();
}

uint64_t sub_100069E44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_100069E4C()
{
}

void sub_100069E8C()
{
}

uint64_t sub_100069EB0(uint64_t a1)
{
  uint64_t result = sub_10006F8C8(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 8);
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)v3 + 9) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return result;
}

uint64_t sub_100069F04(int *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4);
  unsigned int v7 = a1 + 8;
  while (1)
  {
LABEL_2:
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
    }
    if (TagFallback == 10)
    {
      while (1)
      {
        int v10 = a1[7];
        uint64_t v11 = a1[6];
        if ((int)v11 >= v10)
        {
          if (v10 == a1[8])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v10 + 1);
            int v10 = a1[7];
          }
          a1[7] = v10 + 1;
          sub_10006F864();
        }
        uint64_t v12 = *((void *)a1 + 2);
        a1[6] = v11 + 1;
        uint64_t v13 = *(void *)(v12 + 8 * v11);
        unsigned int v26 = 0;
        uint64_t v14 = (char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26))return 0; {
        }
          }
        else
        {
          unsigned int v26 = *v14;
          *((void *)this + 1) = v14 + 1;
        }
        int v15 = *((_DWORD *)this + 14);
        int v16 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v15 + 1;
        if (v15 >= v16) {
          return 0;
        }
        int v17 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v26);
        if (!sub_1000695F4(v13, this, v18, v19) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v17);
        int v20 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)this + 14) = v22;
        }
        unsigned int v23 = (unsigned char *)*((void *)this + 1);
        int v24 = (unsigned char *)*((void *)this + 2);
        if (v23 >= v24 || *v23 != 10)
        {
          if (v23 == v24 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((void *)this + 1) = v23 + 1;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_10006A100(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(int *)(this + 24) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 16) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 24));
  }
  int v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10006A19C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  if (*((int *)this + 6) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = *(void *)(*((void *)this + 2) + 8 * v5);
      *(unsigned char *)a2 = 10;
      unsigned int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v6 + 32);
      if (v7 > 0x7F)
      {
        uint64_t v8 = (char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, (int)a2 + 1, a3);
      }
      else
      {
        *((unsigned char *)a2 + 1) = (_BYTE)v7;
        uint64_t v8 = (char *)a2 + 2;
      }
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100069914(v6, (uint64_t)v8, a3);
      ++v5;
    }
    while (v5 < *((int *)this + 6));
  }
  uint64_t v11 = (void *)*((void *)this + 1);
  int v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v9 = v11;
  if (!v11 || *v9 == v9[1]) {
    return a2;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v10, a2, a3);
}

uint64_t sub_10006A268(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 24);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100069984(*(void *)(*(void *)(a1 + 16) + 8 * v4), a2);
      int v6 = (int)v5;
      if (v5 >= 0x80) {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
      }
      else {
        int v7 = 1;
      }
      uint64_t v3 = (v6 + v3 + v7);
      ++v4;
    }
    while (v4 < *(int *)(a1 + 24));
  }
  uint64_t v8 = *(void **)(a1 + 8);
  if (v8 && *v8 != v8[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  }
  *(_DWORD *)(a1 + 40) = v3;
  return v3;
}

uint64_t sub_10006A308(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100069C5C(a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10006A3DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10006A3F4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10006A480()
{
  return 1;
}

uint64_t sub_10006A488()
{
  uint64_t v0 = qword_1008A0830;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100059FAC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A07C0;
}

void sub_10006A51C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10006A530(uint64_t a1)
{
  *(void *)a1 = off_100848640;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(void *)(a1 + 280) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(void *)(a1 + 176) = 0;
  return a1;
}

void sub_10006A5BC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10006A5D0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v26);
  }
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    sub_10006F57C(a1 + 24, *(_DWORD *)(a1 + 32) + v4);
    memcpy((void *)(*(void *)(a1 + 24) + 4 * *(int *)(a1 + 32)), *(const void **)(a2 + 24), 4 * *(int *)(a2 + 32));
    *(_DWORD *)(a1 + 32) += *(_DWORD *)(a2 + 32);
  }
  int v5 = *(_DWORD *)(a2 + 48);
  if (v5)
  {
    sub_10006F628(a1 + 40, *(_DWORD *)(a1 + 48) + v5);
    memcpy((void *)(*(void *)(a1 + 40) + 8 * *(int *)(a1 + 48)), *(const void **)(a2 + 40), 8 * *(int *)(a2 + 48));
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
  }
  int v6 = *(_DWORD *)(a2 + 64);
  if (v6)
  {
    sub_10006F57C(a1 + 56, *(_DWORD *)(a1 + 64) + v6);
    memcpy((void *)(*(void *)(a1 + 56) + 4 * *(int *)(a1 + 64)), *(const void **)(a2 + 56), 4 * *(int *)(a2 + 64));
    *(_DWORD *)(a1 + 64) += *(_DWORD *)(a2 + 64);
  }
  int v7 = *(_DWORD *)(a2 + 80);
  if (v7)
  {
    sub_10006F628(a1 + 72, *(_DWORD *)(a1 + 80) + v7);
    memcpy((void *)(*(void *)(a1 + 72) + 8 * *(int *)(a1 + 80)), *(const void **)(a2 + 72), 8 * *(int *)(a2 + 80));
    *(_DWORD *)(a1 + 80) += *(_DWORD *)(a2 + 80);
  }
  int v8 = *(_DWORD *)(a2 + 104);
  if (v8)
  {
    sub_10006F57C(a1 + 96, *(_DWORD *)(a1 + 104) + v8);
    memcpy((void *)(*(void *)(a1 + 96) + 4 * *(int *)(a1 + 104)), *(const void **)(a2 + 96), 4 * *(int *)(a2 + 104));
    *(_DWORD *)(a1 + 104) += *(_DWORD *)(a2 + 104);
  }
  int v9 = *(_DWORD *)(a2 + 136);
  if (v9)
  {
    sub_10006F57C(a1 + 128, *(_DWORD *)(a1 + 136) + v9);
    memcpy((void *)(*(void *)(a1 + 128) + 4 * *(int *)(a1 + 136)), *(const void **)(a2 + 128), 4 * *(int *)(a2 + 136));
    *(_DWORD *)(a1 + 136) += *(_DWORD *)(a2 + 136);
  }
  int v10 = *(_DWORD *)(a2 + 152);
  if (v10)
  {
    sub_10006F57C(a1 + 144, *(_DWORD *)(a1 + 152) + v10);
    memcpy((void *)(*(void *)(a1 + 144) + 4 * *(int *)(a1 + 152)), *(const void **)(a2 + 144), 4 * *(int *)(a2 + 152));
    *(_DWORD *)(a1 + 152) += *(_DWORD *)(a2 + 152);
  }
  int v11 = *(_DWORD *)(a2 + 168);
  if (v11)
  {
    sub_10006F57C(a1 + 160, *(_DWORD *)(a1 + 168) + v11);
    memcpy((void *)(*(void *)(a1 + 160) + 4 * *(int *)(a1 + 168)), *(const void **)(a2 + 160), 4 * *(int *)(a2 + 168));
    *(_DWORD *)(a1 + 168) += *(_DWORD *)(a2 + 168);
  }
  int v12 = *(_DWORD *)(a2 + 192);
  if (v12)
  {
    sub_10006F57C(a1 + 184, *(_DWORD *)(a1 + 192) + v12);
    memcpy((void *)(*(void *)(a1 + 184) + 4 * *(int *)(a1 + 192)), *(const void **)(a2 + 184), 4 * *(int *)(a2 + 192));
    *(_DWORD *)(a1 + 192) += *(_DWORD *)(a2 + 192);
  }
  int v13 = *(_DWORD *)(a2 + 208);
  if (v13)
  {
    sub_10006F57C(a1 + 200, *(_DWORD *)(a1 + 208) + v13);
    memcpy((void *)(*(void *)(a1 + 200) + 4 * *(int *)(a1 + 208)), *(const void **)(a2 + 200), 4 * *(int *)(a2 + 208));
    *(_DWORD *)(a1 + 208) += *(_DWORD *)(a2 + 208);
  }
  int v14 = *(_DWORD *)(a2 + 224);
  if (v14)
  {
    sub_10006F57C(a1 + 216, *(_DWORD *)(a1 + 224) + v14);
    memcpy((void *)(*(void *)(a1 + 216) + 4 * *(int *)(a1 + 224)), *(const void **)(a2 + 216), 4 * *(int *)(a2 + 224));
    *(_DWORD *)(a1 + 224) += *(_DWORD *)(a2 + 224);
  }
  int v15 = *(_DWORD *)(a2 + 240);
  if (v15)
  {
    sub_10006F57C(a1 + 232, *(_DWORD *)(a1 + 240) + v15);
    memcpy((void *)(*(void *)(a1 + 232) + 4 * *(int *)(a1 + 240)), *(const void **)(a2 + 232), 4 * *(int *)(a2 + 240));
    *(_DWORD *)(a1 + 240) += *(_DWORD *)(a2 + 240);
  }
  int v16 = *(_DWORD *)(a2 + 256);
  if (v16)
  {
    sub_10006F628(a1 + 248, *(_DWORD *)(a1 + 256) + v16);
    memcpy((void *)(*(void *)(a1 + 248) + 8 * *(int *)(a1 + 256)), *(const void **)(a2 + 248), 8 * *(int *)(a2 + 256));
    *(_DWORD *)(a1 + 256) += *(_DWORD *)(a2 + 256);
  }
  int v17 = *(_DWORD *)(a2 + 272);
  if (v17)
  {
    sub_10006F628(a1 + 264, *(_DWORD *)(a1 + 272) + v17);
    memcpy((void *)(*(void *)(a1 + 264) + 8 * *(int *)(a1 + 272)), *(const void **)(a2 + 264), 8 * *(int *)(a2 + 272));
    *(_DWORD *)(a1 + 272) += *(_DWORD *)(a2 + 272);
  }
  int v18 = *(_DWORD *)(a2 + 284);
  if ((_BYTE)v18)
  {
    if (v18)
    {
      uint64_t v24 = *(void *)(a2 + 16);
      *(_DWORD *)(a1 + 284) |= 1u;
      *(void *)(a1 + 16) = v24;
      int v18 = *(_DWORD *)(a2 + 284);
      if ((v18 & 0x20) == 0)
      {
LABEL_34:
        if ((v18 & 0x80) == 0) {
          goto LABEL_36;
        }
        goto LABEL_35;
      }
    }
    else if ((v18 & 0x20) == 0)
    {
      goto LABEL_34;
    }
    uint64_t v25 = *(void *)(a2 + 88);
    *(_DWORD *)(a1 + 284) |= 0x20u;
    *(void *)(a1 + 88) = v25;
    int v18 = *(_DWORD *)(a2 + 284);
    if ((v18 & 0x80) != 0)
    {
LABEL_35:
      uint64_t v19 = *(void *)(a2 + 112);
      *(_DWORD *)(a1 + 284) |= 0x80u;
      *(void *)(a1 + 112) = v19;
      int v18 = *(_DWORD *)(a2 + 284);
    }
  }
LABEL_36:
  if ((v18 & 0xFF00) != 0)
  {
    if ((v18 & 0x100) != 0)
    {
      int v20 = *(const std::string **)(a2 + 120);
      *(_DWORD *)(a1 + 284) |= 0x100u;
      BOOL v21 = *(std::string **)(a1 + 120);
      if (v21 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      std::string::operator=(v21, v20);
      int v18 = *(_DWORD *)(a2 + 284);
    }
    if ((v18 & 0x1000) != 0)
    {
      uint64_t v22 = *(void *)(a2 + 176);
      *(_DWORD *)(a1 + 284) |= 0x1000u;
      *(void *)(a1 + 176) = v22;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10006AAF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10006AB08(void *a1)
{
  *a1 = off_100848640;
  sub_10006ACEC((uint64_t)a1);
  if (a1[33]) {
    operator delete[]();
  }
  if (a1[31]) {
    operator delete[]();
  }
  if (a1[29]) {
    operator delete[]();
  }
  if (a1[27]) {
    operator delete[]();
  }
  if (a1[25]) {
    operator delete[]();
  }
  if (a1[23]) {
    operator delete[]();
  }
  if (a1[20]) {
    operator delete[]();
  }
  if (a1[18]) {
    operator delete[]();
  }
  if (a1[16]) {
    operator delete[]();
  }
  if (a1[12]) {
    operator delete[]();
  }
  if (a1[9]) {
    operator delete[]();
  }
  if (a1[7]) {
    operator delete[]();
  }
  if (a1[5]) {
    operator delete[]();
  }
  if (a1[3]) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_10006ACEC(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 120);
  if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  return result;
}

void sub_10006AD64(void *a1)
{
  sub_10006AB08(a1);

  operator delete();
}

uint64_t sub_10006AD9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 280) = a2;
  return result;
}

void sub_10006ADA4()
{
}

void sub_10006ADE4()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10006AE08(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 284);
  if ((_BYTE)v1)
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 88) = 0;
    *(void *)(a1 + 112) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    if ((v1 & 0x100) != 0)
    {
      uint64_t v2 = *(void *)(a1 + 120);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(void *)(a1 + 176) = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 6) = 0;
  *((_DWORD *)result + 10) = 0;
  *((_DWORD *)result + 14) = 0;
  *((_DWORD *)result + 18) = 0;
  *((_DWORD *)result + 24) = 0;
  *((_DWORD *)result + 32) = 0;
  *((_DWORD *)result + 36) = 0;
  *((_DWORD *)result + 40) = 0;
  *((_DWORD *)result + 46) = 0;
  *((_DWORD *)result + 50) = 0;
  *((_DWORD *)result + 54) = 0;
  *((_DWORD *)result + 58) = 0;
  *((_DWORD *)result + 62) = 0;
  *((_DWORD *)result + 66) = 0;
  *((_DWORD *)result + 69) = 0;
  if (v4) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10006AEB0(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v189 = a1 + 248;
  uint64_t v190 = a1 + 232;
  uint64_t v191 = a1 + 216;
  uint64_t v192 = a1 + 264;
  uint64_t v203 = a1 + 144;
  uint64_t v197 = a1 + 184;
  uint64_t v198 = a1 + 128;
  uint64_t v201 = a1 + 160;
  uint64_t v202 = a1 + 96;
  uint64_t v204 = a1 + 72;
  uint64_t v205 = a1 + 200;
  uint64_t v199 = a1 + 40;
  uint64_t v200 = a1 + 56;
  v188 = (unint64_t *)(a1 + 16);
  uint64_t v195 = a1 + 24;
  v196 = (unint64_t *)(a1 + 88);
  v193 = (unint64_t *)(a1 + 176);
  v194 = (unint64_t *)(a1 + 112);
  unsigned int v6 = a1 + 8;
LABEL_2:
  while (2)
  {
    int v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        int v10 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v10 >= v11 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v188);
          if (!result) {
            return result;
          }
          int v12 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          unint64_t *v188 = *v10;
          int v12 = v10 + 1;
          *((void *)this + 1) = v12;
        }
        *(_DWORD *)(a1 + 284) |= 1u;
        if ((unint64_t)v12 >= v11 || *v12 != 21) {
          continue;
        }
        goto LABEL_129;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 == 2)
        {
          uint64_t result = sub_10005CDA4(this, v195);
          if (!result) {
            return result;
          }
          goto LABEL_146;
        }
        if (v9 != 5)
        {
LABEL_67:
          if (v9 == 4) {
            return 1;
          }
          if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
          continue;
          }
        }
        while (1)
        {
          v206[0] = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v206) & 1) == 0) {
            return 0;
          }
          unsigned int v42 = v206[0];
          int v43 = *(_DWORD *)(a1 + 32);
          if (v43 == *(_DWORD *)(a1 + 36))
          {
            sub_10006F57C(v195, v43 + 1);
            int v43 = *(_DWORD *)(a1 + 32);
          }
          uint64_t v44 = *(void *)(a1 + 24);
          int v45 = v43 + 1;
          *(_DWORD *)(a1 + 32) = v43 + 1;
          *(_DWORD *)(v44 + 4 * v43) = v42;
          uint64_t v46 = *((void *)this + 1);
          int v47 = *((_DWORD *)this + 4) - v46;
          if (v47 >= 1)
          {
            signed int v48 = v47 / 5u;
            int v49 = v48 >= *(_DWORD *)(a1 + 36) - v45 ? *(_DWORD *)(a1 + 36) - v45 : v48;
            if (v49 >= 1)
            {
              int v50 = 0;
              while (*(unsigned char *)v46 == 21)
              {
                int v51 = *(_DWORD *)(v46 + 1);
                if (v45 >= *(_DWORD *)(a1 + 36))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v206);
                  int v45 = *(_DWORD *)(a1 + 32);
                  uint64_t v44 = *(void *)(a1 + 24);
                }
                *(_DWORD *)(a1 + 32) = v45 + 1;
                *(_DWORD *)(v44 + 4 * v45) = v51;
                ++v50;
                v46 += 5;
                ++v45;
                if (v49 == v50)
                {
                  int v50 = v49;
                  break;
                }
              }
              if (v50) {
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 5 * v50);
              }
            }
          }
LABEL_146:
          int v12 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v12 >= *((void *)this + 2)) {
            goto LABEL_2;
          }
          int v52 = *v12;
          if (v52 != 21) {
            break;
          }
LABEL_129:
          *((void *)this + 1) = v12 + 1;
        }
        if (v52 != 25) {
          continue;
        }
LABEL_149:
        *((void *)this + 1) = v12 + 1;
LABEL_150:
        *(void *)v206 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v206))
        {
          uint64_t v53 = *(void *)v206;
          int v54 = *(_DWORD *)(a1 + 48);
          if (v54 == *(_DWORD *)(a1 + 52))
          {
            sub_10006F628(v199, v54 + 1);
            int v54 = *(_DWORD *)(a1 + 48);
          }
          uint64_t v55 = *(void *)(a1 + 40);
          int v56 = v54 + 1;
          *(_DWORD *)(a1 + 48) = v54 + 1;
          *(void *)(v55 + 8 * v54) = v53;
          uint64_t v57 = *((void *)this + 1);
          int v58 = *((_DWORD *)this + 4) - v57;
          if (v58 >= 1)
          {
            signed int v59 = v58 / 9u;
            int v60 = v59 >= *(_DWORD *)(a1 + 52) - v56 ? *(_DWORD *)(a1 + 52) - v56 : v59;
            if (v60 >= 1)
            {
              int v61 = 0;
              while (*(unsigned char *)v57 == 25)
              {
                uint64_t v62 = *(void *)(v57 + 1);
                if (v56 >= *(_DWORD *)(a1 + 52))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v206);
                  int v56 = *(_DWORD *)(a1 + 48);
                  uint64_t v55 = *(void *)(a1 + 40);
                }
                *(_DWORD *)(a1 + 48) = v56 + 1;
                *(void *)(v55 + 8 * v56) = v62;
                ++v61;
                v57 += 9;
                ++v56;
                if (v60 == v61)
                {
                  int v61 = v60;
                  break;
                }
              }
              if (v61) {
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * v61);
              }
            }
          }
LABEL_166:
          int v12 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
          if ((unint64_t)v12 >= v15) {
            continue;
          }
          int v63 = *v12;
          if (v63 == 25) {
            goto LABEL_149;
          }
          if (v63 == 32)
          {
            for (uint64_t i = v12 + 1; ; uint64_t i = (char *)(v27 + 1))
            {
              *((void *)this + 1) = i;
LABEL_171:
              v206[0] = 0;
              if ((unint64_t)i >= v15 || *i < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v206);
                if (!result) {
                  return result;
                }
                unsigned int v64 = v206[0];
              }
              else
              {
                unsigned int v64 = *i;
                *((void *)this + 1) = i + 1;
              }
              int v65 = *(_DWORD *)(a1 + 64);
              if (v65 == *(_DWORD *)(a1 + 68))
              {
                sub_10006F57C(v200, v65 + 1);
                int v65 = *(_DWORD *)(a1 + 64);
              }
              uint64_t v66 = *(void *)(a1 + 56);
              *(_DWORD *)(a1 + 64) = v65 + 1;
              *(_DWORD *)(v66 + 4 * v65) = v64;
              int v67 = *(_DWORD *)(a1 + 68) - *(_DWORD *)(a1 + 64);
              if (v67 >= 1)
              {
                int v68 = v67 + 1;
                do
                {
                  int v69 = (unsigned char *)*((void *)this + 1);
                  unint64_t v70 = *((void *)this + 2);
                  if ((unint64_t)v69 >= v70 || *v69 != 32) {
                    break;
                  }
                  *((void *)this + 1) = v69 + 1;
                  v206[0] = 0;
                  if ((unint64_t)(v69 + 1) >= v70 || (char)v69[1] < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v206);
                    if (!result) {
                      return result;
                    }
                    unsigned int v71 = v206[0];
                  }
                  else
                  {
                    unsigned int v71 = v69[1];
                    *((void *)this + 1) = v69 + 2;
                  }
                  int v72 = *(_DWORD *)(a1 + 64);
                  if (v72 >= *(_DWORD *)(a1 + 68))
                  {
                    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v206);
                    int v72 = *(_DWORD *)(a1 + 64);
                  }
                  uint64_t v73 = *(void *)(a1 + 56);
                  *(_DWORD *)(a1 + 64) = v72 + 1;
                  *(_DWORD *)(v73 + 4 * v72) = v71;
                  --v68;
                }
                while (v68 > 1);
              }
LABEL_190:
              BOOL v27 = (unsigned __int8 *)*((void *)this + 1);
              unint64_t v15 = *((void *)this + 2);
              if ((unint64_t)v27 >= v15) {
                break;
              }
              int v74 = *v27;
              if (v74 == 41)
              {
                while (1)
                {
                  *((void *)this + 1) = v27 + 1;
LABEL_195:
                  *(void *)v206 = 0;
                  if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v206) & 1) == 0)return 0; {
                  uint64_t v75 = *(void *)v206;
                  }
                  int v76 = *(_DWORD *)(a1 + 80);
                  if (v76 == *(_DWORD *)(a1 + 84))
                  {
                    sub_10006F628(v204, v76 + 1);
                    int v76 = *(_DWORD *)(a1 + 80);
                  }
                  uint64_t v77 = *(void *)(a1 + 72);
                  int v78 = v76 + 1;
                  *(_DWORD *)(a1 + 80) = v76 + 1;
                  *(void *)(v77 + 8 * v76) = v75;
                  uint64_t v79 = *((void *)this + 1);
                  int v80 = *((_DWORD *)this + 4) - v79;
                  if (v80 >= 1)
                  {
                    signed int v81 = v80 / 9u;
                    int v82 = v81 >= *(_DWORD *)(a1 + 84) - v78 ? *(_DWORD *)(a1 + 84) - v78 : v81;
                    if (v82 >= 1)
                    {
                      int v83 = 0;
                      while (*(unsigned char *)v79 == 41)
                      {
                        uint64_t v84 = *(void *)(v79 + 1);
                        if (v78 >= *(_DWORD *)(a1 + 84))
                        {
                          wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                          wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                          wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                          wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v206);
                          int v78 = *(_DWORD *)(a1 + 80);
                          uint64_t v77 = *(void *)(a1 + 72);
                        }
                        *(_DWORD *)(a1 + 80) = v78 + 1;
                        *(void *)(v77 + 8 * v78) = v84;
                        ++v83;
                        v79 += 9;
                        ++v78;
                        if (v82 == v83)
                        {
                          int v83 = v82;
                          break;
                        }
                      }
                      if (v83) {
                        wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * v83);
                      }
                    }
                  }
LABEL_95:
                  BOOL v27 = (unsigned __int8 *)*((void *)this + 1);
                  unint64_t v16 = *((void *)this + 2);
                  if ((unint64_t)v27 >= v16) {
                    goto LABEL_2;
                  }
                  int v28 = *v27;
                  if (v28 != 41)
                  {
                    if (v28 == 48)
                    {
                      int v17 = (char *)(v27 + 1);
                      *((void *)this + 1) = v27 + 1;
LABEL_99:
                      if ((unint64_t)v17 >= v16 || *v17 < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v196);
                        if (!result) {
                          return result;
                        }
                        BOOL v29 = (unsigned char *)*((void *)this + 1);
                        unint64_t v16 = *((void *)this + 2);
                      }
                      else
                      {
                        unint64_t *v196 = *v17;
                        BOOL v29 = v17 + 1;
                        *((void *)this + 1) = v29;
                      }
                      *(_DWORD *)(a1 + 284) |= 0x20u;
                      if ((unint64_t)v29 < v16 && *v29 == 61)
                      {
                        while (1)
                        {
                          *((void *)this + 1) = v29 + 1;
LABEL_212:
                          v206[0] = 0;
                          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v206) & 1) == 0)return 0; {
                          unsigned int v85 = v206[0];
                          }
                          int v86 = *(_DWORD *)(a1 + 104);
                          if (v86 == *(_DWORD *)(a1 + 108))
                          {
                            sub_10006F57C(v202, v86 + 1);
                            int v86 = *(_DWORD *)(a1 + 104);
                          }
                          uint64_t v87 = *(void *)(a1 + 96);
                          int v88 = v86 + 1;
                          *(_DWORD *)(a1 + 104) = v86 + 1;
                          *(_DWORD *)(v87 + 4 * v86) = v85;
                          uint64_t v89 = *((void *)this + 1);
                          int v90 = *((_DWORD *)this + 4) - v89;
                          if (v90 >= 1)
                          {
                            signed int v91 = v90 / 5u;
                            int v92 = v91 >= *(_DWORD *)(a1 + 108) - v88 ? *(_DWORD *)(a1 + 108) - v88 : v91;
                            if (v92 >= 1)
                            {
                              int v93 = 0;
                              while (*(unsigned char *)v89 == 61)
                              {
                                int v94 = *(_DWORD *)(v89 + 1);
                                if (v88 >= *(_DWORD *)(a1 + 108))
                                {
                                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v206);
                                  int v88 = *(_DWORD *)(a1 + 104);
                                  uint64_t v87 = *(void *)(a1 + 96);
                                }
                                *(_DWORD *)(a1 + 104) = v88 + 1;
                                *(_DWORD *)(v87 + 4 * v88) = v94;
                                ++v93;
                                v89 += 5;
                                ++v88;
                                if (v92 == v93)
                                {
                                  int v93 = v92;
                                  break;
                                }
                              }
                              if (v93) {
                                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 5 * v93);
                              }
                            }
                          }
LABEL_228:
                          BOOL v29 = (unsigned char *)*((void *)this + 1);
                          unint64_t v18 = *((void *)this + 2);
                          if ((unint64_t)v29 >= v18) {
                            break;
                          }
                          int v95 = *v29;
                          if (v95 != 61)
                          {
                            if (v95 == 64)
                            {
                              uint64_t v19 = v29 + 1;
                              *((void *)this + 1) = v19;
LABEL_232:
                              if ((unint64_t)v19 >= v18 || *v19 < 0)
                              {
                                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v194);
                                if (!result) {
                                  return result;
                                }
                                unint64_t v96 = (unsigned char *)*((void *)this + 1);
                                unint64_t v18 = *((void *)this + 2);
                              }
                              else
                              {
                                unint64_t *v194 = *v19;
                                unint64_t v96 = v19 + 1;
                                *((void *)this + 1) = v96;
                              }
                              int v20 = *(_DWORD *)(a1 + 284) | 0x80;
                              *(_DWORD *)(a1 + 284) = v20;
                              if ((unint64_t)v96 < v18 && *v96 == 74)
                              {
                                *((void *)this + 1) = v96 + 1;
LABEL_240:
                                *(_DWORD *)(a1 + 284) = v20 | 0x100;
                                if (*(_UNKNOWN **)(a1 + 120) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
                                  operator new();
                                }
                                uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
                                if (!result) {
                                  return result;
                                }
                                uint64_t v97 = (unsigned char *)*((void *)this + 1);
                                unint64_t v21 = *((void *)this + 2);
                                if ((unint64_t)v97 < v21 && *v97 == 80)
                                {
                                  for (j = v97 + 1; ; j = (char *)(v108 + 1))
                                  {
                                    *((void *)this + 1) = j;
LABEL_247:
                                    v206[0] = 0;
                                    if ((unint64_t)j >= v21 || *j < 0)
                                    {
                                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v206);
                                      if (!result) {
                                        return result;
                                      }
                                      unsigned int v98 = v206[0];
                                    }
                                    else
                                    {
                                      unsigned int v98 = *j;
                                      *((void *)this + 1) = j + 1;
                                    }
                                    int v99 = *(_DWORD *)(a1 + 136);
                                    if (v99 == *(_DWORD *)(a1 + 140))
                                    {
                                      sub_10006F57C(v198, v99 + 1);
                                      int v99 = *(_DWORD *)(a1 + 136);
                                    }
                                    uint64_t v100 = *(void *)(a1 + 128);
                                    *(_DWORD *)(a1 + 136) = v99 + 1;
                                    *(_DWORD *)(v100 + 4 * v99) = v98;
                                    int v101 = *(_DWORD *)(a1 + 140) - *(_DWORD *)(a1 + 136);
                                    if (v101 >= 1)
                                    {
                                      int v102 = v101 + 1;
                                      do
                                      {
                                        unint64_t v103 = (unsigned char *)*((void *)this + 1);
                                        unint64_t v104 = *((void *)this + 2);
                                        if ((unint64_t)v103 >= v104 || *v103 != 80) {
                                          break;
                                        }
                                        *((void *)this + 1) = v103 + 1;
                                        v206[0] = 0;
                                        if ((unint64_t)(v103 + 1) >= v104 || (char)v103[1] < 0)
                                        {
                                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v206);
                                          if (!result) {
                                            return result;
                                          }
                                          unsigned int v105 = v206[0];
                                        }
                                        else
                                        {
                                          unsigned int v105 = v103[1];
                                          *((void *)this + 1) = v103 + 2;
                                        }
                                        int v106 = *(_DWORD *)(a1 + 136);
                                        if (v106 >= *(_DWORD *)(a1 + 140))
                                        {
                                          wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                          wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                          wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                          wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v206);
                                          int v106 = *(_DWORD *)(a1 + 136);
                                        }
                                        uint64_t v107 = *(void *)(a1 + 128);
                                        *(_DWORD *)(a1 + 136) = v106 + 1;
                                        *(_DWORD *)(v107 + 4 * v106) = v105;
                                        --v102;
                                      }
                                      while (v102 > 1);
                                    }
LABEL_266:
                                    long long v108 = (unsigned __int8 *)*((void *)this + 1);
                                    unint64_t v21 = *((void *)this + 2);
                                    if ((unint64_t)v108 >= v21) {
                                      break;
                                    }
                                    int v109 = *v108;
                                    if (v109 == 93)
                                    {
                                      while (1)
                                      {
                                        *((void *)this + 1) = v108 + 1;
LABEL_271:
                                        v206[0] = 0;
                                        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v206) & 1) == 0)return 0; {
                                        unsigned int v110 = v206[0];
                                        }
                                        int v111 = *(_DWORD *)(a1 + 152);
                                        if (v111 == *(_DWORD *)(a1 + 156))
                                        {
                                          sub_10006F57C(v203, v111 + 1);
                                          int v111 = *(_DWORD *)(a1 + 152);
                                        }
                                        uint64_t v112 = *(void *)(a1 + 144);
                                        int v113 = v111 + 1;
                                        *(_DWORD *)(a1 + 152) = v111 + 1;
                                        *(_DWORD *)(v112 + 4 * v111) = v110;
                                        uint64_t v114 = *((void *)this + 1);
                                        int v115 = *((_DWORD *)this + 4) - v114;
                                        if (v115 >= 1)
                                        {
                                          signed int v116 = v115 / 5u;
                                          int v117 = v116 >= *(_DWORD *)(a1 + 156) - v113
                                               ? *(_DWORD *)(a1 + 156) - v113
                                               : v116;
                                          if (v117 >= 1)
                                          {
                                            int v118 = 0;
                                            while (*(unsigned char *)v114 == 93)
                                            {
                                              int v119 = *(_DWORD *)(v114 + 1);
                                              if (v113 >= *(_DWORD *)(a1 + 156))
                                              {
                                                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v206);
                                                int v113 = *(_DWORD *)(a1 + 152);
                                                uint64_t v112 = *(void *)(a1 + 144);
                                              }
                                              *(_DWORD *)(a1 + 152) = v113 + 1;
                                              *(_DWORD *)(v112 + 4 * v113) = v119;
                                              ++v118;
                                              v114 += 5;
                                              ++v113;
                                              if (v117 == v118)
                                              {
                                                int v118 = v117;
                                                break;
                                              }
                                            }
                                            if (v118) {
                                              wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 5 * v118);
                                            }
                                          }
                                        }
LABEL_287:
                                        long long v108 = (unsigned __int8 *)*((void *)this + 1);
                                        unint64_t v24 = *((void *)this + 2);
                                        if ((unint64_t)v108 >= v24) {
                                          goto LABEL_2;
                                        }
                                        int v120 = *v108;
                                        if (v120 != 93)
                                        {
                                          if (v120 == 96)
                                          {
                                            for (k = (char *)(v108 + 1); ; k = (char *)(v131 + 1))
                                            {
                                              *((void *)this + 1) = k;
LABEL_292:
                                              v206[0] = 0;
                                              if ((unint64_t)k >= v24 || *k < 0)
                                              {
                                                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v206);
                                                if (!result) {
                                                  return result;
                                                }
                                                unsigned int v121 = v206[0];
                                              }
                                              else
                                              {
                                                unsigned int v121 = *k;
                                                *((void *)this + 1) = k + 1;
                                              }
                                              int v122 = *(_DWORD *)(a1 + 168);
                                              if (v122 == *(_DWORD *)(a1 + 172))
                                              {
                                                sub_10006F57C(v201, v122 + 1);
                                                int v122 = *(_DWORD *)(a1 + 168);
                                              }
                                              uint64_t v123 = *(void *)(a1 + 160);
                                              *(_DWORD *)(a1 + 168) = v122 + 1;
                                              *(_DWORD *)(v123 + 4 * v122) = v121;
                                              int v124 = *(_DWORD *)(a1 + 172) - *(_DWORD *)(a1 + 168);
                                              if (v124 >= 1)
                                              {
                                                int v125 = v124 + 1;
                                                do
                                                {
                                                  __int16 v126 = (unsigned char *)*((void *)this + 1);
                                                  unint64_t v127 = *((void *)this + 2);
                                                  if ((unint64_t)v126 >= v127 || *v126 != 96) {
                                                    break;
                                                  }
                                                  *((void *)this + 1) = v126 + 1;
                                                  v206[0] = 0;
                                                  if ((unint64_t)(v126 + 1) >= v127 || (char)v126[1] < 0)
                                                  {
                                                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v206);
                                                    if (!result) {
                                                      return result;
                                                    }
                                                    unsigned int v128 = v206[0];
                                                  }
                                                  else
                                                  {
                                                    unsigned int v128 = v126[1];
                                                    *((void *)this + 1) = v126 + 2;
                                                  }
                                                  int v129 = *(_DWORD *)(a1 + 168);
                                                  if (v129 >= *(_DWORD *)(a1 + 172))
                                                  {
                                                    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v206);
                                                    int v129 = *(_DWORD *)(a1 + 168);
                                                  }
                                                  uint64_t v130 = *(void *)(a1 + 160);
                                                  *(_DWORD *)(a1 + 168) = v129 + 1;
                                                  *(_DWORD *)(v130 + 4 * v129) = v128;
                                                  --v125;
                                                }
                                                while (v125 > 1);
                                              }
LABEL_311:
                                              char v131 = (unsigned __int8 *)*((void *)this + 1);
                                              unint64_t v24 = *((void *)this + 2);
                                              if ((unint64_t)v131 >= v24) {
                                                break;
                                              }
                                              int v132 = *v131;
                                              if (v132 == 104)
                                              {
                                                uint64_t v25 = v131 + 1;
                                                *((void *)this + 1) = v25;
LABEL_316:
                                                if ((unint64_t)v25 >= v24 || (char)*v25 < 0)
                                                {
                                                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v193);
                                                  if (!result) {
                                                    return result;
                                                  }
                                                  int v40 = (unsigned __int8 *)*((void *)this + 1);
                                                  unint64_t v24 = *((void *)this + 2);
                                                }
                                                else
                                                {
                                                  unint64_t *v193 = *v25;
                                                  int v40 = v25 + 1;
                                                  *((void *)this + 1) = v40;
                                                }
                                                *(_DWORD *)(a1 + 284) |= 0x1000u;
                                                if ((unint64_t)v40 < v24)
                                                {
                                                  int v41 = *v40;
                                                  while (v41 == 112)
                                                  {
                                                    unsigned int v26 = (char *)(v40 + 1);
                                                    *((void *)this + 1) = v26;
LABEL_107:
                                                    v206[0] = 0;
                                                    if ((unint64_t)v26 >= v24 || *v26 < 0)
                                                    {
                                                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v206);
                                                      if (!result) {
                                                        return result;
                                                      }
                                                      unsigned int v30 = v206[0];
                                                    }
                                                    else
                                                    {
                                                      unsigned int v30 = *v26;
                                                      *((void *)this + 1) = v26 + 1;
                                                    }
                                                    int v31 = *(_DWORD *)(a1 + 192);
                                                    if (v31 == *(_DWORD *)(a1 + 196))
                                                    {
                                                      sub_10006F57C(v197, v31 + 1);
                                                      int v31 = *(_DWORD *)(a1 + 192);
                                                    }
                                                    uint64_t v32 = *(void *)(a1 + 184);
                                                    *(_DWORD *)(a1 + 192) = v31 + 1;
                                                    *(_DWORD *)(v32 + 4 * v31) = v30;
                                                    int v33 = *(_DWORD *)(a1 + 196) - *(_DWORD *)(a1 + 192);
                                                    if (v33 >= 1)
                                                    {
                                                      int v34 = v33 + 1;
                                                      do
                                                      {
                                                        unsigned int v35 = (unsigned char *)*((void *)this + 1);
                                                        unint64_t v36 = *((void *)this + 2);
                                                        if ((unint64_t)v35 >= v36 || *v35 != 112) {
                                                          break;
                                                        }
                                                        *((void *)this + 1) = v35 + 1;
                                                        v206[0] = 0;
                                                        if ((unint64_t)(v35 + 1) >= v36 || (char)v35[1] < 0)
                                                        {
                                                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v206);
                                                          if (!result) {
                                                            return result;
                                                          }
                                                          unsigned int v37 = v206[0];
                                                        }
                                                        else
                                                        {
                                                          unsigned int v37 = v35[1];
                                                          *((void *)this + 1) = v35 + 2;
                                                        }
                                                        int v38 = *(_DWORD *)(a1 + 192);
                                                        if (v38 >= *(_DWORD *)(a1 + 196))
                                                        {
                                                          wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                          wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                          wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                          wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v206);
                                                          int v38 = *(_DWORD *)(a1 + 192);
                                                        }
                                                        uint64_t v39 = *(void *)(a1 + 184);
                                                        *(_DWORD *)(a1 + 192) = v38 + 1;
                                                        *(_DWORD *)(v39 + 4 * v38) = v37;
                                                        --v34;
                                                      }
                                                      while (v34 > 1);
                                                    }
LABEL_126:
                                                    int v40 = (unsigned __int8 *)*((void *)this + 1);
                                                    unint64_t v24 = *((void *)this + 2);
                                                    if ((unint64_t)v40 >= v24) {
                                                      break;
                                                    }
                                                    int v41 = *v40;
                                                    if (v41 == 125)
                                                    {
                                                      do
                                                      {
                                                        *((void *)this + 1) = v40 + 1;
LABEL_326:
                                                        v206[0] = 0;
                                                        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v206) & 1) == 0)return 0; {
                                                        unsigned int v133 = v206[0];
                                                        }
                                                        int v134 = *(_DWORD *)(a1 + 208);
                                                        if (v134 == *(_DWORD *)(a1 + 212))
                                                        {
                                                          sub_10006F57C(v205, v134 + 1);
                                                          int v134 = *(_DWORD *)(a1 + 208);
                                                        }
                                                        uint64_t v135 = *(void *)(a1 + 200);
                                                        int v136 = v134 + 1;
                                                        *(_DWORD *)(a1 + 208) = v134 + 1;
                                                        *(_DWORD *)(v135 + 4 * v134) = v133;
                                                        uint64_t v137 = *((void *)this + 1);
                                                        int v138 = *((_DWORD *)this + 4) - v137;
                                                        if (v138 >= 1)
                                                        {
                                                          signed int v139 = v138 / 5u;
                                                          int v140 = v139 >= *(_DWORD *)(a1 + 212) - v136
                                                               ? *(_DWORD *)(a1 + 212) - v136
                                                               : v139;
                                                          if (v140 >= 1)
                                                          {
                                                            int v141 = 0;
                                                            while (*(unsigned char *)v137 == 125)
                                                            {
                                                              int v142 = *(_DWORD *)(v137 + 1);
                                                              if (v136 >= *(_DWORD *)(a1 + 212))
                                                              {
                                                                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v206);
                                                                int v136 = *(_DWORD *)(a1 + 208);
                                                                uint64_t v135 = *(void *)(a1 + 200);
                                                              }
                                                              *(_DWORD *)(a1 + 208) = v136 + 1;
                                                              *(_DWORD *)(v135 + 4 * v136) = v142;
                                                              ++v141;
                                                              v137 += 5;
                                                              ++v136;
                                                              if (v140 == v141)
                                                              {
                                                                int v141 = v140;
                                                                break;
                                                              }
                                                            }
                                                            if (v141) {
                                                              wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 5 * v141);
                                                            }
                                                          }
                                                        }
LABEL_342:
                                                        int v40 = (unsigned __int8 *)*((void *)this + 1);
                                                        unint64_t v143 = *((void *)this + 2);
                                                      }
                                                      while ((unint64_t)v40 < v143 && *v40 == 125);
                                                      if ((int)v143 - (int)v40 >= 2 && *v40 == 133 && v40[1] == 1)
                                                      {
                                                        while (1)
                                                        {
                                                          *((void *)this + 1) = v40 + 2;
LABEL_348:
                                                          if (wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)0x85, TagFallback) != 2)
                                                          {
                                                            wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                            wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                            wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                            wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v206);
                                                          }
                                                          v206[0] = 0;
                                                          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v206) & 1) == 0)return 0; {
                                                          unsigned int v144 = v206[0];
                                                          }
                                                          int v145 = *(_DWORD *)(a1 + 224);
                                                          if (v145 == *(_DWORD *)(a1 + 228))
                                                          {
                                                            sub_10006F57C(v191, v145 + 1);
                                                            int v145 = *(_DWORD *)(a1 + 224);
                                                          }
                                                          uint64_t v146 = *(void *)(a1 + 216);
                                                          int v147 = v145 + 1;
                                                          *(_DWORD *)(a1 + 224) = v145 + 1;
                                                          *(_DWORD *)(v146 + 4 * v145) = v144;
                                                          CFStringRef v148 = (unsigned __int8 *)*((void *)this + 1);
                                                          int v149 = *((_DWORD *)this + 4) - v148;
                                                          if (v149 >= 1)
                                                          {
                                                            signed int v150 = v149 / 6u;
                                                            int v151 = v150 >= *(_DWORD *)(a1 + 228) - v147
                                                                 ? *(_DWORD *)(a1 + 228) - v147
                                                                 : v150;
                                                            if (v151 >= 1)
                                                            {
                                                              int v152 = 0;
                                                              while (*v148 == 133 && v148[1] == 1)
                                                              {
                                                                int v153 = *(_DWORD *)(v148 + 2);
                                                                if (v147 >= *(_DWORD *)(a1 + 228))
                                                                {
                                                                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v206);
                                                                  int v147 = *(_DWORD *)(a1 + 224);
                                                                  uint64_t v146 = *(void *)(a1 + 216);
                                                                }
                                                                *(_DWORD *)(a1 + 224) = v147 + 1;
                                                                *(_DWORD *)(v146 + 4 * v147) = v153;
                                                                ++v152;
                                                                v148 += 6;
                                                                ++v147;
                                                                if (v151 == v152)
                                                                {
                                                                  int v152 = v151;
                                                                  break;
                                                                }
                                                              }
                                                              if (v152) {
                                                                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 6 * v152);
                                                              }
                                                            }
                                                          }
LABEL_367:
                                                          int v40 = (unsigned __int8 *)*((void *)this + 1);
                                                          if (*((_DWORD *)this + 4) - (int)v40 <= 1) {
                                                            break;
                                                          }
                                                          int v154 = *v40;
                                                          if (v154 == 141)
                                                          {
                                                            if (v40[1] == 1)
                                                            {
                                                              while (1)
                                                              {
                                                                *((void *)this + 1) = v40 + 2;
LABEL_374:
                                                                if (wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)0x8D, TagFallback) != 2)
                                                                {
                                                                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v206);
                                                                }
                                                                v206[0] = 0;
                                                                if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v206) & 1) == 0)return 0; {
                                                                unsigned int v155 = v206[0];
                                                                }
                                                                int v156 = *(_DWORD *)(a1 + 240);
                                                                if (v156 == *(_DWORD *)(a1 + 244))
                                                                {
                                                                  sub_10006F57C(v190, v156 + 1);
                                                                  int v156 = *(_DWORD *)(a1 + 240);
                                                                }
                                                                uint64_t v157 = *(void *)(a1 + 232);
                                                                int v158 = v156 + 1;
                                                                *(_DWORD *)(a1 + 240) = v156 + 1;
                                                                *(_DWORD *)(v157 + 4 * v156) = v155;
                                                                NSErrorUserInfoKey v159 = (unsigned __int8 *)*((void *)this + 1);
                                                                int v160 = *((_DWORD *)this + 4) - v159;
                                                                if (v160 >= 1)
                                                                {
                                                                  signed int v161 = v160 / 6u;
                                                                  int v162 = v161 >= *(_DWORD *)(a1 + 244) - v158
                                                                       ? *(_DWORD *)(a1 + 244) - v158
                                                                       : v161;
                                                                  if (v162 >= 1)
                                                                  {
                                                                    int v163 = 0;
                                                                    while (*v159 == 141 && v159[1] == 1)
                                                                    {
                                                                      int v164 = *(_DWORD *)(v159 + 2);
                                                                      if (v158 >= *(_DWORD *)(a1 + 244))
                                                                      {
                                                                        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v206);
                                                                        int v158 = *(_DWORD *)(a1 + 240);
                                                                        uint64_t v157 = *(void *)(a1 + 232);
                                                                      }
                                                                      *(_DWORD *)(a1 + 240) = v158 + 1;
                                                                      *(_DWORD *)(v157 + 4 * v158) = v164;
                                                                      ++v163;
                                                                      v159 += 6;
                                                                      ++v158;
                                                                      if (v162 == v163)
                                                                      {
                                                                        int v163 = v162;
                                                                        break;
                                                                      }
                                                                    }
                                                                    if (v163) {
                                                                      wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 6 * v163);
                                                                    }
                                                                  }
                                                                }
LABEL_393:
                                                                int v40 = (unsigned __int8 *)*((void *)this + 1);
                                                                if (*((_DWORD *)this + 4) - (int)v40 <= 1) {
                                                                  break;
                                                                }
                                                                int v165 = *v40;
                                                                if (v165 == 145)
                                                                {
                                                                  if (v40[1] == 1)
                                                                  {
                                                                    while (1)
                                                                    {
                                                                      *((void *)this + 1) = v40 + 2;
LABEL_400:
                                                                      if (wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)0x91, TagFallback) != 2)
                                                                      {
                                                                        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v206);
                                                                      }
                                                                      *(void *)v206 = 0;
                                                                      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v206) & 1) == 0)return 0; {
                                                                      uint64_t v166 = *(void *)v206;
                                                                      }
                                                                      int v167 = *(_DWORD *)(a1 + 256);
                                                                      if (v167 == *(_DWORD *)(a1 + 260))
                                                                      {
                                                                        sub_10006F628(v189, v167 + 1);
                                                                        int v167 = *(_DWORD *)(a1 + 256);
                                                                      }
                                                                      uint64_t v168 = *(void *)(a1 + 248);
                                                                      int v169 = v167 + 1;
                                                                      *(_DWORD *)(a1 + 256) = v167 + 1;
                                                                      *(void *)(v168 + 8 * v167) = v166;
                                                                      CFStringRef v170 = (unsigned __int8 *)*((void *)this + 1);
                                                                      int v171 = *((_DWORD *)this + 4) - v170;
                                                                      if (v171 >= 1)
                                                                      {
                                                                        signed int v172 = v171 / 0xAu;
                                                                        int v173 = v172 >= *(_DWORD *)(a1 + 260) - v169
                                                                             ? *(_DWORD *)(a1 + 260) - v169
                                                                             : v172;
                                                                        if (v173 >= 1)
                                                                        {
                                                                          int v174 = 0;
                                                                          while (*v170 == 145 && v170[1] == 1)
                                                                          {
                                                                            uint64_t v175 = *(void *)(v170 + 2);
                                                                            if (v169 >= *(_DWORD *)(a1 + 260))
                                                                            {
                                                                              wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                              wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                              wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                              wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v206);
                                                                              int v169 = *(_DWORD *)(a1 + 256);
                                                                              uint64_t v168 = *(void *)(a1 + 248);
                                                                            }
                                                                            *(_DWORD *)(a1 + 256) = v169 + 1;
                                                                            *(void *)(v168 + 8 * v169) = v175;
                                                                            ++v174;
                                                                            v170 += 10;
                                                                            ++v169;
                                                                            if (v173 == v174)
                                                                            {
                                                                              int v174 = v173;
                                                                              break;
                                                                            }
                                                                          }
                                                                          if (v174) {
                                                                            wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 10 * v174);
                                                                          }
                                                                        }
                                                                      }
LABEL_419:
                                                                      int v40 = (unsigned __int8 *)*((void *)this + 1);
                                                                      if (*((_DWORD *)this + 4) - (int)v40 <= 1) {
                                                                        goto LABEL_2;
                                                                      }
                                                                      int v176 = *v40;
                                                                      if (v176 == 153) {
                                                                        break;
                                                                      }
                                                                      if (v176 != 145 || v40[1] != 1) {
                                                                        goto LABEL_2;
                                                                      }
                                                                    }
                                                                    if (v40[1] == 1)
                                                                    {
                                                                      do
                                                                      {
                                                                        *((void *)this + 1) = v40 + 2;
LABEL_426:
                                                                        if (wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)0x99, TagFallback) != 2)
                                                                        {
                                                                          wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                          wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                          wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                          wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v206);
                                                                        }
                                                                        *(void *)v206 = 0;
                                                                        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v206) & 1) == 0)return 0; {
                                                                        uint64_t v177 = *(void *)v206;
                                                                        }
                                                                        int v178 = *(_DWORD *)(a1 + 272);
                                                                        if (v178 == *(_DWORD *)(a1 + 276))
                                                                        {
                                                                          sub_10006F628(v192, v178 + 1);
                                                                          int v178 = *(_DWORD *)(a1 + 272);
                                                                        }
                                                                        uint64_t v179 = *(void *)(a1 + 264);
                                                                        int v180 = v178 + 1;
                                                                        *(_DWORD *)(a1 + 272) = v178 + 1;
                                                                        *(void *)(v179 + 8 * v178) = v177;
                                                                        v181 = (unsigned __int8 *)*((void *)this + 1);
                                                                        int v182 = *((_DWORD *)this + 4) - v181;
                                                                        if (v182 >= 1)
                                                                        {
                                                                          signed int v183 = v182 / 0xAu;
                                                                          int v184 = v183 >= *(_DWORD *)(a1 + 276) - v180
                                                                               ? *(_DWORD *)(a1 + 276) - v180
                                                                               : v183;
                                                                          if (v184 >= 1)
                                                                          {
                                                                            int v185 = 0;
                                                                            while (*v181 == 153 && v181[1] == 1)
                                                                            {
                                                                              uint64_t v186 = *(void *)(v181 + 2);
                                                                              if (v180 >= *(_DWORD *)(a1 + 276))
                                                                              {
                                                                                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v206);
                                                                                int v180 = *(_DWORD *)(a1 + 272);
                                                                                uint64_t v179 = *(void *)(a1 + 264);
                                                                              }
                                                                              *(_DWORD *)(a1 + 272) = v180 + 1;
                                                                              *(void *)(v179 + 8 * v180) = v186;
                                                                              ++v185;
                                                                              v181 += 10;
                                                                              ++v180;
                                                                              if (v184 == v185)
                                                                              {
                                                                                int v185 = v184;
                                                                                break;
                                                                              }
                                                                            }
                                                                            if (v185) {
                                                                              wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 10 * v185);
                                                                            }
                                                                          }
                                                                        }
LABEL_445:
                                                                        int v40 = (unsigned __int8 *)*((void *)this + 1);
                                                                        v187 = (unsigned __int8 *)*((void *)this + 2);
                                                                      }
                                                                      while ((int)v187 - (int)v40 > 1
                                                                           && *v40 == 153
                                                                           && v40[1] == 1);
                                                                      if (v40 == v187
                                                                        && (*((_DWORD *)this + 11)
                                                                         || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                                                                      {
                                                                        *((_DWORD *)this + 8) = 0;
                                                                        uint64_t result = 1;
                                                                        *((unsigned char *)this + 36) = 1;
                                                                        return result;
                                                                      }
                                                                    }
                                                                  }
                                                                  goto LABEL_2;
                                                                }
                                                                if (v165 != 141 || v40[1] != 1) {
                                                                  goto LABEL_2;
                                                                }
                                                              }
                                                            }
                                                            goto LABEL_2;
                                                          }
                                                          if (v154 != 133 || v40[1] != 1) {
                                                            goto LABEL_2;
                                                          }
                                                        }
                                                      }
                                                      goto LABEL_2;
                                                    }
                                                  }
                                                }
                                                goto LABEL_2;
                                              }
                                              if (v132 != 96) {
                                                goto LABEL_2;
                                              }
                                            }
                                          }
                                          goto LABEL_2;
                                        }
                                      }
                                    }
                                    if (v109 != 80) {
                                      goto LABEL_2;
                                    }
                                  }
                                }
                              }
                            }
                            goto LABEL_2;
                          }
                        }
                      }
                    }
                    goto LABEL_2;
                  }
                }
              }
              if (v74 != 32) {
                goto LABEL_2;
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_150;
        }
        if (v9 != 2) {
          goto LABEL_67;
        }
        uint64_t result = sub_10005D718(this, v199);
        if (!result) {
          return result;
        }
        goto LABEL_166;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 2)
        {
          uint64_t result = sub_10006C99C(this, v200);
          if (!result) {
            return result;
          }
          goto LABEL_190;
        }
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        uint64_t i = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_171;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_195;
        }
        if (v9 != 2) {
          goto LABEL_67;
        }
        uint64_t result = sub_10005D718(this, v204);
        if (!result) {
          return result;
        }
        goto LABEL_95;
      case 6u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_99;
      case 7u:
        int v9 = TagFallback & 7;
        if (v9 == 2)
        {
          uint64_t result = sub_10005CDA4(this, v202);
          if (!result) {
            return result;
          }
          goto LABEL_228;
        }
        if (v9 == 5) {
          goto LABEL_212;
        }
        goto LABEL_67;
      case 8u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        uint64_t v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_232;
      case 9u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_67;
        }
        int v20 = *(_DWORD *)(a1 + 284);
        goto LABEL_240;
      case 0xAu:
        int v9 = TagFallback & 7;
        if (v9 == 2)
        {
          uint64_t result = sub_10006C99C(this, v198);
          if (!result) {
            return result;
          }
          goto LABEL_266;
        }
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        j = (char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        goto LABEL_247;
      case 0xBu:
        int v9 = TagFallback & 7;
        if (v9 == 2)
        {
          uint64_t result = sub_10005CDA4(this, v203);
          if (!result) {
            return result;
          }
          goto LABEL_287;
        }
        if (v9 == 5) {
          goto LABEL_271;
        }
        goto LABEL_67;
      case 0xCu:
        int v9 = TagFallback & 7;
        if (v9 == 2)
        {
          uint64_t result = sub_10006C99C(this, v201);
          if (!result) {
            return result;
          }
          goto LABEL_311;
        }
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        k = (char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_292;
      case 0xDu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        uint64_t v25 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_316;
      case 0xEu:
        int v9 = TagFallback & 7;
        if (v9 == 2)
        {
          uint64_t result = sub_10006C99C(this, v197);
          if (!result) {
            return result;
          }
          goto LABEL_126;
        }
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        unsigned int v26 = (char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_107;
      case 0xFu:
        int v9 = TagFallback & 7;
        if (v9 == 2)
        {
          uint64_t result = sub_10005CDA4(this, v205);
          if (!result) {
            return result;
          }
          goto LABEL_342;
        }
        if (v9 == 5) {
          goto LABEL_326;
        }
        goto LABEL_67;
      case 0x10u:
        int v9 = TagFallback & 7;
        if (v9 == 2)
        {
          uint64_t result = sub_10005CDA4(this, v191);
          if (!result) {
            return result;
          }
          goto LABEL_367;
        }
        if (v9 == 5) {
          goto LABEL_348;
        }
        goto LABEL_67;
      case 0x11u:
        int v9 = TagFallback & 7;
        if (v9 == 2)
        {
          uint64_t result = sub_10005CDA4(this, v190);
          if (!result) {
            return result;
          }
          goto LABEL_393;
        }
        if (v9 == 5) {
          goto LABEL_374;
        }
        goto LABEL_67;
      case 0x12u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_400;
        }
        if (v9 != 2) {
          goto LABEL_67;
        }
        uint64_t result = sub_10005D718(this, v189);
        if (!result) {
          return result;
        }
        goto LABEL_419;
      case 0x13u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_426;
        }
        if (v9 != 2) {
          goto LABEL_67;
        }
        uint64_t result = sub_10005D718(this, v192);
        if (!result) {
          return result;
        }
        goto LABEL_445;
      default:
        int v9 = TagFallback & 7;
        goto LABEL_67;
    }
  }
}

void sub_10006C8B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
}

uint64_t sub_10006C99C(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a2)
{
  unsigned int v12 = 0;
  uint64_t v4 = (char *)*((void *)this + 1);
  if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v12);
    if (!result) {
      return result;
    }
    unsigned int v5 = v12;
  }
  else
  {
    unsigned int v5 = *v4;
    unsigned int v12 = v5;
    *((void *)this + 1) = v4 + 1;
  }
  int v7 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v5);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      unsigned int v13 = 0;
      int v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v13);
        if (!result) {
          return result;
        }
        unsigned int v9 = v13;
      }
      else
      {
        unsigned int v9 = *v8;
        *((void *)this + 1) = v8 + 1;
      }
      int v10 = *(_DWORD *)(a2 + 8);
      if (v10 == *(_DWORD *)(a2 + 12))
      {
        sub_10006F57C(a2, v10 + 1);
        int v10 = *(_DWORD *)(a2 + 8);
      }
      uint64_t v11 = *(void *)a2;
      *(_DWORD *)(a2 + 8) = v10 + 1;
      *(_DWORD *)(v11 + 4 * v10) = v9;
    }
    while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v7);
  return 1;
}

uint64_t sub_10006CAB4(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 284)) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 16), (unint64_t)a2, a4);
  }
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(*(void *)(v5 + 24) + 4 * v6++), a3);
    while (v6 < *(int *)(v5 + 32));
  }
  if (*(int *)(v5 + 48) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(*(void *)(v5 + 40) + 8 * v7++), a3);
    while (v7 < *(int *)(v5 + 48));
  }
  if (*(int *)(v5 + 64) >= 1)
  {
    uint64_t v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(*(void *)(v5 + 56) + 4 * v8++), (int)a2, a4);
    while (v8 < *(int *)(v5 + 64));
  }
  if (*(int *)(v5 + 80) >= 1)
  {
    uint64_t v9 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(*(void *)(v5 + 72) + 8 * v9++), a3);
    while (v9 < *(int *)(v5 + 80));
  }
  if ((*(unsigned char *)(v5 + 284) & 0x20) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(void *)(v5 + 88), (unint64_t)a2, a4);
  }
  if (*(int *)(v5 + 104) >= 1)
  {
    uint64_t v10 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(float *)(*(void *)(v5 + 96) + 4 * v10++), a3);
    while (v10 < *(int *)(v5 + 104));
  }
  int v11 = *(_DWORD *)(v5 + 284);
  if ((v11 & 0x80) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(void *)(v5 + 112), (unint64_t)a2, a4);
    int v11 = *(_DWORD *)(v5 + 284);
  }
  if ((v11 & 0x100) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  }
  if (*(int *)(v5 + 136) >= 1)
  {
    uint64_t v12 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_DWORD *)(*(void *)(v5 + 128) + 4 * v12++), (int)a2, a4);
    while (v12 < *(int *)(v5 + 136));
  }
  if (*(int *)(v5 + 152) >= 1)
  {
    uint64_t v13 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (int)a2, *(float *)(*(void *)(v5 + 144) + 4 * v13++), a3);
    while (v13 < *(int *)(v5 + 152));
  }
  if (*(int *)(v5 + 168) >= 1)
  {
    uint64_t v14 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(_DWORD *)(*(void *)(v5 + 160) + 4 * v14++), (int)a2, a4);
    while (v14 < *(int *)(v5 + 168));
  }
  if ((*(unsigned char *)(v5 + 285) & 0x10) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(void *)(v5 + 176), (unint64_t)a2, a4);
  }
  if (*(int *)(v5 + 192) >= 1)
  {
    uint64_t v15 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(_DWORD *)(*(void *)(v5 + 184) + 4 * v15++), (int)a2, a4);
    while (v15 < *(int *)(v5 + 192));
  }
  if (*(int *)(v5 + 208) >= 1)
  {
    uint64_t v16 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, (int)a2, *(float *)(*(void *)(v5 + 200) + 4 * v16++), a3);
    while (v16 < *(int *)(v5 + 208));
  }
  if (*(int *)(v5 + 224) >= 1)
  {
    uint64_t v17 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, (int)a2, *(float *)(*(void *)(v5 + 216) + 4 * v17++), a3);
    while (v17 < *(int *)(v5 + 224));
  }
  if (*(int *)(v5 + 240) >= 1)
  {
    uint64_t v18 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, (int)a2, *(float *)(*(void *)(v5 + 232) + 4 * v18++), a3);
    while (v18 < *(int *)(v5 + 240));
  }
  if (*(int *)(v5 + 256) >= 1)
  {
    uint64_t v19 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, (int)a2, *(double *)(*(void *)(v5 + 248) + 8 * v19++), a3);
    while (v19 < *(int *)(v5 + 256));
  }
  if (*(int *)(v5 + 272) >= 1)
  {
    uint64_t v20 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, (int)a2, *(double *)(*(void *)(v5 + 264) + 8 * v20++), a3);
    while (v20 < *(int *)(v5 + 272));
  }
  unsigned int v23 = *(void **)(v5 + 8);
  uint64_t v22 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unint64_t v21 = v23;
  if (v23 && *v21 != v21[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v22, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10006CE6C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  if (*((unsigned char *)this + 284))
  {
    uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 2);
    *(unsigned char *)a2 = 8;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v6, (unint64_t)a2 + 1, a3);
  }
  if (*((int *)this + 8) >= 1)
  {
    uint64_t v7 = 0;
    do
    {
      int v8 = *(_DWORD *)(*((void *)this + 3) + 4 * v7);
      *(unsigned char *)uint64_t v4 = 21;
      *(_DWORD *)((char *)v4 + 1) = v8;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 5);
      ++v7;
    }
    while (v7 < *((int *)this + 8));
  }
  if (*((int *)this + 12) >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      uint64_t v10 = *(void *)(*((void *)this + 5) + 8 * v9);
      *(unsigned char *)uint64_t v4 = 25;
      *(void *)((char *)v4 + 1) = v10;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
      ++v9;
    }
    while (v9 < *((int *)this + 12));
  }
  if (*((int *)this + 16) >= 1)
  {
    uint64_t v11 = 0;
    while (1)
    {
      uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((void *)this + 7) + 4 * v11);
      *(unsigned char *)uint64_t v4 = 32;
      unint64_t v13 = (unint64_t)v4 + 1;
      if ((v12 & 0x80000000) != 0) {
        break;
      }
      if (v12 > 0x7F)
      {
        uint64_t v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, v13, a3);
        goto LABEL_16;
      }
      *((unsigned char *)v4 + 1) = (_BYTE)v12;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
LABEL_17:
      if (++v11 >= *((int *)this + 16)) {
        goto LABEL_18;
      }
    }
    uint64_t v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v12, v13, a3);
LABEL_16:
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v14;
    goto LABEL_17;
  }
LABEL_18:
  if (*((int *)this + 20) >= 1)
  {
    uint64_t v15 = 0;
    do
    {
      uint64_t v16 = *(void *)(*((void *)this + 9) + 8 * v15);
      *(unsigned char *)uint64_t v4 = 41;
      *(void *)((char *)v4 + 1) = v16;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
      ++v15;
    }
    while (v15 < *((int *)this + 20));
  }
  if ((*((unsigned char *)this + 284) & 0x20) != 0)
  {
    uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 11);
    *(unsigned char *)uint64_t v4 = 48;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v17, (unint64_t)v4 + 1, a3);
  }
  if (*((int *)this + 26) >= 1)
  {
    uint64_t v18 = 0;
    do
    {
      int v19 = *(_DWORD *)(*((void *)this + 12) + 4 * v18);
      *(unsigned char *)uint64_t v4 = 61;
      *(_DWORD *)((char *)v4 + 1) = v19;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 5);
      ++v18;
    }
    while (v18 < *((int *)this + 26));
  }
  int v20 = *((_DWORD *)this + 71);
  if ((v20 & 0x80) != 0)
  {
    unint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 14);
    *(unsigned char *)uint64_t v4 = 64;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v21, (unint64_t)v4 + 1, a3);
    int v20 = *((_DWORD *)this + 71);
  }
  if ((v20 & 0x100) != 0)
  {
    uint64_t v22 = *((void *)this + 15);
    *(unsigned char *)uint64_t v4 = 74;
    if (*(char *)(v22 + 23) < 0) {
      unsigned int v23 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v22 + 8);
    }
    else {
      unsigned int v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v22 + 23);
    }
    if (v23 > 0x7F)
    {
      int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v23, (int)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v23;
      int v24 = v4 + 2;
    }
    int v25 = *(char *)(v22 + 23);
    if (v25 >= 0) {
      unsigned int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v22;
    }
    else {
      unsigned int v26 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v22;
    }
    if (v25 >= 0) {
      BOOL v27 = (const void *)*(unsigned __int8 *)(v22 + 23);
    }
    else {
      BOOL v27 = (const void *)*(unsigned int *)(v22 + 8);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v26, v27, v24, a4);
  }
  if (*((int *)this + 34) >= 1)
  {
    uint64_t v28 = 0;
    while (1)
    {
      BOOL v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((void *)this + 16) + 4 * v28);
      *(unsigned char *)uint64_t v4 = 80;
      unint64_t v30 = (unint64_t)v4 + 1;
      if ((v29 & 0x80000000) != 0) {
        break;
      }
      if (v29 > 0x7F)
      {
        uint64_t v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v29, v30, a3);
        goto LABEL_49;
      }
      *((unsigned char *)v4 + 1) = (_BYTE)v29;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
LABEL_50:
      if (++v28 >= *((int *)this + 34)) {
        goto LABEL_51;
      }
    }
    uint64_t v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v29, v30, a3);
LABEL_49:
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v31;
    goto LABEL_50;
  }
LABEL_51:
  if (*((int *)this + 38) >= 1)
  {
    uint64_t v32 = 0;
    do
    {
      int v33 = *(_DWORD *)(*((void *)this + 18) + 4 * v32);
      *(unsigned char *)uint64_t v4 = 93;
      *(_DWORD *)((char *)v4 + 1) = v33;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 5);
      ++v32;
    }
    while (v32 < *((int *)this + 38));
  }
  if (*((int *)this + 42) >= 1)
  {
    uint64_t v34 = 0;
    while (1)
    {
      unsigned int v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((void *)this + 20) + 4 * v34);
      *(unsigned char *)uint64_t v4 = 96;
      unint64_t v36 = (unint64_t)v4 + 1;
      if ((v35 & 0x80000000) != 0) {
        break;
      }
      if (v35 > 0x7F)
      {
        uint64_t v37 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v35, v36, a3);
        goto LABEL_61;
      }
      *((unsigned char *)v4 + 1) = (_BYTE)v35;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
LABEL_62:
      if (++v34 >= *((int *)this + 42)) {
        goto LABEL_63;
      }
    }
    uint64_t v37 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v35, v36, a3);
LABEL_61:
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v37;
    goto LABEL_62;
  }
LABEL_63:
  if ((*((unsigned char *)this + 285) & 0x10) != 0)
  {
    int v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 22);
    *(unsigned char *)uint64_t v4 = 104;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v38, (unint64_t)v4 + 1, a3);
  }
  if (*((int *)this + 48) >= 1)
  {
    uint64_t v39 = 0;
    while (1)
    {
      int v40 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((void *)this + 23) + 4 * v39);
      *(unsigned char *)uint64_t v4 = 112;
      unint64_t v41 = (unint64_t)v4 + 1;
      if ((v40 & 0x80000000) != 0) {
        break;
      }
      if (v40 > 0x7F)
      {
        uint64_t v42 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v40, v41, a3);
        goto LABEL_72;
      }
      *((unsigned char *)v4 + 1) = (_BYTE)v40;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
LABEL_73:
      if (++v39 >= *((int *)this + 48)) {
        goto LABEL_74;
      }
    }
    uint64_t v42 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v40, v41, a3);
LABEL_72:
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v42;
    goto LABEL_73;
  }
LABEL_74:
  if (*((int *)this + 52) >= 1)
  {
    uint64_t v43 = 0;
    do
    {
      int v44 = *(_DWORD *)(*((void *)this + 25) + 4 * v43);
      *(unsigned char *)uint64_t v4 = 125;
      *(_DWORD *)((char *)v4 + 1) = v44;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 5);
      ++v43;
    }
    while (v43 < *((int *)this + 52));
  }
  if (*((int *)this + 56) >= 1)
  {
    uint64_t v45 = 0;
    do
    {
      int v46 = *(_DWORD *)(*((void *)this + 27) + 4 * v45);
      *(_WORD *)uint64_t v4 = 389;
      *(_DWORD *)((char *)v4 + 2) = v46;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 6);
      ++v45;
    }
    while (v45 < *((int *)this + 56));
  }
  if (*((int *)this + 60) >= 1)
  {
    uint64_t v47 = 0;
    do
    {
      int v48 = *(_DWORD *)(*((void *)this + 29) + 4 * v47);
      *(_WORD *)uint64_t v4 = 397;
      *(_DWORD *)((char *)v4 + 2) = v48;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 6);
      ++v47;
    }
    while (v47 < *((int *)this + 60));
  }
  if (*((int *)this + 64) >= 1)
  {
    uint64_t v49 = 0;
    do
    {
      uint64_t v50 = *(void *)(*((void *)this + 31) + 8 * v49);
      *(_WORD *)uint64_t v4 = 401;
      *(void *)((char *)v4 + 2) = v50;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 10);
      ++v49;
    }
    while (v49 < *((int *)this + 64));
  }
  if (*((int *)this + 68) >= 1)
  {
    uint64_t v51 = 0;
    do
    {
      uint64_t v52 = *(void *)(*((void *)this + 33) + 8 * v51);
      *(_WORD *)uint64_t v4 = 409;
      *(void *)((char *)v4 + 2) = v52;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 10);
      ++v51;
    }
    while (v51 < *((int *)this + 68));
  }
  uint64_t v55 = (void *)*((void *)this + 1);
  int v54 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v53 = v55;
  if (!v55 || *v53 == v53[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v54, v4, a3);
}

uint64_t sub_10006D4D4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 284);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    goto LABEL_10;
  }
  if (v3)
  {
    int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16), (unint64_t)a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 284);
    if ((v3 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  int v4 = 0;
  if ((v3 & 0x20) != 0)
  {
LABEL_7:
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 88), (unint64_t)a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 284);
  }
LABEL_8:
  if ((v3 & 0x80) != 0)
  {
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 112), (unint64_t)a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 284);
  }
LABEL_10:
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      uint64_t v5 = *(void *)(a1 + 120);
      int v6 = *(unsigned __int8 *)(v5 + 23);
      char v7 = v6;
      uint64_t v8 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
      }
      else {
        unint64_t v9 = v8;
      }
      if (v9 >= 0x80)
      {
        int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9, a2);
        int v6 = *(unsigned __int8 *)(v5 + 23);
        uint64_t v8 = *(void *)(v5 + 8);
        int v3 = *(_DWORD *)(a1 + 284);
        char v7 = *(unsigned char *)(v5 + 23);
      }
      else
      {
        int v10 = 1;
      }
      if (v7 < 0) {
        int v6 = v8;
      }
      v4 += v10 + v6 + 1;
    }
    if ((v3 & 0x1000) != 0) {
      v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 176), (unint64_t)a2)+ 1;
    }
  }
  int v37 = *(_DWORD *)(a1 + 32);
  int v38 = *(_DWORD *)(a1 + 48);
  int v39 = v4;
  int v11 = *(_DWORD *)(a1 + 64);
  if (v11 < 1)
  {
    int v13 = 0;
  }
  else
  {
    uint64_t v12 = 0;
    int v13 = 0;
    do
    {
      uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 56)
                                                                                             + 4 * v12);
      if ((v14 & 0x80000000) != 0)
      {
        int v15 = 10;
      }
      else if (v14 >= 0x80)
      {
        int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
        int v11 = *(_DWORD *)(a1 + 64);
      }
      else
      {
        int v15 = 1;
      }
      v13 += v15;
      ++v12;
    }
    while (v12 < v11);
  }
  int v35 = *(_DWORD *)(a1 + 104);
  int v36 = *(_DWORD *)(a1 + 80);
  int v16 = *(_DWORD *)(a1 + 136);
  if (v16 < 1)
  {
    int v18 = 0;
  }
  else
  {
    uint64_t v17 = 0;
    int v18 = 0;
    do
    {
      int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 128)
                                                                                             + 4 * v17);
      if ((v19 & 0x80000000) != 0)
      {
        int v20 = 10;
      }
      else if (v19 >= 0x80)
      {
        int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2);
        int v16 = *(_DWORD *)(a1 + 136);
      }
      else
      {
        int v20 = 1;
      }
      v18 += v20;
      ++v17;
    }
    while (v17 < v16);
  }
  int v21 = *(_DWORD *)(a1 + 152);
  int v22 = *(_DWORD *)(a1 + 168);
  if (v22 < 1)
  {
    int v24 = 0;
  }
  else
  {
    uint64_t v23 = 0;
    int v24 = 0;
    do
    {
      int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 160)
                                                                                             + 4 * v23);
      if ((v25 & 0x80000000) != 0)
      {
        int v26 = 10;
      }
      else if (v25 >= 0x80)
      {
        int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2);
        int v22 = *(_DWORD *)(a1 + 168);
      }
      else
      {
        int v26 = 1;
      }
      v24 += v26;
      ++v23;
    }
    while (v23 < v22);
  }
  int v27 = *(_DWORD *)(a1 + 192);
  if (v27 < 1)
  {
    int v29 = 0;
  }
  else
  {
    uint64_t v28 = 0;
    int v29 = 0;
    do
    {
      unint64_t v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 184)
                                                                                             + 4 * v28);
      if ((v30 & 0x80000000) != 0)
      {
        int v31 = 10;
      }
      else if (v30 >= 0x80)
      {
        int v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30, a2);
        int v27 = *(_DWORD *)(a1 + 192);
      }
      else
      {
        int v31 = 1;
      }
      v29 += v31;
      ++v28;
    }
    while (v28 < v27);
  }
  uint64_t v32 = *(void **)(a1 + 8);
  uint64_t v33 = (v13
                     + v39
                     + v11
                     + v18
                     + 9 * (v36 + v38)
                     + v16
                     + v24
                     + v22
                     + v29
                     + v27
                     + 5 * (v35 + v37 + v21 + *(_DWORD *)(a1 + 208))
                     + 6 * (*(_DWORD *)(a1 + 240) + *(_DWORD *)(a1 + 224))
                     + 10 * (*(_DWORD *)(a1 + 272) + *(_DWORD *)(a1 + 256)));
  if (v32 && *v32 != v32[1]) {
    uint64_t v33 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v33;
  }
  *(_DWORD *)(a1 + 280) = v33;
  return v33;
}

uint64_t sub_10006D81C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10006A5D0((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10006D8F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10006D908(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10006D994()
{
  return 1;
}

uint64_t sub_10006D99C()
{
  uint64_t v0 = qword_1008A0830;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100059FAC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A07D0;
}

void sub_10006DA30(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_10006DA44(void *a1)
{
  *a1 = off_1008486F0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  return a1;
}

void sub_10006DA8C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10006DAA0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10006DB1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10006DB34(uint64_t a1)
{
  *(void *)a1 = off_1008486F0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10006DB88(uint64_t a1)
{
  *(void *)a1 = off_1008486F0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_10006DBF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 16) = a2;
  return result;
}

void sub_10006DBF8()
{
}

void sub_10006DC38()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10006DC5C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 3) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10006DC70(int a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v5 = a1 + 8;
  do
  {
    int v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
    }
    if (TagFallback) {
      BOOL v8 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v8 = 1;
    }
    uint64_t v9 = v8;
  }
  while (!v8
       && (wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v5, a4) & 1) != 0);
  return v9;
}

wireless_diagnostics::google::protobuf::internal::WireFormat *sub_10006DCFC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  unsigned int v5 = *(void **)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v4 = v5;
  if (v5)
  {
    if (*v4 != v4[1]) {
      return (wireless_diagnostics::google::protobuf::internal::WireFormat *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(result, a2, a3);
    }
  }
  return result;
}

uint64_t sub_10006DD18(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  unsigned int v5 = *(void **)(a1 + 8);
  char v3 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v4 = v5;
  if (!v5 || *v4 == v4[1]) {
    return (uint64_t)a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v3, a2, a3);
  }
}

uint64_t sub_10006DD38(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  unsigned int v5 = *(void **)(a1 + 8);
  char v3 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v4 = v5;
  if (!v5 || *v4 == v4[1]) {
    uint64_t result = 0;
  }
  else {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v3, a2);
  }
  *(_DWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_10006DD7C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10006DAA0((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10006DE50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10006DE68(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10006DEF4()
{
  return 1;
}

uint64_t sub_10006DEFC()
{
  uint64_t v0 = qword_1008A0830;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100059FAC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A07E0;
}

void sub_10006DF90(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10006DFA4(uint64_t a1)
{
  *(void *)a1 = off_1008487A0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_DWORD *)(a1 + 64) = 0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return a1;
}

void sub_10006DFF8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10006E00C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 64);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 64))
    {
      *(_DWORD *)(a1 + 64) |= 1u;
      uint64_t v5 = *(void *)(a1 + 16);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 16);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_1008ABE88 + 16);
      }
      sub_10005BFF4(v5, v6);
      int v4 = *(_DWORD *)(a2 + 64);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 64) |= 2u;
      uint64_t v7 = *(void *)(a1 + 24);
      if (!v7) {
        operator new();
      }
      uint64_t v8 = *(void *)(a2 + 24);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_1008ABE88 + 24);
      }
      sub_1000689DC(v7, v8);
      int v4 = *(_DWORD *)(a2 + 64);
    }
    if ((v4 & 4) != 0)
    {
      *(_DWORD *)(a1 + 64) |= 4u;
      uint64_t v9 = *(_DWORD **)(a1 + 32);
      if (!v9) {
        operator new();
      }
      uint64_t v10 = *(void *)(a2 + 32);
      if (!v10) {
        uint64_t v10 = *(void *)(qword_1008ABE88 + 32);
      }
      sub_10005E550(v9, v10);
      int v4 = *(_DWORD *)(a2 + 64);
    }
    if ((v4 & 8) != 0)
    {
      *(_DWORD *)(a1 + 64) |= 8u;
      int v11 = *(_DWORD **)(a1 + 40);
      if (!v11) {
        operator new();
      }
      uint64_t v12 = *(void *)(a2 + 40);
      if (!v12) {
        uint64_t v12 = *(void *)(qword_1008ABE88 + 40);
      }
      sub_100069C5C(v11, v12);
      int v4 = *(_DWORD *)(a2 + 64);
    }
    if ((v4 & 0x10) != 0)
    {
      int v13 = *(_DWORD *)(a2 + 56);
      *(_DWORD *)(a1 + 64) |= 0x10u;
      *(_DWORD *)(a1 + 56) = v13;
      int v4 = *(_DWORD *)(a2 + 64);
    }
    if ((v4 & 0x20) != 0)
    {
      *(_DWORD *)(a1 + 64) |= 0x20u;
      uint64_t v14 = *(void *)(a1 + 48);
      if (!v14) {
        operator new();
      }
      uint64_t v15 = *(void *)(a2 + 48);
      if (!v15) {
        uint64_t v15 = *(void *)(qword_1008ABE88 + 48);
      }
      sub_10006DAA0(v14, v15);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10006E27C()
{
}

void sub_10006E2F4(void *a1)
{
  *a1 = off_1008487A0;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_10006E354(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void *sub_10006E354(void *result)
{
  if ((void *)qword_1008ABE88 != result)
  {
    int v1 = result;
    uint64_t v2 = result[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[3];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[4];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[5];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t result = (void *)v1[6];
    if (result)
    {
      uint64_t v6 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v6();
    }
  }
  return result;
}

void sub_10006E47C(void *a1)
{
  sub_10006E2F4(a1);

  operator delete();
}

uint64_t sub_10006E4B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 60) = a2;
  return result;
}

void sub_10006E4BC()
{
}

void sub_10006E4FC()
{
}

uint64_t sub_10006E520(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 64))
  {
    if (*(unsigned char *)(this + 64))
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(unsigned char *)(this + 44))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
          *(void *)(this + 32) = 0;
        }
        uint64_t v2 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 36) = 0;
        if (v2) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    int v3 = *(_DWORD *)(v1 + 64);
    if ((v3 & 2) != 0)
    {
      this = *(void *)(v1 + 24);
      if (this)
      {
        this = sub_100068C50(this);
        int v3 = *(_DWORD *)(v1 + 64);
      }
    }
    if ((v3 & 4) != 0)
    {
      this = *(void *)(v1 + 32);
      if (this)
      {
        this = sub_10005E7D4(this);
        int v3 = *(_DWORD *)(v1 + 64);
      }
    }
    if ((v3 & 8) != 0)
    {
      this = *(void *)(v1 + 40);
      if (this)
      {
        this = sub_100069EB0(this);
        int v3 = *(_DWORD *)(v1 + 64);
      }
    }
    *(_DWORD *)(v1 + 56) = 0;
    if ((v3 & 0x20) != 0)
    {
      this = *(void *)(v1 + 48);
      if (this)
      {
        uint64_t v4 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 12) = 0;
        if (v4) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
  }
  uint64_t v6 = *(void *)(v1 + 8);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v5 + 14) = 0;
  if (v6)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
  }
  return this;
}

uint64_t sub_10006E600(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 < *((void *)this + 2) && (*v7 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_25;
        }
        *(_DWORD *)(a1 + 64) |= 1u;
        uint64_t v10 = *(void *)(a1 + 16);
        if (!v10) {
          operator new();
        }
        unsigned int v63 = 0;
        int v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63))return 0; {
        }
          }
        else
        {
          unsigned int v63 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        int v13 = *((_DWORD *)this + 14);
        int v14 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v13 + 1;
        if (v13 >= v14) {
          return 0;
        }
        int v15 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v63);
        if (!sub_10005C238(v10, this, v16, v17) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v15);
        int v18 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v18, 1);
        int v20 = v18 - 1;
        if (v20 < 0 == v19) {
          *((_DWORD *)this + 14) = v20;
        }
        int v21 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 != 18) {
          continue;
        }
        *((void *)this + 1) = v21 + 1;
        goto LABEL_37;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_25;
        }
LABEL_37:
        *(_DWORD *)(a1 + 64) |= 2u;
        uint64_t v22 = *(void *)(a1 + 24);
        if (!v22) {
          operator new();
        }
        unsigned int v63 = 0;
        uint64_t v23 = (char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63))return 0; {
        }
          }
        else
        {
          unsigned int v63 = *v23;
          *((void *)this + 1) = v23 + 1;
        }
        int v24 = *((_DWORD *)this + 14);
        int v25 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v24 + 1;
        if (v24 >= v25) {
          return 0;
        }
        int v26 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v63);
        if (!sub_100068CC8(v22, this, v27, v28) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v26);
        int v29 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v29, 1);
        int v30 = v29 - 1;
        if (v30 < 0 == v19) {
          *((_DWORD *)this + 14) = v30;
        }
        int v31 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v31 >= *((void *)this + 2) || *v31 != 26) {
          continue;
        }
        *((void *)this + 1) = v31 + 1;
LABEL_51:
        *(_DWORD *)(a1 + 64) |= 4u;
        uint64_t v32 = *(int **)(a1 + 32);
        if (!v32) {
          operator new();
        }
        unsigned int v63 = 0;
        uint64_t v33 = (char *)*((void *)this + 1);
        if ((unint64_t)v33 >= *((void *)this + 2) || *v33 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63))return 0; {
        }
          }
        else
        {
          unsigned int v63 = *v33;
          *((void *)this + 1) = v33 + 1;
        }
        int v34 = *((_DWORD *)this + 14);
        int v35 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v34 + 1;
        if (v34 >= v35) {
          return 0;
        }
        int v36 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v63);
        if (!sub_10005E828(v32, this, v37, v38) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v36);
        int v39 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v39, 1);
        int v40 = v39 - 1;
        if (v40 < 0 == v19) {
          *((_DWORD *)this + 14) = v40;
        }
        unint64_t v41 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v41 >= *((void *)this + 2) || *v41 != 34) {
          continue;
        }
        *((void *)this + 1) = v41 + 1;
LABEL_65:
        *(_DWORD *)(a1 + 64) |= 8u;
        uint64_t v42 = *(int **)(a1 + 40);
        if (!v42) {
          operator new();
        }
        unsigned int v63 = 0;
        uint64_t v43 = (char *)*((void *)this + 1);
        if ((unint64_t)v43 >= *((void *)this + 2) || *v43 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63))return 0; {
        }
          }
        else
        {
          unsigned int v63 = *v43;
          *((void *)this + 1) = v43 + 1;
        }
        int v44 = *((_DWORD *)this + 14);
        int v45 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v44 + 1;
        if (v44 >= v45) {
          return 0;
        }
        int v46 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v63);
        if (!sub_100069F04(v42, this, v47, v48) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v46);
        int v49 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v49, 1);
        int v50 = v49 - 1;
        if (v50 < 0 == v19) {
          *((_DWORD *)this + 14) = v50;
        }
        uint64_t v51 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v51 >= *((void *)this + 2) || *v51 != 45) {
          continue;
        }
        *((void *)this + 1) = v51 + 1;
LABEL_79:
        unsigned int v63 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v63) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 56) = v63;
        int v12 = *(_DWORD *)(a1 + 64) | 0x10;
        *(_DWORD *)(a1 + 64) = v12;
        uint64_t v52 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v52 >= *((void *)this + 2) || *v52 != 50) {
          continue;
        }
        *((void *)this + 1) = v52 + 1;
LABEL_83:
        *(_DWORD *)(a1 + 64) = v12 | 0x20;
        uint64_t v53 = *(void *)(a1 + 48);
        if (!v53) {
          operator new();
        }
        unsigned int v63 = 0;
        int v54 = (char *)*((void *)this + 1);
        if ((unint64_t)v54 >= *((void *)this + 2) || *v54 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63))return 0; {
        }
          }
        else
        {
          unsigned int v63 = *v54;
          *((void *)this + 1) = v54 + 1;
        }
        int v55 = *((_DWORD *)this + 14);
        int v56 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v55 + 1;
        if (v55 >= v56) {
          return 0;
        }
        int v57 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v63);
        if (!sub_10006DC70(v53, this, v58, v59) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v57);
        int v60 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v60, 1);
        int v61 = v60 - 1;
        if (v61 < 0 == v19) {
          *((_DWORD *)this + 14) = v61;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_51;
        }
        goto LABEL_25;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_65;
        }
        goto LABEL_25;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 == 5) {
          goto LABEL_79;
        }
        goto LABEL_25;
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_25;
        }
        int v12 = *(_DWORD *)(a1 + 64);
        goto LABEL_83;
      default:
        int v9 = TagFallback & 7;
LABEL_25:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_10006EC34()
{
}

uint64_t sub_10006ECB0(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 64);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 16);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1008ABE88 + 16);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 64);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1008ABE88 + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_14:
  uint64_t v9 = *(void *)(v5 + 32);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_1008ABE88 + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_20:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(float *)(v5 + 56), a3);
    if ((*(_DWORD *)(v5 + 64) & 0x20) == 0) {
      goto LABEL_24;
    }
    goto LABEL_21;
  }
LABEL_17:
  uint64_t v10 = *(void *)(v5 + 40);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_1008ABE88 + 40);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x10) != 0) {
    goto LABEL_20;
  }
LABEL_6:
  if ((v6 & 0x20) == 0) {
    goto LABEL_24;
  }
LABEL_21:
  uint64_t v11 = *(void *)(v5 + 48);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_1008ABE88 + 48);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v11, a2, a4);
LABEL_24:
  int v14 = *(void **)(v5 + 8);
  int v13 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v12 = v14;
  if (v14 && *v12 != v12[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v13, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10006EE04(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  int v3 = a2;
  int v5 = *((_DWORD *)this + 16);
  if (v5)
  {
    uint64_t v6 = *((void *)this + 2);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1008ABE88 + 16);
    }
    *(unsigned char *)a2 = 10;
    unsigned int v7 = a2 + 1;
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v6 + 40);
    if (v8 > 0x7F)
    {
      uint64_t v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v7, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v8;
      uint64_t v9 = (uint64_t)v3 + 2;
    }
    int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10005C4C0(v6, v9, a3);
    int v5 = *((_DWORD *)this + 16);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v10 = (unsigned int *)*((void *)this + 3);
  if (!v10) {
    uint64_t v10 = *(unsigned int **)(qword_1008ABE88 + 24);
  }
  *(unsigned char *)int v3 = 18;
  uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10[8];
  if (v11 > 0x7F)
  {
    int v12 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)v3 + 1, a3);
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v11;
    int v12 = (char *)v3 + 2;
  }
  int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100068FAC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v10, v12, a3);
  int v5 = *((_DWORD *)this + 16);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_26;
  }
LABEL_20:
  int v13 = (unsigned int *)*((void *)this + 4);
  if (!v13) {
    int v13 = *(unsigned int **)(qword_1008ABE88 + 32);
  }
  *(unsigned char *)int v3 = 26;
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13[10];
  if (v14 > 0x7F)
  {
    int v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, (int)v3 + 1, a3);
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v14;
    int v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  }
  int v3 = sub_10005EAC0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v13, v15, a3);
  int v5 = *((_DWORD *)this + 16);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_32:
    int v19 = *((_DWORD *)this + 14);
    *(unsigned char *)int v3 = 45;
    *(_DWORD *)((char *)v3 + 1) = v19;
    int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
    if ((*((_DWORD *)this + 16) & 0x20) == 0) {
      goto LABEL_41;
    }
    goto LABEL_33;
  }
LABEL_26:
  uint64_t v16 = (unsigned int *)*((void *)this + 5);
  if (!v16) {
    uint64_t v16 = *(unsigned int **)(qword_1008ABE88 + 40);
  }
  *(unsigned char *)int v3 = 34;
  uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16[10];
  if (v17 > 0x7F)
  {
    int v18 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, (int)v3 + 1, a3);
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v17;
    int v18 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  }
  int v3 = sub_10006A19C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v16, v18, a3);
  int v5 = *((_DWORD *)this + 16);
  if ((v5 & 0x10) != 0) {
    goto LABEL_32;
  }
LABEL_6:
  if ((v5 & 0x20) == 0) {
    goto LABEL_41;
  }
LABEL_33:
  uint64_t v20 = *((void *)this + 6);
  if (!v20) {
    uint64_t v20 = *(void *)(qword_1008ABE88 + 48);
  }
  *(unsigned char *)int v3 = 50;
  int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v20 + 16);
  if (v21 > 0x7F)
  {
    int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, (int)v3 + 1, a3);
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v21;
    int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  }
  int v24 = *(void **)(v20 + 8);
  uint64_t v23 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v20 + 8);
  uint64_t v22 = v24;
  if (v24 && *v22 != v22[1]) {
    int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v23, v3, a3);
  }
LABEL_41:
  uint64_t v27 = (void *)*((void *)this + 1);
  int v26 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v25 = v27;
  if (!v27 || *v25 == v25[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v26, v3, a3);
}

uint64_t sub_10006F06C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 64);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 64))
    {
      uint64_t v6 = *(void *)(a1 + 16);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_1008ABE88 + 16);
      }
      unsigned int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005C5E8(v6, a2);
      int v8 = (int)v7;
      if (v7 >= 0x80) {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      }
      else {
        int v9 = 1;
      }
      unsigned int v4 = v8 + v9 + 1;
      int v3 = *(_DWORD *)(a1 + 64);
      if ((v3 & 2) == 0)
      {
LABEL_18:
        if ((v3 & 4) != 0)
        {
          uint64_t v14 = *(void *)(a1 + 32);
          if (!v14) {
            uint64_t v14 = *(void *)(qword_1008ABE88 + 32);
          }
          int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005EB8C(v14, a2);
          int v16 = (int)v15;
          if (v15 >= 0x80) {
            int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
          }
          else {
            int v17 = 1;
          }
          v4 += v16 + v17 + 1;
          int v3 = *(_DWORD *)(a1 + 64);
          if ((v3 & 8) == 0)
          {
LABEL_33:
            if ((v3 & 0x10) != 0) {
              uint64_t v5 = v4 + 5;
            }
            else {
              uint64_t v5 = v4;
            }
            if ((v3 & 0x20) == 0) {
              goto LABEL_46;
            }
            uint64_t v22 = *(void *)(a1 + 48);
            if (!v22) {
              uint64_t v22 = *(void *)(qword_1008ABE88 + 48);
            }
            uint64_t v23 = *(void **)(v22 + 8);
            if (!v23 || *v23 == v23[1])
            {
              int v25 = 0;
              *(_DWORD *)(v22 + 16) = 0;
            }
            else
            {
              int v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v22 + 8), a2);
              int v25 = (int)v24;
              *(_DWORD *)(v22 + 16) = v24;
              if (v24 >= 0x80)
              {
                int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24, a2);
LABEL_45:
                uint64_t v5 = (v5 + v25 + v26 + 1);
                goto LABEL_46;
              }
            }
            int v26 = 1;
            goto LABEL_45;
          }
        }
        else if ((v3 & 8) == 0)
        {
          goto LABEL_33;
        }
        uint64_t v18 = *(void *)(a1 + 40);
        if (!v18) {
          uint64_t v18 = *(void *)(qword_1008ABE88 + 40);
        }
        int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10006A268(v18, a2);
        int v20 = (int)v19;
        if (v19 >= 0x80) {
          int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2);
        }
        else {
          int v21 = 1;
        }
        v4 += v20 + v21 + 1;
        int v3 = *(_DWORD *)(a1 + 64);
        goto LABEL_33;
      }
    }
    else
    {
      unsigned int v4 = 0;
      if ((*(unsigned char *)(a1 + 64) & 2) == 0) {
        goto LABEL_18;
      }
    }
    uint64_t v10 = *(void *)(a1 + 24);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_1008ABE88 + 24);
    }
    uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000690B0(v10, a2);
    int v12 = (int)v11;
    if (v11 >= 0x80) {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    }
    else {
      int v13 = 1;
    }
    v4 += v12 + v13 + 1;
    int v3 = *(_DWORD *)(a1 + 64);
    goto LABEL_18;
  }
  uint64_t v5 = 0;
LABEL_46:
  uint64_t v27 = *(void **)(a1 + 8);
  if (v27 && *v27 != v27[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 60) = v5;
  return v5;
}

uint64_t sub_10006F270(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10006E00C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10006F344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10006F35C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10006F3E8()
{
  return 1;
}

uint64_t sub_10006F3F0()
{
  uint64_t v0 = qword_1008A0830;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100059FAC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A07F0;
}

void sub_10006F484(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10006F498(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_10006F4A0(uint64_t a1)
{
  (*(void (**)(uint64_t))(*(void *)a1 + 152))(a1);
  return v1;
}

uint64_t sub_10006F4DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_10006F4E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_10006F4EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_10006F4F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_10006F4FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_10006F504(uint64_t a1)
{
  return *(unsigned int *)(a1 + 68);
}

uint64_t sub_10006F50C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 68);
}

uint64_t sub_10006F514(uint64_t a1)
{
  return *(unsigned int *)(a1 + 92);
}

uint64_t sub_10006F51C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_10006F524(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_10006F52C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 76);
}

uint64_t sub_10006F534(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_10006F53C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_10006F544(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_10006F54C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_10006F554(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_10006F55C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_10006F564(uint64_t a1)
{
  return *(unsigned int *)(a1 + 280);
}

uint64_t sub_10006F56C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_10006F574(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60);
}

uint64_t sub_10006F57C(uint64_t result, int a2)
{
  int v2 = *(_DWORD *)(result + 12);
  if (v2 < a2)
  {
    int v3 = 2 * v2;
    if (v3 <= a2) {
      int v3 = a2;
    }
    if (v3 <= 4) {
      int v3 = 4;
    }
    *(_DWORD *)(result + 12) = v3;
    operator new[]();
  }
  return result;
}

uint64_t sub_10006F628(uint64_t result, int a2)
{
  int v2 = *(_DWORD *)(result + 12);
  if (v2 < a2)
  {
    int v3 = 2 * v2;
    if (v3 <= a2) {
      int v3 = a2;
    }
    if (v3 <= 4) {
      int v3 = 4;
    }
    *(_DWORD *)(result + 12) = v3;
    operator new[]();
  }
  return result;
}

void sub_10006F6D4()
{
}

void sub_10006F714()
{
}

void sub_10006F738()
{
}

void sub_10006F778()
{
}

void sub_10006F79C()
{
}

void sub_10006F7DC()
{
}

void sub_10006F800()
{
}

void sub_10006F840()
{
}

void sub_10006F864()
{
}

void sub_10006F8A4()
{
}

uint64_t sub_10006F8C8(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t sub_10006F938(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    operator delete[]();
  }
  return result;
}

void sub_10006F9E0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  sub_1000705C0(a1, a2, a3, a4);
  wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v4);
  sub_100004950(__p, "CLPNearbyd.proto");
  uint64_t FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName();
  uint64_t v6 = FileByName;
  if (v8 < 0)
  {
    operator delete(__p[0]);
    if (v6) {
      goto LABEL_6;
    }
  }
  else if (FileByName)
  {
    goto LABEL_6;
  }
  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)__p);
LABEL_6:
  qword_1008A0838 = *(void *)(v6 + 80);
  operator new();
}

void sub_100070524(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

void sub_1000705C0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_1008A09A8 & 1) == 0)
  {
    byte_1008A09A8 = 1;
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPNearbyd.pb.cc", a4);
    sub_1000C4974(v4, v5, v6, v7);
    sub_100134938(v8, v9, v10, v11);
    sub_1000D5FDC(v12, v13, v14, v15);
    sub_1000EF4F0(v16, v17, v18, v19);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)&unk_1004A2164, (const void *)0x2648, v20);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile();
    operator new();
  }
}

void sub_100070A0C()
{
}

uint64_t sub_100070BC8()
{
  if (qword_1008ABE90) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABE90 + 8))(qword_1008ABE90);
  }
  if (qword_1008A0840) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0840 + 8))(qword_1008A0840);
  }
  if (qword_1008ABE98) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABE98 + 8))(qword_1008ABE98);
  }
  if (qword_1008A0850) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0850 + 8))(qword_1008A0850);
  }
  if (qword_1008ABEA0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABEA0 + 8))(qword_1008ABEA0);
  }
  if (qword_1008A0860) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0860 + 8))(qword_1008A0860);
  }
  if (qword_1008ABEA8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABEA8 + 8))(qword_1008ABEA8);
  }
  if (qword_1008A0870) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0870 + 8))(qword_1008A0870);
  }
  if (qword_1008ABEB0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABEB0 + 8))(qword_1008ABEB0);
  }
  if (qword_1008A0880) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0880 + 8))(qword_1008A0880);
  }
  if (qword_1008ABEB8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABEB8 + 8))(qword_1008ABEB8);
  }
  if (qword_1008A0890) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0890 + 8))(qword_1008A0890);
  }
  if (qword_1008ABEC0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABEC0 + 8))(qword_1008ABEC0);
  }
  if (qword_1008A08A0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A08A0 + 8))(qword_1008A08A0);
  }
  if (qword_1008ABEC8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABEC8 + 8))(qword_1008ABEC8);
  }
  if (qword_1008A08B0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A08B0 + 8))(qword_1008A08B0);
  }
  if (qword_1008ABED0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABED0 + 8))(qword_1008ABED0);
  }
  if (qword_1008A08C0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A08C0 + 8))(qword_1008A08C0);
  }
  if (qword_1008ABED8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABED8 + 8))(qword_1008ABED8);
  }
  if (qword_1008A08D0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A08D0 + 8))(qword_1008A08D0);
  }
  if (qword_1008ABEE0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABEE0 + 8))(qword_1008ABEE0);
  }
  if (qword_1008A08E0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A08E0 + 8))(qword_1008A08E0);
  }
  if (qword_1008ABEE8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABEE8 + 8))(qword_1008ABEE8);
  }
  if (qword_1008A08F0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A08F0 + 8))(qword_1008A08F0);
  }
  if (qword_1008ABEF0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABEF0 + 8))(qword_1008ABEF0);
  }
  if (qword_1008A0900) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0900 + 8))(qword_1008A0900);
  }
  if (qword_1008ABEF8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABEF8 + 8))(qword_1008ABEF8);
  }
  if (qword_1008A0910) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0910 + 8))(qword_1008A0910);
  }
  if (qword_1008ABF00) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABF00 + 8))(qword_1008ABF00);
  }
  if (qword_1008A0920) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0920 + 8))(qword_1008A0920);
  }
  if (qword_1008ABF08) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABF08 + 8))(qword_1008ABF08);
  }
  if (qword_1008A0930) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0930 + 8))(qword_1008A0930);
  }
  if (qword_1008ABF10) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABF10 + 8))(qword_1008ABF10);
  }
  if (qword_1008A0940) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0940 + 8))(qword_1008A0940);
  }
  if (qword_1008ABF18) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABF18 + 8))(qword_1008ABF18);
  }
  if (qword_1008A0950) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0950 + 8))(qword_1008A0950);
  }
  if (qword_1008ABF20) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABF20 + 8))(qword_1008ABF20);
  }
  if (qword_1008A0960) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0960 + 8))(qword_1008A0960);
  }
  if (qword_1008ABF28) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABF28 + 8))(qword_1008ABF28);
  }
  uint64_t result = qword_1008A0970;
  if (qword_1008A0970)
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)qword_1008A0970 + 8);
    return v1();
  }
  return result;
}

uint64_t sub_100071370()
{
  uint64_t v0 = qword_1008A09B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v21[1] = sub_10006F9E0;
    char v22 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v21);
  }
  if (!qword_1008ABE90) {
    ((void (*)(void))sub_1000705C0)();
  }
  uint64_t v1 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABE98) {
    sub_1000705C0(v1);
  }
  uint64_t v2 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABEA0) {
    sub_1000705C0(v2);
  }
  uint64_t v3 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABEA8) {
    sub_1000705C0(v3);
  }
  uint64_t v4 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABEB0) {
    sub_1000705C0(v4);
  }
  uint64_t v5 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABEB8) {
    sub_1000705C0(v5);
  }
  uint64_t v6 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABEC0) {
    sub_1000705C0(v6);
  }
  uint64_t v7 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABEC8) {
    sub_1000705C0(v7);
  }
  uint64_t v8 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABED0) {
    sub_1000705C0(v8);
  }
  uint64_t v9 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABED8) {
    sub_1000705C0(v9);
  }
  uint64_t v10 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABEE0) {
    sub_1000705C0(v10);
  }
  uint64_t v11 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABEE8) {
    sub_1000705C0(v11);
  }
  uint64_t v12 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABEF0) {
    sub_1000705C0(v12);
  }
  uint64_t v13 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABEF8) {
    sub_1000705C0(v13);
  }
  uint64_t v14 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABF00) {
    sub_1000705C0(v14);
  }
  uint64_t v15 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABF08) {
    sub_1000705C0(v15);
  }
  uint64_t v16 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABF10) {
    sub_1000705C0(v16);
  }
  uint64_t v17 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABF18) {
    sub_1000705C0(v17);
  }
  uint64_t v18 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABF20) {
    sub_1000705C0(v18);
  }
  uint64_t v19 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABF28) {
    sub_1000705C0(v19);
  }
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
}

void sub_1000716C4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10007171C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v4 = (void *)a1;
  uint64_t v5 = qword_1008ABEA0;
  if (!qword_1008ABEA0)
  {
    a1 = sub_1000705C0(a1);
    uint64_t v5 = qword_1008ABEA0;
  }
  v4[2] = v5;
  uint64_t v6 = sub_1000C65B4(a1, a2, a3, a4);
  v4[3] = v6;
  uint64_t v10 = sub_1000C764C(v6, v7, v8, v9);
  void v4[4] = v10;
  uint64_t v14 = sub_1000C7F74(v10, v11, v12, v13);
  v4[5] = v14;
  uint64_t v18 = sub_100135C7C(v14, v15, v16, v17);
  v4[6] = v18;
  uint64_t v22 = qword_1008ABEA8;
  if (!qword_1008ABEA8)
  {
    uint64_t v18 = sub_1000705C0(v18);
    uint64_t v22 = qword_1008ABEA8;
  }
  v4[7] = v22;
  uint64_t v23 = qword_1008ABEB8;
  if (!qword_1008ABEB8)
  {
    uint64_t v18 = sub_1000705C0(v18);
    uint64_t v23 = qword_1008ABEB8;
  }
  v4[8] = v23;
  uint64_t v24 = qword_1008ABEC0;
  if (!qword_1008ABEC0)
  {
    uint64_t v18 = sub_1000705C0(v18);
    uint64_t v24 = qword_1008ABEC0;
  }
  v4[9] = v24;
  uint64_t v25 = qword_1008ABEC8;
  if (!qword_1008ABEC8)
  {
    uint64_t v18 = sub_1000705C0(v18);
    uint64_t v25 = qword_1008ABEC8;
  }
  v4[10] = v25;
  uint64_t v26 = qword_1008ABED0;
  if (!qword_1008ABED0)
  {
    uint64_t v18 = sub_1000705C0(v18);
    uint64_t v26 = qword_1008ABED0;
  }
  v4[11] = v26;
  uint64_t v27 = qword_1008ABED8;
  if (!qword_1008ABED8)
  {
    uint64_t v18 = sub_1000705C0(v18);
    uint64_t v27 = qword_1008ABED8;
  }
  v4[12] = v27;
  uint64_t v28 = qword_1008ABEE0;
  if (!qword_1008ABEE0)
  {
    uint64_t v18 = sub_1000705C0(v18);
    uint64_t v28 = qword_1008ABEE0;
  }
  v4[13] = v28;
  uint64_t v29 = sub_1000F3E78(v18, v19, v20, v21);
  v4[14] = v29;
  uint64_t v33 = sub_1001117A0(v29, v30, v31, v32);
  v4[15] = v33;
  uint64_t v37 = sub_10011A49C(v33, v34, v35, v36);
  v4[16] = v37;
  uint64_t v41 = sub_10012BD14(v37, v38, v39, v40);
  v4[17] = v41;
  uint64_t v45 = sub_1001045E0(v41, v42, v43, v44);
  v4[18] = v45;
  uint64_t v49 = sub_1001160F8(v45, v46, v47, v48);
  v4[19] = v49;
  uint64_t v53 = sub_1001195B0(v49, v50, v51, v52);
  v4[20] = v53;
  uint64_t v57 = sub_10011B4D4(v53, v54, v55, v56);
  v4[21] = v57;
  uint64_t v61 = sub_10011C034(v57, v58, v59, v60);
  v4[22] = v61;
  uint64_t v65 = sub_10011CBC0(v61, v62, v63, v64);
  v4[23] = v65;
  uint64_t v69 = sub_10011DCD8(v65, v66, v67, v68);
  v4[24] = v69;
  uint64_t v73 = sub_10011F848(v69, v70, v71, v72);
  v4[25] = v73;
  uint64_t v77 = sub_10012127C(v73, v74, v75, v76);
  v4[26] = v77;
  uint64_t v81 = sub_10011F848(v77, v78, v79, v80);
  v4[27] = v81;
  uint64_t v85 = sub_1000DA7A4(v81, v82, v83, v84);
  v4[28] = v85;
  uint64_t v89 = qword_1008ABF10;
  if (!qword_1008ABF10)
  {
    uint64_t v85 = sub_1000705C0(v85);
    uint64_t v89 = qword_1008ABF10;
  }
  v4[29] = v89;
  uint64_t v90 = sub_100123A08(v85, v86, v87, v88);
  v4[30] = v90;
  uint64_t v94 = sub_100124F88(v90, v91, v92, v93);
  v4[31] = v94;
  uint64_t v98 = sub_100128A40(v94, v95, v96, v97);
  v4[32] = v98;
  uint64_t v102 = sub_1001293B0(v98, v99, v100, v101);
  v4[33] = v102;
  uint64_t v106 = sub_100129C30(v102, v103, v104, v105);
  v4[34] = v106;
  uint64_t v110 = sub_100127248(v106, v107, v108, v109);
  v4[35] = v110;
  uint64_t v114 = sub_10011F848(v110, v111, v112, v113);
  v4[36] = v114;
  uint64_t v118 = qword_1008ABF18;
  if (!qword_1008ABF18)
  {
    uint64_t v114 = sub_1000705C0(v114);
    uint64_t v118 = qword_1008ABF18;
  }
  v4[37] = v118;
  uint64_t v119 = sub_1001244B8(v114, v115, v116, v117);
  v4[38] = v119;
  uint64_t v123 = sub_10012A7AC(v119, v120, v121, v122);
  v4[39] = v123;
  uint64_t v127 = qword_1008ABF28;
  if (!qword_1008ABF28)
  {
    uint64_t v123 = sub_1000705C0(v123);
    uint64_t v127 = qword_1008ABF28;
  }
  v4[40] = v127;
  uint64_t v128 = sub_100122DFC(v123, v124, v125, v126);
  v4[41] = v128;
  uint64_t v132 = sub_10012CB1C(v128, v129, v130, v131);
  v4[42] = v132;
  uint64_t v136 = sub_10012E1CC(v132, v133, v134, v135);
  v4[43] = v136;
  uint64_t v140 = sub_10012FAC0(v136, v137, v138, v139);
  v4[44] = v140;
  uint64_t v144 = sub_100131174(v140, v141, v142, v143);
  v4[45] = v144;
  uint64_t v148 = sub_10012B310(v144, v145, v146, v147);
  v4[46] = v148;
  uint64_t result = sub_100131C94(v148, v149, v150, v151);
  v4[47] = result;
  return result;
}

uint64_t sub_10007195C(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_1008ABEF8;
  if (!qword_1008ABEF8)
  {
    uint64_t result = sub_1000705C0(result);
    uint64_t v2 = qword_1008ABEF8;
  }
  v1[4] = v2;
  uint64_t v3 = qword_1008ABF00;
  if (!qword_1008ABF00)
  {
    uint64_t result = sub_1000705C0(result);
    uint64_t v3 = qword_1008ABF00;
  }
  v1[6] = v3;
  uint64_t v4 = qword_1008ABEF0;
  if (!qword_1008ABEF0)
  {
    uint64_t result = sub_1000705C0(result);
    uint64_t v4 = qword_1008ABEF0;
  }
  v1[8] = v4;
  uint64_t v5 = qword_1008ABEE8;
  if (!qword_1008ABEE8)
  {
    uint64_t result = sub_1000705C0(result);
    uint64_t v5 = qword_1008ABEE8;
  }
  v1[9] = v5;
  uint64_t v6 = qword_1008ABF08;
  if (!qword_1008ABF08)
  {
    uint64_t result = sub_1000705C0(result);
    uint64_t v6 = qword_1008ABF08;
  }
  v1[10] = v6;
  return result;
}

BOOL sub_1000719F4(unsigned int a1)
{
  return a1 < 0x30 || a1 - 100 < 2;
}

BOOL sub_100071A10(unsigned int a1)
{
  return a1 < 0x10 || a1 - 998 < 2;
}

BOOL sub_100071A2C(unsigned int a1)
{
  return a1 < 2;
}

BOOL sub_100071A38(unsigned int a1)
{
  return a1 < 6;
}

void *sub_100071A44(void *a1)
{
  *a1 = off_100848A48;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  return a1;
}

void sub_100071A8C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100071AA0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_100848A48;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  sub_100071B2C((_DWORD *)a1, a2);
  return a1;
}

void sub_100071B08(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100071B2C(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      unsigned int v5 = *(_DWORD *)(a2 + 16);
      if (!sub_100071A10(v5)) {
        sub_10040FB78();
      }
      a1[7] |= 1u;
      a1[4] = v5;
      int v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 2) != 0)
    {
      unsigned int v6 = *(_DWORD *)(a2 + 20);
      if (v6 >= 2) {
        sub_10040FB4C();
      }
      a1[7] |= 2u;
      a1[5] = v6;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100071C08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100071C24(uint64_t a1)
{
  *(void *)a1 = off_100848A48;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100071C78(uint64_t a1)
{
  *(void *)a1 = off_100848A48;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100071CE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 24) = a2;
  return result;
}

void sub_100071CE8()
{
}

void sub_100071D28()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100071D4C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 28)) {
    *(void *)(a1 + 16) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 5) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100071D6C(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2);
  while (1)
  {
    while (1)
    {
      uint64_t v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unsigned int v18 = 0;
      uint64_t v12 = (char *)*((void *)this + 1);
      if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v18);
        if (!result) {
          return result;
        }
        signed int v13 = v18;
      }
      else
      {
        signed int v13 = *v12;
        *((void *)this + 1) = v12 + 1;
      }
      if (sub_100071A10(v13))
      {
        a1[7] |= 1u;
        a1[4] = v13;
      }
      else
      {
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 1, v13);
      }
      uint64_t v14 = (unsigned char *)*((void *)this + 1);
      unint64_t v10 = *((void *)this + 2);
      if ((unint64_t)v14 < v10 && *v14 == 16)
      {
        uint64_t v11 = v14 + 1;
        *((void *)this + 1) = v11;
LABEL_27:
        unsigned int v17 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v17);
          if (!result) {
            return result;
          }
          unsigned int v15 = v17;
        }
        else
        {
          unsigned int v15 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        if (v15 > 1)
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 2, (int)v15);
        }
        else
        {
          a1[7] |= 2u;
          a1[5] = v15;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        uint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_27;
      }
    }
    else
    {
      int v9 = TagFallback & 7;
    }
LABEL_16:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_100071F60(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 28);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 16), (int)a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if ((v6 & 2) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 20), (int)a2, a4);
  }
  int v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100071FEC(wireless_diagnostics::google::protobuf::internal::WireFormat *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  if (*((unsigned char *)this + 28))
  {
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 4);
    *(unsigned char *)a2 = 8;
    if ((v4 & 0x80000000) != 0)
    {
      uint64_t v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v4, (unint64_t)a2 + 1, a3);
    }
    else
    {
      if (v4 <= 0x7F)
      {
        *((unsigned char *)a2 + 1) = (_BYTE)v4;
        a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
        goto LABEL_8;
      }
      uint64_t v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v4, (int)a2 + 1, a3);
    }
    a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)v5;
  }
LABEL_8:
  if ((*((unsigned char *)this + 28) & 2) != 0)
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 5);
    *(unsigned char *)a2 = 16;
    if ((v6 & 0x80000000) != 0)
    {
      uint64_t v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v6, (unint64_t)a2 + 1, a3);
    }
    else
    {
      if (v6 <= 0x7F)
      {
        *((unsigned char *)a2 + 1) = (_BYTE)v6;
        a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
        goto LABEL_15;
      }
      uint64_t v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, (int)a2 + 1, a3);
    }
    a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)v7;
  }
LABEL_15:
  unint64_t v10 = (void *)*((void *)this + 1);
  int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v8 = v10;
  if (!v10 || *v8 == v8[1]) {
    return a2;
  }

  return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v9, a2, a3);
}

uint64_t sub_1000720D4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  char v3 = *(unsigned char *)(a1 + 28);
  if (v3)
  {
    if ((*(unsigned char *)(a1 + 28) & 1) == 0)
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 28) & 2) == 0) {
        goto LABEL_19;
      }
LABEL_13:
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
      if ((v6 & 0x80000000) != 0)
      {
        int v7 = 11;
      }
      else if (v6 >= 0x80)
      {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2)
           + 1;
      }
      else
      {
        int v7 = 2;
      }
      uint64_t v4 = (v7 + v4);
      goto LABEL_19;
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v5 & 0x80000000) != 0)
    {
      uint64_t v4 = 11;
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
      goto LABEL_13;
    }
    if (v5 < 0x80)
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
      goto LABEL_13;
    }
    uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)+ 1;
    if ((*(_DWORD *)(a1 + 28) & 2) != 0) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_19:
  uint64_t v8 = *(void **)(a1 + 8);
  if (v8 && *v8 != v8[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 24) = v4;
  return v4;
}

uint64_t sub_1000721A0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100071B2C(a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100072274(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10007228C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100072318()
{
  return 1;
}

uint64_t sub_100072320()
{
  uint64_t v0 = qword_1008A09B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006F9E0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A0838;
}

void sub_1000723B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

BOOL sub_1000723C8(unsigned int a1)
{
  return a1 < 3;
}

BOOL sub_1000723D4(unsigned int a1)
{
  return a1 < 4;
}

void *sub_1000723E0(void *a1)
{
  *a1 = off_100848AF8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  a1[3] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  a1[4] = 0;
  return a1;
}

void sub_100072434(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100072448(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      uint64_t v5 = *(const std::string **)(a2 + 16);
      *(_DWORD *)(a1 + 36) |= 1u;
      int v6 = *(std::string **)(a1 + 16);
      if (v6 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      std::string::operator=(v6, v5);
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 2) != 0)
    {
      int v7 = *(const std::string **)(a2 + 24);
      *(_DWORD *)(a1 + 36) |= 2u;
      uint64_t v8 = *(std::string **)(a1 + 24);
      if (v8 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      std::string::operator=(v8, v7);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100072578(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100072590(wireless_diagnostics::google::protobuf::Message *a1)
{
  *(void *)a1 = off_100848AF8;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::Message *)((char *)a1 + 8);
  sub_1000725F0((uint64_t)a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message(a1);
}

uint64_t sub_1000725F0(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  uint64_t v3 = *(void *)(result + 24);
  if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v3 != 0)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    operator delete();
  }
  return result;
}

void sub_1000726B0(wireless_diagnostics::google::protobuf::Message *a1)
{
  sub_100072590(a1);

  operator delete();
}

uint64_t sub_1000726E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_1000726F0()
{
}

void sub_100072730()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100072754(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 36))
  {
    if (*(unsigned char *)(a1 + 36))
    {
      uint64_t v1 = *(void *)(a1 + 16);
      if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v1 + 23) < 0)
        {
          **(unsigned char **)uint64_t v1 = 0;
          *(void *)(v1 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v1 = 0;
          *(unsigned char *)(v1 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(a1 + 36) & 2) != 0)
    {
      uint64_t v2 = *(void *)(a1 + 24);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
  }
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v4) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1000727DC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v9 = TagFallback & 7;
      if (v9 != 2) {
        goto LABEL_17;
      }
      *(_DWORD *)(a1 + 36) |= 1u;
      if (*(_UNKNOWN **)(a1 + 16) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
      if (!result) {
        return result;
      }
      wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback();
      uint64_t v11 = (unsigned char *)*((void *)this + 1);
      if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 18)
      {
        *((void *)this + 1) = v11 + 1;
LABEL_23:
        *(_DWORD *)(a1 + 36) |= 2u;
        if (*(_UNKNOWN **)(a1 + 24) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback();
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v9 = TagFallback & 7;
      if (v9 == 2) {
        goto LABEL_23;
      }
    }
    else
    {
      int v9 = TagFallback & 7;
    }
LABEL_17:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1000729DC(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 36);
  if (v5)
  {
    wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback();
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    int v5 = *(_DWORD *)(v4 + 36);
  }
  if ((v5 & 2) != 0)
  {
    wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback();
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  }
  uint64_t v8 = *(void **)(v4 + 8);
  int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v8;
  if (v8 && *v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100072AA8(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  int v5 = *((_DWORD *)this + 9);
  if (v5)
  {
    wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback();
    uint64_t v8 = *((void *)this + 2);
    *(unsigned char *)a2 = 10;
    if (*(char *)(v8 + 23) < 0) {
      int v9 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v8 + 8);
    }
    else {
      int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v8 + 23);
    }
    if (v9 > 0x7F)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (int)a2 + 1, v6);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v9;
      int v10 = a2 + 2;
    }
    int v11 = *(char *)(v8 + 23);
    if (v11 >= 0) {
      uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8;
    }
    else {
      uint64_t v12 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v8;
    }
    if (v11 >= 0) {
      signed int v13 = (const void *)*(unsigned __int8 *)(v8 + 23);
    }
    else {
      signed int v13 = (const void *)*(unsigned int *)(v8 + 8);
    }
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v12, v13, v10, v7);
    int v5 = *((_DWORD *)this + 9);
  }
  if ((v5 & 2) != 0)
  {
    wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback();
    uint64_t v16 = *((void *)this + 3);
    *(unsigned char *)a2 = 18;
    if (*(char *)(v16 + 23) < 0) {
      unsigned int v17 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v16 + 8);
    }
    else {
      unsigned int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v16 + 23);
    }
    if (v17 > 0x7F)
    {
      int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, (int)a2 + 1, v14);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v17;
      int v18 = a2 + 2;
    }
    int v19 = *(char *)(v16 + 23);
    if (v19 >= 0) {
      uint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16;
    }
    else {
      uint64_t v20 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v16;
    }
    if (v19 >= 0) {
      int v21 = (const void *)*(unsigned __int8 *)(v16 + 23);
    }
    else {
      int v21 = (const void *)*(unsigned int *)(v16 + 8);
    }
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v20, v21, v18, v15);
  }
  uint64_t v24 = (void *)*((void *)this + 1);
  uint64_t v23 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v22 = v24;
  if (!v24 || *v22 == v22[1]) {
    return a2;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v23, a2, a3);
}

uint64_t sub_100072C2C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_24;
  }
  if ((*(unsigned char *)(a1 + 36) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 36) & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }
  uint64_t v5 = *(void *)(a1 + 16);
  int v6 = *(unsigned __int8 *)(v5 + 23);
  char v7 = v6;
  uint64_t v8 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
  }
  else {
    unint64_t v9 = v8;
  }
  if (v9 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9, a2);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v8 = *(void *)(v5 + 8);
    int v10 = v11 + 1;
    int v3 = *(_DWORD *)(a1 + 36);
    char v7 = *(unsigned char *)(v5 + 23);
  }
  else
  {
    int v10 = 2;
  }
  if (v7 < 0) {
    int v6 = v8;
  }
  uint64_t v4 = (v10 + v6);
  if ((v3 & 2) != 0)
  {
LABEL_15:
    uint64_t v12 = *(void *)(a1 + 24);
    int v13 = *(unsigned __int8 *)(v12 + 23);
    char v14 = v13;
    uint64_t v15 = *(void *)(v12 + 8);
    if ((v13 & 0x80u) == 0) {
      unint64_t v16 = *(unsigned __int8 *)(v12 + 23);
    }
    else {
      unint64_t v16 = v15;
    }
    if (v16 >= 0x80)
    {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16, a2);
      int v13 = *(unsigned __int8 *)(v12 + 23);
      uint64_t v15 = *(void *)(v12 + 8);
      char v14 = *(unsigned char *)(v12 + 23);
    }
    else
    {
      int v17 = 1;
    }
    if (v14 < 0) {
      int v13 = v15;
    }
    uint64_t v4 = (v4 + v17 + v13 + 1);
  }
LABEL_24:
  int v18 = *(void **)(a1 + 8);
  if (v18 && *v18 != v18[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

uint64_t sub_100072D40(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100072448((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100072E14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100072E2C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100072EB8()
{
  return 1;
}

uint64_t sub_100072EC0()
{
  uint64_t v0 = qword_1008A09B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006F9E0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A0858;
}

void sub_100072F54(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100072F68(uint64_t a1)
{
  *(void *)a1 = off_100848BA8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_DWORD *)(a1 + 36) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_WORD *)(a1 + 32) = 0;
  return a1;
}

void sub_100072FB8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100072FCC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  int v4 = *(_DWORD *)(a2 + 40);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v8 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 40) |= 1u;
    *(void *)(a1 + 16) = v8;
    int v4 = *(_DWORD *)(a2 + 40);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_21;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  char v9 = *(unsigned char *)(a2 + 24);
  *(_DWORD *)(a1 + 40) |= 2u;
  *(unsigned char *)(a1 + 24) = v9;
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  char v10 = *(unsigned char *)(a2 + 25);
  *(_DWORD *)(a1 + 40) |= 4u;
  *(unsigned char *)(a1 + 25) = v10;
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  char v11 = *(unsigned char *)(a2 + 26);
  *(_DWORD *)(a1 + 40) |= 8u;
  *(unsigned char *)(a1 + 26) = v11;
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_24:
    char v13 = *(unsigned char *)(a2 + 28);
    *(_DWORD *)(a1 + 40) |= 0x20u;
    *(unsigned char *)(a1 + 28) = v13;
    int v4 = *(_DWORD *)(a2 + 40);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_23:
  char v12 = *(unsigned char *)(a2 + 27);
  *(_DWORD *)(a1 + 40) |= 0x10u;
  *(unsigned char *)(a1 + 27) = v12;
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0x20) != 0) {
    goto LABEL_24;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_25:
  char v14 = *(unsigned char *)(a2 + 29);
  *(_DWORD *)(a1 + 40) |= 0x40u;
  *(unsigned char *)(a1 + 29) = v14;
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    char v5 = *(unsigned char *)(a2 + 30);
    *(_DWORD *)(a1 + 40) |= 0x80u;
    *(unsigned char *)(a1 + 30) = v5;
    int v4 = *(_DWORD *)(a2 + 40);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v4 & 0x100) == 0)
  {
    if ((v4 & 0x200) == 0) {
      goto LABEL_16;
    }
LABEL_28:
    char v16 = *(unsigned char *)(a2 + 32);
    *(_DWORD *)(a1 + 40) |= 0x200u;
    *(unsigned char *)(a1 + 32) = v16;
    if ((*(_DWORD *)(a2 + 40) & 0x400) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_17;
  }
  char v15 = *(unsigned char *)(a2 + 31);
  *(_DWORD *)(a1 + 40) |= 0x100u;
  *(unsigned char *)(a1 + 31) = v15;
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0x200) != 0) {
    goto LABEL_28;
  }
LABEL_16:
  if ((v4 & 0x400) != 0)
  {
LABEL_17:
    char v6 = *(unsigned char *)(a2 + 33);
    *(_DWORD *)(a1 + 40) |= 0x400u;
    *(unsigned char *)(a1 + 33) = v6;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000731B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000731D0(uint64_t a1)
{
  *(void *)a1 = off_100848BA8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100073224(uint64_t a1)
{
  *(void *)a1 = off_100848BA8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_10007328C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 36) = a2;
  return result;
}

void sub_100073294()
{
}

void sub_1000732D4()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000732F8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 40);
  if ((_BYTE)v1)
  {
    *(void *)(a1 + 23) = 0;
    *(void *)(a1 + 16) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_WORD *)(a1 + 31) = 0;
    *(unsigned char *)(a1 + 33) = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 8) = 0;
  if (v3) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100073330(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (2)
  {
    char v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_36;
        }
        *(void *)uint64_t v43 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v43) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v43;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        char v11 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v11 >= v10 || *v11 != 16) {
          continue;
        }
        char v12 = v11 + 1;
        *((void *)this + 1) = v12;
        goto LABEL_16;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        char v12 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_16:
        v43[0] = 0;
        if ((unint64_t)v12 >= v10 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v43);
          if (!result) {
            return result;
          }
          unsigned int v13 = v43[0];
          char v14 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v13 = *v12;
          char v14 = v12 + 1;
          *((void *)this + 1) = v14;
        }
        *(unsigned char *)(a1 + 24) = v13 != 0;
        *(_DWORD *)(a1 + 40) |= 2u;
        if ((unint64_t)v14 >= v10 || *v14 != 24) {
          continue;
        }
        char v15 = v14 + 1;
        *((void *)this + 1) = v15;
LABEL_45:
        v43[0] = 0;
        if ((unint64_t)v15 >= v10 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v43);
          if (!result) {
            return result;
          }
          unsigned int v25 = v43[0];
          uint64_t v26 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v25 = *v15;
          uint64_t v26 = v15 + 1;
          *((void *)this + 1) = v26;
        }
        *(unsigned char *)(a1 + 25) = v25 != 0;
        *(_DWORD *)(a1 + 40) |= 4u;
        if ((unint64_t)v26 >= v10 || *v26 != 32) {
          continue;
        }
        char v16 = v26 + 1;
        *((void *)this + 1) = v16;
LABEL_53:
        v43[0] = 0;
        if ((unint64_t)v16 >= v10 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v43);
          if (!result) {
            return result;
          }
          unsigned int v27 = v43[0];
          uint64_t v28 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v27 = *v16;
          uint64_t v28 = v16 + 1;
          *((void *)this + 1) = v28;
        }
        *(unsigned char *)(a1 + 26) = v27 != 0;
        *(_DWORD *)(a1 + 40) |= 8u;
        if ((unint64_t)v28 >= v10 || *v28 != 40) {
          continue;
        }
        int v17 = v28 + 1;
        *((void *)this + 1) = v17;
LABEL_61:
        v43[0] = 0;
        if ((unint64_t)v17 >= v10 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v43);
          if (!result) {
            return result;
          }
          unsigned int v29 = v43[0];
          uint64_t v30 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v29 = *v17;
          uint64_t v30 = v17 + 1;
          *((void *)this + 1) = v30;
        }
        *(unsigned char *)(a1 + 27) = v29 != 0;
        *(_DWORD *)(a1 + 40) |= 0x10u;
        if ((unint64_t)v30 >= v10 || *v30 != 48) {
          continue;
        }
        int v18 = v30 + 1;
        *((void *)this + 1) = v18;
LABEL_69:
        v43[0] = 0;
        if ((unint64_t)v18 >= v10 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v43);
          if (!result) {
            return result;
          }
          unsigned int v31 = v43[0];
          uint64_t v32 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v31 = *v18;
          uint64_t v32 = v18 + 1;
          *((void *)this + 1) = v32;
        }
        *(unsigned char *)(a1 + 28) = v31 != 0;
        *(_DWORD *)(a1 + 40) |= 0x20u;
        if ((unint64_t)v32 >= v10 || *v32 != 56) {
          continue;
        }
        int v19 = v32 + 1;
        *((void *)this + 1) = v19;
LABEL_77:
        v43[0] = 0;
        if ((unint64_t)v19 >= v10 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v43);
          if (!result) {
            return result;
          }
          unsigned int v33 = v43[0];
          uint64_t v34 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v33 = *v19;
          uint64_t v34 = v19 + 1;
          *((void *)this + 1) = v34;
        }
        *(unsigned char *)(a1 + 29) = v33 != 0;
        *(_DWORD *)(a1 + 40) |= 0x40u;
        if ((unint64_t)v34 >= v10 || *v34 != 64) {
          continue;
        }
        uint64_t v20 = v34 + 1;
        *((void *)this + 1) = v20;
LABEL_85:
        v43[0] = 0;
        if ((unint64_t)v20 >= v10 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v43);
          if (!result) {
            return result;
          }
          unsigned int v35 = v43[0];
          int v36 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v35 = *v20;
          int v36 = v20 + 1;
          *((void *)this + 1) = v36;
        }
        *(unsigned char *)(a1 + 30) = v35 != 0;
        *(_DWORD *)(a1 + 40) |= 0x80u;
        if ((unint64_t)v36 >= v10 || *v36 != 72) {
          continue;
        }
        int v21 = v36 + 1;
        *((void *)this + 1) = v21;
LABEL_93:
        v43[0] = 0;
        if ((unint64_t)v21 >= v10 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v43);
          if (!result) {
            return result;
          }
          unsigned int v37 = v43[0];
          uint64_t v38 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v37 = *v21;
          uint64_t v38 = v21 + 1;
          *((void *)this + 1) = v38;
        }
        *(unsigned char *)(a1 + 31) = v37 != 0;
        *(_DWORD *)(a1 + 40) |= 0x100u;
        if ((unint64_t)v38 >= v10 || *v38 != 80) {
          continue;
        }
        uint64_t v22 = v38 + 1;
        *((void *)this + 1) = v22;
LABEL_101:
        v43[0] = 0;
        if ((unint64_t)v22 >= v10 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v43);
          if (!result) {
            return result;
          }
          unsigned int v39 = v43[0];
          int v40 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v39 = *v22;
          int v40 = v22 + 1;
          *((void *)this + 1) = v40;
        }
        *(unsigned char *)(a1 + 32) = v39 != 0;
        *(_DWORD *)(a1 + 40) |= 0x200u;
        if ((unint64_t)v40 >= v10 || *v40 != 88) {
          continue;
        }
        uint64_t v23 = v40 + 1;
        *((void *)this + 1) = v23;
LABEL_109:
        v43[0] = 0;
        if ((unint64_t)v23 >= v10 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v43);
          if (!result) {
            return result;
          }
          unsigned int v41 = v43[0];
          uint64_t v42 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v41 = *v23;
          uint64_t v42 = (unsigned __int8 *)(v23 + 1);
          *((void *)this + 1) = v42;
        }
        *(unsigned char *)(a1 + 33) = v41 != 0;
        *(_DWORD *)(a1 + 40) |= 0x400u;
        if (v42 != (unsigned __int8 *)v10 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        char v15 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_45;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        char v16 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_53;
      case 5u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_61;
      case 6u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_69;
      case 7u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_77;
      case 8u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        uint64_t v20 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_85;
      case 9u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v21 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_93;
      case 0xAu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        uint64_t v22 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_101;
      case 0xBu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        uint64_t v23 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_109;
      default:
        int v9 = TagFallback & 7;
LABEL_36:
        if (v9 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_10007399C(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 40);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_21;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 24), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 25), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 26), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 27), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 28), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 29), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 30), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
LABEL_28:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned __int8 *)(v5 + 32), (BOOL)a2, a4);
    if ((*(_DWORD *)(v5 + 40) & 0x400) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned __int8 *)(v5 + 31), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x200) != 0) {
    goto LABEL_28;
  }
LABEL_11:
  if ((v6 & 0x400) != 0) {
LABEL_12:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned __int8 *)(v5 + 33), (BOOL)a2, a4);
LABEL_13:
  int v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  char v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

uint64_t sub_100073B2C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 40);
  if (v3)
  {
    uint64_t v9 = *(void *)(a1 + 16);
    *(unsigned char *)a2 = 9;
    *(void *)(a2 + 1) = v9;
    a2 += 9;
    int v3 = *(_DWORD *)(a1 + 40);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)a2 = 16;
  *(unsigned char *)(a2 + 1) = v10;
  a2 += 2;
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 4) == 0)
  {
LABEL_4:
    if ((v3 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_19:
  char v11 = *(unsigned char *)(a1 + 25);
  *(unsigned char *)a2 = 24;
  *(unsigned char *)(a2 + 1) = v11;
  a2 += 2;
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_20:
  char v12 = *(unsigned char *)(a1 + 26);
  *(unsigned char *)a2 = 32;
  *(unsigned char *)(a2 + 1) = v12;
  a2 += 2;
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x10) == 0)
  {
LABEL_6:
    if ((v3 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }
LABEL_21:
  char v13 = *(unsigned char *)(a1 + 27);
  *(unsigned char *)a2 = 40;
  *(unsigned char *)(a2 + 1) = v13;
  a2 += 2;
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x20) == 0)
  {
LABEL_7:
    if ((v3 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  char v14 = *(unsigned char *)(a1 + 28);
  *(unsigned char *)a2 = 48;
  *(unsigned char *)(a2 + 1) = v14;
  a2 += 2;
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x40) == 0)
  {
LABEL_8:
    if ((v3 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_23:
  char v15 = *(unsigned char *)(a1 + 29);
  *(unsigned char *)a2 = 56;
  *(unsigned char *)(a2 + 1) = v15;
  a2 += 2;
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x80) == 0)
  {
LABEL_9:
    if ((v3 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_25;
  }
LABEL_24:
  char v16 = *(unsigned char *)(a1 + 30);
  *(unsigned char *)a2 = 64;
  *(unsigned char *)(a2 + 1) = v16;
  a2 += 2;
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x100) == 0)
  {
LABEL_10:
    if ((v3 & 0x200) == 0) {
      goto LABEL_11;
    }
LABEL_26:
    char v18 = *(unsigned char *)(a1 + 32);
    *(unsigned char *)a2 = 80;
    *(unsigned char *)(a2 + 1) = v18;
    a2 += 2;
    if ((*(_DWORD *)(a1 + 40) & 0x400) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_25:
  char v17 = *(unsigned char *)(a1 + 31);
  *(unsigned char *)a2 = 72;
  *(unsigned char *)(a2 + 1) = v17;
  a2 += 2;
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x200) != 0) {
    goto LABEL_26;
  }
LABEL_11:
  if ((v3 & 0x400) != 0)
  {
LABEL_12:
    char v4 = *(unsigned char *)(a1 + 33);
    *(unsigned char *)a2 = 88;
    *(unsigned char *)(a2 + 1) = v4;
    a2 += 2;
  }
LABEL_13:
  char v7 = *(void **)(a1 + 8);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v5, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
}

uint64_t sub_100073CE4(_DWORD *a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = a1[10];
  if ((_BYTE)v3)
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9 | v3 & 2;
    if ((v3 & 4) != 0) {
      v4 += 2;
    }
    if ((v3 & 8) != 0) {
      v4 += 2;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 2;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 2;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 2;
    }
    if ((v3 & 0x80) != 0) {
      v4 += 2;
    }
  }
  else
  {
    unsigned int v4 = 0;
  }
  unsigned int v5 = v4 + 2;
  if ((v3 & 0x100) == 0) {
    unsigned int v5 = v4;
  }
  if ((v3 & 0x200) != 0) {
    v5 += 2;
  }
  if ((v3 & 0x400) != 0) {
    v5 += 2;
  }
  if ((v3 & 0xFF00) != 0) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = v4;
  }
  char v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
  uint64_t v8 = (void *)*((void *)a1 + 1);
  if (v8 && *v8 != v8[1]) {
    uint64_t v6 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v7, a2)
  }
       + v6;
  a1[9] = v6;
  return v6;
}

uint64_t sub_100073DC8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100072FCC((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100073E9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100073EB4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100073F40()
{
  return 1;
}

uint64_t sub_100073F48()
{
  uint64_t v0 = qword_1008A09B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006F9E0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A0868;
}

void sub_100073FDC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_100073FF0(void *a1)
{
  *a1 = off_100848C58;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  return a1;
}

void sub_100074038(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10007404C(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      int v5 = *(_DWORD *)(a2 + 16);
      a1[7] |= 1u;
      a1[4] = v5;
      int v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 20);
      a1[7] |= 2u;
      a1[5] = v6;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100074104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10007411C(uint64_t a1)
{
  *(void *)a1 = off_100848C58;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100074170(uint64_t a1)
{
  *(void *)a1 = off_100848C58;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1000741D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 24) = a2;
  return result;
}

void sub_1000741E0()
{
}

void sub_100074220()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100074244(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 28)) {
    *(void *)(a1 + 16) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 5) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100074264(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      char v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unsigned int v19 = 0;
      char v12 = (char *)*((void *)this + 1);
      unint64_t v10 = *((void *)this + 2);
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v19);
        if (!result) {
          return result;
        }
        unsigned int v13 = v19;
        char v14 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
      }
      else
      {
        unsigned int v13 = *v12;
        char v14 = v12 + 1;
        *((void *)this + 1) = v14;
      }
      a1[4] = v13;
      a1[7] |= 1u;
      if ((unint64_t)v14 < v10 && *v14 == 16)
      {
        char v11 = v14 + 1;
        *((void *)this + 1) = v11;
LABEL_24:
        unsigned int v18 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v18);
          if (!result) {
            return result;
          }
          unsigned int v15 = v18;
          char v16 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v15 = *v11;
          char v16 = (unsigned __int8 *)(v11 + 1);
          *((void *)this + 1) = v16;
        }
        a1[5] = v15;
        a1[7] |= 2u;
        if (v16 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        char v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v9 = TagFallback & 7;
    }
LABEL_16:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_10007441C(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 28);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 16), (int)a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if ((v6 & 2) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 20), (int)a2, a4);
  }
  int v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  char v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000744A8(wireless_diagnostics::google::protobuf::internal::WireFormat *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  if (*((unsigned char *)this + 28))
  {
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 4);
    *(unsigned char *)a2 = 8;
    if ((v4 & 0x80000000) != 0)
    {
      uint64_t v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v4, (unint64_t)a2 + 1, a3);
    }
    else
    {
      if (v4 <= 0x7F)
      {
        *((unsigned char *)a2 + 1) = (_BYTE)v4;
        a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
        goto LABEL_8;
      }
      uint64_t v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v4, (int)a2 + 1, a3);
    }
    a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)v5;
  }
LABEL_8:
  if ((*((unsigned char *)this + 28) & 2) != 0)
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 5);
    *(unsigned char *)a2 = 16;
    if ((v6 & 0x80000000) != 0)
    {
      uint64_t v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v6, (unint64_t)a2 + 1, a3);
    }
    else
    {
      if (v6 <= 0x7F)
      {
        *((unsigned char *)a2 + 1) = (_BYTE)v6;
        a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
        goto LABEL_15;
      }
      uint64_t v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, (int)a2 + 1, a3);
    }
    a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)v7;
  }
LABEL_15:
  unint64_t v10 = (void *)*((void *)this + 1);
  int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v8 = v10;
  if (!v10 || *v8 == v8[1]) {
    return a2;
  }

  return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v9, a2, a3);
}

uint64_t sub_100074590(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  char v3 = *(unsigned char *)(a1 + 28);
  if (v3)
  {
    if ((*(unsigned char *)(a1 + 28) & 1) == 0)
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 28) & 2) == 0) {
        goto LABEL_19;
      }
LABEL_13:
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
      if ((v6 & 0x80000000) != 0)
      {
        int v7 = 11;
      }
      else if (v6 >= 0x80)
      {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2)
           + 1;
      }
      else
      {
        int v7 = 2;
      }
      uint64_t v4 = (v7 + v4);
      goto LABEL_19;
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v5 & 0x80000000) != 0)
    {
      uint64_t v4 = 11;
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
      goto LABEL_13;
    }
    if (v5 < 0x80)
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
      goto LABEL_13;
    }
    uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)+ 1;
    if ((*(_DWORD *)(a1 + 28) & 2) != 0) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_19:
  uint64_t v8 = *(void **)(a1 + 8);
  if (v8 && *v8 != v8[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 24) = v4;
  return v4;
}

uint64_t sub_10007465C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10007404C(a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100074730(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100074748(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1000747D4()
{
  return 1;
}

uint64_t sub_1000747DC()
{
  uint64_t v0 = qword_1008A09B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006F9E0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A0878;
}

void sub_100074870(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100074884(uint64_t a1)
{
  *(void *)a1 = off_100848D08;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_DWORD *)(a1 + 48) = 0;
  return a1;
}

void sub_1000748D8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000748EC(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8), *(_DWORD *)(a2 + 40) + a1[10]);
  if (*(int *)(a2 + 40) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 32) + 8 * v4);
      int v6 = a1[11];
      uint64_t v7 = (int)a1[10];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[12])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8), v6 + 1);
          int v6 = a1[11];
        }
        a1[11] = v6 + 1;
        sub_100089644();
      }
      uint64_t v8 = *((void *)a1 + 4);
      a1[10] = v7 + 1;
      sub_10007404C(*(_DWORD **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 40));
  }
  LOBYTE(v9) = *(unsigned char *)(a2 + 68);
  if ((_BYTE)v9)
  {
    if (*(unsigned char *)(a2 + 68))
    {
      unsigned int v10 = *(_DWORD *)(a2 + 16);
      if (!sub_1000719F4(v10)) {
        sub_10040FBD0();
      }
      a1[17] |= 1u;
      a1[4] = v10;
      int v9 = *(_DWORD *)(a2 + 68);
    }
    if ((v9 & 2) != 0)
    {
      int v11 = *(_DWORD *)(a2 + 20);
      a1[17] |= 2u;
      a1[5] = v11;
      int v9 = *(_DWORD *)(a2 + 68);
      if ((v9 & 4) == 0)
      {
LABEL_17:
        if ((v9 & 8) == 0) {
          goto LABEL_18;
        }
        goto LABEL_23;
      }
    }
    else if ((v9 & 4) == 0)
    {
      goto LABEL_17;
    }
    int v12 = *(_DWORD *)(a2 + 24);
    a1[17] |= 4u;
    a1[6] = v12;
    int v9 = *(_DWORD *)(a2 + 68);
    if ((v9 & 8) == 0)
    {
LABEL_18:
      if ((v9 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_24;
    }
LABEL_23:
    int v13 = *(_DWORD *)(a2 + 28);
    a1[17] |= 8u;
    a1[7] = v13;
    int v9 = *(_DWORD *)(a2 + 68);
    if ((v9 & 0x10) == 0)
    {
LABEL_19:
      if ((v9 & 0x40) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
LABEL_25:
      unsigned int v15 = *(_DWORD *)(a2 + 60);
      if (!sub_100071A10(v15)) {
        sub_10040FBA4();
      }
      a1[17] |= 0x40u;
      a1[15] = v15;
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
LABEL_24:
    int v14 = *(_DWORD *)(a2 + 56);
    a1[17] |= 0x10u;
    a1[14] = v14;
    if ((*(_DWORD *)(a2 + 68) & 0x40) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_25;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100074B00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100074B18(uint64_t *a1)
{
  *a1 = (uint64_t)off_100848D08;
  sub_10006F938(a1 + 4);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100074B7C(uint64_t *a1)
{
  sub_100074B18(a1);

  operator delete();
}

uint64_t sub_100074BB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 64) = a2;
  return result;
}

void sub_100074BBC()
{
}

void sub_100074BFC()
{
}

uint64_t sub_100074C20(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 68))
  {
    *(void *)(a1 + 56) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
  }
  uint64_t result = sub_10006F8C8(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 8);
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)v3 + 15) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return result;
}

uint64_t sub_100074C84(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2);
  uint64_t v7 = a1 + 5;
  uint64_t v8 = a1 + 6;
  int v9 = a1 + 7;
  unsigned int v10 = a1 + 14;
  int v11 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8);
LABEL_2:
  while (1)
  {
    int v12 = (unsigned __int8 *)*((void *)this + 1);
    if ((unint64_t)v12 >= *((void *)this + 2) || (char)*v12 < 0) {
      break;
    }
    unint64_t TagFallback = *v12;
    *((_DWORD *)this + 8) = TagFallback;
    *((void *)this + 1) = v12 + 1;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        unsigned int v46 = 0;
        unsigned int v15 = (char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v46);
          if (!result) {
            return result;
          }
          signed int v16 = v46;
        }
        else
        {
          signed int v16 = *v15;
          *((void *)this + 1) = v15 + 1;
        }
        if (sub_1000719F4(v16))
        {
          a1[17] |= 1u;
          a1[4] = v16;
        }
        else
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 1, v16);
        }
        unsigned int v25 = (unsigned char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        if ((unint64_t)v25 < v17 && *v25 == 16)
        {
          unsigned int v18 = v25 + 1;
          *((void *)this + 1) = v18;
          goto LABEL_36;
        }
        continue;
      case 2u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        unsigned int v18 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
LABEL_36:
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          uint64_t v26 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v18;
          uint64_t v26 = v18 + 1;
          *((void *)this + 1) = v26;
        }
        a1[17] |= 2u;
        if ((unint64_t)v26 >= v17 || *v26 != 24) {
          continue;
        }
        unsigned int v19 = v26 + 1;
        *((void *)this + 1) = v19;
LABEL_44:
        if ((unint64_t)v19 >= v17 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          unsigned int v27 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v8 = *v19;
          unsigned int v27 = v19 + 1;
          *((void *)this + 1) = v27;
        }
        a1[17] |= 4u;
        if ((unint64_t)v27 >= v17 || *v27 != 32) {
          continue;
        }
        uint64_t v20 = v27 + 1;
        *((void *)this + 1) = v20;
LABEL_52:
        if ((unint64_t)v20 >= v17 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          uint64_t v28 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          *int v9 = *v20;
          uint64_t v28 = v20 + 1;
          *((void *)this + 1) = v28;
        }
        a1[17] |= 8u;
        if ((unint64_t)v28 >= v17 || *v28 != 40) {
          continue;
        }
        int v21 = v28 + 1;
        *((void *)this + 1) = v21;
LABEL_60:
        if ((unint64_t)v21 >= v17 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!result) {
            return result;
          }
          unsigned int v29 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v10 = *v21;
          unsigned int v29 = v21 + 1;
          *((void *)this + 1) = v29;
        }
        a1[17] |= 0x10u;
        if ((unint64_t)v29 >= v17 || *v29 != 50) {
          continue;
        }
        break;
      case 3u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        unsigned int v19 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_44;
      case 4u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v20 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_52;
      case 5u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v21 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_60;
      case 6u:
        int v14 = TagFallback & 7;
        if (v14 == 2) {
          goto LABEL_68;
        }
        goto LABEL_24;
      case 7u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v23 = (char *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        goto LABEL_86;
      default:
        int v14 = TagFallback & 7;
LABEL_24:
        if (v14 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
    do
    {
      *((void *)this + 1) = v29 + 1;
LABEL_68:
      int v30 = a1[11];
      uint64_t v31 = (int)a1[10];
      if ((int)v31 >= v30)
      {
        if (v30 == a1[12])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v11, v30 + 1);
          int v30 = a1[11];
        }
        a1[11] = v30 + 1;
        sub_100089644();
      }
      uint64_t v32 = *((void *)a1 + 4);
      a1[10] = v31 + 1;
      unsigned int v33 = *(_DWORD **)(v32 + 8 * v31);
      unsigned int v47 = 0;
      uint64_t v34 = (char *)*((void *)this + 1);
      if ((unint64_t)v34 >= *((void *)this + 2) || *v34 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v47))return 0; {
      }
        }
      else
      {
        unsigned int v47 = *v34;
        *((void *)this + 1) = v34 + 1;
      }
      int v35 = *((_DWORD *)this + 14);
      int v36 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v35 + 1;
      if (v35 >= v36) {
        return 0;
      }
      int v37 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v47);
      if (!sub_100074264(v33, this, v38, v39) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v37);
      int v40 = *((_DWORD *)this + 14);
      BOOL v41 = __OFSUB__(v40, 1);
      int v42 = v40 - 1;
      if (v42 < 0 == v41) {
        *((_DWORD *)this + 14) = v42;
      }
      unsigned int v29 = (unsigned char *)*((void *)this + 1);
      unint64_t v22 = *((void *)this + 2);
      if ((unint64_t)v29 >= v22) {
        goto LABEL_2;
      }
      int v43 = *v29;
    }
    while (v43 == 50);
    if (v43 != 56) {
      continue;
    }
    uint64_t v23 = v29 + 1;
    *((void *)this + 1) = v23;
LABEL_86:
    unsigned int v45 = 0;
    if ((unint64_t)v23 < v22 && (*v23 & 0x80000000) == 0)
    {
      signed int v44 = *v23;
      *((void *)this + 1) = v23 + 1;
      goto LABEL_91;
    }
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v45);
    if (!result) {
      return result;
    }
    signed int v44 = v45;
LABEL_91:
    if (sub_100071A10(v44))
    {
      a1[17] |= 0x40u;
      a1[15] = v44;
    }
    else
    {
      wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 7, v44);
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
  unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
  *((_DWORD *)this + 8) = TagFallback;
  if (TagFallback) {
    goto LABEL_7;
  }
  return 1;
}

uint64_t sub_1000751D4(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 68);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 16), (int)a2, a4);
    int v6 = *(_DWORD *)(v5 + 68);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 20), a2, a4);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 24), a2, a4);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 28), a2, a4);
  if ((*(_DWORD *)(v5 + 68) & 0x10) != 0) {
LABEL_6:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 56), a2, a4);
LABEL_7:
  if (*(int *)(v5 + 40) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(void *)(*(void *)(v5 + 32) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 40));
  }
  if ((*(unsigned char *)(v5 + 68) & 0x40) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 60), (int)a2, a4);
  }
  unsigned int v10 = *(void **)(v5 + 8);
  int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v8 = v10;
  if (v10 && *v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100075314(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  char v3 = a2;
  if (*((unsigned char *)this + 68))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 4);
    *(unsigned char *)a2 = 8;
    int v6 = (char *)a2 + 1;
    if ((v5 & 0x80000000) != 0)
    {
      uint64_t v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v5, (unint64_t)v6, a3);
    }
    else
    {
      if (v5 <= 0x7F)
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v5;
        char v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        goto LABEL_8;
      }
      uint64_t v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v5, v6, a3);
    }
    char v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)v7;
  }
LABEL_8:
  if ((*((unsigned char *)this + 68) & 2) != 0)
  {
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    *(unsigned char *)char v3 = 16;
    if (v8 > 0x7F)
    {
      char v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v8;
      char v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 68) & 4) != 0)
  {
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    *(unsigned char *)char v3 = 24;
    if (v9 > 0x7F)
    {
      char v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v9;
      char v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 68) & 8) != 0)
  {
    unsigned int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    *(unsigned char *)char v3 = 32;
    if (v10 > 0x7F)
    {
      char v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v10;
      char v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 68) & 0x10) != 0)
  {
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    *(unsigned char *)char v3 = 40;
    if (v11 > 0x7F)
    {
      char v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v11;
      char v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if (*((int *)this + 10) >= 1)
  {
    uint64_t v12 = 0;
    do
    {
      int v13 = *(unsigned int **)(*((void *)this + 4) + 8 * v12);
      *(unsigned char *)char v3 = 50;
      int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13[6];
      if (v14 > 0x7F)
      {
        unsigned int v15 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, (int)v3 + 1, a3);
      }
      else
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v14;
        unsigned int v15 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      }
      char v3 = sub_1000744A8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v13, v15, a3);
      ++v12;
    }
    while (v12 < *((int *)this + 10));
  }
  if ((*((unsigned char *)this + 68) & 0x40) != 0)
  {
    signed int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 15);
    *(unsigned char *)char v3 = 56;
    unint64_t v17 = (unint64_t)v3 + 1;
    if ((v16 & 0x80000000) != 0)
    {
      uint64_t v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v16, v17, a3);
    }
    else
    {
      if (v16 <= 0x7F)
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v16;
        char v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        goto LABEL_37;
      }
      uint64_t v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v16, v17, a3);
    }
    char v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)v18;
  }
LABEL_37:
  int v21 = (void *)*((void *)this + 1);
  uint64_t v20 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  unsigned int v19 = v21;
  if (!v21 || *v19 == v19[1]) {
    return v3;
  }

  return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v20, v3, a3);
}

uint64_t sub_100075530(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 68);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    goto LABEL_40;
  }
  if (*(unsigned char *)(a1 + 68))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v5 & 0x80000000) != 0)
    {
      int v4 = 11;
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
    }
    else if (v5 >= 0x80)
    {
      int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 68);
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
    }
  }
  else
  {
    int v4 = 0;
    if ((*(unsigned char *)(a1 + 68) & 2) == 0) {
      goto LABEL_17;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    int v7 = 2;
  }
  v4 += v7;
LABEL_17:
  if ((v3 & 4) != 0)
  {
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 68);
    }
    else
    {
      int v9 = 2;
    }
    v4 += v9;
    if ((v3 & 8) == 0)
    {
LABEL_19:
      if ((v3 & 0x10) == 0) {
        goto LABEL_20;
      }
      goto LABEL_30;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_19;
  }
  unsigned int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    int v11 = 2;
  }
  v4 += v11;
  if ((v3 & 0x10) == 0)
  {
LABEL_20:
    if ((v3 & 0x40) == 0) {
      goto LABEL_40;
    }
    goto LABEL_34;
  }
LABEL_30:
  uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    int v13 = 2;
  }
  v4 += v13;
  if ((v3 & 0x40) != 0)
  {
LABEL_34:
    int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
    if ((v14 & 0x80000000) != 0)
    {
      int v15 = 11;
    }
    else if (v14 >= 0x80)
    {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2)
          + 1;
    }
    else
    {
      int v15 = 2;
    }
    v4 += v15;
  }
LABEL_40:
  int v16 = *(_DWORD *)(a1 + 40);
  uint64_t v17 = (v16 + v4);
  if (v16 >= 1)
  {
    uint64_t v18 = 0;
    do
    {
      unsigned int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100074590(*(void *)(*(void *)(a1 + 32) + 8 * v18), a2);
      int v20 = (int)v19;
      if (v19 >= 0x80) {
        int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2);
      }
      else {
        int v21 = 1;
      }
      uint64_t v17 = (v20 + v17 + v21);
      ++v18;
    }
    while (v18 < *(int *)(a1 + 40));
  }
  unint64_t v22 = *(void **)(a1 + 8);
  if (v22 && *v22 != v22[1]) {
    uint64_t v17 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v17;
  }
  *(_DWORD *)(a1 + 64) = v17;
  return v17;
}

uint64_t sub_100075708(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000748EC(a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1000757DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000757F4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100075880()
{
  return 1;
}

uint64_t sub_100075888()
{
  uint64_t v0 = qword_1008A09B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006F9E0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A0888;
}

void sub_10007591C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_100075930(void *a1)
{
  *a1 = off_100848DB8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_10007597C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100075990(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      unsigned int v5 = *(_DWORD *)(a2 + 24);
      if (v5 >= 6) {
        sub_10040FBFC();
      }
      *(_DWORD *)(a1 + 36) |= 1u;
      *(_DWORD *)(a1 + 24) = v5;
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v6 = *(void *)(a2 + 16);
      *(_DWORD *)(a1 + 36) |= 2u;
      *(void *)(a1 + 16) = v6;
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 4) != 0)
    {
      int v7 = *(_DWORD *)(a2 + 28);
      *(_DWORD *)(a1 + 36) |= 4u;
      *(_DWORD *)(a1 + 28) = v7;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100075A70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100075A88(uint64_t a1)
{
  *(void *)a1 = off_100848DB8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100075ADC(uint64_t a1)
{
  *(void *)a1 = off_100848DB8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100075B44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_100075B4C()
{
}

void sub_100075B8C()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100075BB0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 36))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100075BD0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  int v7 = (unsigned int *)(a1 + 28);
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v8;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v8 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v10 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unsigned int v20 = 0;
        int v14 = (char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v20);
          if (!result) {
            return result;
          }
          unsigned int v15 = v20;
        }
        else
        {
          unsigned int v15 = *v14;
          *((void *)this + 1) = v14 + 1;
        }
        if (v15 > 5)
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 1, (int)v15);
        }
        else
        {
          *(_DWORD *)(a1 + 36) |= 1u;
          *(_DWORD *)(a1 + 24) = v15;
        }
        uint64_t v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 < *((void *)this + 2) && *v17 == 17)
        {
          *((void *)this + 1) = v17 + 1;
          goto LABEL_30;
        }
      }
      if (v10 != 2) {
        break;
      }
      int v11 = TagFallback & 7;
      if (v11 != 1) {
        goto LABEL_19;
      }
LABEL_30:
      unint64_t v21 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v21) & 1) == 0) {
        return 0;
      }
      *(void *)(a1 + 16) = v21;
      *(_DWORD *)(a1 + 36) |= 2u;
      uint64_t v18 = (unsigned char *)*((void *)this + 1);
      unint64_t v12 = *((void *)this + 2);
      if ((unint64_t)v18 < v12 && *v18 == 24)
      {
        int v13 = v18 + 1;
        *((void *)this + 1) = v13;
LABEL_34:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          unsigned int v19 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v13;
          unsigned int v19 = (unsigned __int8 *)(v13 + 1);
          *((void *)this + 1) = v19;
        }
        *(_DWORD *)(a1 + 36) |= 4u;
        if (v19 == (unsigned __int8 *)v12
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v10 == 3)
    {
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_34;
      }
    }
    else
    {
      int v11 = TagFallback & 7;
    }
LABEL_19:
    if (v11 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) != 0);
  return 0;
}

uint64_t sub_100075E00(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 36);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_12:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 16), a3);
    if ((*(_DWORD *)(v5 + 36) & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 24), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 2) != 0) {
    goto LABEL_12;
  }
LABEL_3:
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 28), a2, a4);
LABEL_5:
  int v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

unsigned char *sub_100075EB0(wireless_diagnostics::google::protobuf::internal::WireFormat *this, unsigned char *a2, unsigned __int8 *a3)
{
  if (*((unsigned char *)this + 36))
  {
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 6);
    *a2 = 8;
    if ((v4 & 0x80000000) != 0)
    {
      uint64_t v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v4, (unint64_t)(a2 + 1), a3);
    }
    else
    {
      if (v4 <= 0x7F)
      {
        a2[1] = (_BYTE)v4;
        a2 += 2;
        goto LABEL_8;
      }
      uint64_t v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v4, (int)a2 + 1, a3);
    }
    a2 = (unsigned char *)v5;
  }
LABEL_8:
  int v6 = *((_DWORD *)this + 9);
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *((void *)this + 2);
    *a2 = 17;
    *(void *)(a2 + 1) = v7;
    a2 += 9;
    int v6 = *((_DWORD *)this + 9);
  }
  if ((v6 & 4) != 0)
  {
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    *a2 = 24;
    if (v8 > 0x7F)
    {
      a2 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)a2 + 1, a3);
    }
    else
    {
      a2[1] = (_BYTE)v8;
      a2 += 2;
    }
  }
  int v11 = (void *)*((void *)this + 1);
  unsigned int v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v9 = v11;
  if (!v11 || *v9 == v9[1]) {
    return a2;
  }

  return (unsigned char *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v10, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_100075FDC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 36))
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
      if ((v6 & 0x80000000) != 0)
      {
        unsigned int v4 = 11;
      }
      else if (v6 >= 0x80)
      {
        unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2)
           + 1;
        int v3 = *(_DWORD *)(a1 + 36);
      }
      else
      {
        unsigned int v4 = 2;
      }
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 4) != 0)
    {
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
      if (v7 >= 0x80) {
        int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2)
      }
           + 1;
      else {
        int v8 = 2;
      }
      uint64_t v5 = (v8 + v5);
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  int v9 = *(void **)(a1 + 8);
  if (v9 && *v9 != v9[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 32) = v5;
  return v5;
}

uint64_t sub_10007609C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100075990((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100076170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100076188(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100076214()
{
  return 1;
}

uint64_t sub_10007621C()
{
  uint64_t v0 = qword_1008A09B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006F9E0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A0898;
}

void sub_1000762B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000762C4(uint64_t a1)
{
  *(void *)a1 = off_100848E68;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return a1;
}

void sub_100076318(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10007632C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  int v4 = *(_DWORD *)(a2 + 40);
  if (v4)
  {
    sub_10006F57C(a1 + 32, *(_DWORD *)(a1 + 40) + v4);
    memcpy((void *)(*(void *)(a1 + 32) + 4 * *(int *)(a1 + 40)), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 40));
    *(_DWORD *)(a1 + 40) += *(_DWORD *)(a2 + 40);
  }
  int v5 = *(_DWORD *)(a2 + 56);
  if (v5)
  {
    sub_10006F57C(a1 + 48, *(_DWORD *)(a1 + 56) + v5);
    memcpy((void *)(*(void *)(a1 + 48) + 4 * *(int *)(a1 + 56)), *(const void **)(a2 + 48), 4 * *(int *)(a2 + 56));
    *(_DWORD *)(a1 + 56) += *(_DWORD *)(a2 + 56);
  }
  int v6 = *(_DWORD *)(a2 + 80);
  if (v6)
  {
    sub_10006F57C(a1 + 72, *(_DWORD *)(a1 + 80) + v6);
    memcpy((void *)(*(void *)(a1 + 72) + 4 * *(int *)(a1 + 80)), *(const void **)(a2 + 72), 4 * *(int *)(a2 + 80));
    *(_DWORD *)(a1 + 80) += *(_DWORD *)(a2 + 80);
  }
  int v7 = *(_DWORD *)(a2 + 96);
  if (v7)
  {
    sub_10006F57C(a1 + 88, *(_DWORD *)(a1 + 96) + v7);
    memcpy((void *)(*(void *)(a1 + 88) + 4 * *(int *)(a1 + 96)), *(const void **)(a2 + 88), 4 * *(int *)(a2 + 96));
    *(_DWORD *)(a1 + 96) += *(_DWORD *)(a2 + 96);
  }
  int v8 = *(_DWORD *)(a2 + 108);
  if (!(_BYTE)v8) {
    goto LABEL_20;
  }
  if (v8)
  {
    unsigned int v9 = *(_DWORD *)(a2 + 16);
    if (!sub_1000719F4(v9)) {
      sub_10040FC54();
    }
    *(_DWORD *)(a1 + 108) |= 1u;
    *(_DWORD *)(a1 + 16) = v9;
    int v8 = *(_DWORD *)(a2 + 108);
  }
  if ((v8 & 2) == 0)
  {
    if ((v8 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_25:
    int v14 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 108) |= 4u;
    *(_DWORD *)(a1 + 24) = v14;
    int v8 = *(_DWORD *)(a2 + 108);
    if ((v8 & 8) == 0)
    {
LABEL_18:
      if ((v8 & 0x10) == 0) {
        goto LABEL_20;
      }
      goto LABEL_19;
    }
    goto LABEL_26;
  }
  int v13 = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 108) |= 2u;
  *(_DWORD *)(a1 + 20) = v13;
  int v8 = *(_DWORD *)(a2 + 108);
  if ((v8 & 4) != 0) {
    goto LABEL_25;
  }
LABEL_17:
  if ((v8 & 8) == 0) {
    goto LABEL_18;
  }
LABEL_26:
  int v15 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 108) |= 8u;
  *(_DWORD *)(a1 + 28) = v15;
  int v8 = *(_DWORD *)(a2 + 108);
  if ((v8 & 0x10) != 0)
  {
LABEL_19:
    int v10 = *(_DWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 108) |= 0x10u;
    *(_DWORD *)(a1 + 64) = v10;
    int v8 = *(_DWORD *)(a2 + 108);
  }
LABEL_20:
  if ((v8 & 0x200) != 0)
  {
    unsigned int v11 = *(_DWORD *)(a2 + 68);
    if (!sub_100071A10(v11)) {
      sub_10040FC28();
    }
    *(_DWORD *)(a1 + 108) |= 0x200u;
    *(_DWORD *)(a1 + 68) = v11;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000765A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000765B8(void *a1)
{
  *a1 = off_100848E68;
  if (a1[11]) {
    operator delete[]();
  }
  if (a1[9]) {
    operator delete[]();
  }
  if (a1[6]) {
    operator delete[]();
  }
  if (a1[4]) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100076684(void *a1)
{
  sub_1000765B8(a1);

  operator delete();
}

uint64_t sub_1000766BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 104) = a2;
  return result;
}

void sub_1000766C4()
{
}

void sub_100076704()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100076728(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 108);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(a1 + 64) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
  }
  if ((v1 & 0x1FE00) != 0) {
    *(_DWORD *)(a1 + 68) = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 8) = 0;
  *((_DWORD *)result + 12) = 0;
  *((_DWORD *)result + 18) = 0;
  *((_DWORD *)result + 22) = 0;
  *((_DWORD *)result + 25) = 0;
  if (v3) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10007676C(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = a1 + 88;
  uint64_t v7 = a1 + 72;
  uint64_t v8 = a1 + 48;
  unsigned int v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  int v76 = (unsigned int *)(a1 + 20);
  uint64_t v77 = (unsigned int *)(a1 + 24);
  uint64_t v78 = (unsigned int *)(a1 + 28);
  uint64_t v79 = (unsigned int *)(a1 + 64);
  uint64_t v80 = a1 + 32;
LABEL_2:
  while (2)
  {
    int v10 = (char *)*((void *)this + 1);
    if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        v81[0] = 0;
        int v13 = (char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v81);
          if (!result) {
            return result;
          }
          signed int v14 = v81[0];
        }
        else
        {
          signed int v14 = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        if (sub_1000719F4(v14))
        {
          *(_DWORD *)(a1 + 108) |= 1u;
          *(_DWORD *)(a1 + 16) = v14;
        }
        else
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v9, 1, v14);
        }
        unsigned int v25 = (unsigned char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v25 < v15 && *v25 == 16)
        {
          int v16 = v25 + 1;
          *((void *)this + 1) = v16;
          goto LABEL_54;
        }
        continue;
      case 2u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
LABEL_54:
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76);
          if (!result) {
            return result;
          }
          uint64_t v26 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v76 = *v16;
          uint64_t v26 = v16 + 1;
          *((void *)this + 1) = v26;
        }
        *(_DWORD *)(a1 + 108) |= 2u;
        if ((unint64_t)v26 >= v15 || *v26 != 24) {
          continue;
        }
        uint64_t v17 = v26 + 1;
        *((void *)this + 1) = v17;
LABEL_62:
        if ((unint64_t)v17 >= v15 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v77);
          if (!result) {
            return result;
          }
          unsigned int v27 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v77 = *v17;
          unsigned int v27 = v17 + 1;
          *((void *)this + 1) = v27;
        }
        *(_DWORD *)(a1 + 108) |= 4u;
        if ((unint64_t)v27 >= v15 || *v27 != 32) {
          continue;
        }
        uint64_t v18 = v27 + 1;
        *((void *)this + 1) = v18;
LABEL_70:
        if ((unint64_t)v18 >= v15 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v78);
          if (!result) {
            return result;
          }
          uint64_t v28 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v78 = *v18;
          uint64_t v28 = v18 + 1;
          *((void *)this + 1) = v28;
        }
        *(_DWORD *)(a1 + 108) |= 8u;
        if ((unint64_t)v28 >= v15 || *v28 != 40) {
          continue;
        }
        unsigned int v19 = v28 + 1;
        *((void *)this + 1) = v19;
LABEL_78:
        if ((unint64_t)v19 >= v15 || (char)*v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v79);
          if (!result) {
            return result;
          }
          unsigned int v29 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v79 = *v19;
          unsigned int v29 = v19 + 1;
          *((void *)this + 1) = v29;
        }
        *(_DWORD *)(a1 + 108) |= 0x10u;
        if ((unint64_t)v29 >= v15) {
          continue;
        }
        int v30 = *v29;
        goto LABEL_106;
      case 3u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        uint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_62;
      case 4u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        uint64_t v18 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_70;
      case 5u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        unsigned int v19 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_78;
      case 6u:
        int v12 = TagFallback & 7;
        if (v12 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            unsigned int v20 = (char *)*((void *)this + 1);
            unint64_t v15 = *((void *)this + 2);
            goto LABEL_85;
          }
          goto LABEL_34;
        }
        uint64_t result = sub_10006C99C(this, v80);
        if (!result) {
          return result;
        }
        while (1)
        {
          unsigned int v29 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
          if ((unint64_t)v29 >= v15) {
            goto LABEL_2;
          }
          int v30 = *v29;
          if (v30 == 56) {
            goto LABEL_130;
          }
LABEL_106:
          if (v30 != 48) {
            goto LABEL_2;
          }
          unsigned int v20 = (char *)(v29 + 1);
          *((void *)this + 1) = v20;
LABEL_85:
          v81[0] = 0;
          if ((unint64_t)v20 >= v15 || *v20 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v81);
            if (!result) {
              return result;
            }
            unsigned int v31 = v81[0];
          }
          else
          {
            unsigned int v31 = *v20;
            *((void *)this + 1) = v20 + 1;
          }
          int v32 = *(_DWORD *)(a1 + 40);
          if (v32 == *(_DWORD *)(a1 + 44))
          {
            sub_10006F57C(v80, v32 + 1);
            int v32 = *(_DWORD *)(a1 + 40);
          }
          uint64_t v33 = *(void *)(a1 + 32);
          *(_DWORD *)(a1 + 40) = v32 + 1;
          *(_DWORD *)(v33 + 4 * v32) = v31;
          int v34 = *(_DWORD *)(a1 + 44) - *(_DWORD *)(a1 + 40);
          if (v34 >= 1)
          {
            int v35 = v34 + 1;
            do
            {
              int v36 = (unsigned char *)*((void *)this + 1);
              unint64_t v37 = *((void *)this + 2);
              if ((unint64_t)v36 >= v37 || *v36 != 48) {
                break;
              }
              *((void *)this + 1) = v36 + 1;
              v81[0] = 0;
              if ((unint64_t)(v36 + 1) >= v37 || (char)v36[1] < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v81);
                if (!result) {
                  return result;
                }
                unsigned int v38 = v81[0];
              }
              else
              {
                unsigned int v38 = v36[1];
                *((void *)this + 1) = v36 + 2;
              }
              int v39 = *(_DWORD *)(a1 + 40);
              if (v39 >= *(_DWORD *)(a1 + 44))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v81);
                int v39 = *(_DWORD *)(a1 + 40);
              }
              uint64_t v40 = *(void *)(a1 + 32);
              *(_DWORD *)(a1 + 40) = v39 + 1;
              *(_DWORD *)(v40 + 4 * v39) = v38;
              --v35;
            }
            while (v35 > 1);
          }
        }
      case 7u:
        int v12 = TagFallback & 7;
        if (v12 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            unint64_t v21 = (char *)*((void *)this + 1);
            unint64_t v15 = *((void *)this + 2);
            goto LABEL_108;
          }
          goto LABEL_34;
        }
        uint64_t result = sub_10006C99C(this, v8);
        if (!result) {
          return result;
        }
        while (1)
        {
          unsigned int v29 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
          if ((unint64_t)v29 >= v15) {
            goto LABEL_2;
          }
          int v51 = *v29;
          if (v51 == 64) {
            goto LABEL_153;
          }
          if (v51 != 56) {
            goto LABEL_2;
          }
LABEL_130:
          unint64_t v21 = (char *)(v29 + 1);
          *((void *)this + 1) = v21;
LABEL_108:
          v81[0] = 0;
          if ((unint64_t)v21 >= v15 || *v21 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v81);
            if (!result) {
              return result;
            }
            unsigned int v41 = v81[0];
          }
          else
          {
            unsigned int v41 = *v21;
            *((void *)this + 1) = v21 + 1;
          }
          int v42 = *(_DWORD *)(a1 + 56);
          if (v42 == *(_DWORD *)(a1 + 60))
          {
            sub_10006F57C(v8, v42 + 1);
            int v42 = *(_DWORD *)(a1 + 56);
          }
          uint64_t v43 = *(void *)(a1 + 48);
          *(_DWORD *)(a1 + 56) = v42 + 1;
          *(_DWORD *)(v43 + 4 * v42) = v41;
          int v44 = *(_DWORD *)(a1 + 60) - *(_DWORD *)(a1 + 56);
          if (v44 >= 1)
          {
            int v45 = v44 + 1;
            do
            {
              unsigned int v46 = (unsigned char *)*((void *)this + 1);
              unint64_t v47 = *((void *)this + 2);
              if ((unint64_t)v46 >= v47 || *v46 != 56) {
                break;
              }
              *((void *)this + 1) = v46 + 1;
              v81[0] = 0;
              if ((unint64_t)(v46 + 1) >= v47 || (char)v46[1] < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v81);
                if (!result) {
                  return result;
                }
                unsigned int v48 = v81[0];
              }
              else
              {
                unsigned int v48 = v46[1];
                *((void *)this + 1) = v46 + 2;
              }
              int v49 = *(_DWORD *)(a1 + 56);
              if (v49 >= *(_DWORD *)(a1 + 60))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v81);
                int v49 = *(_DWORD *)(a1 + 56);
              }
              uint64_t v50 = *(void *)(a1 + 48);
              *(_DWORD *)(a1 + 56) = v49 + 1;
              *(_DWORD *)(v50 + 4 * v49) = v48;
              --v45;
            }
            while (v45 > 1);
          }
        }
      case 8u:
        int v12 = TagFallback & 7;
        if (v12 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            unint64_t v22 = (char *)*((void *)this + 1);
            unint64_t v15 = *((void *)this + 2);
            goto LABEL_131;
          }
          goto LABEL_34;
        }
        uint64_t result = sub_10006C99C(this, v7);
        if (!result) {
          return result;
        }
        while (1)
        {
          unsigned int v29 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
          if ((unint64_t)v29 >= v15) {
            goto LABEL_2;
          }
          int v62 = *v29;
          if (v62 == 72) {
            goto LABEL_176;
          }
          if (v62 != 64) {
            goto LABEL_2;
          }
LABEL_153:
          unint64_t v22 = (char *)(v29 + 1);
          *((void *)this + 1) = v22;
LABEL_131:
          v81[0] = 0;
          if ((unint64_t)v22 >= v15 || *v22 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v81);
            if (!result) {
              return result;
            }
            unsigned int v52 = v81[0];
          }
          else
          {
            unsigned int v52 = *v22;
            *((void *)this + 1) = v22 + 1;
          }
          int v53 = *(_DWORD *)(a1 + 80);
          if (v53 == *(_DWORD *)(a1 + 84))
          {
            sub_10006F57C(v7, v53 + 1);
            int v53 = *(_DWORD *)(a1 + 80);
          }
          uint64_t v54 = *(void *)(a1 + 72);
          *(_DWORD *)(a1 + 80) = v53 + 1;
          *(_DWORD *)(v54 + 4 * v53) = v52;
          int v55 = *(_DWORD *)(a1 + 84) - *(_DWORD *)(a1 + 80);
          if (v55 >= 1)
          {
            int v56 = v55 + 1;
            do
            {
              uint64_t v57 = (unsigned char *)*((void *)this + 1);
              unint64_t v58 = *((void *)this + 2);
              if ((unint64_t)v57 >= v58 || *v57 != 64) {
                break;
              }
              *((void *)this + 1) = v57 + 1;
              v81[0] = 0;
              if ((unint64_t)(v57 + 1) >= v58 || (char)v57[1] < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v81);
                if (!result) {
                  return result;
                }
                unsigned int v59 = v81[0];
              }
              else
              {
                unsigned int v59 = v57[1];
                *((void *)this + 1) = v57 + 2;
              }
              int v60 = *(_DWORD *)(a1 + 80);
              if (v60 >= *(_DWORD *)(a1 + 84))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v81);
                int v60 = *(_DWORD *)(a1 + 80);
              }
              uint64_t v61 = *(void *)(a1 + 72);
              *(_DWORD *)(a1 + 80) = v60 + 1;
              *(_DWORD *)(v61 + 4 * v60) = v59;
              --v56;
            }
            while (v56 > 1);
          }
        }
      case 9u:
        int v12 = TagFallback & 7;
        if (v12 == 2)
        {
          uint64_t result = sub_10006C99C(this, v6);
          if (!result) {
            return result;
          }
          while (1)
          {
            unsigned int v29 = (unsigned __int8 *)*((void *)this + 1);
            unint64_t v15 = *((void *)this + 2);
            if ((unint64_t)v29 >= v15) {
              goto LABEL_2;
            }
            int v73 = *v29;
            if (v73 == 80)
            {
              uint64_t v24 = (char *)(v29 + 1);
              *((void *)this + 1) = v24;
LABEL_178:
              v81[0] = 0;
              if ((unint64_t)v24 >= v15 || *v24 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v81);
                if (!result) {
                  return result;
                }
                signed int v74 = v81[0];
              }
              else
              {
                signed int v74 = *v24;
                *((void *)this + 1) = v24 + 1;
              }
              if (sub_100071A10(v74))
              {
                *(_DWORD *)(a1 + 108) |= 0x200u;
                *(_DWORD *)(a1 + 68) = v74;
              }
              else
              {
                wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v9, 10, v74);
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
              goto LABEL_2;
            }
            if (v73 != 72) {
              goto LABEL_2;
            }
LABEL_176:
            uint64_t v23 = (char *)(v29 + 1);
            *((void *)this + 1) = v23;
LABEL_154:
            v81[0] = 0;
            if ((unint64_t)v23 >= v15 || *v23 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v81);
              if (!result) {
                return result;
              }
              unsigned int v63 = v81[0];
            }
            else
            {
              unsigned int v63 = *v23;
              *((void *)this + 1) = v23 + 1;
            }
            int v64 = *(_DWORD *)(a1 + 96);
            if (v64 == *(_DWORD *)(a1 + 100))
            {
              sub_10006F57C(v6, v64 + 1);
              int v64 = *(_DWORD *)(a1 + 96);
            }
            uint64_t v65 = *(void *)(a1 + 88);
            *(_DWORD *)(a1 + 96) = v64 + 1;
            *(_DWORD *)(v65 + 4 * v64) = v63;
            int v66 = *(_DWORD *)(a1 + 100) - *(_DWORD *)(a1 + 96);
            if (v66 >= 1)
            {
              int v67 = v66 + 1;
              do
              {
                int v68 = (unsigned char *)*((void *)this + 1);
                unint64_t v69 = *((void *)this + 2);
                if ((unint64_t)v68 >= v69 || *v68 != 72) {
                  break;
                }
                *((void *)this + 1) = v68 + 1;
                v81[0] = 0;
                if ((unint64_t)(v68 + 1) >= v69 || (char)v68[1] < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v81);
                  if (!result) {
                    return result;
                  }
                  unsigned int v70 = v81[0];
                }
                else
                {
                  unsigned int v70 = v68[1];
                  *((void *)this + 1) = v68 + 2;
                }
                int v71 = *(_DWORD *)(a1 + 96);
                if (v71 >= *(_DWORD *)(a1 + 100))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v81);
                  int v71 = *(_DWORD *)(a1 + 96);
                }
                uint64_t v72 = *(void *)(a1 + 88);
                *(_DWORD *)(a1 + 96) = v71 + 1;
                *(_DWORD *)(v72 + 4 * v71) = v70;
                --v67;
              }
              while (v67 > 1);
            }
          }
        }
        if ((TagFallback & 7) == 0)
        {
          uint64_t v23 = (char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
          goto LABEL_154;
        }
LABEL_34:
        if (v12 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v9, a4) & 1) == 0)return 0; {
          continue;
          }
        }
        return 1;
      case 0xAu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        uint64_t v24 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_178;
      default:
        int v12 = TagFallback & 7;
        goto LABEL_34;
    }
  }
}

void sub_1000771C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10007721C(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 108);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 16), (int)a2, a4);
    int v6 = *(_DWORD *)(v5 + 108);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_29;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 20), a2, a4);
  int v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 24), a2, a4);
  int v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 28), a2, a4);
  if ((*(_DWORD *)(v5 + 108) & 0x10) != 0) {
LABEL_6:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 64), a2, a4);
LABEL_7:
  if (*(int *)(v5 + 40) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(*(void *)(v5 + 32) + 4 * v7++), (int)a2, a4);
    while (v7 < *(int *)(v5 + 40));
  }
  if (*(int *)(v5 + 56) >= 1)
  {
    uint64_t v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(*(void *)(v5 + 48) + 4 * v8++), (int)a2, a4);
    while (v8 < *(int *)(v5 + 56));
  }
  if (*(int *)(v5 + 80) >= 1)
  {
    uint64_t v9 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(*(void *)(v5 + 72) + 4 * v9++), (int)a2, a4);
    while (v9 < *(int *)(v5 + 80));
  }
  if (*(int *)(v5 + 96) >= 1)
  {
    uint64_t v10 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(*(void *)(v5 + 88) + 4 * v10++), (int)a2, a4);
    while (v10 < *(int *)(v5 + 96));
  }
  if ((*(unsigned char *)(v5 + 109) & 2) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_DWORD *)(v5 + 68), (int)a2, a4);
  }
  int v13 = *(void **)(v5 + 8);
  int v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v11 = v13;
  if (v13 && *v11 != v11[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v12, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000773F8(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  if (*((unsigned char *)this + 108))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 4);
    *(unsigned char *)a2 = 8;
    int v6 = (char *)a2 + 1;
    if ((v5 & 0x80000000) != 0)
    {
      uint64_t v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v5, (unint64_t)v6, a3);
    }
    else
    {
      if (v5 <= 0x7F)
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v5;
        uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        goto LABEL_8;
      }
      uint64_t v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v5, v6, a3);
    }
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v7;
  }
LABEL_8:
  if ((*((unsigned char *)this + 108) & 2) != 0)
  {
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    *(unsigned char *)uint64_t v3 = 16;
    if (v8 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v8;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 108) & 4) != 0)
  {
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    *(unsigned char *)uint64_t v3 = 24;
    if (v9 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v9;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 108) & 8) != 0)
  {
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    *(unsigned char *)uint64_t v3 = 32;
    if (v10 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v10;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 108) & 0x10) != 0)
  {
    unsigned int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    *(unsigned char *)uint64_t v3 = 40;
    if (v11 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v11;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if (*((int *)this + 10) >= 1)
  {
    uint64_t v12 = 0;
    while (1)
    {
      int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((void *)this + 4) + 4 * v12);
      *(unsigned char *)uint64_t v3 = 48;
      unint64_t v14 = (unint64_t)v3 + 1;
      if ((v13 & 0x80000000) != 0) {
        break;
      }
      if (v13 > 0x7F)
      {
        uint64_t v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, v14, a3);
        goto LABEL_31;
      }
      *((unsigned char *)v3 + 1) = (_BYTE)v13;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
LABEL_32:
      if (++v12 >= *((int *)this + 10)) {
        goto LABEL_33;
      }
    }
    uint64_t v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v13, v14, a3);
LABEL_31:
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v15;
    goto LABEL_32;
  }
LABEL_33:
  if (*((int *)this + 14) >= 1)
  {
    uint64_t v16 = 0;
    while (1)
    {
      uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((void *)this + 6) + 4 * v16);
      *(unsigned char *)uint64_t v3 = 56;
      unint64_t v18 = (unint64_t)v3 + 1;
      if ((v17 & 0x80000000) != 0) {
        break;
      }
      if (v17 > 0x7F)
      {
        uint64_t v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, v18, a3);
        goto LABEL_40;
      }
      *((unsigned char *)v3 + 1) = (_BYTE)v17;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
LABEL_41:
      if (++v16 >= *((int *)this + 14)) {
        goto LABEL_42;
      }
    }
    uint64_t v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v17, v18, a3);
LABEL_40:
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v19;
    goto LABEL_41;
  }
LABEL_42:
  if (*((int *)this + 20) >= 1)
  {
    uint64_t v20 = 0;
    while (1)
    {
      unint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((void *)this + 9) + 4 * v20);
      *(unsigned char *)uint64_t v3 = 64;
      unint64_t v22 = (unint64_t)v3 + 1;
      if ((v21 & 0x80000000) != 0) {
        break;
      }
      if (v21 > 0x7F)
      {
        uint64_t v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, v22, a3);
        goto LABEL_49;
      }
      *((unsigned char *)v3 + 1) = (_BYTE)v21;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
LABEL_50:
      if (++v20 >= *((int *)this + 20)) {
        goto LABEL_51;
      }
    }
    uint64_t v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v21, v22, a3);
LABEL_49:
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v23;
    goto LABEL_50;
  }
LABEL_51:
  if (*((int *)this + 24) >= 1)
  {
    uint64_t v24 = 0;
    while (1)
    {
      unsigned int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((void *)this + 11) + 4 * v24);
      *(unsigned char *)uint64_t v3 = 72;
      unint64_t v26 = (unint64_t)v3 + 1;
      if ((v25 & 0x80000000) != 0) {
        break;
      }
      if (v25 > 0x7F)
      {
        uint64_t v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v25, v26, a3);
        goto LABEL_58;
      }
      *((unsigned char *)v3 + 1) = (_BYTE)v25;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
LABEL_59:
      if (++v24 >= *((int *)this + 24)) {
        goto LABEL_60;
      }
    }
    uint64_t v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v25, v26, a3);
LABEL_58:
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v27;
    goto LABEL_59;
  }
LABEL_60:
  if ((*((unsigned char *)this + 109) & 2) != 0)
  {
    uint64_t v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 17);
    *(unsigned char *)uint64_t v3 = 80;
    unint64_t v29 = (unint64_t)v3 + 1;
    if ((v28 & 0x80000000) != 0)
    {
      uint64_t v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v28, v29, a3);
    }
    else
    {
      if (v28 <= 0x7F)
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v28;
        uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        goto LABEL_67;
      }
      uint64_t v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v28, v29, a3);
    }
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v30;
  }
LABEL_67:
  uint64_t v33 = (void *)*((void *)this + 1);
  int v32 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  unsigned int v31 = v33;
  if (!v33 || *v31 == v31[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v32, v3, a3);
}

uint64_t sub_100077724(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 108);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    if ((v3 & 0x200) == 0) {
      goto LABEL_40;
    }
    goto LABEL_34;
  }
  if ((v3 & 1) == 0)
  {
    int v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_17;
    }
    goto LABEL_13;
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
  if ((v5 & 0x80000000) != 0)
  {
    int v6 = 10;
  }
  else if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    int v3 = *(_DWORD *)(a1 + 108);
  }
  else
  {
    int v6 = 1;
  }
  int v4 = v6 + 1;
  if ((v3 & 2) != 0)
  {
LABEL_13:
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      int v3 = *(_DWORD *)(a1 + 108);
    }
    else
    {
      int v8 = 1;
    }
    v4 += v8 + 1;
  }
LABEL_17:
  if ((v3 & 4) != 0)
  {
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
      int v3 = *(_DWORD *)(a1 + 108);
    }
    else
    {
      int v10 = 1;
    }
    v4 += v10 + 1;
    if ((v3 & 8) == 0)
    {
LABEL_19:
      if ((v3 & 0x10) == 0) {
        goto LABEL_20;
      }
      goto LABEL_30;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_19;
  }
  unsigned int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    int v3 = *(_DWORD *)(a1 + 108);
  }
  else
  {
    int v12 = 1;
  }
  v4 += v12 + 1;
  if ((v3 & 0x10) == 0)
  {
LABEL_20:
    if ((v3 & 0x200) == 0) {
      goto LABEL_40;
    }
    goto LABEL_34;
  }
LABEL_30:
  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
    int v3 = *(_DWORD *)(a1 + 108);
  }
  else
  {
    int v14 = 1;
  }
  v4 += v14 + 1;
  if ((v3 & 0x200) != 0)
  {
LABEL_34:
    uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 68);
    if ((v15 & 0x80000000) != 0)
    {
      int v16 = 11;
    }
    else if (v15 >= 0x80)
    {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2)
          + 1;
    }
    else
    {
      int v16 = 2;
    }
    v4 += v16;
  }
LABEL_40:
  int v17 = *(_DWORD *)(a1 + 40);
  if (v17 < 1)
  {
    int v19 = 0;
  }
  else
  {
    uint64_t v18 = 0;
    int v19 = 0;
    do
    {
      uint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 32)
                                                                                             + 4 * v18);
      if ((v20 & 0x80000000) != 0)
      {
        int v21 = 10;
      }
      else if (v20 >= 0x80)
      {
        int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, a2);
        int v17 = *(_DWORD *)(a1 + 40);
      }
      else
      {
        int v21 = 1;
      }
      v19 += v21;
      ++v18;
    }
    while (v18 < v17);
  }
  int v22 = *(_DWORD *)(a1 + 56);
  if (v22 < 1)
  {
    int v24 = 0;
  }
  else
  {
    uint64_t v23 = 0;
    int v24 = 0;
    do
    {
      unsigned int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 48)
                                                                                             + 4 * v23);
      if ((v25 & 0x80000000) != 0)
      {
        int v26 = 10;
      }
      else if (v25 >= 0x80)
      {
        int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2);
        int v22 = *(_DWORD *)(a1 + 56);
      }
      else
      {
        int v26 = 1;
      }
      v24 += v26;
      ++v23;
    }
    while (v23 < v22);
  }
  int v27 = *(_DWORD *)(a1 + 80);
  if (v27 < 1)
  {
    int v29 = 0;
  }
  else
  {
    uint64_t v28 = 0;
    int v29 = 0;
    do
    {
      uint64_t v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 72)
                                                                                             + 4 * v28);
      if ((v30 & 0x80000000) != 0)
      {
        int v31 = 10;
      }
      else if (v30 >= 0x80)
      {
        int v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30, a2);
        int v27 = *(_DWORD *)(a1 + 80);
      }
      else
      {
        int v31 = 1;
      }
      v29 += v31;
      ++v28;
    }
    while (v28 < v27);
  }
  int v32 = *(_DWORD *)(a1 + 96);
  if (v32 < 1)
  {
    int v34 = 0;
  }
  else
  {
    uint64_t v33 = 0;
    int v34 = 0;
    do
    {
      int v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 88)
                                                                                             + 4 * v33);
      if ((v35 & 0x80000000) != 0)
      {
        int v36 = 10;
      }
      else if (v35 >= 0x80)
      {
        int v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v35, a2);
        int v32 = *(_DWORD *)(a1 + 96);
      }
      else
      {
        int v36 = 1;
      }
      v34 += v36;
      ++v33;
    }
    while (v33 < v32);
  }
  uint64_t v37 = (v19 + v4 + v17 + v24 + v22 + v29 + v27 + v34 + v32);
  unsigned int v38 = *(void **)(a1 + 8);
  if (v38 && *v38 != v38[1]) {
    uint64_t v37 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v37;
  }
  *(_DWORD *)(a1 + 104) = v37;
  return v37;
}

uint64_t sub_100077A40(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10007632C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100077B14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100077B2C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100077BB8()
{
  return 1;
}

uint64_t sub_100077BC0()
{
  uint64_t v0 = qword_1008A09B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006F9E0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A08A8;
}

void sub_100077C54(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_100077C68(void *a1)
{
  *a1 = off_100848F18;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_100077CB4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100077CC8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      uint64_t v5 = *(void *)(a2 + 16);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(void *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 36) |= 2u;
      int v6 = *(_DWORD **)(a1 + 24);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 24);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_1008ABED0 + 24);
      }
      sub_100071B2C(v6, v7);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100077DC8()
{
}

void sub_100077E00(void *a1)
{
  *a1 = off_100848F18;
  if ((void *)qword_1008ABED0 != a1)
  {
    uint64_t v2 = a1[3];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100077E98(void *a1)
{
  sub_100077E00(a1);

  operator delete();
}

uint64_t sub_100077ED0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_100077ED8()
{
}

void sub_100077F18()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100077F3C(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  int v1 = this;
  char v2 = *((unsigned char *)this + 36);
  if (v2)
  {
    *((void *)this + 2) = 0;
    if ((v2 & 2) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)this + 3);
      if (this) {
        this = sub_100071D4C((uint64_t)this);
      }
    }
  }
  uint64_t v4 = *((void *)v1 + 1);
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v3 + 7) = 0;
  if (v4)
  {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return this;
}

uint64_t sub_100077FA4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    do
    {
      while (1)
      {
        uint64_t v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 == 1) {
          break;
        }
        if (TagFallback >> 3 == 2)
        {
          int v9 = TagFallback & 7;
          if (v9 == 2)
          {
            int v10 = *(_DWORD *)(a1 + 36);
            goto LABEL_16;
          }
        }
        else
        {
          int v9 = TagFallback & 7;
        }
LABEL_22:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
      }
        }
      int v9 = TagFallback & 7;
      if (v9 != 1) {
        goto LABEL_22;
      }
      unint64_t v23 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v23) & 1) == 0) {
        return 0;
      }
      *(void *)(a1 + 16) = v23;
      int v10 = *(_DWORD *)(a1 + 36) | 1;
      *(_DWORD *)(a1 + 36) = v10;
      unsigned int v11 = (unsigned char *)*((void *)this + 1);
    }
    while ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 18);
    *((void *)this + 1) = v11 + 1;
LABEL_16:
    *(_DWORD *)(a1 + 36) = v10 | 2;
    int v12 = *(_DWORD **)(a1 + 24);
    if (!v12) {
      operator new();
    }
    unsigned int v24 = 0;
    int v13 = (char *)*((void *)this + 1);
    if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v24)) {
        return 0;
      }
    }
    else
    {
      unsigned int v24 = *v13;
      *((void *)this + 1) = v13 + 1;
    }
    int v14 = *((_DWORD *)this + 14);
    int v15 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v14 + 1;
    if (v14 >= v15) {
      return 0;
    }
    int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v24);
    if (!sub_100071D6C(v12, this, v17, v18) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
    int v19 = *((_DWORD *)this + 14);
    BOOL v20 = __OFSUB__(v19, 1);
    int v21 = v19 - 1;
    if (v21 < 0 == v20) {
      *((_DWORD *)this + 14) = v21;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

void sub_1000781C8()
{
}

uint64_t sub_1000781EC(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 36);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    int v6 = *(_DWORD *)(v5 + 36);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(void *)(v5 + 24);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1008ABED0 + 24);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  int v10 = *(void **)(v5 + 8);
  int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v8 = v10;
  if (v10 && *v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100078288(wireless_diagnostics::google::protobuf::internal::WireFormat *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  int v4 = *((_DWORD *)this + 9);
  if (v4)
  {
    uint64_t v5 = *((void *)this + 2);
    *(unsigned char *)a2 = 9;
    *(void *)((char *)a2 + 1) = v5;
    a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
    int v4 = *((_DWORD *)this + 9);
  }
  if ((v4 & 2) != 0)
  {
    int v6 = (unsigned int *)*((void *)this + 3);
    if (!v6) {
      int v6 = *(unsigned int **)(qword_1008ABED0 + 24);
    }
    *(unsigned char *)a2 = 18;
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v6[6];
    if (v7 > 0x7F)
    {
      int v8 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, (int)a2 + 1, a3);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v7;
      int v8 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
    a2 = sub_100071FEC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v6, v8, a3);
  }
  unsigned int v11 = (void *)*((void *)this + 1);
  int v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v9 = v11;
  if (!v11 || *v9 == v9[1]) {
    return a2;
  }

  return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v10, a2, a3);
}

uint64_t sub_10007838C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 36);
  if (*(unsigned char *)(a1 + 36))
  {
    uint64_t v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0)
    {
      uint64_t v5 = *(void *)(a1 + 24);
      if (!v5) {
        uint64_t v5 = *(void *)(qword_1008ABED0 + 24);
      }
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000720D4(v5, a2);
      int v7 = (int)v6;
      if (v6 >= 0x80) {
        int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
      }
      else {
        int v8 = 1;
      }
      uint64_t v4 = (v4 + v7 + v8 + 1);
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  int v9 = *(void **)(a1 + 8);
  if (v9 && *v9 != v9[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

uint64_t sub_10007843C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100077CC8((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100078510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100078528(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1000785B4()
{
  return 1;
}

uint64_t sub_1000785BC()
{
  uint64_t v0 = qword_1008A09B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006F9E0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A08B8;
}

void sub_100078650(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100078664(uint64_t a1)
{
  *(void *)a1 = off_100848FC8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  *(void *)(a1 + 32) = 0;
  return a1;
}

void sub_1000786B4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000786C8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    sub_10006F57C(a1 + 16, *(_DWORD *)(a1 + 24) + v4);
    memcpy((void *)(*(void *)(a1 + 16) + 4 * *(int *)(a1 + 24)), *(const void **)(a2 + 16), 4 * *(int *)(a2 + 24));
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
  }
  if (*(unsigned char *)(a2 + 40))
  {
    unsigned int v5 = *(_DWORD *)(a2 + 32);
    if (!sub_100071A10(v5)) {
      sub_10040FC80();
    }
    *(_DWORD *)(a1 + 40) |= 1u;
    *(_DWORD *)(a1 + 32) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000787BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000787D4(void *a1)
{
  *a1 = off_100848FC8;
  if (a1[2]) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10007884C(void *a1)
{
  sub_1000787D4(a1);

  operator delete();
}

uint64_t sub_100078884(uint64_t result, int a2)
{
  *(_DWORD *)(result + 36) = a2;
  return result;
}

void sub_10007888C()
{
}

void sub_1000788CC()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000788F0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40)) {
    *(_DWORD *)(a1 + 32) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  *((_DWORD *)result + 8) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100078914(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = a1 + 16;
  int v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v8;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v8 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        v26[0] = 0;
        unsigned int v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v26);
          if (!result) {
            return result;
          }
          signed int v12 = v26[0];
        }
        else
        {
          signed int v12 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        if (sub_100071A10(v12))
        {
          *(_DWORD *)(a1 + 40) |= 1u;
          *(_DWORD *)(a1 + 32) = v12;
        }
        else
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v7, 1, v12);
        }
        int v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 < *((void *)this + 2) && *v14 == 21)
        {
LABEL_29:
          *((void *)this + 1) = v14 + 1;
          goto LABEL_30;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        int v10 = TagFallback & 7;
        break;
      }
      int v10 = TagFallback & 7;
      if (v10 == 2)
      {
        uint64_t result = sub_10005CDA4(this, v6);
        if (!result) {
          return result;
        }
        goto LABEL_46;
      }
      if (v10 != 5) {
        break;
      }
LABEL_30:
      v26[0] = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v26) & 1) == 0) {
        return 0;
      }
      unsigned int v15 = v26[0];
      int v16 = *(_DWORD *)(a1 + 24);
      if (v16 == *(_DWORD *)(a1 + 28))
      {
        sub_10006F57C(v6, v16 + 1);
        int v16 = *(_DWORD *)(a1 + 24);
      }
      uint64_t v17 = *(void *)(a1 + 16);
      int v18 = v16 + 1;
      *(_DWORD *)(a1 + 24) = v16 + 1;
      *(_DWORD *)(v17 + 4 * v16) = v15;
      uint64_t v19 = *((void *)this + 1);
      int v20 = *((_DWORD *)this + 4) - v19;
      if (v20 >= 1)
      {
        signed int v21 = v20 / 5u;
        int v22 = v21 >= *(_DWORD *)(a1 + 28) - v18 ? *(_DWORD *)(a1 + 28) - v18 : v21;
        if (v22 >= 1)
        {
          int v23 = 0;
          while (*(unsigned char *)v19 == 21)
          {
            int v24 = *(_DWORD *)(v19 + 1);
            if (v18 >= *(_DWORD *)(a1 + 28))
            {
              wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
              wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
              wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
              wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v26);
              int v18 = *(_DWORD *)(a1 + 24);
              uint64_t v17 = *(void *)(a1 + 16);
            }
            *(_DWORD *)(a1 + 24) = v18 + 1;
            *(_DWORD *)(v17 + 4 * v18) = v24;
            ++v23;
            v19 += 5;
            ++v18;
            if (v22 == v23)
            {
              int v23 = v22;
              break;
            }
          }
          if (v23) {
            wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 5 * v23);
          }
        }
      }
LABEL_46:
      int v14 = (unsigned char *)*((void *)this + 1);
      unsigned int v25 = (unsigned char *)*((void *)this + 2);
      if (v14 < v25 && *v14 == 21) {
        goto LABEL_29;
      }
      if (v14 == v25 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
LABEL_17:
    if (v10 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
  }
    }
}

void sub_100078C18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100078C30(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 40)) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 32), (int)a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(*(void *)(v5 + 16) + 4 * v6++), a3);
    while (v6 < *(int *)(v5 + 24));
  }
  int v9 = *(void **)(v5 + 8);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

unsigned char *sub_100078CE4(wireless_diagnostics::google::protobuf::internal::WireFormat *this, unsigned char *a2, unsigned __int8 *a3)
{
  if (*((unsigned char *)this + 40))
  {
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 8);
    *a2 = 8;
    if ((v4 & 0x80000000) != 0)
    {
      uint64_t v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v4, (unint64_t)(a2 + 1), a3);
    }
    else
    {
      if (v4 <= 0x7F)
      {
        a2[1] = (_BYTE)v4;
        a2 += 2;
        goto LABEL_8;
      }
      uint64_t v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v4, (int)a2 + 1, a3);
    }
    a2 = (unsigned char *)v5;
  }
LABEL_8:
  if (*((int *)this + 6) >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      int v7 = *(_DWORD *)(*((void *)this + 2) + 4 * v6);
      *a2 = 21;
      *(_DWORD *)(a2 + 1) = v7;
      a2 += 5;
      ++v6;
    }
    while (v6 < *((int *)this + 6));
  }
  int v10 = (void *)*((void *)this + 1);
  int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v8 = v10;
  if (!v10 || *v8 == v8[1]) {
    return a2;
  }

  return (unsigned char *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v9, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_100078DD4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (*(unsigned char *)(a1 + 40))
  {
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if ((v4 & 0x80000000) != 0)
    {
      int v3 = 11;
    }
    else if (v4 >= 0x80)
    {
      int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4, a2) + 1;
    }
    else
    {
      int v3 = 2;
    }
  }
  else
  {
    int v3 = 0;
  }
  uint64_t v5 = *(void **)(a1 + 8);
  uint64_t v6 = (5 * *(_DWORD *)(a1 + 24) + v3);
  if (v5 && *v5 != v5[1]) {
    uint64_t v6 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v6;
  }
  *(_DWORD *)(a1 + 36) = v6;
  return v6;
}

uint64_t sub_100078E60(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000786C8((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100078F34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100078F4C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100078FD8()
{
  return 1;
}

uint64_t sub_100078FE0()
{
  uint64_t v0 = qword_1008A09B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006F9E0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A08C8;
}

void sub_100079074(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100079088(uint64_t a1)
{
  *(void *)a1 = off_100849078;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 44) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return a1;
}

void sub_1000790D8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000790EC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 56);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 56))
  {
    int v7 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 56) |= 1u;
    *(_DWORD *)(a1 + 24) = v7;
    int v4 = *(_DWORD *)(a2 + 56);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a2 + 56) & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 56) |= 2u;
  *(void *)(a1 + 16) = v8;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t v9 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 56) |= 4u;
  *(void *)(a1 + 32) = v9;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
LABEL_16:
    int v11 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 56) |= 0x10u;
    *(_DWORD *)(a1 + 48) = v11;
    if ((*(_DWORD *)(a2 + 56) & 0x20) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_10;
  }
LABEL_15:
  int v10 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 56) |= 8u;
  *(_DWORD *)(a1 + 28) = v10;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 0x10) != 0) {
    goto LABEL_16;
  }
LABEL_9:
  if ((v4 & 0x20) != 0)
  {
LABEL_10:
    uint64_t v5 = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 56) |= 0x20u;
    *(void *)(a1 + 40) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10007922C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100079244(uint64_t a1)
{
  *(void *)a1 = off_100849078;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100079298(uint64_t a1)
{
  *(void *)a1 = off_100849078;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100079300(uint64_t result, int a2)
{
  *(_DWORD *)(result + 52) = a2;
  return result;
}

void sub_100079308()
{
}

void sub_100079348()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10007936C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 56))
  {
    *(_DWORD *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 12) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100079394(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (unint64_t *)(a1 + 16);
  int v7 = (unsigned int *)(a1 + 28);
  uint64_t v8 = (unsigned int *)(a1 + 48);
  uint64_t v9 = (unint64_t *)(a1 + 40);
  unsigned int v10 = a1 + 8;
  while (2)
  {
    int v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v11;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v11 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v13 = TagFallback & 7;
        if (v13 != 5) {
          goto LABEL_26;
        }
        unsigned int v28 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v28) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 24) = v28;
        *(_DWORD *)(a1 + 56) |= 1u;
        unsigned int v15 = (unsigned char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v15 >= v14 || *v15 != 16) {
          continue;
        }
        int v16 = v15 + 1;
        *((void *)this + 1) = v16;
        goto LABEL_16;
      case 2u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
LABEL_16:
        if ((unint64_t)v16 >= v14 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!result) {
            return result;
          }
          uint64_t v17 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v6 = *v16;
          uint64_t v17 = v16 + 1;
          *((void *)this + 1) = v17;
        }
        *(_DWORD *)(a1 + 56) |= 2u;
        if ((unint64_t)v17 >= v14 || *v17 != 25) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
LABEL_35:
        unint64_t v27 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v27))
        {
          *(void *)(a1 + 32) = v27;
          *(_DWORD *)(a1 + 56) |= 4u;
          int v23 = (unsigned char *)*((void *)this + 1);
          unint64_t v18 = *((void *)this + 2);
          if ((unint64_t)v23 < v18 && *v23 == 32)
          {
            uint64_t v19 = v23 + 1;
            *((void *)this + 1) = v19;
LABEL_39:
            if ((unint64_t)v19 >= v18 || *v19 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
              if (!result) {
                return result;
              }
              int v24 = (unsigned char *)*((void *)this + 1);
              unint64_t v18 = *((void *)this + 2);
            }
            else
            {
              unsigned int *v7 = *v19;
              int v24 = v19 + 1;
              *((void *)this + 1) = v24;
            }
            *(_DWORD *)(a1 + 56) |= 8u;
            if ((unint64_t)v24 < v18 && *v24 == 40)
            {
              int v20 = v24 + 1;
              *((void *)this + 1) = v20;
LABEL_47:
              if ((unint64_t)v20 >= v18 || *v20 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
                if (!result) {
                  return result;
                }
                unsigned int v25 = (unsigned char *)*((void *)this + 1);
                unint64_t v18 = *((void *)this + 2);
              }
              else
              {
                *uint64_t v8 = *v20;
                unsigned int v25 = v20 + 1;
                *((void *)this + 1) = v25;
              }
              *(_DWORD *)(a1 + 56) |= 0x10u;
              if ((unint64_t)v25 < v18 && *v25 == 48)
              {
                signed int v21 = v25 + 1;
                *((void *)this + 1) = v21;
LABEL_55:
                if ((unint64_t)v21 >= v18 || *v21 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v9);
                  if (!result) {
                    return result;
                  }
                  int v26 = (unsigned __int8 *)*((void *)this + 1);
                  unint64_t v18 = *((void *)this + 2);
                }
                else
                {
                  *uint64_t v9 = *v21;
                  int v26 = (unsigned __int8 *)(v21 + 1);
                  *((void *)this + 1) = v26;
                }
                *(_DWORD *)(a1 + 56) |= 0x20u;
                if (v26 == (unsigned __int8 *)v18
                  && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                {
                  *((_DWORD *)this + 8) = 0;
                  uint64_t result = 1;
                  *((unsigned char *)this + 36) = 1;
                  return result;
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_35;
        }
        goto LABEL_26;
      case 4u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        uint64_t v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_39;
      case 5u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_47;
      case 6u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        signed int v21 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_55;
      default:
        int v13 = TagFallback & 7;
LABEL_26:
        if (v13 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v10, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100079724(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 56);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(this + 24), a3);
    int v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 16), (unint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_18:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 48), a2, a4);
    if ((*(_DWORD *)(v5 + 56) & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 28), a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) != 0) {
    goto LABEL_18;
  }
LABEL_6:
  if ((v6 & 0x20) != 0) {
LABEL_7:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(void *)(v5 + 40), (unint64_t)a2, a4);
LABEL_8:
  uint64_t v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

uint64_t sub_100079828(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, unsigned __int8 *a3)
{
  int v4 = *((_DWORD *)this + 14);
  if (v4)
  {
    int v5 = *((_DWORD *)this + 6);
    *(unsigned char *)a2 = 13;
    *(_DWORD *)(a2 + 1) = v5;
    a2 += 5;
    int v4 = *((_DWORD *)this + 14);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 2);
  *(unsigned char *)a2 = 16;
  a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v6, a2 + 1, a3);
  int v4 = *((_DWORD *)this + 14);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
LABEL_8:
  uint64_t v7 = *((void *)this + 4);
  *(unsigned char *)a2 = 25;
  *(void *)(a2 + 1) = v7;
  a2 += 9;
  if ((*((_DWORD *)this + 14) & 8) == 0) {
    goto LABEL_12;
  }
LABEL_9:
  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  *(unsigned char *)a2 = 32;
  if (v8 > 0x7F)
  {
    a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)a2 + 1, a3);
  }
  else
  {
    *(unsigned char *)(a2 + 1) = (_BYTE)v8;
    a2 += 2;
  }
LABEL_12:
  if ((*((unsigned char *)this + 56) & 0x10) != 0)
  {
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    *(unsigned char *)a2 = 40;
    if (v9 > 0x7F)
    {
      a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (int)a2 + 1, a3);
    }
    else
    {
      *(unsigned char *)(a2 + 1) = (_BYTE)v9;
      a2 += 2;
    }
  }
  if ((*((unsigned char *)this + 56) & 0x20) != 0)
  {
    unsigned int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 5);
    *(unsigned char *)a2 = 48;
    a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v10, a2 + 1, a3);
  }
  int v13 = (void *)*((void *)this + 1);
  signed int v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v11 = v13;
  if (!v13 || *v11 == v11[1]) {
    return a2;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v12, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_1000799C0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 56);
  if (*(unsigned char *)(a1 + 56))
  {
    LODWORD(v4) = (v3 << 31 >> 31) & 5;
    if ((v3 & 2) != 0)
    {
      LODWORD(v4) = v4
                  + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16), (unint64_t)a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 56);
    }
    if ((v3 & 4) != 0) {
      uint64_t v4 = (v4 + 9);
    }
    else {
      uint64_t v4 = v4;
    }
    if ((v3 & 8) != 0)
    {
      int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
      if (v5 >= 0x80)
      {
        int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        int v3 = *(_DWORD *)(a1 + 56);
      }
      else
      {
        int v6 = 2;
      }
      uint64_t v4 = (v6 + v4);
      if ((v3 & 0x10) == 0)
      {
LABEL_9:
        if ((v3 & 0x20) == 0) {
          goto LABEL_21;
        }
        goto LABEL_20;
      }
    }
    else if ((v3 & 0x10) == 0)
    {
      goto LABEL_9;
    }
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 56);
    }
    else
    {
      int v8 = 2;
    }
    uint64_t v4 = (v8 + v4);
    if ((v3 & 0x20) == 0) {
      goto LABEL_21;
    }
LABEL_20:
    uint64_t v4 = v4
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 40), (unint64_t)a2)+ 1;
    goto LABEL_21;
  }
  uint64_t v4 = 0;
LABEL_21:
  uint64_t v9 = *(void **)(a1 + 8);
  if (v9 && *v9 != v9[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 52) = v4;
  return v4;
}

uint64_t sub_100079AB8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000790EC((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100079B8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100079BA4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100079C30()
{
  return 1;
}

uint64_t sub_100079C38()
{
  uint64_t v0 = qword_1008A09B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006F9E0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A08D8;
}

void sub_100079CCC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100079CE0(uint64_t a1)
{
  *(void *)a1 = off_100849128;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_DWORD *)(a1 + 64) = 0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return a1;
}

void sub_100079D34(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100079D48(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 64);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 64))
  {
    unsigned int v5 = *(_DWORD *)(a2 + 56);
    if (v5 >= 3) {
      sub_10040FCAC();
    }
    *(_DWORD *)(a1 + 64) |= 1u;
    *(_DWORD *)(a1 + 56) = v5;
    int v4 = *(_DWORD *)(a2 + 64);
  }
  if ((v4 & 2) != 0)
  {
    uint64_t v8 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 64) |= 2u;
    *(void *)(a1 + 16) = v8;
    int v4 = *(_DWORD *)(a2 + 64);
    if ((v4 & 4) == 0)
    {
LABEL_9:
      if ((v4 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_16;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_9;
  }
  uint64_t v9 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 64) |= 4u;
  *(void *)(a1 + 24) = v9;
  int v4 = *(_DWORD *)(a2 + 64);
  if ((v4 & 8) == 0)
  {
LABEL_10:
    if ((v4 & 0x10) == 0) {
      goto LABEL_11;
    }
LABEL_17:
    uint64_t v11 = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 64) |= 0x10u;
    *(void *)(a1 + 40) = v11;
    if ((*(_DWORD *)(a2 + 64) & 0x20) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_12;
  }
LABEL_16:
  uint64_t v10 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 64) |= 8u;
  *(void *)(a1 + 32) = v10;
  int v4 = *(_DWORD *)(a2 + 64);
  if ((v4 & 0x10) != 0) {
    goto LABEL_17;
  }
LABEL_11:
  if ((v4 & 0x20) != 0)
  {
LABEL_12:
    uint64_t v6 = *(void *)(a2 + 48);
    *(_DWORD *)(a1 + 64) |= 0x20u;
    *(void *)(a1 + 48) = v6;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100079E90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100079EA8(uint64_t a1)
{
  *(void *)a1 = off_100849128;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100079EFC(uint64_t a1)
{
  *(void *)a1 = off_100849128;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100079F64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 60) = a2;
  return result;
}

void sub_100079F6C()
{
}

void sub_100079FAC()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100079FD0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 64))
  {
    *(_OWORD *)(a1 + 44) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 14) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100079FF8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        v18[0] = 0;
        uint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v18);
          if (!result) {
            return result;
          }
          unsigned int v11 = v18[0];
        }
        else
        {
          unsigned int v11 = *v10;
          *((void *)this + 1) = v10 + 1;
        }
        if (v11 > 2)
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 1, (int)v11);
        }
        else
        {
          *(_DWORD *)(a1 + 64) |= 1u;
          *(_DWORD *)(a1 + 56) = v11;
        }
        int v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 < *((void *)this + 2) && *v13 == 17)
        {
          *((void *)this + 1) = v13 + 1;
          goto LABEL_33;
        }
        continue;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_22;
        }
LABEL_33:
        *(void *)unint64_t v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v18) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v18;
        }
        *(_DWORD *)(a1 + 64) |= 2u;
        unint64_t v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 != 25) {
          continue;
        }
        *((void *)this + 1) = v14 + 1;
LABEL_37:
        *(void *)unint64_t v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v18) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v18;
        }
        *(_DWORD *)(a1 + 64) |= 4u;
        unsigned int v15 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 != 33) {
          continue;
        }
        *((void *)this + 1) = v15 + 1;
LABEL_41:
        *(void *)unint64_t v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v18) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v18;
        }
        *(_DWORD *)(a1 + 64) |= 8u;
        int v16 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v16 >= *((void *)this + 2) || *v16 != 41) {
          continue;
        }
        *((void *)this + 1) = v16 + 1;
LABEL_45:
        *(void *)unint64_t v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v18) & 1) == 0)return 0; {
        *(void *)(a1 + 40) = *(void *)v18;
        }
        *(_DWORD *)(a1 + 64) |= 0x10u;
        uint64_t v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 49) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
LABEL_49:
        *(void *)unint64_t v18 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v18))
        {
          *(void *)(a1 + 48) = *(void *)v18;
          *(_DWORD *)(a1 + 64) |= 0x20u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_37;
        }
        goto LABEL_22;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_41;
        }
        goto LABEL_22;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_45;
        }
        goto LABEL_22;
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_22;
        }
        goto LABEL_49;
      default:
        int v9 = TagFallback & 7;
LABEL_22:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_10007A340(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 64);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 56), (int)a2, a4);
    int v6 = *(_DWORD *)(v5 + 64);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_18:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 40), a3);
    if ((*(_DWORD *)(v5 + 64) & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x10) != 0) {
    goto LABEL_18;
  }
LABEL_6:
  if ((v6 & 0x20) != 0) {
LABEL_7:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 48), a3);
LABEL_8:
  int v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

unsigned char *sub_10007A444(wireless_diagnostics::google::protobuf::internal::WireFormat *this, unsigned char *a2, unsigned __int8 *a3)
{
  if (*((unsigned char *)this + 64))
  {
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 14);
    *a2 = 8;
    if ((v4 & 0x80000000) != 0)
    {
      uint64_t v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v4, (unint64_t)(a2 + 1), a3);
    }
    else
    {
      if (v4 <= 0x7F)
      {
        a2[1] = (_BYTE)v4;
        a2 += 2;
        goto LABEL_8;
      }
      uint64_t v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v4, (int)a2 + 1, a3);
    }
    a2 = (unsigned char *)v5;
  }
LABEL_8:
  int v6 = *((_DWORD *)this + 16);
  if ((v6 & 2) != 0)
  {
    uint64_t v12 = *((void *)this + 2);
    *a2 = 17;
    *(void *)(a2 + 1) = v12;
    a2 += 9;
    int v6 = *((_DWORD *)this + 16);
    if ((v6 & 4) == 0)
    {
LABEL_10:
      if ((v6 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_22;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v13 = *((void *)this + 3);
  *a2 = 25;
  *(void *)(a2 + 1) = v13;
  a2 += 9;
  int v6 = *((_DWORD *)this + 16);
  if ((v6 & 8) == 0)
  {
LABEL_11:
    if ((v6 & 0x10) == 0) {
      goto LABEL_12;
    }
LABEL_23:
    uint64_t v15 = *((void *)this + 5);
    *a2 = 41;
    *(void *)(a2 + 1) = v15;
    a2 += 9;
    if ((*((_DWORD *)this + 16) & 0x20) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_22:
  uint64_t v14 = *((void *)this + 4);
  *a2 = 33;
  *(void *)(a2 + 1) = v14;
  a2 += 9;
  int v6 = *((_DWORD *)this + 16);
  if ((v6 & 0x10) != 0) {
    goto LABEL_23;
  }
LABEL_12:
  if ((v6 & 0x20) != 0)
  {
LABEL_13:
    uint64_t v7 = *((void *)this + 6);
    *a2 = 49;
    *(void *)(a2 + 1) = v7;
    a2 += 9;
  }
LABEL_14:
  uint64_t v10 = (void *)*((void *)this + 1);
  int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v8 = v10;
  if (!v10 || *v8 == v8[1]) {
    return a2;
  }

  return (unsigned char *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v9, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_10007A69C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 64);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 64))
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
      if ((v6 & 0x80000000) != 0)
      {
        unsigned int v4 = 11;
      }
      else if (v6 >= 0x80)
      {
        unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2)
           + 1;
        int v3 = *(_DWORD *)(a1 + 64);
      }
      else
      {
        unsigned int v4 = 2;
      }
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  uint64_t v7 = *(void **)(a1 + 8);
  if (v7 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 60) = v5;
  return v5;
}

uint64_t sub_10007A768(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100079D48((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10007A83C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10007A854(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10007A8E0()
{
  return 1;
}

uint64_t sub_10007A8E8()
{
  uint64_t v0 = qword_1008A09B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006F9E0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A08E8;
}

void sub_10007A97C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10007A990(uint64_t a1)
{
  *(void *)a1 = off_1008491D8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  return a1;
}

void sub_10007A9DC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10007A9F0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      unsigned int v5 = *(_DWORD *)(a2 + 24);
      if (v5 >= 4) {
        sub_10040FCD8();
      }
      *(_DWORD *)(a1 + 32) |= 1u;
      *(_DWORD *)(a1 + 24) = v5;
      int v4 = *(_DWORD *)(a2 + 32);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v6 = *(void *)(a2 + 16);
      *(_DWORD *)(a1 + 32) |= 2u;
      *(void *)(a1 + 16) = v6;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10007AAB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10007AACC(uint64_t a1)
{
  *(void *)a1 = off_1008491D8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10007AB20(uint64_t a1)
{
  *(void *)a1 = off_1008491D8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_10007AB88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 28) = a2;
  return result;
}

void sub_10007AB90()
{
}

void sub_10007ABD0()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10007ABF4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 32))
  {
    *(_DWORD *)(a1 + 24) = 0;
    *(void *)(a1 + 16) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 6) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10007AC18(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_16;
        }
        unsigned int v14 = 0;
        uint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v14);
          if (!result) {
            return result;
          }
          unsigned int v11 = v14;
        }
        else
        {
          unsigned int v11 = *v10;
          *((void *)this + 1) = v10 + 1;
        }
        if (v11 > 3)
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 1, (int)v11);
        }
        else
        {
          *(_DWORD *)(a1 + 32) |= 1u;
          *(_DWORD *)(a1 + 24) = v11;
        }
        uint64_t v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 < *((void *)this + 2) && *v13 == 17)
        {
          *((void *)this + 1) = v13 + 1;
          goto LABEL_27;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v9 = TagFallback & 7;
      if (v9 != 1) {
        goto LABEL_16;
      }
LABEL_27:
      unint64_t v15 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v15) & 1) == 0) {
        return 0;
      }
      *(void *)(a1 + 16) = v15;
      *(_DWORD *)(a1 + 32) |= 2u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v9 = TagFallback & 7;
LABEL_16:
    if (v9 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) != 0);
  return 0;
}

uint64_t sub_10007ADCC(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 32);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 24), (int)a2, a4);
    int v6 = *(_DWORD *)(v5 + 32);
  }
  if ((v6 & 2) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 16), a3);
  }
  int v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

unsigned char *sub_10007AE58(wireless_diagnostics::google::protobuf::internal::WireFormat *this, unsigned char *a2, unsigned __int8 *a3)
{
  if (*((unsigned char *)this + 32))
  {
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 6);
    *a2 = 8;
    if ((v4 & 0x80000000) != 0)
    {
      uint64_t v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v4, (unint64_t)(a2 + 1), a3);
    }
    else
    {
      if (v4 <= 0x7F)
      {
        a2[1] = (_BYTE)v4;
        a2 += 2;
        goto LABEL_8;
      }
      uint64_t v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v4, (int)a2 + 1, a3);
    }
    a2 = (unsigned char *)v5;
  }
LABEL_8:
  if ((*((unsigned char *)this + 32) & 2) != 0)
  {
    uint64_t v6 = *((void *)this + 2);
    *a2 = 17;
    *(void *)(a2 + 1) = v6;
    a2 += 9;
  }
  int v9 = (void *)*((void *)this + 1);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v7 = v9;
  if (!v9 || *v7 == v7[1]) {
    return a2;
  }

  return (unsigned char *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v8, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_10007AF4C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 32);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 32))
    {
      uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
      if ((v6 & 0x80000000) != 0)
      {
        unsigned int v4 = 11;
      }
      else if (v6 >= 0x80)
      {
        unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2)
           + 1;
        int v3 = *(_DWORD *)(a1 + 32);
      }
      else
      {
        unsigned int v4 = 2;
      }
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  uint64_t v7 = *(void **)(a1 + 8);
  if (v7 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 28) = v5;
  return v5;
}

uint64_t sub_10007AFE8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10007A9F0((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10007B0BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10007B0D4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10007B160()
{
  return 1;
}

uint64_t sub_10007B168()
{
  uint64_t v0 = qword_1008A09B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006F9E0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A08F8;
}

void sub_10007B1FC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_10007B210(void *a1)
{
  *a1 = off_100849288;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_10007B25C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10007B270(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      *(_DWORD *)(a1 + 36) |= 1u;
      uint64_t v5 = *(void *)(a1 + 16);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 16);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_1008ABEF8 + 16);
      }
      sub_10007A9F0(v5, v6);
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 36) |= 2u;
      uint64_t v7 = *(void *)(a1 + 24);
      if (!v7) {
        operator new();
      }
      uint64_t v8 = *(void *)(a2 + 24);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_1008ABEF8 + 24);
      }
      sub_100079D48(v7, v8);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10007B3B0()
{
}

void sub_10007B3FC(void *a1)
{
  *a1 = off_100849288;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_10007B45C(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void *sub_10007B45C(void *result)
{
  if ((void *)qword_1008ABEF8 != result)
  {
    int v1 = result;
    uint64_t v2 = result[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t result = (void *)v1[3];
    if (result)
    {
      char v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_10007B500(void *a1)
{
  sub_10007B3FC(a1);

  operator delete();
}

uint64_t sub_10007B538(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_10007B540()
{
}

void sub_10007B580()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10007B5A4(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  int v1 = this;
  LOBYTE(v2) = *((unsigned char *)this + 36);
  if ((_BYTE)v2)
  {
    if (*((unsigned char *)this + 36))
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)this + 2);
      if (this)
      {
        this = sub_10007ABF4((uint64_t)this);
        int v2 = *((_DWORD *)v1 + 9);
      }
    }
    if ((v2 & 2) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)v1 + 3);
      if (this)
      {
        if (*((unsigned char *)this + 64))
        {
          *(_OWORD *)((char *)this + 44) = 0u;
          *((_OWORD *)this + 1) = 0u;
          *((_OWORD *)this + 2) = 0u;
        }
        uint64_t v3 = *((void *)this + 1);
        this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)this + 8);
        *((_DWORD *)this + 14) = 0;
        if (v3) {
          this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(this);
        }
      }
    }
  }
  uint64_t v5 = *((void *)v1 + 1);
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v4 + 7) = 0;
  if (v5)
  {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return this;
}

uint64_t sub_10007B63C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_18;
        }
        *(_DWORD *)(a1 + 36) |= 1u;
        uint64_t v10 = *(void *)(a1 + 16);
        if (!v10) {
          operator new();
        }
        unsigned int v31 = 0;
        unsigned int v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v31))return 0; {
        }
          }
        else
        {
          unsigned int v31 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        int v12 = *((_DWORD *)this + 14);
        int v13 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v12 + 1;
        if (v12 >= v13) {
          return 0;
        }
        int v14 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v31);
        if (!sub_10007AC18(v10, this, v15, v16) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v14);
        int v17 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v17, 1);
        int v19 = v17 - 1;
        if (v19 < 0 == v18) {
          *((_DWORD *)this + 14) = v19;
        }
        int v20 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v20 < *((void *)this + 2) && *v20 == 18)
        {
          *((void *)this + 1) = v20 + 1;
          goto LABEL_30;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v9 = TagFallback & 7;
      if (v9 != 2) {
        goto LABEL_18;
      }
LABEL_30:
      *(_DWORD *)(a1 + 36) |= 2u;
      uint64_t v21 = *(void *)(a1 + 24);
      if (!v21) {
        operator new();
      }
      unsigned int v32 = 0;
      int v22 = (char *)*((void *)this + 1);
      if ((unint64_t)v22 >= *((void *)this + 2) || *v22 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v32))return 0; {
      }
        }
      else
      {
        unsigned int v32 = *v22;
        *((void *)this + 1) = v22 + 1;
      }
      int v23 = *((_DWORD *)this + 14);
      int v24 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v23 + 1;
      if (v23 >= v24) {
        return 0;
      }
      int v25 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v32);
      if (!sub_100079FF8(v21, this, v26, v27) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v25);
      int v28 = *((_DWORD *)this + 14);
      BOOL v18 = __OFSUB__(v28, 1);
      int v29 = v28 - 1;
      if (v29 < 0 == v18) {
        *((_DWORD *)this + 14) = v29;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v9 = TagFallback & 7;
LABEL_18:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
  }
    }
}

void sub_10007B904()
{
}

uint64_t sub_10007B93C(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 36);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 16);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1008ABEF8 + 16);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v8 = *(void *)(v5 + 24);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1008ABEF8 + 24);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  }
  unsigned int v11 = *(void **)(v5 + 8);
  uint64_t v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v9 = v11;
  if (v11 && *v9 != v9[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v10, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10007B9E8(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  int v5 = *((_DWORD *)this + 9);
  if (v5)
  {
    int v6 = (unsigned int *)*((void *)this + 2);
    if (!v6) {
      int v6 = *(unsigned int **)(qword_1008ABEF8 + 16);
    }
    *(unsigned char *)a2 = 10;
    unsigned int v7 = a2 + 1;
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v6[7];
    if (v8 > 0x7F)
    {
      int v9 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v7, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v8;
      int v9 = (char *)v3 + 2;
    }
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10007AE58((wireless_diagnostics::google::protobuf::internal::WireFormat *)v6, v9, a3);
    int v5 = *((_DWORD *)this + 9);
  }
  if ((v5 & 2) != 0)
  {
    uint64_t v10 = (unsigned int *)*((void *)this + 3);
    if (!v10) {
      uint64_t v10 = *(unsigned int **)(qword_1008ABEF8 + 24);
    }
    *(unsigned char *)uint64_t v3 = 18;
    unsigned int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10[15];
    if (v11 > 0x7F)
    {
      int v12 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v11;
      int v12 = (char *)v3 + 2;
    }
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10007A444((wireless_diagnostics::google::protobuf::internal::WireFormat *)v10, v12, a3);
  }
  uint64_t v15 = (void *)*((void *)this + 1);
  int v14 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v13 = v15;
  if (!v15 || *v13 == v13[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v14, v3, a3);
}

uint64_t sub_10007BAF0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (!*(unsigned char *)(a1 + 36))
  {
    uint64_t v3 = 0;
    goto LABEL_18;
  }
  if ((*(unsigned char *)(a1 + 36) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*(unsigned char *)(a1 + 36) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    uint64_t v4 = *(void *)(qword_1008ABEF8 + 16);
  }
  int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10007AF4C(v4, a2);
  int v6 = (int)v5;
  if (v5 >= 0x80) {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
  }
  else {
    int v7 = 1;
  }
  uint64_t v3 = (v6 + v7 + 1);
  if ((*(_DWORD *)(a1 + 36) & 2) != 0)
  {
LABEL_12:
    uint64_t v8 = *(void *)(a1 + 24);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1008ABEF8 + 24);
    }
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10007A69C(v8, a2);
    int v10 = (int)v9;
    if (v9 >= 0x80) {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
    }
    else {
      int v11 = 1;
    }
    uint64_t v3 = (v3 + v10 + v11 + 1);
  }
LABEL_18:
  int v12 = *(void **)(a1 + 8);
  if (v12 && *v12 != v12[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  }
  *(_DWORD *)(a1 + 32) = v3;
  return v3;
}

uint64_t sub_10007BBE4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10007B270((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10007BCB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10007BCD0(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10007BD5C()
{
  return 1;
}

uint64_t sub_10007BD64()
{
  uint64_t v0 = qword_1008A09B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006F9E0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A0908;
}

void sub_10007BDF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10007BE0C(uint64_t a1)
{
  *(void *)a1 = off_100849338;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  *(void *)(a1 + 32) = 0;
  return a1;
}

void sub_10007BE5C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10007BE70(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 40);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((*(unsigned char *)(a2 + 40) & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 40) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_10:
    uint64_t v8 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 40) |= 2u;
    *(void *)(a1 + 24) = v8;
    if ((*(_DWORD *)(a2 + 40) & 4) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 40) |= 1u;
  *(void *)(a1 + 16) = v7;
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_6:
  if ((v4 & 4) != 0)
  {
LABEL_7:
    int v5 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 40) |= 4u;
    *(_DWORD *)(a1 + 32) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10007BF50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10007BF68(uint64_t a1)
{
  *(void *)a1 = off_100849338;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10007BFBC(uint64_t a1)
{
  *(void *)a1 = off_100849338;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_10007C024(uint64_t result, int a2)
{
  *(_DWORD *)(result + 36) = a2;
  return result;
}

void sub_10007C02C()
{
}

void sub_10007C06C()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10007C090(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(_DWORD *)(a1 + 32) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 8) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10007C0B4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (unsigned int *)(a1 + 32);
  unsigned int v7 = a1 + 8;
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v8;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v8 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v10 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v11 = TagFallback & 7;
        if (v11 != 1) {
          goto LABEL_26;
        }
        unint64_t v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v18) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v18;
        *(_DWORD *)(a1 + 40) |= 1u;
        int v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 < *((void *)this + 2) && *v14 == 17)
        {
          *((void *)this + 1) = v14 + 1;
          goto LABEL_18;
        }
      }
      if (v10 != 2) {
        break;
      }
      int v11 = TagFallback & 7;
      if (v11 != 1) {
        goto LABEL_26;
      }
LABEL_18:
      unint64_t v18 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v18) & 1) == 0) {
        return 0;
      }
      *(void *)(a1 + 24) = v18;
      *(_DWORD *)(a1 + 40) |= 2u;
      uint64_t v15 = (unsigned char *)*((void *)this + 1);
      unint64_t v12 = *((void *)this + 2);
      if ((unint64_t)v15 < v12 && *v15 == 24)
      {
        int v13 = v15 + 1;
        *((void *)this + 1) = v13;
LABEL_22:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v16 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v13;
          int v16 = (unsigned __int8 *)(v13 + 1);
          *((void *)this + 1) = v16;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        if (v16 == (unsigned __int8 *)v12
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v10 == 3)
    {
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_22;
      }
    }
    else
    {
      int v11 = TagFallback & 7;
    }
LABEL_26:
    if (v11 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) != 0);
  return 0;
}

uint64_t sub_10007C2A8(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 40);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_12:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
    if ((*(_DWORD *)(v5 + 40) & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 2) != 0) {
    goto LABEL_12;
  }
LABEL_3:
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 32), a2, a4);
LABEL_5:
  int v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

uint64_t sub_10007C358(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, unsigned __int8 *a3)
{
  int v4 = *((_DWORD *)this + 10);
  if ((v4 & 1) == 0)
  {
    if ((v4 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v6 = *((void *)this + 3);
    *(unsigned char *)a2 = 17;
    *(void *)(a2 + 1) = v6;
    a2 += 9;
    if ((*((_DWORD *)this + 10) & 4) == 0) {
      goto LABEL_10;
    }
    goto LABEL_7;
  }
  uint64_t v5 = *((void *)this + 2);
  *(unsigned char *)a2 = 9;
  *(void *)(a2 + 1) = v5;
  a2 += 9;
  int v4 = *((_DWORD *)this + 10);
  if ((v4 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v4 & 4) == 0) {
    goto LABEL_10;
  }
LABEL_7:
  unsigned int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  *(unsigned char *)a2 = 24;
  if (v7 > 0x7F)
  {
    a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, (int)a2 + 1, a3);
  }
  else
  {
    *(unsigned char *)(a2 + 1) = (_BYTE)v7;
    a2 += 2;
  }
LABEL_10:
  unsigned int v10 = (void *)*((void *)this + 1);
  int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v8 = v10;
  if (!v10 || *v8 == v8[1]) {
    return a2;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v9, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_10007C49C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 40);
  if (*(unsigned char *)(a1 + 40))
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 4) != 0)
    {
      uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
      if (v6 >= 0x80) {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2)
      }
           + 1;
      else {
        int v7 = 2;
      }
      uint64_t v5 = (v7 + v5);
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  uint64_t v8 = *(void **)(a1 + 8);
  if (v8 && *v8 != v8[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 36) = v5;
  return v5;
}

uint64_t sub_10007C530(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10007BE70((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10007C604(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10007C61C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10007C6A8()
{
  return 1;
}

uint64_t sub_10007C6B0()
{
  uint64_t v0 = qword_1008A09B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006F9E0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A0918;
}

void sub_10007C744(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10007C758(uint64_t a1)
{
  *(void *)a1 = off_1008493E8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return a1;
}

void sub_10007C7A8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10007C7BC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 52);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 52))
  {
    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 52) |= 1u;
    *(void *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 52);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_12:
      uint64_t v9 = *(void *)(a2 + 32);
      *(_DWORD *)(a1 + 52) |= 4u;
      *(void *)(a1 + 32) = v9;
      if ((*(_DWORD *)(a2 + 52) & 8) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
      goto LABEL_8;
    }
  }
  else if ((*(unsigned char *)(a2 + 52) & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 52) |= 2u;
  *(void *)(a1 + 24) = v8;
  int v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_7:
  if ((v4 & 8) != 0)
  {
LABEL_8:
    uint64_t v5 = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 52) |= 8u;
    *(void *)(a1 + 40) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10007C8BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10007C8D4(uint64_t a1)
{
  *(void *)a1 = off_1008493E8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10007C928(uint64_t a1)
{
  *(void *)a1 = off_1008493E8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_10007C990(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) = a2;
  return result;
}

void sub_10007C998()
{
}

void sub_10007C9D8()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10007C9FC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 52))
  {
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 11) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10007CA20(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_30;
        }
        unint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v14;
        *(_DWORD *)(a1 + 52) |= 1u;
        unsigned int v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 17) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_30;
        }
LABEL_15:
        unint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 24) = v14;
        *(_DWORD *)(a1 + 52) |= 2u;
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 25) {
          continue;
        }
        *((void *)this + 1) = v11 + 1;
LABEL_20:
        unint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 32) = v14;
        *(_DWORD *)(a1 + 52) |= 4u;
        unint64_t v12 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 != 33) {
          continue;
        }
        *((void *)this + 1) = v12 + 1;
LABEL_25:
        unint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 40) = v14;
        *(_DWORD *)(a1 + 52) |= 8u;
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_20;
        }
        goto LABEL_30;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_25;
        }
        goto LABEL_30;
      default:
        int v9 = TagFallback & 7;
LABEL_30:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
    return result;
  }
}

uint64_t sub_10007CC78(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 52);
  if (v5)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    int v5 = *(_DWORD *)(v4 + 52);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_14:
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v4 + 32), a3);
      if ((*(_DWORD *)(v4 + 52) & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_5;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  int v5 = *(_DWORD *)(v4 + 52);
  if ((v5 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_4:
  if ((v5 & 8) != 0) {
LABEL_5:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v4 + 40), a3);
LABEL_6:
  uint64_t v8 = *(void **)(v4 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v8;
  if (v8 && *v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

uint64_t sub_10007CD44(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 52);
  if (v3)
  {
    uint64_t v9 = *(void *)(a1 + 16);
    *(unsigned char *)a2 = 9;
    *(void *)(a2 + 1) = v9;
    a2 += 9;
    int v3 = *(_DWORD *)(a1 + 52);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_12:
      uint64_t v11 = *(void *)(a1 + 32);
      *(unsigned char *)a2 = 25;
      *(void *)(a2 + 1) = v11;
      a2 += 9;
      if ((*(_DWORD *)(a1 + 52) & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_5;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v10 = *(void *)(a1 + 24);
  *(unsigned char *)a2 = 17;
  *(void *)(a2 + 1) = v10;
  a2 += 9;
  int v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_4:
  if ((v3 & 8) != 0)
  {
LABEL_5:
    uint64_t v4 = *(void *)(a1 + 40);
    *(unsigned char *)a2 = 33;
    *(void *)(a2 + 1) = v4;
    a2 += 9;
  }
LABEL_6:
  uint64_t v7 = *(void **)(a1 + 8);
  int v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  unsigned int v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v5, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
}

uint64_t sub_10007CEC4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 52);
  if (*(unsigned char *)(a1 + 52))
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v7 = *(void **)(a1 + 8);
  if (v7 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
  *(_DWORD *)(a1 + 48) = v5;
  return v5;
}

uint64_t sub_10007CF4C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10007C7BC((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10007D020(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10007D038(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10007D0C4()
{
  return 1;
}

uint64_t sub_10007D0CC()
{
  uint64_t v0 = qword_1008A09B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006F9E0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A0928;
}

void sub_10007D160(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10007D174(uint64_t a1)
{
  *(void *)a1 = off_100849498;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(_DWORD *)(a1 + 92) = 0;
  *(_DWORD *)(a1 + 96) = 0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 73) = 0u;
  return a1;
}

void sub_10007D1D8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10007D1EC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v22);
  }
  int v4 = *(_DWORD *)(a2 + 96);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v14 = *(void *)(a2 + 16);
      *(_DWORD *)(a1 + 96) |= 1u;
      *(void *)(a1 + 16) = v14;
      int v4 = *(_DWORD *)(a2 + 96);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_35;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v15 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 96) |= 2u;
    *(void *)(a1 + 24) = v15;
    int v4 = *(_DWORD *)(a2 + 96);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_40;
    }
LABEL_35:
    *(_DWORD *)(a1 + 96) |= 4u;
    uint64_t v16 = *(void *)(a1 + 32);
    if (!v16) {
      operator new();
    }
    uint64_t v17 = *(void *)(a2 + 32);
    if (!v17) {
      uint64_t v17 = *(void *)(qword_1008ABF10 + 32);
    }
    sub_10007B270(v16, v17);
    int v4 = *(_DWORD *)(a2 + 96);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_43;
    }
LABEL_40:
    unint64_t v18 = *(const std::string **)(a2 + 40);
    *(_DWORD *)(a1 + 96) |= 8u;
    int v19 = *(std::string **)(a1 + 40);
    if (v19 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v19, v18);
    int v4 = *(_DWORD *)(a2 + 96);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0)
      {
LABEL_11:
        if ((v4 & 0x40) != 0)
        {
          *(_DWORD *)(a1 + 96) |= 0x40u;
          uint64_t v6 = *(void *)(a1 + 64);
          if (!v6) {
            operator new();
          }
          uint64_t v7 = *(void *)(a2 + 64);
          if (!v7) {
            uint64_t v7 = *(void *)(qword_1008ABF10 + 64);
          }
          sub_10007A9F0(v6, v7);
          int v4 = *(_DWORD *)(a2 + 96);
        }
        if ((v4 & 0x80) != 0)
        {
          *(_DWORD *)(a1 + 96) |= 0x80u;
          uint64_t v8 = *(void *)(a1 + 72);
          if (!v8) {
            operator new();
          }
          uint64_t v9 = *(void *)(a2 + 72);
          if (!v9) {
            uint64_t v9 = *(void *)(qword_1008ABF10 + 72);
          }
          sub_100079D48(v8, v9);
          int v4 = *(_DWORD *)(a2 + 96);
        }
        goto LABEL_23;
      }
LABEL_10:
      uint64_t v5 = *(void *)(a2 + 56);
      *(_DWORD *)(a1 + 96) |= 0x20u;
      *(void *)(a1 + 56) = v5;
      int v4 = *(_DWORD *)(a2 + 96);
      goto LABEL_11;
    }
LABEL_43:
    *(_DWORD *)(a1 + 96) |= 0x10u;
    uint64_t v20 = *(void *)(a1 + 48);
    if (!v20) {
      operator new();
    }
    uint64_t v21 = *(void *)(a2 + 48);
    if (!v21) {
      uint64_t v21 = *(void *)(qword_1008ABF10 + 48);
    }
    sub_10007BE70(v20, v21);
    int v4 = *(_DWORD *)(a2 + 96);
    if ((v4 & 0x20) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_23:
  if ((v4 & 0xFF00) != 0)
  {
    if ((v4 & 0x100) != 0)
    {
      *(_DWORD *)(a1 + 96) |= 0x100u;
      uint64_t v10 = *(void *)(a1 + 80);
      if (!v10) {
        operator new();
      }
      uint64_t v11 = *(void *)(a2 + 80);
      if (!v11) {
        uint64_t v11 = *(void *)(qword_1008ABF10 + 80);
      }
      sub_10007C7BC(v10, v11);
      int v4 = *(_DWORD *)(a2 + 96);
    }
    if ((v4 & 0x200) != 0)
    {
      char v12 = *(unsigned char *)(a2 + 88);
      *(_DWORD *)(a1 + 96) |= 0x200u;
      *(unsigned char *)(a1 + 88) = v12;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10007D52C()
{
}

void sub_10007D5B4(void *a1)
{
  *a1 = off_100849498;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_10007D614(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void *sub_10007D614(void *result)
{
  int v1 = result;
  uint64_t v2 = result[5];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  if ((void *)qword_1008ABF10 != result)
  {
    uint64_t v4 = result[4];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[6];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = v1[8];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = v1[9];
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t result = (void *)v1[10];
    if (result)
    {
      uint64_t v8 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v8();
    }
  }
  return result;
}

void sub_10007D77C(void *a1)
{
  sub_10007D5B4(a1);

  operator delete();
}

uint64_t sub_10007D7B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 92) = a2;
  return result;
}

void sub_10007D7BC()
{
}

void sub_10007D7FC()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10007D820(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  int v1 = this;
  LOBYTE(v2) = *((unsigned char *)this + 96);
  if ((_BYTE)v2)
  {
    *((void *)this + 2) = 0;
    *((void *)this + 3) = 0;
    if ((v2 & 4) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)this + 4);
      if (this)
      {
        this = sub_10007B5A4(this);
        int v2 = *((_DWORD *)v1 + 24);
      }
    }
    if ((v2 & 8) != 0)
    {
      uint64_t v3 = *((void *)v1 + 5);
      if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)v1 + 96) & 0x10) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)v1 + 6);
      if (this)
      {
        if (*((unsigned char *)this + 40))
        {
          *((void *)this + 2) = 0;
          *((void *)this + 3) = 0;
          *((_DWORD *)this + 8) = 0;
        }
        uint64_t v4 = *((void *)this + 1);
        this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)this + 8);
        *((_DWORD *)this + 8) = 0;
        if (v4) {
          this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(this);
        }
      }
    }
    *((void *)v1 + 7) = 0;
    int v5 = *((_DWORD *)v1 + 24);
    if ((v5 & 0x40) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)v1 + 8);
      if (this)
      {
        this = sub_10007ABF4((uint64_t)this);
        int v5 = *((_DWORD *)v1 + 24);
      }
    }
    if ((v5 & 0x80) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)v1 + 9);
      if (this)
      {
        if (*((unsigned char *)this + 64))
        {
          *(_OWORD *)((char *)this + 44) = 0u;
          *((_OWORD *)this + 1) = 0u;
          *((_OWORD *)this + 2) = 0u;
        }
        uint64_t v6 = *((void *)this + 1);
        this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)this + 8);
        *((_DWORD *)this + 14) = 0;
        if (v6) {
          this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(this);
        }
      }
    }
  }
  int v7 = *((_DWORD *)v1 + 24);
  if ((v7 & 0xFF00) != 0)
  {
    if ((v7 & 0x100) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)v1 + 10);
      if (this)
      {
        if (*((unsigned char *)this + 52))
        {
          *((_OWORD *)this + 1) = 0u;
          *((_OWORD *)this + 2) = 0u;
        }
        uint64_t v8 = *((void *)this + 1);
        this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)this + 8);
        *((_DWORD *)this + 11) = 0;
        if (v8) {
          this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(this);
        }
      }
    }
    *((unsigned char *)v1 + 88) = 0;
  }
  uint64_t v10 = *((void *)v1 + 1);
  uint64_t v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v9 + 22) = 0;
  if (v10)
  {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v9);
  }
  return this;
}

uint64_t sub_10007D97C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    int v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 < *((void *)this + 2) && (*v7 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_39;
        }
        *(void *)uint64_t v72 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v72) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v72;
        }
        *(_DWORD *)(a1 + 96) |= 1u;
        uint64_t v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 17) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_39;
        }
LABEL_15:
        *(void *)uint64_t v72 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v72) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v72;
        }
        int v11 = *(_DWORD *)(a1 + 96) | 2;
        *(_DWORD *)(a1 + 96) = v11;
        char v12 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 != 26) {
          continue;
        }
        *((void *)this + 1) = v12 + 1;
LABEL_21:
        *(_DWORD *)(a1 + 96) = v11 | 4;
        uint64_t v13 = *(void *)(a1 + 32);
        if (!v13) {
          operator new();
        }
        v72[0] = 0;
        uint64_t v14 = (char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v72))return 0; {
        }
          }
        else
        {
          v72[0] = *v14;
          *((void *)this + 1) = v14 + 1;
        }
        int v18 = *((_DWORD *)this + 14);
        int v19 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v18 + 1;
        if (v18 >= v19) {
          return 0;
        }
        int v20 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v72[0]);
        if (!sub_10007B63C(v13, this, v21, v22) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v20);
        int v23 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v23, 1);
        int v25 = v23 - 1;
        if (v25 < 0 == v24) {
          *((_DWORD *)this + 14) = v25;
        }
        uint64_t v26 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v26 >= *((void *)this + 2) || *v26 != 34) {
          continue;
        }
        *((void *)this + 1) = v26 + 1;
LABEL_52:
        *(_DWORD *)(a1 + 96) |= 8u;
        if (*(_UNKNOWN **)(a1 + 40) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
        if (!result) {
          return result;
        }
        int v28 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 != 42) {
          continue;
        }
        *((void *)this + 1) = v28 + 1;
LABEL_58:
        *(_DWORD *)(a1 + 96) |= 0x10u;
        uint64_t v29 = *(void *)(a1 + 48);
        if (!v29) {
          operator new();
        }
        v72[0] = 0;
        uint64_t v30 = (char *)*((void *)this + 1);
        if ((unint64_t)v30 >= *((void *)this + 2) || *v30 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v72))return 0; {
        }
          }
        else
        {
          v72[0] = *v30;
          *((void *)this + 1) = v30 + 1;
        }
        int v31 = *((_DWORD *)this + 14);
        int v32 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v31 + 1;
        if (v31 >= v32) {
          return 0;
        }
        int v33 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v72[0]);
        if (!sub_10007C0B4(v29, this, v34, v35) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v33);
        int v36 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v36, 1);
        int v37 = v36 - 1;
        if (v37 < 0 == v24) {
          *((_DWORD *)this + 14) = v37;
        }
        unsigned int v38 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v38 >= *((void *)this + 2) || *v38 != 49) {
          continue;
        }
        *((void *)this + 1) = v38 + 1;
LABEL_72:
        *(void *)uint64_t v72 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v72) & 1) == 0)return 0; {
        *(void *)(a1 + 56) = *(void *)v72;
        }
        int v15 = *(_DWORD *)(a1 + 96) | 0x20;
        *(_DWORD *)(a1 + 96) = v15;
        int v39 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v39 >= *((void *)this + 2) || *v39 != 58) {
          continue;
        }
        *((void *)this + 1) = v39 + 1;
LABEL_76:
        *(_DWORD *)(a1 + 96) = v15 | 0x40;
        uint64_t v40 = *(void *)(a1 + 64);
        if (!v40) {
          operator new();
        }
        v72[0] = 0;
        unsigned int v41 = (char *)*((void *)this + 1);
        if ((unint64_t)v41 >= *((void *)this + 2) || *v41 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v72))return 0; {
        }
          }
        else
        {
          v72[0] = *v41;
          *((void *)this + 1) = v41 + 1;
        }
        int v42 = *((_DWORD *)this + 14);
        int v43 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v42 + 1;
        if (v42 >= v43) {
          return 0;
        }
        int v44 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v72[0]);
        if (!sub_10007AC18(v40, this, v45, v46) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v44);
        int v47 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v47, 1);
        int v48 = v47 - 1;
        if (v48 < 0 == v24) {
          *((_DWORD *)this + 14) = v48;
        }
        int v49 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v49 >= *((void *)this + 2) || *v49 != 66) {
          continue;
        }
        *((void *)this + 1) = v49 + 1;
LABEL_90:
        *(_DWORD *)(a1 + 96) |= 0x80u;
        uint64_t v50 = *(void *)(a1 + 72);
        if (!v50) {
          operator new();
        }
        v72[0] = 0;
        int v51 = (char *)*((void *)this + 1);
        if ((unint64_t)v51 >= *((void *)this + 2) || *v51 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v72))return 0; {
        }
          }
        else
        {
          v72[0] = *v51;
          *((void *)this + 1) = v51 + 1;
        }
        int v52 = *((_DWORD *)this + 14);
        int v53 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v52 + 1;
        if (v52 >= v53) {
          return 0;
        }
        int v54 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v72[0]);
        if (!sub_100079FF8(v50, this, v55, v56) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v54);
        int v57 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v57, 1);
        int v58 = v57 - 1;
        if (v58 < 0 == v24) {
          *((_DWORD *)this + 14) = v58;
        }
        unsigned int v59 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v59 >= *((void *)this + 2) || *v59 != 74) {
          continue;
        }
        *((void *)this + 1) = v59 + 1;
LABEL_104:
        *(_DWORD *)(a1 + 96) |= 0x100u;
        uint64_t v60 = *(void *)(a1 + 80);
        if (!v60) {
          operator new();
        }
        v72[0] = 0;
        uint64_t v61 = (char *)*((void *)this + 1);
        if ((unint64_t)v61 >= *((void *)this + 2) || *v61 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v72))return 0; {
        }
          }
        else
        {
          v72[0] = *v61;
          *((void *)this + 1) = v61 + 1;
        }
        int v62 = *((_DWORD *)this + 14);
        int v63 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v62 + 1;
        if (v62 >= v63) {
          return 0;
        }
        int v64 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v72[0]);
        if (!sub_10007CA20(v60, this, v65, v66) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v64);
        int v67 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v67, 1);
        int v68 = v67 - 1;
        if (v68 < 0 == v24) {
          *((_DWORD *)this + 14) = v68;
        }
        unint64_t v69 = (unsigned char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v69 < v16 && *v69 == 80)
        {
          uint64_t v17 = v69 + 1;
          *((void *)this + 1) = v17;
LABEL_118:
          v72[0] = 0;
          if ((unint64_t)v17 >= v16 || *v17 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v72);
            if (!result) {
              return result;
            }
            unsigned int v70 = v72[0];
            int v71 = (unsigned __int8 *)*((void *)this + 1);
            unint64_t v16 = *((void *)this + 2);
          }
          else
          {
            unsigned int v70 = *v17;
            int v71 = (unsigned __int8 *)(v17 + 1);
            *((void *)this + 1) = v71;
          }
          *(unsigned char *)(a1 + 88) = v70 != 0;
          *(_DWORD *)(a1 + 96) |= 0x200u;
          if (v71 == (unsigned __int8 *)v16
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
        }
        break;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_39;
        }
        int v11 = *(_DWORD *)(a1 + 96);
        goto LABEL_21;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_52;
        }
        goto LABEL_39;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_58;
        }
        goto LABEL_39;
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_72;
        }
        goto LABEL_39;
      case 7u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_39;
        }
        int v15 = *(_DWORD *)(a1 + 96);
        goto LABEL_76;
      case 8u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_90;
        }
        goto LABEL_39;
      case 9u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_104;
        }
        goto LABEL_39;
      case 0xAu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_39;
        }
        uint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_118;
      default:
        int v9 = TagFallback & 7;
LABEL_39:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_10007E164()
{
}

uint64_t sub_10007E200(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 96);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    int v6 = *(_DWORD *)(v5 + 96);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_23;
  }
LABEL_20:
  uint64_t v10 = *(void *)(v5 + 32);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_1008ABF10 + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_27;
  }
LABEL_24:
  uint64_t v11 = *(void *)(v5 + 48);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_1008ABF10 + 48);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v11, a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_31;
  }
LABEL_28:
  uint64_t v12 = *(void *)(v5 + 64);
  if (!v12) {
    uint64_t v12 = *(void *)(qword_1008ABF10 + 64);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v12, a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
LABEL_34:
    uint64_t v14 = *(void *)(v5 + 80);
    if (!v14) {
      uint64_t v14 = *(void *)(qword_1008ABF10 + 80);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v14, a2, a4);
    if ((*(_DWORD *)(v5 + 96) & 0x200) != 0) {
      goto LABEL_11;
    }
    goto LABEL_12;
  }
LABEL_31:
  uint64_t v13 = *(void *)(v5 + 72);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_1008ABF10 + 72);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v13, a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x100) != 0) {
    goto LABEL_34;
  }
LABEL_10:
  if ((v6 & 0x200) != 0) {
LABEL_11:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned __int8 *)(v5 + 88), (BOOL)a2, a4);
LABEL_12:
  int v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10007E3C4(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 24);
  if (v6)
  {
    uint64_t v12 = *((void *)this + 2);
    *(unsigned char *)a2 = 9;
    *(void *)((char *)a2 + 1) = v12;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
    int v6 = *((_DWORD *)this + 24);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v13 = *((void *)this + 3);
  *(unsigned char *)uint64_t v4 = 17;
  *(void *)((char *)v4 + 1) = v13;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v6 = *((_DWORD *)this + 24);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_26;
  }
LABEL_20:
  uint64_t v14 = (unsigned int *)*((void *)this + 4);
  if (!v14) {
    uint64_t v14 = *(unsigned int **)(qword_1008ABF10 + 32);
  }
  *(unsigned char *)uint64_t v4 = 26;
  int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14[8];
  if (v15 > 0x7F)
  {
    unint64_t v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v15;
    unint64_t v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  uint64_t v4 = sub_10007B9E8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v14, v16, a3);
  int v6 = *((_DWORD *)this + 24);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_39;
  }
LABEL_26:
  uint64_t v17 = *((void *)this + 5);
  *(unsigned char *)uint64_t v4 = 34;
  if (*(char *)(v17 + 23) < 0) {
    int v18 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v17 + 8);
  }
  else {
    int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v17 + 23);
  }
  if (v18 > 0x7F)
  {
    int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v18;
    int v19 = v4 + 2;
  }
  int v20 = *(char *)(v17 + 23);
  if (v20 >= 0) {
    uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17;
  }
  else {
    uint64_t v21 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v17;
  }
  if (v20 >= 0) {
    int v22 = (const void *)*(unsigned __int8 *)(v17 + 23);
  }
  else {
    int v22 = (const void *)*(unsigned int *)(v17 + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v21, v22, v19, a4);
  int v6 = *((_DWORD *)this + 24);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_45;
  }
LABEL_39:
  int v23 = (unsigned int *)*((void *)this + 6);
  if (!v23) {
    int v23 = *(unsigned int **)(qword_1008ABF10 + 48);
  }
  *(unsigned char *)uint64_t v4 = 42;
  BOOL v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v23[9];
  if (v24 > 0x7F)
  {
    uint64_t v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v24, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v24;
    uint64_t v25 = (uint64_t)v4 + 2;
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10007C358((wireless_diagnostics::google::protobuf::internal::WireFormat *)v23, v25, a3);
  int v6 = *((_DWORD *)this + 24);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t v26 = *((void *)this + 7);
  *(unsigned char *)uint64_t v4 = 49;
  *(void *)((char *)v4 + 1) = v26;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v6 = *((_DWORD *)this + 24);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_52;
  }
LABEL_46:
  unint64_t v27 = (unsigned int *)*((void *)this + 8);
  if (!v27) {
    unint64_t v27 = *(unsigned int **)(qword_1008ABF10 + 64);
  }
  *(unsigned char *)uint64_t v4 = 58;
  int v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v27[7];
  if (v28 > 0x7F)
  {
    uint64_t v29 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v28, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v28;
    uint64_t v29 = (char *)v4 + 2;
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10007AE58((wireless_diagnostics::google::protobuf::internal::WireFormat *)v27, v29, a3);
  int v6 = *((_DWORD *)this + 24);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
LABEL_58:
    uint64_t v33 = *((void *)this + 10);
    if (!v33) {
      uint64_t v33 = *(void *)(qword_1008ABF10 + 80);
    }
    *(unsigned char *)uint64_t v4 = 74;
    uint64_t v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v33 + 48);
    if (v34 > 0x7F)
    {
      uint64_t v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v34, (int)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v34;
      uint64_t v35 = (uint64_t)v4 + 2;
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10007CD44(v33, v35, a3);
    if ((*((_DWORD *)this + 24) & 0x200) != 0) {
      goto LABEL_11;
    }
    goto LABEL_12;
  }
LABEL_52:
  uint64_t v30 = (unsigned int *)*((void *)this + 9);
  if (!v30) {
    uint64_t v30 = *(unsigned int **)(qword_1008ABF10 + 72);
  }
  *(unsigned char *)uint64_t v4 = 66;
  int v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v30[15];
  if (v31 > 0x7F)
  {
    int v32 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v31, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v31;
    int v32 = (char *)v4 + 2;
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10007A444((wireless_diagnostics::google::protobuf::internal::WireFormat *)v30, v32, a3);
  int v6 = *((_DWORD *)this + 24);
  if ((v6 & 0x100) != 0) {
    goto LABEL_58;
  }
LABEL_10:
  if ((v6 & 0x200) != 0)
  {
LABEL_11:
    char v7 = *((unsigned char *)this + 88);
    *(unsigned char *)uint64_t v4 = 80;
    *((unsigned char *)v4 + 1) = v7;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
LABEL_12:
  uint64_t v10 = (void *)*((void *)this + 1);
  int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v8 = v10;
  if (!v10 || *v8 == v8[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v9, v4, a3);
}

uint64_t sub_10007E774(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 96);
  if (!(_BYTE)v3)
  {
    uint64_t v5 = 0;
    goto LABEL_48;
  }
  if ((v3 & 2) != 0) {
    unsigned int v4 = ((v3 << 31 >> 31) & 9) + 9;
  }
  else {
    unsigned int v4 = (v3 << 31 >> 31) & 9;
  }
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_7;
    }
LABEL_16:
    uint64_t v10 = *(void *)(a1 + 40);
    int v11 = *(unsigned __int8 *)(v10 + 23);
    char v12 = v11;
    uint64_t v13 = *(void *)(v10 + 8);
    if ((v11 & 0x80u) == 0) {
      unint64_t v14 = *(unsigned __int8 *)(v10 + 23);
    }
    else {
      unint64_t v14 = v13;
    }
    if (v14 >= 0x80)
    {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14, a2);
      int v11 = *(unsigned __int8 *)(v10 + 23);
      uint64_t v13 = *(void *)(v10 + 8);
      int v3 = *(_DWORD *)(a1 + 96);
      char v12 = *(unsigned char *)(v10 + 23);
    }
    else
    {
      int v15 = 1;
    }
    if (v12 < 0) {
      int v11 = v13;
    }
    v4 += v15 + v11 + 1;
    if ((v3 & 0x10) == 0) {
      goto LABEL_31;
    }
    goto LABEL_25;
  }
  uint64_t v6 = *(void *)(a1 + 32);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_1008ABF10 + 32);
  }
  char v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10007BAF0(v6, a2);
  int v8 = (int)v7;
  if (v7 >= 0x80) {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
  }
  else {
    int v9 = 1;
  }
  v4 += v8 + v9 + 1;
  int v3 = *(_DWORD *)(a1 + 96);
  if ((v3 & 8) != 0) {
    goto LABEL_16;
  }
LABEL_7:
  if ((v3 & 0x10) != 0)
  {
LABEL_25:
    uint64_t v16 = *(void *)(a1 + 48);
    if (!v16) {
      uint64_t v16 = *(void *)(qword_1008ABF10 + 48);
    }
    uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10007C49C(v16, a2);
    int v18 = (int)v17;
    if (v17 >= 0x80) {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2);
    }
    else {
      int v19 = 1;
    }
    v4 += v18 + v19 + 1;
    int v3 = *(_DWORD *)(a1 + 96);
  }
LABEL_31:
  if ((v3 & 0x20) != 0) {
    uint64_t v5 = v4 + 9;
  }
  else {
    uint64_t v5 = v4;
  }
  if ((v3 & 0x40) != 0)
  {
    uint64_t v20 = *(void *)(a1 + 64);
    if (!v20) {
      uint64_t v20 = *(void *)(qword_1008ABF10 + 64);
    }
    uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10007AF4C(v20, a2);
    int v22 = (int)v21;
    if (v21 >= 0x80) {
      int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2);
    }
    else {
      int v23 = 1;
    }
    uint64_t v5 = (v5 + v22 + v23 + 1);
    int v3 = *(_DWORD *)(a1 + 96);
  }
  if ((v3 & 0x80) != 0)
  {
    uint64_t v24 = *(void *)(a1 + 72);
    if (!v24) {
      uint64_t v24 = *(void *)(qword_1008ABF10 + 72);
    }
    uint64_t v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10007A69C(v24, a2);
    int v26 = (int)v25;
    if (v25 >= 0x80) {
      int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2);
    }
    else {
      int v27 = 1;
    }
    uint64_t v5 = (v5 + v26 + v27 + 1);
    int v3 = *(_DWORD *)(a1 + 96);
  }
LABEL_48:
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      uint64_t v28 = *(void *)(a1 + 80);
      if (!v28) {
        uint64_t v28 = *(void *)(qword_1008ABF10 + 80);
      }
      uint64_t v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10007CEC4(v28, a2);
      int v30 = (int)v29;
      if (v29 >= 0x80) {
        int v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29, a2);
      }
      else {
        int v31 = 1;
      }
      LODWORD(v5) = v5 + v30 + v31 + 1;
      int v3 = *(_DWORD *)(a1 + 96);
    }
    if ((v3 & 0x200) != 0) {
      uint64_t v5 = (v5 + 2);
    }
    else {
      uint64_t v5 = v5;
    }
  }
  int v32 = *(void **)(a1 + 8);
  if (v32 && *v32 != v32[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 92) = v5;
  return v5;
}

uint64_t sub_10007E9DC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10007D1EC((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10007EAB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10007EAC8(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10007EB54()
{
  return 1;
}

uint64_t sub_10007EB5C()
{
  uint64_t v0 = qword_1008A09B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006F9E0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A0938;
}

void sub_10007EBF0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10007EC04(uint64_t a1)
{
  *(void *)a1 = off_100849548;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(void *)(a1 + 112) = 0;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  return a1;
}

void sub_10007EC68(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10007EC7C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  int v4 = *(_DWORD *)(a2 + 116);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v5 = *(void *)(a2 + 16);
      *(_DWORD *)(a1 + 116) |= 1u;
      *(void *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 116);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_15;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v6 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 116) |= 2u;
    *(void *)(a1 + 24) = v6;
    int v4 = *(_DWORD *)(a2 + 116);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_16;
    }
LABEL_15:
    uint64_t v7 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 116) |= 4u;
    *(void *)(a1 + 32) = v7;
    int v4 = *(_DWORD *)(a2 + 116);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_17;
    }
LABEL_16:
    uint64_t v8 = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 116) |= 8u;
    *(void *)(a1 + 40) = v8;
    int v4 = *(_DWORD *)(a2 + 116);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_18;
    }
LABEL_17:
    uint64_t v9 = *(void *)(a2 + 48);
    *(_DWORD *)(a1 + 116) |= 0x10u;
    *(void *)(a1 + 48) = v9;
    int v4 = *(_DWORD *)(a2 + 116);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0) {
        goto LABEL_11;
      }
      goto LABEL_19;
    }
LABEL_18:
    uint64_t v10 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 116) |= 0x20u;
    *(void *)(a1 + 56) = v10;
    int v4 = *(_DWORD *)(a2 + 116);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_23;
      }
      goto LABEL_20;
    }
LABEL_19:
    uint64_t v11 = *(void *)(a2 + 64);
    *(_DWORD *)(a1 + 116) |= 0x40u;
    *(void *)(a1 + 64) = v11;
    int v4 = *(_DWORD *)(a2 + 116);
    if ((v4 & 0x80) == 0) {
      goto LABEL_23;
    }
LABEL_20:
    char v12 = *(const std::string **)(a2 + 72);
    *(_DWORD *)(a1 + 116) |= 0x80u;
    uint64_t v13 = *(std::string **)(a1 + 72);
    if (v13 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v13, v12);
    int v4 = *(_DWORD *)(a2 + 116);
  }
LABEL_23:
  if ((v4 & 0xFF00) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v4 & 0x100) != 0)
  {
    uint64_t v16 = *(void *)(a2 + 80);
    *(_DWORD *)(a1 + 116) |= 0x100u;
    *(void *)(a1 + 80) = v16;
    int v4 = *(_DWORD *)(a2 + 116);
    if ((v4 & 0x200) == 0)
    {
LABEL_26:
      if ((v4 & 0x400) == 0) {
        goto LABEL_27;
      }
LABEL_32:
      uint64_t v18 = *(void *)(a2 + 96);
      *(_DWORD *)(a1 + 116) |= 0x400u;
      *(void *)(a1 + 96) = v18;
      if ((*(_DWORD *)(a2 + 116) & 0x800) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
      goto LABEL_28;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_26;
  }
  uint64_t v17 = *(void *)(a2 + 88);
  *(_DWORD *)(a1 + 116) |= 0x200u;
  *(void *)(a1 + 88) = v17;
  int v4 = *(_DWORD *)(a2 + 116);
  if ((v4 & 0x400) != 0) {
    goto LABEL_32;
  }
LABEL_27:
  if ((v4 & 0x800) != 0)
  {
LABEL_28:
    uint64_t v14 = *(void *)(a2 + 104);
    *(_DWORD *)(a1 + 116) |= 0x800u;
    *(void *)(a1 + 104) = v14;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10007EECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10007EEE4(wireless_diagnostics::google::protobuf::Message *a1)
{
  *(void *)a1 = off_100849548;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::Message *)((char *)a1 + 8);
  sub_10007EF44((uint64_t)a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message(a1);
}

uint64_t sub_10007EF44(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 72);
  if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  return result;
}

void sub_10007EFBC(wireless_diagnostics::google::protobuf::Message *a1)
{
  sub_10007EEE4(a1);

  operator delete();
}

uint64_t sub_10007EFF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 112) = a2;
  return result;
}

void sub_10007EFFC()
{
}

void sub_10007F03C()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10007F060(uint64_t a1)
{
  char v1 = *(unsigned char *)(a1 + 116);
  if (v1)
  {
    *(void *)(a1 + 64) = 0;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    if (v1 < 0)
    {
      uint64_t v2 = *(void *)(a1 + 72);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
  }
  if (*(unsigned char *)(a1 + 117))
  {
    *(_OWORD *)(a1 + 80) = 0u;
    *(_OWORD *)(a1 + 96) = 0u;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 27) = 0;
  if (v4) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10007F0D4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_73;
        }
        unint64_t v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v23) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v23;
        *(_DWORD *)(a1 + 116) |= 1u;
        uint64_t v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 17) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_73;
        }
LABEL_15:
        unint64_t v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v23) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 24) = v23;
        *(_DWORD *)(a1 + 116) |= 2u;
        uint64_t v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 25) {
          continue;
        }
        *((void *)this + 1) = v11 + 1;
LABEL_20:
        unint64_t v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v23) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 32) = v23;
        *(_DWORD *)(a1 + 116) |= 4u;
        char v12 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 != 33) {
          continue;
        }
        *((void *)this + 1) = v12 + 1;
LABEL_25:
        unint64_t v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v23) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 40) = v23;
        *(_DWORD *)(a1 + 116) |= 8u;
        uint64_t v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 != 41) {
          continue;
        }
        *((void *)this + 1) = v13 + 1;
LABEL_30:
        unint64_t v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v23) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 48) = v23;
        *(_DWORD *)(a1 + 116) |= 0x10u;
        uint64_t v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 != 49) {
          continue;
        }
        *((void *)this + 1) = v14 + 1;
LABEL_35:
        unint64_t v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v23) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 56) = v23;
        *(_DWORD *)(a1 + 116) |= 0x20u;
        int v15 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 != 57) {
          continue;
        }
        *((void *)this + 1) = v15 + 1;
LABEL_40:
        unint64_t v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v23) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 64) = v23;
        int v16 = *(_DWORD *)(a1 + 116) | 0x40;
        *(_DWORD *)(a1 + 116) = v16;
        uint64_t v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 66) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
LABEL_46:
        *(_DWORD *)(a1 + 116) = v16 | 0x80;
        if (*(_UNKNOWN **)(a1 + 72) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
        if (!result) {
          return result;
        }
        int v19 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 != 73) {
          continue;
        }
        *((void *)this + 1) = v19 + 1;
LABEL_53:
        unint64_t v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v23) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 80) = v23;
        *(_DWORD *)(a1 + 116) |= 0x100u;
        uint64_t v20 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 != 81) {
          continue;
        }
        *((void *)this + 1) = v20 + 1;
LABEL_58:
        unint64_t v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v23) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 88) = v23;
        *(_DWORD *)(a1 + 116) |= 0x200u;
        uint64_t v21 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 != 89) {
          continue;
        }
        *((void *)this + 1) = v21 + 1;
LABEL_63:
        unint64_t v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v23) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 96) = v23;
        *(_DWORD *)(a1 + 116) |= 0x400u;
        int v22 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 != 97) {
          continue;
        }
        *((void *)this + 1) = v22 + 1;
LABEL_68:
        unint64_t v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v23) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 104) = v23;
        *(_DWORD *)(a1 + 116) |= 0x800u;
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_20;
        }
        goto LABEL_73;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_25;
        }
        goto LABEL_73;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_30;
        }
        goto LABEL_73;
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_35;
        }
        goto LABEL_73;
      case 7u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_40;
        }
        goto LABEL_73;
      case 8u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_73;
        }
        int v16 = *(_DWORD *)(a1 + 116);
        goto LABEL_46;
      case 9u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_53;
        }
        goto LABEL_73;
      case 0xAu:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_58;
        }
        goto LABEL_73;
      case 0xBu:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_63;
        }
        goto LABEL_73;
      case 0xCu:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_68;
        }
        goto LABEL_73;
      default:
        int v9 = TagFallback & 7;
LABEL_73:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
    return result;
  }
}

uint64_t sub_10007F638(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 116);
  if (v5)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    int v5 = *(_DWORD *)(v4 + 116);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_22;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  int v5 = *(_DWORD *)(v4 + 116);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v4 + 32), a3);
  int v5 = *(_DWORD *)(v4 + 116);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v4 + 40), a3);
  int v5 = *(_DWORD *)(v4 + 116);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v4 + 48), a3);
  int v5 = *(_DWORD *)(v4 + 116);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v4 + 56), a3);
  int v5 = *(_DWORD *)(v4 + 116);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v4 + 64), a3);
  int v5 = *(_DWORD *)(v4 + 116);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  int v5 = *(_DWORD *)(v4 + 116);
  if ((v5 & 0x100) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(double *)(v4 + 80), a3);
  int v5 = *(_DWORD *)(v4 + 116);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
LABEL_30:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (int)a2, *(double *)(v4 + 96), a3);
    if ((*(_DWORD *)(v4 + 116) & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (int)a2, *(double *)(v4 + 88), a3);
  int v5 = *(_DWORD *)(v4 + 116);
  if ((v5 & 0x400) != 0) {
    goto LABEL_30;
  }
LABEL_12:
  if ((v5 & 0x800) != 0) {
LABEL_13:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (int)a2, *(double *)(v4 + 104), a3);
LABEL_14:
  uint64_t v8 = *(void **)(v4 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v8;
  if (v8 && *v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

uint64_t sub_10007F7E4(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  int v5 = *((_DWORD *)this + 29);
  if (v5)
  {
    uint64_t v11 = *((void *)this + 2);
    *(unsigned char *)a2 = 9;
    *(void *)(a2 + 1) = v11;
    a2 += 9;
    int v5 = *((_DWORD *)this + 29);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_22;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v12 = *((void *)this + 3);
  *(unsigned char *)a2 = 17;
  *(void *)(a2 + 1) = v12;
  a2 += 9;
  int v5 = *((_DWORD *)this + 29);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t v13 = *((void *)this + 4);
  *(unsigned char *)a2 = 25;
  *(void *)(a2 + 1) = v13;
  a2 += 9;
  int v5 = *((_DWORD *)this + 29);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v14 = *((void *)this + 5);
  *(unsigned char *)a2 = 33;
  *(void *)(a2 + 1) = v14;
  a2 += 9;
  int v5 = *((_DWORD *)this + 29);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t v15 = *((void *)this + 6);
  *(unsigned char *)a2 = 41;
  *(void *)(a2 + 1) = v15;
  a2 += 9;
  int v5 = *((_DWORD *)this + 29);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t v16 = *((void *)this + 7);
  *(unsigned char *)a2 = 49;
  *(void *)(a2 + 1) = v16;
  a2 += 9;
  int v5 = *((_DWORD *)this + 29);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v17 = *((void *)this + 8);
  *(unsigned char *)a2 = 57;
  *(void *)(a2 + 1) = v17;
  a2 += 9;
  int v5 = *((_DWORD *)this + 29);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_40;
  }
LABEL_27:
  uint64_t v18 = *((void *)this + 9);
  *(unsigned char *)a2 = 66;
  if (*(char *)(v18 + 23) < 0) {
    int v19 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v18 + 8);
  }
  else {
    int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v18 + 23);
  }
  if (v19 > 0x7F)
  {
    int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v19, (int)a2 + 1, a3);
  }
  else
  {
    *(unsigned char *)(a2 + 1) = (_BYTE)v19;
    int v20 = a2 + 2;
  }
  int v21 = *(char *)(v18 + 23);
  if (v21 >= 0) {
    int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v18;
  }
  else {
    int v22 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v18;
  }
  if (v21 >= 0) {
    unint64_t v23 = (const void *)*(unsigned __int8 *)(v18 + 23);
  }
  else {
    unint64_t v23 = (const void *)*(unsigned int *)(v18 + 8);
  }
  a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v22, v23, v20, a4);
  int v5 = *((_DWORD *)this + 29);
  if ((v5 & 0x100) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t v24 = *((void *)this + 10);
  *(unsigned char *)a2 = 73;
  *(void *)(a2 + 1) = v24;
  a2 += 9;
  int v5 = *((_DWORD *)this + 29);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
LABEL_42:
    uint64_t v26 = *((void *)this + 12);
    *(unsigned char *)a2 = 89;
    *(void *)(a2 + 1) = v26;
    a2 += 9;
    if ((*((_DWORD *)this + 29) & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_41:
  uint64_t v25 = *((void *)this + 11);
  *(unsigned char *)a2 = 81;
  *(void *)(a2 + 1) = v25;
  a2 += 9;
  int v5 = *((_DWORD *)this + 29);
  if ((v5 & 0x400) != 0) {
    goto LABEL_42;
  }
LABEL_12:
  if ((v5 & 0x800) != 0)
  {
LABEL_13:
    uint64_t v6 = *((void *)this + 13);
    *(unsigned char *)a2 = 97;
    *(void *)(a2 + 1) = v6;
    a2 += 9;
  }
LABEL_14:
  int v9 = (void *)*((void *)this + 1);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v7 = v9;
  if (!v9 || *v7 == v7[1]) {
    return a2;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v8, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_10007FC78(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 116);
  if ((_BYTE)v3)
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x40) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 0x80) != 0)
    {
      uint64_t v6 = *(void *)(a1 + 72);
      int v7 = *(unsigned __int8 *)(v6 + 23);
      char v8 = v7;
      uint64_t v9 = *(void *)(v6 + 8);
      if ((v7 & 0x80u) == 0) {
        unint64_t v10 = *(unsigned __int8 *)(v6 + 23);
      }
      else {
        unint64_t v10 = v9;
      }
      if (v10 >= 0x80)
      {
        int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10, a2);
        int v7 = *(unsigned __int8 *)(v6 + 23);
        uint64_t v9 = *(void *)(v6 + 8);
        int v3 = *(_DWORD *)(a1 + 116);
        char v8 = *(unsigned char *)(v6 + 23);
      }
      else
      {
        int v11 = 1;
      }
      if (v8 < 0) {
        int v7 = v9;
      }
      uint64_t v5 = (v5 + v11 + v7 + 1);
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  if ((v3 & 0xFF00) != 0)
  {
    unsigned int v12 = v5 + 9;
    if ((v3 & 0x100) == 0) {
      unsigned int v12 = v5;
    }
    if ((v3 & 0x200) != 0) {
      v12 += 9;
    }
    if ((v3 & 0x400) != 0) {
      v12 += 9;
    }
    if ((v3 & 0x800) != 0) {
      uint64_t v5 = v12 + 9;
    }
    else {
      uint64_t v5 = v12;
    }
  }
  uint64_t v13 = *(void **)(a1 + 8);
  if (v13 && *v13 != v13[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 112) = v5;
  return v5;
}

uint64_t sub_10007FDC0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10007EC7C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10007FE94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10007FEAC(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10007FF38()
{
  return 1;
}

uint64_t sub_10007FF40()
{
  uint64_t v0 = qword_1008A09B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006F9E0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A0948;
}

void sub_10007FFD4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_10007FFE8(void *a1)
{
  *a1 = off_1008495F8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  a1[4] = 0;
  return a1;
}

void sub_100080044(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100080058(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      int v5 = *(_DWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(_DWORD *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 36);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
        }
LABEL_10:
        int v7 = *(const std::string **)(a2 + 24);
        *(_DWORD *)(a1 + 36) |= 4u;
        char v8 = *(std::string **)(a1 + 24);
        if (v8 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        std::string::operator=(v8, v7);
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
    }
    else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v6 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(_DWORD *)(a1 + 20) = v6;
    if ((*(_DWORD *)(a2 + 36) & 4) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_10;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10008017C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100080194(wireless_diagnostics::google::protobuf::Message *a1)
{
  *(void *)a1 = off_1008495F8;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::Message *)((char *)a1 + 8);
  sub_1000801F4((uint64_t)a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message(a1);
}

uint64_t sub_1000801F4(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  return result;
}

void sub_10008026C(wireless_diagnostics::google::protobuf::Message *a1)
{
  sub_100080194(a1);

  operator delete();
}

uint64_t sub_1000802A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_1000802AC()
{
}

void sub_1000802EC()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100080310(uint64_t a1)
{
  char v1 = *(unsigned char *)(a1 + 36);
  if (v1)
  {
    *(void *)(a1 + 16) = 0;
    if ((v1 & 4) != 0)
    {
      uint64_t v2 = *(void *)(a1 + 24);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
  }
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v4) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100080368(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (unsigned int *)(a1 + 16);
  int v7 = (unsigned int *)(a1 + 20);
  unsigned int v8 = a1 + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v9 = (char *)*((void *)this + 1);
          if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v9;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v9 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v11 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v12 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_19;
          }
          uint64_t v15 = (char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
          if ((unint64_t)v15 >= v14 || *v15 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
            if (!result) {
              return result;
            }
            uint64_t v16 = (unsigned char *)*((void *)this + 1);
            unint64_t v14 = *((void *)this + 2);
          }
          else
          {
            *int v6 = *v15;
            uint64_t v16 = v15 + 1;
            *((void *)this + 1) = v16;
          }
          *(_DWORD *)(a1 + 36) |= 1u;
          if ((unint64_t)v16 < v14 && *v16 == 16)
          {
            uint64_t v17 = v16 + 1;
            *((void *)this + 1) = v17;
            goto LABEL_27;
          }
        }
        if (v11 != 2) {
          break;
        }
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        uint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
LABEL_27:
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          uint64_t v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v17;
          uint64_t v18 = v17 + 1;
          *((void *)this + 1) = v18;
        }
        int v13 = *(_DWORD *)(a1 + 36) | 2;
        *(_DWORD *)(a1 + 36) = v13;
        if ((unint64_t)v18 < v14 && *v18 == 26)
        {
          *((void *)this + 1) = v18 + 1;
          goto LABEL_35;
        }
      }
      if (v11 != 3) {
        break;
      }
      int v12 = TagFallback & 7;
      if (v12 != 2) {
        goto LABEL_19;
      }
      int v13 = *(_DWORD *)(a1 + 36);
LABEL_35:
      *(_DWORD *)(a1 + 36) = v13 | 4;
      if (*(_UNKNOWN **)(a1 + 24) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
      if (!result) {
        return result;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v12 = TagFallback & 7;
LABEL_19:
    if (v12 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v8, a4) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1000805A4(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 36);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_12:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 20), a2, a4);
    if ((*(_DWORD *)(v5 + 36) & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 16), a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 2) != 0) {
    goto LABEL_12;
  }
LABEL_3:
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
LABEL_5:
  uint64_t v9 = *(void **)(v5 + 8);
  unsigned int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100080654(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  if (*((unsigned char *)this + 36))
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    *(unsigned char *)a2 = 8;
    unsigned int v7 = a2 + 1;
    if (v6 > 0x7F)
    {
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, v7, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v6;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
  }
  if ((*((unsigned char *)this + 36) & 2) != 0)
  {
    unsigned int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    *(unsigned char *)uint64_t v4 = 16;
    if (v8 > 0x7F)
    {
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v8;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
  }
  if ((*((unsigned char *)this + 36) & 4) != 0)
  {
    uint64_t v9 = *((void *)this + 3);
    *(unsigned char *)uint64_t v4 = 26;
    if (*(char *)(v9 + 23) < 0) {
      unint64_t v10 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v9 + 8);
    }
    else {
      unint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v9 + 23);
    }
    if (v10 > 0x7F)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, (int)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v10;
      int v11 = v4 + 2;
    }
    int v12 = *(char *)(v9 + 23);
    if (v12 >= 0) {
      int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9;
    }
    else {
      int v13 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v9;
    }
    if (v12 >= 0) {
      unint64_t v14 = (const void *)*(unsigned __int8 *)(v9 + 23);
    }
    else {
      unint64_t v14 = (const void *)*(unsigned int *)(v9 + 8);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v13, v14, v11, a4);
  }
  uint64_t v17 = (void *)*((void *)this + 1);
  uint64_t v16 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v15 = v17;
  if (!v17 || *v15 == v15[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v16, v4, a3);
}

uint64_t sub_100080788(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_24;
  }
  if (*(unsigned char *)(a1 + 36))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 36);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 36) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    uint64_t v8 = *(void *)(a1 + 24);
    int v9 = *(unsigned __int8 *)(v8 + 23);
    char v10 = v9;
    uint64_t v11 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      unint64_t v12 = *(unsigned __int8 *)(v8 + 23);
    }
    else {
      unint64_t v12 = v11;
    }
    if (v12 >= 0x80)
    {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v12, a2);
      int v9 = *(unsigned __int8 *)(v8 + 23);
      uint64_t v11 = *(void *)(v8 + 8);
      char v10 = *(unsigned char *)(v8 + 23);
    }
    else
    {
      int v13 = 1;
    }
    if (v10 < 0) {
      int v9 = v11;
    }
    uint64_t v4 = (v4 + v13 + v9 + 1);
  }
LABEL_24:
  unint64_t v14 = *(void **)(a1 + 8);
  if (v14 && *v14 != v14[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

uint64_t sub_100080898(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100080058((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10008096C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100080984(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100080A10()
{
  return 1;
}

uint64_t sub_100080A18()
{
  uint64_t v0 = qword_1008A09B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006F9E0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A0958;
}

void sub_100080AAC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100080AC0(uint64_t a1)
{
  *(void *)a1 = off_1008496A8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  return a1;
}

void sub_100080B10(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100080B24(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), *(_DWORD *)(a2 + 24) + a1[6]);
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 16) + 8 * v4);
      int v6 = a1[7];
      uint64_t v7 = (int)a1[6];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[8])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), v6 + 1);
          int v6 = a1[7];
        }
        a1[7] = v6 + 1;
        sub_1000896A8();
      }
      uint64_t v8 = *((void *)a1 + 2);
      a1[6] = v7 + 1;
      sub_100080058(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 24));
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100080C58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100080C70(uint64_t *a1)
{
  *a1 = (uint64_t)off_1008496A8;
  sub_10006F938(a1 + 2);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100080CD4(uint64_t *a1)
{
  sub_100080C70(a1);

  operator delete();
}

uint64_t sub_100080D0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_100080D14()
{
}

void sub_100080D54()
{
}

uint64_t sub_100080D78(uint64_t a1)
{
  uint64_t result = sub_10006F8C8(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 8);
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)v3 + 9) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return result;
}

uint64_t sub_100080DCC(int *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4);
  unsigned int v7 = a1 + 8;
  while (1)
  {
LABEL_2:
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
    }
    if (TagFallback == 10)
    {
      while (1)
      {
        int v10 = a1[7];
        uint64_t v11 = a1[6];
        if ((int)v11 >= v10)
        {
          if (v10 == a1[8])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v10 + 1);
            int v10 = a1[7];
          }
          a1[7] = v10 + 1;
          sub_1000896A8();
        }
        uint64_t v12 = *((void *)a1 + 2);
        a1[6] = v11 + 1;
        uint64_t v13 = *(void *)(v12 + 8 * v11);
        unsigned int v26 = 0;
        unint64_t v14 = (char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26))return 0; {
        }
          }
        else
        {
          unsigned int v26 = *v14;
          *((void *)this + 1) = v14 + 1;
        }
        int v15 = *((_DWORD *)this + 14);
        int v16 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v15 + 1;
        if (v15 >= v16) {
          return 0;
        }
        int v17 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v26);
        if (!sub_100080368(v13, this, v18, v19) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v17);
        int v20 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)this + 14) = v22;
        }
        unint64_t v23 = (unsigned char *)*((void *)this + 1);
        uint64_t v24 = (unsigned char *)*((void *)this + 2);
        if (v23 >= v24 || *v23 != 10)
        {
          if (v23 == v24 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((void *)this + 1) = v23 + 1;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_100080FC8(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(int *)(this + 24) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 16) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 24));
  }
  int v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100081064(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  if (*((int *)this + 6) >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      unsigned int v7 = *(unsigned int **)(*((void *)this + 2) + 8 * v6);
      *(unsigned char *)a2 = 10;
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7[8];
      if (v8 > 0x7F)
      {
        int v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)a2 + 1, a3);
      }
      else
      {
        *((unsigned char *)a2 + 1) = (_BYTE)v8;
        int v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      }
      a2 = sub_100080654((wireless_diagnostics::google::protobuf::internal::WireFormat *)v7, v9, a3, a4);
      ++v6;
    }
    while (v6 < *((int *)this + 6));
  }
  uint64_t v12 = (void *)*((void *)this + 1);
  uint64_t v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v10 = v12;
  if (!v12 || *v10 == v10[1]) {
    return a2;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v11, a2, a3);
}

uint64_t sub_100081130(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 24);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100080788(*(void *)(*(void *)(a1 + 16) + 8 * v4), a2);
      int v6 = (int)v5;
      if (v5 >= 0x80) {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
      }
      else {
        int v7 = 1;
      }
      uint64_t v3 = (v6 + v3 + v7);
      ++v4;
    }
    while (v4 < *(int *)(a1 + 24));
  }
  uint64_t v8 = *(void **)(a1 + 8);
  if (v8 && *v8 != v8[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  }
  *(_DWORD *)(a1 + 40) = v3;
  return v3;
}

uint64_t sub_1000811D0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100080B24(a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1000812A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000812BC(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100081348()
{
  return 1;
}

uint64_t sub_100081350()
{
  uint64_t v0 = qword_1008A09B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006F9E0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A0968;
}

void sub_1000813E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000813F8(uint64_t a1)
{
  *(void *)a1 = off_100849758;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return a1;
}

void sub_100081470(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100081484(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v100);
  }
  unsigned int v4 = *(_DWORD *)(a2 + 392);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 392) |= 1u;
      uint64_t v5 = *(void *)(a1 + 16);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 16);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_1008ABE98 + 16);
      }
      sub_100072448(v5, v6);
      unsigned int v4 = *(_DWORD *)(a2 + 392);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 392) |= 2u;
      uint64_t v7 = *(void *)(a1 + 24);
      if (!v7) {
        operator new();
      }
      uint64_t v8 = *(void *)(a2 + 24);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_1008ABE98 + 24);
      }
      sub_1000C6174(v7, v8);
      unsigned int v4 = *(_DWORD *)(a2 + 392);
    }
    if ((v4 & 4) != 0)
    {
      *(_DWORD *)(a1 + 392) |= 4u;
      uint64_t v9 = *(void *)(a1 + 32);
      if (!v9) {
        operator new();
      }
      uint64_t v10 = *(void *)(a2 + 32);
      if (!v10) {
        uint64_t v10 = *(void *)(qword_1008ABE98 + 32);
      }
      sub_1000C745C(v9, v10);
      unsigned int v4 = *(_DWORD *)(a2 + 392);
    }
    if ((v4 & 8) != 0)
    {
      *(_DWORD *)(a1 + 392) |= 8u;
      uint64_t v11 = *(void *)(a1 + 40);
      if (!v11) {
        operator new();
      }
      uint64_t v12 = *(void *)(a2 + 40);
      if (!v12) {
        uint64_t v12 = *(void *)(qword_1008ABE98 + 40);
      }
      sub_1000C7D64(v11, v12);
      unsigned int v4 = *(_DWORD *)(a2 + 392);
    }
    if ((v4 & 0x10) != 0)
    {
      *(_DWORD *)(a1 + 392) |= 0x10u;
      uint64_t v13 = *(void *)(a1 + 48);
      if (!v13) {
        operator new();
      }
      uint64_t v14 = *(void *)(a2 + 48);
      if (!v14) {
        uint64_t v14 = *(void *)(qword_1008ABE98 + 48);
      }
      sub_100135818(v13, v14);
      unsigned int v4 = *(_DWORD *)(a2 + 392);
    }
    if ((v4 & 0x20) != 0)
    {
      unsigned int v15 = *(_DWORD *)(a2 + 384);
      if (!sub_1000719F4(v15)) {
        sub_10040FD04();
      }
      *(_DWORD *)(a1 + 392) |= 0x20u;
      *(_DWORD *)(a1 + 384) = v15;
      unsigned int v4 = *(_DWORD *)(a2 + 392);
    }
    if ((v4 & 0x40) != 0)
    {
      *(_DWORD *)(a1 + 392) |= 0x40u;
      uint64_t v16 = *(void *)(a1 + 56);
      if (!v16) {
        operator new();
      }
      uint64_t v17 = *(void *)(a2 + 56);
      if (!v17) {
        uint64_t v17 = *(void *)(qword_1008ABE98 + 56);
      }
      sub_100072FCC(v16, v17);
      unsigned int v4 = *(_DWORD *)(a2 + 392);
    }
    if ((v4 & 0x80) != 0)
    {
      *(_DWORD *)(a1 + 392) |= 0x80u;
      uint64_t v18 = *(_DWORD **)(a1 + 64);
      if (!v18) {
        operator new();
      }
      uint64_t v19 = *(void *)(a2 + 64);
      if (!v19) {
        uint64_t v19 = *(void *)(qword_1008ABE98 + 64);
      }
      sub_1000748EC(v18, v19);
      unsigned int v4 = *(_DWORD *)(a2 + 392);
    }
  }
  if ((v4 & 0xFF00) != 0)
  {
    if ((v4 & 0x100) != 0)
    {
      *(_DWORD *)(a1 + 392) |= 0x100u;
      uint64_t v20 = *(void *)(a1 + 72);
      if (!v20) {
        operator new();
      }
      uint64_t v21 = *(void *)(a2 + 72);
      if (!v21) {
        uint64_t v21 = *(void *)(qword_1008ABE98 + 72);
      }
      sub_100075990(v20, v21);
      unsigned int v4 = *(_DWORD *)(a2 + 392);
    }
    if ((v4 & 0x200) != 0)
    {
      *(_DWORD *)(a1 + 392) |= 0x200u;
      uint64_t v22 = *(void *)(a1 + 80);
      if (!v22) {
        operator new();
      }
      uint64_t v23 = *(void *)(a2 + 80);
      if (!v23) {
        uint64_t v23 = *(void *)(qword_1008ABE98 + 80);
      }
      sub_10007632C(v22, v23);
      unsigned int v4 = *(_DWORD *)(a2 + 392);
    }
    if ((v4 & 0x400) != 0)
    {
      *(_DWORD *)(a1 + 392) |= 0x400u;
      uint64_t v24 = *(void *)(a1 + 88);
      if (!v24) {
        operator new();
      }
      uint64_t v25 = *(void *)(a2 + 88);
      if (!v25) {
        uint64_t v25 = *(void *)(qword_1008ABE98 + 88);
      }
      sub_100077CC8(v24, v25);
      unsigned int v4 = *(_DWORD *)(a2 + 392);
    }
    if ((v4 & 0x800) != 0)
    {
      *(_DWORD *)(a1 + 392) |= 0x800u;
      uint64_t v26 = *(void *)(a1 + 96);
      if (!v26) {
        operator new();
      }
      uint64_t v27 = *(void *)(a2 + 96);
      if (!v27) {
        uint64_t v27 = *(void *)(qword_1008ABE98 + 96);
      }
      sub_1000786C8(v26, v27);
      unsigned int v4 = *(_DWORD *)(a2 + 392);
    }
    if ((v4 & 0x1000) != 0)
    {
      *(_DWORD *)(a1 + 392) |= 0x1000u;
      uint64_t v28 = *(void *)(a1 + 104);
      if (!v28) {
        operator new();
      }
      uint64_t v29 = *(void *)(a2 + 104);
      if (!v29) {
        uint64_t v29 = *(void *)(qword_1008ABE98 + 104);
      }
      sub_1000790EC(v28, v29);
      unsigned int v4 = *(_DWORD *)(a2 + 392);
    }
    if ((v4 & 0x2000) != 0)
    {
      *(_DWORD *)(a1 + 392) |= 0x2000u;
      uint64_t v30 = *(void *)(a1 + 112);
      if (!v30) {
        operator new();
      }
      uint64_t v31 = *(void *)(a2 + 112);
      if (!v31) {
        uint64_t v31 = *(void *)(qword_1008ABE98 + 112);
      }
      sub_1000F3324(v30, v31);
      unsigned int v4 = *(_DWORD *)(a2 + 392);
    }
    if ((v4 & 0x4000) != 0)
    {
      *(_DWORD *)(a1 + 392) |= 0x4000u;
      uint64_t v32 = *(void *)(a1 + 120);
      if (!v32) {
        operator new();
      }
      uint64_t v33 = *(void *)(a2 + 120);
      if (!v33) {
        uint64_t v33 = *(void *)(qword_1008ABE98 + 120);
      }
      sub_100111544(v32, v33);
      unsigned int v4 = *(_DWORD *)(a2 + 392);
    }
    if ((v4 & 0x8000) != 0)
    {
      *(_DWORD *)(a1 + 392) |= 0x8000u;
      uint64_t v34 = *(void *)(a1 + 128);
      if (!v34) {
        operator new();
      }
      uint64_t v35 = *(void *)(a2 + 128);
      if (!v35) {
        uint64_t v35 = *(void *)(qword_1008ABE98 + 128);
      }
      sub_10011A11C(v34, v35);
      unsigned int v4 = *(_DWORD *)(a2 + 392);
    }
  }
  if ((v4 & 0xFF0000) != 0)
  {
    if ((v4 & 0x10000) != 0)
    {
      *(_DWORD *)(a1 + 392) |= 0x10000u;
      uint64_t v36 = *(void *)(a1 + 136);
      if (!v36) {
        operator new();
      }
      uint64_t v37 = *(void *)(a2 + 136);
      if (!v37) {
        uint64_t v37 = *(void *)(qword_1008ABE98 + 136);
      }
      sub_10012BAA0(v36, v37);
      unsigned int v4 = *(_DWORD *)(a2 + 392);
    }
    if ((v4 & 0x20000) != 0)
    {
      *(_DWORD *)(a1 + 392) |= 0x20000u;
      uint64_t v38 = *(void *)(a1 + 144);
      if (!v38) {
        operator new();
      }
      uint64_t v39 = *(void *)(a2 + 144);
      if (!v39) {
        uint64_t v39 = *(void *)(qword_1008ABE98 + 144);
      }
      sub_10010420C(v38, v39);
      unsigned int v4 = *(_DWORD *)(a2 + 392);
    }
    if ((v4 & 0x40000) != 0)
    {
      *(_DWORD *)(a1 + 392) |= 0x40000u;
      uint64_t v40 = *(void *)(a1 + 152);
      if (!v40) {
        operator new();
      }
      uint64_t v41 = *(void *)(a2 + 152);
      if (!v41) {
        uint64_t v41 = *(void *)(qword_1008ABE98 + 152);
      }
      sub_100115E4C(v40, v41);
      unsigned int v4 = *(_DWORD *)(a2 + 392);
    }
    if ((v4 & 0x80000) != 0)
    {
      *(_DWORD *)(a1 + 392) |= 0x80000u;
      uint64_t v42 = *(void *)(a1 + 160);
      if (!v42) {
        operator new();
      }
      uint64_t v43 = *(void *)(a2 + 160);
      if (!v43) {
        uint64_t v43 = *(void *)(qword_1008ABE98 + 160);
      }
      sub_100119244(v42, v43);
      unsigned int v4 = *(_DWORD *)(a2 + 392);
    }
    if ((v4 & 0x100000) != 0)
    {
      *(_DWORD *)(a1 + 392) |= 0x100000u;
      uint64_t v44 = *(void *)(a1 + 168);
      if (!v44) {
        operator new();
      }
      uint64_t v45 = *(void *)(a2 + 168);
      if (!v45) {
        uint64_t v45 = *(void *)(qword_1008ABE98 + 168);
      }
      sub_10011B260(v44, v45);
      unsigned int v4 = *(_DWORD *)(a2 + 392);
    }
    if ((v4 & 0x200000) != 0)
    {
      *(_DWORD *)(a1 + 392) |= 0x200000u;
      uint64_t v46 = *(void *)(a1 + 176);
      if (!v46) {
        operator new();
      }
      uint64_t v47 = *(void *)(a2 + 176);
      if (!v47) {
        uint64_t v47 = *(void *)(qword_1008ABE98 + 176);
      }
      sub_10011BE54(v46, v47);
      unsigned int v4 = *(_DWORD *)(a2 + 392);
    }
    if ((v4 & 0x400000) != 0)
    {
      *(_DWORD *)(a1 + 392) |= 0x400000u;
      uint64_t v48 = *(void *)(a1 + 184);
      if (!v48) {
        operator new();
      }
      uint64_t v49 = *(void *)(a2 + 184);
      if (!v49) {
        uint64_t v49 = *(void *)(qword_1008ABE98 + 184);
      }
      sub_10011C8AC(v48, v49);
      unsigned int v4 = *(_DWORD *)(a2 + 392);
    }
    if ((v4 & 0x800000) != 0)
    {
      *(_DWORD *)(a1 + 392) |= 0x800000u;
      uint64_t v50 = *(void *)(a1 + 192);
      if (!v50) {
        operator new();
      }
      uint64_t v51 = *(void *)(a2 + 192);
      if (!v51) {
        uint64_t v51 = *(void *)(qword_1008ABE98 + 192);
      }
      sub_10011DA08(v50, v51);
      unsigned int v4 = *(_DWORD *)(a2 + 392);
    }
  }
  if (HIBYTE(v4))
  {
    if ((v4 & 0x1000000) != 0)
    {
      *(_DWORD *)(a1 + 392) |= 0x1000000u;
      uint64_t v52 = *(void *)(a1 + 200);
      if (!v52) {
        operator new();
      }
      uint64_t v53 = *(void *)(a2 + 200);
      if (!v53) {
        uint64_t v53 = *(void *)(qword_1008ABE98 + 200);
      }
      sub_10011F368(v52, v53);
      unsigned int v4 = *(_DWORD *)(a2 + 392);
    }
    if ((v4 & 0x2000000) != 0)
    {
      *(_DWORD *)(a1 + 392) |= 0x2000000u;
      uint64_t v54 = *(void *)(a1 + 208);
      if (!v54) {
        operator new();
      }
      uint64_t v55 = *(void *)(a2 + 208);
      if (!v55) {
        uint64_t v55 = *(void *)(qword_1008ABE98 + 208);
      }
      sub_100120FE8(v54, v55);
      unsigned int v4 = *(_DWORD *)(a2 + 392);
    }
    if ((v4 & 0x4000000) != 0)
    {
      *(_DWORD *)(a1 + 392) |= 0x4000000u;
      uint64_t v56 = *(void *)(a1 + 216);
      if (!v56) {
        operator new();
      }
      uint64_t v57 = *(void *)(a2 + 216);
      if (!v57) {
        uint64_t v57 = *(void *)(qword_1008ABE98 + 216);
      }
      sub_10011F368(v56, v57);
      unsigned int v4 = *(_DWORD *)(a2 + 392);
    }
    if ((v4 & 0x8000000) != 0)
    {
      *(_DWORD *)(a1 + 392) |= 0x8000000u;
      uint64_t v58 = *(void *)(a1 + 224);
      if (!v58) {
        operator new();
      }
      uint64_t v59 = *(void *)(a2 + 224);
      if (!v59) {
        uint64_t v59 = *(void *)(qword_1008ABE98 + 224);
      }
      sub_1000DA2F8(v58, v59);
      unsigned int v4 = *(_DWORD *)(a2 + 392);
    }
    if ((v4 & 0x10000000) != 0)
    {
      *(_DWORD *)(a1 + 392) |= 0x10000000u;
      uint64_t v60 = *(void *)(a1 + 232);
      if (!v60) {
        operator new();
      }
      uint64_t v61 = *(void *)(a2 + 232);
      if (!v61) {
        uint64_t v61 = *(void *)(qword_1008ABE98 + 232);
      }
      sub_10007D1EC(v60, v61);
      unsigned int v4 = *(_DWORD *)(a2 + 392);
    }
    if ((v4 & 0x20000000) != 0)
    {
      *(_DWORD *)(a1 + 392) |= 0x20000000u;
      uint64_t v62 = *(void *)(a1 + 240);
      if (!v62) {
        operator new();
      }
      uint64_t v63 = *(void *)(a2 + 240);
      if (!v63) {
        uint64_t v63 = *(void *)(qword_1008ABE98 + 240);
      }
      sub_10012373C(v62, v63);
      unsigned int v4 = *(_DWORD *)(a2 + 392);
    }
    if ((v4 & 0x40000000) != 0)
    {
      *(_DWORD *)(a1 + 392) |= 0x40000000u;
      uint64_t v64 = *(void *)(a1 + 248);
      if (!v64) {
        operator new();
      }
      uint64_t v65 = *(void *)(a2 + 248);
      if (!v65) {
        uint64_t v65 = *(void *)(qword_1008ABE98 + 248);
      }
      sub_100124C5C(v64, v65);
      unsigned int v4 = *(_DWORD *)(a2 + 392);
    }
    if ((v4 & 0x80000000) != 0)
    {
      *(_DWORD *)(a1 + 392) |= 0x80000000;
      uint64_t v66 = *(void *)(a1 + 256);
      if (!v66) {
        operator new();
      }
      uint64_t v67 = *(void *)(a2 + 256);
      if (!v67) {
        uint64_t v67 = *(void *)(qword_1008ABE98 + 256);
      }
      sub_10012887C(v66, v67);
    }
  }
  int v68 = *(_DWORD *)(a2 + 396);
  if ((_BYTE)v68)
  {
    if (v68)
    {
      *(_DWORD *)(a1 + 396) |= 1u;
      uint64_t v69 = *(void *)(a1 + 264);
      if (!v69) {
        operator new();
      }
      uint64_t v70 = *(void *)(a2 + 264);
      if (!v70) {
        uint64_t v70 = *(void *)(qword_1008ABE98 + 264);
      }
      sub_100129218(v69, v70);
      int v68 = *(_DWORD *)(a2 + 396);
    }
    if ((v68 & 2) != 0)
    {
      *(_DWORD *)(a1 + 396) |= 2u;
      uint64_t v71 = *(void *)(a1 + 272);
      if (!v71) {
        operator new();
      }
      uint64_t v72 = *(void *)(a2 + 272);
      if (!v72) {
        uint64_t v72 = *(void *)(qword_1008ABE98 + 272);
      }
      sub_100129A30(v71, v72);
      int v68 = *(_DWORD *)(a2 + 396);
    }
    if ((v68 & 4) != 0)
    {
      *(_DWORD *)(a1 + 396) |= 4u;
      uint64_t v73 = *(void *)(a1 + 280);
      if (!v73) {
        operator new();
      }
      uint64_t v74 = *(void *)(a2 + 280);
      if (!v74) {
        uint64_t v74 = *(void *)(qword_1008ABE98 + 280);
      }
      sub_100126CB4(v73, v74);
      int v68 = *(_DWORD *)(a2 + 396);
    }
    if ((v68 & 8) != 0)
    {
      *(_DWORD *)(a1 + 396) |= 8u;
      uint64_t v75 = *(void *)(a1 + 288);
      if (!v75) {
        operator new();
      }
      uint64_t v76 = *(void *)(a2 + 288);
      if (!v76) {
        uint64_t v76 = *(void *)(qword_1008ABE98 + 288);
      }
      sub_10011F368(v75, v76);
      int v68 = *(_DWORD *)(a2 + 396);
    }
    if ((v68 & 0x10) != 0)
    {
      *(_DWORD *)(a1 + 396) |= 0x10u;
      uint64_t v77 = *(void *)(a1 + 296);
      if (!v77) {
        operator new();
      }
      uint64_t v78 = *(void *)(a2 + 296);
      if (!v78) {
        uint64_t v78 = *(void *)(qword_1008ABE98 + 296);
      }
      sub_10007EC7C(v77, v78);
      int v68 = *(_DWORD *)(a2 + 396);
    }
    if ((v68 & 0x20) != 0)
    {
      *(_DWORD *)(a1 + 396) |= 0x20u;
      uint64_t v79 = *(void *)(a1 + 304);
      if (!v79) {
        operator new();
      }
      uint64_t v80 = *(void *)(a2 + 304);
      if (!v80) {
        uint64_t v80 = *(void *)(qword_1008ABE98 + 304);
      }
      sub_100124300(v79, v80);
      int v68 = *(_DWORD *)(a2 + 396);
    }
    if ((v68 & 0x40) != 0)
    {
      *(_DWORD *)(a1 + 396) |= 0x40u;
      uint64_t v81 = *(void *)(a1 + 312);
      if (!v81) {
        operator new();
      }
      uint64_t v82 = *(void *)(a2 + 312);
      if (!v82) {
        uint64_t v82 = *(void *)(qword_1008ABE98 + 312);
      }
      sub_10012A5AC(v81, v82);
      int v68 = *(_DWORD *)(a2 + 396);
    }
    if ((v68 & 0x80) != 0)
    {
      *(_DWORD *)(a1 + 396) |= 0x80u;
      uint64_t v83 = *(_DWORD **)(a1 + 320);
      if (!v83) {
        operator new();
      }
      uint64_t v84 = *(void *)(a2 + 320);
      if (!v84) {
        uint64_t v84 = *(void *)(qword_1008ABE98 + 320);
      }
      sub_100080B24(v83, v84);
      int v68 = *(_DWORD *)(a2 + 396);
    }
  }
  if ((v68 & 0xFF00) != 0)
  {
    if ((v68 & 0x100) != 0)
    {
      *(_DWORD *)(a1 + 396) |= 0x100u;
      uint64_t v85 = *(void *)(a1 + 328);
      if (!v85) {
        operator new();
      }
      uint64_t v86 = *(void *)(a2 + 328);
      if (!v86) {
        uint64_t v86 = *(void *)(qword_1008ABE98 + 328);
      }
      sub_100122BA8(v85, v86);
      int v68 = *(_DWORD *)(a2 + 396);
    }
    if ((v68 & 0x200) != 0)
    {
      *(_DWORD *)(a1 + 396) |= 0x200u;
      uint64_t v87 = *(void *)(a1 + 336);
      if (!v87) {
        operator new();
      }
      uint64_t v88 = *(void *)(a2 + 336);
      if (!v88) {
        uint64_t v88 = *(void *)(qword_1008ABE98 + 336);
      }
      sub_10012C740(v87, v88);
      int v68 = *(_DWORD *)(a2 + 396);
    }
    if ((v68 & 0x400) != 0)
    {
      *(_DWORD *)(a1 + 396) |= 0x400u;
      uint64_t v89 = *(void *)(a1 + 344);
      if (!v89) {
        operator new();
      }
      uint64_t v90 = *(void *)(a2 + 344);
      if (!v90) {
        uint64_t v90 = *(void *)(qword_1008ABE98 + 344);
      }
      sub_10012DFF0(v89, v90);
      int v68 = *(_DWORD *)(a2 + 396);
    }
    if ((v68 & 0x800) != 0)
    {
      *(_DWORD *)(a1 + 396) |= 0x800u;
      uint64_t v91 = *(void *)(a1 + 352);
      if (!v91) {
        operator new();
      }
      uint64_t v92 = *(void *)(a2 + 352);
      if (!v92) {
        uint64_t v92 = *(void *)(qword_1008ABE98 + 352);
      }
      sub_10012F8B0(v91, v92);
      int v68 = *(_DWORD *)(a2 + 396);
    }
    if ((v68 & 0x1000) != 0)
    {
      *(_DWORD *)(a1 + 396) |= 0x1000u;
      uint64_t v93 = *(void *)(a1 + 360);
      if (!v93) {
        operator new();
      }
      uint64_t v94 = *(void *)(a2 + 360);
      if (!v94) {
        uint64_t v94 = *(void *)(qword_1008ABE98 + 360);
      }
      sub_100130F3C(v93, v94);
      int v68 = *(_DWORD *)(a2 + 396);
    }
    if ((v68 & 0x2000) != 0)
    {
      *(_DWORD *)(a1 + 396) |= 0x2000u;
      uint64_t v95 = *(void *)(a1 + 368);
      if (!v95) {
        operator new();
      }
      uint64_t v96 = *(void *)(a2 + 368);
      if (!v96) {
        uint64_t v96 = *(void *)(qword_1008ABE98 + 368);
      }
      sub_10012B158(v95, v96);
      int v68 = *(_DWORD *)(a2 + 396);
    }
    if ((v68 & 0x4000) != 0)
    {
      *(_DWORD *)(a1 + 396) |= 0x4000u;
      uint64_t v97 = *(void *)(a1 + 376);
      if (!v97) {
        operator new();
      }
      uint64_t v98 = *(void *)(a2 + 376);
      if (!v98) {
        uint64_t v98 = *(void *)(qword_1008ABE98 + 376);
      }
      sub_100131AB8(v97, v98);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000825EC()
{
}

void sub_10008292C(uint64_t a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  JUMPOUT(0x100082924);
}

void sub_100082940(void *a1)
{
  *a1 = off_100849758;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_1000829A0(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void *sub_1000829A0(void *result)
{
  if ((void *)qword_1008ABE98 != result)
  {
    char v1 = result;
    uint64_t v2 = result[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[3];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[4];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[5];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = v1[6];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = v1[7];
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = v1[8];
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = v1[9];
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
    uint64_t v10 = v1[10];
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    uint64_t v11 = v1[11];
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
    uint64_t v12 = v1[12];
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    }
    uint64_t v13 = v1[13];
    if (v13) {
      (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
    }
    uint64_t v14 = v1[14];
    if (v14) {
      (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
    }
    uint64_t v15 = v1[15];
    if (v15) {
      (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
    }
    uint64_t v16 = v1[16];
    if (v16) {
      (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
    }
    uint64_t v17 = v1[17];
    if (v17) {
      (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
    }
    uint64_t v18 = v1[18];
    if (v18) {
      (*(void (**)(uint64_t))(*(void *)v18 + 8))(v18);
    }
    uint64_t v19 = v1[19];
    if (v19) {
      (*(void (**)(uint64_t))(*(void *)v19 + 8))(v19);
    }
    uint64_t v20 = v1[20];
    if (v20) {
      (*(void (**)(uint64_t))(*(void *)v20 + 8))(v20);
    }
    uint64_t v21 = v1[21];
    if (v21) {
      (*(void (**)(uint64_t))(*(void *)v21 + 8))(v21);
    }
    uint64_t v22 = v1[22];
    if (v22) {
      (*(void (**)(uint64_t))(*(void *)v22 + 8))(v22);
    }
    uint64_t v23 = v1[23];
    if (v23) {
      (*(void (**)(uint64_t))(*(void *)v23 + 8))(v23);
    }
    uint64_t v24 = v1[24];
    if (v24) {
      (*(void (**)(uint64_t))(*(void *)v24 + 8))(v24);
    }
    uint64_t v25 = v1[25];
    if (v25) {
      (*(void (**)(uint64_t))(*(void *)v25 + 8))(v25);
    }
    uint64_t v26 = v1[26];
    if (v26) {
      (*(void (**)(uint64_t))(*(void *)v26 + 8))(v26);
    }
    uint64_t v27 = v1[27];
    if (v27) {
      (*(void (**)(uint64_t))(*(void *)v27 + 8))(v27);
    }
    uint64_t v28 = v1[28];
    if (v28) {
      (*(void (**)(uint64_t))(*(void *)v28 + 8))(v28);
    }
    uint64_t v29 = v1[29];
    if (v29) {
      (*(void (**)(uint64_t))(*(void *)v29 + 8))(v29);
    }
    uint64_t v30 = v1[30];
    if (v30) {
      (*(void (**)(uint64_t))(*(void *)v30 + 8))(v30);
    }
    uint64_t v31 = v1[31];
    if (v31) {
      (*(void (**)(uint64_t))(*(void *)v31 + 8))(v31);
    }
    uint64_t v32 = v1[32];
    if (v32) {
      (*(void (**)(uint64_t))(*(void *)v32 + 8))(v32);
    }
    uint64_t v33 = v1[33];
    if (v33) {
      (*(void (**)(uint64_t))(*(void *)v33 + 8))(v33);
    }
    uint64_t v34 = v1[34];
    if (v34) {
      (*(void (**)(uint64_t))(*(void *)v34 + 8))(v34);
    }
    uint64_t v35 = v1[35];
    if (v35) {
      (*(void (**)(uint64_t))(*(void *)v35 + 8))(v35);
    }
    uint64_t v36 = v1[36];
    if (v36) {
      (*(void (**)(uint64_t))(*(void *)v36 + 8))(v36);
    }
    uint64_t v37 = v1[37];
    if (v37) {
      (*(void (**)(uint64_t))(*(void *)v37 + 8))(v37);
    }
    uint64_t v38 = v1[38];
    if (v38) {
      (*(void (**)(uint64_t))(*(void *)v38 + 8))(v38);
    }
    uint64_t v39 = v1[39];
    if (v39) {
      (*(void (**)(uint64_t))(*(void *)v39 + 8))(v39);
    }
    uint64_t v40 = v1[40];
    if (v40) {
      (*(void (**)(uint64_t))(*(void *)v40 + 8))(v40);
    }
    uint64_t v41 = v1[41];
    if (v41) {
      (*(void (**)(uint64_t))(*(void *)v41 + 8))(v41);
    }
    uint64_t v42 = v1[42];
    if (v42) {
      (*(void (**)(uint64_t))(*(void *)v42 + 8))(v42);
    }
    uint64_t v43 = v1[43];
    if (v43) {
      (*(void (**)(uint64_t))(*(void *)v43 + 8))(v43);
    }
    uint64_t v44 = v1[44];
    if (v44) {
      (*(void (**)(uint64_t))(*(void *)v44 + 8))(v44);
    }
    uint64_t v45 = v1[45];
    if (v45) {
      (*(void (**)(uint64_t))(*(void *)v45 + 8))(v45);
    }
    uint64_t v46 = v1[46];
    if (v46) {
      (*(void (**)(uint64_t))(*(void *)v46 + 8))(v46);
    }
    uint64_t result = (void *)v1[47];
    if (result)
    {
      uint64_t v47 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v47();
    }
  }
  return result;
}

void sub_1000831D4(void *a1)
{
  sub_100082940(a1);

  operator delete();
}

uint64_t sub_10008320C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 388) = a2;
  return result;
}

uint64_t sub_100083214(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008ABE98;
  if (!qword_1008ABE98)
  {
    sub_1000705C0(0, a2, a3, a4);
    return qword_1008ABE98;
  }
  return result;
}

void sub_100083244()
{
}

void sub_100083284()
{
}

uint64_t sub_1000832A8(uint64_t this)
{
  uint64_t v1 = this;
  unsigned int v2 = *(_DWORD *)(this + 392);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      this = *(void *)(this + 16);
      if (this)
      {
        this = (uint64_t)sub_100072754(this);
        unsigned int v2 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v2 & 2) != 0)
    {
      this = *(void *)(v1 + 24);
      if (this)
      {
        this = sub_1000C6648(this);
        unsigned int v2 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v2 & 4) != 0)
    {
      this = *(void *)(v1 + 32);
      if (this)
      {
        this = sub_1000C76E0(this);
        unsigned int v2 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v2 & 8) != 0)
    {
      this = *(void *)(v1 + 40);
      if (this)
      {
        this = sub_1000C8008(this);
        unsigned int v2 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      this = *(void *)(v1 + 48);
      if (this)
      {
        this = sub_100135D10(this);
        unsigned int v2 = *(_DWORD *)(v1 + 392);
      }
    }
    *(_DWORD *)(v1 + 384) = 0;
    if ((v2 & 0x40) != 0)
    {
      this = *(void *)(v1 + 56);
      if (this)
      {
        this = (uint64_t)sub_1000732F8(this);
        unsigned int v2 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v2 & 0x80) != 0)
    {
      this = *(void *)(v1 + 64);
      if (this)
      {
        this = sub_100074C20(this);
        unsigned int v2 = *(_DWORD *)(v1 + 392);
      }
    }
  }
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      this = *(void *)(v1 + 72);
      if (this)
      {
        if (*(unsigned char *)(this + 36))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
        }
        uint64_t v3 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 28) = 0;
        if (v3) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    int v4 = *(_DWORD *)(v1 + 392);
    if ((v4 & 0x200) != 0)
    {
      this = *(void *)(v1 + 80);
      if (this)
      {
        this = (uint64_t)sub_100076728(this);
        int v4 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v4 & 0x400) != 0)
    {
      this = *(void *)(v1 + 88);
      if (this)
      {
        this = (uint64_t)sub_100077F3C((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        int v4 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v4 & 0x800) != 0)
    {
      this = *(void *)(v1 + 96);
      if (this)
      {
        this = (uint64_t)sub_1000788F0(this);
        int v4 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v4 & 0x1000) != 0)
    {
      this = *(void *)(v1 + 104);
      if (this)
      {
        if (*(unsigned char *)(this + 56))
        {
          *(_DWORD *)(this + 48) = 0;
          *(_OWORD *)(this + 16) = 0u;
          *(_OWORD *)(this + 32) = 0u;
        }
        uint64_t v5 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 48) = 0;
        if (v5) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    unsigned int v2 = *(_DWORD *)(v1 + 392);
    if ((v2 & 0x2000) != 0)
    {
      this = *(void *)(v1 + 112);
      if (this)
      {
        this = sub_1000F3F0C(this);
        unsigned int v2 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v2 & 0x4000) != 0)
    {
      this = *(void *)(v1 + 120);
      if (this)
      {
        this = (uint64_t)sub_100111834(this);
        unsigned int v2 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v2 & 0x8000) != 0)
    {
      this = *(void *)(v1 + 128);
      if (this)
      {
        this = sub_10011A530(this);
        unsigned int v2 = *(_DWORD *)(v1 + 392);
      }
    }
  }
  if ((v2 & 0xFF0000) != 0)
  {
    if ((v2 & 0x10000) != 0)
    {
      this = *(void *)(v1 + 136);
      if (this)
      {
        this = sub_10012BDA8(this);
        unsigned int v2 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v2 & 0x20000) != 0)
    {
      this = *(void *)(v1 + 144);
      if (this)
      {
        this = (uint64_t)sub_100104674(this);
        unsigned int v2 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v2 & 0x40000) != 0)
    {
      this = *(void *)(v1 + 152);
      if (this)
      {
        this = sub_10011618C(this);
        unsigned int v2 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v2 & 0x80000) != 0)
    {
      this = *(void *)(v1 + 160);
      if (this)
      {
        this = (uint64_t)sub_100119644((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        unsigned int v2 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v2 & 0x100000) != 0)
    {
      this = *(void *)(v1 + 168);
      if (this)
      {
        this = (uint64_t)sub_10011B568(this);
        unsigned int v2 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v2 & 0x200000) != 0)
    {
      this = *(void *)(v1 + 176);
      if (this)
      {
        this = (uint64_t)sub_10011C0C8(this);
        unsigned int v2 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v2 & 0x400000) != 0)
    {
      this = *(void *)(v1 + 184);
      if (this)
      {
        this = (uint64_t)sub_10011CC54(this);
        unsigned int v2 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v2 & 0x800000) != 0)
    {
      this = *(void *)(v1 + 192);
      if (this)
      {
        this = (uint64_t)sub_10011DD6C(this);
        unsigned int v2 = *(_DWORD *)(v1 + 392);
      }
    }
  }
  if (HIBYTE(v2))
  {
    if ((v2 & 0x1000000) != 0)
    {
      this = *(void *)(v1 + 200);
      if (this)
      {
        this = sub_10011F8DC(this);
        unsigned int v2 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v2 & 0x2000000) != 0)
    {
      this = *(void *)(v1 + 208);
      if (this)
      {
        this = (uint64_t)sub_100121310(this);
        unsigned int v2 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v2 & 0x4000000) != 0)
    {
      this = *(void *)(v1 + 216);
      if (this)
      {
        this = sub_10011F8DC(this);
        unsigned int v2 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v2 & 0x8000000) != 0)
    {
      this = *(void *)(v1 + 224);
      if (this)
      {
        this = sub_1000DA838(this);
        unsigned int v2 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v2 & 0x10000000) != 0)
    {
      this = *(void *)(v1 + 232);
      if (this)
      {
        this = (uint64_t)sub_10007D820((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        unsigned int v2 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v2 & 0x20000000) != 0)
    {
      this = *(void *)(v1 + 240);
      if (this)
      {
        this = sub_100123A9C(this);
        unsigned int v2 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v2 & 0x40000000) != 0)
    {
      this = *(void *)(v1 + 248);
      if (this)
      {
        this = (uint64_t)sub_10012501C(this);
        unsigned int v2 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v2 & 0x80000000) != 0)
    {
      this = *(void *)(v1 + 256);
      if (this) {
        this = (uint64_t)sub_100128AD4(this);
      }
    }
  }
  int v6 = *(_DWORD *)(v1 + 396);
  if ((_BYTE)v6)
  {
    if (v6)
    {
      this = *(void *)(v1 + 264);
      if (this)
      {
        this = (uint64_t)sub_100129444(this);
        int v6 = *(_DWORD *)(v1 + 396);
      }
    }
    if ((v6 & 2) != 0)
    {
      this = *(void *)(v1 + 272);
      if (this)
      {
        this = (uint64_t)sub_100129CC4(this);
        int v6 = *(_DWORD *)(v1 + 396);
      }
    }
    if ((v6 & 4) != 0)
    {
      this = *(void *)(v1 + 280);
      if (this)
      {
        this = (uint64_t)sub_1001272DC((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        int v6 = *(_DWORD *)(v1 + 396);
      }
    }
    if ((v6 & 8) != 0)
    {
      this = *(void *)(v1 + 288);
      if (this)
      {
        this = sub_10011F8DC(this);
        int v6 = *(_DWORD *)(v1 + 396);
      }
    }
    if ((v6 & 0x10) != 0)
    {
      this = *(void *)(v1 + 296);
      if (this)
      {
        this = (uint64_t)sub_10007F060(this);
        int v6 = *(_DWORD *)(v1 + 396);
      }
    }
    if ((v6 & 0x20) != 0)
    {
      this = *(void *)(v1 + 304);
      if (this)
      {
        this = (uint64_t)sub_10012454C(this);
        int v6 = *(_DWORD *)(v1 + 396);
      }
    }
    if ((v6 & 0x40) != 0)
    {
      this = *(void *)(v1 + 312);
      if (this)
      {
        this = (uint64_t)sub_10012A840(this);
        int v6 = *(_DWORD *)(v1 + 396);
      }
    }
    if ((v6 & 0x80) != 0)
    {
      this = *(void *)(v1 + 320);
      if (this)
      {
        this = sub_100080D78(this);
        int v6 = *(_DWORD *)(v1 + 396);
      }
    }
  }
  if ((v6 & 0xFF00) != 0)
  {
    if ((v6 & 0x100) != 0)
    {
      this = *(void *)(v1 + 328);
      if (this)
      {
        this = sub_100122E90(this);
        int v6 = *(_DWORD *)(v1 + 396);
      }
    }
    if ((v6 & 0x200) != 0)
    {
      this = *(void *)(v1 + 336);
      if (this)
      {
        this = (uint64_t)sub_10012CBB0(this);
        int v6 = *(_DWORD *)(v1 + 396);
      }
    }
    if ((v6 & 0x400) != 0)
    {
      this = *(void *)(v1 + 344);
      if (this)
      {
        this = (uint64_t)sub_10012E260(this);
        int v6 = *(_DWORD *)(v1 + 396);
      }
    }
    if ((v6 & 0x800) != 0)
    {
      this = *(void *)(v1 + 352);
      if (this)
      {
        this = sub_10012FB54(this);
        int v6 = *(_DWORD *)(v1 + 396);
      }
    }
    if ((v6 & 0x1000) != 0)
    {
      this = *(void *)(v1 + 360);
      if (this)
      {
        this = sub_100131208(this);
        int v6 = *(_DWORD *)(v1 + 396);
      }
    }
    if ((v6 & 0x2000) != 0)
    {
      this = *(void *)(v1 + 368);
      if (this)
      {
        this = (uint64_t)sub_10012B3A4(this);
        int v6 = *(_DWORD *)(v1 + 396);
      }
    }
    if ((v6 & 0x4000) != 0)
    {
      this = *(void *)(v1 + 376);
      if (this) {
        this = (uint64_t)sub_100131D28(this);
      }
    }
  }
  uint64_t v8 = *(void *)(v1 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((void *)v7 + 48) = 0;
  if (v8)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v7);
  }
  return this;
}

uint64_t sub_1000836F8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 < *((void *)this + 2) && (*v7 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_107;
        }
        *(_DWORD *)(a1 + 392) |= 1u;
        uint64_t v10 = *(void *)(a1 + 16);
        if (!v10) {
          operator new();
        }
        unsigned int v475 = 0;
        uint64_t v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        int v14 = *((_DWORD *)this + 14);
        int v15 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v14 + 1;
        if (v14 >= v15) {
          return 0;
        }
        int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_1000727DC(v10, this, v17, v18) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
        int v19 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v19, 1);
        int v21 = v19 - 1;
        if (v21 < 0 == v20) {
          *((_DWORD *)this + 14) = v21;
        }
        uint64_t v22 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 != 18) {
          continue;
        }
        *((void *)this + 1) = v22 + 1;
        goto LABEL_119;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_107;
        }
LABEL_119:
        *(_DWORD *)(a1 + 392) |= 2u;
        uint64_t v23 = *(void *)(a1 + 24);
        if (!v23) {
          operator new();
        }
        unsigned int v475 = 0;
        uint64_t v24 = (char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v24;
          *((void *)this + 1) = v24 + 1;
        }
        int v25 = *((_DWORD *)this + 14);
        int v26 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v25 + 1;
        if (v25 >= v26) {
          return 0;
        }
        int v27 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_1000C6740(v23, this, v28, v29) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v27);
        int v30 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v30, 1);
        int v31 = v30 - 1;
        if (v31 < 0 == v20) {
          *((_DWORD *)this + 14) = v31;
        }
        uint64_t v32 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 != 26) {
          continue;
        }
        *((void *)this + 1) = v32 + 1;
LABEL_133:
        *(_DWORD *)(a1 + 392) |= 4u;
        uint64_t v33 = *(void *)(a1 + 32);
        if (!v33) {
          operator new();
        }
        unsigned int v475 = 0;
        uint64_t v34 = (char *)*((void *)this + 1);
        if ((unint64_t)v34 >= *((void *)this + 2) || *v34 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v34;
          *((void *)this + 1) = v34 + 1;
        }
        int v35 = *((_DWORD *)this + 14);
        int v36 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v35 + 1;
        if (v35 >= v36) {
          return 0;
        }
        int v37 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_1000C7740(v33, this, v38, v39) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v37);
        int v40 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v40, 1);
        int v41 = v40 - 1;
        if (v41 < 0 == v20) {
          *((_DWORD *)this + 14) = v41;
        }
        uint64_t v42 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v42 >= *((void *)this + 2) || *v42 != 34) {
          continue;
        }
        *((void *)this + 1) = v42 + 1;
LABEL_147:
        *(_DWORD *)(a1 + 392) |= 8u;
        uint64_t v43 = *(void *)(a1 + 40);
        if (!v43) {
          operator new();
        }
        unsigned int v475 = 0;
        uint64_t v44 = (char *)*((void *)this + 1);
        if ((unint64_t)v44 >= *((void *)this + 2) || *v44 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v44;
          *((void *)this + 1) = v44 + 1;
        }
        int v45 = *((_DWORD *)this + 14);
        int v46 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v45 + 1;
        if (v45 >= v46) {
          return 0;
        }
        int v47 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_1000C8070(v43, this, v48, v49) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v47);
        int v50 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v50, 1);
        int v51 = v50 - 1;
        if (v51 < 0 == v20) {
          *((_DWORD *)this + 14) = v51;
        }
        uint64_t v52 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v52 >= *((void *)this + 2) || *v52 != 42) {
          continue;
        }
        *((void *)this + 1) = v52 + 1;
LABEL_161:
        *(_DWORD *)(a1 + 392) |= 0x10u;
        uint64_t v53 = *(void *)(a1 + 48);
        if (!v53) {
          operator new();
        }
        unsigned int v475 = 0;
        uint64_t v54 = (char *)*((void *)this + 1);
        if ((unint64_t)v54 >= *((void *)this + 2) || *v54 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v54;
          *((void *)this + 1) = v54 + 1;
        }
        int v55 = *((_DWORD *)this + 14);
        int v56 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v55 + 1;
        if (v55 >= v56) {
          return 0;
        }
        int v57 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_100135DF4(v53, this, v58, v59) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v57);
        int v60 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v60, 1);
        int v61 = v60 - 1;
        if (v61 < 0 == v20) {
          *((_DWORD *)this + 14) = v61;
        }
        uint64_t v62 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v62 >= v12 || *v62 != 48) {
          continue;
        }
        uint64_t v13 = v62 + 1;
        *((void *)this + 1) = v13;
LABEL_175:
        unsigned int v475 = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475);
          if (!result) {
            return result;
          }
          signed int v63 = v475;
        }
        else
        {
          signed int v63 = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        if (sub_1000719F4(v63))
        {
          *(_DWORD *)(a1 + 392) |= 0x20u;
          *(_DWORD *)(a1 + 384) = v63;
        }
        else
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 6, v63);
        }
        uint64_t v65 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v65 >= *((void *)this + 2) || *v65 != 58) {
          continue;
        }
        *((void *)this + 1) = v65 + 1;
LABEL_186:
        *(_DWORD *)(a1 + 392) |= 0x40u;
        uint64_t v66 = *(void *)(a1 + 56);
        if (!v66) {
          operator new();
        }
        unsigned int v475 = 0;
        uint64_t v67 = (char *)*((void *)this + 1);
        if ((unint64_t)v67 >= *((void *)this + 2) || *v67 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v67;
          *((void *)this + 1) = v67 + 1;
        }
        int v68 = *((_DWORD *)this + 14);
        int v69 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v68 + 1;
        if (v68 >= v69) {
          return 0;
        }
        int v70 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_100073330(v66, this, v71, v72) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v70);
        int v73 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v73, 1);
        int v74 = v73 - 1;
        if (v74 < 0 == v20) {
          *((_DWORD *)this + 14) = v74;
        }
        uint64_t v75 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v75 >= *((void *)this + 2) || *v75 != 66) {
          continue;
        }
        *((void *)this + 1) = v75 + 1;
LABEL_200:
        *(_DWORD *)(a1 + 392) |= 0x80u;
        uint64_t v76 = *(_DWORD **)(a1 + 64);
        if (!v76) {
          operator new();
        }
        unsigned int v475 = 0;
        uint64_t v77 = (char *)*((void *)this + 1);
        if ((unint64_t)v77 >= *((void *)this + 2) || *v77 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v77;
          *((void *)this + 1) = v77 + 1;
        }
        int v78 = *((_DWORD *)this + 14);
        int v79 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v78 + 1;
        if (v78 >= v79) {
          return 0;
        }
        int v80 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_100074C84(v76, this, v81, v82) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v80);
        int v83 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v83, 1);
        int v84 = v83 - 1;
        if (v84 < 0 == v20) {
          *((_DWORD *)this + 14) = v84;
        }
        uint64_t v85 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v85 >= *((void *)this + 2) || *v85 != 74) {
          continue;
        }
        *((void *)this + 1) = v85 + 1;
LABEL_214:
        *(_DWORD *)(a1 + 392) |= 0x100u;
        uint64_t v86 = *(void *)(a1 + 72);
        if (!v86) {
          operator new();
        }
        unsigned int v475 = 0;
        uint64_t v87 = (char *)*((void *)this + 1);
        if ((unint64_t)v87 >= *((void *)this + 2) || *v87 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v87;
          *((void *)this + 1) = v87 + 1;
        }
        int v88 = *((_DWORD *)this + 14);
        int v89 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v88 + 1;
        if (v88 >= v89) {
          return 0;
        }
        int v90 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_100075BD0(v86, this, v91, v92) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v90);
        int v93 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v93, 1);
        int v94 = v93 - 1;
        if (v94 < 0 == v20) {
          *((_DWORD *)this + 14) = v94;
        }
        uint64_t v95 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v95 >= *((void *)this + 2) || *v95 != 82) {
          continue;
        }
        *((void *)this + 1) = v95 + 1;
LABEL_228:
        *(_DWORD *)(a1 + 392) |= 0x200u;
        uint64_t v96 = *(void *)(a1 + 80);
        if (!v96) {
          operator new();
        }
        unsigned int v475 = 0;
        uint64_t v97 = (char *)*((void *)this + 1);
        if ((unint64_t)v97 >= *((void *)this + 2) || *v97 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v97;
          *((void *)this + 1) = v97 + 1;
        }
        int v98 = *((_DWORD *)this + 14);
        int v99 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v98 + 1;
        if (v98 >= v99) {
          return 0;
        }
        int v100 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_10007676C(v96, this, v101, v102) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v100);
        int v103 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v103, 1);
        int v104 = v103 - 1;
        if (v104 < 0 == v20) {
          *((_DWORD *)this + 14) = v104;
        }
        unsigned int v105 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v105 >= *((void *)this + 2) || *v105 != 90) {
          continue;
        }
        *((void *)this + 1) = v105 + 1;
LABEL_242:
        *(_DWORD *)(a1 + 392) |= 0x400u;
        uint64_t v106 = *(void *)(a1 + 88);
        if (!v106) {
          operator new();
        }
        unsigned int v475 = 0;
        uint64_t v107 = (char *)*((void *)this + 1);
        if ((unint64_t)v107 >= *((void *)this + 2) || *v107 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v107;
          *((void *)this + 1) = v107 + 1;
        }
        int v108 = *((_DWORD *)this + 14);
        int v109 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v108 + 1;
        if (v108 >= v109) {
          return 0;
        }
        int v110 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_100077FA4(v106, this, v111, v112) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v110);
        int v113 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v113, 1);
        int v114 = v113 - 1;
        if (v114 < 0 == v20) {
          *((_DWORD *)this + 14) = v114;
        }
        uint64_t v115 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v115 >= *((void *)this + 2) || *v115 != 98) {
          continue;
        }
        *((void *)this + 1) = v115 + 1;
LABEL_256:
        *(_DWORD *)(a1 + 392) |= 0x800u;
        uint64_t v116 = *(void *)(a1 + 96);
        if (!v116) {
          operator new();
        }
        unsigned int v475 = 0;
        int v117 = (char *)*((void *)this + 1);
        if ((unint64_t)v117 >= *((void *)this + 2) || *v117 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v117;
          *((void *)this + 1) = v117 + 1;
        }
        int v118 = *((_DWORD *)this + 14);
        int v119 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v118 + 1;
        if (v118 >= v119) {
          return 0;
        }
        int v120 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_100078914(v116, this, v121, v122) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v120);
        int v123 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v123, 1);
        int v124 = v123 - 1;
        if (v124 < 0 == v20) {
          *((_DWORD *)this + 14) = v124;
        }
        uint64_t v125 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v125 >= *((void *)this + 2) || *v125 != 106) {
          continue;
        }
        *((void *)this + 1) = v125 + 1;
LABEL_270:
        *(_DWORD *)(a1 + 392) |= 0x1000u;
        uint64_t v126 = *(void *)(a1 + 104);
        if (!v126) {
          operator new();
        }
        unsigned int v475 = 0;
        uint64_t v127 = (char *)*((void *)this + 1);
        if ((unint64_t)v127 >= *((void *)this + 2) || *v127 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v127;
          *((void *)this + 1) = v127 + 1;
        }
        int v128 = *((_DWORD *)this + 14);
        int v129 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v128 + 1;
        if (v128 >= v129) {
          return 0;
        }
        int v130 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_100079394(v126, this, v131, v132) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v130);
        int v133 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v133, 1);
        int v134 = v133 - 1;
        if (v134 < 0 == v20) {
          *((_DWORD *)this + 14) = v134;
        }
        uint64_t v135 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v135 >= *((void *)this + 2) || *v135 != 114) {
          continue;
        }
        *((void *)this + 1) = v135 + 1;
LABEL_284:
        *(_DWORD *)(a1 + 392) |= 0x2000u;
        uint64_t v136 = *(void *)(a1 + 112);
        if (!v136) {
          operator new();
        }
        unsigned int v475 = 0;
        uint64_t v137 = (char *)*((void *)this + 1);
        if ((unint64_t)v137 >= *((void *)this + 2) || *v137 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v137;
          *((void *)this + 1) = v137 + 1;
        }
        int v138 = *((_DWORD *)this + 14);
        int v139 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v138 + 1;
        if (v138 >= v139) {
          return 0;
        }
        int v140 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_1000F48A4(v136, this, v141, v142) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v140);
        int v143 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v143, 1);
        int v144 = v143 - 1;
        if (v144 < 0 == v20) {
          *((_DWORD *)this + 14) = v144;
        }
        uint64_t v145 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v145 >= *((void *)this + 2) || *v145 != 122) {
          continue;
        }
        *((void *)this + 1) = v145 + 1;
LABEL_298:
        *(_DWORD *)(a1 + 392) |= 0x4000u;
        uint64_t v146 = *(void *)(a1 + 120);
        if (!v146) {
          operator new();
        }
        unsigned int v475 = 0;
        int v147 = (char *)*((void *)this + 1);
        if ((unint64_t)v147 >= *((void *)this + 2) || *v147 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v147;
          *((void *)this + 1) = v147 + 1;
        }
        int v148 = *((_DWORD *)this + 14);
        int v149 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v148 + 1;
        if (v148 >= v149) {
          return 0;
        }
        int v150 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_100111864(v146, this, v151, v152) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v150);
        int v153 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v153, 1);
        int v154 = v153 - 1;
        if (v154 < 0 == v20) {
          *((_DWORD *)this + 14) = v154;
        }
        unsigned int v155 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v155 <= 1 || *v155 != 130 || v155[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v155 + 2;
LABEL_313:
        *(_DWORD *)(a1 + 392) |= 0x8000u;
        uint64_t v156 = *(void *)(a1 + 128);
        if (!v156) {
          operator new();
        }
        unsigned int v475 = 0;
        uint64_t v157 = (char *)*((void *)this + 1);
        if ((unint64_t)v157 >= *((void *)this + 2) || *v157 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v157;
          *((void *)this + 1) = v157 + 1;
        }
        int v158 = *((_DWORD *)this + 14);
        int v159 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v158 + 1;
        if (v158 >= v159) {
          return 0;
        }
        int v160 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_10011A5DC(v156, this, v161, v162) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v160);
        int v163 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v163, 1);
        int v164 = v163 - 1;
        if (v164 < 0 == v20) {
          *((_DWORD *)this + 14) = v164;
        }
        int v165 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v165 <= 1 || *v165 != 138 || v165[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v165 + 2;
LABEL_328:
        *(_DWORD *)(a1 + 392) |= 0x10000u;
        uint64_t v166 = *(void *)(a1 + 136);
        if (!v166) {
          operator new();
        }
        unsigned int v475 = 0;
        int v167 = (char *)*((void *)this + 1);
        if ((unint64_t)v167 >= *((void *)this + 2) || *v167 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v167;
          *((void *)this + 1) = v167 + 1;
        }
        int v168 = *((_DWORD *)this + 14);
        int v169 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v168 + 1;
        if (v168 >= v169) {
          return 0;
        }
        int v170 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_10012BE40(v166, this, v171, v172) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v170);
        int v173 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v173, 1);
        int v174 = v173 - 1;
        if (v174 < 0 == v20) {
          *((_DWORD *)this + 14) = v174;
        }
        uint64_t v175 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v175 <= 1 || *v175 != 146 || v175[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v175 + 2;
LABEL_343:
        *(_DWORD *)(a1 + 392) |= 0x20000u;
        uint64_t v176 = *(void *)(a1 + 144);
        if (!v176) {
          operator new();
        }
        unsigned int v475 = 0;
        uint64_t v177 = (char *)*((void *)this + 1);
        if ((unint64_t)v177 >= *((void *)this + 2) || *v177 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v177;
          *((void *)this + 1) = v177 + 1;
        }
        int v178 = *((_DWORD *)this + 14);
        int v179 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v178 + 1;
        if (v178 >= v179) {
          return 0;
        }
        int v180 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_100104738(v176, this, v181, v182) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v180);
        int v183 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v183, 1);
        int v184 = v183 - 1;
        if (v184 < 0 == v20) {
          *((_DWORD *)this + 14) = v184;
        }
        int v185 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v185 <= 1 || *v185 != 154 || v185[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v185 + 2;
LABEL_358:
        *(_DWORD *)(a1 + 392) |= 0x40000u;
        uint64_t v186 = *(void *)(a1 + 152);
        if (!v186) {
          operator new();
        }
        unsigned int v475 = 0;
        v187 = (char *)*((void *)this + 1);
        if ((unint64_t)v187 >= *((void *)this + 2) || *v187 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v187;
          *((void *)this + 1) = v187 + 1;
        }
        int v188 = *((_DWORD *)this + 14);
        int v189 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v188 + 1;
        if (v188 >= v189) {
          return 0;
        }
        int v190 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_1001161F4(v186, this, v191, v192) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v190);
        int v193 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v193, 1);
        int v194 = v193 - 1;
        if (v194 < 0 == v20) {
          *((_DWORD *)this + 14) = v194;
        }
        uint64_t v195 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v195 <= 1 || *v195 != 162 || v195[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v195 + 2;
LABEL_373:
        *(_DWORD *)(a1 + 392) |= 0x80000u;
        uint64_t v196 = *(void *)(a1 + 160);
        if (!v196) {
          operator new();
        }
        unsigned int v475 = 0;
        uint64_t v197 = (char *)*((void *)this + 1);
        if ((unint64_t)v197 >= *((void *)this + 2) || *v197 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v197;
          *((void *)this + 1) = v197 + 1;
        }
        int v198 = *((_DWORD *)this + 14);
        int v199 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v198 + 1;
        if (v198 >= v199) {
          return 0;
        }
        int v200 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_1001196E8(v196, this, v201, v202) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v200);
        int v203 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v203, 1);
        int v204 = v203 - 1;
        if (v204 < 0 == v20) {
          *((_DWORD *)this + 14) = v204;
        }
        uint64_t v205 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v205 <= 1 || *v205 != 170 || v205[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v205 + 2;
LABEL_388:
        *(_DWORD *)(a1 + 392) |= 0x100000u;
        uint64_t v206 = *(void *)(a1 + 168);
        if (!v206) {
          operator new();
        }
        unsigned int v475 = 0;
        v207 = (char *)*((void *)this + 1);
        if ((unint64_t)v207 >= *((void *)this + 2) || *v207 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v207;
          *((void *)this + 1) = v207 + 1;
        }
        int v208 = *((_DWORD *)this + 14);
        int v209 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v208 + 1;
        if (v208 >= v209) {
          return 0;
        }
        int v210 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_10011B5C4(v206, this, v211, v212) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v210);
        int v213 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v213, 1);
        int v214 = v213 - 1;
        if (v214 < 0 == v20) {
          *((_DWORD *)this + 14) = v214;
        }
        v215 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v215 <= 1 || *v215 != 178 || v215[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v215 + 2;
LABEL_403:
        *(_DWORD *)(a1 + 392) |= 0x200000u;
        uint64_t v216 = *(void *)(a1 + 176);
        if (!v216) {
          operator new();
        }
        unsigned int v475 = 0;
        v217 = (char *)*((void *)this + 1);
        if ((unint64_t)v217 >= *((void *)this + 2) || *v217 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v217;
          *((void *)this + 1) = v217 + 1;
        }
        int v218 = *((_DWORD *)this + 14);
        int v219 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v218 + 1;
        if (v218 >= v219) {
          return 0;
        }
        int v220 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_10011C124(v216, this, v221, v222) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v220);
        int v223 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v223, 1);
        int v224 = v223 - 1;
        if (v224 < 0 == v20) {
          *((_DWORD *)this + 14) = v224;
        }
        v225 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v225 <= 1 || *v225 != 186 || v225[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v225 + 2;
LABEL_418:
        *(_DWORD *)(a1 + 392) |= 0x400000u;
        uint64_t v226 = *(void *)(a1 + 184);
        if (!v226) {
          operator new();
        }
        unsigned int v475 = 0;
        v227 = (char *)*((void *)this + 1);
        if ((unint64_t)v227 >= *((void *)this + 2) || *v227 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v227;
          *((void *)this + 1) = v227 + 1;
        }
        int v228 = *((_DWORD *)this + 14);
        int v229 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v228 + 1;
        if (v228 >= v229) {
          return 0;
        }
        int v230 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_10011CCBC(v226, this, v231, v232) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v230);
        int v233 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v233, 1);
        int v234 = v233 - 1;
        if (v234 < 0 == v20) {
          *((_DWORD *)this + 14) = v234;
        }
        v235 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v235 <= 1 || *v235 != 194 || v235[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v235 + 2;
LABEL_433:
        *(_DWORD *)(a1 + 392) |= 0x800000u;
        uint64_t v236 = *(void *)(a1 + 192);
        if (!v236) {
          operator new();
        }
        unsigned int v475 = 0;
        v237 = (char *)*((void *)this + 1);
        if ((unint64_t)v237 >= *((void *)this + 2) || *v237 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v237;
          *((void *)this + 1) = v237 + 1;
        }
        int v238 = *((_DWORD *)this + 14);
        int v239 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v238 + 1;
        if (v238 >= v239) {
          return 0;
        }
        int v240 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_10011DDD8(v236, this, v241, v242) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v240);
        int v243 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v243, 1);
        int v244 = v243 - 1;
        if (v244 < 0 == v20) {
          *((_DWORD *)this + 14) = v244;
        }
        v245 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v245 <= 1 || *v245 != 202 || v245[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v245 + 2;
LABEL_448:
        *(_DWORD *)(a1 + 392) |= 0x1000000u;
        uint64_t v246 = *(void *)(a1 + 200);
        if (!v246) {
          operator new();
        }
        unsigned int v475 = 0;
        v247 = (char *)*((void *)this + 1);
        if ((unint64_t)v247 >= *((void *)this + 2) || *v247 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v247;
          *((void *)this + 1) = v247 + 1;
        }
        int v248 = *((_DWORD *)this + 14);
        int v249 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v248 + 1;
        if (v248 >= v249) {
          return 0;
        }
        int v250 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_10011F9C0(v246, this, v251, v252) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v250);
        int v253 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v253, 1);
        int v254 = v253 - 1;
        if (v254 < 0 == v20) {
          *((_DWORD *)this + 14) = v254;
        }
        v255 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v255 <= 1 || *v255 != 210 || v255[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v255 + 2;
LABEL_463:
        *(_DWORD *)(a1 + 392) |= 0x2000000u;
        uint64_t v256 = *(void *)(a1 + 208);
        if (!v256) {
          operator new();
        }
        unsigned int v475 = 0;
        v257 = (char *)*((void *)this + 1);
        if ((unint64_t)v257 >= *((void *)this + 2) || *v257 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v257;
          *((void *)this + 1) = v257 + 1;
        }
        int v258 = *((_DWORD *)this + 14);
        int v259 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v258 + 1;
        if (v258 >= v259) {
          return 0;
        }
        int v260 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_10012136C(v256, this, v261, v262) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v260);
        int v263 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v263, 1);
        int v264 = v263 - 1;
        if (v264 < 0 == v20) {
          *((_DWORD *)this + 14) = v264;
        }
        v265 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v265 <= 1 || *v265 != 218 || v265[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v265 + 2;
LABEL_478:
        *(_DWORD *)(a1 + 392) |= 0x4000000u;
        uint64_t v266 = *(void *)(a1 + 216);
        if (!v266) {
          operator new();
        }
        unsigned int v475 = 0;
        v267 = (char *)*((void *)this + 1);
        if ((unint64_t)v267 >= *((void *)this + 2) || *v267 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v267;
          *((void *)this + 1) = v267 + 1;
        }
        int v268 = *((_DWORD *)this + 14);
        int v269 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v268 + 1;
        if (v268 >= v269) {
          return 0;
        }
        int v270 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_10011F9C0(v266, this, v271, v272) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v270);
        int v273 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v273, 1);
        int v274 = v273 - 1;
        if (v274 < 0 == v20) {
          *((_DWORD *)this + 14) = v274;
        }
        v275 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v275 <= 1 || *v275 != 226 || v275[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v275 + 2;
LABEL_493:
        *(_DWORD *)(a1 + 392) |= 0x8000000u;
        uint64_t v276 = *(void *)(a1 + 224);
        if (!v276) {
          operator new();
        }
        unsigned int v475 = 0;
        v277 = (char *)*((void *)this + 1);
        if ((unint64_t)v277 >= *((void *)this + 2) || *v277 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v277;
          *((void *)this + 1) = v277 + 1;
        }
        int v278 = *((_DWORD *)this + 14);
        int v279 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v278 + 1;
        if (v278 >= v279) {
          return 0;
        }
        int v280 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_1000DA964(v276, this, v281, v282) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v280);
        int v283 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v283, 1);
        int v284 = v283 - 1;
        if (v284 < 0 == v20) {
          *((_DWORD *)this + 14) = v284;
        }
        v285 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v285 <= 1 || *v285 != 234 || v285[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v285 + 2;
LABEL_508:
        *(_DWORD *)(a1 + 392) |= 0x10000000u;
        uint64_t v286 = *(void *)(a1 + 232);
        if (!v286) {
          operator new();
        }
        unsigned int v475 = 0;
        v287 = (char *)*((void *)this + 1);
        if ((unint64_t)v287 >= *((void *)this + 2) || *v287 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v287;
          *((void *)this + 1) = v287 + 1;
        }
        int v288 = *((_DWORD *)this + 14);
        int v289 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v288 + 1;
        if (v288 >= v289) {
          return 0;
        }
        int v290 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_10007D97C(v286, this, v291, v292) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v290);
        int v293 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v293, 1);
        int v294 = v293 - 1;
        if (v294 < 0 == v20) {
          *((_DWORD *)this + 14) = v294;
        }
        v295 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v295 <= 1 || *v295 != 242 || v295[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v295 + 2;
LABEL_523:
        *(_DWORD *)(a1 + 392) |= 0x20000000u;
        uint64_t v296 = *(void *)(a1 + 240);
        if (!v296) {
          operator new();
        }
        unsigned int v475 = 0;
        v297 = (char *)*((void *)this + 1);
        if ((unint64_t)v297 >= *((void *)this + 2) || *v297 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v297;
          *((void *)this + 1) = v297 + 1;
        }
        int v298 = *((_DWORD *)this + 14);
        int v299 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v298 + 1;
        if (v298 >= v299) {
          return 0;
        }
        int v300 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_100123B3C(v296, this, v301, v302) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v300);
        int v303 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v303, 1);
        int v304 = v303 - 1;
        if (v304 < 0 == v20) {
          *((_DWORD *)this + 14) = v304;
        }
        v305 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v305 <= 1 || *v305 != 250 || v305[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v305 + 2;
LABEL_538:
        *(_DWORD *)(a1 + 392) |= 0x40000000u;
        uint64_t v306 = *(void *)(a1 + 248);
        if (!v306) {
          operator new();
        }
        unsigned int v475 = 0;
        v307 = (char *)*((void *)this + 1);
        if ((unint64_t)v307 >= *((void *)this + 2) || *v307 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v307;
          *((void *)this + 1) = v307 + 1;
        }
        int v308 = *((_DWORD *)this + 14);
        int v309 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v308 + 1;
        if (v308 >= v309) {
          return 0;
        }
        int v310 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_1001250A0(v306, this, v311, v312) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v310);
        int v313 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v313, 1);
        int v314 = v313 - 1;
        if (v314 < 0 == v20) {
          *((_DWORD *)this + 14) = v314;
        }
        v315 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v315 <= 1 || *v315 != 130 || v315[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v315 + 2;
LABEL_553:
        *(_DWORD *)(a1 + 392) |= 0x80000000;
        uint64_t v316 = *(void *)(a1 + 256);
        if (!v316) {
          operator new();
        }
        unsigned int v475 = 0;
        v317 = (char *)*((void *)this + 1);
        if ((unint64_t)v317 >= *((void *)this + 2) || *v317 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v317;
          *((void *)this + 1) = v317 + 1;
        }
        int v318 = *((_DWORD *)this + 14);
        int v319 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v318 + 1;
        if (v318 >= v319) {
          return 0;
        }
        int v320 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_100128B2C(v316, this, v321, v322) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v320);
        int v323 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v323, 1);
        int v324 = v323 - 1;
        if (v324 < 0 == v20) {
          *((_DWORD *)this + 14) = v324;
        }
        v325 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v325 <= 1 || *v325 != 138 || v325[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v325 + 2;
LABEL_568:
        *(_DWORD *)(a1 + 396) |= 1u;
        uint64_t v326 = *(void *)(a1 + 264);
        if (!v326) {
          operator new();
        }
        unsigned int v475 = 0;
        v327 = (char *)*((void *)this + 1);
        if ((unint64_t)v327 >= *((void *)this + 2) || *v327 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v327;
          *((void *)this + 1) = v327 + 1;
        }
        int v328 = *((_DWORD *)this + 14);
        int v329 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v328 + 1;
        if (v328 >= v329) {
          return 0;
        }
        int v330 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_100129494(v326, this, v331, v332) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v330);
        int v333 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v333, 1);
        int v334 = v333 - 1;
        if (v334 < 0 == v20) {
          *((_DWORD *)this + 14) = v334;
        }
        v335 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v335 <= 1 || *v335 != 146 || v335[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v335 + 2;
LABEL_583:
        *(_DWORD *)(a1 + 396) |= 2u;
        uint64_t v336 = *(void *)(a1 + 272);
        if (!v336) {
          operator new();
        }
        unsigned int v475 = 0;
        v337 = (char *)*((void *)this + 1);
        if ((unint64_t)v337 >= *((void *)this + 2) || *v337 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v337;
          *((void *)this + 1) = v337 + 1;
        }
        int v338 = *((_DWORD *)this + 14);
        int v339 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v338 + 1;
        if (v338 >= v339) {
          return 0;
        }
        int v340 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_100129D20(v336, this, v341, v342) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v340);
        int v343 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v343, 1);
        int v344 = v343 - 1;
        if (v344 < 0 == v20) {
          *((_DWORD *)this + 14) = v344;
        }
        v345 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v345 <= 1 || *v345 != 154 || v345[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v345 + 2;
LABEL_598:
        *(_DWORD *)(a1 + 396) |= 4u;
        uint64_t v346 = *(void *)(a1 + 280);
        if (!v346) {
          operator new();
        }
        unsigned int v475 = 0;
        v347 = (char *)*((void *)this + 1);
        if ((unint64_t)v347 >= *((void *)this + 2) || *v347 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v347;
          *((void *)this + 1) = v347 + 1;
        }
        int v348 = *((_DWORD *)this + 14);
        int v349 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v348 + 1;
        if (v348 >= v349) {
          return 0;
        }
        int v350 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_1001273F4(v346, this, v351, v352) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v350);
        int v353 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v353, 1);
        int v354 = v353 - 1;
        if (v354 < 0 == v20) {
          *((_DWORD *)this + 14) = v354;
        }
        v355 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v355 <= 1 || *v355 != 162 || v355[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v355 + 2;
LABEL_613:
        *(_DWORD *)(a1 + 396) |= 8u;
        uint64_t v356 = *(void *)(a1 + 288);
        if (!v356) {
          operator new();
        }
        unsigned int v475 = 0;
        v357 = (char *)*((void *)this + 1);
        if ((unint64_t)v357 >= *((void *)this + 2) || *v357 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v357;
          *((void *)this + 1) = v357 + 1;
        }
        int v358 = *((_DWORD *)this + 14);
        int v359 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v358 + 1;
        if (v358 >= v359) {
          return 0;
        }
        int v360 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_10011F9C0(v356, this, v361, v362) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v360);
        int v363 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v363, 1);
        int v364 = v363 - 1;
        if (v364 < 0 == v20) {
          *((_DWORD *)this + 14) = v364;
        }
        v365 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v365 <= 1 || *v365 != 170 || v365[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v365 + 2;
LABEL_628:
        *(_DWORD *)(a1 + 396) |= 0x10u;
        uint64_t v366 = *(void *)(a1 + 296);
        if (!v366) {
          operator new();
        }
        unsigned int v475 = 0;
        v367 = (char *)*((void *)this + 1);
        if ((unint64_t)v367 >= *((void *)this + 2) || *v367 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v367;
          *((void *)this + 1) = v367 + 1;
        }
        int v368 = *((_DWORD *)this + 14);
        int v369 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v368 + 1;
        if (v368 >= v369) {
          return 0;
        }
        int v370 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_10007F0D4(v366, this, v371, v372) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v370);
        int v373 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v373, 1);
        int v374 = v373 - 1;
        if (v374 < 0 == v20) {
          *((_DWORD *)this + 14) = v374;
        }
        v375 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v375 <= 1 || *v375 != 178 || v375[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v375 + 2;
LABEL_643:
        *(_DWORD *)(a1 + 396) |= 0x20u;
        uint64_t v376 = *(void *)(a1 + 304);
        if (!v376) {
          operator new();
        }
        unsigned int v475 = 0;
        v377 = (char *)*((void *)this + 1);
        if ((unint64_t)v377 >= *((void *)this + 2) || *v377 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v377;
          *((void *)this + 1) = v377 + 1;
        }
        int v378 = *((_DWORD *)this + 14);
        int v379 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v378 + 1;
        if (v378 >= v379) {
          return 0;
        }
        int v380 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_1001245A4(v376, this, v381, v382) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v380);
        int v383 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v383, 1);
        int v384 = v383 - 1;
        if (v384 < 0 == v20) {
          *((_DWORD *)this + 14) = v384;
        }
        v385 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v385 <= 1 || *v385 != 186 || v385[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v385 + 2;
LABEL_658:
        *(_DWORD *)(a1 + 396) |= 0x40u;
        uint64_t v386 = *(void *)(a1 + 312);
        if (!v386) {
          operator new();
        }
        unsigned int v475 = 0;
        v387 = (char *)*((void *)this + 1);
        if ((unint64_t)v387 >= *((void *)this + 2) || *v387 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v387;
          *((void *)this + 1) = v387 + 1;
        }
        int v388 = *((_DWORD *)this + 14);
        int v389 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v388 + 1;
        if (v388 >= v389) {
          return 0;
        }
        int v390 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_10012A898(v386, this, v391, v392) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v390);
        int v393 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v393, 1);
        int v394 = v393 - 1;
        if (v394 < 0 == v20) {
          *((_DWORD *)this + 14) = v394;
        }
        v395 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v395 <= 1 || *v395 != 194 || v395[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v395 + 2;
LABEL_673:
        *(_DWORD *)(a1 + 396) |= 0x80u;
        v396 = *(int **)(a1 + 320);
        if (!v396) {
          operator new();
        }
        unsigned int v475 = 0;
        v397 = (char *)*((void *)this + 1);
        if ((unint64_t)v397 >= *((void *)this + 2) || *v397 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v397;
          *((void *)this + 1) = v397 + 1;
        }
        int v398 = *((_DWORD *)this + 14);
        int v399 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v398 + 1;
        if (v398 >= v399) {
          return 0;
        }
        int v400 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_100080DCC(v396, this, v401, v402) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v400);
        int v403 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v403, 1);
        int v404 = v403 - 1;
        if (v404 < 0 == v20) {
          *((_DWORD *)this + 14) = v404;
        }
        v405 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v405 <= 1 || *v405 != 202 || v405[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v405 + 2;
LABEL_688:
        *(_DWORD *)(a1 + 396) |= 0x100u;
        uint64_t v406 = *(void *)(a1 + 328);
        if (!v406) {
          operator new();
        }
        unsigned int v475 = 0;
        v407 = (char *)*((void *)this + 1);
        if ((unint64_t)v407 >= *((void *)this + 2) || *v407 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v407;
          *((void *)this + 1) = v407 + 1;
        }
        int v408 = *((_DWORD *)this + 14);
        int v409 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v408 + 1;
        if (v408 >= v409) {
          return 0;
        }
        int v410 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_100122F20(v406, this, v411, v412) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v410);
        int v413 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v413, 1);
        int v414 = v413 - 1;
        if (v414 < 0 == v20) {
          *((_DWORD *)this + 14) = v414;
        }
        v415 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v415 <= 1 || *v415 != 210 || v415[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v415 + 2;
LABEL_703:
        *(_DWORD *)(a1 + 396) |= 0x200u;
        v416 = *(unint64_t **)(a1 + 336);
        if (!v416) {
          operator new();
        }
        unsigned int v475 = 0;
        v417 = (char *)*((void *)this + 1);
        if ((unint64_t)v417 >= *((void *)this + 2) || *v417 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v417;
          *((void *)this + 1) = v417 + 1;
        }
        int v418 = *((_DWORD *)this + 14);
        int v419 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v418 + 1;
        if (v418 >= v419) {
          return 0;
        }
        int v420 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_10012CC08(v416, this, v421, v422) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v420);
        int v423 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v423, 1);
        int v424 = v423 - 1;
        if (v424 < 0 == v20) {
          *((_DWORD *)this + 14) = v424;
        }
        v425 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v425 <= 1 || *v425 != 218 || v425[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v425 + 2;
LABEL_718:
        *(_DWORD *)(a1 + 396) |= 0x400u;
        v426 = *(_DWORD **)(a1 + 344);
        if (!v426) {
          operator new();
        }
        unsigned int v475 = 0;
        v427 = (char *)*((void *)this + 1);
        if ((unint64_t)v427 >= *((void *)this + 2) || *v427 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v427;
          *((void *)this + 1) = v427 + 1;
        }
        int v428 = *((_DWORD *)this + 14);
        int v429 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v428 + 1;
        if (v428 >= v429) {
          return 0;
        }
        int v430 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_10012E284(v426, this, v431, v432) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v430);
        int v433 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v433, 1);
        int v434 = v433 - 1;
        if (v434 < 0 == v20) {
          *((_DWORD *)this + 14) = v434;
        }
        v435 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v435 <= 1 || *v435 != 226 || v435[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v435 + 2;
LABEL_733:
        *(_DWORD *)(a1 + 396) |= 0x800u;
        uint64_t v436 = *(void *)(a1 + 352);
        if (!v436) {
          operator new();
        }
        unsigned int v475 = 0;
        v437 = (char *)*((void *)this + 1);
        if ((unint64_t)v437 >= *((void *)this + 2) || *v437 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v437;
          *((void *)this + 1) = v437 + 1;
        }
        int v438 = *((_DWORD *)this + 14);
        int v439 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v438 + 1;
        if (v438 >= v439) {
          return 0;
        }
        int v440 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_10012FBDC(v436, this, v441, v442) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v440);
        int v443 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v443, 1);
        int v444 = v443 - 1;
        if (v444 < 0 == v20) {
          *((_DWORD *)this + 14) = v444;
        }
        v445 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v445 <= 1 || *v445 != 234 || v445[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v445 + 2;
LABEL_748:
        *(_DWORD *)(a1 + 396) |= 0x1000u;
        uint64_t v446 = *(void *)(a1 + 360);
        if (!v446) {
          operator new();
        }
        unsigned int v475 = 0;
        v447 = (char *)*((void *)this + 1);
        if ((unint64_t)v447 >= *((void *)this + 2) || *v447 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v447;
          *((void *)this + 1) = v447 + 1;
        }
        int v448 = *((_DWORD *)this + 14);
        int v449 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v448 + 1;
        if (v448 >= v449) {
          return 0;
        }
        int v450 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_100131294(v446, this, v451, v452) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v450);
        int v453 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v453, 1);
        int v454 = v453 - 1;
        if (v454 < 0 == v20) {
          *((_DWORD *)this + 14) = v454;
        }
        v455 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v455 <= 1 || *v455 != 242 || v455[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v455 + 2;
LABEL_763:
        *(_DWORD *)(a1 + 396) |= 0x2000u;
        uint64_t v456 = *(void *)(a1 + 368);
        if (!v456) {
          operator new();
        }
        unsigned int v475 = 0;
        v457 = (char *)*((void *)this + 1);
        if ((unint64_t)v457 >= *((void *)this + 2) || *v457 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v457;
          *((void *)this + 1) = v457 + 1;
        }
        int v458 = *((_DWORD *)this + 14);
        int v459 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v458 + 1;
        if (v458 >= v459) {
          return 0;
        }
        int v460 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_10012B3FC(v456, this, v461, v462) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v460);
        int v463 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v463, 1);
        int v464 = v463 - 1;
        if (v464 < 0 == v20) {
          *((_DWORD *)this + 14) = v464;
        }
        v465 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v465 <= 1 || *v465 != 250 || v465[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v465 + 2;
LABEL_778:
        *(_DWORD *)(a1 + 396) |= 0x4000u;
        uint64_t v466 = *(void *)(a1 + 376);
        if (!v466) {
          operator new();
        }
        unsigned int v475 = 0;
        v467 = (char *)*((void *)this + 1);
        if ((unint64_t)v467 >= *((void *)this + 2) || *v467 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v475))return 0; {
        }
          }
        else
        {
          unsigned int v475 = *v467;
          *((void *)this + 1) = v467 + 1;
        }
        int v468 = *((_DWORD *)this + 14);
        int v469 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v468 + 1;
        if (v468 >= v469) {
          return 0;
        }
        int v470 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v475);
        if (!sub_100131D50(v466, this, v471, v472) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v470);
        int v473 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v473, 1);
        int v474 = v473 - 1;
        if (v474 < 0 == v20) {
          *((_DWORD *)this + 14) = v474;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_133;
        }
        goto LABEL_107;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_147;
        }
        goto LABEL_107;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_161;
        }
        goto LABEL_107;
      case 6u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_107;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_175;
      case 7u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_186;
        }
        goto LABEL_107;
      case 8u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_200;
        }
        goto LABEL_107;
      case 9u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_214;
        }
        goto LABEL_107;
      case 0xAu:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_228;
        }
        goto LABEL_107;
      case 0xBu:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_242;
        }
        goto LABEL_107;
      case 0xCu:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_256;
        }
        goto LABEL_107;
      case 0xDu:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_270;
        }
        goto LABEL_107;
      case 0xEu:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_284;
        }
        goto LABEL_107;
      case 0xFu:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_298;
        }
        goto LABEL_107;
      case 0x10u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_313;
        }
        goto LABEL_107;
      case 0x11u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_328;
        }
        goto LABEL_107;
      case 0x12u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_343;
        }
        goto LABEL_107;
      case 0x13u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_358;
        }
        goto LABEL_107;
      case 0x14u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_373;
        }
        goto LABEL_107;
      case 0x15u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_388;
        }
        goto LABEL_107;
      case 0x16u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_403;
        }
        goto LABEL_107;
      case 0x17u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_418;
        }
        goto LABEL_107;
      case 0x18u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_433;
        }
        goto LABEL_107;
      case 0x19u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_448;
        }
        goto LABEL_107;
      case 0x1Au:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_463;
        }
        goto LABEL_107;
      case 0x1Bu:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_478;
        }
        goto LABEL_107;
      case 0x1Cu:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_493;
        }
        goto LABEL_107;
      case 0x1Du:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_508;
        }
        goto LABEL_107;
      case 0x1Eu:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_523;
        }
        goto LABEL_107;
      case 0x1Fu:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_538;
        }
        goto LABEL_107;
      case 0x20u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_553;
        }
        goto LABEL_107;
      case 0x21u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_568;
        }
        goto LABEL_107;
      case 0x22u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_583;
        }
        goto LABEL_107;
      case 0x23u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_598;
        }
        goto LABEL_107;
      case 0x24u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_613;
        }
        goto LABEL_107;
      case 0x25u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_628;
        }
        goto LABEL_107;
      case 0x26u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_643;
        }
        goto LABEL_107;
      case 0x27u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_658;
        }
        goto LABEL_107;
      case 0x28u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_673;
        }
        goto LABEL_107;
      case 0x29u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_688;
        }
        goto LABEL_107;
      case 0x2Au:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_703;
        }
        goto LABEL_107;
      case 0x2Bu:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_718;
        }
        goto LABEL_107;
      case 0x2Cu:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_733;
        }
        goto LABEL_107;
      case 0x2Du:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_748;
        }
        goto LABEL_107;
      case 0x2Eu:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_763;
        }
        goto LABEL_107;
      case 0x2Fu:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_778;
        }
        goto LABEL_107;
      default:
        int v9 = TagFallback & 7;
LABEL_107:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_100086844()
{
}

uint64_t sub_100086C40(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 392);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 16);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1008ABE98 + 16);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 392);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_40;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1008ABE98 + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_43;
  }
LABEL_40:
  uint64_t v9 = *(void *)(v5 + 32);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_1008ABE98 + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_46;
  }
LABEL_43:
  uint64_t v10 = *(void *)(v5 + 40);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_1008ABE98 + 40);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_49;
  }
LABEL_46:
  uint64_t v11 = *(void *)(v5 + 48);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_1008ABE98 + 48);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v11, a2, a4);
  int v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_50;
  }
LABEL_49:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 384), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_53;
  }
LABEL_50:
  uint64_t v12 = *(void *)(v5 + 56);
  if (!v12) {
    uint64_t v12 = *(void *)(qword_1008ABE98 + 56);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v12, a2, a4);
  int v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_56;
  }
LABEL_53:
  uint64_t v13 = *(void *)(v5 + 64);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_1008ABE98 + 64);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v13, a2, a4);
  int v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_59;
  }
LABEL_56:
  uint64_t v14 = *(void *)(v5 + 72);
  if (!v14) {
    uint64_t v14 = *(void *)(qword_1008ABE98 + 72);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v14, a2, a4);
  int v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_62;
  }
LABEL_59:
  uint64_t v15 = *(void *)(v5 + 80);
  if (!v15) {
    uint64_t v15 = *(void *)(qword_1008ABE98 + 80);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v15, a2, a4);
  int v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_65;
  }
LABEL_62:
  uint64_t v16 = *(void *)(v5 + 88);
  if (!v16) {
    uint64_t v16 = *(void *)(qword_1008ABE98 + 88);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v16, a2, a4);
  int v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_68;
  }
LABEL_65:
  uint64_t v17 = *(void *)(v5 + 96);
  if (!v17) {
    uint64_t v17 = *(void *)(qword_1008ABE98 + 96);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v17, a2, a4);
  int v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_71;
  }
LABEL_68:
  uint64_t v18 = *(void *)(v5 + 104);
  if (!v18) {
    uint64_t v18 = *(void *)(qword_1008ABE98 + 104);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v18, a2, a4);
  int v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_74;
  }
LABEL_71:
  uint64_t v19 = *(void *)(v5 + 112);
  if (!v19) {
    uint64_t v19 = *(void *)(qword_1008ABE98 + 112);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v19, a2, a4);
  int v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_77;
  }
LABEL_74:
  uint64_t v20 = *(void *)(v5 + 120);
  if (!v20) {
    uint64_t v20 = *(void *)(qword_1008ABE98 + 120);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, v20, a2, a4);
  int v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_80;
  }
LABEL_77:
  uint64_t v21 = *(void *)(v5 + 128);
  if (!v21) {
    uint64_t v21 = *(void *)(qword_1008ABE98 + 128);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v21, a2, a4);
  int v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_83;
  }
LABEL_80:
  uint64_t v22 = *(void *)(v5 + 136);
  if (!v22) {
    uint64_t v22 = *(void *)(qword_1008ABE98 + 136);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, v22, a2, a4);
  int v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_86;
  }
LABEL_83:
  uint64_t v23 = *(void *)(v5 + 144);
  if (!v23) {
    uint64_t v23 = *(void *)(qword_1008ABE98 + 144);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, v23, a2, a4);
  int v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_89;
  }
LABEL_86:
  uint64_t v24 = *(void *)(v5 + 152);
  if (!v24) {
    uint64_t v24 = *(void *)(qword_1008ABE98 + 152);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, v24, a2, a4);
  int v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_92;
  }
LABEL_89:
  uint64_t v25 = *(void *)(v5 + 160);
  if (!v25) {
    uint64_t v25 = *(void *)(qword_1008ABE98 + 160);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, v25, a2, a4);
  int v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_95;
  }
LABEL_92:
  uint64_t v26 = *(void *)(v5 + 168);
  if (!v26) {
    uint64_t v26 = *(void *)(qword_1008ABE98 + 168);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, v26, a2, a4);
  int v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_98;
  }
LABEL_95:
  uint64_t v27 = *(void *)(v5 + 176);
  if (!v27) {
    uint64_t v27 = *(void *)(qword_1008ABE98 + 176);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, v27, a2, a4);
  int v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_101;
  }
LABEL_98:
  uint64_t v28 = *(void *)(v5 + 184);
  if (!v28) {
    uint64_t v28 = *(void *)(qword_1008ABE98 + 184);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, v28, a2, a4);
  int v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_104;
  }
LABEL_101:
  uint64_t v29 = *(void *)(v5 + 192);
  if (!v29) {
    uint64_t v29 = *(void *)(qword_1008ABE98 + 192);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, v29, a2, a4);
  int v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_107;
  }
LABEL_104:
  uint64_t v30 = *(void *)(v5 + 200);
  if (!v30) {
    uint64_t v30 = *(void *)(qword_1008ABE98 + 200);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, v30, a2, a4);
  int v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_110;
  }
LABEL_107:
  uint64_t v31 = *(void *)(v5 + 208);
  if (!v31) {
    uint64_t v31 = *(void *)(qword_1008ABE98 + 208);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, v31, a2, a4);
  int v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_113;
  }
LABEL_110:
  uint64_t v32 = *(void *)(v5 + 216);
  if (!v32) {
    uint64_t v32 = *(void *)(qword_1008ABE98 + 216);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, v32, a2, a4);
  int v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_116;
  }
LABEL_113:
  uint64_t v33 = *(void *)(v5 + 224);
  if (!v33) {
    uint64_t v33 = *(void *)(qword_1008ABE98 + 224);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, v33, a2, a4);
  int v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_119;
  }
LABEL_116:
  uint64_t v34 = *(void *)(v5 + 232);
  if (!v34) {
    uint64_t v34 = *(void *)(qword_1008ABE98 + 232);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, v34, a2, a4);
  int v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_122;
  }
LABEL_119:
  uint64_t v35 = *(void *)(v5 + 240);
  if (!v35) {
    uint64_t v35 = *(void *)(qword_1008ABE98 + 240);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, v35, a2, a4);
  int v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x40000000) == 0)
  {
LABEL_32:
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_128;
    }
    goto LABEL_125;
  }
LABEL_122:
  uint64_t v36 = *(void *)(v5 + 248);
  if (!v36) {
    uint64_t v36 = *(void *)(qword_1008ABE98 + 248);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1F, v36, a2, a4);
  if ((*(_DWORD *)(v5 + 392) & 0x80000000) != 0)
  {
LABEL_125:
    uint64_t v37 = *(void *)(v5 + 256);
    if (!v37) {
      uint64_t v37 = *(void *)(qword_1008ABE98 + 256);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x20, v37, a2, a4);
  }
LABEL_128:
  int v38 = *(_DWORD *)(v5 + 396);
  if (v38)
  {
    uint64_t v39 = *(void *)(v5 + 264);
    if (!v39) {
      uint64_t v39 = *(void *)(qword_1008ABE98 + 264);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x21, v39, a2, a4);
    int v38 = *(_DWORD *)(v5 + 396);
    if ((v38 & 2) == 0)
    {
LABEL_130:
      if ((v38 & 4) == 0) {
        goto LABEL_131;
      }
      goto LABEL_150;
    }
  }
  else if ((v38 & 2) == 0)
  {
    goto LABEL_130;
  }
  uint64_t v40 = *(void *)(v5 + 272);
  if (!v40) {
    uint64_t v40 = *(void *)(qword_1008ABE98 + 272);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x22, v40, a2, a4);
  int v38 = *(_DWORD *)(v5 + 396);
  if ((v38 & 4) == 0)
  {
LABEL_131:
    if ((v38 & 8) == 0) {
      goto LABEL_132;
    }
    goto LABEL_153;
  }
LABEL_150:
  uint64_t v41 = *(void *)(v5 + 280);
  if (!v41) {
    uint64_t v41 = *(void *)(qword_1008ABE98 + 280);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x23, v41, a2, a4);
  int v38 = *(_DWORD *)(v5 + 396);
  if ((v38 & 8) == 0)
  {
LABEL_132:
    if ((v38 & 0x10) == 0) {
      goto LABEL_133;
    }
    goto LABEL_156;
  }
LABEL_153:
  uint64_t v42 = *(void *)(v5 + 288);
  if (!v42) {
    uint64_t v42 = *(void *)(qword_1008ABE98 + 288);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x24, v42, a2, a4);
  int v38 = *(_DWORD *)(v5 + 396);
  if ((v38 & 0x10) == 0)
  {
LABEL_133:
    if ((v38 & 0x20) == 0) {
      goto LABEL_134;
    }
    goto LABEL_159;
  }
LABEL_156:
  uint64_t v43 = *(void *)(v5 + 296);
  if (!v43) {
    uint64_t v43 = *(void *)(qword_1008ABE98 + 296);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x25, v43, a2, a4);
  int v38 = *(_DWORD *)(v5 + 396);
  if ((v38 & 0x20) == 0)
  {
LABEL_134:
    if ((v38 & 0x40) == 0) {
      goto LABEL_135;
    }
    goto LABEL_162;
  }
LABEL_159:
  uint64_t v44 = *(void *)(v5 + 304);
  if (!v44) {
    uint64_t v44 = *(void *)(qword_1008ABE98 + 304);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x26, v44, a2, a4);
  int v38 = *(_DWORD *)(v5 + 396);
  if ((v38 & 0x40) == 0)
  {
LABEL_135:
    if ((v38 & 0x80) == 0) {
      goto LABEL_136;
    }
    goto LABEL_165;
  }
LABEL_162:
  uint64_t v45 = *(void *)(v5 + 312);
  if (!v45) {
    uint64_t v45 = *(void *)(qword_1008ABE98 + 312);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x27, v45, a2, a4);
  int v38 = *(_DWORD *)(v5 + 396);
  if ((v38 & 0x80) == 0)
  {
LABEL_136:
    if ((v38 & 0x100) == 0) {
      goto LABEL_137;
    }
    goto LABEL_168;
  }
LABEL_165:
  uint64_t v46 = *(void *)(v5 + 320);
  if (!v46) {
    uint64_t v46 = *(void *)(qword_1008ABE98 + 320);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x28, v46, a2, a4);
  int v38 = *(_DWORD *)(v5 + 396);
  if ((v38 & 0x100) == 0)
  {
LABEL_137:
    if ((v38 & 0x200) == 0) {
      goto LABEL_138;
    }
    goto LABEL_171;
  }
LABEL_168:
  uint64_t v47 = *(void *)(v5 + 328);
  if (!v47) {
    uint64_t v47 = *(void *)(qword_1008ABE98 + 328);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x29, v47, a2, a4);
  int v38 = *(_DWORD *)(v5 + 396);
  if ((v38 & 0x200) == 0)
  {
LABEL_138:
    if ((v38 & 0x400) == 0) {
      goto LABEL_139;
    }
    goto LABEL_174;
  }
LABEL_171:
  uint64_t v48 = *(void *)(v5 + 336);
  if (!v48) {
    uint64_t v48 = *(void *)(qword_1008ABE98 + 336);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2A, v48, a2, a4);
  int v38 = *(_DWORD *)(v5 + 396);
  if ((v38 & 0x400) == 0)
  {
LABEL_139:
    if ((v38 & 0x800) == 0) {
      goto LABEL_140;
    }
    goto LABEL_177;
  }
LABEL_174:
  uint64_t v49 = *(void *)(v5 + 344);
  if (!v49) {
    uint64_t v49 = *(void *)(qword_1008ABE98 + 344);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2B, v49, a2, a4);
  int v38 = *(_DWORD *)(v5 + 396);
  if ((v38 & 0x800) == 0)
  {
LABEL_140:
    if ((v38 & 0x1000) == 0) {
      goto LABEL_141;
    }
    goto LABEL_180;
  }
LABEL_177:
  uint64_t v50 = *(void *)(v5 + 352);
  if (!v50) {
    uint64_t v50 = *(void *)(qword_1008ABE98 + 352);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2C, v50, a2, a4);
  int v38 = *(_DWORD *)(v5 + 396);
  if ((v38 & 0x1000) == 0)
  {
LABEL_141:
    if ((v38 & 0x2000) == 0) {
      goto LABEL_142;
    }
    goto LABEL_183;
  }
LABEL_180:
  uint64_t v51 = *(void *)(v5 + 360);
  if (!v51) {
    uint64_t v51 = *(void *)(qword_1008ABE98 + 360);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2D, v51, a2, a4);
  int v38 = *(_DWORD *)(v5 + 396);
  if ((v38 & 0x2000) == 0)
  {
LABEL_142:
    if ((v38 & 0x4000) == 0) {
      goto LABEL_189;
    }
    goto LABEL_186;
  }
LABEL_183:
  uint64_t v52 = *(void *)(v5 + 368);
  if (!v52) {
    uint64_t v52 = *(void *)(qword_1008ABE98 + 368);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2E, v52, a2, a4);
  if ((*(_DWORD *)(v5 + 396) & 0x4000) != 0)
  {
LABEL_186:
    uint64_t v53 = *(void *)(v5 + 376);
    if (!v53) {
      uint64_t v53 = *(void *)(qword_1008ABE98 + 376);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2F, v53, a2, a4);
  }
LABEL_189:
  int v56 = *(void **)(v5 + 8);
  int v55 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v54 = v56;
  if (v56 && *v54 != v54[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v55, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000874A0(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  int v4 = a2;
  int v6 = *((_DWORD *)this + 98);
  if (v6)
  {
    uint64_t v7 = (unsigned int *)*((void *)this + 2);
    if (!v7) {
      uint64_t v7 = *(unsigned int **)(qword_1008ABE98 + 16);
    }
    *(unsigned char *)a2 = 10;
    unsigned int v8 = a2 + 1;
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7[8];
    if (v9 > 0x7F)
    {
      uint64_t v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, v8, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v9;
      uint64_t v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
    int v4 = sub_100072AA8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v7, v10, a3);
    int v6 = *((_DWORD *)this + 98);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v11 = (unsigned int *)*((void *)this + 3);
  if (!v11) {
    uint64_t v11 = *(unsigned int **)(qword_1008ABE98 + 24);
  }
  *(unsigned char *)int v4 = 18;
  uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[17];
  if (v12 > 0x7F)
  {
    uint64_t v13 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v12;
    uint64_t v13 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  int v4 = sub_1000C6D7C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, v13, a3, a4);
  int v6 = *((_DWORD *)this + 98);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_26;
  }
LABEL_20:
  uint64_t v14 = (unsigned int *)*((void *)this + 4);
  if (!v14) {
    uint64_t v14 = *(unsigned int **)(qword_1008ABE98 + 32);
  }
  *(unsigned char *)int v4 = 26;
  uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14[6];
  if (v15 > 0x7F)
  {
    uint64_t v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v15;
    uint64_t v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  int v4 = sub_1000C7998((wireless_diagnostics::google::protobuf::internal::WireFormat *)v14, v16, a3, a4);
  int v6 = *((_DWORD *)this + 98);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_32:
    uint64_t v20 = (unsigned int *)*((void *)this + 6);
    if (!v20) {
      uint64_t v20 = *(unsigned int **)(qword_1008ABE98 + 48);
    }
    *(unsigned char *)int v4 = 42;
    uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v20[19];
    if (v21 > 0x7F)
    {
      uint64_t v22 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, (int)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v21;
      uint64_t v22 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
    int v4 = sub_1001364D8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v20, v22, a3);
    if ((*((_DWORD *)this + 98) & 0x20) == 0) {
      goto LABEL_44;
    }
    goto LABEL_38;
  }
LABEL_26:
  uint64_t v17 = (unsigned int *)*((void *)this + 5);
  if (!v17) {
    uint64_t v17 = *(unsigned int **)(qword_1008ABE98 + 40);
  }
  *(unsigned char *)int v4 = 34;
  uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17[8];
  if (v18 > 0x7F)
  {
    uint64_t v19 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v18;
    uint64_t v19 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  int v4 = sub_1000C8354((wireless_diagnostics::google::protobuf::internal::WireFormat *)v17, v19, a3, a4);
  int v6 = *((_DWORD *)this + 98);
  if ((v6 & 0x10) != 0) {
    goto LABEL_32;
  }
LABEL_6:
  if ((v6 & 0x20) == 0) {
    goto LABEL_44;
  }
LABEL_38:
  uint64_t v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 96);
  *(unsigned char *)int v4 = 48;
  unint64_t v24 = (unint64_t)v4 + 1;
  if ((v23 & 0x80000000) != 0)
  {
    uint64_t v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v23, v24, a3);
  }
  else
  {
    if (v23 <= 0x7F)
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v23;
      int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      goto LABEL_44;
    }
    uint64_t v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v23, v24, a3);
  }
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v25;
LABEL_44:
  int v26 = *((_DWORD *)this + 98);
  if ((v26 & 0x40) != 0)
  {
    uint64_t v27 = *((void *)this + 7);
    if (!v27) {
      uint64_t v27 = *(void *)(qword_1008ABE98 + 56);
    }
    *(unsigned char *)int v4 = 58;
    uint64_t v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v27 + 36);
    if (v28 > 0x7F)
    {
      uint64_t v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v28, (int)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v28;
      uint64_t v29 = (uint64_t)v4 + 2;
    }
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100073B2C(v27, v29, a3);
    int v26 = *((_DWORD *)this + 98);
    if ((v26 & 0x80) == 0)
    {
LABEL_46:
      if ((v26 & 0x100) == 0) {
        goto LABEL_47;
      }
      goto LABEL_83;
    }
  }
  else if ((v26 & 0x80) == 0)
  {
    goto LABEL_46;
  }
  uint64_t v30 = (unsigned int *)*((void *)this + 8);
  if (!v30) {
    uint64_t v30 = *(unsigned int **)(qword_1008ABE98 + 64);
  }
  *(unsigned char *)int v4 = 66;
  uint64_t v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v30[16];
  if (v31 > 0x7F)
  {
    uint64_t v32 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v31, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v31;
    uint64_t v32 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  int v4 = sub_100075314((wireless_diagnostics::google::protobuf::internal::WireFormat *)v30, v32, a3);
  int v26 = *((_DWORD *)this + 98);
  if ((v26 & 0x100) == 0)
  {
LABEL_47:
    if ((v26 & 0x200) == 0) {
      goto LABEL_48;
    }
    goto LABEL_89;
  }
LABEL_83:
  uint64_t v33 = (unsigned int *)*((void *)this + 9);
  if (!v33) {
    uint64_t v33 = *(unsigned int **)(qword_1008ABE98 + 72);
  }
  *(unsigned char *)int v4 = 74;
  uint64_t v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v33[8];
  if (v34 > 0x7F)
  {
    uint64_t v35 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v34, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v34;
    uint64_t v35 = (char *)v4 + 2;
  }
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100075EB0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v33, v35, a3);
  int v26 = *((_DWORD *)this + 98);
  if ((v26 & 0x200) == 0)
  {
LABEL_48:
    if ((v26 & 0x400) == 0) {
      goto LABEL_49;
    }
    goto LABEL_95;
  }
LABEL_89:
  uint64_t v36 = (unsigned int *)*((void *)this + 10);
  if (!v36) {
    uint64_t v36 = *(unsigned int **)(qword_1008ABE98 + 80);
  }
  *(unsigned char *)int v4 = 82;
  uint64_t v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v36[26];
  if (v37 > 0x7F)
  {
    int v38 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v37, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v37;
    int v38 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  int v4 = sub_1000773F8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v36, v38, a3);
  int v26 = *((_DWORD *)this + 98);
  if ((v26 & 0x400) == 0)
  {
LABEL_49:
    if ((v26 & 0x800) == 0) {
      goto LABEL_50;
    }
    goto LABEL_101;
  }
LABEL_95:
  uint64_t v39 = (unsigned int *)*((void *)this + 11);
  if (!v39) {
    uint64_t v39 = *(unsigned int **)(qword_1008ABE98 + 88);
  }
  *(unsigned char *)int v4 = 90;
  uint64_t v40 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v39[8];
  if (v40 > 0x7F)
  {
    uint64_t v41 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v40, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v40;
    uint64_t v41 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  int v4 = sub_100078288((wireless_diagnostics::google::protobuf::internal::WireFormat *)v39, v41, a3);
  int v26 = *((_DWORD *)this + 98);
  if ((v26 & 0x800) == 0)
  {
LABEL_50:
    if ((v26 & 0x1000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_107;
  }
LABEL_101:
  uint64_t v42 = (unsigned int *)*((void *)this + 12);
  if (!v42) {
    uint64_t v42 = *(unsigned int **)(qword_1008ABE98 + 96);
  }
  *(unsigned char *)int v4 = 98;
  uint64_t v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v42[9];
  if (v43 > 0x7F)
  {
    uint64_t v44 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v43, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v43;
    uint64_t v44 = (char *)v4 + 2;
  }
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100078CE4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v42, v44, a3);
  int v26 = *((_DWORD *)this + 98);
  if ((v26 & 0x1000) == 0)
  {
LABEL_51:
    if ((v26 & 0x2000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_113;
  }
LABEL_107:
  uint64_t v45 = (unsigned int *)*((void *)this + 13);
  if (!v45) {
    uint64_t v45 = *(unsigned int **)(qword_1008ABE98 + 104);
  }
  *(unsigned char *)int v4 = 106;
  uint64_t v46 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v45[13];
  if (v46 > 0x7F)
  {
    uint64_t v47 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v46, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v46;
    uint64_t v47 = (uint64_t)v4 + 2;
  }
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100079828((wireless_diagnostics::google::protobuf::internal::WireFormat *)v45, v47, a3);
  int v26 = *((_DWORD *)this + 98);
  if ((v26 & 0x2000) == 0)
  {
LABEL_52:
    if ((v26 & 0x4000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_119;
  }
LABEL_113:
  uint64_t v48 = (unsigned int *)*((void *)this + 14);
  if (!v48) {
    uint64_t v48 = *(unsigned int **)(qword_1008ABE98 + 112);
  }
  *(unsigned char *)int v4 = 114;
  uint64_t v49 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v48[36];
  if (v49 > 0x7F)
  {
    uint64_t v50 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v49, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v49;
    uint64_t v50 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  int v4 = sub_1000F5E00((wireless_diagnostics::google::protobuf::internal::WireFormat *)v48, v50, a3, a4);
  int v26 = *((_DWORD *)this + 98);
  if ((v26 & 0x4000) == 0)
  {
LABEL_53:
    if ((v26 & 0x8000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_125;
  }
LABEL_119:
  uint64_t v51 = *((void *)this + 15);
  if (!v51) {
    uint64_t v51 = *(void *)(qword_1008ABE98 + 120);
  }
  *(unsigned char *)int v4 = 122;
  uint64_t v52 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v51 + 48);
  if (v52 > 0x7F)
  {
    uint64_t v53 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v52, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v52;
    uint64_t v53 = (uint64_t)v4 + 2;
  }
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100111DB4(v51, v53, a3);
  int v26 = *((_DWORD *)this + 98);
  if ((v26 & 0x8000) == 0)
  {
LABEL_54:
    if ((v26 & 0x10000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_131;
  }
LABEL_125:
  uint64_t v54 = (unsigned int *)*((void *)this + 16);
  if (!v54) {
    uint64_t v54 = *(unsigned int **)(qword_1008ABE98 + 128);
  }
  *(_WORD *)int v4 = 386;
  int v55 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v54[14];
  if (v55 > 0x7F)
  {
    int v56 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v55, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v55;
    int v56 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  int v4 = sub_10011AC00((wireless_diagnostics::google::protobuf::internal::WireFormat *)v54, v56, a3, a4);
  int v26 = *((_DWORD *)this + 98);
  if ((v26 & 0x10000) == 0)
  {
LABEL_55:
    if ((v26 & 0x20000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_137;
  }
LABEL_131:
  int v57 = (unsigned int *)*((void *)this + 17);
  if (!v57) {
    int v57 = *(unsigned int **)(qword_1008ABE98 + 136);
  }
  *(_WORD *)int v4 = 394;
  uint64_t v58 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v57[14];
  if (v58 > 0x7F)
  {
    uint64_t v59 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v58, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v58;
    uint64_t v59 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  int v4 = sub_10012C20C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v57, v59, a3, a4);
  int v26 = *((_DWORD *)this + 98);
  if ((v26 & 0x20000) == 0)
  {
LABEL_56:
    if ((v26 & 0x40000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_143;
  }
LABEL_137:
  int v60 = (unsigned int *)*((void *)this + 18);
  if (!v60) {
    int v60 = *(unsigned int **)(qword_1008ABE98 + 144);
  }
  *(_WORD *)int v4 = 402;
  int v61 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v60[18];
  if (v61 > 0x7F)
  {
    uint64_t v62 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v61, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v61;
    uint64_t v62 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  int v4 = sub_100104D90((wireless_diagnostics::google::protobuf::internal::WireFormat *)v60, v62, a3, a4);
  int v26 = *((_DWORD *)this + 98);
  if ((v26 & 0x40000) == 0)
  {
LABEL_57:
    if ((v26 & 0x80000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_149;
  }
LABEL_143:
  signed int v63 = (unsigned int *)*((void *)this + 19);
  if (!v63) {
    signed int v63 = *(unsigned int **)(qword_1008ABE98 + 152);
  }
  *(_WORD *)int v4 = 410;
  uint64_t v64 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v63[12];
  if (v64 > 0x7F)
  {
    uint64_t v65 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v64, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v64;
    uint64_t v65 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  int v4 = sub_1001165E8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v63, v65, a3);
  int v26 = *((_DWORD *)this + 98);
  if ((v26 & 0x80000) == 0)
  {
LABEL_58:
    if ((v26 & 0x100000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_155;
  }
LABEL_149:
  uint64_t v66 = (unsigned int *)*((void *)this + 20);
  if (!v66) {
    uint64_t v66 = *(unsigned int **)(qword_1008ABE98 + 160);
  }
  *(_WORD *)int v4 = 418;
  uint64_t v67 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v66[10];
  if (v67 > 0x7F)
  {
    int v68 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v67, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v67;
    int v68 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  int v4 = sub_100119BE0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v66, v68, a3);
  int v26 = *((_DWORD *)this + 98);
  if ((v26 & 0x100000) == 0)
  {
LABEL_59:
    if ((v26 & 0x200000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_161;
  }
LABEL_155:
  int v69 = (unsigned int *)*((void *)this + 21);
  if (!v69) {
    int v69 = *(unsigned int **)(qword_1008ABE98 + 168);
  }
  *(_WORD *)int v4 = 426;
  int v70 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v69[12];
  if (v70 > 0x7F)
  {
    uint64_t v71 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v70, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v70;
    uint64_t v71 = (uint64_t)v4 + 3;
  }
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10011B914((wireless_diagnostics::google::protobuf::internal::WireFormat *)v69, v71, a3, a4);
  int v26 = *((_DWORD *)this + 98);
  if ((v26 & 0x200000) == 0)
  {
LABEL_60:
    if ((v26 & 0x400000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_167;
  }
LABEL_161:
  uint64_t v72 = (unsigned int *)*((void *)this + 22);
  if (!v72) {
    uint64_t v72 = *(unsigned int **)(qword_1008ABE98 + 176);
  }
  *(_WORD *)int v4 = 434;
  int v73 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v72[9];
  if (v73 > 0x7F)
  {
    uint64_t v74 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v73, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v73;
    uint64_t v74 = (uint64_t)v4 + 3;
  }
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10011C400((wireless_diagnostics::google::protobuf::internal::WireFormat *)v72, v74, a3, a4);
  int v26 = *((_DWORD *)this + 98);
  if ((v26 & 0x400000) == 0)
  {
LABEL_61:
    if ((v26 & 0x800000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_173;
  }
LABEL_167:
  uint64_t v75 = (unsigned int *)*((void *)this + 23);
  if (!v75) {
    uint64_t v75 = *(unsigned int **)(qword_1008ABE98 + 184);
  }
  *(_WORD *)int v4 = 442;
  uint64_t v76 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v75[19];
  if (v76 > 0x7F)
  {
    uint64_t v77 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v76, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v76;
    uint64_t v77 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  int v4 = sub_10011D2C8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v75, v77, a3, a4);
  int v26 = *((_DWORD *)this + 98);
  if ((v26 & 0x800000) == 0)
  {
LABEL_62:
    if ((v26 & 0x1000000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_179;
  }
LABEL_173:
  int v78 = (unsigned int *)*((void *)this + 24);
  if (!v78) {
    int v78 = *(unsigned int **)(qword_1008ABE98 + 192);
  }
  *(_WORD *)int v4 = 450;
  int v79 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v78[13];
  if (v79 > 0x7F)
  {
    int v80 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v79, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v79;
    int v80 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  int v4 = sub_10011E520((wireless_diagnostics::google::protobuf::internal::WireFormat *)v78, v80, a3, a4);
  int v26 = *((_DWORD *)this + 98);
  if ((v26 & 0x1000000) == 0)
  {
LABEL_63:
    if ((v26 & 0x2000000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_185;
  }
LABEL_179:
  uint64_t v81 = (unsigned int *)*((void *)this + 25);
  if (!v81) {
    uint64_t v81 = *(unsigned int **)(qword_1008ABE98 + 200);
  }
  *(_WORD *)int v4 = 458;
  uint64_t v82 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v81[34];
  if (v82 > 0x7F)
  {
    int v83 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v82, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v82;
    int v83 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  int v4 = sub_100120500((wireless_diagnostics::google::protobuf::internal::WireFormat *)v81, v83, a3, a4);
  int v26 = *((_DWORD *)this + 98);
  if ((v26 & 0x2000000) == 0)
  {
LABEL_64:
    if ((v26 & 0x4000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_191;
  }
LABEL_185:
  int v84 = (unsigned int *)*((void *)this + 26);
  if (!v84) {
    int v84 = *(unsigned int **)(qword_1008ABE98 + 208);
  }
  *(_WORD *)int v4 = 466;
  uint64_t v85 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v84[14];
  if (v85 > 0x7F)
  {
    uint64_t v86 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v85, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v85;
    uint64_t v86 = (uint64_t)v4 + 3;
  }
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100121734((wireless_diagnostics::google::protobuf::internal::WireFormat *)v84, v86, a3, a4);
  int v26 = *((_DWORD *)this + 98);
  if ((v26 & 0x4000000) == 0)
  {
LABEL_65:
    if ((v26 & 0x8000000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_197;
  }
LABEL_191:
  uint64_t v87 = (unsigned int *)*((void *)this + 27);
  if (!v87) {
    uint64_t v87 = *(unsigned int **)(qword_1008ABE98 + 216);
  }
  *(_WORD *)int v4 = 474;
  int v88 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v87[34];
  if (v88 > 0x7F)
  {
    int v89 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v88, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v88;
    int v89 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  int v4 = sub_100120500((wireless_diagnostics::google::protobuf::internal::WireFormat *)v87, v89, a3, a4);
  int v26 = *((_DWORD *)this + 98);
  if ((v26 & 0x8000000) == 0)
  {
LABEL_66:
    if ((v26 & 0x10000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_203;
  }
LABEL_197:
  int v90 = (unsigned int *)*((void *)this + 28);
  if (!v90) {
    int v90 = *(unsigned int **)(qword_1008ABE98 + 224);
  }
  *(_WORD *)int v4 = 482;
  uint64_t v91 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v90[18];
  if (v91 > 0x7F)
  {
    uint64_t v92 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v91, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v91;
    uint64_t v92 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  int v4 = sub_1000DB1BC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v90, v92, a3);
  int v26 = *((_DWORD *)this + 98);
  if ((v26 & 0x10000000) == 0)
  {
LABEL_67:
    if ((v26 & 0x20000000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_209;
  }
LABEL_203:
  int v93 = (unsigned int *)*((void *)this + 29);
  if (!v93) {
    int v93 = *(unsigned int **)(qword_1008ABE98 + 232);
  }
  *(_WORD *)int v4 = 490;
  int v94 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v93[23];
  if (v94 > 0x7F)
  {
    uint64_t v95 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v94, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v94;
    uint64_t v95 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  int v4 = sub_10007E3C4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v93, v95, a3, a4);
  int v26 = *((_DWORD *)this + 98);
  if ((v26 & 0x20000000) == 0)
  {
LABEL_68:
    if ((v26 & 0x40000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_215;
  }
LABEL_209:
  uint64_t v96 = (unsigned int *)*((void *)this + 30);
  if (!v96) {
    uint64_t v96 = *(unsigned int **)(qword_1008ABE98 + 240);
  }
  *(_WORD *)int v4 = 498;
  uint64_t v97 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v96[8];
  if (v97 > 0x7F)
  {
    int v98 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v97, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v97;
    int v98 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  int v4 = sub_100123E4C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v96, v98, a3, a4);
  int v26 = *((_DWORD *)this + 98);
  if ((v26 & 0x40000000) == 0)
  {
LABEL_69:
    if ((v26 & 0x80000000) == 0) {
      goto LABEL_227;
    }
    goto LABEL_221;
  }
LABEL_215:
  int v99 = (unsigned int *)*((void *)this + 31);
  if (!v99) {
    int v99 = *(unsigned int **)(qword_1008ABE98 + 248);
  }
  *(_WORD *)int v4 = 506;
  int v100 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v99[27];
  if (v100 > 0x7F)
  {
    uint64_t v101 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v100, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v100;
    uint64_t v101 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  int v4 = sub_1001258A4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v99, v101, a3, a4);
  if ((*((_DWORD *)this + 98) & 0x80000000) != 0)
  {
LABEL_221:
    uint64_t v102 = (unsigned int *)*((void *)this + 32);
    if (!v102) {
      uint64_t v102 = *(unsigned int **)(qword_1008ABE98 + 256);
    }
    *(_WORD *)int v4 = 642;
    int v103 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v102[7];
    if (v103 > 0x7F)
    {
      int v104 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v103, (int)v4 + 2, a3);
    }
    else
    {
      *((unsigned char *)v4 + 2) = (_BYTE)v103;
      int v104 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
    }
    int v4 = sub_100128D98((wireless_diagnostics::google::protobuf::internal::WireFormat *)v102, v104, a3, a4);
  }
LABEL_227:
  int v105 = *((_DWORD *)this + 99);
  if (v105)
  {
    uint64_t v106 = (unsigned int *)*((void *)this + 33);
    if (!v106) {
      uint64_t v106 = *(unsigned int **)(qword_1008ABE98 + 264);
    }
    *(_WORD *)int v4 = 650;
    uint64_t v107 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v106[6];
    if (v107 > 0x7F)
    {
      int v108 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v107, (int)v4 + 2, a3);
    }
    else
    {
      *((unsigned char *)v4 + 2) = (_BYTE)v107;
      int v108 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
    }
    int v4 = sub_100129630((wireless_diagnostics::google::protobuf::internal::WireFormat *)v106, v108, a3, a4);
    int v105 = *((_DWORD *)this + 99);
    if ((v105 & 2) == 0)
    {
LABEL_229:
      if ((v105 & 4) == 0) {
        goto LABEL_230;
      }
      goto LABEL_255;
    }
  }
  else if ((v105 & 2) == 0)
  {
    goto LABEL_229;
  }
  int v109 = (unsigned int *)*((void *)this + 34);
  if (!v109) {
    int v109 = *(unsigned int **)(qword_1008ABE98 + 272);
  }
  *(_WORD *)int v4 = 658;
  int v110 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v109[12];
  if (v110 > 0x7F)
  {
    uint64_t v111 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v110, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v110;
    uint64_t v111 = (char *)v4 + 3;
  }
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10012A070((wireless_diagnostics::google::protobuf::internal::WireFormat *)v109, v111, a3, a4);
  int v105 = *((_DWORD *)this + 99);
  if ((v105 & 4) == 0)
  {
LABEL_230:
    if ((v105 & 8) == 0) {
      goto LABEL_231;
    }
    goto LABEL_261;
  }
LABEL_255:
  uint64_t v112 = (unsigned int *)*((void *)this + 35);
  if (!v112) {
    uint64_t v112 = *(unsigned int **)(qword_1008ABE98 + 280);
  }
  *(_WORD *)int v4 = 666;
  int v113 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v112[25];
  if (v113 > 0x7F)
  {
    int v114 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v113, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v113;
    int v114 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  int v4 = sub_100127EE0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v112, v114, a3, a4);
  int v105 = *((_DWORD *)this + 99);
  if ((v105 & 8) == 0)
  {
LABEL_231:
    if ((v105 & 0x10) == 0) {
      goto LABEL_232;
    }
    goto LABEL_267;
  }
LABEL_261:
  uint64_t v115 = (unsigned int *)*((void *)this + 36);
  if (!v115) {
    uint64_t v115 = *(unsigned int **)(qword_1008ABE98 + 288);
  }
  *(_WORD *)int v4 = 674;
  uint64_t v116 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v115[34];
  if (v116 > 0x7F)
  {
    int v117 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v116, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v116;
    int v117 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  int v4 = sub_100120500((wireless_diagnostics::google::protobuf::internal::WireFormat *)v115, v117, a3, a4);
  int v105 = *((_DWORD *)this + 99);
  if ((v105 & 0x10) == 0)
  {
LABEL_232:
    if ((v105 & 0x20) == 0) {
      goto LABEL_233;
    }
    goto LABEL_273;
  }
LABEL_267:
  int v118 = (unsigned int *)*((void *)this + 37);
  if (!v118) {
    int v118 = *(unsigned int **)(qword_1008ABE98 + 296);
  }
  *(_WORD *)int v4 = 682;
  int v119 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v118[28];
  if (v119 > 0x7F)
  {
    uint64_t v120 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v119, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v119;
    uint64_t v120 = (uint64_t)v4 + 3;
  }
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10007F7E4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v118, v120, a3, a4);
  int v105 = *((_DWORD *)this + 99);
  if ((v105 & 0x20) == 0)
  {
LABEL_233:
    if ((v105 & 0x40) == 0) {
      goto LABEL_234;
    }
    goto LABEL_279;
  }
LABEL_273:
  uint64_t v121 = (unsigned int *)*((void *)this + 38);
  if (!v121) {
    uint64_t v121 = *(unsigned int **)(qword_1008ABE98 + 304);
  }
  *(_WORD *)int v4 = 690;
  int v122 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v121[8];
  if (v122 > 0x7F)
  {
    uint64_t v123 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v122, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v122;
    uint64_t v123 = (uint64_t)v4 + 3;
  }
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001247D4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v121, v123, a3, a4);
  int v105 = *((_DWORD *)this + 99);
  if ((v105 & 0x40) == 0)
  {
LABEL_234:
    if ((v105 & 0x80) == 0) {
      goto LABEL_235;
    }
    goto LABEL_285;
  }
LABEL_279:
  int v124 = (unsigned int *)*((void *)this + 39);
  if (!v124) {
    int v124 = *(unsigned int **)(qword_1008ABE98 + 312);
  }
  *(_WORD *)int v4 = 698;
  uint64_t v125 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v124[10];
  if (v125 > 0x7F)
  {
    uint64_t v126 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v125, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v125;
    uint64_t v126 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  int v4 = sub_10012AC28((wireless_diagnostics::google::protobuf::internal::WireFormat *)v124, v126, a3, a4);
  int v105 = *((_DWORD *)this + 99);
  if ((v105 & 0x80) == 0)
  {
LABEL_235:
    if ((v105 & 0x100) == 0) {
      goto LABEL_236;
    }
    goto LABEL_291;
  }
LABEL_285:
  uint64_t v127 = (unsigned int *)*((void *)this + 40);
  if (!v127) {
    uint64_t v127 = *(unsigned int **)(qword_1008ABE98 + 320);
  }
  *(_WORD *)int v4 = 706;
  int v128 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v127[10];
  if (v128 > 0x7F)
  {
    int v129 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v128, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v128;
    int v129 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  int v4 = sub_100081064((wireless_diagnostics::google::protobuf::internal::WireFormat *)v127, v129, a3, a4);
  int v105 = *((_DWORD *)this + 99);
  if ((v105 & 0x100) == 0)
  {
LABEL_236:
    if ((v105 & 0x200) == 0) {
      goto LABEL_237;
    }
    goto LABEL_297;
  }
LABEL_291:
  int v130 = (unsigned int *)*((void *)this + 41);
  if (!v130) {
    int v130 = *(unsigned int **)(qword_1008ABE98 + 328);
  }
  *(_WORD *)int v4 = 714;
  uint64_t v131 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v130[12];
  if (v131 > 0x7F)
  {
    uint64_t v132 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v131, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v131;
    uint64_t v132 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  int v4 = sub_100123274((wireless_diagnostics::google::protobuf::internal::WireFormat *)v130, v132, a3, a4);
  int v105 = *((_DWORD *)this + 99);
  if ((v105 & 0x200) == 0)
  {
LABEL_237:
    if ((v105 & 0x400) == 0) {
      goto LABEL_238;
    }
    goto LABEL_303;
  }
LABEL_297:
  int v133 = (unsigned int *)*((void *)this + 42);
  if (!v133) {
    int v133 = *(unsigned int **)(qword_1008ABE98 + 336);
  }
  *(_WORD *)int v4 = 722;
  int v134 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v133[30];
  if (v134 > 0x7F)
  {
    uint64_t v135 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v134, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v134;
    uint64_t v135 = (uint64_t)v4 + 3;
  }
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10012D798((wireless_diagnostics::google::protobuf::internal::WireFormat *)v133, v135, a3);
  int v105 = *((_DWORD *)this + 99);
  if ((v105 & 0x400) == 0)
  {
LABEL_238:
    if ((v105 & 0x800) == 0) {
      goto LABEL_239;
    }
    goto LABEL_309;
  }
LABEL_303:
  uint64_t v136 = (unsigned int *)*((void *)this + 43);
  if (!v136) {
    uint64_t v136 = *(unsigned int **)(qword_1008ABE98 + 344);
  }
  *(_WORD *)int v4 = 730;
  uint64_t v137 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v136[9];
  if (v137 > 0x7F)
  {
    int v138 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v137, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v137;
    int v138 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  int v4 = sub_10012E628((wireless_diagnostics::google::protobuf::internal::WireFormat *)v136, v138, a3);
  int v105 = *((_DWORD *)this + 99);
  if ((v105 & 0x800) == 0)
  {
LABEL_239:
    if ((v105 & 0x1000) == 0) {
      goto LABEL_240;
    }
    goto LABEL_315;
  }
LABEL_309:
  int v139 = (unsigned int *)*((void *)this + 44);
  if (!v139) {
    int v139 = *(unsigned int **)(qword_1008ABE98 + 352);
  }
  *(_WORD *)int v4 = 738;
  int v140 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v139[7];
  if (v140 > 0x7F)
  {
    uint64_t v141 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v140, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v140;
    uint64_t v141 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  int v4 = sub_10012FEDC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v139, v141, a3);
  int v105 = *((_DWORD *)this + 99);
  if ((v105 & 0x1000) == 0)
  {
LABEL_240:
    if ((v105 & 0x2000) == 0) {
      goto LABEL_241;
    }
    goto LABEL_321;
  }
LABEL_315:
  uint64_t v142 = (unsigned int *)*((void *)this + 45);
  if (!v142) {
    uint64_t v142 = *(unsigned int **)(qword_1008ABE98 + 360);
  }
  *(_WORD *)int v4 = 746;
  int v143 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v142[9];
  if (v143 > 0x7F)
  {
    int v144 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v143, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v143;
    int v144 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  int v4 = sub_10013163C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v142, v144, a3);
  int v105 = *((_DWORD *)this + 99);
  if ((v105 & 0x2000) == 0)
  {
LABEL_241:
    if ((v105 & 0x4000) == 0) {
      goto LABEL_333;
    }
    goto LABEL_327;
  }
LABEL_321:
  uint64_t v145 = (unsigned int *)*((void *)this + 46);
  if (!v145) {
    uint64_t v145 = *(unsigned int **)(qword_1008ABE98 + 368);
  }
  *(_WORD *)int v4 = 754;
  uint64_t v146 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v145[8];
  if (v146 > 0x7F)
  {
    int v147 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v146, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v146;
    int v147 = (char *)v4 + 3;
  }
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10012B62C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v145, v147, a3, a4);
  if ((*((_DWORD *)this + 99) & 0x4000) != 0)
  {
LABEL_327:
    int v148 = (unsigned int *)*((void *)this + 47);
    if (!v148) {
      int v148 = *(unsigned int **)(qword_1008ABE98 + 376);
    }
    *(_WORD *)int v4 = 762;
    int v149 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v148[11];
    if (v149 > 0x7F)
    {
      int v150 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v149, (int)v4 + 2, a3);
    }
    else
    {
      *((unsigned char *)v4 + 2) = (_BYTE)v149;
      int v150 = (char *)v4 + 3;
    }
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001320B0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v148, v150, a3);
  }
LABEL_333:
  int v153 = (void *)*((void *)this + 1);
  int v152 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v151 = v153;
  if (!v153 || *v151 == v151[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v152, v4, a3);
}

uint64_t sub_100088514(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  unsigned int v3 = *(_DWORD *)(a1 + 392);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_61;
  }
  if ((v3 & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_1008ABE98 + 16);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100072C2C(v5, a2);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  }
  else {
    int v8 = 1;
  }
  uint64_t v4 = (v7 + v8 + 1);
  unsigned int v3 = *(_DWORD *)(a1 + 392);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    uint64_t v9 = *(void *)(a1 + 24);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1008ABE98 + 24);
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000C6FEC(v9, a2);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    }
    else {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v11 + v12 + 1);
    unsigned int v3 = *(_DWORD *)(a1 + 392);
  }
LABEL_18:
  if ((v3 & 4) != 0)
  {
    uint64_t v13 = *(void *)(a1 + 32);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_1008ABE98 + 32);
    }
    uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000C7A48(v13, a2);
    int v15 = (int)v14;
    if (v14 >= 0x80) {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
    }
    else {
      int v16 = 1;
    }
    uint64_t v4 = (v4 + v15 + v16 + 1);
    unsigned int v3 = *(_DWORD *)(a1 + 392);
    if ((v3 & 8) == 0)
    {
LABEL_20:
      if ((v3 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_37;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)(a1 + 40);
  if (!v17) {
    uint64_t v17 = *(void *)(qword_1008ABE98 + 40);
  }
  uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000C8458(v17, a2);
  int v19 = (int)v18;
  if (v18 >= 0x80) {
    int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
  }
  else {
    int v20 = 1;
  }
  uint64_t v4 = (v4 + v19 + v20 + 1);
  unsigned int v3 = *(_DWORD *)(a1 + 392);
  if ((v3 & 0x10) == 0)
  {
LABEL_21:
    if ((v3 & 0x20) == 0) {
      goto LABEL_22;
    }
    goto LABEL_43;
  }
LABEL_37:
  uint64_t v21 = *(void *)(a1 + 48);
  if (!v21) {
    uint64_t v21 = *(void *)(qword_1008ABE98 + 48);
  }
  uint64_t v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001367C0(v21, a2);
  int v23 = (int)v22;
  if (v22 >= 0x80) {
    int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2);
  }
  else {
    int v24 = 1;
  }
  uint64_t v4 = (v4 + v23 + v24 + 1);
  unsigned int v3 = *(_DWORD *)(a1 + 392);
  if ((v3 & 0x20) == 0)
  {
LABEL_22:
    if ((v3 & 0x40) == 0) {
      goto LABEL_23;
    }
    goto LABEL_49;
  }
LABEL_43:
  uint64_t v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 384);
  if ((v25 & 0x80000000) != 0)
  {
    int v26 = 10;
  }
  else if (v25 >= 0x80)
  {
    int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2);
    unsigned int v3 = *(_DWORD *)(a1 + 392);
  }
  else
  {
    int v26 = 1;
  }
  uint64_t v4 = (v4 + v26 + 1);
  if ((v3 & 0x40) == 0)
  {
LABEL_23:
    if ((v3 & 0x80) == 0) {
      goto LABEL_61;
    }
    goto LABEL_55;
  }
LABEL_49:
  uint64_t v27 = *(_DWORD **)(a1 + 56);
  if (!v27) {
    uint64_t v27 = *(_DWORD **)(qword_1008ABE98 + 56);
  }
  uint64_t v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100073CE4(v27, a2);
  int v29 = (int)v28;
  if (v28 >= 0x80) {
    int v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28, a2);
  }
  else {
    int v30 = 1;
  }
  uint64_t v4 = (v4 + v29 + v30 + 1);
  unsigned int v3 = *(_DWORD *)(a1 + 392);
  if ((v3 & 0x80) != 0)
  {
LABEL_55:
    uint64_t v31 = *(void *)(a1 + 64);
    if (!v31) {
      uint64_t v31 = *(void *)(qword_1008ABE98 + 64);
    }
    uint64_t v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100075530(v31, a2);
    int v33 = (int)v32;
    if (v32 >= 0x80) {
      int v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v32, a2);
    }
    else {
      int v34 = 1;
    }
    uint64_t v4 = (v4 + v33 + v34 + 1);
    unsigned int v3 = *(_DWORD *)(a1 + 392);
  }
LABEL_61:
  if ((v3 & 0xFF00) == 0) {
    goto LABEL_119;
  }
  if ((v3 & 0x100) != 0)
  {
    uint64_t v35 = *(void *)(a1 + 72);
    if (!v35) {
      uint64_t v35 = *(void *)(qword_1008ABE98 + 72);
    }
    uint64_t v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100075FDC(v35, a2);
    int v37 = (int)v36;
    if (v36 >= 0x80) {
      int v38 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v36, a2);
    }
    else {
      int v38 = 1;
    }
    uint64_t v4 = (v4 + v37 + v38 + 1);
    unsigned int v3 = *(_DWORD *)(a1 + 392);
    if ((v3 & 0x200) == 0)
    {
LABEL_64:
      if ((v3 & 0x400) == 0) {
        goto LABEL_65;
      }
      goto LABEL_83;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_64;
  }
  uint64_t v39 = *(void *)(a1 + 80);
  if (!v39) {
    uint64_t v39 = *(void *)(qword_1008ABE98 + 80);
  }
  uint64_t v40 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100077724(v39, a2);
  int v41 = (int)v40;
  if (v40 >= 0x80) {
    int v42 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v40, a2);
  }
  else {
    int v42 = 1;
  }
  uint64_t v4 = (v4 + v41 + v42 + 1);
  unsigned int v3 = *(_DWORD *)(a1 + 392);
  if ((v3 & 0x400) == 0)
  {
LABEL_65:
    if ((v3 & 0x800) == 0) {
      goto LABEL_66;
    }
    goto LABEL_89;
  }
LABEL_83:
  uint64_t v43 = *(void *)(a1 + 88);
  if (!v43) {
    uint64_t v43 = *(void *)(qword_1008ABE98 + 88);
  }
  uint64_t v44 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10007838C(v43, a2);
  int v45 = (int)v44;
  if (v44 >= 0x80) {
    int v46 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v44, a2);
  }
  else {
    int v46 = 1;
  }
  uint64_t v4 = (v4 + v45 + v46 + 1);
  unsigned int v3 = *(_DWORD *)(a1 + 392);
  if ((v3 & 0x800) == 0)
  {
LABEL_66:
    if ((v3 & 0x1000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_95;
  }
LABEL_89:
  uint64_t v47 = *(void *)(a1 + 96);
  if (!v47) {
    uint64_t v47 = *(void *)(qword_1008ABE98 + 96);
  }
  uint64_t v48 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100078DD4(v47, a2);
  int v49 = (int)v48;
  if (v48 >= 0x80) {
    int v50 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v48, a2);
  }
  else {
    int v50 = 1;
  }
  uint64_t v4 = (v4 + v49 + v50 + 1);
  unsigned int v3 = *(_DWORD *)(a1 + 392);
  if ((v3 & 0x1000) == 0)
  {
LABEL_67:
    if ((v3 & 0x2000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_101;
  }
LABEL_95:
  uint64_t v51 = *(void *)(a1 + 104);
  if (!v51) {
    uint64_t v51 = *(void *)(qword_1008ABE98 + 104);
  }
  uint64_t v52 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000799C0(v51, a2);
  int v53 = (int)v52;
  if (v52 >= 0x80) {
    int v54 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v52, a2);
  }
  else {
    int v54 = 1;
  }
  uint64_t v4 = (v4 + v53 + v54 + 1);
  unsigned int v3 = *(_DWORD *)(a1 + 392);
  if ((v3 & 0x2000) == 0)
  {
LABEL_68:
    if ((v3 & 0x4000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_107;
  }
LABEL_101:
  uint64_t v55 = *(void *)(a1 + 112);
  if (!v55) {
    uint64_t v55 = *(void *)(qword_1008ABE98 + 112);
  }
  int v56 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000F63E0(v55, a2);
  int v57 = (int)v56;
  if (v56 >= 0x80) {
    int v58 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v56, a2);
  }
  else {
    int v58 = 1;
  }
  uint64_t v4 = (v4 + v57 + v58 + 1);
  unsigned int v3 = *(_DWORD *)(a1 + 392);
  if ((v3 & 0x4000) == 0)
  {
LABEL_69:
    if ((v3 & 0x8000) == 0) {
      goto LABEL_119;
    }
    goto LABEL_113;
  }
LABEL_107:
  uint64_t v59 = *(void *)(a1 + 120);
  if (!v59) {
    uint64_t v59 = *(void *)(qword_1008ABE98 + 120);
  }
  int v60 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100111F84(v59, a2);
  int v61 = (int)v60;
  if (v60 >= 0x80) {
    int v62 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v60, a2);
  }
  else {
    int v62 = 1;
  }
  uint64_t v4 = (v4 + v61 + v62 + 1);
  unsigned int v3 = *(_DWORD *)(a1 + 392);
  if ((v3 & 0x8000) != 0)
  {
LABEL_113:
    uint64_t v63 = *(void *)(a1 + 128);
    if (!v63) {
      uint64_t v63 = *(void *)(qword_1008ABE98 + 128);
    }
    uint64_t v64 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10011AE5C(v63, a2);
    int v65 = (int)v64;
    if (v64 >= 0x80) {
      int v66 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v64, a2);
    }
    else {
      int v66 = 1;
    }
    uint64_t v4 = (v4 + v65 + v66 + 2);
    unsigned int v3 = *(_DWORD *)(a1 + 392);
  }
LABEL_119:
  if ((v3 & 0xFF0000) == 0) {
    goto LABEL_177;
  }
  if ((v3 & 0x10000) != 0)
  {
    uint64_t v67 = *(void *)(a1 + 136);
    if (!v67) {
      uint64_t v67 = *(void *)(qword_1008ABE98 + 136);
    }
    int v68 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10012C398(v67, a2);
    int v69 = (int)v68;
    if (v68 >= 0x80) {
      int v70 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v68, a2);
    }
    else {
      int v70 = 1;
    }
    uint64_t v4 = (v4 + v69 + v70 + 2);
    unsigned int v3 = *(_DWORD *)(a1 + 392);
    if ((v3 & 0x20000) == 0)
    {
LABEL_122:
      if ((v3 & 0x40000) == 0) {
        goto LABEL_123;
      }
      goto LABEL_141;
    }
  }
  else if ((v3 & 0x20000) == 0)
  {
    goto LABEL_122;
  }
  uint64_t v71 = *(void *)(a1 + 144);
  if (!v71) {
    uint64_t v71 = *(void *)(qword_1008ABE98 + 144);
  }
  uint64_t v72 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001050E4(v71, a2);
  int v73 = (int)v72;
  if (v72 >= 0x80) {
    int v74 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v72, a2);
  }
  else {
    int v74 = 1;
  }
  uint64_t v4 = (v4 + v73 + v74 + 2);
  unsigned int v3 = *(_DWORD *)(a1 + 392);
  if ((v3 & 0x40000) == 0)
  {
LABEL_123:
    if ((v3 & 0x80000) == 0) {
      goto LABEL_124;
    }
    goto LABEL_147;
  }
LABEL_141:
  uint64_t v75 = *(void *)(a1 + 152);
  if (!v75) {
    uint64_t v75 = *(void *)(qword_1008ABE98 + 152);
  }
  uint64_t v76 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100116708(v75, a2);
  int v77 = (int)v76;
  if (v76 >= 0x80) {
    int v78 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v76, a2);
  }
  else {
    int v78 = 1;
  }
  uint64_t v4 = (v4 + v77 + v78 + 2);
  unsigned int v3 = *(_DWORD *)(a1 + 392);
  if ((v3 & 0x80000) == 0)
  {
LABEL_124:
    if ((v3 & 0x100000) == 0) {
      goto LABEL_125;
    }
    goto LABEL_153;
  }
LABEL_147:
  uint64_t v79 = *(void *)(a1 + 160);
  if (!v79) {
    uint64_t v79 = *(void *)(qword_1008ABE98 + 160);
  }
  int v80 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100119D48(v79, a2);
  int v81 = (int)v80;
  if (v80 >= 0x80) {
    int v82 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v80, a2);
  }
  else {
    int v82 = 1;
  }
  uint64_t v4 = (v4 + v81 + v82 + 2);
  unsigned int v3 = *(_DWORD *)(a1 + 392);
  if ((v3 & 0x100000) == 0)
  {
LABEL_125:
    if ((v3 & 0x200000) == 0) {
      goto LABEL_126;
    }
    goto LABEL_159;
  }
LABEL_153:
  uint64_t v83 = *(void *)(a1 + 168);
  if (!v83) {
    uint64_t v83 = *(void *)(qword_1008ABE98 + 168);
  }
  int v84 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10011BAE8(v83, a2);
  int v85 = (int)v84;
  if (v84 >= 0x80) {
    int v86 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v84, a2);
  }
  else {
    int v86 = 1;
  }
  uint64_t v4 = (v4 + v85 + v86 + 2);
  unsigned int v3 = *(_DWORD *)(a1 + 392);
  if ((v3 & 0x200000) == 0)
  {
LABEL_126:
    if ((v3 & 0x400000) == 0) {
      goto LABEL_127;
    }
    goto LABEL_165;
  }
LABEL_159:
  uint64_t v87 = *(void *)(a1 + 176);
  if (!v87) {
    uint64_t v87 = *(void *)(qword_1008ABE98 + 176);
  }
  int v88 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10011C544(v87, a2);
  int v89 = (int)v88;
  if (v88 >= 0x80) {
    int v90 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v88, a2);
  }
  else {
    int v90 = 1;
  }
  uint64_t v4 = (v4 + v89 + v90 + 2);
  unsigned int v3 = *(_DWORD *)(a1 + 392);
  if ((v3 & 0x400000) == 0)
  {
LABEL_127:
    if ((v3 & 0x800000) == 0) {
      goto LABEL_177;
    }
    goto LABEL_171;
  }
LABEL_165:
  uint64_t v91 = *(void *)(a1 + 184);
  if (!v91) {
    uint64_t v91 = *(void *)(qword_1008ABE98 + 184);
  }
  uint64_t v92 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10011D5F0(v91, a2);
  int v93 = (int)v92;
  if (v92 >= 0x80) {
    int v94 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v92, a2);
  }
  else {
    int v94 = 1;
  }
  uint64_t v4 = (v4 + v93 + v94 + 2);
  unsigned int v3 = *(_DWORD *)(a1 + 392);
  if ((v3 & 0x800000) != 0)
  {
LABEL_171:
    uint64_t v95 = *(void *)(a1 + 192);
    if (!v95) {
      uint64_t v95 = *(void *)(qword_1008ABE98 + 192);
    }
    uint64_t v96 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10011E7A0(v95, a2);
    int v97 = (int)v96;
    if (v96 >= 0x80) {
      int v98 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v96, a2);
    }
    else {
      int v98 = 1;
    }
    uint64_t v4 = (v4 + v97 + v98 + 2);
    unsigned int v3 = *(_DWORD *)(a1 + 392);
  }
LABEL_177:
  if (!HIBYTE(v3)) {
    goto LABEL_235;
  }
  if ((v3 & 0x1000000) != 0)
  {
    uint64_t v99 = *(void *)(a1 + 200);
    if (!v99) {
      uint64_t v99 = *(void *)(qword_1008ABE98 + 200);
    }
    int v100 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100120AF4(v99, a2);
    int v101 = (int)v100;
    if (v100 >= 0x80) {
      int v102 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v100, a2);
    }
    else {
      int v102 = 1;
    }
    uint64_t v4 = (v4 + v101 + v102 + 2);
    unsigned int v3 = *(_DWORD *)(a1 + 392);
    if ((v3 & 0x2000000) == 0)
    {
LABEL_180:
      if ((v3 & 0x4000000) == 0) {
        goto LABEL_181;
      }
      goto LABEL_199;
    }
  }
  else if ((v3 & 0x2000000) == 0)
  {
    goto LABEL_180;
  }
  uint64_t v103 = *(void *)(a1 + 208);
  if (!v103) {
    uint64_t v103 = *(void *)(qword_1008ABE98 + 208);
  }
  int v104 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100121960(v103, a2);
  int v105 = (int)v104;
  if (v104 >= 0x80) {
    int v106 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v104, a2);
  }
  else {
    int v106 = 1;
  }
  uint64_t v4 = (v4 + v105 + v106 + 2);
  unsigned int v3 = *(_DWORD *)(a1 + 392);
  if ((v3 & 0x4000000) == 0)
  {
LABEL_181:
    if ((v3 & 0x8000000) == 0) {
      goto LABEL_182;
    }
    goto LABEL_205;
  }
LABEL_199:
  uint64_t v107 = *(void *)(a1 + 216);
  if (!v107) {
    uint64_t v107 = *(void *)(qword_1008ABE98 + 216);
  }
  int v108 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100120AF4(v107, a2);
  int v109 = (int)v108;
  if (v108 >= 0x80) {
    int v110 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v108, a2);
  }
  else {
    int v110 = 1;
  }
  uint64_t v4 = (v4 + v109 + v110 + 2);
  unsigned int v3 = *(_DWORD *)(a1 + 392);
  if ((v3 & 0x8000000) == 0)
  {
LABEL_182:
    if ((v3 & 0x10000000) == 0) {
      goto LABEL_183;
    }
    goto LABEL_211;
  }
LABEL_205:
  uint64_t v111 = *(void *)(a1 + 224);
  if (!v111) {
    uint64_t v111 = *(void *)(qword_1008ABE98 + 224);
  }
  uint64_t v112 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000DB484(v111, a2);
  int v113 = (int)v112;
  if (v112 >= 0x80) {
    int v114 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v112, a2);
  }
  else {
    int v114 = 1;
  }
  uint64_t v4 = (v4 + v113 + v114 + 2);
  unsigned int v3 = *(_DWORD *)(a1 + 392);
  if ((v3 & 0x10000000) == 0)
  {
LABEL_183:
    if ((v3 & 0x20000000) == 0) {
      goto LABEL_184;
    }
    goto LABEL_217;
  }
LABEL_211:
  uint64_t v115 = *(void *)(a1 + 232);
  if (!v115) {
    uint64_t v115 = *(void *)(qword_1008ABE98 + 232);
  }
  uint64_t v116 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10007E774(v115, a2);
  int v117 = (int)v116;
  if (v116 >= 0x80) {
    int v118 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v116, a2);
  }
  else {
    int v118 = 1;
  }
  uint64_t v4 = (v4 + v117 + v118 + 2);
  unsigned int v3 = *(_DWORD *)(a1 + 392);
  if ((v3 & 0x20000000) == 0)
  {
LABEL_184:
    if ((v3 & 0x40000000) == 0) {
      goto LABEL_185;
    }
    goto LABEL_223;
  }
LABEL_217:
  uint64_t v119 = *(void *)(a1 + 240);
  if (!v119) {
    uint64_t v119 = *(void *)(qword_1008ABE98 + 240);
  }
  uint64_t v120 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100123F6C(v119, a2);
  int v121 = (int)v120;
  if (v120 >= 0x80) {
    int v122 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v120, a2);
  }
  else {
    int v122 = 1;
  }
  uint64_t v4 = (v4 + v121 + v122 + 2);
  unsigned int v3 = *(_DWORD *)(a1 + 392);
  if ((v3 & 0x40000000) == 0)
  {
LABEL_185:
    if ((v3 & 0x80000000) == 0) {
      goto LABEL_235;
    }
    goto LABEL_229;
  }
LABEL_223:
  uint64_t v123 = *(void *)(a1 + 248);
  if (!v123) {
    uint64_t v123 = *(void *)(qword_1008ABE98 + 248);
  }
  int v124 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100125CF4(v123, a2);
  int v125 = (int)v124;
  if (v124 >= 0x80) {
    int v126 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v124, a2);
  }
  else {
    int v126 = 1;
  }
  uint64_t v4 = (v4 + v125 + v126 + 2);
  if ((*(_DWORD *)(a1 + 392) & 0x80000000) != 0)
  {
LABEL_229:
    uint64_t v127 = *(void *)(a1 + 256);
    if (!v127) {
      uint64_t v127 = *(void *)(qword_1008ABE98 + 256);
    }
    int v128 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100128EA4(v127, a2);
    int v129 = (int)v128;
    if (v128 >= 0x80) {
      int v130 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v128, a2);
    }
    else {
      int v130 = 1;
    }
    uint64_t v4 = (v4 + v129 + v130 + 2);
  }
LABEL_235:
  int v131 = *(_DWORD *)(a1 + 396);
  if (!(_BYTE)v131) {
    goto LABEL_293;
  }
  if (v131)
  {
    uint64_t v132 = *(void *)(a1 + 264);
    if (!v132) {
      uint64_t v132 = *(void *)(qword_1008ABE98 + 264);
    }
    int v133 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001296F8(v132, a2);
    int v134 = (int)v133;
    if (v133 >= 0x80) {
      int v135 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v133, a2);
    }
    else {
      int v135 = 1;
    }
    uint64_t v4 = (v4 + v134 + v135 + 2);
    int v131 = *(_DWORD *)(a1 + 396);
    if ((v131 & 2) == 0)
    {
LABEL_238:
      if ((v131 & 4) == 0) {
        goto LABEL_239;
      }
      goto LABEL_257;
    }
  }
  else if ((v131 & 2) == 0)
  {
    goto LABEL_238;
  }
  uint64_t v136 = *(void *)(a1 + 272);
  if (!v136) {
    uint64_t v136 = *(void *)(qword_1008ABE98 + 272);
  }
  uint64_t v137 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10012A244(v136, a2);
  int v138 = (int)v137;
  if (v137 >= 0x80) {
    int v139 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v137, a2);
  }
  else {
    int v139 = 1;
  }
  uint64_t v4 = (v4 + v138 + v139 + 2);
  int v131 = *(_DWORD *)(a1 + 396);
  if ((v131 & 4) == 0)
  {
LABEL_239:
    if ((v131 & 8) == 0) {
      goto LABEL_240;
    }
    goto LABEL_263;
  }
LABEL_257:
  uint64_t v140 = *(void *)(a1 + 280);
  if (!v140) {
    uint64_t v140 = *(void *)(qword_1008ABE98 + 280);
  }
  uint64_t v141 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100128338(v140, a2);
  int v142 = (int)v141;
  if (v141 >= 0x80) {
    int v143 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v141, a2);
  }
  else {
    int v143 = 1;
  }
  uint64_t v4 = (v4 + v142 + v143 + 2);
  int v131 = *(_DWORD *)(a1 + 396);
  if ((v131 & 8) == 0)
  {
LABEL_240:
    if ((v131 & 0x10) == 0) {
      goto LABEL_241;
    }
    goto LABEL_269;
  }
LABEL_263:
  uint64_t v144 = *(void *)(a1 + 288);
  if (!v144) {
    uint64_t v144 = *(void *)(qword_1008ABE98 + 288);
  }
  uint64_t v145 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100120AF4(v144, a2);
  int v146 = (int)v145;
  if (v145 >= 0x80) {
    int v147 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v145, a2);
  }
  else {
    int v147 = 1;
  }
  uint64_t v4 = (v4 + v146 + v147 + 2);
  int v131 = *(_DWORD *)(a1 + 396);
  if ((v131 & 0x10) == 0)
  {
LABEL_241:
    if ((v131 & 0x20) == 0) {
      goto LABEL_242;
    }
    goto LABEL_275;
  }
LABEL_269:
  uint64_t v148 = *(void *)(a1 + 296);
  if (!v148) {
    uint64_t v148 = *(void *)(qword_1008ABE98 + 296);
  }
  int v149 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10007FC78(v148, a2);
  int v150 = (int)v149;
  if (v149 >= 0x80) {
    int v151 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v149, a2);
  }
  else {
    int v151 = 1;
  }
  uint64_t v4 = (v4 + v150 + v151 + 2);
  int v131 = *(_DWORD *)(a1 + 396);
  if ((v131 & 0x20) == 0)
  {
LABEL_242:
    if ((v131 & 0x40) == 0) {
      goto LABEL_243;
    }
    goto LABEL_281;
  }
LABEL_275:
  uint64_t v152 = *(void *)(a1 + 304);
  if (!v152) {
    uint64_t v152 = *(void *)(qword_1008ABE98 + 304);
  }
  int v153 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001248F0(v152, a2);
  int v154 = (int)v153;
  if (v153 >= 0x80) {
    int v155 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v153, a2);
  }
  else {
    int v155 = 1;
  }
  uint64_t v4 = (v4 + v154 + v155 + 2);
  int v131 = *(_DWORD *)(a1 + 396);
  if ((v131 & 0x40) == 0)
  {
LABEL_243:
    if ((v131 & 0x80) == 0) {
      goto LABEL_293;
    }
    goto LABEL_287;
  }
LABEL_281:
  uint64_t v156 = *(void *)(a1 + 312);
  if (!v156) {
    uint64_t v156 = *(void *)(qword_1008ABE98 + 312);
  }
  uint64_t v157 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10012ADBC(v156, a2);
  int v158 = (int)v157;
  if (v157 >= 0x80) {
    int v159 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v157, a2);
  }
  else {
    int v159 = 1;
  }
  uint64_t v4 = (v4 + v158 + v159 + 2);
  int v131 = *(_DWORD *)(a1 + 396);
  if ((v131 & 0x80) != 0)
  {
LABEL_287:
    uint64_t v160 = *(void *)(a1 + 320);
    if (!v160) {
      uint64_t v160 = *(void *)(qword_1008ABE98 + 320);
    }
    uint64_t v161 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100081130(v160, a2);
    int v162 = (int)v161;
    if (v161 >= 0x80) {
      int v163 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v161, a2);
    }
    else {
      int v163 = 1;
    }
    uint64_t v4 = (v4 + v162 + v163 + 2);
    int v131 = *(_DWORD *)(a1 + 396);
  }
LABEL_293:
  if ((v131 & 0xFF00) == 0) {
    goto LABEL_344;
  }
  if ((v131 & 0x100) != 0)
  {
    uint64_t v164 = *(void *)(a1 + 328);
    if (!v164) {
      uint64_t v164 = *(void *)(qword_1008ABE98 + 328);
    }
    int v165 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001233AC(v164, a2);
    int v166 = (int)v165;
    if (v165 >= 0x80) {
      int v167 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v165, a2);
    }
    else {
      int v167 = 1;
    }
    uint64_t v4 = (v4 + v166 + v167 + 2);
    int v131 = *(_DWORD *)(a1 + 396);
    if ((v131 & 0x200) == 0)
    {
LABEL_296:
      if ((v131 & 0x400) == 0) {
        goto LABEL_297;
      }
      goto LABEL_314;
    }
  }
  else if ((v131 & 0x200) == 0)
  {
    goto LABEL_296;
  }
  uint64_t v168 = *(void *)(a1 + 336);
  if (!v168) {
    uint64_t v168 = *(void *)(qword_1008ABE98 + 336);
  }
  int v169 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10012DB84(v168, a2);
  int v170 = (int)v169;
  if (v169 >= 0x80) {
    int v171 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v169, a2);
  }
  else {
    int v171 = 1;
  }
  uint64_t v4 = (v4 + v170 + v171 + 2);
  int v131 = *(_DWORD *)(a1 + 396);
  if ((v131 & 0x400) == 0)
  {
LABEL_297:
    if ((v131 & 0x800) == 0) {
      goto LABEL_298;
    }
    goto LABEL_320;
  }
LABEL_314:
  uint64_t v172 = *(void *)(a1 + 344);
  if (!v172) {
    uint64_t v172 = *(void *)(qword_1008ABE98 + 344);
  }
  int v173 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10012E75C(v172, a2);
  int v174 = (int)v173;
  if (v173 >= 0x80) {
    int v175 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v173, a2);
  }
  else {
    int v175 = 1;
  }
  uint64_t v4 = (v4 + v174 + v175 + 2);
  int v131 = *(_DWORD *)(a1 + 396);
  if ((v131 & 0x800) == 0)
  {
LABEL_298:
    if ((v131 & 0x1000) == 0) {
      goto LABEL_299;
    }
    goto LABEL_326;
  }
LABEL_320:
  uint64_t v176 = *(void *)(a1 + 352);
  if (!v176) {
    uint64_t v176 = *(void *)(qword_1008ABE98 + 352);
  }
  uint64_t v177 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10012FFC4(v176, a2);
  int v178 = (int)v177;
  if (v177 >= 0x80) {
    int v179 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v177, a2);
  }
  else {
    int v179 = 1;
  }
  uint64_t v4 = (v4 + v178 + v179 + 2);
  int v131 = *(_DWORD *)(a1 + 396);
  if ((v131 & 0x1000) == 0)
  {
LABEL_299:
    if ((v131 & 0x2000) == 0) {
      goto LABEL_300;
    }
    goto LABEL_332;
  }
LABEL_326:
  uint64_t v180 = *(void *)(a1 + 360);
  if (!v180) {
    uint64_t v180 = *(void *)(qword_1008ABE98 + 360);
  }
  uint64_t v181 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100131740(v180, a2);
  int v182 = (int)v181;
  if (v181 >= 0x80) {
    int v183 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v181, a2);
  }
  else {
    int v183 = 1;
  }
  uint64_t v4 = (v4 + v182 + v183 + 2);
  int v131 = *(_DWORD *)(a1 + 396);
  if ((v131 & 0x2000) == 0)
  {
LABEL_300:
    if ((v131 & 0x4000) == 0) {
      goto LABEL_344;
    }
    goto LABEL_338;
  }
LABEL_332:
  uint64_t v184 = *(void *)(a1 + 368);
  if (!v184) {
    uint64_t v184 = *(void *)(qword_1008ABE98 + 368);
  }
  int v185 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10012B748(v184, a2);
  int v186 = (int)v185;
  if (v185 >= 0x80) {
    int v187 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v185, a2);
  }
  else {
    int v187 = 1;
  }
  uint64_t v4 = (v4 + v186 + v187 + 2);
  if ((*(_DWORD *)(a1 + 396) & 0x4000) != 0)
  {
LABEL_338:
    uint64_t v188 = *(void *)(a1 + 376);
    if (!v188) {
      uint64_t v188 = *(void *)(qword_1008ABE98 + 376);
    }
    int v189 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100132204(v188, a2);
    int v190 = (int)v189;
    if (v189 >= 0x80) {
      int v191 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v189, a2);
    }
    else {
      int v191 = 1;
    }
    uint64_t v4 = (v4 + v190 + v191 + 2);
  }
LABEL_344:
  uint64_t v192 = *(void **)(a1 + 8);
  if (v192 && *v192 != v192[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 388) = v4;
  return v4;
}

uint64_t sub_10008937C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100081484((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100089450(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100089468(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1000894F4()
{
  return 1;
}

uint64_t sub_1000894FC()
{
  uint64_t v0 = qword_1008A09B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10006F9E0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A0848;
}

void sub_100089590(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000895A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_1000895AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1000895B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_1000895BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_1000895C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

uint64_t sub_1000895CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1000895D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 104);
}

uint64_t sub_1000895DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1000895E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_1000895EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t sub_1000895F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60);
}

uint64_t sub_1000895FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_100089604(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_10008960C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_100089614(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_10008961C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 92);
}

uint64_t sub_100089624(uint64_t a1)
{
  return *(unsigned int *)(a1 + 112);
}

uint64_t sub_10008962C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_100089634(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_10008963C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 388);
}

void sub_100089644()
{
}

void sub_100089684()
{
}

void sub_1000896A8()
{
}

void sub_1000896E8()
{
}

void sub_100089710()
{
  uint64_t v0 = (wireless_diagnostics::google::protobuf::DescriptorPool *)sub_10008AECC();
  wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v0);
  sub_100004950(__p, "CLPRoseCommunicationEvent.proto");
  uint64_t FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName();
  uint64_t v2 = FileByName;
  if (v4 < 0)
  {
    operator delete(__p[0]);
    if (v2) {
      goto LABEL_6;
    }
  }
  else if (FileByName)
  {
    goto LABEL_6;
  }
  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)__p);
LABEL_6:
  qword_1008A09B8 = *(void *)(v2 + 80);
  operator new();
}

void sub_10008ADD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

void sub_10008AECC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_1008A0D00 & 1) == 0)
  {
    byte_1008A0D00 = 1;
    wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRoseCommunicationEvent.pb.cc", a4);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)&unk_1004A5238, (const void *)0x62F8, v4);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile();
    operator new();
  }
}

void sub_10008B8F0()
{
}

void sub_10008BC2C()
{
}

uint64_t sub_10008BC44()
{
  if (qword_1008ABF30) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABF30 + 8))(qword_1008ABF30);
  }
  if (qword_1008A09C0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A09C0 + 8))(qword_1008A09C0);
  }
  if (qword_1008ABF38) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABF38 + 8))(qword_1008ABF38);
  }
  if (qword_1008A09D0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A09D0 + 8))(qword_1008A09D0);
  }
  if (qword_1008ABF40) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABF40 + 8))(qword_1008ABF40);
  }
  if (qword_1008A09E0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A09E0 + 8))(qword_1008A09E0);
  }
  if (qword_1008ABF48) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABF48 + 8))(qword_1008ABF48);
  }
  if (qword_1008A09F0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A09F0 + 8))(qword_1008A09F0);
  }
  if (qword_1008ABF50) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABF50 + 8))(qword_1008ABF50);
  }
  if (qword_1008A0A00) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0A00 + 8))(qword_1008A0A00);
  }
  if (qword_1008ABF58) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABF58 + 8))(qword_1008ABF58);
  }
  if (qword_1008A0A10) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0A10 + 8))(qword_1008A0A10);
  }
  if (qword_1008ABF60) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABF60 + 8))(qword_1008ABF60);
  }
  if (qword_1008A0A20) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0A20 + 8))(qword_1008A0A20);
  }
  if (qword_1008ABF68) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABF68 + 8))(qword_1008ABF68);
  }
  if (qword_1008A0A30) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0A30 + 8))(qword_1008A0A30);
  }
  if (qword_1008ABF70) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABF70 + 8))(qword_1008ABF70);
  }
  if (qword_1008A0A40) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0A40 + 8))(qword_1008A0A40);
  }
  if (qword_1008ABF78) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABF78 + 8))(qword_1008ABF78);
  }
  if (qword_1008A0A50) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0A50 + 8))(qword_1008A0A50);
  }
  if (qword_1008ABF80) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABF80 + 8))(qword_1008ABF80);
  }
  if (qword_1008A0A60) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0A60 + 8))(qword_1008A0A60);
  }
  if (qword_1008ABF88) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABF88 + 8))(qword_1008ABF88);
  }
  if (qword_1008A0A70) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0A70 + 8))(qword_1008A0A70);
  }
  if (qword_1008ABF90) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABF90 + 8))(qword_1008ABF90);
  }
  if (qword_1008A0A80) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0A80 + 8))(qword_1008A0A80);
  }
  if (qword_1008ABF98) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABF98 + 8))(qword_1008ABF98);
  }
  if (qword_1008A0A90) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0A90 + 8))(qword_1008A0A90);
  }
  if (qword_1008ABFA0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABFA0 + 8))(qword_1008ABFA0);
  }
  if (qword_1008A0AA0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0AA0 + 8))(qword_1008A0AA0);
  }
  if (qword_1008ABFA8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABFA8 + 8))(qword_1008ABFA8);
  }
  if (qword_1008A0AB0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0AB0 + 8))(qword_1008A0AB0);
  }
  if (qword_1008ABFB0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABFB0 + 8))(qword_1008ABFB0);
  }
  if (qword_1008A0AC0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0AC0 + 8))(qword_1008A0AC0);
  }
  if (qword_1008ABFB8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABFB8 + 8))(qword_1008ABFB8);
  }
  if (qword_1008A0AD0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0AD0 + 8))(qword_1008A0AD0);
  }
  if (qword_1008ABFC0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABFC0 + 8))(qword_1008ABFC0);
  }
  if (qword_1008A0AE0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0AE0 + 8))(qword_1008A0AE0);
  }
  if (qword_1008ABFC8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABFC8 + 8))(qword_1008ABFC8);
  }
  if (qword_1008A0AF0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0AF0 + 8))(qword_1008A0AF0);
  }
  if (qword_1008ABFD0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABFD0 + 8))(qword_1008ABFD0);
  }
  if (qword_1008A0B00) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0B00 + 8))(qword_1008A0B00);
  }
  if (qword_1008ABFD8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABFD8 + 8))(qword_1008ABFD8);
  }
  if (qword_1008A0B10) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0B10 + 8))(qword_1008A0B10);
  }
  if (qword_1008ABFE0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABFE0 + 8))(qword_1008ABFE0);
  }
  if (qword_1008A0B20) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0B20 + 8))(qword_1008A0B20);
  }
  if (qword_1008ABFE8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABFE8 + 8))(qword_1008ABFE8);
  }
  if (qword_1008A0B30) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0B30 + 8))(qword_1008A0B30);
  }
  if (qword_1008ABFF0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABFF0 + 8))(qword_1008ABFF0);
  }
  if (qword_1008A0B40) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0B40 + 8))(qword_1008A0B40);
  }
  if (qword_1008ABFF8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008ABFF8 + 8))(qword_1008ABFF8);
  }
  if (qword_1008A0B50) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0B50 + 8))(qword_1008A0B50);
  }
  if (qword_1008AC000) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC000 + 8))(qword_1008AC000);
  }
  if (qword_1008A0B60) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0B60 + 8))(qword_1008A0B60);
  }
  if (qword_1008AC008) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC008 + 8))(qword_1008AC008);
  }
  if (qword_1008A0B70) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0B70 + 8))(qword_1008A0B70);
  }
  if (qword_1008AC010) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC010 + 8))(qword_1008AC010);
  }
  if (qword_1008A0B80) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0B80 + 8))(qword_1008A0B80);
  }
  if (qword_1008AC018) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC018 + 8))(qword_1008AC018);
  }
  if (qword_1008A0B90) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0B90 + 8))(qword_1008A0B90);
  }
  if (qword_1008AC020) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC020 + 8))(qword_1008AC020);
  }
  if (qword_1008A0BA0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0BA0 + 8))(qword_1008A0BA0);
  }
  if (qword_1008AC028) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC028 + 8))(qword_1008AC028);
  }
  if (qword_1008A0BB0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0BB0 + 8))(qword_1008A0BB0);
  }
  if (qword_1008AC030) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC030 + 8))(qword_1008AC030);
  }
  if (qword_1008A0BC0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0BC0 + 8))(qword_1008A0BC0);
  }
  if (qword_1008AC038) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC038 + 8))(qword_1008AC038);
  }
  if (qword_1008A0BD0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0BD0 + 8))(qword_1008A0BD0);
  }
  if (qword_1008AC040) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC040 + 8))(qword_1008AC040);
  }
  if (qword_1008A0BE0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0BE0 + 8))(qword_1008A0BE0);
  }
  if (qword_1008AC048) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC048 + 8))(qword_1008AC048);
  }
  if (qword_1008A0BF0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0BF0 + 8))(qword_1008A0BF0);
  }
  if (qword_1008AC050) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC050 + 8))(qword_1008AC050);
  }
  if (qword_1008A0C00) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0C00 + 8))(qword_1008A0C00);
  }
  if (qword_1008AC058) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC058 + 8))(qword_1008AC058);
  }
  if (qword_1008A0C10) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0C10 + 8))(qword_1008A0C10);
  }
  if (qword_1008AC060) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC060 + 8))(qword_1008AC060);
  }
  if (qword_1008A0C20) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0C20 + 8))(qword_1008A0C20);
  }
  if (qword_1008AC068) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC068 + 8))(qword_1008AC068);
  }
  if (qword_1008A0C30) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0C30 + 8))(qword_1008A0C30);
  }
  if (qword_1008AC070) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC070 + 8))(qword_1008AC070);
  }
  if (qword_1008A0C40) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A0C40 + 8))(qword_1008A0C40);
  }
  if (qword_1008AC078) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC078 + 8))(qword_1008AC078);
  }
  uint64_t result = qword_1008A0C50;
  if (qword_1008A0C50)
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)qword_1008A0C50 + 8);
    return v1();
  }
  return result;
}

uint64_t sub_10008CC2C()
{
  uint64_t v0 = qword_1008A0D08;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v43[1] = sub_100089710;
    char v44 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v43);
  }
  if (!qword_1008ABF30) {
    ((void (*)(void))sub_10008AECC)();
  }
  uint64_t v1 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABF38) {
    sub_10008AECC(v1);
  }
  uint64_t v2 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABF40) {
    sub_10008AECC(v2);
  }
  uint64_t v3 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABF48) {
    sub_10008AECC(v3);
  }
  uint64_t v4 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABF50) {
    sub_10008AECC(v4);
  }
  uint64_t v5 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABF58) {
    sub_10008AECC(v5);
  }
  uint64_t v6 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABF60) {
    sub_10008AECC(v6);
  }
  uint64_t v7 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABF68) {
    sub_10008AECC(v7);
  }
  uint64_t v8 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABF70) {
    sub_10008AECC(v8);
  }
  uint64_t v9 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABF78) {
    sub_10008AECC(v9);
  }
  uint64_t v10 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABF80) {
    sub_10008AECC(v10);
  }
  uint64_t v11 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABF88) {
    sub_10008AECC(v11);
  }
  uint64_t v12 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABF90) {
    sub_10008AECC(v12);
  }
  uint64_t v13 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABF98) {
    sub_10008AECC(v13);
  }
  uint64_t v14 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABFA0) {
    sub_10008AECC(v14);
  }
  uint64_t v15 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABFA8) {
    sub_10008AECC(v15);
  }
  uint64_t v16 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABFB0) {
    sub_10008AECC(v16);
  }
  uint64_t v17 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABFB8) {
    sub_10008AECC(v17);
  }
  uint64_t v18 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABFC0) {
    sub_10008AECC(v18);
  }
  uint64_t v19 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABFC8) {
    sub_10008AECC(v19);
  }
  uint64_t v20 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABFD0) {
    sub_10008AECC(v20);
  }
  uint64_t v21 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABFD8) {
    sub_10008AECC(v21);
  }
  uint64_t v22 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABFE0) {
    sub_10008AECC(v22);
  }
  uint64_t v23 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABFE8) {
    sub_10008AECC(v23);
  }
  uint64_t v24 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABFF0) {
    sub_10008AECC(v24);
  }
  uint64_t v25 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008ABFF8) {
    sub_10008AECC(v25);
  }
  uint64_t v26 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC000) {
    sub_10008AECC(v26);
  }
  uint64_t v27 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC008) {
    sub_10008AECC(v27);
  }
  uint64_t v28 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC010) {
    sub_10008AECC(v28);
  }
  uint64_t v29 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC018) {
    sub_10008AECC(v29);
  }
  uint64_t v30 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC020) {
    sub_10008AECC(v30);
  }
  uint64_t v31 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC028) {
    sub_10008AECC(v31);
  }
  uint64_t v32 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC030) {
    sub_10008AECC(v32);
  }
  uint64_t v33 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC038) {
    sub_10008AECC(v33);
  }
  uint64_t v34 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC040) {
    sub_10008AECC(v34);
  }
  uint64_t v35 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC048) {
    sub_10008AECC(v35);
  }
  uint64_t v36 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC050) {
    sub_10008AECC(v36);
  }
  uint64_t v37 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC058) {
    sub_10008AECC(v37);
  }
  uint64_t v38 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC060) {
    sub_10008AECC(v38);
  }
  uint64_t v39 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC068) {
    sub_10008AECC(v39);
  }
  uint64_t v40 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC070) {
    sub_10008AECC(v40);
  }
  uint64_t v41 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC078) {
    sub_10008AECC(v41);
  }
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
}

void sub_10008D298(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10008D2F0(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_1008ABF48;
  if (!qword_1008ABF48)
  {
    uint64_t result = sub_10008AECC(result);
    uint64_t v2 = qword_1008ABF48;
  }
  v1[3] = v2;
  uint64_t v3 = qword_1008ABF50;
  if (!qword_1008ABF50)
  {
    uint64_t result = sub_10008AECC(result);
    uint64_t v3 = qword_1008ABF50;
  }
  v1[4] = v3;
  uint64_t v4 = qword_1008ABF60;
  if (!qword_1008ABF60)
  {
    uint64_t result = sub_10008AECC(result);
    uint64_t v4 = qword_1008ABF60;
  }
  v1[5] = v4;
  uint64_t v5 = qword_1008ABF68;
  if (!qword_1008ABF68)
  {
    uint64_t result = sub_10008AECC(result);
    uint64_t v5 = qword_1008ABF68;
  }
  v1[6] = v5;
  uint64_t v6 = qword_1008ABF70;
  if (!qword_1008ABF70)
  {
    uint64_t result = sub_10008AECC(result);
    uint64_t v6 = qword_1008ABF70;
  }
  v1[7] = v6;
  uint64_t v7 = qword_1008ABF78;
  if (!qword_1008ABF78)
  {
    uint64_t result = sub_10008AECC(result);
    uint64_t v7 = qword_1008ABF78;
  }
  v1[8] = v7;
  uint64_t v8 = qword_1008ABF80;
  if (!qword_1008ABF80)
  {
    uint64_t result = sub_10008AECC(result);
    uint64_t v8 = qword_1008ABF80;
  }
  v1[9] = v8;
  uint64_t v9 = qword_1008ABF88;
  if (!qword_1008ABF88)
  {
    uint64_t result = sub_10008AECC(result);
    uint64_t v9 = qword_1008ABF88;
  }
  v1[10] = v9;
  uint64_t v10 = qword_1008ABF90;
  if (!qword_1008ABF90)
  {
    uint64_t result = sub_10008AECC(result);
    uint64_t v10 = qword_1008ABF90;
  }
  v1[11] = v10;
  uint64_t v11 = qword_1008ABFA0;
  if (!qword_1008ABFA0)
  {
    uint64_t result = sub_10008AECC(result);
    uint64_t v11 = qword_1008ABFA0;
  }
  v1[12] = v11;
  uint64_t v12 = qword_1008ABFA8;
  if (!qword_1008ABFA8)
  {
    uint64_t result = sub_10008AECC(result);
    uint64_t v12 = qword_1008ABFA8;
  }
  v1[13] = v12;
  uint64_t v13 = qword_1008ABFB0;
  if (!qword_1008ABFB0)
  {
    uint64_t result = sub_10008AECC(result);
    uint64_t v13 = qword_1008ABFB0;
  }
  v1[14] = v13;
  uint64_t v14 = qword_1008ABFB8;
  if (!qword_1008ABFB8)
  {
    uint64_t result = sub_10008AECC(result);
    uint64_t v14 = qword_1008ABFB8;
  }
  v1[15] = v14;
  uint64_t v15 = qword_1008ABFD8;
  if (!qword_1008ABFD8)
  {
    uint64_t result = sub_10008AECC(result);
    uint64_t v15 = qword_1008ABFD8;
  }
  v1[16] = v15;
  uint64_t v16 = qword_1008ABFE0;
  if (!qword_1008ABFE0)
  {
    uint64_t result = sub_10008AECC(result);
    uint64_t v16 = qword_1008ABFE0;
  }
  v1[17] = v16;
  uint64_t v17 = qword_1008AC008;
  if (!qword_1008AC008)
  {
    uint64_t result = sub_10008AECC(result);
    uint64_t v17 = qword_1008AC008;
  }
  v1[18] = v17;
  uint64_t v18 = qword_1008AC010;
  if (!qword_1008AC010)
  {
    uint64_t result = sub_10008AECC(result);
    uint64_t v18 = qword_1008AC010;
  }
  v1[19] = v18;
  uint64_t v19 = qword_1008AC018;
  if (!qword_1008AC018)
  {
    uint64_t result = sub_10008AECC(result);
    uint64_t v19 = qword_1008AC018;
  }
  v1[20] = v19;
  uint64_t v20 = qword_1008AC020;
  if (!qword_1008AC020)
  {
    uint64_t result = sub_10008AECC(result);
    uint64_t v20 = qword_1008AC020;
  }
  v1[21] = v20;
  uint64_t v21 = qword_1008AC038;
  if (!qword_1008AC038)
  {
    uint64_t result = sub_10008AECC(result);
    uint64_t v21 = qword_1008AC038;
  }
  v1[22] = v21;
  uint64_t v22 = qword_1008AC040;
  if (!qword_1008AC040)
  {
    uint64_t result = sub_10008AECC(result);
    uint64_t v22 = qword_1008AC040;
  }
  v1[23] = v22;
  uint64_t v23 = qword_1008AC058;
  if (!qword_1008AC058)
  {
    uint64_t result = sub_10008AECC(result);
    uint64_t v23 = qword_1008AC058;
  }
  v1[24] = v23;
  uint64_t v24 = qword_1008AC060;
  if (!qword_1008AC060)
  {
    uint64_t result = sub_10008AECC(result);
    uint64_t v24 = qword_1008AC060;
  }
  v1[25] = v24;
  uint64_t v25 = qword_1008AC068;
  if (!qword_1008AC068)
  {
    uint64_t result = sub_10008AECC(result);
    uint64_t v25 = qword_1008AC068;
  }
  v1[26] = v25;
  uint64_t v26 = qword_1008AC030;
  if (!qword_1008AC030)
  {
    uint64_t result = sub_10008AECC(result);
    uint64_t v26 = qword_1008AC030;
  }
  v1[27] = v26;
  uint64_t v27 = qword_1008AC070;
  if (!qword_1008AC070)
  {
    uint64_t result = sub_10008AECC(result);
    uint64_t v27 = qword_1008AC070;
  }
  v1[28] = v27;
  uint64_t v28 = qword_1008AC078;
  if (!qword_1008AC078)
  {
    uint64_t result = sub_10008AECC(result);
    uint64_t v28 = qword_1008AC078;
  }
  v1[29] = v28;
  uint64_t v29 = qword_1008AC050;
  if (!qword_1008AC050)
  {
    uint64_t result = sub_10008AECC(result);
    uint64_t v29 = qword_1008AC050;
  }
  v1[30] = v29;
  return result;
}

BOOL sub_10008D5B0(int a1)
{
  return (a1 - 1) < 3;
}

uint64_t sub_10008D5C0(unsigned int a1)
{
  return (a1 < 0x1D) & (0x1FDFFFFFu >> a1);
}

uint64_t sub_10008D5D8(unsigned int a1)
{
  uint64_t result = 1;
  if (a1 >= 0x25)
  {
    unsigned int v3 = a1 - 89;
    if (v3 > 8 || ((1 << v3) & 0x18F) == 0) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10008D614(unsigned int a1)
{
  return (a1 < 0x1C) & (0xDDB54EFu >> a1);
}

BOOL sub_10008D630(int a1)
{
  return (a1 - 1) < 6;
}

BOOL sub_10008D640(int a1)
{
  return (a1 - 1) < 2;
}

BOOL sub_10008D650(unsigned int a1)
{
  return a1 < 5;
}

uint64_t sub_10008D65C(unsigned int a1)
{
  return (a1 < 0xE) & (0x3C3Fu >> a1);
}

uint64_t sub_10008D674(unsigned int a1)
{
  uint64_t result = 1;
  if ((a1 - 224 > 0x1E || ((1 << (a1 + 32)) & 0x7FFF403F) == 0) && (a1 > 0x18 || ((1 << a1) & 0x116003F) == 0)) {
    return 0;
  }
  return result;
}

uint64_t sub_10008D6C8(uint64_t a1)
{
  *(void *)a1 = off_1008499E8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_DWORD *)(a1 + 16) = 1;
  *(void *)(a1 + 248) = 0;
  *(_OWORD *)(a1 + 20) = 0u;
  *(_OWORD *)(a1 + 36) = 0u;
  *(_OWORD *)(a1 + 52) = 0u;
  *(_OWORD *)(a1 + 68) = 0u;
  *(_OWORD *)(a1 + 84) = 0u;
  *(_OWORD *)(a1 + 100) = 0u;
  *(_OWORD *)(a1 + 116) = 0u;
  *(_OWORD *)(a1 + 132) = 0u;
  *(_OWORD *)(a1 + 148) = 0u;
  *(_OWORD *)(a1 + 164) = 0u;
  *(_OWORD *)(a1 + 180) = 0u;
  *(_OWORD *)(a1 + 196) = 0u;
  *(_OWORD *)(a1 + 212) = 0u;
  *(_OWORD *)(a1 + 228) = 0u;
  *(_DWORD *)(a1 + 244) = 0;
  return a1;
}

void sub_10008D758(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10008D76C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008ABFD8;
  if (!qword_1008ABFD8)
  {
    sub_10008AECC(0, a2, a3, a4);
    return qword_1008ABFD8;
  }
  return result;
}

uint64_t sub_10008D79C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008AC030;
  if (!qword_1008AC030)
  {
    sub_10008AECC(0, a2, a3, a4);
    return qword_1008AC030;
  }
  return result;
}

uint64_t sub_10008D7CC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v64);
  }
  unsigned int v4 = *(_DWORD *)(a2 + 252);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      int v5 = *(_DWORD *)(a2 + 16);
      if ((v5 - 1) >= 3) {
        sub_10040FD5C();
      }
      *(_DWORD *)(a1 + 252) |= 1u;
      *(_DWORD *)(a1 + 16) = v5;
      unsigned int v4 = *(_DWORD *)(a2 + 252);
    }
    if ((v4 & 2) != 0)
    {
      unsigned int v6 = *(_DWORD *)(a2 + 20);
      if (v6 >= 0x15 && v6 - 22 >= 7) {
        sub_10040FD30();
      }
      *(_DWORD *)(a1 + 252) |= 2u;
      *(_DWORD *)(a1 + 20) = v6;
      unsigned int v4 = *(_DWORD *)(a2 + 252);
    }
    if ((v4 & 4) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 4u;
      uint64_t v7 = *(void *)(a1 + 24);
      if (!v7) {
        operator new();
      }
      uint64_t v8 = *(void *)(a2 + 24);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_1008ABF30 + 24);
      }
      sub_1000937FC(v7, v8);
      unsigned int v4 = *(_DWORD *)(a2 + 252);
    }
    if ((v4 & 8) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 8u;
      uint64_t v9 = *(void *)(a1 + 32);
      if (!v9) {
        operator new();
      }
      uint64_t v10 = *(void *)(a2 + 32);
      if (!v10) {
        uint64_t v10 = *(void *)(qword_1008ABF30 + 32);
      }
      sub_1000938F0(v9, v10);
      unsigned int v4 = *(_DWORD *)(a2 + 252);
    }
    if ((v4 & 0x10) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x10u;
      uint64_t v11 = *(void *)(a1 + 40);
      if (!v11) {
        operator new();
      }
      uint64_t v12 = *(void *)(a2 + 40);
      if (!v12) {
        uint64_t v12 = *(void *)(qword_1008ABF30 + 40);
      }
      sub_100093B44(v11, v12);
      unsigned int v4 = *(_DWORD *)(a2 + 252);
    }
    if ((v4 & 0x20) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x20u;
      uint64_t v13 = *(void *)(a1 + 48);
      if (!v13) {
        operator new();
      }
      uint64_t v14 = *(void *)(a2 + 48);
      if (!v14) {
        uint64_t v14 = *(void *)(qword_1008ABF30 + 48);
      }
      sub_100093E38(v13, v14);
      unsigned int v4 = *(_DWORD *)(a2 + 252);
    }
    if ((v4 & 0x40) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x40u;
      uint64_t v15 = *(void *)(a1 + 56);
      if (!v15) {
        operator new();
      }
      uint64_t v16 = *(void *)(a2 + 56);
      if (!v16) {
        uint64_t v16 = *(void *)(qword_1008ABF30 + 56);
      }
      sub_100093F50(v15, v16);
      unsigned int v4 = *(_DWORD *)(a2 + 252);
    }
    if ((v4 & 0x80) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x80u;
      uint64_t v17 = *(void *)(a1 + 64);
      if (!v17) {
        operator new();
      }
      uint64_t v18 = *(void *)(a2 + 64);
      if (!v18) {
        uint64_t v18 = *(void *)(qword_1008ABF30 + 64);
      }
      sub_1000940CC(v17, v18);
      unsigned int v4 = *(_DWORD *)(a2 + 252);
    }
  }
  if ((v4 & 0xFF00) != 0)
  {
    if ((v4 & 0x100) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x100u;
      uint64_t v19 = *(void *)(a1 + 72);
      if (!v19) {
        operator new();
      }
      uint64_t v20 = *(void *)(a2 + 72);
      if (!v20) {
        uint64_t v20 = *(void *)(qword_1008ABF30 + 72);
      }
      sub_1000941E4(v19, v20);
      unsigned int v4 = *(_DWORD *)(a2 + 252);
    }
    if ((v4 & 0x200) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x200u;
      uint64_t v21 = *(void *)(a1 + 80);
      if (!v21) {
        operator new();
      }
      uint64_t v22 = *(void *)(a2 + 80);
      if (!v22) {
        uint64_t v22 = *(void *)(qword_1008ABF30 + 80);
      }
      sub_100094328(v21, v22);
      unsigned int v4 = *(_DWORD *)(a2 + 252);
    }
    if ((v4 & 0x400) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x400u;
      uint64_t v23 = *(void *)(a1 + 88);
      if (!v23) {
        operator new();
      }
      uint64_t v24 = *(void *)(a2 + 88);
      if (!v24) {
        uint64_t v24 = *(void *)(qword_1008ABF30 + 88);
      }
      sub_100094440(v23, v24);
      unsigned int v4 = *(_DWORD *)(a2 + 252);
    }
    if ((v4 & 0x800) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x800u;
      uint64_t v25 = *(_DWORD **)(a1 + 96);
      if (!v25) {
        operator new();
      }
      uint64_t v26 = *(void *)(a2 + 96);
      if (!v26) {
        uint64_t v26 = *(void *)(qword_1008ABF30 + 96);
      }
      sub_100094518(v25, v26);
      unsigned int v4 = *(_DWORD *)(a2 + 252);
    }
    if ((v4 & 0x1000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x1000u;
      uint64_t v27 = *(_DWORD **)(a1 + 104);
      if (!v27) {
        operator new();
      }
      uint64_t v28 = *(void *)(a2 + 104);
      if (!v28) {
        uint64_t v28 = *(void *)(qword_1008ABF30 + 104);
      }
      sub_100094690(v27, v28);
      unsigned int v4 = *(_DWORD *)(a2 + 252);
    }
    if ((v4 & 0x2000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x2000u;
      uint64_t v29 = *(_DWORD **)(a1 + 112);
      if (!v29) {
        operator new();
      }
      uint64_t v30 = *(void *)(a2 + 112);
      if (!v30) {
        uint64_t v30 = *(void *)(qword_1008ABF30 + 112);
      }
      sub_1000947DC(v29, v30);
      unsigned int v4 = *(_DWORD *)(a2 + 252);
    }
    if ((v4 & 0x4000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x4000u;
      uint64_t v31 = *(void *)(a1 + 120);
      if (!v31) {
        operator new();
      }
      uint64_t v32 = *(void *)(a2 + 120);
      if (!v32) {
        uint64_t v32 = *(void *)(qword_1008ABF30 + 120);
      }
      sub_1000948E0(v31, v32);
      unsigned int v4 = *(_DWORD *)(a2 + 252);
    }
    if ((v4 & 0x8000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x8000u;
      uint64_t v33 = *(void *)(a1 + 128);
      if (!v33) {
        operator new();
      }
      uint64_t v34 = *(void *)(a2 + 128);
      if (!v34) {
        uint64_t v34 = *(void *)(qword_1008ABF30 + 128);
      }
      sub_100094A80(v33, v34);
      unsigned int v4 = *(_DWORD *)(a2 + 252);
    }
  }
  if ((v4 & 0xFF0000) != 0)
  {
    if ((v4 & 0x10000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x10000u;
      uint64_t v35 = *(void *)(a1 + 136);
      if (!v35) {
        operator new();
      }
      uint64_t v36 = *(void *)(a2 + 136);
      if (!v36) {
        uint64_t v36 = *(void *)(qword_1008ABF30 + 136);
      }
      sub_100095664(v35, v36);
      unsigned int v4 = *(_DWORD *)(a2 + 252);
    }
    if ((v4 & 0x20000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x20000u;
      uint64_t v37 = *(void *)(a1 + 144);
      if (!v37) {
        operator new();
      }
      uint64_t v38 = *(void *)(a2 + 144);
      if (!v38) {
        uint64_t v38 = *(void *)(qword_1008ABF30 + 144);
      }
      sub_1000957AC(v37, v38);
      unsigned int v4 = *(_DWORD *)(a2 + 252);
    }
    if ((v4 & 0x40000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x40000u;
      uint64_t v39 = *(void *)(a1 + 152);
      if (!v39) {
        operator new();
      }
      uint64_t v40 = *(void *)(a2 + 152);
      if (!v40) {
        uint64_t v40 = *(void *)(qword_1008ABF30 + 152);
      }
      sub_100095AFC(v39, v40);
      unsigned int v4 = *(_DWORD *)(a2 + 252);
    }
    if ((v4 & 0x80000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x80000u;
      uint64_t v41 = *(void *)(a1 + 160);
      if (!v41) {
        operator new();
      }
      uint64_t v42 = *(void *)(a2 + 160);
      if (!v42) {
        uint64_t v42 = *(void *)(qword_1008ABF30 + 160);
      }
      sub_100096114(v41, v42);
      unsigned int v4 = *(_DWORD *)(a2 + 252);
    }
    if ((v4 & 0x100000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x100000u;
      uint64_t v43 = *(void *)(a1 + 168);
      if (!v43) {
        operator new();
      }
      uint64_t v44 = *(void *)(a2 + 168);
      if (!v44) {
        uint64_t v44 = *(void *)(qword_1008ABF30 + 168);
      }
      sub_1000964F0(v43, v44);
      unsigned int v4 = *(_DWORD *)(a2 + 252);
    }
    if ((v4 & 0x200000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x200000u;
      uint64_t v45 = *(void *)(a1 + 176);
      if (!v45) {
        operator new();
      }
      uint64_t v46 = *(void *)(a2 + 176);
      if (!v46) {
        uint64_t v46 = *(void *)(qword_1008ABF30 + 176);
      }
      sub_1000967C0(v45, v46);
      unsigned int v4 = *(_DWORD *)(a2 + 252);
    }
    if ((v4 & 0x400000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x400000u;
      uint64_t v47 = *(void *)(a1 + 184);
      if (!v47) {
        operator new();
      }
      uint64_t v48 = *(void *)(a2 + 184);
      if (!v48) {
        uint64_t v48 = *(void *)(qword_1008ABF30 + 184);
      }
      sub_100096E48(v47, v48);
      unsigned int v4 = *(_DWORD *)(a2 + 252);
    }
    if ((v4 & 0x800000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x800000u;
      uint64_t v49 = *(void *)(a1 + 192);
      if (!v49) {
        operator new();
      }
      uint64_t v50 = *(void *)(a2 + 192);
      if (!v50) {
        uint64_t v50 = *(void *)(qword_1008ABF30 + 192);
      }
      sub_100097004(v49, v50);
      unsigned int v4 = *(_DWORD *)(a2 + 252);
    }
  }
  if (HIBYTE(v4))
  {
    if ((v4 & 0x1000000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x1000000u;
      uint64_t v51 = *(void *)(a1 + 200);
      if (!v51) {
        operator new();
      }
      uint64_t v52 = *(void *)(a2 + 200);
      if (!v52) {
        uint64_t v52 = *(void *)(qword_1008ABF30 + 200);
      }
      sub_100097358(v51, v52);
      unsigned int v4 = *(_DWORD *)(a2 + 252);
    }
    if ((v4 & 0x2000000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x2000000u;
      uint64_t v53 = *(void *)(a1 + 208);
      if (!v53) {
        operator new();
      }
      uint64_t v54 = *(void *)(a2 + 208);
      if (!v54) {
        uint64_t v54 = *(void *)(qword_1008ABF30 + 208);
      }
      sub_1000975D8(v53, v54);
      unsigned int v4 = *(_DWORD *)(a2 + 252);
    }
    if ((v4 & 0x4000000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x4000000u;
      uint64_t v55 = *(void *)(a1 + 216);
      if (!v55) {
        operator new();
      }
      uint64_t v56 = *(void *)(a2 + 216);
      if (!v56) {
        uint64_t v56 = *(void *)(qword_1008ABF30 + 216);
      }
      sub_1000977D4(v55, v56);
      unsigned int v4 = *(_DWORD *)(a2 + 252);
    }
    if ((v4 & 0x8000000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x8000000u;
      uint64_t v57 = *(void *)(a1 + 224);
      if (!v57) {
        operator new();
      }
      uint64_t v58 = *(void *)(a2 + 224);
      if (!v58) {
        uint64_t v58 = *(void *)(qword_1008ABF30 + 224);
      }
      sub_100097A44(v57, v58);
      unsigned int v4 = *(_DWORD *)(a2 + 252);
    }
    if ((v4 & 0x10000000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x10000000u;
      uint64_t v59 = *(void *)(a1 + 232);
      if (!v59) {
        operator new();
      }
      uint64_t v60 = *(void *)(a2 + 232);
      if (!v60) {
        uint64_t v60 = *(void *)(qword_1008ABF30 + 232);
      }
      sub_100097D54(v59, v60);
      unsigned int v4 = *(_DWORD *)(a2 + 252);
    }
    if ((v4 & 0x20000000) != 0)
    {
      *(_DWORD *)(a1 + 252) |= 0x20000000u;
      uint64_t v61 = *(void *)(a1 + 240);
      if (!v61) {
        operator new();
      }
      uint64_t v62 = *(void *)(a2 + 240);
      if (!v62) {
        uint64_t v62 = *(void *)(qword_1008ABF30 + 240);
      }
      sub_100097E6C(v61, v62);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10008E2E0()
{
}

void sub_10008E4D8(uint64_t a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  JUMPOUT(0x10008E4D0);
}

void sub_10008E4EC(void *a1)
{
  *a1 = off_1008499E8;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_10008E54C(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void *sub_10008E54C(void *result)
{
  if ((void *)qword_1008ABF30 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[3];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[4];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[5];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[6];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = v1[7];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = v1[8];
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = v1[9];
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = v1[10];
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
    uint64_t v10 = v1[11];
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    uint64_t v11 = v1[12];
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
    uint64_t v12 = v1[13];
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    }
    uint64_t v13 = v1[14];
    if (v13) {
      (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
    }
    uint64_t v14 = v1[15];
    if (v14) {
      (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
    }
    uint64_t v15 = v1[16];
    if (v15) {
      (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
    }
    uint64_t v16 = v1[17];
    if (v16) {
      (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
    }
    uint64_t v17 = v1[18];
    if (v17) {
      (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
    }
    uint64_t v18 = v1[19];
    if (v18) {
      (*(void (**)(uint64_t))(*(void *)v18 + 8))(v18);
    }
    uint64_t v19 = v1[20];
    if (v19) {
      (*(void (**)(uint64_t))(*(void *)v19 + 8))(v19);
    }
    uint64_t v20 = v1[21];
    if (v20) {
      (*(void (**)(uint64_t))(*(void *)v20 + 8))(v20);
    }
    uint64_t v21 = v1[22];
    if (v21) {
      (*(void (**)(uint64_t))(*(void *)v21 + 8))(v21);
    }
    uint64_t v22 = v1[23];
    if (v22) {
      (*(void (**)(uint64_t))(*(void *)v22 + 8))(v22);
    }
    uint64_t v23 = v1[24];
    if (v23) {
      (*(void (**)(uint64_t))(*(void *)v23 + 8))(v23);
    }
    uint64_t v24 = v1[25];
    if (v24) {
      (*(void (**)(uint64_t))(*(void *)v24 + 8))(v24);
    }
    uint64_t v25 = v1[26];
    if (v25) {
      (*(void (**)(uint64_t))(*(void *)v25 + 8))(v25);
    }
    uint64_t v26 = v1[27];
    if (v26) {
      (*(void (**)(uint64_t))(*(void *)v26 + 8))(v26);
    }
    uint64_t v27 = v1[28];
    if (v27) {
      (*(void (**)(uint64_t))(*(void *)v27 + 8))(v27);
    }
    uint64_t v28 = v1[29];
    if (v28) {
      (*(void (**)(uint64_t))(*(void *)v28 + 8))(v28);
    }
    uint64_t result = (void *)v1[30];
    if (result)
    {
      uint64_t v29 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v29();
    }
  }
  return result;
}

void sub_10008EA68(void *a1)
{
  sub_10008E4EC(a1);

  operator delete();
}

uint64_t sub_10008EAA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 248) = a2;
  return result;
}

uint64_t sub_10008EAA8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008ABF30;
  if (!qword_1008ABF30)
  {
    sub_10008AECC(0, a2, a3, a4);
    return qword_1008ABF30;
  }
  return result;
}

void sub_10008EAD8()
{
}

void sub_10008EB18()
{
}

uint64_t sub_10008EB3C(uint64_t this)
{
  uint64_t v1 = this;
  unsigned int v2 = *(_DWORD *)(this + 252);
  if ((_BYTE)v2)
  {
    *(void *)(this + 16) = 1;
    if ((v2 & 4) != 0)
    {
      this = *(void *)(this + 24);
      if (this)
      {
        this = (uint64_t)sub_10008EE14(this);
        unsigned int v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 8) != 0)
    {
      this = *(void *)(v1 + 32);
      if (this)
      {
        this = (uint64_t)sub_10008EE64(this);
        unsigned int v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      this = *(void *)(v1 + 40);
      if (this)
      {
        this = sub_10008EF08(this);
        unsigned int v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x20) != 0)
    {
      this = *(void *)(v1 + 48);
      if (this)
      {
        this = (uint64_t)sub_10008EF94((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        unsigned int v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x40) != 0)
    {
      this = *(void *)(v1 + 56);
      if (this)
      {
        this = (uint64_t)sub_10008EFF4((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        unsigned int v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x80) != 0)
    {
      this = *(void *)(v1 + 64);
      if (this)
      {
        this = (uint64_t)sub_10008F05C((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        unsigned int v2 = *(_DWORD *)(v1 + 252);
      }
    }
  }
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      this = *(void *)(v1 + 72);
      if (this)
      {
        this = (uint64_t)sub_10008F0BC((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        unsigned int v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x200) != 0)
    {
      this = *(void *)(v1 + 80);
      if (this)
      {
        this = (uint64_t)sub_10008F124((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        unsigned int v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x400) != 0)
    {
      this = *(void *)(v1 + 88);
      if (this)
      {
        uint64_t v3 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 16) = 0;
        *(_DWORD *)(this + 28) = 0;
        if (v3) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    unsigned int v2 = *(_DWORD *)(v1 + 252);
    if ((v2 & 0x800) != 0)
    {
      this = *(void *)(v1 + 96);
      if (this)
      {
        this = sub_10008F19C(this);
        unsigned int v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x1000) != 0)
    {
      this = *(void *)(v1 + 104);
      if (this)
      {
        this = sub_10008F1FC(this);
        unsigned int v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x2000) != 0)
    {
      this = *(void *)(v1 + 112);
      if (this)
      {
        this = (uint64_t)sub_10008F250(this);
        unsigned int v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x4000) != 0)
    {
      this = *(void *)(v1 + 120);
      if (this)
      {
        this = (uint64_t)sub_10008F274((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        unsigned int v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x8000) != 0)
    {
      this = *(void *)(v1 + 128);
      if (this)
      {
        this = sub_10008F2E4(this);
        unsigned int v2 = *(_DWORD *)(v1 + 252);
      }
    }
  }
  if ((v2 & 0xFF0000) != 0)
  {
    if ((v2 & 0x10000) != 0)
    {
      this = *(void *)(v1 + 136);
      if (this)
      {
        this = (uint64_t)sub_10008F4C8((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        unsigned int v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x20000) != 0)
    {
      this = *(void *)(v1 + 144);
      if (this)
      {
        this = sub_10008F530(this);
        unsigned int v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x40000) != 0)
    {
      this = *(void *)(v1 + 152);
      if (this)
      {
        this = (uint64_t)sub_10008F5E8((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        unsigned int v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x80000) != 0)
    {
      this = *(void *)(v1 + 160);
      if (this)
      {
        this = sub_10008F710(this);
        unsigned int v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x100000) != 0)
    {
      this = *(void *)(v1 + 168);
      if (this)
      {
        this = sub_10008F7AC(this);
        unsigned int v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x200000) != 0)
    {
      this = *(void *)(v1 + 176);
      if (this)
      {
        this = (uint64_t)sub_10008F838(this);
        unsigned int v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x400000) != 0)
    {
      this = *(void *)(v1 + 184);
      if (this)
      {
        if (*(unsigned char *)(this + 68))
        {
          *(_OWORD *)(this + 32) = 0u;
          *(_OWORD *)(this + 48) = 0u;
          *(_OWORD *)(this + 16) = 0u;
        }
        uint64_t v4 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 60) = 0;
        if (v4) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    unsigned int v2 = *(_DWORD *)(v1 + 252);
    if ((v2 & 0x800000) != 0)
    {
      this = *(void *)(v1 + 192);
      if (this)
      {
        this = (uint64_t)sub_10008F8EC(this);
        unsigned int v2 = *(_DWORD *)(v1 + 252);
      }
    }
  }
  if (HIBYTE(v2))
  {
    if ((v2 & 0x1000000) != 0)
    {
      this = *(void *)(v1 + 200);
      if (this)
      {
        this = sub_10008F93C(this);
        unsigned int v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x2000000) != 0)
    {
      this = *(void *)(v1 + 208);
      if (this)
      {
        this = (uint64_t)sub_10008F9B8((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        unsigned int v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x4000000) != 0)
    {
      this = *(void *)(v1 + 216);
      if (this)
      {
        this = sub_10008FA38(this);
        unsigned int v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x8000000) != 0)
    {
      this = *(void *)(v1 + 224);
      if (this)
      {
        this = (uint64_t)sub_10008FAB0((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        unsigned int v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x10000000) != 0)
    {
      this = *(void *)(v1 + 232);
      if (this)
      {
        this = (uint64_t)sub_10008FB40((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        unsigned int v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x20000000) != 0)
    {
      this = *(void *)(v1 + 240);
      if (this) {
        this = sub_10008FBA0(this);
      }
    }
  }
  uint64_t v6 = *(void *)(v1 + 8);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v5 + 61) = 0;
  if (v6)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10008EE14(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 28))
  {
    uint64_t v1 = *(void *)(a1 + 16);
    if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      if (*(char *)(v1 + 23) < 0)
      {
        **(unsigned char **)uint64_t v1 = 0;
        *(void *)(v1 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v1 = 0;
        *(unsigned char *)(v1 + 23) = 0;
      }
    }
  }
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 5) = 0;
  if (v3) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10008EE64(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 68);
  if ((_BYTE)v1)
  {
    if (v1)
    {
      uint64_t v2 = *(void *)(a1 + 16);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    if ((*(unsigned char *)(a1 + 68) & 0x20) != 0)
    {
      uint64_t v3 = *(void *)(a1 + 40);
      if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    *(void *)(a1 + 48) = 0;
    int v1 = *(_DWORD *)(a1 + 68);
  }
  if ((v1 & 0xFF00) != 0) {
    *(void *)(a1 + 56) = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 15) = 0;
  if (v5) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10008EF08(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 84);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t v3 = *(void *)(a1 + 16);
      if (v3)
      {
        sub_100098774(v3);
        int v2 = *(_DWORD *)(a1 + 84);
      }
    }
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(_DWORD *)(a1 + 48) = 0;
    *(void *)(a1 + 40) = 0;
  }
  if ((v2 & 0xFF00) != 0) {
    *(_DWORD *)(a1 + 52) = 0;
  }
  uint64_t result = sub_10006F8C8(a1 + 56);
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)v5 + 19) = 0;
  if (v6)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10008EF94(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  int v1 = this;
  if (*((unsigned char *)this + 28))
  {
    this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)this + 2);
    if (this) {
      this = sub_10009916C(this);
    }
  }
  uint64_t v3 = *((void *)v1 + 1);
  int v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v2 + 5) = 0;
  if (v3)
  {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v2);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10008EFF4(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  int v1 = this;
  if (*((unsigned char *)this + 44))
  {
    if (*((unsigned char *)this + 44))
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)this + 2);
      if (this) {
        this = sub_100098774((uint64_t)this);
      }
    }
    *((void *)v1 + 3) = 0;
    *((void *)v1 + 4) = 0;
  }
  uint64_t v3 = *((void *)v1 + 1);
  int v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v2 + 9) = 0;
  if (v3)
  {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v2);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10008F05C(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  int v1 = this;
  if (*((unsigned char *)this + 28))
  {
    this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)this + 2);
    if (this) {
      this = sub_10009916C(this);
    }
  }
  uint64_t v3 = *((void *)v1 + 1);
  int v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v2 + 5) = 0;
  if (v3)
  {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v2);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10008F0BC(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  int v1 = this;
  if (*((unsigned char *)this + 32))
  {
    if (*((unsigned char *)this + 32))
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)this + 2);
      if (this) {
        this = sub_100098774((uint64_t)this);
      }
    }
    *((_DWORD *)v1 + 6) = 0;
  }
  uint64_t v3 = *((void *)v1 + 1);
  int v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v2 + 6) = 0;
  if (v3)
  {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v2);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10008F124(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  int v1 = this;
  if (*((unsigned char *)this + 28))
  {
    this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)this + 2);
    if (this) {
      this = sub_10009916C(this);
    }
  }
  uint64_t v3 = *((void *)v1 + 1);
  int v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v2 + 5) = 0;
  if (v3)
  {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v2);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10008F184(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  *((_DWORD *)result + 7) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10008F19C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48)) {
    *(_DWORD *)(a1 + 40) = 0;
  }
  uint64_t result = sub_10006F8C8(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)v3 + 10) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return result;
}

uint64_t sub_10008F1FC(uint64_t a1)
{
  uint64_t result = sub_10006F8C8(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)v3 + 9) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10008F250(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 32))
  {
    *(void *)(a1 + 16) = 0;
    *(_DWORD *)(a1 + 24) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 6) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10008F274(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  int v1 = this;
  char v2 = *((unsigned char *)this + 56);
  if (v2)
  {
    *((_DWORD *)this + 12) = 0;
    *((void *)this + 3) = 0;
    *((void *)this + 4) = 0;
    *((void *)this + 2) = 0;
    if ((v2 & 0x10) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)this + 5);
      if (this) {
        this = sub_1000A2300((uint64_t)this);
      }
    }
  }
  uint64_t v4 = *((void *)v1 + 1);
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v3 + 12) = 0;
  if (v4)
  {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return this;
}

uint64_t sub_10008F2E4(uint64_t a1)
{
  char v2 = (unsigned int *)(a1 + 468);
  unsigned int v3 = *(_DWORD *)(a1 + 468);
  if ((_BYTE)v3)
  {
    if (v3)
    {
      uint64_t v4 = *(wireless_diagnostics::google::protobuf::UnknownFieldSet **)(a1 + 16);
      if (v4)
      {
        sub_10009916C(v4);
        unsigned int v3 = *v2;
      }
    }
    *(_DWORD *)(a1 + 48) = 0;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    if ((v3 & 0x20) != 0)
    {
      uint64_t v5 = *(void *)(a1 + 40);
      if ((_UNKNOWN *)v5 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(unsigned char **)uint64_t v5 = 0;
          *(void *)(v5 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v5 = 0;
          *(unsigned char *)(v5 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(a1 + 52) = 0;
    *(_DWORD *)(a1 + 56) = 0;
    unsigned int v3 = *(_DWORD *)(a1 + 468);
  }
  if ((v3 & 0xFF00) != 0)
  {
    *(_DWORD *)(a1 + 136) = 0;
    *(_OWORD *)(a1 + 60) = 0u;
    *(_OWORD *)(a1 + 76) = 0u;
    *(_DWORD *)(a1 + 92) = 0;
  }
  if ((v3 & 0xFF0000) != 0)
  {
    *(void *)(a1 + 128) = 0;
    *(_OWORD *)(a1 + 96) = 0u;
    *(_OWORD *)(a1 + 112) = 0u;
    *(void *)(a1 + 152) = 0;
    *(void *)(a1 + 160) = 0;
    *(void *)(a1 + 144) = 0;
  }
  if (HIBYTE(v3))
  {
    *(_DWORD *)(a1 + 140) = 0;
    *(void *)(a1 + 176) = 0;
    *(void *)(a1 + 184) = 0;
    *(void *)(a1 + 168) = 0;
    *(void *)(a1 + 224) = 0;
    *(void *)(a1 + 232) = 0;
    *(void *)(a1 + 216) = 0;
  }
  unsigned int v6 = *(_DWORD *)(a1 + 472);
  if ((_BYTE)v6)
  {
    *(_OWORD *)(a1 + 256) = 0u;
    *(_OWORD *)(a1 + 272) = 0u;
    *(_OWORD *)(a1 + 240) = 0u;
    *(_DWORD *)(a1 + 288) = 1;
  }
  if ((v6 & 0xFF00) != 0)
  {
    *(void *)(a1 + 304) = 0;
    *(_DWORD *)(a1 + 292) = 0;
    *(_DWORD *)(a1 + 295) = 0;
    if ((v6 & 0x2000) != 0)
    {
      uint64_t v7 = *(void *)(a1 + 312);
      if (v7)
      {
        if (*(unsigned char *)(v7 + 52))
        {
          *(_OWORD *)(v7 + 16) = 0u;
          *(_OWORD *)(v7 + 32) = 0u;
        }
        uint64_t v9 = *(void *)(v7 + 8);
        uint64_t v8 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v7 + 8);
        *((_DWORD *)v8 + 11) = 0;
        if (v9) {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v8);
        }
      }
    }
    *(_DWORD *)(a1 + 300) = 0;
    unsigned int v6 = *(_DWORD *)(a1 + 472);
  }
  if ((v6 & 0xFF0000) != 0)
  {
    *(_OWORD *)(a1 + 336) = 0u;
    *(_OWORD *)(a1 + 352) = 0u;
    *(_OWORD *)(a1 + 364) = 0u;
  }
  if (HIBYTE(v6))
  {
    *(_OWORD *)(a1 + 380) = 0u;
    *(_OWORD *)(a1 + 396) = 0u;
    *(void *)(a1 + 412) = &_mh_execute_header;
  }
  int v10 = *(_DWORD *)(a1 + 476);
  if ((_BYTE)v10)
  {
    *(void *)(a1 + 452) = 0;
    *(_OWORD *)(a1 + 420) = 0u;
    *(_OWORD *)(a1 + 436) = 0u;
  }
  if ((v10 & 0xFF00) != 0) {
    *(_DWORD *)(a1 + 460) = 0;
  }
  uint64_t result = sub_10006F8C8(a1 + 192);
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v12 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)v12 + 80) = 0;
  *(void *)char v2 = 0;
  void v2[2] = 0;
  if (v13)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v12);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10008F4C8(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  int v1 = this;
  if (*((unsigned char *)this + 32))
  {
    if (*((unsigned char *)this + 32))
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)this + 2);
      if (this) {
        this = sub_10009916C(this);
      }
    }
    *((_DWORD *)v1 + 6) = 0;
  }
  uint64_t v3 = *((void *)v1 + 1);
  char v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v2 + 6) = 0;
  if (v3)
  {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v2);
  }
  return this;
}

uint64_t sub_10008F530(uint64_t a1)
{
  LOBYTE(v2) = *(unsigned char *)(a1 + 96);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(a1 + 96))
    {
      uint64_t v3 = *(void *)(a1 + 16);
      if (v3)
      {
        sub_100098774(v3);
        int v2 = *(_DWORD *)(a1 + 96);
      }
    }
    *(void *)(a1 + 24) = 0;
    *(_DWORD *)(a1 + 88) = 0;
    if ((v2 & 0x10) != 0)
    {
      uint64_t v4 = *(void *)(a1 + 32);
      if ((_UNKNOWN *)v4 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(unsigned char **)uint64_t v4 = 0;
          *(void *)(v4 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v4 = 0;
          *(unsigned char *)(v4 + 23) = 0;
        }
      }
    }
  }
  sub_10006F8C8(a1 + 40);
  uint64_t result = sub_10006F8C8(a1 + 64);
  uint64_t v7 = *(void *)(a1 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)v6 + 22) = 0;
  if (v7)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v6);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10008F5E8(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  int v1 = this;
  int v2 = (unsigned int *)((char *)this + 300);
  unsigned int v3 = *((_DWORD *)this + 75);
  if ((_BYTE)v3)
  {
    if (v3)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)this + 2);
      if (this)
      {
        this = sub_100098774((uint64_t)this);
        unsigned int v3 = *v2;
      }
    }
    *((void *)v1 + 3) = 0;
    *((_DWORD *)v1 + 30) = 0;
    if ((v3 & 0x10) != 0)
    {
      uint64_t v4 = *((void *)v1 + 4);
      if ((_UNKNOWN *)v4 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(unsigned char **)uint64_t v4 = 0;
          *(void *)(v4 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v4 = 0;
          *(unsigned char *)(v4 + 23) = 0;
        }
      }
    }
    *((void *)v1 + 5) = 0;
    *((void *)v1 + 6) = 0;
    *((void *)v1 + 7) = 0;
    unsigned int v3 = *((_DWORD *)v1 + 75);
  }
  if ((v3 & 0xFF00) != 0)
  {
    *((void *)v1 + 16) = 0;
    *((_OWORD *)v1 + 4) = 0u;
    *((_OWORD *)v1 + 5) = 0u;
    *((_OWORD *)v1 + 6) = 0u;
    *((void *)v1 + 14) = 0;
  }
  if ((v3 & 0xFF0000) != 0)
  {
    *(_OWORD *)((char *)v1 + 184) = 0u;
    *(_OWORD *)((char *)v1 + 168) = 0u;
    *(_OWORD *)((char *)v1 + 152) = 0u;
    *(_OWORD *)((char *)v1 + 136) = 0u;
  }
  if (HIBYTE(v3))
  {
    *((_DWORD *)v1 + 31) = 0;
    *(_OWORD *)((char *)v1 + 200) = 0u;
    *(_OWORD *)((char *)v1 + 216) = 0u;
    *(_OWORD *)((char *)v1 + 232) = 0u;
    *((void *)v1 + 31) = 0;
  }
  if (*((unsigned char *)v1 + 304))
  {
    *((void *)v1 + 36) = 0;
    *((_OWORD *)v1 + 16) = 0u;
    *((_OWORD *)v1 + 17) = 0u;
  }
  *(void *)int v2 = 0;
  uint64_t v6 = *((void *)v1 + 1);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  if (v6)
  {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
  }
  return this;
}

uint64_t sub_10008F710(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 132);
  if ((_BYTE)v2)
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    if ((v2 & 8) != 0)
    {
      uint64_t v3 = *(void *)(a1 + 32);
      if (v3)
      {
        sub_100098774(v3);
        int v2 = *(_DWORD *)(a1 + 132);
      }
    }
    *(_DWORD *)(a1 + 72) = 0;
    *(void *)(a1 + 40) = 0;
  }
  if ((v2 & 0x1FE00) != 0) {
    *(_DWORD *)(a1 + 76) = 0;
  }
  sub_10006F8C8(a1 + 48);
  sub_10006F8C8(a1 + 80);
  uint64_t result = sub_10006F8C8(a1 + 104);
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)v5 + 31) = 0;
  if (v6)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
  }
  return result;
}

uint64_t sub_10008F7AC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 96);
  if ((_BYTE)v2)
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    if ((v2 & 8) != 0)
    {
      uint64_t v3 = *(void *)(a1 + 32);
      if (v3)
      {
        sub_100098774(v3);
        int v2 = *(_DWORD *)(a1 + 96);
      }
    }
    *(void *)(a1 + 40) = 0;
    *(void *)(a1 + 48) = 0;
    *(void *)(a1 + 56) = 0;
  }
  if ((v2 & 0x1FE00) != 0) {
    *(_DWORD *)(a1 + 88) = 0;
  }
  uint64_t result = sub_10006F8C8(a1 + 64);
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)v5 + 22) = 0;
  if (v6)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10008F838(uint64_t a1)
{
  unsigned int v1 = *(_DWORD *)(a1 + 232);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(a1 + 96) = 0;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 80) = 0u;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(void *)(a1 + 136) = 0;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
  }
  if (HIBYTE(v1))
  {
    *(_OWORD *)(a1 + 144) = 0u;
    *(_OWORD *)(a1 + 160) = 0u;
  }
  int v2 = *(_DWORD *)(a1 + 236);
  if ((_BYTE)v2)
  {
    *(_OWORD *)(a1 + 176) = 0u;
    *(_OWORD *)(a1 + 192) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(a1 + 208) = 0;
    *(void *)(a1 + 216) = 0;
    *(_DWORD *)(a1 + 224) = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((void *)result + 28) = 0;
  if (v4) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10008F8C4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 68))
  {
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 15) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10008F8EC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 104);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(a1 + 44) = 0;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 16) = 0;
    *(unsigned char *)(a1 + 40) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(void *)(a1 + 80) = 0;
    *(void *)(a1 + 88) = 0;
    *(_DWORD *)(a1 + 96) = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 24) = 0;
  if (v3) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10008F93C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 88);
  if ((_BYTE)v2)
  {
    *(_DWORD *)(a1 + 72) = 0;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_DWORD *)(a1 + 76) = 0;
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t result = sub_10006F8C8(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)v4 + 20) = 0;
  if (v5)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10008F9B8(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  int v1 = this;
  LOBYTE(v2) = *((unsigned char *)this + 52);
  if ((_BYTE)v2)
  {
    *((void *)this + 2) = 0;
    if ((v2 & 4) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)this + 3);
      if (this)
      {
        this = sub_1000AB7FC((uint64_t)this);
        int v2 = *((_DWORD *)v1 + 13);
      }
    }
    if ((v2 & 8) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)v1 + 4);
      if (this) {
        this = sub_1000AB7FC((uint64_t)this);
      }
    }
    *((void *)v1 + 5) = 0;
  }
  uint64_t v4 = *((void *)v1 + 1);
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v3 + 11) = 0;
  if (v4)
  {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return this;
}

uint64_t sub_10008FA38(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 76);
  if (v2)
  {
    *(_DWORD *)(a1 + 40) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    if ((v2 & 0x10) != 0)
    {
      uint64_t v3 = *(void *)(a1 + 32);
      if (v3) {
        sub_100098774(v3);
      }
    }
    *(_DWORD *)(a1 + 44) = 0;
  }
  uint64_t result = sub_10006F8C8(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)v5 + 17) = 0;
  if (v6)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10008FAB0(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  int v1 = this;
  int v2 = *((_DWORD *)this + 22);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)this + 2);
      if (this)
      {
        this = sub_100098774((uint64_t)this);
        int v2 = *((_DWORD *)v1 + 22);
      }
    }
    *((void *)v1 + 3) = 0;
    *((void *)v1 + 4) = 0;
    *((_DWORD *)v1 + 12) = 0;
    *((void *)v1 + 5) = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(void *)((char *)v1 + 60) = 0;
    *(void *)((char *)v1 + 52) = 0;
    *(void *)((char *)v1 + 73) = 0;
    *(void *)((char *)v1 + 68) = 0;
  }
  uint64_t v4 = *((void *)v1 + 1);
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v3 + 20) = 0;
  if (v4)
  {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10008FB40(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  int v1 = this;
  if (*((unsigned char *)this + 28))
  {
    this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)this + 2);
    if (this) {
      this = sub_10009916C(this);
    }
  }
  uint64_t v3 = *((void *)v1 + 1);
  int v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v2 + 5) = 0;
  if (v3)
  {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v2);
  }
  return this;
}

uint64_t sub_10008FBA0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 160);
  if ((_BYTE)v2)
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    if ((v2 & 0x10) != 0)
    {
      uint64_t v3 = *(void *)(a1 + 40);
      if (v3)
      {
        sub_100098774(v3);
        int v2 = *(_DWORD *)(a1 + 160);
      }
    }
    *(void *)(a1 + 48) = 0;
    *(void *)(a1 + 56) = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      uint64_t v4 = *(void *)(a1 + 64);
      if ((_UNKNOWN *)v4 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(unsigned char **)uint64_t v4 = 0;
          *(void *)(v4 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v4 = 0;
          *(unsigned char *)(v4 + 23) = 0;
        }
      }
    }
    *(void *)(a1 + 104) = 0;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    int v2 = *(_DWORD *)(a1 + 160);
  }
  if ((v2 & 0xFF0000) != 0)
  {
    *(_DWORD *)(a1 + 152) = 0;
    *(void *)(a1 + 112) = 0;
    *(void *)(a1 + 120) = 0;
  }
  uint64_t result = sub_10006F8C8(a1 + 128);
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)v6 + 38) = 0;
  if (v7)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v6);
  }
  return result;
}

uint64_t sub_10008FC84(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_70;
        }
        unsigned int v298 = 0;
        int v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 < *((void *)this + 2) && (*v10 & 0x80000000) == 0)
        {
          signed int v11 = *v10;
          *((void *)this + 1) = v10 + 1;
          goto LABEL_75;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298);
        if (result)
        {
          signed int v11 = v298;
LABEL_75:
          if ((v11 - 1) > 2)
          {
            wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 1, v11);
          }
          else
          {
            *(_DWORD *)(a1 + 252) |= 1u;
            *(_DWORD *)(a1 + 16) = v11;
          }
          uint64_t v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v15 < v12 && *v15 == 16)
          {
            uint64_t v13 = v15 + 1;
            *((void *)this + 1) = v13;
            goto LABEL_81;
          }
          continue;
        }
        break;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_70;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
LABEL_81:
        unsigned int v298 = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298);
          if (!result) {
            return result;
          }
          unsigned int v16 = v298;
        }
        else
        {
          unsigned int v16 = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        if (v16 >= 0x15 && v16 - 22 > 6)
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 2, (int)v16);
        }
        else
        {
          if (v16 >= 0x15 && v16 - 22 >= 7) {
            sub_10040FD30();
          }
          *(_DWORD *)(a1 + 252) |= 2u;
          *(_DWORD *)(a1 + 20) = v16;
        }
        uint64_t v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 26) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
LABEL_94:
        *(_DWORD *)(a1 + 252) |= 4u;
        uint64_t v18 = *(void *)(a1 + 24);
        if (!v18) {
          operator new();
        }
        unsigned int v298 = 0;
        uint64_t v19 = (char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0; {
        }
          }
        else
        {
          unsigned int v298 = *v19;
          *((void *)this + 1) = v19 + 1;
        }
        int v20 = *((_DWORD *)this + 14);
        int v21 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v20 + 1;
        if (v20 >= v21) {
          return 0;
        }
        int v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_100099A68(v18, this, v23, v24) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
        int v25 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v25, 1);
        int v27 = v25 - 1;
        if (v27 < 0 == v26) {
          *((_DWORD *)this + 14) = v27;
        }
        uint64_t v28 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 != 34) {
          continue;
        }
        *((void *)this + 1) = v28 + 1;
LABEL_108:
        *(_DWORD *)(a1 + 252) |= 8u;
        uint64_t v29 = *(void *)(a1 + 32);
        if (!v29) {
          operator new();
        }
        unsigned int v298 = 0;
        uint64_t v30 = (char *)*((void *)this + 1);
        if ((unint64_t)v30 >= *((void *)this + 2) || *v30 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0; {
        }
          }
        else
        {
          unsigned int v298 = *v30;
          *((void *)this + 1) = v30 + 1;
        }
        int v31 = *((_DWORD *)this + 14);
        int v32 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v31 + 1;
        if (v31 >= v32) {
          return 0;
        }
        int v33 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_10009A23C(v29, this, v34, v35) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v33);
        int v36 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v36, 1);
        int v37 = v36 - 1;
        if (v37 < 0 == v26) {
          *((_DWORD *)this + 14) = v37;
        }
        uint64_t v38 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v38 >= *((void *)this + 2) || *v38 != 42) {
          continue;
        }
        *((void *)this + 1) = v38 + 1;
LABEL_122:
        *(_DWORD *)(a1 + 252) |= 0x10u;
        uint64_t v39 = *(void *)(a1 + 40);
        if (!v39) {
          operator new();
        }
        unsigned int v298 = 0;
        uint64_t v40 = (char *)*((void *)this + 1);
        if ((unint64_t)v40 >= *((void *)this + 2) || *v40 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0; {
        }
          }
        else
        {
          unsigned int v298 = *v40;
          *((void *)this + 1) = v40 + 1;
        }
        int v41 = *((_DWORD *)this + 14);
        int v42 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v41 + 1;
        if (v41 >= v42) {
          return 0;
        }
        int v43 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_10009BA94(v39, this, v44, v45) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v43);
        int v46 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v46, 1);
        int v47 = v46 - 1;
        if (v47 < 0 == v26) {
          *((_DWORD *)this + 14) = v47;
        }
        uint64_t v48 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v48 >= *((void *)this + 2) || *v48 != 50) {
          continue;
        }
        *((void *)this + 1) = v48 + 1;
LABEL_136:
        *(_DWORD *)(a1 + 252) |= 0x20u;
        uint64_t v49 = *(void *)(a1 + 48);
        if (!v49) {
          operator new();
        }
        unsigned int v298 = 0;
        uint64_t v50 = (char *)*((void *)this + 1);
        if ((unint64_t)v50 >= *((void *)this + 2) || *v50 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0; {
        }
          }
        else
        {
          unsigned int v298 = *v50;
          *((void *)this + 1) = v50 + 1;
        }
        int v51 = *((_DWORD *)this + 14);
        int v52 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v51 + 1;
        if (v51 >= v52) {
          return 0;
        }
        int v53 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_10009CCEC(v49, this, v54, v55) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v53);
        int v56 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v56, 1);
        int v57 = v56 - 1;
        if (v57 < 0 == v26) {
          *((_DWORD *)this + 14) = v57;
        }
        uint64_t v58 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v58 >= *((void *)this + 2) || *v58 != 58) {
          continue;
        }
        *((void *)this + 1) = v58 + 1;
LABEL_150:
        *(_DWORD *)(a1 + 252) |= 0x40u;
        uint64_t v59 = *(void *)(a1 + 56);
        if (!v59) {
          operator new();
        }
        unsigned int v298 = 0;
        uint64_t v60 = (char *)*((void *)this + 1);
        if ((unint64_t)v60 >= *((void *)this + 2) || *v60 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0; {
        }
          }
        else
        {
          unsigned int v298 = *v60;
          *((void *)this + 1) = v60 + 1;
        }
        int v61 = *((_DWORD *)this + 14);
        int v62 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v61 + 1;
        if (v61 >= v62) {
          return 0;
        }
        int v63 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_10009D44C(v59, this, v64, v65) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v63);
        int v66 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v66, 1);
        int v67 = v66 - 1;
        if (v67 < 0 == v26) {
          *((_DWORD *)this + 14) = v67;
        }
        int v68 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v68 >= *((void *)this + 2) || *v68 != 66) {
          continue;
        }
        *((void *)this + 1) = v68 + 1;
LABEL_164:
        *(_DWORD *)(a1 + 252) |= 0x80u;
        uint64_t v69 = *(void *)(a1 + 64);
        if (!v69) {
          operator new();
        }
        unsigned int v298 = 0;
        int v70 = (char *)*((void *)this + 1);
        if ((unint64_t)v70 >= *((void *)this + 2) || *v70 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0; {
        }
          }
        else
        {
          unsigned int v298 = *v70;
          *((void *)this + 1) = v70 + 1;
        }
        int v71 = *((_DWORD *)this + 14);
        int v72 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v71 + 1;
        if (v71 >= v72) {
          return 0;
        }
        int v73 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_10009DEC8(v69, this, v74, v75) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v73);
        int v76 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v76, 1);
        int v77 = v76 - 1;
        if (v77 < 0 == v26) {
          *((_DWORD *)this + 14) = v77;
        }
        int v78 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v78 >= *((void *)this + 2) || *v78 != 74) {
          continue;
        }
        *((void *)this + 1) = v78 + 1;
LABEL_178:
        *(_DWORD *)(a1 + 252) |= 0x100u;
        uint64_t v79 = *(void *)(a1 + 72);
        if (!v79) {
          operator new();
        }
        unsigned int v298 = 0;
        int v80 = (char *)*((void *)this + 1);
        if ((unint64_t)v80 >= *((void *)this + 2) || *v80 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0; {
        }
          }
        else
        {
          unsigned int v298 = *v80;
          *((void *)this + 1) = v80 + 1;
        }
        int v81 = *((_DWORD *)this + 14);
        int v82 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v81 + 1;
        if (v81 >= v82) {
          return 0;
        }
        int v83 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_10009E628(v79, this, v84, v85) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v83);
        int v86 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v86, 1);
        int v87 = v86 - 1;
        if (v87 < 0 == v26) {
          *((_DWORD *)this + 14) = v87;
        }
        int v88 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v88 >= *((void *)this + 2) || *v88 != 82) {
          continue;
        }
        *((void *)this + 1) = v88 + 1;
LABEL_192:
        *(_DWORD *)(a1 + 252) |= 0x200u;
        uint64_t v89 = *(void *)(a1 + 80);
        if (!v89) {
          operator new();
        }
        unsigned int v298 = 0;
        int v90 = (char *)*((void *)this + 1);
        if ((unint64_t)v90 >= *((void *)this + 2) || *v90 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0; {
        }
          }
        else
        {
          unsigned int v298 = *v90;
          *((void *)this + 1) = v90 + 1;
        }
        int v91 = *((_DWORD *)this + 14);
        int v92 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v91 + 1;
        if (v91 >= v92) {
          return 0;
        }
        int v93 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_10009EED4(v89, this, v94, v95) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v93);
        int v96 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v96, 1);
        int v97 = v96 - 1;
        if (v97 < 0 == v26) {
          *((_DWORD *)this + 14) = v97;
        }
        int v98 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v98 >= *((void *)this + 2) || *v98 != 90) {
          continue;
        }
        *((void *)this + 1) = v98 + 1;
LABEL_206:
        *(_DWORD *)(a1 + 252) |= 0x400u;
        uint64_t v99 = *(void *)(a1 + 88);
        if (!v99) {
          operator new();
        }
        unsigned int v298 = 0;
        int v100 = (char *)*((void *)this + 1);
        if ((unint64_t)v100 >= *((void *)this + 2) || *v100 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0; {
        }
          }
        else
        {
          unsigned int v298 = *v100;
          *((void *)this + 1) = v100 + 1;
        }
        int v101 = *((_DWORD *)this + 14);
        int v102 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v101 + 1;
        if (v101 >= v102) {
          return 0;
        }
        int v103 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_10009F614(v99, this, v104, v105) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v103);
        int v106 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v106, 1);
        int v107 = v106 - 1;
        if (v107 < 0 == v26) {
          *((_DWORD *)this + 14) = v107;
        }
        int v108 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v108 >= *((void *)this + 2) || *v108 != 98) {
          continue;
        }
        *((void *)this + 1) = v108 + 1;
LABEL_220:
        *(_DWORD *)(a1 + 252) |= 0x800u;
        int v109 = *(int **)(a1 + 96);
        if (!v109) {
          operator new();
        }
        unsigned int v298 = 0;
        int v110 = (char *)*((void *)this + 1);
        if ((unint64_t)v110 >= *((void *)this + 2) || *v110 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0; {
        }
          }
        else
        {
          unsigned int v298 = *v110;
          *((void *)this + 1) = v110 + 1;
        }
        int v111 = *((_DWORD *)this + 14);
        int v112 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v111 + 1;
        if (v111 >= v112) {
          return 0;
        }
        int v113 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000A0898(v109, this, v114, v115) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v113);
        int v116 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v116, 1);
        int v117 = v116 - 1;
        if (v117 < 0 == v26) {
          *((_DWORD *)this + 14) = v117;
        }
        int v118 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v118 >= *((void *)this + 2) || *v118 != 106) {
          continue;
        }
        *((void *)this + 1) = v118 + 1;
LABEL_234:
        *(_DWORD *)(a1 + 252) |= 0x1000u;
        uint64_t v119 = *(int **)(a1 + 104);
        if (!v119) {
          operator new();
        }
        unsigned int v298 = 0;
        uint64_t v120 = (char *)*((void *)this + 1);
        if ((unint64_t)v120 >= *((void *)this + 2) || *v120 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0; {
        }
          }
        else
        {
          unsigned int v298 = *v120;
          *((void *)this + 1) = v120 + 1;
        }
        int v121 = *((_DWORD *)this + 14);
        int v122 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v121 + 1;
        if (v121 >= v122) {
          return 0;
        }
        int v123 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000A1170(v119, this, v124, v125) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v123);
        int v126 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v126, 1);
        int v127 = v126 - 1;
        if (v127 < 0 == v26) {
          *((_DWORD *)this + 14) = v127;
        }
        int v128 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v128 >= *((void *)this + 2) || *v128 != 114) {
          continue;
        }
        *((void *)this + 1) = v128 + 1;
LABEL_248:
        *(_DWORD *)(a1 + 252) |= 0x2000u;
        int v129 = *(unsigned int **)(a1 + 112);
        if (!v129) {
          operator new();
        }
        unsigned int v298 = 0;
        int v130 = (char *)*((void *)this + 1);
        if ((unint64_t)v130 >= *((void *)this + 2) || *v130 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0; {
        }
          }
        else
        {
          unsigned int v298 = *v130;
          *((void *)this + 1) = v130 + 1;
        }
        int v131 = *((_DWORD *)this + 14);
        int v132 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v131 + 1;
        if (v131 >= v132) {
          return 0;
        }
        int v133 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000A1924(v129, this, v134, v135) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v133);
        int v136 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v136, 1);
        int v137 = v136 - 1;
        if (v137 < 0 == v26) {
          *((_DWORD *)this + 14) = v137;
        }
        int v138 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v138 >= *((void *)this + 2) || *v138 != 122) {
          continue;
        }
        *((void *)this + 1) = v138 + 1;
LABEL_262:
        *(_DWORD *)(a1 + 252) |= 0x4000u;
        uint64_t v139 = *(void *)(a1 + 120);
        if (!v139) {
          operator new();
        }
        unsigned int v298 = 0;
        uint64_t v140 = (char *)*((void *)this + 1);
        if ((unint64_t)v140 >= *((void *)this + 2) || *v140 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0; {
        }
          }
        else
        {
          unsigned int v298 = *v140;
          *((void *)this + 1) = v140 + 1;
        }
        int v141 = *((_DWORD *)this + 14);
        int v142 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v141 + 1;
        if (v141 >= v142) {
          return 0;
        }
        int v143 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000A2D94(v139, this, v144, v145) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v143);
        int v146 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v146, 1);
        int v147 = v146 - 1;
        if (v147 < 0 == v26) {
          *((_DWORD *)this + 14) = v147;
        }
        uint64_t v148 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v148 <= 1 || *v148 != 130 || v148[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v148 + 2;
LABEL_277:
        *(_DWORD *)(a1 + 252) |= 0x8000u;
        uint64_t v149 = *(void *)(a1 + 128);
        if (!v149) {
          operator new();
        }
        unsigned int v298 = 0;
        int v150 = (char *)*((void *)this + 1);
        if ((unint64_t)v150 >= *((void *)this + 2) || *v150 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0; {
        }
          }
        else
        {
          unsigned int v298 = *v150;
          *((void *)this + 1) = v150 + 1;
        }
        int v151 = *((_DWORD *)this + 14);
        int v152 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v151 + 1;
        if (v151 >= v152) {
          return 0;
        }
        int v153 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000A586C(v149, this, v154, v155) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v153);
        int v156 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v156, 1);
        int v157 = v156 - 1;
        if (v157 < 0 == v26) {
          *((_DWORD *)this + 14) = v157;
        }
        int v158 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v158 <= 1 || *v158 != 138 || v158[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v158 + 2;
LABEL_292:
        *(_DWORD *)(a1 + 252) |= 0x10000u;
        uint64_t v159 = *(void *)(a1 + 136);
        if (!v159) {
          operator new();
        }
        unsigned int v298 = 0;
        uint64_t v160 = (char *)*((void *)this + 1);
        if ((unint64_t)v160 >= *((void *)this + 2) || *v160 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0; {
        }
          }
        else
        {
          unsigned int v298 = *v160;
          *((void *)this + 1) = v160 + 1;
        }
        int v161 = *((_DWORD *)this + 14);
        int v162 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v161 + 1;
        if (v161 >= v162) {
          return 0;
        }
        int v163 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000AAE90(v159, this, v164, v165) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v163);
        int v166 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v166, 1);
        int v167 = v166 - 1;
        if (v167 < 0 == v26) {
          *((_DWORD *)this + 14) = v167;
        }
        uint64_t v168 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v168 <= 1 || *v168 != 146 || v168[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v168 + 2;
LABEL_307:
        *(_DWORD *)(a1 + 252) |= 0x20000u;
        uint64_t v169 = *(void *)(a1 + 144);
        if (!v169) {
          operator new();
        }
        unsigned int v298 = 0;
        int v170 = (char *)*((void *)this + 1);
        if ((unint64_t)v170 >= *((void *)this + 2) || *v170 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0; {
        }
          }
        else
        {
          unsigned int v298 = *v170;
          *((void *)this + 1) = v170 + 1;
        }
        int v171 = *((_DWORD *)this + 14);
        int v172 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v171 + 1;
        if (v171 >= v172) {
          return 0;
        }
        int v173 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000AF10C(v169, this, v174, v175) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v173);
        int v176 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v176, 1);
        int v177 = v176 - 1;
        if (v177 < 0 == v26) {
          *((_DWORD *)this + 14) = v177;
        }
        int v178 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v178 <= 1 || *v178 != 154 || v178[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v178 + 2;
LABEL_322:
        *(_DWORD *)(a1 + 252) |= 0x40000u;
        uint64_t v179 = *(void *)(a1 + 152);
        if (!v179) {
          operator new();
        }
        unsigned int v298 = 0;
        uint64_t v180 = (char *)*((void *)this + 1);
        if ((unint64_t)v180 >= *((void *)this + 2) || *v180 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0; {
        }
          }
        else
        {
          unsigned int v298 = *v180;
          *((void *)this + 1) = v180 + 1;
        }
        int v181 = *((_DWORD *)this + 14);
        int v182 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v181 + 1;
        if (v181 >= v182) {
          return 0;
        }
        int v183 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000B02F4(v179, this, v184, v185) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v183);
        int v186 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v186, 1);
        int v187 = v186 - 1;
        if (v187 < 0 == v26) {
          *((_DWORD *)this + 14) = v187;
        }
        uint64_t v188 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v188 <= 1 || *v188 != 162 || v188[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v188 + 2;
LABEL_337:
        *(_DWORD *)(a1 + 252) |= 0x80000u;
        uint64_t v189 = *(void *)(a1 + 160);
        if (!v189) {
          operator new();
        }
        unsigned int v298 = 0;
        int v190 = (char *)*((void *)this + 1);
        if ((unint64_t)v190 >= *((void *)this + 2) || *v190 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0; {
        }
          }
        else
        {
          unsigned int v298 = *v190;
          *((void *)this + 1) = v190 + 1;
        }
        int v191 = *((_DWORD *)this + 14);
        int v192 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v191 + 1;
        if (v191 >= v192) {
          return 0;
        }
        int v193 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000B2D08(v189, this, v194, v195) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v193);
        int v196 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v196, 1);
        int v197 = v196 - 1;
        if (v197 < 0 == v26) {
          *((_DWORD *)this + 14) = v197;
        }
        int v198 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v198 <= 1 || *v198 != 170 || v198[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v198 + 2;
LABEL_352:
        *(_DWORD *)(a1 + 252) |= 0x100000u;
        uint64_t v199 = *(void *)(a1 + 168);
        if (!v199) {
          operator new();
        }
        unsigned int v298 = 0;
        int v200 = (char *)*((void *)this + 1);
        if ((unint64_t)v200 >= *((void *)this + 2) || *v200 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0; {
        }
          }
        else
        {
          unsigned int v298 = *v200;
          *((void *)this + 1) = v200 + 1;
        }
        int v201 = *((_DWORD *)this + 14);
        int v202 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v201 + 1;
        if (v201 >= v202) {
          return 0;
        }
        int v203 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000B40EC(v199, this, v204, v205) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v203);
        int v206 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v206, 1);
        int v207 = v206 - 1;
        if (v207 < 0 == v26) {
          *((_DWORD *)this + 14) = v207;
        }
        int v208 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v208 <= 1 || *v208 != 178 || v208[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v208 + 2;
LABEL_367:
        *(_DWORD *)(a1 + 252) |= 0x200000u;
        uint64_t v209 = *(void *)(a1 + 176);
        if (!v209) {
          operator new();
        }
        unsigned int v298 = 0;
        int v210 = (char *)*((void *)this + 1);
        if ((unint64_t)v210 >= *((void *)this + 2) || *v210 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0; {
        }
          }
        else
        {
          unsigned int v298 = *v210;
          *((void *)this + 1) = v210 + 1;
        }
        int v211 = *((_DWORD *)this + 14);
        int v212 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v211 + 1;
        if (v211 >= v212) {
          return 0;
        }
        int v213 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000B6F04(v209, this, v214, v215) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v213);
        int v216 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v216, 1);
        int v217 = v216 - 1;
        if (v217 < 0 == v26) {
          *((_DWORD *)this + 14) = v217;
        }
        int v218 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v218 <= 1 || *v218 != 186 || v218[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v218 + 2;
LABEL_382:
        *(_DWORD *)(a1 + 252) |= 0x400000u;
        uint64_t v219 = *(void *)(a1 + 184);
        if (!v219) {
          operator new();
        }
        unsigned int v298 = 0;
        int v220 = (char *)*((void *)this + 1);
        if ((unint64_t)v220 >= *((void *)this + 2) || *v220 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0; {
        }
          }
        else
        {
          unsigned int v298 = *v220;
          *((void *)this + 1) = v220 + 1;
        }
        int v221 = *((_DWORD *)this + 14);
        int v222 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v221 + 1;
        if (v221 >= v222) {
          return 0;
        }
        int v223 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000BA474(v219, this, v224, v225) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v223);
        int v226 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v226, 1);
        int v227 = v226 - 1;
        if (v227 < 0 == v26) {
          *((_DWORD *)this + 14) = v227;
        }
        int v228 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v228 <= 1 || *v228 != 202 || v228[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v228 + 2;
LABEL_397:
        *(_DWORD *)(a1 + 252) |= 0x800000u;
        uint64_t v229 = *(void *)(a1 + 192);
        if (!v229) {
          operator new();
        }
        unsigned int v298 = 0;
        int v230 = (char *)*((void *)this + 1);
        if ((unint64_t)v230 >= *((void *)this + 2) || *v230 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0; {
        }
          }
        else
        {
          unsigned int v298 = *v230;
          *((void *)this + 1) = v230 + 1;
        }
        int v231 = *((_DWORD *)this + 14);
        int v232 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v231 + 1;
        if (v231 >= v232) {
          return 0;
        }
        int v233 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000BD8F0(v229, this, v234, v235) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v233);
        int v236 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v236, 1);
        int v237 = v236 - 1;
        if (v237 < 0 == v26) {
          *((_DWORD *)this + 14) = v237;
        }
        int v238 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v238 <= 1 || *v238 != 210 || v238[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v238 + 2;
LABEL_412:
        *(_DWORD *)(a1 + 252) |= 0x1000000u;
        uint64_t v239 = *(void *)(a1 + 200);
        if (!v239) {
          operator new();
        }
        unsigned int v298 = 0;
        int v240 = (char *)*((void *)this + 1);
        if ((unint64_t)v240 >= *((void *)this + 2) || *v240 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0; {
        }
          }
        else
        {
          unsigned int v298 = *v240;
          *((void *)this + 1) = v240 + 1;
        }
        int v241 = *((_DWORD *)this + 14);
        int v242 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v241 + 1;
        if (v241 >= v242) {
          return 0;
        }
        int v243 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000BF398(v239, this, v244, v245) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v243);
        int v246 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v246, 1);
        int v247 = v246 - 1;
        if (v247 < 0 == v26) {
          *((_DWORD *)this + 14) = v247;
        }
        int v248 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v248 <= 1 || *v248 != 218 || v248[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v248 + 2;
LABEL_427:
        *(_DWORD *)(a1 + 252) |= 0x2000000u;
        uint64_t v249 = *(void *)(a1 + 208);
        if (!v249) {
          operator new();
        }
        unsigned int v298 = 0;
        int v250 = (char *)*((void *)this + 1);
        if ((unint64_t)v250 >= *((void *)this + 2) || *v250 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0; {
        }
          }
        else
        {
          unsigned int v298 = *v250;
          *((void *)this + 1) = v250 + 1;
        }
        int v251 = *((_DWORD *)this + 14);
        int v252 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v251 + 1;
        if (v251 >= v252) {
          return 0;
        }
        int v253 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000C04E0(v249, this, v254, v255) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v253);
        int v256 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v256, 1);
        int v257 = v256 - 1;
        if (v257 < 0 == v26) {
          *((_DWORD *)this + 14) = v257;
        }
        int v258 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v258 <= 1 || *v258 != 226 || v258[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v258 + 2;
LABEL_442:
        *(_DWORD *)(a1 + 252) |= 0x4000000u;
        uint64_t v259 = *(void *)(a1 + 216);
        if (!v259) {
          operator new();
        }
        unsigned int v298 = 0;
        int v260 = (char *)*((void *)this + 1);
        if ((unint64_t)v260 >= *((void *)this + 2) || *v260 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0; {
        }
          }
        else
        {
          unsigned int v298 = *v260;
          *((void *)this + 1) = v260 + 1;
        }
        int v261 = *((_DWORD *)this + 14);
        int v262 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v261 + 1;
        if (v261 >= v262) {
          return 0;
        }
        int v263 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000B604C(v259, this, v264, v265) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v263);
        int v266 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v266, 1);
        int v267 = v266 - 1;
        if (v267 < 0 == v26) {
          *((_DWORD *)this + 14) = v267;
        }
        int v268 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v268 <= 1 || *v268 != 234 || v268[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v268 + 2;
LABEL_457:
        *(_DWORD *)(a1 + 252) |= 0x8000000u;
        uint64_t v269 = *(void *)(a1 + 224);
        if (!v269) {
          operator new();
        }
        unsigned int v298 = 0;
        int v270 = (char *)*((void *)this + 1);
        if ((unint64_t)v270 >= *((void *)this + 2) || *v270 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0; {
        }
          }
        else
        {
          unsigned int v298 = *v270;
          *((void *)this + 1) = v270 + 1;
        }
        int v271 = *((_DWORD *)this + 14);
        int v272 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v271 + 1;
        if (v271 >= v272) {
          return 0;
        }
        int v273 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000C12A0(v269, this, v274, v275) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v273);
        int v276 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v276, 1);
        int v277 = v276 - 1;
        if (v277 < 0 == v26) {
          *((_DWORD *)this + 14) = v277;
        }
        int v278 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v278 <= 1 || *v278 != 242 || v278[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v278 + 2;
LABEL_472:
        *(_DWORD *)(a1 + 252) |= 0x10000000u;
        uint64_t v279 = *(void *)(a1 + 232);
        if (!v279) {
          operator new();
        }
        unsigned int v298 = 0;
        int v280 = (char *)*((void *)this + 1);
        if ((unint64_t)v280 >= *((void *)this + 2) || *v280 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0; {
        }
          }
        else
        {
          unsigned int v298 = *v280;
          *((void *)this + 1) = v280 + 1;
        }
        int v281 = *((_DWORD *)this + 14);
        int v282 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v281 + 1;
        if (v281 >= v282) {
          return 0;
        }
        int v283 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000C2934(v279, this, v284, v285) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v283);
        int v286 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v286, 1);
        int v287 = v286 - 1;
        if (v287 < 0 == v26) {
          *((_DWORD *)this + 14) = v287;
        }
        int v288 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v288 <= 1 || *v288 != 250 || v288[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v288 + 2;
LABEL_487:
        *(_DWORD *)(a1 + 252) |= 0x20000000u;
        uint64_t v289 = *(void *)(a1 + 240);
        if (!v289) {
          operator new();
        }
        unsigned int v298 = 0;
        int v290 = (char *)*((void *)this + 1);
        if ((unint64_t)v290 >= *((void *)this + 2) || *v290 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v298))return 0; {
        }
          }
        else
        {
          unsigned int v298 = *v290;
          *((void *)this + 1) = v290 + 1;
        }
        int v291 = *((_DWORD *)this + 14);
        int v292 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v291 + 1;
        if (v291 >= v292) {
          return 0;
        }
        int v293 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v298);
        if (!sub_1000BBB2C(v289, this, v294, v295) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v293);
        int v296 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v296, 1);
        int v297 = v296 - 1;
        if (v297 < 0 == v26) {
          *((_DWORD *)this + 14) = v297;
        }
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_94;
        }
        goto LABEL_70;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_108;
        }
        goto LABEL_70;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_122;
        }
        goto LABEL_70;
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_136;
        }
        goto LABEL_70;
      case 7u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_150;
        }
        goto LABEL_70;
      case 8u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_164;
        }
        goto LABEL_70;
      case 9u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_178;
        }
        goto LABEL_70;
      case 0xAu:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_192;
        }
        goto LABEL_70;
      case 0xBu:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_206;
        }
        goto LABEL_70;
      case 0xCu:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_220;
        }
        goto LABEL_70;
      case 0xDu:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_234;
        }
        goto LABEL_70;
      case 0xEu:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_248;
        }
        goto LABEL_70;
      case 0xFu:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_262;
        }
        goto LABEL_70;
      case 0x10u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_277;
        }
        goto LABEL_70;
      case 0x11u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_292;
        }
        goto LABEL_70;
      case 0x12u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_307;
        }
        goto LABEL_70;
      case 0x13u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_322;
        }
        goto LABEL_70;
      case 0x14u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_337;
        }
        goto LABEL_70;
      case 0x15u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_352;
        }
        goto LABEL_70;
      case 0x16u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_367;
        }
        goto LABEL_70;
      case 0x17u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_382;
        }
        goto LABEL_70;
      case 0x19u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_397;
        }
        goto LABEL_70;
      case 0x1Au:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_412;
        }
        goto LABEL_70;
      case 0x1Bu:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_427;
        }
        goto LABEL_70;
      case 0x1Cu:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_442;
        }
        goto LABEL_70;
      case 0x1Du:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_70;
        }
        goto LABEL_457;
      case 0x1Eu:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_472;
        }
        goto LABEL_70;
      case 0x1Fu:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_487;
        }
        goto LABEL_70;
      default:
        int v9 = TagFallback & 7;
LABEL_70:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
    return result;
  }
}

void sub_100091B80()
{
}

uint64_t sub_100091DF4(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 252);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 16), (int)a2, a4);
    int v6 = *(_DWORD *)(v5 + 252);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_34;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 20), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_37;
  }
LABEL_34:
  uint64_t v7 = *(void *)(v5 + 24);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1008ABF30 + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_40;
  }
LABEL_37:
  uint64_t v8 = *(void *)(v5 + 32);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1008ABF30 + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_43;
  }
LABEL_40:
  uint64_t v9 = *(void *)(v5 + 40);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_1008ABF30 + 40);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_46;
  }
LABEL_43:
  uint64_t v10 = *(void *)(v5 + 48);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_1008ABF30 + 48);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_49;
  }
LABEL_46:
  uint64_t v11 = *(void *)(v5 + 56);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_1008ABF30 + 56);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v11, a2, a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_52;
  }
LABEL_49:
  uint64_t v12 = *(void *)(v5 + 64);
  if (!v12) {
    uint64_t v12 = *(void *)(qword_1008ABF30 + 64);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v12, a2, a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_55;
  }
LABEL_52:
  uint64_t v13 = *(void *)(v5 + 72);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_1008ABF30 + 72);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v13, a2, a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_58;
  }
LABEL_55:
  uint64_t v14 = *(void *)(v5 + 80);
  if (!v14) {
    uint64_t v14 = *(void *)(qword_1008ABF30 + 80);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v14, a2, a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_61;
  }
LABEL_58:
  uint64_t v15 = *(void *)(v5 + 88);
  if (!v15) {
    uint64_t v15 = *(void *)(qword_1008ABF30 + 88);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v15, a2, a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_64;
  }
LABEL_61:
  uint64_t v16 = *(void *)(v5 + 96);
  if (!v16) {
    uint64_t v16 = *(void *)(qword_1008ABF30 + 96);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v16, a2, a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_67;
  }
LABEL_64:
  uint64_t v17 = *(void *)(v5 + 104);
  if (!v17) {
    uint64_t v17 = *(void *)(qword_1008ABF30 + 104);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v17, a2, a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_70;
  }
LABEL_67:
  uint64_t v18 = *(void *)(v5 + 112);
  if (!v18) {
    uint64_t v18 = *(void *)(qword_1008ABF30 + 112);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v18, a2, a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_73;
  }
LABEL_70:
  uint64_t v19 = *(void *)(v5 + 120);
  if (!v19) {
    uint64_t v19 = *(void *)(qword_1008ABF30 + 120);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, v19, a2, a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_76;
  }
LABEL_73:
  uint64_t v20 = *(void *)(v5 + 128);
  if (!v20) {
    uint64_t v20 = *(void *)(qword_1008ABF30 + 128);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v20, a2, a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_79;
  }
LABEL_76:
  uint64_t v21 = *(void *)(v5 + 136);
  if (!v21) {
    uint64_t v21 = *(void *)(qword_1008ABF30 + 136);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, v21, a2, a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_82;
  }
LABEL_79:
  uint64_t v22 = *(void *)(v5 + 144);
  if (!v22) {
    uint64_t v22 = *(void *)(qword_1008ABF30 + 144);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, v22, a2, a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_85;
  }
LABEL_82:
  uint64_t v23 = *(void *)(v5 + 152);
  if (!v23) {
    uint64_t v23 = *(void *)(qword_1008ABF30 + 152);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, v23, a2, a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_88;
  }
LABEL_85:
  uint64_t v24 = *(void *)(v5 + 160);
  if (!v24) {
    uint64_t v24 = *(void *)(qword_1008ABF30 + 160);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, v24, a2, a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_91;
  }
LABEL_88:
  uint64_t v25 = *(void *)(v5 + 168);
  if (!v25) {
    uint64_t v25 = *(void *)(qword_1008ABF30 + 168);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, v25, a2, a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_94;
  }
LABEL_91:
  uint64_t v26 = *(void *)(v5 + 176);
  if (!v26) {
    uint64_t v26 = *(void *)(qword_1008ABF30 + 176);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, v26, a2, a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_97;
  }
LABEL_94:
  uint64_t v27 = *(void *)(v5 + 184);
  if (!v27) {
    uint64_t v27 = *(void *)(qword_1008ABF30 + 184);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, v27, a2, a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_100;
  }
LABEL_97:
  uint64_t v28 = *(void *)(v5 + 192);
  if (!v28) {
    uint64_t v28 = *(void *)(qword_1008ABF30 + 192);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, v28, a2, a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_103;
  }
LABEL_100:
  uint64_t v29 = *(void *)(v5 + 200);
  if (!v29) {
    uint64_t v29 = *(void *)(qword_1008ABF30 + 200);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, v29, a2, a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_106;
  }
LABEL_103:
  uint64_t v30 = *(void *)(v5 + 208);
  if (!v30) {
    uint64_t v30 = *(void *)(qword_1008ABF30 + 208);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, v30, a2, a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_109;
  }
LABEL_106:
  uint64_t v31 = *(void *)(v5 + 216);
  if (!v31) {
    uint64_t v31 = *(void *)(qword_1008ABF30 + 216);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, v31, a2, a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_112;
  }
LABEL_109:
  uint64_t v32 = *(void *)(v5 + 224);
  if (!v32) {
    uint64_t v32 = *(void *)(qword_1008ABF30 + 224);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, v32, a2, a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_118;
    }
    goto LABEL_115;
  }
LABEL_112:
  uint64_t v33 = *(void *)(v5 + 232);
  if (!v33) {
    uint64_t v33 = *(void *)(qword_1008ABF30 + 232);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, v33, a2, a4);
  if ((*(_DWORD *)(v5 + 252) & 0x20000000) != 0)
  {
LABEL_115:
    uint64_t v34 = *(void *)(v5 + 240);
    if (!v34) {
      uint64_t v34 = *(void *)(qword_1008ABF30 + 240);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1F, v34, a2, a4);
  }
LABEL_118:
  int v37 = *(void **)(v5 + 8);
  int v36 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v35 = v37;
  if (v37 && *v35 != v35[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v36, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100092358(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  if (*((unsigned char *)this + 252))
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 4);
    *(unsigned char *)a2 = 8;
    uint64_t v7 = (char *)a2 + 1;
    if ((v6 & 0x80000000) != 0)
    {
      uint64_t v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v6, (unint64_t)v7, a3);
    }
    else
    {
      if (v6 <= 0x7F)
      {
        *((unsigned char *)v4 + 1) = (_BYTE)v6;
        uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
        goto LABEL_8;
      }
      uint64_t v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, v7, a3);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v8;
  }
LABEL_8:
  if ((*((unsigned char *)this + 252) & 2) == 0) {
    goto LABEL_15;
  }
  uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 5);
  *(unsigned char *)uint64_t v4 = 16;
  unint64_t v10 = (unint64_t)v4 + 1;
  if ((v9 & 0x80000000) != 0)
  {
    uint64_t v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v9, v10, a3);
  }
  else
  {
    if (v9 <= 0x7F)
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v9;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      goto LABEL_15;
    }
    uint64_t v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, v10, a3);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v11;
LABEL_15:
  int v12 = *((_DWORD *)this + 63);
  if ((v12 & 4) != 0)
  {
    uint64_t v13 = (unsigned int *)*((void *)this + 3);
    if (!v13) {
      uint64_t v13 = *(unsigned int **)(qword_1008ABF30 + 24);
    }
    *(unsigned char *)uint64_t v4 = 26;
    uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13[6];
    if (v14 > 0x7F)
    {
      uint64_t v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, (int)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v14;
      uint64_t v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
    uint64_t v4 = sub_100099C44((wireless_diagnostics::google::protobuf::internal::WireFormat *)v13, v15, a3);
    int v12 = *((_DWORD *)this + 63);
    if ((v12 & 8) == 0)
    {
LABEL_17:
      if ((v12 & 0x10) == 0) {
        goto LABEL_18;
      }
      goto LABEL_56;
    }
  }
  else if ((v12 & 8) == 0)
  {
    goto LABEL_17;
  }
  uint64_t v16 = (unsigned int *)*((void *)this + 4);
  if (!v16) {
    uint64_t v16 = *(unsigned int **)(qword_1008ABF30 + 32);
  }
  *(unsigned char *)uint64_t v4 = 34;
  uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16[16];
  if (v17 > 0x7F)
  {
    uint64_t v18 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v17;
    uint64_t v18 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  uint64_t v4 = sub_10009AA08((wireless_diagnostics::google::protobuf::internal::WireFormat *)v16, v18, a3);
  int v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x10) == 0)
  {
LABEL_18:
    if ((v12 & 0x20) == 0) {
      goto LABEL_19;
    }
    goto LABEL_62;
  }
LABEL_56:
  uint64_t v19 = (unsigned int *)*((void *)this + 5);
  if (!v19) {
    uint64_t v19 = *(unsigned int **)(qword_1008ABF30 + 40);
  }
  *(unsigned char *)uint64_t v4 = 42;
  uint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v19[20];
  if (v20 > 0x7F)
  {
    uint64_t v21 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v20, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v20;
    uint64_t v21 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  uint64_t v4 = sub_10009C3D8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v19, v21, a3);
  int v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x20) == 0)
  {
LABEL_19:
    if ((v12 & 0x40) == 0) {
      goto LABEL_20;
    }
    goto LABEL_68;
  }
LABEL_62:
  uint64_t v22 = (unsigned int *)*((void *)this + 6);
  if (!v22) {
    uint64_t v22 = *(unsigned int **)(qword_1008ABF30 + 48);
  }
  *(unsigned char *)uint64_t v4 = 50;
  uint64_t v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v22[6];
  if (v23 > 0x7F)
  {
    uint64_t v24 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v23, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v23;
    uint64_t v24 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  uint64_t v4 = sub_10009CF44((wireless_diagnostics::google::protobuf::internal::WireFormat *)v22, v24, a3);
  int v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x40) == 0)
  {
LABEL_20:
    if ((v12 & 0x80) == 0) {
      goto LABEL_21;
    }
    goto LABEL_74;
  }
LABEL_68:
  uint64_t v25 = (unsigned int *)*((void *)this + 7);
  if (!v25) {
    uint64_t v25 = *(unsigned int **)(qword_1008ABF30 + 56);
  }
  *(unsigned char *)uint64_t v4 = 58;
  uint64_t v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v25[10];
  if (v26 > 0x7F)
  {
    uint64_t v27 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v26, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v26;
    uint64_t v27 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  uint64_t v4 = sub_10009D8AC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v25, v27, a3);
  int v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x80) == 0)
  {
LABEL_21:
    if ((v12 & 0x100) == 0) {
      goto LABEL_22;
    }
    goto LABEL_80;
  }
LABEL_74:
  uint64_t v28 = (unsigned int *)*((void *)this + 8);
  if (!v28) {
    uint64_t v28 = *(unsigned int **)(qword_1008ABF30 + 64);
  }
  *(unsigned char *)uint64_t v4 = 66;
  uint64_t v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v28[6];
  if (v29 > 0x7F)
  {
    uint64_t v30 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v29, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v29;
    uint64_t v30 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  uint64_t v4 = sub_10009E120((wireless_diagnostics::google::protobuf::internal::WireFormat *)v28, v30, a3);
  int v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x100) == 0)
  {
LABEL_22:
    if ((v12 & 0x200) == 0) {
      goto LABEL_23;
    }
    goto LABEL_86;
  }
LABEL_80:
  uint64_t v31 = (unsigned int *)*((void *)this + 9);
  if (!v31) {
    uint64_t v31 = *(unsigned int **)(qword_1008ABF30 + 72);
  }
  *(unsigned char *)uint64_t v4 = 74;
  uint64_t v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v31[7];
  if (v32 > 0x7F)
  {
    uint64_t v33 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v32, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v32;
    uint64_t v33 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  uint64_t v4 = sub_10009E948((wireless_diagnostics::google::protobuf::internal::WireFormat *)v31, v33, a3);
  int v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x200) == 0)
  {
LABEL_23:
    if ((v12 & 0x400) == 0) {
      goto LABEL_24;
    }
    goto LABEL_92;
  }
LABEL_86:
  uint64_t v34 = (unsigned int *)*((void *)this + 10);
  if (!v34) {
    uint64_t v34 = *(unsigned int **)(qword_1008ABF30 + 80);
  }
  *(unsigned char *)uint64_t v4 = 82;
  uint64_t v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v34[6];
  if (v35 > 0x7F)
  {
    int v36 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v35, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v35;
    int v36 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  uint64_t v4 = sub_10009F12C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v34, v36, a3);
  int v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x400) == 0)
  {
LABEL_24:
    if ((v12 & 0x800) == 0) {
      goto LABEL_25;
    }
    goto LABEL_98;
  }
LABEL_92:
  int v37 = (unsigned int *)*((void *)this + 11);
  if (!v37) {
    int v37 = *(unsigned int **)(qword_1008ABF30 + 88);
  }
  *(unsigned char *)uint64_t v4 = 90;
  uint64_t v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v37[8];
  if (v38 > 0x7F)
  {
    uint64_t v39 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v38, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v38;
    uint64_t v39 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  uint64_t v4 = sub_10009FA68((wireless_diagnostics::google::protobuf::internal::WireFormat *)v37, v39, a3);
  int v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x800) == 0)
  {
LABEL_25:
    if ((v12 & 0x1000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_104;
  }
LABEL_98:
  uint64_t v40 = (unsigned int *)*((void *)this + 12);
  if (!v40) {
    uint64_t v40 = *(unsigned int **)(qword_1008ABF30 + 96);
  }
  *(unsigned char *)uint64_t v4 = 98;
  int v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v40[11];
  if (v41 > 0x7F)
  {
    int v42 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v41, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v41;
    int v42 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  uint64_t v4 = sub_1000A0BF4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v40, v42, a3, a4);
  int v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x1000) == 0)
  {
LABEL_26:
    if ((v12 & 0x2000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_110;
  }
LABEL_104:
  int v43 = (unsigned int *)*((void *)this + 13);
  if (!v43) {
    int v43 = *(unsigned int **)(qword_1008ABF30 + 104);
  }
  *(unsigned char *)uint64_t v4 = 106;
  uint64_t v44 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v43[10];
  if (v44 > 0x7F)
  {
    uint64_t v45 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v44, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v44;
    uint64_t v45 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  uint64_t v4 = sub_1000A1408((wireless_diagnostics::google::protobuf::internal::WireFormat *)v43, v45, a3, a4);
  int v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x2000) == 0)
  {
LABEL_27:
    if ((v12 & 0x4000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_116;
  }
LABEL_110:
  int v46 = (unsigned int *)*((void *)this + 14);
  if (!v46) {
    int v46 = *(unsigned int **)(qword_1008ABF30 + 112);
  }
  *(unsigned char *)uint64_t v4 = 114;
  int v47 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v46[7];
  if (v47 > 0x7F)
  {
    uint64_t v48 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v47, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v47;
    uint64_t v48 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  uint64_t v4 = sub_1000A1C2C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v46, v48, a3);
  int v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x4000) == 0)
  {
LABEL_28:
    if ((v12 & 0x8000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_122;
  }
LABEL_116:
  uint64_t v49 = (unsigned int *)*((void *)this + 15);
  if (!v49) {
    uint64_t v49 = *(unsigned int **)(qword_1008ABF30 + 120);
  }
  *(unsigned char *)uint64_t v4 = 122;
  uint64_t v50 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v49[13];
  if (v50 > 0x7F)
  {
    int v51 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v50, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v50;
    int v51 = (char *)v4 + 2;
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000A3250((wireless_diagnostics::google::protobuf::internal::WireFormat *)v49, v51, a3);
  int v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x8000) == 0)
  {
LABEL_29:
    if ((v12 & 0x10000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_128;
  }
LABEL_122:
  int v52 = (unsigned int *)*((void *)this + 16);
  if (!v52) {
    int v52 = *(unsigned int **)(qword_1008ABF30 + 128);
  }
  *(_WORD *)uint64_t v4 = 386;
  int v53 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v52[116];
  if (v53 > 0x7F)
  {
    uint64_t v54 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v53, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v53;
    uint64_t v54 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  uint64_t v4 = sub_1000A8D44((wireless_diagnostics::google::protobuf::internal::WireFormat *)v52, v54, a3, a4);
  int v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x10000) == 0)
  {
LABEL_30:
    if ((v12 & 0x20000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_134;
  }
LABEL_128:
  uint64_t v55 = (unsigned int *)*((void *)this + 17);
  if (!v55) {
    uint64_t v55 = *(unsigned int **)(qword_1008ABF30 + 136);
  }
  *(_WORD *)uint64_t v4 = 394;
  int v56 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v55[7];
  if (v56 > 0x7F)
  {
    int v57 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v56, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v56;
    int v57 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  uint64_t v4 = sub_1000AB1B4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v55, v57, a3);
  int v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x20000) == 0)
  {
LABEL_31:
    if ((v12 & 0x40000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_140;
  }
LABEL_134:
  uint64_t v58 = (unsigned int *)*((void *)this + 18);
  if (!v58) {
    uint64_t v58 = *(unsigned int **)(qword_1008ABF30 + 144);
  }
  *(_WORD *)uint64_t v4 = 402;
  uint64_t v59 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v58[23];
  if (v59 > 0x7F)
  {
    uint64_t v60 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v59, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v59;
    uint64_t v60 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  uint64_t v4 = sub_1000AF980((wireless_diagnostics::google::protobuf::internal::WireFormat *)v58, v60, a3, a4);
  int v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x40000) == 0)
  {
LABEL_32:
    if ((v12 & 0x80000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_146;
  }
LABEL_140:
  int v61 = (unsigned int *)*((void *)this + 19);
  if (!v61) {
    int v61 = *(unsigned int **)(qword_1008ABF30 + 152);
  }
  *(_WORD *)uint64_t v4 = 410;
  int v62 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v61[74];
  if (v62 > 0x7F)
  {
    int v63 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v62, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v62;
    int v63 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  uint64_t v4 = sub_1000B1A44((wireless_diagnostics::google::protobuf::internal::WireFormat *)v61, v63, a3, a4);
  int v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x80000) == 0)
  {
LABEL_33:
    if ((v12 & 0x100000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_152;
  }
LABEL_146:
  uint64_t v64 = (unsigned int *)*((void *)this + 20);
  if (!v64) {
    uint64_t v64 = *(unsigned int **)(qword_1008ABF30 + 160);
  }
  *(_WORD *)uint64_t v4 = 418;
  int v65 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v64[32];
  if (v65 > 0x7F)
  {
    int v66 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v65, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v65;
    int v66 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  uint64_t v4 = sub_1000B3744((wireless_diagnostics::google::protobuf::internal::WireFormat *)v64, v66, a3);
  int v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x100000) == 0)
  {
LABEL_34:
    if ((v12 & 0x200000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_158;
  }
LABEL_152:
  int v67 = (unsigned int *)*((void *)this + 21);
  if (!v67) {
    int v67 = *(unsigned int **)(qword_1008ABF30 + 168);
  }
  *(_WORD *)uint64_t v4 = 426;
  int v68 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v67[23];
  if (v68 > 0x7F)
  {
    uint64_t v69 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v68, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v68;
    uint64_t v69 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  uint64_t v4 = sub_1000B495C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v67, v69, a3);
  int v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x200000) == 0)
  {
LABEL_35:
    if ((v12 & 0x400000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_164;
  }
LABEL_158:
  int v70 = (unsigned int *)*((void *)this + 22);
  if (!v70) {
    int v70 = *(unsigned int **)(qword_1008ABF30 + 176);
  }
  *(_WORD *)uint64_t v4 = 434;
  int v71 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v70[57];
  if (v71 > 0x7F)
  {
    int v72 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v71, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v71;
    int v72 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  uint64_t v4 = sub_1000B8DE8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v70, v72, a3);
  int v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x400000) == 0)
  {
LABEL_36:
    if ((v12 & 0x800000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_170;
  }
LABEL_164:
  int v73 = (unsigned int *)*((void *)this + 23);
  if (!v73) {
    int v73 = *(unsigned int **)(qword_1008ABF30 + 184);
  }
  *(_WORD *)uint64_t v4 = 442;
  uint64_t v74 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v73[16];
  if (v74 > 0x7F)
  {
    uint64_t v75 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v74, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v74;
    uint64_t v75 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  uint64_t v4 = sub_1000BAA70((wireless_diagnostics::google::protobuf::internal::WireFormat *)v73, v75, a3);
  int v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x800000) == 0)
  {
LABEL_37:
    if ((v12 & 0x1000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_176;
  }
LABEL_170:
  int v76 = (unsigned int *)*((void *)this + 24);
  if (!v76) {
    int v76 = *(unsigned int **)(qword_1008ABF30 + 192);
  }
  *(_WORD *)uint64_t v4 = 458;
  int v77 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v76[25];
  if (v77 > 0x7F)
  {
    int v78 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v77, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v77;
    int v78 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  uint64_t v4 = sub_1000BE740((wireless_diagnostics::google::protobuf::internal::WireFormat *)v76, v78, a3);
  int v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x1000000) == 0)
  {
LABEL_38:
    if ((v12 & 0x2000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_182;
  }
LABEL_176:
  uint64_t v79 = (unsigned int *)*((void *)this + 25);
  if (!v79) {
    uint64_t v79 = *(unsigned int **)(qword_1008ABF30 + 200);
  }
  *(_WORD *)uint64_t v4 = 466;
  int v80 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v79[21];
  if (v80 > 0x7F)
  {
    int v81 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v80, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v80;
    int v81 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  uint64_t v4 = sub_1000BFB90((wireless_diagnostics::google::protobuf::internal::WireFormat *)v79, v81, a3);
  int v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x2000000) == 0)
  {
LABEL_39:
    if ((v12 & 0x4000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_188;
  }
LABEL_182:
  int v82 = (unsigned int *)*((void *)this + 26);
  if (!v82) {
    int v82 = *(unsigned int **)(qword_1008ABF30 + 208);
  }
  *(_WORD *)uint64_t v4 = 474;
  int v83 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v82[12];
  if (v83 > 0x7F)
  {
    uint64_t v84 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v83, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v83;
    uint64_t v84 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  uint64_t v4 = sub_1000C0B28((wireless_diagnostics::google::protobuf::internal::WireFormat *)v82, v84, a3);
  int v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x4000000) == 0)
  {
LABEL_40:
    if ((v12 & 0x8000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_194;
  }
LABEL_188:
  int v85 = (unsigned int *)*((void *)this + 27);
  if (!v85) {
    int v85 = *(unsigned int **)(qword_1008ABF30 + 216);
  }
  *(_WORD *)uint64_t v4 = 482;
  int v86 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v85[18];
  if (v86 > 0x7F)
  {
    int v87 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v86, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v86;
    int v87 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  uint64_t v4 = sub_1000B6740((wireless_diagnostics::google::protobuf::internal::WireFormat *)v85, v87, a3);
  int v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x8000000) == 0)
  {
LABEL_41:
    if ((v12 & 0x10000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_200;
  }
LABEL_194:
  int v88 = (unsigned int *)*((void *)this + 28);
  if (!v88) {
    int v88 = *(unsigned int **)(qword_1008ABF30 + 224);
  }
  *(_WORD *)uint64_t v4 = 490;
  uint64_t v89 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v88[21];
  if (v89 > 0x7F)
  {
    int v90 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v89, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v89;
    int v90 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  uint64_t v4 = sub_1000C1E90((wireless_diagnostics::google::protobuf::internal::WireFormat *)v88, v90, a3);
  int v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x10000000) == 0)
  {
LABEL_42:
    if ((v12 & 0x20000000) == 0) {
      goto LABEL_212;
    }
    goto LABEL_206;
  }
LABEL_200:
  int v91 = (unsigned int *)*((void *)this + 29);
  if (!v91) {
    int v91 = *(unsigned int **)(qword_1008ABF30 + 232);
  }
  *(_WORD *)uint64_t v4 = 498;
  int v92 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v91[6];
  if (v92 > 0x7F)
  {
    int v93 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v92, (int)v4 + 2, a3);
  }
  else
  {
    *((unsigned char *)v4 + 2) = (_BYTE)v92;
    int v93 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }
  uint64_t v4 = sub_1000C2B8C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v91, v93, a3);
  if ((*((_DWORD *)this + 63) & 0x20000000) != 0)
  {
LABEL_206:
    uint64_t v94 = (unsigned int *)*((void *)this + 30);
    if (!v94) {
      uint64_t v94 = *(unsigned int **)(qword_1008ABF30 + 240);
    }
    *(_WORD *)uint64_t v4 = 506;
    uint64_t v95 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v94[39];
    if (v95 > 0x7F)
    {
      int v96 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v95, (int)v4 + 2, a3);
    }
    else
    {
      *((unsigned char *)v4 + 2) = (_BYTE)v95;
      int v96 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
    }
    uint64_t v4 = sub_1000BCAF4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v94, v96, a3, a4);
  }
LABEL_212:
  uint64_t v99 = (void *)*((void *)this + 1);
  int v98 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v97 = v99;
  if (!v99 || *v97 == v97[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v98, v4, a3);
}

uint64_t sub_100092DD8(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  unsigned int v3 = *(_DWORD *)(a1 + 252);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_61;
  }
  if ((v3 & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
  if ((v5 & 0x80000000) != 0)
  {
    int v6 = 10;
  }
  else if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    unsigned int v3 = *(_DWORD *)(a1 + 252);
  }
  else
  {
    int v6 = 1;
  }
  uint64_t v4 = (v6 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if ((v7 & 0x80000000) != 0)
    {
      int v8 = 10;
    }
    else if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      unsigned int v3 = *(_DWORD *)(a1 + 252);
    }
    else
    {
      int v8 = 1;
    }
    uint64_t v4 = (v4 + v8 + 1);
  }
LABEL_18:
  if ((v3 & 4) != 0)
  {
    uint64_t v9 = *(void *)(a1 + 24);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1008ABF30 + 24);
    }
    unint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100099D3C(v9, a2);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    }
    else {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v11 + v12 + 1);
    unsigned int v3 = *(_DWORD *)(a1 + 252);
    if ((v3 & 8) == 0)
    {
LABEL_20:
      if ((v3 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_37;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_20;
  }
  uint64_t v13 = *(void *)(a1 + 32);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_1008ABF30 + 32);
  }
  uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10009AD2C(v13, a2);
  int v15 = (int)v14;
  if (v14 >= 0x80) {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
  }
  else {
    int v16 = 1;
  }
  uint64_t v4 = (v4 + v15 + v16 + 1);
  unsigned int v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x10) == 0)
  {
LABEL_21:
    if ((v3 & 0x20) == 0) {
      goto LABEL_22;
    }
    goto LABEL_43;
  }
LABEL_37:
  uint64_t v17 = *(void *)(a1 + 40);
  if (!v17) {
    uint64_t v17 = *(void *)(qword_1008ABF30 + 40);
  }
  uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10009C6B0(v17, a2);
  int v19 = (int)v18;
  if (v18 >= 0x80) {
    int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
  }
  else {
    int v20 = 1;
  }
  uint64_t v4 = (v4 + v19 + v20 + 1);
  unsigned int v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x20) == 0)
  {
LABEL_22:
    if ((v3 & 0x40) == 0) {
      goto LABEL_23;
    }
    goto LABEL_49;
  }
LABEL_43:
  uint64_t v21 = *(void *)(a1 + 48);
  if (!v21) {
    uint64_t v21 = *(void *)(qword_1008ABF30 + 48);
  }
  uint64_t v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10009CFF4(v21, a2);
  int v23 = (int)v22;
  if (v22 >= 0x80) {
    int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2);
  }
  else {
    int v24 = 1;
  }
  uint64_t v4 = (v4 + v23 + v24 + 1);
  unsigned int v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x40) == 0)
  {
LABEL_23:
    if ((v3 & 0x80) == 0) {
      goto LABEL_61;
    }
    goto LABEL_55;
  }
LABEL_49:
  uint64_t v25 = *(void *)(a1 + 56);
  if (!v25) {
    uint64_t v25 = *(void *)(qword_1008ABF30 + 56);
  }
  uint64_t v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10009D9F4(v25, a2);
  int v27 = (int)v26;
  if (v26 >= 0x80) {
    int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26, a2);
  }
  else {
    int v28 = 1;
  }
  uint64_t v4 = (v4 + v27 + v28 + 1);
  unsigned int v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x80) != 0)
  {
LABEL_55:
    uint64_t v29 = *(void *)(a1 + 64);
    if (!v29) {
      uint64_t v29 = *(void *)(qword_1008ABF30 + 64);
    }
    uint64_t v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10009E1D0(v29, a2);
    int v31 = (int)v30;
    if (v30 >= 0x80) {
      int v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30, a2);
    }
    else {
      int v32 = 1;
    }
    uint64_t v4 = (v4 + v31 + v32 + 1);
    unsigned int v3 = *(_DWORD *)(a1 + 252);
  }
LABEL_61:
  if ((v3 & 0xFF00) == 0) {
    goto LABEL_119;
  }
  if ((v3 & 0x100) != 0)
  {
    uint64_t v33 = *(void *)(a1 + 72);
    if (!v33) {
      uint64_t v33 = *(void *)(qword_1008ABF30 + 72);
    }
    uint64_t v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10009EA3C(v33, a2);
    int v35 = (int)v34;
    if (v34 >= 0x80) {
      int v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v34, a2);
    }
    else {
      int v36 = 1;
    }
    uint64_t v4 = (v4 + v35 + v36 + 1);
    unsigned int v3 = *(_DWORD *)(a1 + 252);
    if ((v3 & 0x200) == 0)
    {
LABEL_64:
      if ((v3 & 0x400) == 0) {
        goto LABEL_65;
      }
      goto LABEL_83;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_64;
  }
  uint64_t v37 = *(void *)(a1 + 80);
  if (!v37) {
    uint64_t v37 = *(void *)(qword_1008ABF30 + 80);
  }
  uint64_t v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10009F1DC(v37, a2);
  int v39 = (int)v38;
  if (v38 >= 0x80) {
    int v40 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38, a2);
  }
  else {
    int v40 = 1;
  }
  uint64_t v4 = (v4 + v39 + v40 + 1);
  unsigned int v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x400) == 0)
  {
LABEL_65:
    if ((v3 & 0x800) == 0) {
      goto LABEL_66;
    }
    goto LABEL_89;
  }
LABEL_83:
  uint64_t v41 = *(void *)(a1 + 88);
  if (!v41) {
    uint64_t v41 = *(void *)(qword_1008ABF30 + 88);
  }
  int v42 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10009FB24(v41, a2);
  int v43 = (int)v42;
  if (v42 >= 0x80) {
    int v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v42, a2);
  }
  else {
    int v44 = 1;
  }
  uint64_t v4 = (v4 + v43 + v44 + 1);
  unsigned int v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x800) == 0)
  {
LABEL_66:
    if ((v3 & 0x1000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_95;
  }
LABEL_89:
  uint64_t v45 = *(void *)(a1 + 96);
  if (!v45) {
    uint64_t v45 = *(void *)(qword_1008ABF30 + 96);
  }
  int v46 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A0D00(v45, a2);
  int v47 = (int)v46;
  if (v46 >= 0x80) {
    int v48 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v46, a2);
  }
  else {
    int v48 = 1;
  }
  uint64_t v4 = (v4 + v47 + v48 + 1);
  unsigned int v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x1000) == 0)
  {
LABEL_67:
    if ((v3 & 0x2000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_101;
  }
LABEL_95:
  uint64_t v49 = *(void *)(a1 + 104);
  if (!v49) {
    uint64_t v49 = *(void *)(qword_1008ABF30 + 104);
  }
  uint64_t v50 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A14D4(v49, a2);
  int v51 = (int)v50;
  if (v50 >= 0x80) {
    int v52 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v50, a2);
  }
  else {
    int v52 = 1;
  }
  uint64_t v4 = (v4 + v51 + v52 + 1);
  unsigned int v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x2000) == 0)
  {
LABEL_68:
    if ((v3 & 0x4000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_107;
  }
LABEL_101:
  uint64_t v53 = *(void *)(a1 + 112);
  if (!v53) {
    uint64_t v53 = *(void *)(qword_1008ABF30 + 112);
  }
  uint64_t v54 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A1D34(v53, a2);
  int v55 = (int)v54;
  if (v54 >= 0x80) {
    int v56 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v54, a2);
  }
  else {
    int v56 = 1;
  }
  uint64_t v4 = (v4 + v55 + v56 + 1);
  unsigned int v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x4000) == 0)
  {
LABEL_69:
    if ((v3 & 0x8000) == 0) {
      goto LABEL_119;
    }
    goto LABEL_113;
  }
LABEL_107:
  uint64_t v57 = *(void *)(a1 + 120);
  if (!v57) {
    uint64_t v57 = *(void *)(qword_1008ABF30 + 120);
  }
  uint64_t v58 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A340C(v57, a2);
  int v59 = (int)v58;
  if (v58 >= 0x80) {
    int v60 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v58, a2);
  }
  else {
    int v60 = 1;
  }
  uint64_t v4 = (v4 + v59 + v60 + 1);
  unsigned int v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x8000) != 0)
  {
LABEL_113:
    uint64_t v61 = *(void *)(a1 + 128);
    if (!v61) {
      uint64_t v61 = *(void *)(qword_1008ABF30 + 128);
    }
    int v62 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000AA0C4(v61, a2);
    int v63 = (int)v62;
    if (v62 >= 0x80) {
      int v64 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v62, a2);
    }
    else {
      int v64 = 1;
    }
    uint64_t v4 = (v4 + v63 + v64 + 2);
    unsigned int v3 = *(_DWORD *)(a1 + 252);
  }
LABEL_119:
  if ((v3 & 0xFF0000) == 0) {
    goto LABEL_177;
  }
  if ((v3 & 0x10000) != 0)
  {
    uint64_t v65 = *(void *)(a1 + 136);
    if (!v65) {
      uint64_t v65 = *(void *)(qword_1008ABF30 + 136);
    }
    int v66 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000AB2A8(v65, a2);
    int v67 = (int)v66;
    if (v66 >= 0x80) {
      int v68 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v66, a2);
    }
    else {
      int v68 = 1;
    }
    uint64_t v4 = (v4 + v67 + v68 + 2);
    unsigned int v3 = *(_DWORD *)(a1 + 252);
    if ((v3 & 0x20000) == 0)
    {
LABEL_122:
      if ((v3 & 0x40000) == 0) {
        goto LABEL_123;
      }
      goto LABEL_141;
    }
  }
  else if ((v3 & 0x20000) == 0)
  {
    goto LABEL_122;
  }
  uint64_t v69 = *(void *)(a1 + 144);
  if (!v69) {
    uint64_t v69 = *(void *)(qword_1008ABF30 + 144);
  }
  int v70 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000AFC14(v69, a2);
  int v71 = (int)v70;
  if (v70 >= 0x80) {
    int v72 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v70, a2);
  }
  else {
    int v72 = 1;
  }
  uint64_t v4 = (v4 + v71 + v72 + 2);
  unsigned int v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x40000) == 0)
  {
LABEL_123:
    if ((v3 & 0x80000) == 0) {
      goto LABEL_124;
    }
    goto LABEL_147;
  }
LABEL_141:
  uint64_t v73 = *(void *)(a1 + 152);
  if (!v73) {
    uint64_t v73 = *(void *)(qword_1008ABF30 + 152);
  }
  uint64_t v74 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000B251C(v73, a2);
  int v75 = (int)v74;
  if (v74 >= 0x80) {
    int v76 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v74, a2);
  }
  else {
    int v76 = 1;
  }
  uint64_t v4 = (v4 + v75 + v76 + 2);
  unsigned int v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x80000) == 0)
  {
LABEL_124:
    if ((v3 & 0x100000) == 0) {
      goto LABEL_125;
    }
    goto LABEL_153;
  }
LABEL_147:
  uint64_t v77 = *(void *)(a1 + 160);
  if (!v77) {
    uint64_t v77 = *(void *)(qword_1008ABF30 + 160);
  }
  int v78 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000B3A9C(v77, a2);
  int v79 = (int)v78;
  if (v78 >= 0x80) {
    int v80 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v78, a2);
  }
  else {
    int v80 = 1;
  }
  uint64_t v4 = (v4 + v79 + v80 + 2);
  unsigned int v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x100000) == 0)
  {
LABEL_125:
    if ((v3 & 0x200000) == 0) {
      goto LABEL_126;
    }
    goto LABEL_159;
  }
LABEL_153:
  uint64_t v81 = *(void *)(a1 + 168);
  if (!v81) {
    uint64_t v81 = *(void *)(qword_1008ABF30 + 168);
  }
  int v82 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000B4C7C(v81, a2);
  int v83 = (int)v82;
  if (v82 >= 0x80) {
    int v84 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v82, a2);
  }
  else {
    int v84 = 1;
  }
  uint64_t v4 = (v4 + v83 + v84 + 2);
  unsigned int v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x200000) == 0)
  {
LABEL_126:
    if ((v3 & 0x400000) == 0) {
      goto LABEL_127;
    }
    goto LABEL_165;
  }
LABEL_159:
  uint64_t v85 = *(void *)(a1 + 176);
  if (!v85) {
    uint64_t v85 = *(void *)(qword_1008ABF30 + 176);
  }
  int v86 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000B983C(v85, a2);
  int v87 = (int)v86;
  if (v86 >= 0x80) {
    int v88 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v86, a2);
  }
  else {
    int v88 = 1;
  }
  uint64_t v4 = (v4 + v87 + v88 + 2);
  unsigned int v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x400000) == 0)
  {
LABEL_127:
    if ((v3 & 0x800000) == 0) {
      goto LABEL_177;
    }
    goto LABEL_171;
  }
LABEL_165:
  uint64_t v89 = *(void *)(a1 + 184);
  if (!v89) {
    uint64_t v89 = *(void *)(qword_1008ABF30 + 184);
  }
  int v90 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000BACAC(v89, a2);
  int v91 = (int)v90;
  if (v90 >= 0x80) {
    int v92 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v90, a2);
  }
  else {
    int v92 = 1;
  }
  uint64_t v4 = (v4 + v91 + v92 + 2);
  unsigned int v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x800000) != 0)
  {
LABEL_171:
    int v93 = *(unsigned int **)(a1 + 192);
    if (!v93) {
      int v93 = *(unsigned int **)(qword_1008ABF30 + 192);
    }
    uint64_t v94 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000BEBF0(v93, a2);
    int v95 = (int)v94;
    if (v94 >= 0x80) {
      int v96 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v94, a2);
    }
    else {
      int v96 = 1;
    }
    uint64_t v4 = (v4 + v95 + v96 + 2);
    unsigned int v3 = *(_DWORD *)(a1 + 252);
  }
LABEL_177:
  if (!HIBYTE(v3)) {
    goto LABEL_221;
  }
  if ((v3 & 0x1000000) != 0)
  {
    uint64_t v97 = *(void *)(a1 + 200);
    if (!v97) {
      uint64_t v97 = *(void *)(qword_1008ABF30 + 200);
    }
    int v98 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000BFE94(v97, a2);
    int v99 = (int)v98;
    if (v98 >= 0x80) {
      int v100 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v98, a2);
    }
    else {
      int v100 = 1;
    }
    uint64_t v4 = (v4 + v99 + v100 + 2);
    unsigned int v3 = *(_DWORD *)(a1 + 252);
    if ((v3 & 0x2000000) == 0)
    {
LABEL_180:
      if ((v3 & 0x4000000) == 0) {
        goto LABEL_181;
      }
      goto LABEL_197;
    }
  }
  else if ((v3 & 0x2000000) == 0)
  {
    goto LABEL_180;
  }
  uint64_t v101 = *(void *)(a1 + 208);
  if (!v101) {
    uint64_t v101 = *(void *)(qword_1008ABF30 + 208);
  }
  int v102 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000C0D18(v101, a2);
  int v103 = (int)v102;
  if (v102 >= 0x80) {
    int v104 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v102, a2);
  }
  else {
    int v104 = 1;
  }
  uint64_t v4 = (v4 + v103 + v104 + 2);
  unsigned int v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x4000000) == 0)
  {
LABEL_181:
    if ((v3 & 0x8000000) == 0) {
      goto LABEL_182;
    }
    goto LABEL_203;
  }
LABEL_197:
  uint64_t v105 = *(void *)(a1 + 216);
  if (!v105) {
    uint64_t v105 = *(void *)(qword_1008ABF30 + 216);
  }
  int v106 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000B6984(v105, a2);
  int v107 = (int)v106;
  if (v106 >= 0x80) {
    int v108 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v106, a2);
  }
  else {
    int v108 = 1;
  }
  uint64_t v4 = (v4 + v107 + v108 + 2);
  unsigned int v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x8000000) == 0)
  {
LABEL_182:
    if ((v3 & 0x10000000) == 0) {
      goto LABEL_183;
    }
    goto LABEL_209;
  }
LABEL_203:
  uint64_t v109 = *(void *)(a1 + 224);
  if (!v109) {
    uint64_t v109 = *(void *)(qword_1008ABF30 + 224);
  }
  int v110 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000C2244(v109, a2);
  int v111 = (int)v110;
  if (v110 >= 0x80) {
    int v112 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v110, a2);
  }
  else {
    int v112 = 1;
  }
  uint64_t v4 = (v4 + v111 + v112 + 2);
  unsigned int v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x10000000) == 0)
  {
LABEL_183:
    if ((v3 & 0x20000000) == 0) {
      goto LABEL_221;
    }
    goto LABEL_215;
  }
LABEL_209:
  uint64_t v113 = *(void *)(a1 + 232);
  if (!v113) {
    uint64_t v113 = *(void *)(qword_1008ABF30 + 232);
  }
  uint64_t v114 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000C2C3C(v113, a2);
  int v115 = (int)v114;
  if (v114 >= 0x80) {
    int v116 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v114, a2);
  }
  else {
    int v116 = 1;
  }
  uint64_t v4 = (v4 + v115 + v116 + 2);
  if ((*(_DWORD *)(a1 + 252) & 0x20000000) != 0)
  {
LABEL_215:
    uint64_t v117 = *(void *)(a1 + 240);
    if (!v117) {
      uint64_t v117 = *(void *)(qword_1008ABF30 + 240);
    }
    int v118 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000BD160(v117, a2);
    int v119 = (int)v118;
    if (v118 >= 0x80) {
      int v120 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v118, a2);
    }
    else {
      int v120 = 1;
    }
    uint64_t v4 = (v4 + v119 + v120 + 2);
  }
LABEL_221:
  int v121 = *(void **)(a1 + 8);
  if (v121 && *v121 != v121[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 248) = v4;
  return v4;
}

uint64_t sub_100093710(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10008D7CC((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1000937E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000937FC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (*(unsigned char *)(a2 + 28))
  {
    uint64_t v4 = *(const std::string **)(a2 + 16);
    *(_DWORD *)(a1 + 28) |= 1u;
    uint64_t v5 = *(std::string **)(a1 + 16);
    if (v5 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v5, v4);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000938D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000938F0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  int v4 = *(_DWORD *)(a2 + 68);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v9 = *(const std::string **)(a2 + 16);
    *(_DWORD *)(a1 + 68) |= 1u;
    unint64_t v10 = *(std::string **)(a1 + 16);
    if (v10 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v10, v9);
    int v4 = *(_DWORD *)(a2 + 68);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_23;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v11 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 68) |= 2u;
  *(_DWORD *)(a1 + 24) = v11;
  int v4 = *(_DWORD *)(a2 + 68);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  int v12 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 68) |= 4u;
  *(_DWORD *)(a1 + 28) = v12;
  int v4 = *(_DWORD *)(a2 + 68);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v13 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 68) |= 8u;
  *(_DWORD *)(a1 + 32) = v13;
  int v4 = *(_DWORD *)(a2 + 68);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_26:
    int v15 = *(const std::string **)(a2 + 40);
    *(_DWORD *)(a1 + 68) |= 0x20u;
    int v16 = *(std::string **)(a1 + 40);
    if (v16 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v16, v15);
    int v4 = *(_DWORD *)(a2 + 68);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_25:
  int v14 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 68) |= 0x10u;
  *(_DWORD *)(a1 + 36) = v14;
  int v4 = *(_DWORD *)(a2 + 68);
  if ((v4 & 0x20) != 0) {
    goto LABEL_26;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_29:
  int v17 = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 68) |= 0x40u;
  *(_DWORD *)(a1 + 48) = v17;
  int v4 = *(_DWORD *)(a2 + 68);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *(_DWORD *)(a2 + 52);
    *(_DWORD *)(a1 + 68) |= 0x80u;
    *(_DWORD *)(a1 + 52) = v5;
    int v4 = *(_DWORD *)(a2 + 68);
  }
LABEL_13:
  if ((v4 & 0xFF00) != 0)
  {
    if ((v4 & 0x100) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 56);
      *(_DWORD *)(a1 + 68) |= 0x100u;
      *(_DWORD *)(a1 + 56) = v6;
      int v4 = *(_DWORD *)(a2 + 68);
    }
    if ((v4 & 0x200) != 0)
    {
      int v7 = *(_DWORD *)(a2 + 60);
      *(_DWORD *)(a1 + 68) |= 0x200u;
      *(_DWORD *)(a1 + 60) = v7;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100093B2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100093B44(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v21);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 56), *(_DWORD *)(a2 + 64) + *(_DWORD *)(a1 + 64));
  if (*(int *)(a2 + 64) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 56) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 68);
      uint64_t v7 = *(int *)(a1 + 64);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 72))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 56), v6 + 1);
          int v6 = *(_DWORD *)(a1 + 68);
        }
        *(_DWORD *)(a1 + 68) = v6 + 1;
        sub_1000C3048();
      }
      uint64_t v8 = *(void *)(a1 + 56);
      *(_DWORD *)(a1 + 64) = v7 + 1;
      sub_10009B22C(*(_DWORD **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 64));
  }
  int v9 = *(_DWORD *)(a2 + 84);
  if (!(_BYTE)v9) {
    goto LABEL_31;
  }
  if (v9)
  {
    *(_DWORD *)(a1 + 84) |= 1u;
    uint64_t v10 = *(void *)(a1 + 16);
    if (!v10) {
      operator new();
    }
    uint64_t v11 = *(void *)(a2 + 16);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_1008ABF60 + 16);
    }
    sub_1000984E4(v10, v11);
    int v9 = *(_DWORD *)(a2 + 84);
  }
  if ((v9 & 2) != 0)
  {
    unsigned int v12 = *(_DWORD *)(a2 + 24);
    if (v12 > 0x1B || ((1 << v12) & 0xDDB54EF) == 0) {
      sub_10040FDB4();
    }
    *(_DWORD *)(a1 + 84) |= 2u;
    *(_DWORD *)(a1 + 24) = v12;
    int v9 = *(_DWORD *)(a2 + 84);
  }
  if ((v9 & 4) != 0)
  {
    unsigned int v13 = *(_DWORD *)(a2 + 28);
    if (v13 >= 2) {
      sub_10040FD88();
    }
    *(_DWORD *)(a1 + 84) |= 4u;
    *(_DWORD *)(a1 + 28) = v13;
    int v9 = *(_DWORD *)(a2 + 84);
  }
  if ((v9 & 8) != 0)
  {
    int v17 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 84) |= 8u;
    *(_DWORD *)(a1 + 32) = v17;
    int v9 = *(_DWORD *)(a2 + 84);
    if ((v9 & 0x10) == 0)
    {
LABEL_27:
      if ((v9 & 0x20) == 0) {
        goto LABEL_28;
      }
LABEL_36:
      int v19 = *(_DWORD *)(a2 + 40);
      *(_DWORD *)(a1 + 84) |= 0x20u;
      *(_DWORD *)(a1 + 40) = v19;
      int v9 = *(_DWORD *)(a2 + 84);
      if ((v9 & 0x40) == 0)
      {
LABEL_29:
        if ((v9 & 0x80) == 0) {
          goto LABEL_31;
        }
        goto LABEL_30;
      }
      goto LABEL_37;
    }
  }
  else if ((v9 & 0x10) == 0)
  {
    goto LABEL_27;
  }
  int v18 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 84) |= 0x10u;
  *(_DWORD *)(a1 + 36) = v18;
  int v9 = *(_DWORD *)(a2 + 84);
  if ((v9 & 0x20) != 0) {
    goto LABEL_36;
  }
LABEL_28:
  if ((v9 & 0x40) == 0) {
    goto LABEL_29;
  }
LABEL_37:
  int v20 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 84) |= 0x40u;
  *(_DWORD *)(a1 + 44) = v20;
  int v9 = *(_DWORD *)(a2 + 84);
  if ((v9 & 0x80) != 0)
  {
LABEL_30:
    int v14 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 84) |= 0x80u;
    *(_DWORD *)(a1 + 48) = v14;
    int v9 = *(_DWORD *)(a2 + 84);
  }
LABEL_31:
  if ((v9 & 0x100) != 0)
  {
    int v15 = *(_DWORD *)(a2 + 52);
    *(_DWORD *)(a1 + 84) |= 0x100u;
    *(_DWORD *)(a1 + 52) = v15;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100093E00()
{
}

uint64_t sub_100093E38(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (*(unsigned char *)(a2 + 28))
  {
    *(_DWORD *)(a1 + 28) |= 1u;
    uint64_t v4 = *(void *)(a1 + 16);
    if (!v4) {
      operator new();
    }
    uint64_t v5 = *(void *)(a2 + 16);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_1008ABF68 + 16);
    }
    sub_100098EE8(v4, v5);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100093F18()
{
}

uint64_t sub_100093F50(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 44);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 44))
  {
    *(_DWORD *)(a1 + 44) |= 1u;
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1008ABF70 + 16);
    }
    sub_1000984E4(v5, v6);
    int v4 = *(_DWORD *)(a2 + 44);
  }
  if ((v4 & 2) == 0)
  {
    if ((v4 & 4) == 0) {
      goto LABEL_12;
    }
LABEL_16:
    int v10 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(_DWORD *)(a1 + 32) = v10;
    if ((*(_DWORD *)(a2 + 44) & 8) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_13;
  }
  uint64_t v9 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 44) |= 2u;
  *(void *)(a1 + 24) = v9;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 4) != 0) {
    goto LABEL_16;
  }
LABEL_12:
  if ((v4 & 8) != 0)
  {
LABEL_13:
    int v7 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 44) |= 8u;
    *(_DWORD *)(a1 + 36) = v7;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100094094()
{
}

uint64_t sub_1000940CC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (*(unsigned char *)(a2 + 28))
  {
    *(_DWORD *)(a1 + 28) |= 1u;
    uint64_t v4 = *(void *)(a1 + 16);
    if (!v4) {
      operator new();
    }
    uint64_t v5 = *(void *)(a2 + 16);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_1008ABF78 + 16);
    }
    sub_100098EE8(v4, v5);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000941AC()
{
}

uint64_t sub_1000941E4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      *(_DWORD *)(a1 + 32) |= 1u;
      uint64_t v5 = *(void *)(a1 + 16);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 16);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_1008ABF80 + 16);
      }
      sub_1000984E4(v5, v6);
      int v4 = *(_DWORD *)(a2 + 32);
    }
    if ((v4 & 2) != 0)
    {
      unsigned int v7 = *(_DWORD *)(a2 + 24);
      if (v7 >= 2) {
        sub_10040FDE0();
      }
      *(_DWORD *)(a1 + 32) |= 2u;
      *(_DWORD *)(a1 + 24) = v7;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000942F0()
{
}

uint64_t sub_100094328(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (*(unsigned char *)(a2 + 28))
  {
    *(_DWORD *)(a1 + 28) |= 1u;
    uint64_t v4 = *(void *)(a1 + 16);
    if (!v4) {
      operator new();
    }
    uint64_t v5 = *(void *)(a2 + 16);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_1008ABF88 + 16);
    }
    sub_100098EE8(v4, v5);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100094408()
{
}

uint64_t sub_100094440(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    sub_10006F57C(a1 + 16, *(_DWORD *)(a1 + 24) + v4);
    memcpy((void *)(*(void *)(a1 + 16) + 4 * *(int *)(a1 + 24)), *(const void **)(a2 + 16), 4 * *(int *)(a2 + 24));
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100094500(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100094518(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), *(_DWORD *)(a2 + 24) + a1[6]);
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 16) + 8 * v4);
      int v6 = a1[7];
      uint64_t v7 = (int)a1[6];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[8])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), v6 + 1);
          int v6 = a1[7];
        }
        a1[7] = v6 + 1;
        sub_1000C30AC();
      }
      uint64_t v8 = *((void *)a1 + 2);
      a1[6] = v7 + 1;
      sub_10009FE58(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 24));
  }
  if (*(unsigned char *)(a2 + 48))
  {
    unsigned int v9 = *(_DWORD *)(a2 + 40);
    if ((sub_10008D5D8(v9) & 1) == 0) {
      sub_10040FE0C();
    }
    a1[12] |= 1u;
    a1[10] = v9;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100094678(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100094690(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), *(_DWORD *)(a2 + 24) + a1[6]);
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 16) + 8 * v4);
      int v6 = a1[7];
      uint64_t v7 = (int)a1[6];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[8])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), v6 + 1);
          int v6 = a1[7];
        }
        a1[7] = v6 + 1;
        sub_1000C30AC();
      }
      uint64_t v8 = *((void *)a1 + 2);
      a1[6] = v7 + 1;
      sub_10009FE58(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 24));
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000947C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000947DC(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      unsigned int v5 = *(_DWORD *)(a2 + 16);
      if ((sub_10008D5D8(v5) & 1) == 0) {
        sub_10040FE38();
      }
      a1[8] |= 1u;
      a1[4] = v5;
      int v4 = *(_DWORD *)(a2 + 32);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 20);
      a1[8] |= 2u;
      a1[5] = v6;
      int v4 = *(_DWORD *)(a2 + 32);
    }
    if ((v4 & 4) != 0)
    {
      int v7 = *(_DWORD *)(a2 + 24);
      a1[8] |= 4u;
      a1[6] = v7;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000948C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000948E0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 56);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 56))
    {
      int v5 = *(_DWORD *)(a2 + 48);
      *(_DWORD *)(a1 + 56) |= 1u;
      *(_DWORD *)(a1 + 48) = v5;
      int v4 = *(_DWORD *)(a2 + 56);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((*(unsigned char *)(a2 + 56) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v6 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 56) |= 2u;
    *(void *)(a1 + 16) = v6;
    int v4 = *(_DWORD *)(a2 + 56);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_12:
    uint64_t v7 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 56) |= 4u;
    *(void *)(a1 + 24) = v7;
    int v4 = *(_DWORD *)(a2 + 56);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
LABEL_14:
      *(_DWORD *)(a1 + 56) |= 0x10u;
      uint64_t v9 = *(void *)(a1 + 40);
      if (!v9) {
        operator new();
      }
      uint64_t v10 = *(void *)(a2 + 40);
      if (!v10) {
        uint64_t v10 = *(void *)(qword_1008ABFB8 + 40);
      }
      sub_1000A20A8(v9, v10);
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
LABEL_13:
    uint64_t v8 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 56) |= 8u;
    *(void *)(a1 + 32) = v8;
    if ((*(_DWORD *)(a2 + 56) & 0x10) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_14;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100094A48()
{
}

uint64_t sub_100094A80(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v88);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 192), *(_DWORD *)(a2 + 200) + *(_DWORD *)(a1 + 200));
  if (*(int *)(a2 + 200) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 192) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 204);
      uint64_t v7 = *(int *)(a1 + 200);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 208))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 192), v6 + 1);
          int v6 = *(_DWORD *)(a1 + 204);
        }
        *(_DWORD *)(a1 + 204) = v6 + 1;
        sub_1000C3110();
      }
      uint64_t v8 = *(void *)(a1 + 192);
      *(_DWORD *)(a1 + 200) = v7 + 1;
      sub_1000A37A0(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 200));
  }
  int v9 = *(_DWORD *)(a2 + 328);
  if (v9)
  {
    sub_10006F628(a1 + 320, *(_DWORD *)(a1 + 328) + v9);
    memcpy((void *)(*(void *)(a1 + 320) + 8 * *(int *)(a1 + 328)), *(const void **)(a2 + 320), 8 * *(int *)(a2 + 328));
    *(_DWORD *)(a1 + 328) += *(_DWORD *)(a2 + 328);
  }
  unsigned int v10 = *(_DWORD *)(a2 + 468);
  if (!(_BYTE)v10) {
    goto LABEL_31;
  }
  if (v10)
  {
    *(_DWORD *)(a1 + 468) |= 1u;
    uint64_t v11 = *(void *)(a1 + 16);
    if (!v11) {
      operator new();
    }
    uint64_t v12 = *(void *)(a2 + 16);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_1008ABFD8 + 16);
    }
    sub_100098EE8(v11, v12);
    unsigned int v10 = *(_DWORD *)(a2 + 468);
  }
  if ((v10 & 2) != 0)
  {
    unsigned int v13 = *(_DWORD *)(a2 + 32);
    if (v13 > 0x1B || ((1 << v13) & 0xDDB54EF) == 0) {
      sub_10040FEE8();
    }
    *(_DWORD *)(a1 + 468) |= 2u;
    *(_DWORD *)(a1 + 32) = v13;
    unsigned int v10 = *(_DWORD *)(a2 + 468);
  }
  if ((v10 & 4) != 0)
  {
    uint64_t v34 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 468) |= 4u;
    *(void *)(a1 + 24) = v34;
    unsigned int v10 = *(_DWORD *)(a2 + 468);
    if ((v10 & 8) == 0)
    {
LABEL_26:
      if ((v10 & 0x10) == 0) {
        goto LABEL_27;
      }
      goto LABEL_90;
    }
  }
  else if ((v10 & 8) == 0)
  {
    goto LABEL_26;
  }
  int v35 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 468) |= 8u;
  *(_DWORD *)(a1 + 36) = v35;
  unsigned int v10 = *(_DWORD *)(a2 + 468);
  if ((v10 & 0x10) == 0)
  {
LABEL_27:
    if ((v10 & 0x20) == 0) {
      goto LABEL_28;
    }
LABEL_91:
    uint64_t v37 = *(const std::string **)(a2 + 40);
    *(_DWORD *)(a1 + 468) |= 0x20u;
    uint64_t v38 = *(std::string **)(a1 + 40);
    if (v38 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v38, v37);
    unsigned int v10 = *(_DWORD *)(a2 + 468);
    if ((v10 & 0x40) == 0)
    {
LABEL_29:
      if ((v10 & 0x80) == 0) {
        goto LABEL_31;
      }
      goto LABEL_30;
    }
    goto LABEL_94;
  }
LABEL_90:
  int v36 = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 468) |= 0x10u;
  *(_DWORD *)(a1 + 48) = v36;
  unsigned int v10 = *(_DWORD *)(a2 + 468);
  if ((v10 & 0x20) != 0) {
    goto LABEL_91;
  }
LABEL_28:
  if ((v10 & 0x40) == 0) {
    goto LABEL_29;
  }
LABEL_94:
  int v39 = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 468) |= 0x40u;
  *(_DWORD *)(a1 + 52) = v39;
  unsigned int v10 = *(_DWORD *)(a2 + 468);
  if ((v10 & 0x80) != 0)
  {
LABEL_30:
    int v14 = *(_DWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 468) |= 0x80u;
    *(_DWORD *)(a1 + 56) = v14;
    unsigned int v10 = *(_DWORD *)(a2 + 468);
  }
LABEL_31:
  if ((v10 & 0xFF00) == 0) {
    goto LABEL_41;
  }
  if ((v10 & 0x100) != 0)
  {
    int v20 = *(_DWORD *)(a2 + 60);
    *(_DWORD *)(a1 + 468) |= 0x100u;
    *(_DWORD *)(a1 + 60) = v20;
    unsigned int v10 = *(_DWORD *)(a2 + 468);
    if ((v10 & 0x200) == 0)
    {
LABEL_34:
      if ((v10 & 0x400) == 0) {
        goto LABEL_35;
      }
      goto LABEL_74;
    }
  }
  else if ((v10 & 0x200) == 0)
  {
    goto LABEL_34;
  }
  uint64_t v21 = *(void *)(a2 + 64);
  *(_DWORD *)(a1 + 468) |= 0x200u;
  *(void *)(a1 + 64) = v21;
  unsigned int v10 = *(_DWORD *)(a2 + 468);
  if ((v10 & 0x400) == 0)
  {
LABEL_35:
    if ((v10 & 0x800) == 0) {
      goto LABEL_36;
    }
    goto LABEL_75;
  }
LABEL_74:
  uint64_t v22 = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 468) |= 0x400u;
  *(void *)(a1 + 72) = v22;
  unsigned int v10 = *(_DWORD *)(a2 + 468);
  if ((v10 & 0x800) == 0)
  {
LABEL_36:
    if ((v10 & 0x1000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_76;
  }
LABEL_75:
  int v23 = *(_DWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 468) |= 0x800u;
  *(_DWORD *)(a1 + 80) = v23;
  unsigned int v10 = *(_DWORD *)(a2 + 468);
  if ((v10 & 0x1000) == 0)
  {
LABEL_37:
    if ((v10 & 0x2000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_77;
  }
LABEL_76:
  int v24 = *(_DWORD *)(a2 + 84);
  *(_DWORD *)(a1 + 468) |= 0x1000u;
  *(_DWORD *)(a1 + 84) = v24;
  unsigned int v10 = *(_DWORD *)(a2 + 468);
  if ((v10 & 0x2000) == 0)
  {
LABEL_38:
    if ((v10 & 0x4000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_78;
  }
LABEL_77:
  int v25 = *(_DWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 468) |= 0x2000u;
  *(_DWORD *)(a1 + 88) = v25;
  unsigned int v10 = *(_DWORD *)(a2 + 468);
  if ((v10 & 0x4000) == 0)
  {
LABEL_39:
    if ((v10 & 0x8000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_40;
  }
LABEL_78:
  int v26 = *(_DWORD *)(a2 + 92);
  *(_DWORD *)(a1 + 468) |= 0x4000u;
  *(_DWORD *)(a1 + 92) = v26;
  unsigned int v10 = *(_DWORD *)(a2 + 468);
  if ((v10 & 0x8000) != 0)
  {
LABEL_40:
    int v15 = *(_DWORD *)(a2 + 136);
    *(_DWORD *)(a1 + 468) |= 0x8000u;
    *(_DWORD *)(a1 + 136) = v15;
    unsigned int v10 = *(_DWORD *)(a2 + 468);
  }
LABEL_41:
  if ((v10 & 0xFF0000) == 0) {
    goto LABEL_51;
  }
  if ((v10 & 0x10000) != 0)
  {
    uint64_t v27 = *(void *)(a2 + 96);
    *(_DWORD *)(a1 + 468) |= 0x10000u;
    *(void *)(a1 + 96) = v27;
    unsigned int v10 = *(_DWORD *)(a2 + 468);
    if ((v10 & 0x20000) == 0)
    {
LABEL_44:
      if ((v10 & 0x40000) == 0) {
        goto LABEL_45;
      }
      goto LABEL_82;
    }
  }
  else if ((v10 & 0x20000) == 0)
  {
    goto LABEL_44;
  }
  uint64_t v28 = *(void *)(a2 + 104);
  *(_DWORD *)(a1 + 468) |= 0x20000u;
  *(void *)(a1 + 104) = v28;
  unsigned int v10 = *(_DWORD *)(a2 + 468);
  if ((v10 & 0x40000) == 0)
  {
LABEL_45:
    if ((v10 & 0x80000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_83;
  }
LABEL_82:
  uint64_t v29 = *(void *)(a2 + 112);
  *(_DWORD *)(a1 + 468) |= 0x40000u;
  *(void *)(a1 + 112) = v29;
  unsigned int v10 = *(_DWORD *)(a2 + 468);
  if ((v10 & 0x80000) == 0)
  {
LABEL_46:
    if ((v10 & 0x100000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_84;
  }
LABEL_83:
  uint64_t v30 = *(void *)(a2 + 120);
  *(_DWORD *)(a1 + 468) |= 0x80000u;
  *(void *)(a1 + 120) = v30;
  unsigned int v10 = *(_DWORD *)(a2 + 468);
  if ((v10 & 0x100000) == 0)
  {
LABEL_47:
    if ((v10 & 0x200000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_85;
  }
LABEL_84:
  uint64_t v31 = *(void *)(a2 + 128);
  *(_DWORD *)(a1 + 468) |= 0x100000u;
  *(void *)(a1 + 128) = v31;
  unsigned int v10 = *(_DWORD *)(a2 + 468);
  if ((v10 & 0x200000) == 0)
  {
LABEL_48:
    if ((v10 & 0x400000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_86;
  }
LABEL_85:
  uint64_t v32 = *(void *)(a2 + 144);
  *(_DWORD *)(a1 + 468) |= 0x200000u;
  *(void *)(a1 + 144) = v32;
  unsigned int v10 = *(_DWORD *)(a2 + 468);
  if ((v10 & 0x400000) == 0)
  {
LABEL_49:
    if ((v10 & 0x800000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_50;
  }
LABEL_86:
  uint64_t v33 = *(void *)(a2 + 152);
  *(_DWORD *)(a1 + 468) |= 0x400000u;
  *(void *)(a1 + 152) = v33;
  unsigned int v10 = *(_DWORD *)(a2 + 468);
  if ((v10 & 0x800000) != 0)
  {
LABEL_50:
    uint64_t v16 = *(void *)(a2 + 160);
    *(_DWORD *)(a1 + 468) |= 0x800000u;
    *(void *)(a1 + 160) = v16;
    unsigned int v10 = *(_DWORD *)(a2 + 468);
  }
LABEL_51:
  if (!HIBYTE(v10)) {
    goto LABEL_59;
  }
  if ((v10 & 0x1000000) != 0)
  {
    uint64_t v62 = *(void *)(a2 + 168);
    *(_DWORD *)(a1 + 468) |= 0x1000000u;
    *(void *)(a1 + 168) = v62;
    unsigned int v10 = *(_DWORD *)(a2 + 468);
    if ((v10 & 0x2000000) == 0)
    {
LABEL_54:
      if ((v10 & 0x4000000) == 0) {
        goto LABEL_55;
      }
      goto LABEL_153;
    }
  }
  else if ((v10 & 0x2000000) == 0)
  {
    goto LABEL_54;
  }
  uint64_t v63 = *(void *)(a2 + 176);
  *(_DWORD *)(a1 + 468) |= 0x2000000u;
  *(void *)(a1 + 176) = v63;
  unsigned int v10 = *(_DWORD *)(a2 + 468);
  if ((v10 & 0x4000000) == 0)
  {
LABEL_55:
    if ((v10 & 0x8000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_154;
  }
LABEL_153:
  int v64 = *(_DWORD *)(a2 + 140);
  *(_DWORD *)(a1 + 468) |= 0x4000000u;
  *(_DWORD *)(a1 + 140) = v64;
  unsigned int v10 = *(_DWORD *)(a2 + 468);
  if ((v10 & 0x8000000) == 0)
  {
LABEL_56:
    if ((v10 & 0x20000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_155;
  }
LABEL_154:
  uint64_t v65 = *(void *)(a2 + 184);
  *(_DWORD *)(a1 + 468) |= 0x8000000u;
  *(void *)(a1 + 184) = v65;
  unsigned int v10 = *(_DWORD *)(a2 + 468);
  if ((v10 & 0x20000000) == 0)
  {
LABEL_57:
    if ((v10 & 0x40000000) == 0) {
      goto LABEL_58;
    }
LABEL_156:
    uint64_t v67 = *(void *)(a2 + 224);
    *(_DWORD *)(a1 + 468) |= 0x40000000u;
    *(void *)(a1 + 224) = v67;
    if ((*(_DWORD *)(a2 + 468) & 0x80000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_157;
  }
LABEL_155:
  uint64_t v66 = *(void *)(a2 + 216);
  *(_DWORD *)(a1 + 468) |= 0x20000000u;
  *(void *)(a1 + 216) = v66;
  unsigned int v10 = *(_DWORD *)(a2 + 468);
  if ((v10 & 0x40000000) != 0) {
    goto LABEL_156;
  }
LABEL_58:
  if ((v10 & 0x80000000) == 0) {
    goto LABEL_59;
  }
LABEL_157:
  uint64_t v68 = *(void *)(a2 + 232);
  *(_DWORD *)(a1 + 468) |= 0x80000000;
  *(void *)(a1 + 232) = v68;
LABEL_59:
  unsigned int v17 = *(_DWORD *)(a2 + 472);
  if (!(_BYTE)v17) {
    goto LABEL_103;
  }
  if (v17)
  {
    int v18 = *(_DWORD *)(a2 + 240);
    *(_DWORD *)(a1 + 472) |= 1u;
    *(_DWORD *)(a1 + 240) = v18;
    unsigned int v17 = *(_DWORD *)(a2 + 472);
  }
  if ((v17 & 2) != 0)
  {
    unsigned int v19 = *(_DWORD *)(a2 + 244);
    if (v19 >= 2) {
      sub_10040FEBC();
    }
    *(_DWORD *)(a1 + 472) |= 2u;
    *(_DWORD *)(a1 + 244) = v19;
    unsigned int v17 = *(_DWORD *)(a2 + 472);
  }
  if ((v17 & 4) != 0)
  {
    uint64_t v40 = *(void *)(a2 + 248);
    *(_DWORD *)(a1 + 472) |= 4u;
    *(void *)(a1 + 248) = v40;
    unsigned int v17 = *(_DWORD *)(a2 + 472);
    if ((v17 & 8) == 0)
    {
LABEL_67:
      if ((v17 & 0x10) == 0) {
        goto LABEL_68;
      }
      goto LABEL_98;
    }
  }
  else if ((v17 & 8) == 0)
  {
    goto LABEL_67;
  }
  uint64_t v41 = *(void *)(a2 + 256);
  *(_DWORD *)(a1 + 472) |= 8u;
  *(void *)(a1 + 256) = v41;
  unsigned int v17 = *(_DWORD *)(a2 + 472);
  if ((v17 & 0x10) == 0)
  {
LABEL_68:
    if ((v17 & 0x20) == 0) {
      goto LABEL_69;
    }
    goto LABEL_99;
  }
LABEL_98:
  uint64_t v42 = *(void *)(a2 + 264);
  *(_DWORD *)(a1 + 472) |= 0x10u;
  *(void *)(a1 + 264) = v42;
  unsigned int v17 = *(_DWORD *)(a2 + 472);
  if ((v17 & 0x20) == 0)
  {
LABEL_69:
    if ((v17 & 0x40) == 0) {
      goto LABEL_70;
    }
    goto LABEL_100;
  }
LABEL_99:
  uint64_t v43 = *(void *)(a2 + 272);
  *(_DWORD *)(a1 + 472) |= 0x20u;
  *(void *)(a1 + 272) = v43;
  unsigned int v17 = *(_DWORD *)(a2 + 472);
  if ((v17 & 0x40) == 0)
  {
LABEL_70:
    if ((v17 & 0x80) == 0) {
      goto LABEL_103;
    }
    goto LABEL_101;
  }
LABEL_100:
  uint64_t v44 = *(void *)(a2 + 280);
  *(_DWORD *)(a1 + 472) |= 0x40u;
  *(void *)(a1 + 280) = v44;
  unsigned int v17 = *(_DWORD *)(a2 + 472);
  if ((v17 & 0x80) == 0) {
    goto LABEL_103;
  }
LABEL_101:
  int v45 = *(_DWORD *)(a2 + 288);
  if ((v45 - 1) >= 2) {
    sub_10040FE90();
  }
  *(_DWORD *)(a1 + 472) |= 0x80u;
  *(_DWORD *)(a1 + 288) = v45;
  unsigned int v17 = *(_DWORD *)(a2 + 472);
LABEL_103:
  if ((v17 & 0xFF00) == 0) {
    goto LABEL_112;
  }
  if ((v17 & 0x100) != 0)
  {
    int v48 = *(_DWORD *)(a2 + 292);
    *(_DWORD *)(a1 + 472) |= 0x100u;
    *(_DWORD *)(a1 + 292) = v48;
    unsigned int v17 = *(_DWORD *)(a2 + 472);
    if ((v17 & 0x200) == 0)
    {
LABEL_106:
      if ((v17 & 0x400) == 0) {
        goto LABEL_107;
      }
      goto LABEL_134;
    }
  }
  else if ((v17 & 0x200) == 0)
  {
    goto LABEL_106;
  }
  char v49 = *(unsigned char *)(a2 + 296);
  *(_DWORD *)(a1 + 472) |= 0x200u;
  *(unsigned char *)(a1 + 296) = v49;
  unsigned int v17 = *(_DWORD *)(a2 + 472);
  if ((v17 & 0x400) == 0)
  {
LABEL_107:
    if ((v17 & 0x800) == 0) {
      goto LABEL_108;
    }
    goto LABEL_135;
  }
LABEL_134:
  char v50 = *(unsigned char *)(a2 + 297);
  *(_DWORD *)(a1 + 472) |= 0x400u;
  *(unsigned char *)(a1 + 297) = v50;
  unsigned int v17 = *(_DWORD *)(a2 + 472);
  if ((v17 & 0x800) == 0)
  {
LABEL_108:
    if ((v17 & 0x1000) == 0) {
      goto LABEL_109;
    }
    goto LABEL_136;
  }
LABEL_135:
  char v51 = *(unsigned char *)(a2 + 298);
  *(_DWORD *)(a1 + 472) |= 0x800u;
  *(unsigned char *)(a1 + 298) = v51;
  unsigned int v17 = *(_DWORD *)(a2 + 472);
  if ((v17 & 0x1000) == 0)
  {
LABEL_109:
    if ((v17 & 0x2000) == 0) {
      goto LABEL_110;
    }
    goto LABEL_137;
  }
LABEL_136:
  uint64_t v52 = *(void *)(a2 + 304);
  *(_DWORD *)(a1 + 472) |= 0x1000u;
  *(void *)(a1 + 304) = v52;
  unsigned int v17 = *(_DWORD *)(a2 + 472);
  if ((v17 & 0x2000) == 0)
  {
LABEL_110:
    if ((v17 & 0x4000) == 0) {
      goto LABEL_112;
    }
    goto LABEL_111;
  }
LABEL_137:
  *(_DWORD *)(a1 + 472) |= 0x2000u;
  uint64_t v53 = *(_DWORD **)(a1 + 312);
  if (!v53) {
    operator new();
  }
  uint64_t v54 = *(void *)(a2 + 312);
  if (!v54) {
    uint64_t v54 = *(void *)(qword_1008ABFD8 + 312);
  }
  sub_1000A44B8(v53, v54);
  unsigned int v17 = *(_DWORD *)(a2 + 472);
  if ((v17 & 0x4000) != 0)
  {
LABEL_111:
    int v46 = *(_DWORD *)(a2 + 300);
    *(_DWORD *)(a1 + 472) |= 0x4000u;
    *(_DWORD *)(a1 + 300) = v46;
    unsigned int v17 = *(_DWORD *)(a2 + 472);
  }
LABEL_112:
  if ((v17 & 0xFF0000) == 0) {
    goto LABEL_122;
  }
  if ((v17 & 0x10000) != 0)
  {
    int v55 = *(_DWORD *)(a2 + 336);
    *(_DWORD *)(a1 + 472) |= 0x10000u;
    *(_DWORD *)(a1 + 336) = v55;
    unsigned int v17 = *(_DWORD *)(a2 + 472);
    if ((v17 & 0x20000) == 0)
    {
LABEL_115:
      if ((v17 & 0x40000) == 0) {
        goto LABEL_116;
      }
      goto LABEL_145;
    }
  }
  else if ((v17 & 0x20000) == 0)
  {
    goto LABEL_115;
  }
  int v56 = *(_DWORD *)(a2 + 340);
  *(_DWORD *)(a1 + 472) |= 0x20000u;
  *(_DWORD *)(a1 + 340) = v56;
  unsigned int v17 = *(_DWORD *)(a2 + 472);
  if ((v17 & 0x40000) == 0)
  {
LABEL_116:
    if ((v17 & 0x80000) == 0) {
      goto LABEL_117;
    }
    goto LABEL_146;
  }
LABEL_145:
  int v57 = *(_DWORD *)(a2 + 344);
  *(_DWORD *)(a1 + 472) |= 0x40000u;
  *(_DWORD *)(a1 + 344) = v57;
  unsigned int v17 = *(_DWORD *)(a2 + 472);
  if ((v17 & 0x80000) == 0)
  {
LABEL_117:
    if ((v17 & 0x100000) == 0) {
      goto LABEL_118;
    }
    goto LABEL_147;
  }
LABEL_146:
  int v58 = *(_DWORD *)(a2 + 348);
  *(_DWORD *)(a1 + 472) |= 0x80000u;
  *(_DWORD *)(a1 + 348) = v58;
  unsigned int v17 = *(_DWORD *)(a2 + 472);
  if ((v17 & 0x100000) == 0)
  {
LABEL_118:
    if ((v17 & 0x200000) == 0) {
      goto LABEL_119;
    }
    goto LABEL_148;
  }
LABEL_147:
  int v59 = *(_DWORD *)(a2 + 376);
  *(_DWORD *)(a1 + 472) |= 0x100000u;
  *(_DWORD *)(a1 + 376) = v59;
  unsigned int v17 = *(_DWORD *)(a2 + 472);
  if ((v17 & 0x200000) == 0)
  {
LABEL_119:
    if ((v17 & 0x400000) == 0) {
      goto LABEL_120;
    }
    goto LABEL_149;
  }
LABEL_148:
  uint64_t v60 = *(void *)(a2 + 352);
  *(_DWORD *)(a1 + 472) |= 0x200000u;
  *(void *)(a1 + 352) = v60;
  unsigned int v17 = *(_DWORD *)(a2 + 472);
  if ((v17 & 0x400000) == 0)
  {
LABEL_120:
    if ((v17 & 0x800000) == 0) {
      goto LABEL_122;
    }
    goto LABEL_121;
  }
LABEL_149:
  uint64_t v61 = *(void *)(a2 + 360);
  *(_DWORD *)(a1 + 472) |= 0x400000u;
  *(void *)(a1 + 360) = v61;
  unsigned int v17 = *(_DWORD *)(a2 + 472);
  if ((v17 & 0x800000) != 0)
  {
LABEL_121:
    uint64_t v47 = *(void *)(a2 + 368);
    *(_DWORD *)(a1 + 472) |= 0x800000u;
    *(void *)(a1 + 368) = v47;
    unsigned int v17 = *(_DWORD *)(a2 + 472);
  }
LABEL_122:
  if (!HIBYTE(v17)) {
    goto LABEL_167;
  }
  if ((v17 & 0x1000000) != 0)
  {
    uint64_t v69 = *(void *)(a2 + 384);
    *(_DWORD *)(a1 + 472) |= 0x1000000u;
    *(void *)(a1 + 384) = v69;
    unsigned int v17 = *(_DWORD *)(a2 + 472);
    if ((v17 & 0x2000000) == 0)
    {
LABEL_125:
      if ((v17 & 0x4000000) == 0) {
        goto LABEL_126;
      }
      goto LABEL_160;
    }
  }
  else if ((v17 & 0x2000000) == 0)
  {
    goto LABEL_125;
  }
  uint64_t v70 = *(void *)(a2 + 392);
  *(_DWORD *)(a1 + 472) |= 0x2000000u;
  *(void *)(a1 + 392) = v70;
  unsigned int v17 = *(_DWORD *)(a2 + 472);
  if ((v17 & 0x4000000) == 0)
  {
LABEL_126:
    if ((v17 & 0x8000000) == 0) {
      goto LABEL_127;
    }
    goto LABEL_161;
  }
LABEL_160:
  int v71 = *(_DWORD *)(a2 + 380);
  *(_DWORD *)(a1 + 472) |= 0x4000000u;
  *(_DWORD *)(a1 + 380) = v71;
  unsigned int v17 = *(_DWORD *)(a2 + 472);
  if ((v17 & 0x8000000) == 0)
  {
LABEL_127:
    if ((v17 & 0x10000000) == 0) {
      goto LABEL_128;
    }
    goto LABEL_162;
  }
LABEL_161:
  int v72 = *(_DWORD *)(a2 + 400);
  *(_DWORD *)(a1 + 472) |= 0x8000000u;
  *(_DWORD *)(a1 + 400) = v72;
  unsigned int v17 = *(_DWORD *)(a2 + 472);
  if ((v17 & 0x10000000) == 0)
  {
LABEL_128:
    if ((v17 & 0x20000000) == 0) {
      goto LABEL_129;
    }
    goto LABEL_163;
  }
LABEL_162:
  int v73 = *(_DWORD *)(a2 + 404);
  *(_DWORD *)(a1 + 472) |= 0x10000000u;
  *(_DWORD *)(a1 + 404) = v73;
  unsigned int v17 = *(_DWORD *)(a2 + 472);
  if ((v17 & 0x20000000) == 0)
  {
LABEL_129:
    if ((v17 & 0x40000000) == 0) {
      goto LABEL_130;
    }
LABEL_164:
    int v75 = *(_DWORD *)(a2 + 412);
    *(_DWORD *)(a1 + 472) |= 0x40000000u;
    *(_DWORD *)(a1 + 412) = v75;
    if ((*(_DWORD *)(a2 + 472) & 0x80000000) == 0) {
      goto LABEL_167;
    }
    goto LABEL_165;
  }
LABEL_163:
  int v74 = *(_DWORD *)(a2 + 408);
  *(_DWORD *)(a1 + 472) |= 0x20000000u;
  *(_DWORD *)(a1 + 408) = v74;
  unsigned int v17 = *(_DWORD *)(a2 + 472);
  if ((v17 & 0x40000000) != 0) {
    goto LABEL_164;
  }
LABEL_130:
  if ((v17 & 0x80000000) == 0) {
    goto LABEL_167;
  }
LABEL_165:
  int v76 = *(_DWORD *)(a2 + 416);
  if ((v76 - 1) >= 6) {
    sub_10040FE64();
  }
  *(_DWORD *)(a1 + 472) |= 0x80000000;
  *(_DWORD *)(a1 + 416) = v76;
LABEL_167:
  int v77 = *(_DWORD *)(a2 + 476);
  if (!(_BYTE)v77) {
    goto LABEL_177;
  }
  if (v77)
  {
    int v81 = *(_DWORD *)(a2 + 420);
    *(_DWORD *)(a1 + 476) |= 1u;
    *(_DWORD *)(a1 + 420) = v81;
    int v77 = *(_DWORD *)(a2 + 476);
    if ((v77 & 2) == 0)
    {
LABEL_170:
      if ((v77 & 4) == 0) {
        goto LABEL_171;
      }
      goto LABEL_182;
    }
  }
  else if ((v77 & 2) == 0)
  {
    goto LABEL_170;
  }
  int v82 = *(_DWORD *)(a2 + 424);
  *(_DWORD *)(a1 + 476) |= 2u;
  *(_DWORD *)(a1 + 424) = v82;
  int v77 = *(_DWORD *)(a2 + 476);
  if ((v77 & 4) == 0)
  {
LABEL_171:
    if ((v77 & 8) == 0) {
      goto LABEL_172;
    }
    goto LABEL_183;
  }
LABEL_182:
  int v83 = *(_DWORD *)(a2 + 428);
  *(_DWORD *)(a1 + 476) |= 4u;
  *(_DWORD *)(a1 + 428) = v83;
  int v77 = *(_DWORD *)(a2 + 476);
  if ((v77 & 8) == 0)
  {
LABEL_172:
    if ((v77 & 0x10) == 0) {
      goto LABEL_173;
    }
    goto LABEL_184;
  }
LABEL_183:
  uint64_t v84 = *(void *)(a2 + 432);
  *(_DWORD *)(a1 + 476) |= 8u;
  *(void *)(a1 + 432) = v84;
  int v77 = *(_DWORD *)(a2 + 476);
  if ((v77 & 0x10) == 0)
  {
LABEL_173:
    if ((v77 & 0x20) == 0) {
      goto LABEL_174;
    }
    goto LABEL_185;
  }
LABEL_184:
  uint64_t v85 = *(void *)(a2 + 440);
  *(_DWORD *)(a1 + 476) |= 0x10u;
  *(void *)(a1 + 440) = v85;
  int v77 = *(_DWORD *)(a2 + 476);
  if ((v77 & 0x20) == 0)
  {
LABEL_174:
    if ((v77 & 0x40) == 0) {
      goto LABEL_175;
    }
    goto LABEL_186;
  }
LABEL_185:
  int v86 = *(_DWORD *)(a2 + 448);
  *(_DWORD *)(a1 + 476) |= 0x20u;
  *(_DWORD *)(a1 + 448) = v86;
  int v77 = *(_DWORD *)(a2 + 476);
  if ((v77 & 0x40) == 0)
  {
LABEL_175:
    if ((v77 & 0x80) == 0) {
      goto LABEL_177;
    }
    goto LABEL_176;
  }
LABEL_186:
  int v87 = *(_DWORD *)(a2 + 452);
  *(_DWORD *)(a1 + 476) |= 0x40u;
  *(_DWORD *)(a1 + 452) = v87;
  int v77 = *(_DWORD *)(a2 + 476);
  if ((v77 & 0x80) != 0)
  {
LABEL_176:
    int v78 = *(_DWORD *)(a2 + 456);
    *(_DWORD *)(a1 + 476) |= 0x80u;
    *(_DWORD *)(a1 + 456) = v78;
    int v77 = *(_DWORD *)(a2 + 476);
  }
LABEL_177:
  if ((v77 & 0x100) != 0)
  {
    int v79 = *(_DWORD *)(a2 + 460);
    *(_DWORD *)(a1 + 476) |= 0x100u;
    *(_DWORD *)(a1 + 460) = v79;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100095618()
{
}

uint64_t sub_100095664(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      *(_DWORD *)(a1 + 32) |= 1u;
      uint64_t v5 = *(void *)(a1 + 16);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 16);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_1008ABFE0 + 16);
      }
      sub_100098EE8(v5, v6);
      int v4 = *(_DWORD *)(a2 + 32);
    }
    if ((v4 & 2) != 0)
    {
      unsigned int v7 = *(_DWORD *)(a2 + 24);
      if ((sub_10008D5D8(v7) & 1) == 0) {
        sub_10040FF14();
      }
      *(_DWORD *)(a1 + 32) |= 2u;
      *(_DWORD *)(a1 + 24) = v7;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100095774()
{
}

uint64_t sub_1000957AC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v23);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 40), *(_DWORD *)(a2 + 48) + *(_DWORD *)(a1 + 48));
  if (*(int *)(a2 + 48) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 40) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 52);
      uint64_t v7 = *(int *)(a1 + 48);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 56))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 40), v6 + 1);
          int v6 = *(_DWORD *)(a1 + 52);
        }
        *(_DWORD *)(a1 + 52) = v6 + 1;
        sub_1000C323C();
      }
      uint64_t v8 = *(void *)(a1 + 40);
      *(_DWORD *)(a1 + 48) = v7 + 1;
      sub_1000AD848(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 48));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 64), *(_DWORD *)(a2 + 72) + *(_DWORD *)(a1 + 72));
  if (*(int *)(a2 + 72) >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      uint64_t v10 = *(void *)(*(void *)(a2 + 64) + 8 * v9);
      int v11 = *(_DWORD *)(a1 + 76);
      uint64_t v12 = *(int *)(a1 + 72);
      if ((int)v12 >= v11)
      {
        if (v11 == *(_DWORD *)(a1 + 80))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 64), v11 + 1);
          int v11 = *(_DWORD *)(a1 + 76);
        }
        *(_DWORD *)(a1 + 76) = v11 + 1;
        sub_1000C31D8();
      }
      uint64_t v13 = *(void *)(a1 + 64);
      *(_DWORD *)(a1 + 72) = v12 + 1;
      sub_1000ACDD4(*(void *)(v13 + 8 * v12), v10);
      ++v9;
    }
    while (v9 < *(int *)(a2 + 72));
  }
  LOBYTE(v14) = *(unsigned char *)(a2 + 96);
  if ((_BYTE)v14)
  {
    if (*(unsigned char *)(a2 + 96))
    {
      *(_DWORD *)(a1 + 96) |= 1u;
      uint64_t v15 = *(void *)(a1 + 16);
      if (!v15) {
        operator new();
      }
      uint64_t v16 = *(void *)(a2 + 16);
      if (!v16) {
        uint64_t v16 = *(void *)(qword_1008AC008 + 16);
      }
      sub_1000984E4(v15, v16);
      int v14 = *(_DWORD *)(a2 + 96);
    }
    if ((v14 & 2) != 0)
    {
      unsigned int v17 = *(_DWORD *)(a2 + 24);
      if (v17 > 0x1B || ((1 << v17) & 0xDDB54EF) == 0) {
        sub_10040FF40();
      }
      *(_DWORD *)(a1 + 96) |= 2u;
      *(_DWORD *)(a1 + 24) = v17;
      int v14 = *(_DWORD *)(a2 + 96);
    }
    if ((v14 & 4) != 0)
    {
      int v18 = *(_DWORD *)(a2 + 28);
      *(_DWORD *)(a1 + 96) |= 4u;
      *(_DWORD *)(a1 + 28) = v18;
      int v14 = *(_DWORD *)(a2 + 96);
      if ((v14 & 8) == 0)
      {
LABEL_32:
        if ((v14 & 0x10) == 0) {
          return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
        }
LABEL_36:
        int v20 = *(const std::string **)(a2 + 32);
        *(_DWORD *)(a1 + 96) |= 0x10u;
        uint64_t v21 = *(std::string **)(a1 + 32);
        if (v21 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        std::string::operator=(v21, v20);
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
    }
    else if ((v14 & 8) == 0)
    {
      goto LABEL_32;
    }
    int v19 = *(_DWORD *)(a2 + 88);
    *(_DWORD *)(a1 + 96) |= 8u;
    *(_DWORD *)(a1 + 88) = v19;
    if ((*(_DWORD *)(a2 + 96) & 0x10) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_36;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100095AC4()
{
}

uint64_t sub_100095AFC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v46);
  }
  unsigned int v4 = *(_DWORD *)(a2 + 300);
  if (!(_BYTE)v4) {
    goto LABEL_21;
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 300) |= 1u;
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1008AC010 + 16);
    }
    sub_1000984E4(v5, v6);
    unsigned int v4 = *(_DWORD *)(a2 + 300);
  }
  if ((v4 & 2) != 0)
  {
    unsigned int v7 = *(_DWORD *)(a2 + 24);
    if (v7 > 0x1B || ((1 << v7) & 0xDDB54EF) == 0) {
      sub_10040FF6C();
    }
    *(_DWORD *)(a1 + 300) |= 2u;
    *(_DWORD *)(a1 + 24) = v7;
    unsigned int v4 = *(_DWORD *)(a2 + 300);
  }
  if ((v4 & 4) != 0)
  {
    int v32 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 300) |= 4u;
    *(_DWORD *)(a1 + 28) = v32;
    unsigned int v4 = *(_DWORD *)(a2 + 300);
    if ((v4 & 8) == 0)
    {
LABEL_16:
      if ((v4 & 0x10) == 0) {
        goto LABEL_17;
      }
      goto LABEL_81;
    }
  }
  else if ((v4 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v33 = *(_DWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 300) |= 8u;
  *(_DWORD *)(a1 + 120) = v33;
  unsigned int v4 = *(_DWORD *)(a2 + 300);
  if ((v4 & 0x10) == 0)
  {
LABEL_17:
    if ((v4 & 0x20) == 0) {
      goto LABEL_18;
    }
LABEL_84:
    uint64_t v36 = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 300) |= 0x20u;
    *(void *)(a1 + 40) = v36;
    unsigned int v4 = *(_DWORD *)(a2 + 300);
    if ((v4 & 0x40) == 0)
    {
LABEL_19:
      if ((v4 & 0x80) == 0) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }
    goto LABEL_85;
  }
LABEL_81:
  uint64_t v34 = *(const std::string **)(a2 + 32);
  *(_DWORD *)(a1 + 300) |= 0x10u;
  int v35 = *(std::string **)(a1 + 32);
  if (v35 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v35, v34);
  unsigned int v4 = *(_DWORD *)(a2 + 300);
  if ((v4 & 0x20) != 0) {
    goto LABEL_84;
  }
LABEL_18:
  if ((v4 & 0x40) == 0) {
    goto LABEL_19;
  }
LABEL_85:
  uint64_t v37 = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 300) |= 0x40u;
  *(void *)(a1 + 48) = v37;
  unsigned int v4 = *(_DWORD *)(a2 + 300);
  if ((v4 & 0x80) != 0)
  {
LABEL_20:
    uint64_t v8 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 300) |= 0x80u;
    *(void *)(a1 + 56) = v8;
    unsigned int v4 = *(_DWORD *)(a2 + 300);
  }
LABEL_21:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_31;
  }
  if ((v4 & 0x100) != 0)
  {
    uint64_t v14 = *(void *)(a2 + 64);
    *(_DWORD *)(a1 + 300) |= 0x100u;
    *(void *)(a1 + 64) = v14;
    unsigned int v4 = *(_DWORD *)(a2 + 300);
    if ((v4 & 0x200) == 0)
    {
LABEL_24:
      if ((v4 & 0x400) == 0) {
        goto LABEL_25;
      }
      goto LABEL_60;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_24;
  }
  uint64_t v15 = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 300) |= 0x200u;
  *(void *)(a1 + 72) = v15;
  unsigned int v4 = *(_DWORD *)(a2 + 300);
  if ((v4 & 0x400) == 0)
  {
LABEL_25:
    if ((v4 & 0x800) == 0) {
      goto LABEL_26;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t v16 = *(void *)(a2 + 80);
  *(_DWORD *)(a1 + 300) |= 0x400u;
  *(void *)(a1 + 80) = v16;
  unsigned int v4 = *(_DWORD *)(a2 + 300);
  if ((v4 & 0x800) == 0)
  {
LABEL_26:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t v17 = *(void *)(a2 + 88);
  *(_DWORD *)(a1 + 300) |= 0x800u;
  *(void *)(a1 + 88) = v17;
  unsigned int v4 = *(_DWORD *)(a2 + 300);
  if ((v4 & 0x1000) == 0)
  {
LABEL_27:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t v18 = *(void *)(a2 + 96);
  *(_DWORD *)(a1 + 300) |= 0x1000u;
  *(void *)(a1 + 96) = v18;
  unsigned int v4 = *(_DWORD *)(a2 + 300);
  if ((v4 & 0x2000) == 0)
  {
LABEL_28:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_64;
  }
LABEL_63:
  uint64_t v19 = *(void *)(a2 + 104);
  *(_DWORD *)(a1 + 300) |= 0x2000u;
  *(void *)(a1 + 104) = v19;
  unsigned int v4 = *(_DWORD *)(a2 + 300);
  if ((v4 & 0x4000) == 0)
  {
LABEL_29:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_30;
  }
LABEL_64:
  uint64_t v20 = *(void *)(a2 + 112);
  *(_DWORD *)(a1 + 300) |= 0x4000u;
  *(void *)(a1 + 112) = v20;
  unsigned int v4 = *(_DWORD *)(a2 + 300);
  if ((v4 & 0x8000) != 0)
  {
LABEL_30:
    uint64_t v9 = *(void *)(a2 + 128);
    *(_DWORD *)(a1 + 300) |= 0x8000u;
    *(void *)(a1 + 128) = v9;
    unsigned int v4 = *(_DWORD *)(a2 + 300);
  }
LABEL_31:
  if ((v4 & 0xFF0000) == 0) {
    goto LABEL_41;
  }
  if ((v4 & 0x10000) != 0)
  {
    uint64_t v21 = *(void *)(a2 + 136);
    *(_DWORD *)(a1 + 300) |= 0x10000u;
    *(void *)(a1 + 136) = v21;
    unsigned int v4 = *(_DWORD *)(a2 + 300);
    if ((v4 & 0x20000) == 0)
    {
LABEL_34:
      if ((v4 & 0x40000) == 0) {
        goto LABEL_35;
      }
      goto LABEL_68;
    }
  }
  else if ((v4 & 0x20000) == 0)
  {
    goto LABEL_34;
  }
  uint64_t v22 = *(void *)(a2 + 144);
  *(_DWORD *)(a1 + 300) |= 0x20000u;
  *(void *)(a1 + 144) = v22;
  unsigned int v4 = *(_DWORD *)(a2 + 300);
  if ((v4 & 0x40000) == 0)
  {
LABEL_35:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_69;
  }
LABEL_68:
  uint64_t v23 = *(void *)(a2 + 152);
  *(_DWORD *)(a1 + 300) |= 0x40000u;
  *(void *)(a1 + 152) = v23;
  unsigned int v4 = *(_DWORD *)(a2 + 300);
  if ((v4 & 0x80000) == 0)
  {
LABEL_36:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_70;
  }
LABEL_69:
  uint64_t v24 = *(void *)(a2 + 160);
  *(_DWORD *)(a1 + 300) |= 0x80000u;
  *(void *)(a1 + 160) = v24;
  unsigned int v4 = *(_DWORD *)(a2 + 300);
  if ((v4 & 0x100000) == 0)
  {
LABEL_37:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_71;
  }
LABEL_70:
  uint64_t v25 = *(void *)(a2 + 168);
  *(_DWORD *)(a1 + 300) |= 0x100000u;
  *(void *)(a1 + 168) = v25;
  unsigned int v4 = *(_DWORD *)(a2 + 300);
  if ((v4 & 0x200000) == 0)
  {
LABEL_38:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_72;
  }
LABEL_71:
  uint64_t v26 = *(void *)(a2 + 176);
  *(_DWORD *)(a1 + 300) |= 0x200000u;
  *(void *)(a1 + 176) = v26;
  unsigned int v4 = *(_DWORD *)(a2 + 300);
  if ((v4 & 0x400000) == 0)
  {
LABEL_39:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_40;
  }
LABEL_72:
  uint64_t v27 = *(void *)(a2 + 184);
  *(_DWORD *)(a1 + 300) |= 0x400000u;
  *(void *)(a1 + 184) = v27;
  unsigned int v4 = *(_DWORD *)(a2 + 300);
  if ((v4 & 0x800000) != 0)
  {
LABEL_40:
    uint64_t v10 = *(void *)(a2 + 192);
    *(_DWORD *)(a1 + 300) |= 0x800000u;
    *(void *)(a1 + 192) = v10;
    unsigned int v4 = *(_DWORD *)(a2 + 300);
  }
LABEL_41:
  if (!HIBYTE(v4)) {
    goto LABEL_50;
  }
  if ((v4 & 0x1000000) != 0)
  {
    uint64_t v38 = *(void *)(a2 + 200);
    *(_DWORD *)(a1 + 300) |= 0x1000000u;
    *(void *)(a1 + 200) = v38;
    unsigned int v4 = *(_DWORD *)(a2 + 300);
    if ((v4 & 0x2000000) == 0)
    {
LABEL_44:
      if ((v4 & 0x4000000) == 0) {
        goto LABEL_45;
      }
      goto LABEL_89;
    }
  }
  else if ((v4 & 0x2000000) == 0)
  {
    goto LABEL_44;
  }
  uint64_t v39 = *(void *)(a2 + 208);
  *(_DWORD *)(a1 + 300) |= 0x2000000u;
  *(void *)(a1 + 208) = v39;
  unsigned int v4 = *(_DWORD *)(a2 + 300);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_45:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_90;
  }
LABEL_89:
  uint64_t v40 = *(void *)(a2 + 216);
  *(_DWORD *)(a1 + 300) |= 0x4000000u;
  *(void *)(a1 + 216) = v40;
  unsigned int v4 = *(_DWORD *)(a2 + 300);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_46:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_91;
  }
LABEL_90:
  int v41 = *(_DWORD *)(a2 + 124);
  *(_DWORD *)(a1 + 300) |= 0x8000000u;
  *(_DWORD *)(a1 + 124) = v41;
  unsigned int v4 = *(_DWORD *)(a2 + 300);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_47:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_92;
  }
LABEL_91:
  uint64_t v42 = *(void *)(a2 + 224);
  *(_DWORD *)(a1 + 300) |= 0x10000000u;
  *(void *)(a1 + 224) = v42;
  unsigned int v4 = *(_DWORD *)(a2 + 300);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_48:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_49;
    }
LABEL_93:
    uint64_t v44 = *(void *)(a2 + 240);
    *(_DWORD *)(a1 + 300) |= 0x40000000u;
    *(void *)(a1 + 240) = v44;
    if ((*(_DWORD *)(a2 + 300) & 0x80000000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_94;
  }
LABEL_92:
  uint64_t v43 = *(void *)(a2 + 232);
  *(_DWORD *)(a1 + 300) |= 0x20000000u;
  *(void *)(a1 + 232) = v43;
  unsigned int v4 = *(_DWORD *)(a2 + 300);
  if ((v4 & 0x40000000) != 0) {
    goto LABEL_93;
  }
LABEL_49:
  if ((v4 & 0x80000000) == 0) {
    goto LABEL_50;
  }
LABEL_94:
  uint64_t v45 = *(void *)(a2 + 248);
  *(_DWORD *)(a1 + 300) |= 0x80000000;
  *(void *)(a1 + 248) = v45;
LABEL_50:
  LOBYTE(v11) = *(unsigned char *)(a2 + 304);
  if (!(_BYTE)v11) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 304))
  {
    uint64_t v28 = *(void *)(a2 + 256);
    *(_DWORD *)(a1 + 304) |= 1u;
    *(void *)(a1 + 256) = v28;
    int v11 = *(_DWORD *)(a2 + 304);
    if ((v11 & 2) == 0)
    {
LABEL_53:
      if ((v11 & 4) == 0) {
        goto LABEL_54;
      }
      goto LABEL_76;
    }
  }
  else if ((*(unsigned char *)(a2 + 304) & 2) == 0)
  {
    goto LABEL_53;
  }
  uint64_t v29 = *(void *)(a2 + 264);
  *(_DWORD *)(a1 + 304) |= 2u;
  *(void *)(a1 + 264) = v29;
  int v11 = *(_DWORD *)(a2 + 304);
  if ((v11 & 4) == 0)
  {
LABEL_54:
    if ((v11 & 8) == 0) {
      goto LABEL_55;
    }
LABEL_77:
    uint64_t v31 = *(void *)(a2 + 280);
    *(_DWORD *)(a1 + 304) |= 8u;
    *(void *)(a1 + 280) = v31;
    if ((*(_DWORD *)(a2 + 304) & 0x10) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_56;
  }
LABEL_76:
  uint64_t v30 = *(void *)(a2 + 272);
  *(_DWORD *)(a1 + 304) |= 4u;
  *(void *)(a1 + 272) = v30;
  int v11 = *(_DWORD *)(a2 + 304);
  if ((v11 & 8) != 0) {
    goto LABEL_77;
  }
LABEL_55:
  if ((v11 & 0x10) != 0)
  {
LABEL_56:
    uint64_t v12 = *(void *)(a2 + 288);
    *(_DWORD *)(a1 + 304) |= 0x10u;
    *(void *)(a1 + 288) = v12;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000960DC()
{
}

uint64_t sub_100096114(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v29);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 48), *(_DWORD *)(a2 + 56) + *(_DWORD *)(a1 + 56));
  if (*(int *)(a2 + 56) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 48) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 60);
      uint64_t v7 = *(int *)(a1 + 56);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 64))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 48), v6 + 1);
          int v6 = *(_DWORD *)(a1 + 60);
        }
        *(_DWORD *)(a1 + 60) = v6 + 1;
        sub_1000C3174();
      }
      uint64_t v8 = *(void *)(a1 + 48);
      *(_DWORD *)(a1 + 56) = v7 + 1;
      sub_1000AB604(*(_DWORD **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 56));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 80), *(_DWORD *)(a2 + 88) + *(_DWORD *)(a1 + 88));
  if (*(int *)(a2 + 88) >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      uint64_t v10 = *(void *)(*(void *)(a2 + 80) + 8 * v9);
      int v11 = *(_DWORD *)(a1 + 92);
      uint64_t v12 = *(int *)(a1 + 88);
      if ((int)v12 >= v11)
      {
        if (v11 == *(_DWORD *)(a1 + 96))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 80), v11 + 1);
          int v11 = *(_DWORD *)(a1 + 92);
        }
        *(_DWORD *)(a1 + 92) = v11 + 1;
        sub_1000C3174();
      }
      uint64_t v13 = *(void *)(a1 + 80);
      *(_DWORD *)(a1 + 88) = v12 + 1;
      sub_1000AB604(*(_DWORD **)(v13 + 8 * v12), v10);
      ++v9;
    }
    while (v9 < *(int *)(a2 + 88));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 104), *(_DWORD *)(a2 + 112) + *(_DWORD *)(a1 + 112));
  if (*(int *)(a2 + 112) >= 1)
  {
    uint64_t v14 = 0;
    do
    {
      uint64_t v15 = *(void *)(*(void *)(a2 + 104) + 8 * v14);
      int v16 = *(_DWORD *)(a1 + 116);
      uint64_t v17 = *(int *)(a1 + 112);
      if ((int)v17 >= v16)
      {
        if (v16 == *(_DWORD *)(a1 + 120))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 104), v16 + 1);
          int v16 = *(_DWORD *)(a1 + 116);
        }
        *(_DWORD *)(a1 + 116) = v16 + 1;
        sub_1000C3174();
      }
      uint64_t v18 = *(void *)(a1 + 104);
      *(_DWORD *)(a1 + 112) = v17 + 1;
      sub_1000AB604(*(_DWORD **)(v18 + 8 * v17), v15);
      ++v14;
    }
    while (v14 < *(int *)(a2 + 112));
  }
  int v19 = *(_DWORD *)(a2 + 132);
  if ((_BYTE)v19)
  {
    if (v19)
    {
      uint64_t v24 = *(void *)(a2 + 16);
      *(_DWORD *)(a1 + 132) |= 1u;
      *(void *)(a1 + 16) = v24;
      int v19 = *(_DWORD *)(a2 + 132);
      if ((v19 & 2) == 0)
      {
LABEL_30:
        if ((v19 & 4) == 0) {
          goto LABEL_31;
        }
        goto LABEL_41;
      }
    }
    else if ((v19 & 2) == 0)
    {
      goto LABEL_30;
    }
    int v25 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 132) |= 2u;
    *(_DWORD *)(a1 + 24) = v25;
    int v19 = *(_DWORD *)(a2 + 132);
    if ((v19 & 4) == 0)
    {
LABEL_31:
      if ((v19 & 8) == 0) {
        goto LABEL_32;
      }
      goto LABEL_42;
    }
LABEL_41:
    int v26 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 132) |= 4u;
    *(_DWORD *)(a1 + 28) = v26;
    int v19 = *(_DWORD *)(a2 + 132);
    if ((v19 & 8) == 0)
    {
LABEL_32:
      if ((v19 & 0x10) == 0) {
        goto LABEL_34;
      }
      goto LABEL_33;
    }
LABEL_42:
    *(_DWORD *)(a1 + 132) |= 8u;
    uint64_t v27 = *(void *)(a1 + 32);
    if (!v27) {
      operator new();
    }
    uint64_t v28 = *(void *)(a2 + 32);
    if (!v28) {
      uint64_t v28 = *(void *)(qword_1008AC018 + 32);
    }
    sub_1000984E4(v27, v28);
    int v19 = *(_DWORD *)(a2 + 132);
    if ((v19 & 0x10) == 0) {
      goto LABEL_34;
    }
LABEL_33:
    int v20 = *(_DWORD *)(a2 + 72);
    *(_DWORD *)(a1 + 132) |= 0x10u;
    *(_DWORD *)(a1 + 72) = v20;
    int v19 = *(_DWORD *)(a2 + 132);
LABEL_34:
    if ((v19 & 0x20) != 0)
    {
      uint64_t v21 = *(void *)(a2 + 40);
      *(_DWORD *)(a1 + 132) |= 0x20u;
      *(void *)(a1 + 40) = v21;
      int v19 = *(_DWORD *)(a2 + 132);
    }
  }
  if ((v19 & 0x200) != 0)
  {
    int v22 = *(_DWORD *)(a2 + 76);
    *(_DWORD *)(a1 + 132) |= 0x200u;
    *(_DWORD *)(a1 + 76) = v22;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000964B8()
{
}

uint64_t sub_1000964F0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v21);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 64), *(_DWORD *)(a2 + 72) + *(_DWORD *)(a1 + 72));
  if (*(int *)(a2 + 72) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 64) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 76);
      uint64_t v7 = *(int *)(a1 + 72);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 80))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 64), v6 + 1);
          int v6 = *(_DWORD *)(a1 + 76);
        }
        *(_DWORD *)(a1 + 76) = v6 + 1;
        sub_1000C3174();
      }
      uint64_t v8 = *(void *)(a1 + 64);
      *(_DWORD *)(a1 + 72) = v7 + 1;
      sub_1000AB604(*(_DWORD **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 72));
  }
  int v9 = *(_DWORD *)(a2 + 96);
  if (!(_BYTE)v9) {
    goto LABEL_21;
  }
  if (v9)
  {
    uint64_t v13 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 96) |= 1u;
    *(void *)(a1 + 16) = v13;
    int v9 = *(_DWORD *)(a2 + 96);
    if ((v9 & 2) == 0)
    {
LABEL_14:
      if ((v9 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_26;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_14;
  }
  int v14 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 96) |= 2u;
  *(_DWORD *)(a1 + 24) = v14;
  int v9 = *(_DWORD *)(a2 + 96);
  if ((v9 & 4) == 0)
  {
LABEL_15:
    if ((v9 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_27;
  }
LABEL_26:
  int v15 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 96) |= 4u;
  *(_DWORD *)(a1 + 28) = v15;
  int v9 = *(_DWORD *)(a2 + 96);
  if ((v9 & 8) == 0)
  {
LABEL_16:
    if ((v9 & 0x10) == 0) {
      goto LABEL_17;
    }
    goto LABEL_32;
  }
LABEL_27:
  *(_DWORD *)(a1 + 96) |= 8u;
  uint64_t v16 = *(void *)(a1 + 32);
  if (!v16) {
    operator new();
  }
  uint64_t v17 = *(void *)(a2 + 32);
  if (!v17) {
    uint64_t v17 = *(void *)(qword_1008AC020 + 32);
  }
  sub_1000984E4(v16, v17);
  int v9 = *(_DWORD *)(a2 + 96);
  if ((v9 & 0x10) == 0)
  {
LABEL_17:
    if ((v9 & 0x20) == 0) {
      goto LABEL_18;
    }
LABEL_33:
    int v19 = *(_DWORD *)(a2 + 44);
    *(_DWORD *)(a1 + 96) |= 0x20u;
    *(_DWORD *)(a1 + 44) = v19;
    int v9 = *(_DWORD *)(a2 + 96);
    if ((v9 & 0x40) == 0)
    {
LABEL_19:
      if ((v9 & 0x80) == 0) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }
    goto LABEL_34;
  }
LABEL_32:
  int v18 = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 96) |= 0x10u;
  *(_DWORD *)(a1 + 40) = v18;
  int v9 = *(_DWORD *)(a2 + 96);
  if ((v9 & 0x20) != 0) {
    goto LABEL_33;
  }
LABEL_18:
  if ((v9 & 0x40) == 0) {
    goto LABEL_19;
  }
LABEL_34:
  uint64_t v20 = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 96) |= 0x40u;
  *(void *)(a1 + 48) = v20;
  int v9 = *(_DWORD *)(a2 + 96);
  if ((v9 & 0x80) != 0)
  {
LABEL_20:
    uint64_t v10 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 96) |= 0x80u;
    *(void *)(a1 + 56) = v10;
    int v9 = *(_DWORD *)(a2 + 96);
  }
LABEL_21:
  if ((v9 & 0x200) != 0)
  {
    int v11 = *(_DWORD *)(a2 + 88);
    *(_DWORD *)(a1 + 96) |= 0x200u;
    *(_DWORD *)(a1 + 88) = v11;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100096788()
{
}

uint64_t sub_1000967C0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v52);
  }
  unsigned int v4 = *(_DWORD *)(a2 + 232);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v12 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 232) |= 1u;
    *(void *)(a1 + 16) = v12;
    unsigned int v4 = *(_DWORD *)(a2 + 232);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_62;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v13 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 232) |= 2u;
  *(_DWORD *)(a1 + 24) = v13;
  unsigned int v4 = *(_DWORD *)(a2 + 232);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_64;
  }
LABEL_62:
  unsigned int v14 = *(_DWORD *)(a2 + 28);
  if ((sub_10008D5D8(v14) & 1) == 0) {
    sub_10040FFC4();
  }
  *(_DWORD *)(a1 + 232) |= 4u;
  *(_DWORD *)(a1 + 28) = v14;
  unsigned int v4 = *(_DWORD *)(a2 + 232);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_65;
  }
LABEL_64:
  int v15 = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 232) |= 8u;
  *(_DWORD *)(a1 + 40) = v15;
  unsigned int v4 = *(_DWORD *)(a2 + 232);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_66:
    uint64_t v17 = *(void *)(a2 + 48);
    *(_DWORD *)(a1 + 232) |= 0x20u;
    *(void *)(a1 + 48) = v17;
    unsigned int v4 = *(_DWORD *)(a2 + 232);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_67;
  }
LABEL_65:
  uint64_t v16 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 232) |= 0x10u;
  *(void *)(a1 + 32) = v16;
  unsigned int v4 = *(_DWORD *)(a2 + 232);
  if ((v4 & 0x20) != 0) {
    goto LABEL_66;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_67:
  unsigned int v18 = *(_DWORD *)(a2 + 44);
  if (v18 >= 2) {
    sub_10040FF98();
  }
  *(_DWORD *)(a1 + 232) |= 0x40u;
  *(_DWORD *)(a1 + 44) = v18;
  unsigned int v4 = *(_DWORD *)(a2 + 232);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    uint64_t v5 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 232) |= 0x80u;
    *(void *)(a1 + 56) = v5;
    unsigned int v4 = *(_DWORD *)(a2 + 232);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_23;
  }
  if ((v4 & 0x100) != 0)
  {
    int v19 = *(_DWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 232) |= 0x100u;
    *(_DWORD *)(a1 + 64) = v19;
    unsigned int v4 = *(_DWORD *)(a2 + 232);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_72;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  int v20 = *(_DWORD *)(a2 + 68);
  *(_DWORD *)(a1 + 232) |= 0x200u;
  *(_DWORD *)(a1 + 68) = v20;
  unsigned int v4 = *(_DWORD *)(a2 + 232);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_73;
  }
LABEL_72:
  int v21 = *(_DWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 232) |= 0x400u;
  *(_DWORD *)(a1 + 72) = v21;
  unsigned int v4 = *(_DWORD *)(a2 + 232);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_74;
  }
LABEL_73:
  int v22 = *(_DWORD *)(a2 + 76);
  *(_DWORD *)(a1 + 232) |= 0x800u;
  *(_DWORD *)(a1 + 76) = v22;
  unsigned int v4 = *(_DWORD *)(a2 + 232);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_75;
  }
LABEL_74:
  int v23 = *(_DWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 232) |= 0x1000u;
  *(_DWORD *)(a1 + 88) = v23;
  unsigned int v4 = *(_DWORD *)(a2 + 232);
  if ((v4 & 0x2000) == 0)
  {
LABEL_20:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_76;
  }
LABEL_75:
  uint64_t v24 = *(void *)(a2 + 80);
  *(_DWORD *)(a1 + 232) |= 0x2000u;
  *(void *)(a1 + 80) = v24;
  unsigned int v4 = *(_DWORD *)(a2 + 232);
  if ((v4 & 0x4000) == 0)
  {
LABEL_21:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
LABEL_76:
  uint64_t v25 = *(void *)(a2 + 96);
  *(_DWORD *)(a1 + 232) |= 0x4000u;
  *(void *)(a1 + 96) = v25;
  unsigned int v4 = *(_DWORD *)(a2 + 232);
  if ((v4 & 0x8000) != 0)
  {
LABEL_22:
    int v6 = *(_DWORD *)(a2 + 92);
    *(_DWORD *)(a1 + 232) |= 0x8000u;
    *(_DWORD *)(a1 + 92) = v6;
    unsigned int v4 = *(_DWORD *)(a2 + 232);
  }
LABEL_23:
  if ((v4 & 0xFF0000) == 0) {
    goto LABEL_33;
  }
  if ((v4 & 0x10000) != 0)
  {
    int v26 = *(_DWORD *)(a2 + 104);
    *(_DWORD *)(a1 + 232) |= 0x10000u;
    *(_DWORD *)(a1 + 104) = v26;
    unsigned int v4 = *(_DWORD *)(a2 + 232);
    if ((v4 & 0x20000) == 0)
    {
LABEL_26:
      if ((v4 & 0x40000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_80;
    }
  }
  else if ((v4 & 0x20000) == 0)
  {
    goto LABEL_26;
  }
  int v27 = *(_DWORD *)(a2 + 108);
  *(_DWORD *)(a1 + 232) |= 0x20000u;
  *(_DWORD *)(a1 + 108) = v27;
  unsigned int v4 = *(_DWORD *)(a2 + 232);
  if ((v4 & 0x40000) == 0)
  {
LABEL_27:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_81;
  }
LABEL_80:
  uint64_t v28 = *(void *)(a2 + 112);
  *(_DWORD *)(a1 + 232) |= 0x40000u;
  *(void *)(a1 + 112) = v28;
  unsigned int v4 = *(_DWORD *)(a2 + 232);
  if ((v4 & 0x80000) == 0)
  {
LABEL_28:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_82;
  }
LABEL_81:
  uint64_t v29 = *(void *)(a2 + 120);
  *(_DWORD *)(a1 + 232) |= 0x80000u;
  *(void *)(a1 + 120) = v29;
  unsigned int v4 = *(_DWORD *)(a2 + 232);
  if ((v4 & 0x100000) == 0)
  {
LABEL_29:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_83;
  }
LABEL_82:
  int v30 = *(_DWORD *)(a2 + 128);
  *(_DWORD *)(a1 + 232) |= 0x100000u;
  *(_DWORD *)(a1 + 128) = v30;
  unsigned int v4 = *(_DWORD *)(a2 + 232);
  if ((v4 & 0x200000) == 0)
  {
LABEL_30:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_84;
  }
LABEL_83:
  int v31 = *(_DWORD *)(a2 + 132);
  *(_DWORD *)(a1 + 232) |= 0x200000u;
  *(_DWORD *)(a1 + 132) = v31;
  unsigned int v4 = *(_DWORD *)(a2 + 232);
  if ((v4 & 0x400000) == 0)
  {
LABEL_31:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_32;
  }
LABEL_84:
  int v32 = *(_DWORD *)(a2 + 136);
  *(_DWORD *)(a1 + 232) |= 0x400000u;
  *(_DWORD *)(a1 + 136) = v32;
  unsigned int v4 = *(_DWORD *)(a2 + 232);
  if ((v4 & 0x800000) != 0)
  {
LABEL_32:
    int v7 = *(_DWORD *)(a2 + 140);
    *(_DWORD *)(a1 + 232) |= 0x800000u;
    *(_DWORD *)(a1 + 140) = v7;
    unsigned int v4 = *(_DWORD *)(a2 + 232);
  }
LABEL_33:
  if (!HIBYTE(v4)) {
    goto LABEL_42;
  }
  if ((v4 & 0x1000000) != 0)
  {
    int v44 = *(_DWORD *)(a2 + 144);
    *(_DWORD *)(a1 + 232) |= 0x1000000u;
    *(_DWORD *)(a1 + 144) = v44;
    unsigned int v4 = *(_DWORD *)(a2 + 232);
    if ((v4 & 0x2000000) == 0)
    {
LABEL_36:
      if ((v4 & 0x4000000) == 0) {
        goto LABEL_37;
      }
      goto LABEL_101;
    }
  }
  else if ((v4 & 0x2000000) == 0)
  {
    goto LABEL_36;
  }
  int v45 = *(_DWORD *)(a2 + 148);
  *(_DWORD *)(a1 + 232) |= 0x2000000u;
  *(_DWORD *)(a1 + 148) = v45;
  unsigned int v4 = *(_DWORD *)(a2 + 232);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_37:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_102;
  }
LABEL_101:
  int v46 = *(_DWORD *)(a2 + 152);
  *(_DWORD *)(a1 + 232) |= 0x4000000u;
  *(_DWORD *)(a1 + 152) = v46;
  unsigned int v4 = *(_DWORD *)(a2 + 232);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_38:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_103;
  }
LABEL_102:
  int v47 = *(_DWORD *)(a2 + 156);
  *(_DWORD *)(a1 + 232) |= 0x8000000u;
  *(_DWORD *)(a1 + 156) = v47;
  unsigned int v4 = *(_DWORD *)(a2 + 232);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_39:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_104;
  }
LABEL_103:
  int v48 = *(_DWORD *)(a2 + 160);
  *(_DWORD *)(a1 + 232) |= 0x10000000u;
  *(_DWORD *)(a1 + 160) = v48;
  unsigned int v4 = *(_DWORD *)(a2 + 232);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_40:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_41;
    }
LABEL_105:
    int v50 = *(_DWORD *)(a2 + 168);
    *(_DWORD *)(a1 + 232) |= 0x40000000u;
    *(_DWORD *)(a1 + 168) = v50;
    if ((*(_DWORD *)(a2 + 232) & 0x80000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_106;
  }
LABEL_104:
  int v49 = *(_DWORD *)(a2 + 164);
  *(_DWORD *)(a1 + 232) |= 0x20000000u;
  *(_DWORD *)(a1 + 164) = v49;
  unsigned int v4 = *(_DWORD *)(a2 + 232);
  if ((v4 & 0x40000000) != 0) {
    goto LABEL_105;
  }
LABEL_41:
  if ((v4 & 0x80000000) == 0) {
    goto LABEL_42;
  }
LABEL_106:
  int v51 = *(_DWORD *)(a2 + 172);
  *(_DWORD *)(a1 + 232) |= 0x80000000;
  *(_DWORD *)(a1 + 172) = v51;
LABEL_42:
  int v8 = *(_DWORD *)(a2 + 236);
  if (!(_BYTE)v8) {
    goto LABEL_52;
  }
  if (v8)
  {
    int v33 = *(_DWORD *)(a2 + 176);
    *(_DWORD *)(a1 + 236) |= 1u;
    *(_DWORD *)(a1 + 176) = v33;
    int v8 = *(_DWORD *)(a2 + 236);
    if ((v8 & 2) == 0)
    {
LABEL_45:
      if ((v8 & 4) == 0) {
        goto LABEL_46;
      }
      goto LABEL_88;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_45;
  }
  int v34 = *(_DWORD *)(a2 + 180);
  *(_DWORD *)(a1 + 236) |= 2u;
  *(_DWORD *)(a1 + 180) = v34;
  int v8 = *(_DWORD *)(a2 + 236);
  if ((v8 & 4) == 0)
  {
LABEL_46:
    if ((v8 & 8) == 0) {
      goto LABEL_47;
    }
    goto LABEL_89;
  }
LABEL_88:
  int v35 = *(_DWORD *)(a2 + 184);
  *(_DWORD *)(a1 + 236) |= 4u;
  *(_DWORD *)(a1 + 184) = v35;
  int v8 = *(_DWORD *)(a2 + 236);
  if ((v8 & 8) == 0)
  {
LABEL_47:
    if ((v8 & 0x10) == 0) {
      goto LABEL_48;
    }
    goto LABEL_90;
  }
LABEL_89:
  int v36 = *(_DWORD *)(a2 + 188);
  *(_DWORD *)(a1 + 236) |= 8u;
  *(_DWORD *)(a1 + 188) = v36;
  int v8 = *(_DWORD *)(a2 + 236);
  if ((v8 & 0x10) == 0)
  {
LABEL_48:
    if ((v8 & 0x20) == 0) {
      goto LABEL_49;
    }
    goto LABEL_91;
  }
LABEL_90:
  int v37 = *(_DWORD *)(a2 + 192);
  *(_DWORD *)(a1 + 236) |= 0x10u;
  *(_DWORD *)(a1 + 192) = v37;
  int v8 = *(_DWORD *)(a2 + 236);
  if ((v8 & 0x20) == 0)
  {
LABEL_49:
    if ((v8 & 0x40) == 0) {
      goto LABEL_50;
    }
    goto LABEL_92;
  }
LABEL_91:
  int v38 = *(_DWORD *)(a2 + 196);
  *(_DWORD *)(a1 + 236) |= 0x20u;
  *(_DWORD *)(a1 + 196) = v38;
  int v8 = *(_DWORD *)(a2 + 236);
  if ((v8 & 0x40) == 0)
  {
LABEL_50:
    if ((v8 & 0x80) == 0) {
      goto LABEL_52;
    }
    goto LABEL_51;
  }
LABEL_92:
  int v39 = *(_DWORD *)(a2 + 200);
  *(_DWORD *)(a1 + 236) |= 0x40u;
  *(_DWORD *)(a1 + 200) = v39;
  int v8 = *(_DWORD *)(a2 + 236);
  if ((v8 & 0x80) != 0)
  {
LABEL_51:
    int v9 = *(_DWORD *)(a2 + 204);
    *(_DWORD *)(a1 + 236) |= 0x80u;
    *(_DWORD *)(a1 + 204) = v9;
    int v8 = *(_DWORD *)(a2 + 236);
  }
LABEL_52:
  if ((v8 & 0xFF00) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v8 & 0x100) != 0)
  {
    int v40 = *(_DWORD *)(a2 + 208);
    *(_DWORD *)(a1 + 236) |= 0x100u;
    *(_DWORD *)(a1 + 208) = v40;
    int v8 = *(_DWORD *)(a2 + 236);
    if ((v8 & 0x200) == 0)
    {
LABEL_55:
      if ((v8 & 0x400) == 0) {
        goto LABEL_56;
      }
      goto LABEL_96;
    }
  }
  else if ((v8 & 0x200) == 0)
  {
    goto LABEL_55;
  }
  int v41 = *(_DWORD *)(a2 + 212);
  *(_DWORD *)(a1 + 236) |= 0x200u;
  *(_DWORD *)(a1 + 212) = v41;
  int v8 = *(_DWORD *)(a2 + 236);
  if ((v8 & 0x400) == 0)
  {
LABEL_56:
    if ((v8 & 0x800) == 0) {
      goto LABEL_57;
    }
LABEL_97:
    int v43 = *(_DWORD *)(a2 + 220);
    *(_DWORD *)(a1 + 236) |= 0x800u;
    *(_DWORD *)(a1 + 220) = v43;
    if ((*(_DWORD *)(a2 + 236) & 0x1000) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_58;
  }
LABEL_96:
  int v42 = *(_DWORD *)(a2 + 216);
  *(_DWORD *)(a1 + 236) |= 0x400u;
  *(_DWORD *)(a1 + 216) = v42;
  int v8 = *(_DWORD *)(a2 + 236);
  if ((v8 & 0x800) != 0) {
    goto LABEL_97;
  }
LABEL_57:
  if ((v8 & 0x1000) != 0)
  {
LABEL_58:
    int v10 = *(_DWORD *)(a2 + 224);
    *(_DWORD *)(a1 + 236) |= 0x1000u;
    *(_DWORD *)(a1 + 224) = v10;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100096E30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100096E48(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 68);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 68))
  {
    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 68) |= 1u;
    *(void *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 68);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_16;
    }
  }
  else if ((*(unsigned char *)(a2 + 68) & 2) == 0)
  {
    goto LABEL_6;
  }
  int v8 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 68) |= 2u;
  *(_DWORD *)(a1 + 24) = v8;
  int v4 = *(_DWORD *)(a2 + 68);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
LABEL_16:
  unsigned int v9 = *(_DWORD *)(a2 + 28);
  if ((sub_10008D5D8(v9) & 1) == 0) {
    sub_10041001C();
  }
  *(_DWORD *)(a1 + 68) |= 4u;
  *(_DWORD *)(a1 + 28) = v9;
  int v4 = *(_DWORD *)(a2 + 68);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_18:
  int v10 = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 68) |= 8u;
  *(_DWORD *)(a1 + 40) = v10;
  int v4 = *(_DWORD *)(a2 + 68);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v11 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 68) |= 0x10u;
  *(void *)(a1 + 32) = v11;
  int v4 = *(_DWORD *)(a2 + 68);
  if ((v4 & 0x20) == 0)
  {
LABEL_10:
    if ((v4 & 0x40) == 0) {
      goto LABEL_11;
    }
LABEL_21:
    unsigned int v13 = *(_DWORD *)(a2 + 44);
    if (v13 >= 2) {
      sub_10040FFF0();
    }
    *(_DWORD *)(a1 + 68) |= 0x40u;
    *(_DWORD *)(a1 + 44) = v13;
    if ((*(_DWORD *)(a2 + 68) & 0x80) != 0) {
      goto LABEL_12;
    }
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
LABEL_20:
  uint64_t v12 = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 68) |= 0x20u;
  *(void *)(a1 + 48) = v12;
  int v4 = *(_DWORD *)(a2 + 68);
  if ((v4 & 0x40) != 0) {
    goto LABEL_21;
  }
LABEL_11:
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    uint64_t v5 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 68) |= 0x80u;
    *(void *)(a1 + 56) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100096FEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100097004(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v27);
  }
  int v4 = *(_DWORD *)(a2 + 104);
  if (!(_BYTE)v4) {
    goto LABEL_15;
  }
  if (v4)
  {
    unsigned int v5 = *(_DWORD *)(a2 + 16);
    if (v5 >= 2) {
      sub_100410048();
    }
    *(_DWORD *)(a1 + 104) |= 1u;
    *(_DWORD *)(a1 + 16) = v5;
    int v4 = *(_DWORD *)(a2 + 104);
  }
  if ((v4 & 2) != 0)
  {
    int v21 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 104) |= 2u;
    *(_DWORD *)(a1 + 20) = v21;
    int v4 = *(_DWORD *)(a2 + 104);
    if ((v4 & 4) == 0)
    {
LABEL_9:
      if ((v4 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_48;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_9;
  }
  int v22 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 104) |= 4u;
  *(_DWORD *)(a1 + 24) = v22;
  int v4 = *(_DWORD *)(a2 + 104);
  if ((v4 & 8) == 0)
  {
LABEL_10:
    if ((v4 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_49;
  }
LABEL_48:
  int v23 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 104) |= 8u;
  *(_DWORD *)(a1 + 28) = v23;
  int v4 = *(_DWORD *)(a2 + 104);
  if ((v4 & 0x10) == 0)
  {
LABEL_11:
    if ((v4 & 0x20) == 0) {
      goto LABEL_12;
    }
LABEL_50:
    int v25 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 104) |= 0x20u;
    *(_DWORD *)(a1 + 36) = v25;
    int v4 = *(_DWORD *)(a2 + 104);
    if ((v4 & 0x40) == 0)
    {
LABEL_13:
      if ((v4 & 0x80) == 0) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
    goto LABEL_51;
  }
LABEL_49:
  int v24 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 104) |= 0x10u;
  *(_DWORD *)(a1 + 32) = v24;
  int v4 = *(_DWORD *)(a2 + 104);
  if ((v4 & 0x20) != 0) {
    goto LABEL_50;
  }
LABEL_12:
  if ((v4 & 0x40) == 0) {
    goto LABEL_13;
  }
LABEL_51:
  char v26 = *(unsigned char *)(a2 + 40);
  *(_DWORD *)(a1 + 104) |= 0x40u;
  *(unsigned char *)(a1 + 40) = v26;
  int v4 = *(_DWORD *)(a2 + 104);
  if ((v4 & 0x80) != 0)
  {
LABEL_14:
    int v6 = *(_DWORD *)(a2 + 44);
    *(_DWORD *)(a1 + 104) |= 0x80u;
    *(_DWORD *)(a1 + 44) = v6;
    int v4 = *(_DWORD *)(a2 + 104);
  }
LABEL_15:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_25;
  }
  if ((v4 & 0x100) != 0)
  {
    int v10 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 104) |= 0x100u;
    *(_DWORD *)(a1 + 48) = v10;
    int v4 = *(_DWORD *)(a2 + 104);
    if ((v4 & 0x200) == 0)
    {
LABEL_18:
      if ((v4 & 0x400) == 0) {
        goto LABEL_19;
      }
      goto LABEL_35;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_18;
  }
  int v11 = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 104) |= 0x200u;
  *(_DWORD *)(a1 + 52) = v11;
  int v4 = *(_DWORD *)(a2 + 104);
  if ((v4 & 0x400) == 0)
  {
LABEL_19:
    if ((v4 & 0x800) == 0) {
      goto LABEL_20;
    }
    goto LABEL_36;
  }
LABEL_35:
  int v12 = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 104) |= 0x400u;
  *(_DWORD *)(a1 + 56) = v12;
  int v4 = *(_DWORD *)(a2 + 104);
  if ((v4 & 0x800) == 0)
  {
LABEL_20:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_37;
  }
LABEL_36:
  int v13 = *(_DWORD *)(a2 + 60);
  *(_DWORD *)(a1 + 104) |= 0x800u;
  *(_DWORD *)(a1 + 60) = v13;
  int v4 = *(_DWORD *)(a2 + 104);
  if ((v4 & 0x1000) == 0)
  {
LABEL_21:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_38;
  }
LABEL_37:
  int v14 = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 104) |= 0x1000u;
  *(_DWORD *)(a1 + 64) = v14;
  int v4 = *(_DWORD *)(a2 + 104);
  if ((v4 & 0x2000) == 0)
  {
LABEL_22:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_39;
  }
LABEL_38:
  int v15 = *(_DWORD *)(a2 + 68);
  *(_DWORD *)(a1 + 104) |= 0x2000u;
  *(_DWORD *)(a1 + 68) = v15;
  int v4 = *(_DWORD *)(a2 + 104);
  if ((v4 & 0x4000) == 0)
  {
LABEL_23:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
LABEL_39:
  int v16 = *(_DWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 104) |= 0x4000u;
  *(_DWORD *)(a1 + 72) = v16;
  int v4 = *(_DWORD *)(a2 + 104);
  if ((v4 & 0x8000) != 0)
  {
LABEL_24:
    int v7 = *(_DWORD *)(a2 + 76);
    *(_DWORD *)(a1 + 104) |= 0x8000u;
    *(_DWORD *)(a1 + 76) = v7;
    int v4 = *(_DWORD *)(a2 + 104);
  }
LABEL_25:
  if ((v4 & 0xFF0000) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v4 & 0x10000) != 0)
  {
    int v17 = *(_DWORD *)(a2 + 80);
    *(_DWORD *)(a1 + 104) |= 0x10000u;
    *(_DWORD *)(a1 + 80) = v17;
    int v4 = *(_DWORD *)(a2 + 104);
    if ((v4 & 0x20000) == 0)
    {
LABEL_28:
      if ((v4 & 0x40000) == 0) {
        goto LABEL_29;
      }
      goto LABEL_43;
    }
  }
  else if ((v4 & 0x20000) == 0)
  {
    goto LABEL_28;
  }
  int v18 = *(_DWORD *)(a2 + 84);
  *(_DWORD *)(a1 + 104) |= 0x20000u;
  *(_DWORD *)(a1 + 84) = v18;
  int v4 = *(_DWORD *)(a2 + 104);
  if ((v4 & 0x40000) == 0)
  {
LABEL_29:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_30;
    }
LABEL_44:
    int v20 = *(_DWORD *)(a2 + 92);
    *(_DWORD *)(a1 + 104) |= 0x80000u;
    *(_DWORD *)(a1 + 92) = v20;
    if ((*(_DWORD *)(a2 + 104) & 0x100000) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_31;
  }
LABEL_43:
  int v19 = *(_DWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 104) |= 0x40000u;
  *(_DWORD *)(a1 + 88) = v19;
  int v4 = *(_DWORD *)(a2 + 104);
  if ((v4 & 0x80000) != 0) {
    goto LABEL_44;
  }
LABEL_30:
  if ((v4 & 0x100000) != 0)
  {
LABEL_31:
    int v8 = *(_DWORD *)(a2 + 96);
    *(_DWORD *)(a1 + 104) |= 0x100000u;
    *(_DWORD *)(a1 + 96) = v8;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100097340(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100097358(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 16) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 28);
      uint64_t v7 = *(int *)(a1 + 24);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), v6 + 1);
          int v6 = *(_DWORD *)(a1 + 28);
        }
        *(_DWORD *)(a1 + 28) = v6 + 1;
        sub_1000C3174();
      }
      uint64_t v8 = *(void *)(a1 + 16);
      *(_DWORD *)(a1 + 24) = v7 + 1;
      sub_1000AB604(*(_DWORD **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 24));
  }
  int v9 = *(_DWORD *)(a2 + 88);
  if (!(_BYTE)v9) {
    goto LABEL_22;
  }
  if (v9)
  {
    unsigned int v10 = *(_DWORD *)(a2 + 48);
    if ((sub_10008D5D8(v10) & 1) == 0) {
      sub_100410074();
    }
    *(_DWORD *)(a1 + 88) |= 1u;
    *(_DWORD *)(a1 + 48) = v10;
    int v9 = *(_DWORD *)(a2 + 88);
  }
  if ((v9 & 4) != 0)
  {
    uint64_t v15 = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 88) |= 4u;
    *(void *)(a1 + 40) = v15;
    int v9 = *(_DWORD *)(a2 + 88);
    if ((v9 & 8) == 0)
    {
LABEL_17:
      if ((v9 & 0x10) == 0) {
        goto LABEL_18;
      }
      goto LABEL_30;
    }
  }
  else if ((v9 & 8) == 0)
  {
    goto LABEL_17;
  }
  uint64_t v16 = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 88) |= 8u;
  *(void *)(a1 + 56) = v16;
  int v9 = *(_DWORD *)(a2 + 88);
  if ((v9 & 0x10) == 0)
  {
LABEL_18:
    if ((v9 & 0x20) == 0) {
      goto LABEL_19;
    }
LABEL_31:
    int v18 = *(_DWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 88) |= 0x20u;
    *(_DWORD *)(a1 + 64) = v18;
    int v9 = *(_DWORD *)(a2 + 88);
    if ((v9 & 0x40) == 0)
    {
LABEL_20:
      if ((v9 & 0x80) == 0) {
        goto LABEL_22;
      }
      goto LABEL_21;
    }
    goto LABEL_32;
  }
LABEL_30:
  int v17 = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 88) |= 0x10u;
  *(_DWORD *)(a1 + 52) = v17;
  int v9 = *(_DWORD *)(a2 + 88);
  if ((v9 & 0x20) != 0) {
    goto LABEL_31;
  }
LABEL_19:
  if ((v9 & 0x40) == 0) {
    goto LABEL_20;
  }
LABEL_32:
  int v19 = *(_DWORD *)(a2 + 68);
  *(_DWORD *)(a1 + 88) |= 0x40u;
  *(_DWORD *)(a1 + 68) = v19;
  int v9 = *(_DWORD *)(a2 + 88);
  if ((v9 & 0x80) != 0)
  {
LABEL_21:
    int v11 = *(_DWORD *)(a2 + 72);
    *(_DWORD *)(a1 + 88) |= 0x80u;
    *(_DWORD *)(a1 + 72) = v11;
    int v9 = *(_DWORD *)(a2 + 88);
  }
LABEL_22:
  if ((v9 & 0xFF00) != 0)
  {
    if ((v9 & 0x100) != 0)
    {
      int v12 = *(_DWORD *)(a2 + 76);
      *(_DWORD *)(a1 + 88) |= 0x100u;
      *(_DWORD *)(a1 + 76) = v12;
      int v9 = *(_DWORD *)(a2 + 88);
    }
    if ((v9 & 0x200) != 0)
    {
      int v13 = *(_DWORD *)(a2 + 80);
      *(_DWORD *)(a1 + 88) |= 0x200u;
      *(_DWORD *)(a1 + 80) = v13;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000975C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000975D8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 52);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 52))
    {
      unsigned int v5 = *(_DWORD *)(a2 + 16);
      if ((sub_10008D5D8(v5) & 1) == 0) {
        sub_1004100A0();
      }
      *(_DWORD *)(a1 + 52) |= 1u;
      *(_DWORD *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 52);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 20);
      *(_DWORD *)(a1 + 52) |= 2u;
      *(_DWORD *)(a1 + 20) = v6;
      int v4 = *(_DWORD *)(a2 + 52);
    }
    if ((v4 & 4) != 0)
    {
      *(_DWORD *)(a1 + 52) |= 4u;
      uint64_t v7 = *(_DWORD **)(a1 + 24);
      if (!v7) {
        operator new();
      }
      uint64_t v8 = *(void *)(a2 + 24);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_1008AC068 + 24);
      }
      sub_1000AB604(v7, v8);
      int v4 = *(_DWORD *)(a2 + 52);
    }
    if ((v4 & 8) != 0)
    {
      *(_DWORD *)(a1 + 52) |= 8u;
      int v9 = *(_DWORD **)(a1 + 32);
      if (!v9) {
        operator new();
      }
      uint64_t v10 = *(void *)(a2 + 32);
      if (!v10) {
        uint64_t v10 = *(void *)(qword_1008AC068 + 32);
      }
      sub_1000AB604(v9, v10);
      int v4 = *(_DWORD *)(a2 + 52);
    }
    if ((v4 & 0x10) != 0)
    {
      int v11 = *(_DWORD *)(a2 + 40);
      *(_DWORD *)(a1 + 52) |= 0x10u;
      *(_DWORD *)(a1 + 40) = v11;
      int v4 = *(_DWORD *)(a2 + 52);
    }
    if ((v4 & 0x20) != 0)
    {
      int v12 = *(_DWORD *)(a2 + 44);
      *(_DWORD *)(a1 + 52) |= 0x20u;
      *(_DWORD *)(a1 + 44) = v12;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100097798()
{
}

uint64_t sub_1000977D4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 48), *(_DWORD *)(a2 + 56) + *(_DWORD *)(a1 + 56));
  if (*(int *)(a2 + 56) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 48) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 60);
      uint64_t v7 = *(int *)(a1 + 56);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 64))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 48), v6 + 1);
          int v6 = *(_DWORD *)(a1 + 60);
        }
        *(_DWORD *)(a1 + 60) = v6 + 1;
        sub_1000C32A0();
      }
      uint64_t v8 = *(void *)(a1 + 48);
      *(_DWORD *)(a1 + 56) = v7 + 1;
      sub_1000B510C(*(_DWORD **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 56));
  }
  LOBYTE(v9) = *(unsigned char *)(a2 + 76);
  if (!(_BYTE)v9) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 76))
  {
    uint64_t v12 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 76) |= 1u;
    *(void *)(a1 + 16) = v12;
    int v9 = *(_DWORD *)(a2 + 76);
    if ((v9 & 2) == 0)
    {
LABEL_14:
      if ((v9 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_22;
    }
  }
  else if ((*(unsigned char *)(a2 + 76) & 2) == 0)
  {
    goto LABEL_14;
  }
  int v13 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 76) |= 2u;
  *(_DWORD *)(a1 + 24) = v13;
  int v9 = *(_DWORD *)(a2 + 76);
  if ((v9 & 4) == 0)
  {
LABEL_15:
    if ((v9 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v14 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 76) |= 4u;
  *(_DWORD *)(a1 + 28) = v14;
  int v9 = *(_DWORD *)(a2 + 76);
  if ((v9 & 8) == 0)
  {
LABEL_16:
    if ((v9 & 0x10) == 0) {
      goto LABEL_17;
    }
LABEL_24:
    *(_DWORD *)(a1 + 76) |= 0x10u;
    uint64_t v16 = *(void *)(a1 + 32);
    if (!v16) {
      operator new();
    }
    uint64_t v17 = *(void *)(a2 + 32);
    if (!v17) {
      uint64_t v17 = *(void *)(qword_1008AC030 + 32);
    }
    sub_1000984E4(v16, v17);
    if ((*(_DWORD *)(a2 + 76) & 0x20) != 0) {
      goto LABEL_18;
    }
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
LABEL_23:
  int v15 = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 76) |= 8u;
  *(_DWORD *)(a1 + 40) = v15;
  int v9 = *(_DWORD *)(a2 + 76);
  if ((v9 & 0x10) != 0) {
    goto LABEL_24;
  }
LABEL_17:
  if ((v9 & 0x20) != 0)
  {
LABEL_18:
    int v10 = *(_DWORD *)(a2 + 44);
    *(_DWORD *)(a1 + 76) |= 0x20u;
    *(_DWORD *)(a1 + 44) = v10;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100097A0C()
{
}

uint64_t sub_100097A44(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v23);
  }
  int v4 = *(_DWORD *)(a2 + 88);
  if (!(_BYTE)v4) {
    goto LABEL_20;
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 88) |= 1u;
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1008AC070 + 16);
    }
    sub_1000984E4(v5, v6);
    int v4 = *(_DWORD *)(a2 + 88);
  }
  if ((v4 & 2) != 0)
  {
    unsigned int v7 = *(_DWORD *)(a2 + 24);
    if (v7 >= 2) {
      sub_1004100CC();
    }
    *(_DWORD *)(a1 + 88) |= 2u;
    *(_DWORD *)(a1 + 24) = v7;
    int v4 = *(_DWORD *)(a2 + 88);
  }
  if ((v4 & 4) != 0)
  {
    int v18 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 88) |= 4u;
    *(_DWORD *)(a1 + 28) = v18;
    int v4 = *(_DWORD *)(a2 + 88);
    if ((v4 & 8) == 0)
    {
LABEL_15:
      if ((v4 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_41;
    }
  }
  else if ((v4 & 8) == 0)
  {
    goto LABEL_15;
  }
  int v19 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 88) |= 8u;
  *(_DWORD *)(a1 + 32) = v19;
  int v4 = *(_DWORD *)(a2 + 88);
  if ((v4 & 0x10) == 0)
  {
LABEL_16:
    if ((v4 & 0x20) == 0) {
      goto LABEL_17;
    }
LABEL_42:
    int v21 = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 88) |= 0x20u;
    *(_DWORD *)(a1 + 40) = v21;
    int v4 = *(_DWORD *)(a2 + 88);
    if ((v4 & 0x40) == 0)
    {
LABEL_18:
      if ((v4 & 0x80) == 0) {
        goto LABEL_20;
      }
      goto LABEL_19;
    }
    goto LABEL_43;
  }
LABEL_41:
  int v20 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 88) |= 0x10u;
  *(_DWORD *)(a1 + 36) = v20;
  int v4 = *(_DWORD *)(a2 + 88);
  if ((v4 & 0x20) != 0) {
    goto LABEL_42;
  }
LABEL_17:
  if ((v4 & 0x40) == 0) {
    goto LABEL_18;
  }
LABEL_43:
  int v22 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 88) |= 0x40u;
  *(_DWORD *)(a1 + 44) = v22;
  int v4 = *(_DWORD *)(a2 + 88);
  if ((v4 & 0x80) != 0)
  {
LABEL_19:
    int v8 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 88) |= 0x80u;
    *(_DWORD *)(a1 + 48) = v8;
    int v4 = *(_DWORD *)(a2 + 88);
  }
LABEL_20:
  if ((v4 & 0xFF00) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v4 & 0x100) != 0)
  {
    int v11 = *(_DWORD *)(a2 + 52);
    *(_DWORD *)(a1 + 88) |= 0x100u;
    *(_DWORD *)(a1 + 52) = v11;
    int v4 = *(_DWORD *)(a2 + 88);
    if ((v4 & 0x200) == 0)
    {
LABEL_23:
      if ((v4 & 0x400) == 0) {
        goto LABEL_24;
      }
      goto LABEL_33;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_23;
  }
  int v12 = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 88) |= 0x200u;
  *(_DWORD *)(a1 + 56) = v12;
  int v4 = *(_DWORD *)(a2 + 88);
  if ((v4 & 0x400) == 0)
  {
LABEL_24:
    if ((v4 & 0x800) == 0) {
      goto LABEL_25;
    }
    goto LABEL_34;
  }
LABEL_33:
  int v13 = *(_DWORD *)(a2 + 60);
  *(_DWORD *)(a1 + 88) |= 0x400u;
  *(_DWORD *)(a1 + 60) = v13;
  int v4 = *(_DWORD *)(a2 + 88);
  if ((v4 & 0x800) == 0)
  {
LABEL_25:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_35;
  }
LABEL_34:
  int v14 = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 88) |= 0x800u;
  *(_DWORD *)(a1 + 64) = v14;
  int v4 = *(_DWORD *)(a2 + 88);
  if ((v4 & 0x1000) == 0)
  {
LABEL_26:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_36;
  }
LABEL_35:
  int v15 = *(_DWORD *)(a2 + 68);
  *(_DWORD *)(a1 + 88) |= 0x1000u;
  *(_DWORD *)(a1 + 68) = v15;
  int v4 = *(_DWORD *)(a2 + 88);
  if ((v4 & 0x2000) == 0)
  {
LABEL_27:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_28;
    }
LABEL_37:
    int v17 = *(_DWORD *)(a2 + 76);
    *(_DWORD *)(a1 + 88) |= 0x4000u;
    *(_DWORD *)(a1 + 76) = v17;
    if ((*(_DWORD *)(a2 + 88) & 0x8000) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_29;
  }
LABEL_36:
  int v16 = *(_DWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 88) |= 0x2000u;
  *(_DWORD *)(a1 + 72) = v16;
  int v4 = *(_DWORD *)(a2 + 88);
  if ((v4 & 0x4000) != 0) {
    goto LABEL_37;
  }
LABEL_28:
  if ((v4 & 0x8000) != 0)
  {
LABEL_29:
    char v9 = *(unsigned char *)(a2 + 80);
    *(_DWORD *)(a1 + 88) |= 0x8000u;
    *(unsigned char *)(a1 + 80) = v9;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100097D1C()
{
}

uint64_t sub_100097D54(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (*(unsigned char *)(a2 + 28))
  {
    *(_DWORD *)(a1 + 28) |= 1u;
    uint64_t v4 = *(void *)(a1 + 16);
    if (!v4) {
      operator new();
    }
    uint64_t v5 = *(void *)(a2 + 16);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_1008AC078 + 16);
    }
    sub_100098EE8(v4, v5);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100097E34()
{
}

uint64_t sub_100097E6C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v33);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 128), *(_DWORD *)(a2 + 136) + *(_DWORD *)(a1 + 136));
  if (*(int *)(a2 + 136) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 128) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 140);
      uint64_t v7 = *(int *)(a1 + 136);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 144))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 128), v6 + 1);
          int v6 = *(_DWORD *)(a1 + 140);
        }
        *(_DWORD *)(a1 + 140) = v6 + 1;
        sub_1000C3304();
      }
      uint64_t v8 = *(void *)(a1 + 128);
      *(_DWORD *)(a1 + 136) = v7 + 1;
      sub_1000BB0A4(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 136));
  }
  int v9 = *(_DWORD *)(a2 + 160);
  if ((_BYTE)v9)
  {
    if (v9)
    {
      uint64_t v16 = *(void *)(a2 + 16);
      *(_DWORD *)(a1 + 160) |= 1u;
      *(void *)(a1 + 16) = v16;
      int v9 = *(_DWORD *)(a2 + 160);
      if ((v9 & 2) == 0)
      {
LABEL_14:
        if ((v9 & 4) == 0) {
          goto LABEL_15;
        }
        goto LABEL_43;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_14;
    }
    uint64_t v17 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 160) |= 2u;
    *(void *)(a1 + 24) = v17;
    int v9 = *(_DWORD *)(a2 + 160);
    if ((v9 & 4) == 0)
    {
LABEL_15:
      if ((v9 & 8) == 0) {
        goto LABEL_16;
      }
      goto LABEL_44;
    }
LABEL_43:
    int v18 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 160) |= 4u;
    *(_DWORD *)(a1 + 32) = v18;
    int v9 = *(_DWORD *)(a2 + 160);
    if ((v9 & 8) == 0)
    {
LABEL_16:
      if ((v9 & 0x10) == 0) {
        goto LABEL_17;
      }
      goto LABEL_46;
    }
LABEL_44:
    unsigned int v19 = *(_DWORD *)(a2 + 36);
    if ((sub_10008D5D8(v19) & 1) == 0) {
      sub_1004101A8();
    }
    *(_DWORD *)(a1 + 160) |= 8u;
    *(_DWORD *)(a1 + 36) = v19;
    int v9 = *(_DWORD *)(a2 + 160);
    if ((v9 & 0x10) == 0)
    {
LABEL_17:
      if ((v9 & 0x20) == 0) {
        goto LABEL_18;
      }
      goto LABEL_51;
    }
LABEL_46:
    *(_DWORD *)(a1 + 160) |= 0x10u;
    uint64_t v20 = *(void *)(a1 + 40);
    if (!v20) {
      operator new();
    }
    uint64_t v21 = *(void *)(a2 + 40);
    if (!v21) {
      uint64_t v21 = *(void *)(qword_1008AC050 + 40);
    }
    sub_1000984E4(v20, v21);
    int v9 = *(_DWORD *)(a2 + 160);
    if ((v9 & 0x20) == 0)
    {
LABEL_18:
      if ((v9 & 0x40) == 0) {
        goto LABEL_20;
      }
      goto LABEL_19;
    }
LABEL_51:
    unsigned int v22 = *(_DWORD *)(a2 + 48);
    if (v22 > 0x1B || ((1 << v22) & 0xDDB54EF) == 0) {
      sub_10041017C();
    }
    *(_DWORD *)(a1 + 160) |= 0x20u;
    *(_DWORD *)(a1 + 48) = v22;
    int v9 = *(_DWORD *)(a2 + 160);
    if ((v9 & 0x40) == 0) {
      goto LABEL_20;
    }
LABEL_19:
    uint64_t v10 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 160) |= 0x40u;
    *(void *)(a1 + 56) = v10;
    int v9 = *(_DWORD *)(a2 + 160);
LABEL_20:
    if ((v9 & 0x80) != 0)
    {
      int v11 = *(_DWORD *)(a2 + 52);
      *(_DWORD *)(a1 + 160) |= 0x80u;
      *(_DWORD *)(a1 + 52) = v11;
      int v9 = *(_DWORD *)(a2 + 160);
    }
  }
  if ((v9 & 0xFF00) == 0) {
    goto LABEL_32;
  }
  if ((v9 & 0x100) != 0)
  {
    int v23 = *(const std::string **)(a2 + 64);
    *(_DWORD *)(a1 + 160) |= 0x100u;
    int v24 = *(std::string **)(a1 + 64);
    if (v24 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v24, v23);
    int v9 = *(_DWORD *)(a2 + 160);
    if ((v9 & 0x200) == 0)
    {
LABEL_25:
      if ((v9 & 0x400) == 0) {
        goto LABEL_26;
      }
      goto LABEL_59;
    }
  }
  else if ((v9 & 0x200) == 0)
  {
    goto LABEL_25;
  }
  int v25 = *(_DWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 160) |= 0x200u;
  *(_DWORD *)(a1 + 88) = v25;
  int v9 = *(_DWORD *)(a2 + 160);
  if ((v9 & 0x400) == 0)
  {
LABEL_26:
    if ((v9 & 0x800) == 0) {
      goto LABEL_27;
    }
    goto LABEL_60;
  }
LABEL_59:
  uint64_t v26 = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 160) |= 0x400u;
  *(void *)(a1 + 72) = v26;
  int v9 = *(_DWORD *)(a2 + 160);
  if ((v9 & 0x800) == 0)
  {
LABEL_27:
    if ((v9 & 0x1000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t v27 = *(void *)(a2 + 80);
  *(_DWORD *)(a1 + 160) |= 0x800u;
  *(void *)(a1 + 80) = v27;
  int v9 = *(_DWORD *)(a2 + 160);
  if ((v9 & 0x1000) == 0)
  {
LABEL_28:
    if ((v9 & 0x2000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t v28 = *(void *)(a2 + 96);
  *(_DWORD *)(a1 + 160) |= 0x1000u;
  *(void *)(a1 + 96) = v28;
  int v9 = *(_DWORD *)(a2 + 160);
  if ((v9 & 0x2000) == 0)
  {
LABEL_29:
    if ((v9 & 0x4000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_64;
  }
LABEL_62:
  unsigned int v29 = *(_DWORD *)(a2 + 92);
  if (v29 >= 4) {
    sub_100410150();
  }
  *(_DWORD *)(a1 + 160) |= 0x2000u;
  *(_DWORD *)(a1 + 92) = v29;
  int v9 = *(_DWORD *)(a2 + 160);
  if ((v9 & 0x4000) == 0)
  {
LABEL_30:
    if ((v9 & 0x8000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }
LABEL_64:
  unsigned int v30 = *(_DWORD *)(a2 + 104);
  if (v30 >= 4) {
    sub_100410124();
  }
  *(_DWORD *)(a1 + 160) |= 0x4000u;
  *(_DWORD *)(a1 + 104) = v30;
  int v9 = *(_DWORD *)(a2 + 160);
  if ((v9 & 0x8000) != 0)
  {
LABEL_31:
    int v12 = *(_DWORD *)(a2 + 108);
    *(_DWORD *)(a1 + 160) |= 0x8000u;
    *(_DWORD *)(a1 + 108) = v12;
    int v9 = *(_DWORD *)(a2 + 160);
  }
LABEL_32:
  if ((v9 & 0xFF0000) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v9 & 0x10000) != 0)
  {
    unsigned int v13 = *(_DWORD *)(a2 + 120);
    if ((sub_10008D674(v13) & 1) == 0) {
      sub_1004100F8();
    }
    *(_DWORD *)(a1 + 160) |= 0x10000u;
    *(_DWORD *)(a1 + 120) = v13;
    int v9 = *(_DWORD *)(a2 + 160);
  }
  if ((v9 & 0x20000) == 0)
  {
    if ((v9 & 0x40000) == 0) {
      goto LABEL_38;
    }
LABEL_68:
    int v32 = *(_DWORD *)(a2 + 124);
    *(_DWORD *)(a1 + 160) |= 0x40000u;
    *(_DWORD *)(a1 + 124) = v32;
    if ((*(_DWORD *)(a2 + 160) & 0x80000) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_39;
  }
  uint64_t v31 = *(void *)(a2 + 112);
  *(_DWORD *)(a1 + 160) |= 0x20000u;
  *(void *)(a1 + 112) = v31;
  int v9 = *(_DWORD *)(a2 + 160);
  if ((v9 & 0x40000) != 0) {
    goto LABEL_68;
  }
LABEL_38:
  if ((v9 & 0x80000) != 0)
  {
LABEL_39:
    int v14 = *(_DWORD *)(a2 + 152);
    *(_DWORD *)(a1 + 160) |= 0x80000u;
    *(_DWORD *)(a1 + 152) = v14;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100098308()
{
}

uint64_t sub_100098340(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1000983CC()
{
  return 1;
}

uint64_t sub_1000983D4()
{
  uint64_t v0 = qword_1008A0D08;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100089710;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A09B8;
}

void sub_100098468(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10009847C(uint64_t a1)
{
  *(void *)a1 = off_100849A98;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  return a1;
}

void sub_1000984D0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000984E4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      uint64_t v5 = *(const std::string **)(a2 + 16);
      *(_DWORD *)(a1 + 32) |= 1u;
      int v6 = *(std::string **)(a1 + 16);
      if (v6 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      std::string::operator=(v6, v5);
      int v4 = *(_DWORD *)(a2 + 32);
    }
    if ((v4 & 2) != 0)
    {
      int v7 = *(_DWORD *)(a2 + 24);
      *(_DWORD *)(a1 + 32) |= 2u;
      *(_DWORD *)(a1 + 24) = v7;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000985E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000985F8(wireless_diagnostics::google::protobuf::Message *a1)
{
  *(void *)a1 = off_100849A98;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::Message *)((char *)a1 + 8);
  sub_100098658((uint64_t)a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message(a1);
}

uint64_t sub_100098658(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  return result;
}

void sub_1000986D0(wireless_diagnostics::google::protobuf::Message *a1)
{
  sub_1000985F8(a1);

  operator delete();
}

uint64_t sub_100098708(uint64_t result, int a2)
{
  *(_DWORD *)(result + 28) = a2;
  return result;
}

void sub_100098710()
{
}

void sub_100098750()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100098774(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 32))
  {
    if (*(unsigned char *)(a1 + 32))
    {
      uint64_t v1 = *(void *)(a1 + 16);
      if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v1 + 23) < 0)
        {
          **(unsigned char **)uint64_t v1 = 0;
          *(void *)(v1 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v1 = 0;
          *(unsigned char *)(v1 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(a1 + 24) = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 6) = 0;
  if (v3) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1000987CC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (unsigned int *)(a1 + 24);
  unsigned int v7 = a1 + 8;
  while (1)
  {
    while (1)
    {
      uint64_t v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v8;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v8 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v10 = TagFallback & 7;
      if (v10 != 2) {
        goto LABEL_17;
      }
      *(_DWORD *)(a1 + 32) |= 1u;
      if (*(_UNKNOWN **)(a1 + 16) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
      if (!result) {
        return result;
      }
      wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback();
      int v14 = (unsigned char *)*((void *)this + 1);
      unint64_t v11 = *((void *)this + 2);
      if ((unint64_t)v14 < v11 && *v14 == 16)
      {
        int v12 = v14 + 1;
        *((void *)this + 1) = v12;
LABEL_23:
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v15 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v12;
          int v15 = (unsigned __int8 *)(v12 + 1);
          *((void *)this + 1) = v15;
        }
        *(_DWORD *)(a1 + 32) |= 2u;
        if (v15 == (unsigned __int8 *)v11
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v10 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_23;
      }
    }
    else
    {
      int v10 = TagFallback & 7;
    }
LABEL_17:
    if (v10 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1000989AC(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 32);
  if (v6)
  {
    wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback();
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    int v6 = *(_DWORD *)(v5 + 32);
  }
  if ((v6 & 2) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), a2, a4);
  }
  int v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100098A58(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  int v5 = *((_DWORD *)this + 8);
  if (v5)
  {
    wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback();
    uint64_t v8 = *((void *)this + 2);
    *(unsigned char *)a2 = 10;
    if (*(char *)(v8 + 23) < 0) {
      int v9 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v8 + 8);
    }
    else {
      int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v8 + 23);
    }
    if (v9 > 0x7F)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (int)a2 + 1, v6);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v9;
      int v10 = a2 + 2;
    }
    int v11 = *(char *)(v8 + 23);
    if (v11 >= 0) {
      int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8;
    }
    else {
      int v12 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v8;
    }
    if (v11 >= 0) {
      unsigned int v13 = (const void *)*(unsigned __int8 *)(v8 + 23);
    }
    else {
      unsigned int v13 = (const void *)*(unsigned int *)(v8 + 8);
    }
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v12, v13, v10, v7);
    int v5 = *((_DWORD *)this + 8);
  }
  if ((v5 & 2) != 0)
  {
    int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    *(unsigned char *)a2 = 16;
    if (v14 > 0x7F)
    {
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, (int)a2 + 1, a3);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v14;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
  }
  uint64_t v17 = (void *)*((void *)this + 1);
  uint64_t v16 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v15 = v17;
  if (!v17 || *v15 == v15[1]) {
    return a2;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v16, a2, a3);
}

uint64_t sub_100098B84(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 32);
  if ((_BYTE)v3)
  {
    if ((*(unsigned char *)(a1 + 32) & 1) == 0)
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 32) & 2) == 0) {
        goto LABEL_19;
      }
LABEL_15:
      int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
      if (v12 >= 0x80) {
        int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2)
      }
            + 1;
      else {
        int v13 = 2;
      }
      uint64_t v4 = (v13 + v4);
      goto LABEL_19;
    }
    uint64_t v5 = *(void *)(a1 + 16);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    char v7 = v6;
    uint64_t v8 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
    }
    else {
      unint64_t v9 = v8;
    }
    if (v9 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9, a2);
      int v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v8 = *(void *)(v5 + 8);
      int v10 = v11 + 1;
      int v3 = *(_DWORD *)(a1 + 32);
      char v7 = *(unsigned char *)(v5 + 23);
    }
    else
    {
      int v10 = 2;
    }
    if (v7 < 0) {
      int v6 = v8;
    }
    uint64_t v4 = (v10 + v6);
    if ((v3 & 2) != 0) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_19:
  int v14 = *(void **)(a1 + 8);
  if (v14 && *v14 != v14[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

uint64_t sub_100098C60(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000984E4((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100098D34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100098D4C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100098DD8()
{
  return 1;
}

uint64_t sub_100098DE0()
{
  uint64_t v0 = qword_1008A0D08;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100089710;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A09C8;
}

void sub_100098E74(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100098E88(uint64_t a1)
{
  *(void *)a1 = off_100849B48;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  return a1;
}

void sub_100098ED4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100098EE8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      unsigned int v5 = *(_DWORD *)(a2 + 24);
      if ((sub_10008D5D8(v5) & 1) == 0) {
        sub_1004101D4();
      }
      *(_DWORD *)(a1 + 32) |= 1u;
      *(_DWORD *)(a1 + 24) = v5;
      int v4 = *(_DWORD *)(a2 + 32);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 32) |= 2u;
      uint64_t v6 = *(void *)(a1 + 16);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 16);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_1008ABF40 + 16);
      }
      sub_1000984E4(v6, v7);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100098FF8()
{
}

void sub_100099030(void *a1)
{
  *a1 = off_100849B48;
  if ((void *)qword_1008ABF40 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1000990C8(void *a1)
{
  sub_100099030(a1);

  operator delete();
}

uint64_t sub_100099100(uint64_t result, int a2)
{
  *(_DWORD *)(result + 28) = a2;
  return result;
}

void sub_100099108()
{
}

void sub_100099148()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10009916C(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  uint64_t v1 = this;
  char v2 = *((unsigned char *)this + 32);
  if (v2)
  {
    *((_DWORD *)this + 6) = 0;
    if ((v2 & 2) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)this + 2);
      if (this) {
        this = sub_100098774((uint64_t)this);
      }
    }
  }
  uint64_t v4 = *((void *)v1 + 1);
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v3 + 6) = 0;
  if (v4)
  {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return this;
}

uint64_t sub_1000991D4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_16;
        }
        unsigned int v24 = 0;
        int v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v24);
          if (!result) {
            return result;
          }
          signed int v11 = v24;
        }
        else
        {
          signed int v11 = *v10;
          *((void *)this + 1) = v10 + 1;
        }
        if (sub_10008D5D8(v11))
        {
          *(_DWORD *)(a1 + 32) |= 1u;
          *(_DWORD *)(a1 + 24) = v11;
        }
        else
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 1, v11);
        }
        int v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 < *((void *)this + 2) && *v13 == 18)
        {
          *((void *)this + 1) = v13 + 1;
          goto LABEL_27;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        int v9 = TagFallback & 7;
        goto LABEL_16;
      }
      int v9 = TagFallback & 7;
      if (v9 == 2) {
        break;
      }
LABEL_16:
      if (v9 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
    }
      }
LABEL_27:
    *(_DWORD *)(a1 + 32) |= 2u;
    uint64_t v14 = *(void *)(a1 + 16);
    if (!v14) {
      operator new();
    }
    unsigned int v25 = 0;
    int v15 = (char *)*((void *)this + 1);
    if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25)) {
        return 0;
      }
    }
    else
    {
      unsigned int v25 = *v15;
      *((void *)this + 1) = v15 + 1;
    }
    int v16 = *((_DWORD *)this + 14);
    int v17 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v16 + 1;
    if (v16 >= v17) {
      return 0;
    }
    int v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v25);
    if (!sub_1000987CC(v14, this, v19, v20) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
    int v21 = *((_DWORD *)this + 14);
    BOOL v22 = __OFSUB__(v21, 1);
    int v23 = v21 - 1;
    if (v23 < 0 == v22) {
      *((_DWORD *)this + 14) = v23;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

void sub_100099438()
{
}

uint64_t sub_10009945C(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 32);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 24), (int)a2, a4);
    int v6 = *(_DWORD *)(v5 + 32);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(void *)(v5 + 16);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1008ABF40 + 16);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  int v10 = *(void **)(v5 + 8);
  int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v8 = v10;
  if (v10 && *v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000994F8(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  char v3 = a2;
  if (*((unsigned char *)this + 32))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 6);
    *(unsigned char *)a2 = 8;
    int v6 = (char *)a2 + 1;
    if ((v5 & 0x80000000) != 0)
    {
      uint64_t v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v5, (unint64_t)v6, a3);
    }
    else
    {
      if (v5 <= 0x7F)
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v5;
        char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        goto LABEL_8;
      }
      uint64_t v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v5, v6, a3);
    }
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v7;
  }
LABEL_8:
  if ((*((unsigned char *)this + 32) & 2) != 0)
  {
    uint64_t v8 = (unsigned int *)*((void *)this + 2);
    if (!v8) {
      uint64_t v8 = *(unsigned int **)(qword_1008ABF40 + 16);
    }
    *(unsigned char *)char v3 = 18;
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8[7];
    if (v9 > 0x7F)
    {
      int v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v9;
      int v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
    char v3 = sub_100098A58((wireless_diagnostics::google::protobuf::internal::WireFormat *)v8, v10, a3);
  }
  int v13 = (void *)*((void *)this + 1);
  int v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  signed int v11 = v13;
  if (!v13 || *v11 == v11[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v12, v3, a3);
}

uint64_t sub_1000995EC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  char v3 = *(unsigned char *)(a1 + 32);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 32))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
      if ((v5 & 0x80000000) != 0)
      {
        uint64_t v4 = 11;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
      else if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)+ 1;
        if ((*(_DWORD *)(a1 + 32) & 2) == 0) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 32) & 2) == 0) {
        goto LABEL_19;
      }
    }
    uint64_t v6 = *(void *)(a1 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1008ABF40 + 16);
    }
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100098B84(v6, a2);
    int v8 = (int)v7;
    if (v7 >= 0x80) {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
    }
    else {
      int v9 = 1;
    }
    uint64_t v4 = (v4 + v8 + v9 + 1);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_19:
  int v10 = *(void **)(a1 + 8);
  if (v10 && *v10 != v10[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

uint64_t sub_1000996D4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100098EE8((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1000997A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000997C0(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10009984C()
{
  return 1;
}

uint64_t sub_100099854()
{
  uint64_t v0 = qword_1008A0D08;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100089710;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A09D8;
}

void sub_1000998E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_1000998FC(void *a1)
{
  *a1 = off_100849BF8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  a1[3] = 0;
  return a1;
}

void sub_10009994C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_100099960(wireless_diagnostics::google::protobuf::Message *a1)
{
  *(void *)a1 = off_100849BF8;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::Message *)((char *)a1 + 8);
  sub_100098658((uint64_t)a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message(a1);
}

void sub_1000999C4(wireless_diagnostics::google::protobuf::Message *a1)
{
  sub_100099960(a1);

  operator delete();
}

uint64_t sub_1000999FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 24) = a2;
  return result;
}

void sub_100099A04()
{
}

void sub_100099A44()
{
}

uint64_t sub_100099A68(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      uint64_t v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
      }
      if (TagFallback != 10) {
        break;
      }
      *(_DWORD *)(a1 + 28) |= 1u;
      if (*(_UNKNOWN **)(a1 + 16) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
      if (!result) {
        return result;
      }
      wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback();
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_100099BB0(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  if (*(unsigned char *)(this + 28))
  {
    wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback();
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  }
  uint64_t v7 = *(void **)(v4 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  uint64_t v5 = v7;
  if (v7 && *v5 != v5[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v6, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100099C44(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  if (*((unsigned char *)this + 28))
  {
    wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback();
    uint64_t v7 = *((void *)this + 2);
    *(unsigned char *)a2 = 10;
    if (*(char *)(v7 + 23) < 0) {
      int v8 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v7 + 8);
    }
    else {
      int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v7 + 23);
    }
    if (v8 > 0x7F)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)a2 + 1, v5);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v8;
      int v9 = a2 + 2;
    }
    int v10 = *(char *)(v7 + 23);
    if (v10 >= 0) {
      signed int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7;
    }
    else {
      signed int v11 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v7;
    }
    if (v10 >= 0) {
      int v12 = (const void *)*(unsigned __int8 *)(v7 + 23);
    }
    else {
      int v12 = (const void *)*(unsigned int *)(v7 + 8);
    }
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v11, v12, v9, v6);
  }
  int v15 = (void *)*((void *)this + 1);
  uint64_t v14 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v13 = v15;
  if (!v15 || *v13 == v13[1]) {
    return a2;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v14, a2, a3);
}

uint64_t sub_100099D3C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (*(unsigned char *)(a1 + 28))
  {
    uint64_t v4 = *(void *)(a1 + 16);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    char v6 = v5;
    uint64_t v7 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
    }
    else {
      unint64_t v8 = v7;
    }
    if (v8 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8, a2);
      int v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v7 = *(void *)(v4 + 8);
      int v9 = v10 + 1;
      char v6 = *(unsigned char *)(v4 + 23);
    }
    else
    {
      int v9 = 2;
    }
    if (v6 < 0) {
      int v5 = v7;
    }
    uint64_t v3 = (v9 + v5);
  }
  else
  {
    uint64_t v3 = 0;
  }
  signed int v11 = *(void **)(a1 + 8);
  if (v11 && *v11 != v11[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  }
  *(_DWORD *)(a1 + 24) = v3;
  return v3;
}

uint64_t sub_100099DE0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000937FC((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100099EB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100099ECC(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100099F58()
{
  return 1;
}

uint64_t sub_100099F60()
{
  uint64_t v0 = qword_1008A0D08;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100089710;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A09E8;
}

void sub_100099FF4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_10009A008(void *a1)
{
  *a1 = off_100849CA8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  a1[3] = 0;
  a1[4] = 0;
  a1[5] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  a1[7] = 0;
  a1[8] = 0;
  a1[6] = 0;
  return a1;
}

void sub_10009A064(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_10009A078(wireless_diagnostics::google::protobuf::Message *a1)
{
  *(void *)a1 = off_100849CA8;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::Message *)((char *)a1 + 8);
  sub_10009A0D8((uint64_t)a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message(a1);
}

uint64_t sub_10009A0D8(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  uint64_t v3 = *(void *)(result + 40);
  if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v3 != 0)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    operator delete();
  }
  return result;
}

void sub_10009A198(wireless_diagnostics::google::protobuf::Message *a1)
{
  sub_10009A078(a1);

  operator delete();
}

uint64_t sub_10009A1D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 64) = a2;
  return result;
}

void sub_10009A1D8()
{
}

void sub_10009A218()
{
}

uint64_t sub_10009A23C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v39 = (unsigned int *)(a1 + 24);
  char v6 = (unsigned int *)(a1 + 28);
  uint64_t v7 = (unsigned int *)(a1 + 32);
  unint64_t v8 = (unsigned int *)(a1 + 36);
  int v9 = (unsigned int *)(a1 + 48);
  int v10 = (unsigned int *)(a1 + 52);
  signed int v11 = (unsigned int *)(a1 + 56);
  int v12 = (unsigned int *)(a1 + 60);
  unsigned int v13 = a1 + 8;
  while (2)
  {
    uint64_t v14 = (char *)*((void *)this + 1);
    if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v14;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v14 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v16 = TagFallback & 7;
        if (v16 != 2) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 68) |= 1u;
        if (*(_UNKNOWN **)(a1 + 16) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (result)
        {
          wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback();
          unsigned int v29 = (unsigned char *)*((void *)this + 1);
          unint64_t v18 = *((void *)this + 2);
          if ((unint64_t)v29 < v18 && *v29 == 16)
          {
            uint64_t v19 = v29 + 1;
            *((void *)this + 1) = v19;
            goto LABEL_38;
          }
          continue;
        }
        return result;
      case 2u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_31;
        }
        uint64_t v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
LABEL_38:
        if ((unint64_t)v19 < v18 && (*v19 & 0x80000000) == 0)
        {
          *int v39 = *v19;
          unsigned int v30 = v19 + 1;
          *((void *)this + 1) = v30;
LABEL_43:
          *(_DWORD *)(a1 + 68) |= 2u;
          if ((unint64_t)v30 < v18 && *v30 == 24)
          {
            uint64_t v20 = v30 + 1;
            *((void *)this + 1) = v20;
            goto LABEL_46;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v39);
        if (result)
        {
          unsigned int v30 = (unsigned char *)*((void *)this + 1);
          unint64_t v18 = *((void *)this + 2);
          goto LABEL_43;
        }
        break;
      case 3u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_31;
        }
        uint64_t v20 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
LABEL_46:
        if ((unint64_t)v20 >= v18 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          uint64_t v31 = (unsigned char *)*((void *)this + 1);
          unint64_t v18 = *((void *)this + 2);
        }
        else
        {
          *char v6 = *v20;
          uint64_t v31 = v20 + 1;
          *((void *)this + 1) = v31;
        }
        *(_DWORD *)(a1 + 68) |= 4u;
        if ((unint64_t)v31 >= v18 || *v31 != 32) {
          continue;
        }
        int v21 = v31 + 1;
        *((void *)this + 1) = v21;
LABEL_54:
        if ((unint64_t)v21 >= v18 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v32 = (unsigned char *)*((void *)this + 1);
          unint64_t v18 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v21;
          int v32 = v21 + 1;
          *((void *)this + 1) = v32;
        }
        *(_DWORD *)(a1 + 68) |= 8u;
        if ((unint64_t)v32 >= v18 || *v32 != 40) {
          continue;
        }
        BOOL v22 = v32 + 1;
        *((void *)this + 1) = v22;
LABEL_62:
        if ((unint64_t)v22 >= v18 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v33 = (unsigned char *)*((void *)this + 1);
          unint64_t v18 = *((void *)this + 2);
        }
        else
        {
          *unint64_t v8 = *v22;
          int v33 = v22 + 1;
          *((void *)this + 1) = v33;
        }
        int v23 = *(_DWORD *)(a1 + 68) | 0x10;
        *(_DWORD *)(a1 + 68) = v23;
        if ((unint64_t)v33 >= v18 || *v33 != 50) {
          continue;
        }
        *((void *)this + 1) = v33 + 1;
LABEL_70:
        *(_DWORD *)(a1 + 68) = v23 | 0x20;
        if (*(_UNKNOWN **)(a1 + 40) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback();
        int v34 = (unsigned char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        if ((unint64_t)v34 >= v24 || *v34 != 56) {
          continue;
        }
        unsigned int v25 = v34 + 1;
        *((void *)this + 1) = v25;
LABEL_76:
        if ((unint64_t)v25 >= v24 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          int v35 = (unsigned char *)*((void *)this + 1);
          unint64_t v24 = *((void *)this + 2);
        }
        else
        {
          *int v9 = *v25;
          int v35 = v25 + 1;
          *((void *)this + 1) = v35;
        }
        *(_DWORD *)(a1 + 68) |= 0x40u;
        if ((unint64_t)v35 >= v24 || *v35 != 64) {
          continue;
        }
        uint64_t v26 = v35 + 1;
        *((void *)this + 1) = v26;
LABEL_84:
        if ((unint64_t)v26 >= v24 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!result) {
            return result;
          }
          int v36 = (unsigned char *)*((void *)this + 1);
          unint64_t v24 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v10 = *v26;
          int v36 = v26 + 1;
          *((void *)this + 1) = v36;
        }
        *(_DWORD *)(a1 + 68) |= 0x80u;
        if ((unint64_t)v36 >= v24 || *v36 != 72) {
          continue;
        }
        uint64_t v27 = v36 + 1;
        *((void *)this + 1) = v27;
LABEL_92:
        if ((unint64_t)v27 >= v24 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!result) {
            return result;
          }
          int v37 = (unsigned char *)*((void *)this + 1);
          unint64_t v24 = *((void *)this + 2);
        }
        else
        {
          *signed int v11 = *v27;
          int v37 = v27 + 1;
          *((void *)this + 1) = v37;
        }
        *(_DWORD *)(a1 + 68) |= 0x100u;
        if ((unint64_t)v37 >= v24 || *v37 != 80) {
          continue;
        }
        uint64_t v28 = v37 + 1;
        *((void *)this + 1) = v28;
LABEL_100:
        if ((unint64_t)v28 >= v24 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v12);
          if (!result) {
            return result;
          }
          int v38 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v24 = *((void *)this + 2);
        }
        else
        {
          *int v12 = *v28;
          int v38 = (unsigned __int8 *)(v28 + 1);
          *((void *)this + 1) = v38;
        }
        *(_DWORD *)(a1 + 68) |= 0x200u;
        if (v38 != (unsigned __int8 *)v24 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 4u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_31;
        }
        int v21 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_54;
      case 5u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_31;
        }
        BOOL v22 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_62;
      case 6u:
        int v16 = TagFallback & 7;
        if (v16 != 2) {
          goto LABEL_31;
        }
        int v23 = *(_DWORD *)(a1 + 68);
        goto LABEL_70;
      case 7u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_31;
        }
        unsigned int v25 = (char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_76;
      case 8u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_31;
        }
        uint64_t v26 = (char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_84;
      case 9u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_31;
        }
        uint64_t v27 = (char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_92;
      case 0xAu:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_31;
        }
        uint64_t v28 = (char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_100;
      default:
        int v16 = TagFallback & 7;
LABEL_31:
        if (v16 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v13, a4))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_10009A854(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 68);
  if (v6)
  {
    wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback();
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    int v6 = *(_DWORD *)(v5 + 68);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), a2, a4);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 28), a2, a4);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 32), a2, a4);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 36), a2, a4);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback();
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 48), a2, a4);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
LABEL_26:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(v5 + 56), a2, a4);
    if ((*(_DWORD *)(v5 + 68) & 0x200) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 52), a2, a4);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x100) != 0) {
    goto LABEL_26;
  }
LABEL_10:
  if ((v6 & 0x200) != 0) {
LABEL_11:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_DWORD *)(v5 + 60), a2, a4);
LABEL_12:
  int v9 = *(void **)(v5 + 8);
  unint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10009AA08(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  int v5 = *((_DWORD *)this + 17);
  if (v5)
  {
    wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback();
    uint64_t v8 = *((void *)this + 2);
    *(unsigned char *)a2 = 10;
    if (*(char *)(v8 + 23) < 0) {
      int v9 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v8 + 8);
    }
    else {
      int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v8 + 23);
    }
    if (v9 > 0x7F)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (int)a2 + 1, v6);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v9;
      int v10 = a2 + 2;
    }
    int v11 = *(char *)(v8 + 23);
    if (v11 >= 0) {
      int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8;
    }
    else {
      int v12 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v8;
    }
    if (v11 >= 0) {
      unsigned int v13 = (const void *)*(unsigned __int8 *)(v8 + 23);
    }
    else {
      unsigned int v13 = (const void *)*(unsigned int *)(v8 + 8);
    }
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v12, v13, v10, v7);
    int v5 = *((_DWORD *)this + 17);
  }
  if ((v5 & 2) != 0)
  {
    uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    *(unsigned char *)a2 = 16;
    if (v14 > 0x7F)
    {
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, (int)a2 + 1, a3);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v14;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
  }
  if ((*((unsigned char *)this + 68) & 4) != 0)
  {
    int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    *(unsigned char *)a2 = 24;
    if (v15 > 0x7F)
    {
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, (int)a2 + 1, a3);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v15;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
  }
  if ((*((unsigned char *)this + 68) & 8) != 0)
  {
    int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    *(unsigned char *)a2 = 32;
    if (v16 > 0x7F)
    {
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v16, (int)a2 + 1, a3);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v16;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
  }
  if ((*((unsigned char *)this + 68) & 0x10) != 0)
  {
    int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    *(unsigned char *)a2 = 40;
    if (v17 > 0x7F)
    {
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, (int)a2 + 1, a3);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v17;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
  }
  int v18 = *((_DWORD *)this + 17);
  if ((v18 & 0x20) != 0)
  {
    wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback();
    uint64_t v21 = *((void *)this + 5);
    *(unsigned char *)a2 = 50;
    if (*(char *)(v21 + 23) < 0) {
      BOOL v22 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v21 + 8);
    }
    else {
      BOOL v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v21 + 23);
    }
    if (v22 > 0x7F)
    {
      int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v22, (int)a2 + 1, v19);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v22;
      int v23 = a2 + 2;
    }
    int v24 = *(char *)(v21 + 23);
    if (v24 >= 0) {
      unsigned int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v21;
    }
    else {
      unsigned int v25 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v21;
    }
    if (v24 >= 0) {
      uint64_t v26 = (const void *)*(unsigned __int8 *)(v21 + 23);
    }
    else {
      uint64_t v26 = (const void *)*(unsigned int *)(v21 + 8);
    }
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v25, v26, v23, v20);
    int v18 = *((_DWORD *)this + 17);
  }
  if ((v18 & 0x40) != 0)
  {
    uint64_t v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    *(unsigned char *)a2 = 56;
    if (v27 > 0x7F)
    {
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v27, (int)a2 + 1, a3);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v27;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
  }
  if ((*((unsigned char *)this + 68) & 0x80) != 0)
  {
    uint64_t v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
    *(unsigned char *)a2 = 64;
    if (v28 > 0x7F)
    {
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v28, (int)a2 + 1, a3);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v28;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
  }
  if (*((unsigned char *)this + 69))
  {
    unsigned int v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    *(unsigned char *)a2 = 72;
    if (v29 > 0x7F)
    {
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v29, (int)a2 + 1, a3);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v29;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
  }
  if ((*((unsigned char *)this + 69) & 2) != 0)
  {
    unsigned int v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
    *(unsigned char *)a2 = 80;
    if (v30 > 0x7F)
    {
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v30, (int)a2 + 1, a3);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v30;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
  }
  int v33 = (void *)*((void *)this + 1);
  int v32 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v31 = v33;
  if (!v33 || *v31 == v31[1]) {
    return a2;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v32, a2, a3);
}

uint64_t sub_10009AD2C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 68);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_55;
  }
  if ((v3 & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_19;
    }
    goto LABEL_15;
  }
  uint64_t v5 = *(void *)(a1 + 16);
  int v6 = *(unsigned __int8 *)(v5 + 23);
  char v7 = v6;
  uint64_t v8 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
  }
  else {
    unint64_t v9 = v8;
  }
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9, a2);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v8 = *(void *)(v5 + 8);
    int v3 = *(_DWORD *)(a1 + 68);
    char v7 = *(unsigned char *)(v5 + 23);
  }
  else
  {
    int v10 = 1;
  }
  if (v7 < 0) {
    int v6 = v8;
  }
  uint64_t v4 = (v10 + v6 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_15:
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
    if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
      int v3 = *(_DWORD *)(a1 + 68);
    }
    else
    {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v12 + 1);
  }
LABEL_19:
  if ((v3 & 4) != 0)
  {
    unsigned int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if (v13 >= 0x80)
    {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
      int v3 = *(_DWORD *)(a1 + 68);
    }
    else
    {
      int v14 = 1;
    }
    uint64_t v4 = (v4 + v14 + 1);
    if ((v3 & 8) == 0)
    {
LABEL_21:
      if ((v3 & 0x10) == 0) {
        goto LABEL_22;
      }
      goto LABEL_34;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_21;
  }
  int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if (v15 >= 0x80)
  {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    int v16 = 2;
  }
  uint64_t v4 = (v16 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_22:
    if ((v3 & 0x20) == 0) {
      goto LABEL_23;
    }
    goto LABEL_38;
  }
LABEL_34:
  int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
  if (v17 >= 0x80)
  {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    int v18 = 2;
  }
  uint64_t v4 = (v18 + v4);
  if ((v3 & 0x20) == 0)
  {
LABEL_23:
    if ((v3 & 0x40) == 0) {
      goto LABEL_24;
    }
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v19 = *(void *)(a1 + 40);
  int v20 = *(unsigned __int8 *)(v19 + 23);
  char v21 = v20;
  uint64_t v22 = *(void *)(v19 + 8);
  if ((v20 & 0x80u) == 0) {
    unint64_t v23 = *(unsigned __int8 *)(v19 + 23);
  }
  else {
    unint64_t v23 = v22;
  }
  if (v23 >= 0x80)
  {
    int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v23, a2);
    int v20 = *(unsigned __int8 *)(v19 + 23);
    uint64_t v22 = *(void *)(v19 + 8);
    int v3 = *(_DWORD *)(a1 + 68);
    char v21 = *(unsigned char *)(v19 + 23);
  }
  else
  {
    int v24 = 1;
  }
  if (v21 < 0) {
    int v20 = v22;
  }
  uint64_t v4 = (v4 + v24 + v20 + 1);
  if ((v3 & 0x40) == 0)
  {
LABEL_24:
    if ((v3 & 0x80) == 0) {
      goto LABEL_55;
    }
    goto LABEL_51;
  }
LABEL_47:
  unsigned int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
  if (v25 >= 0x80)
  {
    int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    int v26 = 2;
  }
  uint64_t v4 = (v26 + v4);
  if ((v3 & 0x80) != 0)
  {
LABEL_51:
    uint64_t v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
    if (v27 >= 0x80)
    {
      int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2)
          + 1;
      int v3 = *(_DWORD *)(a1 + 68);
    }
    else
    {
      int v28 = 2;
    }
    uint64_t v4 = (v28 + v4);
  }
LABEL_55:
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      unsigned int v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
      if (v29 >= 0x80)
      {
        int v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29, a2)
            + 1;
        int v3 = *(_DWORD *)(a1 + 68);
      }
      else
      {
        int v30 = 2;
      }
      uint64_t v4 = (v30 + v4);
    }
    if ((v3 & 0x200) != 0)
    {
      uint64_t v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
      if (v31 >= 0x80) {
        int v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31, a2)
      }
            + 1;
      else {
        int v32 = 2;
      }
      uint64_t v4 = (v32 + v4);
    }
  }
  int v33 = *(void **)(a1 + 8);
  if (v33 && *v33 != v33[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 64) = v4;
  return v4;
}

uint64_t sub_10009AFA4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000938F0((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10009B078(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10009B090(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10009B11C()
{
  return 1;
}

uint64_t sub_10009B124()
{
  uint64_t v0 = qword_1008A0D08;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100089710;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A09F8;
}

void sub_10009B1B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10009B1CC(uint64_t a1)
{
  *(void *)a1 = off_100849D58;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 24) = 0;
  return a1;
}

void sub_10009B218(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10009B22C(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (*(unsigned char *)(a2 + 24))
  {
    int v4 = *(_DWORD *)(a2 + 16);
    a1[6] |= 1u;
    a1[4] = v4;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10009B2C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10009B2DC(uint64_t a1)
{
  *(void *)a1 = off_100849D58;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10009B330(uint64_t a1)
{
  *(void *)a1 = off_100849D58;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_10009B398(uint64_t result, int a2)
{
  *(_DWORD *)(result + 20) = a2;
  return result;
}

void sub_10009B3A0()
{
}

void sub_10009B3E0()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10009B404(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 24)) {
    *(_DWORD *)(a1 + 16) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10009B424(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (unsigned int *)(a1 + 16);
  unsigned int v7 = a1 + 8;
  while (1)
  {
    while (1)
    {
      uint64_t v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v8;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v8 + 1;
      }
      if (TagFallback != 8) {
        break;
      }
      int v11 = (char *)*((void *)this + 1);
      unint64_t v10 = *((void *)this + 2);
      if ((unint64_t)v11 >= v10 || *v11 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
        if (!result) {
          return result;
        }
        int v12 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
      }
      else
      {
        *int v6 = *v11;
        int v12 = (unsigned __int8 *)(v11 + 1);
        *((void *)this + 1) = v12;
      }
      *(_DWORD *)(a1 + 24) |= 1u;
      if (v12 == (unsigned __int8 *)v10 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_10009B540(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 24)) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 16), a2, a4);
  }
  uint64_t v8 = *(void **)(v5 + 8);
  unsigned int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v6 = v8;
  if (v8 && *v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10009B5B4(wireless_diagnostics::google::protobuf::internal::WireFormat *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  if (*((unsigned char *)this + 24))
  {
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    *(unsigned char *)a2 = 8;
    if (v4 > 0x7F)
    {
      a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v4, (int)a2 + 1, a3);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v4;
      a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
  }
  unsigned int v7 = (void *)*((void *)this + 1);
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v5 = v7;
  if (!v7 || *v5 == v5[1]) {
    return a2;
  }

  return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, a2, a3);
}

uint64_t sub_10009B644(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (*(unsigned char *)(a1 + 24))
  {
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v4 >= 0x80) {
      uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4, a2)+ 1;
    }
    else {
      uint64_t v3 = 2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v5 = *(void **)(a1 + 8);
  if (v5 && *v5 != v5[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_10009B6B8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10009B22C(a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10009B78C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10009B7A4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10009B830()
{
  return 1;
}

uint64_t sub_10009B838()
{
  uint64_t v0 = qword_1008A0D08;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100089710;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A0A08;
}

void sub_10009B8CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10009B8E0(uint64_t a1)
{
  *(void *)a1 = off_100849E08;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 80) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 60) = 0u;
  return a1;
}

void sub_10009B938(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_10009B94C(uint64_t *a1)
{
  *a1 = (uint64_t)off_100849E08;
  if ((uint64_t *)qword_1008ABF60 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  sub_10006F938(a1 + 7);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10009B9F0(uint64_t *a1)
{
  sub_10009B94C(a1);

  operator delete();
}

uint64_t sub_10009BA28(uint64_t result, int a2)
{
  *(_DWORD *)(result + 80) = a2;
  return result;
}

void sub_10009BA30()
{
}

void sub_10009BA70()
{
}

uint64_t sub_10009BA94(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  unsigned int v7 = (unsigned int *)(a1 + 36);
  uint64_t v8 = (unsigned int *)(a1 + 40);
  unint64_t v9 = (unsigned int *)(a1 + 44);
  unint64_t v10 = (unsigned int *)(a1 + 48);
  int v11 = (unsigned int *)(a1 + 52);
  int v64 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 56);
  uint64_t v65 = (unsigned int *)(a1 + 32);
  while (1)
  {
    int v12 = (unsigned __int8 *)*((void *)this + 1);
    if ((unint64_t)v12 >= *((void *)this + 2) || (char)*v12 < 0) {
      break;
    }
    unint64_t TagFallback = *v12;
    *((_DWORD *)this + 8) = TagFallback;
    *((void *)this + 1) = v12 + 1;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v14 = TagFallback & 7;
        if (v14 != 2) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 84) |= 1u;
        uint64_t v15 = *(void *)(a1 + 16);
        if (!v15) {
          operator new();
        }
        unsigned int v66 = 0;
        int v16 = (char *)*((void *)this + 1);
        if ((unint64_t)v16 >= *((void *)this + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v66))return 0; {
        }
          }
        else
        {
          unsigned int v66 = *v16;
          *((void *)this + 1) = v16 + 1;
        }
        int v28 = *((_DWORD *)this + 14);
        int v29 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v28 + 1;
        if (v28 >= v29) {
          return 0;
        }
        int v30 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v66);
        if (!sub_1000987CC(v15, this, v31, v32) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v30);
        int v33 = *((_DWORD *)this + 14);
        BOOL v34 = __OFSUB__(v33, 1);
        int v35 = v33 - 1;
        if (v35 < 0 == v34) {
          *((_DWORD *)this + 14) = v35;
        }
        int v36 = (unsigned char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        if ((unint64_t)v36 >= v17 || *v36 != 16) {
          continue;
        }
        int v18 = v36 + 1;
        *((void *)this + 1) = v18;
        goto LABEL_45;
      case 2u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
LABEL_45:
        unsigned int v66 = 0;
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v66);
          if (!result) {
            return result;
          }
          unsigned int v37 = v66;
        }
        else
        {
          unsigned int v37 = *v18;
          *((void *)this + 1) = v18 + 1;
        }
        int v39 = (1 << v37) & 0xDDB54EF;
        if (v37 > 0x1B || v39 == 0)
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 2, (int)v37);
        }
        else
        {
          if (v37 > 0x1B || v39 == 0) {
            sub_10040FDB4();
          }
          *(_DWORD *)(a1 + 84) |= 2u;
          *(_DWORD *)(a1 + 24) = v37;
        }
        int v42 = (unsigned char *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        if ((unint64_t)v42 >= v19 || *v42 != 24) {
          continue;
        }
        int v20 = v42 + 1;
        *((void *)this + 1) = v20;
LABEL_62:
        unsigned int v66 = 0;
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v66);
          if (!result) {
            return result;
          }
          unsigned int v43 = v66;
        }
        else
        {
          unsigned int v43 = *v20;
          *((void *)this + 1) = v20 + 1;
        }
        if (v43 > 1)
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 3, (int)v43);
        }
        else
        {
          *(_DWORD *)(a1 + 84) |= 4u;
          *(_DWORD *)(a1 + 28) = v43;
        }
        int v44 = (unsigned char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        if ((unint64_t)v44 >= v21 || *v44 != 32) {
          continue;
        }
        uint64_t v22 = v44 + 1;
        *((void *)this + 1) = v22;
LABEL_73:
        if ((unint64_t)v22 >= v21 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v65);
          if (!result) {
            return result;
          }
          int v45 = (unsigned char *)*((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v65 = *v22;
          int v45 = v22 + 1;
          *((void *)this + 1) = v45;
        }
        *(_DWORD *)(a1 + 84) |= 8u;
        if ((unint64_t)v45 >= v21 || *v45 != 40) {
          continue;
        }
        unint64_t v23 = v45 + 1;
        *((void *)this + 1) = v23;
LABEL_81:
        if ((unint64_t)v23 >= v21 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v46 = (unsigned char *)*((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v23;
          int v46 = v23 + 1;
          *((void *)this + 1) = v46;
        }
        *(_DWORD *)(a1 + 84) |= 0x10u;
        if ((unint64_t)v46 >= v21 || *v46 != 48) {
          continue;
        }
        unsigned int v25 = v46 + 1;
        *((void *)this + 1) = v25;
LABEL_89:
        if ((unint64_t)v25 >= v21 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v47 = (unsigned char *)*((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v8 = *v25;
          int v47 = v25 + 1;
          *((void *)this + 1) = v47;
        }
        *(_DWORD *)(a1 + 84) |= 0x20u;
        if ((unint64_t)v47 >= v21 || *v47 != 56) {
          continue;
        }
        int v26 = v47 + 1;
        *((void *)this + 1) = v26;
LABEL_97:
        if ((unint64_t)v26 >= v21 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          int v48 = (unsigned char *)*((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
        }
        else
        {
          *unint64_t v9 = *v26;
          int v48 = v26 + 1;
          *((void *)this + 1) = v48;
        }
        *(_DWORD *)(a1 + 84) |= 0x40u;
        if ((unint64_t)v48 >= v21 || *v48 != 64) {
          continue;
        }
        int v24 = v48 + 1;
        *((void *)this + 1) = v24;
LABEL_105:
        if ((unint64_t)v24 >= v21 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!result) {
            return result;
          }
          int v49 = (unsigned char *)*((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v10 = *v24;
          int v49 = v24 + 1;
          *((void *)this + 1) = v49;
        }
        *(_DWORD *)(a1 + 84) |= 0x80u;
        if ((unint64_t)v49 >= v21 || *v49 != 72) {
          continue;
        }
        uint64_t v27 = v49 + 1;
        *((void *)this + 1) = v27;
LABEL_113:
        if ((unint64_t)v27 >= v21 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!result) {
            return result;
          }
          int v50 = (unsigned char *)*((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
        }
        else
        {
          *int v11 = *v27;
          int v50 = v27 + 1;
          *((void *)this + 1) = v50;
        }
        *(_DWORD *)(a1 + 84) |= 0x100u;
        if ((unint64_t)v50 >= v21 || *v50 != 82) {
          continue;
        }
        break;
      case 3u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        goto LABEL_62;
      case 4u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        uint64_t v22 = (char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        goto LABEL_73;
      case 5u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unint64_t v23 = (char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        goto LABEL_81;
      case 6u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unsigned int v25 = (char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        goto LABEL_89;
      case 7u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v26 = (char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        goto LABEL_97;
      case 8u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v24 = (char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        goto LABEL_105;
      case 9u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        uint64_t v27 = (char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        goto LABEL_113;
      case 0xAu:
        int v14 = TagFallback & 7;
        if (v14 == 2) {
          goto LABEL_123;
        }
        goto LABEL_32;
      default:
        int v14 = TagFallback & 7;
LABEL_32:
        if (v14 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
    do
    {
      *((void *)this + 1) = v50 + 1;
LABEL_123:
      int v51 = *(_DWORD *)(a1 + 68);
      uint64_t v52 = *(int *)(a1 + 64);
      if ((int)v52 >= v51)
      {
        if (v51 == *(_DWORD *)(a1 + 72))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v64, v51 + 1);
          int v51 = *(_DWORD *)(a1 + 68);
        }
        *(_DWORD *)(a1 + 68) = v51 + 1;
        sub_1000C3048();
      }
      uint64_t v53 = *(void *)(a1 + 56);
      *(_DWORD *)(a1 + 64) = v52 + 1;
      uint64_t v54 = *(void *)(v53 + 8 * v52);
      unsigned int v66 = 0;
      int v55 = (char *)*((void *)this + 1);
      if ((unint64_t)v55 >= *((void *)this + 2) || *v55 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v66))return 0; {
      }
        }
      else
      {
        unsigned int v66 = *v55;
        *((void *)this + 1) = v55 + 1;
      }
      int v56 = *((_DWORD *)this + 14);
      int v57 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v56 + 1;
      if (v56 >= v57) {
        return 0;
      }
      int v58 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v66);
      if (!sub_10009B424(v54, this, v59, v60) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v58);
      int v61 = *((_DWORD *)this + 14);
      BOOL v34 = __OFSUB__(v61, 1);
      int v62 = v61 - 1;
      if (v62 < 0 == v34) {
        *((_DWORD *)this + 14) = v62;
      }
      int v50 = (unsigned char *)*((void *)this + 1);
      uint64_t v63 = (unsigned char *)*((void *)this + 2);
    }
    while (v50 < v63 && *v50 == 82);
    if (v50 == v63 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
  unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
  *((_DWORD *)this + 8) = TagFallback;
  if (TagFallback) {
    goto LABEL_7;
  }
  return 1;
}

void sub_10009C1E4()
{
}

uint64_t sub_10009C230(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 84);
  if (v6)
  {
    uint64_t v11 = *(void *)(this + 16);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_1008ABF60 + 16);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v11, a2, a4);
    int v6 = *(_DWORD *)(v5 + 84);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_24;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 28), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 32), a2, a4);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 36), a2, a4);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 40), a2, a4);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 44), a2, a4);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 48), a2, a4);
  if ((*(_DWORD *)(v5 + 84) & 0x100) != 0) {
LABEL_10:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(v5 + 52), a2, a4);
LABEL_11:
  if (*(int *)(v5 + 64) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(void *)(*(void *)(v5 + 56) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 64));
  }
  unint64_t v10 = *(void **)(v5 + 8);
  unint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v8 = v10;
  if (v10 && *v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10009C3D8(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  char v3 = a2;
  int v5 = *((_DWORD *)this + 21);
  if (v5)
  {
    int v6 = (unsigned int *)*((void *)this + 2);
    if (!v6) {
      int v6 = *(unsigned int **)(qword_1008ABF60 + 16);
    }
    *(unsigned char *)a2 = 10;
    unsigned int v7 = a2 + 1;
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v6[7];
    if (v8 > 0x7F)
    {
      unint64_t v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v7, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v8;
      unint64_t v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
    char v3 = sub_100098A58((wireless_diagnostics::google::protobuf::internal::WireFormat *)v6, v9, a3);
    int v5 = *((_DWORD *)this + 21);
  }
  if ((v5 & 2) != 0)
  {
    unint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 6);
    *(unsigned char *)char v3 = 16;
    unint64_t v11 = (unint64_t)v3 + 1;
    if ((v10 & 0x80000000) != 0)
    {
      uint64_t v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v10, v11, a3);
    }
    else
    {
      if (v10 <= 0x7F)
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v10;
        char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        goto LABEL_15;
      }
      uint64_t v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, v11, a3);
    }
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v12;
  }
LABEL_15:
  if ((*((unsigned char *)this + 84) & 4) == 0) {
    goto LABEL_22;
  }
  unsigned int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 7);
  *(unsigned char *)char v3 = 24;
  unint64_t v14 = (unint64_t)v3 + 1;
  if ((v13 & 0x80000000) != 0)
  {
    uint64_t v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v13, v14, a3);
  }
  else
  {
    if (v13 <= 0x7F)
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v13;
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      goto LABEL_22;
    }
    uint64_t v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, v14, a3);
  }
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v15;
LABEL_22:
  if ((*((unsigned char *)this + 84) & 8) != 0)
  {
    int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    *(unsigned char *)char v3 = 32;
    if (v16 > 0x7F)
    {
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v16, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v16;
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 84) & 0x10) != 0)
  {
    unint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    *(unsigned char *)char v3 = 40;
    if (v17 > 0x7F)
    {
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v17;
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 84) & 0x20) != 0)
  {
    int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    *(unsigned char *)char v3 = 48;
    if (v18 > 0x7F)
    {
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v18;
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 84) & 0x40) != 0)
  {
    unint64_t v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    *(unsigned char *)char v3 = 56;
    if (v19 > 0x7F)
    {
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v19, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v19;
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 84) & 0x80) != 0)
  {
    int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    *(unsigned char *)char v3 = 64;
    if (v20 > 0x7F)
    {
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v20, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v20;
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if (*((unsigned char *)this + 85))
  {
    unint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
    *(unsigned char *)char v3 = 72;
    if (v21 > 0x7F)
    {
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v21;
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if (*((int *)this + 16) >= 1)
  {
    uint64_t v22 = 0;
    do
    {
      unint64_t v23 = *(unsigned int **)(*((void *)this + 7) + 8 * v22);
      *(unsigned char *)char v3 = 82;
      int v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v23[5];
      if (v24 > 0x7F)
      {
        unsigned int v25 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v24, (int)v3 + 1, a3);
      }
      else
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v24;
        unsigned int v25 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      }
      char v3 = sub_10009B5B4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v23, v25, a3);
      ++v22;
    }
    while (v22 < *((int *)this + 16));
  }
  int v28 = (void *)*((void *)this + 1);
  uint64_t v27 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v26 = v28;
  if (!v28 || *v26 == v26[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v27, v3, a3);
}

uint64_t sub_10009C6B0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 84);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    if ((v3 & 0x100) == 0) {
      goto LABEL_57;
    }
    goto LABEL_53;
  }
  if ((v3 & 1) == 0)
  {
    int v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_19;
    }
    goto LABEL_13;
  }
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_1008ABF60 + 16);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100098B84(v5, a2);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  }
  else {
    int v8 = 1;
  }
  int v4 = v7 + v8 + 1;
  int v3 = *(_DWORD *)(a1 + 84);
  if ((v3 & 2) != 0)
  {
LABEL_13:
    unint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
    if ((v9 & 0x80000000) != 0)
    {
      int v10 = 10;
    }
    else if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
      int v3 = *(_DWORD *)(a1 + 84);
    }
    else
    {
      int v10 = 1;
    }
    v4 += v10 + 1;
  }
LABEL_19:
  if ((v3 & 4) != 0)
  {
    unint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if ((v11 & 0x80000000) != 0)
    {
      int v12 = 10;
    }
    else if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
      int v3 = *(_DWORD *)(a1 + 84);
    }
    else
    {
      int v12 = 1;
    }
    v4 += v12 + 1;
    if ((v3 & 8) == 0)
    {
LABEL_21:
      if ((v3 & 0x10) == 0) {
        goto LABEL_22;
      }
      goto LABEL_37;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_21;
  }
  unsigned int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 84);
  }
  else
  {
    int v14 = 2;
  }
  v4 += v14;
  if ((v3 & 0x10) == 0)
  {
LABEL_22:
    if ((v3 & 0x20) == 0) {
      goto LABEL_23;
    }
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
  if (v15 >= 0x80)
  {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 84);
  }
  else
  {
    int v16 = 2;
  }
  v4 += v16;
  if ((v3 & 0x20) == 0)
  {
LABEL_23:
    if ((v3 & 0x40) == 0) {
      goto LABEL_24;
    }
    goto LABEL_45;
  }
LABEL_41:
  unint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
  if (v17 >= 0x80)
  {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 84);
  }
  else
  {
    int v18 = 2;
  }
  v4 += v18;
  if ((v3 & 0x40) == 0)
  {
LABEL_24:
    if ((v3 & 0x80) == 0) {
      goto LABEL_25;
    }
    goto LABEL_49;
  }
LABEL_45:
  unint64_t v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
  if (v19 >= 0x80)
  {
    int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 84);
  }
  else
  {
    int v20 = 2;
  }
  v4 += v20;
  if ((v3 & 0x80) == 0)
  {
LABEL_25:
    if ((v3 & 0x100) == 0) {
      goto LABEL_57;
    }
    goto LABEL_53;
  }
LABEL_49:
  unint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
  if (v21 >= 0x80)
  {
    int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 84);
  }
  else
  {
    int v22 = 2;
  }
  v4 += v22;
  if ((v3 & 0x100) != 0)
  {
LABEL_53:
    unint64_t v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
    if (v23 >= 0x80) {
      int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2)
    }
          + 1;
    else {
      int v24 = 2;
    }
    v4 += v24;
  }
LABEL_57:
  int v25 = *(_DWORD *)(a1 + 64);
  uint64_t v26 = (v25 + v4);
  if (v25 >= 1)
  {
    uint64_t v27 = 0;
    do
    {
      int v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10009B644(*(void *)(*(void *)(a1 + 56) + 8 * v27), a2);
      int v29 = (int)v28;
      if (v28 >= 0x80) {
        int v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28, a2);
      }
      else {
        int v30 = 1;
      }
      uint64_t v26 = (v29 + v26 + v30);
      ++v27;
    }
    while (v27 < *(int *)(a1 + 64));
  }
  uint64_t v31 = *(void **)(a1 + 8);
  if (v31 && *v31 != v31[1]) {
    uint64_t v26 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v26;
  }
  *(_DWORD *)(a1 + 80) = v26;
  return v26;
}

uint64_t sub_10009C92C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100093B44((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10009CA00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10009CA18(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10009CAA4()
{
  return 1;
}

uint64_t sub_10009CAAC()
{
  uint64_t v0 = qword_1008A0D08;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100089710;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A0A18;
}

void sub_10009CB40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_10009CB54(void *a1)
{
  *a1 = off_100849EB8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  return a1;
}

void sub_10009CB9C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_10009CBB0(void *a1)
{
  *a1 = off_100849EB8;
  if ((void *)qword_1008ABF68 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10009CC48(void *a1)
{
  sub_10009CBB0(a1);

  operator delete();
}

uint64_t sub_10009CC80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 24) = a2;
  return result;
}

void sub_10009CC88()
{
}

void sub_10009CCC8()
{
}

uint64_t sub_10009CCEC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
      }
      if (TagFallback != 10) {
        break;
      }
      *(_DWORD *)(a1 + 28) |= 1u;
      uint64_t v9 = *(void *)(a1 + 16);
      if (!v9) {
        operator new();
      }
      unsigned int v20 = 0;
      int v10 = (char *)*((void *)this + 1);
      if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v20))return 0; {
      }
        }
      else
      {
        unsigned int v20 = *v10;
        *((void *)this + 1) = v10 + 1;
      }
      int v11 = *((_DWORD *)this + 14);
      int v12 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v11 + 1;
      if (v11 >= v12) {
        return 0;
      }
      int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v20);
      if (!sub_1000991D4(v9, this, v14, v15) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
      int v16 = *((_DWORD *)this + 14);
      BOOL v17 = __OFSUB__(v16, 1);
      int v18 = v16 - 1;
      if (v18 < 0 == v17) {
        *((_DWORD *)this + 14) = v18;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
  }
    }
  return 1;
}

void sub_10009CE9C()
{
}

uint64_t sub_10009CEC0(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 28))
  {
    uint64_t v6 = *(void *)(this + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1008ABF68 + 16);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  uint64_t v9 = *(void **)(v5 + 8);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10009CF44(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  if (*((unsigned char *)this + 28))
  {
    uint64_t v4 = (unsigned int *)*((void *)this + 2);
    if (!v4) {
      uint64_t v4 = *(unsigned int **)(qword_1008ABF68 + 16);
    }
    *(unsigned char *)a2 = 10;
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v4[7];
    if (v5 > 0x7F)
    {
      uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v5, (int)a2 + 1, a3);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v5;
      uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
    a2 = sub_1000994F8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v4, v6, a3);
  }
  uint64_t v9 = (void *)*((void *)this + 1);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v7 = v9;
  if (!v9 || *v7 == v7[1]) {
    return a2;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v8, a2, a3);
}

uint64_t sub_10009CFF4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (*(unsigned char *)(a1 + 28))
  {
    uint64_t v4 = *(void *)(a1 + 16);
    if (!v4) {
      uint64_t v4 = *(void *)(qword_1008ABF68 + 16);
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000995EC(v4, a2);
    int v6 = (int)v5;
    if (v5 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    }
    else {
      int v7 = 1;
    }
    uint64_t v3 = (v6 + v7 + 1);
  }
  else
  {
    uint64_t v3 = 0;
  }
  int v8 = *(void **)(a1 + 8);
  if (v8 && *v8 != v8[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  }
  *(_DWORD *)(a1 + 24) = v3;
  return v3;
}

uint64_t sub_10009D088(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100093E38((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10009D15C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10009D174(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10009D200()
{
  return 1;
}

uint64_t sub_10009D208()
{
  uint64_t v0 = qword_1008A0D08;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100089710;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A0A28;
}

void sub_10009D29C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10009D2B0(uint64_t a1)
{
  *(void *)a1 = off_100849F68;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return a1;
}

void sub_10009D2FC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_10009D310(void *a1)
{
  *a1 = off_100849F68;
  if ((void *)qword_1008ABF70 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10009D3A8(void *a1)
{
  sub_10009D310(a1);

  operator delete();
}

uint64_t sub_10009D3E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_10009D3E8()
{
}

void sub_10009D428()
{
}

uint64_t sub_10009D44C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (unint64_t *)(a1 + 24);
  int v7 = (unsigned int *)(a1 + 32);
  int v8 = (unsigned int *)(a1 + 36);
  unsigned int v9 = a1 + 8;
  while (2)
  {
    int v10 = (char *)*((void *)this + 1);
    if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_20;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v13 = *(void *)(a1 + 16);
        if (!v13) {
          operator new();
        }
        unsigned int v32 = 0;
        uint64_t v14 = (char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v32))return 0; {
        }
          }
        else
        {
          unsigned int v32 = *v14;
          *((void *)this + 1) = v14 + 1;
        }
        int v19 = *((_DWORD *)this + 14);
        int v20 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v19 + 1;
        if (v19 >= v20) {
          return 0;
        }
        int v21 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v32);
        if (!sub_1000987CC(v13, this, v22, v23) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v21);
        int v24 = *((_DWORD *)this + 14);
        BOOL v25 = __OFSUB__(v24, 1);
        int v26 = v24 - 1;
        if (v26 < 0 == v25) {
          *((_DWORD *)this + 14) = v26;
        }
        uint64_t v27 = (unsigned char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v27 >= v15 || *v27 != 16) {
          continue;
        }
        int v16 = v27 + 1;
        *((void *)this + 1) = v16;
        goto LABEL_33;
      case 2u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
LABEL_33:
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v28 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v16;
          int v28 = v16 + 1;
          *((void *)this + 1) = v28;
        }
        *(_DWORD *)(a1 + 44) |= 2u;
        if ((unint64_t)v28 >= v15 || *v28 != 24) {
          continue;
        }
        BOOL v17 = v28 + 1;
        *((void *)this + 1) = v17;
LABEL_41:
        if ((unint64_t)v17 >= v15 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v30 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v17;
          int v30 = v17 + 1;
          *((void *)this + 1) = v30;
        }
        *(_DWORD *)(a1 + 44) |= 4u;
        if ((unint64_t)v30 >= v15 || *v30 != 32) {
          continue;
        }
        int v18 = v30 + 1;
        *((void *)this + 1) = v18;
LABEL_49:
        if ((unint64_t)v18 >= v15 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          uint64_t v31 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v18;
          uint64_t v31 = (unsigned __int8 *)(v18 + 1);
          *((void *)this + 1) = v31;
        }
        *(_DWORD *)(a1 + 44) |= 8u;
        if (v31 != (unsigned __int8 *)v15 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        BOOL v17 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_41;
      case 4u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_49;
      default:
        int v12 = TagFallback & 7;
LABEL_20:
        if (v12 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v9, a4))continue; {
        return 0;
        }
    }
    return result;
  }
}

void sub_10009D79C()
{
}

uint64_t sub_10009D7D0(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 44);
  if (v6)
  {
    uint64_t v10 = *(void *)(this + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_1008ABF70 + 16);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_16:
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 32), a2, a4);
      if ((*(_DWORD *)(v5 + 44) & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_5;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 24), (unint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) != 0) {
    goto LABEL_16;
  }
LABEL_4:
  if ((v6 & 8) != 0) {
LABEL_5:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 36), a2, a4);
LABEL_6:
  unsigned int v9 = *(void **)(v5 + 8);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10009D8AC(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  char v3 = a2;
  int v5 = *((_DWORD *)this + 11);
  if (v5)
  {
    int v6 = (unsigned int *)*((void *)this + 2);
    if (!v6) {
      int v6 = *(unsigned int **)(qword_1008ABF70 + 16);
    }
    *(unsigned char *)a2 = 10;
    unsigned int v7 = a2 + 1;
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v6[7];
    if (v8 > 0x7F)
    {
      unsigned int v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v7, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v8;
      unsigned int v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
    char v3 = sub_100098A58((wireless_diagnostics::google::protobuf::internal::WireFormat *)v6, v9, a3);
    int v5 = *((_DWORD *)this + 11);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_12;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 3);
  *(unsigned char *)char v3 = 16;
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v10, (unint64_t)v3 + 1, a3);
  if ((*((_DWORD *)this + 11) & 4) == 0) {
    goto LABEL_15;
  }
LABEL_12:
  int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  *(unsigned char *)char v3 = 24;
  if (v11 > 0x7F)
  {
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)v3 + 1, a3);
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v11;
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  }
LABEL_15:
  if ((*((unsigned char *)this + 44) & 8) != 0)
  {
    int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    *(unsigned char *)char v3 = 32;
    if (v12 > 0x7F)
    {
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v12;
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  unint64_t v15 = (void *)*((void *)this + 1);
  uint64_t v14 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v13 = v15;
  if (!v15 || *v13 == v13[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v14, v3, a3);
}

uint64_t sub_10009D9F4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 44);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 44))
    {
      uint64_t v5 = *(void *)(a1 + 16);
      if (!v5) {
        uint64_t v5 = *(void *)(qword_1008ABF70 + 16);
      }
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100098B84(v5, a2);
      int v7 = (int)v6;
      if (v6 >= 0x80) {
        int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
      }
      else {
        int v8 = 1;
      }
      uint64_t v4 = (v7 + v8 + 1);
      int v3 = *(_DWORD *)(a1 + 44);
      if ((v3 & 2) == 0)
      {
LABEL_13:
        if ((v3 & 4) != 0)
        {
          unsigned int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
          if (v9 >= 0x80)
          {
            int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2)+ 1;
            int v3 = *(_DWORD *)(a1 + 44);
          }
          else
          {
            int v10 = 2;
          }
          uint64_t v4 = (v10 + v4);
          if ((v3 & 8) == 0) {
            goto LABEL_24;
          }
        }
        else if ((v3 & 8) == 0)
        {
          goto LABEL_24;
        }
        int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
        if (v11 >= 0x80) {
          int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2)+ 1;
        }
        else {
          int v12 = 2;
        }
        uint64_t v4 = (v12 + v4);
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 44) & 2) == 0) {
        goto LABEL_13;
      }
    }
    uint64_t v4 = v4
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 24), (unint64_t)a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 44);
    goto LABEL_13;
  }
  uint64_t v4 = 0;
LABEL_24:
  uint64_t v13 = *(void **)(a1 + 8);
  if (v13 && *v13 != v13[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 40) = v4;
  return v4;
}

uint64_t sub_10009DB08(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100093F50((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10009DBDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10009DBF4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10009DC80()
{
  return 1;
}

uint64_t sub_10009DC88()
{
  uint64_t v0 = qword_1008A0D08;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100089710;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A0A38;
}

void sub_10009DD1C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_10009DD30(void *a1)
{
  *a1 = off_10084A018;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  return a1;
}

void sub_10009DD78(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_10009DD8C(void *a1)
{
  *a1 = off_10084A018;
  if ((void *)qword_1008ABF78 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10009DE24(void *a1)
{
  sub_10009DD8C(a1);

  operator delete();
}

uint64_t sub_10009DE5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 24) = a2;
  return result;
}

void sub_10009DE64()
{
}

void sub_10009DEA4()
{
}

uint64_t sub_10009DEC8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
      }
      if (TagFallback != 10) {
        break;
      }
      *(_DWORD *)(a1 + 28) |= 1u;
      uint64_t v9 = *(void *)(a1 + 16);
      if (!v9) {
        operator new();
      }
      unsigned int v20 = 0;
      int v10 = (char *)*((void *)this + 1);
      if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v20))return 0; {
      }
        }
      else
      {
        unsigned int v20 = *v10;
        *((void *)this + 1) = v10 + 1;
      }
      int v11 = *((_DWORD *)this + 14);
      int v12 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v11 + 1;
      if (v11 >= v12) {
        return 0;
      }
      int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v20);
      if (!sub_1000991D4(v9, this, v14, v15) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
      int v16 = *((_DWORD *)this + 14);
      BOOL v17 = __OFSUB__(v16, 1);
      int v18 = v16 - 1;
      if (v18 < 0 == v17) {
        *((_DWORD *)this + 14) = v18;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
  }
    }
  return 1;
}

void sub_10009E078()
{
}

uint64_t sub_10009E09C(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 28))
  {
    uint64_t v6 = *(void *)(this + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1008ABF78 + 16);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  uint64_t v9 = *(void **)(v5 + 8);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10009E120(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  if (*((unsigned char *)this + 28))
  {
    uint64_t v4 = (unsigned int *)*((void *)this + 2);
    if (!v4) {
      uint64_t v4 = *(unsigned int **)(qword_1008ABF78 + 16);
    }
    *(unsigned char *)a2 = 10;
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v4[7];
    if (v5 > 0x7F)
    {
      uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v5, (int)a2 + 1, a3);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v5;
      uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
    a2 = sub_1000994F8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v4, v6, a3);
  }
  uint64_t v9 = (void *)*((void *)this + 1);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v7 = v9;
  if (!v9 || *v7 == v7[1]) {
    return a2;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v8, a2, a3);
}

uint64_t sub_10009E1D0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (*(unsigned char *)(a1 + 28))
  {
    uint64_t v4 = *(void *)(a1 + 16);
    if (!v4) {
      uint64_t v4 = *(void *)(qword_1008ABF78 + 16);
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000995EC(v4, a2);
    int v6 = (int)v5;
    if (v5 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    }
    else {
      int v7 = 1;
    }
    uint64_t v3 = (v6 + v7 + 1);
  }
  else
  {
    uint64_t v3 = 0;
  }
  int v8 = *(void **)(a1 + 8);
  if (v8 && *v8 != v8[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  }
  *(_DWORD *)(a1 + 24) = v3;
  return v3;
}

uint64_t sub_10009E264(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000940CC((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10009E338(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10009E350(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10009E3DC()
{
  return 1;
}

uint64_t sub_10009E3E4()
{
  uint64_t v0 = qword_1008A0D08;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100089710;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A0A48;
}

void sub_10009E478(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10009E48C(uint64_t a1)
{
  *(void *)a1 = off_10084A0C8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  return a1;
}

void sub_10009E4D8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_10009E4EC(void *a1)
{
  *a1 = off_10084A0C8;
  if ((void *)qword_1008ABF80 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10009E584(void *a1)
{
  sub_10009E4EC(a1);

  operator delete();
}

uint64_t sub_10009E5BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 28) = a2;
  return result;
}

void sub_10009E5C4()
{
}

void sub_10009E604()
{
}

uint64_t sub_10009E628(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (TagFallback >> 3 == 2)
      {
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) == 0)
        {
          int v11 = (char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          goto LABEL_30;
        }
      }
      else
      {
        int v9 = TagFallback & 7;
      }
LABEL_18:
      if (v9 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
    }
      }
    int v9 = TagFallback & 7;
    if (v9 != 2) {
      goto LABEL_18;
    }
    *(_DWORD *)(a1 + 32) |= 1u;
    uint64_t v12 = *(void *)(a1 + 16);
    if (!v12) {
      operator new();
    }
    unsigned int v26 = 0;
    int v13 = (char *)*((void *)this + 1);
    if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26)) {
        return 0;
      }
    }
    else
    {
      unsigned int v26 = *v13;
      *((void *)this + 1) = v13 + 1;
    }
    int v14 = *((_DWORD *)this + 14);
    int v15 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v14 + 1;
    if (v14 >= v15) {
      return 0;
    }
    int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v26);
    if (!sub_1000987CC(v12, this, v17, v18) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
    int v19 = *((_DWORD *)this + 14);
    BOOL v20 = __OFSUB__(v19, 1);
    int v21 = v19 - 1;
    if (v21 < 0 == v20) {
      *((_DWORD *)this + 14) = v21;
    }
    uint64_t v22 = (unsigned char *)*((void *)this + 1);
    unint64_t v10 = *((void *)this + 2);
    if ((unint64_t)v22 < v10 && *v22 == 16)
    {
      int v11 = v22 + 1;
      *((void *)this + 1) = v11;
LABEL_30:
      unsigned int v25 = 0;
      if ((unint64_t)v11 >= v10 || *v11 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
        if (!result) {
          return result;
        }
        unsigned int v23 = v25;
      }
      else
      {
        unsigned int v23 = *v11;
        *((void *)this + 1) = v11 + 1;
      }
      if (v23 > 1)
      {
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 2, (int)v23);
      }
      else
      {
        *(_DWORD *)(a1 + 32) |= 2u;
        *(_DWORD *)(a1 + 24) = v23;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
  }
}

void sub_10009E888()
{
}

uint64_t sub_10009E8AC(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 16);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1008ABF80 + 16);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 32);
  }
  if ((v6 & 2) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), (int)a2, a4);
  }
  unint64_t v10 = *(void **)(v5 + 8);
  int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v8 = v10;
  if (v10 && *v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10009E948(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  char v3 = a2;
  int v5 = *((_DWORD *)this + 8);
  if (v5)
  {
    int v6 = (unsigned int *)*((void *)this + 2);
    if (!v6) {
      int v6 = *(unsigned int **)(qword_1008ABF80 + 16);
    }
    *(unsigned char *)a2 = 10;
    unsigned int v7 = a2 + 1;
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v6[7];
    if (v8 > 0x7F)
    {
      int v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v7, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v8;
      int v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
    char v3 = sub_100098A58((wireless_diagnostics::google::protobuf::internal::WireFormat *)v6, v9, a3);
    int v5 = *((_DWORD *)this + 8);
  }
  if ((v5 & 2) != 0)
  {
    unint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 6);
    *(unsigned char *)char v3 = 16;
    unint64_t v11 = (unint64_t)v3 + 1;
    if ((v10 & 0x80000000) != 0)
    {
      uint64_t v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v10, v11, a3);
    }
    else
    {
      if (v10 <= 0x7F)
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v10;
        char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        goto LABEL_15;
      }
      uint64_t v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, v11, a3);
    }
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v12;
  }
LABEL_15:
  int v15 = (void *)*((void *)this + 1);
  int v14 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v13 = v15;
  if (!v15 || *v13 == v13[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v14, v3, a3);
}

uint64_t sub_10009EA3C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (*(unsigned char *)(a1 + 32))
  {
    if ((*(unsigned char *)(a1 + 32) & 1) == 0)
    {
      uint64_t v3 = 0;
      if ((*(unsigned char *)(a1 + 32) & 2) == 0) {
        goto LABEL_18;
      }
LABEL_12:
      int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
      if ((v8 & 0x80000000) != 0)
      {
        int v9 = 11;
      }
      else if (v8 >= 0x80)
      {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2)
           + 1;
      }
      else
      {
        int v9 = 2;
      }
      uint64_t v3 = (v9 + v3);
      goto LABEL_18;
    }
    uint64_t v4 = *(void *)(a1 + 16);
    if (!v4) {
      uint64_t v4 = *(void *)(qword_1008ABF80 + 16);
    }
    int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100098B84(v4, a2);
    int v6 = (int)v5;
    if (v5 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    }
    else {
      int v7 = 1;
    }
    uint64_t v3 = (v6 + v7 + 1);
    if ((*(_DWORD *)(a1 + 32) & 2) != 0) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_18:
  unint64_t v10 = *(void **)(a1 + 8);
  if (v10 && *v10 != v10[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  }
  *(_DWORD *)(a1 + 28) = v3;
  return v3;
}

uint64_t sub_10009EB14(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000941E4((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10009EBE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10009EC00(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10009EC8C()
{
  return 1;
}

uint64_t sub_10009EC94()
{
  uint64_t v0 = qword_1008A0D08;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100089710;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A0A58;
}

void sub_10009ED28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_10009ED3C(void *a1)
{
  *a1 = off_10084A178;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  return a1;
}

void sub_10009ED84(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_10009ED98(void *a1)
{
  *a1 = off_10084A178;
  if ((void *)qword_1008ABF88 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}