void sub_100236554(_Unwind_Exception *a1)
{
  std::ostream::~ostream();
  std::ios::~ios();
  _Unwind_Resume(a1);
}

uint64_t sub_10023657C(uint64_t a1)
{
  if (*(char *)(a1 + 95) < 0) {
    operator delete(*(void **)(a1 + 72));
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  std::ios::~ios();
  return a1;
}

void *sub_100236680(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    v6 = result;
    sub_10016D8B4(result, a4);
    result = (void *)sub_100236708((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_1002366E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_10016D6F0(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_100236708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  uint64_t v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      *(unsigned char *)uint64_t v4 = *(unsigned char *)v6;
      *(void *)(v4 + 16) = 0;
      *(void *)(v4 + 24) = 0;
      *(void *)(v4 + 8) = 0;
      sub_10016D488((void *)(v4 + 8), *(const void **)(v6 + 8), *(void *)(v6 + 16), *(void *)(v6 + 16) - *(void *)(v6 + 8));
      uint64_t v4 = v11 + 32;
      v11 += 32;
      v6 += 32;
    }
    while (v6 != a3);
  }
  char v9 = 1;
  sub_1002367C0((uint64_t)v8);
  return v4;
}

void sub_1002367AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1002367C0(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_10016DA20(a1);
  }
  return a1;
}

void sub_1002367FC()
{
}

__n128 sub_100236810(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x20uLL);
  *(void *)uint64_t v2 = off_10085AE08;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((void *)v2 + 3) = *(void *)(a1 + 24);
  return result;
}

__n128 sub_100236864(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_10085AE08;
  __n128 result = *(__n128 *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_10023689C(void *a1, unsigned int *a2)
{
  uint64_t v2 = a1[2];
  v3 = (uint64_t (*)(void *, void))a1[1];
  uint64_t v4 = (void *)(a1[3] + (v2 >> 1));
  if (v2) {
    v3 = *(uint64_t (**)(void *, void))(*v4 + v3);
  }
  return v3(v4, *a2);
}

uint64_t sub_1002368C8(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100236908()
{
}

void *sub_100236914(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_10023699C()
{
}

__n128 sub_1002369B0(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x20uLL);
  *(void *)uint64_t v2 = off_10085AEC8;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((void *)v2 + 3) = *(void *)(a1 + 24);
  return result;
}

__n128 sub_100236A04(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_10085AEC8;
  __n128 result = *(__n128 *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_100236A3C(void *a1, unsigned int *a2, void *a3)
{
  uint64_t v3 = a1[2];
  uint64_t v4 = (uint64_t (*)(void *, void, void))a1[1];
  v5 = (void *)(a1[3] + (v3 >> 1));
  if (v3) {
    uint64_t v4 = *(uint64_t (**)(void *, void, void))(*v5 + v4);
  }
  return v4(v5, *a2, *a3);
}

uint64_t sub_100236A6C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100236AAC()
{
}

void *sub_100236AB8(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_100236B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  uint64_t v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      *(unsigned char *)uint64_t v4 = *(unsigned char *)v6;
      *(void *)(v4 + 16) = 0;
      *(void *)(v4 + 24) = 0;
      *(void *)(v4 + 8) = 0;
      sub_10016D488((void *)(v4 + 8), *(const void **)(v6 + 8), *(void *)(v6 + 16), *(void *)(v6 + 16) - *(void *)(v6 + 8));
      uint64_t v4 = v11 + 32;
      v11 += 32;
      v6 += 32;
    }
    while (v6 != a3);
  }
  char v9 = 1;
  sub_1002367C0((uint64_t)v8);
  return v4;
}

void sub_100236BE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100236BF8()
{
}

void *sub_100236C0C(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *__n128 result = off_10085AF70;
  result[1] = v3;
  return result;
}

uint64_t sub_100236C54(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_10085AF70;
  a2[1] = v2;
  return result;
}

uint64_t sub_100236C80(uint64_t a1, uint64_t a2, void *a3)
{
  if (sub_1003A6F0C(a2))
  {
    if (os_log_type_enabled((os_log_t)qword_1008A5780, OS_LOG_TYPE_ERROR)) {
      sub_1004244DC();
    }
  }
  else if (sub_1003A6F80(a2) == 5)
  {
    unint64_t v6 = sub_1003D5120(a3);
    int v7 = v6;
    if (!(_WORD)v6) {
      return 0;
    }
    uint64_t v8 = *(void *)(a1 + 8);
    *(_WORD *)uint64_t v8 = v6;
    *(unsigned char *)(v8 + 2) = 1;
    if ((v6 & 0xFF00000000) != 0) {
      std::to_string(&v15, BYTE3(v6));
    }
    else {
      sub_100004950(&v15, "N/A");
    }
    uint64_t v10 = (id)qword_1008A5780;
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      sub_1003A8354((unsigned __int16)v7, __p);
      if (v14 >= 0) {
        uint64_t v11 = __p;
      }
      else {
        uint64_t v11 = (void **)__p[0];
      }
      v12 = &v15;
      if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        v12 = (std::string *)v15.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)buf = 136315650;
      v17 = v11;
      __int16 v18 = 1024;
      int v19 = BYTE2(v7);
      __int16 v20 = 2080;
      v21 = v12;
      _os_log_error_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "PRRose:applyConfigOptions,regulatory,failed to send regulatory config. Status: %s, numConfigsSetSuccessfully: %u, firstErroneousConfigId: %s", buf, 0x1Cu);
      if (v14 < 0) {
        operator delete(__p[0]);
      }
    }

    if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v15.__r_.__value_.__l.__data_);
    }
  }
  else if (os_log_type_enabled((os_log_t)qword_1008A5780, OS_LOG_TYPE_ERROR))
  {
    sub_100424470();
  }
  return 1;
}

void sub_100236E78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100236EA0(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100236EE0()
{
}

void *sub_100236EEC(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_100236F74()
{
}

void *sub_100236F88()
{
  __n128 result = operator new(0x10uLL);
  *__n128 result = off_10085B000;
  return result;
}

void sub_100236FC0(uint64_t a1, void *a2)
{
  *a2 = off_10085B000;
}

uint64_t sub_100236FE8(uint64_t a1, uint64_t a2, void *a3)
{
  int v5 = sub_1003A6F0C(a2);
  int v6 = sub_1003A6F80(a2);
  if (v5 || v6 != 5)
  {
    if (os_log_type_enabled((os_log_t)qword_1008A5780, OS_LOG_TYPE_FAULT)) {
      sub_100424548();
    }
    return 1;
  }
  if ((unsigned __int16)sub_1003D5120(a3))
  {
    if (os_log_type_enabled((os_log_t)qword_1008A5780, OS_LOG_TYPE_FAULT)) {
      sub_10042457C();
    }
    return 1;
  }
  return 0;
}

uint64_t sub_1002370A0(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_1002370E0()
{
}

void sub_1002370EC(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 2u);
}

uint64_t sub_100237104@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v2 - 8) = a2;
  atomic_load((unsigned int *)(result + 1240));
  return result;
}

uint64_t sub_10023711C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v2 - 8) = a2;
  atomic_load((unsigned int *)(result + 1240));
  return result;
}

unsigned int *sub_100237148@<X0>(unsigned int *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v2 - 8) = a2;
  atomic_load(result);
  return result;
}

void sub_100237168(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_fault_impl(a1, log, OS_LOG_TYPE_FAULT, a4, (uint8_t *)va, 0x16u);
}

void sub_100237188()
{
  qword_1008A5780 = (uint64_t)os_log_create("com.apple.nearbyd", "Driver");
}

double sub_1002371DC(uint64_t a1)
{
  v3[2] = xmmword_1004BC2B8;
  v3[3] = unk_1004BC2C8;
  v3[4] = xmmword_1004BC2D8;
  v3[0] = xmmword_1004BC298;
  v3[1] = unk_1004BC2A8;
  uint64_t v1 = sub_1002381BC(a1, (int *)v3, 5);
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 24) = v1 + 32;
  *(void *)(v1 + 40) = 0;
  *(void *)(v1 + 48) = 0;
  *(unsigned char *)(v1 + 56) = 0;
  *(unsigned char *)(v1 + 108) = 0;
  double result = 0.0;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_OWORD *)(v1 + 80) = 0u;
  *(_OWORD *)(v1 + 89) = 0u;
  return result;
}

void sub_100237278(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100012C10(a1);
}

void sub_100237288(uint64_t a1, unint64_t a2, int a3, double a4)
{
  if (*(unsigned char *)(a1 + 56))
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
      sub_100424628();
    }
    uint64_t v10 = *(void **)(a1 + 32);
    char v9 = (uint64_t **)(a1 + 32);
    uint64_t v8 = v10;
    if (v10)
    {
      uint64_t v11 = v9;
      do
      {
        unint64_t v12 = v8[4];
        BOOL v13 = v12 >= a2;
        if (v12 >= a2) {
          char v14 = v8;
        }
        else {
          char v14 = v8 + 1;
        }
        if (v13) {
          uint64_t v11 = (uint64_t **)v8;
        }
        uint64_t v8 = (void *)*v14;
      }
      while (*v14);
      if (v11 != v9 && (unint64_t)v11[4] <= a2) {
        sub_1002D4F54(v11 + 5, a3, a4);
      }
    }
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_1004245F4();
  }
}

void sub_100237368(uint64_t a1, unint64_t a2, void *a3, double a4)
{
  id v7 = a3;
  if (*(unsigned char *)(a1 + 56))
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
      sub_1004246DC();
    }
    uint64_t v10 = *(void **)(a1 + 32);
    char v9 = (void *)(a1 + 32);
    uint64_t v8 = v10;
    if (v10)
    {
      uint64_t v11 = v9;
      do
      {
        unint64_t v12 = v8[4];
        BOOL v13 = v12 >= a2;
        if (v12 >= a2) {
          char v14 = v8;
        }
        else {
          char v14 = v8 + 1;
        }
        if (v13) {
          uint64_t v11 = v8;
        }
        uint64_t v8 = (void *)*v14;
      }
      while (*v14);
      if (v11 != v9 && v11[4] <= a2) {
        sub_1002D5B20((uint64_t)(v11 + 5), v7, a4);
      }
    }
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_1004246A8();
  }
}

void sub_100237448(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

double sub_100237458(uint64_t a1, double a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100424748();
  }
  int v4 = *(_DWORD *)(a1 + 40);
  if (v4 >= 4) {
    int v4 = 4;
  }
  int v8 = v4;
  double v5 = a2 - *(double *)(a1 + 88);
  char v9 = &v8;
  int v6 = sub_1001A284C((uint64_t **)a1, &v8, (uint64_t)&unk_1004BC2F8, &v9);
  double result = v5 + *((double *)v6 + 5);
  *((double *)v6 + 5) = result;
  *(double *)(a1 + 88) = a2;
  return result;
}

void sub_100237508(uint64_t a1, unint64_t a2, int a3, double a4)
{
  unint64_t v40 = a2;
  if (*(unsigned char *)(a1 + 56))
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
      sub_100424854();
    }
    int v8 = *(void **)(a1 + 32);
    if (!v8) {
      goto LABEL_31;
    }
    uint64_t v9 = a1 + 32;
    do
    {
      unint64_t v10 = v8[4];
      BOOL v11 = v10 >= a2;
      if (v10 >= a2) {
        unint64_t v12 = v8;
      }
      else {
        unint64_t v12 = v8 + 1;
      }
      if (v11) {
        uint64_t v9 = (uint64_t)v8;
      }
      int v8 = (void *)*v12;
    }
    while (*v12);
    if (v9 == a1 + 32 || *(void *)(v9 + 32) > a2)
    {
LABEL_31:
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
        sub_1004247E8();
      }
      sub_100237458(a1, a4);
      sub_1002D4CE8(v29);
      v41 = &v40;
      BOOL v13 = sub_10023846C((uint64_t **)(a1 + 24), &v40, (uint64_t)&unk_1004BC2F8, (uint64_t **)&v41);
      long long v14 = *(_OWORD *)&v30[9];
      long long v16 = v29[3];
      long long v15 = *(_OWORD *)v30;
      *(_OWORD *)(v13 + 9) = v29[2];
      *(_OWORD *)(v13 + 11) = v16;
      *(_OWORD *)(v13 + 13) = v15;
      *(_OWORD *)((char *)v13 + 113) = v14;
      long long v17 = v29[1];
      *(_OWORD *)(v13 + 5) = v29[0];
      *(_OWORD *)(v13 + 7) = v17;
      __int16 v18 = v13 + 18;
      sub_10003E96C((uint64_t)(v13 + 17), (void *)v13[18]);
      int v19 = v32;
      v13[17] = (uint64_t)v31;
      v13[18] = (uint64_t)v19;
      uint64_t v20 = v33;
      v13[19] = v33;
      if (v20)
      {
        v19[2] = v18;
        v31 = &v32;
        v32 = 0;
        uint64_t v33 = 0;
      }
      else
      {
        v13[17] = (uint64_t)v18;
      }
      v21 = v13 + 21;
      sub_10003E96C((uint64_t)(v13 + 20), (void *)v13[21]);
      v22 = v35;
      v13[20] = (uint64_t)v34;
      v13[21] = (uint64_t)v22;
      uint64_t v23 = v36;
      v13[22] = v36;
      if (v23)
      {
        v22[2] = v21;
        v34 = &v35;
        v35 = 0;
        uint64_t v36 = 0;
      }
      else
      {
        v13[20] = (uint64_t)v21;
      }
      v25 = (char *)v13[24];
      v24 = v13 + 24;
      sub_10019C998((uint64_t)(v24 - 1), v25);
      uint64_t v26 = v38;
      *(v24 - 1) = v37;
      void *v24 = v26;
      uint64_t v27 = v39;
      v24[1] = v39;
      if (v27)
      {
        *(void *)(v26 + 16) = v24;
        v37 = &v38;
        uint64_t v38 = 0;
        uint64_t v39 = 0;
        uint64_t v26 = 0;
      }
      else
      {
        *(v24 - 1) = v24;
      }
      sub_10019C998((uint64_t)&v37, (char *)v26);
      sub_10003E96C((uint64_t)&v34, v35);
      sub_10003E96C((uint64_t)&v31, v32);
      *(void *)&v29[0] = &v40;
      v28 = sub_10023846C((uint64_t **)(a1 + 24), &v40, (uint64_t)&unk_1004BC2F8, (uint64_t **)v29);
      sub_1002D4CEC((uint64_t)(v28 + 5), a3, *(void **)(a1 + 48), *(void *)(a1 + 104), a4);
    }
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_1004247B4();
  }
}

void sub_1002377BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1002377D0(uint64_t a1)
{
  return a1;
}

void sub_100237818(uint64_t a1, unint64_t a2, double a3)
{
  if (*(unsigned char *)(a1 + 56))
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
      sub_100424960();
    }
    int v6 = *(void **)(a1 + 32);
    if (v6)
    {
      uint64_t v7 = a1 + 32;
      do
      {
        unint64_t v8 = v6[4];
        BOOL v9 = v8 >= a2;
        if (v8 >= a2) {
          unint64_t v10 = v6;
        }
        else {
          unint64_t v10 = v6 + 1;
        }
        if (v9) {
          uint64_t v7 = (uint64_t)v6;
        }
        int v6 = (void *)*v10;
      }
      while (*v10);
      if (v7 != a1 + 32 && *(void *)(v7 + 32) <= a2)
      {
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
          sub_1004248F4();
        }
        sub_100237458(a1, a3);
        sub_1002D5064((double *)(v7 + 40), a3);
        *(double *)(a1 + 80) = *(double *)(v7 + 48) + *(double *)(a1 + 80);
        sub_100027218((uint64_t **)(a1 + 24), (uint64_t *)v7);
        sub_10020B37C(v7 + 32);
        operator delete((void *)v7);
      }
    }
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_1004248C0();
  }
}

void sub_10023795C(uint64_t a1, void *a2, int a3)
{
  *(_DWORD *)(a1 + 104) = a3;
  *(unsigned char *)(a1 + 108) = 1;
}

void sub_100237994(uint64_t a1, double a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_1004249CC();
  }
  *(double *)(a1 + 64) = a2;
  *(unsigned char *)(a1 + 56) = 1;
}

void sub_1002379F8(uint64_t a1, double a2)
{
  if (*(unsigned char *)(a1 + 56))
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
      sub_100424A6C();
    }
    int v4 = *(void **)(a1 + 24);
    if (v4 != (void *)(a1 + 32))
    {
      do
      {
        double v5 = (void *)v4[1];
        int v6 = v4;
        if (v5)
        {
          do
          {
            uint64_t v7 = v5;
            double v5 = (void *)*v5;
          }
          while (v5);
        }
        else
        {
          do
          {
            uint64_t v7 = (void *)v6[2];
            BOOL v8 = *v7 == (void)v6;
            int v6 = v7;
          }
          while (!v8);
        }
        BOOL v9 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 134217984;
          double v14 = a2;
          _os_log_debug_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "#handoffca removedDevice() called within sessionEnded(), monotonicTimeSeconds: %f, s", buf, 0xCu);
        }
        sub_100237818(a1, v4[4], a2);
        int v4 = v7;
      }
      while (v7 != (void *)(a1 + 32));
    }
    *(double *)(a1 + 72) = a2 - *(double *)(a1 + 64);
    unint64_t v10 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v11 = *(void *)(a1 + 64);
      uint64_t v12 = *(void *)(a1 + 72);
      *(_DWORD *)buf = 134218496;
      double v14 = a2;
      __int16 v15 = 2048;
      uint64_t v16 = v11;
      __int16 v17 = 2048;
      uint64_t v18 = v12;
      _os_log_debug_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "#handoffca no objects in session. Calling resetStatistics within removedDevice() monotonicTimeSeconds: %f s, fSessionStartTime: %f s, fSessionDuration: %f s", buf, 0x20u);
    }
    *(double *)(a1 + 96) = *(double *)(a1 + 80) + *(double *)(a1 + 72) / 3600.0 * 12.65;
    sub_100237C20(a1);
    sub_1002380E0(a1);
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_100424A38();
  }
}

void sub_100237C20(uint64_t a1)
{
  uint64_t v2 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 96);
    uint64_t v4 = *(void *)(a1 + 72);
    int v19 = &dword_1004BC2E8;
    double v5 = sub_1001A284C((uint64_t **)a1, &dword_1004BC2E8, (uint64_t)&unk_1004BC2F8, &v19)[5];
    int v19 = &dword_1004BC2EC;
    int v6 = sub_1001A284C((uint64_t **)a1, &dword_1004BC2EC, (uint64_t)&unk_1004BC2F8, &v19)[5];
    int v19 = &dword_1004BC2F0;
    uint64_t v7 = sub_1001A284C((uint64_t **)a1, &dword_1004BC2F0, (uint64_t)&unk_1004BC2F8, &v19)[5];
    int v19 = &dword_1004BC2F4;
    BOOL v8 = sub_1001A284C((uint64_t **)a1, &dword_1004BC2F4, (uint64_t)&unk_1004BC2F8, &v19)[5];
    *(_DWORD *)buf = 134219520;
    *(void *)&uint8_t buf[4] = v3;
    __int16 v23 = 1024;
    int v24 = 1;
    __int16 v25 = 2048;
    uint64_t v26 = v4;
    __int16 v27 = 2048;
    v28 = v5;
    __int16 v29 = 2048;
    v30 = v6;
    __int16 v31 = 2048;
    v32 = v7;
    __int16 v33 = 2048;
    v34 = v8;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#handoffca Handoff ranging session report: {\nEnergyExpendedPerSession:%f mWh,\nNumberOfSessions %d,\nSessionDuration %f s,\nTimeSpentRanging1Device %f s,\nTimeSpentRanging2Device %f s,\nTimeSpentRanging3Device %f s,\nTimeSpentRanging4OrMoreDevice %f s}", buf, 0x44u);
  }

  v20[0] = @"energyExpendedPerSession";
  BOOL v9 = +[NSNumber numberWithDouble:*(double *)(a1 + 96)];
  v21[0] = v9;
  v20[1] = @"numberOfSessions";
  unint64_t v10 = +[NSNumber numberWithInt:1];
  v21[1] = v10;
  v20[2] = @"sessionDuration";
  uint64_t v11 = +[NSNumber numberWithDouble:*(double *)(a1 + 72)];
  v21[2] = v11;
  v20[3] = @"timeSpentRanging1Device";
  *(void *)buf = &dword_1004BC2E8;
  uint64_t v12 = +[NSNumber numberWithDouble:*((double *)sub_1001A284C((uint64_t **)a1, &dword_1004BC2E8, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf) + 5)];
  v21[3] = v12;
  v20[4] = @"timeSpentRanging2Device";
  *(void *)buf = &dword_1004BC2EC;
  BOOL v13 = +[NSNumber numberWithDouble:*((double *)sub_1001A284C((uint64_t **)a1, &dword_1004BC2EC, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf) + 5)];
  v21[4] = v13;
  v20[5] = @"timeSpentRanging3Device";
  *(void *)buf = &dword_1004BC2F0;
  double v14 = +[NSNumber numberWithDouble:*((double *)sub_1001A284C((uint64_t **)a1, &dword_1004BC2F0, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf) + 5)];
  v21[5] = v14;
  v20[6] = @"timeSpentRanging4OrMoreDevice";
  *(void *)buf = &dword_1004BC2F4;
  __int16 v15 = +[NSNumber numberWithDouble:*((double *)sub_1001A284C((uint64_t **)a1, &dword_1004BC2F4, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf) + 5)];
  v21[6] = v15;
  uint64_t v16 = +[NSDictionary dictionaryWithObjects:v21 forKeys:v20 count:7];

  id v17 = v16;
  AnalyticsSendEventLazy();
  uint64_t v18 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "#handoffca Uploaded ranging session information through AnalyticsSendEventLazy", buf, 2u);
  }
}

void sub_10023806C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

double sub_1002380E0(uint64_t a1)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100424AD8();
  }
  v5[2] = xmmword_1004BC2B8;
  v5[3] = unk_1004BC2C8;
  v5[4] = xmmword_1004BC2D8;
  v5[0] = xmmword_1004BC298;
  v5[1] = unk_1004BC2A8;
  sub_1002385B0((uint64_t **)a1, (int *)v5, &v6);
  uint64_t v3 = *(void **)(a1 + 32);
  uint64_t v2 = a1 + 32;
  sub_10020B320(v2 - 8, v3);
  *(void *)(v2 - 8) = v2;
  *(void *)uint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  *(unsigned char *)(v2 + 24) = 0;
  double result = 0.0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(void *)(v2 + 64) = 0;
  return result;
}

id sub_1002381B4(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

uint64_t sub_1002381BC(uint64_t a1, int *a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 16 * a3;
    do
    {
      sub_10023823C((uint64_t **)a1, v4, a2, a2);
      a2 += 4;
      v6 -= 16;
    }
    while (v6);
  }
  return a1;
}

void sub_100238224(_Unwind_Exception *a1)
{
  sub_10003E96C(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_10023823C(uint64_t **a1, uint64_t *a2, int *a3, _OWORD *a4)
{
  uint64_t v6 = sub_1002382C4(a1, a2, &v11, &v10, a3);
  uint64_t v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    BOOL v8 = (uint64_t **)v6;
    uint64_t v7 = (uint64_t *)operator new(0x30uLL);
    *((_OWORD *)v7 + 2) = *a4;
    sub_100026D98(a1, (uint64_t)v11, v8, v7);
  }
  return v7;
}

uint64_t *sub_1002382C4(void *a1, uint64_t *a2, uint64_t **a3, uint64_t *a4, int *a5)
{
  double v5 = a1 + 1;
  if (a1 + 1 == a2 || (int v6 = *a5, v7 = *((_DWORD *)a2 + 8), *a5 < v7))
  {
    BOOL v8 = (uint64_t *)*a2;
    if ((uint64_t *)*a1 == a2)
    {
      uint64_t v10 = a2;
LABEL_17:
      if (v8)
      {
        *a3 = v10;
        return v10 + 1;
      }
      else
      {
        *a3 = a2;
        return a2;
      }
    }
    if (v8)
    {
      BOOL v9 = (uint64_t *)*a2;
      do
      {
        uint64_t v10 = v9;
        BOOL v9 = (uint64_t *)v9[1];
      }
      while (v9);
    }
    else
    {
      BOOL v13 = a2;
      do
      {
        uint64_t v10 = (uint64_t *)v13[2];
        BOOL v14 = *v10 == (void)v13;
        BOOL v13 = v10;
      }
      while (v14);
    }
    int v15 = *a5;
    if (*((_DWORD *)v10 + 8) < *a5) {
      goto LABEL_17;
    }
    uint64_t v16 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          id v17 = (uint64_t *)v16;
          int v18 = *(_DWORD *)(v16 + 32);
          if (v15 >= v18) {
            break;
          }
          uint64_t v16 = *v17;
          double v5 = v17;
          if (!*v17) {
            goto LABEL_29;
          }
        }
        if (v18 >= v15) {
          break;
        }
        double v5 = v17 + 1;
        uint64_t v16 = v17[1];
      }
      while (v16);
    }
    else
    {
      id v17 = a1 + 1;
    }
LABEL_29:
    *a3 = v17;
    return v5;
  }
  if (v7 >= v6)
  {
    *a3 = a2;
    *a4 = (uint64_t)a2;
    return a4;
  }
  uint64_t v11 = a2[1];
  if (v11)
  {
    uint64_t v12 = (uint64_t *)a2[1];
    do
    {
      a4 = v12;
      uint64_t v12 = (uint64_t *)*v12;
    }
    while (v12);
  }
  else
  {
    int v19 = a2;
    do
    {
      a4 = (uint64_t *)v19[2];
      BOOL v14 = *a4 == (void)v19;
      int v19 = a4;
    }
    while (!v14);
  }
  if (a4 != v5 && v6 >= *((_DWORD *)a4 + 8))
  {
    uint64_t v20 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          v21 = (uint64_t *)v20;
          int v22 = *(_DWORD *)(v20 + 32);
          if (v6 >= v22) {
            break;
          }
          uint64_t v20 = *v21;
          double v5 = v21;
          if (!*v21) {
            goto LABEL_48;
          }
        }
        if (v22 >= v6) {
          break;
        }
        double v5 = v21 + 1;
        uint64_t v20 = v21[1];
      }
      while (v20);
    }
    else
    {
      v21 = a1 + 1;
    }
LABEL_48:
    *a3 = v21;
    return v5;
  }
  if (v11)
  {
    *a3 = a4;
  }
  else
  {
    *a3 = a2;
    return a2 + 1;
  }
  return a4;
}

uint64_t *sub_10023846C(uint64_t **a1, unint64_t *a2, uint64_t a3, uint64_t **a4)
{
  int v7 = a1 + 1;
  int v6 = a1[1];
  BOOL v8 = a1 + 1;
  BOOL v9 = a1 + 1;
  if (v6)
  {
    unint64_t v10 = *a2;
    while (1)
    {
      while (1)
      {
        BOOL v9 = (uint64_t **)v6;
        unint64_t v11 = v6[4];
        if (v10 >= v11) {
          break;
        }
        int v6 = *v9;
        BOOL v8 = v9;
        if (!*v9) {
          goto LABEL_9;
        }
      }
      if (v11 >= v10) {
        break;
      }
      int v6 = v9[1];
      if (!v6)
      {
        BOOL v8 = v9 + 1;
        goto LABEL_9;
      }
    }
  }
  else
  {
LABEL_9:
    uint64_t v12 = (uint64_t *)operator new(0xD0uLL);
    v14[1] = v7;
    v12[4] = **a4;
    sub_1002D4CE8(v12 + 5);
    char v15 = 1;
    sub_100026D98(a1, (uint64_t)v9, v8, v12);
    v14[0] = 0;
    sub_100238558((uint64_t)v14, 0);
    return v12;
  }
  return (uint64_t *)v9;
}

void sub_100238558(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_10020B37C((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

uint64_t **sub_1002385B0(uint64_t **result, int *a2, int *a3)
{
  double v5 = result;
  if (result[2])
  {
    int v6 = *result;
    int v7 = result[1];
    *double result = (uint64_t *)(result + 1);
    v7[2] = 0;
    result[1] = 0;
    result[2] = 0;
    if (v6[1]) {
      BOOL v8 = (uint64_t *)v6[1];
    }
    else {
      BOOL v8 = v6;
    }
    unint64_t v10 = result;
    unint64_t v11 = v8;
    uint64_t v12 = v8;
    if (v8)
    {
      unint64_t v11 = sub_10016DE9C((uint64_t)v8);
      while (a2 != a3)
      {
        sub_1002386B8(v5, a2, (uint64_t)v8);
        if (v9)
        {
          BOOL v8 = v11;
          uint64_t v12 = v11;
          if (!v11)
          {
            a2 += 4;
            break;
          }
          unint64_t v11 = sub_10016DE9C((uint64_t)v11);
        }
        else
        {
          BOOL v8 = v12;
        }
        a2 += 4;
        if (!v8) {
          break;
        }
      }
    }
    double result = (uint64_t **)sub_10016DEF0((uint64_t)&v10);
  }
  while (a2 != a3)
  {
    double result = sub_100238750(v5, a2, a2);
    a2 += 4;
  }
  return result;
}

void sub_1002386A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10016DEF0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t **sub_1002386B8(uint64_t **a1, int *a2, uint64_t a3)
{
  uint64_t v4 = a1 + 1;
  double v5 = a1[1];
  int v6 = *a2;
  if (v5)
  {
    while (1)
    {
      while (1)
      {
        int v7 = (uint64_t **)v5;
        int v8 = *((_DWORD *)v5 + 8);
        if (v6 >= v8) {
          break;
        }
        double v5 = *v7;
        uint64_t v4 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }
      if (v8 >= v6) {
        return v7;
      }
      double v5 = v7[1];
      if (!v5)
      {
        uint64_t v4 = v7 + 1;
        goto LABEL_9;
      }
    }
  }
  else
  {
    int v7 = a1 + 1;
LABEL_9:
    *(_DWORD *)(a3 + 32) = v6;
    *(void *)(a3 + 40) = *((void *)a2 + 1);
    sub_100026D98(a1, (uint64_t)v7, v4, (uint64_t *)a3);
  }
  return (uint64_t **)a3;
}

uint64_t **sub_100238750(uint64_t **a1, int *a2, _OWORD *a3)
{
  int v6 = a1 + 1;
  double v5 = a1[1];
  if (v5)
  {
    int v7 = *a2;
    while (1)
    {
      while (1)
      {
        int v8 = (uint64_t **)v5;
        int v9 = *((_DWORD *)v5 + 8);
        if (v7 >= v9) {
          break;
        }
        double v5 = *v8;
        int v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (v9 >= v7) {
        break;
      }
      double v5 = v8[1];
      if (!v5)
      {
        int v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    int v8 = a1 + 1;
LABEL_10:
    unint64_t v10 = (uint64_t *)operator new(0x30uLL);
    *((_OWORD *)v10 + 2) = *a3;
    sub_100026D98(a1, (uint64_t)v8, v6, v10);
    return (uint64_t **)v10;
  }
  return v8;
}

void *sub_10023880C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085B5F0[a1]);
}

void *sub_100238820@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085B648[a1]);
}

void *sub_100238834@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085B690[a1]);
}

void *sub_100238848@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085B6B0[a1]);
}

void sub_1002388D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100238980(uint64_t a1)
{
  id v1 = [objc_alloc(*(Class *)(a1 + 32)) initPrivate];
  uint64_t v2 = (void *)qword_1008A5788;
  qword_1008A5788 = (uint64_t)v1;
}

void sub_100238B7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

id sub_100238BB0(uint64_t a1)
{
  return [*(id *)(a1 + 32) processVisionInput:*(void *)(a1 + 40)];
}

void sub_100238D00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  os_unfair_lock_unlock(v10);

  _Unwind_Resume(a1);
}

void sub_100238D84(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

BOOL sub_100238DD4(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v38 = a1;
  int v39 = 0;
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  if (*(unsigned char *)(a2 + 160)) {
    v5 |= 8u;
  }
  if (*(unsigned char *)(a2 + 72))
  {
    if (*(unsigned char *)(a2 + 112))
    {
      int v6 = qword_1008ABDE0;
      BOOL result = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT);
      if (result)
      {
        sub_100424B5C(v6);
        return 0;
      }
      return result;
    }
    v5 |= 2u;
    int v8 = (double *)(a2 + 80);
  }
  else
  {
    int v8 = (double *)(a2 + 80);
    if (*(unsigned char *)(a2 + 112)) {
      v5 |= 4u;
    }
  }
  unsigned int v9 = v5;
  sub_100004950(__p, "measurement type");
  sub_1002395B4((uint64_t)&v38, 4u, v9);
  if (v37 < 0) {
    operator delete(__p[0]);
  }
  if (*(unsigned char *)(a2 + 16))
  {
    double v10 = *(double *)a2;
    sub_100004950(__p, "bounded displacement enter timestamp");
    sub_1002396A8((uint64_t)&v38, 0xCu, 0.0, 409.5, 0.1, v10);
    if (v37 < 0) {
      operator delete(__p[0]);
    }
    if (!*(unsigned char *)(a2 + 16)) {
      goto LABEL_90;
    }
    int v11 = *(_DWORD *)(a2 + 8);
    if (v11)
    {
      if (v11 == 1)
      {
        sub_100004950(__p, "bounded displacement category::slowly_moving");
        sub_1002395B4((uint64_t)&v38, 2u, 1u);
      }
      else
      {
        if (v11 != 2) {
          goto LABEL_24;
        }
        sub_100004950(__p, "bounded displacement category::walking_or_unknown");
        sub_1002395B4((uint64_t)&v38, 2u, 2u);
      }
    }
    else
    {
      sub_100004950(__p, "bounded displacement category::static");
      sub_1002395B4((uint64_t)&v38, 2u, 0);
    }
    if (v37 < 0) {
      operator delete(__p[0]);
    }
  }
LABEL_24:
  if (*(unsigned char *)(a2 + 72))
  {
    double v12 = *(double *)(a2 + 24);
    sub_100004950(__p, "measured displacement enter timestamp");
    sub_1002396A8((uint64_t)&v38, 0xCu, 0.0, 409.5, 0.1, v12);
    if (v37 < 0) {
      operator delete(__p[0]);
    }
    double v13 = *(double *)(a2 + 32);
    sub_100004950(__p, "measured displacement applicability timestamp");
    sub_1002396A8((uint64_t)&v38, 6u, 0.0, 6.3, 0.1, v13);
    if (v37 < 0) {
      operator delete(__p[0]);
    }
    int v14 = *(_DWORD *)(a2 + 40);
    if (v14)
    {
      if (v14 != 1)
      {
LABEL_43:
        double v19 = *(double *)(a2 + 48);
        sub_100004950(__p, "measured displacement h1");
        sub_1002396A8((uint64_t)&v38, 0xDu, -409.6, 409.5, 0.1, v19);
        if (v37 < 0) {
          operator delete(__p[0]);
        }
        double v20 = *(double *)(a2 + 56);
        sub_100004950(__p, "measured displacement h2");
        sub_1002396A8((uint64_t)&v38, 0xDu, -409.6, 409.5, 0.1, v20);
        if (v37 < 0) {
          operator delete(__p[0]);
        }
        double v21 = *(double *)(a2 + 64);
        sub_100004950(__p, "measured displacement v");
        sub_1002396A8((uint64_t)&v38, 9u, -25.6, 25.5, 0.1, v21);
        goto LABEL_48;
      }
      sub_100004950(__p, "measured displacement source::INERTIAL");
      sub_1002395B4((uint64_t)&v38, 1u, 1u);
    }
    else
    {
      sub_100004950(__p, "measured displacement source::VIO");
      sub_1002395B4((uint64_t)&v38, 1u, 0);
    }
    if (v37 < 0) {
      operator delete(__p[0]);
    }
    goto LABEL_43;
  }
  if (!*(unsigned char *)(a2 + 112)) {
    goto LABEL_50;
  }
  double v15 = *v8;
  sub_100004950(__p, "measured velocity enter timestamp");
  sub_1002396A8((uint64_t)&v38, 0xCu, 0.0, 409.5, 0.1, v15);
  if (v37 < 0) {
    operator delete(__p[0]);
  }
  double v16 = *(double *)(a2 + 88);
  sub_100004950(__p, "measured velocity applicability timestamp");
  sub_1002396A8((uint64_t)&v38, 6u, 0.0, 6.3, 0.1, v16);
  if (v37 < 0) {
    operator delete(__p[0]);
  }
  double v17 = *(double *)(a2 + 96);
  sub_100004950(__p, "measured velocity change h1");
  sub_1002396A8((uint64_t)&v38, 8u, -6.4, 6.35, 0.05, v17);
  if (v37 < 0) {
    operator delete(__p[0]);
  }
  double v18 = *(double *)(a2 + 104);
  sub_100004950(__p, "measured velocity change h2");
  sub_1002396A8((uint64_t)&v38, 8u, -6.4, 6.35, 0.05, v18);
LABEL_48:
  if (v37 < 0) {
    operator delete(__p[0]);
  }
LABEL_50:
  if (*(unsigned char *)(a2 + 160))
  {
    double v22 = *(double *)(a2 + 136);
    sub_100004950(__p, "northerly offset");
    sub_1002396A8((uint64_t)&v38, 0xAu, -512.0, 511.0, 1.0, v22);
    if (v37 < 0) {
      operator delete(__p[0]);
    }
    if (*(unsigned char *)(a2 + 160))
    {
      double v23 = *(double *)(a2 + 144);
      sub_100004950(__p, "easterly offset");
      sub_1002396A8((uint64_t)&v38, 0xAu, -512.0, 511.0, 1.0, v23);
      if (v37 < 0) {
        operator delete(__p[0]);
      }
      if (*(unsigned char *)(a2 + 160))
      {
        unsigned int v24 = *(_DWORD *)(a2 + 152);
        sub_100004950(__p, "location data uncertainty");
        sub_1002395B4((uint64_t)&v38, 4u, v24);
        if (v37 < 0) {
          operator delete(__p[0]);
        }
        goto LABEL_59;
      }
    }
LABEL_90:
    sub_10000AE44();
  }
LABEL_59:
  if (a3[1]) {
    unsigned __int8 v25 = *a3;
  }
  else {
    unsigned __int8 v25 = 0;
  }
  unsigned int v26 = v25;
  sub_100004950(__p, "hangup bit");
  sub_1002395B4((uint64_t)&v38, 1u, v26);
  if (v37 < 0) {
    operator delete(__p[0]);
  }
  if (a3[3]) {
    unsigned __int8 v27 = a3[2];
  }
  else {
    unsigned __int8 v27 = 0;
  }
  unsigned int v28 = v27;
  sub_100004950(__p, "finder_gone bit");
  sub_1002395B4((uint64_t)&v38, 1u, v28);
  if (v37 < 0) {
    operator delete(__p[0]);
  }
  if (a3[5]) {
    unsigned __int8 v29 = a3[4];
  }
  else {
    unsigned __int8 v29 = 0;
  }
  unsigned int v30 = v29;
  sub_100004950(__p, "findee_gone bit");
  sub_1002395B4((uint64_t)&v38, 1u, v30);
  if (v37 < 0) {
    operator delete(__p[0]);
  }
  if (a3[7]) {
    unsigned __int8 v31 = a3[6];
  }
  else {
    unsigned __int8 v31 = 0;
  }
  unsigned int v32 = v31;
  sub_100004950(__p, "finder_wants_updates bit");
  sub_1002395B4((uint64_t)&v38, 1u, v32);
  if (v37 < 0) {
    operator delete(__p[0]);
  }
  unsigned int v33 = a3[8];
  sub_100004950(__p, "finder_isPhone bit");
  sub_1002395B4((uint64_t)&v38, 1u, v33);
  if (v37 < 0) {
    operator delete(__p[0]);
  }
  if (*(unsigned char *)(a2 + 169)) {
    unsigned __int8 v34 = *(unsigned char *)(a2 + 168);
  }
  else {
    unsigned __int8 v34 = 0;
  }
  unsigned int v35 = v34;
  sub_100004950(__p, "findee_is_in_good_gnss_conditions bit");
  sub_1002395B4((uint64_t)&v38, 1u, v35);
  if (v37 < 0) {
    operator delete(__p[0]);
  }
  sub_100004950(__p, "finding_data_reserved");
  sub_1002395B4((uint64_t)&v38, 7u, 0);
  if (v37 < 0) {
    operator delete(__p[0]);
  }
  return 1;
}

void sub_100239534(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002395B4(uint64_t a1, unsigned int a2, unsigned int a3)
{
  int v6 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG))
  {
    int v8 = *(_DWORD *)(a1 + 8);
    v9[0] = 67109632;
    v9[1] = v8;
    __int16 v10 = 1024;
    unsigned int v11 = a2;
    __int16 v12 = 1024;
    unsigned int v13 = a3;
    _os_log_debug_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "FindingFrame,writing unsigned curPos=%i, bitLen=%i, bitContents=%x", (uint8_t *)v9, 0x14u);
  }
  sub_10023A2F4((unint64_t **)a1, *(_DWORD *)(a1 + 8), a2, a3);
  *(_DWORD *)(a1 + 8) += a2;
  return 1;
}

uint64_t sub_1002396A8(uint64_t a1, unsigned int a2, double a3, double a4, double a5, double a6)
{
  if (a6 < a3 || a6 > a4)
  {
    __int16 v12 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
      sub_100424BA0(v12);
    }
  }
  unsigned int v13 = vcvtad_u64_f64((a6 - a3) / a5);
  int v14 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG))
  {
    int v16 = *(_DWORD *)(a1 + 8);
    v17[0] = 67109888;
    v17[1] = v16;
    __int16 v18 = 1024;
    unsigned int v19 = a2;
    __int16 v20 = 1024;
    unsigned int v21 = v13;
    __int16 v22 = 2048;
    double v23 = a6;
    _os_log_debug_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "FindingFrame,writing double curPos=%i, bitLen=%i, bitContents=%x, contents=%lf", (uint8_t *)v17, 0x1Eu);
  }
  sub_10023A2F4((unint64_t **)a1, *(_DWORD *)(a1 + 8), a2, v13);
  *(_DWORD *)(a1 + 8) += a2;
  return 1;
}

uint64_t sub_1002397F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  memset(&__p[7], 0, 17);
  *(unsigned char *)a2 = 0;
  *(unsigned char *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 24) = 0;
  *(unsigned char *)(a2 + 72) = 0;
  *(unsigned char *)(a2 + 80) = 0;
  *(unsigned char *)(a2 + 112) = 0;
  *(_OWORD *)(a2 + 113) = *(_OWORD *)__p;
  *(void *)(a2 + 129) = *(void *)&__p[16];
  *(unsigned char *)(a2 + 160) = 0;
  *(_WORD *)(a2 + 168) = 0;
  memset(__p, 0, sizeof(__p));
  sub_10016D488(__p, *(const void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 8) - *(void *)a1);
  int v58 = 0;
  uint64_t v56 = 0;
  int v5 = sub_100239D88((uint64_t)__p, 4u, (int *)&v56);
  char v6 = v56;
  if ((v56 & 1) == 0) {
    goto LABEL_13;
  }
  uint64_t v55 = 0;
  BOOL v7 = sub_100239E8C((uint64_t)__p, 0xCu, (double *)&v55, 0.0, 0.1);
  int v8 = sub_100239D88((uint64_t)__p, 2u, (int *)&v56 + 1);
  if (v5) {
    BOOL v9 = v7;
  }
  else {
    BOOL v9 = 0;
  }
  if (HIDWORD(v56) == 2)
  {
    int v44 = *(unsigned __int8 *)(a2 + 16);
    *(void *)a2 = v55;
    *(_DWORD *)(a2 + 8) = 2;
    if (v44) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (HIDWORD(v56) != 1)
  {
    if (HIDWORD(v56)) {
      goto LABEL_72;
    }
    int v10 = *(unsigned __int8 *)(a2 + 16);
    *(void *)a2 = v55;
    *(_DWORD *)(a2 + 8) = 0;
    if (v10) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  int v11 = *(unsigned __int8 *)(a2 + 16);
  *(void *)a2 = v55;
  *(_DWORD *)(a2 + 8) = 1;
  if (!v11) {
LABEL_11:
  }
    *(unsigned char *)(a2 + 16) = 1;
LABEL_12:
  int v5 = v8 & v9;
LABEL_13:
  int v12 = v5 != 0;
  if ((v6 & 2) == 0) {
    goto LABEL_22;
  }
  unsigned int v54 = 0;
  uint64_t v55 = 0;
  uint64_t v52 = 0;
  double v53 = 0.0;
  uint64_t v50 = 0;
  uint64_t v51 = 0;
  BOOL v13 = sub_100239E8C((uint64_t)__p, 0xCu, (double *)&v55, 0.0, 0.1);
  BOOL v14 = sub_100239E8C((uint64_t)__p, 6u, &v53, 0.0, 0.1);
  int v15 = sub_100239D88((uint64_t)__p, 1u, (int *)&v54);
  unsigned int v16 = v54;
  if (v54 > 1) {
    goto LABEL_72;
  }
  int v17 = v15 && v13 && v14;
  BOOL v18 = sub_100239E8C((uint64_t)__p, 0xDu, (double *)&v52, -409.6, 0.1);
  BOOL v19 = sub_100239E8C((uint64_t)__p, 0xDu, (double *)&v51, -409.6, 0.1);
  BOOL v20 = sub_100239E8C((uint64_t)__p, 9u, (double *)&v50, -25.6, 0.1);
  uint64_t v22 = v52;
  double v21 = v53;
  int v12 = v5 && v17 & (v18 && v19 && v20);
  uint64_t v24 = v50;
  uint64_t v23 = v51;
  int v25 = *(unsigned __int8 *)(a2 + 72);
  *(void *)(a2 + 24) = v55;
  *(double *)(a2 + 32) = v21;
  *(_DWORD *)(a2 + 40) = v16;
  *(void *)(a2 + 48) = v22;
  *(void *)(a2 + 56) = v23;
  *(void *)(a2 + 64) = v24;
  if (!v25)
  {
    *(unsigned char *)(a2 + 72) = 1;
    if ((v6 & 4) == 0) {
      goto LABEL_24;
    }
  }
  else
  {
LABEL_22:
    if ((v6 & 4) == 0) {
      goto LABEL_24;
    }
  }
  uint64_t v55 = 0;
  uint64_t v52 = 0;
  double v53 = 0.0;
  uint64_t v51 = 0;
  BOOL v26 = sub_100239E8C((uint64_t)__p, 0xCu, (double *)&v55, 0.0, 0.1);
  BOOL v27 = sub_100239E8C((uint64_t)__p, 6u, &v53, 0.0, 0.1);
  BOOL v28 = sub_100239E8C((uint64_t)__p, 8u, (double *)&v52, -6.4, 0.05);
  v12 &= (v26 && v27) & v28 & sub_100239E8C((uint64_t)__p, 8u, (double *)&v51, -6.4, 0.05);
  uint64_t v30 = v52;
  double v29 = v53;
  uint64_t v31 = v51;
  int v32 = *(unsigned __int8 *)(a2 + 112);
  *(void *)(a2 + 80) = v55;
  *(double *)(a2 + 88) = v29;
  *(void *)(a2 + 96) = v30;
  *(void *)(a2 + 104) = v31;
  if (!v32)
  {
    *(unsigned char *)(a2 + 112) = 1;
    if ((v6 & 8) == 0) {
      goto LABEL_30;
    }
    goto LABEL_25;
  }
LABEL_24:
  if ((v6 & 8) == 0) {
    goto LABEL_30;
  }
LABEL_25:
  uint64_t v55 = 0;
  double v53 = 0.0;
  LODWORD(v52) = 0;
  BOOL v33 = sub_100239E8C((uint64_t)__p, 0xAu, (double *)&v55, -512.0, 1.0);
  BOOL v34 = sub_100239E8C((uint64_t)__p, 0xAu, &v53, -512.0, 1.0);
  int v35 = sub_100239D88((uint64_t)__p, 4u, (int *)&v52);
  int v36 = v33 && v34;
  if (!v35) {
    int v36 = 0;
  }
  v12 &= v36;
  uint64_t v37 = v55;
  double v38 = v53;
  int v39 = v52;
  if (!*(unsigned char *)(a2 + 160)) {
    *(unsigned char *)(a2 + 160) = 1;
  }
  *(void *)(a2 + 136) = v37;
  *(double *)(a2 + 144) = v38;
  *(_DWORD *)(a2 + 152) = v39;
LABEL_30:
  if (sub_100239D88((uint64_t)__p, 1u, (int *)&v56 + 1)) {
    unsigned int v40 = v12;
  }
  else {
    unsigned int v40 = 0;
  }
  if (HIDWORD(v56) == 1)
  {
    __int16 v41 = 257;
  }
  else
  {
    if (HIDWORD(v56)) {
      goto LABEL_72;
    }
    __int16 v41 = 256;
  }
  *(_WORD *)a3 = v41;
  if (!sub_100239D88((uint64_t)__p, 1u, (int *)&v56 + 1)) {
    unsigned int v40 = 0;
  }
  if (HIDWORD(v56) == 1)
  {
    __int16 v42 = 257;
  }
  else
  {
    if (HIDWORD(v56)) {
      goto LABEL_72;
    }
    __int16 v42 = 256;
  }
  *(_WORD *)(a3 + 2) = v42;
  if (!sub_100239D88((uint64_t)__p, 1u, (int *)&v56 + 1)) {
    unsigned int v40 = 0;
  }
  if (HIDWORD(v56) == 1)
  {
    __int16 v43 = 257;
  }
  else
  {
    if (HIDWORD(v56)) {
      goto LABEL_72;
    }
    __int16 v43 = 256;
  }
  *(_WORD *)(a3 + 4) = v43;
  if (!sub_100239D88((uint64_t)__p, 1u, (int *)&v56 + 1)) {
    unsigned int v40 = 0;
  }
  if (HIDWORD(v56) == 1)
  {
    __int16 v45 = 257;
  }
  else
  {
    if (HIDWORD(v56)) {
      goto LABEL_72;
    }
    __int16 v45 = 256;
  }
  *(_WORD *)(a3 + 6) = v45;
  char v46 = 1;
  if (!sub_100239D88((uint64_t)__p, 1u, (int *)&v56 + 1)) {
    unsigned int v40 = 0;
  }
  if (HIDWORD(v56) != 1)
  {
    if (HIDWORD(v56)) {
      goto LABEL_72;
    }
    char v46 = 0;
  }
  *(unsigned char *)(a3 + 8) = v46;
  if (sub_100239D88((uint64_t)__p, 1u, (int *)&v56 + 1)) {
    uint64_t v47 = v40;
  }
  else {
    uint64_t v47 = 0;
  }
  if (!HIDWORD(v56))
  {
    __int16 v48 = 256;
    goto LABEL_77;
  }
  if (HIDWORD(v56) != 1)
  {
LABEL_72:
    uint64_t v47 = 0;
    goto LABEL_73;
  }
  __int16 v48 = 257;
LABEL_77:
  *(_WORD *)(a2 + 168) = v48;
LABEL_73:
  if (*(void *)__p)
  {
    *(void *)&__p[8] = *(void *)__p;
    operator delete(*(void **)__p);
  }
  return v47;
}

uint64_t sub_100239D88(uint64_t a1, unsigned int a2, int *a3)
{
  *a3 = 0;
  BOOL v6 = sub_10023A3C4((uint64_t *)a1, *(_DWORD *)(a1 + 24), a2, a3);
  uint64_t result = 0;
  if (v6)
  {
    int v8 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG))
    {
      int v9 = *(_DWORD *)(a1 + 24);
      int v10 = *a3;
      v11[0] = 67109632;
      v11[1] = v9;
      __int16 v12 = 1024;
      unsigned int v13 = a2;
      __int16 v14 = 1024;
      int v15 = v10;
      _os_log_debug_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "FindingFrame,reading unsigned curPos=%i, bitLen=%i, retVal=%x", (uint8_t *)v11, 0x14u);
    }
    *(_DWORD *)(a1 + 24) += a2;
    return 1;
  }
  return result;
}

BOOL sub_100239E8C(uint64_t a1, unsigned int a2, double *a3, double a4, double a5)
{
  unsigned int v16 = 0;
  BOOL v10 = sub_10023A3C4((uint64_t *)a1, *(_DWORD *)(a1 + 24), a2, &v16);
  if (v10)
  {
    unsigned int v11 = v16;
    *a3 = a4 + (double)v16 * a5;
    __int16 v12 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG))
    {
      int v14 = *(_DWORD *)(a1 + 24);
      double v15 = *a3;
      *(_DWORD *)buf = 67109888;
      int v18 = v14;
      __int16 v19 = 1024;
      unsigned int v20 = a2;
      __int16 v21 = 1024;
      unsigned int v22 = v11;
      __int16 v23 = 2048;
      double v24 = v15;
      _os_log_debug_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "FindingFrame,reading double curPos=%i, bitLen=%i, extractedVal=%x, retVal=%lf", buf, 0x1Eu);
    }
    *(_DWORD *)(a1 + 24) += a2;
  }
  return v10;
}

uint64_t sub_100239FBC(uint64_t **a1, uint64_t *a2)
{
  sub_100054E28((uint64_t)v17);
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (*a2 != v5)
  {
    do
    {
      *(_DWORD *)((char *)v19 + *(void *)(v18 - 24)) |= 0x4000u;
      LOBYTE(v15[0]) = 48;
      BOOL v6 = sub_1001771C8(&v18, (char *)v15);
      uint64_t v7 = *v6;
      *(uint64_t *)((char *)v6 + *(void *)(*v6 - 24) + 24) = 2;
      *(_DWORD *)((char *)v6 + *(void *)(v7 - 24) + 8) = *(_DWORD *)((unsigned char *)v6 + *(void *)(v7 - 24) + 8) & 0xFFFFFFB5 | 8;
      std::ostream::operator<<();
      ++v4;
    }
    while (v4 != v5);
  }
  int v8 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
  {
    int v11 = *((char *)a1 + 23);
    __int16 v12 = (uint64_t **)*a1;
    std::stringbuf::str();
    uint64_t v13 = (uint64_t)(v11 >= 0 ? a1 : v12);
    int v14 = v16 >= 0 ? v15 : (void **)v15[0];
    *(_DWORD *)buf = 136315394;
    uint64_t v22 = v13;
    __int16 v23 = 2080;
    double v24 = v14;
    _os_log_debug_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "FindingFrame,dataFrame [%s]: %s", buf, 0x16u);
    if (v16 < 0) {
      operator delete(v15[0]);
    }
  }

  *(void *)((char *)v17
  uint64_t v18 = v9;
  if (v20 < 0) {
    operator delete((void *)v19[8]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return std::ios::~ios();
}

void sub_10023A2C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);

  sub_100055100((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10023A2F4(unint64_t **a1, unsigned int a2, unsigned int a3, unsigned int a4)
{
  if (a3)
  {
    unsigned int v5 = a3;
    do
    {
      unsigned int v7 = a2;
      unint64_t v8 = (unint64_t)a2 >> 3;
      char v9 = a2 & 7;
      if (v5 >= 8 - (a2 & 7)) {
        int v10 = 8 - (a2 & 7);
      }
      else {
        int v10 = v5;
      }
      unint64_t v11 = **a1;
      unint64_t v12 = (*a1)[1] - v11;
      if (v12 <= (unint64_t)a2 >> 3)
      {
        sub_10003F834(*a1, (v8 + 1) - v12);
        unint64_t v11 = **a1;
        unint64_t v12 = (*a1)[1] - v11;
      }
      if (v12 <= v8) {
        sub_10023A440();
      }
      *(unsigned char *)(v11 + v8) |= (a4 & ~(-1 << v10)) << v9;
      a4 >>= v10;
      a2 = v10 + v7;
      v5 -= v10;
    }
    while (v5);
  }
  return 1;
}

BOOL sub_10023A3C4(uint64_t *a1, unsigned int a2, unsigned int a3, _DWORD *a4)
{
  *a4 = 0;
  if (!a3) {
    return 1;
  }
  int v4 = 0;
  int v5 = 0;
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1] - *a1;
  do
  {
    BOOL result = v7 > (unint64_t)a2 >> 3;
    if (v7 <= (unint64_t)a2 >> 3) {
      break;
    }
    unsigned int v9 = 8 - (a2 & 7);
    if (a3 < v9) {
      unsigned int v9 = a3;
    }
    v5 |= ((*(unsigned __int8 *)(v6 + ((unint64_t)a2 >> 3)) >> (a2 & 7)) & ~(-1 << v9)) << v4;
    *a4 = v5;
    a2 += v9;
    v4 += v9;
    a3 -= v9;
  }
  while (a3);
  return result;
}

void sub_10023A440()
{
}

void sub_10023A530(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10023A5CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10023A688(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10023A75C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10023A83C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10023A934(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10023AA44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10023AAD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10023AB90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10023AC58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10023AD10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_10023AD4C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, (&off_10085B728)[a1]);
}

void *sub_10023AD60@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, (&off_10085B780)[a1]);
}

void *sub_10023AD74@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, (&off_10085B7C8)[a1]);
}

void *sub_10023AD88@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, (&off_10085B7E8)[a1]);
}

void sub_10023B11C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10023B1B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  int v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)NIServerSessionLifeCycleManager;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_10023B280(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void sub_10023B344(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10023B460(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10023B470(uint64_t a1)
{
}

void sub_10023B478(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 8) allKeys];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  int v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_10023B590(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  sub_100004950(__p, "runWithConfigurationCalled");
  uint64_t v6 = (long long *)__p;
  uint64_t v3 = sub_10023D9A0(v2 + 56, __p, (uint64_t)&unk_1004BC2F8, &v6);
  ++v3[5];
  if (v10 < 0) {
    operator delete(*(void **)__p);
  }
  int v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 136);
    *(_DWORD *)__p = 138412546;
    *(void *)&__p[4] = @"runWithConfigurationCalled";
    __int16 v8 = 2112;
    uint64_t v9 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#lifecycle,%@ for session identifier: %@", __p, 0x16u);
  }
  *(unsigned char *)(*(void *)(a1 + 32) + 49) = 1;
}

void sub_10023B6B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

id sub_10023B6DC(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _watchdogLoop];
}

id sub_10023B758(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  sub_100004950(__p, "pauseCalled");
  unint64_t v7 = (long long *)__p;
  uint64_t v3 = sub_10023D9A0(v2 + 56, __p, (uint64_t)&unk_1004BC2F8, &v7);
  ++v3[5];
  if (v11 < 0) {
    operator delete(*(void **)__p);
  }
  int v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 136);
    *(_DWORD *)__p = 138412546;
    *(void *)&__p[4] = @"pauseCalled";
    __int16 v9 = 2112;
    uint64_t v10 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#lifecycle,%@ for session identifier: %@", __p, 0x16u);
  }
  id result = [*(id *)(a1 + 32) _removeAllPeers];
  *(unsigned char *)(*(void *)(a1 + 32) + 49) = 0;
  return result;
}

void sub_10023B884(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

id sub_10023B91C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  sub_100004950(__p, "invalidateCalled");
  unint64_t v7 = (long long *)__p;
  uint64_t v3 = sub_10023D9A0(v2 + 56, __p, (uint64_t)&unk_1004BC2F8, &v7);
  ++v3[5];
  if (v11 < 0) {
    operator delete(*(void **)__p);
  }
  int v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 136);
    *(_DWORD *)__p = 138412546;
    *(void *)&__p[4] = @"invalidateCalled";
    __int16 v9 = 2112;
    uint64_t v10 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#lifecycle,%@ for session identifier: %@", __p, 0x16u);
  }
  id result = [*(id *)(a1 + 32) _removeAllPeers];
  *(unsigned char *)(*(void *)(a1 + 32) + 52) = 1;
  return result;
}

void sub_10023BA4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10023BAE4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  sub_100004950(__p, "failedToAddPeer");
  uint64_t v6 = (long long *)__p;
  uint64_t v3 = sub_10023D9A0(v2 + 56, __p, (uint64_t)&unk_1004BC2F8, &v6);
  ++v3[5];
  if (v10 < 0) {
    operator delete(*(void **)__p);
  }
  int v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 136);
    *(_DWORD *)__p = 138412546;
    *(void *)&__p[4] = @"failedToAddPeer";
    __int16 v8 = 2112;
    uint64_t v9 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#lifecycle,%@ for session identifier: %@", __p, 0x16u);
  }
}

void sub_10023BC00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10023BC98(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  sub_100004950(__p, "failedToRemovePeer");
  uint64_t v6 = (long long *)__p;
  uint64_t v3 = sub_10023D9A0(v2 + 56, __p, (uint64_t)&unk_1004BC2F8, &v6);
  ++v3[5];
  if (v10 < 0) {
    operator delete(*(void **)__p);
  }
  int v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 136);
    *(_DWORD *)__p = 138412546;
    *(void *)&__p[4] = @"failedToRemovePeer";
    __int16 v8 = 2112;
    uint64_t v9 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#lifecycle,%@ for session identifier: %@", __p, 0x16u);
  }
}

void sub_10023BDB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

id sub_10023BE70(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  sub_100004950(__p, "startedDiscoveringPeersWithTokens");
  unint64_t v7 = (long long *)__p;
  uint64_t v3 = sub_10023D9A0(v2 + 56, __p, (uint64_t)&unk_1004BC2F8, &v7);
  ++v3[5];
  if (v11 < 0) {
    operator delete(*(void **)__p);
  }
  int v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 136);
    *(_DWORD *)__p = 138412546;
    *(void *)&__p[4] = @"startedDiscoveringPeersWithTokens";
    __int16 v9 = 2112;
    uint64_t v10 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#lifecycle,%@ for session identifier: %@", __p, 0x16u);
  }
  *(unsigned char *)(*(void *)(a1 + 32) + 48) = 1;
  return [*(id *)(a1 + 32) _startMonitoringPeersActivity:*(void *)(a1 + 40)];
}

void sub_10023BFA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10023C05C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  sub_100004950(__p, "stoppedDiscoveringPeersWithTokens");
  __int16 v9 = (long long *)__p;
  uint64_t v3 = sub_10023D9A0(v2 + 56, __p, (uint64_t)&unk_1004BC2F8, &v9);
  ++v3[5];
  if (SHIBYTE(v13) < 0) {
    operator delete(*(void **)__p);
  }
  int v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 40);
    uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 136);
    *(_DWORD *)__p = 138412802;
    *(void *)&__p[4] = @"stoppedDiscoveringPeersWithTokens";
    __int16 v11 = 2112;
    uint64_t v12 = v5;
    __int16 v13 = 2112;
    uint64_t v14 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#lifecycle,%@ %@ for session identifier: %@", __p, 0x20u);
  }
  [*(id *)(*(void *)(a1 + 32) + 8) removeObjectsForKeys:*(void *)(a1 + 40)];
  if (![*(id *)(*(void *)(a1 + 32) + 8) count])
  {
    *(unsigned char *)(*(void *)(a1 + 32) + 48) = 0;
    unint64_t v7 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 136);
      *(_DWORD *)__p = 138412546;
      *(void *)&__p[4] = @"removed all peers, discovery is inactive.";
      __int16 v11 = 2112;
      uint64_t v12 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#lifecycle,%@ for session identifier: %@", __p, 0x16u);
    }
  }
}

void sub_10023C20C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

id sub_10023C2A4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  sub_100004950(__p, "stoppedDiscoveringAllPeers");
  unint64_t v7 = (long long *)__p;
  uint64_t v3 = sub_10023D9A0(v2 + 56, __p, (uint64_t)&unk_1004BC2F8, &v7);
  ++v3[5];
  if (v11 < 0) {
    operator delete(*(void **)__p);
  }
  int v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 136);
    *(_DWORD *)__p = 138412546;
    *(void *)&__p[4] = @"stoppedDiscoveringAllPeers";
    __int16 v9 = 2112;
    uint64_t v10 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#lifecycle,%@ for session identifier: %@", __p, 0x16u);
  }
  *(unsigned char *)(*(void *)(a1 + 32) + 48) = 0;
  return [*(id *)(a1 + 32) _removeAllPeers];
}

void sub_10023C3D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10023C48C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  sub_100004950(__p, "peerLostCallbackReceived");
  uint64_t v8 = (long long *)__p;
  uint64_t v3 = sub_10023D9A0(v2 + 56, __p, (uint64_t)&unk_1004BC2F8, &v8);
  ++v3[5];
  if (v12 < 0) {
    operator delete(*(void **)__p);
  }
  int v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 136);
    *(_DWORD *)__p = 138412546;
    *(void *)&__p[4] = @"peerLostCallbackReceived";
    __int16 v10 = 2112;
    uint64_t v11 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#lifecycle,%@ for session identifier: %@", __p, 0x16u);
  }
  uint64_t v6 = [*(id *)(*(void *)(a1 + 32) + 8) objectForKey:*(void *)(a1 + 40)];
  unint64_t v7 = v6;
  if (v6)
  {
    [v6 setPeerLostCallbackReceived:1];
    [*(id *)(*(void *)(a1 + 32) + 8) setObject:v7 forKeyedSubscript:*(void *)(a1 + 40)];
  }
}

void sub_10023C5E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10023C684(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  sub_100004950(__p, "positioningSensorSessionStarted");
  uint64_t v6 = (long long *)__p;
  uint64_t v3 = sub_10023D9A0(v2 + 56, __p, (uint64_t)&unk_1004BC2F8, &v6);
  ++v3[5];
  if (v10 < 0) {
    operator delete(*(void **)__p);
  }
  int v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 136);
    *(_DWORD *)__p = 138412546;
    *(void *)&__p[4] = @"positioningSensorSessionStarted";
    __int16 v8 = 2112;
    uint64_t v9 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#lifecycle,%@ for session identifier: %@", __p, 0x16u);
  }
  *(unsigned char *)(*(void *)(a1 + 32) + 50) = 1;
}

void sub_10023C7AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10023C844(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  sub_100004950(__p, "positioningSensorSessionStopped");
  uint64_t v6 = (long long *)__p;
  uint64_t v3 = sub_10023D9A0(v2 + 56, __p, (uint64_t)&unk_1004BC2F8, &v6);
  ++v3[5];
  if (v10 < 0) {
    operator delete(*(void **)__p);
  }
  int v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 136);
    *(_DWORD *)__p = 138412546;
    *(void *)&__p[4] = @"positioningSensorSessionStopped";
    __int16 v8 = 2112;
    uint64_t v9 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#lifecycle,%@ for session identifier: %@", __p, 0x16u);
  }
  *(unsigned char *)(*(void *)(a1 + 32) + 50) = 0;
}

void sub_10023C968(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10023CA34(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 8) objectForKeyedSubscript:*(void *)(a1 + 40)];
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    sub_100004950(__p, "measurementReceivedForToken");
    unint64_t v7 = __p;
    int v4 = sub_10023D9A0(v3 + 56, (unsigned __int8 *)__p, (uint64_t)&unk_1004BC2F8, (long long **)&v7);
    ++v4[5];
    if (v6 < 0) {
      operator delete(__p[0]);
    }
    [v2 setLatestActivityTimestamp:*(double *)(a1 + 48)];
    [v2 setLatestActivityType:1];
  }
}

void sub_10023CAEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

id sub_10023CBB0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32) + 56;
  sub_100004950(__p, "peerHangupReceived");
  unint64_t v7 = __p;
  uint64_t v3 = sub_10023D9A0(v2, (unsigned __int8 *)__p, (uint64_t)&unk_1004BC2F8, (long long **)&v7);
  ++v3[5];
  if (v6 < 0) {
    operator delete(__p[0]);
  }
  return [*(id *)(*(void *)(a1 + 32) + 8) removeObjectForKey:*(void *)(a1 + 40)];
}

void sub_10023CC44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10023CD2C(void *a1)
{
  uint64_t v2 = a1[4] + 56;
  sub_100004950(__p, "isTrackingPeer:");
  unint64_t v7 = __p;
  uint64_t v3 = sub_10023D9A0(v2, (unsigned __int8 *)__p, (uint64_t)&unk_1004BC2F8, (long long **)&v7);
  ++v3[5];
  if (v6 < 0) {
    operator delete(__p[0]);
  }
  int v4 = [*(id *)(a1[4] + 8) objectForKey:a1[5]];
  *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = v4 != 0;
}

void sub_10023CDDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10023CF78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_10023D028(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id sub_10023D078(uint64_t a1)
{
  return [*(id *)(a1 + 32) peerInactivityPeriodExceeded:*(void *)(a1 + 40)];
}

void sub_10023D084(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 96));
  [WeakRetained lifecycleTimeoutBeforeTrackingForDiscoveryToken:*(void *)(a1 + 40)];
}

void sub_10023D0D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id sub_10023D0EC(uint64_t a1)
{
  return [*(id *)(a1 + 32) peerInactivityPeriodExceeded:*(void *)(a1 + 40)];
}

void sub_10023D0F8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 96));
  [WeakRetained lifecycleTimeoutAfterTrackingForDiscoveryToken:*(void *)(a1 + 40)];
}

void sub_10023D14C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id sub_10023D160(uint64_t a1)
{
  return _[*(id *)(a1 + 32) cycleElapsed];
}

void sub_10023D1A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10023D2B8(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(unsigned char *)(*(void *)(result + 32) + 48);
  return result;
}

uint64_t sub_10023D3A8(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(unsigned char *)(*(void *)(result + 32) + 49);
  return result;
}

uint64_t sub_10023D498(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(unsigned char *)(*(void *)(result + 32) + 50);
  return result;
}

uint64_t sub_10023D588(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(unsigned char *)(*(void *)(result + 32) + 51);
  return result;
}

uint64_t sub_10023D678(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(unsigned char *)(*(void *)(result + 32) + 52);
  return result;
}

void sub_10023D798(_Unwind_Exception *exception_object)
{
}

void sub_10023D95C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_10023D9A0(uint64_t a1, unsigned __int8 *a2, uint64_t a3, long long **a4)
{
  __int16 v8 = (void *)(a1 + 24);
  unint64_t v9 = sub_100003624(a1 + 24, (uint64_t)a2);
  unint64_t v10 = v9;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v4 = v9;
      if (v9 >= v11) {
        unint64_t v4 = v9 % v11;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v9;
    }
    uint64_t v14 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      for (i = *v14; i; i = *(void **)i)
      {
        unint64_t v16 = *((void *)i + 1);
        if (v16 == v10)
        {
          if (sub_100007880(a1 + 32, (unsigned __int8 *)i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11) {
              v16 %= v11;
            }
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4) {
            break;
          }
        }
      }
    }
  }
  int v17 = (void *)(a1 + 16);
  i = operator new(0x30uLL);
  *(void *)i = 0;
  *((void *)i + 1) = v10;
  uint64_t v18 = *a4;
  long long v19 = **a4;
  *((void *)i + 4) = *((void *)*a4 + 2);
  *((_OWORD *)i + 1) = v19;
  *((void *)v18 + 1) = 0;
  *((void *)v18 + 2) = 0;
  *(void *)uint64_t v18 = 0;
  *((void *)i + 5) = 0;
  float v20 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v21 = *(float *)(a1 + 32);
  if (!v11 || (float)(v21 * (float)v11) < v20)
  {
    BOOL v22 = 1;
    if (v11 >= 3) {
      BOOL v22 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v23 = v22 | (2 * v11);
    unint64_t v24 = vcvtps_u32_f32(v20 / v21);
    if (v23 <= v24) {
      size_t v25 = v24;
    }
    else {
      size_t v25 = v23;
    }
    sub_10002AA24(a1, v25);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
      else {
        unint64_t v4 = v10;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
  }
  uint64_t v26 = *(void *)a1;
  BOOL v27 = *(void **)(*(void *)a1 + 8 * v4);
  if (v27)
  {
    *(void *)i = *v27;
LABEL_38:
    *BOOL v27 = i;
    goto LABEL_39;
  }
  *(void *)i = *v17;
  void *v17 = i;
  *(void *)(v26 + 8 * v4) = v17;
  if (*(void *)i)
  {
    unint64_t v28 = *(void *)(*(void *)i + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v28 >= v11) {
        v28 %= v11;
      }
    }
    else
    {
      v28 &= v11 - 1;
    }
    BOOL v27 = (void *)(*(void *)a1 + 8 * v28);
    goto LABEL_38;
  }
LABEL_39:
  ++*v8;
  return i;
}

void sub_10023DC10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  sub_10003B4EC(v11, v10);
  _Unwind_Resume(a1);
}

void sub_10023DCD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10023DDDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10023DECC(uint64_t a1)
{
  id v1 = [objc_alloc(*(Class *)(a1 + 32)) _initInternal];
  uint64_t v2 = (void *)qword_1008A5798;
  qword_1008A5798 = (uint64_t)v1;
}

void sub_10023DFC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10023E290(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id sub_10023E2D0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) payloadDidChange];
}

void sub_10023E778(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_10023E7F0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_10023EAFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10023EC48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10023EED0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10023F1DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10023F35C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_10023F4B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10023F7A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10023F864(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10023FA68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10023FBD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10023FCF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10023FEF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100240104(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002402A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10024044C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100240644(id a1)
{
  id v3 = +[NSURL fileURLWithPath:@"/System/Library/Frameworks/NearbyInteraction.framework"];
  uint64_t v1 = +[NSBundle bundleWithURL:v3];
  uint64_t v2 = (void *)qword_1008A57A8;
  qword_1008A57A8 = v1;
}

double sub_100240BA0(uint64_t a1)
{
  *(unsigned char *)(a1 + 136) = 0;
  *(unsigned char *)(a1 + 144) = 0;
  *(unsigned char *)(a1 + 232) = 0;
  *(unsigned char *)(a1 + 240) = 0;
  *(unsigned char *)(a1 + 256) = 0;
  *(unsigned char *)(a1 + 264) = 0;
  *(unsigned char *)(a1 + 280) = 0;
  *(unsigned char *)(a1 + 320) = 0;
  *(void *)(a1 + 328) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(unsigned char *)(a1 + 48) = 0;
  *(void *)(a1 + 288) = 0;
  *(void *)(a1 + 296) = 0;
  *(unsigned char *)(a1 + 304) = 0;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_OWORD *)(a1 + 360) = 0u;
  *(_OWORD *)(a1 + 376) = 0u;
  return result;
}

std::string *sub_100240BEC(std::string *this, const std::string *__str, double a3)
{
  *(double *)&this[12].__r_.__value_.__l.__data_ = a3;
  *(double *)&this[16].__r_.__value_.__l.__data_ = a3;
  return std::string::operator=(this, __str);
}

uint64_t sub_100240BF8(std::string *a1, const std::string *a2)
{
  if (!a1[9].__r_.__value_.__s.__data_[16])
  {
    sub_100240C54((uint64_t)&a1[6], (uint64_t)a2);
    std::string::operator=(a1 + 1, a2 + 1);
  }

  return sub_100240C54((uint64_t)&a1[2], (uint64_t)a2);
}

uint64_t sub_100240C54(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 88))
  {
    long long v4 = *(_OWORD *)a2;
    *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
    *(_OWORD *)a1 = v4;
    std::string::operator=((std::string *)(a1 + 24), (const std::string *)(a2 + 24));
    if (a1 != a2) {
      sub_1001BE070((void *)(a1 + 48), *(char **)(a2 + 48), *(char **)(a2 + 56), *(void *)(a2 + 56) - *(void *)(a2 + 48));
    }
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  }
  else
  {
    sub_100241754(a1, (long long *)a2);
    *(unsigned char *)(a1 + 88) = 1;
  }
  return a1;
}

__n128 sub_100240CD8(__n128 *a1, __n128 result, double a3)
{
  if (!a1[17].n128_u8[8]) {
    a1[17].n128_u8[8] = 1;
  }
  a1[16].n128_f64[1] = a3;
  a1[17].n128_u32[0] = result.n128_u32[0];
  if (!a1[16].n128_u8[0])
  {
    double result = *(__n128 *)((char *)a1 + 264);
    a1[15] = result;
    a1[16].n128_u8[0] = 1;
  }
  return result;
}

uint64_t sub_100240D14(uint64_t result, uint64_t a2, uint64_t a3, double a4)
{
  switch(a3)
  {
    case 0:
      *(double *)(result + 376) = *(double *)(result + 376) + a4 - *(double *)(result + 288);
      if (a2 < 0) {
        goto LABEL_9;
      }
      goto LABEL_11;
    case 1:
      long long v4 = (double *)(result + 352);
      goto LABEL_7;
    case 4:
      long long v4 = (double *)(result + 360);
      goto LABEL_7;
    case 5:
      long long v4 = (double *)(result + 368);
LABEL_7:
      *long long v4 = *v4 + a4 - *(double *)(result + 384);
      break;
    default:
      break;
  }
  if (a2 >= a3) {
    ++*(_DWORD *)(result + 332);
  }
  else {
LABEL_9:
  }
    ++*(_DWORD *)(result + 328);
LABEL_11:
  if (a2 == 1 && *(double *)(result + 344) == 0.0) {
    *(double *)(result + 344) = a4 - *(double *)(result + 288);
  }
  *(void *)(result + 336) = a2;
  *(double *)(result + 384) = a4;
  return result;
}

void sub_100240DEC(uint64_t a1, double a2)
{
  switch(*(void *)(a1 + 336))
  {
    case 0:
      id v3 = (double *)(a1 + 376);
      goto LABEL_6;
    case 1:
      id v3 = (double *)(a1 + 352);
      goto LABEL_6;
    case 4:
      id v3 = (double *)(a1 + 360);
      goto LABEL_6;
    case 5:
      id v3 = (double *)(a1 + 368);
LABEL_6:
      *id v3 = *v3 + a2 - *(double *)(a1 + 384);
      break;
    default:
      break;
  }
  *(double *)(a1 + 296) = a2;
  sub_100240EA0(a1);

  sub_10024138C(a1);
}

void sub_100240EA0(uint64_t a1)
{
  id v2 = [(id)qword_1008AC4F0 mutableCopy];
  if (*(unsigned char *)(a1 + 280) && *(unsigned char *)(a1 + 256))
  {
    LODWORD(v3) = *(_DWORD *)(a1 + 272);
    long long v4 = +[NSNumber numberWithFloat:v3];
    [v2 setObject:v4 forKeyedSubscript:@"endingBRRMeasurement"];

    if (!*(unsigned char *)(a1 + 256)) {
      sub_10000AE44();
    }
    LODWORD(v5) = *(_DWORD *)(a1 + 248);
    char v6 = +[NSNumber numberWithFloat:v5];
    [v2 setObject:v6 forKeyedSubscript:@"firstBRRMeasurement"];
  }
  unint64_t v7 = +[NSNumber numberWithInt:*(unsigned int *)(a1 + 328)];
  [v2 setObject:v7 forKeyedSubscript:@"numberOfGotCloserRegionTransitions"];

  __int16 v8 = +[NSNumber numberWithInt:*(unsigned int *)(a1 + 332)];
  [v2 setObject:v8 forKeyedSubscript:@"numberOfGotFartherRegionTransitions"];

  unint64_t v9 = +[NSNumber numberWithDouble:*(double *)(a1 + 296) - *(double *)(a1 + 288)];
  [v2 setObject:v9 forKeyedSubscript:@"sessionDuration"];

  unint64_t v10 = +[NSNumber numberWithDouble:*(double *)(a1 + 376)];
  [v2 setObject:v10 forKeyedSubscript:@"timeSpentInSearching"];

  uint64_t v11 = +[NSNumber numberWithDouble:*(double *)(a1 + 368)];
  [v2 setObject:v11 forKeyedSubscript:@"timeSpentInFar"];

  uint8x8_t v12 = +[NSNumber numberWithDouble:*(double *)(a1 + 352)];
  [v2 setObject:v12 forKeyedSubscript:@"timeSpentInHere"];

  unint64_t v13 = +[NSNumber numberWithDouble:*(double *)(a1 + 360)];
  [v2 setObject:v13 forKeyedSubscript:@"timeSpentInNear"];

  if (*(unsigned char *)(a1 + 256))
  {
    uint64_t v14 = +[NSNumber numberWithDouble:*(double *)(a1 + 240) - *(double *)(a1 + 288)];
    [v2 setObject:v14 forKeyedSubscript:@"timeToFirstBRRMeasurement"];
  }
  if (*(unsigned char *)(a1 + 232))
  {
    double v15 = +[NSNumber numberWithDouble:*(double *)(a1 + 144) - *(double *)(a1 + 288)];
    [v2 setObject:v15 forKeyedSubscript:@"timeToFirstBTSample"];
  }
  unint64_t v16 = +[NSNumber numberWithDouble:*(double *)(a1 + 344)];
  [v2 setObject:v16 forKeyedSubscript:@"timeToHere"];

  int v17 = (void *)(a1 + 24);
  uint64_t v18 = (void *)(a1 + 24);
  if (*(char *)(a1 + 47) < 0) {
    uint64_t v18 = (void *)*v17;
  }
  long long v19 = +[NSString stringWithUTF8String:v18];
  float v20 = [&off_100878BA0 objectForKeyedSubscript:v19];
  [v2 setObject:v20 forKeyedSubscript:@"advertiserEnum"];

  if (*(char *)(a1 + 47) < 0) {
    int v17 = (void *)*v17;
  }
  float v21 = +[NSString stringWithUTF8String:v17];
  [v2 setObject:v21 forKeyedSubscript:@"advertiserString"];

  id v22 = v2;
  size_t v25 = v22;
  AnalyticsSendEventLazy();
  unint64_t v23 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
  {
    id v24 = +[NSString stringWithFormat:@"%@", v22, _NSConcreteStackBlock, 3221225472, sub_100241440, &unk_10085B848, v22];
    *(_DWORD *)buf = 136315138;
    id v27 = [v24 UTF8String];
    _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "#ni-ca-devicepresence submitting %s", buf, 0xCu);
  }
}

void sub_1002412F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10024138C(uint64_t a1)
{
  v4[88] = 0;
  v5[0] = 0;
  v5[88] = 0;
  v5[96] = 0;
  v5[112] = 0;
  v5[120] = 0;
  v5[136] = 0;
  char v9 = 0;
  *(_OWORD *)uint64_t v1 = 0u;
  *(_OWORD *)__p = 0u;
  long long v3 = 0u;
  v4[0] = 0;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  char v8 = 0;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  sub_100241448(a1, (long long *)v1);
  sub_1001A647C((uint64_t)v5);
  sub_1001A647C((uint64_t)v4);
  if (SHIBYTE(v3) < 0) {
    operator delete(__p[1]);
  }
  if (SHIBYTE(__p[0]) < 0) {
    operator delete(v1[0]);
  }
}

id sub_100241440(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

uint64_t sub_100241448(uint64_t a1, long long *a2)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  long long v4 = *a2;
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(_OWORD *)a1 = v4;
  *((unsigned char *)a2 + 23) = 0;
  *(unsigned char *)a2 = 0;
  double v5 = (void **)(a1 + 24);
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*v5);
  }
  long long v6 = *(long long *)((char *)a2 + 24);
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(_OWORD *)double v5 = v6;
  *((unsigned char *)a2 + 47) = 0;
  *((unsigned char *)a2 + 24) = 0;
  sub_1002415F4(a1 + 48, a2 + 3);
  sub_1002415F4(a1 + 144, a2 + 9);
  if (*(unsigned __int8 *)(a1 + 256) == *((unsigned __int8 *)a2 + 256))
  {
    if (*(unsigned char *)(a1 + 256))
    {
      *(void *)(a1 + 240) = *((void *)a2 + 30);
      *(_DWORD *)(a1 + 248) = *((_DWORD *)a2 + 62);
    }
  }
  else if (*(unsigned char *)(a1 + 256))
  {
    *(unsigned char *)(a1 + 256) = 0;
  }
  else
  {
    *(_OWORD *)(a1 + 240) = a2[15];
    *(unsigned char *)(a1 + 256) = 1;
  }
  if (*(unsigned __int8 *)(a1 + 280) == *((unsigned __int8 *)a2 + 280))
  {
    if (*(unsigned char *)(a1 + 280))
    {
      *(void *)(a1 + 264) = *((void *)a2 + 33);
      *(_DWORD *)(a1 + 272) = *((_DWORD *)a2 + 68);
    }
  }
  else if (*(unsigned char *)(a1 + 280))
  {
    *(unsigned char *)(a1 + 280) = 0;
  }
  else
  {
    *(_OWORD *)(a1 + 264) = *(long long *)((char *)a2 + 264);
    *(unsigned char *)(a1 + 280) = 1;
  }
  *(_OWORD *)(a1 + 288) = a2[18];
  if (*(unsigned __int8 *)(a1 + 320) == *((unsigned __int8 *)a2 + 320))
  {
    if (*(unsigned char *)(a1 + 320))
    {
      *(void *)(a1 + 304) = *((void *)a2 + 38);
      *(_DWORD *)(a1 + 312) = *((_DWORD *)a2 + 78);
    }
  }
  else if (*(unsigned char *)(a1 + 320))
  {
    *(unsigned char *)(a1 + 320) = 0;
  }
  else
  {
    *(_OWORD *)(a1 + 304) = a2[19];
    *(unsigned char *)(a1 + 320) = 1;
  }
  long long v7 = *(long long *)((char *)a2 + 328);
  long long v8 = *(long long *)((char *)a2 + 344);
  long long v9 = *(long long *)((char *)a2 + 376);
  *(_OWORD *)(a1 + 360) = *(long long *)((char *)a2 + 360);
  *(_OWORD *)(a1 + 376) = v9;
  *(_OWORD *)(a1 + 328) = v7;
  *(_OWORD *)(a1 + 344) = v8;
  return a1;
}

__n128 sub_1002415F4(uint64_t a1, long long *a2)
{
  if (*(unsigned __int8 *)(a1 + 88) == *((unsigned __int8 *)a2 + 88))
  {
    if (*(unsigned char *)(a1 + 88))
    {
      long long v4 = *a2;
      *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
      *(_OWORD *)a1 = v4;
      double v5 = (void **)(a1 + 24);
      if (*(char *)(a1 + 47) < 0) {
        operator delete(*v5);
      }
      long long v6 = *(long long *)((char *)a2 + 24);
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      *(_OWORD *)double v5 = v6;
      *((unsigned char *)a2 + 47) = 0;
      *((unsigned char *)a2 + 24) = 0;
      sub_100150500(a1 + 48, (__n128 *)a2 + 3);
      __n128 result = *(__n128 *)((char *)a2 + 72);
      *(__n128 *)(a1 + 72) = result;
    }
  }
  else if (*(unsigned char *)(a1 + 88))
  {
    sub_100241708(a1);
  }
  else
  {
    __n128 v8 = (__n128)*a2;
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    *(__n128 *)a1 = v8;
    long long v9 = *(long long *)((char *)a2 + 24);
    *(void *)(a1 + 40) = *((void *)a2 + 5);
    *(_OWORD *)(a1 + 24) = v9;
    *((void *)a2 + 4) = 0;
    *((void *)a2 + 5) = 0;
    *((void *)a2 + 3) = 0;
    *(void *)(a1 + 48) = 0;
    *(void *)(a1 + 56) = 0;
    *(void *)(a1 + 64) = 0;
    *(_OWORD *)(a1 + 48) = a2[3];
    *(void *)(a1 + 64) = *((void *)a2 + 8);
    *((void *)a2 + 7) = 0;
    *((void *)a2 + 8) = 0;
    *((void *)a2 + 6) = 0;
    __n128 result = *(__n128 *)((char *)a2 + 72);
    *(__n128 *)(a1 + 72) = result;
    *(unsigned char *)(a1 + 88) = 1;
  }
  return result;
}

void sub_100241708(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 88))
  {
    id v2 = *(void **)(a1 + 48);
    if (v2)
    {
      *(void *)(a1 + 56) = v2;
      operator delete(v2);
    }
    if (*(char *)(a1 + 47) < 0) {
      operator delete(*(void **)(a1 + 24));
    }
    *(unsigned char *)(a1 + 88) = 0;
  }
}

uint64_t sub_100241754(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
  *(_OWORD *)a1 = v4;
  if (*((char *)a2 + 47) < 0)
  {
    sub_100002DE4((unsigned char *)(a1 + 24), *((void **)a2 + 3), *((void *)a2 + 4));
  }
  else
  {
    long long v5 = *(long long *)((char *)a2 + 24);
    *(void *)(a1 + 40) = *((void *)a2 + 5);
    *(_OWORD *)(a1 + 24) = v5;
  }
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  sub_10016D488((void *)(a1 + 48), *((const void **)a2 + 6), *((void *)a2 + 7), *((void *)a2 + 7) - *((void *)a2 + 6));
  *(_OWORD *)(a1 + 72) = *(long long *)((char *)a2 + 72);
  return a1;
}

void sub_1002417E4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 47) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_100241800()
{
  long long v15 = xmmword_1004BC358;
  long long v16 = unk_1004BC368;
  sub_1001A003C((uint64_t)&unk_1008A57B8, (int *)&v15, 4);
  xmmword_1008A57D0 = xmmword_1004B7660;
  unk_1008A57E0 = xmmword_1004B7670;
  qword_1008A57F8 = 0;
  unk_1008A5800 = 0;
  qword_1008A57F0 = 0x3FD999999999999ALL;
  unk_1008A5808 = xmmword_1004B7680;
  dword_1008A5818 = 5;
  qword_1008A5820 = 0x4000000000000000;
  dword_1008A5828 = 5;
  byte_1008A5830 = 0;
  *(void *)&algn_1008A5831[3] = 0x30000000ALL;
  xmmword_1008A5840 = xmmword_1004B7690;
  unk_1008A5850 = xmmword_1004B76A0;
  xmmword_1008A5860 = xmmword_1004B76B0;
  qword_1008A5870 = 0x3FE3333333333333;
  dword_1008A5878 = 3;
  xmmword_1008A5880 = xmmword_1004B76C0;
  unk_1008A5890 = xmmword_1004B76A0;
  xmmword_1008A58A0 = xmmword_1004B7690;
  qword_1008A58B0 = 0x3FE3333333333333;
  byte_1008A58B8 = 0;
  xmmword_1008A58C0 = xmmword_1004B76D0;
  unk_1008A58D0 = xmmword_1004B76E0;
  __asm { FMOV            V0.2D, #1.0 }
  long long v13 = _Q0;
  xmmword_1008A58E0 = _Q0;
  qword_1008A58F0 = 0xBFD3333333333333;
  xmmword_1008A58F8 = xmmword_1004B76F0;
  qword_1008A5908 = 0x3E99999A40000000;
  xmmword_1008A5910 = xmmword_1004B7670;
  qword_1008A5928 = 0;
  unk_1008A5930 = 0;
  qword_1008A5920 = 0x3FD999999999999ALL;
  xmmword_1008A5938 = xmmword_1004B7680;
  dword_1008A5948 = 5;
  qword_1008A5950 = 0x4000000000000000;
  dword_1008A5958 = 4;
  qword_1008A5960 = 0x300000008;
  qword_1008A5968 = 0xC04E800000000000;
  v14[0] = -61.0;
  sub_1001A02EC((uint64_t)&unk_1008A5970, v14, 1);
  xmmword_1008A5988 = xmmword_1004B7700;
  qword_1008A5998 = 0x4024000000000000;
  dword_1008A59A0 = 45;
  byte_1008A59A8 = 0;
  byte_1008A59C0 = 0;
  qword_1008A59C8 = 0;
  byte_1008A59D0 = 0;
  dword_1008A59D4 = 1;
  byte_1008A59D8 = 1;
  xmmword_1008A59E0 = xmmword_1004B7710;
  unk_1008A59F0 = xmmword_1004B7720;
  xmmword_1008A5A00 = v13;
  qword_1008A5A10 = 0xC059000000000000;
  xmmword_1008A5A18 = xmmword_1004B7730;
  qword_1008A5A28 = (uint64_t)vdup_n_s32(0x3DCCCCCDu);
  xmmword_1008A5A30 = xmmword_1004B7670;
  qword_1008A5A40 = 0x3FD999999999999ALL;
  qword_1008A5A50 = 0;
  qword_1008A5A48 = 0;
  xmmword_1008A5A58 = xmmword_1004B7680;
  dword_1008A5A68 = 5;
  qword_1008A5A70 = 0x4000000000000000;
  dword_1008A5A78 = 10;
  qword_1008A5A80 = 0x4034000000000000;
  dword_1008A5A88 = 3;
  xmmword_1008A5A90 = xmmword_1004B7740;
  __cxa_atexit((void (*)(void *))sub_10019E4F8, &unk_1008A57B8, (void *)&_mh_execute_header);
  __cxa_atexit((void (*)(void *))nullsub_72, off_10089F048, (void *)&_mh_execute_header);
  __cxa_atexit((void (*)(void *))nullsub_73, &off_10089F050, (void *)&_mh_execute_header);
  qword_1008A5AA8 = 0;
  unk_1008A5AB0 = 0;
  qword_1008A5AA0 = 0;
  long long v6 = operator new(0x40uLL);
  qword_1008A5AA8 = (uint64_t)(v6 + 4);
  unk_1008A5AB0 = v6 + 4;
  _OWORD *v6 = xmmword_1004BC378;
  v6[1] = unk_1004BC388;
  v6[2] = xmmword_1004BC398;
  v6[3] = unk_1004BC3A8;
  qword_1008A5AA0 = (uint64_t)v6;
  __cxa_atexit((void (*)(void *))sub_100032C1C, &qword_1008A5AA0, (void *)&_mh_execute_header);
  qword_1008A5AC0 = 0;
  unk_1008A5AC8 = 0;
  qword_1008A5AB8 = 0;
  long long v7 = operator new(0x10uLL);
  qword_1008A5AC0 = (uint64_t)(v7 + 1);
  unk_1008A5AC8 = v7 + 1;
  *long long v7 = xmmword_1004BC3B8;
  qword_1008A5AB8 = (uint64_t)v7;
  __cxa_atexit((void (*)(void *))sub_100032C1C, &qword_1008A5AB8, (void *)&_mh_execute_header);
  *(void *)&v14[0] = @"endingBRRMeasurement";
  __n128 v8 = +[NSNull null];
  *(void *)&long long v15 = v8;
  *(void *)&v14[1] = @"firstBRRMeasurement";
  long long v9 = +[NSNull null];
  *((void *)&v15 + 1) = v9;
  *(void *)&void v14[2] = @"numberOfGotCloserRegionTransitions";
  *(void *)&v14[3] = @"numberOfGotFartherRegionTransitions";
  *(void *)&long long v16 = &off_100878880;
  *((void *)&v16 + 1) = &off_100878880;
  *(void *)&v14[4] = @"sessionDuration";
  long long v10 = +[NSNull null];
  int v17 = v10;
  uint64_t v18 = &off_100878880;
  *(void *)&v14[5] = @"timeSpentInFar";
  *(void *)&v14[6] = @"timeSpentInHere";
  long long v19 = &off_100878880;
  float v20 = &off_100878880;
  *(void *)&v14[7] = @"timeSpentInNear";
  *(void *)&v14[8] = @"timeSpentInSearching";
  float v21 = &off_100878880;
  id v22 = &off_100878880;
  *(void *)&v14[9] = @"timeToFirstBRRMeasurement";
  *(void *)&v14[10] = @"timeToFirstBTSample";
  unint64_t v23 = &off_100878880;
  id v24 = &off_100878880;
  *(void *)&v14[11] = @"timeToHere";
  *(void *)&v14[12] = @"advertiserEnum";
  long long v11 = +[NSNull null];
  size_t v25 = v11;
  *(void *)&v14[13] = @"advertiserString";
  long long v12 = +[NSNull null];
  uint64_t v26 = v12;
  qword_1008AC4F0 = +[NSDictionary dictionaryWithObjects:&v15 forKeys:v14 count:14];
}

void sub_100241D1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_100241D78@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085BE38[a1]);
}

void *sub_100241D8C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085BE90[a1]);
}

void *sub_100241DA0@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085BED8[a1]);
}

void *sub_100241DB4@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085BEF8[a1]);
}

void sub_100242034(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100242058(uint64_t a1)
{
  if (qword_10089F0C0 != -1) {
    dispatch_once(&qword_10089F0C0, &stru_10085BA30);
  }
  *(unsigned char *)a1 = byte_10089F0C8;
  id v2 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = 0;

  long long v3 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = 0;

  *(unsigned char *)(a1 + 24) = 0;
  long long v4 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = 0;

  long long v5 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = 0;

  *(_DWORD *)(a1 + 48) = 0;
}

void sub_100242E38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,std::__shared_weak_count *a22)
{
  if (a22) {
    sub_10001A970(a22);
  }

  _Unwind_Resume(a1);
}

void sub_10024364C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  if (a14) {
    sub_10001A970(a14);
  }

  _Unwind_Resume(a1);
}

void sub_100243898(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100243A78(_Unwind_Exception *exception_object)
{
  long long v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_100243E40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_100243E50(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didFailMutualAuthWithToken:*(void *)(*(void *)(a1 + 40) + 304)];
}

id sub_100243E60(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didFailMutualAuthWithToken:*(void *)(*(void *)(a1 + 40) + 1040)];
}

void sub_100244090(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10024415C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100244344(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_100244374(unsigned int a1)
{
  if (a1 >= 4)
  {
    uint64_t v1 = +[NSString stringWithFormat:@"Unknown [%d]", a1];
  }
  else
  {
    uint64_t v1 = (void *)*((void *)&off_10085BF18 + (char)a1);
  }

  return v1;
}

void sub_1002446A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22)
{
  if (__p) {
    operator delete(__p);
  }
  if (a21) {
    operator delete(a21);
  }
  _Unwind_Resume(a1);
}

unint64_t sub_100244730(uint64_t a1, uint64_t a2)
{
  LOWORD(v2) = *(unsigned __int8 *)(a2 + 9);
  if (*(unsigned char *)(a1 + 9))
  {
    if (*(unsigned char *)(a2 + 9))
    {
      if (*(unsigned char *)(a1 + 1)) {
        id v2 = (_WORD *)a1;
      }
      else {
        id v2 = (_WORD *)a2;
      }
      LOWORD(v2) = *v2;
      if (*(unsigned char *)(a1 + 3)) {
        uint64_t v3 = a1;
      }
      else {
        uint64_t v3 = a2;
      }
      LOWORD(v4) = *(_WORD *)(v3 + 2);
      if (*(unsigned char *)(a1 + 5)) {
        uint64_t v5 = a1;
      }
      else {
        uint64_t v5 = a2;
      }
      LOWORD(v5) = *(_WORD *)(v5 + 4);
      if (*(unsigned char *)(a1 + 7)) {
        uint64_t v6 = a1;
      }
      else {
        uint64_t v6 = a2;
      }
      uint64_t v7 = *(unsigned __int16 *)(v6 + 6);
    }
    else
    {
      id v2 = *(_WORD **)a1;
      uint64_t v4 = *(void *)a1 >> 16;
      uint64_t v5 = HIDWORD(*(void *)a1);
      uint64_t v7 = HIWORD(*(void *)a1);
    }
  }
  else if (*(unsigned char *)(a2 + 9))
  {
    id v2 = *(_WORD **)a2;
    uint64_t v4 = *(void *)a2 >> 16;
    uint64_t v5 = HIDWORD(*(void *)a2);
    uint64_t v7 = HIWORD(*(void *)a2);
  }
  else
  {
    uint64_t v7 = 0;
    LOWORD(v5) = 0;
    LOWORD(v4) = 0;
  }
  return (v7 << 48) | ((unint64_t)(unsigned __int16)v5 << 32) | ((unint64_t)(unsigned __int16)v4 << 16) | (unsigned __int16)v2;
}

void sub_100244BF8(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 - 88);
  if (v4)
  {
    *(void *)(v2 - 80) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(a1);
}

id sub_100244C40(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didReceiveNbammsPeerAlgorithmAidingData:a1 + 48 signallingData:a1 + 224 token:*(void *)(*(void *)(a1 + 40) + 304)];
}

id sub_100244C58(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didReceiveNbammsPeerAlgorithmAidingData:a1 + 48 signallingData:a1 + 224 token:*(void *)(*(void *)(a1 + 40) + 1040)];
}

void sub_1002451CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  _Unwind_Resume(a1);
}

void sub_1002452B0(unsigned char *a1@<X0>, std::string *a2@<X8>)
{
  if (a1[1])
  {
    if (*a1) {
      uint64_t v4 = "Hng:Y";
    }
    else {
      uint64_t v4 = "Hng:N";
    }
  }
  else
  {
    uint64_t v4 = "Hng:-";
  }
  sub_100004950(&v44, v4);
  uint64_t v5 = std::string::insert(&v44, 0, "[ ");
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v45.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v45.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  uint64_t v7 = std::string::append(&v45, " | ");
  long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  v46.__r_.__value_.__r.__words[2] = v7->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (a1[3])
  {
    if (a1[2]) {
      long long v9 = "FrG:Y";
    }
    else {
      long long v9 = "FrG:N";
    }
  }
  else
  {
    long long v9 = "FrG:-";
  }
  sub_100004950(v42, v9);
  if ((v43 & 0x80u) == 0) {
    long long v10 = v42;
  }
  else {
    long long v10 = (void **)v42[0];
  }
  if ((v43 & 0x80u) == 0) {
    std::string::size_type v11 = v43;
  }
  else {
    std::string::size_type v11 = (std::string::size_type)v42[1];
  }
  long long v12 = std::string::append(&v46, (const std::string::value_type *)v10, v11);
  long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  v47.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  uint64_t v14 = std::string::append(&v47, " | ");
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v48.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  if (a1[5])
  {
    if (a1[4]) {
      long long v16 = "FeG:Y";
    }
    else {
      long long v16 = "FeG:N";
    }
  }
  else
  {
    long long v16 = "FeG:-";
  }
  sub_100004950(v40, v16);
  if ((v41 & 0x80u) == 0) {
    int v17 = v40;
  }
  else {
    int v17 = (void **)v40[0];
  }
  if ((v41 & 0x80u) == 0) {
    std::string::size_type v18 = v41;
  }
  else {
    std::string::size_type v18 = (std::string::size_type)v40[1];
  }
  long long v19 = std::string::append(&v48, (const std::string::value_type *)v17, v18);
  long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  v49.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  float v21 = std::string::append(&v49, " | ");
  long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v50.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  if (a1[7])
  {
    if (a1[6]) {
      unint64_t v23 = "FrU:Y";
    }
    else {
      unint64_t v23 = "FrU:N";
    }
  }
  else
  {
    unint64_t v23 = "FrU:-";
  }
  sub_100004950(v38, v23);
  if ((v39 & 0x80u) == 0) {
    id v24 = v38;
  }
  else {
    id v24 = (void **)v38[0];
  }
  if ((v39 & 0x80u) == 0) {
    std::string::size_type v25 = v39;
  }
  else {
    std::string::size_type v25 = (std::string::size_type)v38[1];
  }
  uint64_t v26 = std::string::append(&v50, (const std::string::value_type *)v24, v25);
  long long v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
  v51.__r_.__value_.__r.__words[2] = v26->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v27;
  v26->__r_.__value_.__l.__size_ = 0;
  v26->__r_.__value_.__r.__words[2] = 0;
  v26->__r_.__value_.__r.__words[0] = 0;
  unint64_t v28 = std::string::append(&v51, " | ");
  long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
  v52.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v52.__r_.__value_.__l.__data_ = v29;
  v28->__r_.__value_.__l.__size_ = 0;
  v28->__r_.__value_.__r.__words[2] = 0;
  v28->__r_.__value_.__r.__words[0] = 0;
  if (a1[8]) {
    uint64_t v30 = "DT:P";
  }
  else {
    uint64_t v30 = "DT:W";
  }
  sub_100004950(__p, v30);
  if ((v37 & 0x80u) == 0) {
    uint64_t v31 = __p;
  }
  else {
    uint64_t v31 = (void **)__p[0];
  }
  if ((v37 & 0x80u) == 0) {
    std::string::size_type v32 = v37;
  }
  else {
    std::string::size_type v32 = (std::string::size_type)__p[1];
  }
  BOOL v33 = std::string::append(&v52, (const std::string::value_type *)v31, v32);
  long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v53.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v53.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  int v35 = std::string::append(&v53, " ]");
  *a2 = *v35;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v53.__r_.__value_.__l.__data_);
  }
  if ((char)v37 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v52.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v51.__r_.__value_.__l.__data_);
  }
  if ((char)v39 < 0) {
    operator delete(v38[0]);
  }
  if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v50.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v49.__r_.__value_.__l.__data_);
  }
  if ((char)v41 < 0) {
    operator delete(v40[0]);
  }
  if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v48.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v47.__r_.__value_.__l.__data_);
  }
  if ((char)v43 < 0) {
    operator delete(v42[0]);
  }
  if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v46.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v45.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v44.__r_.__value_.__l.__data_);
  }
}

void sub_1002456B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52,uint64_t a53,void *a54,uint64_t a55,int a56,__int16 a57,char a58,char a59,uint64_t a60,void *a61,uint64_t a62,int a63)
{
  if (*(char *)(v66 - 57) < 0) {
    operator delete(*(void **)(v66 - 80));
  }
  if (a15 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v66 - 89) < 0) {
    operator delete(*(void **)(v66 - 112));
  }
  if (*(char *)(v66 - 121) < 0) {
    operator delete(*(void **)(v66 - 144));
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (*(char *)(v66 - 153) < 0) {
    operator delete(*(void **)(v66 - 176));
  }
  if (*(char *)(v66 - 185) < 0) {
    operator delete(*(void **)(v66 - 208));
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  if (a66 < 0) {
    operator delete(a61);
  }
  if (a59 < 0) {
    operator delete(a54);
  }
  if (a33 < 0) {
    operator delete(a28);
  }
  if (a52 < 0) {
    operator delete(a47);
  }
  if (a45 < 0) {
    operator delete(a40);
  }
  if (a39 < 0) {
    operator delete(a34);
  }
  _Unwind_Resume(a1);
}

void sub_1002457E4()
{
}

void sub_1002457EC()
{
}

void sub_1002457F4()
{
}

void sub_1002457FC()
{
}

void sub_100245804()
{
}

id sub_10024580C(unsigned __int8 *a1)
{
  unsigned int v2 = *a1;
  if (v2 < 0xC && ((0xC7Fu >> v2) & 1) != 0)
  {
    uint64_t v14 = (void *)*((void *)&off_10085BF38 + (char)v2);
  }
  else
  {
    uint64_t v14 = +[NSString stringWithFormat:@"Unknown [%d]", *a1];
  }
  uint64_t v3 = *((void *)a1 + 1);
  if (v3)
  {
    CUPrintNSObjectMasked();
    long long v15 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    long long v15 = @"---------";
  }
  uint64_t v4 = *((void *)a1 + 2);
  if (v4)
  {
    CUPrintNSObjectMasked();
    uint64_t v5 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v5 = @"---------";
  }
  unsigned int v6 = a1[24];
  if (v6 >= 3)
  {
    uint64_t v7 = +[NSString stringWithFormat:@"Unknown [%d]", a1[24]];
  }
  else
  {
    uint64_t v7 = (void *)*((void *)&off_10085BF98 + (char)v6);
  }
  uint64_t v8 = *((void *)a1 + 4);
  if (v8)
  {
    CUPrintNSObjectMasked();
    long long v9 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    long long v9 = @"---------";
  }
  uint64_t v10 = *((void *)a1 + 5);
  if (v10)
  {
    CUPrintNSObjectMasked();
    std::string::size_type v11 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    std::string::size_type v11 = @"---------";
  }
  long long v12 = +[NSString stringWithFormat:@"[ Out:%@ C:%@ R:%@ | In:%@ C:%@ R:%@ | Missed:%-3d ]", v14, v15, v5, v7, v9, v11, *((unsigned int *)a1 + 12)];
  if (v10) {

  }
  if (v8) {
  if (v4)
  }

  if (v3) {

  }
  return v12;
}

void sub_1002459E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, void *a18)
{
  if (v19) {

  }
  if (v18) {
  _Unwind_Resume(a1);
  }
}

void sub_100245C04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_100245C14(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didReceiveNbammsSessionStatusUpdate:a1 + 48 token:*(void *)(*(void *)(a1 + 40) + 304)];
}

id sub_100245C28(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didReceiveNbammsSessionStatusUpdate:a1 + 48 token:*(void *)(*(void *)(a1 + 40) + 1040)];
}

void sub_1002460F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id a13)
{
  if (LOBYTE(STACK[0x320])) {
    sub_100425220((uint64_t)&a9);
  }
  sub_10015DC28(v15);

  sub_10016B718((uint64_t)&STACK[0xBC0]);
  _Unwind_Resume(a1);
}

id sub_1002461B4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didReceiveNewNbammsSolution:a1 + 48 token:*(void *)(*(void *)(a1 + 40) + 304)];
}

void *sub_1002461C8(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 48) = v4;
  sub_1001751A0((unsigned char *)(a1 + 96), a2 + 96);
  sub_10016E330((unsigned char *)(a1 + 656), a2 + 656);
  sub_1001751F8((__n128 *)(a1 + 808), (__n128 *)(a2 + 808));

  return memcpy((void *)(a1 + 928), (const void *)(a2 + 928), 0x239uLL);
}

void sub_100246248(_Unwind_Exception *a1)
{
  if (*(unsigned char *)(v2 + 800)) {
    sub_100425250(v2);
  }
  sub_10015DC28(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100246274(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 920))
  {
    uint64_t v2 = *(void **)(a1 + 880);
    if (v2)
    {
      *(void *)(a1 + 888) = v2;
      operator delete(v2);
    }
  }
  if (*(unsigned char *)(a1 + 800)) {
    sub_10003E96C(a1 + 672, *(void **)(a1 + 680));
  }

  return sub_10015DC28(a1 + 96);
}

id sub_1002462D4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didReceiveNewNbammsSolution:a1 + 48 token:*(void *)(*(void *)(a1 + 40) + 1040)];
}

void sub_100246710(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id a13)
{
  if (LOBYTE(STACK[0x320])) {
    sub_100425220((uint64_t)&a9);
  }
  sub_10015DC28(v15);

  sub_10016B718((uint64_t)&STACK[0xBC0]);
  _Unwind_Resume(a1);
}

id sub_1002467D4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didReceiveUnsuccessfulNbammsSolution:a1 + 48 token:*(void *)(*(void *)(a1 + 40) + 304)];
}

id sub_1002467E8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didReceiveUnsuccessfulNbammsSolution:a1 + 48 token:*(void *)(*(void *)(a1 + 40) + 1040)];
}

void sub_100246B38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  _Unwind_Resume(a1);
}

void sub_100246FB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_100246FD0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didReceiveNbammsPeerAlgorithmAidingData:a1 + 48 signallingData:a1 + 224 token:*(void *)(*(void *)(a1 + 40) + 304)];
}

id sub_100246FE8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didReceiveNbammsPeerAlgorithmAidingData:a1 + 48 signallingData:a1 + 224 token:*(void *)(*(void *)(a1 + 40) + 1040)];
}

void sub_100247198(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1002471A8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didInvalidateNbammsSessionWithReason:*(unsigned int *)(a1 + 48) token:*(void *)(*(void *)(a1 + 40) + 304)];
}

id sub_1002471BC(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didInvalidateNbammsSessionWithReason:*(unsigned int *)(a1 + 48) token:*(void *)(*(void *)(a1 + 40) + 1040)];
}

void sub_100247460(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002475D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100247A2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,char a42)
{
  if (a16) {
    sub_10001A970(a16);
  }

  if (a22 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_100247C28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100247FE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100248430(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10024862C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002486D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100248748(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002489DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1002489EC(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didFailCryptoWithToken:*(void *)(*(void *)(a1 + 40) + 304)];
}

id sub_1002489FC(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didFailCryptoWithToken:*(void *)(*(void *)(a1 + 40) + 1040)];
}

void sub_100248A9C(uint64_t a1)
{
  if (+[NIPlatformInfo isInternalBuild])
  {
    uint64_t v2 = +[NSUserDefaults standardUserDefaults];
    byte_1008A5BB0 = [v2 BOOLForKey:@"FindingDisableCrypto"];

    uint64_t v3 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 16);
      v5[0] = 67109378;
      v5[1] = byte_1008A5BB0;
      __int16 v6 = 2112;
      uint64_t v7 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#find-range,#crypto Disable crypto: %d, %@", (uint8_t *)v5, 0x12u);
    }
  }
  else
  {
    byte_1008A5BB0 = 0;
  }
}

void sub_100248BA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100248E88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002495EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_100249650(uint64_t a1)
{
  uint64_t v2 = NSRandomData();
  uint64_t v3 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v2;
}

void sub_100249830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  sub_100253DA8((uint64_t)&a9);
  sub_100253DA8((uint64_t)&a17);
  _Unwind_Resume(a1);
}

void sub_100249868(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  long long v21 = 0uLL;
  long long v23 = 0uLL;
  sub_100242058((uint64_t)v20);
  __int16 v6 = (unsigned __int8 *)(a1 + 11);
  if (a2) {
    __int16 v6 = (unsigned __int8 *)(a1 + 1);
  }
  unsigned int v7 = *v6;
  if (a2) {
    uint64_t v8 = a1 + 2;
  }
  else {
    uint64_t v8 = a1 + 12;
  }
  if (a2) {
    uint64_t v9 = a1 + 5;
  }
  else {
    uint64_t v9 = a1 + 15;
  }
  unsigned int v10 = v7 >> 4;
  v20[0] = v7 >> 4;
  unsigned int v11 = v7 & 0xF;
  char v22 = v11;
  if (v10 > 0xB) {
    goto LABEL_18;
  }
  if (((1 << v10) & 0xC03) != 0)
  {
    if (v11 < 3) {
      goto LABEL_21;
    }
  }
  else
  {
    if (((1 << v10) & 0x38) != 0)
    {
      int v12 = 1;
LABEL_17:
      if (v11 > 2) {
        goto LABEL_18;
      }
      uint64_t v14 = +[NSData dataWithBytes:v8 length:3];
      uint64_t v15 = (void *)v21;
      *(void *)&long long v21 = v14;

      if (v12)
      {
        uint64_t v16 = +[NSData dataWithBytes:v9 length:6];
        int v17 = (void *)*((void *)&v21 + 1);
        *((void *)&v21 + 1) = v16;
      }
LABEL_21:
      long long v13 = 0;
      *(unsigned char *)a3 = v20[0];
      *(unsigned char *)(a3 + 24) = v22;
      *(_DWORD *)(a3 + 48) = v24;
      *(unsigned char *)(a3 + 56) = 1;
      long long v18 = v21;
      long long v21 = 0u;
      *(_OWORD *)(a3 + 8) = v18;
      long long v19 = v23;
      long long v23 = 0u;
      *(_OWORD *)(a3 + 32) = v19;
      goto LABEL_22;
    }
    if (((1 << v10) & 0x44) != 0)
    {
      int v12 = 0;
      goto LABEL_17;
    }
  }
LABEL_18:
  *(unsigned char *)a3 = 0;
  *(unsigned char *)(a3 + 56) = 0;
  long long v13 = (void *)*((void *)&v23 + 1);
LABEL_22:
}

void sub_1002499F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10024A2E4((id *)va);
  _Unwind_Resume(a1);
}

void sub_100249E2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100249E7C(char *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 7)
  {
    if (v1 == 10)
    {
      char v3 = 11;
    }
    else
    {
      if (v1 != 11) {
        return;
      }
      sub_100249650((uint64_t)a1);
      char v3 = 2;
    }
    *a1 = v3;
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_100425958();
  }
}

void sub_100249EF8(uint64_t a1, unsigned int a2)
{
  if (a2 >= 7)
  {
    if (a2 - 10 < 2)
    {
      *(unsigned char *)a1 = a2;
      char v3 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;

      uint64_t v4 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = 0;

      *(unsigned char *)(a1 + 24) = 0;
      long long v5 = *(void **)(a1 + 32);
      *(void *)(a1 + 32) = 0;

      __int16 v6 = *(void **)(a1 + 40);
      *(void *)(a1 + 40) = 0;
    }
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_10042598C();
  }
}

void sub_100249FA4(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)a1[1];
  if (v4 && a1[4])
  {
    id v5 = [v4 mutableCopy];
    [v5 appendData:a1[4]];
    id v6 = [v3 getIRK];
    [v6 bytes];
    id v7 = v5;
    [v7 bytes];
    [v7 length];
    uint64_t v8 = SipHash();

    uint64_t v11 = v8;
    uint64_t v9 = +[NSData dataWithBytes:&v11 length:6];
    unsigned int v10 = (void *)a1[2];
    a1[2] = v9;
  }
}

void sub_10024A08C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_10024A0B8(void *a1, void *a2)
{
  id v3 = a2;
  if (a1[1] && (uint64_t v4 = (void *)a1[4]) != 0 && a1[5])
  {
    id v5 = [v4 mutableCopy];
    [v5 appendData:a1[1]];
    id v6 = [v3 getIRK];
    [v6 bytes];
    id v7 = v5;
    [v7 bytes];
    [v7 length];
    uint64_t v8 = SipHash();

    uint64_t v12 = v8;
    uint64_t v9 = +[NSData dataWithBytes:&v12 length:6];
    id v10 = [v9 isEqualToData:a1[5]];
  }
  else
  {
    id v10 = 0;
  }

  return v10;
}

void sub_10024A1BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_10024A1F0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unint64_t v4 = *((void *)a1 + 1);
  if (v4 | *((void *)a2 + 1)) {
    unsigned int v5 = [v4 isEqualToData:] ^ 1;
  }
  else {
    unsigned int v5 = 0;
  }
  unint64_t v6 = *((void *)a1 + 2);
  if (v6 | *((void *)a2 + 2)) {
    unsigned int v7 = [v6 isEqualToData:] ^ 1;
  }
  else {
    unsigned int v7 = 0;
  }
  unint64_t v8 = *((void *)a1 + 4);
  if (v8 | *((void *)a2 + 4)) {
    unsigned int v9 = [v8 isEqualToData:] ^ 1;
  }
  else {
    unsigned int v9 = 0;
  }
  unint64_t v10 = *((void *)a1 + 5);
  unint64_t v11 = v10 | *((void *)a2 + 5);
  if (v11) {
    LODWORD(v11) = [v10 isEqualToData:x0] ^ 1;
  }
  if (*a1 == *a2) {
    int v12 = v5;
  }
  else {
    int v12 = 1;
  }
  if ((v12 | v7)) {
    return 0;
  }
  unsigned int v13 = a1[24] == a2[24] ? v9 : 1;
  return ((v13 | v11) & 1) == 0 && *((_DWORD *)a1 + 12) == *((_DWORD *)a2 + 12);
}

id *sub_10024A2E4(id *a1)
{
  return a1;
}

void sub_10024A5FC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 240));

    if (v3)
    {
      unint64_t v4 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 16);
        int v8 = 138412290;
        uint64_t v9 = v5;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#find-range,Finder mutual-auth timer fires, failed mutual-auth, session %@", (uint8_t *)&v8, 0xCu);
      }
      *(_DWORD *)(*(void *)(a1 + 32) + 296) = 50;
      *(unsigned char *)(*(void *)(a1 + 32) + 248) = 6;
      uint64_t v6 = *(void *)(a1 + 32);
      uint64_t v7 = *(void *)(v6 + 1904);
      if (v7) {
        (*(void (**)(uint64_t, uint64_t, void, void, void))(v7 + 16))(v7, v6, *(void *)(v6 + 304), *(unsigned __int8 *)(a1 + 48), 0);
      }
    }
  }
}

void sub_10024A718(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10024A730(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 976));

    if (v3)
    {
      unint64_t v4 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 16);
        int v8 = 138412290;
        uint64_t v9 = v5;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#find-range,Findee mutual-auth timer fires, failed mutual-auth, session %@", (uint8_t *)&v8, 0xCu);
      }
      *(_DWORD *)(*(void *)(a1 + 32) + 1032) = 50;
      *(unsigned char *)(*(void *)(a1 + 32) + 984) = 6;
      uint64_t v6 = *(void *)(a1 + 32);
      uint64_t v7 = *(void *)(v6 + 1904);
      if (v7) {
        (*(void (**)(uint64_t, uint64_t, void, void, void))(v7 + 16))(v7, v6, *(void *)(v6 + 1040), *(unsigned __int8 *)(a1 + 48), 0);
      }
    }
  }
}

void sub_10024A84C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10024AC94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  _Unwind_Resume(a1);
}

void sub_10024ACE4(uint64_t a1, void *a2, int a3)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v7 = WeakRetained;
  if (WeakRetained)
  {
    int v8 = *(NSObject **)(*(void *)(a1 + 32) + 40);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10024ADB4;
    block[3] = &unk_10085B8F8;
    id v10 = WeakRetained;
    id v11 = v5;
    int v12 = a3;
    dispatch_async(v8, block);
  }
}

id sub_10024ADB4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) session:*(void *)(a1 + 40) updateState:*(unsigned int *)(a1 + 48)];
}

void sub_10024ADC4(uint64_t a1, void *a2, void *a3, char a4, char a5)
{
  id v9 = a2;
  id v10 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  int v12 = WeakRetained;
  if (WeakRetained)
  {
    unsigned int v13 = *(NSObject **)(*(void *)(a1 + 32) + 40);
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    void v14[2] = sub_10024AEC4;
    v14[3] = &unk_10085B970;
    id v15 = WeakRetained;
    id v16 = v9;
    id v17 = v10;
    char v18 = a4;
    char v19 = a5;
    dispatch_async(v13, v14);
  }
}

id sub_10024AEC4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) mutualAuthUpdateForSession:*(void *)(a1 + 40) token:*(void *)(a1 + 48) isFinder:*(unsigned __int8 *)(a1 + 56) result:*(unsigned __int8 *)(a1 + 57)];
}

void sub_10024AF7C(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_1008A5BB8;
  qword_1008A5BB8 = (uint64_t)v1;
}

void sub_10024B240(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10024B268(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10024B278(uint64_t a1)
{
}

void sub_10024B280(uint64_t a1)
{
  if (([*(id *)(*(void *)(a1 + 32) + 8) sessionRegistered] & 1) != 0
    || ([*(id *)(*(void *)(a1 + 32) + 16) sessionRegistered] & 1) != 0)
  {
    unsigned int v2 = [*(id *)(*(void *)(a1 + 32) + 8) sessionRegistered];
    if (v2 != [*(id *)(*(void *)(a1 + 32) + 16) sessionRegistered])
    {
      unsigned int v3 = [*(id *)(*(void *)(a1 + 32) + 8) sessionRegistered];
      uint64_t v4 = 16;
      if (v3) {
        uint64_t v4 = 8;
      }
      id v5 = *(id *)(*(void *)(a1 + 32) + v4);
      unsigned int v6 = [*(id *)(*(void *)(a1 + 32) + 8) sessionRegistered];
      uint64_t v7 = 8;
      if (v6) {
        uint64_t v7 = 16;
      }
      id v8 = *(id *)(*(void *)(a1 + 32) + v7);
      if ([v5 sharedProtocol])
      {
        if ([v5 sharedProtocol] != 1) {
          __assert_rtn("-[NIServerFindingNBAMMSSessionManager registerNBAMMSSessionWithToken:isFinder:client:serviceRequest:startRangingOptions:sharedProtocol:]_block_invoke", "NIServerFindingRanging.mm", 2842, "false");
        }
        int v9 = *(_DWORD *)(a1 + 80);
        if (v9 != 1)
        {
          if (!v9)
          {
            if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
              sub_1004259C0();
            }
            NSErrorUserInfoKey v52 = NSLocalizedFailureReasonErrorKey;
            CFStringRef v53 = @"protocol version does not support group finding";
            id v10 = +[NSDictionary dictionaryWithObjects:&v53 forKeys:&v52 count:1];
            uint64_t v11 = +[NSError errorWithDomain:@"com.apple.NearbyInteraction" code:-10020 userInfo:v10];
            uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8);
            unsigned int v13 = *(void **)(v12 + 40);
            *(void *)(v12 + 40) = v11;
          }
LABEL_27:

          return;
        }
      }
      else
      {
        int v23 = *(_DWORD *)(a1 + 80);
        if (v23 != 1)
        {
          if (!v23)
          {
            uint64_t v24 = [v5 registerNBAMMSSessionWithToken:*(void *)(a1 + 40) isFinder:*(unsigned __int8 *)(a1 + 84) client:*(void *)(a1 + 48) serviceRequest:*(void *)(a1 + 64) startRangingOptions:*(void *)(a1 + 72) sharedProtocol:0];
            uint64_t v25 = *(void *)(*(void *)(a1 + 56) + 8);
            uint64_t v26 = *(void **)(v25 + 40);
            *(void *)(v25 + 40) = v24;

            long long v27 = objc_opt_new();
            [v27 addObject:*(void *)(*(void *)(a1 + 32) + 8)];
            [*(id *)(*(void *)(a1 + 32) + 32) setObject:v27 forKey:*(void *)(a1 + 40)];
          }
          goto LABEL_27;
        }
      }
      uint64_t v28 = [v8 registerNBAMMSSessionWithToken:*(void *)(a1 + 40) isFinder:*(unsigned __int8 *)(a1 + 84) client:*(void *)(a1 + 48) serviceRequest:*(void *)(a1 + 64) startRangingOptions:*(void *)(a1 + 72) sharedProtocol:1];
      uint64_t v29 = *(void *)(*(void *)(a1 + 56) + 8);
      uint64_t v30 = *(void **)(v29 + 40);
      *(void *)(v29 + 40) = v28;

      if (([*(id *)(a1 + 32) _isReciprocalFindingPossibleRoleIsFinder:*(unsigned __int8 *)(a1 + 84) rangingSession:v5] & 1) == 0)[*(id *)(a1 + 32) _updateAnalyticsWithSuccessfulRangingRequest]; {
      goto LABEL_27;
      }
    }
    uint64_t v14 = objc_opt_new();
    int v15 = *(_DWORD *)(a1 + 80);
    if (v15 != [*(id *)(*(void *)(a1 + 32) + 8) sharedProtocol])
    {
      int v22 = 0;
      goto LABEL_42;
    }
    uint64_t v16 = *(void *)(a1 + 32);
    id v17 = *(void **)(v16 + 8);
    if (v17)
    {
      [v17 attachedRoles];
      uint64_t v16 = *(void *)(a1 + 32);
    }
    else
    {
      __p = 0;
      std::string v48 = 0;
      uint64_t v49 = 0;
    }
    unsigned int v31 = [*(id *)(v16 + 8) sessionState:__p];
    std::string::size_type v32 = __p;
    BOOL v33 = v48 - (unsigned char *)__p == 4 && v31 == 2;
    int v22 = v33;
    if (v33)
    {
      int v34 = *(unsigned __int8 *)(a1 + 84);
      if (v34 == (*(_DWORD *)__p == 0))
      {
        int v22 = 0;
LABEL_41:
        std::string v48 = v32;
        operator delete(v32);
LABEL_42:
        int v36 = *(_DWORD *)(a1 + 80);
        if (v36 != [*(id *)(*(void *)(a1 + 32) + 16) sharedProtocol])
        {
          if (!v22)
          {
LABEL_55:
            __int16 v42 = qword_1008ABDE0;
            if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
            {
              LOWORD(__p) = 0;
              _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEFAULT, "#find-range,Reached maximum NMI sessions", (uint8_t *)&__p, 2u);
            }
            NSErrorUserInfoKey v50 = NSLocalizedFailureReasonErrorKey;
            CFStringRef v51 = @"Reached maximum NMI sessions";
            unsigned __int8 v43 = +[NSDictionary dictionaryWithObjects:&v51 forKeys:&v50 count:1];
            uint64_t v44 = +[NSError errorWithDomain:@"com.apple.NearbyInteraction" code:-10020 userInfo:v43];
            uint64_t v45 = *(void *)(*(void *)(a1 + 56) + 8);
            std::string v46 = *(void **)(v45 + 40);
            *(void *)(v45 + 40) = v44;

            [*(id *)(a1 + 32) _updateAnalyticsWithFailedRangingRequestToken:*(void *)(a1 + 40) isFinder:*(unsigned __int8 *)(a1 + 84)];
            goto LABEL_58;
          }
LABEL_46:
          [*(id *)(*(void *)(a1 + 32) + 32) setObject:v14 forKey:*(void *)(a1 + 40)];
LABEL_58:

          return;
        }
        unsigned __int8 v37 = *(void **)(*(void *)(a1 + 32) + 16);
        if (v37)
        {
          [v37 attachedRoles];
          unsigned __int8 v37 = *(void **)(*(void *)(a1 + 32) + 16);
        }
        else
        {
          __p = 0;
          std::string v48 = 0;
          uint64_t v49 = 0;
        }
        unsigned int v38 = [v37 sessionState:__p];
        unsigned __int8 v39 = __p;
        if (v48 - (unsigned char *)__p == 4 && v38 == 2)
        {
          int v40 = *(unsigned __int8 *)(a1 + 84);
          if (v40 == (*(_DWORD *)__p == 0))
          {
LABEL_53:
            std::string v48 = v39;
            operator delete(v39);
LABEL_54:
            if ((v22 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_46;
          }
          id v41 = [*(id *)(*(void *)(a1 + 32) + 16) registerNBAMMSSessionWithToken:*(void *)(a1 + 40) isFinder:v40 != 0 client:*(void *)(a1 + 48) serviceRequest:*(void *)(a1 + 64) startRangingOptions:*(void *)(a1 + 72) sharedProtocol:*(unsigned int *)(a1 + 80)];
          [v14 addObject:*(void *)(*(void *)(a1 + 32) + 16)];
          LOBYTE(v22) = 1;
          unsigned __int8 v39 = __p;
        }
        if (!v39) {
          goto LABEL_54;
        }
        goto LABEL_53;
      }
      id v35 = [*(id *)(*(void *)(a1 + 32) + 8) registerNBAMMSSessionWithToken:*(void *)(a1 + 40) isFinder:v34 != 0 client:*(void *)(a1 + 48) serviceRequest:*(void *)(a1 + 64) startRangingOptions:*(void *)(a1 + 72) sharedProtocol:*(unsigned int *)(a1 + 80)];
      [v14 addObject:*(void *)(*(void *)(a1 + 32) + 8)];
      std::string::size_type v32 = __p;
    }
    if (!v32) {
      goto LABEL_42;
    }
    goto LABEL_41;
  }
  uint64_t v18 = [*(id *)(*(void *)(a1 + 32) + 8) registerNBAMMSSessionWithToken:*(void *)(a1 + 40) isFinder:*(unsigned __int8 *)(a1 + 84) client:*(void *)(a1 + 48) serviceRequest:*(void *)(a1 + 64) startRangingOptions:*(void *)(a1 + 72) sharedProtocol:*(unsigned int *)(a1 + 80)];
  uint64_t v19 = *(void *)(*(void *)(a1 + 56) + 8);
  long long v20 = *(void **)(v19 + 40);
  *(void *)(v19 + 40) = v18;

  long long v21 = *(void **)(a1 + 32);

  [v21 _updateAnalyticsWithSuccessfulRangingRequest];
}

void sub_10024B84C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  _Unwind_Resume(a1);
}

void sub_10024B960(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 32) removeObjectForKey:*(void *)(a1 + 40)];
  unsigned int v2 = [*(id *)(*(void *)(a1 + 32) + 8) sessionState];
  [*(id *)(*(void *)(a1 + 32) + 8) unregisterNBAMMSSessionForToken:*(void *)(a1 + 40)];
  *(_DWORD *)(*(void *)(a1 + 32) + 24) = [*(id *)(*(void *)(a1 + 32) + 8) sessionState];
  unsigned int v3 = [*(id *)(*(void *)(a1 + 32) + 16) sessionState];
  [*(id *)(*(void *)(a1 + 32) + 16) unregisterNBAMMSSessionForToken:*(void *)(a1 + 40)];
  *(_DWORD *)(*(void *)(a1 + 32) + 28) = [*(id *)(*(void *)(a1 + 32) + 16) sessionState];
  uint64_t v4 = *(void *)(a1 + 32);
  int v5 = *(_DWORD *)(v4 + 24);
  if (v2 == v5)
  {
    if (v2) {
      return;
    }
    int v6 = *(_DWORD *)(v4 + 28);
    if (v3 == v6 || v6) {
      return;
    }
  }
  else if (v5 || *(_DWORD *)(v4 + 28))
  {
    return;
  }
  [*(id *)(v4 + 64) descriptions];
  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  id v8 = [v7 countByEnumeratingWithState:&v13 objects:v19 count:16];
  if (v8)
  {
    uint64_t v9 = *(void *)v14;
    do
    {
      id v10 = 0;
      do
      {
        if (*(void *)v14 != v9) {
          objc_enumerationMutation(v7);
        }
        uint64_t v11 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v12 = *(void *)(*((void *)&v13 + 1) + 8 * (void)v10);
          *(_DWORD *)buf = 138412290;
          uint64_t v18 = v12;
          _os_log_debug_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "#find-range,GF-CA: %@", buf, 0xCu);
        }
        id v10 = (char *)v10 + 1;
      }
      while (v8 != v10);
      id v8 = [v7 countByEnumeratingWithState:&v13 objects:v19 count:16];
    }
    while (v8);
  }

  [*(id *)(*(void *)(a1 + 32) + 64) submitAnalytics];
}

void sub_10024BB7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_10024BC40(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 8) refreshRangingForToken:*(void *)(a1 + 40)];
  uint64_t v2 = *(void *)(a1 + 40);
  unsigned int v3 = *(void **)(*(void *)(a1 + 32) + 16);

  return [v3 refreshRangingForToken:v2];
}

id sub_10024BD2C(void *a1)
{
  [*(id *)(a1[4] + 8) updateAlgorithmAidingData:a1[6] token:a1[5]];
  uint64_t v2 = a1[5];
  unsigned int v3 = *(void **)(a1[4] + 16);
  uint64_t v4 = a1[6];

  return [v3 updateAlgorithmAidingData:v4 token:v2];
}

id sub_10024BE20(void *a1)
{
  [*(id *)(a1[4] + 8) updateSignallingData:a1[6] token:a1[5]];
  uint64_t v2 = a1[5];
  unsigned int v3 = *(void **)(a1[4] + 16);
  uint64_t v4 = a1[6];

  return [v3 updateSignallingData:v4 token:v2];
}

id sub_10024BF14(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateAnalyticsWithFailedRangingRequestToken:*(void *)(a1 + 40) isFinder:*(unsigned __int8 *)(a1 + 48)];
}

void sub_10024C08C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);

  _Unwind_Resume(a1);
}

void sub_10024C0AC(void *a1)
{
  uint64_t v1 = a1 + 4;
  uint64_t v2 = [*(id *)(a1[4] + 8) printableState];
  uint64_t v3 = *(void *)(a1[5] + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  uint64_t v5 = [*(id *)(*v1 + 16) printableState];
  uint64_t v6 = *(void *)(a1[6] + 8);
  id v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;

  [*(id *)(*(void *)(a1[5] + 8) + 40) addObjectsFromArray:*(void *)(*(void *)(a1[6] + 8) + 40)];
  [*(id *)(*(void *)(a1[5] + 8) + 40) addObject:@"TokensToMutualAuthSessions:"];
  long long v30 = 0u;
  long long v31 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  id obj = *(id *)(*v1 + 32);
  id v8 = [obj countByEnumeratingWithState:&v28 objects:v33 count:16];
  if (v8)
  {
    uint64_t v21 = *(void *)v29;
    do
    {
      id v22 = v8;
      for (i = 0; i != v22; i = (char *)i + 1)
      {
        if (*(void *)v29 != v21) {
          objc_enumerationMutation(obj);
        }
        id v10 = *(void **)(*((void *)&v28 + 1) + 8 * i);
        uint64_t v11 = objc_opt_new();
        uint64_t v12 = [v10 descriptionInternal];
        long long v13 = +[NSString stringWithFormat:@"Token %@: ", v12];
        [v11 appendString:v13];

        long long v26 = 0u;
        long long v27 = 0u;
        long long v24 = 0u;
        long long v25 = 0u;
        long long v14 = [*(id *)(a1[4] + 32) objectForKey:v10];
        id v15 = [v14 countByEnumeratingWithState:&v24 objects:v32 count:16];
        if (v15)
        {
          uint64_t v16 = *(void *)v25;
          do
          {
            for (j = 0; j != v15; j = (char *)j + 1)
            {
              if (*(void *)v25 != v16) {
                objc_enumerationMutation(v14);
              }
              uint64_t v18 = [*(id *)(*((void *)&v24 + 1) + 8 * (void)j) identityString];
              uint64_t v19 = +[NSString stringWithFormat:@"ses-%@ ", v18];
              [v11 appendString:v19];
            }
            id v15 = [v14 countByEnumeratingWithState:&v24 objects:v32 count:16];
          }
          while (v15);
        }

        [*(id *)(*(void *)(a1[5] + 8) + 40) addObject:v11];
      }
      id v8 = [obj countByEnumeratingWithState:&v28 objects:v33 count:16];
    }
    while (v8);
  }
}

void sub_10024C390(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_10024C870(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  _Unwind_Resume(a1);
}

void sub_10024CA0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  if (a12) {
    operator delete(a12);
  }
  _Unwind_Resume(exception_object);
}

void sub_10024CB38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10024CB7C()
{
}

void sub_10024CDEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10024CF18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10024D1D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10024D2F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10024D724(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10024D9D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, uint64_t a12)
{
  if (a10) {
    std::__shared_weak_count::__release_weak(a10);
  }

  _Unwind_Resume(a1);
}

void sub_10024DBF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_10001A970(a10);
  }

  _Unwind_Resume(a1);
}

void sub_10024DCC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9, uint64_t a10, uint64_t a11, uint64_t a12, std::__shared_weak_count *a13)
{
  if (a13) {
    sub_10001A970(a13);
  }
  a9.super_class = (Class)NIServerFindingRangingProvider;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_10024DF6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10024E568(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10024E864(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10024E990(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10024EAAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10024EBEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10024EE80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10024EF48(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_10024F124(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10024F890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,void *__p,uint64_t a60,uint64_t a61,char a62,uint64_t a63)
{
  _Block_object_dispose(&a62, 8);
  _Unwind_Resume(a1);
}

void sub_10024F9D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  id v4 = +[NSString stringWithFormat:@"        %@: %@", a2, a3];
  [v3 addObject:];
}

void sub_10024FA48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  _Unwind_Resume(a1);
}

void sub_10024FAF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10024FBA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10024FD90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  _Unwind_Resume(a1);
}

void sub_100250014(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100250168(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100250290(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002503B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10025063C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a25 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_100250674(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v1 + 72))
  {
    int v3 = *(_DWORD *)(a1 + 48);
    if ((v3 - 2) >= 3)
    {
      if (v3 == 1)
      {
        uint64_t v9 = *(void **)(a1 + 40);
        _[v9 rangingBecameAvailable];
      }
      else if (!v3)
      {
        sub_100425EF0();
      }
    }
    else
    {
      long long v12 = 0u;
      long long v13 = 0u;
      long long v10 = 0u;
      long long v11 = 0u;
      id v4 = *(id *)(v1 + 112);
      id v5 = [v4 countByEnumeratingWithState:&v10 objects:v14 count:16];
      if (v5)
      {
        uint64_t v6 = *(void *)v11;
        do
        {
          id v7 = 0;
          do
          {
            if (*(void *)v11 != v6) {
              objc_enumerationMutation(v4);
            }
            id v8 = *(id *)(*((void *)&v10 + 1) + 8 * (void)v7);
            [*(id *)(a1 + 32) _resetRangingStateForToken:v8];
            [*(id *)(a1 + 40) didStopRangingWithPeer:v8];

            id v7 = (char *)v7 + 1;
          }
          while (v5 != v7);
          id v5 = [v4 countByEnumeratingWithState:&v10 objects:v14 count:16];
        }
        while (v5);
      }

      [*(id *)(a1 + 40) rangingBecameUnavailable];
    }
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_100425EBC();
  }
}

void sub_100250838(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10025095C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10025181C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1002521D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  _Unwind_Resume(a1);
}

void sub_1002523E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10025251C(_Unwind_Exception *a1)
{
  int v3 = v2;

  _Unwind_Resume(a1);
}

void sub_100252784(_Unwind_Exception *a1)
{
  int v3 = v2;

  _Unwind_Resume(a1);
}

void sub_100252AB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100252B8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100253010(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1008A5BD0);

  _Unwind_Resume(a1);
}

void sub_100253B50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100253CA4(id a1)
{
  if (+[NIPlatformInfo isInternalBuild])
  {
    uint64_t v1 = +[NSUserDefaults standardUserDefaults];
    byte_10089F0C8 = [v1 BOOLForKey:@"FindingDisableMutualAuth"];

    uint64_t v2 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      v3[0] = 67109120;
      v3[1] = byte_10089F0C8;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#find-range,#auth Disable mutual auth: %d", (uint8_t *)v3, 8u);
    }
  }
  else
  {
    byte_10089F0C8 = 0;
  }
}

void sub_100253D90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100253DA8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 56))
  {
  }
  return a1;
}

char *sub_100253DF4(uint64_t a1, char *__dst, char *__src, char *a4, uint64_t a5)
{
  id v5 = __dst;
  if (a5 < 1) {
    return v5;
  }
  uint64_t v6 = a5;
  id v7 = __src;
  long long v10 = *(char **)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9 - (uint64_t)v10 < a5)
  {
    long long v11 = *(char **)a1;
    uint64_t v12 = (uint64_t)&v10[a5 - *(void *)a1];
    if (v12 < 0) {
      sub_1000267C4();
    }
    long long v13 = (char *)(__dst - v11);
    unint64_t v14 = v9 - (void)v11;
    if (2 * v14 > v12) {
      uint64_t v12 = 2 * v14;
    }
    if (v14 >= 0x3FFFFFFFFFFFFFFFLL) {
      size_t v15 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      size_t v15 = v12;
    }
    if (v15) {
      uint64_t v16 = operator new(v15);
    }
    else {
      uint64_t v16 = 0;
    }
    long long v26 = &v13[(void)v16];
    long long v27 = &v13[(void)v16 + v6];
    long long v28 = v26;
    do
    {
      char v29 = *v7++;
      *v28++ = v29;
      --v6;
    }
    while (v6);
    long long v30 = *(char **)a1;
    if (*(char **)a1 == v5)
    {
      std::string::size_type v32 = v26;
    }
    else
    {
      long long v31 = v5;
      std::string::size_type v32 = v26;
      do
      {
        char v33 = *--v31;
        *--std::string::size_type v32 = v33;
      }
      while (v31 != v30);
      long long v10 = *(char **)(a1 + 8);
    }
    int v34 = (char *)v16 + v15;
    if (v10 != v5) {
      memmove(v27, v5, v10 - v5);
    }
    id v35 = *(char **)a1;
    *(void *)a1 = v32;
    *(void *)(a1 + 8) = &v27[v10 - v5];
    *(void *)(a1 + 16) = v34;
    if (v35) {
      operator delete(v35);
    }
    return v26;
  }
  uint64_t v17 = v10 - __dst;
  if (v10 - __dst >= a5)
  {
    uint64_t v18 = &__src[a5];
    long long v20 = *(char **)(a1 + 8);
LABEL_17:
    uint64_t v21 = &v5[v6];
    id v22 = &v20[-v6];
    int v23 = v20;
    if (&v20[-v6] < v10)
    {
      int64_t v24 = &v10[v6] - v20;
      int v23 = v20;
      do
      {
        char v25 = *v22++;
        *v23++ = v25;
        --v24;
      }
      while (v24);
    }
    *(void *)(a1 + 8) = v23;
    if (v20 != v21) {
      memmove(&v5[v6], v5, v20 - v21);
    }
    if (v18 != v7) {
      memmove(v5, v7, v18 - v7);
    }
    return v5;
  }
  uint64_t v18 = &__src[v17];
  int64_t v19 = a4 - &__src[v17];
  if (a4 != &__src[v17]) {
    memmove(*(void **)(a1 + 8), &__src[v17], a4 - &__src[v17]);
  }
  long long v20 = &v10[v19];
  *(void *)(a1 + 8) = &v10[v19];
  if (v17 >= 1) {
    goto LABEL_17;
  }
  return v5;
}

void *sub_100253FD4(void *result, const void *a2, uint64_t a3, size_t __sz)
{
  if (__sz)
  {
    uint64_t v6 = result;
    __n128 result = sub_10002DBC4(result, __sz);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      __n128 result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_100254034(_Unwind_Exception *exception_object)
{
  int v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_100254050(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10085BA60;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100254070(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10085BA60;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_1002540C4(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

uint64_t sub_1002540EC(uint64_t a1)
{
  return a1;
}

void sub_100254118(uint64_t a1)
{
  operator delete();
}

void *sub_100254164(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  *uint64_t v2 = off_10085BAB0;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_1002541BC(uint64_t a1, void *a2)
{
  *a2 = off_10085BAB0;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_100254204(uint64_t a1)
{
}

void sub_10025420C(id *a1)
{
  operator delete(a1);
}

void sub_100254248(uint64_t a1, void *a2, uint64_t *a3)
{
  int v3 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  uint64_t v4 = *(void *)(a1 + 8);
  id v5 = *(NSObject **)(v4 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100254330;
  block[3] = &unk_100857C10;
  uint64_t v6 = *a3;
  void block[4] = v4;
  block[5] = v6;
  int v8 = *((_DWORD *)a3 + 2);
  dispatch_async(v5, block);
  if (v3) {
    sub_10001A970(v3);
  }
}

uint64_t sub_1002542E4(uint64_t a1, uint64_t a2)
{
  if (sub_10003E730(a2, (uint64_t)&off_10085BB10)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_100254324()
{
  return &off_10085BB10;
}

id sub_100254330(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _serviceRequestStatusUpdate:a1 + 40];
}

uint64_t sub_100254340(uint64_t a1)
{
  return a1;
}

void sub_10025436C(uint64_t a1)
{
  operator delete();
}

void *sub_1002543B8(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  *uint64_t v2 = off_10085BB30;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_100254410(uint64_t a1, void *a2)
{
  *a2 = off_10085BB30;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_100254458(uint64_t a1)
{
}

void sub_100254460(id *a1)
{
  operator delete(a1);
}

void sub_10025449C(uint64_t a1, void *a2, long long *a3)
{
  id v5 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  long long v6 = a3[1];
  long long v22 = *a3;
  long long v23 = v6;
  long long v24 = a3[2];
  sub_1001751A0(v25, (uint64_t)(a3 + 3));
  sub_10016E330(v26, (uint64_t)(a3 + 38));
  sub_1001751F8(v29, (__n128 *)((char *)a3 + 760));
  memcpy(v33, a3 + 55, sizeof(v33));
  uint64_t v7 = *(void *)(a1 + 8);
  int v8 = *(NSObject **)(v7 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  long long v11 = v23;
  long long v12 = v24;
  block[2] = sub_100254794;
  block[3] = &unk_1008588F8;
  void block[4] = v7;
  long long v10 = v22;
  sub_1001751A0(v13, (uint64_t)v25);
  sub_10016E330(v14, (uint64_t)v26);
  sub_1001751F8(v17, v29);
  memcpy(v21, v33, sizeof(v21));
  dispatch_async(v8, block);
  if (v20 && __p)
  {
    int64_t v19 = __p;
    operator delete(__p);
  }
  if (v16) {
    sub_10003E96C((uint64_t)v15, v15[1]);
  }
  sub_10015DC28((uint64_t)v13);
  if (v32 && v30)
  {
    long long v31 = v30;
    operator delete(v30);
  }
  if (v28) {
    sub_10003E96C((uint64_t)v27, v27[1]);
  }
  sub_10015DC28((uint64_t)v25);
  if (v5) {
    sub_10001A970(v5);
  }
}

void sub_10025469C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  if (LOBYTE(STACK[0x320])) {
    sub_100412860((uint64_t)va);
  }
  sub_10015DC28(v4);
  if (LOBYTE(STACK[0x948]))
  {
    long long v6 = (void *)STACK[0x920];
    if (STACK[0x920])
    {
      STACK[0x928] = (unint64_t)v6;
      operator delete(v6);
    }
  }
  if (LOBYTE(STACK[0x8D0])) {
    sub_10003E96C((uint64_t)&STACK[0x850], (void *)STACK[0x858]);
  }
  sub_10015DC28(v3);
  if (v2) {
    sub_10001A970(v2);
  }
  _Unwind_Resume(a1);
}

void sub_10025473C()
{
  if (!v0) {
    JUMPOUT(0x100254734);
  }
  JUMPOUT(0x10025472CLL);
}

uint64_t sub_100254748(uint64_t a1, uint64_t a2)
{
  if (sub_10003E730(a2, (uint64_t)&off_10085BB90)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_100254788()
{
  return &off_10085BB90;
}

id sub_100254794(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _didReceiveNewSolution:a1 + 40];
}

uint64_t sub_1002547A4(uint64_t a1)
{
  return a1;
}

void sub_1002547D0(uint64_t a1)
{
  operator delete();
}

void *sub_10025481C(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  *uint64_t v2 = off_10085BBB0;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_100254874(uint64_t a1, void *a2)
{
  *a2 = off_10085BBB0;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_1002548BC(uint64_t a1)
{
}

void sub_1002548C4(id *a1)
{
  operator delete(a1);
}

void sub_100254900(uint64_t a1, void *a2, __int16 *a3)
{
  id v5 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  __int16 v14 = *a3;
  char v16 = 0;
  uint64_t v17 = 0;
  size_t v15 = 0;
  sub_10016D488(&v15, *((const void **)a3 + 1), *((void *)a3 + 2), *((void *)a3 + 2) - *((void *)a3 + 1));
  long long v18 = *((_OWORD *)a3 + 2);
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(NSObject **)(v6 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  block[2] = sub_100254A98;
  block[3] = &unk_1008589C0;
  void block[4] = v6;
  __int16 v9 = v14;
  long long v11 = 0;
  uint64_t v12 = 0;
  __p = 0;
  sub_10016D488(&__p, v15, (uint64_t)v16, v16 - (unsigned char *)v15);
  long long v13 = v18;
  dispatch_async(v7, block);
  if (__p)
  {
    long long v11 = __p;
    operator delete(__p);
  }
  if (v15)
  {
    char v16 = v15;
    operator delete(v15);
  }
  if (v5) {
    sub_10001A970(v5);
  }
}

void sub_100254A1C(_Unwind_Exception *exception_object)
{
  uint64_t v4 = *(void **)(v2 - 72);
  if (v4)
  {
    *(void *)(v2 - 64) = v4;
    operator delete(v4);
  }
  if (v1) {
    sub_10001A970(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100254A4C(uint64_t a1, uint64_t a2)
{
  if (sub_10003E730(a2, (uint64_t)&off_10085BC10)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_100254A8C()
{
  return &off_10085BC10;
}

id sub_100254A98(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _didReceivePeerData:a1 + 40];
}

uint64_t sub_100254AA8(uint64_t a1)
{
  return a1;
}

void sub_100254AD4(uint64_t a1)
{
  operator delete();
}

void *sub_100254B20(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  *uint64_t v2 = off_10085BC30;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_100254B78(uint64_t a1, void *a2)
{
  *a2 = off_10085BC30;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_100254BC0(uint64_t a1)
{
}

void sub_100254BC8(id *a1)
{
  operator delete(a1);
}

void sub_100254C04(uint64_t a1, void *a2, int *a3)
{
  uint64_t v3 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  int v4 = *a3;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(NSObject **)(v5 + 8);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100254CE8;
  v7[3] = &unk_100857CC8;
  v7[4] = v5;
  int v8 = v4;
  dispatch_async(v6, v7);
  if (v3) {
    sub_10001A970(v3);
  }
}

uint64_t sub_100254C9C(uint64_t a1, uint64_t a2)
{
  if (sub_10003E730(a2, (uint64_t)&off_10085BC90)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_100254CDC()
{
  return &off_10085BC90;
}

id sub_100254CE8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _didReceiveInvalidation:*(unsigned int *)(a1 + 40)];
}

uint64_t sub_100254CF8(uint64_t a1)
{
  return a1;
}

void sub_100254D24(uint64_t a1)
{
  operator delete();
}

void *sub_100254D70(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  *uint64_t v2 = off_10085BCB0;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_100254DC8(uint64_t a1, void *a2)
{
  *a2 = off_10085BCB0;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_100254E10(uint64_t a1)
{
}

void sub_100254E18(id *a1)
{
  operator delete(a1);
}

void sub_100254E54(uint64_t a1, void *a2, long long *a3)
{
  uint64_t v5 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  long long v6 = a3[1];
  long long v22 = *a3;
  long long v23 = v6;
  long long v24 = a3[2];
  sub_1001751A0(v25, (uint64_t)(a3 + 3));
  sub_10016E330(v26, (uint64_t)(a3 + 38));
  sub_1001751F8(v29, (__n128 *)((char *)a3 + 760));
  memcpy(v33, a3 + 55, sizeof(v33));
  uint64_t v7 = *(void *)(a1 + 8);
  int v8 = *(NSObject **)(v7 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  long long v11 = v23;
  long long v12 = v24;
  block[2] = sub_10025514C;
  block[3] = &unk_1008588F8;
  void block[4] = v7;
  long long v10 = v22;
  sub_1001751A0(v13, (uint64_t)v25);
  sub_10016E330(v14, (uint64_t)v26);
  sub_1001751F8(v17, v29);
  memcpy(v21, v33, sizeof(v21));
  dispatch_async(v8, block);
  if (v20 && __p)
  {
    int64_t v19 = __p;
    operator delete(__p);
  }
  if (v16) {
    sub_10003E96C((uint64_t)v15, v15[1]);
  }
  sub_10015DC28((uint64_t)v13);
  if (v32 && v30)
  {
    long long v31 = v30;
    operator delete(v30);
  }
  if (v28) {
    sub_10003E96C((uint64_t)v27, v27[1]);
  }
  sub_10015DC28((uint64_t)v25);
  if (v5) {
    sub_10001A970(v5);
  }
}

void sub_100255054(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  if (LOBYTE(STACK[0x320])) {
    sub_100412860((uint64_t)va);
  }
  sub_10015DC28(v4);
  if (LOBYTE(STACK[0x948]))
  {
    long long v6 = (void *)STACK[0x920];
    if (STACK[0x920])
    {
      STACK[0x928] = (unint64_t)v6;
      operator delete(v6);
    }
  }
  if (LOBYTE(STACK[0x8D0])) {
    sub_10003E96C((uint64_t)&STACK[0x850], (void *)STACK[0x858]);
  }
  sub_10015DC28(v3);
  if (v2) {
    sub_10001A970(v2);
  }
  _Unwind_Resume(a1);
}

void sub_1002550F4()
{
  if (!v0) {
    JUMPOUT(0x1002550ECLL);
  }
  JUMPOUT(0x1002550E4);
}

uint64_t sub_100255100(uint64_t a1, uint64_t a2)
{
  if (sub_10003E730(a2, (uint64_t)&off_10085BD10)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_100255140()
{
  return &off_10085BD10;
}

id sub_10025514C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _didReceiveUnsuccessfulSolution:a1 + 40];
}

void sub_100255160(uint64_t a1)
{
  sub_1002D8058(a1);

  operator delete();
}

uint64_t sub_100255198(uint64_t a1)
{
  return sub_1002D8058(a1 - 8);
}

void sub_1002551A0(uint64_t a1)
{
  sub_1002D8058(a1 - 8);

  operator delete();
}

void sub_1002551DC(void *a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = operator new(0x48uLL);
  sub_100255250(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;

  sub_10001ABCC((uint64_t)a2, v4 + 4, (uint64_t)(v4 + 3));
}

void sub_10025523C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_100255250(void *a1, void *a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_100846460;
  sub_1002CA668(a1 + 3, *a2);
  return a1;
}

void sub_10025529C(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1002552B0(void *a1@<X0>, const char *a2@<X3>, uint8_t *a3@<X4>, NSObject *a4@<X8>)
{
  _os_log_error_impl(a1, a4, OS_LOG_TYPE_ERROR, a2, a3, 0x16u);
}

void sub_1002552CC(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

uint64_t sub_1002552D8(uint64_t result, void *a2, uint64_t a3, float a4)
{
  if (v4 >= 0) {
    uint64_t v5 = a2;
  }
  else {
    uint64_t v5 = (void *)*a2;
  }
  *(float *)a3 = a4;
  *(void *)(a3 + 4) = result;
  *(_WORD *)(a3 + 12) = 2080;
  *(void *)(a3 + 14) = v5;
  return result;
}

void sub_100255310(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 8u);
}

void sub_100255330(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 632);
  uint64_t v3 = a1 + 624;
  sub_10003E96C(v3, v2);
}

void sub_10025534C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 680);
  uint64_t v3 = a1 + 672;
  sub_10003E96C(v3, v2);
}

void sub_100255368(void *a1@<X1>, uint64_t a2@<X8>)
{
}

uint64_t sub_100255370(uint64_t result, float a2, uint64_t a3, uint64_t a4)
{
  *(float *)a4 = a2;
  *(void *)(a4 + 4) = result;
  *(_WORD *)(a4 + 12) = 2112;
  *(void *)(a4 + 14) = v4;
  return result;
}

void sub_1002553B0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C888, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C888))
  {
    sub_100004950(qword_10089C870, "PRRoseProviderNetworkListener");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C870, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C888);
  }
}

void sub_100255448(_Unwind_Exception *a1)
{
}

void sub_100255460()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8A8))
  {
    sub_100004950(&qword_10089C890, "com.apple.nearbyd.accessory.download");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C890, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8A8);
  }
}

void sub_1002554F8(_Unwind_Exception *a1)
{
}

void sub_100255510()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8C8))
  {
    sub_100004950(&qword_10089C8B0, "com.apple.nearbyd.accessory.files");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C8B0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8C8);
  }
}

void sub_1002555A8(_Unwind_Exception *a1)
{
}

void sub_1002555C0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8E8))
  {
    sub_100004950(qword_10089C8D0, "MA_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8D0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8E8);
  }
}

void sub_100255658(_Unwind_Exception *a1)
{
}

void sub_100255670()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C908, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C908))
  {
    sub_100004950(qword_10089C8F0, "MB_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8F0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C908);
  }
}

void sub_100255708(_Unwind_Exception *a1)
{
}

void sub_100255720()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C928, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C928))
  {
    sub_100004950(qword_10089C910, "D");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C910, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C928);
  }
}

void sub_1002557B8(_Unwind_Exception *a1)
{
}

void sub_1002557D0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C948, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C948))
  {
    sub_100004950(&qword_10089C930, "A");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C930, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C948);
  }
}

void sub_100255868(_Unwind_Exception *a1)
{
}

void sub_100255880()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C968, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C968))
  {
    sub_100004950(qword_10089C950, "FAS.bin");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C950, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C968);
  }
}

void sub_100255918(_Unwind_Exception *a1)
{
}

void sub_100255930()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C988, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C988))
  {
    qword_10089C970 = 0;
    qword_10089C978 = 0;
    qword_10089C980 = 0;
    uint64_t v0 = operator new(0x30uLL);
    qword_10089C978 = (uint64_t)(v0 + 3);
    qword_10089C980 = (uint64_t)(v0 + 3);
    _OWORD *v0 = xmmword_1004BC3E0;
    v0[1] = *(_OWORD *)algn_1004BC3F0;
    v0[2] = xmmword_1004BC400;
    qword_10089C970 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_100008CAC, &qword_10089C970, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C988);
  }
}

void sub_1002559EC(_Unwind_Exception *a1)
{
}

void sub_100255A04()
{
  sub_10039D144();
  uint64_t v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  uint64_t v3 = std::string::append(&v38, ".bin");
  long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1008A5AE0 = v3->__r_.__value_.__r.__words[2];
  xmmword_1008A5AD0 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A5AD0, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  uint64_t v7 = std::string::append(&v38, ".bin");
  long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1008A5AF8 = v7->__r_.__value_.__r.__words[2];
  xmmword_1008A5AE8 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A5AE8, (void *)&_mh_execute_header);
  sub_10039D144();
  __int16 v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  long long v11 = std::string::append(&v38, ".bin");
  long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1008A5B10 = v11->__r_.__value_.__r.__words[2];
  xmmword_1008A5B00 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A5B00, (void *)&_mh_execute_header);
  sub_10039D144();
  long long v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  size_t v15 = std::string::append(&v38, ".bin");
  long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1008A5B28 = v15->__r_.__value_.__r.__words[2];
  xmmword_1008A5B18 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A5B18, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  int64_t v19 = std::string::append(&v38, ".bin");
  long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1008A5B40 = v19->__r_.__value_.__r.__words[2];
  xmmword_1008A5B30 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A5B30, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  long long v23 = std::string::append(&v38, ".bin");
  long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1008A5B58 = v23->__r_.__value_.__r.__words[2];
  xmmword_1008A5B48 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A5B48, (void *)&_mh_execute_header);
  sub_10039D144();
  char v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  long long v27 = std::string::append(&v38, ".bin");
  long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1008A5B70 = v27->__r_.__value_.__r.__words[2];
  xmmword_1008A5B60 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A5B60, (void *)&_mh_execute_header);
  sub_10039D144();
  char v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  long long v31 = std::string::append(&v38, ".bin");
  long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1008A5B88 = v31->__r_.__value_.__r.__words[2];
  xmmword_1008A5B78 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A5B78, (void *)&_mh_execute_header);
  sub_10039D144();
  char v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  id v35 = std::string::append(&v38, ".bin");
  long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1008A5BA0 = v35->__r_.__value_.__r.__words[2];
  xmmword_1008A5B90 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A5B90, (void *)&_mh_execute_header);
}

void sub_100256044(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002560B8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1002560E4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 96) && *(char *)(a1 + 95) < 0) {
    operator delete(*(void **)(a1 + 72));
  }
  sub_10003E96C(a1 + 16, *(void **)(a1 + 24));
  return a1;
}

uint64_t sub_10025612C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100256158(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 104) && *(char *)(a1 + 103) < 0) {
    operator delete(*(void **)(a1 + 80));
  }
  sub_10003E96C(a1 + 24, *(void **)(a1 + 32));
  return a1;
}

uint64_t sub_1002561A0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1002561CC(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_10025620C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 120) && *(char *)(a1 + 119) < 0) {
    operator delete(*(void **)(a1 + 96));
  }
  sub_10003E96C(a1 + 40, *(void **)(a1 + 48));
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_100256264(uint64_t a1)
{
  return a1;
}

uint64_t sub_100256290(uint64_t a1)
{
  return a1;
}

uint64_t sub_1002562BC(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_1002562FC(uint64_t a1)
{
  return a1;
}

void sub_100256328(uint64_t a1, uint64_t a2, uint64_t *a3, long long *a4, const void **a5, long long *a6, long long *a7)
{
  uint64_t v13 = qword_1008AC518;
  if (qword_1008AC518)
  {
    int v14 = *(_DWORD *)a3;
    size_t v15 = &qword_1008AC518;
    do
    {
      int v16 = *(_DWORD *)(v13 + 32);
      BOOL v17 = v16 < v14;
      if (v16 >= v14) {
        long long v18 = (uint64_t *)v13;
      }
      else {
        long long v18 = (uint64_t *)(v13 + 8);
      }
      if (!v17) {
        size_t v15 = (uint64_t *)v13;
      }
      uint64_t v13 = *v18;
    }
    while (*v18);
    if (v15 != &qword_1008AC518 && v14 >= *((_DWORD *)v15 + 8))
    {
      v107 = a3;
      int64_t v19 = sub_10025CCB8(&qword_1008AC510, (int *)a3, (uint64_t)&unk_1004BC2F8, (_DWORD **)&v107);
      sub_10025BDD4((uint64_t *)&v109, (const void ***)v19 + 5);
      if (v110 != (void **)sub_100007494((uint64_t)&v109, (const void **)a4))
      {
        v111 = a4;
        long long v20 = sub_10025CD88(&v109, (const void **)a4, (uint64_t)&unk_1004BC2F8, &v111);
        sub_10025BA98((uint64_t *)&v107, (const void ***)v20 + 7);
        uint64_t v21 = (void **)sub_100007494((uint64_t)&v107, a5);
        if (v108 != v21)
        {
          v111 = (long long *)a5;
          long long v22 = sub_10025CECC(&v107, a5, (uint64_t)&unk_1004BC2F8, &v111);
          *(_OWORD *)a2 = *(_OWORD *)(v22 + 7);
          if (v22 + 7 != (uint64_t *)a2) {
            sub_100259BFC((uint64_t **)(a2 + 16), (void *)v22[9], v22 + 10);
          }
          goto LABEL_97;
        }
        sub_10025B6F4((uint64_t)&v107, *v21);
      }
      sub_10025B644((uint64_t)&v109, v110[0]);
    }
  }
  uint64_t v23 = qword_1008AC530;
  if (qword_1008AC530)
  {
    int v24 = *(_DWORD *)a3;
    char v25 = &qword_1008AC530;
    do
    {
      int v26 = *(_DWORD *)(v23 + 32);
      BOOL v27 = v26 < v24;
      if (v26 >= v24) {
        long long v28 = (uint64_t *)v23;
      }
      else {
        long long v28 = (uint64_t *)(v23 + 8);
      }
      if (!v27) {
        char v25 = (uint64_t *)v23;
      }
      uint64_t v23 = *v28;
    }
    while (*v28);
    if (v25 != &qword_1008AC530 && v24 >= *((_DWORD *)v25 + 8))
    {
      v107 = a3;
      char v29 = sub_10025CCB8(&qword_1008AC528, (int *)a3, (uint64_t)&unk_1004BC2F8, (_DWORD **)&v107);
      sub_10025C350((uint64_t *)&v109, (uint64_t)(v29 + 5));
      long long v30 = v110[0];
      if (v110[0])
      {
        int v31 = *(_DWORD *)a6;
        long long v32 = v110;
        char v33 = v110[0];
        do
        {
          long long v34 = v33;
          id v35 = v32;
          int v36 = *((_DWORD *)v33 + 8);
          if (v36 >= v31) {
            long long v32 = (void **)v33;
          }
          else {
            ++v33;
          }
          char v33 = (void *)*v33;
        }
        while (v33);
        if (v32 != v110)
        {
          std::string v37 = v36 >= v31 ? v34 : v35;
          if (v31 >= *((_DWORD *)v37 + 8))
          {
            v111 = a6;
            std::string v38 = sub_10025CCB8(&v109, (int *)a6, (uint64_t)&unk_1004BC2F8, (_DWORD **)&v111);
            sub_10025BA98((uint64_t *)&v107, (const void ***)v38 + 5);
            unsigned __int8 v39 = (void **)sub_100007494((uint64_t)&v107, a5);
            if (v108 != v39)
            {
              v111 = (long long *)a5;
              int v40 = sub_10025CECC(&v107, a5, (uint64_t)&unk_1004BC2F8, &v111);
              *(_OWORD *)a2 = *(_OWORD *)(v40 + 7);
              if (v40 + 7 != (uint64_t *)a2) {
                sub_100259BFC((uint64_t **)(a2 + 16), (void *)v40[9], v40 + 10);
              }
              long long v41 = *((_OWORD *)v40 + 6);
              *(_OWORD *)(a2 + 52) = *(_OWORD *)((char *)v40 + 108);
              *(_OWORD *)(a2 + 40) = v41;
              sub_100259E60((std::string *)(a2 + 72), (const std::string *)(v40 + 16));
              long long v42 = *((_OWORD *)v40 + 10);
              *(_OWORD *)(a2 + 120) = *((_OWORD *)v40 + 11);
              *(_OWORD *)(a2 + 104) = v42;
              long long v43 = *((_OWORD *)v40 + 12);
              long long v44 = *((_OWORD *)v40 + 13);
              long long v45 = *((_OWORD *)v40 + 14);
              *(_OWORD *)(a2 + 184) = *((_OWORD *)v40 + 15);
              *(_OWORD *)(a2 + 168) = v45;
              *(_OWORD *)(a2 + 152) = v44;
              *(_OWORD *)(a2 + 136) = v43;
              long long v46 = *((_OWORD *)v40 + 16);
              long long v47 = *((_OWORD *)v40 + 17);
              long long v48 = *((_OWORD *)v40 + 18);
              *(_OWORD *)(a2 + 248) = *((_OWORD *)v40 + 19);
              *(_OWORD *)(a2 + 232) = v48;
              *(_OWORD *)(a2 + 216) = v47;
              *(_OWORD *)(a2 + 200) = v46;
              long long v49 = *((_OWORD *)v40 + 20);
              long long v50 = *((_OWORD *)v40 + 21);
              long long v51 = *((_OWORD *)v40 + 22);
              *(void *)(a2 + 312) = v40[46];
              *(_OWORD *)(a2 + 280) = v50;
              *(_OWORD *)(a2 + 296) = v51;
              *(_OWORD *)(a2 + 264) = v49;
              sub_10025B6F4((uint64_t)&v107, v108[0]);
              sub_10025C104((uint64_t)&v109, v110[0]);
              return;
            }
            sub_10025B6F4((uint64_t)&v107, *v39);
            long long v30 = v110[0];
          }
        }
      }
      sub_10025C104((uint64_t)&v109, v30);
    }
  }
  uint64_t v52 = qword_1008AC548;
  if (qword_1008AC548)
  {
    int v53 = *(_DWORD *)a3;
    unsigned int v54 = &qword_1008AC548;
    do
    {
      int v55 = *(_DWORD *)(v52 + 32);
      BOOL v56 = v55 < v53;
      if (v55 >= v53) {
        v57 = (uint64_t *)v52;
      }
      else {
        v57 = (uint64_t *)(v52 + 8);
      }
      if (!v56) {
        unsigned int v54 = (uint64_t *)v52;
      }
      uint64_t v52 = *v57;
    }
    while (*v57);
    if (v54 != &qword_1008AC548 && v53 >= *((_DWORD *)v54 + 8))
    {
      v107 = a3;
      int v58 = sub_10025CCB8(&qword_1008AC540, (int *)a3, (uint64_t)&unk_1004BC2F8, (_DWORD **)&v107);
      sub_10025BDD4((uint64_t *)&v109, (const void ***)v58 + 5);
      v111 = &qword_1008A6400;
      v59 = sub_10025CD88(&v109, (const void **)&qword_1008A6400, (uint64_t)&unk_1004BC2F8, &v111);
      sub_10025BA98((uint64_t *)&v107, (const void ***)v59 + 7);
      v60 = (void **)sub_100007494((uint64_t)&v107, a5);
      if (v108 != v60)
      {
        v111 = (long long *)a5;
        long long v22 = sub_10025CECC(&v107, a5, (uint64_t)&unk_1004BC2F8, &v111);
        *(_OWORD *)a2 = *(_OWORD *)(v22 + 7);
        if (v22 + 7 != (uint64_t *)a2) {
          sub_100259BFC((uint64_t **)(a2 + 16), (void *)v22[9], v22 + 10);
        }
        goto LABEL_97;
      }
      sub_10025B6F4((uint64_t)&v107, *v60);
      sub_10025B644((uint64_t)&v109, v110[0]);
    }
  }
  uint64_t v61 = qword_1008AC560;
  if (qword_1008AC560)
  {
    int v62 = *(_DWORD *)a3;
    v63 = &qword_1008AC560;
    do
    {
      int v64 = *(_DWORD *)(v61 + 32);
      BOOL v65 = v64 < v62;
      if (v64 >= v62) {
        uint64_t v66 = (uint64_t *)v61;
      }
      else {
        uint64_t v66 = (uint64_t *)(v61 + 8);
      }
      if (!v65) {
        v63 = (uint64_t *)v61;
      }
      uint64_t v61 = *v66;
    }
    while (*v66);
    if (v63 != &qword_1008AC560 && v62 >= *((_DWORD *)v63 + 8))
    {
      v107 = a3;
      v67 = sub_10025CCB8(&qword_1008AC558, (int *)a3, (uint64_t)&unk_1004BC2F8, (_DWORD **)&v107);
      sub_10025C988((uint64_t *)&v109, (const void ***)v67 + 5);
      if (v110 != (void **)sub_100007494((uint64_t)&v109, (const void **)a4))
      {
        v111 = a4;
        v68 = sub_10025D1D8(&v109, (const void **)a4, (uint64_t)&unk_1004BC2F8, &v111);
        sub_10025B044((uint64_t *)&v107, (uint64_t)(v68 + 7));
        if (v108[0])
        {
          int v69 = *(_DWORD *)a7;
          v70 = v108;
          v71 = v108[0];
          do
          {
            v72 = v71;
            v73 = v70;
            int v74 = *((_DWORD *)v71 + 8);
            if (v74 >= v69) {
              v70 = (void **)v71;
            }
            else {
              ++v71;
            }
            v71 = (void *)*v71;
          }
          while (v71);
          if (v70 != v108)
          {
            v75 = v74 >= v69 ? v72 : v73;
            if (v69 >= *((_DWORD *)v75 + 8))
            {
              v111 = a7;
              v95 = sub_10025D31C((uint64_t)&v107, (int *)a7, (uint64_t)&unk_1004BC2F8, (_DWORD **)&v111);
              *(_OWORD *)a2 = *(_OWORD *)(v95 + 5);
              if (v95 + 5 != (uint64_t *)a2) {
                sub_100259BFC((uint64_t **)(a2 + 16), (void *)v95[7], v95 + 8);
              }
              long long v96 = *((_OWORD *)v95 + 5);
              *(_OWORD *)(a2 + 52) = *(_OWORD *)((char *)v95 + 92);
              *(_OWORD *)(a2 + 40) = v96;
              sub_100259E60((std::string *)(a2 + 72), (const std::string *)(v95 + 14));
              long long v97 = *((_OWORD *)v95 + 9);
              *(_OWORD *)(a2 + 120) = *((_OWORD *)v95 + 10);
              *(_OWORD *)(a2 + 104) = v97;
              long long v98 = *((_OWORD *)v95 + 11);
              long long v99 = *((_OWORD *)v95 + 12);
              long long v100 = *((_OWORD *)v95 + 13);
              *(_OWORD *)(a2 + 184) = *((_OWORD *)v95 + 14);
              *(_OWORD *)(a2 + 168) = v100;
              *(_OWORD *)(a2 + 152) = v99;
              *(_OWORD *)(a2 + 136) = v98;
              long long v101 = *((_OWORD *)v95 + 15);
              long long v102 = *((_OWORD *)v95 + 16);
              long long v103 = *((_OWORD *)v95 + 17);
              *(_OWORD *)(a2 + 248) = *((_OWORD *)v95 + 18);
              *(_OWORD *)(a2 + 232) = v103;
              *(_OWORD *)(a2 + 216) = v102;
              *(_OWORD *)(a2 + 200) = v101;
              long long v104 = *((_OWORD *)v95 + 19);
              long long v105 = *((_OWORD *)v95 + 20);
              long long v106 = *((_OWORD *)v95 + 21);
              *(void *)(a2 + 312) = v95[44];
              *(_OWORD *)(a2 + 280) = v105;
              *(_OWORD *)(a2 + 296) = v106;
              *(_OWORD *)(a2 + 264) = v104;
              sub_10025ACF4((uint64_t)&v107, v108[0]);
              sub_10025C680((uint64_t)&v109, v110[0]);
              return;
            }
          }
        }
        sub_10025ACF4((uint64_t)&v107, v108[0]);
      }
      sub_10025C680((uint64_t)&v109, v110[0]);
    }
  }
  uint64_t v76 = qword_1008AC578;
  if (qword_1008AC578)
  {
    int v77 = *(_DWORD *)a3;
    v78 = &qword_1008AC578;
    do
    {
      int v79 = *(_DWORD *)(v76 + 32);
      BOOL v80 = v79 < v77;
      if (v79 >= v77) {
        v81 = (uint64_t *)v76;
      }
      else {
        v81 = (uint64_t *)(v76 + 8);
      }
      if (!v80) {
        v78 = (uint64_t *)v76;
      }
      uint64_t v76 = *v81;
    }
    while (*v81);
    if (v78 != &qword_1008AC578 && v77 >= *((_DWORD *)v78 + 8))
    {
      v107 = a3;
      v82 = sub_10025CCB8(&qword_1008AC570, (int *)a3, (uint64_t)&unk_1004BC2F8, (_DWORD **)&v107);
      sub_10025BDD4((uint64_t *)&v109, (const void ***)v82 + 5);
      if (v110 == (void **)sub_100007494((uint64_t)&v109, (const void **)a4))
      {
LABEL_98:
        sub_10025B644((uint64_t)&v109, v110[0]);
        return;
      }
      v111 = a4;
      v83 = sub_10025CD88(&v109, (const void **)a4, (uint64_t)&unk_1004BC2F8, &v111);
      sub_10025BA98((uint64_t *)&v107, (const void ***)v83 + 7);
      v111 = &qword_1008A6400;
      long long v22 = sub_10025CECC(&v107, (const void **)&qword_1008A6400, (uint64_t)&unk_1004BC2F8, &v111);
      *(_OWORD *)a2 = *(_OWORD *)(v22 + 7);
      if (v22 + 7 != (uint64_t *)a2) {
        sub_100259BFC((uint64_t **)(a2 + 16), (void *)v22[9], v22 + 10);
      }
LABEL_97:
      long long v84 = *((_OWORD *)v22 + 6);
      *(_OWORD *)(a2 + 52) = *(_OWORD *)((char *)v22 + 108);
      *(_OWORD *)(a2 + 40) = v84;
      sub_100259E60((std::string *)(a2 + 72), (const std::string *)(v22 + 16));
      long long v85 = *((_OWORD *)v22 + 10);
      *(_OWORD *)(a2 + 120) = *((_OWORD *)v22 + 11);
      *(_OWORD *)(a2 + 104) = v85;
      long long v86 = *((_OWORD *)v22 + 12);
      long long v87 = *((_OWORD *)v22 + 13);
      long long v88 = *((_OWORD *)v22 + 14);
      *(_OWORD *)(a2 + 184) = *((_OWORD *)v22 + 15);
      *(_OWORD *)(a2 + 168) = v88;
      *(_OWORD *)(a2 + 152) = v87;
      *(_OWORD *)(a2 + 136) = v86;
      long long v89 = *((_OWORD *)v22 + 16);
      long long v90 = *((_OWORD *)v22 + 17);
      long long v91 = *((_OWORD *)v22 + 18);
      *(_OWORD *)(a2 + 248) = *((_OWORD *)v22 + 19);
      *(_OWORD *)(a2 + 232) = v91;
      *(_OWORD *)(a2 + 216) = v90;
      *(_OWORD *)(a2 + 200) = v89;
      long long v92 = *((_OWORD *)v22 + 20);
      long long v93 = *((_OWORD *)v22 + 21);
      long long v94 = *((_OWORD *)v22 + 22);
      *(void *)(a2 + 312) = v22[46];
      *(_OWORD *)(a2 + 280) = v93;
      *(_OWORD *)(a2 + 296) = v94;
      *(_OWORD *)(a2 + 264) = v92;
      sub_10025B6F4((uint64_t)&v107, v108[0]);
      goto LABEL_98;
    }
  }
}

void sub_100256BDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, char a12, void *a13)
{
}

void sub_100256C80(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t *a4, uint64_t *a5, _DWORD *a6, _DWORD *a7)
{
  int v64 = sub_100257734(a3);
  long long v12 = +[NSUserDefaults standardUserDefaults];
  if (*((char *)a4 + 23) >= 0) {
    uint64_t v13 = a4;
  }
  else {
    uint64_t v13 = (uint64_t *)*a4;
  }
  int v62 = +[NSString stringWithUTF8String:v13];
  if (*((char *)a5 + 23) >= 0) {
    int v14 = a5;
  }
  else {
    int v14 = (uint64_t *)*a5;
  }
  v63 = +[NSString stringWithUTF8String:v14];
  if (byte_1008A6417 >= 0) {
    size_t v15 = &qword_1008A6400;
  }
  else {
    size_t v15 = (long long *)qword_1008A6400;
  }
  v57 = +[NSString stringWithUTF8String:v15];
  uint64_t v61 = [v12 objectForKey:@"BtThresholdScannerModelAdvertiserModel"];
  v60 = [v12 objectForKey:@"BtThresholdScannerClassAdvertiserModel"];
  int v58 = [v12 objectForKey:@"BtThresholdScannerModelAdvertiserClass"];
  v59 = [v12 objectForKey:@"BtThresholdAdvertiserModel"];
  BOOL v56 = [v12 objectForKey:@"BtThresholdScannerModel"];
  int v16 = [v61 objectForKey:v64];

  if (v16)
  {
    BOOL v17 = [v61 objectForKeyedSubscript:v64];
    long long v18 = [v17 objectForKey:v62];

    if (v18)
    {
      int64_t v19 = [v17 objectForKeyedSubscript:v62];
      long long v20 = [v19 objectForKey:v63];

      if (v20)
      {
        uint64_t v21 = [v19 objectForKey:v63];
        sub_1002578D8(v21, (uint64_t)&v65);
        *(_OWORD *)a2 = v65;
        uint64_t v22 = a2 + 24;
        sub_10003E96C(a2 + 16, *(void **)(a2 + 24));
        uint64_t v23 = v67;
        *(void *)(a2 + 16) = v66;
        *(void *)(a2 + 24) = v23;
        uint64_t v24 = v68;
        *(void *)(a2 + 32) = v68;
        if (v24)
        {
          v23[2] = v22;
          uint64_t v66 = &v67;
          v67 = 0;
          uint64_t v68 = 0;
        }
        else
        {
          *(void *)(a2 + 16) = v22;
        }
        *(_OWORD *)(a2 + 40) = v69[0];
        *(_OWORD *)(a2 + 52) = *(_OWORD *)((char *)v69 + 12);
        sub_10025A018(a2 + 72, &__p);
        *(void *)(a2 + 312) = v86;
        *(_OWORD *)(a2 + 200) = v79;
        *(_OWORD *)(a2 + 216) = v80;
        *(_OWORD *)(a2 + 232) = v81;
        *(_OWORD *)(a2 + 248) = v82;
        *(_OWORD *)(a2 + 136) = v75;
        *(_OWORD *)(a2 + 152) = v76;
        *(_OWORD *)(a2 + 168) = v77;
        *(_OWORD *)(a2 + 184) = v78;
        *(_OWORD *)(a2 + 104) = v73;
        *(_OWORD *)(a2 + 120) = v74;
        long long v46 = v84;
        *(_OWORD *)(a2 + 264) = v83;
        *(_OWORD *)(a2 + 280) = v46;
        *(_OWORD *)(a2 + 296) = v85;
        if (v72 && v71 < 0) {
          operator delete((void *)__p.n128_u64[0]);
        }
        long long v47 = v67;
LABEL_56:
        sub_10003E96C((uint64_t)&v66, v47);

LABEL_57:
        goto LABEL_63;
      }
    }
  }
  char v25 = [v60 objectForKey:v64];

  if (v25)
  {
    BOOL v17 = [v60 objectForKeyedSubscript:v64];
    int v26 = sub_100257DF0(a6);
    BOOL v27 = [v17 objectForKey:v26];

    if (v27)
    {
      long long v28 = [v17 objectForKeyedSubscript:v26];
      char v29 = [v28 objectForKey:v63];

      if (v29)
      {
        long long v30 = [v28 objectForKey:v63];
        sub_1002578D8(v30, (uint64_t)&v65);
        *(_OWORD *)a2 = v65;
        uint64_t v31 = a2 + 24;
        sub_10003E96C(a2 + 16, *(void **)(a2 + 24));
        long long v32 = v67;
        *(void *)(a2 + 16) = v66;
        *(void *)(a2 + 24) = v32;
        uint64_t v33 = v68;
        *(void *)(a2 + 32) = v68;
        if (v33)
        {
          v32[2] = v31;
          uint64_t v66 = &v67;
          v67 = 0;
          uint64_t v68 = 0;
        }
        else
        {
          *(void *)(a2 + 16) = v31;
        }
LABEL_59:
        *(_OWORD *)(a2 + 40) = v69[0];
        *(_OWORD *)(a2 + 52) = *(_OWORD *)((char *)v69 + 12);
        sub_10025A018(a2 + 72, &__p);
        *(void *)(a2 + 312) = v86;
        *(_OWORD *)(a2 + 200) = v79;
        *(_OWORD *)(a2 + 216) = v80;
        *(_OWORD *)(a2 + 232) = v81;
        *(_OWORD *)(a2 + 248) = v82;
        *(_OWORD *)(a2 + 136) = v75;
        *(_OWORD *)(a2 + 152) = v76;
        *(_OWORD *)(a2 + 168) = v77;
        *(_OWORD *)(a2 + 184) = v78;
        *(_OWORD *)(a2 + 104) = v73;
        *(_OWORD *)(a2 + 120) = v74;
        long long v55 = v84;
        *(_OWORD *)(a2 + 264) = v83;
        *(_OWORD *)(a2 + 280) = v55;
        *(_OWORD *)(a2 + 296) = v85;
        if (v72 && v71 < 0) {
          operator delete((void *)__p.n128_u64[0]);
        }
        sub_10003E96C((uint64_t)&v66, v67);

        goto LABEL_63;
      }
    }
  }
  long long v34 = [v59 objectForKey:v64];

  if (v34)
  {
    id v35 = [v59 objectForKeyedSubscript:v64];
    BOOL v17 = [v35 objectForKeyedSubscript:v57];

    int v36 = [v17 objectForKey:v63];

    if (v36)
    {
      int64_t v19 = [v17 objectForKey:v63];
      sub_1002578D8(v19, (uint64_t)&v65);
      *(_OWORD *)a2 = v65;
      uint64_t v37 = a2 + 24;
      sub_10003E96C(a2 + 16, *(void **)(a2 + 24));
      std::string v38 = v67;
      *(void *)(a2 + 16) = v66;
      *(void *)(a2 + 24) = v38;
      uint64_t v39 = v68;
      *(void *)(a2 + 32) = v68;
      if (v39)
      {
        v38[2] = v37;
        uint64_t v66 = &v67;
        v67 = 0;
        uint64_t v68 = 0;
      }
      else
      {
        *(void *)(a2 + 16) = v37;
      }
      *(_OWORD *)(a2 + 40) = v69[0];
      *(_OWORD *)(a2 + 52) = *(_OWORD *)((char *)v69 + 12);
      sub_10025A018(a2 + 72, &__p);
      *(void *)(a2 + 312) = v86;
      *(_OWORD *)(a2 + 200) = v79;
      *(_OWORD *)(a2 + 216) = v80;
      *(_OWORD *)(a2 + 232) = v81;
      *(_OWORD *)(a2 + 248) = v82;
      *(_OWORD *)(a2 + 136) = v75;
      *(_OWORD *)(a2 + 152) = v76;
      *(_OWORD *)(a2 + 168) = v77;
      *(_OWORD *)(a2 + 184) = v78;
      *(_OWORD *)(a2 + 104) = v73;
      *(_OWORD *)(a2 + 120) = v74;
      long long v48 = v84;
      *(_OWORD *)(a2 + 264) = v83;
      *(_OWORD *)(a2 + 280) = v48;
      *(_OWORD *)(a2 + 296) = v85;
      if (v72 && v71 < 0) {
        operator delete((void *)__p.n128_u64[0]);
      }
      sub_10003E96C((uint64_t)&v66, v67);
      goto LABEL_57;
    }
  }
  int v40 = [v58 objectForKey:v64];

  if (v40)
  {
    BOOL v17 = [v58 objectForKeyedSubscript:v64];
    long long v41 = [v17 objectForKey:v62];

    if (v41)
    {
      int v26 = [v17 objectForKeyedSubscript:v62];
      long long v28 = sub_100257DF0(a7);
      long long v42 = [v26 objectForKey:v28];

      if (v42)
      {
        long long v30 = [v26 objectForKey:v28];
        sub_1002578D8(v30, (uint64_t)&v65);
        *(_OWORD *)a2 = v65;
        uint64_t v43 = a2 + 24;
        sub_10003E96C(a2 + 16, *(void **)(a2 + 24));
        long long v44 = v67;
        *(void *)(a2 + 16) = v66;
        *(void *)(a2 + 24) = v44;
        uint64_t v45 = v68;
        *(void *)(a2 + 32) = v68;
        if (v45)
        {
          v44[2] = v43;
          uint64_t v66 = &v67;
          v67 = 0;
          uint64_t v68 = 0;
        }
        else
        {
          *(void *)(a2 + 16) = v43;
        }
        goto LABEL_59;
      }
    }
  }
  long long v49 = [v56 objectForKey:v64];

  if (v49)
  {
    BOOL v17 = [v56 objectForKeyedSubscript:v64];
    long long v50 = [v17 objectForKey:v62];

    if (!v50)
    {
LABEL_63:

      goto LABEL_64;
    }
    int64_t v19 = [v17 objectForKey:v62];
    uint64_t v21 = [v19 objectForKeyedSubscript:v57];
    sub_1002578D8(v21, (uint64_t)&v65);
    *(_OWORD *)a2 = v65;
    uint64_t v51 = a2 + 24;
    sub_10003E96C(a2 + 16, *(void **)(a2 + 24));
    uint64_t v52 = v67;
    *(void *)(a2 + 16) = v66;
    *(void *)(a2 + 24) = v52;
    uint64_t v53 = v68;
    *(void *)(a2 + 32) = v68;
    if (v53)
    {
      v52[2] = v51;
      uint64_t v66 = &v67;
      v67 = 0;
      uint64_t v68 = 0;
    }
    else
    {
      *(void *)(a2 + 16) = v51;
    }
    *(_OWORD *)(a2 + 40) = v69[0];
    *(_OWORD *)(a2 + 52) = *(_OWORD *)((char *)v69 + 12);
    sub_10025A018(a2 + 72, &__p);
    *(void *)(a2 + 312) = v86;
    *(_OWORD *)(a2 + 200) = v79;
    *(_OWORD *)(a2 + 216) = v80;
    *(_OWORD *)(a2 + 232) = v81;
    *(_OWORD *)(a2 + 248) = v82;
    *(_OWORD *)(a2 + 136) = v75;
    *(_OWORD *)(a2 + 152) = v76;
    *(_OWORD *)(a2 + 168) = v77;
    *(_OWORD *)(a2 + 184) = v78;
    *(_OWORD *)(a2 + 104) = v73;
    *(_OWORD *)(a2 + 120) = v74;
    long long v54 = v84;
    *(_OWORD *)(a2 + 264) = v83;
    *(_OWORD *)(a2 + 280) = v54;
    *(_OWORD *)(a2 + 296) = v85;
    if (v72 && v71 < 0) {
      operator delete((void *)__p.n128_u64[0]);
    }
    long long v47 = v67;
    goto LABEL_56;
  }
LABEL_64:
}

void sub_1002575D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17)
{
  _Unwind_Resume(a1);
}

uint64_t *sub_100257734(_DWORD *a1)
{
  LODWORD(v6[0]) = 1;
  v6[1] = @"unspecified";
  int v7 = 2;
  CFStringRef v8 = @"immediate";
  int v9 = 3;
  CFStringRef v10 = @"near";
  int v11 = 4;
  CFStringRef v12 = @"desk";
  int v13 = 5;
  CFStringRef v14 = @"vicinity";
  int v15 = 6;
  CFStringRef v16 = @"sensorMax";
  int v17 = 7;
  CFStringRef v18 = @"superImmediate";
  sub_100259F04((uint64_t)v5, (int *)v6, 7);
  for (uint64_t i = 13; i != -1; i -= 2)

  v6[0] = a1;
  uint64_t v3 = sub_1001A284C(v5, a1, (uint64_t)&unk_1004BC2F8, v6)[5];
  sub_1001A23EC((uint64_t)v5, v5[1]);

  return v3;
}

void sub_100257898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, void *a11)
{
}

void sub_1002578D8(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = a1;
  long long v4 = [v3 objectForKeyedSubscript:@"threshold"];
  [v4 floatValue];
  float v6 = v5;

  if (v6 >= 0.0)
  {
    int v9 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      CFStringRef v10 = [v3 objectForKeyedSubscript:@"threshold"];
      *(_DWORD *)buf = 138412290;
      *(void *)&uint8_t buf[4] = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#btproximitydatabase Invalid OTA threshold value of: %@", buf, 0xCu);
    }
  }
  else
  {
    int v7 = [v3 objectForKeyedSubscript:@"custom_threshold_type"];
    unsigned int v8 = [v7 isEqualToString:@"default_bluetooth_filter"];

    if (v8)
    {
      *(void *)a2 = 0x300000008;
      *(double *)(a2 + 8) = v6;
      *(double *)buf = v6;
      sub_1001A02EC(a2 + 16, (double *)buf, 1);
LABEL_12:
      *(_OWORD *)(a2 + 40) = xmmword_1004B7700;
      *(void *)(a2 + 56) = 0x4024000000000000;
      *(_DWORD *)(a2 + 64) = 45;
      *(unsigned char *)(a2 + 72) = 0;
      *(unsigned char *)(a2 + 96) = 0;
      *(void *)(a2 + 104) = 0;
      *(unsigned char *)(a2 + 112) = 0;
      *(_DWORD *)(a2 + 116) = 1;
      *(unsigned char *)(a2 + 120) = 1;
      *(_OWORD *)(a2 + 128) = xmmword_1004B7710;
      *(_OWORD *)(a2 + 144) = xmmword_1004B7720;
      __asm { FMOV            V0.2D, #1.0 }
      *(_OWORD *)(a2 + 160) = _Q0;
      *(void *)(a2 + 176) = 0xC059000000000000;
      *(_OWORD *)(a2 + 184) = xmmword_1004B7730;
      *(int32x2_t *)(a2 + 200) = vdup_n_s32(0x3DCCCCCDu);
      *(_OWORD *)(a2 + 208) = xmmword_1004B7670;
      *(void *)(a2 + 232) = 0;
      *(void *)(a2 + 240) = 0;
      *(void *)(a2 + 224) = 0x3FD999999999999ALL;
      *(_OWORD *)(a2 + 248) = xmmword_1004B7680;
      *(_DWORD *)(a2 + 264) = 5;
LABEL_13:
      *(void *)(a2 + 272) = 0x4000000000000000;
      *(_DWORD *)(a2 + 280) = 10;
      *(void *)(a2 + 288) = 0x4034000000000000;
      *(_DWORD *)(a2 + 296) = 3;
      *(_OWORD *)(a2 + 304) = xmmword_1004B7740;
      goto LABEL_14;
    }
    int v17 = [v3 objectForKeyedSubscript:@"custom_threshold_type"];
    unsigned int v18 = [v17 isEqualToString:@"rssi_estimator"];

    if (v18)
    {
      *(void *)a2 = 0x200000003;
      *(double *)(a2 + 8) = v6;
      *(double *)buf = v6;
      sub_1001A02EC(a2 + 16, (double *)buf, 1);
      goto LABEL_12;
    }
    int64_t v19 = [v3 objectForKeyedSubscript:@"custom_threshold_type"];
    unsigned int v20 = [v19 isEqualToString:@"default_setup"];

    if (v20)
    {
      *(void *)a2 = 0x300000010;
      *(double *)(a2 + 8) = v6;
      *(double *)buf = v6;
      sub_1001A02EC(a2 + 16, (double *)buf, 1);
      goto LABEL_12;
    }
    int v26 = [v3 objectForKeyedSubscript:@"custom_threshold_type"];
    unsigned int v27 = [v26 isEqualToString:@"high_rate_hysteresis"];

    if (v27)
    {
      *(void *)a2 = 0x200000003;
      *(double *)(a2 + 8) = v6;
      *(double *)buf = v6;
      sub_1001A02EC(a2 + 16, (double *)buf, 1);
      *(_OWORD *)(a2 + 40) = xmmword_1004BC940;
      *(void *)(a2 + 56) = 0x4000000000000000;
      *(_DWORD *)(a2 + 64) = 20;
      *(unsigned char *)(a2 + 72) = 0;
      *(unsigned char *)(a2 + 96) = 0;
      *(void *)(a2 + 104) = 0;
      *(unsigned char *)(a2 + 112) = 0;
      *(_DWORD *)(a2 + 116) = 1;
      *(unsigned char *)(a2 + 120) = 1;
      *(_OWORD *)(a2 + 128) = xmmword_1004B7710;
      *(_OWORD *)(a2 + 144) = xmmword_1004B7720;
      __asm { FMOV            V0.2D, #1.0 }
      *(_OWORD *)(a2 + 160) = _Q0;
      *(_OWORD *)(a2 + 184) = xmmword_1004B7730;
      *(void *)(a2 + 176) = 0xC059000000000000;
      *(int32x2_t *)(a2 + 200) = vdup_n_s32(0x3DCCCCCDu);
      *(_OWORD *)(a2 + 208) = xmmword_1004B7670;
      *(void *)(a2 + 232) = 0;
      *(void *)(a2 + 240) = 0;
      *(void *)(a2 + 224) = 0x3FD999999999999ALL;
      *(_OWORD *)(a2 + 248) = xmmword_1004B7680;
      *(_DWORD *)(a2 + 264) = 5;
      goto LABEL_13;
    }
  }
  *(_OWORD *)a2 = xmmword_1008A6430;
  sub_10025A138((uint64_t *)(a2 + 16), (uint64_t)&unk_1008A6440);
  *(_OWORD *)(a2 + 40) = xmmword_1008A6458;
  *(_OWORD *)(a2 + 52) = *(long long *)((char *)&xmmword_1008A6458 + 12);
  sub_10025A21C(a2 + 72, &byte_1008A6478);
  long long v11 = *(_OWORD *)&dword_1008A6548;
  *(_OWORD *)(a2 + 264) = xmmword_1008A6538;
  *(_OWORD *)(a2 + 280) = v11;
  *(_OWORD *)(a2 + 296) = xmmword_1008A6558;
  long long v12 = unk_1008A6508;
  *(_OWORD *)(a2 + 200) = xmmword_1008A64F8;
  *(_OWORD *)(a2 + 216) = v12;
  long long v13 = unk_1008A6528;
  *(_OWORD *)(a2 + 232) = xmmword_1008A6518;
  *(_OWORD *)(a2 + 248) = v13;
  long long v14 = unk_1008A64C8;
  *(_OWORD *)(a2 + 136) = *(long long *)((char *)&xmmword_1008A64B0 + 8);
  *(_OWORD *)(a2 + 152) = v14;
  long long v15 = unk_1008A64E8;
  *(_OWORD *)(a2 + 168) = *(long long *)((char *)&xmmword_1008A64D0 + 8);
  *(_OWORD *)(a2 + 184) = v15;
  long long v16 = *(_OWORD *)&byte_1008A64A8;
  *(_OWORD *)(a2 + 104) = xmmword_1008A6498;
  *(void *)(a2 + 312) = qword_1008A6568;
  *(_OWORD *)(a2 + 120) = v16;
LABEL_14:
}

void sub_100257D84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t *sub_100257DF0(_DWORD *a1)
{
  v6[1] = @"DeviceClassInvalid";
  int v7 = 1;
  CFStringRef v8 = @"DeviceClassMacBook";
  int v9 = 2;
  CFStringRef v10 = @"DeviceClassMacBookAir";
  int v11 = 3;
  CFStringRef v12 = @"DeviceClassMacBookPro";
  int v13 = 4;
  CFStringRef v14 = @"DeviceClassiMac";
  int v15 = 5;
  CFStringRef v16 = @"DeviceClassMacMini";
  int v17 = 6;
  CFStringRef v18 = @"DeviceClassIpad";
  int v19 = 7;
  CFStringRef v20 = @"DeviceClassIphone";
  int v21 = 8;
  CFStringRef v22 = @"DeviceClassMax";
  int v23 = 9;
  CFStringRef v24 = @"DeviceClassMacPro";
  int v25 = 10;
  CFStringRef v26 = @"DeviceClassMacStudio";
  int v27 = 11;
  CFStringRef v28 = @"DeviceClassAirTag";
  int v29 = 12;
  CFStringRef v30 = @"DeviceClassDefaultMac";
  int v31 = 13;
  CFStringRef v32 = @"DeviceClassAudioAccessory";
  int v33 = 14;
  CFStringRef v34 = @"DeviceClassHomePod";
  int v35 = 15;
  LODWORD(v6[0]) = 0;
  CFStringRef v36 = @"DeviceClassWatch";
  int v37 = 16;
  CFStringRef v38 = @"DeviceClassRemote";
  int v39 = 18;
  CFStringRef v40 = @"DeviceClassPencil";
  sub_10025A0B8((uint64_t)v5, (int *)v6, 18);
  for (uint64_t i = 35; i != -1; i -= 2)

  v6[0] = a1;
  id v3 = sub_1001A284C(v5, a1, (uint64_t)&unk_1004BC2F8, v6)[5];
  sub_1001A23EC((uint64_t)v5, v5[1]);

  return v3;
}

void sub_10025802C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, void *a11)
{
}

uint64_t sub_10025806C(uint64_t a1, char *__s)
{
  long long v2 = __s;
  int64_t v3 = __s[23];
  if (__s[23] < 0)
  {
    uint64_t v4 = *(void *)__s;
    float v5 = (char *)*((void *)__s + 1);
  }
  else
  {
    uint64_t v4 = (uint64_t)__s;
    float v5 = (char *)__s[23];
  }
  if (byte_1008A5ED7 >= 0) {
    float v6 = &qword_1008A5EC0;
  }
  else {
    float v6 = (uint64_t *)qword_1008A5EC0;
  }
  if (byte_1008A5ED7 >= 0) {
    int64_t v7 = byte_1008A5ED7;
  }
  else {
    int64_t v7 = unk_1008A5EC8;
  }
  if (v7)
  {
    if ((uint64_t)v5 >= v7)
    {
      CFStringRef v12 = &v5[v4];
      int v13 = *(char *)v6;
      a1 = v4;
      do
      {
        CFStringRef v14 = &v5[-v7];
        if (v14 == (char *)-1) {
          break;
        }
        a1 = (uint64_t)memchr((void *)a1, v13, (size_t)(v14 + 1));
        if (!a1) {
          break;
        }
        uint64_t v15 = a1;
        a1 = memcmp((const void *)a1, v6, v7);
        if (!a1)
        {
          if ((char *)v15 == v12 || v15 - v4 == -1) {
            break;
          }
          goto LABEL_40;
        }
        a1 = v15 + 1;
        float v5 = &v12[-v15 - 1];
      }
      while ((uint64_t)v5 >= v7);
    }
    uint64_t v8 = sub_100258654(a1, (char **)v2);
    if ((v8 & 1) == 0)
    {
      int v9 = (char *)v2[23];
      if (v2[23] < 0)
      {
        CFStringRef v10 = *(char **)v2;
        int v11 = (char *)*((void *)v2 + 1);
      }
      else
      {
        CFStringRef v10 = v2;
        int v11 = (char *)v2[23];
      }
      if (byte_1008A5F1F >= 0) {
        CFStringRef v16 = &qword_1008A5F08;
      }
      else {
        CFStringRef v16 = (uint64_t *)qword_1008A5F08;
      }
      if (byte_1008A5F1F >= 0) {
        int64_t v17 = byte_1008A5F1F;
      }
      else {
        int64_t v17 = unk_1008A5F10;
      }
      if (!v17) {
        return 4;
      }
      if ((uint64_t)v11 >= v17)
      {
        int v19 = &v11[(void)v10];
        int v20 = *(char *)v16;
        uint64_t v8 = (uint64_t)v10;
        do
        {
          int v21 = &v11[-v17];
          if (v21 == (char *)-1) {
            break;
          }
          uint64_t v8 = (uint64_t)memchr((void *)v8, v20, (size_t)(v21 + 1));
          if (!v8) {
            break;
          }
          uint64_t v22 = v8;
          uint64_t v8 = memcmp((const void *)v8, v16, v17);
          if (!v8)
          {
            if ((char *)v22 == v19 || v22 - (void)v10 == -1) {
              break;
            }
            return 4;
          }
          uint64_t v8 = v22 + 1;
          int v11 = &v19[-v22 - 1];
        }
        while ((uint64_t)v11 >= v17);
      }
      if ((v9 & 0x80) != 0)
      {
        CFStringRef v18 = *(char **)v2;
        int v9 = (char *)*((void *)v2 + 1);
      }
      else
      {
        CFStringRef v18 = v2;
      }
      if (byte_1008A5F37 >= 0) {
        long long v42 = &qword_1008A5F20;
      }
      else {
        long long v42 = (uint64_t *)qword_1008A5F20;
      }
      if (byte_1008A5F37 >= 0) {
        int64_t v43 = byte_1008A5F37;
      }
      else {
        int64_t v43 = unk_1008A5F28;
      }
      if (!v43) {
        return 5;
      }
      if ((uint64_t)v9 >= v43)
      {
        uint64_t v45 = &v9[(void)v18];
        int v46 = *(char *)v42;
        uint64_t v8 = (uint64_t)v18;
        do
        {
          if (&v9[-v43] == (char *)-1) {
            break;
          }
          uint64_t v8 = (uint64_t)memchr((void *)v8, v46, (size_t)&v9[-v43 + 1]);
          if (!v8) {
            break;
          }
          uint64_t v47 = v8;
          uint64_t v8 = memcmp((const void *)v8, v42, v43);
          if (!v8)
          {
            if ((char *)v47 == v45 || v47 - (void)v18 == -1) {
              break;
            }
            return 5;
          }
          uint64_t v8 = v47 + 1;
          int v9 = &v45[-v47 - 1];
        }
        while ((uint64_t)v9 >= v43);
      }
      uint64_t v44 = sub_1002588F4(v8, (char **)v2);
      if ((v44 & 1) != 0 || sub_100258A5C(v44, (char **)v2)) {
        return 5;
      }
      if (sub_100258578((uint64_t *)v2, (char *)qword_1008A5F38, 0) != -1) {
        return 9;
      }
      if (sub_100258578((uint64_t *)v2, (char *)qword_1008A5F50, 0) != -1) {
        return 12;
      }
      if (sub_100258578((uint64_t *)v2, (char *)qword_1008A5F68, 0) != -1) {
        return 6;
      }
      if (sub_100258578((uint64_t *)v2, (char *)qword_1008A5F80, 0) != -1) {
        return 7;
      }
      if (sub_100258CD8(-1, (char **)v2)) {
        return 13;
      }
      if (sub_100258578((uint64_t *)v2, (char *)qword_1008A5FC8, 0) != -1) {
        return 14;
      }
      if (sub_100258578((uint64_t *)v2, (char *)qword_1008A5FE0, 0) != -1) {
        return 15;
      }
      if (sub_100258578((uint64_t *)v2, (char *)qword_1008A5FF8, 0) != -1) {
        return 16;
      }
      if (sub_100258578((uint64_t *)v2, (char *)&xmmword_1008A5FB0, 0) != -1) {
        return 11;
      }
      if (sub_100259008(-1, (char **)v2)) {
        return 18;
      }
      if (sub_100258578((uint64_t *)v2, (char *)&xmmword_1008A63E8, 0) == -1) {
        return 0;
      }
      return 17;
    }
    return 3;
  }
LABEL_40:
  if ((v3 & 0x80) != 0)
  {
    int v23 = *(char **)v2;
    int64_t v24 = *((void *)v2 + 1);
  }
  else
  {
    int v23 = v2;
    int64_t v24 = v3;
  }
  if (byte_1008A5EEF >= 0) {
    int v25 = &qword_1008A5ED8;
  }
  else {
    int v25 = (uint64_t *)qword_1008A5ED8;
  }
  if (byte_1008A5EEF >= 0) {
    int64_t v26 = byte_1008A5EEF;
  }
  else {
    int64_t v26 = unk_1008A5EE0;
  }
  if (!v26) {
    return 2;
  }
  if (v24 >= v26)
  {
    int v31 = &v23[v24];
    int v32 = *(char *)v25;
    int v33 = v23;
    do
    {
      int64_t v34 = v24 - v26;
      if (v34 == -1) {
        break;
      }
      int v35 = (char *)memchr(v33, v32, v34 + 1);
      if (!v35) {
        break;
      }
      CFStringRef v36 = v35;
      if (!memcmp(v35, v25, v26))
      {
        if (v36 == v31 || v36 - v23 == -1) {
          break;
        }
        return 2;
      }
      int v33 = v36 + 1;
      int64_t v24 = v31 - (v36 + 1);
    }
    while (v24 >= v26);
  }
  if ((v3 & 0x80) != 0)
  {
    int v27 = v2;
    long long v2 = *(char **)v2;
    int64_t v3 = *((void *)v27 + 1);
  }
  if (byte_1008A5F07 >= 0) {
    CFStringRef v28 = &qword_1008A5EF0;
  }
  else {
    CFStringRef v28 = (uint64_t *)qword_1008A5EF0;
  }
  if (byte_1008A5F07 >= 0) {
    int64_t v29 = byte_1008A5F07;
  }
  else {
    int64_t v29 = unk_1008A5EF8;
  }
  if (!v29) {
    return 3;
  }
  if (v3 >= v29)
  {
    int v37 = &v2[v3];
    int v38 = *(char *)v28;
    int v39 = v2;
    do
    {
      if (v3 - v29 == -1) {
        break;
      }
      CFStringRef v40 = (char *)memchr(v39, v38, v3 - v29 + 1);
      if (!v40) {
        break;
      }
      long long v41 = v40;
      if (!memcmp(v40, v28, v29))
      {
        if (v41 == v37 || v41 - v2 == -1) {
          return 1;
        }
        return 3;
      }
      int v39 = v41 + 1;
      int64_t v3 = v37 - (v41 + 1);
    }
    while (v3 >= v29);
  }
  return 1;
}

uint64_t sub_100258578(uint64_t *a1, char *a2, unint64_t a3)
{
  uint64_t v3 = (uint64_t)a1;
  if (*((char *)a1 + 23) < 0)
  {
    uint64_t v3 = *a1;
    unint64_t v4 = a1[1];
  }
  else
  {
    unint64_t v4 = *((unsigned __int8 *)a1 + 23);
  }
  int v5 = a2[23];
  if (v5 >= 0) {
    float v6 = a2;
  }
  else {
    float v6 = *(char **)a2;
  }
  if (v5 >= 0) {
    int64_t v7 = a2[23];
  }
  else {
    int64_t v7 = *((void *)a2 + 1);
  }
  if (v4 < a3) {
    return -1;
  }
  if (v7)
  {
    uint64_t v8 = (void *)(v3 + a3);
    int v9 = (char *)(v3 + v4);
    int64_t v10 = v4 - a3;
    if (v10 >= v7)
    {
      int v13 = *v6;
      do
      {
        uint64_t v14 = v10 - v7;
        if (v14 == -1) {
          break;
        }
        uint64_t v15 = (char *)memchr(v8, v13, v14 + 1);
        if (!v15) {
          break;
        }
        int v11 = v15;
        if (!memcmp(v15, v6, v7)) {
          goto LABEL_15;
        }
        uint64_t v8 = v11 + 1;
        int64_t v10 = v9 - (v11 + 1);
      }
      while (v10 >= v7);
    }
    int v11 = v9;
LABEL_15:
    if (v11 == v9) {
      return -1;
    }
    else {
      return (uint64_t)&v11[-v3];
    }
  }
  return a3;
}

BOOL sub_100258654(uint64_t a1, char **a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1008A6820, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1008A6820))
  {
    sub_100004950(&qword_1008A6808, "Mac14,5");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1008A6808, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1008A6820);
  }
  uint64_t v3 = (char *)*((unsigned __int8 *)a2 + 23);
  if ((char)v3 >= 0) {
    unint64_t v4 = (char *)a2;
  }
  else {
    unint64_t v4 = *a2;
  }
  if (byte_1008A681F >= 0) {
    int v5 = &qword_1008A6808;
  }
  else {
    int v5 = (uint64_t *)qword_1008A6808;
  }
  if (byte_1008A681F >= 0) {
    int64_t v6 = byte_1008A681F;
  }
  else {
    int64_t v6 = unk_1008A6810;
  }
  if (!v6) {
    return 1;
  }
  if ((char)v3 < 0) {
    uint64_t v3 = a2[1];
  }
  if ((uint64_t)v3 >= v6)
  {
    CFStringRef v12 = &v3[(void)v4];
    int v13 = *(char *)v5;
    uint64_t v14 = v4;
    do
    {
      uint64_t v15 = &v3[-v6];
      if (v15 == (char *)-1) {
        break;
      }
      CFStringRef v16 = (char *)memchr(v14, v13, (size_t)(v15 + 1));
      if (!v16) {
        break;
      }
      int64_t v17 = v16;
      if (!memcmp(v16, v5, v6))
      {
        if (v17 != v12 && v17 - v4 != -1) {
          return 1;
        }
        break;
      }
      uint64_t v14 = v17 + 1;
      uint64_t v3 = (char *)(v12 - (v17 + 1));
    }
    while ((uint64_t)v3 >= v6);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1008A6840, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1008A6840))
  {
    sub_100004950(&qword_1008A6828, "Mac14,6");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1008A6828, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1008A6840);
  }
  int64_t v7 = (char *)*((unsigned __int8 *)a2 + 23);
  uint64_t v8 = (char)v7 >= 0 ? a2 : (char **)*a2;
  int v9 = byte_1008A683F >= 0 ? &qword_1008A6828 : (uint64_t *)qword_1008A6828;
  int64_t v10 = byte_1008A683F >= 0 ? byte_1008A683F : unk_1008A6830;
  if (!v10) {
    return 1;
  }
  if ((char)v7 < 0) {
    int64_t v7 = a2[1];
  }
  if ((uint64_t)v7 >= v10)
  {
    CFStringRef v18 = &v7[(void)v8];
    int v19 = *(char *)v9;
    int v20 = v8;
    do
    {
      int v21 = &v7[-v10];
      if (v21 == (char *)-1) {
        break;
      }
      uint64_t v22 = (char *)memchr(v20, v19, (size_t)(v21 + 1));
      if (!v22) {
        break;
      }
      int v23 = v22;
      if (!memcmp(v22, v9, v10)) {
        return v23 != v18 && v23 - (char *)v8 != -1;
      }
      int v20 = (char **)(v23 + 1);
      int64_t v7 = (char *)(v18 - (v23 + 1));
    }
    while ((uint64_t)v7 >= v10);
  }
  return 0;
}

void sub_1002588CC(_Unwind_Exception *a1)
{
}

uint64_t sub_1002588F4(uint64_t a1, char **a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1008A68A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1008A68A0))
  {
    sub_100004950(&qword_1008A6888, "Mac14,3");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1008A6888, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1008A68A0);
  }
  uint64_t v3 = (char *)*((unsigned __int8 *)a2 + 23);
  if ((char)v3 >= 0) {
    unint64_t v4 = (char *)a2;
  }
  else {
    unint64_t v4 = *a2;
  }
  if (byte_1008A689F >= 0) {
    int v5 = &qword_1008A6888;
  }
  else {
    int v5 = (uint64_t *)qword_1008A6888;
  }
  if (byte_1008A689F >= 0) {
    int64_t v6 = byte_1008A689F;
  }
  else {
    int64_t v6 = unk_1008A6890;
  }
  if (!v6) {
    return 1;
  }
  if ((char)v3 < 0) {
    uint64_t v3 = a2[1];
  }
  int64_t v7 = &v3[(void)v4];
  if ((uint64_t)v3 >= v6)
  {
    int v11 = *(char *)v5;
    CFStringRef v12 = v4;
    do
    {
      int v13 = &v3[-v6];
      if (v13 == (char *)-1) {
        break;
      }
      uint64_t v14 = (char *)memchr(v12, v11, (size_t)(v13 + 1));
      if (!v14) {
        break;
      }
      uint64_t v8 = v14;
      if (!memcmp(v14, v5, v6)) {
        return v8 != v7 && v8 - v4 != -1;
      }
      CFStringRef v12 = v8 + 1;
      uint64_t v3 = (char *)(v7 - (v8 + 1));
    }
    while ((uint64_t)v3 >= v6);
  }
  uint64_t v8 = v7;
  return v8 != v7 && v8 - v4 != -1;
}

void sub_100258A44(_Unwind_Exception *a1)
{
}

BOOL sub_100258A5C(uint64_t a1, char **a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1008A6860, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1008A6860))
  {
    sub_100004950(&qword_1008A6848, "Mac13,1");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1008A6848, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1008A6860);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1008A6880, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1008A6880))
  {
    sub_100004950(&qword_1008A6868, "Mac13,2");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1008A6868, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1008A6880);
  }
  char v3 = *((unsigned char *)a2 + 23);
  if (v3 >= 0) {
    unint64_t v4 = (char *)a2;
  }
  else {
    unint64_t v4 = *a2;
  }
  if (byte_1008A685F >= 0) {
    int v5 = &qword_1008A6848;
  }
  else {
    int v5 = (uint64_t *)qword_1008A6848;
  }
  if (byte_1008A685F >= 0) {
    int64_t v6 = byte_1008A685F;
  }
  else {
    int64_t v6 = unk_1008A6850;
  }
  if (!v6) {
    return 1;
  }
  if (v3 >= 0) {
    int64_t v7 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    int64_t v7 = (int64_t)a2[1];
  }
  uint64_t v8 = &v4[v7];
  if (v7 >= v6)
  {
    int v12 = *(char *)v5;
    int64_t v13 = v7;
    uint64_t v14 = v4;
    do
    {
      int64_t v15 = v13 - v6;
      if (v15 == -1) {
        break;
      }
      CFStringRef v16 = (char *)memchr(v14, v12, v15 + 1);
      if (!v16) {
        break;
      }
      int64_t v17 = v16;
      if (!memcmp(v16, v5, v6))
      {
        if (v17 != v8 && v17 - v4 != -1) {
          return 1;
        }
        break;
      }
      uint64_t v14 = v17 + 1;
      int64_t v13 = v8 - (v17 + 1);
    }
    while (v13 >= v6);
  }
  int v9 = byte_1008A687F >= 0 ? &qword_1008A6868 : (uint64_t *)qword_1008A6868;
  int64_t v10 = byte_1008A687F >= 0 ? byte_1008A687F : unk_1008A6870;
  if (!v10) {
    return 1;
  }
  if (v7 >= v10)
  {
    int v18 = *(char *)v9;
    int v19 = v4;
    do
    {
      if (v7 - v10 == -1) {
        break;
      }
      int v20 = (char *)memchr(v19, v18, v7 - v10 + 1);
      if (!v20) {
        break;
      }
      int v21 = v20;
      if (!memcmp(v20, v9, v10)) {
        return v21 != v8 && v21 - v4 != -1;
      }
      int v19 = v21 + 1;
      int64_t v7 = v8 - (v21 + 1);
    }
    while (v7 >= v10);
  }
  return 0;
}

void sub_100258CB0(_Unwind_Exception *a1)
{
}

BOOL sub_100258CD8(uint64_t a1, char **a2)
{
  char v2 = *((unsigned char *)a2 + 23);
  if (v2 >= 0) {
    char v3 = (char *)a2;
  }
  else {
    char v3 = *a2;
  }
  if (byte_1008A606F >= 0) {
    unint64_t v4 = &qword_1008A6058;
  }
  else {
    unint64_t v4 = (long long *)qword_1008A6058;
  }
  if (byte_1008A606F >= 0) {
    int64_t v5 = byte_1008A606F;
  }
  else {
    int64_t v5 = unk_1008A6060;
  }
  if (!v5) {
    return 1;
  }
  if (v2 >= 0) {
    int64_t v6 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    int64_t v6 = (int64_t)a2[1];
  }
  int64_t v7 = &v3[v6];
  if (v6 >= v5)
  {
    int v17 = *(char *)v4;
    int64_t v18 = v6;
    int v19 = v3;
    do
    {
      int64_t v20 = v18 - v5;
      if (v20 == -1) {
        break;
      }
      int v21 = (char *)memchr(v19, v17, v20 + 1);
      if (!v21) {
        break;
      }
      uint64_t v22 = v21;
      if (!memcmp(v21, v4, v5))
      {
        if (v22 != v7 && v22 - v3 != -1) {
          return 1;
        }
        break;
      }
      int v19 = v22 + 1;
      int64_t v18 = v7 - (v22 + 1);
    }
    while (v18 >= v5);
  }
  uint64_t v8 = byte_1008A6087 >= 0 ? &xmmword_1008A6070 : (long long *)xmmword_1008A6070;
  int64_t v9 = byte_1008A6087 >= 0 ? byte_1008A6087 : *((void *)&xmmword_1008A6070 + 1);
  if (!v9) {
    return 1;
  }
  if (v6 >= v9)
  {
    int v23 = *(char *)v8;
    int64_t v24 = v6;
    int v25 = v3;
    do
    {
      int64_t v26 = v24 - v9;
      if (v26 == -1) {
        break;
      }
      int v27 = (char *)memchr(v25, v23, v26 + 1);
      if (!v27) {
        break;
      }
      CFStringRef v28 = v27;
      if (!memcmp(v27, v8, v9))
      {
        if (v28 != v7 && v28 - v3 != -1) {
          return 1;
        }
        break;
      }
      int v25 = v28 + 1;
      int64_t v24 = v7 - (v28 + 1);
    }
    while (v24 >= v9);
  }
  int64_t v10 = byte_1008A6027 >= 0 ? &qword_1008A6010 : (long long *)qword_1008A6010;
  int64_t v11 = byte_1008A6027 >= 0 ? byte_1008A6027 : unk_1008A6018;
  if (!v11) {
    return 1;
  }
  if (v6 >= v11)
  {
    int v29 = *(char *)v10;
    int64_t v30 = v6;
    int v31 = v3;
    do
    {
      int64_t v32 = v30 - v11;
      if (v32 == -1) {
        break;
      }
      int v33 = (char *)memchr(v31, v29, v32 + 1);
      if (!v33) {
        break;
      }
      int64_t v34 = v33;
      if (!memcmp(v33, v10, v11))
      {
        if (v34 != v7 && v34 - v3 != -1) {
          return 1;
        }
        break;
      }
      int v31 = v34 + 1;
      int64_t v30 = v7 - (v34 + 1);
    }
    while (v30 >= v11);
  }
  int v12 = byte_1008A603F >= 0 ? &qword_1008A6028 : (long long *)qword_1008A6028;
  int64_t v13 = byte_1008A603F >= 0 ? byte_1008A603F : unk_1008A6030;
  if (!v13) {
    return 1;
  }
  if (v6 >= v13)
  {
    int v35 = *(char *)v12;
    int64_t v36 = v6;
    int v37 = v3;
    do
    {
      int64_t v38 = v36 - v13;
      if (v38 == -1) {
        break;
      }
      int v39 = (char *)memchr(v37, v35, v38 + 1);
      if (!v39) {
        break;
      }
      CFStringRef v40 = v39;
      if (!memcmp(v39, v12, v13))
      {
        if (v40 != v7 && v40 - v3 != -1) {
          return 1;
        }
        break;
      }
      int v37 = v40 + 1;
      int64_t v36 = v7 - (v40 + 1);
    }
    while (v36 >= v13);
  }
  uint64_t v14 = byte_1008A6057 >= 0 ? &qword_1008A6040 : (long long *)qword_1008A6040;
  int64_t v15 = byte_1008A6057 >= 0 ? byte_1008A6057 : unk_1008A6048;
  if (!v15) {
    return 1;
  }
  if (v6 >= v15)
  {
    int v41 = *(char *)v14;
    long long v42 = v3;
    do
    {
      if (v6 - v15 == -1) {
        break;
      }
      int64_t v43 = (char *)memchr(v42, v41, v6 - v15 + 1);
      if (!v43) {
        break;
      }
      uint64_t v44 = v43;
      if (!memcmp(v43, v14, v15)) {
        return v44 != v7 && v44 - v3 != -1;
      }
      long long v42 = v44 + 1;
      int64_t v6 = v7 - (v44 + 1);
    }
    while (v6 >= v15);
  }
  return 0;
}

uint64_t sub_100259008(uint64_t a1, char **a2)
{
  char v2 = (char *)*((unsigned __int8 *)a2 + 23);
  if ((char)v2 >= 0) {
    char v3 = (char *)a2;
  }
  else {
    char v3 = *a2;
  }
  if (byte_1008A60CF >= 0) {
    unint64_t v4 = &xmmword_1008A60B8;
  }
  else {
    unint64_t v4 = (long long *)xmmword_1008A60B8;
  }
  if (byte_1008A60CF >= 0) {
    int64_t v5 = byte_1008A60CF;
  }
  else {
    int64_t v5 = *((void *)&xmmword_1008A60B8 + 1);
  }
  if (!v5) {
    return 1;
  }
  if ((char)v2 < 0) {
    char v2 = a2[1];
  }
  int64_t v6 = &v2[(void)v3];
  if ((uint64_t)v2 >= v5)
  {
    int v10 = *(char *)v4;
    int64_t v11 = v3;
    do
    {
      int v12 = &v2[-v5];
      if (v12 == (char *)-1) {
        break;
      }
      int64_t v13 = (char *)memchr(v11, v10, (size_t)(v12 + 1));
      if (!v13) {
        break;
      }
      int64_t v7 = v13;
      if (!memcmp(v13, v4, v5)) {
        return v7 != v6 && v7 - v3 != -1;
      }
      int64_t v11 = v7 + 1;
      char v2 = (char *)(v6 - (v7 + 1));
    }
    while ((uint64_t)v2 >= v5);
  }
  int64_t v7 = v6;
  return v7 != v6 && v7 - v3 != -1;
}

uint64_t *sub_1002590EC@<X0>(unsigned int *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = qword_1008A6420;
  if (!qword_1008A6420)
  {
LABEL_7:
    return sub_100004950(a2, "");
  }
  unsigned int v4 = *a1;
  while (1)
  {
    unsigned int v5 = *(_DWORD *)(v3 + 32);
    if (v4 >= v5) {
      break;
    }
LABEL_6:
    uint64_t v3 = *(void *)v3;
    if (!v3) {
      goto LABEL_7;
    }
  }
  if (v5 < v4)
  {
    v3 += 8;
    goto LABEL_6;
  }
  id result = sub_1002591B0((uint64_t)&unk_1008A6418, a1);
  if (*((char *)result + 23) < 0)
  {
    uint64_t v8 = (void *)*result;
    unint64_t v9 = result[1];
    return (uint64_t *)sub_100002DE4(a2, v8, v9);
  }
  else
  {
    long long v7 = *(_OWORD *)result;
    a2[2] = result[2];
    *(_OWORD *)a2 = v7;
  }
  return result;
}

uint64_t *sub_1002591B0(uint64_t a1, unsigned int *a2)
{
  char v2 = *(uint64_t **)(a1 + 8);
  if (!v2) {
LABEL_8:
  }
    sub_10015FDEC("map::at:  key not found");
  unsigned int v3 = *a2;
  while (1)
  {
    while (1)
    {
      unsigned int v4 = *((_DWORD *)v2 + 8);
      if (v3 >= v4) {
        break;
      }
      char v2 = (uint64_t *)*v2;
      if (!v2) {
        goto LABEL_8;
      }
    }
    if (v4 >= v3) {
      return v2 + 5;
    }
    char v2 = (uint64_t *)v2[1];
    if (!v2) {
      goto LABEL_8;
    }
  }
}

uint64_t *sub_100259208(_DWORD *a1, const void **a2)
{
  if ((_UNKNOWN *)sub_100007494((uint64_t)&unk_1008A67F0, a2) != &unk_1008A67F8)
  {
    uint64_t v4 = sub_100259334((uint64_t)&unk_1008A67F0, a2);
    sub_10025A6FC((uint64_t *)&v14, v4);
    if (v15[0])
    {
      int v5 = *a1;
      int64_t v6 = v15;
      long long v7 = v15[0];
      do
      {
        uint64_t v8 = v7;
        unint64_t v9 = v6;
        int v10 = *((_DWORD *)v7 + 8);
        if (v10 >= v5) {
          int64_t v6 = (void **)v7;
        }
        else {
          ++v7;
        }
        long long v7 = (void *)*v7;
      }
      while (v7);
      if (v6 != v15)
      {
        int64_t v11 = v10 >= v5 ? v8 : v9;
        if (v5 >= *((_DWORD *)v11 + 8))
        {
          CFStringRef v16 = a1;
          int v12 = sub_1001A284C(&v14, a1, (uint64_t)&unk_1004BC2F8, &v16)[5];
          sub_10003E96C((uint64_t)&v14, v15[0]);
          return v12;
        }
      }
    }
    sub_10003E96C((uint64_t)&v14, v15[0]);
  }
  return 0;
}

void sub_10025931C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, void *a11)
{
}

uint64_t sub_100259334(uint64_t a1, const void **a2)
{
  uint64_t v2 = *sub_100026C8C(a1, &v4, a2);
  if (!v2) {
    sub_10015FDEC("map::at:  key not found");
  }
  return v2 + 56;
}

void sub_100259374(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  LODWORD(v57) = a2;
  if (*(char *)(a3 + 23) < 0)
  {
    sub_100002DE4(__p, *(void **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)__n128 __p = *(_OWORD *)a3;
    uint64_t v55 = *(void *)(a3 + 16);
  }
  int v10 = sub_10025806C(a1, (char *)__p);
  if (SHIBYTE(v55) < 0) {
    operator delete(__p[0]);
  }
  int v56 = v10;
  if (*(char *)(a4 + 23) < 0)
  {
    sub_100002DE4(__dst, *(void **)a4, *(void *)(a4 + 8));
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)a4;
    uint64_t v52 = *(void *)(a4 + 16);
  }
  int v11 = sub_10025806C(a1, (char *)__dst);
  if (SHIBYTE(v52) < 0) {
    operator delete(__dst[0]);
  }
  int v53 = v11;
  uint64_t v12 = qword_1008AC500;
  if (!qword_1008AC500) {
    goto LABEL_21;
  }
  int64_t v13 = &qword_1008AC500;
  do
  {
    int v14 = *(_DWORD *)(v12 + 32);
    BOOL v15 = v14 < a2;
    if (v14 >= a2) {
      CFStringRef v16 = (uint64_t *)v12;
    }
    else {
      CFStringRef v16 = (uint64_t *)(v12 + 8);
    }
    if (!v15) {
      int64_t v13 = (uint64_t *)v12;
    }
    uint64_t v12 = *v16;
  }
  while (*v16);
  if (v13 == &qword_1008AC500 || *((_DWORD *)v13 + 8) > a2) {
LABEL_21:
  }
    LODWORD(v57) = 1;
  uint64_t v47 = &v57;
  int v17 = sub_10025CCB8(&qword_1008AC4F8, (int *)&v57, (uint64_t)&unk_1004BC2F8, (_DWORD **)&v47);
  sub_10025B314((uint64_t *)&v49, (uint64_t)(v17 + 5));
  int64_t v18 = v50[0];
  if (!v50[0]) {
    goto LABEL_32;
  }
  int v19 = v50;
  do
  {
    int64_t v20 = v18;
    int v21 = v19;
    int v22 = *((_DWORD *)v18 + 8);
    int v23 = v18 + 1;
    if (v22 >= v10)
    {
      int v23 = v20;
      int v19 = (void **)v20;
    }
    int64_t v18 = (void *)*v23;
  }
  while (v18);
  if (v19 == v50 || (v22 >= v10 ? (int64_t v24 = v20) : (int64_t v24 = v21), v10 < *((_DWORD *)v24 + 8))) {
LABEL_32:
  }
    int v56 = 0;
  int v58 = &v56;
  int v25 = sub_10025CCB8(&v49, &v56, (uint64_t)&unk_1004BC2F8, &v58);
  sub_10025B044((uint64_t *)&v47, (uint64_t)(v25 + 5));
  int64_t v26 = v48[0];
  if (!v48[0]) {
    goto LABEL_43;
  }
  int v27 = v48;
  do
  {
    CFStringRef v28 = v26;
    int v29 = v27;
    int v30 = *((_DWORD *)v26 + 8);
    int v31 = v26 + 1;
    if (v30 >= v11)
    {
      int v31 = v28;
      int v27 = (void **)v28;
    }
    int64_t v26 = (void *)*v31;
  }
  while (v26);
  if (v27 == v48 || (v30 >= v11 ? (int64_t v32 = v28) : (int64_t v32 = v29), v11 < *((_DWORD *)v32 + 8))) {
LABEL_43:
  }
    int v53 = 0;
  int v58 = &v53;
  int v33 = sub_10025D31C((uint64_t)&v47, &v53, (uint64_t)&unk_1004BC2F8, &v58);
  *(_OWORD *)a5 = *(_OWORD *)(v33 + 5);
  sub_10025A138((uint64_t *)(a5 + 16), (uint64_t)(v33 + 7));
  long long v34 = *((_OWORD *)v33 + 5);
  *(_OWORD *)(a5 + 52) = *(_OWORD *)((char *)v33 + 92);
  *(_OWORD *)(a5 + 40) = v34;
  uint64_t v35 = sub_10025A21C(a5 + 72, (long long *)v33 + 7);
  long long v36 = *((_OWORD *)v33 + 9);
  *(_OWORD *)(a5 + 120) = *((_OWORD *)v33 + 10);
  *(_OWORD *)(a5 + 104) = v36;
  long long v37 = *((_OWORD *)v33 + 11);
  long long v38 = *((_OWORD *)v33 + 12);
  long long v39 = *((_OWORD *)v33 + 13);
  *(_OWORD *)(a5 + 184) = *((_OWORD *)v33 + 14);
  *(_OWORD *)(a5 + 168) = v39;
  *(_OWORD *)(a5 + 152) = v38;
  *(_OWORD *)(a5 + 136) = v37;
  long long v40 = *((_OWORD *)v33 + 15);
  long long v41 = *((_OWORD *)v33 + 16);
  long long v42 = *((_OWORD *)v33 + 17);
  *(_OWORD *)(a5 + 248) = *((_OWORD *)v33 + 18);
  *(_OWORD *)(a5 + 232) = v42;
  *(_OWORD *)(a5 + 216) = v41;
  *(_OWORD *)(a5 + 200) = v40;
  long long v43 = *((_OWORD *)v33 + 19);
  long long v44 = *((_OWORD *)v33 + 20);
  long long v45 = *((_OWORD *)v33 + 21);
  *(void *)(a5 + 312) = v33[44];
  *(_OWORD *)(a5 + 280) = v44;
  *(_OWORD *)(a5 + 296) = v45;
  *(_OWORD *)(a5 + 264) = v43;
  sub_100256328(v35, a5, &v57, (long long *)a3, (const void **)a4, (long long *)&v56, (long long *)&v53);
  sub_100256C80(v46, a5, &v57, (uint64_t *)a3, (uint64_t *)a4, &v56, &v53);
  sub_10025974C((std::string *)(a5 + 72), (const std::string *)a4);
  sub_10025ACF4((uint64_t)&v47, v48[0]);
  sub_10025AC94((uint64_t)&v49, v50[0]);
}

void sub_1002596D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, char a12, void *a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  sub_10003E96C(v28, *(void **)(v27 + 24));
  sub_10025ACF4((uint64_t)&a9, a10);
  sub_10025AC94((uint64_t)&a12, a13);
  _Unwind_Resume(a1);
}

std::string *sub_10025974C(std::string *__dst, const std::string *a2)
{
  if (__dst[1].__r_.__value_.__s.__data_[0])
  {
    std::string::operator=(__dst, a2);
  }
  else
  {
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_100002DE4(__dst, a2->__r_.__value_.__l.__data_, a2->__r_.__value_.__l.__size_);
    }
    else
    {
      long long v3 = *(_OWORD *)&a2->__r_.__value_.__l.__data_;
      __dst->__r_.__value_.__r.__words[2] = a2->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__dst->__r_.__value_.__l.__data_ = v3;
    }
    __dst[1].__r_.__value_.__s.__data_[0] = 1;
  }
  return __dst;
}

void *sub_1002597B8(void *__dst, long long *a2, uint64_t a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_100002DE4(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)__dst = v5;
  }
  sub_10025A6FC(__dst + 3, a3);
  return __dst;
}

void sub_100259818(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100259834(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  *(_DWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)a3;
  sub_10025A138((uint64_t *)(a1 + 24), a3 + 16);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(_OWORD *)(a1 + 60) = *(_OWORD *)(a3 + 52);
  *(_OWORD *)(a1 + 48) = v5;
  sub_10025A21C(a1 + 80, (long long *)(a3 + 72));
  long long v6 = *(_OWORD *)(a3 + 120);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a3 + 104);
  *(_OWORD *)(a1 + 128) = v6;
  long long v7 = *(_OWORD *)(a3 + 136);
  long long v8 = *(_OWORD *)(a3 + 152);
  long long v9 = *(_OWORD *)(a3 + 184);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a3 + 168);
  *(_OWORD *)(a1 + 192) = v9;
  *(_OWORD *)(a1 + 144) = v7;
  *(_OWORD *)(a1 + 160) = v8;
  long long v10 = *(_OWORD *)(a3 + 200);
  long long v11 = *(_OWORD *)(a3 + 216);
  long long v12 = *(_OWORD *)(a3 + 248);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a3 + 232);
  *(_OWORD *)(a1 + 256) = v12;
  *(_OWORD *)(a1 + 208) = v10;
  *(_OWORD *)(a1 + 224) = v11;
  long long v13 = *(_OWORD *)(a3 + 264);
  long long v14 = *(_OWORD *)(a3 + 280);
  long long v15 = *(_OWORD *)(a3 + 296);
  *(void *)(a1 + 320) = *(void *)(a3 + 312);
  *(_OWORD *)(a1 + 288) = v14;
  *(_OWORD *)(a1 + 304) = v15;
  *(_OWORD *)(a1 + 272) = v13;
  return a1;
}

void sub_1002598F8(_Unwind_Exception *a1)
{
  sub_10003E96C(v2, *(void **)(v1 + 32));
  _Unwind_Resume(a1);
}

uint64_t sub_100259910(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  *(_DWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)a3;
  sub_10025A138((uint64_t *)(a1 + 24), a3 + 16);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(_OWORD *)(a1 + 60) = *(_OWORD *)(a3 + 52);
  *(_OWORD *)(a1 + 48) = v5;
  sub_10025A21C(a1 + 80, (long long *)(a3 + 72));
  long long v6 = *(_OWORD *)(a3 + 120);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a3 + 104);
  *(_OWORD *)(a1 + 128) = v6;
  long long v7 = *(_OWORD *)(a3 + 136);
  long long v8 = *(_OWORD *)(a3 + 152);
  long long v9 = *(_OWORD *)(a3 + 184);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a3 + 168);
  *(_OWORD *)(a1 + 192) = v9;
  *(_OWORD *)(a1 + 144) = v7;
  *(_OWORD *)(a1 + 160) = v8;
  long long v10 = *(_OWORD *)(a3 + 200);
  long long v11 = *(_OWORD *)(a3 + 216);
  long long v12 = *(_OWORD *)(a3 + 248);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a3 + 232);
  *(_OWORD *)(a1 + 256) = v12;
  *(_OWORD *)(a1 + 208) = v10;
  *(_OWORD *)(a1 + 224) = v11;
  long long v13 = *(_OWORD *)(a3 + 264);
  long long v14 = *(_OWORD *)(a3 + 280);
  long long v15 = *(_OWORD *)(a3 + 296);
  *(void *)(a1 + 320) = *(void *)(a3 + 312);
  *(_OWORD *)(a1 + 288) = v14;
  *(_OWORD *)(a1 + 304) = v15;
  *(_OWORD *)(a1 + 272) = v13;
  return a1;
}

void sub_1002599D4(_Unwind_Exception *a1)
{
  sub_10003E96C(v2, *(void **)(v1 + 32));
  _Unwind_Resume(a1);
}

char *sub_1002599EC(char *__dst, long long *a2, uint64_t a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_100002DE4(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)__dst = v5;
  }
  *(_OWORD *)(__dst + 24) = *(_OWORD *)a3;
  sub_10025A138((uint64_t *)__dst + 5, a3 + 16);
  long long v6 = *(_OWORD *)(a3 + 40);
  *(_OWORD *)(__dst + 76) = *(_OWORD *)(a3 + 52);
  *((_OWORD *)__dst + 4) = v6;
  sub_10025A21C((uint64_t)(__dst + 96), (long long *)(a3 + 72));
  long long v7 = *(_OWORD *)(a3 + 120);
  *((_OWORD *)__dst + 8) = *(_OWORD *)(a3 + 104);
  *((_OWORD *)__dst + 9) = v7;
  long long v8 = *(_OWORD *)(a3 + 136);
  long long v9 = *(_OWORD *)(a3 + 152);
  long long v10 = *(_OWORD *)(a3 + 184);
  *((_OWORD *)__dst + 12) = *(_OWORD *)(a3 + 168);
  *((_OWORD *)__dst + 13) = v10;
  *((_OWORD *)__dst + 10) = v8;
  *((_OWORD *)__dst + 11) = v9;
  long long v11 = *(_OWORD *)(a3 + 200);
  long long v12 = *(_OWORD *)(a3 + 216);
  long long v13 = *(_OWORD *)(a3 + 248);
  *((_OWORD *)__dst + 16) = *(_OWORD *)(a3 + 232);
  *((_OWORD *)__dst + 17) = v13;
  *((_OWORD *)__dst + 14) = v11;
  *((_OWORD *)__dst + 15) = v12;
  long long v14 = *(_OWORD *)(a3 + 264);
  long long v15 = *(_OWORD *)(a3 + 280);
  long long v16 = *(_OWORD *)(a3 + 296);
  *((void *)__dst + 42) = *(void *)(a3 + 312);
  *((_OWORD *)__dst + 19) = v15;
  *((_OWORD *)__dst + 20) = v16;
  *((_OWORD *)__dst + 18) = v14;
  return __dst;
}

void sub_100259AD4(_Unwind_Exception *a1)
{
  sub_10003E96C(v2, *(void **)(v1 + 48));
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(a1);
}

void *sub_100259B04(void *__dst, long long *a2, const void ***a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_100002DE4(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)__dst = v5;
  }
  sub_10025BA98(__dst + 3, a3);
  return __dst;
}

void sub_100259B64(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100259B80(void *__dst, long long *a2, uint64_t a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_100002DE4(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)__dst = v5;
  }
  sub_10025B044(__dst + 3, a3);
  return __dst;
}

void sub_100259BE0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t **sub_100259BFC(uint64_t **result, void *a2, void *a3)
{
  long long v5 = result;
  if (result[2])
  {
    long long v6 = *result;
    long long v7 = result[1];
    *id result = (uint64_t *)(result + 1);
    v7[2] = 0;
    result[1] = 0;
    result[2] = 0;
    if (v6[1]) {
      long long v8 = (uint64_t *)v6[1];
    }
    else {
      long long v8 = v6;
    }
    long long v14 = result;
    long long v15 = v8;
    long long v16 = v8;
    if (v8)
    {
      long long v15 = sub_10016DE9C((uint64_t)v8);
      if (a2 != a3)
      {
        long long v9 = a2;
        do
        {
          v8[4] = v9[4];
          sub_100259D60(v5, (uint64_t)v8);
          long long v8 = v15;
          long long v16 = v15;
          if (v15) {
            long long v15 = sub_10016DE9C((uint64_t)v15);
          }
          long long v10 = (void *)v9[1];
          if (v10)
          {
            do
            {
              a2 = v10;
              long long v10 = (void *)*v10;
            }
            while (v10);
          }
          else
          {
            do
            {
              a2 = (void *)v9[2];
              BOOL v11 = *a2 == (void)v9;
              long long v9 = a2;
            }
            while (!v11);
          }
          if (!v8) {
            break;
          }
          long long v9 = a2;
        }
        while (a2 != a3);
      }
    }
    id result = (uint64_t **)sub_10016DEF0((uint64_t)&v14);
  }
  if (a2 != a3)
  {
    do
    {
      id result = (uint64_t **)sub_100259DD0(v5, (double *)a2 + 4);
      long long v12 = (void *)a2[1];
      if (v12)
      {
        do
        {
          long long v13 = v12;
          long long v12 = (void *)*v12;
        }
        while (v12);
      }
      else
      {
        do
        {
          long long v13 = (void *)a2[2];
          BOOL v11 = *v13 == (void)a2;
          a2 = v13;
        }
        while (!v11);
      }
      a2 = v13;
    }
    while (v13 != a3);
  }
  return result;
}

void sub_100259D4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10016DEF0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100259D60(uint64_t **a1, uint64_t a2)
{
  long long v3 = a1 + 1;
  uint64_t v4 = a1[1];
  if (v4)
  {
    do
    {
      while (1)
      {
        long long v3 = (uint64_t **)v4;
        if (*(double *)(a2 + 32) <= *((double *)v4 + 4)) {
          break;
        }
        uint64_t v4 = (uint64_t *)*v4;
        long long v5 = v3;
        if (!*v3) {
          goto LABEL_8;
        }
      }
      uint64_t v4 = (uint64_t *)v4[1];
    }
    while (v4);
    long long v5 = v3 + 1;
  }
  else
  {
    long long v5 = a1 + 1;
  }
LABEL_8:
  sub_100026D98(a1, (uint64_t)v3, v5, (uint64_t *)a2);
  return a2;
}

uint64_t *sub_100259DD0(uint64_t **a1, double *a2)
{
  uint64_t v4 = (uint64_t *)operator new(0x28uLL);
  double v5 = *a2;
  v4[4] = *(void *)a2;
  long long v6 = a1 + 1;
  long long v7 = a1[1];
  if (v7)
  {
    do
    {
      while (1)
      {
        long long v6 = (uint64_t **)v7;
        if (v5 <= *((double *)v7 + 4)) {
          break;
        }
        long long v7 = (uint64_t *)*v7;
        long long v8 = v6;
        if (!*v6) {
          goto LABEL_8;
        }
      }
      long long v7 = (uint64_t *)v7[1];
    }
    while (v7);
    long long v8 = v6 + 1;
  }
  else
  {
    long long v8 = a1 + 1;
  }
LABEL_8:
  sub_100026D98(a1, (uint64_t)v6, v8, v4);
  return v4;
}

void sub_100259E60(std::string *__dst, const std::string *a2)
{
  if (__dst[1].__r_.__value_.__s.__data_[0] == a2[1].__r_.__value_.__s.__data_[0])
  {
    if (__dst[1].__r_.__value_.__s.__data_[0])
    {
      std::string::operator=(__dst, a2);
    }
  }
  else if (__dst[1].__r_.__value_.__s.__data_[0])
  {
    if (SHIBYTE(__dst->__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__dst->__r_.__value_.__l.__data_);
    }
    __dst[1].__r_.__value_.__s.__data_[0] = 0;
  }
  else
  {
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_100002DE4(__dst, a2->__r_.__value_.__l.__data_, a2->__r_.__value_.__l.__size_);
    }
    else
    {
      long long v3 = *(_OWORD *)&a2->__r_.__value_.__l.__data_;
      __dst->__r_.__value_.__r.__words[2] = a2->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__dst->__r_.__value_.__l.__data_ = v3;
    }
    __dst[1].__r_.__value_.__s.__data_[0] = 1;
  }
}

uint64_t sub_100259F04(uint64_t a1, int *a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 16 * a3;
    do
    {
      sub_100259F84((uint64_t **)a1, v4, a2, (uint64_t)a2);
      a2 += 4;
      v6 -= 16;
    }
    while (v6);
  }
  return a1;
}

void sub_100259F6C(_Unwind_Exception *a1)
{
  sub_1001A23EC(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

_DWORD *sub_100259F84(uint64_t **a1, uint64_t *a2, int *a3, uint64_t a4)
{
  uint64_t v6 = sub_1002382C4(a1, a2, &v11, &v10, a3);
  long long v7 = (_DWORD *)*v6;
  if (!*v6)
  {
    long long v8 = (uint64_t **)v6;
    long long v7 = operator new(0x30uLL);
    v7[8] = *(_DWORD *)a4;
    *((void *)v7 + 5) = *(id *)(a4 + 8);
    sub_100026D98(a1, (uint64_t)v11, v8, (uint64_t *)v7);
  }
  return v7;
}

__n128 sub_10025A018(uint64_t a1, __n128 *a2)
{
  if (*(unsigned __int8 *)(a1 + 24) == a2[1].n128_u8[8])
  {
    if (*(unsigned char *)(a1 + 24))
    {
      if (*(char *)(a1 + 23) < 0) {
        operator delete(*(void **)a1);
      }
      __n128 result = *a2;
      *(void *)(a1 + 16) = a2[1].n128_u64[0];
      *(__n128 *)a1 = result;
      a2[1].n128_u8[7] = 0;
      a2->n128_u8[0] = 0;
    }
  }
  else if (*(unsigned char *)(a1 + 24))
  {
    if (*(char *)(a1 + 23) < 0) {
      operator delete(*(void **)a1);
    }
    *(unsigned char *)(a1 + 24) = 0;
  }
  else
  {
    __n128 result = *a2;
    *(void *)(a1 + 16) = a2[1].n128_u64[0];
    *(__n128 *)a1 = result;
    a2->n128_u64[1] = 0;
    a2[1].n128_u64[0] = 0;
    a2->n128_u64[0] = 0;
    *(unsigned char *)(a1 + 24) = 1;
  }
  return result;
}

uint64_t sub_10025A0B8(uint64_t a1, int *a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 16 * a3;
    do
    {
      sub_100259F84((uint64_t **)a1, v4, a2, (uint64_t)a2);
      a2 += 4;
      v6 -= 16;
    }
    while (v6);
  }
  return a1;
}

void sub_10025A120(_Unwind_Exception *a1)
{
  sub_1001A23EC(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_10025A138(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  sub_10025A190(a1, *(double **)a2, (double *)(a2 + 8));
  return a1;
}

void sub_10025A178(_Unwind_Exception *a1)
{
  sub_10003E96C(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_10025A190(uint64_t *result, double *a2, double *a3)
{
  if (a2 != a3)
  {
    uint64_t v4 = a2;
    double v5 = (uint64_t **)result;
    uint64_t v6 = (double *)(result + 1);
    do
    {
      __n128 result = sub_1001A036C(v5, v6, v4 + 4, (uint64_t *)v4 + 4);
      long long v7 = (double *)*((void *)v4 + 1);
      if (v7)
      {
        do
        {
          long long v8 = v7;
          long long v7 = *(double **)v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          long long v8 = (double *)*((void *)v4 + 2);
          BOOL v9 = *(void *)v8 == (void)v4;
          uint64_t v4 = v8;
        }
        while (!v9);
      }
      uint64_t v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

uint64_t sub_10025A21C(uint64_t a1, long long *a2)
{
  *(unsigned char *)a1 = 0;
  *(unsigned char *)(a1 + 24) = 0;
  sub_10025A268((_OWORD *)a1, a2);
  return a1;
}

void sub_10025A24C(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 24)) {
    sub_100425F84(v1);
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_10025A268(_OWORD *__dst, long long *a2)
{
  if (*((unsigned char *)a2 + 24))
  {
    uint64_t v2 = __dst;
    if (*((char *)a2 + 23) < 0)
    {
      __dst = sub_100002DE4(__dst, *(void **)a2, *((void *)a2 + 1));
    }
    else
    {
      long long v3 = *a2;
      *((void *)__dst + 2) = *((void *)a2 + 2);
      *__dst = v3;
    }
    v2[24] = 1;
  }
  return __dst;
}

uint64_t sub_10025A2C4(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 32 * a3;
    do
    {
      sub_10025A344((uint64_t **)a1, v4, a2, (uint64_t)a2);
      a2 += 8;
      v6 -= 32;
    }
    while (v6);
  }
  return a1;
}

void sub_10025A32C(_Unwind_Exception *a1)
{
  sub_1001FC648(v1, *(char **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_10025A344(uint64_t **a1, uint64_t *a2, unsigned int *a3, uint64_t a4)
{
  uint64_t v6 = (uint64_t **)sub_10025A3C8(a1, a2, &v10, &v9, a3);
  __n128 result = *v6;
  if (!*v6)
  {
    sub_10025A570((uint64_t)a1, a4, (uint64_t)&v8);
    sub_100026D98(a1, (uint64_t)v10, v6, v8);
    return v8;
  }
  return result;
}

uint64_t *sub_10025A3C8(void *a1, uint64_t *a2, uint64_t **a3, uint64_t *a4, unsigned int *a5)
{
  double v5 = a1 + 1;
  if (a1 + 1 == a2 || (unsigned int v6 = *a5, v7 = *((_DWORD *)a2 + 8), *a5 < v7))
  {
    long long v8 = (uint64_t *)*a2;
    if ((uint64_t *)*a1 == a2)
    {
      uint64_t v10 = a2;
LABEL_17:
      if (v8)
      {
        *a3 = v10;
        return v10 + 1;
      }
      else
      {
        *a3 = a2;
        return a2;
      }
    }
    if (v8)
    {
      uint64_t v9 = (uint64_t *)*a2;
      do
      {
        uint64_t v10 = v9;
        uint64_t v9 = (uint64_t *)v9[1];
      }
      while (v9);
    }
    else
    {
      long long v13 = a2;
      do
      {
        uint64_t v10 = (uint64_t *)v13[2];
        BOOL v14 = *v10 == (void)v13;
        long long v13 = v10;
      }
      while (v14);
    }
    unsigned int v15 = *a5;
    if (*((_DWORD *)v10 + 8) < *a5) {
      goto LABEL_17;
    }
    uint64_t v16 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          int v17 = (uint64_t *)v16;
          unsigned int v18 = *(_DWORD *)(v16 + 32);
          if (v15 >= v18) {
            break;
          }
          uint64_t v16 = *v17;
          double v5 = v17;
          if (!*v17) {
            goto LABEL_29;
          }
        }
        if (v18 >= v15) {
          break;
        }
        double v5 = v17 + 1;
        uint64_t v16 = v17[1];
      }
      while (v16);
    }
    else
    {
      int v17 = a1 + 1;
    }
LABEL_29:
    *a3 = v17;
    return v5;
  }
  if (v7 >= v6)
  {
    *a3 = a2;
    *a4 = (uint64_t)a2;
    return a4;
  }
  uint64_t v11 = a2[1];
  if (v11)
  {
    long long v12 = (uint64_t *)a2[1];
    do
    {
      a4 = v12;
      long long v12 = (uint64_t *)*v12;
    }
    while (v12);
  }
  else
  {
    int v19 = a2;
    do
    {
      a4 = (uint64_t *)v19[2];
      BOOL v14 = *a4 == (void)v19;
      int v19 = a4;
    }
    while (!v14);
  }
  if (a4 != v5 && v6 >= *((_DWORD *)a4 + 8))
  {
    uint64_t v20 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          int v21 = (uint64_t *)v20;
          unsigned int v22 = *(_DWORD *)(v20 + 32);
          if (v6 >= v22) {
            break;
          }
          uint64_t v20 = *v21;
          double v5 = v21;
          if (!*v21) {
            goto LABEL_48;
          }
        }
        if (v22 >= v6) {
          break;
        }
        double v5 = v21 + 1;
        uint64_t v20 = v21[1];
      }
      while (v20);
    }
    else
    {
      int v21 = a1 + 1;
    }
LABEL_48:
    *a3 = v21;
    return v5;
  }
  if (v11)
  {
    *a3 = a4;
  }
  else
  {
    *a3 = a2;
    return a2 + 1;
  }
  return a4;
}

void *sub_10025A570@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  unsigned int v6 = operator new(0x40uLL);
  *(void *)(a3 + 8) = v5;
  *(void *)a3 = v6;
  *(unsigned char *)(a3 + 16) = 0;
  v6[8] = *(_DWORD *)a2;
  __n128 result = v6 + 10;
  if (*(char *)(a2 + 31) < 0)
  {
    __n128 result = sub_100002DE4(result, *(void **)(a2 + 8), *(void *)(a2 + 16));
  }
  else
  {
    *(_OWORD *)__n128 result = *(_OWORD *)(a2 + 8);
    result[2] = *(void *)(a2 + 24);
  }
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_10025A600(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  sub_10025A61C(v3, v2);
  _Unwind_Resume(a1);
}

void sub_10025A61C(uint64_t a1, void **__p)
{
  if (*(unsigned char *)(a1 + 8))
  {
    if (*((char *)__p + 63) < 0) {
      operator delete(__p[5]);
    }
  }
  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

uint64_t sub_10025A67C(uint64_t a1, int *a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 16 * a3;
    do
    {
      sub_10023823C((uint64_t **)a1, v4, a2, a2);
      a2 += 4;
      v6 -= 16;
    }
    while (v6);
  }
  return a1;
}

void sub_10025A6E4(_Unwind_Exception *a1)
{
  sub_10003E96C(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_10025A6FC(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  sub_10025A754(a1, *(int **)a2, (int *)(a2 + 8));
  return a1;
}

void sub_10025A73C(_Unwind_Exception *a1)
{
  sub_10003E96C(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_10025A754(uint64_t *result, int *a2, int *a3)
{
  if (a2 != a3)
  {
    uint64_t v4 = a2;
    uint64_t v5 = (uint64_t **)result;
    uint64_t v6 = result + 1;
    do
    {
      __n128 result = sub_10023823C(v5, v6, v4 + 8, (_OWORD *)v4 + 2);
      unsigned int v7 = (int *)*((void *)v4 + 1);
      if (v7)
      {
        do
        {
          long long v8 = v7;
          unsigned int v7 = *(int **)v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          long long v8 = (int *)*((void *)v4 + 2);
          BOOL v9 = *(void *)v8 == (void)v4;
          uint64_t v4 = v8;
        }
        while (!v9);
      }
      uint64_t v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

uint64_t sub_10025A7E0(uint64_t a1, const void **a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 48 * a3;
    do
    {
      sub_10025A864((uint64_t **)a1, v4, a2, (long long *)a2);
      a2 += 6;
      v6 -= 48;
    }
    while (v6);
  }
  return a1;
}

void sub_10025A84C(_Unwind_Exception *a1)
{
  sub_10025AC38(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_10025A864(uint64_t **a1, uint64_t *a2, const void **a3, long long *a4)
{
  uint64_t v6 = sub_10025A8FC(a1, a2, &v12, &v11, a3);
  unsigned int v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    long long v8 = (uint64_t **)v6;
    sub_10025AAA8((uint64_t)a1, a4, (uint64_t)v10);
    sub_100026D98(a1, (uint64_t)v12, v8, v10[0]);
    unsigned int v7 = v10[0];
    v10[0] = 0;
    sub_10025AB8C((uint64_t)v10, 0);
  }
  return v7;
}

const void **sub_10025A8FC(void *a1, uint64_t *a2, const void ***a3, uint64_t *a4, const void **a5)
{
  BOOL v9 = (const void **)(a1 + 1);
  if (a1 + 1 != a2 && !sub_100007524((uint64_t)(a1 + 2), a5, (const void **)a2 + 4))
  {
    if (!sub_100007524((uint64_t)(a1 + 2), (const void **)a2 + 4, a5))
    {
      *a3 = (const void **)a2;
      *a4 = (uint64_t)a2;
      return (const void **)a4;
    }
    a4 = a2 + 1;
    uint64_t v13 = a2[1];
    if (v13)
    {
      BOOL v14 = (const void **)a2[1];
      do
      {
        unsigned int v15 = v14;
        BOOL v14 = (const void **)*v14;
      }
      while (v14);
    }
    else
    {
      unsigned int v18 = (const void **)a2;
      do
      {
        unsigned int v15 = (const void **)v18[2];
        BOOL v17 = *v15 == v18;
        unsigned int v18 = v15;
      }
      while (!v17);
    }
    if (v15 != v9)
    {
      if (!sub_100007524((uint64_t)(a1 + 2), a5, v15 + 4)) {
        goto LABEL_28;
      }
      uint64_t v13 = *a4;
    }
    if (v13)
    {
      *a3 = v15;
      return v15;
    }
    else
    {
      *a3 = (const void **)a2;
    }
    return (const void **)a4;
  }
  if ((uint64_t *)*a1 == a2)
  {
    long long v12 = (const void **)a2;
LABEL_16:
    if (*a2)
    {
      *a3 = v12;
      return v12 + 1;
    }
    else
    {
      *a3 = (const void **)a2;
      return (const void **)a2;
    }
  }
  uint64_t v11 = (const void **)*a2;
  if (*a2)
  {
    do
    {
      long long v12 = v11;
      uint64_t v11 = (const void **)v11[1];
    }
    while (v11);
  }
  else
  {
    uint64_t v16 = a2;
    do
    {
      long long v12 = (const void **)v16[2];
      BOOL v17 = *v12 == v16;
      uint64_t v16 = (uint64_t *)v12;
    }
    while (v17);
  }
  if (sub_100007524((uint64_t)(a1 + 2), v12 + 4, a5)) {
    goto LABEL_16;
  }
LABEL_28:

  return (const void **)sub_100026C8C((uint64_t)a1, a3, a5);
}

void *sub_10025AAA8@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x50uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  __n128 result = sub_10025AB14(v6 + 4, a2);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_10025AAFC(_Unwind_Exception *a1)
{
  sub_10025AB8C(v1, 0);
  _Unwind_Resume(a1);
}

void *sub_10025AB14(void *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_100002DE4(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)__dst = v4;
  }
  sub_10025A6FC(__dst + 3, (uint64_t)a2 + 24);
  return __dst;
}

void sub_10025AB70(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_10025AB8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_10025ABE4((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

void sub_10025ABE4(uint64_t a1)
{
  sub_10003E96C(a1 + 24, *(void **)(a1 + 32));
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v2 = *(void **)a1;
    operator delete(v2);
  }
}

void sub_10025AC38(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10025AC38(a1, *a2);
    sub_10025AC38(a1, a2[1]);
    sub_10025ABE4((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void sub_10025AC94(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10025AC94(a1, *a2);
    sub_10025AC94(a1, a2[1]);
    sub_10025ACF4((uint64_t)(a2 + 5), (void *)a2[6]);
    operator delete(a2);
  }
}

void sub_10025ACF4(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10025ACF4(a1, *a2);
    sub_10025ACF4(a1, a2[1]);
    sub_10025AD50((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void sub_10025AD50(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 104) && *(char *)(a1 + 103) < 0) {
    operator delete(*(void **)(a1 + 80));
  }
  uint64_t v2 = *(void **)(a1 + 32);

  sub_10003E96C(a1 + 24, v2);
}

uint64_t sub_10025ADA0(uint64_t a1, int *a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  long long v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 328 * a3;
    do
    {
      sub_10025AE24((uint64_t **)a1, v4, a2, (uint64_t)a2);
      a2 += 82;
      v6 -= 328;
    }
    while (v6);
  }
  return a1;
}

void sub_10025AE0C(_Unwind_Exception *a1)
{
  sub_10025ACF4(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_10025AE24(uint64_t **a1, uint64_t *a2, int *a3, uint64_t a4)
{
  uint64_t v6 = sub_1002382C4(a1, a2, &v12, &v11, a3);
  unsigned int v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    long long v8 = (uint64_t **)v6;
    sub_10025AEBC((uint64_t)a1, a4, (uint64_t)v10);
    sub_100026D98(a1, (uint64_t)v12, v8, v10[0]);
    unsigned int v7 = v10[0];
    v10[0] = 0;
    sub_10025AFEC((uint64_t)v10, 0);
  }
  return v7;
}

uint64_t sub_10025AEBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x168uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = sub_10025AF28((uint64_t)v6 + 32, a2);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_10025AF10(_Unwind_Exception *a1)
{
  sub_10025AFEC(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_10025AF28(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_10025A138((uint64_t *)(a1 + 24), a2 + 24);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 60) = *(_OWORD *)(a2 + 60);
  *(_OWORD *)(a1 + 48) = v4;
  sub_10025A21C(a1 + 80, (long long *)(a2 + 80));
  long long v5 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v5;
  long long v6 = *(_OWORD *)(a2 + 144);
  long long v7 = *(_OWORD *)(a2 + 160);
  long long v8 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v8;
  *(_OWORD *)(a1 + 144) = v6;
  *(_OWORD *)(a1 + 160) = v7;
  long long v9 = *(_OWORD *)(a2 + 208);
  long long v10 = *(_OWORD *)(a2 + 224);
  long long v11 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v11;
  *(_OWORD *)(a1 + 208) = v9;
  *(_OWORD *)(a1 + 224) = v10;
  long long v12 = *(_OWORD *)(a2 + 272);
  long long v13 = *(_OWORD *)(a2 + 288);
  long long v14 = *(_OWORD *)(a2 + 304);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(_OWORD *)(a1 + 288) = v13;
  *(_OWORD *)(a1 + 304) = v14;
  *(_OWORD *)(a1 + 272) = v12;
  return a1;
}

void sub_10025AFD4(_Unwind_Exception *a1)
{
  sub_10003E96C(v2, *(void **)(v1 + 32));
  _Unwind_Resume(a1);
}

void sub_10025AFEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_10025AD50((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

uint64_t *sub_10025B044(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  sub_10025B09C(a1, *(int **)a2, (int *)(a2 + 8));
  return a1;
}

void sub_10025B084(_Unwind_Exception *a1)
{
  sub_10025ACF4(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_10025B09C(uint64_t *result, int *a2, int *a3)
{
  if (a2 != a3)
  {
    long long v4 = a2;
    long long v5 = (uint64_t **)result;
    long long v6 = result + 1;
    do
    {
      uint64_t result = sub_10025AE24(v5, v6, v4 + 8, (uint64_t)(v4 + 8));
      long long v7 = (int *)*((void *)v4 + 1);
      if (v7)
      {
        do
        {
          long long v8 = v7;
          long long v7 = *(int **)v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          long long v8 = (int *)*((void *)v4 + 2);
          BOOL v9 = *(void *)v8 == (void)v4;
          long long v4 = v8;
        }
        while (!v9);
      }
      long long v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

uint64_t sub_10025B128(uint64_t a1, int *a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  long long v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 32 * a3;
    do
    {
      sub_10025B1A8((uint64_t **)a1, v4, a2, a2);
      a2 += 8;
      v6 -= 32;
    }
    while (v6);
  }
  return a1;
}

void sub_10025B190(_Unwind_Exception *a1)
{
  sub_10025AC94(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_10025B1A8(uint64_t **a1, uint64_t *a2, int *a3, _DWORD *a4)
{
  uint64_t v6 = (uint64_t **)sub_1002382C4(a1, a2, &v10, &v9, a3);
  uint64_t result = *v6;
  if (!*v6)
  {
    sub_10025B22C((uint64_t)a1, a4, (uint64_t)&v8);
    sub_100026D98(a1, (uint64_t)v10, v6, v8);
    return v8;
  }
  return result;
}

uint64_t *sub_10025B22C@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x40uLL);
  *(void *)(a3 + 8) = v5;
  *(void *)a3 = v6;
  *(unsigned char *)(a3 + 16) = 0;
  *((_DWORD *)v6 + 8) = *a2;
  uint64_t result = sub_10025B044((uint64_t *)v6 + 5, (uint64_t)(a2 + 2));
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_10025B29C(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  sub_10025B2B8(v3, v2);
  _Unwind_Resume(a1);
}

void sub_10025B2B8(uint64_t a1, void **a2)
{
  if (*(unsigned char *)(a1 + 8))
  {
    sub_10025ACF4((uint64_t)(a2 + 5), a2[6]);
  }
  else if (!a2)
  {
    return;
  }

  operator delete(a2);
}

uint64_t *sub_10025B314(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  sub_10025B36C(a1, *(int **)a2, (int *)(a2 + 8));
  return a1;
}

void sub_10025B354(_Unwind_Exception *a1)
{
  sub_10025AC94(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_10025B36C(uint64_t *result, int *a2, int *a3)
{
  if (a2 != a3)
  {
    long long v4 = a2;
    uint64_t v5 = (uint64_t **)result;
    uint64_t v6 = result + 1;
    do
    {
      uint64_t result = sub_10025B1A8(v5, v6, v4 + 8, v4 + 8);
      long long v7 = (int *)*((void *)v4 + 1);
      if (v7)
      {
        do
        {
          long long v8 = v7;
          long long v7 = *(int **)v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          long long v8 = (int *)*((void *)v4 + 2);
          BOOL v9 = *(void *)v8 == (void)v4;
          long long v4 = v8;
        }
        while (!v9);
      }
      long long v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

uint64_t sub_10025B3F8(uint64_t a1, int *a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  long long v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 32 * a3;
    do
    {
      sub_10025B478((uint64_t **)a1, v4, a2, a2);
      a2 += 8;
      v6 -= 32;
    }
    while (v6);
  }
  return a1;
}

void sub_10025B460(_Unwind_Exception *a1)
{
  sub_10025B5E4(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_10025B478(uint64_t **a1, uint64_t *a2, int *a3, _DWORD *a4)
{
  uint64_t v6 = (uint64_t **)sub_1002382C4(a1, a2, &v10, &v9, a3);
  uint64_t result = *v6;
  if (!*v6)
  {
    sub_10025B4FC((uint64_t)a1, a4, (uint64_t)&v8);
    sub_100026D98(a1, (uint64_t)v10, v6, v8);
    return v8;
  }
  return result;
}

uint64_t *sub_10025B4FC@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x40uLL);
  *(void *)(a3 + 8) = v5;
  *(void *)a3 = v6;
  *(unsigned char *)(a3 + 16) = 0;
  *((_DWORD *)v6 + 8) = *a2;
  uint64_t result = sub_10025B314((uint64_t *)v6 + 5, (uint64_t)(a2 + 2));
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_10025B56C(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  sub_10025B588(v3, v2);
  _Unwind_Resume(a1);
}

void sub_10025B588(uint64_t a1, void **a2)
{
  if (*(unsigned char *)(a1 + 8))
  {
    sub_10025AC94((uint64_t)(a2 + 5), a2[6]);
  }
  else if (!a2)
  {
    return;
  }

  operator delete(a2);
}

void sub_10025B5E4(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10025B5E4(a1, *a2);
    sub_10025B5E4(a1, a2[1]);
    sub_10025AC94((uint64_t)(a2 + 5), (void *)a2[6]);
    operator delete(a2);
  }
}

void sub_10025B644(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10025B644(a1, *a2);
    sub_10025B644(a1, a2[1]);
    sub_10025B6A0((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void sub_10025B6A0(uint64_t a1)
{
  sub_10025B6F4(a1 + 24, *(void **)(a1 + 32));
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v2 = *(void **)a1;
    operator delete(v2);
  }
}

void sub_10025B6F4(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10025B6F4(a1, *a2);
    sub_10025B6F4(a1, a2[1]);
    sub_10025B750((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void sub_10025B750(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 120) && *(char *)(a1 + 119) < 0) {
    operator delete(*(void **)(a1 + 96));
  }
  sub_10003E96C(a1 + 40, *(void **)(a1 + 48));
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v2 = *(void **)a1;
    operator delete(v2);
  }
}

uint64_t sub_10025B7BC(uint64_t a1, const void **a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  long long v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 344 * a3;
    do
    {
      sub_10025B840((uint64_t **)a1, v4, a2, (long long *)a2);
      a2 += 43;
      v6 -= 344;
    }
    while (v6);
  }
  return a1;
}

void sub_10025B828(_Unwind_Exception *a1)
{
  sub_10025B6F4(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_10025B840(uint64_t **a1, uint64_t *a2, const void **a3, long long *a4)
{
  uint64_t v6 = sub_10025A8FC(a1, a2, &v12, &v11, a3);
  long long v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    long long v8 = (uint64_t **)v6;
    sub_10025B8D8((uint64_t)a1, a4, (uint64_t)v10);
    sub_100026D98(a1, (uint64_t)v12, v8, v10[0]);
    long long v7 = v10[0];
    v10[0] = 0;
    sub_10025BA40((uint64_t)v10, 0);
  }
  return v7;
}

char *sub_10025B8D8@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = (char *)operator new(0x178uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = sub_10025B944(v6 + 32, a2);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_10025B92C(_Unwind_Exception *a1)
{
  sub_10025BA40(v1, 0);
  _Unwind_Resume(a1);
}

char *sub_10025B944(char *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_100002DE4(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)__dst = v4;
  }
  *(_OWORD *)(__dst + 24) = *(long long *)((char *)a2 + 24);
  sub_10025A138((uint64_t *)__dst + 5, (uint64_t)a2 + 40);
  long long v5 = a2[4];
  *(_OWORD *)(__dst + 76) = *(long long *)((char *)a2 + 76);
  *((_OWORD *)__dst + 4) = v5;
  sub_10025A21C((uint64_t)(__dst + 96), a2 + 6);
  long long v6 = a2[9];
  *((_OWORD *)__dst + 8) = a2[8];
  *((_OWORD *)__dst + 9) = v6;
  long long v7 = a2[10];
  long long v8 = a2[11];
  long long v9 = a2[13];
  *((_OWORD *)__dst + 12) = a2[12];
  *((_OWORD *)__dst + 13) = v9;
  *((_OWORD *)__dst + 10) = v7;
  *((_OWORD *)__dst + 11) = v8;
  long long v10 = a2[14];
  long long v11 = a2[15];
  long long v12 = a2[17];
  *((_OWORD *)__dst + 16) = a2[16];
  *((_OWORD *)__dst + 17) = v12;
  *((_OWORD *)__dst + 14) = v10;
  *((_OWORD *)__dst + 15) = v11;
  long long v13 = a2[18];
  long long v14 = a2[19];
  long long v15 = a2[20];
  *((void *)__dst + 42) = *((void *)a2 + 42);
  *((_OWORD *)__dst + 19) = v14;
  *((_OWORD *)__dst + 20) = v15;
  *((_OWORD *)__dst + 18) = v13;
  return __dst;
}

void sub_10025BA10(_Unwind_Exception *a1)
{
  sub_10003E96C(v2, *(void **)(v1 + 48));
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(a1);
}

void sub_10025BA40(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_10025B750((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

uint64_t *sub_10025BA98(uint64_t *a1, const void ***a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  sub_10025BAF0(a1, *a2, a2 + 1);
  return a1;
}

void sub_10025BAD8(_Unwind_Exception *a1)
{
  sub_10025B6F4(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_10025BAF0(uint64_t *result, const void **a2, const void ***a3)
{
  if (a2 != (const void **)a3)
  {
    long long v4 = a2;
    long long v5 = (uint64_t **)result;
    long long v6 = result + 1;
    do
    {
      uint64_t result = sub_10025B840(v5, v6, v4 + 4, (long long *)v4 + 2);
      long long v7 = (const void **)v4[1];
      if (v7)
      {
        do
        {
          long long v8 = (const void ***)v7;
          long long v7 = (const void **)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          long long v8 = (const void ***)v4[2];
          BOOL v9 = *v8 == v4;
          long long v4 = (const void **)v8;
        }
        while (!v9);
      }
      long long v4 = (const void **)v8;
    }
    while (v8 != a3);
  }
  return result;
}

uint64_t sub_10025BB7C(uint64_t a1, const void **a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  long long v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 48 * a3;
    do
    {
      sub_10025BC00((uint64_t **)a1, v4, a2, (long long *)a2);
      a2 += 6;
      v6 -= 48;
    }
    while (v6);
  }
  return a1;
}

void sub_10025BBE8(_Unwind_Exception *a1)
{
  sub_10025B644(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_10025BC00(uint64_t **a1, uint64_t *a2, const void **a3, long long *a4)
{
  uint64_t v6 = sub_10025A8FC(a1, a2, &v12, &v11, a3);
  long long v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    long long v8 = (uint64_t **)v6;
    sub_10025BC98((uint64_t)a1, a4, (uint64_t)v10);
    sub_100026D98(a1, (uint64_t)v12, v8, v10[0]);
    long long v7 = v10[0];
    v10[0] = 0;
    sub_10025BD7C((uint64_t)v10, 0);
  }
  return v7;
}

void *sub_10025BC98@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x50uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = sub_10025BD04(v6 + 4, a2);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_10025BCEC(_Unwind_Exception *a1)
{
  sub_10025BD7C(v1, 0);
  _Unwind_Resume(a1);
}

void *sub_10025BD04(void *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_100002DE4(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)__dst = v4;
  }
  sub_10025BA98(__dst + 3, (const void ***)a2 + 3);
  return __dst;
}

void sub_10025BD60(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_10025BD7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_10025B6A0((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

uint64_t *sub_10025BDD4(uint64_t *a1, const void ***a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  sub_10025BE2C(a1, *a2, a2 + 1);
  return a1;
}

void sub_10025BE14(_Unwind_Exception *a1)
{
  sub_10025B644(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_10025BE2C(uint64_t *result, const void **a2, const void ***a3)
{
  if (a2 != (const void **)a3)
  {
    long long v4 = a2;
    uint64_t v5 = (uint64_t **)result;
    uint64_t v6 = result + 1;
    do
    {
      uint64_t result = sub_10025BC00(v5, v6, v4 + 4, (long long *)v4 + 2);
      long long v7 = (const void **)v4[1];
      if (v7)
      {
        do
        {
          long long v8 = (const void ***)v7;
          long long v7 = (const void **)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          long long v8 = (const void ***)v4[2];
          BOOL v9 = *v8 == v4;
          long long v4 = (const void **)v8;
        }
        while (!v9);
      }
      long long v4 = (const void **)v8;
    }
    while (v8 != a3);
  }
  return result;
}

uint64_t sub_10025BEB8(uint64_t a1, int *a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  long long v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 32 * a3;
    do
    {
      sub_10025BF38((uint64_t **)a1, v4, a2, (uint64_t)a2);
      a2 += 8;
      v6 -= 32;
    }
    while (v6);
  }
  return a1;
}

void sub_10025BF20(_Unwind_Exception *a1)
{
  sub_10025C0A4(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_10025BF38(uint64_t **a1, uint64_t *a2, int *a3, uint64_t a4)
{
  uint64_t v6 = (uint64_t **)sub_1002382C4(a1, a2, &v10, &v9, a3);
  uint64_t result = *v6;
  if (!*v6)
  {
    sub_10025BFBC((uint64_t)a1, a4, (uint64_t)&v8);
    sub_100026D98(a1, (uint64_t)v10, v6, v8);
    return v8;
  }
  return result;
}

uint64_t *sub_10025BFBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x40uLL);
  *(void *)(a3 + 8) = v5;
  *(void *)a3 = v6;
  *(unsigned char *)(a3 + 16) = 0;
  *((_DWORD *)v6 + 8) = *(_DWORD *)a2;
  uint64_t result = sub_10025BDD4((uint64_t *)v6 + 5, (const void ***)(a2 + 8));
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_10025C02C(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  sub_10025C048(v3, v2);
  _Unwind_Resume(a1);
}

void sub_10025C048(uint64_t a1, void **a2)
{
  if (*(unsigned char *)(a1 + 8))
  {
    sub_10025B644((uint64_t)(a2 + 5), a2[6]);
  }
  else if (!a2)
  {
    return;
  }

  operator delete(a2);
}

void sub_10025C0A4(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10025C0A4(a1, *a2);
    sub_10025C0A4(a1, a2[1]);
    sub_10025B644((uint64_t)(a2 + 5), (void *)a2[6]);
    operator delete(a2);
  }
}

void sub_10025C104(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10025C104(a1, *a2);
    sub_10025C104(a1, a2[1]);
    sub_10025B6F4((uint64_t)(a2 + 5), (void *)a2[6]);
    operator delete(a2);
  }
}

uint64_t sub_10025C164(uint64_t a1, int *a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  long long v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 32 * a3;
    do
    {
      sub_10025C1E4((uint64_t **)a1, v4, a2, (uint64_t)a2);
      a2 += 8;
      v6 -= 32;
    }
    while (v6);
  }
  return a1;
}

void sub_10025C1CC(_Unwind_Exception *a1)
{
  sub_10025C104(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_10025C1E4(uint64_t **a1, uint64_t *a2, int *a3, uint64_t a4)
{
  uint64_t v6 = (uint64_t **)sub_1002382C4(a1, a2, &v10, &v9, a3);
  uint64_t result = *v6;
  if (!*v6)
  {
    sub_10025C268((uint64_t)a1, a4, (uint64_t)&v8);
    sub_100026D98(a1, (uint64_t)v10, v6, v8);
    return v8;
  }
  return result;
}

uint64_t *sub_10025C268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x40uLL);
  *(void *)(a3 + 8) = v5;
  *(void *)a3 = v6;
  *(unsigned char *)(a3 + 16) = 0;
  *((_DWORD *)v6 + 8) = *(_DWORD *)a2;
  uint64_t result = sub_10025BA98((uint64_t *)v6 + 5, (const void ***)(a2 + 8));
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_10025C2D8(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  sub_10025C2F4(v3, v2);
  _Unwind_Resume(a1);
}

void sub_10025C2F4(uint64_t a1, void **a2)
{
  if (*(unsigned char *)(a1 + 8))
  {
    sub_10025B6F4((uint64_t)(a2 + 5), a2[6]);
  }
  else if (!a2)
  {
    return;
  }

  operator delete(a2);
}

uint64_t *sub_10025C350(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  sub_10025C3A8(a1, *(int **)a2, (int *)(a2 + 8));
  return a1;
}

void sub_10025C390(_Unwind_Exception *a1)
{
  sub_10025C104(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_10025C3A8(uint64_t *result, int *a2, int *a3)
{
  if (a2 != a3)
  {
    long long v4 = a2;
    uint64_t v5 = (uint64_t **)result;
    uint64_t v6 = result + 1;
    do
    {
      uint64_t result = sub_10025C1E4(v5, v6, v4 + 8, (uint64_t)(v4 + 8));
      long long v7 = (int *)*((void *)v4 + 1);
      if (v7)
      {
        do
        {
          long long v8 = v7;
          long long v7 = *(int **)v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          long long v8 = (int *)*((void *)v4 + 2);
          BOOL v9 = *(void *)v8 == (void)v4;
          long long v4 = v8;
        }
        while (!v9);
      }
      long long v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

uint64_t sub_10025C434(uint64_t a1, int *a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  long long v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 32 * a3;
    do
    {
      sub_10025C4B4((uint64_t **)a1, v4, a2, a2);
      a2 += 8;
      v6 -= 32;
    }
    while (v6);
  }
  return a1;
}

void sub_10025C49C(_Unwind_Exception *a1)
{
  sub_10025C620(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_10025C4B4(uint64_t **a1, uint64_t *a2, int *a3, _DWORD *a4)
{
  uint64_t v6 = (uint64_t **)sub_1002382C4(a1, a2, &v10, &v9, a3);
  uint64_t result = *v6;
  if (!*v6)
  {
    sub_10025C538((uint64_t)a1, a4, (uint64_t)&v8);
    sub_100026D98(a1, (uint64_t)v10, v6, v8);
    return v8;
  }
  return result;
}

uint64_t *sub_10025C538@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x40uLL);
  *(void *)(a3 + 8) = v5;
  *(void *)a3 = v6;
  *(unsigned char *)(a3 + 16) = 0;
  *((_DWORD *)v6 + 8) = *a2;
  uint64_t result = sub_10025C350((uint64_t *)v6 + 5, (uint64_t)(a2 + 2));
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_10025C5A8(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  sub_10025C5C4(v3, v2);
  _Unwind_Resume(a1);
}

void sub_10025C5C4(uint64_t a1, void **a2)
{
  if (*(unsigned char *)(a1 + 8))
  {
    sub_10025C104((uint64_t)(a2 + 5), a2[6]);
  }
  else if (!a2)
  {
    return;
  }

  operator delete(a2);
}

void sub_10025C620(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10025C620(a1, *a2);
    sub_10025C620(a1, a2[1]);
    sub_10025C104((uint64_t)(a2 + 5), (void *)a2[6]);
    operator delete(a2);
  }
}

void sub_10025C680(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10025C680(a1, *a2);
    sub_10025C680(a1, a2[1]);
    sub_10025C6DC((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void sub_10025C6DC(uint64_t a1)
{
  sub_10025ACF4(a1 + 24, *(void **)(a1 + 32));
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v2 = *(void **)a1;
    operator delete(v2);
  }
}

uint64_t sub_10025C730(uint64_t a1, const void **a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  long long v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 48 * a3;
    do
    {
      sub_10025C7B4((uint64_t **)a1, v4, a2, (long long *)a2);
      a2 += 6;
      v6 -= 48;
    }
    while (v6);
  }
  return a1;
}

void sub_10025C79C(_Unwind_Exception *a1)
{
  sub_10025C680(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_10025C7B4(uint64_t **a1, uint64_t *a2, const void **a3, long long *a4)
{
  uint64_t v6 = sub_10025A8FC(a1, a2, &v12, &v11, a3);
  long long v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    long long v8 = (uint64_t **)v6;
    sub_10025C84C((uint64_t)a1, a4, (uint64_t)v10);
    sub_100026D98(a1, (uint64_t)v12, v8, v10[0]);
    long long v7 = v10[0];
    v10[0] = 0;
    sub_10025C930((uint64_t)v10, 0);
  }
  return v7;
}

void *sub_10025C84C@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x50uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = sub_10025C8B8(v6 + 4, a2);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_10025C8A0(_Unwind_Exception *a1)
{
  sub_10025C930(v1, 0);
  _Unwind_Resume(a1);
}

void *sub_10025C8B8(void *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_100002DE4(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)__dst = v4;
  }
  sub_10025B044(__dst + 3, (uint64_t)a2 + 24);
  return __dst;
}

void sub_10025C914(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_10025C930(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_10025C6DC((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

uint64_t *sub_10025C988(uint64_t *a1, const void ***a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  sub_10025C9E0(a1, *a2, a2 + 1);
  return a1;
}

void sub_10025C9C8(_Unwind_Exception *a1)
{
  sub_10025C680(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_10025C9E0(uint64_t *result, const void **a2, const void ***a3)
{
  if (a2 != (const void **)a3)
  {
    long long v4 = a2;
    uint64_t v5 = (uint64_t **)result;
    uint64_t v6 = result + 1;
    do
    {
      uint64_t result = sub_10025C7B4(v5, v6, v4 + 4, (long long *)v4 + 2);
      long long v7 = (const void **)v4[1];
      if (v7)
      {
        do
        {
          long long v8 = (const void ***)v7;
          long long v7 = (const void **)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          long long v8 = (const void ***)v4[2];
          BOOL v9 = *v8 == v4;
          long long v4 = (const void **)v8;
        }
        while (!v9);
      }
      long long v4 = (const void **)v8;
    }
    while (v8 != a3);
  }
  return result;
}

uint64_t sub_10025CA6C(uint64_t a1, int *a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  long long v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 32 * a3;
    do
    {
      sub_10025CAEC((uint64_t **)a1, v4, a2, (uint64_t)a2);
      a2 += 8;
      v6 -= 32;
    }
    while (v6);
  }
  return a1;
}

void sub_10025CAD4(_Unwind_Exception *a1)
{
  sub_10025CC58(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_10025CAEC(uint64_t **a1, uint64_t *a2, int *a3, uint64_t a4)
{
  uint64_t v6 = (uint64_t **)sub_1002382C4(a1, a2, &v10, &v9, a3);
  uint64_t result = *v6;
  if (!*v6)
  {
    sub_10025CB70((uint64_t)a1, a4, (uint64_t)&v8);
    sub_100026D98(a1, (uint64_t)v10, v6, v8);
    return v8;
  }
  return result;
}

uint64_t *sub_10025CB70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x40uLL);
  *(void *)(a3 + 8) = v5;
  *(void *)a3 = v6;
  *(unsigned char *)(a3 + 16) = 0;
  *((_DWORD *)v6 + 8) = *(_DWORD *)a2;
  uint64_t result = sub_10025C988((uint64_t *)v6 + 5, (const void ***)(a2 + 8));
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_10025CBE0(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  sub_10025CBFC(v3, v2);
  _Unwind_Resume(a1);
}

void sub_10025CBFC(uint64_t a1, void **a2)
{
  if (*(unsigned char *)(a1 + 8))
  {
    sub_10025C680((uint64_t)(a2 + 5), a2[6]);
  }
  else if (!a2)
  {
    return;
  }

  operator delete(a2);
}

void sub_10025CC58(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10025CC58(a1, *a2);
    sub_10025CC58(a1, a2[1]);
    sub_10025C680((uint64_t)(a2 + 5), (void *)a2[6]);
    operator delete(a2);
  }
}

uint64_t **sub_10025CCB8(uint64_t **a1, int *a2, uint64_t a3, _DWORD **a4)
{
  long long v7 = a1 + 1;
  uint64_t v6 = a1[1];
  if (v6)
  {
    int v8 = *a2;
    while (1)
    {
      while (1)
      {
        uint64_t v9 = (uint64_t **)v6;
        int v10 = *((_DWORD *)v6 + 8);
        if (v8 >= v10) {
          break;
        }
        uint64_t v6 = *v9;
        long long v7 = v9;
        if (!*v9) {
          goto LABEL_10;
        }
      }
      if (v10 >= v8) {
        break;
      }
      uint64_t v6 = v9[1];
      if (!v6)
      {
        long long v7 = v9 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    uint64_t v9 = a1 + 1;
LABEL_10:
    uint64_t v11 = operator new(0x40uLL);
    v11[8] = **a4;
    *((void *)v11 + 7) = 0;
    *((void *)v11 + 6) = 0;
    *((void *)v11 + 5) = v11 + 12;
    sub_100026D98(a1, (uint64_t)v9, v7, (uint64_t *)v11);
    return (uint64_t **)v11;
  }
  return v9;
}

uint64_t *sub_10025CD88(uint64_t **a1, const void **a2, uint64_t a3, long long **a4)
{
  uint64_t v6 = (uint64_t **)sub_100026C8C((uint64_t)a1, &v11, a2);
  long long v7 = *v6;
  if (!*v6)
  {
    int v8 = v6;
    sub_10025CE34((uint64_t)a1, a4, (uint64_t)v10);
    sub_100026D98(a1, v11, v8, v10[0]);
    long long v7 = v10[0];
    v10[0] = 0;
    sub_10025BD7C((uint64_t)v10, 0);
  }
  return v7;
}

unsigned char *sub_10025CE34@<X0>(uint64_t a1@<X0>, long long **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x50uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = v6 + 4;
  int v8 = *a2;
  if (*((char *)*a2 + 23) < 0)
  {
    uint64_t result = sub_100002DE4(result, *(void **)v8, *((void *)v8 + 1));
  }
  else
  {
    long long v9 = *v8;
    v6[6] = *((void *)v8 + 2);
    *(_OWORD *)uint64_t result = v9;
  }
  v6[8] = 0;
  v6[9] = 0;
  v6[7] = v6 + 8;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_10025CEB4(_Unwind_Exception *a1)
{
  sub_10025BD7C(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t *sub_10025CECC(uint64_t **a1, const void **a2, uint64_t a3, long long **a4)
{
  uint64_t v6 = (uint64_t **)sub_100026C8C((uint64_t)a1, &v11, a2);
  long long v7 = *v6;
  if (!*v6)
  {
    int v8 = v6;
    sub_10025CF78((uint64_t)a1, a4, (uint64_t)v10);
    sub_100026D98(a1, v11, v8, v10[0]);
    long long v7 = v10[0];
    v10[0] = 0;
    sub_10025BA40((uint64_t)v10, 0);
  }
  return v7;
}

char *sub_10025CF78@<X0>(uint64_t a1@<X0>, long long **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = (char *)operator new(0x178uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  int v8 = *a2;
  uint64_t result = sub_10025CFF8(v6 + 32, &v8);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_10025CFE0(_Unwind_Exception *a1)
{
  sub_10025BA40(v1, 0);
  _Unwind_Resume(a1);
}

char *sub_10025CFF8(char *__dst, long long **a2)
{
  uint64_t v3 = *a2;
  if (*((char *)*a2 + 23) < 0)
  {
    sub_100002DE4(__dst, *(void **)v3, *((void *)v3 + 1));
  }
  else
  {
    long long v4 = *v3;
    *((void *)__dst + 2) = *((void *)v3 + 2);
    *(_OWORD *)__dst = v4;
  }
  *(_OWORD *)(__dst + 40) = 0u;
  *(_OWORD *)(__dst + 232) = 0u;
  *(_OWORD *)(__dst + 248) = 0u;
  *(_OWORD *)(__dst + 200) = 0u;
  *(_OWORD *)(__dst + 216) = 0u;
  *(_OWORD *)(__dst + 168) = 0u;
  *(_OWORD *)(__dst + 184) = 0u;
  *(_OWORD *)(__dst + 136) = 0u;
  *(_OWORD *)(__dst + 152) = 0u;
  *(_OWORD *)(__dst + 104) = 0u;
  *(_OWORD *)(__dst + 120) = 0u;
  *(_OWORD *)(__dst + 72) = 0u;
  *(_OWORD *)(__dst + 88) = 0u;
  *(_OWORD *)(__dst + 56) = 0u;
  *(_OWORD *)(__dst + 312) = 0u;
  *(_OWORD *)(__dst + 328) = 0u;
  *(_OWORD *)(__dst + 280) = 0u;
  *(_OWORD *)(__dst + 296) = 0u;
  *(_OWORD *)(__dst + 264) = 0u;
  *((void *)__dst + 3) = 0x300000008;
  *((void *)__dst + 4) = 0xC04E800000000000;
  unint64_t v11 = 0xC04E800000000000;
  sub_1001A02EC((uint64_t)(__dst + 40), (double *)&v11, 1);
  *((_OWORD *)__dst + 4) = xmmword_1004B7700;
  *((void *)__dst + 10) = 0x4024000000000000;
  *((_DWORD *)__dst + 22) = 45;
  __dst[96] = 0;
  __dst[120] = 0;
  *((void *)__dst + 16) = 0;
  __dst[136] = 0;
  *((_DWORD *)__dst + 35) = 1;
  __dst[144] = 1;
  *(_OWORD *)(__dst + 152) = xmmword_1004B7710;
  *(_OWORD *)(__dst + 168) = xmmword_1004B7720;
  __asm { FMOV            V0.2D, #1.0 }
  *(_OWORD *)(__dst + 184) = _Q0;
  *((void *)__dst + 25) = 0xC059000000000000;
  *((_OWORD *)__dst + 13) = xmmword_1004B7730;
  *((int32x2_t *)__dst + 28) = vdup_n_s32(0x3DCCCCCDu);
  *(_OWORD *)(__dst + 232) = xmmword_1004B7670;
  *((void *)__dst + 32) = 0;
  *((void *)__dst + 33) = 0;
  *((void *)__dst + 31) = 0x3FD999999999999ALL;
  *((_OWORD *)__dst + 17) = xmmword_1004B7680;
  *((_DWORD *)__dst + 72) = 5;
  *((void *)__dst + 37) = 0x4000000000000000;
  *((_DWORD *)__dst + 76) = 10;
  *((void *)__dst + 39) = 0x4034000000000000;
  *((_DWORD *)__dst + 80) = 3;
  *((void *)__dst + 41) = 0x3FF0000000000000;
  *((void *)__dst + 42) = 0x4008000000000000;
  return __dst;
}

void sub_10025D1BC(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_10025D1D8(uint64_t **a1, const void **a2, uint64_t a3, long long **a4)
{
  uint64_t v6 = (uint64_t **)sub_100026C8C((uint64_t)a1, &v11, a2);
  long long v7 = *v6;
  if (!*v6)
  {
    int v8 = v6;
    sub_10025D284((uint64_t)a1, a4, (uint64_t)v10);
    sub_100026D98(a1, v11, v8, v10[0]);
    long long v7 = v10[0];
    v10[0] = 0;
    sub_10025C930((uint64_t)v10, 0);
  }
  return v7;
}

unsigned char *sub_10025D284@<X0>(uint64_t a1@<X0>, long long **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x50uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = v6 + 4;
  int v8 = *a2;
  if (*((char *)*a2 + 23) < 0)
  {
    uint64_t result = sub_100002DE4(result, *(void **)v8, *((void *)v8 + 1));
  }
  else
  {
    long long v9 = *v8;
    v6[6] = *((void *)v8 + 2);
    *(_OWORD *)uint64_t result = v9;
  }
  v6[8] = 0;
  v6[9] = 0;
  v6[7] = v6 + 8;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_10025D304(_Unwind_Exception *a1)
{
  sub_10025C930(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t *sub_10025D31C(uint64_t a1, int *a2, uint64_t a3, _DWORD **a4)
{
  uint64_t v6 = (uint64_t **)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    int v7 = *a2;
    while (1)
    {
      while (1)
      {
        int v8 = (uint64_t *)v5;
        int v9 = *(_DWORD *)(v5 + 32);
        if (v7 >= v9) {
          break;
        }
        uint64_t v5 = *v8;
        uint64_t v6 = (uint64_t **)v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (v9 >= v7) {
        break;
      }
      uint64_t v5 = v8[1];
      if (!v5)
      {
        uint64_t v6 = (uint64_t **)(v8 + 1);
        goto LABEL_10;
      }
    }
  }
  else
  {
    int v8 = (uint64_t *)(a1 + 8);
LABEL_10:
    sub_10025D3E8(a1, a4, (uint64_t)v11);
    sub_100026D98((uint64_t **)a1, (uint64_t)v8, v6, v11[0]);
    int v8 = v11[0];
    v11[0] = 0;
    sub_10025AFEC((uint64_t)v11, 0);
  }
  return v8;
}

uint64_t sub_10025D3E8@<X0>(uint64_t a1@<X0>, _DWORD **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x168uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = sub_10025D454((uint64_t)v6 + 32, *a2);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_10025D43C(_Unwind_Exception *a1)
{
  sub_10025AFEC(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_10025D454(uint64_t a1, _DWORD *a2)
{
  *(_DWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 8) = 0x300000008;
  *(void *)(a1 + 16) = 0xC04E800000000000;
  unint64_t v9 = 0xC04E800000000000;
  sub_1001A02EC(a1 + 24, (double *)&v9, 1);
  *(_OWORD *)(a1 + 48) = xmmword_1004B7700;
  *(void *)(a1 + 64) = 0x4024000000000000;
  *(_DWORD *)(a1 + 72) = 45;
  *(unsigned char *)(a1 + 80) = 0;
  *(unsigned char *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(unsigned char *)(a1 + 120) = 0;
  *(_DWORD *)(a1 + 124) = 1;
  *(unsigned char *)(a1 + 128) = 1;
  *(_OWORD *)(a1 + 136) = xmmword_1004B7710;
  *(_OWORD *)(a1 + 152) = xmmword_1004B7720;
  __asm { FMOV            V0.2D, #1.0 }
  *(_OWORD *)(a1 + 168) = _Q0;
  *(void *)(a1 + 184) = 0xC059000000000000;
  *(_OWORD *)(a1 + 192) = xmmword_1004B7730;
  *(int32x2_t *)(a1 + 208) = vdup_n_s32(0x3DCCCCCDu);
  *(_OWORD *)(a1 + 216) = xmmword_1004B7670;
  *(void *)(a1 + 240) = 0;
  *(void *)(a1 + 248) = 0;
  *(void *)(a1 + 232) = 0x3FD999999999999ALL;
  *(_OWORD *)(a1 + 256) = xmmword_1004B7680;
  *(_DWORD *)(a1 + 272) = 5;
  *(void *)(a1 + 280) = 0x4000000000000000;
  *(_DWORD *)(a1 + 288) = 10;
  *(void *)(a1 + 296) = 0x4034000000000000;
  *(_DWORD *)(a1 + 304) = 3;
  *(void *)(a1 + 312) = 0x3FF0000000000000;
  *(void *)(a1 + 320) = 0x4008000000000000;
  return a1;
}

uint64_t sub_10025D608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __chkstk_darwin(a1, a2, a3);
  int v1677 = 6;
  sub_100259834((uint64_t)v1826, &v1677, (uint64_t)&xmmword_1008A6430);
  int v1676 = 7;
  sub_100259834((uint64_t)&v1827, &v1676, (uint64_t)&xmmword_1008A6430);
  int v1675 = 0;
  sub_100259834((uint64_t)v1828, &v1675, (uint64_t)&xmmword_1008A6430);
  sub_10025ADA0((uint64_t)v1678, v1826, 3);
  int v1829 = 1;
  sub_10025B044(v1830, (uint64_t)v1678);
  int v1673 = 6;
  sub_100259834((uint64_t)v1823, &v1673, (uint64_t)&xmmword_1008A6430);
  int v1672 = 7;
  sub_100259834((uint64_t)&v1824, &v1672, (uint64_t)&xmmword_1008A6430);
  int v1671 = 0;
  sub_100259834((uint64_t)v1825, &v1671, (uint64_t)&xmmword_1008A6430);
  sub_10025ADA0((uint64_t)v1674, v1823, 3);
  int v1831 = 2;
  sub_10025B044(v1832, (uint64_t)v1674);
  int v1669 = 6;
  sub_100259834((uint64_t)v1819, &v1669, (uint64_t)&xmmword_1008A6430);
  int v1668 = 4;
  sub_100259834((uint64_t)&v1820, &v1668, (uint64_t)&xmmword_1008A6430);
  int v1667 = 7;
  sub_100259834((uint64_t)&v1821, &v1667, (uint64_t)&xmmword_1008A6430);
  int v1666 = 0;
  sub_100259834((uint64_t)v1822, &v1666, (uint64_t)&xmmword_1008A6430);
  sub_10025ADA0((uint64_t)v1670, v1819, 4);
  int v1833 = 3;
  sub_10025B044(v1834, (uint64_t)v1670);
  int v1664 = 6;
  sub_100259834((uint64_t)v1815, &v1664, (uint64_t)&xmmword_1008A6430);
  int v1663 = 3;
  v1634[0] = 0x300000008;
  v1634[1] = 0xC04F000000000000;
  v1796[0] = -62.0;
  sub_1001A02EC((uint64_t)v1635, v1796, 1);
  long long v1636 = xmmword_1004B7700;
  uint64_t v1637 = 0x4024000000000000;
  int v1638 = 45;
  LOBYTE(v1639) = 0;
  char v1641 = 0;
  uint64_t v1642 = 0;
  char v1643 = 0;
  int v1644 = 1;
  char v1645 = 1;
  long long v1646 = xmmword_1004B7710;
  long long v1647 = xmmword_1004B7720;
  __asm { FMOV            V0.2D, #1.0 }
  long long v61 = _Q0;
  long long v1648 = _Q0;
  unint64_t v1649 = 0xC059000000000000;
  long long v1650 = xmmword_1004B7730;
  int32x2_t v1651 = vdup_n_s32(0x3DCCCCCDu);
  long long v1652 = xmmword_1004B7670;
  uint64_t v1654 = 0;
  uint64_t v1655 = 0;
  uint64_t v1653 = 0x3FD999999999999ALL;
  long long v1656 = xmmword_1004B7680;
  int v1657 = 5;
  uint64_t v1658 = 0x4000000000000000;
  int v1659 = 10;
  uint64_t v1660 = 0x4034000000000000;
  int v1661 = 3;
  long long v1662 = xmmword_1004B7740;
  sub_100259910((uint64_t)&v1816, &v1663, (uint64_t)v1634);
  int v1633 = 7;
  sub_100259834((uint64_t)&v1817, &v1633, (uint64_t)&xmmword_1008A6430);
  int v1632 = 0;
  v1603[0] = 0x300000008;
  v1603[1] = 0xC04F000000000000;
  v1796[0] = -62.0;
  sub_1001A02EC((uint64_t)v1604, v1796, 1);
  long long v1605 = xmmword_1004B7700;
  uint64_t v1606 = 0x4024000000000000;
  int v1607 = 45;
  LOBYTE(v1608) = 0;
  char v1610 = 0;
  uint64_t v1611 = 0;
  char v1612 = 0;
  int v1613 = 1;
  char v1614 = 1;
  long long v1615 = xmmword_1004B7710;
  long long v1616 = xmmword_1004B7720;
  long long v1617 = v61;
  unint64_t v1618 = 0xC059000000000000;
  long long v1619 = xmmword_1004B7730;
  int32x2_t v1620 = vdup_n_s32(0x3DCCCCCDu);
  long long v1621 = xmmword_1004B7670;
  uint64_t v1623 = 0;
  uint64_t v1624 = 0;
  uint64_t v1622 = 0x3FD999999999999ALL;
  long long v1625 = xmmword_1004B7680;
  int v1626 = 5;
  uint64_t v1627 = 0x4000000000000000;
  int v1628 = 10;
  uint64_t v1629 = 0x4034000000000000;
  int v1630 = 3;
  long long v1631 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1818, &v1632, (uint64_t)v1603);
  sub_10025ADA0((uint64_t)v1665, v1815, 4);
  int v1835 = 4;
  sub_10025B044(v1836, (uint64_t)v1665);
  int v1601 = 6;
  v1572[0] = 0x300000008;
  v1572[1] = 0xC04F19999999999ALL;
  v1796[0] = -62.2;
  sub_1001A02EC((uint64_t)v1573, v1796, 1);
  long long v1574 = xmmword_1004B7700;
  uint64_t v1575 = 0x4024000000000000;
  int v1576 = 45;
  LOBYTE(v1577) = 0;
  char v1579 = 0;
  uint64_t v1580 = 0;
  char v1581 = 0;
  int v1582 = 1;
  char v1583 = 1;
  long long v1584 = xmmword_1004B7710;
  long long v1585 = xmmword_1004B7720;
  long long v1586 = v61;
  unint64_t v1587 = 0xC059000000000000;
  long long v1588 = xmmword_1004B7730;
  int32x2_t v1589 = vdup_n_s32(0x3DCCCCCDu);
  long long v1590 = xmmword_1004B7670;
  uint64_t v1592 = 0;
  uint64_t v1593 = 0;
  uint64_t v1591 = 0x3FD999999999999ALL;
  long long v1594 = xmmword_1004B7680;
  int v1595 = 5;
  uint64_t v1596 = 0x4000000000000000;
  int v1597 = 10;
  uint64_t v1598 = 0x4034000000000000;
  int v1599 = 3;
  long long v1600 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1812, &v1601, (uint64_t)v1572);
  int v1571 = 7;
  sub_100259834((uint64_t)&v1813, &v1571, (uint64_t)&xmmword_1008A6430);
  int v1570 = 0;
  v1541[0] = 0x300000008;
  v1541[1] = 0xC04F19999999999ALL;
  v1796[0] = -62.2;
  sub_1001A02EC((uint64_t)v1542, v1796, 1);
  long long v1543 = xmmword_1004B7700;
  uint64_t v1544 = 0x4024000000000000;
  int v1545 = 45;
  LOBYTE(v1546) = 0;
  char v1548 = 0;
  uint64_t v1549 = 0;
  char v1550 = 0;
  int v1551 = 1;
  char v1552 = 1;
  long long v1553 = xmmword_1004B7710;
  long long v1554 = xmmword_1004B7720;
  long long v1555 = v61;
  unint64_t v1556 = 0xC059000000000000;
  long long v1557 = xmmword_1004B7730;
  int32x2_t v1558 = vdup_n_s32(0x3DCCCCCDu);
  long long v1559 = xmmword_1004B7670;
  uint64_t v1561 = 0;
  uint64_t v1562 = 0;
  uint64_t v1560 = 0x3FD999999999999ALL;
  long long v1563 = xmmword_1004B7680;
  int v1564 = 5;
  uint64_t v1565 = 0x4000000000000000;
  int v1566 = 10;
  uint64_t v1567 = 0x4034000000000000;
  int v1568 = 3;
  long long v1569 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1814, &v1570, (uint64_t)v1541);
  sub_10025ADA0((uint64_t)v1602, v1812, 3);
  int v1837 = 5;
  sub_10025B044(v1838, (uint64_t)v1602);
  int v1539 = 6;
  sub_100259834((uint64_t)v1809, &v1539, (uint64_t)&xmmword_1008A6430);
  int v1538 = 7;
  sub_100259834((uint64_t)&v1810, &v1538, (uint64_t)&xmmword_1008A6430);
  int v1537 = 0;
  sub_100259834((uint64_t)v1811, &v1537, (uint64_t)&xmmword_1008A6430);
  sub_10025ADA0((uint64_t)v1540, v1809, 3);
  int v1839 = 9;
  sub_10025B044(v1840, (uint64_t)v1540);
  int v1535 = 6;
  sub_100259834((uint64_t)v1806, &v1535, (uint64_t)&xmmword_1008A6430);
  int v1534 = 7;
  sub_100259834((uint64_t)&v1807, &v1534, (uint64_t)&xmmword_1008A6430);
  int v1533 = 0;
  sub_100259834((uint64_t)v1808, &v1533, (uint64_t)&xmmword_1008A6430);
  sub_10025ADA0((uint64_t)v1536, v1806, 3);
  int v1841 = 12;
  sub_10025B044(v1842, (uint64_t)v1536);
  int v1531 = 1;
  sub_100259834((uint64_t)v1796, &v1531, (uint64_t)&xmmword_1008A6430);
  int v1530 = 3;
  v1501[0] = 0x300000008;
  v1501[1] = 0xC050933333333333;
  v1745[0] = -66.3;
  sub_1001A02EC((uint64_t)v1502, v1745, 1);
  long long v1503 = xmmword_1004B7700;
  uint64_t v1504 = 0x4024000000000000;
  int v1505 = 45;
  LOBYTE(v1506) = 0;
  char v1508 = 0;
  uint64_t v1509 = 0;
  char v1510 = 0;
  int v1511 = 1;
  char v1512 = 1;
  long long v1513 = xmmword_1004B7710;
  long long v1514 = xmmword_1004B7720;
  long long v1515 = v61;
  unint64_t v1516 = 0xC059000000000000;
  long long v1517 = xmmword_1004B7730;
  int32x2_t v1518 = vdup_n_s32(0x3DCCCCCDu);
  long long v1519 = xmmword_1004B7670;
  uint64_t v1521 = 0;
  uint64_t v1522 = 0;
  uint64_t v1520 = 0x3FD999999999999ALL;
  long long v1523 = xmmword_1004B7680;
  int v1524 = 5;
  uint64_t v1525 = 0x4000000000000000;
  int v1526 = 10;
  uint64_t v1527 = 0x4034000000000000;
  int v1528 = 3;
  long long v1529 = xmmword_1004B7740;
  sub_100259910((uint64_t)&v1797, &v1530, (uint64_t)v1501);
  int v1500 = 2;
  v1471[0] = 0x300000008;
  v1471[1] = 0xC050B9999999999ALL;
  v1745[0] = -66.9;
  sub_1001A02EC((uint64_t)v1472, v1745, 1);
  long long v1473 = xmmword_1004B7700;
  uint64_t v1474 = 0x4024000000000000;
  int v1475 = 45;
  LOBYTE(v1476) = 0;
  char v1478 = 0;
  uint64_t v1479 = 0;
  char v1480 = 0;
  int v1481 = 1;
  char v1482 = 1;
  long long v1483 = xmmword_1004B7710;
  long long v1484 = xmmword_1004B7720;
  long long v1485 = v61;
  unint64_t v1486 = 0xC059000000000000;
  long long v1487 = xmmword_1004B7730;
  int32x2_t v1488 = vdup_n_s32(0x3DCCCCCDu);
  long long v1489 = xmmword_1004B7670;
  uint64_t v1491 = 0;
  uint64_t v1492 = 0;
  uint64_t v1490 = 0x3FD999999999999ALL;
  long long v1493 = xmmword_1004B7680;
  int v1494 = 5;
  uint64_t v1495 = 0x4000000000000000;
  int v1496 = 10;
  uint64_t v1497 = 0x4034000000000000;
  int v1498 = 3;
  long long v1499 = xmmword_1004B7740;
  sub_100259910((uint64_t)&v1798, &v1500, (uint64_t)v1471);
  int v1470 = 4;
  v1441[0] = 0x300000008;
  v1441[1] = 0xC05079999999999ALL;
  v1745[0] = -65.9;
  sub_1001A02EC((uint64_t)v1442, v1745, 1);
  long long v1443 = xmmword_1004B7700;
  uint64_t v1444 = 0x4024000000000000;
  int v1445 = 45;
  LOBYTE(v1446) = 0;
  char v1448 = 0;
  uint64_t v1449 = 0;
  char v1450 = 0;
  int v1451 = 1;
  char v1452 = 1;
  long long v1453 = xmmword_1004B7710;
  long long v1454 = xmmword_1004B7720;
  long long v1455 = v61;
  unint64_t v1456 = 0xC059000000000000;
  long long v1457 = xmmword_1004B7730;
  int32x2_t v1458 = vdup_n_s32(0x3DCCCCCDu);
  long long v1459 = xmmword_1004B7670;
  uint64_t v1461 = 0;
  uint64_t v1462 = 0;
  uint64_t v1460 = 0x3FD999999999999ALL;
  long long v1463 = xmmword_1004B7680;
  int v1464 = 5;
  uint64_t v1465 = 0x4000000000000000;
  int v1466 = 10;
  uint64_t v1467 = 0x4034000000000000;
  int v1468 = 3;
  long long v1469 = xmmword_1004B7740;
  sub_100259910((uint64_t)&v1799, &v1470, (uint64_t)v1441);
  int v1440 = 5;
  sub_100259834((uint64_t)&v1800, &v1440, (uint64_t)&xmmword_1008A6430);
  int v1439 = 9;
  v1410[0] = 0x300000008;
  v1410[1] = 0xC04F400000000000;
  v1745[0] = -62.5;
  sub_1001A02EC((uint64_t)v1411, v1745, 1);
  long long v1412 = xmmword_1004B7700;
  uint64_t v1413 = 0x4024000000000000;
  int v1414 = 45;
  LOBYTE(v1415) = 0;
  char v1417 = 0;
  uint64_t v1418 = 0;
  char v1419 = 0;
  int v1420 = 1;
  char v1421 = 1;
  long long v1422 = xmmword_1004B7710;
  long long v1423 = xmmword_1004B7720;
  long long v1424 = v61;
  unint64_t v1425 = 0xC059000000000000;
  long long v1426 = xmmword_1004B7730;
  int32x2_t v1427 = vdup_n_s32(0x3DCCCCCDu);
  long long v1428 = xmmword_1004B7670;
  uint64_t v1430 = 0;
  uint64_t v1431 = 0;
  uint64_t v1429 = 0x3FD999999999999ALL;
  long long v1432 = xmmword_1004B7680;
  int v1433 = 5;
  uint64_t v1434 = 0x4000000000000000;
  int v1435 = 10;
  uint64_t v1436 = 0x4034000000000000;
  int v1437 = 3;
  long long v1438 = xmmword_1004B7740;
  sub_100259910((uint64_t)&v1801, &v1439, (uint64_t)v1410);
  int v1409 = 12;
  sub_100259834((uint64_t)&v1802, &v1409, (uint64_t)&xmmword_1008A6430);
  int v1408 = 6;
  sub_100259834((uint64_t)&v1803, &v1408, (uint64_t)&xmmword_1008A6430);
  int v1407 = 18;
  v1378[0] = 0x200000003;
  v1378[1] = 0xC04E000000000000;
  v1745[0] = -60.0;
  sub_1001A02EC((uint64_t)v1379, v1745, 1);
  long long v1380 = xmmword_1004BC940;
  uint64_t v1381 = 0x4000000000000000;
  int v1382 = 20;
  LOBYTE(v1383) = 0;
  char v1385 = 0;
  uint64_t v1386 = 0;
  char v1387 = 0;
  int v1388 = 1;
  char v1389 = 1;
  long long v1390 = xmmword_1004B7710;
  long long v1391 = xmmword_1004B7720;
  long long v1392 = v61;
  unint64_t v1393 = 0xC059000000000000;
  long long v1394 = xmmword_1004B7730;
  int32x2_t v1395 = vdup_n_s32(0x3DCCCCCDu);
  long long v1396 = xmmword_1004B7670;
  uint64_t v1398 = 0;
  uint64_t v1399 = 0;
  uint64_t v1397 = 0x3FD999999999999ALL;
  long long v1400 = xmmword_1004B7680;
  int v1401 = 5;
  uint64_t v1402 = 0x4000000000000000;
  int v1403 = 10;
  uint64_t v1404 = 0x4034000000000000;
  int v1405 = 3;
  long long v1406 = xmmword_1004B7740;
  sub_100259910((uint64_t)&v1804, &v1407, (uint64_t)v1378);
  int v1377 = 0;
  v1348[0] = 0x300000008;
  v1348[1] = 0xC050B9999999999ALL;
  v1745[0] = -66.9;
  sub_1001A02EC((uint64_t)v1349, v1745, 1);
  long long v1350 = xmmword_1004B7700;
  uint64_t v1351 = 0x4024000000000000;
  int v1352 = 45;
  LOBYTE(v1353) = 0;
  char v1355 = 0;
  uint64_t v1356 = 0;
  char v1357 = 0;
  int v1358 = 1;
  char v1359 = 1;
  long long v1360 = xmmword_1004B7710;
  long long v1361 = xmmword_1004B7720;
  long long v1362 = v61;
  unint64_t v1363 = 0xC059000000000000;
  long long v1364 = xmmword_1004B7730;
  int32x2_t v1365 = vdup_n_s32(0x3DCCCCCDu);
  long long v1366 = xmmword_1004B7670;
  uint64_t v1368 = 0;
  uint64_t v1369 = 0;
  uint64_t v1367 = 0x3FD999999999999ALL;
  long long v1370 = xmmword_1004B7680;
  int v1371 = 5;
  uint64_t v1372 = 0x4000000000000000;
  int v1373 = 10;
  uint64_t v1374 = 0x4034000000000000;
  int v1375 = 3;
  long long v1376 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1805, &v1377, (uint64_t)v1348);
  sub_10025ADA0((uint64_t)v1532, (int *)v1796, 10);
  int v1843 = 6;
  sub_10025B044(v1844, (uint64_t)v1532);
  int v1346 = 4;
  sub_100259834((uint64_t)v1789, &v1346, (uint64_t)&xmmword_1008A6430);
  int v1345 = 1;
  sub_100259834((uint64_t)&v1790, &v1345, (uint64_t)&xmmword_1008A6430);
  int v1344 = 5;
  sub_100259834((uint64_t)&v1791, &v1344, (uint64_t)&xmmword_1008A6430);
  int v1343 = 12;
  sub_100259834((uint64_t)&v1792, &v1343, (uint64_t)&xmmword_1008A6430);
  int v1342 = 18;
  v1313[0] = 0x200000003;
  v1313[1] = 0xC04E000000000000;
  v1745[0] = -60.0;
  sub_1001A02EC((uint64_t)v1314, v1745, 1);
  long long v1315 = xmmword_1004BC940;
  uint64_t v1316 = 0x4000000000000000;
  int v1317 = 20;
  LOBYTE(v1318) = 0;
  char v1320 = 0;
  uint64_t v1321 = 0;
  char v1322 = 0;
  int v1323 = 1;
  char v1324 = 1;
  long long v1325 = xmmword_1004B7710;
  long long v1326 = xmmword_1004B7720;
  long long v1327 = v61;
  unint64_t v1328 = 0xC059000000000000;
  long long v1329 = xmmword_1004B7730;
  int32x2_t v1330 = vdup_n_s32(0x3DCCCCCDu);
  long long v1331 = xmmword_1004B7670;
  uint64_t v1333 = 0;
  uint64_t v1334 = 0;
  uint64_t v1332 = 0x3FD999999999999ALL;
  long long v1335 = xmmword_1004B7680;
  int v1336 = 5;
  uint64_t v1337 = 0x4000000000000000;
  int v1338 = 10;
  uint64_t v1339 = 0x4034000000000000;
  int v1340 = 3;
  long long v1341 = xmmword_1004B7740;
  sub_100259910((uint64_t)&v1793, &v1342, (uint64_t)v1313);
  int v1312 = 7;
  v1283[0] = 0x300000008;
  v1283[1] = 0xC050000000000000;
  v1745[0] = -64.0;
  sub_1001A02EC((uint64_t)v1284, v1745, 1);
  long long v1285 = xmmword_1004B7700;
  uint64_t v1286 = 0x4024000000000000;
  int v1287 = 45;
  LOBYTE(v1288) = 0;
  char v1290 = 0;
  uint64_t v1291 = 0;
  char v1292 = 0;
  int v1293 = 1;
  char v1294 = 1;
  long long v1295 = xmmword_1004B7710;
  long long v1296 = xmmword_1004B7720;
  long long v1297 = v61;
  unint64_t v1298 = 0xC059000000000000;
  long long v1299 = xmmword_1004B7730;
  int32x2_t v1300 = vdup_n_s32(0x3DCCCCCDu);
  long long v1301 = xmmword_1004B7670;
  uint64_t v1303 = 0;
  uint64_t v1304 = 0;
  uint64_t v1302 = 0x3FD999999999999ALL;
  long long v1305 = xmmword_1004B7680;
  int v1306 = 5;
  uint64_t v1307 = 0x4000000000000000;
  int v1308 = 10;
  uint64_t v1309 = 0x4034000000000000;
  int v1310 = 3;
  long long v1311 = xmmword_1004B7740;
  sub_100259910((uint64_t)&v1794, &v1312, (uint64_t)v1283);
  int v1282 = 0;
  sub_100259834((uint64_t)v1795, &v1282, (uint64_t)&xmmword_1008A6430);
  sub_10025ADA0((uint64_t)v1347, v1789, 7);
  int v1845 = 7;
  sub_10025B044(v1846, (uint64_t)v1347);
  int v1280 = 0;
  v1251[0] = 0x300000008;
  v1251[1] = 0xC050B9999999999ALL;
  v1745[0] = -66.9;
  sub_1001A02EC((uint64_t)v1252, v1745, 1);
  long long v1253 = xmmword_1004B7700;
  uint64_t v1254 = 0x4024000000000000;
  int v1255 = 45;
  LOBYTE(v1256) = 0;
  char v1258 = 0;
  uint64_t v1259 = 0;
  char v1260 = 0;
  int v1261 = 1;
  char v1262 = 1;
  long long v1263 = xmmword_1004B7710;
  long long v1264 = xmmword_1004B7720;
  long long v1265 = v61;
  unint64_t v1266 = 0xC059000000000000;
  long long v1267 = xmmword_1004B7730;
  int32x2_t v1268 = vdup_n_s32(0x3DCCCCCDu);
  long long v1269 = xmmword_1004B7670;
  uint64_t v1271 = 0;
  uint64_t v1272 = 0;
  uint64_t v1270 = 0x3FD999999999999ALL;
  long long v1273 = xmmword_1004B7680;
  int v1274 = 5;
  uint64_t v1275 = 0x4000000000000000;
  int v1276 = 10;
  uint64_t v1277 = 0x4034000000000000;
  int v1278 = 3;
  long long v1279 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1785, &v1280, (uint64_t)v1251);
  sub_10025ADA0((uint64_t)v1281, v1785, 1);
  int v1847 = 0;
  sub_10025B044(v1848, (uint64_t)v1281);
  sub_10025B128((uint64_t)v1679, &v1829, 10);
  int v1849 = 4;
  sub_10025B314(v1850, (uint64_t)v1679);
  int v1248 = 7;
  v1219[0] = 0x300000008;
  v1219[1] = 0xC04CC00000000000;
  v1745[0] = -57.5;
  sub_1001A02EC((uint64_t)v1220, v1745, 1);
  long long v1221 = xmmword_1004B7700;
  uint64_t v1222 = 0x4024000000000000;
  int v1223 = 45;
  LOBYTE(v1224) = 0;
  char v1226 = 0;
  uint64_t v1227 = 0;
  char v1228 = 0;
  int v1229 = 1;
  char v1230 = 1;
  long long v1231 = xmmword_1004B7710;
  long long v1232 = xmmword_1004B7720;
  long long v1233 = v61;
  unint64_t v1234 = 0xC059000000000000;
  long long v1235 = xmmword_1004B7730;
  int32x2_t v1236 = vdup_n_s32(0x3DCCCCCDu);
  long long v1237 = xmmword_1004B7670;
  uint64_t v1239 = 0;
  uint64_t v1240 = 0;
  uint64_t v1238 = 0x3FD999999999999ALL;
  long long v1241 = xmmword_1004B7680;
  int v1242 = 5;
  uint64_t v1243 = 0x4000000000000000;
  int v1244 = 10;
  uint64_t v1245 = 0x4034000000000000;
  int v1246 = 3;
  long long v1247 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1765, &v1248, (uint64_t)v1219);
  int v1218 = 0;
  sub_100259834((uint64_t)v1766, &v1218, (uint64_t)&xmmword_1008A6430);
  sub_10025ADA0((uint64_t)v1249, v1765, 2);
  int v1767 = 1;
  sub_10025B044(v1768, (uint64_t)v1249);
  int v1216 = 7;
  v1187[0] = 0x300000008;
  v1187[1] = 0xC04B800000000000;
  v1745[0] = -55.0;
  sub_1001A02EC((uint64_t)v1188, v1745, 1);
  long long v1189 = xmmword_1004B7700;
  uint64_t v1190 = 0x4024000000000000;
  int v1191 = 45;
  LOBYTE(v1192) = 0;
  char v1194 = 0;
  uint64_t v1195 = 0;
  char v1196 = 0;
  int v1197 = 1;
  char v1198 = 1;
  long long v1199 = xmmword_1004B7710;
  long long v1200 = xmmword_1004B7720;
  long long v1201 = v61;
  unint64_t v1202 = 0xC059000000000000;
  long long v1203 = xmmword_1004B7730;
  int32x2_t v1204 = vdup_n_s32(0x3DCCCCCDu);
  long long v1205 = xmmword_1004B7670;
  uint64_t v1207 = 0;
  uint64_t v1208 = 0;
  uint64_t v1206 = 0x3FD999999999999ALL;
  long long v1209 = xmmword_1004B7680;
  int v1210 = 5;
  uint64_t v1211 = 0x4000000000000000;
  int v1212 = 10;
  uint64_t v1213 = 0x4034000000000000;
  int v1214 = 3;
  long long v1215 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1763, &v1216, (uint64_t)v1187);
  int v1186 = 0;
  sub_100259834((uint64_t)v1764, &v1186, (uint64_t)&xmmword_1008A6430);
  sub_10025ADA0((uint64_t)v1217, v1763, 2);
  int v1769 = 2;
  sub_10025B044(v1770, (uint64_t)v1217);
  int v1184 = 7;
  v1155[0] = 0x300000008;
  v1155[1] = 0xC04A000000000000;
  v1745[0] = -52.0;
  sub_1001A02EC((uint64_t)v1156, v1745, 1);
  long long v1157 = xmmword_1004B7700;
  uint64_t v1158 = 0x4024000000000000;
  int v1159 = 45;
  LOBYTE(v1160) = 0;
  char v1162 = 0;
  uint64_t v1163 = 0;
  char v1164 = 0;
  int v1165 = 1;
  char v1166 = 1;
  long long v1167 = xmmword_1004B7710;
  long long v1168 = xmmword_1004B7720;
  long long v1169 = v61;
  unint64_t v1170 = 0xC059000000000000;
  long long v1171 = xmmword_1004B7730;
  int32x2_t v1172 = vdup_n_s32(0x3DCCCCCDu);
  long long v1173 = xmmword_1004B7670;
  uint64_t v1175 = 0;
  uint64_t v1176 = 0;
  uint64_t v1174 = 0x3FD999999999999ALL;
  long long v1177 = xmmword_1004B7680;
  int v1178 = 5;
  uint64_t v1179 = 0x4000000000000000;
  int v1180 = 10;
  uint64_t v1181 = 0x4034000000000000;
  int v1182 = 3;
  long long v1183 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1761, &v1184, (uint64_t)v1155);
  int v1154 = 0;
  sub_100259834((uint64_t)v1762, &v1154, (uint64_t)&xmmword_1008A6430);
  sub_10025ADA0((uint64_t)v1185, v1761, 2);
  int v1771 = 3;
  sub_10025B044(v1772, (uint64_t)v1185);
  int v1152 = 7;
  v1123[0] = 0x300000008;
  v1123[1] = 0xC04A400000000000;
  v1745[0] = -52.5;
  sub_1001A02EC((uint64_t)v1124, v1745, 1);
  long long v1125 = xmmword_1004B7700;
  uint64_t v1126 = 0x4024000000000000;
  int v1127 = 45;
  LOBYTE(v1128) = 0;
  char v1130 = 0;
  uint64_t v1131 = 0;
  char v1132 = 0;
  int v1133 = 1;
  char v1134 = 1;
  long long v1135 = xmmword_1004B7710;
  long long v1136 = xmmword_1004B7720;
  long long v1137 = v61;
  unint64_t v1138 = 0xC059000000000000;
  long long v1139 = xmmword_1004B7730;
  int32x2_t v1140 = vdup_n_s32(0x3DCCCCCDu);
  long long v1141 = xmmword_1004B7670;
  uint64_t v1143 = 0;
  uint64_t v1144 = 0;
  uint64_t v1142 = 0x3FD999999999999ALL;
  long long v1145 = xmmword_1004B7680;
  int v1146 = 5;
  uint64_t v1147 = 0x4000000000000000;
  int v1148 = 10;
  uint64_t v1149 = 0x4034000000000000;
  int v1150 = 3;
  long long v1151 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1759, &v1152, (uint64_t)v1123);
  int v1122 = 0;
  sub_100259834((uint64_t)v1760, &v1122, (uint64_t)&xmmword_1008A6430);
  sub_10025ADA0((uint64_t)v1153, v1759, 2);
  int v1773 = 4;
  sub_10025B044(v1774, (uint64_t)v1153);
  int v1120 = 7;
  v1091[0] = 0x300000008;
  v1091[1] = 0xC048A66666666666;
  v1745[0] = -49.3;
  sub_1001A02EC((uint64_t)v1092, v1745, 1);
  long long v1093 = xmmword_1004B7700;
  uint64_t v1094 = 0x4024000000000000;
  int v1095 = 45;
  LOBYTE(v1096) = 0;
  char v1098 = 0;
  uint64_t v1099 = 0;
  char v1100 = 0;
  int v1101 = 1;
  char v1102 = 1;
  long long v1103 = xmmword_1004B7710;
  long long v1104 = xmmword_1004B7720;
  long long v1105 = v61;
  unint64_t v1106 = 0xC059000000000000;
  long long v1107 = xmmword_1004B7730;
  int32x2_t v1108 = vdup_n_s32(0x3DCCCCCDu);
  long long v1109 = xmmword_1004B7670;
  uint64_t v1111 = 0;
  uint64_t v1112 = 0;
  uint64_t v1110 = 0x3FD999999999999ALL;
  long long v1113 = xmmword_1004B7680;
  int v1114 = 5;
  uint64_t v1115 = 0x4000000000000000;
  int v1116 = 10;
  uint64_t v1117 = 0x4034000000000000;
  int v1118 = 3;
  long long v1119 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1757, &v1120, (uint64_t)v1091);
  int v1090 = 0;
  sub_100259834((uint64_t)v1758, &v1090, (uint64_t)&xmmword_1008A6430);
  sub_10025ADA0((uint64_t)v1121, v1757, 2);
  int v1775 = 5;
  sub_10025B044(v1776, (uint64_t)v1121);
  int v1088 = 7;
  sub_100259834((uint64_t)v1755, &v1088, (uint64_t)&xmmword_1008A6430);
  int v1087 = 0;
  sub_100259834((uint64_t)v1756, &v1087, (uint64_t)&xmmword_1008A6430);
  sub_10025ADA0((uint64_t)v1089, v1755, 2);
  int v1777 = 12;
  sub_10025B044(v1778, (uint64_t)v1089);
  int v1085 = 4;
  v1056[0] = 0x300000008;
  v1056[1] = 0xC04A000000000000;
  v1713[0] = -52.0;
  sub_1001A02EC((uint64_t)v1057, v1713, 1);
  long long v1058 = xmmword_1004B7700;
  uint64_t v1059 = 0x4024000000000000;
  int v1060 = 45;
  LOBYTE(v1061) = 0;
  char v1063 = 0;
  uint64_t v1064 = 0;
  char v1065 = 0;
  int v1066 = 1;
  char v1067 = 1;
  long long v1068 = xmmword_1004B7710;
  long long v1069 = xmmword_1004B7720;
  long long v1070 = v61;
  unint64_t v1071 = 0xC059000000000000;
  long long v1072 = xmmword_1004B7730;
  int32x2_t v1073 = vdup_n_s32(0x3DCCCCCDu);
  long long v1074 = xmmword_1004B7670;
  uint64_t v1076 = 0;
  uint64_t v1077 = 0;
  uint64_t v1075 = 0x3FD999999999999ALL;
  long long v1078 = xmmword_1004B7680;
  int v1079 = 5;
  uint64_t v1080 = 0x4000000000000000;
  int v1081 = 10;
  uint64_t v1082 = 0x4034000000000000;
  int v1083 = 3;
  long long v1084 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1745, &v1085, (uint64_t)v1056);
  int v1055 = 1;
  v1026[0] = 0x300000008;
  v1026[1] = 0xC04B800000000000;
  v1713[0] = -55.0;
  sub_1001A02EC((uint64_t)v1027, v1713, 1);
  long long v1028 = xmmword_1004B7700;
  uint64_t v1029 = 0x4024000000000000;
  int v1030 = 45;
  LOBYTE(v1031) = 0;
  char v1033 = 0;
  uint64_t v1034 = 0;
  char v1035 = 0;
  int v1036 = 1;
  char v1037 = 1;
  long long v1038 = xmmword_1004B7710;
  long long v1039 = xmmword_1004B7720;
  long long v1040 = v61;
  unint64_t v1041 = 0xC059000000000000;
  long long v1042 = xmmword_1004B7730;
  int32x2_t v1043 = vdup_n_s32(0x3DCCCCCDu);
  long long v1044 = xmmword_1004B7670;
  uint64_t v1046 = 0;
  uint64_t v1047 = 0;
  uint64_t v1045 = 0x3FD999999999999ALL;
  long long v1048 = xmmword_1004B7680;
  int v1049 = 5;
  uint64_t v1050 = 0x4000000000000000;
  int v1051 = 10;
  uint64_t v1052 = 0x4034000000000000;
  int v1053 = 3;
  long long v1054 = xmmword_1004B7740;
  sub_100259910((uint64_t)&v1746, &v1055, (uint64_t)v1026);
  int v1025 = 2;
  v996[0] = 0x300000008;
  v996[1] = 0xC04A800000000000;
  v1713[0] = -53.0;
  sub_1001A02EC((uint64_t)v997, v1713, 1);
  long long v998 = xmmword_1004B7700;
  uint64_t v999 = 0x4024000000000000;
  int v1000 = 45;
  LOBYTE(v1001) = 0;
  char v1003 = 0;
  uint64_t v1004 = 0;
  char v1005 = 0;
  int v1006 = 1;
  char v1007 = 1;
  long long v1008 = xmmword_1004B7710;
  long long v1009 = xmmword_1004B7720;
  long long v1010 = v61;
  unint64_t v1011 = 0xC059000000000000;
  long long v1012 = xmmword_1004B7730;
  int32x2_t v1013 = vdup_n_s32(0x3DCCCCCDu);
  long long v1014 = xmmword_1004B7670;
  uint64_t v1016 = 0;
  uint64_t v1017 = 0;
  uint64_t v1015 = 0x3FD999999999999ALL;
  long long v1018 = xmmword_1004B7680;
  int v1019 = 5;
  uint64_t v1020 = 0x4000000000000000;
  int v1021 = 10;
  uint64_t v1022 = 0x4034000000000000;
  int v1023 = 3;
  long long v1024 = xmmword_1004B7740;
  sub_100259910((uint64_t)&v1747, &v1025, (uint64_t)v996);
  int v995 = 3;
  v966[0] = 0x300000008;
  v966[1] = 0xC04B800000000000;
  v1713[0] = -55.0;
  sub_1001A02EC((uint64_t)v967, v1713, 1);
  long long v968 = xmmword_1004B7700;
  uint64_t v969 = 0x4024000000000000;
  int v970 = 45;
  LOBYTE(v971) = 0;
  char v973 = 0;
  uint64_t v974 = 0;
  char v975 = 0;
  int v976 = 1;
  char v977 = 1;
  long long v978 = xmmword_1004B7710;
  long long v979 = xmmword_1004B7720;
  long long v980 = v61;
  unint64_t v981 = 0xC059000000000000;
  long long v982 = xmmword_1004B7730;
  int32x2_t v983 = vdup_n_s32(0x3DCCCCCDu);
  long long v984 = xmmword_1004B7670;
  uint64_t v986 = 0;
  uint64_t v987 = 0;
  uint64_t v985 = 0x3FD999999999999ALL;
  long long v988 = xmmword_1004B7680;
  int v989 = 5;
  uint64_t v990 = 0x4000000000000000;
  int v991 = 10;
  uint64_t v992 = 0x4034000000000000;
  int v993 = 3;
  long long v994 = xmmword_1004B7740;
  sub_100259910((uint64_t)&v1748, &v995, (uint64_t)v966);
  int v965 = 5;
  v936[0] = 0x300000008;
  v936[1] = 0xC04E000000000000;
  v1713[0] = -60.0;
  sub_1001A02EC((uint64_t)v937, v1713, 1);
  long long v938 = xmmword_1004B7700;
  uint64_t v939 = 0x4024000000000000;
  int v940 = 45;
  LOBYTE(v941) = 0;
  char v943 = 0;
  uint64_t v944 = 0;
  char v945 = 0;
  int v946 = 1;
  char v947 = 1;
  long long v948 = xmmword_1004B7710;
  long long v949 = xmmword_1004B7720;
  long long v950 = v61;
  unint64_t v951 = 0xC059000000000000;
  long long v952 = xmmword_1004B7730;
  int32x2_t v953 = vdup_n_s32(0x3DCCCCCDu);
  long long v954 = xmmword_1004B7670;
  uint64_t v956 = 0;
  uint64_t v957 = 0;
  uint64_t v955 = 0x3FD999999999999ALL;
  long long v958 = xmmword_1004B7680;
  int v959 = 5;
  uint64_t v960 = 0x4000000000000000;
  int v961 = 10;
  uint64_t v962 = 0x4034000000000000;
  int v963 = 3;
  long long v964 = xmmword_1004B7740;
  sub_100259910((uint64_t)&v1749, &v965, (uint64_t)v936);
  int v935 = 12;
  sub_100259834((uint64_t)&v1750, &v935, (uint64_t)&xmmword_1008A6430);
  int v934 = 16;
  v905[0] = 0x300000008;
  v905[1] = 0xC045000000000000;
  v1713[0] = -42.0;
  sub_1001A02EC((uint64_t)v906, v1713, 1);
  long long v907 = xmmword_1004B7700;
  uint64_t v908 = 0x4024000000000000;
  int v909 = 45;
  LOBYTE(v910) = 0;
  char v912 = 0;
  uint64_t v913 = 0;
  char v914 = 0;
  int v915 = 1;
  char v916 = 1;
  long long v917 = xmmword_1004B7710;
  long long v918 = xmmword_1004B7720;
  long long v919 = v61;
  unint64_t v920 = 0xC059000000000000;
  long long v921 = xmmword_1004B7730;
  int32x2_t v922 = vdup_n_s32(0x3DCCCCCDu);
  long long v923 = xmmword_1004B7670;
  uint64_t v925 = 0;
  uint64_t v926 = 0;
  uint64_t v924 = 0x3FD999999999999ALL;
  long long v927 = xmmword_1004B7680;
  int v928 = 5;
  uint64_t v929 = 0x4000000000000000;
  int v930 = 10;
  uint64_t v931 = 0x4034000000000000;
  int v932 = 3;
  long long v933 = xmmword_1004B7740;
  sub_100259910((uint64_t)&v1751, &v934, (uint64_t)v905);
  int v904 = 7;
  v875[0] = 0x300000008;
  v875[1] = 0xC046800000000000;
  v1713[0] = -45.0;
  sub_1001A02EC((uint64_t)v876, v1713, 1);
  long long v877 = xmmword_1004B7700;
  uint64_t v878 = 0x4024000000000000;
  int v879 = 45;
  LOBYTE(v880) = 0;
  char v882 = 0;
  uint64_t v883 = 0;
  char v884 = 0;
  int v885 = 1;
  char v886 = 1;
  long long v887 = xmmword_1004B7710;
  long long v888 = xmmword_1004B7720;
  long long v889 = v61;
  unint64_t v890 = 0xC059000000000000;
  long long v891 = xmmword_1004B7730;
  int32x2_t v892 = vdup_n_s32(0x3DCCCCCDu);
  long long v893 = xmmword_1004B7670;
  uint64_t v895 = 0;
  uint64_t v896 = 0;
  uint64_t v894 = 0x3FD999999999999ALL;
  long long v897 = xmmword_1004B7680;
  int v898 = 5;
  uint64_t v899 = 0x4000000000000000;
  int v900 = 10;
  uint64_t v901 = 0x4034000000000000;
  int v902 = 3;
  long long v903 = xmmword_1004B7740;
  sub_100259910((uint64_t)&v1752, &v904, (uint64_t)v875);
  int v874 = 6;
  v845[0] = 0x300000008;
  v845[1] = 0xC045800000000000;
  v1713[0] = -43.0;
  sub_1001A02EC((uint64_t)v846, v1713, 1);
  long long v847 = xmmword_1004B7700;
  uint64_t v848 = 0x4024000000000000;
  int v849 = 45;
  LOBYTE(v850) = 0;
  char v852 = 0;
  uint64_t v853 = 0;
  char v854 = 0;
  int v855 = 1;
  char v856 = 1;
  long long v857 = xmmword_1004B7710;
  long long v858 = xmmword_1004B7720;
  long long v859 = v61;
  unint64_t v860 = 0xC059000000000000;
  long long v861 = xmmword_1004B7730;
  int32x2_t v862 = vdup_n_s32(0x3DCCCCCDu);
  long long v863 = xmmword_1004B7670;
  uint64_t v865 = 0;
  uint64_t v866 = 0;
  uint64_t v864 = 0x3FD999999999999ALL;
  long long v867 = xmmword_1004B7680;
  int v868 = 5;
  uint64_t v869 = 0x4000000000000000;
  int v870 = 10;
  uint64_t v871 = 0x4034000000000000;
  int v872 = 3;
  long long v873 = xmmword_1004B7740;
  sub_100259910((uint64_t)&v1753, &v874, (uint64_t)v845);
  int v844 = 0;
  sub_100259834((uint64_t)v1754, &v844, (uint64_t)&xmmword_1008A6430);
  sub_10025ADA0((uint64_t)v1086, (int *)v1745, 10);
  int v1779 = 7;
  sub_10025B044(v1780, (uint64_t)v1086);
  int v842 = 6;
  v813[0] = 0x300000008;
  v813[1] = 0xC045800000000000;
  v1713[0] = -43.0;
  sub_1001A02EC((uint64_t)v814, v1713, 1);
  long long v815 = xmmword_1004B7700;
  uint64_t v816 = 0x4024000000000000;
  int v817 = 45;
  LOBYTE(v818) = 0;
  char v820 = 0;
  uint64_t v821 = 0;
  char v822 = 0;
  int v823 = 1;
  char v824 = 1;
  long long v825 = xmmword_1004B7710;
  long long v826 = xmmword_1004B7720;
  long long v827 = v61;
  unint64_t v828 = 0xC059000000000000;
  long long v829 = xmmword_1004B7730;
  int32x2_t v830 = vdup_n_s32(0x3DCCCCCDu);
  long long v831 = xmmword_1004B7670;
  uint64_t v833 = 0;
  uint64_t v834 = 0;
  uint64_t v832 = 0x3FD999999999999ALL;
  long long v835 = xmmword_1004B7680;
  int v836 = 5;
  uint64_t v837 = 0x4000000000000000;
  int v838 = 10;
  uint64_t v839 = 0x4034000000000000;
  int v840 = 3;
  long long v841 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1742, &v842, (uint64_t)v813);
  int v812 = 7;
  v783[0] = 0x300000008;
  v783[1] = 0xC045800000000000;
  v1713[0] = -43.0;
  sub_1001A02EC((uint64_t)v784, v1713, 1);
  long long v785 = xmmword_1004B7700;
  uint64_t v786 = 0x4024000000000000;
  int v787 = 45;
  LOBYTE(v788) = 0;
  char v790 = 0;
  uint64_t v791 = 0;
  char v792 = 0;
  int v793 = 1;
  char v794 = 1;
  long long v795 = xmmword_1004B7710;
  long long v796 = xmmword_1004B7720;
  long long v797 = v61;
  unint64_t v798 = 0xC059000000000000;
  long long v799 = xmmword_1004B7730;
  int32x2_t v800 = vdup_n_s32(0x3DCCCCCDu);
  long long v801 = xmmword_1004B7670;
  uint64_t v803 = 0;
  uint64_t v804 = 0;
  uint64_t v802 = 0x3FD999999999999ALL;
  long long v805 = xmmword_1004B7680;
  int v806 = 5;
  uint64_t v807 = 0x4000000000000000;
  int v808 = 10;
  uint64_t v809 = 0x4034000000000000;
  int v810 = 3;
  long long v811 = xmmword_1004B7740;
  sub_100259910((uint64_t)&v1743, &v812, (uint64_t)v783);
  int v782 = 0;
  v753[0] = 0x300000008;
  v753[1] = 0xC045800000000000;
  v1713[0] = -43.0;
  sub_1001A02EC((uint64_t)v754, v1713, 1);
  long long v755 = xmmword_1004B7700;
  uint64_t v756 = 0x4024000000000000;
  int v757 = 45;
  LOBYTE(v758) = 0;
  char v760 = 0;
  uint64_t v761 = 0;
  char v762 = 0;
  int v763 = 1;
  char v764 = 1;
  long long v765 = xmmword_1004B7710;
  long long v766 = xmmword_1004B7720;
  long long v767 = v61;
  unint64_t v768 = 0xC059000000000000;
  long long v769 = xmmword_1004B7730;
  int32x2_t v770 = vdup_n_s32(0x3DCCCCCDu);
  long long v771 = xmmword_1004B7670;
  uint64_t v773 = 0;
  uint64_t v774 = 0;
  uint64_t v772 = 0x3FD999999999999ALL;
  long long v775 = xmmword_1004B7680;
  int v776 = 5;
  uint64_t v777 = 0x4000000000000000;
  int v778 = 10;
  uint64_t v779 = 0x4034000000000000;
  int v780 = 3;
  long long v781 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1744, &v782, (uint64_t)v753);
  sub_10025ADA0((uint64_t)v843, v1742, 3);
  int v1781 = 6;
  sub_10025B044(v1782, (uint64_t)v843);
  int v751 = 0;
  sub_100259834((uint64_t)v1738, &v751, (uint64_t)&xmmword_1008A6430);
  sub_10025ADA0((uint64_t)v752, v1738, 1);
  int v1783 = 0;
  sub_10025B044(v1784, (uint64_t)v752);
  sub_10025B128((uint64_t)v1250, &v1767, 9);
  int v1851 = 3;
  sub_10025B314(v1852, (uint64_t)v1250);
  int v748 = 0;
  v719[0] = 0x300000008;
  v719[1] = 0xC050C00000000000;
  v1713[0] = -67.0;
  sub_1001A02EC((uint64_t)v720, v1713, 1);
  long long v721 = xmmword_1004B7700;
  uint64_t v722 = 0x4024000000000000;
  int v723 = 45;
  LOBYTE(v724) = 0;
  char v726 = 0;
  uint64_t v727 = 0;
  char v728 = 0;
  int v729 = 1;
  char v730 = 1;
  long long v731 = xmmword_1004B7710;
  long long v732 = xmmword_1004B7720;
  long long v733 = v61;
  unint64_t v734 = 0xC059000000000000;
  long long v735 = xmmword_1004B7730;
  int32x2_t v736 = vdup_n_s32(0x3DCCCCCDu);
  long long v737 = xmmword_1004B7670;
  uint64_t v739 = 0;
  uint64_t v740 = 0;
  uint64_t v738 = 0x3FD999999999999ALL;
  long long v741 = xmmword_1004B7680;
  int v742 = 5;
  uint64_t v743 = 0x4000000000000000;
  int v744 = 10;
  uint64_t v745 = 0x4034000000000000;
  int v746 = 3;
  long long v747 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1731, &v748, (uint64_t)v719);
  int v718 = 16;
  v689[0] = 0x200000003;
  v689[1] = 0xC052000000000000;
  v1713[0] = -72.0;
  sub_1001A02EC((uint64_t)v690, v1713, 1);
  long long v691 = xmmword_1004BC940;
  uint64_t v692 = 0x4000000000000000;
  int v693 = 20;
  LOBYTE(v694) = 0;
  char v696 = 0;
  uint64_t v697 = 0;
  char v698 = 0;
  int v699 = 1;
  char v700 = 1;
  long long v701 = xmmword_1004B7710;
  long long v702 = xmmword_1004B7720;
  long long v703 = v61;
  unint64_t v704 = 0xC059000000000000;
  long long v705 = xmmword_1004B7730;
  int32x2_t v706 = vdup_n_s32(0x3DCCCCCDu);
  long long v707 = xmmword_1004B7670;
  uint64_t v709 = 0;
  uint64_t v710 = 0;
  uint64_t v708 = 0x3FD999999999999ALL;
  long long v711 = xmmword_1004B7680;
  int v712 = 5;
  uint64_t v713 = 0x4000000000000000;
  int v714 = 10;
  uint64_t v715 = 0x4034000000000000;
  int v716 = 3;
  long long v717 = xmmword_1004B7740;
  sub_100259910((uint64_t)&v1732, &v718, (uint64_t)v689);
  int v688 = 18;
  v659[0] = 0x200000003;
  v659[1] = 0xC052000000000000;
  v1713[0] = -72.0;
  sub_1001A02EC((uint64_t)v660, v1713, 1);
  long long v661 = xmmword_1004BC940;
  uint64_t v662 = 0x4000000000000000;
  int v663 = 20;
  LOBYTE(v664) = 0;
  char v666 = 0;
  uint64_t v667 = 0;
  char v668 = 0;
  int v669 = 1;
  char v670 = 1;
  long long v671 = xmmword_1004B7710;
  long long v672 = xmmword_1004B7720;
  long long v673 = v61;
  unint64_t v674 = 0xC059000000000000;
  long long v675 = xmmword_1004B7730;
  int32x2_t v676 = vdup_n_s32(0x3DCCCCCDu);
  long long v677 = xmmword_1004B7670;
  uint64_t v679 = 0;
  uint64_t v680 = 0;
  uint64_t v678 = 0x3FD999999999999ALL;
  long long v681 = xmmword_1004B7680;
  int v682 = 5;
  uint64_t v683 = 0x4000000000000000;
  int v684 = 10;
  uint64_t v685 = 0x4034000000000000;
  int v686 = 3;
  long long v687 = xmmword_1004B7740;
  sub_100259910((uint64_t)&v1733, &v688, (uint64_t)v659);
  sub_10025ADA0((uint64_t)v749, v1731, 3);
  int v1734 = 7;
  sub_10025B044(v1735, (uint64_t)v749);
  int v657 = 0;
  v628[0] = 0x300000008;
  v628[1] = 0xC050C00000000000;
  v1713[0] = -67.0;
  sub_1001A02EC((uint64_t)v629, v1713, 1);
  long long v630 = xmmword_1004B7700;
  uint64_t v631 = 0x4024000000000000;
  int v632 = 45;
  LOBYTE(v633) = 0;
  char v635 = 0;
  uint64_t v636 = 0;
  char v637 = 0;
  int v638 = 1;
  char v639 = 1;
  long long v640 = xmmword_1004B7710;
  long long v641 = xmmword_1004B7720;
  long long v642 = v61;
  unint64_t v643 = 0xC059000000000000;
  long long v644 = xmmword_1004B7730;
  int32x2_t v645 = vdup_n_s32(0x3DCCCCCDu);
  long long v646 = xmmword_1004B7670;
  uint64_t v648 = 0;
  uint64_t v649 = 0;
  uint64_t v647 = 0x3FD999999999999ALL;
  long long v650 = xmmword_1004B7680;
  int v651 = 5;
  uint64_t v652 = 0x4000000000000000;
  int v653 = 10;
  uint64_t v654 = 0x4034000000000000;
  int v655 = 3;
  long long v656 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1729, &v657, (uint64_t)v628);
  int v627 = 18;
  v598[0] = 0x200000003;
  v598[1] = 0xC051000000000000;
  v1713[0] = -68.0;
  sub_1001A02EC((uint64_t)v599, v1713, 1);
  long long v600 = xmmword_1004BC940;
  uint64_t v601 = 0x4000000000000000;
  int v602 = 20;
  LOBYTE(v603) = 0;
  char v605 = 0;
  uint64_t v606 = 0;
  char v607 = 0;
  int v608 = 1;
  char v609 = 1;
  long long v610 = xmmword_1004B7710;
  long long v611 = xmmword_1004B7720;
  long long v612 = v61;
  unint64_t v613 = 0xC059000000000000;
  long long v614 = xmmword_1004B7730;
  int32x2_t v615 = vdup_n_s32(0x3DCCCCCDu);
  long long v616 = xmmword_1004B7670;
  uint64_t v618 = 0;
  uint64_t v619 = 0;
  uint64_t v617 = 0x3FD999999999999ALL;
  long long v620 = xmmword_1004B7680;
  int v621 = 5;
  uint64_t v622 = 0x4000000000000000;
  int v623 = 10;
  uint64_t v624 = 0x4034000000000000;
  int v625 = 3;
  long long v626 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1730, &v627, (uint64_t)v598);
  sub_10025ADA0((uint64_t)v658, v1729, 2);
  int v1736 = 6;
  sub_10025B044(v1737, (uint64_t)v658);
  sub_10025B128((uint64_t)v750, &v1734, 2);
  int v1853 = 5;
  sub_10025B314(v1854, (uint64_t)v750);
  int v595 = 13;
  sub_100259834((uint64_t)v1713, &v595, (uint64_t)&qword_1008A66B0);
  int v594 = 7;
  sub_100259834((uint64_t)&v1714, &v594, (uint64_t)&qword_1008A6570);
  int v593 = 11;
  sub_100259834((uint64_t)&v1715, &v593, (uint64_t)&qword_1008A66B0);
  int v592 = 14;
  v563[0] = 0x300000010;
  v563[1] = 0xC043800000000000;
  v1705[0] = -39.0;
  sub_1001A02EC((uint64_t)v564, v1705, 1);
  long long v565 = xmmword_1004B7700;
  uint64_t v566 = 0x4024000000000000;
  int v567 = 45;
  LOBYTE(v568) = 0;
  char v570 = 0;
  uint64_t v571 = 0;
  char v572 = 0;
  int v573 = 1;
  char v574 = 1;
  long long v575 = xmmword_1004B7710;
  long long v576 = xmmword_1004B7720;
  long long v577 = v61;
  unint64_t v578 = 0xC059000000000000;
  long long v579 = xmmword_1004B7730;
  int32x2_t v580 = vdup_n_s32(0x3DCCCCCDu);
  long long v581 = xmmword_1004B7670;
  uint64_t v583 = 0;
  uint64_t v584 = 0;
  uint64_t v582 = 0x3FD999999999999ALL;
  long long v585 = xmmword_1004B7680;
  int v586 = 5;
  uint64_t v587 = 0x4000000000000000;
  int v588 = 10;
  uint64_t v589 = 0x4034000000000000;
  int v590 = 3;
  long long v591 = xmmword_1004B7740;
  sub_100259910((uint64_t)&v1716, &v592, (uint64_t)v563);
  int v562 = 6;
  v533[0] = 0x300000008;
  v533[1] = 0xC044000000000000;
  v1705[0] = -40.0;
  sub_1001A02EC((uint64_t)v534, v1705, 1);
  long long v535 = xmmword_1004B7700;
  uint64_t v536 = 0x4024000000000000;
  int v537 = 45;
  LOBYTE(v538) = 0;
  char v540 = 0;
  uint64_t v541 = 0;
  char v542 = 0;
  int v543 = 1;
  char v544 = 1;
  long long v545 = xmmword_1004B7710;
  long long v546 = xmmword_1004B7720;
  long long v547 = v61;
  unint64_t v548 = 0xC059000000000000;
  long long v549 = xmmword_1004B7730;
  int32x2_t v550 = vdup_n_s32(0x3DCCCCCDu);
  long long v551 = xmmword_1004B7670;
  uint64_t v553 = 0;
  uint64_t v554 = 0;
  uint64_t v552 = 0x3FD999999999999ALL;
  long long v555 = xmmword_1004B7680;
  int v556 = 5;
  uint64_t v557 = 0x4000000000000000;
  int v558 = 10;
  uint64_t v559 = 0x4034000000000000;
  int v560 = 3;
  long long v561 = xmmword_1004B7740;
  sub_100259910((uint64_t)&v1717, &v562, (uint64_t)v533);
  int v532 = 15;
  v503[0] = 0x300000010;
  v503[1] = 0xC044000000000000;
  v1705[0] = -40.0;
  sub_1001A02EC((uint64_t)v504, v1705, 1);
  long long v505 = xmmword_1004B7700;
  uint64_t v506 = 0x4024000000000000;
  int v507 = 45;
  LOBYTE(v508) = 0;
  char v510 = 0;
  uint64_t v511 = 0;
  char v512 = 0;
  int v513 = 1;
  char v514 = 1;
  long long v515 = xmmword_1004B7710;
  long long v516 = xmmword_1004B7720;
  long long v517 = v61;
  unint64_t v518 = 0xC059000000000000;
  long long v519 = xmmword_1004B7730;
  int32x2_t v520 = vdup_n_s32(0x3DCCCCCDu);
  long long v521 = xmmword_1004B7670;
  uint64_t v523 = 0;
  uint64_t v524 = 0;
  uint64_t v522 = 0x3FD999999999999ALL;
  long long v525 = xmmword_1004B7680;
  int v526 = 5;
  uint64_t v527 = 0x4000000000000000;
  int v528 = 10;
  uint64_t v529 = 0x4034000000000000;
  int v530 = 3;
  long long v531 = xmmword_1004B7740;
  sub_100259910((uint64_t)&v1718, &v532, (uint64_t)v503);
  int v502 = 16;
  v473[0] = 0x300000008;
  v473[1] = 0xC044000000000000;
  v1705[0] = -40.0;
  sub_1001A02EC((uint64_t)v474, v1705, 1);
  long long v475 = xmmword_1004B7700;
  uint64_t v476 = 0x4024000000000000;
  int v477 = 45;
  LOBYTE(v478) = 0;
  char v480 = 0;
  uint64_t v481 = 0;
  char v482 = 0;
  int v483 = 1;
  char v484 = 1;
  long long v485 = xmmword_1004B7710;
  long long v486 = xmmword_1004B7720;
  long long v487 = v61;
  unint64_t v488 = 0xC059000000000000;
  long long v489 = xmmword_1004B7730;
  int32x2_t v490 = vdup_n_s32(0x3DCCCCCDu);
  long long v491 = xmmword_1004B7670;
  uint64_t v493 = 0;
  uint64_t v494 = 0;
  uint64_t v492 = 0x3FD999999999999ALL;
  long long v495 = xmmword_1004B7680;
  int v496 = 5;
  uint64_t v497 = 0x4000000000000000;
  int v498 = 10;
  uint64_t v499 = 0x4034000000000000;
  int v500 = 3;
  long long v501 = xmmword_1004B7740;
  sub_100259910((uint64_t)&v1719, &v502, (uint64_t)v473);
  int v472 = 17;
  v443[0] = 0x300000010;
  v443[1] = 0xC044000000000000;
  v1705[0] = -40.0;
  sub_1001A02EC((uint64_t)v444, v1705, 1);
  long long v445 = xmmword_1004B7700;
  uint64_t v446 = 0x4024000000000000;
  int v447 = 45;
  LOBYTE(v448) = 0;
  char v450 = 0;
  uint64_t v451 = 0;
  char v452 = 0;
  int v453 = 1;
  char v454 = 1;
  long long v455 = xmmword_1004B7710;
  long long v456 = xmmword_1004B7720;
  long long v457 = v61;
  unint64_t v458 = 0xC059000000000000;
  long long v459 = xmmword_1004B7730;
  int32x2_t v460 = vdup_n_s32(0x3DCCCCCDu);
  long long v461 = xmmword_1004B7670;
  uint64_t v463 = 0;
  uint64_t v464 = 0;
  uint64_t v462 = 0x3FD999999999999ALL;
  long long v465 = xmmword_1004B7680;
  int v466 = 5;
  uint64_t v467 = 0x4000000000000000;
  int v468 = 10;
  uint64_t v469 = 0x4034000000000000;
  int v470 = 3;
  long long v471 = xmmword_1004B7740;
  sub_100259910((uint64_t)&v1720, &v472, (uint64_t)v443);
  int v442 = 18;
  v413[0] = 0x200000003;
  v413[1] = 0xC04B800000000000;
  v1705[0] = -55.0;
  sub_1001A02EC((uint64_t)v414, v1705, 1);
  long long v415 = xmmword_1004BC940;
  uint64_t v416 = 0x4000000000000000;
  int v417 = 20;
  LOBYTE(v418) = 0;
  char v420 = 0;
  uint64_t v421 = 0;
  char v422 = 0;
  int v423 = 1;
  char v424 = 1;
  long long v425 = xmmword_1004B7710;
  long long v426 = xmmword_1004B7720;
  long long v427 = v61;
  unint64_t v428 = 0xC059000000000000;
  long long v429 = xmmword_1004B7730;
  int32x2_t v430 = vdup_n_s32(0x3DCCCCCDu);
  long long v431 = xmmword_1004B7670;
  uint64_t v433 = 0;
  uint64_t v434 = 0;
  uint64_t v432 = 0x3FD999999999999ALL;
  long long v435 = xmmword_1004B7680;
  int v436 = 5;
  uint64_t v437 = 0x4000000000000000;
  int v438 = 10;
  uint64_t v439 = 0x4034000000000000;
  int v440 = 3;
  long long v441 = xmmword_1004B7740;
  sub_100259910((uint64_t)&v1721, &v442, (uint64_t)v413);
  int v412 = 0;
  sub_100259834((uint64_t)v1722, &v412, (uint64_t)&qword_1008A66B0);
  sub_10025ADA0((uint64_t)v596, (int *)v1713, 10);
  int v1723 = 7;
  sub_10025B044(v1724, (uint64_t)v596);
  int v410 = 13;
  sub_100259834((uint64_t)v1705, &v410, (uint64_t)&qword_1008A66B0);
  int v409 = 7;
  v380[0] = 0x300000008;
  v380[1] = 0xC046800000000000;
  v1692[0] = -45.0;
  sub_1001A02EC((uint64_t)v381, v1692, 1);
  long long v382 = xmmword_1004B7700;
  uint64_t v383 = 0x4024000000000000;
  int v384 = 45;
  LOBYTE(v385) = 0;
  char v387 = 0;
  uint64_t v388 = 0;
  char v389 = 0;
  int v390 = 1;
  char v391 = 1;
  long long v392 = xmmword_1004B7710;
  long long v393 = xmmword_1004B7720;
  long long v394 = v61;
  unint64_t v395 = 0xC059000000000000;
  long long v396 = xmmword_1004B7730;
  int32x2_t v397 = vdup_n_s32(0x3DCCCCCDu);
  long long v398 = xmmword_1004B7670;
  uint64_t v400 = 0;
  uint64_t v401 = 0;
  uint64_t v399 = 0x3FD999999999999ALL;
  long long v402 = xmmword_1004B7680;
  int v403 = 5;
  uint64_t v404 = 0x4000000000000000;
  int v405 = 10;
  uint64_t v406 = 0x4034000000000000;
  int v407 = 3;
  long long v408 = xmmword_1004B7740;
  sub_100259910((uint64_t)&v1706, &v409, (uint64_t)v380);
  int v379 = 11;
  sub_100259834((uint64_t)&v1707, &v379, (uint64_t)&qword_1008A66B0);
  int v378 = 14;
  v349[0] = 0x300000008;
  v349[1] = 0xC046000000000000;
  v1692[0] = -44.0;
  sub_1001A02EC((uint64_t)v350, v1692, 1);
  long long v351 = xmmword_1004B7700;
  uint64_t v352 = 0x4024000000000000;
  int v353 = 45;
  LOBYTE(v354) = 0;
  char v356 = 0;
  uint64_t v357 = 0;
  char v358 = 0;
  int v359 = 1;
  char v360 = 1;
  long long v361 = xmmword_1004B7710;
  long long v362 = xmmword_1004B7720;
  long long v363 = v61;
  unint64_t v364 = 0xC059000000000000;
  long long v365 = xmmword_1004B7730;
  int32x2_t v366 = vdup_n_s32(0x3DCCCCCDu);
  long long v367 = xmmword_1004B7670;
  uint64_t v369 = 0;
  uint64_t v370 = 0;
  uint64_t v368 = 0x3FD999999999999ALL;
  long long v371 = xmmword_1004B7680;
  int v372 = 5;
  uint64_t v373 = 0x4000000000000000;
  int v374 = 10;
  uint64_t v375 = 0x4034000000000000;
  int v376 = 3;
  long long v377 = xmmword_1004B7740;
  sub_100259910((uint64_t)&v1708, &v378, (uint64_t)v349);
  int v348 = 6;
  v319[0] = 0x300000008;
  v319[1] = 0xC044000000000000;
  v1692[0] = -40.0;
  sub_1001A02EC((uint64_t)v320, v1692, 1);
  long long v321 = xmmword_1004B7700;
  uint64_t v322 = 0x4024000000000000;
  int v323 = 45;
  LOBYTE(v324) = 0;
  char v326 = 0;
  uint64_t v327 = 0;
  char v328 = 0;
  int v329 = 1;
  char v330 = 1;
  long long v331 = xmmword_1004B7710;
  long long v332 = xmmword_1004B7720;
  long long v333 = v61;
  unint64_t v334 = 0xC059000000000000;
  long long v335 = xmmword_1004B7730;
  int32x2_t v336 = vdup_n_s32(0x3DCCCCCDu);
  long long v337 = xmmword_1004B7670;
  uint64_t v339 = 0;
  uint64_t v340 = 0;
  uint64_t v338 = 0x3FD999999999999ALL;
  long long v341 = xmmword_1004B7680;
  int v342 = 5;
  uint64_t v343 = 0x4000000000000000;
  int v344 = 10;
  uint64_t v345 = 0x4034000000000000;
  int v346 = 3;
  long long v347 = xmmword_1004B7740;
  sub_100259910((uint64_t)&v1709, &v348, (uint64_t)v319);
  int v318 = 17;
  v289[0] = 0x300000008;
  v289[1] = 0xC042800000000000;
  v1692[0] = -37.0;
  sub_1001A02EC((uint64_t)v290, v1692, 1);
  long long v291 = xmmword_1004B7700;
  uint64_t v292 = 0x4024000000000000;
  int v293 = 45;
  LOBYTE(v294) = 0;
  char v296 = 0;
  uint64_t v297 = 0;
  char v298 = 0;
  int v299 = 1;
  char v300 = 1;
  long long v301 = xmmword_1004B7710;
  long long v302 = xmmword_1004B7720;
  long long v303 = v61;
  unint64_t v304 = 0xC059000000000000;
  long long v305 = xmmword_1004B7730;
  int32x2_t v306 = vdup_n_s32(0x3DCCCCCDu);
  long long v307 = xmmword_1004B7670;
  uint64_t v309 = 0;
  uint64_t v310 = 0;
  uint64_t v308 = 0x3FD999999999999ALL;
  long long v311 = xmmword_1004B7680;
  int v312 = 5;
  uint64_t v313 = 0x4000000000000000;
  int v314 = 10;
  uint64_t v315 = 0x4034000000000000;
  int v316 = 3;
  long long v317 = xmmword_1004B7740;
  sub_100259910((uint64_t)&v1710, &v318, (uint64_t)v289);
  int v288 = 18;
  v259[0] = 0x200000003;
  v259[1] = 0xC04B000000000000;
  v1692[0] = -54.0;
  sub_1001A02EC((uint64_t)v260, v1692, 1);
  long long v261 = xmmword_1004BC940;
  uint64_t v262 = 0x4000000000000000;
  int v263 = 20;
  LOBYTE(v264) = 0;
  char v266 = 0;
  uint64_t v267 = 0;
  char v268 = 0;
  int v269 = 1;
  char v270 = 1;
  long long v271 = xmmword_1004B7710;
  long long v272 = xmmword_1004B7720;
  long long v273 = v61;
  unint64_t v274 = 0xC059000000000000;
  long long v275 = xmmword_1004B7730;
  int32x2_t v276 = vdup_n_s32(0x3DCCCCCDu);
  long long v277 = xmmword_1004B7670;
  uint64_t v279 = 0;
  uint64_t v280 = 0;
  uint64_t v278 = 0x3FD999999999999ALL;
  long long v281 = xmmword_1004B7680;
  int v282 = 5;
  uint64_t v283 = 0x4000000000000000;
  int v284 = 10;
  uint64_t v285 = 0x4034000000000000;
  int v286 = 3;
  long long v287 = xmmword_1004B7740;
  sub_100259910((uint64_t)&v1711, &v288, (uint64_t)v259);
  int v258 = 0;
  sub_100259834((uint64_t)v1712, &v258, (uint64_t)&qword_1008A66B0);
  sub_10025ADA0((uint64_t)v411, (int *)v1705, 8);
  int v1725 = 6;
  sub_10025B044(v1726, (uint64_t)v411);
  int v255 = 0;
  sub_100259834((uint64_t)v1701, &v255, (uint64_t)&qword_1008A66B0);
  sub_10025ADA0((uint64_t)v256, v1701, 1);
  int v1727 = 0;
  sub_10025B044(v1728, (uint64_t)v256);
  sub_10025B128((uint64_t)v597, &v1723, 3);
  int v1855 = 2;
  sub_10025B314(v1856, (uint64_t)v597);
  int v250 = 16;
  v221[0] = 0x300000008;
  v221[1] = 0xC03D000000000000;
  v1690[0] = -29.0;
  sub_1001A02EC((uint64_t)v222, v1690, 1);
  long long v223 = xmmword_1004B7700;
  uint64_t v224 = 0x4024000000000000;
  int v225 = 45;
  LOBYTE(v226) = 0;
  char v228 = 0;
  uint64_t v229 = 0;
  char v230 = 0;
  int v231 = 1;
  char v232 = 1;
  long long v233 = xmmword_1004B7710;
  long long v234 = xmmword_1004B7720;
  long long v235 = v61;
  unint64_t v236 = 0xC059000000000000;
  long long v237 = xmmword_1004B7730;
  int32x2_t v238 = vdup_n_s32(0x3DCCCCCDu);
  long long v239 = xmmword_1004B7670;
  uint64_t v241 = 0;
  uint64_t v242 = 0;
  uint64_t v240 = 0x3FD999999999999ALL;
  long long v243 = xmmword_1004B7680;
  int v244 = 5;
  uint64_t v245 = 0x4000000000000000;
  int v246 = 10;
  uint64_t v247 = 0x4034000000000000;
  int v248 = 3;
  long long v249 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1692, &v250, (uint64_t)v221);
  int v220 = 14;
  v191[0] = 0x300000008;
  v191[1] = 0xC03D000000000000;
  v1690[0] = -29.0;
  sub_1001A02EC((uint64_t)v192, v1690, 1);
  long long v193 = xmmword_1004B7700;
  uint64_t v194 = 0x4024000000000000;
  int v195 = 45;
  LOBYTE(v196) = 0;
  char v198 = 0;
  uint64_t v199 = 0;
  char v200 = 0;
  int v201 = 1;
  char v202 = 1;
  long long v203 = xmmword_1004B7710;
  long long v204 = xmmword_1004B7720;
  long long v205 = v61;
  unint64_t v206 = 0xC059000000000000;
  long long v207 = xmmword_1004B7730;
  int32x2_t v208 = vdup_n_s32(0x3DCCCCCDu);
  long long v209 = xmmword_1004B7670;
  uint64_t v211 = 0;
  uint64_t v212 = 0;
  uint64_t v210 = 0x3FD999999999999ALL;
  long long v213 = xmmword_1004B7680;
  int v214 = 5;
  uint64_t v215 = 0x4000000000000000;
  int v216 = 10;
  uint64_t v217 = 0x4034000000000000;
  int v218 = 3;
  long long v219 = xmmword_1004B7740;
  sub_100259910((uint64_t)&v1693, &v220, (uint64_t)v191);
  int v190 = 0;
  v161[0] = 0x300000008;
  v161[1] = 0xC03D000000000000;
  v1690[0] = -29.0;
  sub_1001A02EC((uint64_t)v162, v1690, 1);
  long long v163 = xmmword_1004B7700;
  uint64_t v164 = 0x4024000000000000;
  int v165 = 45;
  LOBYTE(v166) = 0;
  char v168 = 0;
  uint64_t v169 = 0;
  char v170 = 0;
  int v171 = 1;
  char v172 = 1;
  long long v173 = xmmword_1004B7710;
  long long v174 = xmmword_1004B7720;
  long long v175 = v61;
  unint64_t v176 = 0xC059000000000000;
  long long v177 = xmmword_1004B7730;
  int32x2_t v178 = vdup_n_s32(0x3DCCCCCDu);
  long long v179 = xmmword_1004B7670;
  uint64_t v181 = 0;
  uint64_t v182 = 0;
  uint64_t v180 = 0x3FD999999999999ALL;
  long long v183 = xmmword_1004B7680;
  int v184 = 5;
  uint64_t v185 = 0x4000000000000000;
  int v186 = 10;
  uint64_t v187 = 0x4034000000000000;
  int v188 = 3;
  long long v189 = xmmword_1004B7740;
  sub_100259910((uint64_t)&v1694, &v190, (uint64_t)v161);
  sub_10025ADA0((uint64_t)v251, (int *)v1692, 3);
  int v1695 = 7;
  sub_10025B044(v1696, (uint64_t)v251);
  int v158 = 14;
  v129[0] = 0x300000008;
  v129[1] = 0xC03D000000000000;
  v1686[0] = -29.0;
  sub_1001A02EC((uint64_t)v130, v1686, 1);
  long long v131 = xmmword_1004B7700;
  uint64_t v132 = 0x4024000000000000;
  int v133 = 45;
  LOBYTE(v134) = 0;
  char v136 = 0;
  uint64_t v137 = 0;
  char v138 = 0;
  int v139 = 1;
  char v140 = 1;
  long long v141 = xmmword_1004B7710;
  long long v142 = xmmword_1004B7720;
  long long v143 = v61;
  unint64_t v144 = 0xC059000000000000;
  long long v145 = xmmword_1004B7730;
  int32x2_t v146 = vdup_n_s32(0x3DCCCCCDu);
  long long v147 = xmmword_1004B7670;
  uint64_t v149 = 0;
  uint64_t v150 = 0;
  uint64_t v148 = 0x3FD999999999999ALL;
  long long v151 = xmmword_1004B7680;
  int v152 = 5;
  uint64_t v153 = 0x4000000000000000;
  int v154 = 10;
  uint64_t v155 = 0x4034000000000000;
  int v156 = 3;
  long long v157 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1690, &v158, (uint64_t)v129);
  int v128 = 0;
  v99[0] = 0x300000008;
  v99[1] = 0xC03D000000000000;
  v1686[0] = -29.0;
  sub_1001A02EC((uint64_t)v100, v1686, 1);
  long long v101 = xmmword_1004B7700;
  uint64_t v102 = 0x4024000000000000;
  int v103 = 45;
  LOBYTE(v104) = 0;
  char v106 = 0;
  uint64_t v107 = 0;
  char v108 = 0;
  int v109 = 1;
  char v110 = 1;
  long long v111 = xmmword_1004B7710;
  long long v112 = xmmword_1004B7720;
  long long v113 = v61;
  unint64_t v114 = 0xC059000000000000;
  long long v115 = xmmword_1004B7730;
  int32x2_t v116 = vdup_n_s32(0x3DCCCCCDu);
  long long v117 = xmmword_1004B7670;
  uint64_t v119 = 0;
  uint64_t v120 = 0;
  uint64_t v118 = 0x3FD999999999999ALL;
  long long v121 = xmmword_1004B7680;
  int v122 = 5;
  uint64_t v123 = 0x4000000000000000;
  int v124 = 10;
  uint64_t v125 = 0x4034000000000000;
  int v126 = 3;
  long long v127 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1691, &v128, (uint64_t)v99);
  sub_10025ADA0((uint64_t)v159, (int *)v1690, 2);
  int v1697 = 6;
  sub_10025B044(v1698, (uint64_t)v159);
  int v96 = 0;
  v67[0] = 0x300000008;
  v67[1] = 0xC03D000000000000;
  v1680[0] = -29.0;
  sub_1001A02EC((uint64_t)v68, v1680, 1);
  long long v69 = xmmword_1004B7700;
  uint64_t v70 = 0x4024000000000000;
  int v71 = 45;
  LOBYTE(v72) = 0;
  char v74 = 0;
  uint64_t v75 = 0;
  char v76 = 0;
  int v77 = 1;
  char v78 = 1;
  long long v79 = xmmword_1004B7710;
  long long v80 = xmmword_1004B7720;
  long long v81 = v61;
  unint64_t v82 = 0xC059000000000000;
  long long v83 = xmmword_1004B7730;
  int32x2_t v84 = vdup_n_s32(0x3DCCCCCDu);
  long long v85 = xmmword_1004B7670;
  uint64_t v87 = 0;
  uint64_t v88 = 0;
  uint64_t v86 = 0x3FD999999999999ALL;
  long long v89 = xmmword_1004B7680;
  int v90 = 5;
  uint64_t v91 = 0x4000000000000000;
  int v92 = 10;
  uint64_t v93 = 0x4034000000000000;
  int v94 = 3;
  long long v95 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1686, &v96, (uint64_t)v67);
  sub_10025ADA0((uint64_t)v97, (int *)v1686, 1);
  int v1699 = 0;
  sub_10025B044(v1700, (uint64_t)v97);
  sub_10025B128((uint64_t)v253, &v1695, 3);
  int v1857 = 7;
  sub_10025B314(v1858, (uint64_t)v253);
  int v62 = 0;
  sub_100259834((uint64_t)v1680, &v62, (uint64_t)&xmmword_1008A6430);
  sub_10025ADA0((uint64_t)v63, (int *)v1680, 1);
  int v1684 = 0;
  sub_10025B044(v1685, (uint64_t)v63);
  sub_10025B128((uint64_t)v65, &v1684, 1);
  int v1859 = 1;
  sub_10025B314(v1860, (uint64_t)v65);
  sub_10025B3F8((uint64_t)&unk_1008AC4F8, &v1849, 6);
  for (uint64_t i = 0; i != -24; i -= 4)
    sub_10025AC94((uint64_t)&v1860[i], (void *)v1860[i + 1]);
  sub_10025AC94((uint64_t)v65, v66);
  sub_10025ACF4((uint64_t)v1685, (void *)v1685[1]);
  sub_10025ACF4((uint64_t)v63, v64);
  if (v1683 && v1682 < 0) {
    operator delete(v1681[7]);
  }
  sub_10003E96C((uint64_t)v1681, v1681[1]);
  sub_10025AC94((uint64_t)v253, v254);
  for (uint64_t j = 0; j != -12; j -= 4)
    sub_10025ACF4((uint64_t)&v1700[j], (void *)v1700[j + 1]);
  sub_10025ACF4((uint64_t)v97, v98);
  if (v1689[0] && v1688 < 0) {
    operator delete(v1687[7]);
  }
  sub_10003E96C((uint64_t)v1687, v1687[1]);
  if (v74 && v73 < 0) {
    operator delete(v72);
  }
  sub_10003E96C((uint64_t)v68, v68[1]);
  sub_10025ACF4((uint64_t)v159, v160);
  uint64_t v10 = 82;
  do
  {
    uint64_t v11 = &v1690[v10];
    if (v1689[v10 * 8] && *((char *)v11 - 225) < 0) {
      operator delete(*((void **)v11 - 31));
    }
    sub_10003E96C((uint64_t)(v11 - 38), *((void **)v11 - 37));
    v10 -= 41;
  }
  while (v10 * 8);
  if (v106 && v105 < 0) {
    operator delete(v104);
  }
  sub_10003E96C((uint64_t)v100, v100[1]);
  if (v136 && v135 < 0) {
    operator delete(v134);
  }
  sub_10003E96C((uint64_t)v130, v130[1]);
  sub_10025ACF4((uint64_t)v251, v252);
  uint64_t v12 = 123;
  do
  {
    long long v13 = &v1692[v12];
    if (v1691[v12 * 8 + 104] && *((char *)v13 - 225) < 0) {
      operator delete(*((void **)v13 - 31));
    }
    sub_10003E96C((uint64_t)(v13 - 38), *((void **)v13 - 37));
    v12 -= 41;
  }
  while (v12 * 8);
  if (v168 && v167 < 0) {
    operator delete(v166);
  }
  sub_10003E96C((uint64_t)v162, v162[1]);
  if (v198 && v197 < 0) {
    operator delete(v196);
  }
  sub_10003E96C((uint64_t)v192, v192[1]);
  if (v228 && v227 < 0) {
    operator delete(v226);
  }
  sub_10003E96C((uint64_t)v222, v222[1]);
  sub_10025AC94((uint64_t)v597, v597[1]);
  for (uint64_t k = 0; k != -12; k -= 4)
    sub_10025ACF4((uint64_t)&v1728[k], (void *)v1728[k + 1]);
  sub_10025ACF4((uint64_t)v256, v257);
  if (v1704[0] && v1703 < 0) {
    operator delete(v1702[7]);
  }
  sub_10003E96C((uint64_t)v1702, v1702[1]);
  sub_10025ACF4((uint64_t)v411, v411[1]);
  uint64_t v15 = 328;
  do
  {
    uint64_t v16 = &v1705[v15];
    if (v1704[v15 * 8] && *((char *)v16 - 225) < 0) {
      operator delete(*((void **)v16 - 31));
    }
    sub_10003E96C((uint64_t)(v16 - 38), *((void **)v16 - 37));
    v15 -= 41;
  }
  while (v15 * 8);
  if (v266 && v265 < 0) {
    operator delete(v264);
  }
  sub_10003E96C((uint64_t)v260, v260[1]);
  if (v296 && v295 < 0) {
    operator delete(v294);
  }
  sub_10003E96C((uint64_t)v290, v290[1]);
  if (v326 && v325 < 0) {
    operator delete(v324);
  }
  sub_10003E96C((uint64_t)v320, v320[1]);
  if (v356 && v355 < 0) {
    operator delete(v354);
  }
  sub_10003E96C((uint64_t)v350, v350[1]);
  if (v387 && v386 < 0) {
    operator delete(v385);
  }
  sub_10003E96C((uint64_t)v381, v381[1]);
  sub_10025ACF4((uint64_t)v596, v596[1]);
  uint64_t v17 = 410;
  do
  {
    unsigned int v18 = &v1713[v17];
    if (v1712[v17 * 8 + 104] && *((char *)v18 - 225) < 0) {
      operator delete(*((void **)v18 - 31));
    }
    sub_10003E96C((uint64_t)(v18 - 38), *((void **)v18 - 37));
    v17 -= 41;
  }
  while (v17 * 8);
  if (v420 && v419 < 0) {
    operator delete(v418);
  }
  sub_10003E96C((uint64_t)v414, v414[1]);
  if (v450 && v449 < 0) {
    operator delete(v448);
  }
  sub_10003E96C((uint64_t)v444, v444[1]);
  if (v480 && v479 < 0) {
    operator delete(v478);
  }
  sub_10003E96C((uint64_t)v474, v474[1]);
  if (v510 && v509 < 0) {
    operator delete(v508);
  }
  sub_10003E96C((uint64_t)v504, v504[1]);
  if (v540 && v539 < 0) {
    operator delete(v538);
  }
  sub_10003E96C((uint64_t)v534, v534[1]);
  if (v570 && v569 < 0) {
    operator delete(v568);
  }
  sub_10003E96C((uint64_t)v564, v564[1]);
  sub_10025AC94((uint64_t)v750, v750[1]);
  for (uint64_t m = 0; m != -8; m -= 4)
    sub_10025ACF4((uint64_t)&v1737[m], (void *)v1737[m + 1]);
  sub_10025ACF4((uint64_t)v658, v658[1]);
  uint64_t v20 = 164;
  do
  {
    int v21 = &v1729[v20];
    if (v1722[v20 * 4 + 200] && *((char *)v21 - 225) < 0) {
      operator delete(*((void **)v21 - 31));
    }
    sub_10003E96C((uint64_t)(v21 - 76), *((void **)v21 - 37));
    v20 -= 82;
  }
  while (v20 * 4);
  if (v605 && v604 < 0) {
    operator delete(v603);
  }
  sub_10003E96C((uint64_t)v599, v599[1]);
  if (v635 && v634 < 0) {
    operator delete(v633);
  }
  sub_10003E96C((uint64_t)v629, v629[1]);
  sub_10025ACF4((uint64_t)v749, v749[1]);
  uint64_t v22 = 246;
  do
  {
    int v23 = &v1731[v22];
    if (v1730[v22 * 4 + 104] && *((char *)v23 - 225) < 0) {
      operator delete(*((void **)v23 - 31));
    }
    sub_10003E96C((uint64_t)(v23 - 76), *((void **)v23 - 37));
    v22 -= 82;
  }
  while (v22 * 4);
  if (v666 && v665 < 0) {
    operator delete(v664);
  }
  sub_10003E96C((uint64_t)v660, v660[1]);
  if (v696 && v695 < 0) {
    operator delete(v694);
  }
  sub_10003E96C((uint64_t)v690, v690[1]);
  if (v726 && v725 < 0) {
    operator delete(v724);
  }
  sub_10003E96C((uint64_t)v720, v720[1]);
  sub_10025AC94((uint64_t)v1250, v1250[1]);
  uint64_t v24 = 288;
  do
  {
    sub_10025ACF4((uint64_t)&v1766[v24 + 304], *(void **)&v1766[v24 + 312]);
    v24 -= 32;
  }
  while (v24);
  sub_10025ACF4((uint64_t)v752, v752[1]);
  if (v1741[0] && v1740 < 0) {
    operator delete(v1739[7]);
  }
  sub_10003E96C((uint64_t)v1739, v1739[1]);
  sub_10025ACF4((uint64_t)v843, v843[1]);
  uint64_t v25 = 246;
  do
  {
    int64_t v26 = &v1742[v25];
    if (v1741[v25 * 4] && *((char *)v26 - 225) < 0) {
      operator delete(*((void **)v26 - 31));
    }
    sub_10003E96C((uint64_t)(v26 - 76), *((void **)v26 - 37));
    v25 -= 82;
  }
  while (v25 * 4);
  if (v760 && v759 < 0) {
    operator delete(v758);
  }
  sub_10003E96C((uint64_t)v754, v754[1]);
  if (v790 && v789 < 0) {
    operator delete(v788);
  }
  sub_10003E96C((uint64_t)v784, v784[1]);
  if (v820 && v819 < 0) {
    operator delete(v818);
  }
  sub_10003E96C((uint64_t)v814, v814[1]);
  sub_10025ACF4((uint64_t)v1086, v1086[1]);
  uint64_t v27 = 410;
  do
  {
    uint64_t v28 = &v1745[v27];
    if (v1744[v27 * 8 + 104] && *((char *)v28 - 225) < 0) {
      operator delete(*((void **)v28 - 31));
    }
    sub_10003E96C((uint64_t)(v28 - 38), *((void **)v28 - 37));
    v27 -= 41;
  }
  while (v27 * 8);
  if (v852 && v851 < 0) {
    operator delete(v850);
  }
  sub_10003E96C((uint64_t)v846, v846[1]);
  if (v882 && v881 < 0) {
    operator delete(v880);
  }
  sub_10003E96C((uint64_t)v876, v876[1]);
  if (v912 && v911 < 0) {
    operator delete(v910);
  }
  sub_10003E96C((uint64_t)v906, v906[1]);
  if (v943 && v942 < 0) {
    operator delete(v941);
  }
  sub_10003E96C((uint64_t)v937, v937[1]);
  if (v973 && v972 < 0) {
    operator delete(v971);
  }
  sub_10003E96C((uint64_t)v967, v967[1]);
  if (v1003 && v1002 < 0) {
    operator delete(v1001);
  }
  sub_10003E96C((uint64_t)v997, v997[1]);
  if (v1033 && v1032 < 0) {
    operator delete(v1031);
  }
  sub_10003E96C((uint64_t)v1027, v1027[1]);
  if (v1063 && v1062 < 0) {
    operator delete(v1061);
  }
  sub_10003E96C((uint64_t)v1057, v1057[1]);
  sub_10025ACF4((uint64_t)v1089, v1089[1]);
  uint64_t v29 = 164;
  do
  {
    int v30 = &v1755[v29];
    if (v1754[v29 * 4 + 104] && *((char *)v30 - 225) < 0) {
      operator delete(*((void **)v30 - 31));
    }
    sub_10003E96C((uint64_t)(v30 - 76), *((void **)v30 - 37));
    v29 -= 82;
  }
  while (v29 * 4);
  sub_10025ACF4((uint64_t)v1121, v1121[1]);
  uint64_t v31 = 164;
  do
  {
    int64_t v32 = &v1757[v31];
    if (v1756[v31 * 4 + 104] && *((char *)v32 - 225) < 0) {
      operator delete(*((void **)v32 - 31));
    }
    sub_10003E96C((uint64_t)(v32 - 76), *((void **)v32 - 37));
    v31 -= 82;
  }
  while (v31 * 4);
  if (v1098 && v1097 < 0) {
    operator delete(v1096);
  }
  sub_10003E96C((uint64_t)v1092, v1092[1]);
  sub_10025ACF4((uint64_t)v1153, v1153[1]);
  uint64_t v33 = 164;
  do
  {
    long long v34 = &v1759[v33];
    if (v1758[v33 * 4 + 104] && *((char *)v34 - 225) < 0) {
      operator delete(*((void **)v34 - 31));
    }
    sub_10003E96C((uint64_t)(v34 - 76), *((void **)v34 - 37));
    v33 -= 82;
  }
  while (v33 * 4);
  if (v1130 && v1129 < 0) {
    operator delete(v1128);
  }
  sub_10003E96C((uint64_t)v1124, v1124[1]);
  sub_10025ACF4((uint64_t)v1185, v1185[1]);
  uint64_t v35 = 164;
  do
  {
    long long v36 = &v1761[v35];
    if (v1760[v35 * 4 + 104] && *((char *)v36 - 225) < 0) {
      operator delete(*((void **)v36 - 31));
    }
    sub_10003E96C((uint64_t)(v36 - 76), *((void **)v36 - 37));
    v35 -= 82;
  }
  while (v35 * 4);
  if (v1162 && v1161 < 0) {
    operator delete(v1160);
  }
  sub_10003E96C((uint64_t)v1156, v1156[1]);
  sub_10025ACF4((uint64_t)v1217, v1217[1]);
  uint64_t v37 = 164;
  do
  {
    long long v38 = &v1763[v37];
    if (v1762[v37 * 4 + 104] && *((char *)v38 - 225) < 0) {
      operator delete(*((void **)v38 - 31));
    }
    sub_10003E96C((uint64_t)(v38 - 76), *((void **)v38 - 37));
    v37 -= 82;
  }
  while (v37 * 4);
  if (v1194 && v1193 < 0) {
    operator delete(v1192);
  }
  sub_10003E96C((uint64_t)v1188, v1188[1]);
  sub_10025ACF4((uint64_t)v1249, v1249[1]);
  uint64_t v39 = 164;
  do
  {
    long long v40 = &v1765[v39];
    if (v1764[v39 * 4 + 104] && *((char *)v40 - 225) < 0) {
      operator delete(*((void **)v40 - 31));
    }
    sub_10003E96C((uint64_t)(v40 - 76), *((void **)v40 - 37));
    v39 -= 82;
  }
  while (v39 * 4);
  if (v1226 && v1225 < 0) {
    operator delete(v1224);
  }
  sub_10003E96C((uint64_t)v1220, v1220[1]);
  sub_10025AC94((uint64_t)v1679, v1679[1]);
  uint64_t v41 = 320;
  do
  {
    sub_10025ACF4((uint64_t)&v1828[v41 + 304], *(void **)&v1828[v41 + 312]);
    v41 -= 32;
  }
  while (v41);
  sub_10025ACF4((uint64_t)v1281, v1281[1]);
  if (v1788[0] && v1787 < 0) {
    operator delete(v1786[7]);
  }
  sub_10003E96C((uint64_t)v1786, v1786[1]);
  if (v1258 && v1257 < 0) {
    operator delete(v1256);
  }
  sub_10003E96C((uint64_t)v1252, v1252[1]);
  sub_10025ACF4((uint64_t)v1347, v1347[1]);
  uint64_t v42 = 574;
  do
  {
    long long v43 = &v1789[v42];
    if (v1788[v42 * 4] && *((char *)v43 - 225) < 0) {
      operator delete(*((void **)v43 - 31));
    }
    sub_10003E96C((uint64_t)(v43 - 76), *((void **)v43 - 37));
    v42 -= 82;
  }
  while (v42 * 4);
  if (v1290 && v1289 < 0) {
    operator delete(v1288);
  }
  sub_10003E96C((uint64_t)v1284, v1284[1]);
  if (v1320 && v1319 < 0) {
    operator delete(v1318);
  }
  sub_10003E96C((uint64_t)v1314, v1314[1]);
  sub_10025ACF4((uint64_t)v1532, v1532[1]);
  uint64_t v44 = 410;
  do
  {
    long long v45 = &v1796[v44];
    if (v1795[v44 * 8 + 104] && *((char *)v45 - 225) < 0) {
      operator delete(*((void **)v45 - 31));
    }
    sub_10003E96C((uint64_t)(v45 - 38), *((void **)v45 - 37));
    v44 -= 41;
  }
  while (v44 * 8);
  if (v1355 && v1354 < 0) {
    operator delete(v1353);
  }
  sub_10003E96C((uint64_t)v1349, v1349[1]);
  if (v1385 && v1384 < 0) {
    operator delete(v1383);
  }
  sub_10003E96C((uint64_t)v1379, v1379[1]);
  if (v1417 && v1416 < 0) {
    operator delete(v1415);
  }
  sub_10003E96C((uint64_t)v1411, v1411[1]);
  if (v1448 && v1447 < 0) {
    operator delete(v1446);
  }
  sub_10003E96C((uint64_t)v1442, v1442[1]);
  if (v1478 && v1477 < 0) {
    operator delete(v1476);
  }
  sub_10003E96C((uint64_t)v1472, v1472[1]);
  if (v1508 && v1507 < 0) {
    operator delete(v1506);
  }
  sub_10003E96C((uint64_t)v1502, v1502[1]);
  sub_10025ACF4((uint64_t)v1536, v1536[1]);
  uint64_t v46 = 246;
  do
  {
    uint64_t v47 = &v1806[v46];
    if (v1805[v46 * 4 + 104] && *((char *)v47 - 225) < 0) {
      operator delete(*((void **)v47 - 31));
    }
    sub_10003E96C((uint64_t)(v47 - 76), *((void **)v47 - 37));
    v46 -= 82;
  }
  while (v46 * 4);
  sub_10025ACF4((uint64_t)v1540, v1540[1]);
  uint64_t v48 = 246;
  do
  {
    long long v49 = &v1809[v48];
    if (v1808[v48 * 4 + 104] && *((char *)v49 - 225) < 0) {
      operator delete(*((void **)v49 - 31));
    }
    sub_10003E96C((uint64_t)(v49 - 76), *((void **)v49 - 37));
    v48 -= 82;
  }
  while (v48 * 4);
  sub_10025ACF4((uint64_t)v1602, v1602[1]);
  uint64_t v50 = 246;
  do
  {
    uint64_t v51 = &v1812[v50];
    if (v1811[v50 * 4 + 104] && *((char *)v51 - 225) < 0) {
      operator delete(*((void **)v51 - 31));
    }
    sub_10003E96C((uint64_t)(v51 - 76), *((void **)v51 - 37));
    v50 -= 82;
  }
  while (v50 * 4);
  if (v1548 && v1547 < 0) {
    operator delete(v1546);
  }
  sub_10003E96C((uint64_t)v1542, v1542[1]);
  if (v1579 && v1578 < 0) {
    operator delete(v1577);
  }
  sub_10003E96C((uint64_t)v1573, v1573[1]);
  sub_10025ACF4((uint64_t)v1665, v1665[1]);
  uint64_t v52 = 328;
  do
  {
    int v53 = &v1815[v52];
    if (v1814[v52 * 4 + 104] && *((char *)v53 - 225) < 0) {
      operator delete(*((void **)v53 - 31));
    }
    sub_10003E96C((uint64_t)(v53 - 76), *((void **)v53 - 37));
    v52 -= 82;
  }
  while (v52 * 4);
  if (v1610 && v1609 < 0) {
    operator delete(v1608);
  }
  sub_10003E96C((uint64_t)v1604, v1604[1]);
  if (v1641 && v1640 < 0) {
    operator delete(v1639);
  }
  sub_10003E96C((uint64_t)v1635, v1635[1]);
  sub_10025ACF4((uint64_t)v1670, v1670[1]);
  uint64_t v54 = 328;
  do
  {
    uint64_t v55 = &v1819[v54];
    if (v1818[v54 * 4 + 104] && *((char *)v55 - 225) < 0) {
      operator delete(*((void **)v55 - 31));
    }
    sub_10003E96C((uint64_t)(v55 - 76), *((void **)v55 - 37));
    v54 -= 82;
  }
  while (v54 * 4);
  sub_10025ACF4((uint64_t)v1674, v1674[1]);
  uint64_t v56 = 246;
  do
  {
    uint64_t v57 = &v1823[v56];
    if (v1822[v56 * 4 + 104] && *((char *)v57 - 225) < 0) {
      operator delete(*((void **)v57 - 31));
    }
    sub_10003E96C((uint64_t)(v57 - 76), *((void **)v57 - 37));
    v56 -= 82;
  }
  while (v56 * 4);
  sub_10025ACF4((uint64_t)v1678, v1678[1]);
  uint64_t v58 = 246;
  do
  {
    v59 = &v1826[v58];
    if (v1825[v58 * 4 + 104] && *((char *)v59 - 225) < 0) {
      operator delete(*((void **)v59 - 31));
    }
    sub_10003E96C((uint64_t)(v59 - 76), *((void **)v59 - 37));
    v58 -= 82;
  }
  while (v58 * 4);
  return __cxa_atexit((void (*)(void *))sub_1002561A0, &unk_1008AC4F8, (void *)&_mh_execute_header);
}

void sub_1002636B0(unint64_t a1)
{
  uint64_t v3 = 0;
  STACK[0x230] = a1;
  do
  {
    sub_10025AC94(v2 + v3 + 168, *(void **)(v2 + v3 + 176));
    v3 -= 32;
  }
  while (v3 != -192);
  LODWORD(STACK[0x220]) = 0;
  sub_10025AC94((uint64_t)&STACK[0x260], (void *)STACK[0x268]);
  sub_10025ACF4(v1, (void *)STACK[0x4958]);
  sub_10025ACF4((uint64_t)&STACK[0x248], (void *)STACK[0x250]);
  sub_100256158((uint64_t)&STACK[0x4800]);
  sub_10025AC94((uint64_t)&STACK[0xA88], (void *)STACK[0xA90]);
  for (uint64_t i = 0; i != -96; i -= 32)
    sub_10025ACF4((uint64_t)&STACK[0x5118] + i + 72, *(void **)((char *)&STACK[0x5118] + i + 80));
  LODWORD(STACK[0x210]) = 0;
  sub_10025ACF4((uint64_t)&STACK[0x3C8], (void *)STACK[0x3D0]);
  sub_100256158((uint64_t)&STACK[0x4968]);
  sub_1002560E4((uint64_t)&STACK[0x280]);
  uint64_t v5 = &STACK[0x5158];
  sub_10025ACF4((uint64_t)&STACK[0x678], (void *)STACK[0x680]);
  for (uint64_t j = 328; j != -328; j -= 328)
    sub_100256158((uint64_t)&STACK[0x4AB0] + j);
  sub_1002560E4((uint64_t)&STACK[0x3E8]);
  sub_1002560E4((uint64_t)&STACK[0x530]);
  sub_10025ACF4((uint64_t)&STACK[0xA70], (void *)STACK[0xA78]);
  for (uint64_t k = 656; k != -328; k -= 328)
    sub_100256158((uint64_t)&STACK[0x4D40] + k);
  sub_1002560E4((uint64_t)&STACK[0x698]);
  sub_1002560E4((uint64_t)&STACK[0x7E0]);
  sub_1002560E4((uint64_t)&STACK[0x928]);
  if (LODWORD(STACK[0x210]) && &STACK[0x5118] != &STACK[0x5158])
  {
    do
    {
      sub_10025ACF4((uint64_t)(v5 - 3), (void *)*(v5 - 2));
      v5 -= 4;
    }
    while (v5 != &STACK[0x5118]);
  }
  sub_10025AC94((uint64_t)&STACK[0x1920], (void *)STACK[0x1928]);
  for (uint64_t m = 0; m != -96; m -= 32)
    sub_10025ACF4((uint64_t)&STACK[0x69D0] + m + 72, *(void **)((char *)&STACK[0x69D0] + m + 80));
  sub_10025ACF4((uint64_t)&STACK[0xAA8], (void *)STACK[0xAB0]);
  sub_100256158((uint64_t)&STACK[0x5178]);
  sub_10025ACF4((uint64_t)&STACK[0x1130], (void *)STACK[0x1138]);
  for (uint64_t n = 2296; n != -328; n -= 328)
    sub_100256158((uint64_t)&STACK[0x52C0] + n);
  sub_1002560E4((uint64_t)&STACK[0xAC8]);
  sub_1002560E4((uint64_t)&STACK[0xC10]);
  sub_1002560E4((uint64_t)&STACK[0xD58]);
  sub_1002560E4((uint64_t)&STACK[0xEA0]);
  sub_1002560E4((uint64_t)&STACK[0xFE8]);
  sub_10025ACF4((uint64_t)&STACK[0x1908], (void *)STACK[0x1910]);
  for (iuint64_t i = 2952; ii != -328; ii -= 328)
    sub_100256158((uint64_t)&STACK[0x5D00] + ii);
  sub_1002560E4((uint64_t)&STACK[0x1150]);
  sub_1002560E4((uint64_t)&STACK[0x1298]);
  sub_1002560E4((uint64_t)&STACK[0x13E0]);
  sub_1002560E4((uint64_t)&STACK[0x1528]);
  sub_1002560E4((uint64_t)&STACK[0x1670]);
  sub_1002560E4((uint64_t)&STACK[0x17B8]);
  sub_10025AC94((uint64_t)&STACK[0x1FE0], (void *)STACK[0x1FE8]);
  for (juint64_t j = 0; jj != -64; jj -= 32)
    sub_10025ACF4((uint64_t)&STACK[0x7098] + jj + 40, *(void **)((char *)&STACK[0x7098] + jj + 48));
  sub_10025ACF4((uint64_t)&STACK[0x1BD0], (void *)STACK[0x1BD8]);
  for (kuint64_t k = 328; kk != -328; kk -= 328)
    sub_100256158((uint64_t)&STACK[0x6A30] + kk);
  sub_1002560E4((uint64_t)&STACK[0x1940]);
  sub_1002560E4((uint64_t)&STACK[0x1A88]);
  sub_10025ACF4((uint64_t)&STACK[0x1FC8], (void *)STACK[0x1FD0]);
  for (muint64_t m = 656; mm != -328; mm -= 328)
    sub_100256158((uint64_t)&STACK[0x6CC0] + mm);
  sub_1002560E4((uint64_t)&STACK[0x1BF0]);
  sub_1002560E4((uint64_t)&STACK[0x1D38]);
  sub_1002560E4((uint64_t)&STACK[0x1E80]);
  sub_10025AC94((uint64_t)&STACK[0x35A0], (void *)STACK[0x35A8]);
  uint64_t v14 = 288;
  do
  {
    sub_10025ACF4((uint64_t)&STACK[0x9228] + v14 - 24, *(void **)((char *)&STACK[0x9228] + v14 - 16));
    v14 -= 32;
  }
  while (v14);
  sub_10025ACF4((uint64_t)&STACK[0x2000], (void *)STACK[0x2008]);
  sub_100256158((uint64_t)&STACK[0x70D8]);
  sub_10025ACF4((uint64_t)&STACK[0x23F8], (void *)STACK[0x2400]);
  for (nuint64_t n = 656; nn != -328; nn -= 328)
    sub_100256158((uint64_t)&STACK[0x7220] + nn);
  sub_1002560E4((uint64_t)&STACK[0x2020]);
  sub_1002560E4((uint64_t)&STACK[0x2168]);
  sub_1002560E4((uint64_t)&STACK[0x22B0]);
  sub_10025ACF4((uint64_t)&STACK[0x2E58], (void *)STACK[0x2E60]);
  for (uint64_t i1 = 2952; i1 != -328; i1 -= 328)
    sub_100256158((uint64_t)&STACK[0x75F8] + i1);
  sub_1002560E4((uint64_t)&STACK[0x2418]);
  sub_1002560E4((uint64_t)&STACK[0x2560]);
  sub_1002560E4((uint64_t)&STACK[0x26A8]);
  sub_1002560E4((uint64_t)&STACK[0x27F0]);
  sub_1002560E4((uint64_t)&STACK[0x2938]);
  sub_1002560E4((uint64_t)&STACK[0x2A80]);
  sub_1002560E4((uint64_t)&STACK[0x2BC8]);
  sub_1002560E4((uint64_t)&STACK[0x2D10]);
  sub_10025ACF4((uint64_t)&STACK[0x2E80], (void *)STACK[0x2E88]);
  for (uint64_t i2 = 328; i2 != -328; i2 -= 328)
    sub_100256158((uint64_t)&STACK[0x82C8] + i2);
  sub_10025ACF4((uint64_t)&STACK[0x2FE8], (void *)STACK[0x2FF0]);
  for (uint64_t i3 = 328; i3 != -328; i3 -= 328)
    sub_100256158((uint64_t)&STACK[0x8558] + i3);
  sub_1002560E4((uint64_t)&STACK[0x2EA0]);
  sub_10025ACF4((uint64_t)&STACK[0x3150], (void *)STACK[0x3158]);
  for (uint64_t i4 = 328; i4 != -328; i4 -= 328)
    sub_100256158((uint64_t)&STACK[0x87E8] + i4);
  sub_1002560E4((uint64_t)&STACK[0x3008]);
  sub_10025ACF4((uint64_t)&STACK[0x32B8], (void *)STACK[0x32C0]);
  for (uint64_t i5 = 328; i5 != -328; i5 -= 328)
    sub_100256158((uint64_t)&STACK[0x8A78] + i5);
  sub_1002560E4((uint64_t)&STACK[0x3170]);
  sub_10025ACF4((uint64_t)&STACK[0x3420], (void *)STACK[0x3428]);
  for (uint64_t i6 = 328; i6 != -328; i6 -= 328)
    sub_100256158((uint64_t)&STACK[0x8D08] + i6);
  sub_1002560E4((uint64_t)&STACK[0x32D8]);
  sub_10025ACF4((uint64_t)&STACK[0x3588], (void *)STACK[0x3590]);
  for (uint64_t i7 = 328; i7 != -328; i7 -= 328)
    sub_100256158((uint64_t)&STACK[0x8F98] + i7);
  sub_1002560E4((uint64_t)&STACK[0x3440]);
  sub_10025AC94((uint64_t)&STACK[0x47E8], (void *)STACK[0x47F0]);
  uint64_t v23 = 320;
  do
  {
    sub_10025ACF4((uint64_t)&STACK[0xC7D0] + v23 - 24, *(void **)((char *)&STACK[0xC7D0] + v23 - 16));
    v23 -= 32;
  }
  while (v23);
  sub_10025ACF4((uint64_t)&STACK[0x3708], (void *)STACK[0x3710]);
  sub_100256158((uint64_t)&STACK[0x9348]);
  sub_1002560E4((uint64_t)&STACK[0x35C0]);
  sub_10025ACF4((uint64_t)&STACK[0x39C8], (void *)STACK[0x39D0]);
  for (uint64_t i8 = 1968; i8 != -328; i8 -= 328)
    sub_100256158((uint64_t)&STACK[0x9490] + i8);
  sub_1002560E4((uint64_t)&STACK[0x3728]);
  sub_1002560E4((uint64_t)&STACK[0x3870]);
  sub_10025ACF4((uint64_t)&STACK[0x41A0], (void *)STACK[0x41A8]);
  for (uint64_t i9 = 2952; i9 != -328; i9 -= 328)
    sub_100256158((uint64_t)&STACK[0x9D88] + i9);
  sub_1002560E4((uint64_t)&STACK[0x39E8]);
  sub_1002560E4((uint64_t)&STACK[0x3B30]);
  sub_1002560E4((uint64_t)&STACK[0x3C80]);
  sub_1002560E4((uint64_t)&STACK[0x3DC8]);
  sub_1002560E4((uint64_t)&STACK[0x3F10]);
  sub_1002560E4((uint64_t)&STACK[0x4058]);
  int64_t v26 = &STACK[0xC9B0];
  int v27 = STACK[0x220];
  sub_10025ACF4((uint64_t)&STACK[0x41C8], (void *)STACK[0x41D0]);
  for (uint64_t i10 = 656; i10 != -328; i10 -= 328)
    sub_100256158((uint64_t)&STACK[0xAA58] + i10);
  sub_10025ACF4((uint64_t)&STACK[0x41F0], (void *)STACK[0x41F8]);
  for (uint64_t i11 = 656; i11 != -328; i11 -= 328)
    sub_100256158((uint64_t)&STACK[0xAE30] + i11);
  sub_10025ACF4((uint64_t)&STACK[0x44A0], (void *)STACK[0x44A8]);
  for (uint64_t i12 = 656; i12 != -328; i12 -= 328)
    sub_100256158((uint64_t)&STACK[0xB208] + i12);
  sub_1002560E4((uint64_t)&STACK[0x4210]);
  sub_1002560E4((uint64_t)&STACK[0x4358]);
  sub_10025ACF4((uint64_t)&STACK[0x4750], (void *)STACK[0x4758]);
  for (uint64_t i13 = 984; i13 != -328; i13 -= 328)
    sub_100256158((uint64_t)&STACK[0xB5E0] + i13);
  sub_1002560E4((uint64_t)&STACK[0x44C0]);
  sub_1002560E4((uint64_t)&STACK[0x4608]);
  sub_10025ACF4((uint64_t)&STACK[0x4780], (void *)STACK[0x4788]);
  for (uint64_t i14 = 984; i14 != -328; i14 -= 328)
    sub_100256158((uint64_t)&STACK[0xBB00] + i14);
  sub_10025ACF4((uint64_t)&STACK[0x47A8], (void *)STACK[0x47B0]);
  for (uint64_t i15 = 656; i15 != -328; i15 -= 328)
    sub_100256158((uint64_t)&STACK[0xC020] + i15);
  sub_10025ACF4((uint64_t)&STACK[0x47D0], (void *)STACK[0x47D8]);
  for (uint64_t i16 = 656; i16 != -328; i16 -= 328)
    sub_100256158((uint64_t)&STACK[0xC3F8] + i16);
  if (&STACK[0xC910] == &STACK[0xC9B0]) {
    int v35 = 0;
  }
  else {
    int v35 = v27;
  }
  if (v35 == 1)
  {
    do
    {
      sub_10025AC94((uint64_t)(v26 - 3), (void *)*(v26 - 2));
      v26 -= 4;
    }
    while (v26 != &STACK[0xC910]);
  }
  _Unwind_Resume((_Unwind_Exception *)STACK[0x230]);
}

void sub_1002645BC(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263AC4);
}

void sub_1002645CC(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263AF0);
}

void sub_1002645E0(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263B00);
}

void sub_1002645F4(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263B0CLL);
}

void sub_100264608(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263B18);
}

void sub_10026461C(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263B2CLL);
}

void sub_100264630(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263B50);
}

void sub_10026464C(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263B58);
}

void sub_100264668(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263B60);
}

void sub_100264684(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263B68);
}

void sub_1002646A0(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263B70);
}

void sub_1002646C0(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263B78);
}

void sub_1002646D8(unint64_t a1)
{
  LODWORD(STACK[0x220]) = 1;
  STACK[0x230] = a1;
  JUMPOUT(0x100263BACLL);
}

void sub_1002646EC(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263BACLL);
}

void sub_100264708(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263BC4);
}

void sub_100264724(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263BE8);
}

void sub_100264748(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263BF4);
}

void sub_10026476C(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263C00);
}

void sub_100264790(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263C0CLL);
}

void sub_1002647B4(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263C18);
}

void sub_1002647D8(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263C24);
}

void sub_1002647FC(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263C30);
}

void sub_100264824(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263C98);
}

void sub_100264838(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263CB0);
}

void sub_100264848(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263CDCLL);
}

void sub_10026485C(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263CF4);
}

void sub_100264870(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263D18);
}

void sub_100264888(unint64_t a1)
{
  LODWORD(STACK[0x220]) = 1;
  STACK[0x230] = a1;
  JUMPOUT(0x100263D34);
}

void sub_1002648AC(unint64_t a1)
{
  LODWORD(STACK[0x220]) = 1;
  STACK[0x230] = a1;
  JUMPOUT(0x100263D40);
}

void sub_1002648D0(unint64_t a1)
{
  LODWORD(STACK[0x220]) = 1;
  STACK[0x230] = a1;
  JUMPOUT(0x100263D40);
}

void sub_1002648E4(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263D4CLL);
}

void sub_100264900(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263D64);
}

void sub_10026491C(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263D88);
}

void sub_10026493C(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263D94);
}

void sub_100264964(unint64_t a1)
{
  LODWORD(STACK[0x220]) = 1;
  STACK[0x230] = a1;
  JUMPOUT(0x100263DB0);
}

void sub_100264994(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263E08);
}

void sub_1002649C0(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263E20);
}

void sub_1002649D0(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263E48);
}

void sub_1002649E4(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263E5CLL);
}

void sub_1002649F8(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263E68);
}

void sub_100264A0C(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263E74);
}

void sub_100264A20(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263E8CLL);
}

void sub_100264A34(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263EB0);
}

void sub_100264A4C(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263EBCLL);
}

void sub_100264A6C(unint64_t a1)
{
  LODWORD(STACK[0x220]) = 1;
  STACK[0x230] = a1;
  JUMPOUT(0x100263ED8);
}

void sub_100264A94(unint64_t a1)
{
  LODWORD(STACK[0x220]) = 1;
  STACK[0x230] = a1;
  JUMPOUT(0x100263EF4);
}

void sub_100264AB8(unint64_t a1)
{
  LODWORD(STACK[0x220]) = 1;
  STACK[0x230] = a1;
  JUMPOUT(0x100263EF4);
}

void sub_100264ACC(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263EF4);
}

void sub_100264AE0(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263F0CLL);
}

void sub_100264AF4(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263F30);
}

void sub_100264B14(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263F3CLL);
}

void sub_100264B34(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263F48);
}

void sub_100264B54(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263F54);
}

void sub_100264B78(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263F60);
}

void sub_100264B98(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263F6CLL);
}

void sub_100264BB8(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263F78);
}

void sub_100264BD8(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263F84);
}

void sub_100264BF4(unint64_t a1)
{
  LODWORD(STACK[0x220]) = 1;
  STACK[0x230] = a1;
  JUMPOUT(0x100263FC8);
}

void sub_100264C18(unint64_t a1)
{
  LODWORD(STACK[0x220]) = 1;
  STACK[0x230] = a1;
  JUMPOUT(0x100263FC8);
}

void sub_100264C2C(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263FC8);
}

void sub_100264C40(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100263FE0);
}

void sub_100264C54(unint64_t a1)
{
  LODWORD(STACK[0x220]) = 1;
  STACK[0x230] = a1;
  JUMPOUT(0x100264000);
}

void sub_100264C78(unint64_t a1)
{
  LODWORD(STACK[0x220]) = 1;
  STACK[0x230] = a1;
  JUMPOUT(0x100264000);
}

void sub_100264C8C(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100264000);
}

void sub_100264CA0(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100264018);
}

void sub_100264CB4(unint64_t a1)
{
  LODWORD(STACK[0x220]) = 1;
  STACK[0x230] = a1;
  JUMPOUT(0x100264044);
}

void sub_100264CF8(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100264044);
}

void sub_100264D10(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10026405CLL);
}

void sub_100264D24(unint64_t a1)
{
  LODWORD(STACK[0x220]) = 1;
  STACK[0x230] = a1;
  JUMPOUT(0x100264088);
}

void sub_100264D54(unint64_t a1)
{
  STACK[0x230] = a1;
  sub_1002560E4((uint64_t)&STACK[0x3008]);
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100264088);
}

void sub_100264D90(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x1002640A8);
}

void sub_100264DAC(unint64_t a1)
{
  LODWORD(STACK[0x220]) = 1;
  STACK[0x230] = a1;
  JUMPOUT(0x1002640D4);
}

void sub_100264E20(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x1002640ECLL);
}

void sub_100264E3C(unint64_t a1)
{
  LODWORD(STACK[0x220]) = 1;
  STACK[0x230] = a1;
  JUMPOUT(0x100264118);
}

void sub_100264EB8(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100264128);
}

void sub_100264ED4(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100264188);
}

void sub_100264F1C(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100264198);
}

void sub_100264F40(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x1002641A8);
}

void sub_100264F5C(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x1002641D0);
}

void sub_100264F7C(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x1002641E8);
}

void sub_100264F9C(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x1002641F4);
}

void sub_100264FBC(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100264200);
}

void sub_100264FDC(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100264204);
}

void sub_100264FFC(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10026421CLL);
}

void sub_10026501C(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100264240);
}

void sub_100265044(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10026424CLL);
}

void sub_10026506C(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100264258);
}

void sub_10026509C(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10026428CLL);
}

void sub_1002650BC(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10026428CLL);
}

void sub_1002650DC(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x1002642A4);
}

void sub_1002650FC(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x1002642C8);
}

void sub_100265120(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x1002642D4);
}

void sub_100265148(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x1002642E0);
}

void sub_100265178(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x1002642ECLL);
}

void sub_1002651A4(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x1002642F8);
}

void sub_1002651CC(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100264304);
}

void sub_1002651F4(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x100264310);
}

void sub_100265218(unint64_t a1)
{
  STACK[0x230] = a1;
  JUMPOUT(0x10026434CLL);
}

void sub_100265230(unint64_t a1)
{
  STACK[0x230] = a1;
  JUMPOUT(0x10026434CLL);
}

void sub_100265248(unint64_t a1)
{
  STACK[0x230] = a1;
  JUMPOUT(0x100264364);
}

void sub_100265260(unint64_t a1)
{
  STACK[0x230] = a1;
  do
  {
    v1 -= 41;
    sub_100256158((uint64_t)v1);
  }
  while (v1 != &STACK[0xAA58]);
  JUMPOUT(0x100264384);
}

void sub_1002652B8(unint64_t a1)
{
  STACK[0x230] = a1;
  JUMPOUT(0x10026439CLL);
}

void sub_1002652D0(unint64_t a1)
{
  STACK[0x230] = a1;
  do
  {
    v1 -= 41;
    sub_100256158((uint64_t)v1);
  }
  while (v1 != &STACK[0xAE30]);
  JUMPOUT(0x1002643BCLL);
}

void sub_100265328(unint64_t a1)
{
  STACK[0x230] = a1;
  JUMPOUT(0x1002643D4);
}

void sub_100265340(unint64_t a1)
{
  STACK[0x230] = a1;
  JUMPOUT(0x1002643F8);
}

void sub_10026535C(unint64_t a1)
{
  STACK[0x230] = a1;
  sub_1002560E4((uint64_t)&STACK[0x4358]);
  JUMPOUT(0x100264414);
}

void sub_100265384(unint64_t a1)
{
  STACK[0x230] = a1;
  sub_1002560E4((uint64_t)&STACK[0x4358]);
  JUMPOUT(0x100264430);
}

void sub_1002653B0(unint64_t a1)
{
  STACK[0x230] = a1;
  JUMPOUT(0x100264430);
}

void sub_1002653C8(unint64_t a1)
{
  STACK[0x230] = a1;
  JUMPOUT(0x100264448);
}

void sub_1002653E0(unint64_t a1)
{
  STACK[0x230] = a1;
  JUMPOUT(0x10026446CLL);
}

void sub_1002653FC(unint64_t a1)
{
  STACK[0x230] = a1;
  sub_1002560E4((uint64_t)&STACK[0x4608]);
  JUMPOUT(0x100264488);
}

void sub_100265430(unint64_t a1)
{
  STACK[0x230] = a1;
  JUMPOUT(0x1002644A4);
}

void sub_100265448(unint64_t a1)
{
  STACK[0x230] = a1;
  JUMPOUT(0x1002644A4);
}

void sub_100265460(unint64_t a1)
{
  STACK[0x230] = a1;
  JUMPOUT(0x1002644BCLL);
}

void sub_100265478(unint64_t a1)
{
  STACK[0x230] = a1;
  do
  {
    v1 -= 41;
    sub_100256158((uint64_t)v1);
  }
  while (v1 != &STACK[0xBB00]);
  JUMPOUT(0x1002644DCLL);
}

void sub_1002654D4(unint64_t a1)
{
  STACK[0x230] = a1;
  JUMPOUT(0x1002644F4);
}

void sub_1002654EC(unint64_t a1)
{
  STACK[0x230] = a1;
  do
  {
    v1 -= 41;
    sub_100256158((uint64_t)v1);
  }
  while (v1 != &STACK[0xC020]);
  JUMPOUT(0x100264514);
}

void sub_100265554(unint64_t a1)
{
  STACK[0x230] = a1;
  JUMPOUT(0x10026452CLL);
}

void sub_100265574(_Unwind_Exception *a1)
{
  do
  {
    v1 -= 41;
    sub_100256158((uint64_t)v1);
  }
  while (v1 != &STACK[0xC3F8]);
  _Unwind_Resume(a1);
}

uint64_t sub_1002655A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __chkstk_darwin(a1, a2, a3);
  int v1109 = 14;
  v1080[0] = 0x300000010;
  v1080[1] = 0xC042000000000000;
  v1186[0] = (const void *)0xC042000000000000;
  sub_1001A02EC((uint64_t)v1081, (double *)v1186, 1);
  long long v1082 = xmmword_1004B7700;
  uint64_t v1083 = 0x4024000000000000;
  int v1084 = 45;
  LOBYTE(v1085) = 0;
  char v1087 = 0;
  uint64_t v1088 = 0;
  char v1089 = 0;
  int v1090 = 1;
  char v1091 = 1;
  long long v1092 = xmmword_1004B7710;
  long long v1093 = xmmword_1004B7720;
  __asm { FMOV            V0.2D, #1.0 }
  long long v13 = _Q0;
  long long v1094 = _Q0;
  unint64_t v1095 = 0xC059000000000000;
  long long v1096 = xmmword_1004B7730;
  int32x2_t v1097 = vdup_n_s32(0x3DCCCCCDu);
  long long v1098 = xmmword_1004B7670;
  uint64_t v1100 = 0;
  uint64_t v1101 = 0;
  uint64_t v1099 = 0x3FD999999999999ALL;
  long long v1102 = xmmword_1004B7680;
  int v1103 = 5;
  uint64_t v1104 = 0x4000000000000000;
  int v1105 = 10;
  uint64_t v1106 = 0x4034000000000000;
  int v1107 = 3;
  long long v1108 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1278, &v1109, (uint64_t)v1080);
  sub_10025ADA0((uint64_t)v1110, v1278, 1);
  sub_100259B80(v1283, &xmmword_1008A60D0, (uint64_t)v1110);
  int v1078 = 14;
  v1049[0] = 0x300000010;
  v1049[1] = 0xC042000000000000;
  v1186[0] = (const void *)0xC042000000000000;
  sub_1001A02EC((uint64_t)v1050, (double *)v1186, 1);
  long long v1051 = xmmword_1004B7700;
  uint64_t v1052 = 0x4024000000000000;
  int v1053 = 45;
  LOBYTE(v1054) = 0;
  char v1056 = 0;
  uint64_t v1057 = 0;
  char v1058 = 0;
  int v1059 = 1;
  char v1060 = 1;
  long long v1061 = xmmword_1004B7710;
  long long v1062 = xmmword_1004B7720;
  long long v1063 = v13;
  unint64_t v1064 = 0xC059000000000000;
  long long v1065 = xmmword_1004B7730;
  int32x2_t v1066 = vdup_n_s32(0x3DCCCCCDu);
  long long v1067 = xmmword_1004B7670;
  uint64_t v1069 = 0;
  uint64_t v1070 = 0;
  uint64_t v1068 = 0x3FD999999999999ALL;
  long long v1071 = xmmword_1004B7680;
  int v1072 = 5;
  uint64_t v1073 = 0x4000000000000000;
  int v1074 = 10;
  uint64_t v1075 = 0x4034000000000000;
  int v1076 = 3;
  long long v1077 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1274, &v1078, (uint64_t)v1049);
  sub_10025ADA0((uint64_t)v1079, v1274, 1);
  sub_100259B80(v1284, &xmmword_1008A60E8, (uint64_t)v1079);
  int v1047 = 14;
  v1018[0] = 0x300000010;
  v1018[1] = 0xC042000000000000;
  v1186[0] = (const void *)0xC042000000000000;
  sub_1001A02EC((uint64_t)v1019, (double *)v1186, 1);
  long long v1020 = xmmword_1004B7700;
  uint64_t v1021 = 0x4024000000000000;
  int v1022 = 45;
  LOBYTE(v1023) = 0;
  char v1025 = 0;
  uint64_t v1026 = 0;
  char v1027 = 0;
  int v1028 = 1;
  char v1029 = 1;
  long long v1030 = xmmword_1004B7710;
  long long v1031 = xmmword_1004B7720;
  long long v1032 = v13;
  unint64_t v1033 = 0xC059000000000000;
  long long v1034 = xmmword_1004B7730;
  int32x2_t v1035 = vdup_n_s32(0x3DCCCCCDu);
  long long v1036 = xmmword_1004B7670;
  uint64_t v1038 = 0;
  uint64_t v1039 = 0;
  uint64_t v1037 = 0x3FD999999999999ALL;
  long long v1040 = xmmword_1004B7680;
  int v1041 = 5;
  uint64_t v1042 = 0x4000000000000000;
  int v1043 = 10;
  uint64_t v1044 = 0x4034000000000000;
  int v1045 = 3;
  long long v1046 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1270, &v1047, (uint64_t)v1018);
  sub_10025ADA0((uint64_t)v1048, v1270, 1);
  sub_100259B80(v1285, &xmmword_1008A6118, (uint64_t)v1048);
  int v1016 = 14;
  v987[0] = 0x300000010;
  v987[1] = 0xC042000000000000;
  v1186[0] = (const void *)0xC042000000000000;
  sub_1001A02EC((uint64_t)v988, (double *)v1186, 1);
  long long v989 = xmmword_1004B7700;
  uint64_t v990 = 0x4024000000000000;
  int v991 = 45;
  LOBYTE(v992) = 0;
  char v994 = 0;
  uint64_t v995 = 0;
  char v996 = 0;
  int v997 = 1;
  char v998 = 1;
  long long v999 = xmmword_1004B7710;
  long long v1000 = xmmword_1004B7720;
  long long v1001 = v13;
  unint64_t v1002 = 0xC059000000000000;
  long long v1003 = xmmword_1004B7730;
  int32x2_t v1004 = vdup_n_s32(0x3DCCCCCDu);
  long long v1005 = xmmword_1004B7670;
  uint64_t v1007 = 0;
  uint64_t v1008 = 0;
  uint64_t v1006 = 0x3FD999999999999ALL;
  long long v1009 = xmmword_1004B7680;
  int v1010 = 5;
  uint64_t v1011 = 0x4000000000000000;
  int v1012 = 10;
  uint64_t v1013 = 0x4034000000000000;
  int v1014 = 3;
  long long v1015 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1266, &v1016, (uint64_t)v987);
  sub_10025ADA0((uint64_t)v1017, v1266, 1);
  sub_100259B80(v1286, &xmmword_1008A6118, (uint64_t)v1017);
  int v985 = 14;
  v956[0] = 0x300000010;
  v956[1] = 0xC042000000000000;
  v1186[0] = (const void *)0xC042000000000000;
  sub_1001A02EC((uint64_t)v957, (double *)v1186, 1);
  long long v958 = xmmword_1004B7700;
  uint64_t v959 = 0x4024000000000000;
  int v960 = 45;
  LOBYTE(v961) = 0;
  char v963 = 0;
  uint64_t v964 = 0;
  char v965 = 0;
  int v966 = 1;
  char v967 = 1;
  long long v968 = xmmword_1004B7710;
  long long v969 = xmmword_1004B7720;
  long long v970 = v13;
  unint64_t v971 = 0xC059000000000000;
  long long v972 = xmmword_1004B7730;
  int32x2_t v973 = vdup_n_s32(0x3DCCCCCDu);
  long long v974 = xmmword_1004B7670;
  uint64_t v976 = 0;
  uint64_t v977 = 0;
  uint64_t v975 = 0x3FD999999999999ALL;
  long long v978 = xmmword_1004B7680;
  int v979 = 5;
  uint64_t v980 = 0x4000000000000000;
  int v981 = 10;
  uint64_t v982 = 0x4034000000000000;
  int v983 = 3;
  long long v984 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1262, &v985, (uint64_t)v956);
  sub_10025ADA0((uint64_t)v986, v1262, 1);
  sub_100259B80(v1287, &xmmword_1008A6130, (uint64_t)v986);
  int v954 = 14;
  v925[0] = 0x300000010;
  v925[1] = 0xC044800000000000;
  v1186[0] = (const void *)0xC044800000000000;
  sub_1001A02EC((uint64_t)v926, (double *)v1186, 1);
  long long v927 = xmmword_1004B7700;
  uint64_t v928 = 0x4024000000000000;
  int v929 = 45;
  LOBYTE(v930) = 0;
  char v932 = 0;
  uint64_t v933 = 0;
  char v934 = 0;
  int v935 = 1;
  char v936 = 1;
  long long v937 = xmmword_1004B7710;
  long long v938 = xmmword_1004B7720;
  long long v939 = v13;
  unint64_t v940 = 0xC059000000000000;
  long long v941 = xmmword_1004B7730;
  int32x2_t v942 = vdup_n_s32(0x3DCCCCCDu);
  long long v943 = xmmword_1004B7670;
  uint64_t v945 = 0;
  uint64_t v946 = 0;
  uint64_t v944 = 0x3FD999999999999ALL;
  long long v947 = xmmword_1004B7680;
  int v948 = 5;
  uint64_t v949 = 0x4000000000000000;
  int v950 = 10;
  uint64_t v951 = 0x4034000000000000;
  int v952 = 3;
  long long v953 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1258, &v954, (uint64_t)v925);
  sub_10025ADA0((uint64_t)v955, v1258, 1);
  sub_100259B80(v1288, &xmmword_1008A6160, (uint64_t)v955);
  int v923 = 14;
  v894[0] = 0x300000010;
  v894[1] = 0xC044800000000000;
  v1186[0] = (const void *)0xC044800000000000;
  sub_1001A02EC((uint64_t)v895, (double *)v1186, 1);
  long long v896 = xmmword_1004B7700;
  uint64_t v897 = 0x4024000000000000;
  int v898 = 45;
  LOBYTE(v899) = 0;
  char v901 = 0;
  uint64_t v902 = 0;
  char v903 = 0;
  int v904 = 1;
  char v905 = 1;
  long long v906 = xmmword_1004B7710;
  long long v907 = xmmword_1004B7720;
  long long v908 = v13;
  unint64_t v909 = 0xC059000000000000;
  long long v910 = xmmword_1004B7730;
  int32x2_t v911 = vdup_n_s32(0x3DCCCCCDu);
  long long v912 = xmmword_1004B7670;
  uint64_t v914 = 0;
  uint64_t v915 = 0;
  uint64_t v913 = 0x3FD999999999999ALL;
  long long v916 = xmmword_1004B7680;
  int v917 = 5;
  uint64_t v918 = 0x4000000000000000;
  int v919 = 10;
  uint64_t v920 = 0x4034000000000000;
  int v921 = 3;
  long long v922 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1254, &v923, (uint64_t)v894);
  sub_10025ADA0((uint64_t)v924, v1254, 1);
  sub_100259B80(v1289, &xmmword_1008A6178, (uint64_t)v924);
  int v892 = 14;
  v863[0] = 0x300000010;
  v863[1] = 0xC044800000000000;
  v1186[0] = (const void *)0xC044800000000000;
  sub_1001A02EC((uint64_t)v864, (double *)v1186, 1);
  long long v865 = xmmword_1004B7700;
  uint64_t v866 = 0x4024000000000000;
  int v867 = 45;
  LOBYTE(v868) = 0;
  char v870 = 0;
  uint64_t v871 = 0;
  char v872 = 0;
  int v873 = 1;
  char v874 = 1;
  long long v875 = xmmword_1004B7710;
  long long v876 = xmmword_1004B7720;
  long long v877 = v13;
  unint64_t v878 = 0xC059000000000000;
  long long v879 = xmmword_1004B7730;
  int32x2_t v880 = vdup_n_s32(0x3DCCCCCDu);
  long long v881 = xmmword_1004B7670;
  uint64_t v883 = 0;
  uint64_t v884 = 0;
  uint64_t v882 = 0x3FD999999999999ALL;
  long long v885 = xmmword_1004B7680;
  int v886 = 5;
  uint64_t v887 = 0x4000000000000000;
  int v888 = 10;
  uint64_t v889 = 0x4034000000000000;
  int v890 = 3;
  long long v891 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1250, &v892, (uint64_t)v863);
  sub_10025ADA0((uint64_t)v893, v1250, 1);
  sub_100259B80(v1290, &xmmword_1008A6190, (uint64_t)v893);
  sub_10025C730((uint64_t)v1111, v1283, 8);
  int v1291 = 2;
  sub_10025C988(v1292, v1111);
  int v860 = 16;
  v831[0] = 0x300000008;
  v831[1] = 0xC043800000000000;
  v1186[0] = (const void *)0xC043800000000000;
  sub_1001A02EC((uint64_t)v832, (double *)v1186, 1);
  long long v833 = xmmword_1004B7700;
  uint64_t v834 = 0x4024000000000000;
  int v835 = 45;
  LOBYTE(v836) = 0;
  char v838 = 0;
  uint64_t v839 = 0;
  char v840 = 0;
  int v841 = 1;
  char v842 = 1;
  long long v843 = xmmword_1004B7710;
  long long v844 = xmmword_1004B7720;
  long long v845 = v13;
  unint64_t v846 = 0xC059000000000000;
  long long v847 = xmmword_1004B7730;
  int32x2_t v848 = vdup_n_s32(0x3DCCCCCDu);
  long long v849 = xmmword_1004B7670;
  uint64_t v851 = 0;
  uint64_t v852 = 0;
  uint64_t v850 = 0x3FD999999999999ALL;
  long long v853 = xmmword_1004B7680;
  int v854 = 5;
  uint64_t v855 = 0x4000000000000000;
  int v856 = 10;
  uint64_t v857 = 0x4034000000000000;
  int v858 = 3;
  long long v859 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1236, &v860, (uint64_t)v831);
  sub_10025ADA0((uint64_t)v861, v1236, 1);
  sub_100259B80(v1241, &xmmword_1008A60D0, (uint64_t)v861);
  int v829 = 16;
  v800[0] = 0x300000008;
  v800[1] = 0xC043800000000000;
  v1186[0] = (const void *)0xC043800000000000;
  sub_1001A02EC((uint64_t)v801, (double *)v1186, 1);
  long long v802 = xmmword_1004B7700;
  uint64_t v803 = 0x4024000000000000;
  int v804 = 45;
  LOBYTE(v805) = 0;
  char v807 = 0;
  uint64_t v808 = 0;
  char v809 = 0;
  int v810 = 1;
  char v811 = 1;
  long long v812 = xmmword_1004B7710;
  long long v813 = xmmword_1004B7720;
  long long v814 = v13;
  unint64_t v815 = 0xC059000000000000;
  long long v816 = xmmword_1004B7730;
  int32x2_t v817 = vdup_n_s32(0x3DCCCCCDu);
  long long v818 = xmmword_1004B7670;
  uint64_t v820 = 0;
  uint64_t v821 = 0;
  uint64_t v819 = 0x3FD999999999999ALL;
  long long v822 = xmmword_1004B7680;
  int v823 = 5;
  uint64_t v824 = 0x4000000000000000;
  int v825 = 10;
  uint64_t v826 = 0x4034000000000000;
  int v827 = 3;
  long long v828 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1232, &v829, (uint64_t)v800);
  sub_10025ADA0((uint64_t)v830, v1232, 1);
  sub_100259B80(v1242, &xmmword_1008A60E8, (uint64_t)v830);
  int v798 = 7;
  v769[0] = 8;
  v769[1] = 0xC04A000000000000;
  v1186[0] = (const void *)0xC04A000000000000;
  sub_1001A02EC((uint64_t)v770, (double *)v1186, 1);
  long long v771 = xmmword_1004B7700;
  uint64_t v772 = 0x4024000000000000;
  int v773 = 45;
  LOBYTE(v774) = 0;
  char v776 = 0;
  uint64_t v777 = 0;
  char v778 = 0;
  int v779 = 1;
  char v780 = 1;
  long long v781 = xmmword_1004B7710;
  long long v782 = xmmword_1004B7720;
  long long v783 = v13;
  unint64_t v784 = 0xC059000000000000;
  long long v785 = xmmword_1004B7730;
  int32x2_t v786 = vdup_n_s32(0x3DCCCCCDu);
  long long v787 = xmmword_1004B7670;
  uint64_t v789 = 0;
  uint64_t v790 = 0;
  uint64_t v788 = 0x3FD999999999999ALL;
  long long v791 = xmmword_1004B7680;
  int v792 = 5;
  uint64_t v793 = 0x4000000000000000;
  int v794 = 10;
  uint64_t v795 = 0x4034000000000000;
  int v796 = 3;
  long long v797 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1228, &v798, (uint64_t)v769);
  sub_10025ADA0((uint64_t)v799, v1228, 1);
  sub_100259B80(v1243, &xmmword_1008A62E0, (uint64_t)v799);
  int v767 = 7;
  v738[0] = 8;
  v738[1] = 0xC04A000000000000;
  v1186[0] = (const void *)0xC04A000000000000;
  sub_1001A02EC((uint64_t)v739, (double *)v1186, 1);
  long long v740 = xmmword_1004B7700;
  uint64_t v741 = 0x4024000000000000;
  int v742 = 45;
  LOBYTE(v743) = 0;
  char v745 = 0;
  uint64_t v746 = 0;
  char v747 = 0;
  int v748 = 1;
  char v749 = 1;
  long long v750 = xmmword_1004B7710;
  long long v751 = xmmword_1004B7720;
  long long v752 = v13;
  unint64_t v753 = 0xC059000000000000;
  long long v754 = xmmword_1004B7730;
  int32x2_t v755 = vdup_n_s32(0x3DCCCCCDu);
  long long v756 = xmmword_1004B7670;
  uint64_t v758 = 0;
  uint64_t v759 = 0;
  uint64_t v757 = 0x3FD999999999999ALL;
  long long v760 = xmmword_1004B7680;
  int v761 = 5;
  uint64_t v762 = 0x4000000000000000;
  int v763 = 10;
  uint64_t v764 = 0x4034000000000000;
  int v765 = 3;
  long long v766 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1224, &v767, (uint64_t)v738);
  sub_10025ADA0((uint64_t)v768, v1224, 1);
  sub_100259B80(v1244, &xmmword_1008A62F8, (uint64_t)v768);
  int v736 = 7;
  v707[0] = 8;
  v707[1] = 0xC04A000000000000;
  v1186[0] = (const void *)0xC04A000000000000;
  sub_1001A02EC((uint64_t)v708, (double *)v1186, 1);
  long long v709 = xmmword_1004B7700;
  uint64_t v710 = 0x4024000000000000;
  int v711 = 45;
  LOBYTE(v712) = 0;
  char v714 = 0;
  uint64_t v715 = 0;
  char v716 = 0;
  int v717 = 1;
  char v718 = 1;
  long long v719 = xmmword_1004B7710;
  long long v720 = xmmword_1004B7720;
  long long v721 = v13;
  unint64_t v722 = 0xC059000000000000;
  long long v723 = xmmword_1004B7730;
  int32x2_t v724 = vdup_n_s32(0x3DCCCCCDu);
  long long v725 = xmmword_1004B7670;
  uint64_t v727 = 0;
  uint64_t v728 = 0;
  uint64_t v726 = 0x3FD999999999999ALL;
  long long v729 = xmmword_1004B7680;
  int v730 = 5;
  uint64_t v731 = 0x4000000000000000;
  int v732 = 10;
  uint64_t v733 = 0x4034000000000000;
  int v734 = 3;
  long long v735 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1220, &v736, (uint64_t)v707);
  sub_10025ADA0((uint64_t)v737, v1220, 1);
  sub_100259B80(v1245, &xmmword_1008A6310, (uint64_t)v737);
  int v705 = 7;
  v676[0] = 8;
  v676[1] = 0xC04A000000000000;
  v1186[0] = (const void *)0xC04A000000000000;
  sub_1001A02EC((uint64_t)v677, (double *)v1186, 1);
  long long v678 = xmmword_1004B7700;
  uint64_t v679 = 0x4024000000000000;
  int v680 = 45;
  LOBYTE(v681) = 0;
  char v683 = 0;
  uint64_t v684 = 0;
  char v685 = 0;
  int v686 = 1;
  char v687 = 1;
  long long v688 = xmmword_1004B7710;
  long long v689 = xmmword_1004B7720;
  long long v690 = v13;
  unint64_t v691 = 0xC059000000000000;
  long long v692 = xmmword_1004B7730;
  int32x2_t v693 = vdup_n_s32(0x3DCCCCCDu);
  long long v694 = xmmword_1004B7670;
  uint64_t v696 = 0;
  uint64_t v697 = 0;
  uint64_t v695 = 0x3FD999999999999ALL;
  long long v698 = xmmword_1004B7680;
  int v699 = 5;
  uint64_t v700 = 0x4000000000000000;
  int v701 = 10;
  uint64_t v702 = 0x4034000000000000;
  int v703 = 3;
  long long v704 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1216, &v705, (uint64_t)v676);
  sub_10025ADA0((uint64_t)v706, v1216, 1);
  sub_100259B80(v1246, &xmmword_1008A6328, (uint64_t)v706);
  int v674 = 7;
  v645[0] = 8;
  v645[1] = 0xC04A000000000000;
  v1186[0] = (const void *)0xC04A000000000000;
  sub_1001A02EC((uint64_t)v646, (double *)v1186, 1);
  long long v647 = xmmword_1004B7700;
  uint64_t v648 = 0x4024000000000000;
  int v649 = 45;
  LOBYTE(v650) = 0;
  char v652 = 0;
  uint64_t v653 = 0;
  char v654 = 0;
  int v655 = 1;
  char v656 = 1;
  long long v657 = xmmword_1004B7710;
  long long v658 = xmmword_1004B7720;
  long long v659 = v13;
  unint64_t v660 = 0xC059000000000000;
  long long v661 = xmmword_1004B7730;
  int32x2_t v662 = vdup_n_s32(0x3DCCCCCDu);
  long long v663 = xmmword_1004B7670;
  uint64_t v665 = 0;
  uint64_t v666 = 0;
  uint64_t v664 = 0x3FD999999999999ALL;
  long long v667 = xmmword_1004B7680;
  int v668 = 5;
  uint64_t v669 = 0x4000000000000000;
  int v670 = 10;
  uint64_t v671 = 0x4034000000000000;
  int v672 = 3;
  long long v673 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1212, &v674, (uint64_t)v645);
  sub_10025ADA0((uint64_t)v675, v1212, 1);
  sub_100259B80(v1247, &xmmword_1008A6340, (uint64_t)v675);
  int v643 = 7;
  v614[0] = 8;
  v614[1] = 0xC04A000000000000;
  v1186[0] = (const void *)0xC04A000000000000;
  sub_1001A02EC((uint64_t)v615, (double *)v1186, 1);
  long long v616 = xmmword_1004B7700;
  uint64_t v617 = 0x4024000000000000;
  int v618 = 45;
  LOBYTE(v619) = 0;
  char v621 = 0;
  uint64_t v622 = 0;
  char v623 = 0;
  int v624 = 1;
  char v625 = 1;
  long long v626 = xmmword_1004B7710;
  long long v627 = xmmword_1004B7720;
  long long v628 = v13;
  unint64_t v629 = 0xC059000000000000;
  long long v630 = xmmword_1004B7730;
  int32x2_t v631 = vdup_n_s32(0x3DCCCCCDu);
  long long v632 = xmmword_1004B7670;
  uint64_t v634 = 0;
  uint64_t v635 = 0;
  uint64_t v633 = 0x3FD999999999999ALL;
  long long v636 = xmmword_1004B7680;
  int v637 = 5;
  uint64_t v638 = 0x4000000000000000;
  int v639 = 10;
  uint64_t v640 = 0x4034000000000000;
  int v641 = 3;
  long long v642 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1208, &v643, (uint64_t)v614);
  sub_10025ADA0((uint64_t)v644, v1208, 1);
  sub_100259B80(v1248, &xmmword_1008A6358, (uint64_t)v644);
  int v612 = 7;
  v583[0] = 8;
  v583[1] = 0xC04A000000000000;
  v1186[0] = (const void *)0xC04A000000000000;
  sub_1001A02EC((uint64_t)v584, (double *)v1186, 1);
  long long v585 = xmmword_1004B7700;
  uint64_t v586 = 0x4024000000000000;
  int v587 = 45;
  LOBYTE(v588) = 0;
  char v590 = 0;
  uint64_t v591 = 0;
  char v592 = 0;
  int v593 = 1;
  char v594 = 1;
  long long v595 = xmmword_1004B7710;
  long long v596 = xmmword_1004B7720;
  long long v597 = v13;
  unint64_t v598 = 0xC059000000000000;
  long long v599 = xmmword_1004B7730;
  int32x2_t v600 = vdup_n_s32(0x3DCCCCCDu);
  long long v601 = xmmword_1004B7670;
  uint64_t v603 = 0;
  uint64_t v604 = 0;
  uint64_t v602 = 0x3FD999999999999ALL;
  long long v605 = xmmword_1004B7680;
  int v606 = 5;
  uint64_t v607 = 0x4000000000000000;
  int v608 = 10;
  uint64_t v609 = 0x4034000000000000;
  int v610 = 3;
  long long v611 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1204, &v612, (uint64_t)v583);
  sub_10025ADA0((uint64_t)v613, v1204, 1);
  sub_100259B80(v1249, &xmmword_1008A6370, (uint64_t)v613);
  sub_10025C730((uint64_t)v862, v1241, 9);
  int v1293 = 3;
  sub_10025C988(v1294, v862);
  int v580 = 6;
  v551[0] = 8;
  v551[1] = 0xC04E800000000000;
  v1177[0] = -61.0;
  sub_1001A02EC((uint64_t)v552, v1177, 1);
  long long v553 = xmmword_1004B7700;
  uint64_t v554 = 0x4024000000000000;
  int v555 = 45;
  LOBYTE(v556) = 0;
  char v558 = 0;
  uint64_t v559 = 0;
  char v560 = 0;
  int v561 = 1;
  char v562 = 1;
  long long v563 = xmmword_1004B7710;
  long long v564 = xmmword_1004B7720;
  long long v565 = v13;
  unint64_t v566 = 0xC059000000000000;
  long long v567 = xmmword_1004B7730;
  int32x2_t v568 = vdup_n_s32(0x3DCCCCCDu);
  long long v569 = xmmword_1004B7670;
  uint64_t v571 = 0;
  uint64_t v572 = 0;
  uint64_t v570 = 0x3FD999999999999ALL;
  long long v573 = xmmword_1004B7680;
  int v574 = 5;
  uint64_t v575 = 0x4000000000000000;
  int v576 = 10;
  uint64_t v577 = 0x4034000000000000;
  int v578 = 3;
  long long v579 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1181, &v580, (uint64_t)v551);
  sub_10025ADA0((uint64_t)v581, v1181, 1);
  sub_100259B80(v1186, &xmmword_1008A62E0, (uint64_t)v581);
  int v549 = 3;
  v520[0] = 8;
  v520[1] = 0xC04F000000000000;
  v1173[0] = -62.0;
  sub_1001A02EC((uint64_t)v521, v1173, 1);
  long long v522 = xmmword_1004B7700;
  uint64_t v523 = 0x4024000000000000;
  int v524 = 45;
  LOBYTE(v525) = 0;
  char v527 = 0;
  uint64_t v528 = 0;
  char v529 = 0;
  int v530 = 1;
  char v531 = 1;
  long long v532 = xmmword_1004B7710;
  long long v533 = xmmword_1004B7720;
  long long v534 = v13;
  unint64_t v535 = 0xC059000000000000;
  long long v536 = xmmword_1004B7730;
  int32x2_t v537 = vdup_n_s32(0x3DCCCCCDu);
  long long v538 = xmmword_1004B7670;
  uint64_t v540 = 0;
  uint64_t v541 = 0;
  uint64_t v539 = 0x3FD999999999999ALL;
  long long v542 = xmmword_1004B7680;
  int v543 = 5;
  uint64_t v544 = 0x4000000000000000;
  int v545 = 10;
  uint64_t v546 = 0x4034000000000000;
  int v547 = 3;
  long long v548 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1177, &v549, (uint64_t)v520);
  sub_10025ADA0((uint64_t)v550, (int *)v1177, 1);
  sub_100259B80(v1187, &xmmword_1008A62E0, (uint64_t)v550);
  int v518 = 7;
  v489[0] = 8;
  v489[1] = 0xC04E800000000000;
  v1169[0] = -61.0;
  sub_1001A02EC((uint64_t)v490, v1169, 1);
  long long v491 = xmmword_1004B7700;
  uint64_t v492 = 0x4024000000000000;
  int v493 = 45;
  LOBYTE(v494) = 0;
  char v496 = 0;
  uint64_t v497 = 0;
  char v498 = 0;
  int v499 = 1;
  char v500 = 1;
  long long v501 = xmmword_1004B7710;
  long long v502 = xmmword_1004B7720;
  long long v503 = v13;
  unint64_t v504 = 0xC059000000000000;
  long long v505 = xmmword_1004B7730;
  int32x2_t v506 = vdup_n_s32(0x3DCCCCCDu);
  long long v507 = xmmword_1004B7670;
  uint64_t v509 = 0;
  uint64_t v510 = 0;
  uint64_t v508 = 0x3FD999999999999ALL;
  long long v511 = xmmword_1004B7680;
  int v512 = 5;
  uint64_t v513 = 0x4000000000000000;
  int v514 = 10;
  uint64_t v515 = 0x4034000000000000;
  int v516 = 3;
  long long v517 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1173, &v518, (uint64_t)v489);
  sub_10025ADA0((uint64_t)v519, (int *)v1173, 1);
  sub_100259B80(v1188, &xmmword_1008A62E0, (uint64_t)v519);
  int v487 = 6;
  v458[0] = 8;
  v458[1] = 0xC04E800000000000;
  v1165[0] = -61.0;
  sub_1001A02EC((uint64_t)v459, v1165, 1);
  long long v460 = xmmword_1004B7700;
  uint64_t v461 = 0x4024000000000000;
  int v462 = 45;
  LOBYTE(v463) = 0;
  char v465 = 0;
  uint64_t v466 = 0;
  char v467 = 0;
  int v468 = 1;
  char v469 = 1;
  long long v470 = xmmword_1004B7710;
  long long v471 = xmmword_1004B7720;
  long long v472 = v13;
  unint64_t v473 = 0xC059000000000000;
  long long v474 = xmmword_1004B7730;
  int32x2_t v475 = vdup_n_s32(0x3DCCCCCDu);
  long long v476 = xmmword_1004B7670;
  uint64_t v478 = 0;
  uint64_t v479 = 0;
  uint64_t v477 = 0x3FD999999999999ALL;
  long long v480 = xmmword_1004B7680;
  int v481 = 5;
  uint64_t v482 = 0x4000000000000000;
  int v483 = 10;
  uint64_t v484 = 0x4034000000000000;
  int v485 = 3;
  long long v486 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1169, &v487, (uint64_t)v458);
  sub_10025ADA0((uint64_t)v488, (int *)v1169, 1);
  sub_100259B80(v1189, &xmmword_1008A62F8, (uint64_t)v488);
  int v456 = 3;
  v427[0] = 8;
  v427[1] = 0xC04F000000000000;
  v1161[0] = -62.0;
  sub_1001A02EC((uint64_t)v428, v1161, 1);
  long long v429 = xmmword_1004B7700;
  uint64_t v430 = 0x4024000000000000;
  int v431 = 45;
  LOBYTE(v432) = 0;
  char v434 = 0;
  uint64_t v435 = 0;
  char v436 = 0;
  int v437 = 1;
  char v438 = 1;
  long long v439 = xmmword_1004B7710;
  long long v440 = xmmword_1004B7720;
  long long v441 = v13;
  unint64_t v442 = 0xC059000000000000;
  long long v443 = xmmword_1004B7730;
  int32x2_t v444 = vdup_n_s32(0x3DCCCCCDu);
  long long v445 = xmmword_1004B7670;
  uint64_t v447 = 0;
  uint64_t v448 = 0;
  uint64_t v446 = 0x3FD999999999999ALL;
  long long v449 = xmmword_1004B7680;
  int v450 = 5;
  uint64_t v451 = 0x4000000000000000;
  int v452 = 10;
  uint64_t v453 = 0x4034000000000000;
  int v454 = 3;
  long long v455 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1165, &v456, (uint64_t)v427);
  sub_10025ADA0((uint64_t)v457, (int *)v1165, 1);
  sub_100259B80(v1190, &xmmword_1008A62F8, (uint64_t)v457);
  int v425 = 7;
  v396[0] = 8;
  v396[1] = 0xC04E800000000000;
  v1157[0] = -61.0;
  sub_1001A02EC((uint64_t)v397, v1157, 1);
  long long v398 = xmmword_1004B7700;
  uint64_t v399 = 0x4024000000000000;
  int v400 = 45;
  LOBYTE(v401) = 0;
  char v403 = 0;
  uint64_t v404 = 0;
  char v405 = 0;
  int v406 = 1;
  char v407 = 1;
  long long v408 = xmmword_1004B7710;
  long long v409 = xmmword_1004B7720;
  long long v410 = v13;
  unint64_t v411 = 0xC059000000000000;
  long long v412 = xmmword_1004B7730;
  int32x2_t v413 = vdup_n_s32(0x3DCCCCCDu);
  long long v414 = xmmword_1004B7670;
  uint64_t v416 = 0;
  uint64_t v417 = 0;
  uint64_t v415 = 0x3FD999999999999ALL;
  long long v418 = xmmword_1004B7680;
  int v419 = 5;
  uint64_t v420 = 0x4000000000000000;
  int v421 = 10;
  uint64_t v422 = 0x4034000000000000;
  int v423 = 3;
  long long v424 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1161, &v425, (uint64_t)v396);
  sub_10025ADA0((uint64_t)v426, (int *)v1161, 1);
  sub_100259B80(v1191, &xmmword_1008A62F8, (uint64_t)v426);
  int v394 = 6;
  v365[0] = 8;
  v365[1] = 0xC04E800000000000;
  v1153[0] = -61.0;
  sub_1001A02EC((uint64_t)v366, v1153, 1);
  long long v367 = xmmword_1004B7700;
  uint64_t v368 = 0x4024000000000000;
  int v369 = 45;
  LOBYTE(v370) = 0;
  char v372 = 0;
  uint64_t v373 = 0;
  char v374 = 0;
  int v375 = 1;
  char v376 = 1;
  long long v377 = xmmword_1004B7710;
  long long v378 = xmmword_1004B7720;
  long long v379 = v13;
  unint64_t v380 = 0xC059000000000000;
  long long v381 = xmmword_1004B7730;
  int32x2_t v382 = vdup_n_s32(0x3DCCCCCDu);
  long long v383 = xmmword_1004B7670;
  uint64_t v385 = 0;
  uint64_t v386 = 0;
  uint64_t v384 = 0x3FD999999999999ALL;
  long long v387 = xmmword_1004B7680;
  int v388 = 5;
  uint64_t v389 = 0x4000000000000000;
  int v390 = 10;
  uint64_t v391 = 0x4034000000000000;
  int v392 = 3;
  long long v393 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1157, &v394, (uint64_t)v365);
  sub_10025ADA0((uint64_t)v395, (int *)v1157, 1);
  sub_100259B80(v1192, &xmmword_1008A6310, (uint64_t)v395);
  int v363 = 3;
  v334[0] = 8;
  v334[1] = 0xC04F000000000000;
  v1149[0] = -62.0;
  sub_1001A02EC((uint64_t)v335, v1149, 1);
  long long v336 = xmmword_1004B7700;
  uint64_t v337 = 0x4024000000000000;
  int v338 = 45;
  LOBYTE(v339) = 0;
  char v341 = 0;
  uint64_t v342 = 0;
  char v343 = 0;
  int v344 = 1;
  char v345 = 1;
  long long v346 = xmmword_1004B7710;
  long long v347 = xmmword_1004B7720;
  long long v348 = v13;
  unint64_t v349 = 0xC059000000000000;
  long long v350 = xmmword_1004B7730;
  int32x2_t v351 = vdup_n_s32(0x3DCCCCCDu);
  long long v352 = xmmword_1004B7670;
  uint64_t v354 = 0;
  uint64_t v355 = 0;
  uint64_t v353 = 0x3FD999999999999ALL;
  long long v356 = xmmword_1004B7680;
  int v357 = 5;
  uint64_t v358 = 0x4000000000000000;
  int v359 = 10;
  uint64_t v360 = 0x4034000000000000;
  int v361 = 3;
  long long v362 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1153, &v363, (uint64_t)v334);
  sub_10025ADA0((uint64_t)v364, (int *)v1153, 1);
  sub_100259B80(v1193, &xmmword_1008A6310, (uint64_t)v364);
  int v331 = 7;
  v302[0] = 8;
  v302[1] = 0xC04E800000000000;
  v1145[0] = -61.0;
  sub_1001A02EC((uint64_t)v303, v1145, 1);
  long long v304 = xmmword_1004B7700;
  uint64_t v305 = 0x4024000000000000;
  int v306 = 45;
  LOBYTE(v307) = 0;
  char v309 = 0;
  uint64_t v310 = 0;
  char v311 = 0;
  int v312 = 1;
  char v313 = 1;
  long long v314 = xmmword_1004B7710;
  long long v315 = xmmword_1004B7720;
  long long v316 = v13;
  unint64_t v317 = 0xC059000000000000;
  long long v318 = xmmword_1004B7730;
  int32x2_t v319 = vdup_n_s32(0x3DCCCCCDu);
  long long v320 = xmmword_1004B7670;
  uint64_t v322 = 0;
  uint64_t v323 = 0;
  uint64_t v321 = 0x3FD999999999999ALL;
  long long v324 = xmmword_1004B7680;
  int v325 = 5;
  uint64_t v326 = 0x4000000000000000;
  int v327 = 10;
  uint64_t v328 = 0x4034000000000000;
  int v329 = 3;
  long long v330 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1149, &v331, (uint64_t)v302);
  sub_10025ADA0((uint64_t)v332, (int *)v1149, 1);
  sub_100259B80(v1194, &xmmword_1008A6310, (uint64_t)v332);
  int v299 = 6;
  v270[0] = 8;
  v270[1] = 0xC04E800000000000;
  v1141[0] = -61.0;
  sub_1001A02EC((uint64_t)v271, v1141, 1);
  long long v272 = xmmword_1004B7700;
  uint64_t v273 = 0x4024000000000000;
  int v274 = 45;
  LOBYTE(v275) = 0;
  char v277 = 0;
  uint64_t v278 = 0;
  char v279 = 0;
  int v280 = 1;
  char v281 = 1;
  long long v282 = xmmword_1004B7710;
  long long v283 = xmmword_1004B7720;
  long long v284 = v13;
  unint64_t v285 = 0xC059000000000000;
  long long v286 = xmmword_1004B7730;
  int32x2_t v287 = vdup_n_s32(0x3DCCCCCDu);
  long long v288 = xmmword_1004B7670;
  uint64_t v290 = 0;
  uint64_t v291 = 0;
  uint64_t v289 = 0x3FD999999999999ALL;
  long long v292 = xmmword_1004B7680;
  int v293 = 5;
  uint64_t v294 = 0x4000000000000000;
  int v295 = 10;
  uint64_t v296 = 0x4034000000000000;
  int v297 = 3;
  long long v298 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1145, &v299, (uint64_t)v270);
  sub_10025ADA0((uint64_t)v300, (int *)v1145, 1);
  sub_100259B80(v1195, &xmmword_1008A6328, (uint64_t)v300);
  int v267 = 4;
  v238[0] = 8;
  v238[1] = 0xC04E800000000000;
  v1137[0] = -61.0;
  sub_1001A02EC((uint64_t)v239, v1137, 1);
  long long v240 = xmmword_1004B7700;
  uint64_t v241 = 0x4024000000000000;
  int v242 = 45;
  LOBYTE(v243) = 0;
  char v245 = 0;
  uint64_t v246 = 0;
  char v247 = 0;
  int v248 = 1;
  char v249 = 1;
  long long v250 = xmmword_1004B7710;
  long long v251 = xmmword_1004B7720;
  long long v252 = v13;
  unint64_t v253 = 0xC059000000000000;
  long long v254 = xmmword_1004B7730;
  int32x2_t v255 = vdup_n_s32(0x3DCCCCCDu);
  long long v256 = xmmword_1004B7670;
  uint64_t v258 = 0;
  uint64_t v259 = 0;
  uint64_t v257 = 0x3FD999999999999ALL;
  long long v260 = xmmword_1004B7680;
  int v261 = 5;
  uint64_t v262 = 0x4000000000000000;
  int v263 = 10;
  uint64_t v264 = 0x4034000000000000;
  int v265 = 3;
  long long v266 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1141, &v267, (uint64_t)v238);
  sub_10025ADA0((uint64_t)v268, (int *)v1141, 1);
  sub_100259B80(v1196, &xmmword_1008A6328, (uint64_t)v268);
  int v235 = 7;
  v206[0] = 8;
  v206[1] = 0xC04E800000000000;
  v1133[0] = -61.0;
  sub_1001A02EC((uint64_t)v207, v1133, 1);
  long long v208 = xmmword_1004B7700;
  uint64_t v209 = 0x4024000000000000;
  int v210 = 45;
  LOBYTE(v211) = 0;
  char v213 = 0;
  uint64_t v214 = 0;
  char v215 = 0;
  int v216 = 1;
  char v217 = 1;
  long long v218 = xmmword_1004B7710;
  long long v219 = xmmword_1004B7720;
  long long v220 = v13;
  unint64_t v221 = 0xC059000000000000;
  long long v222 = xmmword_1004B7730;
  int32x2_t v223 = vdup_n_s32(0x3DCCCCCDu);
  long long v224 = xmmword_1004B7670;
  uint64_t v226 = 0;
  uint64_t v227 = 0;
  uint64_t v225 = 0x3FD999999999999ALL;
  long long v228 = xmmword_1004B7680;
  int v229 = 5;
  uint64_t v230 = 0x4000000000000000;
  int v231 = 10;
  uint64_t v232 = 0x4034000000000000;
  int v233 = 3;
  long long v234 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1137, &v235, (uint64_t)v206);
  sub_10025ADA0((uint64_t)v236, (int *)v1137, 1);
  sub_100259B80(v1197, &xmmword_1008A6328, (uint64_t)v236);
  int v203 = 6;
  v174[0] = 8;
  v174[1] = 0xC04E800000000000;
  v1129[0] = -61.0;
  sub_1001A02EC((uint64_t)v175, v1129, 1);
  long long v176 = xmmword_1004B7700;
  uint64_t v177 = 0x4024000000000000;
  int v178 = 45;
  LOBYTE(v179) = 0;
  char v181 = 0;
  uint64_t v182 = 0;
  char v183 = 0;
  int v184 = 1;
  char v185 = 1;
  long long v186 = xmmword_1004B7710;
  long long v187 = xmmword_1004B7720;
  long long v188 = v13;
  unint64_t v189 = 0xC059000000000000;
  long long v190 = xmmword_1004B7730;
  int32x2_t v191 = vdup_n_s32(0x3DCCCCCDu);
  long long v192 = xmmword_1004B7670;
  uint64_t v194 = 0;
  uint64_t v195 = 0;
  uint64_t v193 = 0x3FD999999999999ALL;
  long long v196 = xmmword_1004B7680;
  int v197 = 5;
  uint64_t v198 = 0x4000000000000000;
  int v199 = 10;
  uint64_t v200 = 0x4034000000000000;
  int v201 = 3;
  long long v202 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1133, &v203, (uint64_t)v174);
  sub_10025ADA0((uint64_t)v204, (int *)v1133, 1);
  sub_100259B80(v1198, &xmmword_1008A6358, (uint64_t)v204);
  int v171 = 4;
  v142[0] = 8;
  v142[1] = 0xC04E800000000000;
  v1125[0] = -61.0;
  sub_1001A02EC((uint64_t)v143, v1125, 1);
  long long v144 = xmmword_1004B7700;
  uint64_t v145 = 0x4024000000000000;
  int v146 = 45;
  LOBYTE(v147) = 0;
  char v149 = 0;
  uint64_t v150 = 0;
  char v151 = 0;
  int v152 = 1;
  char v153 = 1;
  long long v154 = xmmword_1004B7710;
  long long v155 = xmmword_1004B7720;
  long long v156 = v13;
  unint64_t v157 = 0xC059000000000000;
  long long v158 = xmmword_1004B7730;
  int32x2_t v159 = vdup_n_s32(0x3DCCCCCDu);
  long long v160 = xmmword_1004B7670;
  uint64_t v162 = 0;
  uint64_t v163 = 0;
  uint64_t v161 = 0x3FD999999999999ALL;
  long long v164 = xmmword_1004B7680;
  int v165 = 5;
  uint64_t v166 = 0x4000000000000000;
  int v167 = 10;
  uint64_t v168 = 0x4034000000000000;
  int v169 = 3;
  long long v170 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1129, &v171, (uint64_t)v142);
  sub_10025ADA0((uint64_t)v172, (int *)v1129, 1);
  sub_100259B80(v1199, &xmmword_1008A6358, (uint64_t)v172);
  int v139 = 7;
  v110[0] = 8;
  v110[1] = 0xC04E800000000000;
  v1121[0] = -61.0;
  sub_1001A02EC((uint64_t)v111, v1121, 1);
  long long v112 = xmmword_1004B7700;
  uint64_t v113 = 0x4024000000000000;
  int v114 = 45;
  LOBYTE(v115) = 0;
  char v117 = 0;
  uint64_t v118 = 0;
  char v119 = 0;
  int v120 = 1;
  char v121 = 1;
  long long v122 = xmmword_1004B7710;
  long long v123 = xmmword_1004B7720;
  long long v124 = v13;
  unint64_t v125 = 0xC059000000000000;
  long long v126 = xmmword_1004B7730;
  int32x2_t v127 = vdup_n_s32(0x3DCCCCCDu);
  long long v128 = xmmword_1004B7670;
  uint64_t v130 = 0;
  uint64_t v131 = 0;
  uint64_t v129 = 0x3FD999999999999ALL;
  long long v132 = xmmword_1004B7680;
  int v133 = 5;
  uint64_t v134 = 0x4000000000000000;
  int v135 = 10;
  uint64_t v136 = 0x4034000000000000;
  int v137 = 3;
  long long v138 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1125, &v139, (uint64_t)v110);
  sub_10025ADA0((uint64_t)v140, (int *)v1125, 1);
  sub_100259B80(v1200, &xmmword_1008A6358, (uint64_t)v140);
  int v107 = 6;
  v78[0] = 8;
  v78[1] = 0xC04E800000000000;
  v1117[0] = -61.0;
  sub_1001A02EC((uint64_t)v79, v1117, 1);
  long long v80 = xmmword_1004B7700;
  uint64_t v81 = 0x4024000000000000;
  int v82 = 45;
  LOBYTE(v83) = 0;
  char v85 = 0;
  uint64_t v86 = 0;
  char v87 = 0;
  int v88 = 1;
  char v89 = 1;
  long long v90 = xmmword_1004B7710;
  long long v91 = xmmword_1004B7720;
  long long v92 = v13;
  unint64_t v93 = 0xC059000000000000;
  long long v94 = xmmword_1004B7730;
  int32x2_t v95 = vdup_n_s32(0x3DCCCCCDu);
  long long v96 = xmmword_1004B7670;
  uint64_t v98 = 0;
  uint64_t v99 = 0;
  uint64_t v97 = 0x3FD999999999999ALL;
  long long v100 = xmmword_1004B7680;
  int v101 = 5;
  uint64_t v102 = 0x4000000000000000;
  int v103 = 10;
  uint64_t v104 = 0x4034000000000000;
  int v105 = 3;
  long long v106 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1121, &v107, (uint64_t)v78);
  sub_10025ADA0((uint64_t)v108, (int *)v1121, 1);
  sub_100259B80(v1201, &xmmword_1008A6370, (uint64_t)v108);
  int v75 = 4;
  v46[0] = 8;
  v46[1] = 0xC04E800000000000;
  v1113[0] = -61.0;
  sub_1001A02EC((uint64_t)v47, v1113, 1);
  long long v48 = xmmword_1004B7700;
  uint64_t v49 = 0x4024000000000000;
  int v50 = 45;
  LOBYTE(v51) = 0;
  char v53 = 0;
  uint64_t v54 = 0;
  char v55 = 0;
  int v56 = 1;
  char v57 = 1;
  long long v58 = xmmword_1004B7710;
  long long v59 = xmmword_1004B7720;
  long long v60 = v13;
  unint64_t v61 = 0xC059000000000000;
  long long v62 = xmmword_1004B7730;
  int32x2_t v63 = vdup_n_s32(0x3DCCCCCDu);
  long long v64 = xmmword_1004B7670;
  uint64_t v66 = 0;
  uint64_t v67 = 0;
  uint64_t v65 = 0x3FD999999999999ALL;
  long long v68 = xmmword_1004B7680;
  int v69 = 5;
  uint64_t v70 = 0x4000000000000000;
  int v71 = 10;
  uint64_t v72 = 0x4034000000000000;
  int v73 = 3;
  long long v74 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1117, &v75, (uint64_t)v46);
  sub_10025ADA0((uint64_t)v76, (int *)v1117, 1);
  sub_100259B80(v1202, &xmmword_1008A6370, (uint64_t)v76);
  int v43 = 7;
  v14[0] = 8;
  v14[1] = 0xC04E800000000000;
  double v1112 = -61.0;
  sub_1001A02EC((uint64_t)v15, &v1112, 1);
  long long v16 = xmmword_1004B7700;
  uint64_t v17 = 0x4024000000000000;
  int v18 = 45;
  LOBYTE(__p) = 0;
  char v21 = 0;
  uint64_t v22 = 0;
  char v23 = 0;
  int v24 = 1;
  char v25 = 1;
  long long v26 = xmmword_1004B7710;
  long long v27 = xmmword_1004B7720;
  long long v28 = v13;
  unint64_t v29 = 0xC059000000000000;
  long long v30 = xmmword_1004B7730;
  int32x2_t v31 = vdup_n_s32(0x3DCCCCCDu);
  long long v32 = xmmword_1004B7670;
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  uint64_t v33 = 0x3FD999999999999ALL;
  long long v36 = xmmword_1004B7680;
  int v37 = 5;
  uint64_t v38 = 0x4000000000000000;
  int v39 = 10;
  uint64_t v40 = 0x4034000000000000;
  int v41 = 3;
  long long v42 = xmmword_1004B7740;
  sub_100259910((uint64_t)v1113, &v43, (uint64_t)v14);
  sub_10025ADA0((uint64_t)v44, (int *)v1113, 1);
  sub_100259B80(v1203, &xmmword_1008A6370, (uint64_t)v44);
  sub_10025C730((uint64_t)v582, v1186, 18);
  int v1295 = 4;
  sub_10025C988(v1296, v582);
  sub_10025CA6C((uint64_t)&unk_1008AC558, &v1291, 3);
  for (uint64_t i = 0; i != -12; i -= 4)
    sub_10025C680((uint64_t)&v1296[i], (void *)v1296[i + 1]);
  sub_10025C680((uint64_t)v582, v582[1]);
  uint64_t v9 = 864;
  do
  {
    sub_10025ACF4((uint64_t)&v1185[v9 + 24], *(void **)&v1185[v9 + 32]);
    if ((char)v1185[v9 + 23] < 0) {
      operator delete(*(void **)&v1185[v9]);
    }
    v9 -= 48;
  }
  while (v9);
  sub_10025ACF4((uint64_t)v44, v45);
  if (v1116 && v1115 < 0) {
    operator delete(v1114[7]);
  }
  sub_10003E96C((uint64_t)v1114, v1114[1]);
  if (v21 && v20 < 0) {
    operator delete(__p);
  }
  sub_10003E96C((uint64_t)v15, v15[1]);
  sub_10025ACF4((uint64_t)v76, v77);
  if (v1120 && v1119 < 0) {
    operator delete(v1118[7]);
  }
  sub_10003E96C((uint64_t)v1118, v1118[1]);
  if (v53 && v52 < 0) {
    operator delete(v51);
  }
  sub_10003E96C((uint64_t)v47, v47[1]);
  sub_10025ACF4((uint64_t)v108, v109);
  if (v1124 && v1123 < 0) {
    operator delete(v1122[7]);
  }
  sub_10003E96C((uint64_t)v1122, v1122[1]);
  if (v85 && v84 < 0) {
    operator delete(v83);
  }
  sub_10003E96C((uint64_t)v79, v79[1]);
  sub_10025ACF4((uint64_t)v140, v141);
  if (v1128 && v1127 < 0) {
    operator delete(v1126[7]);
  }
  sub_10003E96C((uint64_t)v1126, v1126[1]);
  if (v117 && v116 < 0) {
    operator delete(v115);
  }
  sub_10003E96C((uint64_t)v111, v111[1]);
  sub_10025ACF4((uint64_t)v172, v173);
  if (v1132 && v1131 < 0) {
    operator delete(v1130[7]);
  }
  sub_10003E96C((uint64_t)v1130, v1130[1]);
  if (v149 && v148 < 0) {
    operator delete(v147);
  }
  sub_10003E96C((uint64_t)v143, v143[1]);
  sub_10025ACF4((uint64_t)v204, v205);
  if (v1136 && v1135 < 0) {
    operator delete(v1134[7]);
  }
  sub_10003E96C((uint64_t)v1134, v1134[1]);
  if (v181 && v180 < 0) {
    operator delete(v179);
  }
  sub_10003E96C((uint64_t)v175, v175[1]);
  sub_10025ACF4((uint64_t)v236, v237);
  if (v1140 && v1139 < 0) {
    operator delete(v1138[7]);
  }
  sub_10003E96C((uint64_t)v1138, v1138[1]);
  if (v213 && v212 < 0) {
    operator delete(v211);
  }
  sub_10003E96C((uint64_t)v207, v207[1]);
  sub_10025ACF4((uint64_t)v268, v269);
  if (v1144 && v1143 < 0) {
    operator delete(v1142[7]);
  }
  sub_10003E96C((uint64_t)v1142, v1142[1]);
  if (v245 && v244 < 0) {
    operator delete(v243);
  }
  sub_10003E96C((uint64_t)v239, v239[1]);
  sub_10025ACF4((uint64_t)v300, v301);
  if (v1148 && v1147 < 0) {
    operator delete(v1146[7]);
  }
  sub_10003E96C((uint64_t)v1146, v1146[1]);
  if (v277 && v276 < 0) {
    operator delete(v275);
  }
  sub_10003E96C((uint64_t)v271, v271[1]);
  sub_10025ACF4((uint64_t)v332, v333);
  if (v1152 && v1151 < 0) {
    operator delete(v1150[7]);
  }
  sub_10003E96C((uint64_t)v1150, v1150[1]);
  if (v309 && v308 < 0) {
    operator delete(v307);
  }
  sub_10003E96C((uint64_t)v303, v303[1]);
  sub_10025ACF4((uint64_t)v364, v364[1]);
  if (v1156 && v1155 < 0) {
    operator delete(v1154[7]);
  }
  sub_10003E96C((uint64_t)v1154, v1154[1]);
  if (v341 && v340 < 0) {
    operator delete(v339);
  }
  sub_10003E96C((uint64_t)v335, v335[1]);
  sub_10025ACF4((uint64_t)v395, v395[1]);
  if (v1160 && v1159 < 0) {
    operator delete(v1158[7]);
  }
  sub_10003E96C((uint64_t)v1158, v1158[1]);
  if (v372 && v371 < 0) {
    operator delete(v370);
  }
  sub_10003E96C((uint64_t)v366, v366[1]);
  sub_10025ACF4((uint64_t)v426, v426[1]);
  if (v1164 && v1163 < 0) {
    operator delete(v1162[7]);
  }
  sub_10003E96C((uint64_t)v1162, v1162[1]);
  if (v403 && v402 < 0) {
    operator delete(v401);
  }
  sub_10003E96C((uint64_t)v397, v397[1]);
  sub_10025ACF4((uint64_t)v457, v457[1]);
  if (v1168 && v1167 < 0) {
    operator delete(v1166[7]);
  }
  sub_10003E96C((uint64_t)v1166, v1166[1]);
  if (v434 && v433 < 0) {
    operator delete(v432);
  }
  sub_10003E96C((uint64_t)v428, v428[1]);
  sub_10025ACF4((uint64_t)v488, v488[1]);
  if (v1172 && v1171 < 0) {
    operator delete(v1170[7]);
  }
  sub_10003E96C((uint64_t)v1170, v1170[1]);
  if (v465 && v464 < 0) {
    operator delete(v463);
  }
  sub_10003E96C((uint64_t)v459, v459[1]);
  sub_10025ACF4((uint64_t)v519, v519[1]);
  if (v1176 && v1175 < 0) {
    operator delete(v1174[7]);
  }
  sub_10003E96C((uint64_t)v1174, v1174[1]);
  if (v496 && v495 < 0) {
    operator delete(v494);
  }
  sub_10003E96C((uint64_t)v490, v490[1]);
  sub_10025ACF4((uint64_t)v550, v550[1]);
  if (v1180 && v1179 < 0) {
    operator delete(v1178[7]);
  }
  sub_10003E96C((uint64_t)v1178, v1178[1]);
  if (v527 && v526 < 0) {
    operator delete(v525);
  }
  sub_10003E96C((uint64_t)v521, v521[1]);
  sub_10025ACF4((uint64_t)v581, v581[1]);
  if (v1184 && v1183 < 0) {
    operator delete(v1182[7]);
  }
  sub_10003E96C((uint64_t)v1182, v1182[1]);
  if (v558 && v557 < 0) {
    operator delete(v556);
  }
  sub_10003E96C((uint64_t)v552, v552[1]);
  sub_10025C680((uint64_t)v862, v862[1]);
  uint64_t v10 = 432;
  do
  {
    sub_10025ACF4((uint64_t)&v1240[v10 + 24], *(void **)&v1240[v10 + 32]);
    if ((char)v1240[v10 + 23] < 0) {
      operator delete(*(void **)&v1240[v10]);
    }
    v10 -= 48;
  }
  while (v10);
  sub_10025ACF4((uint64_t)v613, v613[1]);
  if (v1207 && v1206 < 0) {
    operator delete(v1205[7]);
  }
  sub_10003E96C((uint64_t)v1205, v1205[1]);
  if (v590 && v589 < 0) {
    operator delete(v588);
  }
  sub_10003E96C((uint64_t)v584, v584[1]);
  sub_10025ACF4((uint64_t)v644, v644[1]);
  if (v1211 && v1210 < 0) {
    operator delete(v1209[7]);
  }
  sub_10003E96C((uint64_t)v1209, v1209[1]);
  if (v621 && v620 < 0) {
    operator delete(v619);
  }
  sub_10003E96C((uint64_t)v615, v615[1]);
  sub_10025ACF4((uint64_t)v675, v675[1]);
  if (v1215 && v1214 < 0) {
    operator delete(v1213[7]);
  }
  sub_10003E96C((uint64_t)v1213, v1213[1]);
  if (v652 && v651 < 0) {
    operator delete(v650);
  }
  sub_10003E96C((uint64_t)v646, v646[1]);
  sub_10025ACF4((uint64_t)v706, v706[1]);
  if (v1219 && v1218 < 0) {
    operator delete(v1217[7]);
  }
  sub_10003E96C((uint64_t)v1217, v1217[1]);
  if (v683 && v682 < 0) {
    operator delete(v681);
  }
  sub_10003E96C((uint64_t)v677, v677[1]);
  sub_10025ACF4((uint64_t)v737, v737[1]);
  if (v1223 && v1222 < 0) {
    operator delete(v1221[7]);
  }
  sub_10003E96C((uint64_t)v1221, v1221[1]);
  if (v714 && v713 < 0) {
    operator delete(v712);
  }
  sub_10003E96C((uint64_t)v708, v708[1]);
  sub_10025ACF4((uint64_t)v768, v768[1]);
  if (v1227 && v1226 < 0) {
    operator delete(v1225[7]);
  }
  sub_10003E96C((uint64_t)v1225, v1225[1]);
  if (v745 && v744 < 0) {
    operator delete(v743);
  }
  sub_10003E96C((uint64_t)v739, v739[1]);
  sub_10025ACF4((uint64_t)v799, v799[1]);
  if (v1231 && v1230 < 0) {
    operator delete(v1229[7]);
  }
  sub_10003E96C((uint64_t)v1229, v1229[1]);
  if (v776 && v775 < 0) {
    operator delete(v774);
  }
  sub_10003E96C((uint64_t)v770, v770[1]);
  sub_10025ACF4((uint64_t)v830, v830[1]);
  if (v1235 && v1234 < 0) {
    operator delete(v1233[7]);
  }
  sub_10003E96C((uint64_t)v1233, v1233[1]);
  if (v807 && v806 < 0) {
    operator delete(v805);
  }
  sub_10003E96C((uint64_t)v801, v801[1]);
  sub_10025ACF4((uint64_t)v861, v861[1]);
  if (v1239 && v1238 < 0) {
    operator delete(v1237[7]);
  }
  sub_10003E96C((uint64_t)v1237, v1237[1]);
  if (v838 && v837 < 0) {
    operator delete(v836);
  }
  sub_10003E96C((uint64_t)v832, v832[1]);
  sub_10025C680((uint64_t)v1111, v1111[1]);
  uint64_t v11 = 384;
  do
  {
    sub_10025ACF4((uint64_t)&v1282[v11 + 24], *(void **)&v1282[v11 + 32]);
    if ((char)v1282[v11 + 23] < 0) {
      operator delete(*(void **)&v1282[v11]);
    }
    v11 -= 48;
  }
  while (v11);
  sub_10025ACF4((uint64_t)v893, v893[1]);
  if (v1253 && v1252 < 0) {
    operator delete(v1251[7]);
  }
  sub_10003E96C((uint64_t)v1251, v1251[1]);
  if (v870 && v869 < 0) {
    operator delete(v868);
  }
  sub_10003E96C((uint64_t)v864, v864[1]);
  sub_10025ACF4((uint64_t)v924, v924[1]);
  if (v1257 && v1256 < 0) {
    operator delete(v1255[7]);
  }
  sub_10003E96C((uint64_t)v1255, v1255[1]);
  if (v901 && v900 < 0) {
    operator delete(v899);
  }
  sub_10003E96C((uint64_t)v895, v895[1]);
  sub_10025ACF4((uint64_t)v955, v955[1]);
  if (v1261 && v1260 < 0) {
    operator delete(v1259[7]);
  }
  sub_10003E96C((uint64_t)v1259, v1259[1]);
  if (v932 && v931 < 0) {
    operator delete(v930);
  }
  sub_10003E96C((uint64_t)v926, v926[1]);
  sub_10025ACF4((uint64_t)v986, v986[1]);
  if (v1265 && v1264 < 0) {
    operator delete(v1263[7]);
  }
  sub_10003E96C((uint64_t)v1263, v1263[1]);
  if (v963 && v962 < 0) {
    operator delete(v961);
  }
  sub_10003E96C((uint64_t)v957, v957[1]);
  sub_10025ACF4((uint64_t)v1017, v1017[1]);
  if (v1269 && v1268 < 0) {
    operator delete(v1267[7]);
  }
  sub_10003E96C((uint64_t)v1267, v1267[1]);
  if (v994 && v993 < 0) {
    operator delete(v992);
  }
  sub_10003E96C((uint64_t)v988, v988[1]);
  sub_10025ACF4((uint64_t)v1048, v1048[1]);
  if (v1273 && v1272 < 0) {
    operator delete(v1271[7]);
  }
  sub_10003E96C((uint64_t)v1271, v1271[1]);
  if (v1025 && v1024 < 0) {
    operator delete(v1023);
  }
  sub_10003E96C((uint64_t)v1019, v1019[1]);
  sub_10025ACF4((uint64_t)v1079, v1079[1]);
  if (v1277 && v1276 < 0) {
    operator delete(v1275[7]);
  }
  sub_10003E96C((uint64_t)v1275, v1275[1]);
  if (v1056 && v1055 < 0) {
    operator delete(v1054);
  }
  sub_10003E96C((uint64_t)v1050, v1050[1]);
  sub_10025ACF4((uint64_t)v1110, v1110[1]);
  if (v1281 && v1280 < 0) {
    operator delete(v1279[7]);
  }
  sub_10003E96C((uint64_t)v1279, v1279[1]);
  if (v1087 && v1086 < 0) {
    operator delete(v1085);
  }
  sub_10003E96C((uint64_t)v1081, v1081[1]);
  return __cxa_atexit((void (*)(void *))sub_1002562FC, &unk_1008AC558, (void *)&_mh_execute_header);
}

void sub_1002697AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,_Unwind_Exception *exception_objecta,uint64_t a58,uint64_t a59,char a60)
{
  for (uint64_t i = 0; i != -96; i -= 32)
    sub_10025C680(v65 + i + 72, *(void **)(v65 + i + 80));
  sub_10025C680((uint64_t)&STACK[0x1AE0], (void *)STACK[0x1AE8]);
  for (uint64_t j = 816; j != -48; j -= 48)
    sub_1002562BC((uint64_t)&STACK[0x4A28] + j);
  sub_10025ACF4((uint64_t)&STACK[0x2E0], *(void **)(v60 + 336));
  sub_100256158((uint64_t)&STACK[0x3318]);
  sub_1002560E4((uint64_t)&a60);
  sub_10025ACF4((uint64_t)&STACK[0x448], *(void **)(v64 + 336));
  sub_100256158((uint64_t)&STACK[0x3460]);
  sub_1002560E4((uint64_t)&STACK[0x300]);
  sub_10025ACF4((uint64_t)&STACK[0x5B0], *(void **)(v63 + 336));
  sub_100256158((uint64_t)&STACK[0x35A8]);
  sub_1002560E4((uint64_t)&STACK[0x468]);
  sub_10025ACF4((uint64_t)&STACK[0x718], *(void **)(v62 + 336));
  sub_100256158((uint64_t)&STACK[0x36F0]);
  sub_1002560E4((uint64_t)&STACK[0x5D0]);
  sub_10025ACF4((uint64_t)&STACK[0x880], *(void **)(v61 + 336));
  sub_100256158((uint64_t)&STACK[0x3838]);
  sub_1002560E4((uint64_t)&STACK[0x738]);
  sub_10025ACF4((uint64_t)&STACK[0x9E8], (void *)STACK[0x9F0]);
  sub_100256158((uint64_t)&STACK[0x3980]);
  sub_1002560E4((uint64_t)&STACK[0x8A0]);
  sub_10025ACF4((uint64_t)&STACK[0xB50], (void *)STACK[0xB58]);
  sub_100256158((uint64_t)&STACK[0x3AC8]);
  sub_1002560E4((uint64_t)&STACK[0xA08]);
  sub_10025ACF4((uint64_t)&STACK[0xCB8], (void *)STACK[0xCC0]);
  sub_100256158((uint64_t)&STACK[0x3C10]);
  sub_1002560E4((uint64_t)&STACK[0xB70]);
  sub_10025ACF4((uint64_t)&STACK[0xE20], (void *)STACK[0xE28]);
  sub_100256158((uint64_t)&STACK[0x3D58]);
  sub_1002560E4((uint64_t)&STACK[0xCD8]);
  sub_10025ACF4((uint64_t)&STACK[0xF88], (void *)STACK[0xF90]);
  sub_100256158((uint64_t)&STACK[0x3EA0]);
  sub_1002560E4((uint64_t)&STACK[0xE40]);
  sub_10025ACF4((uint64_t)&STACK[0x10F0], (void *)STACK[0x10F8]);
  sub_100256158((uint64_t)&STACK[0x3FE8]);
  sub_1002560E4((uint64_t)&STACK[0xFA8]);
  sub_10025ACF4((uint64_t)&STACK[0x1258], (void *)STACK[0x1260]);
  sub_100256158((uint64_t)&STACK[0x4130]);
  sub_1002560E4((uint64_t)&STACK[0x1110]);
  sub_10025ACF4((uint64_t)&STACK[0x13C0], (void *)STACK[0x13C8]);
  sub_100256158((uint64_t)&STACK[0x4278]);
  sub_1002560E4((uint64_t)&STACK[0x1278]);
  sub_10025ACF4((uint64_t)&STACK[0x1528], (void *)STACK[0x1530]);
  sub_100256158((uint64_t)&STACK[0x43C0]);
  sub_1002560E4((uint64_t)&STACK[0x13E0]);
  sub_10025ACF4((uint64_t)&STACK[0x1690], (void *)STACK[0x1698]);
  sub_100256158((uint64_t)&STACK[0x4508]);
  sub_1002560E4((uint64_t)&STACK[0x1548]);
  sub_10025ACF4((uint64_t)&STACK[0x17F8], (void *)STACK[0x1800]);
  sub_100256158((uint64_t)&STACK[0x4650]);
  sub_1002560E4((uint64_t)&STACK[0x16B0]);
  sub_10025ACF4((uint64_t)&STACK[0x1960], (void *)STACK[0x1968]);
  sub_100256158((uint64_t)&STACK[0x4798]);
  sub_1002560E4((uint64_t)&STACK[0x1818]);
  sub_10025ACF4((uint64_t)&STACK[0x1AC8], (void *)STACK[0x1AD0]);
  sub_100256158((uint64_t)&STACK[0x48E0]);
  sub_1002560E4((uint64_t)&STACK[0x1980]);
  sub_10025C680((uint64_t)&STACK[0x27A0], (void *)STACK[0x27A8]);
  for (uint64_t k = 384; k != -48; k -= 48)
    sub_1002562BC((uint64_t)&STACK[0x5910] + k);
  sub_10025ACF4((uint64_t)&STACK[0x1C48], (void *)STACK[0x1C50]);
  sub_100256158((uint64_t)&STACK[0x4D88]);
  sub_1002560E4((uint64_t)&STACK[0x1B00]);
  sub_10025ACF4((uint64_t)&STACK[0x1DB0], (void *)STACK[0x1DB8]);
  sub_100256158((uint64_t)&STACK[0x4ED0]);
  sub_1002560E4((uint64_t)&STACK[0x1C68]);
  sub_10025ACF4((uint64_t)&STACK[0x1F18], (void *)STACK[0x1F20]);
  sub_100256158((uint64_t)&STACK[0x5018]);
  sub_1002560E4((uint64_t)&STACK[0x1DD0]);
  sub_10025ACF4((uint64_t)&STACK[0x2080], (void *)STACK[0x2088]);
  sub_100256158((uint64_t)&STACK[0x5160]);
  sub_1002560E4((uint64_t)&STACK[0x1F38]);
  sub_10025ACF4((uint64_t)&STACK[0x21E8], (void *)STACK[0x21F0]);
  sub_100256158((uint64_t)&STACK[0x52A8]);
  sub_1002560E4((uint64_t)&STACK[0x20A0]);
  sub_10025ACF4((uint64_t)&STACK[0x2350], (void *)STACK[0x2358]);
  sub_100256158((uint64_t)&STACK[0x53F0]);
  sub_1002560E4((uint64_t)&STACK[0x2208]);
  sub_10025ACF4((uint64_t)&STACK[0x24B8], (void *)STACK[0x24C0]);
  sub_100256158((uint64_t)&STACK[0x5538]);
  sub_1002560E4((uint64_t)&STACK[0x2370]);
  sub_10025ACF4((uint64_t)&STACK[0x2620], (void *)STACK[0x2628]);
  sub_100256158((uint64_t)&STACK[0x5680]);
  sub_1002560E4((uint64_t)&STACK[0x24D8]);
  sub_10025ACF4((uint64_t)&STACK[0x2788], (void *)STACK[0x2790]);
  sub_100256158((uint64_t)&STACK[0x57C8]);
  sub_1002560E4((uint64_t)&STACK[0x2640]);
  sub_10025C680((uint64_t)&STACK[0x32F8], (void *)STACK[0x3300]);
  for (uint64_t m = 336; m != -48; m -= 48)
    sub_1002562BC((uint64_t)&STACK[0x6500] + m);
  sub_10025ACF4((uint64_t)&STACK[0x2908], (void *)STACK[0x2910]);
  sub_100256158((uint64_t)&STACK[0x5AC0]);
  sub_1002560E4((uint64_t)&STACK[0x27C0]);
  sub_10025ACF4((uint64_t)&STACK[0x2A70], (void *)STACK[0x2A78]);
  sub_100256158((uint64_t)&STACK[0x5C08]);
  sub_1002560E4((uint64_t)&STACK[0x2928]);
  sub_10025ACF4((uint64_t)&STACK[0x2BD8], (void *)STACK[0x2BE0]);
  sub_100256158((uint64_t)&STACK[0x5D50]);
  sub_1002560E4((uint64_t)&STACK[0x2A90]);
  sub_10025ACF4((uint64_t)&STACK[0x2D40], (void *)STACK[0x2D48]);
  sub_100256158((uint64_t)&STACK[0x5E98]);
  sub_1002560E4((uint64_t)&STACK[0x2BF8]);
  sub_10025ACF4((uint64_t)&STACK[0x2EA8], (void *)STACK[0x2EB0]);
  sub_100256158((uint64_t)&STACK[0x5FE0]);
  sub_1002560E4((uint64_t)&STACK[0x2D60]);
  sub_10025ACF4((uint64_t)&STACK[0x3010], (void *)STACK[0x3018]);
  sub_100256158((uint64_t)&STACK[0x6128]);
  sub_1002560E4((uint64_t)&STACK[0x2EC8]);
  sub_10025ACF4((uint64_t)&STACK[0x3178], (void *)STACK[0x3180]);
  sub_100256158((uint64_t)&STACK[0x6270]);
  sub_1002560E4((uint64_t)&STACK[0x3030]);
  sub_10025ACF4((uint64_t)&STACK[0x32E0], (void *)STACK[0x32E8]);
  sub_100256158((uint64_t)&STACK[0x63B8]);
  sub_1002560E4((uint64_t)&STACK[0x3198]);
  _Unwind_Resume(a1);
}

void sub_100269FDC()
{
}

void sub_100269FF0()
{
}

void sub_10026A004()
{
}

void sub_10026A01C()
{
}

void sub_10026A030()
{
}

void sub_10026A044()
{
}

void sub_10026A05C()
{
}

void sub_10026A070()
{
}

void sub_10026A084()
{
}

void sub_10026A09C()
{
}

void sub_10026A0B0()
{
}

void sub_10026A0C4()
{
}

void sub_10026A0DC()
{
}

void sub_10026A0F0()
{
}

void sub_10026A104()
{
}

void sub_10026A11C()
{
}

void sub_10026A130()
{
}

void sub_10026A144()
{
}

void sub_10026A15C()
{
}

void sub_10026A170()
{
}

void sub_10026A184()
{
}

void sub_10026A19C()
{
}

void sub_10026A1B0()
{
}

void sub_10026A1C4()
{
}

void sub_10026A1DC()
{
}

void sub_10026A1F0()
{
}

void sub_10026A204()
{
}

void sub_10026A21C()
{
}

void sub_10026A230()
{
}

void sub_10026A244()
{
}

void sub_10026A25C()
{
}

void sub_10026A270()
{
}

void sub_10026A284()
{
}

void sub_10026A29C()
{
}

void sub_10026A2B0()
{
}

void sub_10026A2C4()
{
}

void sub_10026A2DC()
{
}

void sub_10026A2F0()
{
}

void sub_10026A304()
{
}

void sub_10026A31C()
{
}

void sub_10026A330()
{
}

void sub_10026A344()
{
}

void sub_10026A364()
{
}

void sub_10026A378()
{
}

void sub_10026A38C()
{
}

void sub_10026A3A4()
{
}

void sub_10026A3B8()
{
}

void sub_10026A3CC()
{
}

void sub_10026A3F4()
{
}

void sub_10026A410()
{
}

void sub_10026A434()
{
}

void sub_10026A444()
{
}

void sub_10026A454()
{
}

void sub_10026A468()
{
}

void sub_10026A47C()
{
}

void sub_10026A490()
{
}

void sub_10026A4A8()
{
}

void sub_10026A4BC()
{
}

void sub_10026A4D0()
{
}

void sub_10026A4E8()
{
}

void sub_10026A4FC()
{
}

void sub_10026A510()
{
}

void sub_10026A528()
{
}

void sub_10026A53C()
{
}

void sub_10026A550()
{
}

void sub_10026A568()
{
}

void sub_10026A57C()
{
}

void sub_10026A590()
{
}

void sub_10026A5A8()
{
}

void sub_10026A5BC()
{
}

void sub_10026A5D0()
{
}

void sub_10026A5E8()
{
}

void sub_10026A5FC()
{
}

void sub_10026A610()
{
}

void sub_10026A628()
{
}

void sub_10026A63C()
{
}

void sub_10026A650()
{
}

void sub_10026A674()
{
}

void sub_10026A690()
{
}

void sub_10026A6B4()
{
}

void sub_10026A6C8()
{
}

void sub_10026A6DC()
{
}

void sub_10026A6F4()
{
}

void sub_10026A70C()
{
}

void sub_10026A724()
{
}

void sub_10026A740()
{
}

void sub_10026A758()
{
}

void sub_10026A770()
{
}

void sub_10026A78C()
{
}

void sub_10026A7A4()
{
}

void sub_10026A7BC()
{
}

void sub_10026A7D4()
{
}

void sub_10026A7E8()
{
}

void sub_10026A7FC()
{
}

void sub_10026A814()
{
}

void sub_10026A828()
{
}

void sub_10026A83C()
{
}

void sub_10026A854()
{
}

void sub_10026A868()
{
}

void sub_10026A87C()
{
}

void sub_10026A894()
{
}

void sub_10026A8A8()
{
}

void sub_10026A8BC()
{
}

void sub_10026A8E4()
{
}

void sub_10026A900()
{
}

void sub_10026A914()
{
}

uint64_t sub_10026A91C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __chkstk_darwin(a1, a2, a3);
  v581[0] = 0x300000010;
  v581[1] = 0xC044000000000000;
  v703[0] = (const void *)0xC044000000000000;
  sub_1001A02EC((uint64_t)v582, (double *)v703, 1);
  long long v583 = xmmword_1004B7700;
  uint64_t v584 = 0x4024000000000000;
  int v585 = 45;
  LOBYTE(v586) = 0;
  char v588 = 0;
  uint64_t v589 = 0;
  char v590 = 0;
  int v591 = 1;
  char v592 = 1;
  long long v593 = xmmword_1004B7710;
  long long v594 = xmmword_1004B7720;
  __asm { FMOV            V0.2D, #1.0 }
  long long v10 = _Q0;
  long long v595 = _Q0;
  unint64_t v596 = 0xC059000000000000;
  long long v597 = xmmword_1004B7730;
  int32x2_t v598 = vdup_n_s32(0x3DCCCCCDu);
  long long v599 = xmmword_1004B7670;
  uint64_t v601 = 0;
  uint64_t v602 = 0;
  uint64_t v600 = 0x3FD999999999999ALL;
  long long v603 = xmmword_1004B7680;
  int v604 = 5;
  uint64_t v605 = 0x4000000000000000;
  int v606 = 10;
  uint64_t v607 = 0x4034000000000000;
  int v608 = 3;
  long long v609 = xmmword_1004B7740;
  sub_1002599EC((char *)v708, &qword_1008A6400, (uint64_t)v581);
  sub_10025B7BC((uint64_t)v610, v708, 1);
  sub_100259B04(v714, &xmmword_1008A60D0, v610);
  v551[0] = 0x300000010;
  v551[1] = 0xC044000000000000;
  v698[0] = (const void *)0xC044000000000000;
  sub_1001A02EC((uint64_t)v552, (double *)v698, 1);
  long long v553 = xmmword_1004B7700;
  uint64_t v554 = 0x4024000000000000;
  int v555 = 45;
  LOBYTE(v556) = 0;
  char v558 = 0;
  uint64_t v559 = 0;
  char v560 = 0;
  int v561 = 1;
  char v562 = 1;
  long long v563 = xmmword_1004B7710;
  long long v564 = xmmword_1004B7720;
  long long v565 = v10;
  unint64_t v566 = 0xC059000000000000;
  long long v567 = xmmword_1004B7730;
  int32x2_t v568 = vdup_n_s32(0x3DCCCCCDu);
  long long v569 = xmmword_1004B7670;
  uint64_t v571 = 0;
  uint64_t v572 = 0;
  uint64_t v570 = 0x3FD999999999999ALL;
  long long v573 = xmmword_1004B7680;
  int v574 = 5;
  uint64_t v575 = 0x4000000000000000;
  int v576 = 10;
  uint64_t v577 = 0x4034000000000000;
  int v578 = 3;
  long long v579 = xmmword_1004B7740;
  sub_1002599EC((char *)v703, &qword_1008A6400, (uint64_t)v551);
  sub_10025B7BC((uint64_t)v580, v703, 1);
  sub_100259B04(v715, &xmmword_1008A60E8, v580);
  v521[0] = 0x300000010;
  v521[1] = 0xC044800000000000;
  v693[0] = (const void *)0xC044800000000000;
  sub_1001A02EC((uint64_t)v522, (double *)v693, 1);
  long long v523 = xmmword_1004B7700;
  uint64_t v524 = 0x4024000000000000;
  int v525 = 45;
  LOBYTE(v526) = 0;
  char v528 = 0;
  uint64_t v529 = 0;
  char v530 = 0;
  int v531 = 1;
  char v532 = 1;
  long long v533 = xmmword_1004B7710;
  long long v534 = xmmword_1004B7720;
  long long v535 = v10;
  unint64_t v536 = 0xC059000000000000;
  long long v537 = xmmword_1004B7730;
  int32x2_t v538 = vdup_n_s32(0x3DCCCCCDu);
  long long v539 = xmmword_1004B7670;
  uint64_t v541 = 0;
  uint64_t v542 = 0;
  uint64_t v540 = 0x3FD999999999999ALL;
  long long v543 = xmmword_1004B7680;
  int v544 = 5;
  uint64_t v545 = 0x4000000000000000;
  int v546 = 10;
  uint64_t v547 = 0x4034000000000000;
  int v548 = 3;
  long long v549 = xmmword_1004B7740;
  sub_1002599EC((char *)v698, &qword_1008A6400, (uint64_t)v521);
  sub_10025B7BC((uint64_t)v550, v698, 1);
  sub_100259B04(v716, &xmmword_1008A6100, v550);
  v491[0] = 0x300000010;
  v491[1] = 0xC044800000000000;
  v688[0] = (const void *)0xC044800000000000;
  sub_1001A02EC((uint64_t)v492, (double *)v688, 1);
  long long v493 = xmmword_1004B7700;
  uint64_t v494 = 0x4024000000000000;
  int v495 = 45;
  LOBYTE(v496) = 0;
  char v498 = 0;
  uint64_t v499 = 0;
  char v500 = 0;
  int v501 = 1;
  char v502 = 1;
  long long v503 = xmmword_1004B7710;
  long long v504 = xmmword_1004B7720;
  long long v505 = v10;
  unint64_t v506 = 0xC059000000000000;
  long long v507 = xmmword_1004B7730;
  int32x2_t v508 = vdup_n_s32(0x3DCCCCCDu);
  long long v509 = xmmword_1004B7670;
  uint64_t v511 = 0;
  uint64_t v512 = 0;
  uint64_t v510 = 0x3FD999999999999ALL;
  long long v513 = xmmword_1004B7680;
  int v514 = 5;
  uint64_t v515 = 0x4000000000000000;
  int v516 = 10;
  uint64_t v517 = 0x4034000000000000;
  int v518 = 3;
  long long v519 = xmmword_1004B7740;
  sub_1002599EC((char *)v693, &qword_1008A6400, (uint64_t)v491);
  sub_10025B7BC((uint64_t)v520, v693, 1);
  sub_100259B04(v717, &xmmword_1008A6118, v520);
  v461[0] = 0x300000010;
  v461[1] = 0xC044000000000000;
  v683[0] = (const void *)0xC044000000000000;
  sub_1001A02EC((uint64_t)v462, (double *)v683, 1);
  long long v463 = xmmword_1004B7700;
  uint64_t v464 = 0x4024000000000000;
  int v465 = 45;
  LOBYTE(v466) = 0;
  char v468 = 0;
  uint64_t v469 = 0;
  char v470 = 0;
  int v471 = 1;
  char v472 = 1;
  long long v473 = xmmword_1004B7710;
  long long v474 = xmmword_1004B7720;
  long long v475 = v10;
  unint64_t v476 = 0xC059000000000000;
  long long v477 = xmmword_1004B7730;
  int32x2_t v478 = vdup_n_s32(0x3DCCCCCDu);
  long long v479 = xmmword_1004B7670;
  uint64_t v481 = 0;
  uint64_t v482 = 0;
  uint64_t v480 = 0x3FD999999999999ALL;
  long long v483 = xmmword_1004B7680;
  int v484 = 5;
  uint64_t v485 = 0x4000000000000000;
  int v486 = 10;
  uint64_t v487 = 0x4034000000000000;
  int v488 = 3;
  long long v489 = xmmword_1004B7740;
  sub_1002599EC((char *)v688, &qword_1008A6400, (uint64_t)v461);
  sub_10025B7BC((uint64_t)v490, v688, 1);
  sub_100259B04(v718, &xmmword_1008A6130, v490);
  v431[0] = 0x300000010;
  v431[1] = 0xC044800000000000;
  v678[0] = (const void *)0xC044800000000000;
  sub_1001A02EC((uint64_t)v432, (double *)v678, 1);
  long long v433 = xmmword_1004B7700;
  uint64_t v434 = 0x4024000000000000;
  int v435 = 45;
  LOBYTE(v436) = 0;
  char v438 = 0;
  uint64_t v439 = 0;
  char v440 = 0;
  int v441 = 1;
  char v442 = 1;
  long long v443 = xmmword_1004B7710;
  long long v444 = xmmword_1004B7720;
  long long v445 = v10;
  unint64_t v446 = 0xC059000000000000;
  long long v447 = xmmword_1004B7730;
  int32x2_t v448 = vdup_n_s32(0x3DCCCCCDu);
  long long v449 = xmmword_1004B7670;
  uint64_t v451 = 0;
  uint64_t v452 = 0;
  uint64_t v450 = 0x3FD999999999999ALL;
  long long v453 = xmmword_1004B7680;
  int v454 = 5;
  uint64_t v455 = 0x4000000000000000;
  int v456 = 10;
  uint64_t v457 = 0x4034000000000000;
  int v458 = 3;
  long long v459 = xmmword_1004B7740;
  sub_1002599EC((char *)v683, &qword_1008A6400, (uint64_t)v431);
  sub_10025B7BC((uint64_t)v460, v683, 1);
  sub_100259B04(v719, &xmmword_1008A6148, v460);
  v401[0] = 0x300000010;
  v401[1] = 0xC044800000000000;
  v673[0] = (const void *)0xC044800000000000;
  sub_1001A02EC((uint64_t)v402, (double *)v673, 1);
  long long v403 = xmmword_1004B7700;
  uint64_t v404 = 0x4024000000000000;
  int v405 = 45;
  LOBYTE(v406) = 0;
  char v408 = 0;
  uint64_t v409 = 0;
  char v410 = 0;
  int v411 = 1;
  char v412 = 1;
  long long v413 = xmmword_1004B7710;
  long long v414 = xmmword_1004B7720;
  long long v415 = v10;
  unint64_t v416 = 0xC059000000000000;
  long long v417 = xmmword_1004B7730;
  int32x2_t v418 = vdup_n_s32(0x3DCCCCCDu);
  long long v419 = xmmword_1004B7670;
  uint64_t v421 = 0;
  uint64_t v422 = 0;
  uint64_t v420 = 0x3FD999999999999ALL;
  long long v423 = xmmword_1004B7680;
  int v424 = 5;
  uint64_t v425 = 0x4000000000000000;
  int v426 = 10;
  uint64_t v427 = 0x4034000000000000;
  int v428 = 3;
  long long v429 = xmmword_1004B7740;
  sub_1002599EC((char *)v678, &qword_1008A6400, (uint64_t)v401);
  sub_10025B7BC((uint64_t)v430, v678, 1);
  sub_100259B04(v720, &xmmword_1008A6160, v430);
  v371[0] = 0x300000010;
  v371[1] = 0xC044800000000000;
  v668[0] = (const void *)0xC044800000000000;
  sub_1001A02EC((uint64_t)v372, (double *)v668, 1);
  long long v373 = xmmword_1004B7700;
  uint64_t v374 = 0x4024000000000000;
  int v375 = 45;
  LOBYTE(v376) = 0;
  char v378 = 0;
  uint64_t v379 = 0;
  char v380 = 0;
  int v381 = 1;
  char v382 = 1;
  long long v383 = xmmword_1004B7710;
  long long v384 = xmmword_1004B7720;
  long long v385 = v10;
  unint64_t v386 = 0xC059000000000000;
  long long v387 = xmmword_1004B7730;
  int32x2_t v388 = vdup_n_s32(0x3DCCCCCDu);
  long long v389 = xmmword_1004B7670;
  uint64_t v391 = 0;
  uint64_t v392 = 0;
  uint64_t v390 = 0x3FD999999999999ALL;
  long long v393 = xmmword_1004B7680;
  int v394 = 5;
  uint64_t v395 = 0x4000000000000000;
  int v396 = 10;
  uint64_t v397 = 0x4034000000000000;
  int v398 = 3;
  long long v399 = xmmword_1004B7740;
  sub_1002599EC((char *)v673, &qword_1008A6400, (uint64_t)v371);
  sub_10025B7BC((uint64_t)v400, v673, 1);
  sub_100259B04(v721, &xmmword_1008A6178, v400);
  v341[0] = 0x300000010;
  v341[1] = 0xC044800000000000;
  v663[0] = (const void *)0xC044800000000000;
  sub_1001A02EC((uint64_t)v342, (double *)v663, 1);
  long long v343 = xmmword_1004B7700;
  uint64_t v344 = 0x4024000000000000;
  int v345 = 45;
  LOBYTE(v346) = 0;
  char v348 = 0;
  uint64_t v349 = 0;
  char v350 = 0;
  int v351 = 1;
  char v352 = 1;
  long long v353 = xmmword_1004B7710;
  long long v354 = xmmword_1004B7720;
  long long v355 = v10;
  unint64_t v356 = 0xC059000000000000;
  long long v357 = xmmword_1004B7730;
  int32x2_t v358 = vdup_n_s32(0x3DCCCCCDu);
  long long v359 = xmmword_1004B7670;
  uint64_t v361 = 0;
  uint64_t v362 = 0;
  uint64_t v360 = 0x3FD999999999999ALL;
  long long v363 = xmmword_1004B7680;
  int v364 = 5;
  uint64_t v365 = 0x4000000000000000;
  int v366 = 10;
  uint64_t v367 = 0x4034000000000000;
  int v368 = 3;
  long long v369 = xmmword_1004B7740;
  sub_1002599EC((char *)v668, &qword_1008A6400, (uint64_t)v341);
  sub_10025B7BC((uint64_t)v370, v668, 1);
  sub_100259B04(v722, &xmmword_1008A6190, v370);
  v311[0] = 0x300000010;
  v311[1] = 0xC044800000000000;
  v658[0] = (const void *)0xC044800000000000;
  sub_1001A02EC((uint64_t)v312, (double *)v658, 1);
  long long v313 = xmmword_1004B7700;
  uint64_t v314 = 0x4024000000000000;
  int v315 = 45;
  LOBYTE(v316) = 0;
  char v318 = 0;
  uint64_t v319 = 0;
  char v320 = 0;
  int v321 = 1;
  char v322 = 1;
  long long v323 = xmmword_1004B7710;
  long long v324 = xmmword_1004B7720;
  long long v325 = v10;
  unint64_t v326 = 0xC059000000000000;
  long long v327 = xmmword_1004B7730;
  int32x2_t v328 = vdup_n_s32(0x3DCCCCCDu);
  long long v329 = xmmword_1004B7670;
  uint64_t v331 = 0;
  uint64_t v332 = 0;
  uint64_t v330 = 0x3FD999999999999ALL;
  long long v333 = xmmword_1004B7680;
  int v334 = 5;
  uint64_t v335 = 0x4000000000000000;
  int v336 = 10;
  uint64_t v337 = 0x4034000000000000;
  int v338 = 3;
  long long v339 = xmmword_1004B7740;
  sub_1002599EC((char *)v663, &qword_1008A6400, (uint64_t)v311);
  sub_10025B7BC((uint64_t)v340, v663, 1);
  sub_100259B04(v723, &xmmword_1008A61A8, v340);
  v281[0] = 0x300000010;
  v281[1] = 0xC044800000000000;
  v653[0] = (const void *)0xC044800000000000;
  sub_1001A02EC((uint64_t)v282, (double *)v653, 1);
  long long v283 = xmmword_1004B7700;
  uint64_t v284 = 0x4024000000000000;
  int v285 = 45;
  LOBYTE(v286) = 0;
  char v288 = 0;
  uint64_t v289 = 0;
  char v290 = 0;
  int v291 = 1;
  char v292 = 1;
  long long v293 = xmmword_1004B7710;
  long long v294 = xmmword_1004B7720;
  long long v295 = v10;
  unint64_t v296 = 0xC059000000000000;
  long long v297 = xmmword_1004B7730;
  int32x2_t v298 = vdup_n_s32(0x3DCCCCCDu);
  long long v299 = xmmword_1004B7670;
  uint64_t v301 = 0;
  uint64_t v302 = 0;
  uint64_t v300 = 0x3FD999999999999ALL;
  long long v303 = xmmword_1004B7680;
  int v304 = 5;
  uint64_t v305 = 0x4000000000000000;
  int v306 = 10;
  uint64_t v307 = 0x4034000000000000;
  int v308 = 3;
  long long v309 = xmmword_1004B7740;
  sub_1002599EC((char *)v658, &qword_1008A6400, (uint64_t)v281);
  sub_10025B7BC((uint64_t)v310, v658, 1);
  sub_100259B04(v724, &xmmword_1008A61C0, v310);
  v251[0] = 0x300000010;
  v251[1] = 0xC044800000000000;
  v648[0] = (const void *)0xC044800000000000;
  sub_1001A02EC((uint64_t)v252, (double *)v648, 1);
  long long v253 = xmmword_1004B7700;
  uint64_t v254 = 0x4024000000000000;
  int v255 = 45;
  LOBYTE(v256) = 0;
  char v258 = 0;
  uint64_t v259 = 0;
  char v260 = 0;
  int v261 = 1;
  char v262 = 1;
  long long v263 = xmmword_1004B7710;
  long long v264 = xmmword_1004B7720;
  long long v265 = v10;
  unint64_t v266 = 0xC059000000000000;
  long long v267 = xmmword_1004B7730;
  int32x2_t v268 = vdup_n_s32(0x3DCCCCCDu);
  long long v269 = xmmword_1004B7670;
  uint64_t v271 = 0;
  uint64_t v272 = 0;
  uint64_t v270 = 0x3FD999999999999ALL;
  long long v273 = xmmword_1004B7680;
  int v274 = 5;
  uint64_t v275 = 0x4000000000000000;
  int v276 = 10;
  uint64_t v277 = 0x4034000000000000;
  int v278 = 3;
  long long v279 = xmmword_1004B7740;
  sub_1002599EC((char *)v653, &qword_1008A6400, (uint64_t)v251);
  sub_10025B7BC((uint64_t)v280, v653, 1);
  sub_100259B04(v725, &xmmword_1008A61D8, v280);
  v221[0] = 0x300000010;
  v221[1] = 0xC044800000000000;
  v643[0] = (const void *)0xC044800000000000;
  sub_1001A02EC((uint64_t)v222, (double *)v643, 1);
  long long v223 = xmmword_1004B7700;
  uint64_t v224 = 0x4024000000000000;
  int v225 = 45;
  LOBYTE(v226) = 0;
  char v228 = 0;
  uint64_t v229 = 0;
  char v230 = 0;
  int v231 = 1;
  char v232 = 1;
  long long v233 = xmmword_1004B7710;
  long long v234 = xmmword_1004B7720;
  long long v235 = v10;
  unint64_t v236 = 0xC059000000000000;
  long long v237 = xmmword_1004B7730;
  int32x2_t v238 = vdup_n_s32(0x3DCCCCCDu);
  long long v239 = xmmword_1004B7670;
  uint64_t v241 = 0;
  uint64_t v242 = 0;
  uint64_t v240 = 0x3FD999999999999ALL;
  long long v243 = xmmword_1004B7680;
  int v244 = 5;
  uint64_t v245 = 0x4000000000000000;
  int v246 = 10;
  uint64_t v247 = 0x4034000000000000;
  int v248 = 3;
  long long v249 = xmmword_1004B7740;
  sub_1002599EC((char *)v648, &qword_1008A6400, (uint64_t)v221);
  sub_10025B7BC((uint64_t)v250, v648, 1);
  sub_100259B04(v726, &xmmword_1008A61F0, v250);
  v191[0] = 0x300000010;
  v191[1] = 0xC044800000000000;
  v638[0] = (const void *)0xC044800000000000;
  sub_1001A02EC((uint64_t)v192, (double *)v638, 1);
  long long v193 = xmmword_1004B7700;
  uint64_t v194 = 0x4024000000000000;
  int v195 = 45;
  LOBYTE(v196) = 0;
  char v198 = 0;
  uint64_t v199 = 0;
  char v200 = 0;
  int v201 = 1;
  char v202 = 1;
  long long v203 = xmmword_1004B7710;
  long long v204 = xmmword_1004B7720;
  long long v205 = v10;
  unint64_t v206 = 0xC059000000000000;
  long long v207 = xmmword_1004B7730;
  int32x2_t v208 = vdup_n_s32(0x3DCCCCCDu);
  long long v209 = xmmword_1004B7670;
  uint64_t v211 = 0;
  uint64_t v212 = 0;
  uint64_t v210 = 0x3FD999999999999ALL;
  long long v213 = xmmword_1004B7680;
  int v214 = 5;
  uint64_t v215 = 0x4000000000000000;
  int v216 = 10;
  uint64_t v217 = 0x4034000000000000;
  int v218 = 3;
  long long v219 = xmmword_1004B7740;
  sub_1002599EC((char *)v643, &qword_1008A6400, (uint64_t)v191);
  sub_10025B7BC((uint64_t)v220, v643, 1);
  sub_100259B04(v727, &xmmword_1008A6208, v220);
  v161[0] = 0x300000010;
  v161[1] = 0xC044800000000000;
  v633[0] = (const void *)0xC044800000000000;
  sub_1001A02EC((uint64_t)v162, (double *)v633, 1);
  long long v163 = xmmword_1004B7700;
  uint64_t v164 = 0x4024000000000000;
  int v165 = 45;
  LOBYTE(v166) = 0;
  char v168 = 0;
  uint64_t v169 = 0;
  char v170 = 0;
  int v171 = 1;
  char v172 = 1;
  long long v173 = xmmword_1004B7710;
  long long v174 = xmmword_1004B7720;
  long long v175 = v10;
  unint64_t v176 = 0xC059000000000000;
  long long v177 = xmmword_1004B7730;
  int32x2_t v178 = vdup_n_s32(0x3DCCCCCDu);
  long long v179 = xmmword_1004B7670;
  uint64_t v181 = 0;
  uint64_t v182 = 0;
  uint64_t v180 = 0x3FD999999999999ALL;
  long long v183 = xmmword_1004B7680;
  int v184 = 5;
  uint64_t v185 = 0x4000000000000000;
  int v186 = 10;
  uint64_t v187 = 0x4034000000000000;
  int v188 = 3;
  long long v189 = xmmword_1004B7740;
  sub_1002599EC((char *)v638, &qword_1008A6400, (uint64_t)v161);
  sub_10025B7BC((uint64_t)v190, v638, 1);
  sub_100259B04(v728, &xmmword_1008A6220, v190);
  v131[0] = 0x300000010;
  v131[1] = 0xC044800000000000;
  v628[0] = (const void *)0xC044800000000000;
  sub_1001A02EC((uint64_t)v132, (double *)v628, 1);
  long long v133 = xmmword_1004B7700;
  uint64_t v134 = 0x4024000000000000;
  int v135 = 45;
  LOBYTE(v136) = 0;
  char v138 = 0;
  uint64_t v139 = 0;
  char v140 = 0;
  int v141 = 1;
  char v142 = 1;
  long long v143 = xmmword_1004B7710;
  long long v144 = xmmword_1004B7720;
  long long v145 = v10;
  unint64_t v146 = 0xC059000000000000;
  long long v147 = xmmword_1004B7730;
  int32x2_t v148 = vdup_n_s32(0x3DCCCCCDu);
  long long v149 = xmmword_1004B7670;
  uint64_t v151 = 0;
  uint64_t v152 = 0;
  uint64_t v150 = 0x3FD999999999999ALL;
  long long v153 = xmmword_1004B7680;
  int v154 = 5;
  uint64_t v155 = 0x4000000000000000;
  int v156 = 10;
  uint64_t v157 = 0x4034000000000000;
  int v158 = 3;
  long long v159 = xmmword_1004B7740;
  sub_1002599EC((char *)v633, &qword_1008A6400, (uint64_t)v131);
  sub_10025B7BC((uint64_t)v160, v633, 1);
  sub_100259B04(v729, &xmmword_1008A6238, v160);
  v101[0] = 0x300000010;
  v101[1] = 0xC044800000000000;
  v623[0] = (const void *)0xC044800000000000;
  sub_1001A02EC((uint64_t)v102, (double *)v623, 1);
  long long v103 = xmmword_1004B7700;
  uint64_t v104 = 0x4024000000000000;
  int v105 = 45;
  LOBYTE(v106) = 0;
  char v108 = 0;
  uint64_t v109 = 0;
  char v110 = 0;
  int v111 = 1;
  char v112 = 1;
  long long v113 = xmmword_1004B7710;
  long long v114 = xmmword_1004B7720;
  long long v115 = v10;
  unint64_t v116 = 0xC059000000000000;
  long long v117 = xmmword_1004B7730;
  int32x2_t v118 = vdup_n_s32(0x3DCCCCCDu);
  long long v119 = xmmword_1004B7670;
  uint64_t v121 = 0;
  uint64_t v122 = 0;
  uint64_t v120 = 0x3FD999999999999ALL;
  long long v123 = xmmword_1004B7680;
  int v124 = 5;
  uint64_t v125 = 0x4000000000000000;
  int v126 = 10;
  uint64_t v127 = 0x4034000000000000;
  int v128 = 3;
  long long v129 = xmmword_1004B7740;
  sub_1002599EC((char *)v628, &qword_1008A6400, (uint64_t)v101);
  sub_10025B7BC((uint64_t)v130, v628, 1);
  sub_100259B04(v730, &xmmword_1008A6250, v130);
  v71[0] = 0x300000010;
  v71[1] = 0xC044800000000000;
  v618[0] = (const void *)0xC044800000000000;
  sub_1001A02EC((uint64_t)v72, (double *)v618, 1);
  long long v73 = xmmword_1004B7700;
  uint64_t v74 = 0x4024000000000000;
  int v75 = 45;
  LOBYTE(v76) = 0;
  char v78 = 0;
  uint64_t v79 = 0;
  char v80 = 0;
  int v81 = 1;
  char v82 = 1;
  long long v83 = xmmword_1004B7710;
  long long v84 = xmmword_1004B7720;
  long long v85 = v10;
  unint64_t v86 = 0xC059000000000000;
  long long v87 = xmmword_1004B7730;
  int32x2_t v88 = vdup_n_s32(0x3DCCCCCDu);
  long long v89 = xmmword_1004B7670;
  uint64_t v91 = 0;
  uint64_t v92 = 0;
  uint64_t v90 = 0x3FD999999999999ALL;
  long long v93 = xmmword_1004B7680;
  int v94 = 5;
  uint64_t v95 = 0x4000000000000000;
  int v96 = 10;
  uint64_t v97 = 0x4034000000000000;
  int v98 = 3;
  long long v99 = xmmword_1004B7740;
  sub_1002599EC((char *)v623, &qword_1008A6400, (uint64_t)v71);
  sub_10025B7BC((uint64_t)v100, v623, 1);
  sub_100259B04(v731, &xmmword_1008A6268, v100);
  v41[0] = 0x300000010;
  v41[1] = 0xC044800000000000;
  v613[0] = (const void *)0xC044800000000000;
  sub_1001A02EC((uint64_t)v42, (double *)v613, 1);
  long long v43 = xmmword_1004B7700;
  uint64_t v44 = 0x4024000000000000;
  int v45 = 45;
  LOBYTE(v46) = 0;
  char v48 = 0;
  uint64_t v49 = 0;
  char v50 = 0;
  int v51 = 1;
  char v52 = 1;
  long long v53 = xmmword_1004B7710;
  long long v54 = xmmword_1004B7720;
  long long v55 = v10;
  unint64_t v56 = 0xC059000000000000;
  long long v57 = xmmword_1004B7730;
  int32x2_t v58 = vdup_n_s32(0x3DCCCCCDu);
  long long v59 = xmmword_1004B7670;
  uint64_t v61 = 0;
  uint64_t v62 = 0;
  uint64_t v60 = 0x3FD999999999999ALL;
  long long v63 = xmmword_1004B7680;
  int v64 = 5;
  uint64_t v65 = 0x4000000000000000;
  int v66 = 10;
  uint64_t v67 = 0x4034000000000000;
  int v68 = 3;
  long long v69 = xmmword_1004B7740;
  sub_1002599EC((char *)v618, &qword_1008A6400, (uint64_t)v41);
  sub_10025B7BC((uint64_t)v70, v618, 1);
  sub_100259B04(v732, &xmmword_1008A6280, v70);
  v11[0] = 0x300000010;
  v11[1] = 0xC044800000000000;
  double v612 = -41.0;
  sub_1001A02EC((uint64_t)v12, &v612, 1);
  long long v13 = xmmword_1004B7700;
  uint64_t v14 = 0x4024000000000000;
  int v15 = 45;
  LOBYTE(__p) = 0;
  char v18 = 0;
  uint64_t v19 = 0;
  char v20 = 0;
  int v21 = 1;
  char v22 = 1;
  long long v23 = xmmword_1004B7710;
  long long v24 = xmmword_1004B7720;
  long long v25 = v10;
  unint64_t v26 = 0xC059000000000000;
  long long v27 = xmmword_1004B7730;
  int32x2_t v28 = vdup_n_s32(0x3DCCCCCDu);
  long long v29 = xmmword_1004B7670;
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  uint64_t v30 = 0x3FD999999999999ALL;
  long long v33 = xmmword_1004B7680;
  int v34 = 5;
  uint64_t v35 = 0x4000000000000000;
  int v36 = 10;
  uint64_t v37 = 0x4034000000000000;
  int v38 = 3;
  long long v39 = xmmword_1004B7740;
  sub_1002599EC((char *)v613, &qword_1008A6400, (uint64_t)v11);
  sub_10025B7BC((uint64_t)v40, v613, 1);
  sub_100259B04(v733, &xmmword_1008A6298, v40);
  sub_10025BB7C((uint64_t)v611, v714, 20);
  int v734 = 2;
  sub_10025BDD4(v735, v611);
  sub_10025BEB8((uint64_t)&unk_1008AC570, &v734, 1);
  sub_10025B644((uint64_t)v735, (void *)v735[1]);
  sub_10025B644((uint64_t)v611, v611[1]);
  uint64_t v8 = 960;
  do
  {
    sub_10025B6F4((uint64_t)&v713[v8 + 24], *(void **)&v713[v8 + 32]);
    if ((char)v713[v8 + 23] < 0) {
      operator delete(*(void **)&v713[v8]);
    }
    v8 -= 48;
  }
  while (v8);
  sub_10025B6F4((uint64_t)v40, v40[1]);
  if (v617 && v616 < 0) {
    operator delete(v615[7]);
  }
  sub_10003E96C((uint64_t)v615, v615[1]);
  if (v614 < 0) {
    operator delete((void *)v613[0]);
  }
  if (v18 && v17 < 0) {
    operator delete(__p);
  }
  sub_10003E96C((uint64_t)v12, v12[1]);
  sub_10025B6F4((uint64_t)v70, v70[1]);
  if (v622 && v621 < 0) {
    operator delete(v620[7]);
  }
  sub_10003E96C((uint64_t)v620, v620[1]);
  if (v619 < 0) {
    operator delete((void *)v618[0]);
  }
  if (v48 && v47 < 0) {
    operator delete(v46);
  }
  sub_10003E96C((uint64_t)v42, v42[1]);
  sub_10025B6F4((uint64_t)v100, v100[1]);
  if (v627 && v626 < 0) {
    operator delete(v625[7]);
  }
  sub_10003E96C((uint64_t)v625, v625[1]);
  if (v624 < 0) {
    operator delete((void *)v623[0]);
  }
  if (v78 && v77 < 0) {
    operator delete(v76);
  }
  sub_10003E96C((uint64_t)v72, v72[1]);
  sub_10025B6F4((uint64_t)v130, v130[1]);
  if (v632 && v631 < 0) {
    operator delete(v630[7]);
  }
  sub_10003E96C((uint64_t)v630, v630[1]);
  if (v629 < 0) {
    operator delete((void *)v628[0]);
  }
  if (v108 && v107 < 0) {
    operator delete(v106);
  }
  sub_10003E96C((uint64_t)v102, v102[1]);
  sub_10025B6F4((uint64_t)v160, v160[1]);
  if (v637 && v636 < 0) {
    operator delete(v635[7]);
  }
  sub_10003E96C((uint64_t)v635, v635[1]);
  if (v634 < 0) {
    operator delete((void *)v633[0]);
  }
  if (v138 && v137 < 0) {
    operator delete(v136);
  }
  sub_10003E96C((uint64_t)v132, v132[1]);
  sub_10025B6F4((uint64_t)v190, v190[1]);
  if (v642 && v641 < 0) {
    operator delete(v640[7]);
  }
  sub_10003E96C((uint64_t)v640, v640[1]);
  if (v639 < 0) {
    operator delete((void *)v638[0]);
  }
  if (v168 && v167 < 0) {
    operator delete(v166);
  }
  sub_10003E96C((uint64_t)v162, v162[1]);
  sub_10025B6F4((uint64_t)v220, v220[1]);
  if (v647 && v646 < 0) {
    operator delete(v645[7]);
  }
  sub_10003E96C((uint64_t)v645, v645[1]);
  if (v644 < 0) {
    operator delete((void *)v643[0]);
  }
  if (v198 && v197 < 0) {
    operator delete(v196);
  }
  sub_10003E96C((uint64_t)v192, v192[1]);
  sub_10025B6F4((uint64_t)v250, v250[1]);
  if (v652 && v651 < 0) {
    operator delete(v650[7]);
  }
  sub_10003E96C((uint64_t)v650, v650[1]);
  if (v649 < 0) {
    operator delete((void *)v648[0]);
  }
  if (v228 && v227 < 0) {
    operator delete(v226);
  }
  sub_10003E96C((uint64_t)v222, v222[1]);
  sub_10025B6F4((uint64_t)v280, v280[1]);
  if (v657 && v656 < 0) {
    operator delete(v655[7]);
  }
  sub_10003E96C((uint64_t)v655, v655[1]);
  if (v654 < 0) {
    operator delete((void *)v653[0]);
  }
  if (v258 && v257 < 0) {
    operator delete(v256);
  }
  sub_10003E96C((uint64_t)v252, v252[1]);
  sub_10025B6F4((uint64_t)v310, v310[1]);
  if (v662 && v661 < 0) {
    operator delete(v660[7]);
  }
  sub_10003E96C((uint64_t)v660, v660[1]);
  if (v659 < 0) {
    operator delete((void *)v658[0]);
  }
  if (v288 && v287 < 0) {
    operator delete(v286);
  }
  sub_10003E96C((uint64_t)v282, v282[1]);
  sub_10025B6F4((uint64_t)v340, v340[1]);
  if (v667 && v666 < 0) {
    operator delete(v665[7]);
  }
  sub_10003E96C((uint64_t)v665, v665[1]);
  if (v664 < 0) {
    operator delete((void *)v663[0]);
  }
  if (v318 && v317 < 0) {
    operator delete(v316);
  }
  sub_10003E96C((uint64_t)v312, v312[1]);
  sub_10025B6F4((uint64_t)v370, v370[1]);
  if (v672 && v671 < 0) {
    operator delete(v670[7]);
  }
  sub_10003E96C((uint64_t)v670, v670[1]);
  if (v669 < 0) {
    operator delete((void *)v668[0]);
  }
  if (v348 && v347 < 0) {
    operator delete(v346);
  }
  sub_10003E96C((uint64_t)v342, v342[1]);
  sub_10025B6F4((uint64_t)v400, v400[1]);
  if (v677 && v676 < 0) {
    operator delete(v675[7]);
  }
  sub_10003E96C((uint64_t)v675, v675[1]);
  if (v674 < 0) {
    operator delete((void *)v673[0]);
  }
  if (v378 && v377 < 0) {
    operator delete(v376);
  }
  sub_10003E96C((uint64_t)v372, v372[1]);
  sub_10025B6F4((uint64_t)v430, v430[1]);
  if (v682 && v681 < 0) {
    operator delete(v680[7]);
  }
  sub_10003E96C((uint64_t)v680, v680[1]);
  if (v679 < 0) {
    operator delete((void *)v678[0]);
  }
  if (v408 && v407 < 0) {
    operator delete(v406);
  }
  sub_10003E96C((uint64_t)v402, v402[1]);
  sub_10025B6F4((uint64_t)v460, v460[1]);
  if (v687 && v686 < 0) {
    operator delete(v685[7]);
  }
  sub_10003E96C((uint64_t)v685, v685[1]);
  if (v684 < 0) {
    operator delete((void *)v683[0]);
  }
  if (v438 && v437 < 0) {
    operator delete(v436);
  }
  sub_10003E96C((uint64_t)v432, v432[1]);
  sub_10025B6F4((uint64_t)v490, v490[1]);
  if (v692 && v691 < 0) {
    operator delete(v690[7]);
  }
  sub_10003E96C((uint64_t)v690, v690[1]);
  if (v689 < 0) {
    operator delete((void *)v688[0]);
  }
  if (v468 && v467 < 0) {
    operator delete(v466);
  }
  sub_10003E96C((uint64_t)v462, v462[1]);
  sub_10025B6F4((uint64_t)v520, v520[1]);
  if (v697 && v696 < 0) {
    operator delete(v695[7]);
  }
  sub_10003E96C((uint64_t)v695, v695[1]);
  if (v694 < 0) {
    operator delete((void *)v693[0]);
  }
  if (v498 && v497 < 0) {
    operator delete(v496);
  }
  sub_10003E96C((uint64_t)v492, v492[1]);
  sub_10025B6F4((uint64_t)v550, v550[1]);
  if (v702 && v701 < 0) {
    operator delete(v700[7]);
  }
  sub_10003E96C((uint64_t)v700, v700[1]);
  if (v699 < 0) {
    operator delete((void *)v698[0]);
  }
  if (v528 && v527 < 0) {
    operator delete(v526);
  }
  sub_10003E96C((uint64_t)v522, v522[1]);
  sub_10025B6F4((uint64_t)v580, v580[1]);
  if (v707 && v706 < 0) {
    operator delete(v705[7]);
  }
  sub_10003E96C((uint64_t)v705, v705[1]);
  if (v704 < 0) {
    operator delete((void *)v703[0]);
  }
  if (v558 && v557 < 0) {
    operator delete(v556);
  }
  sub_10003E96C((uint64_t)v552, v552[1]);
  sub_10025B6F4((uint64_t)v610, v610[1]);
  if (v712 && v711 < 0) {
    operator delete(v710[7]);
  }
  sub_10003E96C((uint64_t)v710, v710[1]);
  if (v709 < 0) {
    operator delete((void *)v708[0]);
  }
  if (v588 && v587 < 0) {
    operator delete(v586);
  }
  sub_10003E96C((uint64_t)v582, v582[1]);
  return __cxa_atexit((void (*)(void *))sub_100256264, &unk_1008AC570, (void *)&_mh_execute_header);
}

void sub_10026CE90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,_Unwind_Exception *exception_objecta,uint64_t a44,uint64_t a45,char a46)
{
  sub_10025B644(v47, *(void **)(v51 + 4072));
  sub_10025B644((uint64_t)&STACK[0x1CA0], *(void **)(v48 + 352));
  for (uint64_t i = 912; i != -48; i -= 48)
    sub_1002561CC((uint64_t)&STACK[0x37A0] + i);
  sub_10025B6F4((uint64_t)&STACK[0x268], *(void **)(v49 + 328));
  sub_10025620C((uint64_t)&STACK[0x1CC0]);
  sub_1002560E4((uint64_t)&a46);
  sub_10025B6F4((uint64_t)&STACK[0x3C8], *(void **)(v50 + 328));
  sub_10025620C((uint64_t)&STACK[0x1E18]);
  sub_1002560E4((uint64_t)&STACK[0x288]);
  sub_10025B6F4((uint64_t)&STACK[0x528], *(void **)(v46 + 328));
  sub_10025620C((uint64_t)&STACK[0x1F70]);
  sub_1002560E4((uint64_t)&STACK[0x3E8]);
  sub_10025B6F4((uint64_t)&STACK[0x688], *(void **)(v53 + 328));
  sub_10025620C((uint64_t)&STACK[0x20C8]);
  sub_1002560E4((uint64_t)&STACK[0x548]);
  sub_10025B6F4((uint64_t)&STACK[0x7E8], *(void **)(v52 + 328));
  sub_10025620C((uint64_t)&STACK[0x2220]);
  sub_1002560E4((uint64_t)&STACK[0x6A8]);
  sub_10025B6F4((uint64_t)&STACK[0x948], (void *)STACK[0x950]);
  sub_10025620C((uint64_t)&STACK[0x2378]);
  sub_1002560E4((uint64_t)&STACK[0x808]);
  sub_10025B6F4((uint64_t)&STACK[0xAA8], (void *)STACK[0xAB0]);
  sub_10025620C((uint64_t)&STACK[0x24D0]);
  sub_1002560E4((uint64_t)&STACK[0x968]);
  sub_10025B6F4((uint64_t)&STACK[0xC08], (void *)STACK[0xC10]);
  sub_10025620C((uint64_t)&STACK[0x2628]);
  sub_1002560E4((uint64_t)&STACK[0xAC8]);
  sub_10025B6F4((uint64_t)&STACK[0xD68], (void *)STACK[0xD70]);
  sub_10025620C((uint64_t)&STACK[0x2780]);
  sub_1002560E4((uint64_t)&STACK[0xC28]);
  sub_10025B6F4((uint64_t)&STACK[0xEC8], (void *)STACK[0xED0]);
  sub_10025620C((uint64_t)&STACK[0x28D8]);
  sub_1002560E4((uint64_t)&STACK[0xD88]);
  sub_10025B6F4((uint64_t)&STACK[0x1028], (void *)STACK[0x1030]);
  sub_10025620C((uint64_t)&STACK[0x2A30]);
  sub_1002560E4((uint64_t)&STACK[0xEE8]);
  sub_10025B6F4((uint64_t)&STACK[0x1188], (void *)STACK[0x1190]);
  sub_10025620C((uint64_t)&STACK[0x2B88]);
  sub_1002560E4((uint64_t)&STACK[0x1048]);
  sub_10025B6F4((uint64_t)&STACK[0x12E8], (void *)STACK[0x12F0]);
  sub_10025620C((uint64_t)&STACK[0x2CE0]);
  sub_1002560E4((uint64_t)&STACK[0x11A8]);
  sub_10025B6F4((uint64_t)&STACK[0x1448], (void *)STACK[0x1450]);
  sub_10025620C((uint64_t)&STACK[0x2E38]);
  sub_1002560E4((uint64_t)&STACK[0x1308]);
  sub_10025B6F4((uint64_t)&STACK[0x15A8], (void *)STACK[0x15B0]);
  sub_10025620C((uint64_t)&STACK[0x2F90]);
  sub_1002560E4((uint64_t)&STACK[0x1468]);
  sub_10025B6F4((uint64_t)&STACK[0x1708], (void *)STACK[0x1710]);
  sub_10025620C((uint64_t)&STACK[0x30E8]);
  sub_1002560E4((uint64_t)&STACK[0x15C8]);
  sub_10025B6F4((uint64_t)&STACK[0x1868], (void *)STACK[0x1870]);
  sub_10025620C((uint64_t)&STACK[0x3240]);
  sub_1002560E4((uint64_t)&STACK[0x1728]);
  sub_10025B6F4((uint64_t)&STACK[0x19C8], (void *)STACK[0x19D0]);
  sub_10025620C((uint64_t)&STACK[0x3398]);
  sub_1002560E4((uint64_t)&STACK[0x1888]);
  sub_10025B6F4((uint64_t)&STACK[0x1B28], (void *)STACK[0x1B30]);
  sub_10025620C((uint64_t)&STACK[0x34F0]);
  sub_1002560E4((uint64_t)&STACK[0x19E8]);
  sub_10025B6F4((uint64_t)&STACK[0x1C88], *(void **)(v48 + 328));
  sub_10025620C((uint64_t)&STACK[0x3648]);
  sub_1002560E4((uint64_t)&STACK[0x1B48]);
  _Unwind_Resume(a1);
}

void sub_10026D278()
{
}

void sub_10026D284()
{
}

void sub_10026D290()
{
}

void sub_10026D2A0()
{
}

void sub_10026D2AC()
{
}

void sub_10026D2B8()
{
}

void sub_10026D2C8()
{
}

void sub_10026D2D4()
{
}

void sub_10026D2E0()
{
}

void sub_10026D2F0()
{
}

void sub_10026D2FC()
{
}

void sub_10026D308()
{
}

void sub_10026D318()
{
}

void sub_10026D324()
{
}

void sub_10026D330()
{
}

void sub_10026D340()
{
}

void sub_10026D34C()
{
}

void sub_10026D358()
{
}

void sub_10026D368()
{
}

void sub_10026D374()
{
}

void sub_10026D380()
{
}

void sub_10026D390()
{
}

void sub_10026D39C()
{
}

void sub_10026D3A8()
{
}

void sub_10026D3B8()
{
}

void sub_10026D3C4()
{
}

void sub_10026D3D0()
{
}

void sub_10026D3E0()
{
}

void sub_10026D3EC()
{
}

void sub_10026D3F8()
{
}

void sub_10026D408()
{
}

void sub_10026D414()
{
}

void sub_10026D420()
{
}

void sub_10026D430()
{
}

void sub_10026D43C()
{
}

void sub_10026D448()
{
}

void sub_10026D458()
{
}

void sub_10026D464()
{
}

void sub_10026D470()
{
}

void sub_10026D480()
{
}

void sub_10026D48C()
{
}

void sub_10026D498()
{
}

void sub_10026D4A8()
{
}

void sub_10026D4B4()
{
}

void sub_10026D4C0()
{
}

void sub_10026D4D0()
{
}

void sub_10026D4DC()
{
}

void sub_10026D4E8()
{
}

void sub_10026D4F8()
{
}

void sub_10026D504()
{
}

void sub_10026D510()
{
}

void sub_10026D520()
{
}

void sub_10026D52C()
{
}

void sub_10026D538()
{
}

void sub_10026D544()
{
}

void sub_10026D558()
{
}

void sub_10026D56C()
{
}

void sub_10026D580()
{
}

void sub_10026D588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __chkstk_darwin(a1, a2, a3);
  *(_OWORD *)char v470 = xmmword_1004BC950;
  *(_OWORD *)&v470[16] = unk_1004BC960;
  sub_1001A003C((uint64_t)&unk_1008A5BD8, (int *)v470, 4);
  xmmword_1008A5BF0 = xmmword_1004B7660;
  unk_1008A5C00 = xmmword_1004B7670;
  qword_1008A5C18 = 0;
  unk_1008A5C20 = 0;
  qword_1008A5C10 = 0x3FD999999999999ALL;
  unk_1008A5C28 = xmmword_1004B7680;
  dword_1008A5C38 = 5;
  qword_1008A5C40 = 0x4000000000000000;
  dword_1008A5C48 = 5;
  byte_1008A5C50 = 0;
  *(void *)&algn_1008A5C51[3] = 0x30000000ALL;
  xmmword_1008A5C60 = xmmword_1004B7690;
  unk_1008A5C70 = xmmword_1004B76A0;
  xmmword_1008A5C80 = xmmword_1004B76B0;
  qword_1008A5C90 = 0x3FE3333333333333;
  dword_1008A5C98 = 3;
  xmmword_1008A5CA0 = xmmword_1004B76C0;
  unk_1008A5CB0 = xmmword_1004B76A0;
  xmmword_1008A5CC0 = xmmword_1004B7690;
  qword_1008A5CD0 = 0x3FE3333333333333;
  byte_1008A5CD8 = 0;
  xmmword_1008A5CE0 = xmmword_1004B76D0;
  unk_1008A5CF0 = xmmword_1004B76E0;
  __asm { FMOV            V0.2D, #1.0 }
  long long v34 = _Q0;
  xmmword_1008A5D00 = _Q0;
  qword_1008A5D10 = 0xBFD3333333333333;
  xmmword_1008A5D18 = xmmword_1004B76F0;
  qword_1008A5D28 = 0x3E99999A40000000;
  xmmword_1008A5D30 = xmmword_1004B7670;
  qword_1008A5D48 = 0;
  unk_1008A5D50 = 0;
  qword_1008A5D40 = 0x3FD999999999999ALL;
  xmmword_1008A5D58 = xmmword_1004B7680;
  dword_1008A5D68 = 5;
  qword_1008A5D70 = 0x4000000000000000;
  dword_1008A5D78 = 4;
  qword_1008A5D80 = 0x300000008;
  qword_1008A5D88 = 0xC04E800000000000;
  *(void *)&long long __dst = 0xC04E800000000000;
  sub_1001A02EC((uint64_t)&unk_1008A5D90, (double *)&__dst, 1);
  xmmword_1008A5DA8 = xmmword_1004B7700;
  qword_1008A5DB8 = 0x4024000000000000;
  dword_1008A5DC0 = 45;
  byte_1008A5DC8 = 0;
  byte_1008A5DE0 = 0;
  qword_1008A5DE8 = 0;
  byte_1008A5DF0 = 0;
  dword_1008A5DF4 = 1;
  byte_1008A5DF8 = 1;
  xmmword_1008A5E00 = xmmword_1004B7710;
  unk_1008A5E10 = xmmword_1004B7720;
  xmmword_1008A5E20 = v34;
  qword_1008A5E30 = 0xC059000000000000;
  xmmword_1008A5E38 = xmmword_1004B7730;
  qword_1008A5E48 = (uint64_t)vdup_n_s32(0x3DCCCCCDu);
  xmmword_1008A5E50 = xmmword_1004B7670;
  qword_1008A5E60 = 0x3FD999999999999ALL;
  qword_1008A5E70 = 0;
  qword_1008A5E68 = 0;
  xmmword_1008A5E78 = xmmword_1004B7680;
  dword_1008A5E88 = 5;
  qword_1008A5E90 = 0x4000000000000000;
  dword_1008A5E98 = 10;
  qword_1008A5EA0 = 0x4034000000000000;
  dword_1008A5EA8 = 3;
  xmmword_1008A5EB0 = xmmword_1004B7740;
  __cxa_atexit((void (*)(void *))sub_10019E4F8, &unk_1008A5BD8, (void *)&_mh_execute_header);
  sub_100004950(&qword_1008A5EC0, "MacBook");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1008A5EC0, (void *)&_mh_execute_header);
  sub_100004950(&qword_1008A5ED8, "MacBookAir");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1008A5ED8, (void *)&_mh_execute_header);
  sub_100004950(&qword_1008A5EF0, "MacBookPro");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1008A5EF0, (void *)&_mh_execute_header);
  sub_100004950(&qword_1008A5F08, "iMac");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1008A5F08, (void *)&_mh_execute_header);
  sub_100004950(&qword_1008A5F20, "Macmini");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1008A5F20, (void *)&_mh_execute_header);
  sub_100004950(qword_1008A5F38, "MacPro");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008A5F38, (void *)&_mh_execute_header);
  sub_100004950(qword_1008A5F50, "Mac");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008A5F50, (void *)&_mh_execute_header);
  sub_100004950(qword_1008A5F68, "iPad");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008A5F68, (void *)&_mh_execute_header);
  sub_100004950(qword_1008A5F80, "iPhone");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008A5F80, (void *)&_mh_execute_header);
  sub_100004950(qword_1008A5F98, "iPhone10");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008A5F98, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A5FB0, "Device1,21760");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A5FB0, (void *)&_mh_execute_header);
  sub_100004950(qword_1008A5FC8, "AudioAccessory");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008A5FC8, (void *)&_mh_execute_header);
  sub_100004950(qword_1008A5FE0, "Watch");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008A5FE0, (void *)&_mh_execute_header);
  sub_100004950(qword_1008A5FF8, "ATVRemote1,");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008A5FF8, (void *)&_mh_execute_header);
  sub_100004950(&qword_1008A6010, "BeatsStudio3,2");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1008A6010, (void *)&_mh_execute_header);
  sub_100004950(&qword_1008A6028, "BeatsX1,1");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1008A6028, (void *)&_mh_execute_header);
  sub_100004950(&qword_1008A6040, "BeatsSolo3,1");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1008A6040, (void *)&_mh_execute_header);
  sub_100004950(&qword_1008A6058, "Device1,8202");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1008A6058, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A6070, "Device1,8212");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6070, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A6088, "ATVRemote1,3");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6088, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A60A0, "ATVRemote1,4");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A60A0, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A60B8, "A2538");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A60B8, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A60D0, "iPhone10,1");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A60D0, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A60E8, "iPhone10,2");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A60E8, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A6100, "iPhone10,3");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6100, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A6118, "iPhone10,4");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6118, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A6130, "iPhone10,5");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6130, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A6148, "iPhone10,6");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6148, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A6160, "iPhone11,2");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6160, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A6178, "iPhone11,6");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6178, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A6190, "iPhone11,8");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6190, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A61A8, "iPhone12,1");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A61A8, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A61C0, "iPhone12,3");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A61C0, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A61D8, "iPhone12,5");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A61D8, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A61F0, "iPhone13,1");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A61F0, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A6208, "iPhone13,2");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6208, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A6220, "iPhone13,3");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6220, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A6238, "iPhone13,4");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6238, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A6250, "iPhone14,2");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6250, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A6268, "iPhone14,3");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6268, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A6280, "iPhone14,4");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6280, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A6298, "iPhone14,5");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6298, (void *)&_mh_execute_header);
  sub_100004950(qword_1008A62B0, "iPhone15,2");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008A62B0, (void *)&_mh_execute_header);
  sub_100004950(qword_1008A62C8, "iPhone15,3");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008A62C8, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A62E0, "iMac18,1");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A62E0, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A62F8, "iMac18,2");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A62F8, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A6310, "iMac18,3");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6310, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A6328, "MacBookPro13,2");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6328, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A6340, "MacBookPro14,2");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6340, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A6358, "MacBookPro13,3");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6358, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A6370, "MacBookPro14,3");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6370, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A6388, "iPod9,1");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6388, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A63A0, "AudioAccessory5,1,");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A63A0, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A63B8, "AudioAccessory6,1,");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A63B8, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A63D0, "Watch6,18");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A63D0, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A63E8, "DovePeace");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A63E8, (void *)&_mh_execute_header);
  sub_100004950(&qword_1008A6400, "Any");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1008A6400, (void *)&_mh_execute_header);
  *(_DWORD *)char v470 = 788;
  if (byte_1008A609F < 0)
  {
    sub_100002DE4(&v470[8], (void *)xmmword_1008A6088, *((unint64_t *)&xmmword_1008A6088 + 1));
  }
  else
  {
    *(_OWORD *)&v470[8] = xmmword_1008A6088;
    *(void *)&v470[24] = unk_1008A6098;
  }
  int v471 = 789;
  if (byte_1008A60B7 < 0)
  {
    sub_100002DE4(&v472, (void *)xmmword_1008A60A0, *((unint64_t *)&xmmword_1008A60A0 + 1));
  }
  else
  {
    long long v472 = xmmword_1008A60A0;
    uint64_t v473 = unk_1008A60B0;
  }
  int v474 = 1106;
  if (byte_1008A60CF < 0)
  {
    sub_100002DE4(&v476, (void *)xmmword_1008A60B8, *((unint64_t *)&xmmword_1008A60B8 + 1));
  }
  else
  {
    long long v476 = xmmword_1008A60B8;
    uint64_t v477 = unk_1008A60C8;
  }
  int v478 = 8212;
  if (byte_1008A6087 < 0)
  {
    sub_100002DE4(&v479, (void *)xmmword_1008A6070, *((unint64_t *)&xmmword_1008A6070 + 1));
  }
  else
  {
    long long v479 = xmmword_1008A6070;
    v480[0] = unk_1008A6080;
  }
  sub_10025A2C4((uint64_t)&unk_1008A6418, (unsigned int *)v470, 4);
  for (uint64_t i = 0; i != -16; i -= 4)
  {
    if (SHIBYTE(v480[i]) < 0) {
      operator delete((void *)v480[i - 2]);
    }
  }
  __cxa_atexit((void (*)(void *))sub_1002560B8, &unk_1008A6418, (void *)&_mh_execute_header);
  *(void *)&xmmword_1008A6430 = 0x300000008;
  *((void *)&xmmword_1008A6430 + 1) = 0xC04E800000000000;
  *(void *)char v470 = 0xC04E800000000000;
  sub_1001A02EC((uint64_t)&unk_1008A6440, (double *)v470, 1);
  xmmword_1008A6458 = xmmword_1004B7700;
  qword_1008A6468 = 0x4024000000000000;
  dword_1008A6470 = 45;
  byte_1008A6478 = 0;
  byte_1008A6490 = 0;
  *(void *)&xmmword_1008A6498 = 0;
  BYTE8(xmmword_1008A6498) = 0;
  HIDWORD(xmmword_1008A6498) = 1;
  byte_1008A64A8 = 1;
  xmmword_1008A64B0 = xmmword_1004B7710;
  unk_1008A64C0 = xmmword_1004B7720;
  xmmword_1008A64D0 = v34;
  qword_1008A64E0 = 0xC059000000000000;
  unk_1008A64E8 = xmmword_1004B7730;
  int32x2_t v9 = vdup_n_s32(0x3DCCCCCDu);
  *(int32x2_t *)&xmmword_1008A64F8 = v9;
  *(long long *)((char *)&xmmword_1008A64F8 + 8) = xmmword_1004B7670;
  xmmword_1008A6518 = 0uLL;
  qword_1008A6510 = 0x3FD999999999999ALL;
  unk_1008A6528 = xmmword_1004B7680;
  LODWORD(xmmword_1008A6538) = 5;
  *((void *)&xmmword_1008A6538 + 1) = 0x4000000000000000;
  dword_1008A6548 = 10;
  qword_1008A6550 = 0x4034000000000000;
  LODWORD(xmmword_1008A6558) = 3;
  *(long long *)((char *)&xmmword_1008A6558 + 8) = xmmword_1004B7740;
  __cxa_atexit((void (*)(void *))sub_1002560E4, &xmmword_1008A6430, (void *)&_mh_execute_header);
  qword_1008A6570 = 0x300000010;
  qword_1008A6578 = 0xC046800000000000;
  *(void *)char v470 = 0xC046800000000000;
  sub_1001A02EC((uint64_t)&unk_1008A6580, (double *)v470, 1);
  unk_1008A6598 = xmmword_1004B7700;
  qword_1008A65A8 = 0x4024000000000000;
  dword_1008A65B0 = 45;
  byte_1008A65B8 = 0;
  byte_1008A65D0 = 0;
  qword_1008A65D8 = 0;
  byte_1008A65E0 = 0;
  dword_1008A65E4 = 1;
  byte_1008A65E8 = 1;
  xmmword_1008A65F0 = xmmword_1004B7710;
  unk_1008A6600 = xmmword_1004B7720;
  xmmword_1008A6610 = v34;
  qword_1008A6620 = 0xC059000000000000;
  unk_1008A6628 = xmmword_1004B7730;
  qword_1008A6638 = (uint64_t)v9;
  xmmword_1008A6640 = xmmword_1004B7670;
  qword_1008A6658 = 0;
  unk_1008A6660 = 0;
  qword_1008A6650 = 0x3FD999999999999ALL;
  unk_1008A6668 = xmmword_1004B7680;
  dword_1008A6678 = 5;
  qword_1008A6680 = 0x4000000000000000;
  dword_1008A6688 = 10;
  qword_1008A6690 = 0x4034000000000000;
  dword_1008A6698 = 3;
  xmmword_1008A66A0 = xmmword_1004B7740;
  __cxa_atexit((void (*)(void *))sub_1002560E4, &qword_1008A6570, (void *)&_mh_execute_header);
  qword_1008A66B0 = 0x200000003;
  qword_1008A66B8 = 0xC046800000000000;
  *(void *)char v470 = 0xC046800000000000;
  sub_1001A02EC((uint64_t)&unk_1008A66C0, (double *)v470, 1);
  unk_1008A66D8 = xmmword_1004B7700;
  qword_1008A66E8 = 0x4024000000000000;
  dword_1008A66F0 = 45;
  byte_1008A66F8 = 0;
  byte_1008A6710 = 0;
  qword_1008A6718 = 0;
  byte_1008A6720 = 0;
  dword_1008A6724 = 1;
  byte_1008A6728 = 1;
  xmmword_1008A6730 = xmmword_1004B7710;
  unk_1008A6740 = xmmword_1004B7720;
  xmmword_1008A6750 = v34;
  qword_1008A6760 = 0xC059000000000000;
  unk_1008A6768 = xmmword_1004B7730;
  qword_1008A6778 = (uint64_t)v9;
  xmmword_1008A6780 = xmmword_1004B7670;
  qword_1008A6798 = 0;
  unk_1008A67A0 = 0;
  qword_1008A6790 = 0x3FD999999999999ALL;
  unk_1008A67A8 = xmmword_1004B7680;
  dword_1008A67B8 = 5;
  qword_1008A67C0 = 0x4000000000000000;
  dword_1008A67C8 = 10;
  qword_1008A67D0 = 0x4034000000000000;
  dword_1008A67D8 = 3;
  xmmword_1008A67E0 = xmmword_1004B7740;
  __cxa_atexit((void (*)(void *))sub_1002560E4, &qword_1008A66B0, (void *)&_mh_execute_header);
  long long __dst = xmmword_1004BC970;
  long long v279 = unk_1004BC980;
  long long v280 = xmmword_1004BC990;
  sub_10025A67C((uint64_t)&v215, (int *)&__dst, 3);
  sub_1002597B8(v470, &xmmword_1008A6088, (uint64_t)&v215);
  long long v441 = xmmword_1004BC970;
  long long v442 = unk_1004BC980;
  *(_OWORD *)long long v443 = xmmword_1004BC990;
  sub_10025A67C((uint64_t)&v184, (int *)&v441, 3);
  sub_1002597B8((void *)&v472 + 1, &xmmword_1008A60A0, (uint64_t)&v184);
  sub_10025A7E0((uint64_t)&unk_1008A67F0, (const void **)v470, 2);
  for (uint64_t j = 0; j != -96; j -= 48)
  {
    sub_10003E96C((uint64_t)&v476 + j, *(void **)((char *)&v476 + j + 8));
    if (*(&v475 + j) < 0) {
      operator delete(*(void **)((char *)&v472 + j + 8));
    }
  }
  sub_10003E96C((uint64_t)&v184, v185);
  sub_10003E96C((uint64_t)&v215, v216);
  uint64_t v11 = __cxa_atexit((void (*)(void *))sub_10025612C, &unk_1008A67F0, (void *)&_mh_execute_header);
  sub_10025D608(v11, v12, v13);
  *(void *)&long long v441 = 0x300000010;
  *((void *)&v441 + 1) = 0xC042800000000000;
  *(void *)&long long __dst = 0xC042800000000000;
  sub_1001A02EC((uint64_t)&v442, (double *)&__dst, 1);
  *(_OWORD *)&v443[8] = xmmword_1004B7700;
  uint64_t v444 = 0x4024000000000000;
  int v445 = 45;
  LOBYTE(v446) = 0;
  v448[0] = 0;
  uint64_t v449 = 0;
  char v450 = 0;
  int v451 = 1;
  char v452 = 1;
  long long v453 = xmmword_1004B7710;
  long long v454 = xmmword_1004B7720;
  long long v455 = v34;
  unint64_t v456 = 0xC059000000000000;
  long long v457 = xmmword_1004B7730;
  int32x2_t v458 = vdup_n_s32(0x3DCCCCCDu);
  long long v459 = xmmword_1004B7670;
  uint64_t v461 = 0;
  uint64_t v462 = 0;
  uint64_t v460 = 0x3FD999999999999ALL;
  long long v463 = xmmword_1004B7680;
  int v464 = 5;
  uint64_t v465 = 0x4000000000000000;
  int v466 = 10;
  uint64_t v467 = 0x4034000000000000;
  int v468 = 3;
  long long v469 = xmmword_1004B7740;
  sub_1002599EC(v470, &xmmword_1008A60D0, (uint64_t)&v441);
  uint64_t v215 = 0x300000010;
  int v216 = (void *)0xC042800000000000;
  *(void *)&long long __dst = 0xC042800000000000;
  sub_1001A02EC((uint64_t)&v217, (double *)&__dst, 1);
  long long v219 = xmmword_1004B7700;
  uint64_t v220 = 0x4024000000000000;
  int v221 = 45;
  LOBYTE(v222) = 0;
  char v224 = 0;
  uint64_t v225 = 0;
  char v226 = 0;
  int v227 = 1;
  char v228 = 1;
  long long v229 = xmmword_1004B7710;
  long long v230 = xmmword_1004B7720;
  long long v231 = v34;
  unint64_t v232 = 0xC059000000000000;
  long long v233 = xmmword_1004B7730;
  int32x2_t v234 = vdup_n_s32(0x3DCCCCCDu);
  long long v235 = xmmword_1004B7670;
  uint64_t v237 = 0;
  uint64_t v238 = 0;
  uint64_t v236 = 0x3FD999999999999ALL;
  long long v239 = xmmword_1004B7680;
  int v240 = 5;
  uint64_t v241 = 0x4000000000000000;
  int v242 = 10;
  uint64_t v243 = 0x4034000000000000;
  int v244 = 3;
  long long v245 = xmmword_1004B7740;
  sub_1002599EC(v481, &xmmword_1008A60E8, (uint64_t)&v215);
  sub_10025B7BC((uint64_t)&v124, (const void **)v470, 2);
  sub_100259B04(&v378, &xmmword_1008A60D0, (const void ***)&v124);
  uint64_t v184 = 0x300000010;
  uint64_t v185 = (void *)0xC042800000000000;
  uint64_t v409 = 0xC042800000000000;
  sub_1001A02EC((uint64_t)&v186, (double *)&v409, 1);
  long long v188 = xmmword_1004B7700;
  uint64_t v189 = 0x4024000000000000;
  int v190 = 45;
  LOBYTE(v191) = 0;
  char v193 = 0;
  uint64_t v194 = 0;
  char v195 = 0;
  int v196 = 1;
  char v197 = 1;
  long long v198 = xmmword_1004B7710;
  long long v199 = xmmword_1004B7720;
  long long v200 = v34;
  unint64_t v201 = 0xC059000000000000;
  long long v202 = xmmword_1004B7730;
  int32x2_t v203 = vdup_n_s32(0x3DCCCCCDu);
  long long v204 = xmmword_1004B7670;
  uint64_t v206 = 0;
  uint64_t v207 = 0;
  uint64_t v205 = 0x3FD999999999999ALL;
  long long v208 = xmmword_1004B7680;
  int v209 = 5;
  uint64_t v210 = 0x4000000000000000;
  int v211 = 10;
  uint64_t v212 = 0x4034000000000000;
  int v213 = 3;
  long long v214 = xmmword_1004B7740;
  sub_1002599EC((char *)&__dst, &xmmword_1008A60D0, (uint64_t)&v184);
  uint64_t v409 = 0x300000010;
  uint64_t v410 = 0xC042800000000000;
  v289[0] = -37.0;
  sub_1001A02EC((uint64_t)&v411, v289, 1);
  long long v414 = xmmword_1004B7700;
  uint64_t v415 = 0x4024000000000000;
  int v416 = 45;
  LOBYTE(v417) = 0;
  char v419 = 0;
  uint64_t v420 = 0;
  char v421 = 0;
  int v422 = 1;
  char v423 = 1;
  long long v424 = xmmword_1004B7710;
  long long v425 = xmmword_1004B7720;
  long long v426 = v34;
  unint64_t v427 = 0xC059000000000000;
  long long v428 = xmmword_1004B7730;
  int32x2_t v429 = vdup_n_s32(0x3DCCCCCDu);
  long long v430 = xmmword_1004B7670;
  uint64_t v432 = 0;
  uint64_t v433 = 0;
  uint64_t v431 = 0x3FD999999999999ALL;
  long long v434 = xmmword_1004B7680;
  int v435 = 5;
  uint64_t v436 = 0x4000000000000000;
  int v437 = 10;
  uint64_t v438 = 0x4034000000000000;
  int v439 = 3;
  long long v440 = xmmword_1004B7740;
  sub_1002599EC(v285, &xmmword_1008A60E8, (uint64_t)&v409);
  sub_10025B7BC((uint64_t)&v318, (const void **)&__dst, 2);
  sub_100259B04((void *)&v381 + 1, &xmmword_1008A60E8, (const void ***)&v318);
  sub_10025BB7C((uint64_t)&v154, (const void **)&v378, 2);
  LODWORD(v348) = 2;
  sub_10025BDD4((uint64_t *)&v349, (const void ***)&v154);
  sub_10025BEB8((uint64_t)&unk_1008AC510, (int *)&v348, 1);
  sub_10025B644((uint64_t)&v349, v350[0]);
  sub_10025B644((uint64_t)&v154, v155);
  for (uint64_t k = 0; k != -12; k -= 6)
  {
    sub_10025B6F4((uint64_t)&v385[k], v385[k + 1]);
    if (*(&v384 + k * 8) < 0) {
      operator delete(*(void **)((char *)&v381 + k * 8 + 8));
    }
  }
  sub_10025B6F4((uint64_t)&v318, v319);
  uint64_t v15 = 688;
  do
  {
    long long v16 = (void **)((char *)&__dst + v15);
    if (v256[v15] && *((char *)v16 - 225) < 0) {
      operator delete(*(v16 - 31));
    }
    sub_10003E96C((uint64_t)(v16 - 38), *(v16 - 37));
    if (*((char *)v16 - 321) < 0) {
      operator delete(*(v16 - 43));
    }
    v15 -= 344;
  }
  while (v15);
  if (v419 && v418 < 0) {
    operator delete(v417);
  }
  sub_10003E96C((uint64_t)&v411, v412);
  if (v193 && v192 < 0) {
    operator delete(v191);
  }
  sub_10003E96C((uint64_t)&v186, v187);
  sub_10025B6F4((uint64_t)&v124, v125);
  uint64_t v17 = 688;
  do
  {
    char v18 = (void **)&v470[v17];
    if (v448[v17] && *((char *)v18 - 225) < 0) {
      operator delete(*(v18 - 31));
    }
    sub_10003E96C((uint64_t)(v18 - 38), *(v18 - 37));
    if (*((char *)v18 - 321) < 0) {
      operator delete(*(v18 - 43));
    }
    v17 -= 344;
  }
  while (v17);
  if (v224 && v223 < 0) {
    operator delete(v222);
  }
  sub_10003E96C((uint64_t)&v217, v218);
  if (v448[0] && v447 < 0) {
    operator delete(v446);
  }
  sub_10003E96C((uint64_t)&v442, *((void **)&v442 + 1));
  __cxa_atexit((void (*)(void *))sub_100256264, &unk_1008AC510, (void *)&_mh_execute_header);
  *(void *)&long long v441 = 0x300000010;
  *((void *)&v441 + 1) = 0xC044000000000000;
  *(void *)&long long __dst = 0xC044000000000000;
  sub_1001A02EC((uint64_t)&v442, (double *)&__dst, 1);
  *(_OWORD *)&v443[8] = xmmword_1004B7700;
  uint64_t v444 = 0x4024000000000000;
  int v445 = 45;
  LOBYTE(v446) = 0;
  v448[0] = 0;
  uint64_t v449 = 0;
  char v450 = 0;
  int v451 = 1;
  char v452 = 1;
  long long v453 = xmmword_1004B7710;
  long long v454 = xmmword_1004B7720;
  long long v455 = v34;
  unint64_t v456 = 0xC059000000000000;
  long long v457 = xmmword_1004B7730;
  int32x2_t v458 = vdup_n_s32(0x3DCCCCCDu);
  long long v459 = xmmword_1004B7670;
  uint64_t v461 = 0;
  uint64_t v462 = 0;
  uint64_t v460 = 0x3FD999999999999ALL;
  long long v463 = xmmword_1004B7680;
  int v464 = 5;
  uint64_t v465 = 0x4000000000000000;
  int v466 = 10;
  uint64_t v467 = 0x4034000000000000;
  int v468 = 3;
  long long v469 = xmmword_1004B7740;
  sub_1002599EC(v470, &xmmword_1008A63E8, (uint64_t)&v441);
  uint64_t v215 = 0x200000003;
  int v216 = (void *)0xC04B800000000000;
  *(void *)&long long __dst = 0xC04B800000000000;
  sub_1001A02EC((uint64_t)&v217, (double *)&__dst, 1);
  long long v219 = xmmword_1004BC940;
  uint64_t v220 = 0x4000000000000000;
  int v221 = 20;
  LOBYTE(v222) = 0;
  char v224 = 0;
  uint64_t v225 = 0;
  char v226 = 0;
  int v227 = 1;
  char v228 = 1;
  long long v229 = xmmword_1004B7710;
  long long v230 = xmmword_1004B7720;
  long long v231 = v34;
  unint64_t v232 = 0xC059000000000000;
  long long v233 = xmmword_1004B7730;
  int32x2_t v234 = vdup_n_s32(0x3DCCCCCDu);
  long long v235 = xmmword_1004B7670;
  uint64_t v237 = 0;
  uint64_t v238 = 0;
  uint64_t v236 = 0x3FD999999999999ALL;
  long long v239 = xmmword_1004B7680;
  int v240 = 5;
  uint64_t v241 = 0x4000000000000000;
  int v242 = 10;
  uint64_t v243 = 0x4034000000000000;
  int v244 = 3;
  long long v245 = xmmword_1004B7740;
  sub_1002599EC(v481, &xmmword_1008A60B8, (uint64_t)&v215);
  sub_10025B7BC((uint64_t)&v154, (const void **)v470, 2);
  LODWORD(v409) = 7;
  sub_10025BA98(&v410, (const void ***)&v154);
  uint64_t v184 = 0x300000010;
  uint64_t v185 = (void *)0xC044800000000000;
  unint64_t v318 = 0xC044800000000000;
  sub_1001A02EC((uint64_t)&v186, (double *)&v318, 1);
  long long v188 = xmmword_1004B7700;
  uint64_t v189 = 0x4024000000000000;
  int v190 = 45;
  LOBYTE(v191) = 0;
  char v193 = 0;
  uint64_t v194 = 0;
  char v195 = 0;
  int v196 = 1;
  char v197 = 1;
  long long v198 = xmmword_1004B7710;
  long long v199 = xmmword_1004B7720;
  long long v200 = v34;
  unint64_t v201 = 0xC059000000000000;
  long long v202 = xmmword_1004B7730;
  int32x2_t v203 = vdup_n_s32(0x3DCCCCCDu);
  long long v204 = xmmword_1004B7670;
  uint64_t v206 = 0;
  uint64_t v207 = 0;
  uint64_t v205 = 0x3FD999999999999ALL;
  long long v208 = xmmword_1004B7680;
  int v209 = 5;
  uint64_t v210 = 0x4000000000000000;
  int v211 = 10;
  uint64_t v212 = 0x4034000000000000;
  int v213 = 3;
  long long v214 = xmmword_1004B7740;
  sub_1002599EC((char *)&__dst, &xmmword_1008A63E8, (uint64_t)&v184);
  sub_10025B7BC((uint64_t)&v124, (const void **)&__dst, 1);
  int v413 = 6;
  sub_10025BA98((uint64_t *)&v414, (const void ***)&v124);
  sub_10025C164((uint64_t)&v348, (int *)&v409, 2);
  LODWORD(v378) = 2;
  sub_10025C350(&v379, (uint64_t)&v348);
  sub_10025C434((uint64_t)&unk_1008AC528, (int *)&v378, 1);
  sub_10025C104((uint64_t)&v379, v380[0]);
  sub_10025C104((uint64_t)&v348, v349);
  for (uint64_t m = 0; m != -64; m -= 32)
    sub_10025B6F4((uint64_t)&v414 + m, *(void **)((char *)&v414 + m + 8));
  sub_10025B6F4((uint64_t)&v124, v125);
  if (v284 && v283 < 0) {
    operator delete(v282);
  }
  sub_10003E96C((uint64_t)&v280 + 8, v281);
  if (SBYTE7(v279) < 0) {
    operator delete((void *)__dst);
  }
  if (v193 && v192 < 0) {
    operator delete(v191);
  }
  sub_10003E96C((uint64_t)&v186, v187);
  sub_10025B6F4((uint64_t)&v154, v155);
  uint64_t v20 = 688;
  do
  {
    int v21 = (void **)&v470[v20];
    if (v448[v20] && *((char *)v21 - 225) < 0) {
      operator delete(*(v21 - 31));
    }
    sub_10003E96C((uint64_t)(v21 - 38), *(v21 - 37));
    if (*((char *)v21 - 321) < 0) {
      operator delete(*(v21 - 43));
    }
    v20 -= 344;
  }
  while (v20);
  if (v224 && v223 < 0) {
    operator delete(v222);
  }
  sub_10003E96C((uint64_t)&v217, v218);
  if (v448[0] && v447 < 0) {
    operator delete(v446);
  }
  sub_10003E96C((uint64_t)&v442, *((void **)&v442 + 1));
  __cxa_atexit((void (*)(void *))sub_100256290, &unk_1008AC528, (void *)&_mh_execute_header);
  *(void *)&long long v441 = 0x300000010;
  *((void *)&v441 + 1) = 0xC044000000000000;
  *(void *)&long long __dst = 0xC044000000000000;
  sub_1001A02EC((uint64_t)&v442, (double *)&__dst, 1);
  *(_OWORD *)&v443[8] = xmmword_1004B7700;
  uint64_t v444 = 0x4024000000000000;
  int v445 = 45;
  LOBYTE(v446) = 0;
  v448[0] = 0;
  uint64_t v449 = 0;
  char v450 = 0;
  int v451 = 1;
  char v452 = 1;
  long long v453 = xmmword_1004B7710;
  long long v454 = xmmword_1004B7720;
  long long v455 = v34;
  unint64_t v456 = 0xC059000000000000;
  long long v457 = xmmword_1004B7730;
  int32x2_t v458 = vdup_n_s32(0x3DCCCCCDu);
  long long v459 = xmmword_1004B7670;
  uint64_t v461 = 0;
  uint64_t v462 = 0;
  uint64_t v460 = 0x3FD999999999999ALL;
  long long v463 = xmmword_1004B7680;
  int v464 = 5;
  uint64_t v465 = 0x4000000000000000;
  int v466 = 10;
  uint64_t v467 = 0x4034000000000000;
  int v468 = 3;
  long long v469 = xmmword_1004B7740;
  sub_1002599EC(v470, &xmmword_1008A60D0, (uint64_t)&v441);
  uint64_t v215 = 0x300000010;
  int v216 = (void *)0xC044000000000000;
  *(void *)&long long __dst = 0xC044000000000000;
  sub_1001A02EC((uint64_t)&v217, (double *)&__dst, 1);
  long long v219 = xmmword_1004B7700;
  uint64_t v220 = 0x4024000000000000;
  int v221 = 45;
  LOBYTE(v222) = 0;
  char v224 = 0;
  uint64_t v225 = 0;
  char v226 = 0;
  int v227 = 1;
  char v228 = 1;
  long long v229 = xmmword_1004B7710;
  long long v230 = xmmword_1004B7720;
  long long v231 = v34;
  unint64_t v232 = 0xC059000000000000;
  long long v233 = xmmword_1004B7730;
  int32x2_t v234 = vdup_n_s32(0x3DCCCCCDu);
  long long v235 = xmmword_1004B7670;
  uint64_t v237 = 0;
  uint64_t v238 = 0;
  uint64_t v236 = 0x3FD999999999999ALL;
  long long v239 = xmmword_1004B7680;
  int v240 = 5;
  uint64_t v241 = 0x4000000000000000;
  int v242 = 10;
  uint64_t v243 = 0x4034000000000000;
  int v244 = 3;
  long long v245 = xmmword_1004B7740;
  sub_1002599EC(v481, &xmmword_1008A60E8, (uint64_t)&v215);
  uint64_t v184 = 0x300000010;
  uint64_t v185 = (void *)0xC045800000000000;
  *(void *)&long long __dst = 0xC045800000000000;
  sub_1001A02EC((uint64_t)&v186, (double *)&__dst, 1);
  long long v188 = xmmword_1004B7700;
  uint64_t v189 = 0x4024000000000000;
  int v190 = 45;
  LOBYTE(v191) = 0;
  char v193 = 0;
  uint64_t v194 = 0;
  char v195 = 0;
  int v196 = 1;
  char v197 = 1;
  long long v198 = xmmword_1004B7710;
  long long v199 = xmmword_1004B7720;
  long long v200 = v34;
  unint64_t v201 = 0xC059000000000000;
  long long v202 = xmmword_1004B7730;
  int32x2_t v203 = vdup_n_s32(0x3DCCCCCDu);
  long long v204 = xmmword_1004B7670;
  uint64_t v206 = 0;
  uint64_t v207 = 0;
  uint64_t v205 = 0x3FD999999999999ALL;
  long long v208 = xmmword_1004B7680;
  int v209 = 5;
  uint64_t v210 = 0x4000000000000000;
  int v211 = 10;
  uint64_t v212 = 0x4034000000000000;
  int v213 = 3;
  long long v214 = xmmword_1004B7740;
  sub_1002599EC(v482, &xmmword_1008A6388, (uint64_t)&v184);
  sub_1002599EC(v483, &xmmword_1008A63D0, (uint64_t)&qword_1008A6570);
  uint64_t v409 = 0x200000003;
  uint64_t v410 = 0xC045000000000000;
  *(void *)&long long __dst = 0xC045000000000000;
  sub_1001A02EC((uint64_t)&v411, (double *)&__dst, 1);
  long long v414 = xmmword_1004B7700;
  uint64_t v415 = 0x4024000000000000;
  int v416 = 45;
  LOBYTE(v417) = 0;
  char v419 = 0;
  uint64_t v420 = 0;
  char v421 = 0;
  int v422 = 1;
  char v423 = 1;
  long long v424 = xmmword_1004B7710;
  long long v425 = xmmword_1004B7720;
  long long v426 = v34;
  unint64_t v427 = 0xC059000000000000;
  long long v428 = xmmword_1004B7730;
  int32x2_t v429 = vdup_n_s32(0x3DCCCCCDu);
  long long v430 = xmmword_1004B7670;
  uint64_t v432 = 0;
  uint64_t v433 = 0;
  uint64_t v431 = 0x3FD999999999999ALL;
  long long v434 = xmmword_1004B7680;
  int v435 = 5;
  uint64_t v436 = 0x4000000000000000;
  int v437 = 10;
  uint64_t v438 = 0x4034000000000000;
  int v439 = 3;
  long long v440 = xmmword_1004B7740;
  sub_1002599EC(v484, &xmmword_1008A6070, (uint64_t)&v409);
  uint64_t v378 = 0x200000003;
  uint64_t v379 = 0xC043000000000000;
  *(void *)&long long __dst = 0xC043000000000000;
  sub_1001A02EC((uint64_t)v380, (double *)&__dst, 1);
  long long v381 = xmmword_1004B7700;
  uint64_t v382 = 0x4024000000000000;
  int v383 = 45;
  LOBYTE(v385[0]) = 0;
  char v387 = 0;
  uint64_t v388 = 0;
  char v389 = 0;
  int v390 = 1;
  char v391 = 1;
  long long v392 = xmmword_1004B7710;
  long long v393 = xmmword_1004B7720;
  long long v394 = v34;
  unint64_t v395 = 0xC059000000000000;
  long long v396 = xmmword_1004B7730;
  int32x2_t v397 = vdup_n_s32(0x3DCCCCCDu);
  long long v398 = xmmword_1004B7670;
  uint64_t v400 = 0;
  uint64_t v401 = 0;
  uint64_t v399 = 0x3FD999999999999ALL;
  long long v402 = xmmword_1004B7680;
  int v403 = 5;
  uint64_t v404 = 0x4000000000000000;
  int v405 = 10;
  uint64_t v406 = 0x4034000000000000;
  int v407 = 3;
  long long v408 = xmmword_1004B7740;
  sub_1002599EC(v485, &qword_1008A6058, (uint64_t)&v378);
  uint64_t v348 = 0x200000003;
  uint64_t v349 = (void *)0xC044800000000000;
  *(void *)&long long __dst = 0xC044800000000000;
  sub_1001A02EC((uint64_t)v350, (double *)&__dst, 1);
  long long v351 = xmmword_1004B7700;
  uint64_t v352 = 0x4024000000000000;
  int v353 = 45;
  LOBYTE(v354) = 0;
  char v356 = 0;
  uint64_t v357 = 0;
  char v358 = 0;
  int v359 = 1;
  char v360 = 1;
  long long v361 = xmmword_1004B7710;
  long long v362 = xmmword_1004B7720;
  long long v363 = v34;
  unint64_t v364 = 0xC059000000000000;
  long long v365 = xmmword_1004B7730;
  int32x2_t v366 = vdup_n_s32(0x3DCCCCCDu);
  long long v367 = xmmword_1004B7670;
  uint64_t v369 = 0;
  uint64_t v370 = 0;
  uint64_t v368 = 0x3FD999999999999ALL;
  long long v371 = xmmword_1004B7680;
  int v372 = 5;
  uint64_t v373 = 0x4000000000000000;
  int v374 = 10;
  uint64_t v375 = 0x4034000000000000;
  int v376 = 3;
  long long v377 = xmmword_1004B7740;
  sub_1002599EC(v486, &qword_1008A6028, (uint64_t)&v348);
  uint64_t v154 = 0x200000003;
  uint64_t v155 = (void *)0xC043000000000000;
  *(void *)&long long __dst = 0xC043000000000000;
  sub_1001A02EC((uint64_t)v156, (double *)&__dst, 1);
  long long v157 = xmmword_1004B7700;
  uint64_t v158 = 0x4024000000000000;
  int v159 = 45;
  LOBYTE(v160) = 0;
  char v162 = 0;
  uint64_t v163 = 0;
  char v164 = 0;
  int v165 = 1;
  char v166 = 1;
  long long v167 = xmmword_1004B7710;
  long long v168 = xmmword_1004B7720;
  long long v169 = v34;
  unint64_t v170 = 0xC059000000000000;
  long long v171 = xmmword_1004B7730;
  int32x2_t v172 = vdup_n_s32(0x3DCCCCCDu);
  long long v173 = xmmword_1004B7670;
  uint64_t v175 = 0;
  uint64_t v176 = 0;
  uint64_t v174 = 0x3FD999999999999ALL;
  long long v177 = xmmword_1004B7680;
  int v178 = 5;
  uint64_t v179 = 0x4000000000000000;
  int v180 = 10;
  uint64_t v181 = 0x4034000000000000;
  int v182 = 3;
  long long v183 = xmmword_1004B7740;
  sub_1002599EC(v487, &qword_1008A6040, (uint64_t)&v154);
  uint64_t v124 = 0x200000003;
  uint64_t v125 = (void *)0xC043000000000000;
  *(void *)&long long __dst = 0xC043000000000000;
  sub_1001A02EC((uint64_t)v126, (double *)&__dst, 1);
  long long v127 = xmmword_1004B7700;
  uint64_t v128 = 0x4024000000000000;
  int v129 = 45;
  LOBYTE(v130) = 0;
  char v132 = 0;
  uint64_t v133 = 0;
  char v134 = 0;
  int v135 = 1;
  char v136 = 1;
  long long v137 = xmmword_1004B7710;
  long long v138 = xmmword_1004B7720;
  long long v139 = v34;
  unint64_t v140 = 0xC059000000000000;
  long long v141 = xmmword_1004B7730;
  int32x2_t v142 = vdup_n_s32(0x3DCCCCCDu);
  long long v143 = xmmword_1004B7670;
  uint64_t v145 = 0;
  uint64_t v146 = 0;
  uint64_t v144 = 0x3FD999999999999ALL;
  long long v147 = xmmword_1004B7680;
  int v148 = 5;
  uint64_t v149 = 0x4000000000000000;
  int v150 = 10;
  uint64_t v151 = 0x4034000000000000;
  int v152 = 3;
  long long v153 = xmmword_1004B7740;
  sub_1002599EC(v488, &qword_1008A6010, (uint64_t)&v124);
  unint64_t v318 = 0x200000003;
  uint64_t v319 = (void *)0xC046800000000000;
  *(void *)&long long __dst = 0xC046800000000000;
  sub_1001A02EC((uint64_t)v320, (double *)&__dst, 1);
  long long v321 = xmmword_1004B7700;
  uint64_t v322 = 0x4024000000000000;
  int v323 = 45;
  LOBYTE(v324) = 0;
  char v326 = 0;
  uint64_t v327 = 0;
  char v328 = 0;
  int v329 = 1;
  char v330 = 1;
  long long v331 = xmmword_1004B7710;
  long long v332 = xmmword_1004B7720;
  long long v333 = v34;
  unint64_t v334 = 0xC059000000000000;
  long long v335 = xmmword_1004B7730;
  int32x2_t v336 = vdup_n_s32(0x3DCCCCCDu);
  long long v337 = xmmword_1004B7670;
  uint64_t v339 = 0;
  uint64_t v340 = 0;
  uint64_t v338 = 0x3FD999999999999ALL;
  long long v341 = xmmword_1004B7680;
  int v342 = 5;
  uint64_t v343 = 0x4000000000000000;
  int v344 = 10;
  uint64_t v345 = 0x4034000000000000;
  int v346 = 3;
  long long v347 = xmmword_1004B7740;
  sub_1002599EC(v489, &xmmword_1008A5FB0, (uint64_t)&v318);
  *(void *)&v289[0] = 0x300000008;
  v289[1] = -41.0;
  *(void *)&long long __dst = 0xC044800000000000;
  sub_1001A02EC((uint64_t)v290, (double *)&__dst, 1);
  long long v291 = xmmword_1004B7700;
  uint64_t v292 = 0x4024000000000000;
  int v293 = 45;
  LOBYTE(v294) = 0;
  char v296 = 0;
  uint64_t v297 = 0;
  char v298 = 0;
  int v299 = 1;
  char v300 = 1;
  long long v301 = xmmword_1004B7710;
  long long v302 = xmmword_1004B7720;
  long long v303 = v34;
  unint64_t v304 = 0xC059000000000000;
  long long v305 = xmmword_1004B7730;
  int32x2_t v306 = vdup_n_s32(0x3DCCCCCDu);
  long long v307 = xmmword_1004B7670;
  uint64_t v309 = 0;
  uint64_t v310 = 0;
  uint64_t v308 = 0x3FD999999999999ALL;
  long long v311 = xmmword_1004B7680;
  int v312 = 5;
  uint64_t v313 = 0x4000000000000000;
  int v314 = 10;
  uint64_t v315 = 0x4034000000000000;
  int v316 = 3;
  long long v317 = xmmword_1004B7740;
  sub_1002599EC(v490, &xmmword_1008A63A0, (uint64_t)v289);
  v95[0] = 0x200000003;
  v95[1] = 0xC049000000000000;
  *(void *)&long long __dst = 0xC049000000000000;
  sub_1001A02EC((uint64_t)v96, (double *)&__dst, 1);
  long long v97 = xmmword_1004BC940;
  uint64_t v98 = 0x4000000000000000;
  int v99 = 20;
  LOBYTE(v100) = 0;
  char v102 = 0;
  uint64_t v103 = 0;
  char v104 = 0;
  int v105 = 1;
  char v106 = 1;
  long long v107 = xmmword_1004B7710;
  long long v108 = xmmword_1004B7720;
  long long v109 = v34;
  unint64_t v110 = 0xC059000000000000;
  long long v111 = xmmword_1004B7730;
  int32x2_t v112 = vdup_n_s32(0x3DCCCCCDu);
  long long v113 = xmmword_1004B7670;
  uint64_t v115 = 0;
  uint64_t v116 = 0;
  uint64_t v114 = 0x3FD999999999999ALL;
  long long v117 = xmmword_1004B7680;
  int v118 = 5;
  uint64_t v119 = 0x4000000000000000;
  int v120 = 10;
  uint64_t v121 = 0x4034000000000000;
  int v122 = 3;
  long long v123 = xmmword_1004B7740;
  sub_1002599EC(v491, &xmmword_1008A6088, (uint64_t)v95);
  v66[0] = 0x200000003;
  v66[1] = 0xC049000000000000;
  *(void *)&long long __dst = 0xC049000000000000;
  sub_1001A02EC((uint64_t)v67, (double *)&__dst, 1);
  long long v68 = xmmword_1004BC940;
  uint64_t v69 = 0x4000000000000000;
  int v70 = 20;
  LOBYTE(v71) = 0;
  char v73 = 0;
  uint64_t v74 = 0;
  char v75 = 0;
  int v76 = 1;
  char v77 = 1;
  long long v78 = xmmword_1004B7710;
  long long v79 = xmmword_1004B7720;
  long long v80 = v34;
  unint64_t v81 = 0xC059000000000000;
  long long v82 = xmmword_1004B7730;
  int32x2_t v83 = vdup_n_s32(0x3DCCCCCDu);
  long long v84 = xmmword_1004B7670;
  uint64_t v86 = 0;
  uint64_t v87 = 0;
  uint64_t v85 = 0x3FD999999999999ALL;
  long long v88 = xmmword_1004B7680;
  int v89 = 5;
  uint64_t v90 = 0x4000000000000000;
  int v91 = 10;
  uint64_t v92 = 0x4034000000000000;
  int v93 = 3;
  long long v94 = xmmword_1004B7740;
  sub_1002599EC(v492, &xmmword_1008A60A0, (uint64_t)v66);
  sub_10025B7BC((uint64_t)v246, (const void **)v470, 13);
  sub_100259B04(v493, &qword_1008A6400, v246);
  sub_10025BB7C((uint64_t)v247, v493, 1);
  int v496 = 2;
  sub_10025BDD4(v497, v247);
  v35[0] = 0x300000008;
  v35[1] = 0xC03C000000000000;
  v249[0] = -28.0;
  sub_1001A02EC((uint64_t)v36, v249, 1);
  long long v37 = xmmword_1004B7700;
  uint64_t v38 = 0x4024000000000000;
  int v39 = 45;
  LOBYTE(__p) = 0;
  char v42 = 0;
  uint64_t v43 = 0;
  char v44 = 0;
  int v45 = 1;
  char v46 = 1;
  long long v47 = xmmword_1004B7710;
  long long v48 = xmmword_1004B7720;
  long long v49 = v34;
  unint64_t v50 = 0xC059000000000000;
  long long v51 = xmmword_1004B7730;
  int32x2_t v52 = vdup_n_s32(0x3DCCCCCDu);
  long long v53 = xmmword_1004B7670;
  uint64_t v55 = 0;
  uint64_t v56 = 0;
  uint64_t v54 = 0x3FD999999999999ALL;
  long long v57 = xmmword_1004B7680;
  int v58 = 5;
  uint64_t v59 = 0x4000000000000000;
  int v60 = 10;
  uint64_t v61 = 0x4034000000000000;
  int v62 = 3;
  long long v63 = xmmword_1004B7740;
  sub_1002599EC((char *)&__dst, &xmmword_1008A63A0, (uint64_t)v35);
  *(void *)&v249[0] = 0x300000008;
  v249[1] = -32.0;
  double v248 = -32.0;
  sub_1001A02EC((uint64_t)v250, &v248, 1);
  long long v251 = xmmword_1004B7700;
  uint64_t v252 = 0x4024000000000000;
  int v253 = 45;
  LOBYTE(v254) = 0;
  v256[0] = 0;
  uint64_t v257 = 0;
  char v258 = 0;
  int v259 = 1;
  char v260 = 1;
  long long v261 = xmmword_1004B7710;
  long long v262 = xmmword_1004B7720;
  long long v263 = v34;
  unint64_t v264 = 0xC059000000000000;
  long long v265 = xmmword_1004B7730;
  int32x2_t v266 = vdup_n_s32(0x3DCCCCCDu);
  long long v267 = xmmword_1004B7670;
  uint64_t v269 = 0;
  uint64_t v270 = 0;
  uint64_t v268 = 0x3FD999999999999ALL;
  long long v271 = xmmword_1004B7680;
  int v272 = 5;
  uint64_t v273 = 0x4000000000000000;
  int v274 = 10;
  uint64_t v275 = 0x4034000000000000;
  int v276 = 3;
  long long v277 = xmmword_1004B7740;
  sub_1002599EC(v285, &xmmword_1008A63B8, (uint64_t)v249);
  sub_10025B7BC((uint64_t)v64, (const void **)&__dst, 2);
  sub_100259B04(v286, &qword_1008A6400, v64);
  sub_10025BB7C((uint64_t)v65, v286, 1);
  int v498 = 7;
  sub_10025BDD4(v499, v65);
  sub_10025BEB8((uint64_t)&unk_1008AC540, &v496, 2);
  for (uint64_t n = 0; n != -8; n -= 4)
    sub_10025B644((uint64_t)&v499[n], (void *)v499[n + 1]);
  sub_10025B644((uint64_t)v65, v65[1]);
  sub_10025B6F4((uint64_t)v288, v288[1]);
  if (v287 < 0) {
    operator delete((void *)v286[0]);
  }
  sub_10025B6F4((uint64_t)v64, v64[1]);
  uint64_t v23 = 688;
  do
  {
    long long v24 = (void **)((char *)&__dst + v23);
    if (v256[v23] && *((char *)v24 - 225) < 0) {
      operator delete(*(v24 - 31));
    }
    sub_10003E96C((uint64_t)(v24 - 38), *(v24 - 37));
    if (*((char *)v24 - 321) < 0) {
      operator delete(*(v24 - 43));
    }
    v23 -= 344;
  }
  while (v23);
  if (v256[0] && v255 < 0) {
    operator delete(v254);
  }
  sub_10003E96C((uint64_t)v250, v250[1]);
  if (v42 && v41 < 0) {
    operator delete(__p);
  }
  sub_10003E96C((uint64_t)v36, v36[1]);
  sub_10025B644((uint64_t)v247, v247[1]);
  sub_10025B6F4((uint64_t)v495, v495[1]);
  if (v494 < 0) {
    operator delete((void *)v493[0]);
  }
  sub_10025B6F4((uint64_t)v246, v246[1]);
  for (iuint64_t i = 0; ii != -4472; ii -= 344)
  {
    unint64_t v26 = (void **)&v470[ii];
    if (v492[ii + 120] && v492[ii + 119] < 0) {
      operator delete(v26[528]);
    }
    sub_10003E96C((uint64_t)&v492[ii + 40], v26[522]);
    if (v492[ii + 23] < 0) {
      operator delete(v26[516]);
    }
  }
  if (v73 && v72 < 0) {
    operator delete(v71);
  }
  sub_10003E96C((uint64_t)v67, v67[1]);
  if (v102 && v101 < 0) {
    operator delete(v100);
  }
  sub_10003E96C((uint64_t)v96, v96[1]);
  if (v296 && v295 < 0) {
    operator delete(v294);
  }
  sub_10003E96C((uint64_t)v290, v290[1]);
  if (v326 && v325 < 0) {
    operator delete(v324);
  }
  sub_10003E96C((uint64_t)v320, v320[1]);
  if (v132 && v131 < 0) {
    operator delete(v130);
  }
  sub_10003E96C((uint64_t)v126, v126[1]);
  if (v162 && v161 < 0) {
    operator delete(v160);
  }
  sub_10003E96C((uint64_t)v156, v156[1]);
  if (v356 && v355 < 0) {
    operator delete(v354);
  }
  sub_10003E96C((uint64_t)v350, v350[1]);
  if (v387 && v386 < 0) {
    operator delete(v385[0]);
  }
  sub_10003E96C((uint64_t)v380, v380[1]);
  if (v419 && v418 < 0) {
    operator delete(v417);
  }
  sub_10003E96C((uint64_t)&v411, v412);
  if (v193 && v192 < 0) {
    operator delete(v191);
  }
  sub_10003E96C((uint64_t)&v186, v187);
  if (v224 && v223 < 0) {
    operator delete(v222);
  }
  sub_10003E96C((uint64_t)&v217, v218);
  if (v448[0] && v447 < 0) {
    operator delete(v446);
  }
  sub_10003E96C((uint64_t)&v442, *((void **)&v442 + 1));
  uint64_t v27 = __cxa_atexit((void (*)(void *))sub_100256264, &unk_1008AC540, (void *)&_mh_execute_header);
  uint64_t v30 = sub_1002655A4(v27, v28, v29);
  sub_10026A91C(v30, v31, v32);
}

void sub_100270B50(_Unwind_Exception *a1)
{
  while (1)
  {
    if (*((char *)v1 - 1) < 0) {
      operator delete((void *)*(v1 - 3));
    }
    v1 -= 4;
    if (v1 == &STACK[0x15E0]) {
      _Unwind_Resume(a1);
    }
  }
}

void *sub_100271C34@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085C130[a1]);
}

void *sub_100271C48@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085C188[a1]);
}

void *sub_100271C5C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085C1D0[a1]);
}

void *sub_100271C70@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085C1F0[a1]);
}

void sub_10027215C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1002728F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_1002729D0(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained) {
    [WeakRetained _handleSessionBackgroundContinuationAuth:a2];
  }
}

void sub_100272A28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100272BAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100272CA8(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_100272DD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100272F08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002736BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100273A10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100273B28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100273ED0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  _Unwind_Resume(a1);
}

void sub_100274158(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  _Unwind_Resume(a1);
}

void sub_1002742A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002743DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10027447C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100274860(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  _Unwind_Resume(a1);
}

void sub_100274A40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100274B74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100274ED8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100275040(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100275398(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  uint64_t v20 = *(void **)(v18 - 112);
  if (v20)
  {
    *(void *)(v18 - 104) = v20;
    operator delete(v20);
  }

  _Unwind_Resume(a1);
}

void sub_1002754DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1002754FC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    if (v6 && os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
    {
      sub_1004265BC();
      if (v5) {
        goto LABEL_5;
      }
    }
    else if (v5)
    {
LABEL_5:
      [v5 timestamp];
      uint64_t v9 = v8;
      long long v10 = [v5 relativeAltitude];
      [v10 doubleValue];
      uint64_t v12 = v11;
      uint64_t v13 = [v5 pressure];
      [v13 doubleValue];
      v15[0] = v9;
      v15[1] = v12;
      v15[2] = v14;

      [WeakRetained[6] acceptAltimeterData:v15];
      goto LABEL_9;
    }
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_100426588();
    }
  }
LABEL_9:
}

void sub_100275620(_Unwind_Exception *a1)
{
  id v6 = v5;

  _Unwind_Resume(a1);
}

void sub_100275738(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  uint64_t v17 = v16;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100275768(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100426624();
  }
  id WeakRetained = (NSObject **)objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v8 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v9 = WeakRetained[8];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10027586C;
    block[3] = &unk_100855EB0;
    id v11 = v6;
    id v12 = v5;
    uint64_t v13 = v8;
    dispatch_async(v9, block);
  }
}

void sub_10027586C(uint64_t a1)
{
  if (*(void *)(a1 + 32) && os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
    sub_1004266C0();
  }
  uint64_t v2 = *(void **)(a1 + 40);
  if (v2)
  {
    char v22 = [v2 startDate];
    [v22 timeIntervalSinceReferenceDate];
    uint64_t v4 = v3;
    id v5 = [*(id *)(a1 + 40) endDate];
    [v5 timeIntervalSinceReferenceDate];
    uint64_t v7 = v6;
    uint64_t v8 = [*(id *)(a1 + 40) numberOfSteps];
    unsigned int v9 = [v8 unsignedIntValue];
    long long v10 = [*(id *)(a1 + 40) distance];
    [v10 doubleValue];
    uint64_t v12 = v11;
    uint64_t v13 = [*(id *)(a1 + 40) currentPace];
    [v13 doubleValue];
    uint64_t v15 = v14;
    long long v16 = [*(id *)(a1 + 40) currentCadence];
    [v16 doubleValue];
    uint64_t v18 = v17;
    uint64_t v19 = [*(id *)(a1 + 40) floorsAscended];
    unsigned int v20 = [v19 unsignedIntValue];
    int v21 = [*(id *)(a1 + 40) floorsDescended];
    v23[0] = v4;
    v23[1] = v7;
    unsigned int v24 = v9;
    uint64_t v25 = v12;
    uint64_t v26 = v15;
    uint64_t v27 = v18;
    unsigned int v28 = v20;
    unsigned int v29 = [v21 unsignedIntValue];

    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
      sub_10042668C();
    }
    [*(id *)(*(void *)(a1 + 48) + 48) acceptPedometerData:v23];
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_100426658();
  }
}

void sub_100275A6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  _Unwind_Resume(a1);
}

void sub_100275ABC()
{
}

void sub_100275AC4()
{
}

void sub_100275ACC()
{
}

void sub_100275B98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100275BB8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100426728();
  }
  id WeakRetained = (NSObject **)objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v8 = WeakRetained;
  if (WeakRetained)
  {
    unsigned int v9 = WeakRetained[8];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100275CBC;
    block[3] = &unk_100855EB0;
    id v11 = v6;
    id v12 = v5;
    uint64_t v13 = v8;
    dispatch_async(v9, block);
  }
}

void sub_100275CBC(uint64_t a1)
{
  if (*(void *)(a1 + 32) && os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
    sub_10042675C();
  }
  uint64_t v2 = *(void **)(a1 + 40);
  if (v2)
  {
    uint64_t v3 = [v2 date];
    [v3 timeIntervalSinceReferenceDate];
    uint64_t v5 = v4;
    BOOL v6 = [*(id *)(a1 + 40) type] == (id)1;
    uint64_t v9 = v5;
    BOOL v10 = v6;

    uint64_t v7 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#ses-nrby-peer,sending pedometer events to NUE", v8, 2u);
    }
    [*(id *)(*(void *)(a1 + 48) + 48) acceptPedometerEvent:&v9];
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_100426658();
  }
}

void sub_100275DDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100275EBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100275EDC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_10042682C();
  }
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    if (v3)
    {
      [v3 timestamp];
      uint64_t v6 = v5;
      uint64_t v7 = [v3 startDate];
      [v7 timeIntervalSinceReferenceDate];
      uint64_t v9 = v8;
      unsigned int v10 = [v3 confidence];
      v11[0] = v6;
      v11[1] = v9;
      unsigned __int8 v12 = [v3 stationary];
      unsigned __int8 v13 = [v3 walking];
      unsigned __int8 v14 = [v3 running];
      unsigned __int8 v15 = [v3 automotive];
      unsigned __int8 v16 = [v3 cycling];
      unsigned __int8 v17 = [v3 unknown];
      unsigned int v18 = v10;

      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
        sub_1004267F8();
      }
      [WeakRetained[6] acceptMotionActivity:v11];
    }
    else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
    {
      sub_1004267C4();
    }
  }
}

void sub_100276068(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100276168(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100276188(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_1004269A4();
  }
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    if (v6 && os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
    {
      sub_10042693C();
      if (v5)
      {
LABEL_7:
        [v5 timestamp];
        sub_1002B5E84((uint64_t)(WeakRetained + 22), v8);
        if (v9)
        {
          unsigned int v10 = [v5 deltaPositionX];

          if (v10)
          {
            id v11 = [v5 deltaPositionX];
            [v11 doubleValue];
            uint64_t v65 = v12;

            uint64_t v13 = 1;
          }
          else
          {
            uint64_t v13 = 0;
            uint64_t v65 = 0;
          }
          unsigned __int8 v14 = [v5 deltaPositionY];

          if (v14)
          {
            unsigned __int8 v15 = [v5 deltaPositionY];
            [v15 doubleValue];
            uint64_t v64 = v16;

            uint64_t v17 = 1;
          }
          else
          {
            uint64_t v17 = 0;
            uint64_t v64 = 0;
          }
          unsigned int v18 = [v5 deltaPositionZ];

          if (v18)
          {
            uint64_t v19 = [v5 deltaPositionZ];
            [v19 doubleValue];
            uint64_t v21 = v20;

            uint64_t v22 = 1;
          }
          else
          {
            uint64_t v22 = 0;
            uint64_t v21 = 0;
          }
          uint64_t v23 = [v5 deltaVelocityX];

          if (v23)
          {
            unsigned int v24 = [v5 deltaVelocityX];
            [v24 doubleValue];
            uint64_t v26 = v25;

            uint64_t v27 = 1;
          }
          else
          {
            uint64_t v27 = 0;
            uint64_t v26 = 0;
          }
          unsigned int v28 = [v5 deltaVelocityY];

          if (v28)
          {
            unsigned int v29 = [v5 deltaVelocityY];
            [v29 doubleValue];
            uint64_t v31 = v30;

            uint64_t v63 = 1;
          }
          else
          {
            uint64_t v63 = 0;
            uint64_t v31 = 0;
          }
          uint64_t v32 = [v5 deltaVelocityZ];

          uint64_t v58 = v27;
          if (v32)
          {
            long long v33 = [v5 deltaVelocityZ];
            [v33 doubleValue];
            uint64_t v35 = v34;

            uint64_t v36 = 1;
          }
          else
          {
            uint64_t v36 = 0;
            uint64_t v35 = 0;
          }
          long long v37 = [v5 quaternionW:v58, v22, v17, v13];

          if (v37)
          {
            uint64_t v38 = [v5 quaternionW];
            [v38 doubleValue];
            double v40 = v39;
          }
          else
          {
            double v40 = 0.0;
          }
          char v41 = [v5 quaternionX];

          if (v41)
          {
            char v42 = [v5 quaternionX];
            [v42 doubleValue];
            uint64_t v44 = v43;
          }
          else
          {
            uint64_t v44 = 0;
          }
          int v45 = [v5 quaternionY];

          if (v45)
          {
            char v46 = [v5 quaternionY];
            [v46 doubleValue];
            uint64_t v48 = v47;
          }
          else
          {
            uint64_t v48 = 0;
          }
          long long v49 = [v5 quaternionZ];

          if (v49)
          {
            unint64_t v50 = [v5 quaternionZ];
            [v50 doubleValue];
            uint64_t v52 = v51;
          }
          else
          {
            uint64_t v52 = 0;
          }
          [v5 timestamp];
          uint64_t v66 = v53;
          char v67 = 0;
          if (v37) {
            BOOL v54 = v41 == 0;
          }
          else {
            BOOL v54 = 1;
          }
          BOOL v55 = v54 || v45 == 0;
          char v68 = 0;
          char v56 = !v55;
          uint64_t v69 = v65;
          double v57 = 0.0;
          if ((v56 & (v49 != 0)) != 0) {
            double v57 = v40;
          }
          uint64_t v70 = v62;
          uint64_t v71 = v64;
          uint64_t v72 = v61;
          uint64_t v73 = v21;
          uint64_t v74 = v60;
          uint64_t v75 = v26;
          uint64_t v76 = v59;
          uint64_t v77 = v31;
          uint64_t v78 = v63;
          uint64_t v79 = v35;
          uint64_t v80 = v36;
          double v81 = v57;
          uint64_t v82 = v44;
          uint64_t v83 = v48;
          uint64_t v84 = v52;
          char v85 = v56 & (v49 != 0);
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
            sub_1004268C8();
          }
          [WeakRetained[6] acceptDevicePDRInput:&v66];
        }
        else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
        {
          sub_100426894();
        }
        goto LABEL_57;
      }
    }
    else if (v5)
    {
      goto LABEL_7;
    }
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_100426860();
    }
  }
LABEL_57:
}

void sub_100276638(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002767CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1002767EC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (!WeakRetained) {
    goto LABEL_12;
  }
  if (v6 && os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_100426A0C();
    if (v5)
    {
LABEL_5:
      [v5 timestamp];
      uint64_t v9 = sub_1002B5E84((uint64_t)(WeakRetained + 22), v8);
      if (v10)
      {
        uint64_t v11 = v9;
        [v5 userAcceleration];
        uint64_t v48 = v12;
        [v5 userAcceleration];
        uint64_t v47 = v13;
        [v5 userAcceleration];
        uint64_t v46 = v14;
        [v5 rotationRate];
        uint64_t v45 = v15;
        [v5 rotationRate];
        uint64_t v44 = v16;
        [v5 rotationRate];
        uint64_t v43 = v17;
        long long v49 = [v5 attitude];
        [v49 quaternion];
        uint64_t v42 = v18;
        uint64_t v19 = [v5 attitude];
        [v19 quaternion];
        uint64_t v21 = v20;
        uint64_t v22 = [v5 attitude];
        [v22 quaternion];
        uint64_t v24 = v23;
        uint64_t v25 = [v5 attitude];
        [v25 quaternion];
        uint64_t v27 = v26;
        [v5 gravity];
        uint64_t v29 = v28;
        [v5 gravity];
        uint64_t v31 = v30;
        [v5 gravity];
        uint64_t v33 = v32;
        uint64_t v34 = [v5 attitude];
        [v34 yaw];
        uint64_t v36 = v35;
        long long v37 = [v5 attitude];
        [v37 pitch];
        uint64_t v39 = v38;
        double v40 = [v5 attitude];
        [v40 roll];
        v50[0] = v11;
        v50[1] = v48;
        v50[2] = v47;
        v50[3] = v46;
        v50[4] = v45;
        v50[5] = v44;
        v50[6] = v43;
        v50[7] = v42;
        v50[8] = v21;
        v50[9] = v24;
        v50[10] = v27;
        v50[11] = v29;
        v50[12] = v31;
        v50[13] = v33;
        v50[14] = v36;
        v50[15] = v39;
        v50[16] = v41;

        [WeakRetained[6] acceptDeviceMotionInput:v50];
      }
      else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
      {
        sub_1004269D8();
      }
      goto LABEL_12;
    }
  }
  else if (v5)
  {
    goto LABEL_5;
  }
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
    sub_100426860();
  }
LABEL_12:
}

void sub_100276AB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002770D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100277154(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10027725C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100277270(uint64_t a1)
{
  if (*(unsigned char *)(*(void *)(a1 + 32) + 56))
  {
    v4.receiver = *(id *)(a1 + 32);
    v4.super_class = (Class)NIServerNearbyPeerSession;
    uint64_t v2 = [super resourcesManager];
    id v3 = [v2 remote];
    [v3 didUpdateNearbyObjects:*(void *)(a1 + 40)];
  }
}

void sub_1002772F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100277430(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100277448(uint64_t a1)
{
  if (*(unsigned char *)(*(void *)(a1 + 32) + 56))
  {
    v4.receiver = *(id *)(a1 + 32);
    v4.super_class = (Class)NIServerNearbyPeerSession;
    uint64_t v2 = [super resourcesManager];
    id v3 = [v2 remote];
    [v3 didUpdateAlgorithmState:*(void *)(a1 + 40) forObject:*(void *)(a1 + 48)];
  }
}

void sub_1002774CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10027761C(_Unwind_Exception *a1)
{
  id v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1002776C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100277760(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100277938()
{
  v10[0] = xmmword_1004BC9A8;
  v10[1] = unk_1004BC9B8;
  sub_1001A003C((uint64_t)&unk_1008A68A8, (int *)v10, 4);
  xmmword_1008A68C0 = xmmword_1004B7660;
  *(_OWORD *)algn_1008A68D0 = xmmword_1004B7670;
  qword_1008A68E8 = 0;
  unk_1008A68F0 = 0;
  qword_1008A68E0 = 0x3FD999999999999ALL;
  unk_1008A68F8 = xmmword_1004B7680;
  dword_1008A6908 = 5;
  qword_1008A6910 = 0x4000000000000000;
  dword_1008A6918 = 5;
  byte_1008A6920 = 0;
  *(void *)&algn_1008A6921[3] = 0x30000000ALL;
  xmmword_1008A6930 = xmmword_1004B7690;
  unk_1008A6940 = xmmword_1004B76A0;
  xmmword_1008A6950 = xmmword_1004B76B0;
  qword_1008A6960 = 0x3FE3333333333333;
  dword_1008A6968 = 3;
  xmmword_1008A6970 = xmmword_1004B76C0;
  unk_1008A6980 = xmmword_1004B76A0;
  xmmword_1008A6990 = xmmword_1004B7690;
  qword_1008A69A0 = 0x3FE3333333333333;
  byte_1008A69A8 = 0;
  xmmword_1008A69B0 = xmmword_1004B76D0;
  unk_1008A69C0 = xmmword_1004B76E0;
  __asm { FMOV            V0.2D, #1.0 }
  long long v8 = _Q0;
  xmmword_1008A69D0 = _Q0;
  qword_1008A69E0 = 0xBFD3333333333333;
  xmmword_1008A69E8 = xmmword_1004B76F0;
  qword_1008A69F8 = 0x3E99999A40000000;
  xmmword_1008A6A00 = xmmword_1004B7670;
  qword_1008A6A18 = 0;
  unk_1008A6A20 = 0;
  qword_1008A6A10 = 0x3FD999999999999ALL;
  xmmword_1008A6A28 = xmmword_1004B7680;
  dword_1008A6A38 = 5;
  qword_1008A6A40 = 0x4000000000000000;
  dword_1008A6A48 = 4;
  qword_1008A6A50 = 0x300000008;
  qword_1008A6A58 = 0xC04E800000000000;
  unint64_t v9 = 0xC04E800000000000;
  sub_1001A02EC((uint64_t)&unk_1008A6A60, (double *)&v9, 1);
  xmmword_1008A6A78 = xmmword_1004B7700;
  qword_1008A6A88 = 0x4024000000000000;
  dword_1008A6A90 = 45;
  byte_1008A6A98 = 0;
  byte_1008A6AB0 = 0;
  qword_1008A6AB8 = 0;
  byte_1008A6AC0 = 0;
  dword_1008A6AC4 = 1;
  byte_1008A6AC8 = 1;
  xmmword_1008A6AD0 = xmmword_1004B7710;
  unk_1008A6AE0 = xmmword_1004B7720;
  xmmword_1008A6AF0 = v8;
  qword_1008A6B00 = 0xC059000000000000;
  xmmword_1008A6B08 = xmmword_1004B7730;
  qword_1008A6B18 = (uint64_t)vdup_n_s32(0x3DCCCCCDu);
  xmmword_1008A6B20 = xmmword_1004B7670;
  qword_1008A6B30 = 0x3FD999999999999ALL;
  qword_1008A6B40 = 0;
  qword_1008A6B38 = 0;
  xmmword_1008A6B48 = xmmword_1004B7680;
  dword_1008A6B58 = 5;
  qword_1008A6B60 = 0x4000000000000000;
  dword_1008A6B68 = 10;
  qword_1008A6B70 = 0x4034000000000000;
  dword_1008A6B78 = 3;
  xmmword_1008A6B80 = xmmword_1004B7740;
  __cxa_atexit((void (*)(void *))sub_10019E4F8, &unk_1008A68A8, (void *)&_mh_execute_header);
  __cxa_atexit((void (*)(void *))nullsub_72, &off_10089F0D0, (void *)&_mh_execute_header);
  __cxa_atexit((void (*)(void *))nullsub_73, &off_10089F0D8, (void *)&_mh_execute_header);
  qword_1008A6B98 = 0;
  unk_1008A6BA0 = 0;
  qword_1008A6B90 = 0;
  id v6 = operator new(0x40uLL);
  qword_1008A6B98 = (uint64_t)(v6 + 4);
  unk_1008A6BA0 = v6 + 4;
  _OWORD *v6 = xmmword_1004BC9C8;
  v6[1] = unk_1004BC9D8;
  v6[2] = xmmword_1004BC9E8;
  v6[3] = unk_1004BC9F8;
  qword_1008A6B90 = (uint64_t)v6;
  __cxa_atexit((void (*)(void *))sub_100032C1C, &qword_1008A6B90, (void *)&_mh_execute_header);
  qword_1008A6BB0 = 0;
  unk_1008A6BB8 = 0;
  qword_1008A6BA8 = 0;
  uint64_t v7 = operator new(0x10uLL);
  qword_1008A6BB0 = (uint64_t)(v7 + 1);
  unk_1008A6BB8 = v7 + 1;
  *uint64_t v7 = xmmword_1004BCA08;
  qword_1008A6BA8 = (uint64_t)v7;
  __cxa_atexit((void (*)(void *))sub_100032C1C, &qword_1008A6BA8, (void *)&_mh_execute_header);
}

void sub_100277CF8(_Unwind_Exception *a1)
{
  sub_10003E96C(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_100277D18(uint64_t *a1, void *a2)
{
  id v3 = a2;
  *a1 = (uint64_t)v3;
  *((unsigned char *)a1 + 8) = 0;
  a1[2] = 0;
  id v4 = [objc_alloc((Class)NSUserDefaults) initWithSuiteName:@".GlobalPreferences"];
  unsigned int v5 = [v4 BOOLForKey:@"com.apple.CarKeysTests.enableCertificationLogging"];
  *((unsigned char *)a1 + 8) = v5;
  id v6 = qword_1008ABDE0;
  BOOL v7 = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT);
  if (v5)
  {
    if (v7)
    {
      uint64_t v8 = *a1;
      int v13 = 138412290;
      uint64_t v14 = v8;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#alisha-cert,Logging enabled (vehicle identifier: %@)", (uint8_t *)&v13, 0xCu);
    }
    os_log_t v9 = os_log_create("com.apple.certification", "digitalCarKey");
    char v10 = (void *)a1[2];
    a1[2] = (uint64_t)v9;
  }
  else if (v7)
  {
    uint64_t v11 = *a1;
    int v13 = 138412290;
    uint64_t v14 = v11;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#alisha-cert,Logging not enabled (vehicle identifier: %@)", (uint8_t *)&v13, 0xCu);
  }

  return a1;
}

void sub_100277E88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100277EC0(uint64_t a1, unsigned __int16 *a2)
{
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t v26 = a1;
    uint64_t v29 = objc_opt_new();
    id v3 = (double *)*((void *)a2 + 11);
    for (uint64_t i = (unsigned __int8 *)*((void *)a2 + 12); v3 != (double *)i; v3 += 2)
    {
      int v5 = *(unsigned __int8 *)v3;
      id v6 = objc_opt_new();
      BOOL v7 = v6;
      if (v5) {
        CFStringRef v8 = @"failure";
      }
      else {
        CFStringRef v8 = @"success";
      }
      [v6 setObject:v8 forKey:@"responder_status" v26];
      os_log_t v9 = +[NSNumber numberWithDouble:v3[1]];
      [v7 setObject:v9 forKey:@"rssi_dBm"];

      [v29 addObject:v7];
    }
    int v10 = sub_100334B0C(*a2);
    uint64_t v11 = objc_opt_new();
    uint64_t v12 = v11;
    if (v10) {
      CFStringRef v13 = @"failure";
    }
    else {
      CFStringRef v13 = @"success";
    }
    [v11 setObject:v13 forKey:@"block_status" v26];
    uint64_t v14 = +[NSNumber numberWithUnsignedLong:*((unsigned int *)a2 + 2)];
    [v12 setObject:v14 forKey:@"uwb_session_id"];

    uint64_t v15 = +[NSNumber numberWithUnsignedLong:a2[12]];
    [v12 setObject:v15 forKey:@"block_index"];

    uint64_t v16 = +[NSNumber numberWithUnsignedLong:*((unsigned __int8 *)a2 + 84)];
    [v12 setObject:v16 forKey:@"successful_responders"];

    uint64_t v17 = +[NSNumber numberWithUnsignedLong:(uint64_t)(*((void *)a2 + 12) - *((void *)a2 + 11)) >> 4];
    [v12 setObject:v17 forKey:@"total_responders"];

    [v12 setObject:v29 forKey:@"responder_info"];
    uint64_t v18 = objc_opt_new();
    [v18 setObject:@"uwb_ranging_block" forKey:@"log_type"];
    [v18 setObject:*v27 forKey:@"vehicle_uuid"];
    [v18 setObject:v12 forKey:@"payload"];
    id v30 = 0;
    uint64_t v19 = +[NSJSONSerialization dataWithJSONObject:v18 options:3 error:&v30];
    id v20 = v30;
    if (v20)
    {
      uint64_t v21 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
        sub_100426BAC(v21);
      }
    }
    else
    {
      id v24 = [objc_alloc((Class)NSString) initWithData:v19 encoding:4];
      uint64_t v25 = v27[2];
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        id v32 = v24;
        _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "\n%@", buf, 0xCu);
      }
    }
  }
  else
  {
    uint64_t v22 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
    {
      uint64_t v23 = *(void **)a1;
      *(_DWORD *)buf = 138412290;
      id v32 = v23;
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_INFO, "#alisha-cert,Skip logging initiator ranging block summary (vehicle identifier: %@)", buf, 0xCu);
    }
  }
}

void sub_100278280(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

uint64_t *sub_100278308()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1008A6C40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1008A6C40))
  {
    qword_1008A6BC0 = 850045863;
    unk_1008A6BC8 = 0u;
    unk_1008A6BD8 = 0u;
    unk_1008A6BE8 = 0u;
    qword_1008A6BF8 = 0;
    unk_1008A6C00 = 850045863;
    unk_1008A6C08 = 0u;
    unk_1008A6C18 = 0u;
    unk_1008A6C28 = 0u;
    qword_1008A6C38 = 0;
    __cxa_atexit((void (*)(void *))sub_1002783A8, &qword_1008A6BC0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1008A6C40);
  }
  return &qword_1008A6BC0;
}

void sub_1002783A8(std::mutex *a1)
{
  std::mutex::~mutex(a1 + 1);

  std::mutex::~mutex(a1);
}

void sub_1002783E4(std::mutex *a1, unsigned int a2, signed int a3)
{
  if (+[NIPlatformInfo isInternalBuild])
  {
    if (sub_1002789F0(a1, a2))
    {
      id v6 = (void *)qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        BOOL v7 = @"Unknown";
        if (a2 == 1) {
          BOOL v7 = @"AlishaURSKRetrievalFailed";
        }
        if (!a2) {
          BOOL v7 = @"AlishaGetKeyTimedOut";
        }
        CFStringRef v8 = v7;
        *(_DWORD *)buf = 138412290;
        *(void *)uint64_t v45 = v8;
        os_log_t v9 = v6;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#ttr,User previously disabled TTR alerts for event %@", buf, 0xCu);
      }
    }
    else
    {
      signed int v14 = sub_100278ADC(a1, a2);
      if (v14 >= a3)
      {
        uint64_t v42 = a1;
        char v43 = 0;
        char v19 = sub_1001BDF40((uint64_t)&v42);
        id v20 = (void *)qword_1008ABDE0;
        if (v19)
        {
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v21 = @"Unknown";
            if (a2 == 1) {
              uint64_t v21 = @"AlishaURSKRetrievalFailed";
            }
            if (!a2) {
              uint64_t v21 = @"AlishaGetKeyTimedOut";
            }
            uint64_t v22 = v21;
            *(_DWORD *)buf = 67109634;
            *(_DWORD *)uint64_t v45 = v14;
            *(_WORD *)&v45[4] = 1024;
            *(_DWORD *)&v45[6] = a3;
            __int16 v46 = 2112;
            uint64_t v47 = v22;
            uint64_t v23 = v20;
            _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "#ttr,Event count %d meets threshold %d to present alert for event %@", buf, 0x18u);
          }
          sub_100278CBC(a1, a2);
          id v24 = @"Nearby Interaction issue";
          if (a2 < 2) {
            id v24 = @"UWB Digital Key issue";
          }
          uint64_t v25 = v24;
          uint64_t v26 = @"[Internal only] Nearby Interaction issue";
          if (a2 == 1) {
            uint64_t v26 = @"[Internal only] Passive entry may be failing. Reason: continuous URSK retrieval failure (rdar://118780288).";
          }
          if (!a2) {
            uint64_t v26 = @"[Internal only] Passive entry may be failing. Reason: GetKey timeout (rdar://118964569).";
          }
          uint64_t v27 = v26;
          CFOptionFlags v41 = 0;
          CFUserNotificationDisplayAlert(0.0, 2uLL, 0, 0, 0, v25, v27, @"File a Radar", @"Dismiss once", @"Dismiss forever", &v41);
          if (v41 == 2)
          {
            uint64_t v33 = (void *)qword_1008ABDE0;
            if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v34 = @"Unknown";
              if (a2 == 1) {
                uint64_t v34 = @"AlishaURSKRetrievalFailed";
              }
              if (!a2) {
                uint64_t v34 = @"AlishaGetKeyTimedOut";
              }
              uint64_t v35 = v34;
              *(_DWORD *)buf = 138412290;
              *(void *)uint64_t v45 = v35;
              uint64_t v36 = v33;
              _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, "#ttr,User selected DISMISS FOREVER for event %@", buf, 0xCu);
            }
            sub_10027911C(a1, a2);
          }
          else if (v41)
          {
            long long v37 = (void *)qword_1008ABDE0;
            if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v38 = @"Unknown";
              if (a2 == 1) {
                uint64_t v38 = @"AlishaURSKRetrievalFailed";
              }
              if (!a2) {
                uint64_t v38 = @"AlishaGetKeyTimedOut";
              }
              uint64_t v39 = v38;
              *(_DWORD *)buf = 138412290;
              *(void *)uint64_t v45 = v39;
              double v40 = v37;
              _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEFAULT, "#ttr,User selected DISMISS ONCE for event %@", buf, 0xCu);
            }
          }
          else
          {
            uint64_t v28 = (void *)qword_1008ABDE0;
            BOOL v29 = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT);
            if (v29)
            {
              id v30 = @"Unknown";
              if (a2 == 1) {
                id v30 = @"AlishaURSKRetrievalFailed";
              }
              if (!a2) {
                id v30 = @"AlishaGetKeyTimedOut";
              }
              uint64_t v31 = v30;
              *(_DWORD *)buf = 138412290;
              *(void *)uint64_t v45 = v31;
              id v32 = v28;
              _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "#ttr,User selected FILE A RADAR for event %@", buf, 0xCu);
            }
            sub_100278E28(v29, a2);
          }
        }
        else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
        {
          sub_100426BF0(a2, v20);
        }
        if (v43) {
          std::mutex::unlock(v42);
        }
      }
      else
      {
        uint64_t v15 = (void *)qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v16 = @"Unknown";
          if (a2 == 1) {
            uint64_t v16 = @"AlishaURSKRetrievalFailed";
          }
          if (!a2) {
            uint64_t v16 = @"AlishaGetKeyTimedOut";
          }
          uint64_t v17 = v16;
          *(_DWORD *)buf = 67109634;
          *(_DWORD *)uint64_t v45 = v14;
          *(_WORD *)&v45[4] = 1024;
          *(_DWORD *)&v45[6] = a3;
          __int16 v46 = 2112;
          uint64_t v47 = v17;
          uint64_t v18 = v15;
          _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "#ttr,Event count %d is below threshold %d to present alert for event %@", buf, 0x18u);
        }
      }
    }
  }
  else
  {
    int v10 = (void *)qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v11 = @"Unknown";
      if (a2 == 1) {
        uint64_t v11 = @"AlishaURSKRetrievalFailed";
      }
      if (!a2) {
        uint64_t v11 = @"AlishaGetKeyTimedOut";
      }
      uint64_t v12 = v11;
      *(_DWORD *)buf = 138412290;
      *(void *)uint64_t v45 = v12;
      CFStringRef v13 = v10;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "#ttr,Non-internal build. Ignore notification of event %@", buf, 0xCu);
    }
  }
}

void sub_1002789BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, std::mutex *a13, char a14)
{
  if (a14) {
    std::mutex::unlock(a13);
  }
  _Unwind_Resume(a1);
}

id sub_1002789F0(std::mutex *a1, int a2)
{
  id v3 = a1 + 1;
  std::mutex::lock(a1 + 1);
  id v4 = +[NSUserDefaults standardUserDefaults];
  int v5 = [v4 dictionaryForKey:@"TapToRadarDisable"];

  CFStringRef v6 = @"Unknown";
  if (a2 == 1) {
    CFStringRef v6 = @"AlishaURSKRetrievalFailed";
  }
  if (a2) {
    CFStringRef v7 = v6;
  }
  else {
    CFStringRef v7 = @"AlishaGetKeyTimedOut";
  }
  CFStringRef v8 = [v5 objectForKeyedSubscript:v7];
  id v9 = [v8 BOOLValue];

  std::mutex::unlock(v3);
  return v9;
}

void sub_100278AA4(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

id sub_100278ADC(std::mutex *a1, int a2)
{
  id v3 = a1 + 1;
  std::mutex::lock(a1 + 1);
  id v4 = +[NSUserDefaults standardUserDefaults];
  int v5 = [v4 dictionaryForKey:@"TapToRadarEventCount"];

  if (v5) {
    id v6 = [v5 mutableCopy];
  }
  else {
    id v6 = (id)objc_opt_new();
  }
  CFStringRef v7 = v6;
  CFStringRef v8 = @"Unknown";
  if (a2 == 1) {
    CFStringRef v8 = @"AlishaURSKRetrievalFailed";
  }
  if (!a2) {
    CFStringRef v8 = @"AlishaGetKeyTimedOut";
  }
  id v9 = v8;
  int v10 = [v5 objectForKeyedSubscript:v9];
  uint64_t v11 = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", [v10 intValue] + 1);
  [v7 setObject:v11 forKeyedSubscript:v9];

  uint64_t v12 = +[NSUserDefaults standardUserDefaults];
  [v12 setObject:v7 forKey:@"TapToRadarEventCount"];

  CFStringRef v13 = [v7 objectForKeyedSubscript:v9];
  id v14 = [v13 intValue];

  std::mutex::unlock(v3);
  return v14;
}

void sub_100278C44(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

id sub_100278CBC(std::mutex *a1, int a2)
{
  id v3 = a1 + 1;
  std::mutex::lock(a1 + 1);
  id v4 = +[NSUserDefaults standardUserDefaults];
  int v5 = [v4 dictionaryForKey:@"TapToRadarEventCount"];

  if (v5) {
    id v6 = [v5 mutableCopy];
  }
  else {
    id v6 = (id)objc_opt_new();
  }
  CFStringRef v7 = v6;
  CFStringRef v8 = @"Unknown";
  if (a2 == 1) {
    CFStringRef v8 = @"AlishaURSKRetrievalFailed";
  }
  if (a2) {
    CFStringRef v9 = v8;
  }
  else {
    CFStringRef v9 = @"AlishaGetKeyTimedOut";
  }
  [v6 setObject:&off_1008788F8 forKeyedSubscript:v9];
  int v10 = +[NSUserDefaults standardUserDefaults];
  [v10 setObject:v7 forKey:@"TapToRadarEventCount"];

  uint64_t v11 = [v5 objectForKeyedSubscript:v9];
  id v12 = [v11 intValue];

  std::mutex::unlock(v3);
  return v12;
}

void sub_100278DD4(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_100278E14()
{
  JUMPOUT(0x100278E04);
}

void sub_100278E20()
{
}

void sub_100278E28(uint64_t a1, unsigned int a2)
{
  id v3 = @"[UWB Digital Key] URSK retrieval failure";
  if (a2 != 1) {
    id v3 = @"Nearby Interaction issue";
  }
  if (!a2) {
    id v3 = @"[UWB Digital Key] GetKey timed out";
  }
  id v4 = v3;
  int v5 = @"1. Are you filing this radar as a LiveOn user?\n2.) What kind of Digital Key are you using - i.e. what does it unlock?");
  if (a2 < 2)
  {
    id v6 = @"1161160";
  }
  else
  {
    int v5 = @"Nearby Interaction issue";
    id v6 = @"1109279";
  }
  if (a2 >= 2) {
    CFStringRef v7 = @"(New Bugs)";
  }
  else {
    CFStringRef v7 = @"Alisha";
  }
  CFStringRef v8 = v5;
  CFStringRef v9 = v6;
  int v10 = v7;
  v21[0] = @"Classification";
  v21[1] = @"ComponentID";
  v22[0] = @"Serious Bug";
  v22[1] = v9;
  v21[2] = @"ComponentName";
  v21[3] = @"ComponentVersion";
  v22[2] = @"Nearby Interaction";
  v22[3] = v10;
  v21[4] = @"ExtensionIdentifiers";
  v21[5] = @"Reproducibility";
  v22[4] = @"com.apple.DiagnosticExtensions.Nearbyd";
  v22[5] = @"I Didn't Try";
  v21[6] = @"Description";
  void v21[7] = @"Title";
  v22[6] = v8;
  v22[7] = v4;
  uint64_t v11 = +[NSDictionary dictionaryWithObjects:v22 forKeys:v21 count:8];
  uint64_t v16 = _NSConcreteStackBlock;
  uint64_t v17 = 3221225472;
  uint64_t v18 = sub_10027941C;
  char v19 = &unk_10085C330;
  id v12 = (id)objc_opt_new();
  id v20 = v12;
  [v11 enumerateKeysAndObjectsUsingBlock:&v16];
  CFStringRef v13 = +[NSURLComponents componentsWithString:@"tap-to-radar://new", v16, v17, v18, v19];
  [v13 setQueryItems:v12];
  id v14 = +[LSApplicationWorkspace defaultWorkspace];
  uint64_t v15 = [v13 URL];
  [v14 openURL:v15 configuration:0 completionHandler:0];
}

void sub_1002790AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  uint64_t v22 = v19;

  _Unwind_Resume(a1);
}

void sub_10027911C(std::mutex *a1, int a2)
{
  id v3 = a1 + 1;
  std::mutex::lock(a1 + 1);
  id v4 = +[NSUserDefaults standardUserDefaults];
  int v5 = [v4 dictionaryForKey:@"TapToRadarDisable"];

  if (v5) {
    id v6 = [v5 mutableCopy];
  }
  else {
    id v6 = (id)objc_opt_new();
  }
  CFStringRef v7 = v6;
  CFStringRef v8 = @"Unknown";
  if (a2 == 1) {
    CFStringRef v8 = @"AlishaURSKRetrievalFailed";
  }
  if (a2) {
    CFStringRef v9 = v8;
  }
  else {
    CFStringRef v9 = @"AlishaGetKeyTimedOut";
  }
  [v6 setObject:&__kCFBooleanTrue forKeyedSubscript:v9];
  int v10 = +[NSUserDefaults standardUserDefaults];
  [v10 setObject:v7 forKey:@"TapToRadarDisable"];

  std::mutex::unlock(v3);
}

void sub_100279218(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_100279254()
{
  JUMPOUT(0x100279244);
}

void sub_100279260()
{
}

void sub_100279268(std::mutex *a1, int a2)
{
  if (+[NIPlatformInfo isInternalBuild])
  {
    unsigned int v4 = sub_100278CBC(a1, a2);
    int v5 = (void *)qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      id v6 = @"Unknown";
      if (a2 == 1) {
        id v6 = @"AlishaURSKRetrievalFailed";
      }
      if (!a2) {
        id v6 = @"AlishaGetKeyTimedOut";
      }
      CFStringRef v7 = v6;
      int v13 = 67109378;
      LODWORD(v14[0]) = v4;
      WORD2(v14[0]) = 2112;
      *(void *)((char *)v14 + 6) = v7;
      CFStringRef v8 = v5;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#ttr,Reset event count to 0 (from %d) for event %@", (uint8_t *)&v13, 0x12u);
    }
  }
  else
  {
    CFStringRef v9 = (void *)qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      int v10 = @"Unknown";
      if (a2 == 1) {
        int v10 = @"AlishaURSKRetrievalFailed";
      }
      if (!a2) {
        int v10 = @"AlishaGetKeyTimedOut";
      }
      uint64_t v11 = v10;
      int v13 = 138412290;
      v14[0] = v11;
      id v12 = v9;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "#ttr,Non-internal build. Ignore reset event count for event %@", (uint8_t *)&v13, 0xCu);
    }
  }
}

void sub_10027941C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = +[NSURLQueryItem queryItemWithName:a2 value:a3];
  [v3 addObject:];
}

void sub_100279480(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100279494(uint64_t a1)
{
  dispatch_queue_t v2 = dispatch_queue_create("com.apple.nearbyd.NetworkMonitor", 0);
  *(void *)a1 = v2;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 8) = a1 + 16;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 48) = 0;
  if (!v2) {
    __assert_rtn("PRNetworkMonitor", "PRNetworkMonitor.mm", 22, "fQueue");
  }
  return a1;
}

void sub_100279518(_Unwind_Exception *a1)
{
  sub_10027A254(v2, *(void **)(v1 + 16));
  _Unwind_Resume(a1);
}

uint64_t sub_10027954C(uint64_t a1)
{
  uint64_t v2 = *(NSObject **)a1;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1002795F0;
  block[3] = &unk_1008466D8;
  void block[4] = a1;
  dispatch_sync(v2, block);

  sub_10027A254(a1 + 8, *(void **)(a1 + 16));
  return a1;
}

void sub_1002795F0(uint64_t a1)
{
}

void sub_1002795F8(dispatch_queue_t *a1)
{
  dispatch_assert_queue_V2(*a1);
  uint64_t v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "stop network monitoring", buf, 2u);
  }
  if (a1[4])
  {
    id v3 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "canceling fMonitor", v5, 2u);
    }
    nw_path_monitor_cancel(a1[4]);
    dispatch_queue_t v4 = a1[4];
    a1[4] = 0;
  }
}

BOOL sub_1002796D0(NSObject **a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7 = a4;
  uint64_t v12 = 0;
  int v13 = &v12;
  uint64_t v14 = 0x2020000000;
  char v15 = 1;
  if (!v7) {
    __assert_rtn("registerListener", "PRNetworkMonitor.mm", 36, "clientQ");
  }
  CFStringRef v8 = *a1;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  block[2] = sub_10027986C;
  block[3] = &unk_10085C358;
  char v19 = a1;
  uint64_t v20 = a2;
  id v9 = v7;
  id v17 = v9;
  sub_100027124((uint64_t)v21, a3);
  uint64_t v18 = &v12;
  dispatch_sync(v8, block);
  BOOL v10 = *((unsigned char *)v13 + 24) != 0;
  sub_10000AF74(v21);

  _Block_object_dispose(&v12, 8);
  return v10;
}

void sub_100279838(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id a18)
{
  _Block_object_dispose(&a10, 8);
  _Unwind_Resume(a1);
}

void sub_10027986C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = sub_100007494(v2 + 8, *(const void ***)(a1 + 56));
  dispatch_queue_t v4 = qword_1008ABDE0;
  BOOL v5 = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT);
  if (v2 + 16 == v3)
  {
    if (v5)
    {
      id v7 = *(void ***)(a1 + 56);
      if (*((char *)v7 + 23) < 0) {
        id v7 = (void **)*v7;
      }
      LODWORD(buf[0]) = 136315138;
      *(id *)((char *)buf + 4) = v7;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "registerListener - %s", (uint8_t *)buf, 0xCu);
    }
    sub_10027A1FC(buf, (id *)(a1 + 32), a1 + 64);
    id v9 = *(const void ***)(a1 + 56);
    CFStringRef v8 = sub_10027A308((uint64_t **)(v2 + 8), v9, (uint64_t)&unk_1004BC2F8, (long long **)&v9);
    sub_100279A34((void **)v8 + 7, buf);
    sub_10000AF74(&buf[1]);

    if (*(void *)(v2 + 24) == 1) {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = sub_100279A8C((dispatch_queue_t *)v2);
    }
  }
  else if (v5)
  {
    id v6 = *(void ***)(a1 + 56);
    if (*((char *)v6 + 23) < 0) {
      id v6 = (void **)*v6;
    }
    LODWORD(buf[0]) = 136315138;
    *(id *)((char *)buf + 4) = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "identifier %s already registered", (uint8_t *)buf, 0xCu);
  }
}

void sub_100279A0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, void *a4, ...)
{
  va_start(va, a4);
  sub_10000AF74((uint64_t *)va);

  _Unwind_Resume(a1);
}

void **sub_100279A34(void **a1, void **a2)
{
  uint64_t v3 = *a2;
  *a2 = 0;
  uint64_t v4 = (uint64_t)(a2 + 1);
  BOOL v5 = *a1;
  *a1 = v3;
  id v6 = a1 + 1;

  sub_10027A4A4(v6, v4);
  return a1;
}

BOOL sub_100279A8C(dispatch_queue_t *a1)
{
  dispatch_assert_queue_V2(*a1);
  uint64_t v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "start network monitoring", buf, 2u);
  }
  nw_path_monitor_t v3 = nw_path_monitor_create();
  dispatch_queue_t v4 = a1[4];
  a1[4] = v3;

  BOOL v5 = a1[4];
  if (v5)
  {
    update_handler[0] = _NSConcreteStackBlock;
    update_handler[1] = 3221225472;
    update_handler[2] = sub_100279DD8;
    update_handler[3] = &unk_10085C388;
    update_handler[4] = a1;
    nw_path_monitor_set_update_handler(v5, update_handler);
    nw_path_monitor_set_queue(a1[4], *a1);
    nw_path_monitor_start(a1[4]);
    evaluator_for_endpoint = (void *)nw_path_create_evaluator_for_endpoint();
    if (evaluator_for_endpoint)
    {
      id v7 = (void *)nw_path_evaluator_copy_path();
      sub_100279E74((uint64_t)a1, v7);
    }
  }
  else
  {
    CFStringRef v8 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_100426CBC(v8);
    }
  }
  return v5 != 0;
}

void sub_100279BE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100279C04(uint64_t a1, uint64_t a2)
{
  return sub_100027124(a1 + 64, a2 + 64);
}

void *sub_100279C10(uint64_t a1)
{
  return sub_10000AF74((void *)(a1 + 64));
}

void sub_100279C18(NSObject **a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  _DWORD v3[2] = sub_100279C8C;
  v3[3] = &unk_100852BB8;
  v3[4] = a1;
  _OWORD v3[5] = a2;
  dispatch_sync(v2, v3);
}

void sub_100279C8C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = sub_100007494(v2 + 8, *(const void ***)(a1 + 40));
  dispatch_queue_t v4 = qword_1008ABDE0;
  BOOL v5 = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT);
  if (v2 + 16 == v3)
  {
    if (v5)
    {
      id v7 = *(uint64_t **)(a1 + 40);
      if (*((char *)v7 + 23) < 0) {
        id v7 = (uint64_t *)*v7;
      }
      int v8 = 136315138;
      id v9 = v7;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "identifier %s already deregistered", (uint8_t *)&v8, 0xCu);
    }
  }
  else
  {
    if (v5)
    {
      id v6 = *(uint64_t **)(a1 + 40);
      if (*((char *)v6 + 23) < 0) {
        id v6 = (uint64_t *)*v6;
      }
      int v8 = 136315138;
      id v9 = v6;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "deRegisterListener - %s", (uint8_t *)&v8, 0xCu);
    }
    sub_10027A5B0((uint64_t **)(v2 + 8), *(const void ***)(a1 + 40));
    if (!*(void *)(v2 + 24)) {
      sub_1002795F8((dispatch_queue_t *)v2);
    }
  }
}

void sub_100279DD8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    sub_100279E74(*(void *)(a1 + 32), v3);
  }
  else
  {
    dispatch_queue_t v4 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)BOOL v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "network path monitor update handler - null nw_path_t", v5, 2u);
    }
  }
}

void sub_100279E64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100279E74(uint64_t a1, void *a2)
{
  dispatch_queue_t v4 = a2;
  if (!nw_path_is_equal(*(nw_path_t *)(a1 + 40), v4))
  {
    if (nw_path_uses_interface_type(v4, nw_interface_type_wifi))
    {
      BOOL v5 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(buf) = 0;
        id v6 = "new path: wifi";
LABEL_16:
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, v6, (uint8_t *)&buf, 2u);
      }
    }
    else if (nw_path_uses_interface_type(v4, nw_interface_type_cellular))
    {
      BOOL v5 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(buf) = 0;
        id v6 = "new path: cellular";
        goto LABEL_16;
      }
    }
    else if (nw_path_uses_interface_type(v4, nw_interface_type_wired))
    {
      BOOL v5 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(buf) = 0;
        id v6 = "new path: wired";
        goto LABEL_16;
      }
    }
    else
    {
      BOOL v7 = nw_path_uses_interface_type(v4, nw_interface_type_loopback);
      BOOL v5 = qword_1008ABDE0;
      BOOL v8 = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT);
      if (v7)
      {
        if (v8)
        {
          LOWORD(buf) = 0;
          id v6 = "new path: loopback";
          goto LABEL_16;
        }
      }
      else if (v8)
      {
        LOWORD(buf) = 0;
        id v6 = "new path: other";
        goto LABEL_16;
      }
    }
    objc_storeStrong((id *)(a1 + 40), a2);
  }
  int v9 = *(unsigned __int8 *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = (nw_path_get_status(v4) & 0xFFFFFFFD) == 1;
  BOOL v10 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = *(unsigned __int8 *)(a1 + 48);
    LODWORD(buf) = 67109376;
    HIDWORD(buf) = v9;
    __int16 v20 = 1024;
    int v21 = v11;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "wasNetworkReachable: %d, fNetworkReachable: %d", (uint8_t *)&buf, 0xEu);
  }
  if (*(unsigned __int8 *)(a1 + 48) != v9)
  {
    uint64_t v12 = *(void **)(a1 + 8);
    if (v12 != (void *)(a1 + 16))
    {
      do
      {
        int v13 = (id)v12[7];
        sub_100027124((uint64_t)&buf, (uint64_t)(v12 + 8));
        block[0] = _NSConcreteStackBlock;
        block[1] = 3321888768;
        block[2] = sub_10027A1D8;
        block[3] = &unk_10085C3A8;
        void block[4] = a1;
        sub_100027124((uint64_t)v18, (uint64_t)&buf);
        dispatch_async(v13, block);
        sub_10000AF74(v18);
        sub_10000AF74(&buf);

        uint64_t v14 = (void *)v12[1];
        if (v14)
        {
          do
          {
            char v15 = v14;
            uint64_t v14 = (void *)*v14;
          }
          while (v14);
        }
        else
        {
          do
          {
            char v15 = (void *)v12[2];
            BOOL v16 = *v15 == (void)v12;
            uint64_t v12 = v15;
          }
          while (!v16);
        }
        uint64_t v12 = v15;
      }
      while (v15 != (void *)(a1 + 16));
    }
  }
}

void sub_10027A1A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10027A1D8(uint64_t a1)
{
  return sub_1000220A0(a1 + 40, *(unsigned char *)(*(void *)(a1 + 32) + 48));
}

uint64_t sub_10027A1E8(uint64_t a1, uint64_t a2)
{
  return sub_100027124(a1 + 40, a2 + 40);
}

void *sub_10027A1F4(uint64_t a1)
{
  return sub_10000AF74((void *)(a1 + 40));
}

void *sub_10027A1FC(void *a1, id *a2, uint64_t a3)
{
  *a1 = *a2;
  sub_100027124((uint64_t)(a1 + 1), a3);
  return a1;
}

void sub_10027A240(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10027A254(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10027A254(a1, *a2);
    sub_10027A254(a1, a2[1]);
    sub_10027A2B0((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void sub_10027A2B0(uint64_t a1)
{
  sub_10000AF74((void *)(a1 + 32));

  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v2 = *(void **)a1;
    operator delete(v2);
  }
}

uint64_t *sub_10027A308(uint64_t **a1, const void **a2, uint64_t a3, long long **a4)
{
  id v6 = (uint64_t **)sub_100026C8C((uint64_t)a1, &v11, a2);
  BOOL v7 = *v6;
  if (!*v6)
  {
    BOOL v8 = v6;
    sub_10027A3B4((uint64_t)a1, a4, (uint64_t)v10);
    sub_100026D98(a1, v11, v8, v10[0]);
    BOOL v7 = v10[0];
    v10[0] = 0;
    sub_10027A44C((uint64_t)v10, 0);
  }
  return v7;
}

unsigned char *sub_10027A3B4@<X0>(uint64_t a1@<X0>, long long **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  id v6 = operator new(0x60uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = v6 + 4;
  BOOL v8 = *a2;
  if (*((char *)*a2 + 23) < 0)
  {
    uint64_t result = sub_100002DE4(result, *(void **)v8, *((void *)v8 + 1));
  }
  else
  {
    long long v9 = *v8;
    v6[6] = *((void *)v8 + 2);
    *(_OWORD *)uint64_t result = v9;
  }
  v6[7] = 0;
  v6[11] = 0;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_10027A434(_Unwind_Exception *a1)
{
  sub_10027A44C(v1, 0);
  _Unwind_Resume(a1);
}

void sub_10027A44C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_10027A2B0((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

void *sub_10027A4A4(void *a1, uint64_t a2)
{
  sub_10027A528(a1);
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      a1[3] = a1;
      (*(void (**)(void, void *))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      a1[3] = v4;
      *(void *)(a2 + 24) = 0;
    }
  }
  else
  {
    a1[3] = 0;
  }
  return a1;
}

void *sub_10027A528(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  a1[3] = 0;
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_10027A5B0(uint64_t **a1, const void **a2)
{
  id v3 = (uint64_t *)sub_100007494((uint64_t)a1, a2);
  if (a1 + 1 == (uint64_t **)v3) {
    return 0;
  }
  uint64_t v4 = v3;
  sub_100027218(a1, v3);
  sub_10027A2B0((uint64_t)(v4 + 4));
  operator delete(v4);
  return 1;
}

void *sub_10027A60C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, (&off_10085CB98)[a1]);
}

void *sub_10027A620@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, (&off_10085CBF0)[a1]);
}

void *sub_10027A634@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, (&off_10085CC38)[a1]);
}

void *sub_10027A648@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, (&off_10085CC58)[a1]);
}

void sub_10027A9A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10027AD28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10027B1B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);

  sub_1001D0BEC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10027B70C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,uint64_t a25,char a26)
{
  if (a26 && __p) {
    operator delete(__p);
  }
  if (a10) {
    operator delete(a10);
  }

  _Unwind_Resume(a1);
}

void sub_10027BBF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *__p, uint64_t a19, uint64_t a20,char a21)
{
  if (a21)
  {
    if (__p) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_10027BEA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  _Unwind_Resume(a1);
}

void sub_10027C170(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void sub_10027C384(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  _Unwind_Resume(a1);
}

void sub_10027CADC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, uint64_t a20,char a21)
{
  _Unwind_Resume(a1);
}

void sub_10027CF28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  if (a14) {
    sub_10001A970(a14);
  }
  if (a21 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_10027D0F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10027D850(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, _Unwind_Exception *exception_object, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Unwind_Resume(a1);
}

void sub_10027E180(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  _Unwind_Resume(a1);
}

void sub_10027EDE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_10027EFC0(void *a1, void *a2, id a3)
{
  id v5 = a1;
  id v6 = a2;
  BOOL v7 = v6;
  if (!v5)
  {
    BOOL v10 = "dict";
    int v11 = 1728;
    goto LABEL_9;
  }
  if (!v6)
  {
    BOOL v10 = "dictKey";
    int v11 = 1729;
LABEL_9:
    __assert_rtn("getNSUIntegerFromDictionary", "NIServerCarKeySession.mm", v11, v10);
  }
  BOOL v8 = [v5 objectForKey:v6];
  if (v8)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      a3 = [v8 unsignedIntegerValue];
    }
  }

  return a3;
}

void sub_10027F088(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10027F370(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void sub_10027F58C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  _Unwind_Resume(a1);
}

void sub_10027FB94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, _Unwind_Exception *exception_object, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  _Unwind_Resume(a1);
}

unint64_t sub_10027FBF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2 = *(_DWORD *)(a1 + 4);
  if (v2 == 1)
  {
    if (!*(unsigned char *)(a1 + 32)) {
      sub_100427BF0();
    }
    return *(void *)(a1 + 24) / 0x18uLL;
  }
  else if (!v2)
  {
    if (!*(unsigned char *)(a1 + 16)) {
      sub_100427BC4();
    }
    return (unint64_t)(625 * *(void *)(a1 + 8)) >> 1;
  }
  return a2;
}

void sub_10027FE2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, _Unwind_Exception *exception_object, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  if (a26)
  {
    if (__p) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

void sub_1002800B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, char a20)
{
  if (a20)
  {
    if (__p) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(exception_object);
}

id sub_1002801C8(void *a1, id a2)
{
  id v3 = a1;
  uint64_t v4 = +[NSUserDefaults standardUserDefaults];
  id v5 = [v4 objectForKey:v3];
  if (v5 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    a2 = [v5 intValue];
    id v6 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      int v9 = 138412546;
      id v10 = v3;
      __int16 v11 = 1024;
      int v12 = (int)a2;
      BOOL v7 = "#ses-carkey,Override %@ exists. New value: %d";
LABEL_7:
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, v7, (uint8_t *)&v9, 0x12u);
    }
  }
  else
  {
    id v6 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      int v9 = 138412546;
      id v10 = v3;
      __int16 v11 = 1024;
      int v12 = (int)a2;
      BOOL v7 = "#ses-carkey,Override %@ does not exist. Use existing value: %d";
      goto LABEL_7;
    }
  }

  return a2;
}

void sub_10028033C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002805A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100280718(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_100281220(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100281608(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  _Unwind_Resume(a1);
}

void sub_1002818C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100281B88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, uint64_t a20,char a21)
{
  if (a21)
  {
    if (__p) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100281E90(uint64_t a1)
{
  return a1;
}

void sub_100281EBC(uint64_t a1)
{
  operator delete();
}

void *sub_100281F08(uint64_t a1)
{
  int v2 = operator new(0x10uLL);
  *int v2 = off_10085C3E8;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_100281F60(uint64_t a1, void *a2)
{
  *a2 = off_10085C3E8;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_100281FA8(uint64_t a1)
{
}

void sub_100281FB0(id *a1)
{
  operator delete(a1);
}

void sub_100281FEC(uint64_t a1, void *a2, uint64_t *a3)
{
  id v3 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  uint64_t v4 = *(void *)(a1 + 8);
  id v5 = *(NSObject **)(v4 + 64);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1002820DC;
  block[3] = &unk_100857C10;
  uint64_t v6 = *a3;
  void block[4] = v4;
  void block[5] = v6;
  int v8 = *((_DWORD *)a3 + 2);
  dispatch_async(v5, block);
  if (v3) {
    sub_10001A970(v3);
  }
}

uint64_t sub_100282090(uint64_t a1, uint64_t a2)
{
  if (sub_10003E730(a2, (uint64_t)&off_10085C448)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_1002820D0()
{
  return &off_10085C448;
}

id sub_1002820DC(uint64_t a1)
{
  return [*(id *)(a1 + 32) serviceRequestDidUpdateStatus:*(void *)(a1 + 40) *(unsigned int *)(a1 + 48)];
}

uint64_t sub_1002820EC(uint64_t a1)
{
  return a1;
}

void sub_100282118(uint64_t a1)
{
  operator delete();
}

void *sub_100282164(uint64_t a1)
{
  int v2 = operator new(0x10uLL);
  *int v2 = off_10085C468;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_1002821BC(uint64_t a1, void *a2)
{
  *a2 = off_10085C468;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_100282204(uint64_t a1)
{
}

void sub_10028220C(id *a1)
{
  operator delete(a1);
}

void sub_100282248(uint64_t a1, void *a2, int *a3)
{
  id v3 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  int v4 = *a3;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(NSObject **)(v5 + 64);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100282334;
  v7[3] = &unk_100857CC8;
  v7[4] = v5;
  int v8 = v4;
  dispatch_async(v6, v7);
  if (v3) {
    sub_10001A970(v3);
  }
}

uint64_t sub_1002822E8(uint64_t a1, uint64_t a2)
{
  if (sub_10003E730(a2, (uint64_t)&off_10085C4C8)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_100282328()
{
  return &off_10085C4C8;
}

id sub_100282334(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _alishaSessionInvalidatedWithReason:*(unsigned int *)(a1 + 40)];
}

uint64_t sub_100282344(uint64_t a1)
{
  return a1;
}

void sub_100282370(uint64_t a1)
{
  operator delete();
}

void *sub_1002823BC(uint64_t a1)
{
  int v2 = operator new(0x10uLL);
  *int v2 = off_10085C4E8;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_100282414(uint64_t a1, void *a2)
{
  *a2 = off_10085C4E8;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_10028245C(uint64_t a1)
{
}

void sub_100282464(id *a1)
{
  operator delete(a1);
}

void sub_1002824A0(uint64_t a1, void *a2, long long *a3)
{
  uint64_t v5 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  long long v6 = a3[1];
  long long v20 = *a3;
  v21[0] = v6;
  *(_OWORD *)((char *)v21 + 11) = *(long long *)((char *)a3 + 27);
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  uint64_t v22 = 0;
  sub_1001D2084(&v22, *((const void **)a3 + 6), *((void *)a3 + 7), *((void *)a3 + 7) - *((void *)a3 + 6));
  uint64_t v7 = *(void *)((char *)a3 + 77);
  v25[0] = *((void *)a3 + 9);
  *(void *)((char *)v25 + 5) = v7;
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  uint64_t v28 = 0;
  sub_1001D2100(&v26, *((const void **)a3 + 11), *((void *)a3 + 12), (uint64_t)(*((void *)a3 + 12) - *((void *)a3 + 11)) >> 4);
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = *(NSObject **)(v8 + 64);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  long long v11 = v20;
  v12[0] = v21[0];
  block[2] = sub_1002826F0;
  block[3] = &unk_100857D80;
  void block[4] = v8;
  *(_OWORD *)((char *)v12 + 11) = *(_OWORD *)((char *)v21 + 11);
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  int v13 = 0;
  sub_1001D2084(&v13, v22, (uint64_t)v23, v23 - (unsigned char *)v22);
  v16[0] = v25[0];
  *(void *)((char *)v16 + 5) = *(void *)((char *)v25 + 5);
  __n128 __p = 0;
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  sub_1001D2100(&__p, v26, (uint64_t)v27, (v27 - (unsigned char *)v26) >> 4);
  dispatch_async(v9, block);
  if (__p)
  {
    uint64_t v18 = __p;
    operator delete(__p);
  }
  if (v13)
  {
    uint64_t v14 = v13;
    operator delete(v13);
  }
  if (v26)
  {
    uint64_t v27 = v26;
    operator delete(v26);
  }
  if (v22)
  {
    uint64_t v23 = v22;
    operator delete(v22);
  }
  if (v5) {
    sub_10001A970(v5);
  }
}

void sub_100282644(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,void *a40,uint64_t a41)
{
  if (__p) {
    operator delete(__p);
  }
  if (a40) {
    operator delete(a40);
  }
  if (a35) {
    operator delete(a35);
  }
  if (v41) {
    sub_10001A970(v41);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002826A4(uint64_t a1, uint64_t a2)
{
  if (sub_10003E730(a2, (uint64_t)&off_10085C548)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_1002826E4()
{
  return &off_10085C548;
}

void sub_1002826F0(uint64_t a1)
{
  int v2 = *(void **)(a1 + 32);
  long long v3 = *(_OWORD *)(a1 + 56);
  long long v5 = *(_OWORD *)(a1 + 40);
  v6[0] = v3;
  *(_OWORD *)((char *)v6 + 11) = *(_OWORD *)(a1 + 67);
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v7 = 0;
  sub_1001D2084(&v7, *(const void **)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 96) - *(void *)(a1 + 88));
  uint64_t v4 = *(void *)(a1 + 117);
  v10[0] = *(void *)(a1 + 112);
  *(void *)((char *)v10 + 5) = v4;
  __n128 __p = 0;
  int v12 = 0;
  uint64_t v13 = 0;
  sub_1001D2100(&__p, *(const void **)(a1 + 128), *(void *)(a1 + 136), (uint64_t)(*(void *)(a1 + 136) - *(void *)(a1 + 128)) >> 4);
  [v2 _handleInitiatorRangingBlockUpdate:&v5];
  if (__p)
  {
    int v12 = __p;
    operator delete(__p);
  }
  if (v7)
  {
    uint64_t v8 = v7;
    operator delete(v7);
  }
}

void sub_1002827AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
}

uint64_t sub_1002827D8(uint64_t a1)
{
  return a1;
}

void sub_100282804(uint64_t a1)
{
  operator delete();
}

void *sub_100282850(uint64_t a1)
{
  int v2 = operator new(0x10uLL);
  *int v2 = off_10085C568;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_1002828A8(uint64_t a1, void *a2)
{
  *a2 = off_10085C568;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_1002828F0(uint64_t a1)
{
}

void sub_1002828F8(id *a1)
{
  operator delete(a1);
}

void sub_100282934(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = *a2;
  uint64_t v4 = (const void *)a2[1];
  uint64_t v14 = v5;
  uint64_t v15 = 0;
  BOOL v16 = 0;
  uint64_t v17 = 0;
  sub_1001D0B70(&v15, v4, a2[2], (a2[2] - (uint64_t)v4) >> 1);
  uint64_t v19 = a2[6];
  long long v18 = *((_OWORD *)a2 + 2);
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(NSObject **)(v6 + 64);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  block[2] = sub_100282ABC;
  block[3] = &unk_100857E48;
  void block[4] = v6;
  void block[5] = v14;
  id v10 = 0;
  uint64_t v11 = 0;
  __n128 __p = 0;
  sub_1001D0B70(&__p, v15, (uint64_t)v16, (v16 - (unsigned char *)v15) >> 1);
  long long v12 = v18;
  uint64_t v13 = v19;
  dispatch_async(v7, block);
  if (__p)
  {
    id v10 = __p;
    operator delete(__p);
  }
  if (v15)
  {
    BOOL v16 = v15;
    operator delete(v15);
  }
}

void sub_100282A54(_Unwind_Exception *exception_object)
{
  long long v3 = *(void **)(v1 - 80);
  if (v3)
  {
    *(void *)(v1 - 72) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100282A70(uint64_t a1, uint64_t a2)
{
  if (sub_10003E730(a2, (uint64_t)&off_10085C5C8)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_100282AB0()
{
  return &off_10085C5C8;
}

void sub_100282ABC(uint64_t a1)
{
  int v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  __n128 __p = 0;
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  sub_1001D0B70(&__p, *(const void **)(a1 + 48), *(void *)(a1 + 56), (uint64_t)(*(void *)(a1 + 56) - *(void *)(a1 + 48)) >> 1);
  long long v7 = *(_OWORD *)(a1 + 72);
  uint64_t v8 = *(void *)(a1 + 88);
  [v2 _handleSessionStats:&v3];
  if (__p)
  {
    uint64_t v5 = __p;
    operator delete(__p);
  }
}

void sub_100282B34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100282B50(uint64_t a1)
{
  return a1;
}

void sub_100282B7C(uint64_t a1)
{
  operator delete();
}

void *sub_100282BC8(uint64_t a1)
{
  int v2 = operator new(0x10uLL);
  *int v2 = off_10085C5E8;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_100282C20(uint64_t a1, void *a2)
{
  *a2 = off_10085C5E8;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_100282C68(uint64_t a1)
{
}

void sub_100282C70(id *a1)
{
  operator delete(a1);
}

void sub_100282CAC(uint64_t a1, int *a2)
{
  int v2 = *a2;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(NSObject **)(v3 + 64);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_100282D7C;
  v5[3] = &unk_100857CC8;
  v5[4] = v3;
  int v6 = v2;
  dispatch_async(v4, v5);
}

uint64_t sub_100282D30(uint64_t a1, uint64_t a2)
{
  if (sub_10003E730(a2, (uint64_t)&off_10085C648)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_100282D70()
{
  return &off_10085C648;
}

id sub_100282D7C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _handleHealthChanged:*(unsigned int *)(a1 + 40)];
}

uint64_t sub_100282D8C(uint64_t a1)
{
  return a1;
}

void sub_100282DB8(uint64_t a1)
{
  operator delete();
}

void *sub_100282E04(uint64_t a1)
{
  int v2 = operator new(0x10uLL);
  *int v2 = off_10085C668;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_100282E5C(uint64_t a1, void *a2)
{
  *a2 = off_10085C668;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_100282EA4(uint64_t a1)
{
}

void sub_100282EAC(id *a1)
{
  operator delete(a1);
}

double sub_100282EE8(uint64_t a1, int *a2, uint64_t *a3)
{
  int v3 = *a2;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(NSObject **)(v4 + 64);
  uint64_t v6 = *a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100282FC0;
  block[3] = &unk_100857C10;
  void block[4] = v4;
  int v9 = v3;
  void block[5] = v6;
  dispatch_async(v5, block);
  return result;
}

uint64_t sub_100282F74(uint64_t a1, uint64_t a2)
{
  if (sub_10003E730(a2, (uint64_t)&off_10085C6C8)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_100282FB4()
{
  return &off_10085C6C8;
}

id sub_100282FC0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _handleTimeoutEvent:*(unsigned int *)(a1 + 48) time:*(double *)(a1 + 40)];
}

uint64_t sub_100282FD4@<X0>(__int16 *a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = (char *)operator new(0x20uLL);
  uint64_t result = sub_100283030((uint64_t)v4, a1);
  *a2 = v4 + 24;
  a2[1] = v4;
  return result;
}

void sub_10028301C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100283030(uint64_t a1, __int16 *a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = off_10085C6E8;
  sub_10032B83C((_WORD *)(a1 + 24), *a2);
  return a1;
}

void sub_10028307C(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_100283090(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10085C6E8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1002830B0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10085C6E8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void *sub_10028310C@<X0>(char *a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = operator new(0x30uLL);
  uint64_t result = sub_100283168(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_100283154(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_100283168(void *a1, char *a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_10085C738;
  sub_100283264((uint64_t)(a1 + 3), *a2);
  return a1;
}

void sub_1002831B4(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1002831C8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10085C738;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1002831E8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10085C738;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_10028323C(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

uint64_t sub_100283264(uint64_t a1, char a2)
{
  *(void *)a1 = off_10085C788;
  int v4 = sub_1002801C8(@"AlishaMinRanMultiplierOverride", (id)3);
  if (v4 <= 0) {
    sub_100427C48();
  }
  if (v4 >= 0x100) {
    sub_100427C74();
  }
  *(unsigned char *)(a1 + 8) = v4;
  double v5 = 3.0;
  if ((a2 & 1) == 0)
  {
    uint64_t v6 = +[NSUserDefaults standardUserDefaults];
    long long v7 = [v6 objectForKey:@"AlishaStartTimeOffsetSeconds"];
    if (v7 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
    {
      [v7 doubleValue];
      double v5 = v8;
      int v9 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        int v12 = 138412546;
        CFStringRef v13 = @"AlishaStartTimeOffsetSeconds";
        __int16 v14 = 2048;
        uint64_t v15 = *(void *)&v5;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#ses-carkey,Override %@ exists. New value: %f", (uint8_t *)&v12, 0x16u);
      }

      if (v5 <= 0.0) {
        sub_100427CA0();
      }
    }
    else
    {
      id v10 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        int v12 = 138412546;
        CFStringRef v13 = @"AlishaStartTimeOffsetSeconds";
        __int16 v14 = 2048;
        uint64_t v15 = 0x3FB999999999999ALL;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#ses-carkey,Override %@ does not exist. Use existing value: %f", (uint8_t *)&v12, 0x16u);
      }

      double v5 = 0.1;
    }
  }
  *(void *)(a1 + 16) = llround(v5 * 1000000.0);
  return a1;
}

void sub_100283488(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002834B0()
{
}

_WORD *sub_1002834C4@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  int v2 = operator new(2uLL);
  *a1 = v2;
  *int v2 = 256;
  uint64_t result = v2 + 1;
  a1[1] = result;
  a1[2] = result;
  return result;
}

void sub_100283504(void *a1@<X8>)
{
  __int16 v13 = 0;
  int v2 = sub_1002F6464();
  uint64_t v3 = *((void *)v2 + 406);
  int v4 = (std::__shared_weak_count *)*((void *)v2 + 407);
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  char v14 = 0;
  BOOL v5 = sub_1002CE2DC(v3, &v14, (unsigned __int8 *)&v13, 0);
  if (v4) {
    sub_10001A970(v4);
  }
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (v5)
  {
    BOOL v6 = v14 != 5;
    long long v7 = operator new(1uLL);
    *long long v7 = v6;
    a1[1] = v7 + 1;
    a1[2] = v7 + 1;
    *a1 = v7;
    if (HIBYTE(v13))
    {
      double v8 = v7;
      int v9 = v13;
      id v10 = operator new(2uLL);
      BOOL v11 = v9 != 5;
      int v12 = v10 + 2;
      v10[1] = v11;
      *id v10 = *v8;
      *a1 = v10;
      a1[2] = v10 + 2;
      operator delete(v8);
      a1[1] = v12;
    }
  }
}

void sub_1002835F0(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

unint64_t sub_100283620(uint64_t a1, unsigned int a2)
{
  v48[0] = 0;
  v48[1] = 0;
  uint64_t v47 = (uint64_t *)v48;
  uint64_t v3 = (std::recursive_mutex *)sub_1002F6464();
  v51[0] = off_10085C7E8;
  v51[1] = &v47;
  v51[3] = v51;
  sub_1002FA390(v3, (uint64_t)v51);
  sub_1001D3984(v51);
  sub_100004950(&v46, "\n");
  int v4 = v47;
  if (v47 != (uint64_t *)v48)
  {
    do
    {
      unsigned int v5 = *(_DWORD *)((char *)v4 + 26);
      sub_1003A7E38(v5);
      BOOL v6 = std::string::insert(&v42, 0, "    ");
      long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
      v43.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v7;
      v6->__r_.__value_.__l.__size_ = 0;
      v6->__r_.__value_.__r.__words[2] = 0;
      v6->__r_.__value_.__r.__words[0] = 0;
      double v8 = std::string::append(&v43, ": ");
      long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
      v44.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v44.__r_.__value_.__l.__data_ = v9;
      v8->__r_.__value_.__l.__size_ = 0;
      v8->__r_.__value_.__r.__words[2] = 0;
      v8->__r_.__value_.__r.__words[0] = 0;
      std::to_string(&v41, HIWORD(v5));
      if ((v41.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        id v10 = &v41;
      }
      else {
        id v10 = (std::string *)v41.__r_.__value_.__r.__words[0];
      }
      if ((v41.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(v41.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = v41.__r_.__value_.__l.__size_;
      }
      int v12 = std::string::append(&v44, (const std::string::value_type *)v10, size);
      long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
      v45.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v45.__r_.__value_.__l.__data_ = v13;
      v12->__r_.__value_.__l.__size_ = 0;
      v12->__r_.__value_.__r.__words[2] = 0;
      v12->__r_.__value_.__r.__words[0] = 0;
      char v14 = std::string::append(&v45, "\n");
      long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
      int64_t v50 = v14->__r_.__value_.__r.__words[2];
      *(_OWORD *)uint64_t buf = v15;
      v14->__r_.__value_.__l.__size_ = 0;
      v14->__r_.__value_.__r.__words[2] = 0;
      v14->__r_.__value_.__r.__words[0] = 0;
      if (v50 >= 0) {
        BOOL v16 = buf;
      }
      else {
        BOOL v16 = *(uint8_t **)buf;
      }
      if (v50 >= 0) {
        std::string::size_type v17 = HIBYTE(v50);
      }
      else {
        std::string::size_type v17 = *(void *)&buf[8];
      }
      std::string::append(&v46, (const std::string::value_type *)v16, v17);
      if (SHIBYTE(v50) < 0) {
        operator delete(*(void **)buf);
      }
      if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v45.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v41.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v44.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v43.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v42.__r_.__value_.__l.__data_);
      }
      long long v18 = (uint64_t *)v4[1];
      if (v18)
      {
        do
        {
          uint64_t v19 = v18;
          long long v18 = (uint64_t *)*v18;
        }
        while (v18);
      }
      else
      {
        do
        {
          uint64_t v19 = (uint64_t *)v4[2];
          BOOL v20 = *v19 == (void)v4;
          int v4 = v19;
        }
        while (!v20);
      }
      int v4 = v19;
    }
    while (v19 != (uint64_t *)v48);
  }
  int v21 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v22 = &v46;
    if ((v46.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      uint64_t v22 = (std::string *)v46.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)uint64_t buf = 136315138;
    *(void *)&uint8_t buf[4] = v22;
    _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "#ses-carkey,Preamble use counts: {%s}", buf, 0xCu);
  }
  uint64_t v23 = 4294965278;
  if (a2)
  {
    int v24 = 0;
    unsigned __int8 v25 = 0;
    int v26 = 0;
    unsigned int v27 = a2;
    int v28 = 0;
    unsigned __int16 v29 = 0;
    std::string::value_type v30 = 1;
    unsigned int v39 = v27;
    char v40 = 0;
    do
    {
      if (v27)
      {
        switch(v30)
        {
          case 9:
            char v31 = 0;
            goto LABEL_44;
          case 10:
            char v31 = 1;
            goto LABEL_44;
          case 11:
            char v31 = 2;
            goto LABEL_44;
          case 12:
            char v31 = 3;
LABEL_44:
            v44.__r_.__value_.__s.__data_[0] = v30;
            *(void *)uint64_t buf = &v44;
            id v32 = sub_1001D3A08(&v47, (unsigned __int8 *)&v44, (uint64_t)&unk_1004BC2F8, (unsigned char **)buf);
            if (!v28 || *((unsigned __int16 *)v32 + 14) < v29)
            {
              int v28 = 1;
              unsigned __int16 v29 = *((_WORD *)v32 + 14);
              char v40 = v31;
              int v26 = 1;
              unsigned __int8 v25 = v30;
              int v24 = 1;
            }
            break;
          default:
            break;
        }
      }
      ++v30;
      BOOL v33 = v27 > 1;
      v27 >>= 1;
    }
    while (v33);
    uint64_t v34 = 0;
    if (v24 && v26 && v28)
    {
      uint64_t v35 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 67109632;
        *(_DWORD *)&uint8_t buf[4] = v39;
        *(_WORD *)&buf[8] = 1024;
        *(_DWORD *)&buf[10] = v25;
        *(_WORD *)&buf[14] = 1024;
        LODWORD(v50) = v29;
        _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, "#ses-carkey,Sync code bitmask 0x%x. Preferred sync code index %u. Current use count %u.", buf, 0x14u);
      }
      uint64_t v23 = 0;
      unint64_t v36 = (unint64_t)v25 << 32;
      uint64_t v34 = 0x1000000000000;
      unsigned __int8 v37 = v40;
    }
    else
    {
      unint64_t v36 = 0;
      unsigned __int8 v37 = v40;
      uint64_t v23 = 4294965278;
    }
  }
  else
  {
    unsigned __int8 v37 = 0;
    uint64_t v34 = 0;
    unint64_t v36 = 0;
  }
  if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v46.__r_.__value_.__l.__data_);
  }
  sub_10003E96C((uint64_t)&v47, v48[0]);
  return v23 | ((unint64_t)v37 << 40) | v34 | v36;
}

void sub_100283AC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,void *__p,uint64_t a45,int a46,__int16 a47,char a48,char a49,char a50,void *a51)
{
}

uint64_t sub_100283BAC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_100283BB4(uint64_t a1, unsigned char *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!*a2)
  {
    uint64_t v3 = sub_1002F6464();
    unint64_t v4 = sub_1002F8F5C((uint64_t)v3);
    BOOL v6 = HIWORD(v4) != 1 || (v4 & 0xFF00) == 0;
    BOOL v7 = v6 || v4 == 0;
    if (!v7 && v5 != 0)
    {
      long long v9 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)BOOL v11 = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#ses-carkey,Applying additional start time offset for Ch5 coex", v11, 2u);
      }
      v2 += 50000;
    }
  }
  return v2;
}

void sub_100283C64()
{
}

void *sub_100283C78(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = off_10085C7E8;
  result[1] = v3;
  return result;
}

uint64_t sub_100283CC0(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_10085C7E8;
  a2[1] = v2;
  return result;
}

void sub_100283CEC(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_100283CF4(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100283D34()
{
}

void sub_100283D40(uint64_t ***a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 105))
  {
    unsigned __int8 v6 = *(unsigned char *)(a2 + 104);
    if (!sub_1003A7C00(v6))
    {
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
        sub_100427D0C();
      }
      char v5 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)uint64_t buf = 136315650;
        *(void *)&uint8_t buf[4] = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/Session/N"
                             "IServerCarKeySession.mm";
        __int16 v8 = 1024;
        int v9 = 192;
        __int16 v10 = 2080;
        BOOL v11 = "operator()";
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "#ses-carkey,%s:%d: assertion failure in %s", buf, 0x1Cu);
      }
      abort();
    }
    uint64_t v3 = *a1;
    *(void *)uint64_t buf = &v6;
    unint64_t v4 = sub_1001D3A08(v3, &v6, (uint64_t)&unk_1004BC2F8, (unsigned char **)buf);
    ++*((_WORD *)v4 + 14);
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT))
  {
    sub_100427CCC();
  }
}

void sub_100283EA8()
{
}

void *sub_100283EBC()
{
  uint64_t result = operator new(0x10uLL);
  *uint64_t result = off_10085C868;
  return result;
}

void sub_100283EF4(uint64_t a1, void *a2)
{
  *a2 = off_10085C868;
}

uint64_t sub_100283F20(uint64_t a1, uint64_t a2)
{
  if (sub_10003E730(a2, (uint64_t)&off_10085C8C8)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_100283F60()
{
  return &off_10085C8C8;
}

void sub_100283F6C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10085C8E8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100283F8C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10085C8E8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_100283FE0(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void *sub_100284008@<X0>(void *a1@<X1>, void *a2@<X8>)
{
  unint64_t v4 = operator new(0x30uLL);
  uint64_t result = sub_100284064(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_100284050(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_100284064(void *a1, void *a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_10085C938;
  sub_100277EBC(a1 + 3, *a2);
  return a1;
}

void sub_1002840B0(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1002840C4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10085C938;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1002840E4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10085C938;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_100284138(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
}

void sub_100284178(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10085C988;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100284198(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10085C988;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_1002841EC(uint64_t a1)
{
  return sub_100339A54(a1 + 24);
}

uint64_t sub_1002841F8(uint64_t a1)
{
  return a1;
}

void sub_100284224(uint64_t a1)
{
  operator delete();
}

void *sub_100284270(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  *uint64_t v2 = off_10085C9D8;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_1002842C8(uint64_t a1, void *a2)
{
  *a2 = off_10085C9D8;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_100284310(uint64_t a1)
{
}

void sub_100284318(id *a1)
{
  operator delete(a1);
}

uint64_t sub_100284354@<X0>(uint64_t a1@<X0>, int *a2@<X1>, uint64_t a3@<X8>)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(*(void *)(a1 + 8) + 64));
  unsigned __int8 v6 = *(id **)(a1 + 8);
  BOOL v7 = [v6[53] debugOptions];
  [v6 _ownerDeviceServiceRequestDebugParams:v7];

  +[NIServerCarKeySession _aopJobConfigWithTimeouts];
  sub_100180238(a2, 102, (uint64_t)&v13, v15, (uint64_t)v16);
  sub_1001FEA28(&v12);
  __int16 v8 = *(void **)(a1 + 8);
  if (v8)
  {
    [v8 _buildAlishaSession:v16];
    if (v13)
    {
      uint64_t v9 = v13 + 8;
      __int16 v10 = v14;
      if (v14)
      {
        atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
        *(_DWORD *)a3 = 0;
        *(void *)(a3 + 8) = v9;
        *(void *)(a3 + 16) = v10;
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        *(unsigned char *)(a3 + 24) = 1;
        sub_10001A970(v10);
      }
      else
      {
        *(_DWORD *)a3 = 0;
        *(void *)(a3 + 8) = v9;
        *(void *)(a3 + 16) = 0;
        *(unsigned char *)(a3 + 24) = 1;
      }
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v13 = 0;
    char v14 = 0;
  }
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
    sub_100427D4C();
  }
  *(_DWORD *)a3 = -1013;
  *(unsigned char *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 24) = 0;
LABEL_9:
  if (v14) {
    sub_10001A970(v14);
  }
  uint64_t result = v12;
  uint64_t v12 = 0;
  if (result)
  {
    sub_1001FEA78(result);
    operator delete();
  }
  return result;
}

void sub_100284510(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    sub_100427D80(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100284540(uint64_t a1, uint64_t a2)
{
  if (sub_10003E730(a2, (uint64_t)&off_10085CA38)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_100284580()
{
  return &off_10085CA38;
}

uint64_t sub_10028458C(uint64_t a1)
{
  return a1;
}

void sub_1002845B8(uint64_t a1)
{
  operator delete();
}

void *sub_100284604(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  *uint64_t v2 = off_10085CA58;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_10028465C(uint64_t a1, void *a2)
{
  *a2 = off_10085CA58;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_1002846A4(uint64_t a1)
{
}

void sub_1002846AC(id *a1)
{
  operator delete(a1);
}

id sub_1002846E8(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *a3;
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(*(void *)(a1 + 8) + 64));
  unsigned __int8 v6 = *(void **)(a1 + 8);

  return _[v6 _alishaStateChangedFromState:v4 toNewState:v5];
}

uint64_t sub_100284748(uint64_t a1, uint64_t a2)
{
  if (sub_10003E730(a2, (uint64_t)&off_10085CAB8)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_100284788()
{
  return &off_10085CAB8;
}

void sub_100284794(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10085CAD8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1002847B4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10085CAD8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_100284808(uint64_t a1)
{
  return sub_1001FED8C(a1 + 24);
}

uint64_t sub_100284814(uint64_t a1)
{
  return a1;
}

void sub_100284840(uint64_t a1)
{
  operator delete();
}

void *sub_10028488C(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  *uint64_t v2 = off_10085CB28;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_1002848E4(uint64_t a1, void *a2)
{
  *a2 = off_10085CB28;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_10028492C(uint64_t a1)
{
}

void sub_100284934(id *a1)
{
  operator delete(a1);
}

id sub_100284970(uint64_t a1, unsigned int *a2, double *a3)
{
  return _[*(id *)(a1 + 8) _handleTimeoutEvent:*a2 time:*a3];
}

uint64_t sub_100284984(uint64_t a1, uint64_t a2)
{
  if (sub_10003E730(a2, (uint64_t)&off_10085CB88)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_1002849C4()
{
  return &off_10085CB88;
}

void sub_1002849E8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C888, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C888))
  {
    sub_100004950(qword_10089C870, "PRRoseProviderNetworkListener");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C870, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C888);
  }
}

void sub_100284A80(_Unwind_Exception *a1)
{
}

void sub_100284A98()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8A8))
  {
    sub_100004950(&qword_10089C890, "com.apple.nearbyd.accessory.download");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C890, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8A8);
  }
}

void sub_100284B30(_Unwind_Exception *a1)
{
}

void sub_100284B48()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8C8))
  {
    sub_100004950(&qword_10089C8B0, "com.apple.nearbyd.accessory.files");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C8B0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8C8);
  }
}

void sub_100284BE0(_Unwind_Exception *a1)
{
}

void sub_100284BF8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8E8))
  {
    sub_100004950(qword_10089C8D0, "MA_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8D0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8E8);
  }
}

void sub_100284C90(_Unwind_Exception *a1)
{
}

void sub_100284CA8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C908, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C908))
  {
    sub_100004950(qword_10089C8F0, "MB_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8F0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C908);
  }
}

void sub_100284D40(_Unwind_Exception *a1)
{
}

void sub_100284D58()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C928, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C928))
  {
    sub_100004950(qword_10089C910, "D");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C910, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C928);
  }
}

void sub_100284DF0(_Unwind_Exception *a1)
{
}

void sub_100284E08()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C948, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C948))
  {
    sub_100004950(&qword_10089C930, "A");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C930, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C948);
  }
}

void sub_100284EA0(_Unwind_Exception *a1)
{
}

void sub_100284EB8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C968, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C968))
  {
    sub_100004950(qword_10089C950, "FAS.bin");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C950, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C968);
  }
}

void sub_100284F50(_Unwind_Exception *a1)
{
}

void sub_100284F68()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C988, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C988))
  {
    qword_10089C970 = 0;
    qword_10089C978 = 0;
    qword_10089C980 = 0;
    uint64_t v0 = operator new(0x30uLL);
    qword_10089C978 = (uint64_t)(v0 + 3);
    qword_10089C980 = (uint64_t)(v0 + 3);
    _OWORD *v0 = xmmword_1004BCA50;
    v0[1] = unk_1004BCA60;
    v0[2] = xmmword_1004BCA70;
    qword_10089C970 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_100008CAC, &qword_10089C970, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C988);
  }
}

void sub_100285024(_Unwind_Exception *a1)
{
}

void sub_10028503C()
{
  sub_10039D144();
  uint64_t v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  uint64_t v3 = std::string::append(&v38, ".bin");
  long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1008A6C58 = v3->__r_.__value_.__r.__words[2];
  xmmword_1008A6C48 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6C48, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  BOOL v7 = std::string::append(&v38, ".bin");
  long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1008A6C70 = v7->__r_.__value_.__r.__words[2];
  xmmword_1008A6C60 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6C60, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  BOOL v11 = std::string::append(&v38, ".bin");
  long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1008A6C88 = v11->__r_.__value_.__r.__words[2];
  xmmword_1008A6C78 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6C78, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  long long v15 = std::string::append(&v38, ".bin");
  long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1008A6CA0 = v15->__r_.__value_.__r.__words[2];
  xmmword_1008A6C90 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6C90, (void *)&_mh_execute_header);
  sub_10039D144();
  std::string::size_type v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  uint64_t v19 = std::string::append(&v38, ".bin");
  long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1008A6CB8 = v19->__r_.__value_.__r.__words[2];
  xmmword_1008A6CA8 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6CA8, (void *)&_mh_execute_header);
  sub_10039D144();
  int v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  uint64_t v23 = std::string::append(&v38, ".bin");
  long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1008A6CD0 = v23->__r_.__value_.__r.__words[2];
  xmmword_1008A6CC0 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6CC0, (void *)&_mh_execute_header);
  sub_10039D144();
  unsigned __int8 v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  unsigned int v27 = std::string::append(&v38, ".bin");
  long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1008A6CE8 = v27->__r_.__value_.__r.__words[2];
  xmmword_1008A6CD8 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6CD8, (void *)&_mh_execute_header);
  sub_10039D144();
  unsigned __int16 v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  char v31 = std::string::append(&v38, ".bin");
  long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1008A6D00 = v31->__r_.__value_.__r.__words[2];
  xmmword_1008A6CF0 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6CF0, (void *)&_mh_execute_header);
  sub_10039D144();
  BOOL v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  uint64_t v35 = std::string::append(&v38, ".bin");
  long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1008A6D18 = v35->__r_.__value_.__r.__words[2];
  xmmword_1008A6D08 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6D08, (void *)&_mh_execute_header);
}

void sub_10028567C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1002856F0@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085CDA8[a1]);
}

void *sub_100285704@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085CE00[a1]);
}

void *sub_100285718@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085CE48[a1]);
}

void *sub_10028572C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085CE68[a1]);
}

void sub_1002857B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10028589C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100285954(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100285A08(id a1)
{
  id v1 = [[NIServerSystemConfigurator alloc] _initInternal];
  long long v2 = (void *)qword_1008A6DF8;
  qword_1008A6DF8 = (uint64_t)v1;
}

void sub_100285B78(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 16) = 0;
  uint64_t v2 = +[NSMapTable strongToWeakObjectsMapTable];
  uint64_t v3 = *(void *)(a1 + 32);
  long long v4 = *(void **)(v3 + 24);
  *(void *)(v3 + 24) = v2;

  uint64_t v5 = objc_opt_new();
  uint64_t v6 = *(void *)(a1 + 32);
  BOOL v7 = *(void **)(v6 + 32);
  *(void *)(v6 + 32) = v5;

  uint64_t v8 = objc_opt_new();
  uint64_t v9 = *(void *)(a1 + 32);
  long long v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v8;

  uint64_t v11 = objc_opt_new();
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void **)(v12 + 64);
  *(void *)(v12 + 64) = v11;

  if (+[NIPlatformInfo isInternalBuild]
    || (+[NSUserDefaults standardUserDefaults],
        long long v14 = objc_claimAutoreleasedReturnValue(),
        unsigned int v15 = [v14 BOOLForKey:@"EnableStateDump"],
        v14,
        v15))
  {
    id v16 = *(id *)(a1 + 32);
    os_state_add_handler();
  }
}

void sub_100285CC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

char *sub_100285CD8(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) _internalPrintableState];
  uint64_t v2 = sub_10002DA78(@"System Configurator", v1);

  return v2;
}

void sub_100285D20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100285DA4(uint64_t a1)
{
  id v1 = (void *)(a1 + 32);
  if (!*(unsigned char *)(*(void *)(a1 + 32) + 16))
  {
    uint64_t v2 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#configurator,Activate", buf, 2u);
    }
    sub_100288210(v1, buf);
    uint64_t v3 = *v1;
    long long v4 = *(_OWORD *)buf;
    memset(buf, 0, sizeof(buf));
    uint64_t v5 = *(std::__shared_weak_count **)(v3 + 56);
    *(_OWORD *)(v3 + 48) = v4;
    if (v5)
    {
      sub_10001A970(v5);
      if (*(void *)&buf[8]) {
        sub_10001A970(*(std::__shared_weak_count **)&buf[8]);
      }
    }
    uint64_t v6 = sub_1002F6464();
    BOOL v7 = *(std::__shared_weak_count **)(*v1 + 56);
    unint64_t v12 = *(void *)(*v1 + 48);
    uint64_t v13 = v7;
    if (v7) {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    sub_1002FA4B8((uint64_t)v6, &v12);
    if (v13) {
      sub_10001A970(v13);
    }
    uint64_t v8 = sub_1002F6464();
    uint64_t v9 = *(std::__shared_weak_count **)(*v1 + 56);
    uint64_t v10 = *(void *)(*v1 + 48);
    uint64_t v11 = v9;
    if (v9) {
      atomic_fetch_add_explicit(&v9->__shared_weak_owners_, 1uLL, memory_order_relaxed);
    }
    sub_1002F6B1C((uint64_t)v8, &v10);
    if (v11) {
      std::__shared_weak_count::__release_weak(v11);
    }
    *(unsigned char *)(*v1 + 16) = 1;
  }
}

void sub_100285EC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, uint64_t a12)
{
  if (a10) {
    std::__shared_weak_count::__release_weak(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_100285FBC(void *a1)
{
  uint64_t v2 = [*(id *)(a1[4] + 24) objectForKey:a1[5]];

  if (v2)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_100427DAC();
    }
  }
  else
  {
    uint64_t v3 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[5];
      unsigned int v5 = [*(id *)(a1[4] + 24) count];
      int v12 = 138412546;
      uint64_t v13 = v4;
      __int16 v14 = 1024;
      unsigned int v15 = v5;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#configurator,Add client %@ (%d previous clients)", (uint8_t *)&v12, 0x12u);
    }

    [*(id *)(a1[4] + 24) setObject:a1[6] forKey:a1[5]];
    uint64_t v6 = *(void **)(a1[4] + 32);
    BOOL v7 = objc_opt_new();
    [v6 setObject:v7 forKey:a1[5]];

    uint64_t v8 = (void *)a1[6];
    id v9 = [*(id *)(a1[4] + 64) copy];
    [v8 didUpdateSystemState:v9];

    uint64_t v11 = (void *)a1[6];
    uint64_t v10 = (id *)(a1 + 6);
    [v11 didUpdateResourceUsageLimitExceeded:[*((id *)*(v10 - 2) + 5) carKeyRangingLimitExceeded] forSessionConfigurationType:objc_opt_class()];
    [*v10 didUpdateResourceUsageLimitExceeded:[*((id *)*(v10 - 2) + 5) acwgRangingLimitExceeded] forSessionConfigurationType:objc_opt_class()];
    [*v10 didUpdatePassiveAccessIntent:[*((id *)*(v10 - 2) + 5) passiveAccessIntent]];
  }
}

void sub_1002861B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100286280(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    uint64_t v2 = [*(id *)(*(void *)(a1 + 40) + 32) objectForKey:];

    if (v2)
    {
      uint64_t v3 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v4 = *(void *)(a1 + 32);
        unsigned int v5 = [*(id *)(*(void *)(a1 + 40) + 24) count];
        int v8 = 138412546;
        uint64_t v9 = v4;
        __int16 v10 = 1024;
        unsigned int v11 = v5;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#configurator,Remove client %@ (%d clients before removal)", (uint8_t *)&v8, 0x12u);
      }

      uint64_t v7 = *(void *)(a1 + 40);
      uint64_t v6 = (id *)(a1 + 40);
      [*(id *)(v7 + 24) removeObjectForKey:*(v6 - 1)];
      [*((id *)*v6 + 4) removeObjectForKey:*(v6 - 1)];
      [*v6 _updateAggregatedClientInfo];
    }
    else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
    {
      sub_100427E14();
    }
  }
}

void sub_1002863C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100286488(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 24) objectForKey:*(void *)(a1 + 40)];

  if (v2)
  {
    uint64_t v3 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      int v4 = *(unsigned __int8 *)(a1 + 48);
      uint64_t v5 = *(void *)(a1 + 40);
      uint64_t v6 = [*(id *)(*(void *)(a1 + 32) + 32) objectForKeyedSubscript:v5];
      unsigned int v7 = [v6 prewarmUWB];
      unsigned int v8 = [*(id *)(*(void *)(a1 + 32) + 40) prewarmUWB];
      int v19 = 138413058;
      uint64_t v20 = v5;
      __int16 v21 = 1024;
      int v22 = v4;
      __int16 v23 = 1024;
      unsigned int v24 = v7;
      __int16 v25 = 1024;
      unsigned int v26 = v8;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#configurator,Client %@ requested prewarm UWB: %d. Previous from this client: %d. Previous aggregated: %d", (uint8_t *)&v19, 0x1Eu);
    }
    uint64_t v9 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      int v10 = *(unsigned __int8 *)(a1 + 49);
      uint64_t v11 = *(void *)(a1 + 40);
      int v12 = [*(id *)(*(void *)(a1 + 32) + 32) objectForKeyedSubscript:v11];
      unsigned int v13 = [v12 prewarmSecureElementChannel];
      unsigned int v14 = [*(id *)(*(void *)(a1 + 32) + 40) prewarmSecureElementChannel];
      int v19 = 138413058;
      uint64_t v20 = v11;
      __int16 v21 = 1024;
      int v22 = v10;
      __int16 v23 = 1024;
      unsigned int v24 = v13;
      __int16 v25 = 1024;
      unsigned int v26 = v14;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#configurator,Client %@ requested prewarm SE channel: %d. Previous from this client: %d. Previous aggregated: %d", (uint8_t *)&v19, 0x1Eu);
    }
    BOOL v15 = *(unsigned char *)(a1 + 48) != 0;
    id v16 = [*(id *)(*(void *)(a1 + 32) + 32) objectForKeyedSubscript:*(void *)(a1 + 40)];
    [v16 setPrewarmUWB:v15];

    BOOL v17 = *(unsigned char *)(a1 + 49) != 0;
    long long v18 = [*(id *)(*(void *)(a1 + 32) + 32) objectForKeyedSubscript:*(void *)(a1 + 40)];
    [v18 setPrewarmSecureElementChannel:v17];

    [*(id *)(a1 + 32) _updateAggregatedClientInfo];
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_100427E7C();
  }
}

void sub_1002866E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002867E4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 24) objectForKey:*(void *)(a1 + 40)];

  if (v2)
  {
    if ([*(id *)(a1 + 48) isSubclassOfClass:objc_opt_class()])
    {
      uint64_t v3 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
      {
        int v4 = *(unsigned __int8 *)(a1 + 56);
        uint64_t v5 = *(void *)(a1 + 40);
        uint64_t v6 = [*(id *)(*(void *)(a1 + 32) + 32) objectForKeyedSubscript:v5];
        unsigned int v7 = [v6 carKeyRangingLimitExceeded];
        unsigned int v8 = [*(id *)(*(void *)(a1 + 32) + 40) carKeyRangingLimitExceeded];
        int v21 = 138413058;
        uint64_t v22 = v5;
        __int16 v23 = 1024;
        int v24 = v4;
        __int16 v25 = 1024;
        unsigned int v26 = v7;
        __int16 v27 = 1024;
        unsigned int v28 = v8;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#configurator,Client %@ notified CarKey resource usage limit exceeded: %d. Previous from this client: %d. Previous aggregated: %d", (uint8_t *)&v21, 0x1Eu);
      }
      BOOL v9 = *(unsigned char *)(a1 + 56) != 0;
      int v10 = [*(id *)(*(void *)(a1 + 32) + 32) objectForKeyedSubscript:*(void *)(a1 + 40)];
      [v10 setCarKeyRangingLimitExceeded:v9];
    }
    else
    {
      unsigned int v11 = [*(id *)(a1 + 48) isSubclassOfClass:objc_opt_class()];
      int v12 = (id)qword_1008ABDE0;
      int v10 = v12;
      if (v11)
      {
        if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
        {
          int v13 = *(unsigned __int8 *)(a1 + 56);
          uint64_t v14 = *(void *)(a1 + 40);
          BOOL v15 = [*(id *)(*(void *)(a1 + 32) + 32) objectForKeyedSubscript:v14];
          unsigned int v16 = [v15 acwgRangingLimitExceeded];
          unsigned int v17 = [*(id *)(*(void *)(a1 + 32) + 40) acwgRangingLimitExceeded];
          int v21 = 138413058;
          uint64_t v22 = v14;
          __int16 v23 = 1024;
          int v24 = v13;
          __int16 v25 = 1024;
          unsigned int v26 = v16;
          __int16 v27 = 1024;
          unsigned int v28 = v17;
          _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#configurator,Client %@ notified ACWG resource usage limit exceeded: %d. Previous from this client: %d. Previous aggregated: %d", (uint8_t *)&v21, 0x1Eu);
        }
        BOOL v18 = *(unsigned char *)(a1 + 56) != 0;
        int v10 = [*(id *)(*(void *)(a1 + 32) + 32) objectForKeyedSubscript:*(void *)(a1 + 40)];
        [v10 setAcwgRangingLimitExceeded:v18];
      }
      else if (os_log_type_enabled(v12, OS_LOG_TYPE_FAULT))
      {
        unsigned __int8 v19 = *(unsigned char *)(a1 + 56);
        uint64_t v20 = NSStringFromClass(*(Class *)(a1 + 48));
        sub_100427F4C(v19, v20, (uint8_t *)&v21, v10);
      }
    }

    [*(id *)(a1 + 32) _updateAggregatedClientInfo];
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_100427EE4();
  }
}

void sub_100286AC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100286BB0(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 24) objectForKey:*(void *)(a1 + 40)];

  if (v2)
  {
    uint64_t v3 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 40);
      id v5 = +[NIInternalUtils NISystemPassiveAccessIntentToString:*(unsigned int *)(a1 + 48)];
      uint64_t v6 = [*(id *)(*(void *)(a1 + 32) + 32) objectForKeyedSubscript:*(void *)(a1 + 40)];
      +[NIInternalUtils NISystemPassiveAccessIntentToString:](NIInternalUtils, "NISystemPassiveAccessIntentToString:", [v6 passiveAccessIntent]);
      id v7 = (id)objc_claimAutoreleasedReturnValue();
      unsigned int v8 = +[NIInternalUtils NISystemPassiveAccessIntentToString:](NIInternalUtils, "NISystemPassiveAccessIntentToString:", [*(id *)(*(void *)(a1 + 32) + 40) passiveAccessIntent]);
      int v11 = 138413058;
      uint64_t v12 = v4;
      __int16 v13 = 2112;
      id v14 = v5;
      __int16 v15 = 2112;
      id v16 = v7;
      __int16 v17 = 2112;
      BOOL v18 = v8;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#configurator,Client %@ notified passive access intent: %@. Previous from this client: %@. Previous aggregated: %@", (uint8_t *)&v11, 0x2Au);
    }
    uint64_t v9 = *(unsigned int *)(a1 + 48);
    int v10 = [*(id *)(*(void *)(a1 + 32) + 32) objectForKeyedSubscript:*(void *)(a1 + 40)];
    [v10 setPassiveAccessIntent:v9];

    [*(id *)(a1 + 32) _updateAggregatedClientInfo];
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_100427FB8();
  }
}

void sub_100286D90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100286ED0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100286EE0(uint64_t a1)
{
}

void sub_100286EE8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) _internalPrintableState];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_100287100(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_100287144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  id v4 = +[NSString stringWithFormat:@"    [%@]: %@", a2, a3];
  [v3 addObject:];
}

void sub_1002871B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  _Unwind_Resume(a1);
}

void sub_100287680(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v3 - 128), 8);
  _Unwind_Resume(a1);
}

id sub_1002876D0(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 40) consumeInfoForAggregation:];
}

void sub_1002876DC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8);
    int v9 = *(_DWORD *)(v8 + 24) + 1;
    *(_DWORD *)(v8 + 24) = v9;
    LODWORD(v8) = *(_DWORD *)(a1 + 40);
    v10[0] = 67109890;
    v10[1] = v9;
    __int16 v11 = 1024;
    int v12 = v8;
    __int16 v13 = 2112;
    id v14 = v5;
    __int16 v15 = 2112;
    id v16 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#configurator,Client %d of %d - %@: %@", (uint8_t *)v10, 0x22u);
  }
}

void sub_1002877DC(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 didUpdateResourceUsageLimitExceeded:[*(id *)(*(void *)(a1 + 32) + 40) carKeyRangingLimitExceeded] forSessionConfigurationType:objc_opt_class()];
}

void sub_10028784C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100287860(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 didUpdateResourceUsageLimitExceeded:objc_msgSend(*(id *)(*(void *)(a1 + 32) + 40), "acwgRangingLimitExceeded") forSessionConfigurationType:objc_opt_class()];
}

void sub_1002878D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002878E4(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 didUpdatePassiveAccessIntent:[*(id *)(*(void *)(a1 + 32) + 40) passiveAccessIntent]];
}

void sub_100287940(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100287A14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100287BF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_100287C20(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 64) copy];
  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      id v3 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
        sub_100428090(v3, v4, v5, v6, v7, v8, v9, v10);
      }
      break;
    case 1:
      [*(id *)(*(void *)(a1 + 32) + 64) setUwbPreciseDistanceAvailability:0];
      unint64_t v13 = 0;
      __int16 v11 = *(void **)(*(void *)(a1 + 32) + 64);
      goto LABEL_8;
    case 2:
      [*(id *)(*(void *)(a1 + 32) + 64) setUwbPreciseDistanceAvailability:0];
      __int16 v11 = *(void **)(*(void *)(a1 + 32) + 64);
      unint64_t v12 = (unint64_t)[v11 uwbExtendedDistanceAvailability];
LABEL_5:
      unint64_t v13 = v12 | 2;
      goto LABEL_8;
    case 3:
      switch(*(_DWORD *)(a1 + 44))
      {
        case 0:
          int v24 = qword_1008ABDE0;
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
            sub_100428020(v24, v25, v26, v27, v28, v29, v30, v31);
          }
          break;
        case 1:
        case 7:
          [*(id *)(*(void *)(a1 + 32) + 64) setUwbPreciseDistanceAvailability:((*(id *)(*(void *)(a1 + 32) + 64)) uwbPreciseDistanceAvailability) | 8];
          __int16 v11 = *(void **)(*(void *)(a1 + 32) + 64);
          unint64_t v13 = (unint64_t)[v11 uwbExtendedDistanceAvailability] | 8;
          goto LABEL_8;
        case 2:
          long long v32 = qword_1008ABDE0;
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
            sub_100428058(v32, v33, v34, v35, v36, v37, v38, v39);
          }
          break;
        case 3:
          [*(id *)(*(void *)(a1 + 32) + 64) setUwbPreciseDistanceAvailability:(*(id *)(*(void *)(a1 + 32) + 64) uwbPreciseDistanceAvailability) | 1];
          __int16 v11 = *(void **)(*(void *)(a1 + 32) + 64);
          unint64_t v13 = (unint64_t)[v11 uwbExtendedDistanceAvailability] | 1;
          goto LABEL_8;
        case 4:
          [*(id *)(*(void *)(a1 + 32) + 64) setUwbPreciseDistanceAvailability:((*(id *)(*(void *)(a1 + 32) + 64)) uwbPreciseDistanceAvailability) | 2];
          __int16 v11 = *(void **)(*(void *)(a1 + 32) + 64);
          unint64_t v12 = (unint64_t)[v11 uwbExtendedDistanceAvailability];
          goto LABEL_5;
        case 5:
        case 6:
          [*(id *)(*(void *)(a1 + 32) + 64) setUwbPreciseDistanceAvailability:16];
          __int16 v11 = *(void **)(*(void *)(a1 + 32) + 64);
          unint64_t v13 = 16;
          goto LABEL_8;
        default:
          goto LABEL_9;
      }
      break;
    case 4:
      [*(id *)(*(void *)(a1 + 32) + 64) setUwbPreciseDistanceAvailability:((*(id *)(*(void *)(a1 + 32) + 64)) uwbPreciseDistanceAvailability) | 4];
      __int16 v11 = *(void **)(*(void *)(a1 + 32) + 64);
      unint64_t v13 = (unint64_t)[v11 uwbExtendedDistanceAvailability] | 4;
LABEL_8:
      [v11 setUwbExtendedDistanceAvailability:v13];
      break;
    default:
      break;
  }
LABEL_9:
  id v14 = sub_100007D00();
  if (!sub_1003D2ECC((uint64_t)v14)) {
    [*(id *)(*(void *)(a1 + 32) + 64) setUwbExtendedDistanceAvailability:16];
  }
  if (([*(id *)(*(void *)(a1 + 32) + 64) isEqual:v2] & 1) == 0)
  {
    __int16 v15 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v16 = *(void *)(*(void *)(a1 + 32) + 64);
      *(_DWORD *)uint64_t buf = 138412546;
      *(void *)&uint8_t buf[4] = v16;
      __int16 v42 = 2112;
      id v43 = v2;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "#configurator,System state update. New: %@. Old: %@", buf, 0x16u);
    }
    DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
    CFNotificationCenterPostNotification(DarwinNotifyCenter, @"com.apple.nearbyinteraction.system.didupdatestate", 0, 0, 1u);
    BOOL v18 = *(void **)(a1 + 32);
    v40[0] = _NSConcreteStackBlock;
    v40[1] = 3221225472;
    v40[2] = sub_1002880FC;
    v40[3] = &unk_10085CD88;
    v40[4] = v18;
    [v18 _relayBlockToClients:v40];
    if (![*(id *)(*(void *)(a1 + 32) + 64) uwbPreciseDistanceAvailability]
      && [v2 uwbPreciseDistanceAvailability]
      && [*(id *)(*(void *)(a1 + 32) + 40) prewarmSecureElementChannel])
    {
      unsigned __int8 v19 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "#configurator,RE-warming UWB-SE secure channel...", buf, 2u);
      }
      uint64_t v20 = sub_1002F6464();
      int v21 = sub_1002F66C8((uint64_t)v20);
      uint64_t v22 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
      {
        sub_100333FC8(v21, buf);
        if (v44 >= 0) {
          __int16 v23 = buf;
        }
        else {
          __int16 v23 = *(unsigned char **)buf;
        }
        *(_DWORD *)std::string v45 = 136315138;
        std::string v46 = v23;
        _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "#configurator,RE-warming UWB-SE secure channel... DONE. Status: %s", v45, 0xCu);
        if (v44 < 0) {
          operator delete(*(void **)buf);
        }
      }
    }
  }
}

void sub_100288098(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002880FC(uint64_t a1, void *a2)
{
  id v4 = a2;
  id v3 = [*(id *)(*(void *)(a1 + 32) + 64) copy];
  [v4 didUpdateSystemState:v3];
}

void sub_100288160(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100288210(void *a1@<X1>, void *a2@<X8>)
{
  id v4 = operator new(0x48uLL);
  sub_100288284(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;

  sub_10001ABCC((uint64_t)a2, v4 + 4, (uint64_t)(v4 + 3));
}

void sub_100288270(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_100288284(void *a1, void *a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_100846460;
  sub_1002CA668(a1 + 3, *a2);
  return a1;
}

void sub_1002882D0(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1002882E4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C888, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C888))
  {
    sub_100004950(qword_10089C870, "PRRoseProviderNetworkListener");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C870, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C888);
  }
}

void sub_10028837C(_Unwind_Exception *a1)
{
}

void sub_100288394()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8A8))
  {
    sub_100004950(&qword_10089C890, "com.apple.nearbyd.accessory.download");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C890, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8A8);
  }
}

void sub_10028842C(_Unwind_Exception *a1)
{
}

void sub_100288444()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8C8))
  {
    sub_100004950(&qword_10089C8B0, "com.apple.nearbyd.accessory.files");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C8B0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8C8);
  }
}

void sub_1002884DC(_Unwind_Exception *a1)
{
}

void sub_1002884F4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8E8))
  {
    sub_100004950(qword_10089C8D0, "MA_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8D0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8E8);
  }
}

void sub_10028858C(_Unwind_Exception *a1)
{
}

void sub_1002885A4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C908, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C908))
  {
    sub_100004950(qword_10089C8F0, "MB_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8F0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C908);
  }
}

void sub_10028863C(_Unwind_Exception *a1)
{
}

void sub_100288654()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C928, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C928))
  {
    sub_100004950(qword_10089C910, "D");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C910, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C928);
  }
}

void sub_1002886EC(_Unwind_Exception *a1)
{
}

void sub_100288704()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C948, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C948))
  {
    sub_100004950(&qword_10089C930, "A");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C930, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C948);
  }
}

void sub_10028879C(_Unwind_Exception *a1)
{
}

void sub_1002887B4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C968, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C968))
  {
    sub_100004950(qword_10089C950, "FAS.bin");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C950, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C968);
  }
}

void sub_10028884C(_Unwind_Exception *a1)
{
}

void sub_100288864()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C988, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C988))
  {
    qword_10089C970 = 0;
    qword_10089C978 = 0;
    qword_10089C980 = 0;
    uint64_t v0 = operator new(0x30uLL);
    qword_10089C978 = (uint64_t)(v0 + 3);
    qword_10089C980 = (uint64_t)(v0 + 3);
    _OWORD *v0 = xmmword_1004BD738;
    v0[1] = unk_1004BD748;
    v0[2] = xmmword_1004BD758;
    qword_10089C970 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_100008CAC, &qword_10089C970, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C988);
  }
}

void sub_100288920(_Unwind_Exception *a1)
{
}

void sub_100288938()
{
  sub_10039D144();
  id v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  id v3 = std::string::append(&v38, ".bin");
  long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1008A6D30 = v3->__r_.__value_.__r.__words[2];
  xmmword_1008A6D20 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6D20, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  uint64_t v7 = std::string::append(&v38, ".bin");
  long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1008A6D48 = v7->__r_.__value_.__r.__words[2];
  xmmword_1008A6D38 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6D38, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  __int16 v11 = std::string::append(&v38, ".bin");
  long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1008A6D60 = v11->__r_.__value_.__r.__words[2];
  xmmword_1008A6D50 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6D50, (void *)&_mh_execute_header);
  sub_10039D144();
  unint64_t v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  __int16 v15 = std::string::append(&v38, ".bin");
  long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1008A6D78 = v15->__r_.__value_.__r.__words[2];
  xmmword_1008A6D68 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6D68, (void *)&_mh_execute_header);
  sub_10039D144();
  __int16 v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  unsigned __int8 v19 = std::string::append(&v38, ".bin");
  long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1008A6D90 = v19->__r_.__value_.__r.__words[2];
  xmmword_1008A6D80 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6D80, (void *)&_mh_execute_header);
  sub_10039D144();
  int v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  __int16 v23 = std::string::append(&v38, ".bin");
  long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1008A6DA8 = v23->__r_.__value_.__r.__words[2];
  xmmword_1008A6D98 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6D98, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  uint64_t v27 = std::string::append(&v38, ".bin");
  long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1008A6DC0 = v27->__r_.__value_.__r.__words[2];
  xmmword_1008A6DB0 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6DB0, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  uint64_t v31 = std::string::append(&v38, ".bin");
  long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1008A6DD8 = v31->__r_.__value_.__r.__words[2];
  xmmword_1008A6DC8 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6DC8, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  uint64_t v35 = std::string::append(&v38, ".bin");
  long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1008A6DF0 = v35->__r_.__value_.__r.__words[2];
  xmmword_1008A6DE0 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A6DE0, (void *)&_mh_execute_header);
}

void sub_100288F78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_100288FEC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_1004281E0();
  }
  *(unsigned char *)a2 = 0;
  *(unsigned char *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 24) = 0;
  *(unsigned char *)(a2 + 72) = 0;
  long long v4 = (unsigned char *)(a2 + 72);
  *(unsigned char *)(a2 + 80) = 0;
  *(unsigned char *)(a2 + 112) = 0;
  *(unsigned char *)(a2 + 160) = 0;
  *(_WORD *)(a2 + 168) = 0;
  *(void *)(a2 + 120) = 0;
  *(void *)(a2 + 128) = 0;
  *(unsigned char *)(a2 + 136) = 0;
  if (*(unsigned char *)(a1 + 16))
  {
    double v5 = *(double *)a1;
    long long v6 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
      sub_100428164(v6, v5);
    }
    if (!*(unsigned char *)(a1 + 16)) {
      sub_10000AE44();
    }
    int v7 = *(_DWORD *)(a1 + 8);
    if (v7 == 2)
    {
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
        sub_100428130();
      }
    }
    else if (v7 == 1)
    {
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
        sub_1004280FC();
      }
    }
    else
    {
      if (v7) {
        goto LABEL_17;
      }
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
        sub_1004280C8();
      }
    }
    *(double *)a2 = v5;
    *(_DWORD *)(a2 + 8) = v7;
    *(unsigned char *)(a2 + 16) = 1;
  }
LABEL_17:
  if (*(unsigned char *)(a1 + 72))
  {
    uint64_t v9 = *(void *)(a1 + 24);
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v11 = *(void *)(a1 + 48);
    uint64_t v10 = *(void *)(a1 + 56);
    uint64_t v12 = *(void *)(a1 + 64);
    int v13 = *(_DWORD *)(a1 + 40);
    if (v13 == 1)
    {
      long long v20 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG))
      {
        int v30 = 134219008;
        uint64_t v31 = v11;
        __int16 v32 = 2048;
        uint64_t v33 = v10;
        __int16 v34 = 2048;
        uint64_t v35 = v12;
        __int16 v36 = 2048;
        uint64_t v37 = v9;
        __int16 v38 = 2048;
        uint64_t v39 = v8;
        _os_log_debug_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "#convertAlgorithmFindeeDataToRoseFindeeData MeasuredDisplacement::INERTIAL, h1=%lf, h2=%lf, v=%lf, Enter=%lf, Applicability=%lf", (uint8_t *)&v30, 0x34u);
      }
      *(void *)(a2 + 24) = v9;
      *(void *)(a2 + 32) = v8;
      *(_DWORD *)(a2 + 40) = 1;
    }
    else
    {
      if (v13) {
        goto LABEL_32;
      }
      long long v14 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG))
      {
        int v30 = 134219008;
        uint64_t v31 = v11;
        __int16 v32 = 2048;
        uint64_t v33 = v10;
        __int16 v34 = 2048;
        uint64_t v35 = v12;
        __int16 v36 = 2048;
        uint64_t v37 = v9;
        __int16 v38 = 2048;
        uint64_t v39 = v8;
        _os_log_debug_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "#convertAlgorithmFindeeDataToRoseFindeeData MeasuredDisplacement::VIO, h1=%lf, h2=%lf, v=%lf, Enter=%lf, Applicability=%lf", (uint8_t *)&v30, 0x34u);
      }
      *(void *)(a2 + 24) = v9;
      *(void *)(a2 + 32) = v8;
      *(_DWORD *)(a2 + 40) = 0;
    }
    *(void *)(a2 + 48) = v11;
    *(void *)(a2 + 56) = v10;
    *(void *)(a2 + 64) = v12;
  }
  else
  {
    if (!*(unsigned char *)(a1 + 112)) {
      goto LABEL_32;
    }
    uint64_t v15 = *(void *)(a1 + 80);
    uint64_t v16 = *(void *)(a1 + 88);
    uint64_t v17 = *(void *)(a1 + 96);
    uint64_t v18 = *(void *)(a1 + 104);
    unsigned __int8 v19 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG))
    {
      int v30 = 134218752;
      uint64_t v31 = v17;
      __int16 v32 = 2048;
      uint64_t v33 = v18;
      __int16 v34 = 2048;
      uint64_t v35 = v15;
      __int16 v36 = 2048;
      uint64_t v37 = v16;
      _os_log_debug_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEBUG, "#convertAlgorithmFindeeDataToRoseFindeeData MeasuredVelocity h1=%lf, h2=%lf, Enter=%lf, Applicability=%lf", (uint8_t *)&v30, 0x2Au);
    }
    *(void *)(a2 + 80) = v15;
    *(void *)(a2 + 88) = v16;
    long long v4 = (unsigned char *)(a2 + 112);
    *(void *)(a2 + 96) = v17;
    *(void *)(a2 + 104) = v18;
  }
  *long long v4 = 1;
LABEL_32:
  if (*(unsigned char *)(a1 + 160))
  {
    uint64_t v21 = *(void *)(a1 + 136);
    uint64_t v22 = *(void *)(a1 + 144);
    int v23 = *(_DWORD *)(a1 + 152);
    long long v24 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEBUG))
    {
      if (!*(unsigned char *)(a1 + 160)) {
        sub_10000AE44();
      }
      uint64_t v27 = *(void *)(a1 + 136);
      uint64_t v28 = *(void *)(a1 + 144);
      int v29 = *(_DWORD *)(a1 + 152);
      int v30 = 134218496;
      uint64_t v31 = v27;
      __int16 v32 = 2048;
      uint64_t v33 = v28;
      __int16 v34 = 1024;
      LODWORD(v35) = v29;
      _os_log_debug_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEBUG, "#convertAlgorithmFindeeDataToRoseFindeeData LocationData northerly=%lf, easterly=%lf, unc=%u", (uint8_t *)&v30, 0x1Cu);
    }

    *(void *)(a2 + 136) = v21;
    *(void *)(a2 + 144) = v22;
    *(_DWORD *)(a2 + 152) = v23;
    *(unsigned char *)(a2 + 160) = 1;
  }
  if (*(unsigned char *)(a1 + 169)) {
    BOOL v25 = *(unsigned char *)(a1 + 168) == 0;
  }
  else {
    BOOL v25 = 1;
  }
  __int16 v26 = !v25;
  *(_WORD *)(a2 + 168) = v26 | 0x100;
}

void sub_1002893FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100289414(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100428378();
  }
  *(unsigned char *)a2 = 0;
  *(unsigned char *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 24) = 0;
  *(unsigned char *)(a2 + 72) = 0;
  long long v4 = (unsigned char *)(a2 + 72);
  *(unsigned char *)(a2 + 80) = 0;
  *(unsigned char *)(a2 + 112) = 0;
  *(void *)(a2 + 120) = 0;
  *(unsigned char *)(a2 + 160) = 0;
  *(_WORD *)(a2 + 168) = 0;
  *(void *)(a2 + 128) = 0;
  *(unsigned char *)(a2 + 136) = 0;
  if (*(unsigned char *)(a1 + 128))
  {
    double v5 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
    {
      if (!*(unsigned char *)(a1 + 128)) {
        sub_10000AE44();
      }
      sub_10042832C((uint64_t *)(a1 + 120), buf, v5);
    }
  }
  if (*(unsigned char *)(a1 + 16))
  {
    double v6 = *(double *)a1;
    int v7 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
      sub_1004282B0(v7, v6);
    }
    if (!*(unsigned char *)(a1 + 16)) {
      sub_10000AE44();
    }
    int v8 = *(_DWORD *)(a1 + 8);
    if (v8 == 2)
    {
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
        sub_10042827C();
      }
    }
    else if (v8 == 1)
    {
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
        sub_100428248();
      }
    }
    else
    {
      if (v8) {
        goto LABEL_22;
      }
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
        sub_100428214();
      }
    }
    *(double *)a2 = v6;
    *(_DWORD *)(a2 + 8) = v8;
    *(unsigned char *)(a2 + 16) = 1;
  }
LABEL_22:
  if (*(unsigned char *)(a1 + 72))
  {
    uint64_t v10 = *(void *)(a1 + 24);
    uint64_t v9 = *(void *)(a1 + 32);
    uint64_t v12 = *(void *)(a1 + 48);
    uint64_t v11 = *(void *)(a1 + 56);
    uint64_t v13 = *(void *)(a1 + 64);
    int v14 = *(_DWORD *)(a1 + 40);
    if (v14 == 1)
    {
      uint64_t v21 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG))
      {
        int v28 = 134219008;
        uint64_t v29 = v12;
        __int16 v30 = 2048;
        uint64_t v31 = v11;
        __int16 v32 = 2048;
        uint64_t v33 = v13;
        __int16 v34 = 2048;
        uint64_t v35 = v10;
        __int16 v36 = 2048;
        uint64_t v37 = v9;
        _os_log_debug_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEBUG, "#convertToAlgorithmFindeeData MeasuredDisplacement::INERTIAL, h1=%lf, h2=%lf, v=%lf, Enter=%lf, Applicability=%lf", (uint8_t *)&v28, 0x34u);
      }
      *(void *)(a2 + 24) = v10;
      *(void *)(a2 + 32) = v9;
      *(_DWORD *)(a2 + 40) = 1;
    }
    else
    {
      if (v14) {
        goto LABEL_37;
      }
      uint64_t v15 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG))
      {
        int v28 = 134219008;
        uint64_t v29 = v12;
        __int16 v30 = 2048;
        uint64_t v31 = v11;
        __int16 v32 = 2048;
        uint64_t v33 = v13;
        __int16 v34 = 2048;
        uint64_t v35 = v10;
        __int16 v36 = 2048;
        uint64_t v37 = v9;
        _os_log_debug_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "#convertToAlgorithmFindeeData MeasuredDisplacement::VIO, h1=%lf, h2=%lf, v=%lf, Enter=%lf, Applicability=%lf", (uint8_t *)&v28, 0x34u);
      }
      *(void *)(a2 + 24) = v10;
      *(void *)(a2 + 32) = v9;
      *(_DWORD *)(a2 + 40) = 0;
    }
    *(void *)(a2 + 48) = v12;
    *(void *)(a2 + 56) = v11;
    *(void *)(a2 + 64) = v13;
  }
  else
  {
    if (!*(unsigned char *)(a1 + 112)) {
      goto LABEL_37;
    }
    uint64_t v16 = *(void *)(a1 + 80);
    uint64_t v17 = *(void *)(a1 + 88);
    uint64_t v18 = *(void *)(a1 + 96);
    uint64_t v19 = *(void *)(a1 + 104);
    long long v20 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG))
    {
      int v28 = 134218752;
      uint64_t v29 = v18;
      __int16 v30 = 2048;
      uint64_t v31 = v19;
      __int16 v32 = 2048;
      uint64_t v33 = v16;
      __int16 v34 = 2048;
      uint64_t v35 = v17;
      _os_log_debug_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "#convertToAlgorithmFindeeData MeasuredVelocity h1=%lf, h2=%lf, Enter=%lf, Applicability=%lf", (uint8_t *)&v28, 0x2Au);
    }
    *(void *)(a2 + 80) = v16;
    *(void *)(a2 + 88) = v17;
    long long v4 = (unsigned char *)(a2 + 112);
    *(void *)(a2 + 96) = v18;
    *(void *)(a2 + 104) = v19;
  }
  *long long v4 = 1;
LABEL_37:
  *(void *)(a2 + 120) = *(void *)(a1 + 120);
  *(unsigned char *)(a2 + 128) = *(unsigned char *)(a1 + 128);
  if (*(unsigned char *)(a1 + 160))
  {
    uint64_t v22 = *(void *)(a1 + 136);
    uint64_t v23 = *(void *)(a1 + 144);
    int v24 = *(_DWORD *)(a1 + 152);
    BOOL v25 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG))
    {
      int v28 = 134218496;
      uint64_t v29 = v22;
      __int16 v30 = 2048;
      uint64_t v31 = v23;
      __int16 v32 = 1024;
      LODWORD(v33) = v24;
      _os_log_debug_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEBUG, "#convertToAlgorithmFindeeData LocationData northerly=%lf, easterly=%lf, unc=%u", (uint8_t *)&v28, 0x1Cu);
    }
    *(void *)(a2 + 136) = v22;
    *(void *)(a2 + 144) = v23;
    *(_DWORD *)(a2 + 152) = v24;
    *(unsigned char *)(a2 + 160) = 1;
  }
  if (*(unsigned char *)(a1 + 169)) {
    BOOL v26 = *(unsigned char *)(a1 + 168) == 0;
  }
  else {
    BOOL v26 = 1;
  }
  __int16 v27 = !v26;
  *(_WORD *)(a2 + 168) = v27 | 0x100;
}

void sub_10028986C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

char *sub_100289884(char *__dst, long long *a2, long long *a3, double a4, double a5, double a6)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_100002DE4(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v11 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)long long __dst = v11;
  }
  uint64_t v12 = __dst + 24;
  if (*((char *)a3 + 23) < 0)
  {
    sub_100002DE4(v12, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v13 = *a3;
    *((void *)__dst + 5) = *((void *)a3 + 2);
    *(_OWORD *)uint64_t v12 = v13;
  }
  *((double *)__dst + 6) = a4;
  *((double *)__dst + 7) = a5;
  *((double *)__dst + 8) = a6;
  return __dst;
}

void sub_100289924(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100289940(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2 = a2[23];
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = a2[23];
  }
  else {
    uint64_t v3 = *((void *)a2 + 1);
  }
  uint64_t v4 = *(unsigned __int8 *)(a1 + 47);
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *(void *)(a1 + 32);
  }
  if (v3 != v4) {
    return 0;
  }
  int v8 = *(unsigned __int8 **)(a1 + 24);
  double v6 = (unsigned __int8 *)(a1 + 24);
  int v7 = v8;
  if (v5 >= 0) {
    uint64_t v9 = v6;
  }
  else {
    uint64_t v9 = v7;
  }
  if ((v2 & 0x80) != 0) {
    return memcmp(*(const void **)a2, v9, *((void *)a2 + 1)) == 0;
  }
  if (!a2[23]) {
    return 1;
  }
  uint64_t v10 = v2 - 1;
  do
  {
    int v12 = *a2++;
    int v11 = v12;
    int v14 = *v9++;
    int v13 = v14;
    BOOL v16 = v10-- != 0;
    uint64_t result = v11 == v13;
  }
  while (v11 == v13 && v16);
  return result;
}

uint64_t sub_1002899E4(uint64_t a1, char a2)
{
  uint64_t v2 = *(double **)(a1 + 40);
  uint64_t v3 = *(double **)(a1 + 48);
  if (v2 == v3) {
    return 4;
  }
  char v6 = 0;
  do
  {
    int v7 = sub_100289A84(v2, a2, *(double *)(a1 + 536), *(double *)(a1 + 544), *(double *)(a1 + 552));
    if (v7 == 2) {
      break;
    }
    v6 |= v7 == 3;
    v2 += 9;
  }
  while (v2 != v3);
  if (v6) {
    uint64_t v8 = 3;
  }
  else {
    uint64_t v8 = 4;
  }
  if (v7 == 2) {
    return 2;
  }
  return v8;
}

uint64_t sub_100289A84(double *a1, char a2, double a3, double a4, double a5)
{
  id v10 = [objc_alloc((Class)CLLocation) initWithLatitude:a1[6] longitude:a1[7]];
  id v11 = [objc_alloc((Class)CLLocation) initWithLatitude:a3 longitude:a4];
  [v11 distanceFromLocation:v10];
  double v13 = v12;
  double v14 = a1[8] + a5;
  if (v13 >= v14 + 2000.0) {
    unsigned int v15 = 4;
  }
  else {
    unsigned int v15 = 3;
  }
  if (v13 < v14 && a5 < 40000.0) {
    uint64_t v17 = 2;
  }
  else {
    uint64_t v17 = v15;
  }
  if (a2)
  {
    uint64_t v18 = (id)qword_1008A6E08;
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEBUG))
    {
      sub_100004950(__p, off_10085CF50[v17 - 2]);
      if (v25 >= 0) {
        long long v20 = __p;
      }
      else {
        long long v20 = (void **)__p[0];
      }
      uint64_t v21 = *((void *)a1 + 6);
      uint64_t v22 = *((void *)a1 + 7);
      uint64_t v23 = *((void *)a1 + 8);
      *(_DWORD *)uint64_t buf = 136382467;
      __int16 v27 = v20;
      __int16 v28 = 2049;
      uint64_t v29 = v21;
      __int16 v30 = 2049;
      uint64_t v31 = v22;
      __int16 v32 = 2049;
      uint64_t v33 = v23;
      __int16 v34 = 2049;
      double v35 = a3;
      __int16 v36 = 2049;
      double v37 = a4;
      __int16 v38 = 2049;
      double v39 = a5;
      __int16 v40 = 2049;
      double v41 = v13;
      _os_log_debug_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEBUG, "regulatory,geof,getLocationStatus,status,%{private}s,site,lat,%{private}.6f,lon,%{private}.6f,radius,%{private}.1f,loc,lat,%{private}.6f,lon,%{private}.6f,unc,%{private}.1f,distance,%{private}.2f", buf, 0x52u);
      if (v25 < 0) {
        operator delete(__p[0]);
      }
    }
  }
  return v17;
}

void sub_100289C68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100289C98(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v6 = a2;
  *(_OWORD *)a1 = xmmword_1004BD860;
  *(_OWORD *)(a1 + 16) = xmmword_1004BD870;
  int v7 = *((_DWORD *)sub_100007D00() + 144);
  *(void *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 32) = v7;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  sub_100027124((uint64_t)v8, a4);
  sub_1001A1E10(a1 + 64, v6);
}

void sub_10028A4E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1001F8580((uint64_t)&a9);
  if (SLOBYTE(STACK[0x29F]) < 0) {
    operator delete((void *)STACK[0x288]);
  }
  if (SLOBYTE(STACK[0x2B7]) < 0) {
    operator delete((void *)STACK[0x2A0]);
  }
  if (*(char *)(v10 + 695) < 0) {
    operator delete(*(void **)(v10 + 672));
  }
  if (*(char *)(v10 + 671) < 0) {
    operator delete(*(void **)(v10 + 648));
  }
  if (*(char *)(v10 + 647) < 0) {
    operator delete(*(void **)(v10 + 624));
  }
  if (*(char *)(v10 + 623) < 0) {
    operator delete(*(void **)(v10 + 600));
  }
  if (*(char *)(v10 + 599) < 0) {
    operator delete(*(void **)(v10 + 576));
  }
  if (*(char *)(v10 + 535) < 0) {
    operator delete(*(void **)(v10 + 512));
  }
  sub_10000AF74(v14);
  sub_10000AF74(v13);

  sub_1001FC17C(v12);
  sub_10028AC04(v11);
  STACK[0x2A0] = v15;
  sub_1001FC200((void ***)&STACK[0x2A0]);

  _Unwind_Resume(a1);
}

uint64_t sub_10028A748(uint64_t a1, int a2)
{
  uint64_t result = 1;
  switch(a2)
  {
    case 0:
      sub_1000220A0(a1 + 448, 0);
      uint64_t result = 1;
      break;
    case 5:
      uint64_t result = 2;
      break;
    case 7:
      uint64_t result = sub_10028B210(a1);
      break;
    case 8:
      uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10028A7E0(uint64_t a1, int a2)
{
  uint64_t result = 2;
  switch(a2)
  {
    case 0:
      sub_1001A2178(a1 + 64);
      goto LABEL_33;
    case 1:
      sub_1001A1F98(a1 + 64);
      goto LABEL_33;
    case 2:
      double v4 = sub_100006C38();
      int v5 = +[NSUserDefaults standardUserDefaults];
      id v6 = [v5 objectForKey:@"GeofenceLoggingIntervalOverride"];

      double v7 = 3600.0;
      if (v6)
      {
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          [v6 doubleValue];
          double v7 = v8;
        }
      }
      double v9 = v4 - *(double *)(a1 + 24);
      if (v9 >= v7)
      {
        *(double *)(a1 + 24) = v4;
        uint64_t v10 = qword_1008A6E08;
        if (os_log_type_enabled((os_log_t)qword_1008A6E08, OS_LOG_TYPE_DEBUG)) {
          sub_1004283AC((void *)a1, v10, v7);
        }
      }
      switch(sub_1002899E4(a1, v9 >= v7))
      {
        case 1u:
          if (v9 >= v7)
          {
            uint64_t v11 = qword_1008A6E08;
            if (os_log_type_enabled((os_log_t)qword_1008A6E08, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)uint64_t buf = 0;
              _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "regulatory,geof,Cannot determine region status", buf, 2u);
            }
          }
          goto LABEL_32;
        case 2u:
          if (v9 >= v7)
          {
            double v14 = qword_1008A6E08;
            if (os_log_type_enabled((os_log_t)qword_1008A6E08, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)uint64_t v22 = 0;
              _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "regulatory,geof,calling setHysteresisEvent DelayedUwbOff from IN", v22, 2u);
            }
          }
          unint64_t v15 = (uint64_t **)(a1 + 280);
          sub_10028B4B0(a1 + 280, 4, *(double *)(a1 + 8));
          int v16 = 3;
          goto LABEL_30;
        case 3u:
          if (v9 >= v7)
          {
            uint64_t v17 = qword_1008A6E08;
            if (os_log_type_enabled((os_log_t)qword_1008A6E08, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)uint64_t v21 = 0;
              _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "regulatory,geof,calling setHysteresisEvent DelayedUwbOn from NEAR", v21, 2u);
            }
          }
          unint64_t v15 = (uint64_t **)(a1 + 280);
          sub_10028B4B0(a1 + 280, 3, *(double *)a1);
          int v16 = 4;
LABEL_30:
          sub_1001A1EE8(v15, v16);
          int v18 = 1;
          goto LABEL_31;
        case 4u:
          if (v9 >= v7)
          {
            uint64_t v19 = qword_1008A6E08;
            if (os_log_type_enabled((os_log_t)qword_1008A6E08, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)long long v20 = 0;
              _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "geof,calling setHysteresisEvent DelayedUwbOn from FAR", v20, 2u);
            }
          }
          sub_10028B4B0(a1 + 280, 3, *(double *)a1);
          sub_1001A1EE8((uint64_t **)(a1 + 280), 4);
          if (sub_100005424(*(_DWORD *)(a1 + 32)))
          {
            sub_1001A1F98(a1 + 64);
          }
          else if (sub_10039CF54(*(_DWORD *)(a1 + 32)))
          {
            int v18 = 4;
LABEL_31:
            sub_1001A2184(a1 + 64, v18);
          }
LABEL_32:

          break;
        default:
          goto LABEL_32;
      }
      goto LABEL_33;
    case 3:
      uint64_t v12 = a1 + 448;
      char v13 = 1;
      goto LABEL_21;
    case 4:
      uint64_t v12 = a1 + 448;
      char v13 = 0;
LABEL_21:
      sub_1000220A0(v12, v13);
LABEL_33:
      uint64_t result = 2;
      break;
    case 6:
      uint64_t result = 1;
      break;
    case 7:
      if (sub_10028B210(a1)) {
        uint64_t result = 2;
      }
      else {
        uint64_t result = 0;
      }
      break;
    case 8:
      uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void sub_10028AB50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10028ABA4(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = a1[7];
  uint64_t v3 = a1 + 7;
  unint64_t v5 = *(v3 - 1);
  if (v5 >= v4)
  {
    uint64_t result = sub_10028B810(a1 + 5, a2);
  }
  else
  {
    sub_10028B938((int)v3, (__n128 *)*(v3 - 1), a2);
    uint64_t result = v5 + 72;
    a1[6] = v5 + 72;
  }
  a1[6] = result;
  return result;
}

void sub_10028ABFC(_Unwind_Exception *a1)
{
  *(void *)(v1 + 48) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_10028AC04(uint64_t a1)
{
  sub_1001A2448(a1 + 24);
  return a1;
}

void sub_10028AC44(uint64_t a1)
{
  sub_1001A1E14((uint64_t *)(a1 + 64));
  double v73 = 0.0;
  BOOL v1 = sub_1003CEC04((uint64_t)"GeofenceUwbOnDelay", &v73);
  if (v73 != 0.0 && v1)
  {
    *(double *)a1 = v73;
    uint64_t v3 = qword_1008A6E08;
    if (os_log_type_enabled((os_log_t)qword_1008A6E08, OS_LOG_TYPE_DEBUG)) {
      sub_100428580(a1, v3, v4, v5, v6, v7, v8, v9);
    }
  }
  double v72 = 0.0;
  BOOL v10 = sub_1003CEC04((uint64_t)"GeofenceUwbOffDelay", &v72);
  if (v72 != 0.0 && v10)
  {
    *(double *)(a1 + 8) = v72;
    uint64_t v12 = qword_1008A6E08;
    if (os_log_type_enabled((os_log_t)qword_1008A6E08, OS_LOG_TYPE_DEBUG)) {
      sub_100428510(a1 + 8, v12, v13, v14, v15, v16, v17, v18);
    }
  }
  double v71 = 0.0;
  BOOL v19 = sub_1003CEC04((uint64_t)"GeofenceLocationAgeThreshold", &v71);
  if (v71 != 0.0 && v19)
  {
    *(double *)(a1 + 16) = v71;
    uint64_t v21 = qword_1008A6E08;
    if (os_log_type_enabled((os_log_t)qword_1008A6E08, OS_LOG_TYPE_DEBUG)) {
      sub_1004284A0(a1 + 16, v21, v22, v23, v24, v25, v26, v27);
    }
  }
  double v57 = +[NSUserDefaults standardUserDefaults];
  BOOL v55 = [v57 stringForKey:@"GeofencePlistPath"];
  char v56 = +[NSArray arrayWithContentsOfFile:](NSArray, "arrayWithContentsOfFile:");
  if (v56)
  {
    uint64_t v29 = *(void *)(a1 + 40);
    for (uint64_t i = *(void *)(a1 + 48); i != v29; sub_1001FC298(a1 + 56, i))
      i -= 72;
    *(void *)(a1 + 48) = v29;
    __int16 v30 = qword_1008A6E08;
    if (os_log_type_enabled((os_log_t)qword_1008A6E08, OS_LOG_TYPE_DEBUG)) {
      sub_10042845C(v30);
    }
    long long v69 = 0u;
    long long v70 = 0u;
    long long v67 = 0u;
    long long v68 = 0u;
    id obj = v56;
    id v31 = [obj countByEnumeratingWithState:&v67 objects:v83 count:16];
    if (v31)
    {
      uint64_t v60 = *(void *)v68;
      do
      {
        for (uint64_t j = 0; j != v31; uint64_t j = (char *)j + 1)
        {
          if (*(void *)v68 != v60) {
            objc_enumerationMutation(obj);
          }
          uint64_t v33 = *(void **)(*((void *)&v67 + 1) + 8 * (void)j);
          __int16 v34 = [v33 objectForKey:@"Name"];
          double v35 = [v33 objectForKey:@"IsoCountry"];
          __int16 v36 = [v33 objectForKey:@"Latitude"];
          double v37 = [v33 objectForKey:@"Longitude"];
          uint64_t v38 = [v33 objectForKey:@"Radius"];
          double v39 = (void *)v38;
          if (v34) {
            BOOL v40 = v35 == 0;
          }
          else {
            BOOL v40 = 1;
          }
          if (!v40 && v36 != 0 && v37 != 0 && v38 != 0)
          {
            [v36 doubleValue];
            double v45 = v44;
            [v37 doubleValue];
            double v47 = v46;
            [v39 doubleValue];
            double v49 = v48;
            id v50 = v34;
            sub_100004950(buf, (char *)[v50 UTF8String]);
            id v51 = v35;
            sub_100004950(v61, (char *)[v51 UTF8String]);
            sub_100289884((char *)__dst, (long long *)buf, (long long *)v61, v45, v47, v49);
            sub_10028ABA4((uint64_t *)a1, (uint64_t)__dst);
            if (v66 < 0) {
              operator delete(__p);
            }
            if (v64 < 0) {
              operator delete(__dst[0]);
            }
            if (v62 < 0) {
              operator delete(v61[0]);
            }
            if (SHIBYTE(v77) < 0) {
              operator delete(*(void **)buf);
            }
            uint64_t v52 = (id)qword_1008A6E08;
            if (os_log_type_enabled(v52, OS_LOG_TYPE_DEBUG))
            {
              id v53 = [v50 UTF8String];
              id v54 = [v51 UTF8String];
              *(_DWORD *)uint64_t buf = 136381699;
              *(void *)&uint8_t buf[4] = v53;
              __int16 v75 = 2080;
              id v76 = v54;
              __int16 v77 = 2049;
              double v78 = v45;
              __int16 v79 = 2049;
              double v80 = v47;
              __int16 v81 = 2049;
              double v82 = v49;
              _os_log_debug_impl((void *)&_mh_execute_header, v52, OS_LOG_TYPE_DEBUG, "regulatory,geof,default,site,name,%{private}s,iso,%s,lat,%{private}.6f,lon,%{private}.6f,radius,%{private}.2f", buf, 0x34u);
            }
          }
        }
        id v31 = [obj countByEnumeratingWithState:&v67 objects:v83 count:16];
      }
      while (v31);
    }
  }
}

void sub_10028B12C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10028B210(uint64_t a1)
{
  if (sub_100005424(*(_DWORD *)(a1 + 32)))
  {
    uint64_t v2 = *(void *)(a1 + 40);
    uint64_t v3 = *(void *)(a1 + 48);
    if (v2 != v3)
    {
      uint64_t v4 = *(void *)(a1 + 40);
      do
      {
        int v5 = sub_100289940(v4, (unsigned __int8 *)(a1 + 576));
        if (v5) {
          break;
        }
        v4 += 72;
      }
      while (v4 != v3);
      uint64_t v6 = (unsigned __int8 *)(a1 + 600);
      do
      {
        unsigned int v7 = sub_100289940(v2, v6);
        if (v7) {
          break;
        }
        v2 += 72;
      }
      while (v2 != v3);
      return v5 | v7;
    }
    return 0;
  }
  if (!sub_10039CF88(*(_DWORD *)(a1 + 32)))
  {
    if (!sub_10039CFF8(*(_DWORD *)(a1 + 32)))
    {
      uint64_t v18 = *(void *)(a1 + 40);
      uint64_t v19 = *(void *)(a1 + 48);
      if (v18 != v19)
      {
        uint64_t v20 = *(void *)(a1 + 40);
        do
        {
          int v5 = sub_100289940(v20, (unsigned __int8 *)(a1 + 624));
          if (v5) {
            break;
          }
          v20 += 72;
        }
        while (v20 != v19);
        uint64_t v21 = (unsigned __int8 *)(a1 + 648);
        do
        {
          unsigned int v7 = sub_100289940(v18, v21);
          if (v7) {
            break;
          }
          v18 += 72;
        }
        while (v18 != v19);
        return v5 | v7;
      }
      return 0;
    }
    if (*(char *)(a1 + 599) < 0) {
      uint64_t v17 = *(void *)(a1 + 584);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(a1 + 599);
    }
    uint64_t v23 = *(void *)(a1 + 40);
    uint64_t v24 = *(void *)(a1 + 48);
    if (v17)
    {
      if (v23 == v24)
      {
        uint64_t v8 = 0;
      }
      else
      {
        uint64_t v25 = (unsigned __int8 *)(a1 + 576);
        do
        {
          uint64_t v8 = sub_100289940(v23, v25);
          if (v8) {
            break;
          }
          v23 += 72;
        }
        while (v23 != v24);
      }
      uint64_t v27 = qword_1008A6E08;
      if (!os_log_type_enabled((os_log_t)qword_1008A6E08, OS_LOG_TYPE_DEFAULT)) {
        return v8;
      }
      __int16 v31 = 0;
      __int16 v28 = "regulatory geof,using fSlot1Iso";
      uint64_t v29 = (uint8_t *)&v31;
    }
    else
    {
      if (v23 == v24)
      {
        uint64_t v8 = 0;
      }
      else
      {
        uint64_t v26 = (unsigned __int8 *)(a1 + 672);
        do
        {
          uint64_t v8 = sub_100289940(v23, v26);
          if (v8) {
            break;
          }
          v23 += 72;
        }
        while (v23 != v24);
      }
      uint64_t v27 = qword_1008A6E08;
      if (!os_log_type_enabled((os_log_t)qword_1008A6E08, OS_LOG_TYPE_DEFAULT)) {
        return v8;
      }
      __int16 v30 = 0;
      __int16 v28 = "regulatory geof,using fWifiIso";
      uint64_t v29 = (uint8_t *)&v30;
    }
    _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, v28, v29, 2u);
    return v8;
  }
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  if (v9 == v10) {
    return 0;
  }
  uint64_t v11 = *(void *)(a1 + 40);
  do
  {
    int v12 = sub_100289940(v11, (unsigned __int8 *)(a1 + 576));
    if (v12) {
      break;
    }
    v11 += 72;
  }
  while (v11 != v10);
  uint64_t v13 = v9;
  do
  {
    int v14 = sub_100289940(v13, (unsigned __int8 *)(a1 + 600));
    if (v14) {
      break;
    }
    v13 += 72;
  }
  while (v13 != v10);
  uint64_t v15 = (unsigned __int8 *)(a1 + 624);
  do
  {
    unsigned int v16 = sub_100289940(v9, v15);
    if (v16) {
      break;
    }
    v9 += 72;
  }
  while (v9 != v10);
  return v12 | v14 | v16;
}

void sub_10028B4B0(uint64_t a1, int a2, double a3)
{
  int v12 = a2;
  uint64_t v5 = a1 + 88;
  uint64_t v6 = *(void *)(a1 + 88);
  unsigned int v7 = (uint64_t **)(a1 + 80);
  if (!v6) {
    goto LABEL_11;
  }
  uint64_t v8 = v5;
  do
  {
    int v9 = *(_DWORD *)(v6 + 28);
    BOOL v10 = v9 < a2;
    if (v9 >= a2) {
      uint64_t v11 = (uint64_t *)v6;
    }
    else {
      uint64_t v11 = (uint64_t *)(v6 + 8);
    }
    if (!v10) {
      uint64_t v8 = v6;
    }
    uint64_t v6 = *v11;
  }
  while (*v11);
  if (v8 == v5 || *(_DWORD *)(v8 + 28) > a2)
  {
LABEL_11:
    uint64_t v13 = &v12;
    *((unsigned char *)sub_1001A2910(v7, &v12, (uint64_t)&unk_1004BC2F8, &v13) + 32) = 0;
LABEL_12:
    sub_10028BEC8(a1, v12, a3);
    return;
  }
  uint64_t v13 = &v12;
  if (!*((unsigned char *)sub_1001A2910(v7, &v12, (uint64_t)&unk_1004BC2F8, &v13) + 32)) {
    goto LABEL_12;
  }
}

uint64_t sub_10028B58C(uint64_t a1, int a2)
{
  uint64_t v4 = qword_1008A6E08;
  if (os_log_type_enabled((os_log_t)qword_1008A6E08, OS_LOG_TYPE_DEBUG)) {
    sub_1004285F0(a2, v4);
  }
  *(unsigned char *)(a1 + 440) = a2;
  if (a2) {
    uint64_t v5 = 5;
  }
  else {
    uint64_t v5 = 6;
  }
  return sub_10000714C(a1 + 280, v5);
}

void sub_10028B5F8(uint64_t a1, int a2, const std::string *a3)
{
  if (os_log_type_enabled((os_log_t)qword_1008A6E08, OS_LOG_TYPE_DEBUG)) {
    sub_10042866C();
  }
  switch(a2)
  {
    case 0:
      if (sub_100005424(*(_DWORD *)(a1 + 32))
        || (sub_10039CF88(*(_DWORD *)(a1 + 32)) & 1) != 0
        || sub_10039CFF8(*(_DWORD *)(a1 + 32)))
      {
        uint64_t v6 = (std::string *)(a1 + 576);
        goto LABEL_16;
      }
      break;
    case 1:
      if (sub_100005424(*(_DWORD *)(a1 + 32)))
      {
        uint64_t v6 = (std::string *)(a1 + 600);
        goto LABEL_16;
      }
      break;
    case 2:
      if (sub_10039CF54(*(_DWORD *)(a1 + 32)))
      {
        uint64_t v6 = (std::string *)(a1 + 624);
        goto LABEL_16;
      }
      break;
    case 3:
      if (sub_10039CF54(*(_DWORD *)(a1 + 32)))
      {
        uint64_t v6 = (std::string *)(a1 + 648);
        goto LABEL_16;
      }
      break;
    case 4:
      if (sub_10039CFF8(*(_DWORD *)(a1 + 32)))
      {
        uint64_t v6 = (std::string *)(a1 + 672);
LABEL_16:
        std::string::operator=(v6, a3);
      }
      break;
    default:
      break;
  }
  if (*(char *)(a1 + 599) < 0)
  {
    if (*(void *)(a1 + 584)) {
      goto LABEL_37;
    }
  }
  else if (*(unsigned char *)(a1 + 599))
  {
    goto LABEL_37;
  }
  if (*(char *)(a1 + 623) < 0)
  {
    if (*(void *)(a1 + 608)) {
      goto LABEL_37;
    }
  }
  else if (*(unsigned char *)(a1 + 623))
  {
    goto LABEL_37;
  }
  if (*(char *)(a1 + 647) < 0)
  {
    if (*(void *)(a1 + 632)) {
      goto LABEL_37;
    }
  }
  else if (*(unsigned char *)(a1 + 647))
  {
    goto LABEL_37;
  }
  if (*(char *)(a1 + 671) < 0)
  {
    if (!*(void *)(a1 + 656)) {
      goto LABEL_33;
    }
LABEL_37:
    sub_10000714C(a1 + 280, 7);
    return;
  }
  if (*(unsigned char *)(a1 + 671)) {
    goto LABEL_37;
  }
LABEL_33:
  if (*(char *)(a1 + 695) < 0) {
    uint64_t v7 = *(void *)(a1 + 680);
  }
  else {
    uint64_t v7 = *(unsigned __int8 *)(a1 + 695);
  }
  if (v7) {
    goto LABEL_37;
  }
}

void sub_10028B7A8(uint64_t a1, int a2)
{
  uint64_t v4 = qword_1008A6E08;
  if (os_log_type_enabled((os_log_t)qword_1008A6E08, OS_LOG_TYPE_DEBUG)) {
    sub_1004286F4(a2, v4);
  }
  if (a2 == 1) {
    sub_10000714C(a1 + 280, 8);
  }
}

uint64_t sub_10028B810(uint64_t *a1, uint64_t a2)
{
  unint64_t v3 = 0x8E38E38E38E38E39 * ((a1[1] - *a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0x38E38E38E38E38ELL) {
    sub_1000267C4();
  }
  if (0x1C71C71C71C71C72 * ((a1[2] - *a1) >> 3) > v4) {
    unint64_t v4 = 0x1C71C71C71C71C72 * ((a1[2] - *a1) >> 3);
  }
  if (0x8E38E38E38E38E39 * ((a1[2] - *a1) >> 3) >= 0x1C71C71C71C71C7) {
    unint64_t v6 = 0x38E38E38E38E38ELL;
  }
  else {
    unint64_t v6 = v4;
  }
  int v14 = a1 + 2;
  if (v6) {
    uint64_t v7 = (char *)sub_10028BA54((uint64_t)(a1 + 2), v6);
  }
  else {
    uint64_t v7 = 0;
  }
  BOOL v10 = v7;
  uint64_t v11 = (__n128 *)&v7[72 * v3];
  uint64_t v13 = &v7[72 * v6];
  sub_10028B938(a1 + 16, v11, a2);
  int v12 = &v11[4].n128_i8[8];
  sub_10028B9DC(a1, &v10);
  uint64_t v8 = a1[1];
  sub_10028BBF4(&v10);
  return v8;
}

void sub_10028B924(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10028BBF4((void **)va);
  _Unwind_Resume(a1);
}

__n128 sub_10028B938(int a1, __n128 *__dst, uint64_t a3)
{
  if (*(char *)(a3 + 23) < 0)
  {
    sub_100002DE4(__dst, *(void **)a3, *(void *)(a3 + 8));
  }
  else
  {
    __n128 v5 = *(__n128 *)a3;
    __dst[1].n128_u64[0] = *(void *)(a3 + 16);
    *long long __dst = v5;
  }
  unint64_t v6 = &__dst[1].n128_u8[8];
  if (*(char *)(a3 + 47) < 0)
  {
    sub_100002DE4(v6, *(void **)(a3 + 24), *(void *)(a3 + 32));
  }
  else
  {
    long long v7 = *(_OWORD *)(a3 + 24);
    __dst[2].n128_u64[1] = *(void *)(a3 + 40);
    *(_OWORD *)unint64_t v6 = v7;
  }
  __n128 result = *(__n128 *)(a3 + 48);
  __dst[4].n128_u64[0] = *(void *)(a3 + 64);
  __dst[3] = result;
  return result;
}

void sub_10028B9C0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10028B9DC(uint64_t *a1, void *a2)
{
  uint64_t result = sub_10028BAA0((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *sub_10028BA54(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x38E38E38E38E38FLL) {
    sub_1000257D8();
  }
  return operator new(72 * a2);
}

uint64_t sub_10028BAA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v17 = a6;
  *((void *)&v17 + 1) = a7;
  long long v16 = v17;
  v14[0] = a1;
  v14[1] = &v16;
  void v14[2] = &v17;
  if (a3 != a5)
  {
    uint64_t v9 = a7;
    do
    {
      long long v10 = *(_OWORD *)(a3 - 72);
      *(void *)(v9 - 56) = *(void *)(a3 - 56);
      *(_OWORD *)(v9 - 72) = v10;
      *(void *)(a3 - 64) = 0;
      *(void *)(a3 - 56) = 0;
      *(void *)(a3 - 72) = 0;
      long long v11 = *(_OWORD *)(a3 - 48);
      *(void *)(v9 - 32) = *(void *)(a3 - 32);
      *(_OWORD *)(v9 - 48) = v11;
      *(void *)(a3 - 40) = 0;
      *(void *)(a3 - 32) = 0;
      *(void *)(a3 - 48) = 0;
      long long v12 = *(_OWORD *)(a3 - 24);
      *(void *)(v9 - 8) = *(void *)(a3 - 8);
      *(_OWORD *)(v9 - 24) = v12;
      v9 -= 72;
      v7 -= 72;
      a3 -= 72;
    }
    while (a3 != a5);
    *((void *)&v17 + 1) = v9;
  }
  char v15 = 1;
  sub_10028BB68((uint64_t)v14);
  return a6;
}

uint64_t sub_10028BB68(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_10028BBA0((uint64_t *)a1);
  }
  return a1;
}

void sub_10028BBA0(uint64_t *a1)
{
  uint64_t v1 = *(void *)(a1[2] + 8);
  uint64_t v2 = *(void *)(a1[1] + 8);
  if (v1 != v2)
  {
    uint64_t v3 = *a1;
    do
    {
      sub_1001FC298(v3, v1);
      v1 += 72;
    }
    while (v1 != v2);
  }
}

void **sub_10028BBF4(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void sub_10028BC28(void *a1)
{
  uint64_t v2 = a1[1];
  for (uint64_t i = a1[2]; i != v2; uint64_t i = a1[2])
  {
    uint64_t v4 = a1[4];
    a1[2] = i - 72;
    sub_1001FC298(v4, i - 72);
  }
}

void sub_10028BC74(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_10028BCB0(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_10028BCF4(uint64_t a1, const void **a2, void *a3)
{
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 8) = a1 + 16;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = *a3;
  uint64_t v5 = a3[1];
  *(void *)(a1 + 40) = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 56) = a1 + 64;
  *(unsigned char *)(a1 + 48) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 80) = a1 + 88;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(_DWORD *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  uint64_t v6 = (void **)(a1 + 120);
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  if ((*((char *)a2 + 23) & 0x80000000) == 0)
  {
    if (*((unsigned char *)a2 + 23)) {
      goto LABEL_5;
    }
LABEL_20:
    __assert_rtn("PRStateMachine", "PRStateMachine.h", 55, "!name.empty()");
  }
  if (!a2[1]) {
    goto LABEL_20;
  }
LABEL_5:
  if (*((char *)a2 + 23) >= 0) {
    size_t v7 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v7 = (size_t)a2[1];
  }
  sub_100158FEC((uint64_t)&v11, v7 + 1);
  if (v12 >= 0) {
    uint64_t v8 = &v11;
  }
  else {
    uint64_t v8 = (long long *)v11;
  }
  if (v7)
  {
    if (*((char *)a2 + 23) >= 0) {
      uint64_t v9 = a2;
    }
    else {
      uint64_t v9 = *a2;
    }
    memmove(v8, v9, v7);
  }
  *(_WORD *)((char *)v8 + v7) = 44;
  if (*(char *)(a1 + 143) < 0) {
    operator delete(*v6);
  }
  *(_OWORD *)uint64_t v6 = v11;
  *(void *)(a1 + 136) = v12;
  return a1;
}

void sub_10028BE70(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 143) < 0) {
    operator delete(*v6);
  }

  sub_10003E96C(v4, *(void **)(v1 + 88));
  sub_1001A23EC(v3, *(void **)(v1 + 64));
  uint64_t v8 = *(std::__shared_weak_count **)(v1 + 40);
  if (v8) {
    sub_10001A970(v8);
  }
  sub_10003E96C(v2, *v5);
  _Unwind_Resume(a1);
}

void sub_10028BEC8(uint64_t a1, int a2, double a3)
{
  int v19 = a2;
  uint64_t v3 = *(NSObject **)(a1 + 104);
  if (!v3) {
    sub_10041691C();
  }
  if (a3 >= 0.0)
  {
    uint64_t v7 = a1 + 64;
    uint64_t v6 = *(void *)(a1 + 64);
    if (!v6) {
      goto LABEL_15;
    }
    uint64_t v8 = a1 + 64;
    do
    {
      int v9 = *(_DWORD *)(v6 + 32);
      BOOL v10 = v9 < a2;
      if (v9 >= a2) {
        long long v11 = (uint64_t *)v6;
      }
      else {
        long long v11 = (uint64_t *)(v6 + 8);
      }
      if (!v10) {
        uint64_t v8 = v6;
      }
      uint64_t v6 = *v11;
    }
    while (*v11);
    if (v8 != v7 && *(_DWORD *)(v8 + 32) <= a2 && (uint64_t v12 = *(void **)(v8 + 40)) != 0)
    {
      uint64_t v13 = v12;
    }
    else
    {
LABEL_15:
      dispatch_source_t v14 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0, 0, v3);
      if (!v14) {
        return;
      }
      uint64_t v13 = v14;
      uint64_t v20 = &v19;
      char v15 = sub_1001A284C((uint64_t **)(v7 - 8), &v19, (uint64_t)&unk_1004BC2F8, &v20);
      objc_storeStrong((id *)v15 + 5, v13);
      dispatch_source_set_timer(v13, 0xFFFFFFFFFFFFFFFFLL, 0xFFFFFFFFFFFFFFFFLL, 0x1DCD6500uLL);
      v17[0] = _NSConcreteStackBlock;
      v17[1] = 3221225472;
      void v17[2] = sub_10028C0A8;
      v17[3] = &unk_100853B08;
      __n128 v17[4] = a1;
      int v18 = v19;
      dispatch_source_set_event_handler(v13, v17);
      dispatch_resume(v13);
    }
    dispatch_time_t v16 = dispatch_time(0xFFFFFFFFFFFFFFFELL, (uint64_t)(a3 * 1000000000.0));
    dispatch_source_set_timer(v13, v16, 0xFFFFFFFFFFFFFFFFLL, 0x1DCD6500uLL);
    uint64_t v20 = &v19;
    *((unsigned char *)sub_1001A2910((uint64_t **)(a1 + 80), &v19, (uint64_t)&unk_1004BC2F8, &v20) + 32) = 1;
  }
}

void sub_10028C098(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t **sub_10028C0A8(uint64_t a1)
{
  uint64_t v1 = (_DWORD *)(a1 + 40);
  uint64_t v2 = *(void *)(a1 + 32);
  sub_10000714C(v2, *(unsigned int *)(a1 + 40));
  uint64_t v4 = v1;
  uint64_t result = sub_1001A2910((uint64_t **)(v2 + 80), v1, (uint64_t)&unk_1004BC2F8, &v4);
  *((unsigned char *)result + 32) = 0;
  return result;
}

void sub_10028C104()
{
  qword_1008A6E08 = (uint64_t)os_log_create("com.apple.nearbyd", "Regulatory");
}

uint64_t sub_10028C158(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  id v13 = a4;
  id v14 = a5;
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = dispatch_queue_create("com.apple.nearby.niserver.backoff", 0);
  sub_10028F274(a1 + 48, a3);
  sub_1001F2A10(a1 + 80, a6);
  sub_10028F698(a1 + 112, a7);
  id v15 = v13;
  *(void *)(a1 + 144) = v15;
  id v16 = v14;
  *(unsigned char *)(a1 + 192) = 0;
  *(unsigned char *)(a1 + 200) = 0;
  *(unsigned char *)(a1 + 208) = 0;
  *(unsigned char *)(a1 + 212) = 0;
  *(unsigned char *)(a1 + 216) = 0;
  *(unsigned char *)(a1 + 220) = 0;
  *(void *)(a1 + 152) = v16;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = 0;
  *(_DWORD *)(a1 + 184) = 0;
  __p[0] = sub_10028C4A8;
  __p[1] = 0;
  uint64_t v24 = a1;
  sub_10028F30C((void **)(a1 + 40), (uint64_t)__p, (char *)(a2 + 3), (unsigned __int8 *)(a2 + 5), (void *)(a1 + 224));
  *(_DWORD *)(a1 + 240) = 0;
  *(void *)(a1 + 248) = 0;
  if (!*(void *)(a1 + 144))
  {
    uint64_t v21 = "fUpdatesQueue";
    int v22 = 36;
    goto LABEL_18;
  }
  if (!*(void *)(a1 + 72))
  {
    uint64_t v21 = "fBackoffResumeHandler";
    int v22 = 37;
    goto LABEL_18;
  }
  if (!*(void *)(a1 + 152))
  {
    uint64_t v21 = "fSessionIdentifier != nil";
    int v22 = 38;
    goto LABEL_18;
  }
  if (!*(void *)(a1 + 104))
  {
    uint64_t v21 = "fMotionStateHandler != nullptr";
    int v22 = 39;
    goto LABEL_18;
  }
  if (*(double *)(a1 + 24) < 0.0)
  {
    uint64_t v21 = "fConfig.screenStateProcessingDelaySeconds >= 0";
    int v22 = 40;
LABEL_18:
    __assert_rtn("BackoffResumeManager", "NIServerBackoffResumeManager.mm", v22, v21);
  }
  long long v17 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v18 = *(void *)(a1 + 152);
    sub_10028C61C();
    if (v24 >= 0) {
      int v19 = __p;
    }
    else {
      int v19 = (void **)__p[0];
    }
    *(_DWORD *)uint64_t buf = 138412546;
    uint64_t v26 = v18;
    __int16 v27 = 2080;
    __int16 v28 = v19;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "#backoff,Creating backoff resume manager for session identifier: %@. Configuration: %s", buf, 0x16u);
    if (SHIBYTE(v24) < 0) {
      operator delete(__p[0]);
    }
  }

  return a1;
}

void sub_10028C3F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  id v16 = *(std::__shared_weak_count **)(v9 + 232);
  if (v16) {
    sub_10001A970(v16);
  }

  sub_1001A6274(v13);
  sub_1001A62F8(v12);
  sub_1001A637C(v11);

  long long v17 = *(std::__shared_weak_count **)(v9 + 8);
  if (v17) {
    std::__shared_weak_count::__release_weak(v17);
  }

  _Unwind_Resume(a1);
}

void sub_10028C4A8(uint64_t a1, int a2)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 40));
  int v4 = *(_DWORD *)(a1 + 240);
  if (v4 != a2)
  {
    if (v4 == 1 && a2 == 2 && *(unsigned char *)(a1 + 19) != 0)
    {
      uint64_t v7 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#backoff,pausing motion detector for backoff", buf, 2u);
      }
      sub_1001F0CD4(*(void *)(a1 + 224));
      sub_10028E920(a1);
    }
    *(_DWORD *)(a1 + 240) = a2;
    uint64_t v8 = *(void *)a1;
    uint64_t v9 = *(std::__shared_weak_count **)(a1 + 8);
    if (v9) {
      atomic_fetch_add_explicit(&v9->__shared_weak_owners_, 1uLL, memory_order_relaxed);
    }
    if (*(void *)(a1 + 104))
    {
      BOOL v10 = *(NSObject **)(a1 + 144);
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 3321888768;
      void v11[2] = sub_10028EA8C;
      v11[3] = &unk_10085D028;
      v11[4] = a1;
      v11[5] = v8;
      uint64_t v12 = v9;
      if (v9) {
        atomic_fetch_add_explicit(&v9->__shared_weak_owners_, 1uLL, memory_order_relaxed);
      }
      int v13 = a2;
      dispatch_async(v10, v11);
      if (v12) {
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    sub_10028DAFC(a1);
    if (v9) {
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_10028C604(_Unwind_Exception *exception_object)
{
  if (v1) {
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10028C61C()
{
  sub_100054E28((uint64_t)v33);
  uint64_t v0 = sub_100056628(v34, (uint64_t)"{", 1);
  std::ios_base::getloc((const std::ios_base *)((char *)v0 + *(void *)(*v0 - 24)));
  uint64_t v1 = std::locale::use_facet(&v36, &std::ctype<char>::id);
  ((void (*)(const std::locale::facet *, uint64_t))v1->__vftable[2].~facet_0)(v1, 10);
  std::locale::~locale(&v36);
  std::ostream::put();
  std::ostream::flush();
  LOBYTE(v36.__locale_) = 9;
  uint64_t v2 = sub_100056628(v34, (uint64_t)&v36, 1);
  sub_100056628(v2, (uint64_t)"'screenStateMonitoring': ", 25);
  uint64_t v3 = (void *)std::ostream::operator<<();
  int v4 = sub_100056628(v3, (uint64_t)",", 1);
  std::ios_base::getloc((const std::ios_base *)((char *)v4 + *(void *)(*v4 - 24)));
  uint64_t v5 = std::locale::use_facet(&v36, &std::ctype<char>::id);
  ((void (*)(const std::locale::facet *, uint64_t))v5->__vftable[2].~facet_0)(v5, 10);
  std::locale::~locale(&v36);
  std::ostream::put();
  std::ostream::flush();
  LOBYTE(v36.__locale_) = 9;
  uint64_t v6 = sub_100056628(v34, (uint64_t)&v36, 1);
  sub_100056628(v6, (uint64_t)"'stationaryStateMonitoring': ", 29);
  uint64_t v7 = (void *)std::ostream::operator<<();
  uint64_t v8 = sub_100056628(v7, (uint64_t)",", 1);
  std::ios_base::getloc((const std::ios_base *)((char *)v8 + *(void *)(*v8 - 24)));
  uint64_t v9 = std::locale::use_facet(&v36, &std::ctype<char>::id);
  ((void (*)(const std::locale::facet *, uint64_t))v9->__vftable[2].~facet_0)(v9, 10);
  std::locale::~locale(&v36);
  std::ostream::put();
  std::ostream::flush();
  LOBYTE(v36.__locale_) = 9;
  BOOL v10 = sub_100056628(v34, (uint64_t)&v36, 1);
  sub_100056628(v10, (uint64_t)"'allowLockScreenOnly': ", 23);
  long long v11 = (void *)std::ostream::operator<<();
  uint64_t v12 = sub_100056628(v11, (uint64_t)",", 1);
  std::ios_base::getloc((const std::ios_base *)((char *)v12 + *(void *)(*v12 - 24)));
  int v13 = std::locale::use_facet(&v36, &std::ctype<char>::id);
  ((void (*)(const std::locale::facet *, uint64_t))v13->__vftable[2].~facet_0)(v13, 10);
  std::locale::~locale(&v36);
  std::ostream::put();
  std::ostream::flush();
  LOBYTE(v36.__locale_) = 9;
  id v14 = sub_100056628(v34, (uint64_t)&v36, 1);
  sub_100056628(v14, (uint64_t)"'gravityOnlyMotion': ", 21);
  id v15 = (void *)std::ostream::operator<<();
  id v16 = sub_100056628(v15, (uint64_t)",", 1);
  std::ios_base::getloc((const std::ios_base *)((char *)v16 + *(void *)(*v16 - 24)));
  long long v17 = std::locale::use_facet(&v36, &std::ctype<char>::id);
  ((void (*)(const std::locale::facet *, uint64_t))v17->__vftable[2].~facet_0)(v17, 10);
  std::locale::~locale(&v36);
  std::ostream::put();
  std::ostream::flush();
  LOBYTE(v36.__locale_) = 9;
  uint64_t v18 = sub_100056628(v34, (uint64_t)&v36, 1);
  sub_100056628(v18, (uint64_t)"'provideRecommendation': ", 25);
  int v19 = (void *)std::ostream::operator<<();
  uint64_t v20 = sub_100056628(v19, (uint64_t)",", 1);
  std::ios_base::getloc((const std::ios_base *)((char *)v20 + *(void *)(*v20 - 24)));
  uint64_t v21 = std::locale::use_facet(&v36, &std::ctype<char>::id);
  ((void (*)(const std::locale::facet *, uint64_t))v21->__vftable[2].~facet_0)(v21, 10);
  std::locale::~locale(&v36);
  std::ostream::put();
  std::ostream::flush();
  LOBYTE(v36.__locale_) = 9;
  int v22 = sub_100056628(v34, (uint64_t)&v36, 1);
  sub_100056628(v22, (uint64_t)"'strictStationary': ", 20);
  uint64_t v23 = (void *)std::ostream::operator<<();
  uint64_t v24 = sub_100056628(v23, (uint64_t)",", 1);
  std::ios_base::getloc((const std::ios_base *)((char *)v24 + *(void *)(*v24 - 24)));
  uint64_t v25 = std::locale::use_facet(&v36, &std::ctype<char>::id);
  ((void (*)(const std::locale::facet *, uint64_t))v25->__vftable[2].~facet_0)(v25, 10);
  std::locale::~locale(&v36);
  std::ostream::put();
  std::ostream::flush();
  LOBYTE(v36.__locale_) = 9;
  uint64_t v26 = sub_100056628(v34, (uint64_t)&v36, 1);
  sub_100056628(v26, (uint64_t)"'screenStateProcessingDelaySeconds': ", 37);
  __int16 v27 = (void *)std::ostream::operator<<();
  std::ios_base::getloc((const std::ios_base *)((char *)v27 + *(void *)(*v27 - 24)));
  __int16 v28 = std::locale::use_facet(&v36, &std::ctype<char>::id);
  ((void (*)(const std::locale::facet *, uint64_t))v28->__vftable[2].~facet_0)(v28, 10);
  std::locale::~locale(&v36);
  std::ostream::put();
  std::ostream::flush();
  uint64_t v29 = sub_100056628(v34, (uint64_t)"}", 1);
  std::ios_base::getloc((const std::ios_base *)((char *)v29 + *(void *)(*v29 - 24)));
  __int16 v30 = std::locale::use_facet(&v36, &std::ctype<char>::id);
  ((void (*)(const std::locale::facet *, uint64_t))v30->__vftable[2].~facet_0)(v30, 10);
  std::locale::~locale(&v36);
  std::ostream::put();
  std::ostream::flush();
  std::stringbuf::str();
  *(void *)((char *)v33
  v34[0] = v31;
  if (v35 < 0) {
    operator delete((void *)v34[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return std::ios::~ios();
}

void sub_10028CDB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::locale::~locale((std::locale *)(v9 - 56));
  sub_100055100((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_10028CE00(uint64_t a1)
{
  uint64_t v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 152);
    int v9 = 138412290;
    uint64_t v10 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#backoff,Destructing backoff resume manager for session identifier %@", (uint8_t *)&v9, 0xCu);
  }
  int v4 = *(void **)(a1 + 176);
  if (v4)
  {
    [v4 invalidate];
    uint64_t v5 = *(void **)(a1 + 176);
    *(void *)(a1 + 176) = 0;
  }
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 232);
  if (v6) {
    sub_10001A970(v6);
  }

  sub_1001A6274((void *)(a1 + 112));
  sub_1001A62F8((void *)(a1 + 80));
  sub_1001A637C((void *)(a1 + 48));

  uint64_t v7 = *(std::__shared_weak_count **)(a1 + 8);
  if (v7) {
    std::__shared_weak_count::__release_weak(v7);
  }
  return a1;
}

void sub_10028CF24(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_100012C10(a1);
  }
  _Unwind_Resume(a1);
}

void sub_10028CF34(uint64_t a1)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 144));
  uint64_t v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 152);
    *(_DWORD *)uint64_t buf = 138412290;
    uint64_t v9 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#backoff,Invalidating backoff resume manager for session identifier %@", buf, 0xCu);
  }
  int v4 = *(NSObject **)(a1 + 40);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10028D088;
  block[3] = &unk_1008466D8;
  void block[4] = a1;
  dispatch_sync(v4, block);
  uint64_t v5 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 152);
    *(_DWORD *)uint64_t buf = 138412290;
    uint64_t v9 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#backoff,Invalidated backoff resume manager for session identifier %@", buf, 0xCu);
  }
}

void sub_10028D088(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  sub_10028F730(v1 + 6);
  sub_10028D108((uint64_t)v1);
  sub_1001F2AA8(v1 + 10);
  uint64_t v2 = v1[28];
  if (v2)
  {
    sub_1001F041C(v2);
    uint64_t v3 = (std::__shared_weak_count *)v1[29];
    v1[28] = 0;
    v1[29] = 0;
    if (v3) {
      sub_10001A970(v3);
    }
  }
  int v4 = v1[20];
  if (v4)
  {
    dispatch_source_cancel(v4);
  }
}

void sub_10028D108(uint64_t a1)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 40));
  sub_10028F7B8((void *)(a1 + 112));
  [*(id *)(a1 + 176) invalidate];
  uint64_t v2 = *(void **)(a1 + 176);
  *(void *)(a1 + 176) = 0;

  uint64_t v3 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#backoff,Stopped monitoring screen state", v4, 2u);
  }
}

void sub_10028D19C(uint64_t *a1)
{
  dispatch_assert_queue_V2((dispatch_queue_t)a1[18]);
  uint64_t v2 = +[NSUserDefaults standardUserDefaults];
  if ([v2 BOOLForKey:@"NISessionIgnoreMotionBackoff"])
  {
    *((unsigned char *)a1 + 32) = 1;
    uint64_t v3 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#backoff,Not monitoring motion activity. NISessionIgnoreMotionBackoff is set to true.", buf, 2u);
    }
  }
  uint64_t v5 = *a1;
  int v4 = (std::__shared_weak_count *)a1[1];
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_weak_owners_, 1uLL, memory_order_relaxed);
  }
  dispatch_time_t v6 = dispatch_time(0, 50000000);
  uint64_t v7 = a1[5];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3321888768;
  v8[2] = sub_10028D2F8;
  void v8[3] = &unk_10085CF68;
  v8[4] = v5;
  uint64_t v9 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_weak_owners_, 1uLL, memory_order_relaxed);
  }
  dispatch_after(v6, v7, v8);
  if (v9) {
    std::__shared_weak_count::__release_weak(v9);
  }
  if (v4) {
    std::__shared_weak_count::__release_weak(v4);
  }
}

void sub_10028D2E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10028D2F8(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 40);
  if (v2)
  {
    uint64_t v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      int v4 = v3;
      uint64_t v5 = *(void *)(a1 + 32);
      if (v5)
      {
        dispatch_time_t v6 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)uint64_t v8 = 0;
          _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#backoff,To start monitoring screen state and motion state", v8, 2u);
        }
        if (*(unsigned char *)(v5 + 16)) {
          sub_10028D3D8((uint64_t *)v5);
        }
        if (*(unsigned char *)(v5 + 17))
        {
          uint64_t v7 = *(void *)(v5 + 224);
          if (v7)
          {
            if (*(unsigned char *)(v5 + 32)) {
              sub_1001F11C8(v7);
            }
            else {
              sub_1001F08EC(v7);
            }
          }
        }
      }
      sub_10001A970(v4);
    }
  }
}

void sub_10028D3C4(_Unwind_Exception *a1)
{
  sub_10001A970(v1);
  _Unwind_Resume(a1);
}

void sub_10028D3D8(uint64_t *a1)
{
  dispatch_assert_queue_V2((dispatch_queue_t)a1[5]);
  uint64_t v2 = +[FBSDisplayLayoutMonitorConfiguration configurationForDefaultMainDisplayMonitor];
  uint64_t v3 = v2;
  uint64_t v4 = *a1;
  uint64_t v5 = (std::__shared_weak_count *)a1[1];
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_weak_owners_, 1uLL, memory_order_relaxed);
  }
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3321888768;
  _DWORD v10[2] = sub_10028DEE8;
  v10[3] = &unk_10085CFF8;
  v10[4] = v4;
  long long v11 = v5;
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_weak_owners_, 1uLL, memory_order_relaxed);
  }
  [v2 setTransitionHandler:v10];
  uint64_t v6 = +[FBSDisplayLayoutMonitor monitorWithConfiguration:v3];
  uint64_t v7 = (void *)a1[22];
  a1[22] = v6;

  uint64_t v8 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#backoff,Started monitoring screen state", v9, 2u);
  }
  if (v11) {
    std::__shared_weak_count::__release_weak(v11);
  }
  if (v5) {
    std::__shared_weak_count::__release_weak(v5);
  }
}

void sub_10028D51C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  if (a16) {
    std::__shared_weak_count::__release_weak(a16);
  }
  if (v17) {
    std::__shared_weak_count::__release_weak(v17);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_10028D548(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(result + 32) = *(void *)(a2 + 32);
  *(void *)(result + 40) = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 16), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_10028D564(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 40);
  if (v1) {
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_10028D574(uint64_t a1, unsigned __int8 *a2)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 144));
  uint64_t v4 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    sub_10028C61C();
    sub_10028D784();
    uint64_t v5 = v13;
    if (v14 < 0) {
      uint64_t v5 = *(uint8_t **)v13;
    }
    if (v12 >= 0) {
      p_p = &__p;
    }
    else {
      p_p = __p;
    }
    *(_DWORD *)uint64_t buf = 136315394;
    id v16 = v5;
    __int16 v17 = 2080;
    uint64_t v18 = p_p;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#backoff,Configuration update.\nCurrent configuratiouint64_t n = \n%sConfiguration update =\n%s", buf, 0x16u);
    if (v12 < 0) {
      operator delete(__p);
    }
    if (v14 < 0) {
      operator delete(*(void **)v13);
    }
  }

  int v7 = *a2;
  if (v7 != *(unsigned __int8 *)(a1 + 18))
  {
    *(unsigned char *)(a1 + 18) = v7;
    uint64_t v8 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#backoff,Config changed. Generating new recommendation", v13, 2u);
    }
    uint64_t v9 = *(NSObject **)(a1 + 40);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    _DWORD v10[2] = sub_10028DAF4;
    v10[3] = &unk_1008466D8;
    v10[4] = a1;
    dispatch_async(v9, v10);
  }
}

void sub_10028D754(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_10028D784()
{
  sub_100054E28((uint64_t)v10);
  uint64_t v0 = sub_100056628(v11, (uint64_t)"{", 1);
  std::ios_base::getloc((const std::ios_base *)((char *)v0 + *(void *)(*v0 - 24)));
  uint64_t v1 = std::locale::use_facet(&v13, &std::ctype<char>::id);
  ((void (*)(const std::locale::facet *, uint64_t))v1->__vftable[2].~facet_0)(v1, 10);
  std::locale::~locale(&v13);
  std::ostream::put();
  std::ostream::flush();
  LOBYTE(v13.__locale_) = 9;
  uint64_t v2 = sub_100056628(v11, (uint64_t)&v13, 1);
  sub_100056628(v2, (uint64_t)"'allowLockScreenOnly': ", 23);
  uint64_t v3 = (void *)std::ostream::operator<<();
  uint64_t v4 = sub_100056628(v3, (uint64_t)",", 1);
  std::ios_base::getloc((const std::ios_base *)((char *)v4 + *(void *)(*v4 - 24)));
  uint64_t v5 = std::locale::use_facet(&v13, &std::ctype<char>::id);
  ((void (*)(const std::locale::facet *, uint64_t))v5->__vftable[2].~facet_0)(v5, 10);
  std::locale::~locale(&v13);
  std::ostream::put();
  std::ostream::flush();
  uint64_t v6 = sub_100056628(v11, (uint64_t)"}", 1);
  std::ios_base::getloc((const std::ios_base *)((char *)v6 + *(void *)(*v6 - 24)));
  int v7 = std::locale::use_facet(&v13, &std::ctype<char>::id);
  ((void (*)(const std::locale::facet *, uint64_t))v7->__vftable[2].~facet_0)(v7, 10);
  std::locale::~locale(&v13);
  std::ostream::put();
  std::ostream::flush();
  std::stringbuf::str();
  *(void *)((char *)v10
  v11[0] = v8;
  if (v12 < 0) {
    operator delete((void *)v11[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return std::ios::~ios();
}

void sub_10028DAC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::locale::~locale((std::locale *)(v9 - 56));
  sub_100055100((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_10028DAF4(uint64_t a1)
{
}

void sub_10028DAFC(uint64_t a1)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 40));
  if (*(unsigned char *)(a1 + 20))
  {
    unint64_t v2 = sub_10028E4B0(a1);
    if ((v2 & 0xFF00000000) != 0)
    {
      int v3 = v2;
      if (*(unsigned char *)(a1 + 212) && *(_DWORD *)(a1 + 208) == v2)
      {
        uint64_t v4 = (id)qword_1008ABDE0;
        if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
        {
          if (v3) {
            uint64_t v5 = "Resume";
          }
          else {
            uint64_t v5 = "Suspend";
          }
          sub_100004950(__p, v5);
          if (v26 >= 0) {
            uint64_t v6 = __p;
          }
          else {
            uint64_t v6 = *(unsigned char **)__p;
          }
          *(_DWORD *)uint64_t buf = 136315138;
          *(void *)&uint8_t buf[4] = v6;
          _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#backoff,new recommendation %s is same as current recommendation, return", buf, 0xCu);
          if (SHIBYTE(v26) < 0) {
            operator delete(*(void **)__p);
          }
        }
      }
      else
      {
        *(_DWORD *)(a1 + 208) = v2;
        *(unsigned char *)(a1 + 212) = 1;
        ++*(void *)(a1 + 248);
        double v7 = sub_100006C38();
        uint64_t v8 = (id)qword_1008ABDE0;
        if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
        {
          if (!*(unsigned char *)(a1 + 212)) {
            sub_10000AE44();
          }
          if (*(_DWORD *)(a1 + 208)) {
            uint64_t v9 = "Resume";
          }
          else {
            uint64_t v9 = "Suspend";
          }
          uint64_t v10 = buf;
          sub_100004950(buf, v9);
          if (v22 < 0) {
            uint64_t v10 = *(unsigned char **)buf;
          }
          sub_100004950(v19, off_10085D1E8[*(int *)(a1 + 184)]);
          int v11 = v20;
          char v12 = (void **)v19[0];
          sub_1001F00B4(*(_DWORD *)(a1 + 240), v17);
          std::locale v13 = v19;
          if (v11 < 0) {
            std::locale v13 = v12;
          }
          if (v18 >= 0) {
            char v14 = v17;
          }
          else {
            char v14 = (void **)v17[0];
          }
          uint64_t v15 = *(void *)(a1 + 248);
          *(_DWORD *)__n128 __p = 136316162;
          *(void *)&__p[4] = v10;
          __int16 v24 = 2048;
          double v25 = v7;
          __int16 v26 = 2080;
          __int16 v27 = v13;
          __int16 v28 = 2080;
          uint64_t v29 = v14;
          __int16 v30 = 2048;
          uint64_t v31 = v15;
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#backoff,Generated tentative recommendation %s at time %f with screen state %s, motion state %s, event_id %lld", __p, 0x34u);
          if (v18 < 0) {
            operator delete(v17[0]);
          }
          if (v20 < 0) {
            operator delete(v19[0]);
          }
          if (v22 < 0) {
            operator delete(*(void **)buf);
          }
        }

        if (!*(unsigned char *)(a1 + 200)) {
          goto LABEL_38;
        }
        double v16 = v7 - *(double *)(a1 + 192);
        if (v16 < 0.0) {
          sub_100428770();
        }
        if (*(void *)(a1 + 160) || v16 < *(double *)(a1 + 24)) {
          sub_10028EED4(a1);
        }
        else {
LABEL_38:
        }
          sub_10028EBF8((uint64_t *)a1);
      }
    }
  }
}

void sub_10028DDE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }

  _Unwind_Resume(a1);
}

void sub_10028DE34(uint64_t a1, void *a2)
{
  if (*(void *)(a1 + 224))
  {
    unint64_t v2 = *(NSObject **)(a1 + 40);
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_10028DEC4;
    v4[3] = &unk_100855ED8;
    v4[4] = a2;
    v4[5] = a1;
    id v3 = a2;
    dispatch_sync(v2, v4);
  }
}

void sub_10028DEC4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  uint64_t v2 = *(void *)(v1 + 224);
  if (v2)
  {
    if (!*(unsigned char *)(v1 + 32)) {
      sub_1001F05A0(v2, *(void **)(a1 + 32));
    }
  }
}

void sub_10028DEE8(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  uint64_t v10 = *(std::__shared_weak_count **)(a1 + 40);
  if (v10)
  {
    int v11 = std::__shared_weak_count::lock(v10);
    if (v11)
    {
      char v12 = v11;
      uint64_t v13 = *(void *)(a1 + 32);
      if (v13)
      {
        char v14 = *(NSObject **)(v13 + 40);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3321888768;
        block[2] = sub_10028E018;
        block[3] = &unk_10085CFC8;
        uint64_t v15 = *(std::__shared_weak_count **)(a1 + 40);
        uint64_t v20 = v13;
        uint64_t v21 = v15;
        if (v15) {
          atomic_fetch_add_explicit(&v15->__shared_weak_owners_, 1uLL, memory_order_relaxed);
        }
        id v17 = v7;
        id v18 = v8;
        id v19 = v9;
        dispatch_async(v14, block);

        if (v21) {
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      sub_10001A970(v12);
    }
  }
}

void sub_10028E018(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 64);
  if (v2)
  {
    id v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      uint64_t v4 = v3;
      uint64_t v5 = *(void *)(a1 + 56);
      if (v5) {
        sub_10028E094(v5, *(void **)(a1 + 32), *(void **)(a1 + 40), *(void **)(a1 + 48));
      }
      sub_10001A970(v4);
    }
  }
}

void sub_10028E080(_Unwind_Exception *a1)
{
  sub_10001A970(v1);
  _Unwind_Resume(a1);
}

void sub_10028E094(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v28 = a2;
  id v7 = a3;
  uint64_t v29 = v7;
  id v30 = a4;
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 40));
  if (v7)
  {
    id v8 = [v7 displayBacklightLevel:v28, v7, v30];
    long long v39 = 0u;
    long long v37 = 0u;
    long long v38 = 0u;
    long long v36 = 0u;
    id v9 = [v7 elements];
    id v10 = [v9 countByEnumeratingWithState:&v36 objects:v42 count:16];
    uint64_t v11 = (uint64_t)v8;
    if (v10)
    {
      char v12 = 0;
      uint64_t v13 = *(void *)v37;
      uint64_t v14 = FBSDisplayLayoutElementLockScreenIdentifier;
      do
      {
        for (uint64_t i = 0; i != v10; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v37 != v13) {
            objc_enumerationMutation(v9);
          }
          double v16 = [*(id *)(*((void *)&v36 + 1) + 8 * i) identifier];
          unsigned __int8 v17 = [v16 isEqualToString:v14];

          v12 |= v17;
        }
        id v10 = [v9 countByEnumeratingWithState:&v36 objects:v42 count:16];
      }
      while (v10);

      if (v12) {
        int v18 = 1;
      }
      else {
        int v18 = 2;
      }
    }
    else
    {

      int v18 = 2;
    }
    if (v11 <= 0) {
      int v18 = 3;
    }
    if (*(_DWORD *)(a1 + 184) != v18)
    {
      *(_DWORD *)(a1 + 184) = v18;
      uint64_t v20 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        sub_100004950(__p, off_10085D1E8[*(int *)(a1 + 184)]);
        uint64_t v21 = v35 >= 0 ? __p : (void **)__p[0];
        *(_DWORD *)uint64_t buf = 136315138;
        double v41 = v21;
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "#backoff,New screen state is %s", buf, 0xCu);
        if (v35 < 0) {
          operator delete(__p[0]);
        }
      }

      uint64_t v22 = *(void *)a1;
      uint64_t v23 = *(std::__shared_weak_count **)(a1 + 8);
      if (v23) {
        atomic_fetch_add_explicit(&v23->__shared_weak_owners_, 1uLL, memory_order_relaxed);
      }
      int v24 = *(_DWORD *)(a1 + 184);
      if (*(void *)(a1 + 136))
      {
        double v25 = *(NSObject **)(a1 + 144);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3321888768;
        block[2] = sub_10028E784;
        block[3] = &unk_10085D028;
        void block[4] = a1;
        void block[5] = v22;
        __int16 v32 = v23;
        if (v23) {
          atomic_fetch_add_explicit(&v23->__shared_weak_owners_, 1uLL, memory_order_relaxed);
        }
        int v33 = v24;
        dispatch_async(v25, block);
        if (v32) {
          std::__shared_weak_count::__release_weak(v32);
        }
        int v24 = *(_DWORD *)(a1 + 184);
      }
      if ((v24 - 1) >= 2)
      {
        if (v24 == 3)
        {
          uint64_t v27 = *(void *)(a1 + 224);
          if (v27)
          {
            if (!*(unsigned char *)(a1 + 32))
            {
              sub_1001F0CD4(v27);
              sub_10028E898(a1);
            }
          }
        }
      }
      else
      {
        uint64_t v26 = *(void *)(a1 + 224);
        if (v26 && !*(unsigned char *)(a1 + 32)) {
          sub_1001F0F50(v26);
        }
      }
      sub_10028DAFC(a1);
      if (v23) {
        std::__shared_weak_count::__release_weak(v23);
      }
    }
  }
  else
  {
    id v19 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042879C(v19);
    }
    *(_DWORD *)(a1 + 184) = 0;
  }
}

void sub_10028E410(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10028E484(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 64);
  *(void *)(result + 56) = *(void *)(a2 + 56);
  *(void *)(result + 64) = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 16), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_10028E4A0(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 64);
  if (v1) {
    std::__shared_weak_count::__release_weak(v1);
  }
}

unint64_t sub_10028E4B0(uint64_t a1)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 40));
  uint64_t v2 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    sub_100004950(v17, off_10085D1E8[*(int *)(a1 + 184)]);
    int v3 = v18;
    uint64_t v4 = (void **)v17[0];
    sub_1001F00B4(*(_DWORD *)(a1 + 240), __p);
    uint64_t v5 = v17;
    if (v3 < 0) {
      uint64_t v5 = v4;
    }
    if (v16 >= 0) {
      uint64_t v6 = __p;
    }
    else {
      uint64_t v6 = (void **)__p[0];
    }
    int v7 = *(unsigned __int8 *)(a1 + 32);
    *(_DWORD *)uint64_t buf = 136315650;
    uint64_t v20 = (const char *)v5;
    __int16 v21 = 2080;
    *(void *)uint64_t v22 = v6;
    *(_WORD *)&void v22[8] = 1024;
    *(_DWORD *)&v22[10] = v7;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#backoff,getRecommendation() with current screen state is %s, current motion state is %s, ignore motion is %d", buf, 0x1Cu);
    if (v16 < 0) {
      operator delete(__p[0]);
    }
    if (v18 < 0) {
      operator delete(v17[0]);
    }
  }

  if (!*(unsigned char *)(a1 + 32) || *(unsigned char *)(a1 + 18) || (uint64_t v8 = *(int *)(a1 + 184), v8 >= 4))
  {
    uint64_t v9 = *(unsigned int *)(a1 + 184);
    uint64_t v11 = v9;
    switch((int)v9)
    {
      case 0:
        return v11 | v9;
      case 1:
        uint64_t v9 = (uint64_t)&_mh_execute_header;
        uint64_t v11 = 1;
        return v11 | v9;
      case 2:
        if (*(unsigned char *)(a1 + 18)) {
          goto LABEL_18;
        }
        uint64_t v8 = *(int *)(a1 + 240);
        if (v8 >= 3) {
          goto LABEL_23;
        }
        uint64_t v9 = qword_1004BDC70[v8];
        id v10 = &unk_1004BDC88;
        break;
      case 3:
LABEL_18:
        uint64_t v11 = 0;
        uint64_t v9 = (uint64_t)&_mh_execute_header;
        return v11 | v9;
      default:
LABEL_23:
        uint64_t v13 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
          sub_1004287E0(v13);
        }
        uint64_t v14 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)uint64_t buf = 136315650;
          uint64_t v20 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/BackoffResumeManager/N"
                "IServerBackoffResumeManager.mm";
          __int16 v21 = 1024;
          *(_DWORD *)uint64_t v22 = 273;
          *(_WORD *)&v22[4] = 2080;
          *(void *)&v22[6] = "_getRecommendation";
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "#backoff,%s:%d: assertion failure in %s", buf, 0x1Cu);
        }
        abort();
    }
  }
  else
  {
    uint64_t v9 = qword_1004BDC30[v8];
    id v10 = &unk_1004BDC50;
  }
  uint64_t v11 = v10[v8];
  return v11 | v9;
}

void sub_10028E744(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_10028E784(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 48);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = std::__shared_weak_count::lock(v2);
    if (v4)
    {
      uint64_t v5 = v4;
      if (*(void *)(a1 + 40) && *(void *)(v3 + 136)) {
        sub_10028E818(v3 + 112, *(_DWORD *)(a1 + 56));
      }
      sub_10001A970(v5);
    }
  }
}

void sub_10028E804(_Unwind_Exception *a1)
{
  sub_10001A970(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10028E818(uint64_t a1, int a2)
{
  int v4 = a2;
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2) {
    sub_100027894();
  }
  return (*(uint64_t (**)(uint64_t, int *))(*(void *)v2 + 48))(v2, &v4);
}

uint64_t sub_10028E86C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 48);
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(result + 48) = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 16), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_10028E888(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 48);
  if (v1) {
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_10028E898(uint64_t a1)
{
  if (*(void *)(a1 + 168))
  {
    uint64_t v2 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#backoff,cancelling boost backoff timer", v4, 2u);
    }
    dispatch_source_cancel(*(dispatch_source_t *)(a1 + 168));
    uint64_t v3 = *(void **)(a1 + 168);
    *(void *)(a1 + 168) = 0;
  }
}

void sub_10028E920(uint64_t a1)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 40));
  sub_10028E898(a1);
  dispatch_source_t v2 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0, 0, *(dispatch_queue_t *)(a1 + 40));
  uint64_t v3 = *(void **)(a1 + 168);
  *(void *)(a1 + 168) = v2;

  int v4 = *(NSObject **)(a1 + 168);
  dispatch_time_t v5 = dispatch_time(0, llround(6.0e10));
  dispatch_source_set_timer(v4, v5, 0xFFFFFFFFFFFFFFFFLL, 0x989680uLL);
  uint64_t v6 = *(void *)a1;
  int v7 = *(std::__shared_weak_count **)(a1 + 8);
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_weak_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v8 = *(NSObject **)(a1 + 168);
  handler[0] = _NSConcreteStackBlock;
  handler[1] = 3321888768;
  handler[2] = sub_10028EB20;
  handler[3] = &unk_10085D058;
  handler[4] = a1;
  handler[5] = v6;
  char v12 = v7;
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_weak_owners_, 1uLL, memory_order_relaxed);
  }
  dispatch_source_set_event_handler(v8, handler);
  dispatch_resume(*(dispatch_object_t *)(a1 + 168));
  uint64_t v9 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#backoff,Re-armed stationary backoff timer.", v10, 2u);
  }
  if (v12) {
    std::__shared_weak_count::__release_weak(v12);
  }
  if (v7) {
    std::__shared_weak_count::__release_weak(v7);
  }
}

void sub_10028EA8C(uint64_t a1)
{
  dispatch_source_t v2 = *(std::__shared_weak_count **)(a1 + 48);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = std::__shared_weak_count::lock(v2);
    if (v4)
    {
      dispatch_time_t v5 = v4;
      if (*(void *)(a1 + 40) && *(void *)(v3 + 224)) {
        sub_1001F2074(v3 + 80, *(_DWORD *)(a1 + 56));
      }
      sub_10001A970(v5);
    }
  }
}

void sub_10028EB0C(_Unwind_Exception *a1)
{
  sub_10001A970(v1);
  _Unwind_Resume(a1);
}

void sub_10028EB20(void *a1)
{
  dispatch_source_t v2 = (std::__shared_weak_count *)a1[6];
  if (v2)
  {
    uint64_t v3 = a1[4];
    int v4 = std::__shared_weak_count::lock(v2);
    if (v4)
    {
      dispatch_time_t v5 = v4;
      if (a1[5])
      {
        uint64_t v6 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)int v7 = 0;
          _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#backoff,boost backoff ended, re-enabling motion detector", v7, 2u);
        }
        sub_1001F0F50(*(void *)(v3 + 224));
      }
      sub_10001A970(v5);
    }
  }
}

void sub_10028EBC4(_Unwind_Exception *a1)
{
  sub_10001A970(v1);
  _Unwind_Resume(a1);
}

void *sub_10028EBD8@<X0>(int a1@<W0>, void *a2@<X8>)
{
  if (a1) {
    dispatch_source_t v2 = "Resume";
  }
  else {
    dispatch_source_t v2 = "Suspend";
  }
  return sub_100004950(a2, v2);
}

void sub_10028EBF8(uint64_t *a1)
{
  dispatch_assert_queue_V2((dispatch_queue_t)a1[5]);
  if (!*((unsigned char *)a1 + 20)) {
    return;
  }
  if (!*((unsigned char *)a1 + 212)) {
    sub_100428824();
  }
  int v2 = *((_DWORD *)a1 + 52);
  if (!*((unsigned char *)a1 + 220))
  {
    if (v2 == 1) {
      goto LABEL_11;
    }
LABEL_15:
    uint64_t v7 = qword_1008ABDE0;
    if (a1[9])
    {
      uint64_t v8 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v9 = v2 ? "Resume" : "Suspend";
        sub_100004950(buf, v9);
        id v10 = v21 >= 0 ? buf : *(uint8_t **)buf;
        uint64_t v11 = a1[31];
        *(_DWORD *)uint64_t v22 = 136315394;
        uint64_t v23 = v10;
        __int16 v24 = 2048;
        uint64_t v25 = v11;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#backoff,To deliver recommendation %s with event id %lld", v22, 0x16u);
        if (v21 < 0) {
          operator delete(*(void **)buf);
        }
      }

      *((_DWORD *)a1 + 54) = v2;
      *((unsigned char *)a1 + 220) = 1;
      double v12 = sub_100006C38();
      *((double *)a1 + 24) = v12;
      *((unsigned char *)a1 + 200) = 1;
      uint64_t v13 = *a1;
      uint64_t v14 = (std::__shared_weak_count *)a1[1];
      if (v14) {
        atomic_fetch_add_explicit(&v14->__shared_weak_owners_, 1uLL, memory_order_relaxed);
      }
      uint64_t v15 = a1[18];
      block[0] = _NSConcreteStackBlock;
      block[1] = 3321888768;
      block[2] = sub_10028F050;
      block[3] = &unk_10085D088;
      void block[4] = a1;
      void block[5] = v13;
      unsigned __int8 v17 = v14;
      if (v14) {
        atomic_fetch_add_explicit(&v14->__shared_weak_owners_, 1uLL, memory_order_relaxed);
      }
      double v18 = v12;
      int v19 = v2;
      dispatch_async(v15, block);
      if (v17) {
        std::__shared_weak_count::__release_weak(v17);
      }
      if (v14) {
        std::__shared_weak_count::__release_weak(v14);
      }
    }
    else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      dispatch_time_t v5 = "#backoff,Delivering recommendation fails because of invalid BackoffResumeHandler";
      uint64_t v6 = v7;
      goto LABEL_14;
    }
    return;
  }
  int v3 = *((_DWORD *)a1 + 54);
  if (v3 == v2)
  {
    uint64_t v4 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      dispatch_time_t v5 = "#backoff,Not delivering a duplicate recommendation.";
LABEL_13:
      uint64_t v6 = v4;
LABEL_14:
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, v5, buf, 2u);
      return;
    }
    return;
  }
  if (v2 != 1 || !v3) {
    goto LABEL_15;
  }
LABEL_11:
  uint64_t v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    dispatch_time_t v5 = "#backoff,Should not give a 'resume' decision if never told to 'backoff'. Return.";
    goto LABEL_13;
  }
}

void sub_10028EEBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10028EED4(uint64_t a1)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 40));
  sub_10028F14C(a1);
  dispatch_source_t v2 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0, 0, *(dispatch_queue_t *)(a1 + 40));
  int v3 = *(void **)(a1 + 160);
  *(void *)(a1 + 160) = v2;

  uint64_t v4 = *(NSObject **)(a1 + 160);
  dispatch_time_t v5 = dispatch_time(0, llround(*(double *)(a1 + 24) * 1000000000.0));
  dispatch_source_set_timer(v4, v5, 0xFFFFFFFFFFFFFFFFLL, 0x989680uLL);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(std::__shared_weak_count **)(a1 + 8);
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_weak_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v8 = *(void *)(a1 + 248);
  uint64_t v9 = *(NSObject **)(a1 + 160);
  handler[0] = _NSConcreteStackBlock;
  handler[1] = 3321888768;
  handler[2] = sub_10028F1D4;
  handler[3] = &unk_10085D0B8;
  handler[4] = a1;
  handler[5] = v6;
  uint64_t v13 = v7;
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_weak_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v14 = v8;
  dispatch_source_set_event_handler(v9, handler);
  dispatch_resume(*(dispatch_object_t *)(a1 + 160));
  id v10 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#backoff,Re-armed delayed processing timer.", v11, 2u);
  }
  if (v13) {
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v7) {
    std::__shared_weak_count::__release_weak(v7);
  }
}

void sub_10028F050(uint64_t a1)
{
  dispatch_source_t v2 = *(std::__shared_weak_count **)(a1 + 48);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = std::__shared_weak_count::lock(v2);
    if (v4)
    {
      dispatch_time_t v5 = v4;
      if (*(void *)(a1 + 40) && *(void *)(v3 + 72)) {
        sub_10028F0EC(v3 + 48, *(_DWORD *)(a1 + 64), *(_DWORD *)(v3 + 184), *(double *)(a1 + 56));
      }
      sub_10001A970(v5);
    }
  }
}

void sub_10028F0D8(_Unwind_Exception *a1)
{
  sub_10001A970(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10028F0EC(uint64_t a1, int a2, int a3, double a4)
{
  double v8 = a4;
  int v6 = a3;
  int v7 = a2;
  uint64_t v4 = *(void *)(a1 + 24);
  if (!v4) {
    sub_100027894();
  }
  return (*(uint64_t (**)(uint64_t, double *, int *, int *))(*(void *)v4 + 48))(v4, &v8, &v7, &v6);
}

void sub_10028F14C(uint64_t a1)
{
  if (*(void *)(a1 + 160))
  {
    dispatch_source_t v2 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#backoff,Canceling delayed processing timer.", v4, 2u);
    }
    dispatch_source_cancel(*(dispatch_source_t *)(a1 + 160));
    uint64_t v3 = *(void **)(a1 + 160);
    *(void *)(a1 + 160) = 0;
  }
}

void sub_10028F1D4(void *a1)
{
  dispatch_source_t v2 = (std::__shared_weak_count *)a1[6];
  if (v2)
  {
    uint64_t v3 = (uint64_t *)a1[4];
    uint64_t v4 = std::__shared_weak_count::lock(v2);
    if (v4)
    {
      dispatch_time_t v5 = v4;
      if (a1[5])
      {
        if (a1[7] == v3[31]) {
          sub_10028F14C((uint64_t)v3);
        }
        sub_10028EBF8(v3);
      }
      sub_10001A970(v5);
    }
  }
}

void sub_10028F260(_Unwind_Exception *a1)
{
  sub_10001A970(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10028F274(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_10028F30C(void **a1@<X1>, uint64_t a2@<X2>, char *a3@<X3>, unsigned __int8 *a4@<X4>, void *a5@<X8>)
{
  id v10 = operator new(0x140uLL);
  sub_10028F3A0(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;

  sub_10001ABCC((uint64_t)a5, v10 + 3, (uint64_t)(v10 + 3));
}

void sub_10028F38C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_10028F3A0(void *a1, void **a2, uint64_t a3, char *a4, unsigned __int8 *a5)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_10085D0F8;
  sub_10028F49C((uint64_t)&v7, (uint64_t)(a1 + 3), a2, a3, a4, a5);
  return a1;
}

void sub_10028F408(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_10028F41C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10085D0F8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10028F43C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10085D0F8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_10028F490(uint64_t a1)
{
  return sub_1001F0418(a1 + 24);
}

void *sub_10028F49C(uint64_t a1, uint64_t a2, void **a3, uint64_t a4, char *a5, unsigned __int8 *a6)
{
  id v10 = *a3;
  uint64_t v11 = (char *)operator new(0x20uLL);
  *(void *)uint64_t v11 = off_10085D148;
  *(_OWORD *)(v11 + 8) = *(_OWORD *)a4;
  *((void *)v11 + 3) = *(void *)(a4 + 16);
  v13[3] = v11;
  sub_1001F032C(a2, v10, (uint64_t)v13, *a5, *a6);
  return sub_1001A62F8(v13);
}

void sub_10028F568(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1001A62F8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_10028F580()
{
}

__n128 sub_10028F594(uint64_t a1)
{
  dispatch_source_t v2 = (char *)operator new(0x20uLL);
  *(void *)dispatch_source_t v2 = off_10085D148;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((void *)v2 + 3) = *(void *)(a1 + 24);
  return result;
}

__n128 sub_10028F5E8(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_10085D148;
  __n128 result = *(__n128 *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_10028F620(void *a1, unsigned int *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = (uint64_t (*)(void *, void))a1[1];
  uint64_t v4 = (void *)(a1[3] + (v2 >> 1));
  if (v2) {
    uint64_t v3 = *(uint64_t (**)(void *, void))(*v4 + v3);
  }
  return v3(v4, *a2);
}

uint64_t sub_10028F64C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_10028F68C()
{
}

uint64_t sub_10028F698(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_10028F730(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  a1[3] = 0;
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_10028F7B8(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  a1[3] = 0;
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_10028FAD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10028FB64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10028FC90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10028FD2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10028FDD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10028FE7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10028FF2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10028FFE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100290144(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002902CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100290400(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10029051C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

CFStringRef sub_100290610(uint64_t a1)
{
  if (!a1) {
    return @"Default";
  }
  if (a1 != 10) {
    sub_100428850();
  }
  return @"Large";
}

void sub_100290760(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v6 = a1;
  __n128 __p = 0;
  double v45 = 0;
  uint64_t v46 = 0;
  char v7 = [v6 discoveryToken];
  double v8 = [v7 rawToken];

  id v43 = v8;
  id v9 = [v8 length];
  id v10 = 0;
  if (v9)
  {
    sub_10003F834((unint64_t *)&__p, (size_t)v9);
    id v10 = __p;
  }
  else if (v45 != __p)
  {
    double v45 = __p;
  }
  [v8 getBytes:v10 length:[v8 length]];
  unint64_t v11 = (unint64_t)[v6 relationship] - 1;
  if (v11 >= 8) {
    int v12 = 0;
  }
  else {
    int v12 = dword_1004BDD1C[v11];
  }
  [v6 distance];
  float v14 = v13;
  float v15 = NINearbyObjectDistanceNotAvailable;
  [v6 direction];
  float32x4_t v40 = v16;
  simd_float3 v39 = NINearbyObjectDirectionNotAvailable;
  if (v14 == v15)
  {
    char v19 = 0;
    int v18 = 0;
  }
  else
  {
    [v6 distance];
    int v18 = v17;
    char v19 = 1;
  }
  uint32x4_t v20 = (uint32x4_t)vceqq_f32(v40, (float32x4_t)v39);
  v20.i32[3] = v20.i32[2];
  if ((vminvq_u32(v20) & 0x80000000) != 0)
  {
    int v24 = 0;
  }
  else
  {
    [v6 direction];
    float v41 = v21;
    [v6 direction];
    simd_float3 v39 = v22;
    [v6 direction];
    double v2 = v41;
    double v3 = v39.f32[1];
    double v4 = v23;
    int v24 = 1;
  }
  [v6 signalStrength:v39];
  if (v25 == *(double *)&NINearbyObjectSignalStrengthNotAvailable)
  {
    uint64_t v28 = 0;
    uint64_t v27 = 0;
  }
  else
  {
    [v6 signalStrength];
    uint64_t v27 = v26;
    uint64_t v28 = 1;
  }
  unsigned int v29 = [v6 remoteTxAntennaMask];
  if (v29 == NINearbyObjectRemoteTxAntennaMaskNotAvailable)
  {
    __int16 v30 = 0;
    unsigned __int16 v31 = 0;
  }
  else
  {
    unsigned __int16 v31 = (unsigned __int16)[v6 remoteTxAntennaMask];
    __int16 v30 = 1;
  }
  [v6 boundedRegionRange];
  uint64_t v42 = v28;
  int v33 = v12;
  if (v32 == *(float *)&NINearbyObjectRegionBoundaryRangeNotAvailable)
  {
    uint64_t v36 = 0;
    double v35 = 0.0;
  }
  else
  {
    [v6 boundedRegionRange];
    double v35 = v34;
    uint64_t v36 = 1;
  }
  long long v37 = [v6 discoveryToken];
  id v38 = [v37 hash];
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  sub_10016D488((void *)a2, __p, (uint64_t)v45, v45 - (unsigned char *)__p);
  *(void *)(a2 + 24) = v38;
  *(_DWORD *)(a2 + 32) = v33;
  *(_DWORD *)(a2 + 36) = v18;
  *(unsigned char *)(a2 + 40) = v19;
  *(_DWORD *)(a2 + 48) = v24;
  *(double *)(a2 + 56) = v2;
  *(double *)(a2 + 64) = v3;
  *(double *)(a2 + 72) = v4;
  *(unsigned char *)(a2 + 80) = v24;
  *(void *)(a2 + 88) = v27;
  *(void *)(a2 + 96) = v42;
  *(_WORD *)(a2 + 104) = v31 | (v30 << 8);
  *(_OWORD *)(a2 + 112) = 0u;
  *(_OWORD *)(a2 + 128) = 0u;
  *(double *)(a2 + 144) = v35;
  *(void *)(a2 + 152) = v36;

  if (__p)
  {
    double v45 = __p;
    operator delete(__p);
  }
}

void sub_100290A64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *__p, uint64_t a15)
{
  if (__p) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_100290ADC()
{
  v10[0] = xmmword_1004BDCA8;
  v10[1] = unk_1004BDCB8;
  sub_1001A003C((uint64_t)&unk_1008A6E10, (int *)v10, 4);
  xmmword_1008A6E28 = xmmword_1004B7660;
  unk_1008A6E38 = xmmword_1004B7670;
  qword_1008A6E50 = 0;
  unk_1008A6E58 = 0;
  qword_1008A6E48 = 0x3FD999999999999ALL;
  unk_1008A6E60 = xmmword_1004B7680;
  dword_1008A6E70 = 5;
  qword_1008A6E78 = 0x4000000000000000;
  dword_1008A6E80 = 5;
  byte_1008A6E88 = 0;
  unk_1008A6E8C = 0x30000000ALL;
  xmmword_1008A6E98 = xmmword_1004B7690;
  unk_1008A6EA8 = xmmword_1004B76A0;
  xmmword_1008A6EB8 = xmmword_1004B76B0;
  qword_1008A6EC8 = 0x3FE3333333333333;
  dword_1008A6ED0 = 3;
  xmmword_1008A6ED8 = xmmword_1004B76C0;
  unk_1008A6EE8 = xmmword_1004B76A0;
  xmmword_1008A6EF8 = xmmword_1004B7690;
  qword_1008A6F08 = 0x3FE3333333333333;
  byte_1008A6F10 = 0;
  xmmword_1008A6F18 = xmmword_1004B76D0;
  unk_1008A6F28 = xmmword_1004B76E0;
  __asm { FMOV            V0.2D, #1.0 }
  long long v8 = _Q0;
  xmmword_1008A6F38 = _Q0;
  qword_1008A6F48 = 0xBFD3333333333333;
  xmmword_1008A6F50 = xmmword_1004B76F0;
  qword_1008A6F60 = 0x3E99999A40000000;
  xmmword_1008A6F68 = xmmword_1004B7670;
  qword_1008A6F80 = 0;
  unk_1008A6F88 = 0;
  qword_1008A6F78 = 0x3FD999999999999ALL;
  xmmword_1008A6F90 = xmmword_1004B7680;
  dword_1008A6FA0 = 5;
  qword_1008A6FA8 = 0x4000000000000000;
  dword_1008A6FB0 = 4;
  qword_1008A6FB8 = 0x300000008;
  qword_1008A6FC0 = 0xC04E800000000000;
  unint64_t v9 = 0xC04E800000000000;
  sub_1001A02EC((uint64_t)algn_1008A6FC8, (double *)&v9, 1);
  xmmword_1008A6FE0 = xmmword_1004B7700;
  qword_1008A6FF0 = 0x4024000000000000;
  dword_1008A6FF8 = 45;
  byte_1008A7000 = 0;
  byte_1008A7018 = 0;
  qword_1008A7020 = 0;
  byte_1008A7028 = 0;
  dword_1008A702C = 1;
  byte_1008A7030 = 1;
  xmmword_1008A7038 = xmmword_1004B7710;
  unk_1008A7048 = xmmword_1004B7720;
  xmmword_1008A7058 = v8;
  qword_1008A7068 = 0xC059000000000000;
  xmmword_1008A7070 = xmmword_1004B7730;
  qword_1008A7080 = (uint64_t)vdup_n_s32(0x3DCCCCCDu);
  xmmword_1008A7088 = xmmword_1004B7670;
  qword_1008A7098 = 0x3FD999999999999ALL;
  qword_1008A70A8 = 0;
  qword_1008A70A0 = 0;
  xmmword_1008A70B0 = xmmword_1004B7680;
  dword_1008A70C0 = 5;
  qword_1008A70C8 = 0x4000000000000000;
  dword_1008A70D0 = 10;
  qword_1008A70D8 = 0x4034000000000000;
  dword_1008A70E0 = 3;
  xmmword_1008A70E8 = xmmword_1004B7740;
  __cxa_atexit((void (*)(void *))sub_10019E4F8, &unk_1008A6E10, (void *)&_mh_execute_header);
  __cxa_atexit((void (*)(void *))nullsub_72, &off_10089F260, (void *)&_mh_execute_header);
  __cxa_atexit((void (*)(void *))nullsub_73, &off_10089F268, (void *)&_mh_execute_header);
  qword_1008A7100 = 0;
  unk_1008A7108 = 0;
  qword_1008A70F8 = 0;
  id v6 = operator new(0x40uLL);
  qword_1008A7100 = (uint64_t)(v6 + 4);
  unk_1008A7108 = v6 + 4;
  _OWORD *v6 = xmmword_1004BDCC8;
  v6[1] = unk_1004BDCD8;
  _OWORD v6[2] = xmmword_1004BDCE8;
  v6[3] = unk_1004BDCF8;
  qword_1008A70F8 = (uint64_t)v6;
  __cxa_atexit((void (*)(void *))sub_100032C1C, &qword_1008A70F8, (void *)&_mh_execute_header);
  qword_1008A7118 = 0;
  unk_1008A7120 = 0;
  qword_1008A7110 = 0;
  char v7 = operator new(0x10uLL);
  qword_1008A7118 = (uint64_t)(v7 + 1);
  unk_1008A7120 = v7 + 1;
  *char v7 = xmmword_1004BDD08;
  qword_1008A7110 = (uint64_t)v7;
  __cxa_atexit((void (*)(void *))sub_100032C1C, &qword_1008A7110, (void *)&_mh_execute_header);
}

void sub_100290E9C(_Unwind_Exception *a1)
{
  sub_10003E96C(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

void sub_100290F10(id a1)
{
  os_log_t v1 = os_log_create("com.apple.NearbyInteraction", "LocalDeviceInteraction");
  double v2 = (void *)qword_1008A7128;
  qword_1008A7128 = (uint64_t)v1;
}

void sub_100291128(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10029119C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (+[NIPlatformInfo isInternalBuild])
  {
    double v4 = *(NSObject **)(a1 + 32);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      int v6 = 138412290;
      id v7 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "setAsyncLocalDeviceInteractableDiscoveryTokens:completion replied error: %@", (uint8_t *)&v6, 0xCu);
    }
  }
  uint64_t v5 = *(void *)(a1 + 48);
  if (v5) {
    (*(void (**)(uint64_t, id))(v5 + 16))(v5, v3);
  }
  [*(id *)(a1 + 40) invalidate];
}

void sub_10029127C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002913F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_100291444(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (+[NIPlatformInfo isInternalBuild])
  {
    id v7 = *(id *)(a1 + 32);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v9[0] = 67109378;
      v9[1] = [v5 count];
      __int16 v10 = 2112;
      id v11 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "getAsyncInteractableDiscoveryTokens: replied %d tokens. Server error: %@", (uint8_t *)v9, 0x12u);
    }
  }
  uint64_t v8 = *(void *)(a1 + 48);
  if (v8) {
    (*(void (**)(uint64_t, id, id))(v8 + 16))(v8, v5, v6);
  }
  [*(id *)(a1 + 40) invalidate];
}

void sub_100291554(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002916DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_10029172C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (+[NIPlatformInfo isInternalBuild])
  {
    id v7 = *(id *)(a1 + 32);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v9[0] = 67109378;
      v9[1] = [v5 count];
      __int16 v10 = 2112;
      id v11 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "getAsyncActivelyInteractingDiscoveryTokens: replied %d tokens. Server error: %@", (uint8_t *)v9, 0x12u);
    }
  }
  uint64_t v8 = *(void *)(a1 + 48);
  if (v8) {
    (*(void (**)(uint64_t, id, id))(v8 + 16))(v8, v5, v6);
  }
  [*(id *)(a1 + 40) invalidate];
}

void sub_10029183C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100291BE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100291C78(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100291C88(uint64_t a1)
{
}

void sub_100291C90(uint64_t a1, void *a2)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), a2);
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100292030(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id a30)
{
  long long v37 = v36;

  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a17, 8);

  _Unwind_Resume(a1);
}

void sub_1002920BC(uint64_t a1, void *a2)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), a2);
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_10029246C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100292504(uint64_t a1, void *a2)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), a2);
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1002928F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id a28)
{
  float v34 = v32;

  _Block_object_dispose(&a17, 8);
  _Block_object_dispose(&a23, 8);

  _Block_object_dispose((const void *)(v33 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_100292988(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
  uint64_t v7 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v12 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
  __int16 v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
  id v11 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100292DB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id a28)
{
  float v34 = v32;

  _Block_object_dispose(&a17, 8);
  _Block_object_dispose(&a23, 8);

  _Block_object_dispose((const void *)(v33 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_100292E48(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
  uint64_t v7 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v12 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
  __int16 v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
  id v11 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100293250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id a28)
{
  float v34 = v32;

  _Block_object_dispose(&a17, 8);
  _Block_object_dispose(&a23, 8);

  _Block_object_dispose((const void *)(v33 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1002932D8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
  uint64_t v7 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v12 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
  __int16 v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
  id v11 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void *sub_100293384@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085D450[a1]);
}

void *sub_100293398@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085D4A8[a1]);
}

void *sub_1002933AC@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085D4F0[a1]);
}

void *sub_1002933C0@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085D510[a1]);
}

uint64_t sub_1002933D4(uint64_t a1)
{
  for (uint64_t i = 0; i != -96; i -= 48)
  {
    uint64_t v3 = a1 + i;
    if (*(char *)(a1 + i + 95) < 0) {
      operator delete(*(void **)(v3 + 72));
    }
    if (*(char *)(v3 + 71) < 0) {
      operator delete(*(void **)(v3 + 48));
    }
  }
  return a1;
}

uint64_t sub_100293434(uint64_t a1, long long *a2, uint64_t *a3, uint64_t *a4, void *a5)
{
  *(void *)a1 = off_10085D348;
  *(void *)(a1 + 8) = 850045863;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(void *)(a1 + 80) = 0;
  if (*((char *)a2 + 23) < 0)
  {
    sub_100002DE4((unsigned char *)(a1 + 88), *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v9 = *a2;
    *(void *)(a1 + 104) = *((void *)a2 + 2);
    *(_OWORD *)(a1 + 88) = v9;
  }
  uint64_t v10 = *a3;
  *a3 = 0;
  uint64_t v12 = *a4;
  uint64_t v11 = a4[1];
  *(void *)(a1 + 112) = v10;
  *(void *)(a1 + 120) = v12;
  *(void *)(a1 + 128) = v11;
  if (v11) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v11 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v13 = a5[1];
  *(void *)(a1 + 136) = *a5;
  *(void *)(a1 + 144) = v13;
  if (v13) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v13 + 8), 1uLL, memory_order_relaxed);
  }
  float v14 = dispatch_queue_create("com.apple.nearbyd.Rose.ProtobufLogger", 0);
  *(void *)(a1 + 152) = v14;
  if (!*(void *)(a1 + 120)) {
    __assert_rtn("Logger", "PRProtobufLogger.cpp", 222, "fTimestampSrc != nullptr");
  }
  if (*(void *)(a1 + 112))
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 0x40000000;
    block[2] = sub_10029363C;
    block[3] = &unk_10085D3B8;
    void block[4] = a1;
    dispatch_async(v14, block);
  }
  return a1;
}

void sub_1002935BC(_Unwind_Exception *a1)
{
  id v4 = *(std::__shared_weak_count **)(v1 + 80);
  if (v4) {
    sub_10001A970(v4);
  }
  std::mutex::~mutex(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_10029363C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  (*(void (**)(void))(**(void **)(v1 + 112) + 16))(*(void *)(v1 + 112));
  uint64_t result = *(void *)(v1 + 112);
  *(void *)(v1 + 112) = 0;
  if (result)
  {
    uint64_t v3 = *(uint64_t (**)(void))(*(void *)result + 8);
    return v3();
  }
  return result;
}

uint64_t sub_1002936D0(uint64_t a1)
{
  *(void *)a1 = off_10085D348;
  uint64_t v2 = *(void *)(a1 + 72);
  if (v2 && sub_1000D5134(v2)) {
    sub_1000D509C(*(void **)(a1 + 72));
  }
  uint64_t v3 = *(void *)(a1 + 112);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 16))(v3);
  }
  id v4 = *(std::__shared_weak_count **)(a1 + 144);
  if (v4) {
    sub_10001A970(v4);
  }
  id v5 = *(std::__shared_weak_count **)(a1 + 128);
  if (v5) {
    sub_10001A970(v5);
  }
  uint64_t v6 = *(void *)(a1 + 112);
  *(void *)(a1 + 112) = 0;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  if (*(char *)(a1 + 111) < 0) {
    operator delete(*(void **)(a1 + 88));
  }
  uint64_t v7 = *(std::__shared_weak_count **)(a1 + 80);
  if (v7) {
    sub_10001A970(v7);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 8));
  return a1;
}

void sub_1002937C8(uint64_t a1)
{
  sub_1002936D0(a1);

  operator delete();
}

uint64_t sub_100293800(uint64_t a1)
{
  uint64_t v2 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  uint64_t v3 = *(void *)(a1 + 72);
  if (v3 && (sub_1000D5134(v3) & 1) != 0)
  {
    uint64_t v4 = 1;
  }
  else
  {
    int v8 = 0;
    sub_1002A44EC((uint64_t *)(a1 + 136), a1 + 88, (uint64_t)&v8, &v9);
    long long v5 = v9;
    long long v9 = 0uLL;
    uint64_t v6 = *(std::__shared_weak_count **)(a1 + 80);
    *(_OWORD *)(a1 + 72) = v5;
    if (v6)
    {
      sub_10001A970(v6);
      if (*((void *)&v9 + 1)) {
        sub_10001A970(*((std::__shared_weak_count **)&v9 + 1));
      }
    }
    uint64_t v4 = sub_1000D5134(*(void *)(a1 + 72));
  }
  std::mutex::unlock(v2);
  return v4;
}

void sub_1002938A4(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002938BC(uint64_t a1, const std::string *a2, const std::string *a3)
{
  sub_100132F78(v13);
  if (sub_100293AD0((uint64_t)v13, *(void *)(a1 + 120)))
  {
    v15 |= 2u;
    uint64_t v6 = v14;
    if (!v14) {
      operator new();
    }
    *(_DWORD *)(v14 + 44) |= 2u;
    uint64_t v7 = *(void *)(v6 + 24);
    if (!v7) {
      operator new();
    }
    *(_DWORD *)(v7 + 392) |= 1u;
    uint64_t v8 = *(void *)(v7 + 16);
    if (!v8) {
      operator new();
    }
    *(_DWORD *)(v8 + 36) |= 1u;
    long long v9 = *(std::string **)(v8 + 16);
    if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v9, a2);
    *(_DWORD *)(v8 + 36) |= 2u;
    uint64_t v10 = *(std::string **)(v8 + 24);
    if (v10 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v10, a3);
    uint64_t v11 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v13);
  }
  else
  {
    uint64_t v11 = 0;
  }
  sub_100133D9C(v13);
  return v11;
}

void sub_100293A70()
{
}

BOOL sub_100293AD0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)a2 + 16))(&v8, a2);
  int v3 = v10;
  if (v10)
  {
    *(_DWORD *)(a1 + 60) |= 1u;
    uint64_t v4 = *(void *)(a1 + 40);
    if (!v4) {
      operator new();
    }
    int v5 = *(_DWORD *)(v4 + 52);
    *(_OWORD *)(v4 + 16) = v8;
    uint64_t v6 = v9;
    *(_DWORD *)(v4 + 52) = v5 | 7;
    *(void *)(v4 + 32) = v6;
  }
  return v3 != 0;
}

void sub_100293B90()
{
}

uint64_t sub_100293BB4(uint64_t a1, wireless_diagnostics::google::protobuf::MessageLite *a2)
{
  uint64_t v4 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  uint64_t v5 = *(void *)(a1 + 72);
  if (!v5 || (sub_1000D5134(v5) & 1) == 0)
  {
    uint64_t v9 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
    {
      wireless_diagnostics::google::protobuf::MessageLite::SerializeAsString(&buf, a2);
      sub_1004288A8((char *)&buf, (uint8_t *)__p, v9);
    }
    goto LABEL_8;
  }
  int v6 = sub_1000D515C(*(uint64_t **)(a1 + 72), a2);
  int v7 = sub_1000D5410(*(void **)(a1 + 72));
  if ((v6 & v7 & 1) == 0)
  {
    unsigned __int8 v10 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
    {
      uint64_t v12 = *(void *)(a1 + 72);
      if (*(char *)(v12 + 39) < 0)
      {
        sub_100002DE4(__p, *(void **)(v12 + 16), *(void *)(v12 + 24));
      }
      else
      {
        *(_OWORD *)__n128 __p = *(_OWORD *)(v12 + 16);
        uint64_t v15 = *(void *)(v12 + 32);
      }
      uint64_t v13 = __p;
      if (v15 < 0) {
        uint64_t v13 = (void **)__p[0];
      }
      LODWORD(buf) = 67109634;
      HIDWORD(buf) = v6;
      __int16 v17 = 1024;
      int v18 = v7;
      __int16 v19 = 2080;
      uint32x4_t v20 = v13;
      _os_log_error_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "pblogger, logProtobuf: append:%d flush:%d error writing to %s", (uint8_t *)&buf, 0x18u);
      if (SHIBYTE(v15) < 0) {
        operator delete(__p[0]);
      }
    }
LABEL_8:
    uint64_t v8 = 0;
    goto LABEL_9;
  }
  uint64_t v8 = 1;
LABEL_9:
  std::mutex::unlock(v4);
  return v8;
}

void sub_100293D6C(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100293D98(uint64_t a1, uint64_t a2, double a3)
{
  if (*(_DWORD *)a2 != 1) {
    return 0;
  }
  if (!*(unsigned char *)(a2 + 12)) {
    sub_10042891C();
  }
  unsigned int v6 = sub_100294148(*(unsigned int *)(a2 + 4));
  unsigned int v7 = *(_DWORD *)(a2 + 8) != 0;
  sub_1000716D8(v29);
  if (!sub_100071A10(v6))
  {
    __int16 v17 = "::CLP::LogEntry::Nearbyd::AccessoryType_IsValid(value)";
    int v18 = 3308;
    __int16 v19 = "set_accessory";
    goto LABEL_26;
  }
  v32 |= 1u;
  unsigned int v30 = v6;
  if (!sub_100071A2C(v7))
  {
    __int16 v17 = "::CLP::LogEntry::Nearbyd::AccessoryActivity_IsValid(value)";
    int v18 = 3331;
    __int16 v19 = "set_activity";
LABEL_26:
    __assert_rtn(v19, "CLPNearbyd.pb.h", v18, v17);
  }
  v32 |= 2u;
  unsigned int v31 = v7;
  sub_100132F78(v26);
  sub_100071C20((uint64_t)v23, (uint64_t)v29);
  if (!sub_100293AD0((uint64_t)v26, *(void *)(a1 + 120))
    && os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_100428948();
  }
  v28 |= 2u;
  uint64_t v8 = v27;
  if (!v27) {
    operator new();
  }
  *(_DWORD *)(v27 + 44) |= 2u;
  uint64_t v9 = *(void *)(v8 + 24);
  if (!v9) {
    operator new();
  }
  *(_DWORD *)(v9 + 392) |= 0x400u;
  uint64_t v10 = *(void *)(v9 + 88);
  if (!v10) {
    operator new();
  }
  *(_DWORD *)(v10 + 36) |= 2u;
  uint64_t v11 = *(_DWORD **)(v10 + 24);
  if (!v11) {
    operator new();
  }
  unsigned int v12 = v24;
  if (!sub_100071A10(v24))
  {
    uint32x4_t v20 = "::CLP::LogEntry::Nearbyd::AccessoryType_IsValid(value)";
    int v21 = 3308;
    simd_float3 v22 = "set_accessory";
    goto LABEL_29;
  }
  v11[7] |= 1u;
  v11[4] = v12;
  unsigned int v13 = v25;
  if (!sub_100071A2C(v25))
  {
    uint32x4_t v20 = "::CLP::LogEntry::Nearbyd::AccessoryActivity_IsValid(value)";
    int v21 = 3331;
    simd_float3 v22 = "set_activity";
LABEL_29:
    __assert_rtn(v22, "CLPNearbyd.pb.h", v21, v20);
  }
  v11[7] |= 2u;
  v11[5] = v13;
  *(_DWORD *)(v9 + 392) |= 0x400u;
  uint64_t v14 = *(void *)(v9 + 88);
  if (!v14) {
    operator new();
  }
  sub_100071C24((uint64_t)v23);
  *(_DWORD *)(v14 + 36) |= 1u;
  *(double *)(v14 + 16) = a3;
  uint64_t v15 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v26);
  sub_100133D9C(v26);
  sub_100071C24((uint64_t)v29);
  return v15;
}

void sub_1002940A8()
{
}

uint64_t sub_100294148(uint64_t result)
{
  switch((int)result)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return result;
    default:
      if (result == 999) {
        unsigned int v1 = 999;
      }
      else {
        unsigned int v1 = 0;
      }
      if (result == 998) {
        uint64_t result = 998;
      }
      else {
        uint64_t result = v1;
      }
      break;
  }
  return result;
}

uint64_t sub_1002941C0(uint64_t a1, int a2, double a3)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_1004289B0();
  }
  sub_100132F78(v10);
  uint64_t v6 = sub_1002942A4((uint64_t)v10, 1u, *(void *)(a1 + 120));
  int v7 = *(_DWORD *)(v6 + 36);
  *(_DWORD *)(v6 + 28) = a2;
  *(_DWORD *)(v6 + 36) = v7 | 6;
  *(double *)(v6 + 16) = a3;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_10042897C();
  }
  uint64_t v8 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v10);
  sub_100133D9C(v10);
  return v8;
}

void sub_100294290(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1002942A4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  if (!sub_100293AD0(a1, a3) && os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
    sub_100428948();
  }
  *(_DWORD *)(a1 + 60) |= 2u;
  uint64_t v5 = *(void *)(a1 + 48);
  if (!v5) {
    operator new();
  }
  *(_DWORD *)(v5 + 44) |= 2u;
  uint64_t v6 = *(void *)(v5 + 24);
  if (!v6) {
    operator new();
  }
  *(_DWORD *)(v6 + 392) |= 0x100u;
  uint64_t v7 = *(void *)(v6 + 72);
  if (!v7) {
    operator new();
  }
  if (!sub_100071A38(a2)) {
    sub_10040FBFC();
  }
  *(_DWORD *)(v7 + 36) |= 1u;
  *(_DWORD *)(v7 + 24) = a2;
  *(_DWORD *)(v6 + 392) |= 0x100u;
  if (!*(void *)(v6 + 72)) {
    operator new();
  }
  return *(void *)(v6 + 72);
}

void sub_100294408()
{
}

uint64_t sub_100294458(uint64_t a1, int a2, double a3)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100428A18();
  }
  sub_100132F78(v10);
  uint64_t v6 = sub_1002942A4((uint64_t)v10, 2u, *(void *)(a1 + 120));
  int v7 = *(_DWORD *)(v6 + 36);
  *(_DWORD *)(v6 + 28) = a2;
  *(_DWORD *)(v6 + 36) = v7 | 6;
  *(double *)(v6 + 16) = a3;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_1004289E4();
  }
  uint64_t v8 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v10);
  sub_100133D9C(v10);
  return v8;
}

void sub_100294528(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10029453C(uint64_t a1, int a2, double a3)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100428A80();
  }
  sub_100132F78(v10);
  uint64_t v6 = sub_1002942A4((uint64_t)v10, 5u, *(void *)(a1 + 120));
  int v7 = *(_DWORD *)(v6 + 36);
  *(_DWORD *)(v6 + 28) = a2;
  *(_DWORD *)(v6 + 36) = v7 | 6;
  *(double *)(v6 + 16) = a3;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100428A4C();
  }
  uint64_t v8 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v10);
  sub_100133D9C(v10);
  return v8;
}

void sub_10029460C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100294620(uint64_t a1, int a2, unsigned int a3, uint64_t a4)
{
  if (!sub_100293AD0(a1, a4) && os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
    sub_100428948();
  }
  *(_DWORD *)(a1 + 60) |= 2u;
  uint64_t v7 = *(void *)(a1 + 48);
  if (!v7) {
    operator new();
  }
  *(_DWORD *)(v7 + 44) |= 4u;
  uint64_t v8 = *(void *)(v7 + 32);
  if (!v8) {
    operator new();
  }
  *(_DWORD *)(v8 + 44) |= 1u;
  uint64_t v9 = *(_DWORD **)(v8 + 16);
  if (!v9) {
    operator new();
  }
  if (!sub_10008D5B0(a2)) {
    sub_10040FD5C();
  }
  v9[63] |= 1u;
  v9[4] = a2;
  if ((sub_10008D5C0(a3) & 1) == 0) {
    sub_10040FD30();
  }
  v9[63] |= 2u;
  v9[5] = a3;
  *(_DWORD *)(v8 + 44) |= 1u;
  if (!*(void *)(v8 + 16)) {
    operator new();
  }
  return *(void *)(v8 + 16);
}

void sub_1002947A8()
{
}

uint64_t sub_1002947F8(unsigned int *a1, unsigned int a2)
{
  uint64_t v4 = sub_10008D5D8(a2);
  if (v4)
  {
    *a1 = a2;
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_100428AB4();
  }
  return v4;
}

uint64_t sub_10029486C(uint64_t a1, const std::string *a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100428B50();
  }
  sub_100132F78(v9);
  uint64_t v4 = sub_100294620((uint64_t)v9, 1, 0, *(void *)(a1 + 120));
  *(_DWORD *)(v4 + 252) |= 4u;
  uint64_t v5 = *(void *)(v4 + 24);
  if (!v5) {
    operator new();
  }
  *(_DWORD *)(v5 + 28) |= 1u;
  uint64_t v6 = *(std::string **)(v5 + 16);
  if (v6 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v6, a2);
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100428B1C();
  }
  uint64_t v7 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v9);
  sub_100133D9C(v9);
  return v7;
}

void sub_1002949B0()
{
}

uint64_t sub_1002949E8(unsigned int *a1, unsigned int a2)
{
  uint64_t v4 = sub_10008D614(a2);
  if (v4)
  {
    *a1 = a2;
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_100428B84();
  }
  return v4;
}

BOOL sub_100294A5C(unsigned int *a1, unsigned int a2)
{
  BOOL v4 = sub_100071A2C(a2);
  if (v4)
  {
    *a1 = a2;
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_100428BEC();
  }
  return v4;
}

uint64_t sub_100294AD0(uint64_t a1, unsigned int a2, int a3)
{
  uint64_t v6 = sub_10008D5D8(a2);
  if (v6)
  {
    if ((sub_10008D5D8(a2) & 1) == 0) {
      sub_1004101D4();
    }
    int v7 = *(_DWORD *)(a1 + 32);
    *(_DWORD *)(a1 + 24) = a2;
    *(_DWORD *)(a1 + 32) = v7 | 3;
    uint64_t v8 = *(void *)(a1 + 16);
    if (!v8) {
      operator new();
    }
    *(_DWORD *)(v8 + 32) |= 2u;
    *(_DWORD *)(v8 + 24) = a3;
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_100428AB4();
  }
  return v6;
}

void sub_100294BA0()
{
}

uint64_t sub_100294BC4(uint64_t a1, uint64_t a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100428C88();
  }
  sub_100132F78(v18);
  uint64_t v4 = sub_100294620((uint64_t)v18, 2, 1u, *(void *)(a1 + 120));
  *(_DWORD *)(v4 + 252) |= 8u;
  uint64_t v5 = *(void *)(v4 + 32);
  if (!v5) {
    operator new();
  }
  if (*(char *)(a2 + 23) < 0) {
    sub_100002DE4(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  *(_DWORD *)(v5 + 68) |= 1u;
  uint64_t v6 = *(std::string **)(v5 + 16);
  if (v6 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v6, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  int v7 = *(_DWORD *)(v5 + 68);
  *(_DWORD *)(v5 + 24) = __rev16(*(unsigned __int16 *)(a2 + 24));
  int v8 = *(unsigned __int16 *)(a2 + 26);
  int v9 = v7 | 6;
  *(_DWORD *)(v5 + 68) = v7 | 6;
  *(_DWORD *)(v5 + 28) = v8;
  if (*(unsigned char *)(a2 + 96))
  {
    *(_DWORD *)(v5 + 32) = *(unsigned __int16 *)(a2 + 34);
    *(_DWORD *)(v5 + 36) = *(unsigned __int16 *)(a2 + 36);
    *(_DWORD *)(v5 + 68) = v7 | 0x3E;
    uint64_t v10 = *(std::string **)(v5 + 40);
    if (v10 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v10, (const std::string *)(a2 + 40));
    int v11 = *(_DWORD *)(v5 + 68);
    *(_DWORD *)(v5 + 48) = *(unsigned __int16 *)(a2 + 64);
    int v12 = *(unsigned __int8 *)(a2 + 66);
    *(_DWORD *)(v5 + 68) = v11 | 0xC0;
    *(_DWORD *)(v5 + 52) = v12;
    int v13 = *(_DWORD *)(a2 + 68);
    int v9 = v11 | 0x1C0;
    *(_DWORD *)(v5 + 68) = v11 | 0x1C0;
    *(_DWORD *)(v5 + 56) = v13;
  }
  uint64_t v14 = *(void *)(a2 + 104);
  if ((v14 & 0xFF00000000) != 0)
  {
    *(_DWORD *)(v5 + 68) = v9 | 0x200;
    *(_DWORD *)(v5 + 60) = v14;
  }
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100428C54();
  }
  uint64_t v15 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v18);
  sub_100133D9C(v18);
  return v15;
}

void sub_100294DFC()
{
}

void sub_100294E40(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  JUMPOUT(0x100294E30);
}

BOOL sub_100294E58(uint64_t a1, unsigned int a2)
{
  BOOL result = sub_100071A2C(a2);
  if (!result) {
    sub_1004100CC();
  }
  *(_DWORD *)(a1 + 88) |= 2u;
  *(_DWORD *)(a1 + 24) = a2;
  return result;
}

uint64_t sub_100294E9C(uint64_t a1, unsigned __int8 *a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100428CF0();
  }
  sub_100132F78(v25);
  uint64_t v4 = sub_100294620((uint64_t)v25, 1, 0x1Au, *(void *)(a1 + 120));
  *(_DWORD *)(v4 + 252) |= 0x8000000u;
  uint64_t v5 = *(void *)(v4 + 224);
  if (!v5) {
    operator new();
  }
  if (!a2[1]
    || !a2[345]
    || !a2[347]
    || !a2[350]
    || !a2[354]
    || !a2[357]
    || !a2[3]
    || !a2[5]
    || !a2[360]
    || !a2[370]
    || !a2[373]
    || !a2[375]
    || !a2[7]
    || !a2[78]
    || !a2[24])
  {
    simd_float3 v22 = qword_1008ABDE0;
    uint64_t v21 = 0;
    if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_40;
    }
    LOWORD(v24[0]) = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "pblogger, Test NMI range enable params not available", (uint8_t *)v24, 2u);
LABEL_39:
    uint64_t v21 = 0;
    goto LABEL_40;
  }
  unsigned int v6 = *a2;
  v24[0] = 0;
  if (!sub_100294A5C(v24, v6)) {
    goto LABEL_39;
  }
  sub_100294E58(v5, v24[0]);
  if (!a2[354]) {
    goto LABEL_41;
  }
  int v7 = *((unsigned __int16 *)a2 + 176);
  int v8 = *(_DWORD *)(v5 + 88);
  *(_DWORD *)(v5 + 88) = v8 | 4;
  *(_DWORD *)(v5 + 28) = v7;
  if (!a2[345]) {
    goto LABEL_41;
  }
  int v9 = a2[344];
  *(_DWORD *)(v5 + 88) = v8 | 0xC;
  *(_DWORD *)(v5 + 32) = v9;
  if (!a2[347]) {
    goto LABEL_41;
  }
  int v10 = a2[346];
  *(_DWORD *)(v5 + 88) = v8 | 0x1C;
  *(_DWORD *)(v5 + 36) = v10;
  if (!a2[350]) {
    goto LABEL_41;
  }
  int v11 = *((unsigned __int16 *)a2 + 174);
  *(_DWORD *)(v5 + 88) = v8 | 0x3C;
  *(_DWORD *)(v5 + 40) = v11;
  if (!a2[357]) {
    goto LABEL_41;
  }
  *(_DWORD *)(v5 + 44) = a2[356];
  int v12 = a2[370];
  *(_DWORD *)(v5 + 88) = v8 | 0xFC;
  *(_DWORD *)(v5 + 48) = v12;
  if (!a2[3]) {
    goto LABEL_41;
  }
  int v13 = a2[2];
  *(_DWORD *)(v5 + 88) = v8 | 0x1FC;
  *(_DWORD *)(v5 + 52) = v13;
  if (!a2[5]) {
    goto LABEL_41;
  }
  int v14 = a2[4];
  *(_DWORD *)(v5 + 88) = v8 | 0x3FC;
  *(_DWORD *)(v5 + 56) = v14;
  if (!a2[360]) {
    goto LABEL_41;
  }
  int v15 = *((unsigned __int16 *)a2 + 179);
  *(_DWORD *)(v5 + 88) = v8 | 0x7FC;
  *(_DWORD *)(v5 + 60) = v15;
  if (!a2[373]) {
    goto LABEL_41;
  }
  int v16 = a2[372];
  *(_DWORD *)(v5 + 88) = v8 | 0xFFC;
  *(_DWORD *)(v5 + 64) = v16;
  if (!a2[375]) {
    goto LABEL_41;
  }
  int v17 = a2[374];
  *(_DWORD *)(v5 + 88) = v8 | 0x1FFC;
  *(_DWORD *)(v5 + 68) = v17;
  if (!a2[7]
    || (int v18 = a2[6], *(_DWORD *)(v5 + 88) = v8 | 0x3FFC, *(_DWORD *)(v5 + 72) = v18, !a2[78])
    || (int v19 = *((unsigned __int16 *)a2 + 38), *(_DWORD *)(v5 + 88) = v8 | 0x7FFC, *(_DWORD *)(v5 + 76) = v19, !a2[24]))
  {
LABEL_41:
    sub_10000AE44();
  }
  char v20 = a2[22] & 1;
  *(_DWORD *)(v5 + 88) = v8 | 0xFFFC;
  *(unsigned char *)(v5 + 80) = v20;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100428CBC();
  }
  uint64_t v21 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v25);
LABEL_40:
  sub_100133D9C(v25);
  return v21;
}

void sub_1002951C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_100133D9C(va);
  _Unwind_Resume(a1);
}

uint64_t sub_100295200(uint64_t a1, unsigned __int8 *a2, uint64_t a3, char a4, char a5)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100428DC0();
  }
  sub_100132F78(v107);
  uint64_t v10 = sub_100294620((uint64_t)v107, 3, 0xDu, *(void *)(a1 + 120));
  *(_DWORD *)(v10 + 252) |= 0x8000u;
  uint64_t v11 = *(void *)(v10 + 128);
  if (!v11) {
    operator new();
  }
  *(_DWORD *)(v11 + 468) |= 1u;
  uint64_t v12 = *(void *)(v11 + 16);
  if (!v12) {
    operator new();
  }
  if ((sub_100294AD0(v12, *((unsigned __int16 *)a2 + 48), *((unsigned __int16 *)a2 + 49)) & 1) == 0
    || (unsigned int v106 = 0, (sub_1002949E8(&v106, a2[100]) & 1) == 0))
  {
    uint64_t v37 = 0;
    goto LABEL_33;
  }
  unsigned int v13 = v106;
  if ((sub_10008D614(v106) & 1) == 0) {
    __assert_rtn("set_session_type", "CLPRoseCommunicationEvent.pb.h", 10992, "::CLP::LogEntry::Rose::RoseCommunicationEvent::RoseSessionType_IsValid(value)");
  }
  int v14 = *(_DWORD *)(v11 + 468);
  *(_DWORD *)(v11 + 32) = v13;
  *(void *)(v11 + 168) = *((void *)a2 + 13);
  *(_DWORD *)(v11 + 36) = *((unsigned __int16 *)a2 + 56);
  int v15 = a2[114];
  v14 |= 0x100001Au;
  *(_DWORD *)(v11 + 468) = v14;
  *(_DWORD *)(v11 + 48) = v15;
  *((unsigned char *)&__str.__r_.__value_.__s + 23) = 8;
  __str.__r_.__value_.__r.__words[0] = *(void *)(a2 + 115);
  __str.__r_.__value_.__s.__data_[8] = 0;
  *(_DWORD *)(v11 + 468) = v14 | 0x20;
  int v16 = *(std::string **)(v11 + 40);
  if (v16 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v16, &__str);
  int v17 = *(_DWORD *)(v11 + 468);
  if (!*(_DWORD *)(v12 + 24))
  {
    uint64_t v18 = *((void *)a2 + 16);
    int v19 = v17 | 0x10000;
    *(_DWORD *)(v11 + 468) = v17 | 0x10000;
    *(void *)(v11 + 96) = v18;
    if (a2[528])
    {
      uint64_t v20 = *((void *)a2 + 65);
      *(_DWORD *)(v11 + 472) |= 4u;
      *(void *)(v11 + 248) = v20;
    }
    if (a2[544])
    {
      uint64_t v21 = *((void *)a2 + 67);
      *(_DWORD *)(v11 + 472) |= 8u;
      *(void *)(v11 + 256) = v21;
    }
    simd_float3 v22 = (uint64_t *)*((void *)a2 + 17);
    float v23 = (uint64_t *)*((void *)a2 + 18);
    if (v22 != v23)
    {
      char v103 = a5;
      uint64_t v104 = a1;
      unsigned int v24 = v22 + 5;
      int v25 = 1;
      do
      {
        uint64_t v26 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)uint64_t buf = 67109120;
          int v109 = v25;
          _os_log_debug_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEBUG, "pblogger, Logger::logRangeResult: aoaHypothesis %d", buf, 8u);
          ++v25;
        }
        int v27 = *(_DWORD *)(v11 + 204);
        uint64_t v28 = *(int *)(v11 + 200);
        if ((int)v28 >= v27)
        {
          if (v27 == *(_DWORD *)(v11 + 208))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v11 + 192), v27 + 1);
            int v27 = *(_DWORD *)(v11 + 204);
          }
          *(_DWORD *)(v11 + 204) = v27 + 1;
          sub_1000C3110();
        }
        uint64_t v29 = *(void *)(v11 + 192);
        *(_DWORD *)(v11 + 200) = v28 + 1;
        uint64_t v30 = *(void *)(v29 + 8 * v28);
        unsigned int v31 = v24 - 5;
        int v32 = *(_DWORD *)(v30 + 76);
        *(_OWORD *)(v30 + 16) = *(_OWORD *)(v24 - 5);
        uint64_t v33 = *(v24 - 3);
        int v34 = v32 | 7;
        *(_DWORD *)(v30 + 76) = v32 | 7;
        *(void *)(v30 + 32) = v33;
        if (*((unsigned char *)v24 - 8))
        {
          uint64_t v35 = *(v24 - 2);
          int v34 = v32 | 0x17;
          *(_DWORD *)(v30 + 76) = v32 | 0x17;
          *(void *)(v30 + 48) = v35;
        }
        if (*((unsigned char *)v24 + 8))
        {
          uint64_t v36 = *v24;
          *(_DWORD *)(v30 + 76) = v34 | 0x20;
          *(void *)(v30 + 56) = v36;
        }
        v24 += 7;
      }
      while (v31 + 7 != v23);
      int v19 = *(_DWORD *)(v11 + 468);
      a1 = v104;
      a5 = v103;
    }
    int v39 = v19 | 0x600;
    *(_DWORD *)(v11 + 468) = v19 | 0x600;
    *(_OWORD *)(v11 + 64) = *((_OWORD *)a2 + 10);
    if (a2[184])
    {
      uint64_t v40 = *((void *)a2 + 22);
      *(_DWORD *)(v11 + 472) |= 0x2000000u;
      *(void *)(v11 + 392) = v40;
    }
    if (a2[200])
    {
      uint64_t v41 = *((void *)a2 + 24);
      int v39 = v19 | 0x20000600;
      *(_DWORD *)(v11 + 468) = v19 | 0x20000600;
      *(void *)(v11 + 216) = v41;
    }
    if (a2[216])
    {
      uint64_t v42 = *((void *)a2 + 26);
      v39 |= 0x40000000u;
      *(_DWORD *)(v11 + 468) = v39;
      *(void *)(v11 + 224) = v42;
    }
    if (a2[232])
    {
      uint64_t v43 = *((void *)a2 + 28);
      v39 |= 0x80000000;
      *(_DWORD *)(v11 + 468) = v39;
      *(void *)(v11 + 232) = v43;
    }
    int v44 = v39 | 0x180000;
    *(_DWORD *)(v11 + 468) = v39 | 0x180000;
    *(_OWORD *)(v11 + 120) = *((_OWORD *)a2 + 15);
    if (a2[264])
    {
      uint64_t v45 = *((void *)a2 + 32);
      int v44 = v39 | 0x580000;
      *(_DWORD *)(v11 + 468) = v39 | 0x580000;
      *(void *)(v11 + 152) = v45;
    }
    if (a2[280])
    {
      uint64_t v46 = *((void *)a2 + 34);
      v44 |= 0x800000u;
      *(_DWORD *)(v11 + 468) = v44;
      *(void *)(v11 + 160) = v46;
    }
    int v47 = *(_DWORD *)(v11 + 472);
    *(_DWORD *)(v11 + 300) = *((_DWORD *)a2 + 73);
    uint64_t v48 = *((void *)a2 + 37);
    int v17 = v44 | 0x8000000;
    *(_DWORD *)(v11 + 468) = v44 | 0x8000000;
    *(void *)(v11 + 184) = v48;
    int v49 = a2[312];
    int v50 = v47 | 0x4001;
    *(_DWORD *)(v11 + 472) = v47 | 0x4001;
    *(_DWORD *)(v11 + 240) = v49;
    if (a2[328])
    {
      uint64_t v51 = *((void *)a2 + 40);
      int v50 = v47 | 0x4011;
      *(_DWORD *)(v11 + 472) = v47 | 0x4011;
      *(void *)(v11 + 264) = v51;
    }
    if (a2[344])
    {
      uint64_t v52 = *((void *)a2 + 42);
      v50 |= 0x20u;
      *(_DWORD *)(v11 + 472) = v50;
      *(void *)(v11 + 272) = v52;
    }
    if (a2[360])
    {
      uint64_t v53 = *((void *)a2 + 44);
      v50 |= 0x40u;
      *(_DWORD *)(v11 + 472) = v50;
      *(void *)(v11 + 280) = v53;
    }
    if (a2[392])
    {
      uint64_t v54 = *((void *)a2 + 48);
      v50 |= 0x200000u;
      *(_DWORD *)(v11 + 472) = v50;
      *(void *)(v11 + 352) = v54;
    }
    if (a2[408])
    {
      uint64_t v55 = *((void *)a2 + 50);
      v50 |= 0x400000u;
      *(_DWORD *)(v11 + 472) = v50;
      *(void *)(v11 + 360) = v55;
    }
    if (a2[424])
    {
      uint64_t v56 = *((void *)a2 + 52);
      v50 |= 0x800000u;
      *(_DWORD *)(v11 + 472) = v50;
      *(void *)(v11 + 368) = v56;
    }
    if (a2[440])
    {
      uint64_t v57 = *((void *)a2 + 54);
      *(_DWORD *)(v11 + 472) = v50 | 0x1000000;
      *(void *)(v11 + 384) = v57;
    }
  }
  if (a2[16])
  {
    uint64_t v58 = *((void *)a2 + 1);
    v17 |= 0x2000000u;
    *(_DWORD *)(v11 + 468) = v17;
    *(void *)(v11 + 176) = v58;
  }
  int v59 = *((unsigned __int16 *)a2 + 144);
  *(_DWORD *)(v11 + 468) = v17 | 0x4000000;
  *(_DWORD *)(v11 + 140) = v59;
  unsigned int v60 = a2[368] != 5;
  if (!sub_100071A2C(v60))
  {
    long long v97 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::RoseRFChannel_IsValid(value)";
    int v98 = 11748;
    int v99 = "set_rf_channel";
    goto LABEL_130;
  }
  *(_DWORD *)(v11 + 472) |= 2u;
  *(_DWORD *)(v11 + 244) = v60;
  if (*(unsigned __int16 *)(a2 + 369) >= 0x100u)
  {
    int v61 = *(_WORD *)(a2 + 369);
    if (sub_10008D630(v61))
    {
      if (!sub_10008D630(v61)) {
        __assert_rtn("set_nb_band", "CLPRoseCommunicationEvent.pb.h", 12429, "::CLP::LogEntry::Rose::RoseCommunicationEvent::RoseNbBand_IsValid(value)");
      }
      *(_DWORD *)(v11 + 472) |= 0x80000000;
      *(_DWORD *)(v11 + 416) = v61;
    }
    else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
    {
      sub_100428D58();
    }
  }
  int v62 = *((_DWORD *)a2 + 93);
  if ((v62 & 0xFF0000) != 0)
  {
    *(_DWORD *)(v11 + 476) |= 1u;
    *(_DWORD *)(v11 + 420) = (unsigned __int16)v62;
  }
  int v63 = *(_DWORD *)(v11 + 472);
  *(_DWORD *)(v11 + 340) = *((unsigned __int16 *)a2 + 188);
  *(_DWORD *)(v11 + 344) = *((unsigned __int16 *)a2 + 189);
  int v64 = *((unsigned __int16 *)a2 + 190);
  int v65 = v63 | 0xE0000;
  *(_DWORD *)(v11 + 472) = v63 | 0xE0000;
  *(_DWORD *)(v11 + 348) = v64;
  unsigned int v66 = *((unsigned __int16 *)a2 + 224);
  if (v66 >= 0x100)
  {
    int v65 = v63 | 0x40E0000;
    *(_DWORD *)(v11 + 472) = v63 | 0x40E0000;
    *(_DWORD *)(v11 + 380) = v66;
  }
  unsigned int v67 = *((unsigned __int16 *)a2 + 225);
  if (v67 >= 0x100)
  {
    v65 |= 0x8000000u;
    *(_DWORD *)(v11 + 472) = v65;
    *(_DWORD *)(v11 + 400) = v67;
  }
  int v68 = *(_DWORD *)(a2 + 454);
  if ((v68 & 0xFF0000) != 0)
  {
    v65 |= 0x20000000u;
    *(_DWORD *)(v11 + 472) = v65;
    *(_DWORD *)(v11 + 408) = (__int16)v68;
  }
  int v69 = *(_DWORD *)(a2 + 458);
  if ((v69 & 0xFF0000) != 0)
  {
    v65 |= 0x40000000u;
    *(_DWORD *)(v11 + 472) = v65;
    *(_DWORD *)(v11 + 412) = (__int16)v69;
  }
  int v70 = *((_DWORD *)a2 + 10);
  if (v70 == 1)
  {
    if (sub_10008D640(2))
    {
      int v71 = 2;
      goto LABEL_85;
    }
    goto LABEL_129;
  }
  if (v70) {
    goto LABEL_86;
  }
  if (!sub_10008D640(1))
  {
LABEL_129:
    long long v97 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::RoseRangeResultEventSource_IsValid(value)";
    int v98 = 11881;
    int v99 = "set_source";
LABEL_130:
    __assert_rtn(v99, "CLPRoseCommunicationEvent.pb.h", v98, v97);
  }
  int v71 = 1;
LABEL_85:
  int v65 = *(_DWORD *)(v11 + 472) | 0x80;
  *(_DWORD *)(v11 + 472) = v65;
  *(_DWORD *)(v11 + 288) = v71;
LABEL_86:
  *(_DWORD *)(v11 + 292) = *((unsigned __int16 *)a2 + 28);
  *(unsigned char *)(v11 + 296) = a2[4];
  *(unsigned char *)(v11 + 297) = a4;
  *(unsigned char *)(v11 + 298) = a5;
  uint64_t v72 = *((void *)a2 + 6);
  *(_DWORD *)(v11 + 472) = v65 | 0x1F00;
  *(void *)(v11 + 304) = v72;
  if (*(unsigned char *)(a3 + 36))
  {
    *(_DWORD *)(v11 + 472) = v65 | 0x3F00;
    double v73 = *(_DWORD **)(v11 + 312);
    if (!v73) {
      operator new();
    }
    unsigned int v74 = *(_DWORD *)a3;
    if (sub_10008D650(*(_DWORD *)a3))
    {
      v73[13] |= 1u;
      v73[4] = v74;
      unsigned int v75 = *(_DWORD *)(a3 + 4);
      if (sub_10008D650(v75))
      {
        v73[13] |= 2u;
        v73[5] = v75;
        unsigned int v76 = *(_DWORD *)(a3 + 8);
        if (sub_10008D650(v76))
        {
          v73[13] |= 4u;
          v73[6] = v76;
          unsigned int v77 = *(_DWORD *)(a3 + 12);
          if (sub_100071A38(v77))
          {
            v73[13] |= 8u;
            v73[7] = v77;
            unsigned int v78 = *(_DWORD *)(a3 + 16);
            if (sub_100071A38(v78))
            {
              v73[13] |= 0x10u;
              v73[8] = v78;
              unsigned int v79 = *(_DWORD *)(a3 + 20);
              if (sub_100071A38(v79))
              {
                v73[13] |= 0x20u;
                v73[9] = v79;
                unsigned int v80 = *(_DWORD *)(a3 + 24);
                if (sub_100071A2C(v80))
                {
                  v73[13] |= 0x40u;
                  v73[10] = v80;
                  unsigned int v81 = *(_DWORD *)(a3 + 28);
                  if (sub_100071A2C(v81))
                  {
                    v73[13] |= 0x80u;
                    v73[11] = v81;
                    goto LABEL_98;
                  }
                  long long v100 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::ME_CheckRSSIsResult_IsValid(value)";
                  int v101 = 10927;
                  char v102 = "set_check_rssis_result";
                }
                else
                {
                  long long v100 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::ME_CheckTimestampsResult_IsValid(value)";
                  int v101 = 10904;
                  char v102 = "set_check_timestamps_result";
                }
              }
              else
              {
                long long v100 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::ME_CheckFPSNRsOkForSensorFusionResult_IsValid(value)";
                int v101 = 10881;
                char v102 = "set_check_fp_snrs_ok_for_sensor_fusion_result";
              }
            }
            else
            {
              long long v100 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::ME_CheckToaCirResult_IsValid(value)";
              int v101 = 10858;
              char v102 = "set_check_toa_cir_result";
            }
          }
          else
          {
            long long v100 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::ME_CheckAoaCirResult_IsValid(value)";
            int v101 = 10835;
            char v102 = "set_check_aoa_cir_result";
          }
        }
        else
        {
          long long v100 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::ME_CheckFPIndicesResult_IsValid(value)";
          int v101 = 10812;
          char v102 = "set_check_fp_indices_result";
        }
      }
      else
      {
        long long v100 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::ME_CheckFPSNRsResult_IsValid(value)";
        int v101 = 10789;
        char v102 = "set_check_fp_snrs_result";
      }
    }
    else
    {
      long long v100 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::ME_CheckPDOAResult_IsValid(value)";
      int v101 = 10766;
      char v102 = "set_check_pdoa_result";
    }
    __assert_rtn(v102, "CLPRoseCommunicationEvent.pb.h", v101, v100);
  }
LABEL_98:
  double v82 = (uint64_t *)*((void *)a2 + 9);
  uint64_t v83 = (uint64_t *)*((void *)a2 + 10);
  if (v82 != v83)
  {
    int v84 = *(_DWORD *)(v11 + 328);
    do
    {
      uint64_t v85 = *v82;
      if (v84 == *(_DWORD *)(v11 + 332))
      {
        sub_10006F628(v11 + 320, v84 + 1);
        int v84 = *(_DWORD *)(v11 + 328);
      }
      uint64_t v86 = *(void *)(v11 + 320);
      *(_DWORD *)(v11 + 328) = v84 + 1;
      *(void *)(v86 + 8 * v84) = v85;
      ++v82;
      ++v84;
    }
    while (v82 != v83);
  }
  if (a2[1])
  {
    int v87 = *a2;
    *(_DWORD *)(v11 + 472) |= 0x10000u;
    *(_DWORD *)(v11 + 336) = v87;
  }
  unsigned int v88 = *((unsigned __int16 *)a2 + 191);
  if (v88 >= 0x100)
  {
    *(_DWORD *)(v11 + 472) |= 0x100000u;
    *(_DWORD *)(v11 + 376) = v88;
  }
  int v89 = *(_DWORD *)(a2 + 462);
  if ((v89 & 0xFF0000) != 0)
  {
    *(_DWORD *)(v11 + 476) |= 2u;
    *(_DWORD *)(v11 + 424) = (unsigned __int16)v89;
  }
  unsigned int v90 = *((unsigned __int16 *)a2 + 233);
  if (v90 >= 0x100)
  {
    *(_DWORD *)(v11 + 476) |= 4u;
    *(_DWORD *)(v11 + 428) = v90;
  }
  if (a2[480])
  {
    uint64_t v91 = *((void *)a2 + 59);
    *(_DWORD *)(v11 + 476) |= 8u;
    *(void *)(v11 + 432) = v91;
  }
  if (a2[496])
  {
    uint64_t v92 = *((void *)a2 + 61);
    *(_DWORD *)(v11 + 476) |= 0x10u;
    *(void *)(v11 + 440) = v92;
  }
  unsigned int v93 = *((unsigned __int16 *)a2 + 252);
  if (v93 >= 0x100)
  {
    *(_DWORD *)(v11 + 476) |= 0x20u;
    *(_DWORD *)(v11 + 448) = v93;
  }
  unsigned int v94 = *((unsigned __int16 *)a2 + 253);
  if (v94 >= 0x100)
  {
    *(_DWORD *)(v11 + 476) |= 0x40u;
    *(_DWORD *)(v11 + 452) = v94;
  }
  unsigned int v95 = *((unsigned __int16 *)a2 + 254);
  if (v95 >= 0x100)
  {
    *(_DWORD *)(v11 + 476) |= 0x80u;
    *(_DWORD *)(v11 + 456) = v95;
  }
  unsigned int v96 = *((unsigned __int16 *)a2 + 255);
  if (v96 >= 0x100)
  {
    *(_DWORD *)(v11 + 476) |= 0x100u;
    *(_DWORD *)(v11 + 460) = v96;
  }
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100428D24();
  }
  uint64_t v37 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v107);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
LABEL_33:
  sub_100133D9C(v107);
  return v37;
}

void sub_100295D88(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,char a22)
{
}

std::string *sub_100295E34(uint64_t a1, std::string *__str)
{
  *(_DWORD *)(a1 + 468) |= 0x20u;
  uint64_t v2 = *(std::string **)(a1 + 40);
  if (v2 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }

  return std::string::operator=(v2, __str);
}

uint64_t sub_100295EB0(uint64_t a1, long long *a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100428F58();
  }
  long long v76 = *a2;
  int v3 = (__int16 *)*((void *)a2 + 3);
  uint64_t v77 = *((void *)a2 + 2);
  unsigned int v78 = 0;
  unsigned int v79 = 0;
  uint64_t v80 = 0;
  sub_10016D19C(&v78, v3, *((__int16 **)a2 + 4), 0x86BCA1AF286BCA1BLL * ((uint64_t)(*((void *)a2 + 4) - (void)v3) >> 3));
  unsigned int v81 = 0;
  double v82 = 0;
  uint64_t v83 = 0;
  sub_10016D82C(&v81, *((void *)a2 + 6), *((void *)a2 + 7), (uint64_t)(*((void *)a2 + 7) - *((void *)a2 + 6)) >> 5);
  sub_100132F78(v72);
  uint64_t v4 = sub_100294620((uint64_t)v72, 3, 0xFu, *(void *)(a1 + 120));
  *(_DWORD *)(v4 + 252) |= 0x20000u;
  uint64_t v5 = *(void *)(v4 + 144);
  if (!v5) {
    operator new();
  }
  *(_DWORD *)(v5 + 96) |= 1u;
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    operator new();
  }
  int v7 = (unsigned __int16)v76;
  *(_DWORD *)(v6 + 32) |= 2u;
  *(_DWORD *)(v6 + 24) = v7;
  unsigned int v71 = 0;
  if ((sub_1002949E8(&v71, BYTE2(v76)) & 1) == 0)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_100428F24();
    }
    uint64_t v59 = 0;
    goto LABEL_108;
  }
  unsigned int v8 = v71;
  if ((sub_10008D614(v71) & 1) == 0) {
    __assert_rtn("set_session_type", "CLPRoseCommunicationEvent.pb.h", 13320, "::CLP::LogEntry::Rose::RoseCommunicationEvent::RoseSessionType_IsValid(value)");
  }
  int v9 = *(_DWORD *)(v5 + 96);
  int v10 = WORD2(v76);
  *(_DWORD *)(v5 + 24) = v8;
  *(_DWORD *)(v5 + 28) = v10;
  *(_DWORD *)(v5 + 88) = BYTE6(v76);
  *((unsigned char *)&__str.__r_.__value_.__s + 23) = 8;
  __str.__r_.__value_.__r.__words[0] = *(void *)((char *)&v76 + 7);
  __str.__r_.__value_.__s.__data_[8] = 0;
  *(_DWORD *)(v5 + 96) = v9 | 0x1E;
  uint64_t v11 = *(std::string **)(v5 + 32);
  uint64_t v12 = (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString;
  if (v11 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v11, &__str);
  unsigned int v13 = v78;
  int v65 = v79;
  if (v78 == v79)
  {
LABEL_84:
    uint64_t v51 = v81;
    for (uint64_t i = v82; v51 != (void **)i; v51 += 4)
    {
      int v53 = *(_DWORD *)(v5 + 76);
      uint64_t v54 = *(int *)(v5 + 72);
      if ((int)v54 >= v53)
      {
        if (v53 == *(_DWORD *)(v5 + 80))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v5 + 64), v53 + 1);
          int v53 = *(_DWORD *)(v5 + 76);
        }
        *(_DWORD *)(v5 + 76) = v53 + 1;
        sub_1000C31D8();
      }
      uint64_t v55 = *(void *)(v5 + 64);
      *(_DWORD *)(v5 + 72) = v54 + 1;
      uint64_t v56 = *(void *)(v55 + 8 * v54);
      int v57 = *(_DWORD *)(v56 + 36);
      *(_DWORD *)(v56 + 16) = *(unsigned __int16 *)v51;
      LODWORD(v55) = *((unsigned __int16 *)v51 + 1);
      *(_DWORD *)(v56 + 36) = v57 | 3;
      *(_DWORD *)(v56 + 20) = v55;
      sub_1002A4440(&__dst, v51[1], (unsigned char *)v51[2] - (unsigned char *)v51[1]);
      *(_DWORD *)(v56 + 36) |= 4u;
      uint64_t v58 = *(std::string **)(v56 + 24);
      if (v58 == v12) {
        operator new();
      }
      std::string::operator=(v58, &__dst);
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__dst.__r_.__value_.__l.__data_);
      }
    }
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
      sub_100428DF4();
    }
    uint64_t v59 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v72);
    goto LABEL_106;
  }
  int v62 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v5 + 40);
  uint64_t v64 = v5;
  while (1)
  {
    int v14 = *(_DWORD *)(v5 + 52);
    uint64_t v15 = *(int *)(v5 + 48);
    if ((int)v15 >= v14)
    {
      if (v14 == *(_DWORD *)(v5 + 56))
      {
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v62, v14 + 1);
        int v14 = *(_DWORD *)(v5 + 52);
      }
      *(_DWORD *)(v5 + 52) = v14 + 1;
      sub_1000C323C();
    }
    uint64_t v16 = *(void *)(v5 + 40);
    *(_DWORD *)(v5 + 48) = v15 + 1;
    uint64_t v17 = *(void *)(v16 + 8 * v15);
    unsigned __int16 v74 = *v13;
    if (!(_BYTE)v74) {
      break;
    }
    unsigned int v18 = 0;
LABEL_23:
    if ((sub_10008D65C(v18) & 1) == 0) {
      __assert_rtn("set_packet_type", "CLPRoseCommunicationEvent.pb.h", 12964, "::CLP::LogEntry::Rose::RoseCommunicationEvent::RangeCIRPacketType_IsValid(value)");
    }
    int v19 = *(_DWORD *)(v17 + 100);
    *(_DWORD *)(v17 + 16) = v18;
    int v20 = *((unsigned __int8 *)v13 + 2);
    *(_DWORD *)(v17 + 100) = v19 | 3;
    *(_DWORD *)(v17 + 20) = v20;
    sub_1002A4440(&__dst, *((void **)v13 + 1), *((void *)v13 + 2) - *((void *)v13 + 1));
    *(_DWORD *)(v17 + 100) |= 4u;
    uint64_t v21 = *(std::string **)(v17 + 24);
    if (v21 == v12) {
      operator new();
    }
    std::string::operator=(v21, &__dst);
    sub_1002A4440(&v75, *((void **)v13 + 4), *((void *)v13 + 5) - *((void *)v13 + 4));
    *(_DWORD *)(v17 + 100) |= 8u;
    simd_float3 v22 = *(std::string **)(v17 + 32);
    if (v22 == v12) {
      operator new();
    }
    std::string::operator=(v22, &v75);
    *(_DWORD *)(v17 + 100) |= 0x10u;
    float v23 = *(int **)(v17 + 40);
    if (!v23) {
      operator new();
    }
    BOOL v24 = 0;
    int v25 = 0;
    unsigned int v26 = 1;
    unsigned __int8 v27 = 1;
    while ((v27 & (_BYTE)v13[1]) == 0)
    {
LABEL_56:
      unsigned __int8 v27 = 2 * v26;
      unsigned int v26 = (2 * v26) & 0xFE;
      BOOL v24 = v26 > 4;
      if (v26 >= 5)
      {
        if (*((unsigned char *)v13 + 88))
        {
          uint64_t v39 = *((void *)v13 + 10);
          *(_DWORD *)(v17 + 100) |= 0x20u;
          *(void *)(v17 + 48) = v39;
        }
        if (*((unsigned char *)v13 + 104))
        {
          uint64_t v40 = *((void *)v13 + 12);
          *(_DWORD *)(v17 + 100) |= 0x40u;
          *(void *)(v17 + 56) = v40;
        }
        if (*((unsigned char *)v13 + 120))
        {
          uint64_t v41 = *((void *)v13 + 14);
          *(_DWORD *)(v17 + 100) |= 0x80u;
          *(void *)(v17 + 64) = v41;
        }
        uint64_t v42 = (void **)*((void *)v13 + 16);
        for (uint64_t j = (unsigned __int16 *)*((void *)v13 + 17); v42 != (void **)j; v42 += 4)
        {
          int v44 = *(_DWORD *)(v17 + 84);
          uint64_t v45 = *(int *)(v17 + 80);
          if ((int)v45 >= v44)
          {
            if (v44 == *(_DWORD *)(v17 + 88))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v17 + 72), v44 + 1);
              int v44 = *(_DWORD *)(v17 + 84);
            }
            *(_DWORD *)(v17 + 84) = v44 + 1;
            sub_1000C31D8();
          }
          uint64_t v46 = *(void *)(v17 + 72);
          *(_DWORD *)(v17 + 80) = v45 + 1;
          uint64_t v47 = *(void *)(v46 + 8 * v45);
          int v48 = *(_DWORD *)(v47 + 36);
          *(_DWORD *)(v47 + 16) = *(unsigned __int16 *)v42;
          LODWORD(v46) = *((unsigned __int16 *)v42 + 1);
          *(_DWORD *)(v47 + 36) = v48 | 3;
          *(_DWORD *)(v47 + 20) = v46;
          sub_1002A4440(&v67, v42[1], (unsigned char *)v42[2] - (unsigned char *)v42[1]);
          *(_DWORD *)(v47 + 36) |= 4u;
          int v49 = *(std::string **)(v47 + 24);
          if (v49 == v12) {
            operator new();
          }
          std::string::operator=(v49, &v67);
          if (SHIBYTE(v67.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v67.__r_.__value_.__l.__data_);
          }
        }
        goto LABEL_78;
      }
    }
    uint64_t v28 = v12;
    if (v27 <= 4u && ((1 << v27) & 0x16) != 0)
    {
      uint64_t v29 = 0;
      int v66 = v25 + 1;
      uint64_t v30 = *((void *)v13 + 7) + ((uint64_t)v25 << 10);
      while (1)
      {
        if (v27 == 2)
        {
          int v34 = v23[13];
          uint64_t v32 = v23[12];
          if ((int)v32 >= v34)
          {
            if (v34 == v23[14])
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v23 + 10), v34 + 1);
              int v34 = v23[13];
            }
            v23[13] = v34 + 1;
            sub_1000C3174();
          }
          uint64_t v33 = *((void *)v23 + 5);
          v23[12] = v32 + 1;
        }
        else if (v27 == 1)
        {
          int v31 = v23[7];
          uint64_t v32 = v23[6];
          if ((int)v32 >= v31)
          {
            if (v31 == v23[8])
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v23 + 4), v31 + 1);
              int v31 = v23[7];
            }
            v23[7] = v31 + 1;
            sub_1000C3174();
          }
          uint64_t v33 = *((void *)v23 + 2);
          v23[6] = v32 + 1;
        }
        else
        {
          int v35 = v23[19];
          uint64_t v32 = v23[18];
          if ((int)v32 >= v35)
          {
            if (v35 == v23[20])
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v23 + 16), v35 + 1);
              int v35 = v23[19];
            }
            v23[19] = v35 + 1;
            sub_1000C3174();
          }
          uint64_t v33 = *((void *)v23 + 8);
          v23[18] = v32 + 1;
        }
        uint64_t v36 = *(_DWORD **)(v33 + 8 * v32);
        if (!v36) {
          break;
        }
        int v37 = v36[7];
        v36[4] = *(__int16 *)(v30 + v29);
        int v38 = *(__int16 *)(v30 + v29 + 2);
        v36[7] = v37 | 3;
        v36[5] = v38;
        v29 += 4;
        if (v29 == 1024)
        {
          int v25 = v66;
          uint64_t v12 = v28;
          goto LABEL_56;
        }
      }
    }
    int v50 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_100428EE4(&buf, v69, v50);
    }
    uint64_t v12 = v28;
LABEL_78:
    if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v75.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__dst.__r_.__value_.__l.__data_);
    }
    if (!v24) {
      goto LABEL_105;
    }
    v13 += 76;
    uint64_t v5 = v64;
    if (v13 == v65) {
      goto LABEL_84;
    }
  }
  if (HIBYTE(v74) < 0xEu && ((0x3C3Fu >> SHIBYTE(v74)) & 1) != 0)
  {
    unsigned int v18 = dword_1004BDEBC[SHIBYTE(v74)];
    goto LABEL_23;
  }
  unsigned int v60 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_1003A9184(&v74);
    sub_100428E5C((char *)&__dst, (uint8_t *)&v75, v60, &v67);
    unsigned int v60 = v67.__r_.__value_.__r.__words[0];
  }
  if (os_log_type_enabled(v60, OS_LOG_TYPE_ERROR)) {
    sub_100428E28();
  }
LABEL_105:
  uint64_t v59 = 0;
LABEL_106:
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
LABEL_108:
  sub_100133D9C(v72);
  v72[0] = (void **)&v81;
  sub_10016D6F0(v72);
  v72[0] = (void **)&v78;
  sub_10016D794(v72);
  return v59;
}

void sub_1002968A8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,int a45,__int16 a46,char a47,char a48)
{
}

uint64_t sub_1002969DC(uint64_t a1, uint64_t a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100428FC0();
  }
  sub_100132F78(v35);
  uint64_t v4 = sub_100294620((uint64_t)v35, 3, 0x11u, *(void *)(a1 + 120));
  *(_DWORD *)(v4 + 252) |= 0x80000u;
  uint64_t v5 = *(void *)(v4 + 160);
  if (!v5) {
    operator new();
  }
  int v6 = *(_DWORD *)(v5 + 132);
  *(void *)(v5 + 16) = *(void *)a2;
  *(_DWORD *)(v5 + 24) = *(unsigned __int16 *)(a2 + 8);
  *(_DWORD *)(v5 + 28) = *(unsigned __int8 *)(a2 + 10);
  *(_DWORD *)(v5 + 132) = v6 | 0xF;
  uint64_t v7 = *(void *)(v5 + 32);
  if (!v7) {
    operator new();
  }
  int v8 = *(unsigned __int16 *)(a2 + 12);
  *(_DWORD *)(v7 + 32) |= 2u;
  *(_DWORD *)(v7 + 24) = v8;
  int v9 = *(unsigned __int16 *)(a2 + 14);
  int v10 = *(_DWORD *)(v5 + 132);
  *(_DWORD *)(v5 + 132) = v10 | 0x10;
  *(_DWORD *)(v5 + 72) = v9;
  *(_DWORD *)(v5 + 76) = *(_DWORD *)(a2 + 16);
  uint64_t v11 = *(void *)(a2 + 24);
  *(_DWORD *)(v5 + 132) = v10 | 0x230;
  *(void *)(v5 + 40) = v11;
  uint64_t v12 = (__int16 *)(a2 + 32);
  unsigned int v13 = (__int16 *)(a2 + 64);
  do
  {
    int v14 = *(_DWORD *)(v5 + 60);
    uint64_t v15 = *(int *)(v5 + 56);
    if ((int)v15 >= v14)
    {
      if (v14 == *(_DWORD *)(v5 + 64))
      {
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v5 + 48), v14 + 1);
        int v14 = *(_DWORD *)(v5 + 60);
      }
      *(_DWORD *)(v5 + 60) = v14 + 1;
      sub_1000C3174();
    }
    uint64_t v16 = *(void *)(v5 + 48);
    *(_DWORD *)(v5 + 56) = v15 + 1;
    uint64_t v17 = *(_DWORD **)(v16 + 8 * v15);
    int v18 = v17[7];
    __n128 v17[4] = *v12;
    int v19 = v12[1];
    v17[7] = v18 | 3;
    void v17[5] = v19;
    v12 += 2;
  }
  while (v12 != v13);
  int v20 = (__int16 *)(a2 + 96);
  do
  {
    int v21 = *(_DWORD *)(v5 + 92);
    uint64_t v22 = *(int *)(v5 + 88);
    if ((int)v22 >= v21)
    {
      if (v21 == *(_DWORD *)(v5 + 96))
      {
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v5 + 80), v21 + 1);
        int v21 = *(_DWORD *)(v5 + 92);
      }
      *(_DWORD *)(v5 + 92) = v21 + 1;
      sub_1000C3174();
    }
    uint64_t v23 = *(void *)(v5 + 80);
    *(_DWORD *)(v5 + 88) = v22 + 1;
    BOOL v24 = *(_DWORD **)(v23 + 8 * v22);
    int v25 = v24[7];
    unsigned int v24[4] = *v13;
    int v26 = v13[1];
    v24[7] = v25 | 3;
    v24[5] = v26;
    v13 += 2;
  }
  while (v13 != v20);
  do
  {
    int v27 = *(_DWORD *)(v5 + 116);
    uint64_t v28 = *(int *)(v5 + 112);
    if ((int)v28 >= v27)
    {
      if (v27 == *(_DWORD *)(v5 + 120))
      {
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v5 + 104), v27 + 1);
        int v27 = *(_DWORD *)(v5 + 116);
      }
      *(_DWORD *)(v5 + 116) = v27 + 1;
      sub_1000C3174();
    }
    uint64_t v29 = *(void *)(v5 + 104);
    *(_DWORD *)(v5 + 112) = v28 + 1;
    uint64_t v30 = *(_DWORD **)(v29 + 8 * v28);
    int v31 = v30[7];
    v30[4] = *v20;
    int v32 = v20[1];
    v30[7] = v31 | 3;
    v30[5] = v32;
    v20 += 2;
  }
  while (v20 != (__int16 *)(a2 + 128));
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100428F8C();
  }
  uint64_t v33 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v35);
  sub_100133D9C(v35);
  return v33;
}

void sub_100296D24()
{
}

uint64_t sub_100296D80(uint64_t a1, uint64_t a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100429028();
  }
  sub_100132F78(v21);
  uint64_t v4 = sub_100294620((uint64_t)v21, 3, 0x12u, *(void *)(a1 + 120));
  *(_DWORD *)(v4 + 252) |= 0x100000u;
  uint64_t v5 = *(void *)(v4 + 168);
  if (!v5) {
    operator new();
  }
  int v6 = *(_DWORD *)(v5 + 96);
  *(void *)(v5 + 16) = *(void *)a2;
  *(_DWORD *)(v5 + 24) = *(unsigned __int16 *)(a2 + 8);
  *(_DWORD *)(v5 + 28) = *(unsigned __int8 *)(a2 + 10);
  *(_DWORD *)(v5 + 96) = v6 | 0xF;
  uint64_t v7 = *(void *)(v5 + 32);
  if (!v7) {
    operator new();
  }
  int v8 = *(unsigned __int16 *)(a2 + 12);
  *(_DWORD *)(v7 + 32) |= 2u;
  *(_DWORD *)(v7 + 24) = v8;
  int v9 = *(_DWORD *)(v5 + 96);
  *(_DWORD *)(v5 + 40) = *(unsigned __int16 *)(a2 + 14);
  *(_DWORD *)(v5 + 44) = *(unsigned __int8 *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  *(_DWORD *)(v5 + 96) = v9 | 0x70;
  *(void *)(v5 + 48) = v10;
  *(_DWORD *)(v5 + 88) = *(_DWORD *)(a2 + 32);
  uint64_t v11 = *(void *)(a2 + 40);
  *(_DWORD *)(v5 + 96) = v9 | 0x2F0;
  *(void *)(v5 + 56) = v11;
  uint64_t v12 = (__int16 *)(a2 + 48);
  do
  {
    int v13 = *(_DWORD *)(v5 + 76);
    uint64_t v14 = *(int *)(v5 + 72);
    if ((int)v14 >= v13)
    {
      if (v13 == *(_DWORD *)(v5 + 80))
      {
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v5 + 64), v13 + 1);
        int v13 = *(_DWORD *)(v5 + 76);
      }
      *(_DWORD *)(v5 + 76) = v13 + 1;
      sub_1000C3174();
    }
    uint64_t v15 = *(void *)(v5 + 64);
    *(_DWORD *)(v5 + 72) = v14 + 1;
    uint64_t v16 = *(_DWORD **)(v15 + 8 * v14);
    int v17 = v16[7];
    v16[4] = *v12;
    int v18 = v12[1];
    v16[7] = v17 | 3;
    v16[5] = v18;
    v12 += 2;
  }
  while (v12 != (__int16 *)(a2 + 80));
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100428FF4();
  }
  uint64_t v19 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v21);
  sub_100133D9C(v21);
  return v19;
}

void sub_100296FB0()
{
}

uint64_t sub_100297004(uint64_t a1, uint64_t a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100429090();
  }
  sub_100132F78(v43);
  uint64_t v4 = sub_100294620((uint64_t)v43, 3, 0x19u, *(void *)(a1 + 120));
  *(_DWORD *)(v4 + 252) |= 0x4000000u;
  uint64_t v5 = *(void *)(v4 + 216);
  if (!v5) {
    operator new();
  }
  int v6 = *(_DWORD *)(v5 + 76);
  *(void *)(v5 + 16) = *(void *)a2;
  *(_DWORD *)(v5 + 24) = *(unsigned __int16 *)(a2 + 8);
  *(_DWORD *)(v5 + 28) = *(unsigned __int8 *)(a2 + 10);
  *(_DWORD *)(v5 + 44) = *(unsigned __int16 *)(a2 + 14);
  *(_DWORD *)(v5 + 40) = *(unsigned __int8 *)(a2 + 11);
  *(_DWORD *)(v5 + 76) = v6 | 0x3F;
  uint64_t v7 = *(void *)(v5 + 32);
  if (!v7) {
    operator new();
  }
  int v8 = *(unsigned __int16 *)(a2 + 12);
  *(_DWORD *)(v7 + 32) |= 2u;
  *(_DWORD *)(v7 + 24) = v8;
  int v9 = *(_DWORD *)(v5 + 60);
  uint64_t v10 = *(int *)(v5 + 56);
  if ((int)v10 >= v9)
  {
    if (v9 == *(_DWORD *)(v5 + 64))
    {
      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v5 + 48), v9 + 1);
      int v9 = *(_DWORD *)(v5 + 60);
    }
    *(_DWORD *)(v5 + 60) = v9 + 1;
    sub_1000C32A0();
  }
  uint64_t v11 = *(void *)(v5 + 48);
  *(_DWORD *)(v5 + 56) = v10 + 1;
  uint64_t v12 = *(_DWORD **)(v11 + 8 * v10);
  int v13 = sub_1001770F0(a2, 0);
  v12[15] |= 1u;
  v12[4] = v13;
  int v14 = sub_10017711C(a2, 0);
  v12[15] |= 2u;
  v12[5] = v14;
  int v15 = sub_100177148(a2, 0);
  v12[15] |= 4u;
  v12[6] = v15;
  int v16 = sub_100177174(a2, 0);
  v12[15] |= 8u;
  v12[7] = v16;
  uint64_t v17 = sub_1001771A0(a2, 0);
  for (uint64_t i = 0; i != 32; i += 4)
  {
    int v19 = v12[11];
    uint64_t v20 = (int)v12[10];
    if ((int)v20 >= v19)
    {
      if (v19 == v12[12])
      {
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v12 + 8), v19 + 1);
        int v19 = v12[11];
      }
      v12[11] = v19 + 1;
      sub_1000C3174();
    }
    uint64_t v21 = *((void *)v12 + 4);
    v12[10] = v20 + 1;
    uint64_t v22 = *(_DWORD **)(v21 + 8 * v20);
    int v23 = v22[7];
    uint8_t v22[4] = *(__int16 *)(v17 + i);
    int v24 = *(__int16 *)(v17 + i + 2);
    v22[7] = v23 | 3;
    v22[5] = v24;
  }
  int v25 = *(_DWORD *)(v5 + 60);
  uint64_t v26 = *(int *)(v5 + 56);
  if ((int)v26 >= v25)
  {
    if (v25 == *(_DWORD *)(v5 + 64))
    {
      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v5 + 48), v25 + 1);
      int v25 = *(_DWORD *)(v5 + 60);
    }
    *(_DWORD *)(v5 + 60) = v25 + 1;
    sub_1000C32A0();
  }
  uint64_t v27 = *(void *)(v5 + 48);
  *(_DWORD *)(v5 + 56) = v26 + 1;
  uint64_t v28 = *(_DWORD **)(v27 + 8 * v26);
  int v29 = sub_1001770F0(a2, 1);
  v28[15] |= 1u;
  v28[4] = v29;
  int v30 = sub_10017711C(a2, 1);
  v28[15] |= 2u;
  v28[5] = v30;
  int v31 = sub_100177148(a2, 1);
  v28[15] |= 4u;
  v28[6] = v31;
  int v32 = sub_100177174(a2, 1);
  v28[15] |= 8u;
  v28[7] = v32;
  uint64_t v33 = sub_1001771A0(a2, 1);
  for (uint64_t j = 0; j != 32; j += 4)
  {
    int v35 = v28[11];
    uint64_t v36 = (int)v28[10];
    if ((int)v36 >= v35)
    {
      if (v35 == v28[12])
      {
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v28 + 8), v35 + 1);
        int v35 = v28[11];
      }
      v28[11] = v35 + 1;
      sub_1000C3174();
    }
    uint64_t v37 = *((void *)v28 + 4);
    v28[10] = v36 + 1;
    int v38 = *(_DWORD **)(v37 + 8 * v36);
    int v39 = v38[7];
    v38[4] = *(__int16 *)(v33 + j);
    int v40 = *(__int16 *)(v33 + j + 2);
    v38[7] = v39 | 3;
    v38[5] = v40;
  }
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_10042905C();
  }
  uint64_t v41 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v43);
  sub_100133D9C(v43);
  return v41;
}

void sub_100297474()
{
}

uint64_t sub_1002974E4(int *a1)
{
  int v2 = a1[15];
  uint64_t v3 = a1[14];
  if ((int)v3 >= v2)
  {
    if (v2 == a1[16])
    {
      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 12), v2 + 1);
      int v2 = a1[15];
    }
    a1[15] = v2 + 1;
    sub_1000C32A0();
  }
  uint64_t v4 = *((void *)a1 + 6);
  a1[14] = v3 + 1;
  return *(void *)(v4 + 8 * v3);
}

uint64_t sub_100297564(uint64_t a1, uint64_t a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_10042912C();
  }
  sub_100132F78(v16);
  uint64_t v4 = sub_100294620((uint64_t)v16, 3, 0x10u, *(void *)(a1 + 120));
  *(_DWORD *)(v4 + 252) |= 0x40000u;
  uint64_t v5 = *(void *)(v4 + 152);
  if (!v5) {
    operator new();
  }
  *(_DWORD *)(v5 + 300) |= 1u;
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    operator new();
  }
  int v7 = *(unsigned __int16 *)(a2 + 16);
  *(_DWORD *)(v6 + 32) |= 2u;
  *(_DWORD *)(v6 + 24) = v7;
  unsigned int v15 = 0;
  if (sub_1002949E8(&v15, *(unsigned __int8 *)(a2 + 18)))
  {
    *((unsigned char *)&__p.__r_.__value_.__s + 23) = 8;
    __p.__r_.__value_.__r.__words[0] = *(void *)(a2 + 23);
    __p.__r_.__value_.__s.__data_[8] = 0;
    unsigned int v8 = v15;
    if ((sub_10008D614(v15) & 1) == 0) {
      __assert_rtn("set_session_type", "CLPRoseCommunicationEvent.pb.h", 13549, "::CLP::LogEntry::Rose::RoseCommunicationEvent::RoseSessionType_IsValid(value)");
    }
    int v9 = *(_DWORD *)(v5 + 300);
    *(_DWORD *)(v5 + 24) = v8;
    *(_DWORD *)(v5 + 28) = *(unsigned __int16 *)(a2 + 20);
    *(_DWORD *)(v5 + 120) = *(unsigned __int8 *)(a2 + 22);
    *(_DWORD *)(v5 + 300) = v9 | 0x1E;
    uint64_t v10 = *(std::string **)(v5 + 32);
    if (v10 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v10, &__p);
    *(_OWORD *)(v5 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(v5 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(v5 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(v5 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(v5 + 224) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(v5 + 240) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(v5 + 256) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(v5 + 272) = *(_OWORD *)(a2 + 152);
    *(void *)(v5 + 112) = *(void *)(a2 + 168);
    *(_OWORD *)(v5 + 128) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(v5 + 144) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(v5 + 160) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(v5 + 176) = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(v5 + 192) = *(_OWORD *)(a2 + 240);
    *(void *)(v5 + 208) = *(void *)(a2 + 256);
    *(void *)(v5 + 216) = *(void *)a2;
    int v11 = *(unsigned __int16 *)(a2 + 8);
    *(int8x8_t *)(v5 + 300) = vorr_s8(*(int8x8_t *)(v5 + 300), (int8x8_t)0xFFFFFDFE0);
    *(_DWORD *)(v5 + 124) = v11;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
      sub_1004290C4();
    }
    uint64_t v12 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v16);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_1004290F8();
    }
    uint64_t v12 = 0;
  }
  sub_100133D9C(v16);
  return v12;
}

void sub_10029783C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16)
{
}

uint64_t sub_1002978A8(uint64_t a1, unsigned __int8 *a2)
{
  if (*((_DWORD *)a2 + 6)) {
    sub_1004291F4();
  }
  if (!a2[208]) {
    sub_100429160();
  }
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_1004291C0();
  }
  sub_100132F78(v43);
  uint64_t v4 = sub_100294620((uint64_t)v43, 3, 0x13u, *(void *)(a1 + 120));
  *(_DWORD *)(v4 + 252) |= 0x200000u;
  uint64_t v5 = *(void *)(v4 + 176);
  if (!v5) {
    operator new();
  }
  if (a2[40])
  {
    uint64_t v6 = *((void *)a2 + 4);
    int v7 = *(_DWORD *)(v5 + 232) | 1;
    *(_DWORD *)(v5 + 232) = v7;
    *(void *)(v5 + 16) = v6;
  }
  else
  {
    int v7 = *(_DWORD *)(v5 + 232);
  }
  int v8 = *((unsigned __int16 *)a2 + 25);
  *(_DWORD *)(v5 + 232) = v7 | 2;
  *(_DWORD *)(v5 + 24) = v8;
  unsigned int v42 = 0;
  if ((sub_1002947F8(&v42, *((unsigned __int16 *)a2 + 24)) & 1) == 0)
  {
    uint64_t v37 = 0;
    goto LABEL_22;
  }
  unsigned int v9 = v42;
  if (!sub_10008D5D8(v42))
  {
    int v39 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::RoseErrorCode_IsValid(value)";
    int v40 = 15224;
    uint64_t v41 = "set_error_code";
    goto LABEL_27;
  }
  int v10 = *(_DWORD *)(v5 + 232);
  *(_DWORD *)(v5 + 28) = v9;
  *(_DWORD *)(v5 + 40) = *((unsigned __int16 *)a2 + 29);
  *(void *)(v5 + 32) = *((void *)a2 + 8);
  uint64_t v11 = *((void *)a2 + 9);
  int v12 = v10 | 0x3C;
  *(_DWORD *)(v5 + 232) = v12;
  *(void *)(v5 + 48) = v11;
  if (a2[1])
  {
    unsigned int v13 = *a2 != 5;
    if (sub_100071A2C(v13))
    {
      int v12 = *(_DWORD *)(v5 + 232) | 0x40;
      *(_DWORD *)(v5 + 232) = v12;
      *(_DWORD *)(v5 + 44) = v13;
      goto LABEL_15;
    }
    int v39 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::RoseRFChannel_IsValid(value)";
    int v40 = 15313;
    uint64_t v41 = "set_rf_channel";
LABEL_27:
    __assert_rtn(v41, "CLPRoseCommunicationEvent.pb.h", v40, v39);
  }
LABEL_15:
  if (a2[16])
  {
    uint64_t v14 = *((void *)a2 + 1);
    v12 |= 0x80u;
    *(_DWORD *)(v5 + 232) = v12;
    *(void *)(v5 + 56) = v14;
  }
  if (!a2[208]) {
    sub_10000AE44();
  }
  int v15 = *((unsigned __int16 *)a2 + 50);
  *(_DWORD *)(v5 + 232) = v12 | 0x100;
  *(_DWORD *)(v5 + 64) = v15;
  int v16 = *((unsigned __int16 *)a2 + 51);
  *(_DWORD *)(v5 + 232) = v12 | 0x300;
  *(_DWORD *)(v5 + 68) = v16;
  int v17 = a2[104];
  *(_DWORD *)(v5 + 232) = v12 | 0x700;
  *(_DWORD *)(v5 + 72) = v17;
  int v18 = a2[105];
  *(_DWORD *)(v5 + 232) = v12 | 0xF00;
  *(_DWORD *)(v5 + 76) = v18;
  int v19 = *((unsigned __int16 *)a2 + 53);
  *(_DWORD *)(v5 + 232) = v12 | 0x1F00;
  *(_DWORD *)(v5 + 88) = v19;
  uint64_t v20 = *(void *)(a2 + 108);
  *(_DWORD *)(v5 + 232) = v12 | 0x3F00;
  *(void *)(v5 + 80) = v20;
  uint64_t v21 = *(void *)(a2 + 116);
  *(_DWORD *)(v5 + 232) = v12 | 0x7F00;
  *(void *)(v5 + 96) = v21;
  LODWORD(v21) = *((unsigned __int16 *)a2 + 62);
  *(_DWORD *)(v5 + 232) = v12 | 0xFF00;
  *(_DWORD *)(v5 + 92) = v21;
  LODWORD(v21) = a2[126];
  *(_DWORD *)(v5 + 232) = v12 | 0x1FF00;
  *(_DWORD *)(v5 + 104) = v21;
  LODWORD(v21) = a2[127];
  *(_DWORD *)(v5 + 232) = v12 | 0x3FF00;
  *(_DWORD *)(v5 + 108) = v21;
  uint64_t v22 = *((void *)a2 + 16);
  *(_DWORD *)(v5 + 232) = v12 | 0x7FF00;
  *(void *)(v5 + 112) = v22;
  uint64_t v23 = *((void *)a2 + 17);
  *(_DWORD *)(v5 + 232) = v12 | 0xFFF00;
  *(void *)(v5 + 120) = v23;
  LODWORD(v23) = *((__int16 *)a2 + 72);
  *(_DWORD *)(v5 + 232) = v12 | 0x1FFF00;
  *(_DWORD *)(v5 + 128) = v23;
  LODWORD(v23) = *((__int16 *)a2 + 73);
  *(_DWORD *)(v5 + 232) = v12 | 0x3FFF00;
  *(_DWORD *)(v5 + 132) = v23;
  LODWORD(v23) = *((unsigned __int16 *)a2 + 74);
  *(_DWORD *)(v5 + 232) = v12 | 0x7FFF00;
  *(_DWORD *)(v5 + 136) = v23;
  LODWORD(v23) = *((__int16 *)a2 + 75);
  *(_DWORD *)(v5 + 232) = v12 | 0xFFFF00;
  *(_DWORD *)(v5 + 140) = v23;
  LODWORD(v23) = *((__int16 *)a2 + 76);
  *(_DWORD *)(v5 + 232) = v12 | 0x1FFFF00;
  *(_DWORD *)(v5 + 144) = v23;
  LODWORD(v23) = *(_DWORD *)(a2 + 154);
  *(_DWORD *)(v5 + 232) = v12 | 0x3FFFF00;
  *(_DWORD *)(v5 + 148) = v23;
  LODWORD(v23) = (char)a2[158];
  *(_DWORD *)(v5 + 232) = v12 | 0x7FFFF00;
  *(_DWORD *)(v5 + 152) = v23;
  LODWORD(v23) = (char)a2[159];
  *(_DWORD *)(v5 + 232) = v12 | 0xFFFFF00;
  *(_DWORD *)(v5 + 156) = v23;
  LODWORD(v23) = (char)a2[160];
  *(_DWORD *)(v5 + 232) = v12 | 0x1FFFFF00;
  *(_DWORD *)(v5 + 160) = v23;
  LODWORD(v23) = *(__int16 *)(a2 + 161);
  *(_DWORD *)(v5 + 232) = v12 | 0x3FFFFF00;
  *(_DWORD *)(v5 + 164) = v23;
  LODWORD(v23) = *(__int16 *)(a2 + 163);
  *(_DWORD *)(v5 + 232) = v12 | 0x7FFFFF00;
  *(_DWORD *)(v5 + 168) = v23;
  LODWORD(v23) = a2[165];
  *(_DWORD *)(v5 + 232) = v12 | 0xFFFFFF00;
  *(_DWORD *)(v5 + 172) = v23;
  int v24 = *((__int16 *)a2 + 83);
  LODWORD(v23) = *(_DWORD *)(v5 + 236);
  *(_DWORD *)(v5 + 236) = v23 | 1;
  *(_DWORD *)(v5 + 176) = v24;
  int v25 = *((__int16 *)a2 + 84);
  *(_DWORD *)(v5 + 236) = v23 | 3;
  *(_DWORD *)(v5 + 180) = v25;
  int v26 = a2[170];
  *(_DWORD *)(v5 + 236) = v23 | 7;
  *(_DWORD *)(v5 + 184) = v26;
  int v27 = *(__int16 *)(a2 + 171);
  *(_DWORD *)(v5 + 236) = v23 | 0xF;
  *(_DWORD *)(v5 + 188) = v27;
  int v28 = *(__int16 *)(a2 + 173);
  *(_DWORD *)(v5 + 236) = v23 | 0x1F;
  *(_DWORD *)(v5 + 192) = v28;
  int v29 = *(_DWORD *)(a2 + 175);
  *(_DWORD *)(v5 + 236) = v23 | 0x3F;
  *(_DWORD *)(v5 + 196) = v29;
  int v30 = a2[179];
  *(_DWORD *)(v5 + 236) = v23 | 0x7F;
  *(_DWORD *)(v5 + 200) = v30;
  int v31 = *((unsigned __int16 *)a2 + 90);
  *(_DWORD *)(v5 + 236) = v23 | 0xFF;
  *(_DWORD *)(v5 + 204) = v31;
  int v32 = *((unsigned __int16 *)a2 + 91);
  *(_DWORD *)(v5 + 236) = v23 | 0x1FF;
  *(_DWORD *)(v5 + 208) = v32;
  int v33 = *((unsigned __int16 *)a2 + 92);
  *(_DWORD *)(v5 + 236) = v23 | 0x3FF;
  *(_DWORD *)(v5 + 212) = v33;
  int v34 = *((__int16 *)a2 + 93);
  *(_DWORD *)(v5 + 236) = v23 | 0x7FF;
  *(_DWORD *)(v5 + 216) = v34;
  int v35 = *((__int16 *)a2 + 95);
  *(_DWORD *)(v5 + 236) = v23 | 0x17FF;
  *(_DWORD *)(v5 + 224) = v35;
  int v36 = *((__int16 *)a2 + 94);
  *(_DWORD *)(v5 + 236) = v23 | 0x1FFF;
  *(_DWORD *)(v5 + 220) = v36;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_10042918C();
  }
  uint64_t v37 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v43);
LABEL_22:
  sub_100133D9C(v43);
  return v37;
}

void sub_100297D2C()
{
}

uint64_t sub_100297D6C(uint64_t a1, unsigned __int8 *a2)
{
  if (*((_DWORD *)a2 + 6) != 1) {
    sub_100429288();
  }
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100429254();
  }
  sub_100132F78(v21);
  uint64_t v4 = sub_100294620((uint64_t)v21, 3, 0x14u, *(void *)(a1 + 120));
  *(_DWORD *)(v4 + 252) |= 0x400000u;
  uint64_t v5 = *(void *)(v4 + 184);
  if (!v5) {
    operator new();
  }
  if (a2[40])
  {
    uint64_t v6 = *((void *)a2 + 4);
    int v7 = *(_DWORD *)(v5 + 68) | 1;
    *(_DWORD *)(v5 + 68) = v7;
    *(void *)(v5 + 16) = v6;
  }
  else
  {
    int v7 = *(_DWORD *)(v5 + 68);
  }
  int v8 = *((unsigned __int16 *)a2 + 25);
  *(_DWORD *)(v5 + 68) = v7 | 2;
  *(_DWORD *)(v5 + 24) = v8;
  unsigned int v20 = 0;
  if ((sub_1002947F8(&v20, *((unsigned __int16 *)a2 + 24)) & 1) == 0)
  {
    uint64_t v15 = 0;
    goto LABEL_20;
  }
  unsigned int v9 = v20;
  if (!sub_10008D5D8(v20))
  {
    int v17 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::RoseErrorCode_IsValid(value)";
    int v18 = 16220;
    int v19 = "set_error_code";
    goto LABEL_24;
  }
  int v10 = *(_DWORD *)(v5 + 68);
  *(_DWORD *)(v5 + 28) = v9;
  *(_DWORD *)(v5 + 40) = *((unsigned __int16 *)a2 + 29);
  *(void *)(v5 + 32) = *((void *)a2 + 8);
  uint64_t v11 = *((void *)a2 + 9);
  int v12 = v10 | 0x3C;
  *(_DWORD *)(v5 + 68) = v12;
  *(void *)(v5 + 48) = v11;
  if (a2[1])
  {
    unsigned int v13 = *a2 != 5;
    if (sub_100071A2C(v13))
    {
      int v12 = *(_DWORD *)(v5 + 68) | 0x40;
      *(_DWORD *)(v5 + 68) = v12;
      *(_DWORD *)(v5 + 44) = v13;
      goto LABEL_14;
    }
    int v17 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::RoseRFChannel_IsValid(value)";
    int v18 = 16309;
    int v19 = "set_rf_channel";
LABEL_24:
    __assert_rtn(v19, "CLPRoseCommunicationEvent.pb.h", v18, v17);
  }
LABEL_14:
  if (a2[16])
  {
    uint64_t v14 = *((void *)a2 + 1);
    *(_DWORD *)(v5 + 68) = v12 | 0x80;
    *(void *)(v5 + 56) = v14;
  }
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100429220();
  }
  uint64_t v15 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v21);
LABEL_20:
  sub_100133D9C(v21);
  return v15;
}

void sub_100297F80()
{
}

uint64_t sub_100297FBC(uint64_t a1, uint64_t *a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_1004292E8();
  }
  sub_100132F78(v48);
  uint64_t v4 = sub_100294620((uint64_t)v48, 3, 0x1Cu, *(void *)(a1 + 120));
  *(_DWORD *)(v4 + 252) |= 0x20000000u;
  uint64_t v5 = *(void *)(v4 + 240);
  if (!v5) {
    operator new();
  }
  uint64_t v6 = *a2;
  int v7 = *(_DWORD *)(v5 + 160);
  int v8 = v7 | 1;
  *(_DWORD *)(v5 + 160) = v7 | 1;
  *(void *)(v5 + 16) = v6;
  if (*((unsigned char *)a2 + 104))
  {
    uint64_t v9 = a2[12];
    int v8 = v7 | 3;
    *(_DWORD *)(v5 + 160) = v7 | 3;
    *(void *)(v5 + 24) = v9;
  }
  int v10 = *((unsigned __int16 *)a2 + 4);
  *(_DWORD *)(v5 + 160) = v8 | 4;
  *(_DWORD *)(v5 + 32) = v10;
  unsigned int v47 = 0;
  if ((sub_1002947F8(&v47, *((unsigned __int16 *)a2 + 8)) & 1) == 0) {
    goto LABEL_30;
  }
  unsigned int v11 = v47;
  if ((sub_10008D5D8(v47) & 1) == 0) {
    __assert_rtn("set_error_code", "CLPRoseCommunicationEvent.pb.h", 16473, "::CLP::LogEntry::Rose::RoseCommunicationEvent::RoseErrorCode_IsValid(value)");
  }
  int v12 = *(_DWORD *)(v5 + 160);
  *(_DWORD *)(v5 + 36) = v11;
  *(_DWORD *)(v5 + 160) = v12 | 0x18;
  uint64_t v13 = *(void *)(v5 + 40);
  if (!v13) {
    operator new();
  }
  int v14 = *((unsigned __int16 *)a2 + 9);
  *(_DWORD *)(v13 + 32) |= 2u;
  *(_DWORD *)(v13 + 24) = v14;
  unsigned int v46 = 0;
  if ((sub_1002949E8(&v46, *((unsigned __int8 *)a2 + 20)) & 1) == 0)
  {
LABEL_30:
    uint64_t v40 = 0;
    goto LABEL_31;
  }
  unsigned int v15 = v46;
  if ((sub_10008D614(v46) & 1) == 0) {
    __assert_rtn("set_session_type", "CLPRoseCommunicationEvent.pb.h", 16534, "::CLP::LogEntry::Rose::RoseCommunicationEvent::RoseSessionType_IsValid(value)");
  }
  int v16 = *(_DWORD *)(v5 + 160);
  *(_DWORD *)(v5 + 48) = v15;
  *(void *)(v5 + 56) = a2[3];
  int v17 = *((unsigned __int16 *)a2 + 20);
  *(_DWORD *)(v5 + 160) = v16 | 0xE0;
  *(_DWORD *)(v5 + 52) = v17;
  *((unsigned char *)&__p.__r_.__value_.__s + 23) = 8;
  __p.__r_.__value_.__r.__words[0] = a2[4];
  __p.__r_.__value_.__s.__data_[8] = 0;
  *(_DWORD *)(v5 + 160) = v16 | 0x1E0;
  int v18 = *(std::string **)(v5 + 64);
  if (v18 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v18, &__p);
  int v19 = *(_DWORD *)(v5 + 160);
  *(_DWORD *)(v5 + 88) = *((unsigned __int16 *)a2 + 21);
  LOWORD(v20) = *((_WORD *)a2 + 22);
  double v21 = (double)v20 * 250.0;
  *(double *)(v5 + 72) = v21;
  LOBYTE(v21) = *((unsigned char *)a2 + 46);
  double v22 = (double)*(unint64_t *)&v21 * 250.0;
  *(double *)(v5 + 80) = v22;
  LOBYTE(v22) = *((unsigned char *)a2 + 47);
  *(_DWORD *)(v5 + 160) = v19 | 0x1E00;
  *(double *)(v5 + 96) = (double)*(unint64_t *)&v22 * 250.0;
  unsigned int v23 = sub_1002984DC(*((unsigned __int8 *)a2 + 48));
  if (!sub_1000723D4(v23))
  {
    unsigned int v42 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::RosePreamble_IsValid(value)";
    int v43 = 16759;
    int v44 = "set_tx_preamble";
    goto LABEL_38;
  }
  *(_DWORD *)(v5 + 160) |= 0x2000u;
  *(_DWORD *)(v5 + 92) = v23;
  unsigned int v24 = sub_1002984DC(*((unsigned __int8 *)a2 + 49));
  if (!sub_1000723D4(v24))
  {
    unsigned int v42 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::RosePreamble_IsValid(value)";
    int v43 = 16782;
    int v44 = "set_rx_preamble";
    goto LABEL_38;
  }
  int v25 = *(_DWORD *)(v5 + 160);
  *(_DWORD *)(v5 + 104) = v24;
  int v26 = *((unsigned __int8 *)a2 + 50);
  *(_DWORD *)(v5 + 160) = v25 | 0xC000;
  *(_DWORD *)(v5 + 108) = v26;
  unsigned int v27 = *((unsigned __int8 *)a2 + 51);
  if ((sub_10008D674(v27) & 1) == 0)
  {
    unsigned int v42 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::RxStatus_IsValid(value)";
    int v43 = 16827;
    int v44 = "set_poll_rx_status";
LABEL_38:
    __assert_rtn(v44, "CLPRoseCommunicationEvent.pb.h", v43, v42);
  }
  int v28 = *(_DWORD *)(v5 + 160);
  *(_DWORD *)(v5 + 120) = v27;
  *(void *)(v5 + 112) = a2[7];
  *(_DWORD *)(v5 + 124) = *((unsigned __int8 *)a2 + 64);
  int v29 = *((unsigned __int8 *)a2 + 65);
  *(_DWORD *)(v5 + 160) = v28 | 0xF0000;
  *(_DWORD *)(v5 + 152) = v29;
  int v30 = (unsigned __int8 *)a2[9];
  for (uint64_t i = (unsigned __int8 *)a2[10]; v30 != i; v30 += 16)
  {
    int v32 = *(_DWORD *)(v5 + 140);
    uint64_t v33 = *(int *)(v5 + 136);
    if ((int)v33 >= v32)
    {
      if (v32 == *(_DWORD *)(v5 + 144))
      {
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v5 + 128), v32 + 1);
        int v32 = *(_DWORD *)(v5 + 140);
      }
      *(_DWORD *)(v5 + 140) = v32 + 1;
      sub_1000C3304();
    }
    uint64_t v34 = *(void *)(v5 + 128);
    *(_DWORD *)(v5 + 136) = v33 + 1;
    uint64_t v35 = *(void *)(v34 + 8 * v33);
    unsigned int v36 = *v30;
    char v37 = sub_10008D674(v36);
    if ((v37 & 1) == 0) {
      __assert_rtn("set_rx_status", "CLPRoseCommunicationEvent.pb.h", 16358, "::CLP::LogEntry::Rose::RoseCommunicationEvent::RxStatus_IsValid(value)");
    }
    int v38 = *(_DWORD *)(v35 + 32);
    *(_DWORD *)(v35 + 24) = v36;
    uint64_t v39 = *((void *)v30 + 1);
    *(_DWORD *)(v35 + 32) = v38 | 3;
    *(void *)(v35 + 16) = v39;
  }
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_1004292B4();
  }
  uint64_t v40 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v48);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
LABEL_31:
  sub_100133D9C(v48);
  return v40;
}

void sub_100298460(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16)
{
}

uint64_t sub_1002984DC(int a1)
{
  uint64_t result = 0;
  switch(a1)
  {
    case 0:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
      sub_10042931C();
    case 10:
      uint64_t result = 1;
      break;
    case 11:
      uint64_t result = 2;
      break;
    case 12:
      uint64_t result = 3;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1002985BC(uint64_t a1, void *a2)
{
  sub_100132F78(v9);
  if (sub_100293AD0((uint64_t)v9, *(void *)(a1 + 120)))
  {
    v11 |= 2u;
    uint64_t v4 = v10;
    if (!v10) {
      operator new();
    }
    *(_DWORD *)(v10 + 44) |= 4u;
    uint64_t v5 = *(void *)(v4 + 32);
    if (!v5) {
      operator new();
    }
    *(_DWORD *)(v5 + 44) |= 4u;
    uint64_t v6 = *(void *)(v5 + 32);
    if (!v6) {
      operator new();
    }
    sub_100298760(v6, a2);
    uint64_t v7 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v9);
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_100428948();
    }
    uint64_t v7 = 0;
  }
  sub_100133D9C(v9);
  return v7;
}

void sub_100298708()
{
}

double sub_100298760(uint64_t a1, void *a2)
{
  *(_DWORD *)(a1 + 28) |= 1u;
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    operator new();
  }
  int v3 = *(_DWORD *)(v2 + 76);
  uint64_t v4 = a2[1];
  *(void *)(v2 + 16) = *a2;
  *(void *)(v2 + 48) = v4;
  *(_DWORD *)(v2 + 76) = v3 | 0x19;
  uint64_t v5 = *(void *)(v2 + 40);
  if (!v5) {
    operator new();
  }
  uint64_t v6 = (void *)a2[2];
  int v7 = *(_DWORD *)(v5 + 44);
  *(void *)(v5 + 16) = *v6;
  *(void *)(v5 + 24) = v6[1];
  uint64_t v8 = v6[2];
  *(_DWORD *)(v5 + 44) = v7 | 7;
  *(void *)(v5 + 32) = v8;
  *(_DWORD *)(v2 + 76) |= 4u;
  uint64_t v9 = *(void *)(v2 + 32);
  if (!v9) {
    operator new();
  }
  uint64_t v10 = (void *)a2[5];
  int v11 = *(_DWORD *)(v9 + 44);
  *(void *)(v9 + 16) = *v10;
  *(void *)(v9 + 24) = v10[1];
  uint64_t v12 = v10[2];
  *(_DWORD *)(v9 + 44) = v11 | 7;
  *(void *)(v9 + 32) = v12;
  *(_DWORD *)(v2 + 76) |= 2u;
  uint64_t v13 = *(void *)(v2 + 24);
  if (!v13) {
    operator new();
  }
  *(_DWORD *)(v13 + 52) |= 1u;
  uint64_t v14 = *(void *)(v13 + 16);
  if (!v14) {
    operator new();
  }
  unsigned int v15 = (void *)a2[8];
  int v16 = *(_DWORD *)(v14 + 52);
  *(void *)(v14 + 16) = *v15;
  *(void *)(v14 + 24) = v15[1];
  *(void *)(v14 + 32) = v15[2];
  uint64_t v17 = v15[3];
  *(_DWORD *)(v14 + 52) = v16 | 0xF;
  *(void *)(v14 + 40) = v17;
  *(_DWORD *)(v2 + 76) |= 0x20u;
  uint64_t v18 = *(void *)(v2 + 56);
  if (!v18) {
    operator new();
  }
  int v19 = (void *)a2[11];
  int v20 = *(_DWORD *)(v18 + 44);
  *(void *)(v18 + 16) = *v19;
  *(void *)(v18 + 24) = v19[1];
  uint64_t v21 = v19[2];
  *(_DWORD *)(v18 + 44) = v20 | 7;
  *(void *)(v18 + 32) = v21;
  *(_DWORD *)(v2 + 76) |= 0x40u;
  uint64_t v22 = *(void *)(v2 + 64);
  if (!v22) {
    operator new();
  }
  uint64_t v23 = a2[14];
  int v24 = *(_DWORD *)(v22 + 44);
  *(void *)(v22 + 16) = *(void *)v23;
  *(void *)(v22 + 24) = *(void *)(v23 + 8);
  double result = *(double *)(v23 + 16);
  *(_DWORD *)(v22 + 44) = v24 | 7;
  *(double *)(v22 + 32) = result;
  return result;
}

void sub_1002989F4()
{
}

uint64_t sub_100298A60(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v6 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100429348(a3, v6);
  }
  sub_100132F78(v16);
  if (sub_100293AD0((uint64_t)v16, *(void *)(a1 + 120)))
  {
    v18 |= 2u;
    uint64_t v7 = v17;
    if (!v17) {
      operator new();
    }
    *(_DWORD *)(v17 + 44) |= 4u;
    uint64_t v8 = *(void *)(v7 + 32);
    if (!v8) {
      operator new();
    }
    *(_DWORD *)(v8 + 44) |= 2u;
    uint64_t v9 = *(void *)(v8 + 24);
    if (!v9) {
      operator new();
    }
    *(_DWORD *)(v9 + 28) |= 1u;
    uint64_t v10 = *(void *)(v9 + 16);
    if (!v10) {
      operator new();
    }
    *(_DWORD *)(v10 + 36) |= 1u;
    uint64_t v11 = *(void *)(v10 + 16);
    if (!v11) {
      operator new();
    }
    *(_DWORD *)(v9 + 28) |= 1u;
    *(_DWORD *)(v10 + 36) |= 2u;
    uint64_t v13 = *(void *)(v10 + 24);
    if (!v13) {
      operator new();
    }
    *(_DWORD *)(v11 + 60) |= 2u;
    uint64_t v14 = *(void *)(v11 + 24);
    if (!v14) {
      operator new();
    }
    sub_100298760(v14, a2);
    sub_100298DBC(v13, (uint64_t)a3);
    uint64_t v12 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v16);
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_100428948();
    }
    uint64_t v12 = 0;
  }
  sub_100133D9C(v16);
  return v12;
}

void sub_100298D10()
{
}

double sub_100298DBC(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 68) |= 4u;
  uint64_t v3 = *(void *)(a1 + 48);
  if (!v3) {
    operator new();
  }
  int v4 = *(_DWORD *)(v3 + 148);
  *(void *)(v3 + 16) = *(void *)a2;
  int v5 = v4 | 3;
  *(_DWORD *)(v3 + 148) = v5;
  uint64_t v6 = *(void **)(a2 + 16);
  *(void *)(v3 + 24) = *(void *)(a2 + 8);
  uint64_t v7 = (void *)(a2 + 24);
  if (v6 != (void *)(a2 + 24))
  {
    do
    {
      int v8 = *((unsigned __int16 *)v6 + 13);
      int v9 = *(_DWORD *)(v3 + 40);
      if (v9 == *(_DWORD *)(v3 + 44))
      {
        sub_10006F57C(v3 + 32, v9 + 1);
        int v9 = *(_DWORD *)(v3 + 40);
      }
      uint64_t v10 = *(void *)(v3 + 32);
      *(_DWORD *)(v3 + 40) = v9 + 1;
      *(_DWORD *)(v10 + 4 * v9) = v8;
      uint64_t v11 = (void *)v6[1];
      if (v11)
      {
        do
        {
          uint64_t v12 = v11;
          uint64_t v11 = (void *)*v11;
        }
        while (v11);
      }
      else
      {
        do
        {
          uint64_t v12 = (void *)v6[2];
          BOOL v13 = *v12 == (void)v6;
          uint64_t v6 = v12;
        }
        while (!v13);
      }
      uint64_t v6 = v12;
    }
    while (v12 != v7);
    int v5 = *(_DWORD *)(v3 + 148);
  }
  uint64_t v14 = *(void *)(a2 + 48);
  *(void *)(v3 + 48) = *(void *)(a2 + 40);
  uint64_t v15 = *(void *)(a2 + 72);
  *(void *)(v3 + 80) = v14;
  *(void *)(v3 + 88) = v15;
  *(int8x16_t *)(v3 + 56) = vextq_s8(*(int8x16_t *)(a2 + 56), *(int8x16_t *)(a2 + 56), 8uLL);
  uint64_t v16 = *(void *)(a2 + 88);
  *(void *)(v3 + 72) = *(void *)(a2 + 80);
  uint64_t v17 = *(void *)(a2 + 112);
  uint64_t v18 = *(void *)(a2 + 120);
  *(void *)(v3 + 96) = v16;
  *(void *)(v3 + 104) = v17;
  uint64_t v19 = *(void *)(a2 + 104);
  *(void *)(v3 + 112) = *(void *)(a2 + 96);
  *(void *)(v3 + 120) = v18;
  double result = *(double *)(a2 + 128);
  *(_DWORD *)(v3 + 148) = v5 | 0x7FF8;
  *(void *)(v3 + 128) = v19;
  *(double *)(v3 + 136) = result;
  return result;
}

void sub_100298F04()
{
}

uint64_t sub_100298F28(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  sub_100132F78(v24);
  if (sub_100293AD0((uint64_t)v24, *(void *)(a1 + 120)))
  {
    v26 |= 2u;
    uint64_t v10 = v25;
    if (!v25) {
      operator new();
    }
    *(_DWORD *)(v25 + 44) |= 4u;
    uint64_t v11 = *(void *)(v10 + 32);
    if (!v11) {
      operator new();
    }
    *(_DWORD *)(v11 + 44) |= 2u;
    uint64_t v12 = *(void *)(v11 + 24);
    if (!v12) {
      operator new();
    }
    *(_DWORD *)(v12 + 28) |= 1u;
    uint64_t v13 = *(void *)(v12 + 16);
    if (!v13) {
      operator new();
    }
    *(_DWORD *)(v13 + 36) |= 1u;
    uint64_t v14 = *(int **)(v13 + 16);
    if (!v14) {
      operator new();
    }
    *(_DWORD *)(v12 + 28) |= 1u;
    *(_DWORD *)(v13 + 36) |= 2u;
    uint64_t v16 = *(void *)(v13 + 24);
    if (!v16) {
      operator new();
    }
    sub_1002992C8(v14, a2);
    sub_100298DBC(v16, a3);
    sub_1002995EC(v16, a4);
    *(_DWORD *)(v16 + 68) |= 8u;
    uint64_t v17 = *(void *)(v16 + 56);
    if (!v17) {
      operator new();
    }
    char v18 = *(unsigned char *)(a5 + 8);
    int v19 = *(_DWORD *)(v17 + 40);
    int v20 = v19 | 1;
    *(_DWORD *)(v17 + 40) = v19 | 1;
    *(unsigned char *)(v17 + 32) = v18;
    if (*(unsigned char *)(a5 + 24))
    {
      uint64_t v21 = *(void *)(a5 + 16);
      int v20 = v19 | 3;
      *(_DWORD *)(v17 + 40) = v19 | 3;
      *(void *)(v17 + 16) = v21;
    }
    if (*(unsigned char *)(a5 + 40))
    {
      uint64_t v22 = *(void *)(a5 + 32);
      *(_DWORD *)(v17 + 40) = v20 | 4;
      *(void *)(v17 + 24) = v22;
    }
    uint64_t v15 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v24);
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_100428948();
    }
    uint64_t v15 = 0;
  }
  sub_100133D9C(v24);
  return v15;
}

void sub_100299214()
{
}

void sub_1002992C8(int *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2[1];
  if (*a2 != v3)
  {
    int v28 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8);
    do
    {
      int v5 = a1[11];
      uint64_t v6 = a1[10];
      if ((int)v6 >= v5)
      {
        if (v5 == a1[12])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v28, v5 + 1);
          int v5 = a1[11];
        }
        a1[11] = v5 + 1;
        sub_10014911C();
      }
      uint64_t v7 = *((void *)a1 + 4);
      a1[10] = v6 + 1;
      uint64_t v8 = *(void *)(v7 + 8 * v6);
      LODWORD(v7) = *(_DWORD *)(v8 + 140);
      *(void *)(v8 + 16) = *(void *)(v2 + 40);
      *(void *)(v8 + 24) = *(void *)v2;
      *(_DWORD *)(v8 + 80) = *(unsigned __int16 *)(v2 + 8);
      int v9 = *(unsigned __int8 *)(v2 + 10);
      *(_DWORD *)(v8 + 140) = v7 | 0x303;
      *(_DWORD *)(v8 + 84) = v9;
      sub_1002A4440(&__str, *(void **)(v2 + 16), *(void *)(v2 + 24) - *(void *)(v2 + 16));
      *(_DWORD *)(v8 + 140) |= 0x400u;
      uint64_t v10 = *(std::string **)(v8 + 88);
      if (v10 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      std::string::operator=(v10, &__str);
      double v11 = sub_100030430(*(double *)(v2 + 64));
      *(_DWORD *)(v8 + 140) |= 0x10u;
      *(double *)(v8 + 48) = v11;
      double v12 = sub_100030430(*(double *)(v2 + 80));
      *(_DWORD *)(v8 + 140) |= 0x20u;
      *(double *)(v8 + 56) = v12;
      double v13 = sub_100030430(*(double *)(v2 + 72));
      *(_DWORD *)(v8 + 140) |= 4u;
      *(double *)(v8 + 32) = v13;
      double v14 = sub_100030430(*(double *)(v2 + 88));
      *(_DWORD *)(v8 + 140) |= 8u;
      *(double *)(v8 + 40) = v14;
      double v15 = sub_100030430(*(double *)(v2 + 96));
      int v16 = *(_DWORD *)(v8 + 140);
      *(double *)(v8 + 96) = v15;
      *(_DWORD *)(v8 + 140) = v16 | 0x8C0;
      *(_OWORD *)(v8 + 64) = *(_OWORD *)(v2 + 48);
      if (*(unsigned char *)(v2 + 112))
      {
        uint64_t v17 = *(void *)(v2 + 104);
        *(_DWORD *)(v8 + 140) = v16 | 0x18C0;
        *(void *)(v8 + 104) = v17;
      }
      int v19 = *(uint64_t **)(v2 + 120);
      char v18 = *(uint64_t **)(v2 + 128);
      if (v19 != v18)
      {
        int v20 = *(_DWORD *)(v8 + 120);
        do
        {
          uint64_t v21 = *v19;
          if (v20 == *(_DWORD *)(v8 + 124))
          {
            sub_10006F628(v8 + 112, v20 + 1);
            int v20 = *(_DWORD *)(v8 + 120);
          }
          uint64_t v22 = *(void *)(v8 + 112);
          *(_DWORD *)(v8 + 120) = v20 + 1;
          *(void *)(v22 + 8 * v20) = v21;
          ++v19;
          ++v20;
        }
        while (v19 != v18);
      }
      if (sub_100071A2C(*(unsigned __int8 *)(v2 + 144)))
      {
        unsigned int v23 = *(unsigned __int8 *)(v2 + 144) != 5;
        if (!sub_100071A2C(v23))
        {
          int v25 = 4721;
          int v26 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::RoseRFChannel_IsValid(value)";
          unsigned int v27 = "set_rf_channel";
          goto LABEL_29;
        }
        *(_DWORD *)(v8 + 140) |= 0x4000u;
        *(_DWORD *)(v8 + 128) = v23;
      }
      if (sub_100071A2C(*(unsigned __int8 *)(v2 + 145)))
      {
        unsigned int v24 = *(unsigned __int8 *)(v2 + 145);
        if (!sub_100071A2C(v24))
        {
          int v25 = 4744;
          unsigned int v27 = "set_channel_usage_type";
          int v26 = "::CLP::LogEntry::Rose::RangeAndAoaSolution_SensorFusion_ChannelUsageType_IsValid(value)";
LABEL_29:
          __assert_rtn(v27, "CLPRangeAndAoaSolution.pb.h", v25, v26);
        }
        *(_DWORD *)(v8 + 140) |= 0x8000u;
        *(_DWORD *)(v8 + 132) = v24;
      }
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__str.__r_.__value_.__l.__data_);
      }
      v2 += 152;
    }
    while (v2 != v3);
  }
}

void sub_1002995C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1002995EC(BOOL result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v43 = a2[1];
  if (*a2 != v43)
  {
    uint64_t v3 = result;
    uint64_t v41 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(result + 24);
    BOOL v42 = result;
    do
    {
      int v4 = *(_DWORD *)(v3 + 36);
      uint64_t v5 = *(int *)(v3 + 32);
      if ((int)v5 >= v4)
      {
        if (v4 == *(_DWORD *)(v3 + 40))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v41, v4 + 1);
          int v4 = *(_DWORD *)(v3 + 36);
        }
        *(_DWORD *)(v3 + 36) = v4 + 1;
        sub_100149180();
      }
      uint64_t v6 = *(void *)(v3 + 24);
      *(_DWORD *)(v3 + 32) = v5 + 1;
      uint64_t v7 = *(void *)(v6 + 8 * v5);
      LODWORD(v6) = *(_DWORD *)v2;
      *(_DWORD *)(v7 + 92) |= 1u;
      *(_DWORD *)(v7 + 24) = v6;
      int v8 = *(unsigned __int8 *)(v2 + 432);
      if (!sub_1000723D4(*(unsigned __int8 *)(v2 + 432))) {
        sub_100410840();
      }
      uint64_t v9 = *(void *)(v2 + 448);
      *(void *)(v7 + 32) = *(void *)(v2 + 440);
      int v10 = *(_DWORD *)(v7 + 92);
      *(_DWORD *)(v7 + 28) = v8;
      *(void *)(v7 + 48) = v9;
      uint64_t v11 = *(void *)(v2 + 456);
      *(_DWORD *)(v7 + 92) = v10 | 0x3C;
      *(void *)(v7 + 40) = v11;
      LODWORD(v11) = *(_DWORD *)(v2 + 464);
      *(_DWORD *)(v7 + 92) = v10 | 0x7C;
      int v12 = *(_DWORD *)(v2 + 468);
      *(_DWORD *)(v7 + 56) = v11;
      *(_DWORD *)(v7 + 60) = v12;
      *(_DWORD *)(v7 + 92) = v10 | 0x1FC;
      uint64_t v13 = *(void *)(v7 + 64);
      if (!v13) {
        operator new();
      }
      *(_DWORD *)(v13 + 48) |= 1u;
      uint64_t v14 = *(void *)(v13 + 16);
      if (!v14) {
        operator new();
      }
      double v15 = sub_1002A43C0(v2 + 8, 0);
      *(_DWORD *)(v14 + 44) |= 1u;
      *(double *)(v14 + 16) = v15;
      double v16 = sub_1002A43C0(v2 + 8, 1u);
      *(_DWORD *)(v14 + 44) |= 2u;
      *(double *)(v14 + 24) = v16;
      double v17 = sub_1002A43C0(v2 + 8, 2u);
      *(_DWORD *)(v14 + 44) |= 4u;
      *(double *)(v14 + 32) = v17;
      *(_DWORD *)(v13 + 48) |= 2u;
      uint64_t v18 = *(void *)(v13 + 24);
      if (!v18) {
        operator new();
      }
      double v19 = sub_1002A43C0(v2 + 8, 3u);
      *(_DWORD *)(v18 + 44) |= 1u;
      *(double *)(v18 + 16) = v19;
      double v20 = sub_1002A43C0(v2 + 8, 4u);
      *(_DWORD *)(v18 + 44) |= 2u;
      *(double *)(v18 + 24) = v20;
      double v21 = sub_1002A43C0(v2 + 8, 5u);
      *(_DWORD *)(v18 + 44) |= 4u;
      *(double *)(v18 + 32) = v21;
      *(_DWORD *)(v13 + 48) |= 4u;
      uint64_t v22 = *(void *)(v13 + 32);
      if (!v22) {
        operator new();
      }
      int v23 = 0;
      *(_DWORD *)(v22 + 52) |= 3u;
      *(void *)(v22 + 16) = 0x600000006;
      do
      {
        int v24 = *(_DWORD *)(v22 + 36);
        uint64_t v25 = *(int *)(v22 + 32);
        if ((int)v25 >= v24)
        {
          if (v24 == *(_DWORD *)(v22 + 40))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v22 + 24), v24 + 1);
            int v24 = *(_DWORD *)(v22 + 36);
          }
          *(_DWORD *)(v22 + 36) = v24 + 1;
          sub_1001491E4();
        }
        uint64_t v26 = *(void *)(v22 + 24);
        *(_DWORD *)(v22 + 32) = v25 + 1;
        uint64_t v27 = *(void *)(v26 + 8 * v25);
        for (int i = 0; i != 6; ++i)
        {
          double v29 = sub_1002A43FC(v2 + 96, v23, i);
          int v30 = *(_DWORD *)(v27 + 24);
          if (v30 == *(_DWORD *)(v27 + 28))
          {
            sub_10006F628(v27 + 16, v30 + 1);
            int v30 = *(_DWORD *)(v27 + 24);
          }
          uint64_t v31 = *(void *)(v27 + 16);
          *(_DWORD *)(v27 + 24) = v30 + 1;
          *(double *)(v31 + 8 * v30) = v29;
        }
        ++v23;
      }
      while (v23 != 6);
      int v32 = *(_DWORD *)(v2 + 424) - 1;
      if (v32 > 8) {
        int v33 = 1;
      }
      else {
        int v33 = dword_1004BDEF4[v32];
      }
      double result = sub_100138994(v33);
      if (!result) {
        sub_100410814();
      }
      *(_DWORD *)(v13 + 48) |= 8u;
      *(_DWORD *)(v13 + 40) = v33;
      if (*(unsigned char *)(v2 + 576))
      {
        *(_DWORD *)(v7 + 92) |= 0x200u;
        uint64_t v34 = *(void *)(v7 + 72);
        if (!v34) {
          operator new();
        }
        int v35 = *(_DWORD *)(v34 + 44);
        uint64_t v37 = *(void *)(v2 + 488);
        uint64_t v36 = *(void *)(v2 + 496);
        *(void *)(v34 + 16) = *(void *)(v2 + 480);
        *(void *)(v34 + 24) = v36;
        *(_DWORD *)(v34 + 44) = v35 | 7;
        *(void *)(v34 + 32) = v37;
        *(_DWORD *)(v7 + 92) |= 0x400u;
        uint64_t v38 = *(void *)(v7 + 80);
        if (!v38) {
          operator new();
        }
        int v39 = *(_DWORD *)(v38 + 92);
        *(void *)(v38 + 16) = *(void *)(v2 + 504);
        *(void *)(v38 + 24) = *(void *)(v2 + 512);
        *(void *)(v38 + 32) = *(void *)(v2 + 520);
        *(void *)(v38 + 40) = *(void *)(v2 + 528);
        *(void *)(v38 + 48) = *(void *)(v2 + 536);
        *(void *)(v38 + 56) = *(void *)(v2 + 544);
        *(void *)(v38 + 64) = *(void *)(v2 + 552);
        *(void *)(v38 + 72) = *(void *)(v2 + 560);
        uint64_t v40 = *(void *)(v2 + 568);
        *(_DWORD *)(v38 + 92) = v39 | 0x1FF;
        *(void *)(v38 + 80) = v40;
      }
      v2 += 584;
      uint64_t v3 = v42;
    }
    while (v2 != v43);
  }
  return result;
}

void sub_100299AD4()
{
}

uint64_t sub_100299B44(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  sub_100132F78(v14);
  if (sub_100293AD0((uint64_t)v14, *(void *)(a1 + 120)))
  {
    v16 |= 2u;
    uint64_t v6 = v15;
    if (!v15) {
      operator new();
    }
    *(_DWORD *)(v15 + 44) |= 4u;
    uint64_t v7 = *(void *)(v6 + 32);
    if (!v7) {
      operator new();
    }
    *(_DWORD *)(v7 + 44) |= 2u;
    uint64_t v8 = *(void *)(v7 + 24);
    if (!v8) {
      operator new();
    }
    *(_DWORD *)(v8 + 28) |= 1u;
    uint64_t v9 = *(void *)(v8 + 16);
    if (!v9) {
      operator new();
    }
    *(_DWORD *)(v9 + 36) |= 1u;
    int v10 = *(int **)(v9 + 16);
    if (!v10) {
      operator new();
    }
    *(_DWORD *)(v8 + 28) |= 1u;
    *(_DWORD *)(v9 + 36) |= 2u;
    uint64_t v12 = *(void *)(v9 + 24);
    if (!v12) {
      operator new();
    }
    sub_1002992C8(v10, a2);
    sub_1002995EC(v12, a3);
    uint64_t v11 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v14);
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_100428948();
    }
    uint64_t v11 = 0;
  }
  sub_100133D9C(v14);
  return v11;
}

void sub_100299D98()
{
}

uint64_t sub_100299E38(uint64_t a1, uint64_t a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_1004293F0();
  }
  sub_100132F78(v9);
  if (sub_100293AD0((uint64_t)v9, *(void *)(a1 + 120)))
  {
    v11 |= 2u;
    uint64_t v4 = v10;
    if (!v10) {
      operator new();
    }
    *(_DWORD *)(v10 + 44) |= 2u;
    uint64_t v5 = *(void *)(v4 + 24);
    if (!v5) {
      operator new();
    }
    unsigned int v6 = sub_100299FF4(a2);
    if (!sub_1000719F4(v6)) {
      __assert_rtn("set_device_type", "CLPNearbyd.pb.h", 5953, "::CLP::LogEntry::Nearbyd::DeviceType_IsValid(value)");
    }
    *(_DWORD *)(v5 + 392) |= 0x20u;
    *(_DWORD *)(v5 + 384) = v6;
    uint64_t v7 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v9);
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_100428948();
    }
    uint64_t v7 = 0;
  }
  sub_100133D9C(v9);
  return v7;
}

void sub_100299FA8()
{
}

uint64_t sub_100299FF4(uint64_t a1)
{
  uint64_t result = 0;
  if ((int)a1 <= 99)
  {
    switch((int)a1)
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
        uint64_t result = a1;
        break;
      case 7:
        uint64_t result = 12;
        break;
      case 8:
        uint64_t result = 13;
        break;
      case 9:
        uint64_t result = 14;
        break;
      case 10:
        uint64_t result = 15;
        break;
      case 11:
        uint64_t result = 20;
        break;
      case 12:
        uint64_t result = 21;
        break;
      case 13:
        uint64_t result = 22;
        break;
      case 14:
        uint64_t result = 23;
        break;
      case 15:
        uint64_t result = 30;
        break;
      case 16:
        uint64_t result = 31;
        break;
      case 17:
        uint64_t result = 32;
        break;
      case 18:
        uint64_t result = 33;
        break;
      case 19:
        uint64_t result = 39;
        break;
      case 20:
        uint64_t result = 40;
        break;
      case 21:
        uint64_t result = 41;
        break;
      case 22:
        uint64_t result = 42;
        break;
      case 23:
        uint64_t result = 47;
        break;
      default:
        return result;
    }
  }
  else if ((int)a1 > 199)
  {
    if (a1 == 999) {
      int v3 = 101;
    }
    else {
      int v3 = 0;
    }
    if (a1 == 997) {
      unsigned int v4 = 100;
    }
    else {
      unsigned int v4 = v3;
    }
    if (a1 == 201) {
      int v5 = 29;
    }
    else {
      int v5 = 0;
    }
    if (a1 == 200) {
      unsigned int v6 = 11;
    }
    else {
      unsigned int v6 = v5;
    }
    if ((int)a1 <= 996) {
      return v6;
    }
    else {
      return v4;
    }
  }
  else
  {
    switch((int)a1)
    {
      case 'd':
        uint64_t result = 7;
        break;
      case 'e':
        uint64_t result = 8;
        break;
      case 'f':
        uint64_t result = 9;
        break;
      case 'g':
        uint64_t result = 10;
        break;
      case 'h':
        uint64_t result = 16;
        break;
      case 'i':
        uint64_t result = 17;
        break;
      case 'j':
        uint64_t result = 18;
        break;
      case 'k':
        uint64_t result = 19;
        break;
      case 'l':
        uint64_t result = 24;
        break;
      case 'm':
        uint64_t result = 25;
        break;
      case 'n':
        uint64_t result = 26;
        break;
      case 'o':
        uint64_t result = 27;
        break;
      case 'p':
        uint64_t result = 28;
        break;
      case 'q':
        uint64_t result = 34;
        break;
      case 'r':
        uint64_t result = 35;
        break;
      case 's':
        uint64_t result = 36;
        break;
      case 't':
        uint64_t result = 37;
        break;
      case 'u':
        uint64_t result = 38;
        break;
      case 'v':
        uint64_t result = 43;
        break;
      case 'w':
        uint64_t result = 44;
        break;
      case 'x':
        uint64_t result = 45;
        break;
      case 'y':
        uint64_t result = 46;
        break;
      default:
        return result;
    }
  }
  return result;
}

uint64_t sub_10029A294(uint64_t a1, uint64_t a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100429424();
  }
  sub_100132F78(v10);
  if (sub_100293AD0((uint64_t)v10, *(void *)(a1 + 120)))
  {
    v12 |= 2u;
    uint64_t v4 = v11;
    if (!v11) {
      operator new();
    }
    *(_DWORD *)(v11 + 44) |= 2u;
    uint64_t v5 = *(void *)(v4 + 24);
    if (!v5) {
      operator new();
    }
    *(_DWORD *)(v5 + 392) |= 0x40u;
    uint64_t v6 = *(void *)(v5 + 56);
    if (!v6) {
      operator new();
    }
    int v7 = *(_DWORD *)(v6 + 40);
    *(unsigned char *)(v6 + 24) = *(unsigned char *)a2;
    *(_DWORD *)(v6 + 40) = v7 | 0x7FA;
    *(void *)(v6 + 26) = *(void *)(a2 + 4);
    uint64_t v8 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v10);
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_100428948();
    }
    uint64_t v8 = 0;
  }
  sub_100133D9C(v10);
  return v8;
}

void sub_10029A414()
{
}

uint64_t sub_10029A474(uint64_t a1, unsigned int *a2)
{
  sub_100132F78(v45);
  if (sub_100293AD0((uint64_t)v45, *(void *)(a1 + 120)))
  {
    uint64_t v42 = a1;
    v47 |= 2u;
    uint64_t v4 = v46;
    if (!v46) {
      operator new();
    }
    *(_DWORD *)(v46 + 44) |= 2u;
    uint64_t v5 = *(void *)(v4 + 24);
    if (!v5) {
      operator new();
    }
    *(_DWORD *)(v5 + 392) |= 0x80u;
    uint64_t v6 = *(void *)(v5 + 64);
    if (!v6) {
      operator new();
    }
    unsigned int v7 = sub_100299FF4(*a2);
    if (!sub_1000719F4(v7)) {
      __assert_rtn("set_device_type", "CLPNearbyd.pb.h", 3796, "::CLP::LogEntry::Nearbyd::DeviceType_IsValid(value)");
    }
    int v8 = *(_DWORD *)(v6 + 68);
    *(_DWORD *)(v6 + 16) = v7;
    *(void *)(v6 + 24) = 0x2500000003;
    *(_DWORD *)(v6 + 68) = v8 | 0x1D;
    *(_DWORD *)(v6 + 56) = 37;
    uint64_t v9 = atomic_load(a2 + 1);
    unsigned int v10 = sub_100294148(v9);
    if (!sub_100071A10(v10)) {
      __assert_rtn("set_accessory_type", "CLPNearbyd.pb.h", 3932, "::CLP::LogEntry::Nearbyd::AccessoryType_IsValid(value)");
    }
    *(_DWORD *)(v6 + 68) |= 0x40u;
    *(_DWORD *)(v6 + 60) = v10;
    uint64_t v11 = (void *)*((void *)a2 + 2);
    if (v11)
    {
      if (v11[1] - *v11 != 72) {
        __assert_rtn("logCalReverseLUTs", "PRProtobufLogger.cpp", 1517, "luts.size() == measurement_engine::kNumOfLUT");
      }
      uint64_t v40 = a2;
      uint64_t v12 = 0;
      uint64_t v43 = (void *)*((void *)a2 + 2);
      do
      {
        uint64_t v13 = (void *)(*v11 + 24 * v12);
        if (v13[1] - *v13 != 888) {
          __assert_rtn("logCalReverseLUTs", "PRProtobufLogger.cpp", 1520, "table.size() == measurement_engine::kLutSize");
        }
        for (uint64_t i = 0; i != 37; ++i)
        {
          uint64_t v15 = (void *)(*v13 + 24 * i);
          if (v15[1] - *v15 != 148) {
            __assert_rtn("logCalReverseLUTs", "PRProtobufLogger.cpp", 1523, "row.size() == measurement_engine::kLutSize");
          }
          uint64_t v16 = 0;
          do
          {
            double v17 = (__int16 *)(*v15 + v16);
            int v18 = *v17;
            int v19 = v17[1];
            int v20 = *(_DWORD *)(v6 + 44);
            uint64_t v21 = *(int *)(v6 + 40);
            if ((int)v21 >= v20)
            {
              if (v20 == *(_DWORD *)(v6 + 48))
              {
                wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v6 + 32), v20 + 1);
                int v20 = *(_DWORD *)(v6 + 44);
              }
              *(_DWORD *)(v6 + 44) = v20 + 1;
              sub_100089644();
            }
            uint64_t v22 = *(void *)(v6 + 32);
            *(_DWORD *)(v6 + 40) = v21 + 1;
            int v23 = *(_DWORD **)(v22 + 8 * v21);
            v16 += 4;
            v23[7] |= 3u;
            v23[4] = v18;
            v23[5] = v19;
          }
          while (v16 != 148);
        }
        ++v12;
        uint64_t v11 = v43;
      }
      while (v12 != 3);
      int v24 = 1;
      a2 = v40;
    }
    else
    {
      int v24 = 0;
    }
    uint64_t v26 = (void *)*((void *)a2 + 12);
    if (v26)
    {
      int v41 = v24;
      if (v26[1] - *v26 != 72) {
        __assert_rtn("logCalReverseLUTs", "PRProtobufLogger.cpp", 1538, "luts.size() == measurement_engine::kNumOfLUT");
      }
      uint64_t v27 = 0;
      int v44 = (void *)*((void *)a2 + 12);
      do
      {
        int v28 = (void *)(*v26 + 24 * v27);
        if (v28[1] - *v28 != 888) {
          __assert_rtn("logCalReverseLUTs", "PRProtobufLogger.cpp", 1541, "table.size() == measurement_engine::kLutSize");
        }
        for (uint64_t j = 0; j != 37; ++j)
        {
          int v30 = (void *)(*v28 + 24 * j);
          if (v30[1] - *v30 != 148) {
            __assert_rtn("logCalReverseLUTs", "PRProtobufLogger.cpp", 1544, "row.size() == measurement_engine::kLutSize");
          }
          uint64_t v31 = 0;
          do
          {
            int v32 = (__int16 *)(*v30 + v31);
            int v33 = *v32;
            int v34 = v32[1];
            int v35 = *(_DWORD *)(v6 + 44);
            uint64_t v36 = *(int *)(v6 + 40);
            if ((int)v36 >= v35)
            {
              if (v35 == *(_DWORD *)(v6 + 48))
              {
                wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v6 + 32), v35 + 1);
                int v35 = *(_DWORD *)(v6 + 44);
              }
              *(_DWORD *)(v6 + 44) = v35 + 1;
              sub_100089644();
            }
            uint64_t v37 = *(void *)(v6 + 32);
            *(_DWORD *)(v6 + 40) = v36 + 1;
            uint64_t v38 = *(_DWORD **)(v37 + 8 * v36);
            v31 += 4;
            v38[7] |= 3u;
            v38[4] = v33;
            v38[5] = v34;
          }
          while (v31 != 148);
        }
        ++v27;
        uint64_t v26 = v44;
      }
      while (v27 != 3);
      int v24 = v41 + 1;
    }
    *(_DWORD *)(v6 + 68) |= 2u;
    *(_DWORD *)(v6 + 20) = v24;
    uint64_t v25 = sub_100293BB4(v42, (wireless_diagnostics::google::protobuf::MessageLite *)v45);
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_100428948();
    }
    uint64_t v25 = 0;
  }
  sub_100133D9C(v45);
  return v25;
}

void sub_10029A994()
{
}

uint64_t sub_10029AA1C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4)
{
  if (sub_1001C8E0C(a4))
  {
    sub_100132F78(v45);
    if (sub_100293AD0((uint64_t)v45, *(void *)(a1 + 120)))
    {
      v47 |= 2u;
      uint64_t v8 = v46;
      if (!v46) {
        operator new();
      }
      *(_DWORD *)(v46 + 44) |= 2u;
      uint64_t v9 = *(void *)(v8 + 24);
      if (!v9) {
        operator new();
      }
      *(_DWORD *)(v9 + 392) |= 0x200u;
      uint64_t v10 = *(void *)(v9 + 80);
      if (!v10) {
        operator new();
      }
      int v11 = sub_1001C8D9C(a4);
      unsigned __int8 v12 = 0;
      if (v11)
      {
        do
        {
          unsigned int v13 = v11;
          v12 += v11 & 1;
          LOBYTE(v11) = v11 >> 1;
        }
        while (v13 > 1);
      }
      unsigned int v14 = sub_100299FF4(a2);
      if (sub_1000719F4(v14))
      {
        int v15 = *(_DWORD *)(v10 + 108);
        *(_DWORD *)(v10 + 16) = v14;
        *(_DWORD *)(v10 + 20) = v12;
        *(_DWORD *)(v10 + 24) = 2 * v12;
        *(_DWORD *)(v10 + 28) = 181;
        *(_DWORD *)(v10 + 108) = v15 | 0x1F;
        *(_DWORD *)(v10 + 64) = 181;
        unsigned int v16 = sub_100294148(a3);
        if (sub_100071A10(v16))
        {
          *(_DWORD *)(v10 + 108) |= 0x200u;
          *(_DWORD *)(v10 + 68) = v16;
          if (sub_1001C8DA4(a4))
          {
            if (!a4[64]) {
              sub_10000AE44();
            }
            if (!a4[128]) {
              sub_10000AE44();
            }
            for (int i = 0; i != 181; ++i)
            {
              for (int j = 0; j != 181; ++j)
              {
                int v19 = sub_1001C8204((uint64_t)(a4 + 8), i, j);
                int v20 = *(_DWORD *)(v10 + 40);
                if (v20 == *(_DWORD *)(v10 + 44))
                {
                  sub_10006F57C(v10 + 32, v20 + 1);
                  int v20 = *(_DWORD *)(v10 + 40);
                }
                uint64_t v21 = *(void *)(v10 + 32);
                *(_DWORD *)(v10 + 40) = v20 + 1;
                *(_DWORD *)(v21 + 4 * v20) = v19;
              }
            }
            for (int k = 0; k != 181; ++k)
            {
              for (int m = 0; m != 181; ++m)
              {
                int v24 = sub_1001C8204((uint64_t)(a4 + 72), k, m);
                int v25 = *(_DWORD *)(v10 + 56);
                if (v25 == *(_DWORD *)(v10 + 60))
                {
                  sub_10006F57C(v10 + 48, v25 + 1);
                  int v25 = *(_DWORD *)(v10 + 56);
                }
                uint64_t v26 = *(void *)(v10 + 48);
                *(_DWORD *)(v10 + 56) = v25 + 1;
                *(_DWORD *)(v26 + 4 * v25) = v24;
              }
            }
          }
          if (sub_1001C8DD8(a4))
          {
            if (!a4[192]) {
              sub_10000AE44();
            }
            if (!a4[256]) {
              sub_10000AE44();
            }
            int v27 = 0;
            uint64_t v28 = (uint64_t)(a4 + 136);
            uint64_t v29 = (uint64_t)(a4 + 200);
            do
            {
              for (int n = 0; n != 181; ++n)
              {
                int v31 = sub_1001C8204(v28, v27, n);
                int v32 = *(_DWORD *)(v10 + 80);
                if (v32 == *(_DWORD *)(v10 + 84))
                {
                  sub_10006F57C(v10 + 72, v32 + 1);
                  int v32 = *(_DWORD *)(v10 + 80);
                }
                uint64_t v33 = *(void *)(v10 + 72);
                *(_DWORD *)(v10 + 80) = v32 + 1;
                *(_DWORD *)(v33 + 4 * v32) = v31;
              }
              ++v27;
            }
            while (v27 != 181);
            for (iint i = 0; ii != 181; ++ii)
            {
              for (jint j = 0; jj != 181; ++jj)
              {
                int v36 = sub_1001C8204(v29, ii, jj);
                int v37 = *(_DWORD *)(v10 + 96);
                if (v37 == *(_DWORD *)(v10 + 100))
                {
                  sub_10006F57C(v10 + 88, v37 + 1);
                  int v37 = *(_DWORD *)(v10 + 96);
                }
                uint64_t v38 = *(void *)(v10 + 88);
                *(_DWORD *)(v10 + 96) = v37 + 1;
                *(_DWORD *)(v38 + 4 * v37) = v36;
              }
            }
            uint64_t v39 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v45);
LABEL_50:
            sub_100133D9C(v45);
            return v39;
          }
          int v41 = "calBlob.ch9CalAvailable()";
          int v42 = 1605;
          uint64_t v43 = "PRProtobufLogger.cpp";
          int v44 = "logCalForwardLUTs";
        }
        else
        {
          int v41 = "::CLP::LogEntry::Nearbyd::AccessoryType_IsValid(value)";
          int v42 = 4241;
          uint64_t v43 = "CLPNearbyd.pb.h";
          int v44 = "set_accessory_type";
        }
      }
      else
      {
        int v41 = "::CLP::LogEntry::Nearbyd::DeviceType_IsValid(value)";
        int v42 = 4030;
        uint64_t v43 = "CLPNearbyd.pb.h";
        int v44 = "set_device_type";
      }
      __assert_rtn(v44, v43, v42, v41);
    }
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_100428948();
    }
    uint64_t v39 = 0;
    goto LABEL_50;
  }
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
    sub_100429458();
  }
  return 0;
}

void sub_10029AE98()
{
}

uint64_t sub_10029AF28(uint64_t a1, uint64_t *a2)
{
  sub_100132F78(v19);
  if (sub_100293AD0((uint64_t)v19, *(void *)(a1 + 120)))
  {
    v21 |= 2u;
    uint64_t v4 = v20;
    if (!v20) {
      operator new();
    }
    *(_DWORD *)(v20 + 44) |= 2u;
    uint64_t v5 = *(void *)(v4 + 24);
    if (!v5) {
      operator new();
    }
    *(_DWORD *)(v5 + 396) |= 0x80u;
    uint64_t v6 = *(int **)(v5 + 320);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = *a2;
    uint64_t v8 = a2[1];
    if (*a2 != v8)
    {
      do
      {
        int v9 = v6[7];
        uint64_t v10 = v6[6];
        if ((int)v10 >= v9)
        {
          if (v9 == v6[8])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v6 + 4), v9 + 1);
            int v9 = v6[7];
          }
          v6[7] = v9 + 1;
          sub_1000896A8();
        }
        uint64_t v11 = *((void *)v6 + 2);
        v6[6] = v10 + 1;
        uint64_t v12 = *(void *)(v11 + 8 * v10);
        int v13 = *(_DWORD *)(v12 + 36);
        *(_DWORD *)(v12 + 16) = *(_DWORD *)v7;
        std::string::size_type v14 = *(void *)(v7 + 8);
        *(_DWORD *)(v12 + 20) = v14;
        int v15 = *(const std::string::value_type **)(v7 + 16);
        *(_DWORD *)(v12 + 36) = v13 | 7;
        unsigned int v16 = *(std::string **)(v12 + 24);
        if (v16 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        std::string::assign(v16, v15, v14);
        v7 += 40;
      }
      while (v7 != v8);
    }
    uint64_t v17 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v19);
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_100428948();
    }
    uint64_t v17 = 0;
  }
  sub_100133D9C(v19);
  return v17;
}

void sub_10029B164()
{
}

uint64_t sub_10029B1C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100132F78(v95);
  if (sub_100293AD0((uint64_t)v95, *(void *)(a1 + 120)))
  {
    v97 |= 2u;
    uint64_t v6 = v96;
    if (!v96) {
      operator new();
    }
    *(_DWORD *)(v96 + 44) |= 2u;
    uint64_t v7 = *(void *)(v6 + 24);
    if (!v7) {
      operator new();
    }
    *(_DWORD *)(v7 + 392) |= 0x800u;
    uint64_t v8 = *(void *)(v7 + 96);
    if (!v8) {
      operator new();
    }
    unsigned int v9 = sub_100294148(a2);
    if (!sub_100071A10(v9)) {
      __assert_rtn("set_accessory_type", "CLPNearbyd.pb.h", 4332, "::CLP::LogEntry::Nearbyd::AccessoryType_IsValid(value)");
    }
    uint64_t v10 = 0;
    *(_DWORD *)(v8 + 40) |= 1u;
    *(_DWORD *)(v8 + 32) = v9;
    int v11 = *(_DWORD *)(v8 + 24);
    uint64_t v12 = a3;
    do
    {
      for (uint64_t i = 0; i != 168; i += 4)
      {
        int v14 = *(_DWORD *)(v12 + i);
        if (v11 == *(_DWORD *)(v8 + 28))
        {
          sub_10006F57C(v8 + 16, v11 + 1);
          int v11 = *(_DWORD *)(v8 + 24);
        }
        int v15 = v11;
        uint64_t v16 = *(void *)(v8 + 16);
        *(_DWORD *)(v8 + 24) = ++v11;
        *(_DWORD *)(v16 + 4 * v15) = v14;
      }
      ++v10;
      v12 += 168;
    }
    while (v10 != 50);
    uint64_t v17 = a3 + 8600;
    uint64_t v18 = a3 + 13600;
    do
    {
      for (uint64_t j = 0; j != 200; j += 4)
      {
        int v20 = *(_DWORD *)(v17 + j);
        if (v11 == *(_DWORD *)(v8 + 28))
        {
          sub_10006F57C(v8 + 16, v11 + 1);
          int v11 = *(_DWORD *)(v8 + 24);
          uint64_t v16 = *(void *)(v8 + 16);
        }
        int v21 = v11++;
        *(_DWORD *)(v8 + 24) = v11;
        *(_DWORD *)(v16 + 4 * v21) = v20;
      }
      v17 += 200;
    }
    while (v17 != v18);
    uint64_t v22 = a3 + 13700;
    uint64_t v23 = a3 + 14900;
    do
    {
      for (uint64_t k = 0; k != 100; k += 4)
      {
        int v25 = *(_DWORD *)(v22 + k);
        if (v11 == *(_DWORD *)(v8 + 28))
        {
          sub_10006F57C(v8 + 16, v11 + 1);
          int v11 = *(_DWORD *)(v8 + 24);
          uint64_t v16 = *(void *)(v8 + 16);
        }
        int v26 = v11++;
        *(_DWORD *)(v8 + 24) = v11;
        *(_DWORD *)(v16 + 4 * v26) = v25;
      }
      v22 += 100;
    }
    while (v22 != v23);
    uint64_t v27 = a3 + 14948;
    uint64_t v28 = a3 + 15236;
    do
    {
      for (uint64_t m = 0; m != 48; m += 4)
      {
        int v30 = *(_DWORD *)(v27 + m);
        if (v11 == *(_DWORD *)(v8 + 28))
        {
          sub_10006F57C(v8 + 16, v11 + 1);
          int v11 = *(_DWORD *)(v8 + 24);
          uint64_t v16 = *(void *)(v8 + 16);
        }
        int v31 = v11++;
        *(_DWORD *)(v8 + 24) = v11;
        *(_DWORD *)(v16 + 4 * v31) = v30;
      }
      v27 += 48;
    }
    while (v27 != v28);
    for (uint64_t n = 0; n != 200; n += 4)
    {
      int v33 = *(_DWORD *)(a3 + 8400 + n);
      if (v11 == *(_DWORD *)(v8 + 28))
      {
        sub_10006F57C(v8 + 16, v11 + 1);
        int v11 = *(_DWORD *)(v8 + 24);
        uint64_t v16 = *(void *)(v8 + 16);
      }
      int v34 = v11++;
      *(_DWORD *)(v8 + 24) = v11;
      *(_DWORD *)(v16 + 4 * v34) = v33;
    }
    for (iuint64_t i = 0; ii != 100; ii += 4)
    {
      int v36 = *(_DWORD *)(v18 + ii);
      if (v11 == *(_DWORD *)(v8 + 28))
      {
        sub_10006F57C(v8 + 16, v11 + 1);
        int v11 = *(_DWORD *)(v8 + 24);
        uint64_t v16 = *(void *)(v8 + 16);
      }
      int v37 = v11++;
      *(_DWORD *)(v8 + 24) = v11;
      *(_DWORD *)(v16 + 4 * v37) = v36;
    }
    for (juint64_t j = 0; jj != 48; jj += 4)
    {
      int v39 = *(_DWORD *)(v23 + jj);
      if (v11 == *(_DWORD *)(v8 + 28))
      {
        sub_10006F57C(v8 + 16, v11 + 1);
        int v11 = *(_DWORD *)(v8 + 24);
        uint64_t v16 = *(void *)(v8 + 16);
      }
      int v40 = v11++;
      *(_DWORD *)(v8 + 24) = v11;
      *(_DWORD *)(v16 + 4 * v40) = v39;
    }
    for (kuint64_t k = 0; kk != 24; kk += 4)
    {
      int v42 = *(_DWORD *)(v28 + kk);
      if (v11 == *(_DWORD *)(v8 + 28))
      {
        sub_10006F57C(v8 + 16, v11 + 1);
        int v11 = *(_DWORD *)(v8 + 24);
        uint64_t v16 = *(void *)(v8 + 16);
      }
      int v43 = v11++;
      *(_DWORD *)(v8 + 24) = v11;
      *(_DWORD *)(v16 + 4 * v43) = v42;
    }
    for (muint64_t m = 0; mm != 200; mm += 4)
    {
      int v45 = *(_DWORD *)(a3 + 15264 + mm);
      if (v11 == *(_DWORD *)(v8 + 28))
      {
        sub_10006F57C(v8 + 16, v11 + 1);
        int v11 = *(_DWORD *)(v8 + 24);
        uint64_t v16 = *(void *)(v8 + 16);
      }
      int v46 = v11++;
      *(_DWORD *)(v8 + 24) = v11;
      *(_DWORD *)(v16 + 4 * v46) = v45;
    }
    for (nuint64_t n = 0; nn != 200; nn += 4)
    {
      int v48 = *(_DWORD *)(a3 + 15464 + nn);
      if (v11 == *(_DWORD *)(v8 + 28))
      {
        sub_10006F57C(v8 + 16, v11 + 1);
        int v11 = *(_DWORD *)(v8 + 24);
        uint64_t v16 = *(void *)(v8 + 16);
      }
      int v49 = v11++;
      *(_DWORD *)(v8 + 24) = v11;
      *(_DWORD *)(v16 + 4 * v49) = v48;
    }
    for (uint64_t i1 = 0; i1 != 200; i1 += 4)
    {
      int v51 = *(_DWORD *)(a3 + 15664 + i1);
      if (v11 == *(_DWORD *)(v8 + 28))
      {
        sub_10006F57C(v8 + 16, v11 + 1);
        int v11 = *(_DWORD *)(v8 + 24);
        uint64_t v16 = *(void *)(v8 + 16);
      }
      int v52 = v11++;
      *(_DWORD *)(v8 + 24) = v11;
      *(_DWORD *)(v16 + 4 * v52) = v51;
    }
    for (uint64_t i2 = 0; i2 != 200; i2 += 4)
    {
      int v54 = *(_DWORD *)(a3 + 15864 + i2);
      if (v11 == *(_DWORD *)(v8 + 28))
      {
        sub_10006F57C(v8 + 16, v11 + 1);
        int v55 = *(_DWORD *)(v8 + 24);
        uint64_t v16 = *(void *)(v8 + 16);
      }
      else
      {
        int v55 = v11;
      }
      int v11 = v55 + 1;
      *(_DWORD *)(v8 + 24) = v55 + 1;
      *(_DWORD *)(v16 + 4 * v55) = v54;
    }
    double v56 = *(double *)(a3 + 16064);
    if (v11 == *(_DWORD *)(v8 + 28))
    {
      sub_10006F57C(v8 + 16, v55 + 2);
      int v11 = *(_DWORD *)(v8 + 24);
      uint64_t v16 = *(void *)(v8 + 16);
    }
    uint64_t v57 = 0;
    float v58 = v56;
    int v59 = v11 + 1;
    *(_DWORD *)(v8 + 24) = v11 + 1;
    *(float *)(v16 + 4 * v11) = v58;
    do
    {
      int v60 = *(_DWORD *)(a3 + 16072 + v57);
      if (v59 == *(_DWORD *)(v8 + 28))
      {
        sub_10006F57C(v8 + 16, v59 + 1);
        int v59 = *(_DWORD *)(v8 + 24);
        uint64_t v16 = *(void *)(v8 + 16);
      }
      int v61 = v59++;
      *(_DWORD *)(v8 + 24) = v59;
      *(_DWORD *)(v16 + 4 * v61) = v60;
      v57 += 4;
    }
    while (v57 != 100);
    for (uint64_t i3 = 0; i3 != 100; i3 += 4)
    {
      int v63 = *(_DWORD *)(a3 + 16172 + i3);
      if (v59 == *(_DWORD *)(v8 + 28))
      {
        sub_10006F57C(v8 + 16, v59 + 1);
        int v59 = *(_DWORD *)(v8 + 24);
        uint64_t v16 = *(void *)(v8 + 16);
      }
      int v64 = v59++;
      *(_DWORD *)(v8 + 24) = v59;
      *(_DWORD *)(v16 + 4 * v64) = v63;
    }
    for (uint64_t i4 = 0; i4 != 100; i4 += 4)
    {
      int v66 = *(_DWORD *)(a3 + 16272 + i4);
      if (v59 == *(_DWORD *)(v8 + 28))
      {
        sub_10006F57C(v8 + 16, v59 + 1);
        int v59 = *(_DWORD *)(v8 + 24);
        uint64_t v16 = *(void *)(v8 + 16);
      }
      int v67 = v59++;
      *(_DWORD *)(v8 + 24) = v59;
      *(_DWORD *)(v16 + 4 * v67) = v66;
    }
    for (uint64_t i5 = 0; i5 != 100; i5 += 4)
    {
      int v69 = *(_DWORD *)(a3 + 16372 + i5);
      if (v59 == *(_DWORD *)(v8 + 28))
      {
        sub_10006F57C(v8 + 16, v59 + 1);
        int v70 = *(_DWORD *)(v8 + 24);
        uint64_t v16 = *(void *)(v8 + 16);
      }
      else
      {
        int v70 = v59;
      }
      int v59 = v70 + 1;
      *(_DWORD *)(v8 + 24) = v70 + 1;
      *(_DWORD *)(v16 + 4 * v70) = v69;
    }
    double v71 = *(double *)(a3 + 16472);
    if (v59 == *(_DWORD *)(v8 + 28))
    {
      sub_10006F57C(v8 + 16, v70 + 2);
      int v59 = *(_DWORD *)(v8 + 24);
      uint64_t v16 = *(void *)(v8 + 16);
    }
    uint64_t v72 = 0;
    float v73 = v71;
    int v74 = v59 + 1;
    *(_DWORD *)(v8 + 24) = v59 + 1;
    *(float *)(v16 + 4 * v59) = v73;
    do
    {
      int v75 = *(_DWORD *)(a3 + 16480 + v72);
      if (v74 == *(_DWORD *)(v8 + 28))
      {
        sub_10006F57C(v8 + 16, v74 + 1);
        int v74 = *(_DWORD *)(v8 + 24);
        uint64_t v16 = *(void *)(v8 + 16);
      }
      int v76 = v74++;
      *(_DWORD *)(v8 + 24) = v74;
      *(_DWORD *)(v16 + 4 * v76) = v75;
      v72 += 4;
    }
    while (v72 != 48);
    for (uint64_t i6 = 0; i6 != 48; i6 += 4)
    {
      int v78 = *(_DWORD *)(a3 + 16528 + i6);
      if (v74 == *(_DWORD *)(v8 + 28))
      {
        sub_10006F57C(v8 + 16, v74 + 1);
        int v74 = *(_DWORD *)(v8 + 24);
        uint64_t v16 = *(void *)(v8 + 16);
      }
      int v79 = v74++;
      *(_DWORD *)(v8 + 24) = v74;
      *(_DWORD *)(v16 + 4 * v79) = v78;
    }
    for (uint64_t i7 = 0; i7 != 48; i7 += 4)
    {
      int v81 = *(_DWORD *)(a3 + 16576 + i7);
      if (v74 == *(_DWORD *)(v8 + 28))
      {
        sub_10006F57C(v8 + 16, v74 + 1);
        int v74 = *(_DWORD *)(v8 + 24);
        uint64_t v16 = *(void *)(v8 + 16);
      }
      int v82 = v74++;
      *(_DWORD *)(v8 + 24) = v74;
      *(_DWORD *)(v16 + 4 * v82) = v81;
    }
    for (uint64_t i8 = 0; i8 != 48; i8 += 4)
    {
      int v84 = *(_DWORD *)(a3 + 16624 + i8);
      if (v74 == *(_DWORD *)(v8 + 28))
      {
        sub_10006F57C(v8 + 16, v74 + 1);
        int v85 = *(_DWORD *)(v8 + 24);
        uint64_t v16 = *(void *)(v8 + 16);
      }
      else
      {
        int v85 = v74;
      }
      int v74 = v85 + 1;
      *(_DWORD *)(v8 + 24) = v85 + 1;
      *(_DWORD *)(v16 + 4 * v85) = v84;
    }
    double v86 = *(double *)(a3 + 16672);
    int v87 = *(_DWORD *)(v8 + 28);
    if (v74 == v87)
    {
      sub_10006F57C(v8 + 16, v85 + 2);
      uint64_t v16 = *(void *)(v8 + 16);
      int v74 = *(_DWORD *)(v8 + 24);
      int v87 = *(_DWORD *)(v8 + 28);
    }
    float v88 = v86;
    int v89 = v74 + 1;
    *(_DWORD *)(v8 + 24) = v74 + 1;
    *(float *)(v16 + 4 * v74) = v88;
    int v90 = *(_DWORD *)(a3 + 16680);
    if (v74 + 1 == v87)
    {
      sub_10006F57C(v8 + 16, v74 + 2);
      uint64_t v16 = *(void *)(v8 + 16);
      int v89 = *(_DWORD *)(v8 + 24);
      int v87 = *(_DWORD *)(v8 + 28);
    }
    int v91 = v89 + 1;
    *(_DWORD *)(v8 + 24) = v89 + 1;
    *(_DWORD *)(v16 + 4 * v89) = v90;
    int v92 = *(_DWORD *)(a3 + 16684);
    if (v89 + 1 == v87)
    {
      sub_10006F57C(v8 + 16, v89 + 2);
      int v91 = *(_DWORD *)(v8 + 24);
      uint64_t v16 = *(void *)(v8 + 16);
    }
    *(_DWORD *)(v8 + 24) = v91 + 1;
    *(_DWORD *)(v16 + 4 * v91) = v92;
    uint64_t v93 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v95);
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_100428948();
    }
    uint64_t v93 = 0;
  }
  sub_100133D9C(v95);
  return v93;
}

void sub_10029BAA8()
{
}

uint64_t sub_10029BB5C(uint64_t a1, const std::string *a2, uint64_t *a3, double a4)
{
  sub_10029BDF4(*(void *)(a1 + 120), v23);
  if (!v24) {
    return 0;
  }
  sub_100133C90(v20, v23);
  v22 |= 2u;
  uint64_t v8 = v21;
  if (!v21) {
    operator new();
  }
  *(_DWORD *)(v21 + 44) |= 2u;
  uint64_t v9 = *(void *)(v8 + 24);
  if (!v9) {
    operator new();
  }
  *(_DWORD *)(v9 + 392) |= 0x10000u;
  uint64_t v10 = *(void *)(v9 + 136);
  if (!v10) {
    operator new();
  }
  int v11 = *(_DWORD *)(v10 + 60);
  *(double *)(v10 + 16) = a4;
  *(_DWORD *)(v10 + 60) = v11 | 3;
  uint64_t v12 = *(std::string **)(v10 + 24);
  if (v12 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v12, a2);
  uint64_t v13 = *a3;
  uint64_t v14 = a3[1];
  if (*a3 != v14)
  {
    do
    {
      int v15 = *(_DWORD *)(v10 + 44);
      uint64_t v16 = *(int *)(v10 + 40);
      if ((int)v16 >= v15)
      {
        if (v15 == *(_DWORD *)(v10 + 48))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v10 + 32), v15 + 1);
          int v15 = *(_DWORD *)(v10 + 44);
        }
        *(_DWORD *)(v10 + 44) = v15 + 1;
        sub_100132908();
      }
      uint64_t v17 = *(void *)(v10 + 32);
      *(_DWORD *)(v10 + 40) = v16 + 1;
      sub_10029BE74(*(void *)(v17 + 8 * v16), v13);
      v13 += 160;
    }
    while (v13 != v14);
  }
  uint64_t v18 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v20);
  sub_100133D9C(v20);
  if (v24) {
    sub_100133D9C(v23);
  }
  return v18;
}

void sub_10029BD78()
{
}

uint64_t sub_10029BDF4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  sub_100132F78(v6);
  if (sub_100293AD0((uint64_t)v6, a1))
  {
    sub_100133C90(a2, v6);
    char v4 = 1;
  }
  else
  {
    char v4 = 0;
    *a2 = 0;
  }
  a2[64] = v4;
  return sub_100133D9C(v6);
}

void sub_10029BE60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

double sub_10029BE74(uint64_t a1, uint64_t a2)
{
  char v4 = *(const std::string::value_type **)a2;
  std::string::size_type v5 = *(void *)(a2 + 8) - *(void *)a2;
  *(_DWORD *)(a1 + 84) |= 1u;
  uint64_t v6 = *(std::string **)(a1 + 16);
  if (v6 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::assign(v6, v4, v5);
  uint64_t v7 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 84) |= 2u;
  *(void *)(a1 + 24) = v7;
  if (!sub_1000723D4(0)) {
    sub_1004104D0();
  }
  *(_DWORD *)(a1 + 84) |= 4u;
  *(_DWORD *)(a1 + 48) = 0;
  if ((*(_DWORD *)(a2 + 32) - 1) >= 3) {
    unsigned int v8 = 0;
  }
  else {
    unsigned int v8 = *(_DWORD *)(a2 + 32);
  }
  if (!sub_1000723D4(v8)) {
    sub_1004104D0();
  }
  int v10 = *(_DWORD *)(a1 + 84);
  int v11 = v10 | 4;
  *(_DWORD *)(a1 + 84) = v10 | 4;
  *(_DWORD *)(a1 + 48) = v8;
  if (*(unsigned char *)(a2 + 40))
  {
    double result = *(float *)(a2 + 36);
    int v11 = v10 | 0xC;
    *(_DWORD *)(a1 + 84) = v10 | 0xC;
    *(double *)(a1 + 32) = result;
  }
  if (*(unsigned char *)(a2 + 80))
  {
    *(_DWORD *)(a1 + 84) = v11 | 0x10;
    uint64_t v12 = *(void *)(a1 + 40);
    if (!v12) {
      operator new();
    }
    int v13 = *(_DWORD *)(v12 + 48);
    *(_OWORD *)(v12 + 16) = *(_OWORD *)(a2 + 56);
    double result = *(double *)(a2 + 72);
    *(_DWORD *)(v12 + 48) = v13 | 0xE;
    *(double *)(v12 + 32) = result;
    if (*(_DWORD *)(a2 + 48) == 1)
    {
      if (!sub_100071A2C(1u)) {
        sub_1004104A4();
      }
      *(_DWORD *)(v12 + 48) |= 1u;
      *(_DWORD *)(v12 + 40) = 1;
    }
  }
  if (*(unsigned char *)(a2 + 96))
  {
    double result = *(double *)(a2 + 88);
    *(_DWORD *)(a1 + 84) |= 0x20u;
    *(double *)(a1 + 56) = result;
  }
  if (*(unsigned char *)(a2 + 105))
  {
    int v14 = *(unsigned __int8 *)(a2 + 104);
    *(_DWORD *)(a1 + 84) |= 0x40u;
    *(_DWORD *)(a1 + 52) = v14;
  }
  if (*(unsigned char *)(a2 + 120))
  {
    double result = *(double *)(a2 + 112);
    *(_DWORD *)(a1 + 84) |= 0x80u;
    *(double *)(a1 + 64) = result;
  }
  if (*(unsigned char *)(a2 + 152))
  {
    double result = *(double *)(a2 + 144);
    *(_DWORD *)(a1 + 84) |= 0x100u;
    *(double *)(a1 + 72) = result;
  }
  return result;
}

void sub_10029C070()
{
}

uint64_t sub_10029C094(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, float a6, double a7)
{
  sub_10029BDF4(*(void *)(a1 + 120), v23);
  if (!v24) {
    return 0;
  }
  sub_100133C90(v20, v23);
  v22 |= 2u;
  uint64_t v14 = v21;
  if (!v21) {
    operator new();
  }
  *(_DWORD *)(v21 + 44) |= 2u;
  uint64_t v15 = *(void *)(v14 + 24);
  if (!v15) {
    operator new();
  }
  *(_DWORD *)(v15 + 392) |= 0x1000u;
  uint64_t v16 = *(void *)(v15 + 104);
  if (!v16) {
    operator new();
  }
  int v17 = *(_DWORD *)(v16 + 56);
  *(void *)(v16 + 16) = a2;
  *(float *)(v16 + 24) = a6;
  *(double *)(v16 + 32) = a7;
  *(_DWORD *)(v16 + 28) = a3;
  *(_DWORD *)(v16 + 48) = a4;
  *(_DWORD *)(v16 + 56) = v17 | 0x3F;
  *(void *)(v16 + 40) = a5;
  uint64_t v18 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v20);
  sub_100133D9C(v20);
  if (v24) {
    sub_100133D9C(v23);
  }
  return v18;
}

void sub_10029C214()
{
}

uint64_t sub_10029C28C(uint64_t a1, const std::string *a2, uint64_t a3)
{
  sub_10029BDF4(*(void *)(a1 + 120), v20);
  if (!v21) {
    return 0;
  }
  sub_100133C90(v17, v20);
  v19 |= 2u;
  uint64_t v6 = v18;
  if (!v18) {
    operator new();
  }
  *(_DWORD *)(v18 + 44) |= 2u;
  uint64_t v7 = *(void *)(v6 + 24);
  if (!v7) {
    operator new();
  }
  *(_DWORD *)(v7 + 392) |= 0x20000u;
  uint64_t v8 = *(void *)(v7 + 144);
  if (!v8) {
    operator new();
  }
  sub_10019CBDC(&__p, *(char **)(a3 + 48), *(char **)(a3 + 56), *(void *)(a3 + 56) - *(void *)(a3 + 48));
  int v9 = *(_DWORD *)(v8 + 76);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)a3;
  *(_DWORD *)(v8 + 76) = v9 | 7;
  int v10 = *(std::string **)(v8 + 32);
  if (v10 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v10, &__p);
  *(_DWORD *)(v8 + 76) |= 0x40u;
  int v11 = *(std::string **)(v8 + 56);
  if (v11 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v11, (const std::string *)(a3 + 24));
  int v12 = *(_DWORD *)(v8 + 76);
  *(_DWORD *)(v8 + 44) = *(_DWORD *)(a3 + 16);
  *(void *)(v8 + 48) = *(void *)(a3 + 72);
  *(_DWORD *)(v8 + 76) = v12 | 0xB0;
  int v13 = *(std::string **)(v8 + 64);
  if (v13 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v13, a2);
  uint64_t v14 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v17);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  sub_100133D9C(v17);
  if (v21) {
    sub_100133D9C(v20);
  }
  return v14;
}

void sub_10029C4D8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

uint64_t sub_10029C56C(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  sub_10029BDF4(*(void *)(a1 + 120), v19);
  if (!v20) {
    return 0;
  }
  sub_100133C90(v16, v19);
  v18 |= 2u;
  uint64_t v8 = v17;
  if (!v17) {
    operator new();
  }
  *(_DWORD *)(v17 + 44) |= 2u;
  uint64_t v9 = *(void *)(v8 + 24);
  if (!v9) {
    operator new();
  }
  *(_DWORD *)(v9 + 392) |= 0x2000u;
  uint64_t v10 = *(void *)(v9 + 112);
  if (!v10) {
    operator new();
  }
  *(_DWORD *)(v10 + 148) |= 1u;
  uint64_t v11 = *(void *)(v10 + 16);
  if (!v11) {
    operator new();
  }
  int v12 = *(_DWORD *)(v11 + 44);
  *(double *)(v11 + 16) = a4;
  *(void *)(v11 + 32) = a2;
  *(_DWORD *)(v11 + 44) = v12 | 7;
  uint64_t v13 = *(void *)(v11 + 24);
  if (!v13) {
    operator new();
  }
  sub_10029BE74(v13, a3);
  uint64_t v14 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v16);
  sub_100133D9C(v16);
  if (v20) {
    sub_100133D9C(v19);
  }
  return v14;
}

void sub_10029C738()
{
}

uint64_t sub_10029C7DC(uint64_t a1, const std::string *a2, std::string **a3, uint64_t a4, const std::string *a5, uint64_t a6)
{
  sub_10029BDF4(*(void *)(a1 + 120), v63);
  if (!v64) {
    return 0;
  }
  sub_100133C90(v60, v63);
  v62 |= 2u;
  uint64_t v12 = v61;
  if (!v61) {
    operator new();
  }
  *(_DWORD *)(v61 + 44) |= 2u;
  uint64_t v13 = *(void *)(v12 + 24);
  if (!v13) {
    operator new();
  }
  *(_DWORD *)(v13 + 392) |= 0x2000u;
  uint64_t v14 = *(void *)(v13 + 112);
  if (!v14) {
    operator new();
  }
  *(_DWORD *)(v14 + 148) |= 2u;
  uint64_t v15 = *(void *)(v14 + 24);
  if (!v15) {
    operator new();
  }
  *(_DWORD *)(v15 + 120) |= 1u;
  uint64_t v16 = *(std::string **)(v15 + 16);
  if (v16 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v16, a2);
  *(_DWORD *)(v15 + 120) |= 0x80u;
  uint64_t v17 = *(std::string **)(v15 + 88);
  if (v17 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v17, a5);
  int v19 = *a3;
  int v18 = a3[1];
  if (*a3 != v18)
  {
    do
    {
      int v20 = *(_DWORD *)(v15 + 36);
      uint64_t v21 = *(int *)(v15 + 32);
      if ((int)v21 >= v20)
      {
        if (v20 == *(_DWORD *)(v15 + 40))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v15 + 24), v20 + 1);
          int v20 = *(_DWORD *)(v15 + 36);
        }
        *(_DWORD *)(v15 + 36) = v20 + 1;
        sub_100132778();
      }
      uint64_t v22 = *(void *)(v15 + 24);
      *(_DWORD *)(v15 + 32) = v21 + 1;
      sub_10029D0E8(*(void *)(v22 + 8 * v21), v19);
      v19 += 2;
    }
    while (v19 != v18);
  }
  *(_DWORD *)(v15 + 120) |= 0x20u;
  uint64_t v23 = *(int **)(v15 + 72);
  if (!v23) {
    operator new();
  }
  char v24 = *(void **)a4;
  if (*(void *)a4 != a4 + 8)
  {
    while (1)
    {
      int v25 = v23[7];
      uint64_t v26 = v23[6];
      if ((int)v26 >= v25)
      {
        if (v25 == v23[8])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v23 + 4), v25 + 1);
          int v25 = v23[7];
        }
        v23[7] = v25 + 1;
        sub_100132714();
      }
      uint64_t v27 = *((void *)v23 + 2);
      v23[6] = v26 + 1;
      uint64_t v28 = *(_DWORD **)(v27 + 8 * v26);
      switch(*((_DWORD *)v24 + 7))
      {
        case 1:
          if (!sub_10008D650(1u)) {
            goto LABEL_78;
          }
          int v29 = 1;
          goto LABEL_40;
        case 2:
          if (!sub_10008D650(2u)) {
            goto LABEL_78;
          }
          int v29 = 2;
          goto LABEL_40;
        case 3:
          if (!sub_10008D650(3u)) {
            goto LABEL_78;
          }
          int v29 = 3;
          goto LABEL_40;
        case 4:
          if (!sub_10008D650(4u)) {
            goto LABEL_78;
          }
          int v29 = 4;
          goto LABEL_40;
        case 5:
          if (!sub_10008D650(0))
          {
LABEL_78:
            int v57 = 13050;
            float v58 = "set_technology";
            int v59 = "::CLP::LogEntry::Nearbyd::NI::RangingTechnology_IsValid(value)";
            goto LABEL_80;
          }
          int v29 = 0;
LABEL_40:
          v28[7] |= 1u;
          v28[4] = v29;
LABEL_41:
          int v30 = *((_DWORD *)v24 + 8);
          switch(v30)
          {
            case 3:
              if (!sub_1000723D4(3u))
              {
LABEL_79:
                int v57 = 13073;
                float v58 = "set_filter";
                int v59 = "::CLP::LogEntry::Nearbyd::NI::FilterType_IsValid(value)";
LABEL_80:
                __assert_rtn(v58, "NearbyInteractionTypes.pb.h", v57, v59);
              }
              goto LABEL_49;
            case 2:
              BOOL v31 = sub_1000723D4(2u);
LABEL_46:
              if (!v31) {
                goto LABEL_79;
              }
LABEL_49:
              v28[7] |= 2u;
              v28[5] = v30;
              break;
            case 1:
              BOOL v31 = sub_1000723D4(1u);
              goto LABEL_46;
          }
          int v32 = (void *)v24[1];
          if (v32)
          {
            do
            {
              int v33 = v32;
              int v32 = (void *)*v32;
            }
            while (v32);
          }
          else
          {
            do
            {
              int v33 = (void *)v24[2];
              BOOL v34 = *v33 == (void)v24;
              char v24 = v33;
            }
            while (!v34);
          }
          char v24 = v33;
          if (v33 == (void *)(a4 + 8)) {
            goto LABEL_56;
          }
          break;
        default:
          goto LABEL_41;
      }
    }
  }
LABEL_56:
  *(_DWORD *)(v15 + 120) |= 4u;
  uint64_t v35 = *(void *)(v15 + 48);
  if (!v35) {
    operator new();
  }
  int v36 = *(_DWORD *)(v35 + 36);
  *(void *)(v35 + 16) = *(void *)(a4 + 24);
  *(_DWORD *)(v35 + 36) = v36 | 7;
  uint64_t v37 = *(void *)(v35 + 24);
  if (!v37) {
    operator new();
  }
  *(_DWORD *)(v37 + 28) |= 3u;
  *(void *)(v37 + 16) = *(void *)(a4 + 32);
  *(_DWORD *)(v15 + 120) |= 0x10u;
  uint64_t v38 = *(void *)(v15 + 64);
  if (!v38) {
    operator new();
  }
  int v39 = *(_DWORD *)(v38 + 72);
  *(float32x4_t *)(v38 + 16) = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(*(float64x2_t *)(a4 + 264)), *(float64x2_t *)(a4 + 280));
  *(float32x2_t *)(v38 + 32) = vcvt_f32_f64(*(float64x2_t *)(a4 + 296));
  float v40 = *(double *)(a4 + 312);
  *(float *)(v38 + 64) = v40;
  *(_OWORD *)(v38 + 40) = *(_OWORD *)(a4 + 320);
  *(_DWORD *)(v38 + 72) = v39 | 0x3FF;
  uint64_t v41 = *(void *)(v38 + 56);
  if (!v41) {
    operator new();
  }
  *(_DWORD *)(v41 + 28) |= 3u;
  *(void *)(v41 + 16) = *(void *)(a4 + 336);
  *(_DWORD *)(v15 + 120) |= 0x40u;
  uint64_t v42 = *(void *)(v15 + 80);
  if (!v42) {
    operator new();
  }
  int v43 = *(_DWORD *)(v42 + 40);
  *(_DWORD *)(v42 + 16) = *(_DWORD *)(a4 + 424);
  char v44 = *(unsigned char *)(a4 + 536);
  *(_DWORD *)(v42 + 40) = v43 | 9;
  *(unsigned char *)(v42 + 32) = v44;
  *(_DWORD *)(v15 + 120) |= 0x200u;
  uint64_t v45 = *(void *)(v15 + 104);
  if (!v45) {
    operator new();
  }
  char v46 = *(unsigned char *)(a4 + 120);
  int v47 = *(_DWORD *)(v45 + 44);
  *(_DWORD *)(v45 + 44) = v47 | 1;
  *(unsigned char *)(v45 + 16) = v46;
  *(_DWORD *)(v45 + 20) = *(_DWORD *)(a4 + 124);
  *(_DWORD *)(v45 + 44) = v47 | 7;
  uint64_t v48 = *(void *)(v45 + 24);
  if (!v48) {
    operator new();
  }
  int v49 = *(_DWORD *)(v48 + 88);
  *(_DWORD *)(v48 + 80) = *(_DWORD *)(a4 + 128);
  *(_OWORD *)(v48 + 24) = *(_OWORD *)(a4 + 136);
  *(_OWORD *)(v48 + 40) = *(_OWORD *)(a4 + 152);
  *(_OWORD *)(v48 + 56) = *(_OWORD *)(a4 + 168);
  uint64_t v50 = *(void *)(a4 + 184);
  *(_DWORD *)(v48 + 88) = v49 | 0x3FC;
  *(void *)(v48 + 72) = v50;
  *(_DWORD *)(v45 + 44) |= 8u;
  uint64_t v51 = *(void *)(v45 + 32);
  if (!v51) {
    operator new();
  }
  int v52 = *(_DWORD *)(v51 + 88);
  *(_DWORD *)(v51 + 80) = *(_DWORD *)(a4 + 192);
  *(_OWORD *)(v51 + 24) = *(_OWORD *)(a4 + 200);
  *(_OWORD *)(v51 + 40) = *(_OWORD *)(a4 + 216);
  *(_OWORD *)(v51 + 56) = *(_OWORD *)(a4 + 232);
  uint64_t v53 = *(void *)(a4 + 248);
  *(_DWORD *)(v51 + 88) = v52 | 0x3FC;
  *(void *)(v51 + 72) = v53;
  float v54 = *(float *)a6;
  if (!*(unsigned char *)(a6 + 4)) {
    float v54 = 0.0;
  }
  *(_DWORD *)(v15 + 120) |= 0x400u;
  *(float *)(v15 + 112) = v54;
  uint64_t v55 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v60);
  sub_100133D9C(v60);
  if (v64) {
    sub_100133D9C(v63);
  }
  return v55;
}

void sub_10029CF80()
{
}

BOOL sub_10029D0E8(uint64_t a1, std::string *__str)
{
  *(_DWORD *)(a1 + 56) |= 1u;
  char v4 = *(std::string **)(a1 + 16);
  if (v4 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v4, __str);
  double v5 = *(float *)&__str[1].__r_.__value_.__l.__data_;
  int v6 = *(_DWORD *)(a1 + 56);
  *(_DWORD *)(a1 + 56) = v6 | 2;
  *(double *)(a1 + 24) = v5;
  unsigned int v7 = __str[1].__r_.__value_.__r.__words[1];
  uint64_t v8 = SHIDWORD(__str[1].__r_.__value_.__r.__words[0]);
  *(_DWORD *)(a1 + 56) = v6 | 0x22;
  *(void *)(a1 + 40) = v8;
  if (v7 - 1 >= 3) {
    unsigned int v9 = 0;
  }
  else {
    unsigned int v9 = v7;
  }
  if (!sub_1000723D4(v9)) {
    sub_100410478();
  }
  int v10 = *(_DWORD *)(a1 + 56);
  *(_DWORD *)(a1 + 32) = v9;
  *(_WORD *)(a1 + 48) = __str[1].__r_.__value_.__r.__words[2];
  *(_DWORD *)(a1 + 56) = v10 | 0x4C;
  int v11 = HIDWORD(__str[1].__r_.__value_.__r.__words[1]) - 2;
  if (v11 > 5) {
    unsigned int v12 = 0;
  }
  else {
    unsigned int v12 = dword_1004BDF18[v11];
  }
  BOOL result = sub_1000F3284(v12);
  if (!result) {
    sub_10041044C();
  }
  *(_DWORD *)(a1 + 56) |= 0x10u;
  *(_DWORD *)(a1 + 36) = v12;
  return result;
}

uint64_t sub_10029D20C(uint64_t a1, const std::string *a2)
{
  sub_10029BDF4(*(void *)(a1 + 120), v14);
  if (!v15) {
    return 0;
  }
  sub_100133C90(v11, v14);
  v13 |= 2u;
  uint64_t v4 = v12;
  if (!v12) {
    operator new();
  }
  *(_DWORD *)(v12 + 44) |= 2u;
  uint64_t v5 = *(void *)(v4 + 24);
  if (!v5) {
    operator new();
  }
  *(_DWORD *)(v5 + 392) |= 0x2000u;
  uint64_t v6 = *(void *)(v5 + 112);
  if (!v6) {
    operator new();
  }
  *(_DWORD *)(v6 + 148) |= 0x10u;
  uint64_t v7 = *(void *)(v6 + 48);
  if (!v7) {
    operator new();
  }
  *(_DWORD *)(v7 + 28) |= 1u;
  uint64_t v8 = *(std::string **)(v7 + 16);
  if (v8 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v8, a2);
  uint64_t v9 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v11);
  sub_100133D9C(v11);
  if (v15) {
    sub_100133D9C(v14);
  }
  return v9;
}

void sub_10029D3C0()
{
}

uint64_t sub_10029D44C(uint64_t a1, uint64_t a2, int a3, std::string **a4, int a5, double a6)
{
  sub_10029BDF4(*(void *)(a1 + 120), v28);
  if (!v29) {
    return 0;
  }
  sub_100133C90(v25, v28);
  v27 |= 2u;
  uint64_t v12 = v26;
  if (!v26) {
    operator new();
  }
  *(_DWORD *)(v26 + 44) |= 2u;
  uint64_t v13 = *(void *)(v12 + 24);
  if (!v13) {
    operator new();
  }
  *(_DWORD *)(v13 + 392) |= 0x2000u;
  uint64_t v14 = *(void *)(v13 + 112);
  if (!v14) {
    operator new();
  }
  *(_DWORD *)(v14 + 148) |= 0x1000u;
  uint64_t v15 = *(void *)(v14 + 112);
  if (!v15) {
    operator new();
  }
  int v16 = *(_DWORD *)(v15 + 72);
  *(double *)(v15 + 16) = a6;
  *(_DWORD *)(v15 + 72) = v16 | 7;
  *(void *)(v15 + 24) = a2;
  *(void *)(v15 + 32) = a3;
  uint64_t v17 = *a4;
  int v18 = a4[1];
  if (*a4 != v18)
  {
    do
    {
      int v19 = *(_DWORD *)(v15 + 52);
      uint64_t v20 = *(int *)(v15 + 48);
      if ((int)v20 >= v19)
      {
        if (v19 == *(_DWORD *)(v15 + 56))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v15 + 40), v19 + 1);
          int v19 = *(_DWORD *)(v15 + 52);
        }
        *(_DWORD *)(v15 + 52) = v19 + 1;
        sub_100132778();
      }
      uint64_t v21 = *(void *)(v15 + 40);
      *(_DWORD *)(v15 + 48) = v20 + 1;
      sub_10029D0E8(*(void *)(v21 + 8 * v20), v17);
      v17 += 2;
    }
    while (v17 != v18);
  }
  if ((a5 - 1) >= 4) {
    unsigned int v22 = 0;
  }
  else {
    unsigned int v22 = dword_1004BDD60[a5 - 1];
  }
  if (!sub_10008D650(v22)) {
    __assert_rtn("set_intent_predictor_type", "NearbyInteractionTypes.pb.h", 14566, "::CLP::LogEntry::Nearbyd::NI::IntentPredictorType_IsValid(value)");
  }
  *(_DWORD *)(v15 + 72) |= 0x10u;
  *(_DWORD *)(v15 + 64) = v22;
  uint64_t v23 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v25);
  sub_100133D9C(v25);
  if (v29) {
    sub_100133D9C(v28);
  }
  return v23;
}

void sub_10029D6D8()
{
}

uint64_t sub_10029D76C(uint64_t a1, uint64_t a2)
{
  sub_10029BDF4(*(void *)(a1 + 120), v13);
  if (!v14) {
    return 0;
  }
  sub_100133C90(v10, v13);
  v12 |= 2u;
  uint64_t v4 = v11;
  if (!v11) {
    operator new();
  }
  *(_DWORD *)(v11 + 44) |= 2u;
  uint64_t v5 = *(void *)(v4 + 24);
  if (!v5) {
    operator new();
  }
  *(_DWORD *)(v5 + 392) |= 0x2000u;
  uint64_t v6 = *(void *)(v5 + 112);
  if (!v6) {
    operator new();
  }
  *(_DWORD *)(v6 + 148) |= 0x2000u;
  uint64_t v7 = *(void *)(v6 + 120);
  if (!v7) {
    operator new();
  }
  *(_DWORD *)(v7 + 28) |= 1u;
  *(void *)(v7 + 16) = a2;
  uint64_t v8 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v10);
  sub_100133D9C(v10);
  if (v14) {
    sub_100133D9C(v13);
  }
  return v8;
}

void sub_10029D8E4()
{
}

uint64_t sub_10029D970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, double a6)
{
  sub_10029BDF4(*(void *)(a1 + 120), v24);
  if (!v25) {
    return 0;
  }
  sub_100133C90(v21, v24);
  v23 |= 2u;
  uint64_t v12 = v22;
  if (!v22) {
    operator new();
  }
  *(_DWORD *)(v22 + 44) |= 2u;
  uint64_t v13 = *(void *)(v12 + 24);
  if (!v13) {
    operator new();
  }
  *(_DWORD *)(v13 + 392) |= 0x2000u;
  uint64_t v14 = *(void *)(v13 + 112);
  if (!v14) {
    operator new();
  }
  *(_DWORD *)(v14 + 148) |= 0x200u;
  uint64_t v15 = *(void *)(v14 + 88);
  if (!v15) {
    operator new();
  }
  int v16 = *(_DWORD *)(v15 + 56);
  *(double *)(v15 + 16) = a6;
  *(_DWORD *)(v15 + 56) = v16 | 9;
  uint64_t v17 = *(void *)(v15 + 40);
  if (!v17) {
    operator new();
  }
  sub_10029BE74(v17, a4);
  int v18 = *(_DWORD *)(v15 + 56);
  *(void *)(v15 + 24) = a2;
  *(void *)(v15 + 32) = a3;
  *(_DWORD *)(v15 + 56) = v18 | 0x16;
  *(unsigned char *)(v15 + 48) = a5;
  uint64_t v19 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v21);
  sub_100133D9C(v21);
  if (v25) {
    sub_100133D9C(v24);
  }
  return v19;
}

void sub_10029DB64()
{
}

uint64_t sub_10029DC08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  sub_10029BDF4(*(void *)(a1 + 120), v21);
  if (!v22) {
    return 0;
  }
  sub_100133C90(v18, v21);
  v20 |= 2u;
  uint64_t v10 = v19;
  if (!v19) {
    operator new();
  }
  *(_DWORD *)(v19 + 44) |= 2u;
  uint64_t v11 = *(void *)(v10 + 24);
  if (!v11) {
    operator new();
  }
  *(_DWORD *)(v11 + 392) |= 0x2000u;
  uint64_t v12 = *(void *)(v11 + 112);
  if (!v12) {
    operator new();
  }
  *(_DWORD *)(v12 + 148) |= 0x80u;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13) {
    operator new();
  }
  int v14 = *(_DWORD *)(v13 + 52);
  *(double *)(v13 + 16) = a5;
  *(_DWORD *)(v13 + 52) = v14 | 9;
  uint64_t v15 = *(void *)(v13 + 40);
  if (!v15) {
    operator new();
  }
  sub_10029BE74(v15, a4);
  *(_DWORD *)(v13 + 52) |= 6u;
  *(void *)(v13 + 24) = a2;
  *(void *)(v13 + 32) = a3;
  uint64_t v16 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v18);
  sub_100133D9C(v18);
  if (v22) {
    sub_100133D9C(v21);
  }
  return v16;
}

void sub_10029DDF0()
{
}

uint64_t sub_10029DE94(uint64_t a1, const std::string *a2, uint64_t a3, double a4)
{
  sub_10029BDF4(*(void *)(a1 + 120), v20);
  if (!v21) {
    return 0;
  }
  sub_100133C90(v17, v20);
  v19 |= 2u;
  uint64_t v8 = v18;
  if (!v18) {
    operator new();
  }
  *(_DWORD *)(v18 + 44) |= 2u;
  uint64_t v9 = *(void *)(v8 + 24);
  if (!v9) {
    operator new();
  }
  *(_DWORD *)(v9 + 392) |= 0x2000u;
  uint64_t v10 = *(void *)(v9 + 112);
  if (!v10) {
    operator new();
  }
  *(_DWORD *)(v10 + 148) |= 0x8000u;
  uint64_t v11 = *(void *)(v10 + 136);
  if (!v11) {
    operator new();
  }
  *(_DWORD *)(v11 + 44) |= 1u;
  uint64_t v12 = *(std::string **)(v11 + 16);
  if (v12 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v12, a2);
  int v13 = *(_DWORD *)(v11 + 44);
  *(double *)(v11 + 24) = a4;
  *(_DWORD *)(v11 + 44) = v13 | 6;
  uint64_t v14 = *(void *)(v11 + 32);
  if (!v14) {
    operator new();
  }
  sub_10029BE74(v14, a3);
  uint64_t v15 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v17);
  sub_100133D9C(v17);
  if (v21) {
    sub_100133D9C(v20);
  }
  return v15;
}

void sub_10029E0A8()
{
}

uint64_t sub_10029E14C(uint64_t a1, const std::string *a2, uint64_t a3, std::string *a4, std::string *a5, uint64_t a6, char a7, double a8)
{
  sub_10029BDF4(*(void *)(a1 + 120), v31);
  if (!v32) {
    return 0;
  }
  sub_100133C90(v28, v31);
  v30 |= 2u;
  uint64_t v16 = v29;
  if (!v29) {
    operator new();
  }
  *(_DWORD *)(v29 + 44) |= 2u;
  uint64_t v17 = *(void *)(v16 + 24);
  if (!v17) {
    operator new();
  }
  *(_DWORD *)(v17 + 392) |= 0x2000u;
  uint64_t v18 = *(void *)(v17 + 112);
  if (!v18) {
    operator new();
  }
  *(_DWORD *)(v18 + 148) |= 4u;
  uint64_t v19 = *(void *)(v18 + 32);
  if (!v19) {
    operator new();
  }
  if (a2[1].__r_.__value_.__s.__data_[0])
  {
    *(_DWORD *)(v19 + 68) |= 0x40u;
    int v20 = *(std::string **)(v19 + 56);
    if (v20 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v20, a2);
  }
  int v21 = *(_DWORD *)(v19 + 68);
  *(double *)(v19 + 16) = a8;
  *(_DWORD *)(v19 + 68) = v21 | 3;
  uint64_t v22 = *(void *)(v19 + 24);
  if (!v22) {
    operator new();
  }
  sub_10029BE74(v22, a3);
  if (a4[2].__r_.__value_.__s.__data_[0])
  {
    *(_DWORD *)(v19 + 68) |= 4u;
    uint64_t v23 = *(void *)(v19 + 32);
    if (!v23) {
      operator new();
    }
    sub_10029D0E8(v23, a4);
  }
  if (a5[2].__r_.__value_.__s.__data_[0])
  {
    *(_DWORD *)(v19 + 68) |= 8u;
    uint64_t v24 = *(void *)(v19 + 40);
    if (!v24) {
      operator new();
    }
    sub_10029D0E8(v24, a5);
  }
  int v25 = *(_DWORD *)(v19 + 68);
  if ((a6 & 0xFF00000000) != 0)
  {
    v25 |= 0x10u;
    *(_DWORD *)(v19 + 68) = v25;
    *(_DWORD *)(v19 + 48) = a6;
  }
  *(_DWORD *)(v19 + 68) = v25 | 0x20;
  *(unsigned char *)(v19 + 52) = a7;
  uint64_t v26 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v28);
  sub_100133D9C(v28);
  if (v32) {
    sub_100133D9C(v31);
  }
  return v26;
}

void sub_10029E464()
{
}

uint64_t sub_10029E530(uint64_t a1, uint64_t a2, double a3)
{
  sub_10029BDF4(*(void *)(a1 + 120), v17);
  if (!v18) {
    return 0;
  }
  sub_100133C90(v14, v17);
  v16 |= 2u;
  uint64_t v6 = v15;
  if (!v15) {
    operator new();
  }
  *(_DWORD *)(v15 + 44) |= 2u;
  uint64_t v7 = *(void *)(v6 + 24);
  if (!v7) {
    operator new();
  }
  *(_DWORD *)(v7 + 392) |= 0x2000u;
  uint64_t v8 = *(void *)(v7 + 112);
  if (!v8) {
    operator new();
  }
  *(_DWORD *)(v8 + 148) |= 8u;
  uint64_t v9 = *(void *)(v8 + 40);
  if (!v9) {
    operator new();
  }
  int v10 = *(_DWORD *)(v9 + 36);
  *(double *)(v9 + 16) = a3;
  *(_DWORD *)(v9 + 36) = v10 | 3;
  uint64_t v11 = *(void *)(v9 + 24);
  if (!v11) {
    operator new();
  }
  sub_10029BE74(v11, a2);
  uint64_t v12 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v14);
  sub_100133D9C(v14);
  if (v18) {
    sub_100133D9C(v17);
  }
  return v12;
}

void sub_10029E6F4()
{
}

uint64_t sub_10029E798(uint64_t a1, uint64_t a2, const std::string *a3)
{
  sub_10029BDF4(*(void *)(a1 + 120), v17);
  if (!v18) {
    return 0;
  }
  sub_100133C90(v14, v17);
  v16 |= 2u;
  uint64_t v6 = v15;
  if (!v15) {
    operator new();
  }
  *(_DWORD *)(v15 + 44) |= 2u;
  uint64_t v7 = *(void *)(v6 + 24);
  if (!v7) {
    operator new();
  }
  *(_DWORD *)(v7 + 392) |= 0x2000u;
  uint64_t v8 = *(void *)(v7 + 112);
  if (!v8) {
    operator new();
  }
  *(_DWORD *)(v8 + 148) |= 0x20u;
  uint64_t v9 = *(void *)(v8 + 56);
  if (!v9) {
    operator new();
  }
  int v10 = *(_DWORD *)(v9 + 36);
  *(void *)(v9 + 24) = a2;
  *(_DWORD *)(v9 + 36) = v10 | 3;
  uint64_t v11 = *(std::string **)(v9 + 16);
  if (v11 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v11, a3);
  uint64_t v12 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v14);
  sub_100133D9C(v14);
  if (v18) {
    sub_100133D9C(v17);
  }
  return v12;
}

void sub_10029E95C()
{
}

uint64_t sub_10029E9E8(uint64_t a1, uint64_t a2, const std::string *a3)
{
  sub_10029BDF4(*(void *)(a1 + 120), v17);
  if (!v18) {
    return 0;
  }
  sub_100133C90(v14, v17);
  v16 |= 2u;
  uint64_t v6 = v15;
  if (!v15) {
    operator new();
  }
  *(_DWORD *)(v15 + 44) |= 2u;
  uint64_t v7 = *(void *)(v6 + 24);
  if (!v7) {
    operator new();
  }
  *(_DWORD *)(v7 + 392) |= 0x2000u;
  uint64_t v8 = *(void *)(v7 + 112);
  if (!v8) {
    operator new();
  }
  *(_DWORD *)(v8 + 148) |= 0x40u;
  uint64_t v9 = *(void *)(v8 + 64);
  if (!v9) {
    operator new();
  }
  int v10 = *(_DWORD *)(v9 + 36);
  *(void *)(v9 + 24) = a2;
  *(_DWORD *)(v9 + 36) = v10 | 3;
  uint64_t v11 = *(std::string **)(v9 + 16);
  if (v11 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v11, a3);
  uint64_t v12 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v14);
  sub_100133D9C(v14);
  if (v18) {
    sub_100133D9C(v17);
  }
  return v12;
}

void sub_10029EBAC()
{
}

uint64_t sub_10029EC38(uint64_t a1, const std::string *a2, int a3, double a4)
{
  sub_10029BDF4(*(void *)(a1 + 120), v23);
  if (!v24) {
    return 0;
  }
  sub_100133C90(v20, v23);
  v22 |= 2u;
  uint64_t v8 = v21;
  if (!v21) {
    operator new();
  }
  *(_DWORD *)(v21 + 44) |= 2u;
  uint64_t v9 = *(void *)(v8 + 24);
  if (!v9) {
    operator new();
  }
  *(_DWORD *)(v9 + 392) |= 0x2000u;
  uint64_t v10 = *(void *)(v9 + 112);
  if (!v10) {
    operator new();
  }
  *(_DWORD *)(v10 + 148) |= 0x100u;
  uint64_t v11 = *(void *)(v10 + 80);
  if (!v11) {
    operator new();
  }
  int v12 = *(_DWORD *)(v11 + 40);
  *(double *)(v11 + 16) = a4;
  *(_DWORD *)(v11 + 40) = v12 | 5;
  int v13 = *(std::string **)(v11 + 24);
  if (v13 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v13, a2);
  if (a3 == 1) {
    unsigned int v14 = 1;
  }
  else {
    unsigned int v14 = 2 * (a3 == 2);
  }
  if (!sub_1000723C8(v14)) {
    __assert_rtn("set_source", "NearbyInteractionTypes.pb.h", 11743, "::CLP::LogEntry::Nearbyd::NI::TruthTag_Source_IsValid(value)");
  }
  *(_DWORD *)(v11 + 40) |= 2u;
  *(_DWORD *)(v11 + 32) = v14;
  uint64_t v15 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      a2 = (const std::string *)a2->__r_.__value_.__r.__words[0];
    }
    sub_1000FEBD8();
    uint64_t v16 = wireless_diagnostics::google::protobuf::internal::NameOfEnum();
    if (*(char *)(v16 + 23) >= 0) {
      uint64_t v17 = v16;
    }
    else {
      uint64_t v17 = *(void *)v16;
    }
    *(_DWORD *)uint8_t buf = 136315394;
    uint64_t v26 = a2;
    __int16 v27 = 2080;
    uint64_t v28 = v17;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "pblogger, Log truth tagging label: [%s], source: [%s]", buf, 0x16u);
  }
  uint64_t v18 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v20);
  sub_100133D9C(v20);
  if (v24) {
    sub_100133D9C(v23);
  }
  return v18;
}

void sub_10029EF20()
{
}

BOOL sub_10029EFBC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 72);
  return v1 && (sub_1000D5134(v1) & 1) != 0;
}

uint64_t sub_10029EFEC(uint64_t a1, uint64_t a2)
{
  if (!*(unsigned char *)(a2 + 24)) {
    return 0;
  }
  sub_10029BDF4(*(void *)(a1 + 120), v70);
  if (!v71) {
    return 0;
  }
  sub_100133C90(v67, v70);
  v69 |= 2u;
  uint64_t v4 = v68;
  if (!v68) {
    operator new();
  }
  *(_DWORD *)(v68 + 44) |= 2u;
  uint64_t v5 = *(void *)(v4 + 24);
  if (!v5) {
    operator new();
  }
  *(_DWORD *)(v5 + 392) |= 0x2000u;
  uint64_t v6 = *(void *)(v5 + 112);
  if (!v6) {
    operator new();
  }
  *(_DWORD *)(v6 + 148) |= 0x4000u;
  uint64_t v7 = *(void *)(v6 + 128);
  if (!v7) {
    operator new();
  }
  if (!*(unsigned char *)(a2 + 24)) {
    sub_10000AE44();
  }
  int v8 = *(_DWORD *)(v7 + 72);
  *(void *)(v7 + 16) = *(void *)(a2 + 16);
  *(void *)(v7 + 24) = *(unsigned __int16 *)(a2 + 36);
  uint64_t v9 = *(void *)(a2 + 40);
  *(_DWORD *)(v7 + 72) = v8 | 7;
  *(void *)(v7 + 32) = v9;
  if (*(unsigned char *)(a2 + 600))
  {
    long long v10 = *(_OWORD *)(a2 + 96);
    long long v75 = *(_OWORD *)(a2 + 80);
    long long v76 = v10;
    long long v11 = *(_OWORD *)(a2 + 64);
    long long v73 = *(_OWORD *)(a2 + 48);
    long long v74 = v11;
    int v12 = *(const void **)(a2 + 120);
    uint64_t v77 = *(void *)(a2 + 112);
    int v78 = 0;
    uint64_t v13 = *(void *)(a2 + 128);
    int v79 = 0;
    uint64_t v80 = 0;
    sub_10015036C(&v78, v12, v13, (v13 - (uint64_t)v12) >> 3);
    long long v14 = *(_OWORD *)(a2 + 160);
    long long v81 = *(_OWORD *)(a2 + 144);
    long long v82 = v14;
    uint64_t v15 = *(const void **)(a2 + 184);
    uint64_t v83 = *(void *)(a2 + 176);
    std::string __p = 0;
    int v85 = 0;
    uint64_t v86 = 0;
    sub_10015042C(&__p, v15, *(void *)(a2 + 192), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(void *)(a2 + 192) - (void)v15) >> 3));
    memcpy(v87, (const void *)(a2 + 208), sizeof(v87));
    if (*(unsigned __int16 *)&v87[222] < 0x100u) {
      goto LABEL_40;
    }
    int v16 = *(_DWORD *)(v7 + 72);
    *(_DWORD *)(v7 + 64) = v87[222];
    *(_DWORD *)(v7 + 72) = v16 | 0x18;
    uint64_t v17 = *(void *)(v7 + 40);
    if (!v17) {
      operator new();
    }
    int v18 = *(_DWORD *)(v17 + 468);
    *(_OWORD *)(v17 + 64) = *(_OWORD *)v87;
    uint64_t v19 = v83;
    *(_DWORD *)(v17 + 468) = v18 | 0x10600;
    *(void *)(v17 + 96) = v19;
    int v20 = *(_DWORD *)(v17 + 472);
    *(_DWORD *)(v17 + 340) = *(unsigned __int16 *)&v87[216];
    *(_DWORD *)(v17 + 344) = *(unsigned __int16 *)&v87[218];
    int v21 = *(unsigned __int16 *)&v87[220];
    *(_DWORD *)(v17 + 472) = v20 | 0xE0000;
    *(_DWORD *)(v17 + 348) = v21;
    if (!v87[232]) {
      goto LABEL_40;
    }
    if (v87[248] && v87[264] && v87[280])
    {
      uint64_t v22 = *(void *)&v87[224];
      *(_DWORD *)(v17 + 472) = v20 | 0x2E0000;
      *(void *)(v17 + 352) = v22;
      if (!v87[248]) {
        sub_10000AE44();
      }
      uint64_t v23 = *(void *)&v87[240];
      *(_DWORD *)(v17 + 472) = v20 | 0x6E0000;
      *(void *)(v17 + 360) = v23;
      if (!v87[264]) {
        sub_10000AE44();
      }
      uint64_t v24 = *(void *)&v87[256];
      *(_DWORD *)(v17 + 472) = v20 | 0xEE0000;
      *(void *)(v17 + 368) = v24;
      if (!v87[280]) {
        sub_10000AE44();
      }
      *(_DWORD *)(v17 + 472) = v20 | 0x1EE0000;
      uint64_t v25 = v77;
      *(void *)(v17 + 384) = *(void *)&v87[272];
      *(void *)__s = v25;
      sub_100004950(&__str, __s);
      sub_100295E34(v17, &__str);
      uint64_t v26 = (int *)sub_10029F7A8(v7);
      if (*(unsigned char *)(a2 + 1312))
      {
        __int16 v27 = v26;
        uint64_t v65 = *(void *)(a2 + 1304);
        long long v28 = *(_OWORD *)(a2 + 1288);
        v64[4] = *(_OWORD *)(a2 + 1272);
        v64[5] = v28;
        long long v29 = *(_OWORD *)(a2 + 1256);
        v64[2] = *(_OWORD *)(a2 + 1240);
        v64[3] = v29;
        long long v30 = *(_OWORD *)(a2 + 1224);
        v64[0] = *(_OWORD *)(a2 + 1208);
        v64[1] = v30;
        int v31 = BYTE11(v64[0]);
        v26[19] |= 8u;
        v26[10] = v31;
        char v32 = (_DWORD *)sub_1002974E4(v26);
        int v33 = sub_1001770F0((uint64_t)v64, 0);
        v32[15] |= 1u;
        v32[4] = v33;
        int v34 = sub_10017711C((uint64_t)v64, 0);
        v32[15] |= 2u;
        v32[5] = v34;
        int v35 = sub_100177148((uint64_t)v64, 0);
        v32[15] |= 4u;
        v32[6] = v35;
        int v36 = sub_100177174((uint64_t)v64, 0);
        v32[15] |= 8u;
        v32[7] = v36;
        uint64_t v37 = (_OWORD *)sub_1001771A0((uint64_t)v64, 0);
        uint64_t v38 = 0;
        long long v39 = v37[1];
        v63[0] = *v37;
        v63[1] = v39;
        do
        {
          int v40 = v32[11];
          uint64_t v41 = (int)v32[10];
          if ((int)v41 >= v40)
          {
            if (v40 == v32[12])
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v32 + 8), v40 + 1);
              int v40 = v32[11];
            }
            v32[11] = v40 + 1;
            sub_1000C3174();
          }
          uint64_t v42 = *((void *)v32 + 4);
          v32[10] = v41 + 1;
          int v43 = *(_DWORD **)(v42 + 8 * v41);
          int v44 = *(__int16 *)((char *)v63 + v38);
          int v45 = *(__int16 *)((char *)v63 + v38 + 2);
          v43[7] |= 3u;
          v43[4] = v44;
          v43[5] = v45;
          v38 += 4;
        }
        while (v38 != 32);
        char v46 = (_DWORD *)sub_1002974E4(v27);
        int v47 = sub_1001770F0((uint64_t)v64, 1);
        v46[15] |= 1u;
        v46[4] = v47;
        int v48 = sub_10017711C((uint64_t)v64, 1);
        v46[15] |= 2u;
        v46[5] = v48;
        int v49 = sub_100177148((uint64_t)v64, 1);
        v46[15] |= 4u;
        v46[6] = v49;
        int v50 = sub_100177174((uint64_t)v64, 1);
        v46[15] |= 8u;
        v46[7] = v50;
        uint64_t v51 = (_OWORD *)sub_1001771A0((uint64_t)v64, 1);
        uint64_t v52 = 0;
        long long v53 = v51[1];
        v62[0] = *v51;
        v62[1] = v53;
        do
        {
          int v54 = v46[11];
          uint64_t v55 = (int)v46[10];
          if ((int)v55 >= v54)
          {
            if (v54 == v46[12])
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v46 + 8), v54 + 1);
              int v54 = v46[11];
            }
            v46[11] = v54 + 1;
            sub_1000C3174();
          }
          uint64_t v56 = *((void *)v46 + 4);
          v46[10] = v55 + 1;
          int v57 = *(_DWORD **)(v56 + 8 * v55);
          int v58 = *(__int16 *)((char *)v62 + v52);
          int v59 = *(__int16 *)((char *)v62 + v52 + 2);
          v57[7] |= 3u;
          v57[4] = v58;
          v57[5] = v59;
          v52 += 4;
        }
        while (v52 != 32);
        uint64_t v60 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v67);
      }
      else
      {
        uint64_t v60 = 0;
      }
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__str.__r_.__value_.__l.__data_);
      }
    }
    else
    {
LABEL_40:
      uint64_t v60 = 0;
    }
    if (__p)
    {
      int v85 = __p;
      operator delete(__p);
    }
    if (v78)
    {
      int v79 = v78;
      operator delete(v78);
    }
  }
  else
  {
    uint64_t v60 = 0;
  }
  sub_100133D9C(v67);
  if (v71) {
    sub_100133D9C(v70);
  }
  return v60;
}

void sub_10029F684(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52,uint64_t a53,uint64_t a54)
{
  if (a35 < 0) {
    operator delete(__p);
  }
  sub_1001500AC(&a54);
  sub_100133D9C(&a36);
  if (a52) {
    sub_100133D9C(&a44);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10029F7A8(uint64_t a1)
{
  *(_DWORD *)(a1 + 72) |= 0x20u;
  if (!*(void *)(a1 + 48)) {
    operator new();
  }
  return *(void *)(a1 + 48);
}

void sub_10029F804()
{
}

uint64_t sub_10029F828(uint64_t a1, int a2, double a3, double a4, double a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10)
{
  sub_10029BDF4(*(void *)(a1 + 120), v36);
  if (!v37) {
    return 0;
  }
  sub_100133C90(v33, v36);
  v35 |= 2u;
  uint64_t v18 = v34;
  if (!v34) {
    operator new();
  }
  *(_DWORD *)(v34 + 44) |= 2u;
  uint64_t v19 = *(void *)(v18 + 24);
  if (!v19) {
    operator new();
  }
  *(_DWORD *)(v19 + 392) |= 0x2000u;
  uint64_t v20 = *(void *)(v19 + 112);
  if (!v20) {
    operator new();
  }
  *(_DWORD *)(v20 + 148) |= 0x800u;
  uint64_t v21 = *(void *)(v20 + 104);
  if (!v21) {
    operator new();
  }
  *(_DWORD *)(v21 + 96) |= 1u;
  *(_DWORD *)(v21 + 88) = a2;
  uint64_t v23 = *a8;
  uint64_t v22 = a8[1];
  uint64_t v24 = v22 - *a8;
  if (v24 == 88)
  {
    if (v22 != v23)
    {
      unint64_t v25 = 0;
      int v26 = *(_DWORD *)(v21 + 40);
      do
      {
        uint64_t v27 = *(void *)(v23 + 8 * v25);
        if (v26 == *(_DWORD *)(v21 + 44))
        {
          sub_10006F628(v21 + 32, v26 + 1);
          int v26 = *(_DWORD *)(v21 + 40);
          uint64_t v23 = *a8;
          uint64_t v22 = a8[1];
        }
        uint64_t v28 = *(void *)(v21 + 32);
        *(_DWORD *)(v21 + 40) = v26 + 1;
        *(void *)(v28 + 8 * v26) = v27;
        ++v25;
        ++v26;
      }
      while (v25 < (v22 - v23) >> 3);
    }
  }
  else
  {
    long long v30 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042948C(v24 >> 3, v30);
    }
  }
  int v31 = *(_DWORD *)(v21 + 96);
  *(double *)(v21 + 48) = a3;
  *(double *)(v21 + 56) = a4;
  *(double *)(v21 + 64) = a5;
  *(_DWORD *)(v21 + 96) = v31 | 0x1F0;
  *(void *)(v21 + 72) = a9;
  *(void *)(v21 + 80) = a10;
  uint64_t v29 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v33);
  sub_100133D9C(v33);
  if (v37) {
    sub_100133D9C(v36);
  }
  return v29;
}

void sub_10029FA94()
{
}

uint64_t sub_10029FB24(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  sub_10029BDF4(*(void *)(a1 + 120), v22);
  if (!v23) {
    return 0;
  }
  sub_100133C90(v19, v22);
  v21 |= 2u;
  uint64_t v8 = v20;
  if (!v20) {
    operator new();
  }
  *(_DWORD *)(v20 + 44) |= 2u;
  uint64_t v9 = *(void *)(v8 + 24);
  if (!v9) {
    operator new();
  }
  *(_DWORD *)(v9 + 392) |= 0x2000u;
  uint64_t v10 = *(void *)(v9 + 112);
  if (!v10) {
    operator new();
  }
  *(_DWORD *)(v10 + 148) |= 0x400u;
  uint64_t v11 = *(void *)(v10 + 96);
  if (!v11) {
    operator new();
  }
  int v12 = *(_DWORD *)(v11 + 44);
  *(_DWORD *)(v11 + 44) = v12 | 1;
  *(unsigned char *)(v11 + 16) = a2;
  if ((a3 & 0xFF00000000) != 0)
  {
    *(_DWORD *)(v11 + 44) = v12 | 3;
    *(_DWORD *)(v11 + 20) = a3;
  }
  if (*(unsigned char *)(a4 + 24))
  {
    if (*(void *)(a4 + 8) - *(void *)a4 != 88) {
      __assert_rtn("logRangeBiasEstimatorConfig", "PRProtobufLogger.cpp", 2469, "kDimOutputSingleAntennaRangeBiasModel == biasCorrectionValuesSingleAntenna.value().size()");
    }
    for (uint64_t i = 0; i != 88; i += 8)
    {
      if (!*(unsigned char *)(a4 + 24)) {
        sub_10000AE44();
      }
      uint64_t v14 = *(void *)(*(void *)a4 + i);
      int v15 = *(_DWORD *)(v11 + 32);
      if (v15 == *(_DWORD *)(v11 + 36))
      {
        sub_10006F628(v11 + 24, v15 + 1);
        int v15 = *(_DWORD *)(v11 + 32);
      }
      uint64_t v16 = *(void *)(v11 + 24);
      *(_DWORD *)(v11 + 32) = v15 + 1;
      *(void *)(v16 + 8 * v15) = v14;
    }
  }
  uint64_t v17 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v19);
  sub_100133D9C(v19);
  if (v23) {
    sub_100133D9C(v22);
  }
  return v17;
}

void sub_10029FD64()
{
}

uint64_t sub_10029FDF8()
{
  return 0;
}

uint64_t sub_10029FE00()
{
  return 0;
}

uint64_t sub_10029FE08()
{
  return 0;
}

uint64_t sub_10029FE10()
{
  return 0;
}

uint64_t sub_10029FE18()
{
  return 0;
}

uint64_t sub_10029FE20()
{
  return 0;
}

uint64_t sub_10029FE28()
{
  return 0;
}

uint64_t sub_10029FE30()
{
  return 0;
}

uint64_t sub_10029FE38()
{
  return 0;
}

uint64_t sub_10029FE40()
{
  return 0;
}

uint64_t sub_10029FE48()
{
  return 0;
}

uint64_t sub_10029FE50()
{
  return 0;
}

uint64_t sub_10029FE58(uint64_t a1, const std::string *a2, uint64_t a3)
{
  sub_10029BDF4(*(void *)(a1 + 120), v31);
  if (!v32) {
    return 0;
  }
  sub_100133C90(v28, v31);
  v30 |= 2u;
  uint64_t v6 = v29;
  if (!v29) {
    operator new();
  }
  *(_DWORD *)(v29 + 44) |= 2u;
  uint64_t v7 = *(void *)(v6 + 24);
  if (!v7) {
    operator new();
  }
  *(_DWORD *)(v7 + 392) |= 0x8000u;
  uint64_t v8 = *(void *)(v7 + 128);
  if (!v8) {
    operator new();
  }
  int v9 = *(_DWORD *)(v8 + 60);
  *(void *)(v8 + 16) = *(void *)a3;
  *(_DWORD *)(v8 + 60) = v9 | 3;
  uint64_t v10 = *(std::string **)(v8 + 24);
  if (v10 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v10, a2);
  *(_DWORD *)(v8 + 60) |= 4u;
  uint64_t v11 = *(int **)(v8 + 32);
  if (!v11) {
    operator new();
  }
  for (uint64_t i = 0; i != 4; ++i)
  {
    int v13 = v11[7];
    uint64_t v14 = v11[6];
    if ((int)v14 >= v13)
    {
      if (v13 == v11[8])
      {
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v11 + 4), v13 + 1);
        int v13 = v11[7];
      }
      v11[7] = v13 + 1;
      sub_10006F738();
    }
    uint64_t v15 = *((void *)v11 + 2);
    void v11[6] = v14 + 1;
    uint64_t v16 = *(void *)(v15 + 8 * v14);
    int v17 = 0;
    int v18 = *(_DWORD *)(v16 + 24);
    do
    {
      float v19 = *(float *)(a3 + 16 + 16 * i + 4 * (v17 & 3));
      if (v18 == *(_DWORD *)(v16 + 28))
      {
        sub_10006F628(v16 + 16, v18 + 1);
        int v18 = *(_DWORD *)(v16 + 24);
      }
      uint64_t v20 = *(void *)(v16 + 16);
      *(_DWORD *)(v16 + 24) = v18 + 1;
      *(double *)(v20 + 8 * v18) = v19;
      ++v17;
      ++v18;
    }
    while (v17 != 4);
  }
  unsigned int v21 = *(_DWORD *)(a3 + 80);
  if (v21 < 3) {
    unsigned int v22 = v21 + 1;
  }
  else {
    unsigned int v22 = 0;
  }
  if (!sub_1000723D4(v22)) {
    __assert_rtn("set_vio_tracking_state", "NearbyInteractionTypes.pb.h", 16714, "::CLP::LogEntry::Nearbyd::NI::VIOTrackingState_IsValid(value)");
  }
  int v23 = *(_DWORD *)(v8 + 60);
  int v24 = v23 | 8;
  *(_DWORD *)(v8 + 60) = v23 | 8;
  *(_DWORD *)(v8 + 48) = v22;
  if (*(unsigned char *)(a3 + 96))
  {
    uint64_t v25 = *(void *)(a3 + 88);
    int v24 = v23 | 0x18;
    *(_DWORD *)(v8 + 60) = v23 | 0x18;
    *(void *)(v8 + 40) = v25;
  }
  *(_WORD *)(v8 + 52) = *(_WORD *)(a3 + 84);
  *(_DWORD *)(v8 + 60) = v24 | 0x60;
  uint64_t v26 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v28);
  sub_100133D9C(v28);
  if (v32) {
    sub_100133D9C(v31);
  }
  return v26;
}

void sub_1002A0180()
{
}

uint64_t sub_1002A021C(uint64_t a1, const std::string *a2, void *a3)
{
  sub_10029BDF4(*(void *)(a1 + 120), v33);
  if (!v34) {
    return 0;
  }
  sub_100133C90(v30, v33);
  v32 |= 2u;
  uint64_t v6 = v31;
  if (!v31) {
    operator new();
  }
  *(_DWORD *)(v31 + 44) |= 2u;
  uint64_t v7 = *(void *)(v6 + 24);
  if (!v7) {
    operator new();
  }
  *(_DWORD *)(v7 + 392) |= 0x20000000u;
  uint64_t v8 = *(void *)(v7 + 240);
  if (!v8) {
    operator new();
  }
  *(_DWORD *)(v8 + 36) |= 1u;
  int v9 = *(std::string **)(v8 + 16);
  if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v9, a2);
  *(_DWORD *)(v8 + 36) |= 2u;
  uint64_t v10 = *(void *)(v8 + 24);
  if (!v10) {
    operator new();
  }
  int v11 = *(_DWORD *)(v10 + 76);
  *(void *)(v10 + 16) = *a3;
  *(_DWORD *)(v10 + 76) = v11 | 9;
  uint64_t v12 = *(void *)(v10 + 40);
  if (!v12) {
    operator new();
  }
  int v13 = *(_DWORD *)(v12 + 44);
  *(void *)(v12 + 16) = a3[1];
  *(void *)(v12 + 24) = a3[2];
  uint64_t v14 = a3[3];
  *(_DWORD *)(v12 + 44) = v13 | 7;
  *(void *)(v12 + 32) = v14;
  *(_DWORD *)(v10 + 76) |= 4u;
  uint64_t v15 = *(void *)(v10 + 32);
  if (!v15) {
    operator new();
  }
  int v16 = *(_DWORD *)(v15 + 44);
  *(void *)(v15 + 16) = a3[4];
  *(void *)(v15 + 24) = a3[5];
  uint64_t v17 = a3[6];
  *(_DWORD *)(v15 + 44) = v16 | 7;
  *(void *)(v15 + 32) = v17;
  *(_DWORD *)(v10 + 76) |= 2u;
  uint64_t v18 = *(void *)(v10 + 24);
  if (!v18) {
    operator new();
  }
  *(_DWORD *)(v18 + 52) |= 1u;
  uint64_t v19 = *(void *)(v18 + 16);
  if (!v19) {
    operator new();
  }
  int v20 = *(_DWORD *)(v19 + 52);
  *(void *)(v19 + 16) = a3[7];
  *(void *)(v19 + 24) = a3[8];
  *(void *)(v19 + 32) = a3[9];
  uint64_t v21 = a3[10];
  *(_DWORD *)(v19 + 52) = v20 | 0xF;
  *(void *)(v19 + 40) = v21;
  *(_DWORD *)(v10 + 76) |= 0x20u;
  uint64_t v22 = *(void *)(v10 + 56);
  if (!v22) {
    operator new();
  }
  int v23 = *(_DWORD *)(v22 + 44);
  *(void *)(v22 + 16) = a3[11];
  *(void *)(v22 + 24) = a3[12];
  uint64_t v24 = a3[13];
  *(_DWORD *)(v22 + 44) = v23 | 7;
  *(void *)(v22 + 32) = v24;
  *(_DWORD *)(v10 + 76) |= 2u;
  uint64_t v25 = *(void *)(v10 + 24);
  if (!v25) {
    operator new();
  }
  int v26 = *(_DWORD *)(v25 + 52);
  *(void *)(v25 + 24) = a3[14];
  *(void *)(v25 + 32) = a3[15];
  uint64_t v27 = a3[16];
  *(_DWORD *)(v25 + 52) = v26 | 0xE;
  *(void *)(v25 + 40) = v27;
  uint64_t v28 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v30);
  sub_100133D9C(v30);
  if (v34) {
    sub_100133D9C(v33);
  }
  return v28;
}

void sub_1002A05F4()
{
}

uint64_t sub_1002A06E0(uint64_t a1, const std::string *a2, uint64_t a3)
{
  sub_10029BDF4(*(void *)(a1 + 120), v16);
  if (!v17) {
    return 0;
  }
  sub_100133C90(v13, v16);
  v15 |= 2u;
  uint64_t v6 = v14;
  if (!v14) {
    operator new();
  }
  *(_DWORD *)(v14 + 44) |= 2u;
  uint64_t v7 = *(void *)(v6 + 24);
  if (!v7) {
    operator new();
  }
  *(_DWORD *)(v7 + 392) |= 0x100000u;
  uint64_t v8 = *(void *)(v7 + 168);
  if (!v8) {
    operator new();
  }
  int v9 = *(_DWORD *)(v8 + 52);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)a3;
  *(void *)(v8 + 32) = *(void *)(a3 + 16);
  *(_DWORD *)(v8 + 52) = v9 | 0xF;
  uint64_t v10 = *(std::string **)(v8 + 40);
  if (v10 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v10, a2);
  uint64_t v11 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v13);
  sub_100133D9C(v13);
  if (v17) {
    sub_100133D9C(v16);
  }
  return v11;
}

void sub_1002A0878()
{
}

uint64_t sub_1002A08F0(uint64_t a1, const std::string *a2, uint64_t *a3)
{
  sub_10029BDF4(*(void *)(a1 + 120), v23);
  if (!v24) {
    return 0;
  }
  sub_100133C90(v20, v23);
  v22 |= 2u;
  uint64_t v6 = v21;
  if (!v21) {
    operator new();
  }
  *(_DWORD *)(v21 + 44) |= 2u;
  uint64_t v7 = *(void *)(v6 + 24);
  if (!v7) {
    operator new();
  }
  *(_DWORD *)(v7 + 396) |= 0x100u;
  uint64_t v8 = *(void *)(v7 + 328);
  if (!v8) {
    operator new();
  }
  uint64_t v9 = *a3;
  uint64_t v10 = a3[1];
  if (*a3 != v10)
  {
    do
    {
      int v11 = *(_DWORD *)(v8 + 28);
      uint64_t v12 = *(int *)(v8 + 24);
      if ((int)v12 >= v11)
      {
        if (v11 == *(_DWORD *)(v8 + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v8 + 16), v11 + 1);
          int v11 = *(_DWORD *)(v8 + 28);
        }
        *(_DWORD *)(v8 + 28) = v11 + 1;
        sub_1001328A4();
      }
      uint64_t v13 = *(void *)(v8 + 16);
      *(_DWORD *)(v8 + 24) = v12 + 1;
      uint64_t v14 = *(void *)(v13 + 8 * v12);
      int v15 = *(_DWORD *)(v14 + 64);
      *(_DWORD *)(v14 + 20) = *(_DWORD *)(v9 + 4);
      *(_OWORD *)(v14 + 24) = *(_OWORD *)(v9 + 8);
      *(_OWORD *)(v14 + 40) = *(_OWORD *)(v9 + 24);
      *(_WORD *)(v14 + 56) = *(_WORD *)(v9 + 40);
      *(_DWORD *)(v14 + 64) = v15 | 0xFE;
      switch(*(_DWORD *)v9)
      {
        case 1:
          if (!sub_1000F3290(2u)) {
            goto LABEL_36;
          }
          int v16 = 2;
          break;
        case 2:
          if (!sub_1000F3290(3u)) {
            goto LABEL_36;
          }
          int v16 = 3;
          break;
        case 3:
          if (!sub_1000F3290(4u)) {
            goto LABEL_36;
          }
          int v16 = 4;
          break;
        case 4:
          if (!sub_1000F3290(5u)) {
            goto LABEL_36;
          }
          int v16 = 5;
          break;
        case 5:
          if (!sub_1000F3290(6u)) {
            goto LABEL_36;
          }
          int v16 = 6;
          break;
        case 6:
          if (!sub_1000F3290(7u)) {
            goto LABEL_36;
          }
          int v16 = 7;
          break;
        default:
          if (!sub_1000F3290(1u)) {
LABEL_36:
          }
            __assert_rtn("set_satellite_system", "NearbyInteractionTypes.pb.h", 18243, "::CLP::LogEntry::Nearbyd::NI::SatelliteSystem_IsValid(value)");
          int v16 = 1;
          break;
      }
      *(_DWORD *)(v14 + 64) |= 1u;
      *(_DWORD *)(v14 + 16) = v16;
      v9 += 48;
    }
    while (v9 != v10);
  }
  *(_DWORD *)(v8 + 52) |= 2u;
  char v17 = *(std::string **)(v8 + 40);
  if (v17 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v17, a2);
  uint64_t v18 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v20);
  sub_100133D9C(v20);
  if (v24) {
    sub_100133D9C(v23);
  }
  return v18;
}

void sub_1002A0C18()
{
}

uint64_t sub_1002A0CB0(uint64_t a1, const std::string *a2, uint64_t a3)
{
  sub_10029BDF4(*(void *)(a1 + 120), v18);
  if (!v19) {
    return 0;
  }
  sub_100133C90(v15, v18);
  v17 |= 2u;
  uint64_t v6 = v16;
  if (!v16) {
    operator new();
  }
  *(_DWORD *)(v16 + 44) |= 2u;
  uint64_t v7 = *(void *)(v6 + 24);
  if (!v7) {
    operator new();
  }
  *(_DWORD *)(v7 + 392) |= 0x400000u;
  uint64_t v8 = *(void *)(v7 + 184);
  if (!v8) {
    operator new();
  }
  int v9 = *(_DWORD *)(v8 + 80);
  *(_DWORD *)(v8 + 80) = v9 | 3;
  *(_OWORD *)(v8 + 16) = *(_OWORD *)a3;
  *(_DWORD *)(v8 + 48) = *(_DWORD *)(a3 + 16);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(a3 + 24);
  uint64_t v10 = *(void *)(a3 + 40);
  *(_DWORD *)(v8 + 80) = v9 | 0x3F;
  *(void *)(v8 + 56) = v10;
  int v11 = *(_DWORD *)(a3 + 48);
  *(_DWORD *)(v8 + 80) = v9 | 0x7F;
  *(_DWORD *)(v8 + 52) = v11;
  *(_DWORD *)(v8 + 72) = *(_DWORD *)(a3 + 52);
  *(_DWORD *)(v8 + 80) = v9 | 0x1FF;
  uint64_t v12 = *(std::string **)(v8 + 64);
  if (v12 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v12, a2);
  uint64_t v13 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v15);
  sub_100133D9C(v15);
  if (v19) {
    sub_100133D9C(v18);
  }
  return v13;
}

void sub_1002A0E80()
{
}

uint64_t sub_1002A0EF8(uint64_t a1, const std::string *a2, uint64_t a3)
{
  sub_10029BDF4(*(void *)(a1 + 120), v16);
  if (!v17) {
    return 0;
  }
  sub_100133C90(v13, v16);
  v15 |= 2u;
  uint64_t v6 = v14;
  if (!v14) {
    operator new();
  }
  *(_DWORD *)(v14 + 44) |= 2u;
  uint64_t v7 = *(void *)(v6 + 24);
  if (!v7) {
    operator new();
  }
  *(_DWORD *)(v7 + 392) |= 0x200000u;
  uint64_t v8 = *(void *)(v7 + 176);
  if (!v8) {
    operator new();
  }
  int v9 = *(_DWORD *)(v8 + 40);
  *(void *)(v8 + 16) = *(void *)a3;
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(a3 + 8);
  *(_DWORD *)(v8 + 40) = v9 | 7;
  uint64_t v10 = *(std::string **)(v8 + 24);
  if (v10 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v10, a2);
  uint64_t v11 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v13);
  sub_100133D9C(v13);
  if (v17) {
    sub_100133D9C(v16);
  }
  return v11;
}

void sub_1002A1090()
{
}

uint64_t sub_1002A1108(uint64_t a1, const std::string *a2, uint64_t a3, int a4)
{
  sub_10029BDF4(*(void *)(a1 + 120), v25);
  if (!v26) {
    return 0;
  }
  sub_100133C90(v22, v25);
  v24 |= 2u;
  uint64_t v8 = v23;
  if (!v23) {
    operator new();
  }
  *(_DWORD *)(v23 + 44) |= 2u;
  uint64_t v9 = *(void *)(v8 + 24);
  if (!v9) {
    operator new();
  }
  if (a4)
  {
    *(_DWORD *)(v9 + 396) |= 8u;
    uint64_t v10 = *(void *)(v9 + 288);
    if (!v10) {
      operator new();
    }
  }
  else
  {
    *(_DWORD *)(v9 + 392) |= 0x1000000u;
    uint64_t v10 = *(void *)(v9 + 200);
    if (!v10) {
      operator new();
    }
  }
  *(_DWORD *)(v10 + 140) |= 1u;
  uint64_t v12 = *(void *)(v10 + 16);
  if (!v12) {
    operator new();
  }
  *(_DWORD *)(v12 + 36) |= 3u;
  *(_OWORD *)(v12 + 16) = *(_OWORD *)a3;
  int v13 = *(_DWORD *)(v10 + 140);
  *(_OWORD *)(v10 + 24) = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v10 + 40) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v10 + 56) = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v10 + 72) = *(_OWORD *)(a3 + 64);
  uint64_t v14 = *(void *)(a3 + 80);
  *(_DWORD *)(v10 + 140) = v13 | 0x3FE;
  *(void *)(v10 + 88) = v14;
  *(_DWORD *)(v10 + 96) = *(_DWORD *)(a3 + 88);
  *(_DWORD *)(v10 + 140) = v13 | 0x107FE;
  int v15 = *(std::string **)(v10 + 128);
  if (v15 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v15, a2);
  switch(*(_DWORD *)(a3 + 96))
  {
    case 0:
      if (!sub_1000F3290(1u)) {
        goto LABEL_67;
      }
      int v16 = 1;
      goto LABEL_29;
    case 1:
      if (!sub_1000F3290(2u)) {
        goto LABEL_67;
      }
      int v16 = 2;
      goto LABEL_29;
    case 2:
      if (!sub_1000F3290(3u)) {
        goto LABEL_67;
      }
      int v16 = 3;
      goto LABEL_29;
    case 3:
      if (!sub_1000F3290(4u)) {
        goto LABEL_67;
      }
      int v16 = 4;
      goto LABEL_29;
    case 4:
      if (!sub_1000F3290(5u)) {
        goto LABEL_67;
      }
      int v16 = 5;
      goto LABEL_29;
    case 6:
      if (!sub_1000F3290(7u))
      {
LABEL_67:
        char v19 = "::CLP::LogEntry::Nearbyd::NI::SignalEnvironmentType_IsValid(value)";
        int v20 = 17961;
        uint64_t v21 = "set_signal_environment_type";
LABEL_68:
        __assert_rtn(v21, "NearbyInteractionTypes.pb.h", v20, v19);
      }
      int v16 = 7;
LABEL_29:
      *(_DWORD *)(v10 + 140) |= 0x4000u;
      *(_DWORD *)(v10 + 120) = v16;
LABEL_30:
      switch(*(_DWORD *)(a3 + 92))
      {
        case 0:
          if (!sub_1000F329C(1u)) {
            goto LABEL_66;
          }
          *(_DWORD *)(v10 + 140) |= 0x8000u;
          int v17 = 1;
          goto LABEL_62;
        case 1:
          if (!sub_1000F329C(2u)) {
            goto LABEL_66;
          }
          *(_DWORD *)(v10 + 140) |= 0x8000u;
          int v17 = 2;
          goto LABEL_62;
        case 2:
          if (!sub_1000F329C(3u)) {
            goto LABEL_66;
          }
          *(_DWORD *)(v10 + 140) |= 0x8000u;
          int v17 = 3;
          goto LABEL_62;
        case 3:
          if (!sub_1000F329C(4u)) {
            goto LABEL_66;
          }
          *(_DWORD *)(v10 + 140) |= 0x8000u;
          int v17 = 4;
          goto LABEL_62;
        case 4:
          if (!sub_1000F329C(5u)) {
            goto LABEL_66;
          }
          *(_DWORD *)(v10 + 140) |= 0x8000u;
          int v17 = 5;
          goto LABEL_62;
        case 5:
          if (!sub_1000F329C(6u)) {
            goto LABEL_66;
          }
          *(_DWORD *)(v10 + 140) |= 0x8000u;
          int v17 = 6;
          goto LABEL_62;
        case 6:
          if (!sub_1000F329C(7u)) {
            goto LABEL_66;
          }
          *(_DWORD *)(v10 + 140) |= 0x8000u;
          int v17 = 7;
          goto LABEL_62;
        case 7:
          if (!sub_1000F329C(8u)) {
            goto LABEL_66;
          }
          *(_DWORD *)(v10 + 140) |= 0x8000u;
          int v17 = 8;
          goto LABEL_62;
        case 8:
          if (!sub_1000F329C(9u)) {
            goto LABEL_66;
          }
          *(_DWORD *)(v10 + 140) |= 0x8000u;
          int v17 = 9;
          goto LABEL_62;
        case 9:
          if (!sub_1000F329C(0xAu)) {
            goto LABEL_66;
          }
          *(_DWORD *)(v10 + 140) |= 0x8000u;
          int v17 = 10;
          goto LABEL_62;
        case 0xA:
          if (!sub_1000F329C(0xBu)) {
            goto LABEL_66;
          }
          *(_DWORD *)(v10 + 140) |= 0x8000u;
          int v17 = 11;
          goto LABEL_62;
        case 0xB:
          if (!sub_1000F329C(0xCu)) {
            goto LABEL_66;
          }
          *(_DWORD *)(v10 + 140) |= 0x8000u;
          int v17 = 12;
          goto LABEL_62;
        case 0xC:
          if (!sub_1000F329C(0xDu)) {
            goto LABEL_66;
          }
          *(_DWORD *)(v10 + 140) |= 0x8000u;
          int v17 = 13;
          goto LABEL_62;
        case 0xD:
          if (!sub_1000F329C(0xEu)) {
            goto LABEL_66;
          }
          *(_DWORD *)(v10 + 140) |= 0x8000u;
          int v17 = 14;
LABEL_62:
          *(_DWORD *)(v10 + 124) = v17;
          goto LABEL_63;
        case 0xE:
          if (!sub_1000F329C(1u))
          {
LABEL_66:
            char v19 = "::CLP::LogEntry::Nearbyd::NI::LocationType_IsValid(value)";
            int v20 = 17984;
            uint64_t v21 = "set_location_type";
            goto LABEL_68;
          }
          *(_DWORD *)(v10 + 140) |= 0x8000u;
          *(_DWORD *)(v10 + 124) = 1;
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
            sub_100429514();
          }
LABEL_63:
          uint64_t v11 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v22);
          sub_100133D9C(v22);
          if (v26) {
            sub_100133D9C(v25);
          }
          return v11;
        default:
          goto LABEL_63;
      }
    default:
      goto LABEL_30;
  }
}

void sub_1002A1684()
{
}

uint64_t sub_1002A1770(uint64_t a1, const std::string *a2, _OWORD *a3)
{
  sub_10029BDF4(*(void *)(a1 + 120), v16);
  if (!v17) {
    return 0;
  }
  sub_100133C90(v13, v16);
  v15 |= 2u;
  uint64_t v6 = v14;
  if (!v14) {
    operator new();
  }
  *(_DWORD *)(v14 + 44) |= 2u;
  uint64_t v7 = *(void *)(v6 + 24);
  if (!v7) {
    operator new();
  }
  *(_DWORD *)(v7 + 392) |= 0x2000000u;
  uint64_t v8 = *(void *)(v7 + 208);
  if (!v8) {
    operator new();
  }
  int v9 = *(_DWORD *)(v8 + 60);
  *(_OWORD *)(v8 + 16) = *a3;
  *(_OWORD *)(v8 + 32) = a3[1];
  *(_DWORD *)(v8 + 60) = v9 | 0x1F;
  uint64_t v10 = *(std::string **)(v8 + 48);
  if (v10 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v10, a2);
  uint64_t v11 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v13);
  sub_100133D9C(v13);
  if (v17) {
    sub_100133D9C(v16);
  }
  return v11;
}

void sub_1002A1908()
{
}

uint64_t sub_1002A1980(uint64_t a1, const std::string *a2, uint64_t a3)
{
  sub_10029BDF4(*(void *)(a1 + 120), v18);
  if (!v19) {
    return 0;
  }
  sub_100133C90(v15, v18);
  v17 |= 2u;
  uint64_t v6 = v16;
  if (!v16) {
    operator new();
  }
  *(_DWORD *)(v16 + 44) |= 2u;
  uint64_t v7 = *(void *)(v6 + 24);
  if (!v7) {
    operator new();
  }
  *(_DWORD *)(v7 + 392) |= 0x800000u;
  uint64_t v8 = *(void *)(v7 + 192);
  if (!v8) {
    operator new();
  }
  int v9 = *(_DWORD *)(v8 + 56);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)a3;
  *(_DWORD *)(v8 + 32) = *(_DWORD *)(a3 + 16);
  *(_WORD *)(v8 + 36) = *(_WORD *)(a3 + 20);
  int v10 = v9 | 0xFF;
  *(_DWORD *)(v8 + 56) = v10;
  int v11 = *(_DWORD *)(a3 + 24);
  if (!v11)
  {
    if (!sub_1000723C8(0)) {
      goto LABEL_23;
    }
    int v10 = *(_DWORD *)(v8 + 56) | 0x100;
    *(_DWORD *)(v8 + 56) = v10;
    *(_DWORD *)(v8 + 48) = 0;
    int v11 = *(_DWORD *)(a3 + 24);
  }
  if (v11 == 1)
  {
    if (!sub_1000723C8(1u)) {
      goto LABEL_23;
    }
    int v10 = *(_DWORD *)(v8 + 56) | 0x100;
    *(_DWORD *)(v8 + 56) = v10;
    *(_DWORD *)(v8 + 48) = 1;
    int v11 = *(_DWORD *)(a3 + 24);
  }
  if (v11 == 2)
  {
    if (sub_1000723C8(2u))
    {
      int v10 = *(_DWORD *)(v8 + 56) | 0x100;
      *(_DWORD *)(v8 + 56) = v10;
      *(_DWORD *)(v8 + 48) = 2;
      goto LABEL_17;
    }
LABEL_23:
    __assert_rtn("set_motion_activity_confidence", "NearbyInteractionTypes.pb.h", 17491, "::CLP::LogEntry::Nearbyd::NI::MotionActivityConfidence_IsValid(value)");
  }
LABEL_17:
  *(_DWORD *)(v8 + 56) = v10 | 0x200;
  uint64_t v12 = *(std::string **)(v8 + 40);
  if (v12 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v12, a2);
  uint64_t v13 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v15);
  sub_100133D9C(v15);
  if (v19) {
    sub_100133D9C(v18);
  }
  return v13;
}

void sub_1002A1BC8()
{
}

uint64_t sub_1002A1C40(uint64_t a1, const std::string *a2, double a3)
{
  sub_10029BDF4(*(void *)(a1 + 120), v15);
  if (!v16) {
    return 0;
  }
  sub_100133C90(v12, v15);
  v14 |= 2u;
  uint64_t v6 = v13;
  if (!v13) {
    operator new();
  }
  *(_DWORD *)(v13 + 44) |= 2u;
  uint64_t v7 = *(void *)(v6 + 24);
  if (!v7) {
    operator new();
  }
  *(_DWORD *)(v7 + 396) |= 0x20u;
  uint64_t v8 = *(void *)(v7 + 304);
  if (!v8) {
    operator new();
  }
  *(_DWORD *)(v8 + 36) |= 2u;
  int v9 = *(std::string **)(v8 + 24);
  if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v9, a2);
  *(_DWORD *)(v8 + 36) |= 1u;
  *(double *)(v8 + 16) = a3;
  uint64_t v10 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v12);
  sub_100133D9C(v12);
  if (v16) {
    sub_100133D9C(v15);
  }
  return v10;
}

void sub_1002A1DD8()
{
}

uint64_t sub_1002A1E4C(uint64_t a1, const std::string *a2, uint64_t *a3)
{
  sub_10029BDF4(*(void *)(a1 + 120), v32);
  if (!v33) {
    return 0;
  }
  sub_100133C90(v29, v32);
  v31 |= 2u;
  uint64_t v6 = v30;
  if (!v30) {
    operator new();
  }
  *(_DWORD *)(v30 + 44) |= 2u;
  uint64_t v7 = *(void *)(v6 + 24);
  if (!v7) {
    operator new();
  }
  *(_DWORD *)(v7 + 392) |= 0x10000000u;
  uint64_t v8 = *(void *)(v7 + 232);
  if (!v8) {
    operator new();
  }
  *(_DWORD *)(v8 + 96) |= 8u;
  int v9 = *(std::string **)(v8 + 40);
  if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v9, a2);
  if (*((unsigned char *)a3 + 16))
  {
    *(_DWORD *)(v8 + 96) |= 0x40u;
    uint64_t v10 = *(void *)(v8 + 64);
    if (!v10) {
      operator new();
    }
    uint64_t v11 = *a3;
    *(_DWORD *)(v10 + 32) |= 2u;
    *(void *)(v10 + 16) = v11;
    int v12 = *((_DWORD *)a3 + 2);
    if (v12)
    {
      if (v12 == 1)
      {
        if (sub_1000723D4(2u))
        {
          int v13 = 2;
          goto LABEL_23;
        }
      }
      else
      {
        if (v12 != 2) {
          goto LABEL_24;
        }
        if (sub_1000723D4(3u))
        {
          int v13 = 3;
LABEL_23:
          *(_DWORD *)(v10 + 32) |= 1u;
          *(_DWORD *)(v10 + 24) = v13;
          goto LABEL_24;
        }
      }
    }
    else if (sub_1000723D4(1u))
    {
      int v13 = 1;
      goto LABEL_23;
    }
    __assert_rtn("set_category", "CLPNearbyd.pb.h", 4657, "::CLP::LogEntry::Nearbyd::NearbydEntry_FindeeBoundedDisplacementCategory_IsValid(value)");
  }
LABEL_24:
  if (*((unsigned char *)a3 + 72))
  {
    *(_DWORD *)(v8 + 96) |= 0x80u;
    uint64_t v15 = *(void *)(v8 + 72);
    if (!v15) {
      operator new();
    }
    int v16 = *((_DWORD *)a3 + 10);
    if (v16)
    {
      if (v16 != 1)
      {
        int v17 = *(_DWORD *)(v15 + 64);
LABEL_36:
        *(_OWORD *)(v15 + 16) = *((_OWORD *)a3 + 3);
        *(void *)(v15 + 32) = a3[8];
        *(_DWORD *)(v15 + 64) = v17 | 0x3E;
        *(_OWORD *)(v15 + 40) = *(_OWORD *)(a3 + 3);
        goto LABEL_37;
      }
      if (sub_1000723C8(2u))
      {
        int v17 = *(_DWORD *)(v15 + 64) | 1;
        *(_DWORD *)(v15 + 64) = v17;
        int v18 = 2;
        goto LABEL_33;
      }
    }
    else if (sub_1000723C8(1u))
    {
      int v17 = *(_DWORD *)(v15 + 64) | 1;
      *(_DWORD *)(v15 + 64) = v17;
      int v18 = 1;
LABEL_33:
      *(_DWORD *)(v15 + 56) = v18;
      if (!*((unsigned char *)a3 + 72)) {
        sub_10000AE44();
      }
      goto LABEL_36;
    }
    __assert_rtn("set_source", "CLPNearbyd.pb.h", 4520, "::CLP::LogEntry::Nearbyd::NearbydEntry_FindeeDisplacementSource_IsValid(value)");
  }
LABEL_37:
  if (*((unsigned char *)a3 + 112))
  {
    *(_DWORD *)(v8 + 96) |= 0x100u;
    uint64_t v19 = *(void *)(v8 + 80);
    if (!v19) {
      operator new();
    }
    int v20 = *(_DWORD *)(v19 + 52);
    *(_OWORD *)(v19 + 16) = *((_OWORD *)a3 + 5);
    *(_DWORD *)(v19 + 52) = v20 | 0xF;
    *(_OWORD *)(v19 + 32) = *((_OWORD *)a3 + 6);
  }
  if (*((unsigned char *)a3 + 160))
  {
    *(_DWORD *)(v8 + 96) |= 0x10u;
    uint64_t v21 = *(void *)(v8 + 48);
    if (!v21) {
      operator new();
    }
    int v22 = *(_DWORD *)(v21 + 40);
    *(_DWORD *)(v21 + 40) = v22 | 3;
    *(_OWORD *)(v21 + 16) = *(_OWORD *)(a3 + 17);
    int v23 = *((_DWORD *)a3 + 38);
    *(_DWORD *)(v21 + 40) = v22 | 7;
    *(_DWORD *)(v21 + 32) = v23;
  }
  int v24 = *(_DWORD *)(v8 + 96);
  if (*((unsigned char *)a3 + 128))
  {
    uint64_t v25 = a3[15];
    v24 |= 0x20u;
    *(_DWORD *)(v8 + 96) = v24;
    *(void *)(v8 + 56) = v25;
  }
  if (*((unsigned char *)a3 + 169)) {
    BOOL v26 = *((unsigned char *)a3 + 168) == 0;
  }
  else {
    BOOL v26 = 1;
  }
  char v27 = !v26;
  *(_DWORD *)(v8 + 96) = v24 | 0x200;
  *(unsigned char *)(v8 + 88) = v27;
  uint64_t v14 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v29);
  sub_100133D9C(v29);
  if (v33) {
    sub_100133D9C(v32);
  }
  return v14;
}

void sub_1002A22C8()
{
}

uint64_t sub_1002A239C(uint64_t a1, const std::string *a2, uint64_t *a3)
{
  sub_10029BDF4(*(void *)(a1 + 120), v24);
  if (!v25) {
    return 0;
  }
  sub_100133C90(v21, v24);
  v23 |= 2u;
  uint64_t v6 = v22;
  if (!v22) {
    operator new();
  }
  *(_DWORD *)(v22 + 44) |= 2u;
  uint64_t v7 = *(void *)(v6 + 24);
  if (!v7) {
    operator new();
  }
  *(_DWORD *)(v7 + 396) |= 0x10u;
  uint64_t v8 = *(void *)(v7 + 296);
  if (!v8) {
    operator new();
  }
  uint64_t v9 = *a3;
  int v10 = *(_DWORD *)(v8 + 116);
  int v11 = v10 | 1;
  *(_DWORD *)(v8 + 116) = v10 | 1;
  *(void *)(v8 + 16) = v9;
  if (*((unsigned char *)a3 + 32))
  {
    uint64_t v12 = a3[3];
    int v11 = v10 | 3;
    *(_DWORD *)(v8 + 116) = v10 | 3;
    *(void *)(v8 + 24) = v12;
  }
  if (*((unsigned char *)a3 + 48))
  {
    uint64_t v13 = a3[5];
    v11 |= 4u;
    *(_DWORD *)(v8 + 116) = v11;
    *(void *)(v8 + 32) = v13;
  }
  if (*((unsigned char *)a3 + 64))
  {
    uint64_t v14 = a3[7];
    v11 |= 8u;
    *(_DWORD *)(v8 + 116) = v11;
    *(void *)(v8 + 40) = v14;
  }
  if (*((unsigned char *)a3 + 80))
  {
    uint64_t v15 = a3[9];
    v11 |= 0x10u;
    *(_DWORD *)(v8 + 116) = v11;
    *(void *)(v8 + 48) = v15;
  }
  if (*((unsigned char *)a3 + 96))
  {
    uint64_t v16 = a3[11];
    v11 |= 0x20u;
    *(_DWORD *)(v8 + 116) = v11;
    *(void *)(v8 + 56) = v16;
  }
  if (*((unsigned char *)a3 + 112))
  {
    uint64_t v17 = a3[13];
    v11 |= 0x40u;
    *(_DWORD *)(v8 + 116) = v11;
    *(void *)(v8 + 64) = v17;
  }
  if (*((unsigned char *)a3 + 152))
  {
    *(_OWORD *)(v8 + 80) = *(_OWORD *)(a3 + 15);
    v11 |= 0xF00u;
    *(_DWORD *)(v8 + 116) = v11;
    *(_OWORD *)(v8 + 96) = *(_OWORD *)(a3 + 17);
  }
  *(_DWORD *)(v8 + 116) = v11 | 0x80;
  int v18 = *(std::string **)(v8 + 72);
  if (v18 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v18, a2);
  uint64_t v19 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v21);
  sub_100133D9C(v21);
  if (v25) {
    sub_100133D9C(v24);
  }
  return v19;
}

void sub_1002A25E4()
{
}

uint64_t sub_1002A2658(uint64_t a1, const std::string *a2, uint64_t a3)
{
  sub_10029BDF4(*(void *)(a1 + 120), v17);
  if (!v18) {
    return 0;
  }
  sub_100133C90(v14, v17);
  v16 |= 2u;
  uint64_t v6 = v15;
  if (!v15) {
    operator new();
  }
  *(_DWORD *)(v15 + 44) |= 2u;
  uint64_t v7 = *(void *)(v6 + 24);
  if (!v7) {
    operator new();
  }
  *(_DWORD *)(v7 + 396) |= 0x40u;
  uint64_t v8 = *(void *)(v7 + 312);
  if (!v8) {
    operator new();
  }
  *(_DWORD *)(v8 + 44) |= 1u;
  uint64_t v9 = *(std::string **)(v8 + 16);
  if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v9, a2);
  int v10 = *(_DWORD *)(v8 + 44);
  *(void *)(v8 + 24) = *(void *)a3;
  *(_DWORD *)(v8 + 32) = *(unsigned __int16 *)(a3 + 8);
  int v11 = *(unsigned __int8 *)(a3 + 10);
  *(_DWORD *)(v8 + 44) = v10 | 0xE;
  *(_DWORD *)(v8 + 36) = v11;
  uint64_t v12 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v14);
  sub_100133D9C(v14);
  if (v18) {
    sub_100133D9C(v17);
  }
  return v12;
}

void sub_1002A2804()
{
}

uint64_t sub_1002A2878(uint64_t a1, const std::string *a2, float32x2_t *a3)
{
  sub_10029BDF4(*(void *)(a1 + 120), v35);
  if (!v36) {
    return 0;
  }
  sub_100133C90(v32, v35);
  v34 |= 2u;
  uint64_t v6 = v33;
  if (!v33) {
    operator new();
  }
  *(_DWORD *)(v33 + 44) |= 2u;
  uint64_t v7 = *(void *)(v6 + 24);
  if (!v7) {
    operator new();
  }
  *(_DWORD *)(v7 + 396) |= 4u;
  uint64_t v8 = *(void *)(v7 + 280);
  if (!v8) {
    operator new();
  }
  *(_DWORD *)(v8 + 104) |= 1u;
  uint64_t v9 = *(std::string **)(v8 + 16);
  if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v9, a2);
  *(_DWORD *)(v8 + 104) |= 2u;
  uint64_t v10 = *(void *)(v8 + 24);
  if (!v10) {
    operator new();
  }
  if (!a3->i32[0])
  {
    if (sub_1000723C8(1u))
    {
      int v11 = *(_DWORD *)(v10 + 28) | 1;
      *(_DWORD *)(v10 + 28) = v11;
      int v12 = 1;
      goto LABEL_19;
    }
LABEL_84:
    uint64_t v29 = "::CLP::LogEntry::Nearbyd::NI::AlgorithmStatus_IsValid(value)";
    int v30 = 19069;
    int v31 = "set_algorithm_status";
    goto LABEL_87;
  }
  if (a3->i32[0] == 1)
  {
    if (sub_1000723C8(2u))
    {
      int v11 = *(_DWORD *)(v10 + 28) | 1;
      *(_DWORD *)(v10 + 28) = v11;
      int v12 = 2;
LABEL_19:
      *(_DWORD *)(v10 + 16) = v12;
      goto LABEL_21;
    }
    goto LABEL_84;
  }
  int v11 = *(_DWORD *)(v10 + 28);
LABEL_21:
  *(unsigned char *)(v10 + 23) = a3->i8[7];
  *(unsigned char *)(v10 + 20) = a3->i8[4];
  __int8 v14 = a3->i8[5];
  *(unsigned char *)(v10 + 21) = v14;
  *(_DWORD *)(v10 + 28) = v11 | 0x1E;
  *(unsigned char *)(v10 + 22) = v14;
  if (a3[24].i8[0])
  {
    *(_DWORD *)(v8 + 104) |= 4u;
    uint64_t v15 = *(void *)(v8 + 32);
    if (!v15) {
      operator new();
    }
    *(_DWORD *)(v15 + 112) |= 1u;
    int v16 = *(std::string **)(v15 + 16);
    if (v16 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v16, a2);
    int v17 = *(_DWORD *)(v15 + 112);
    *(float32x2_t *)(v15 + 24) = a3[1];
    *(double *)(v15 + 32) = a3[3].f32[0];
    float32x2_t v18 = a3[2];
    *(_DWORD *)(v15 + 112) = v17 | 0xE;
    *(float32x2_t *)(v15 + 40) = v18;
    if (a3[5].i8[4])
    {
      *(_DWORD *)(v15 + 112) = v17 | 0x3E;
      *(float64x2_t *)(v15 + 48) = vcvtq_f64_f32(a3[4]);
    }
  }
  if (a3[26].i8[0])
  {
    float32x2_t v19 = a3[25];
    *(_DWORD *)(v8 + 104) |= 8u;
    *(float32x2_t *)(v8 + 40) = v19;
  }
  if (a3[28].i8[0])
  {
    float32x2_t v20 = a3[27];
    *(_DWORD *)(v8 + 104) |= 0x10u;
    *(float32x2_t *)(v8 + 48) = v20;
  }
  switch(a3[29].i32[0])
  {
    case 0:
      if (!sub_100071A38(1u)) {
        goto LABEL_83;
      }
      int v21 = 1;
      goto LABEL_43;
    case 1:
      if (!sub_100071A38(2u)) {
        goto LABEL_83;
      }
      int v21 = 2;
      goto LABEL_43;
    case 2:
      if (!sub_100071A38(3u)) {
        goto LABEL_83;
      }
      int v21 = 3;
      goto LABEL_43;
    case 3:
      if (!sub_100071A38(4u)) {
        goto LABEL_83;
      }
      int v21 = 4;
      goto LABEL_43;
    case 4:
      if (!sub_100071A38(5u))
      {
LABEL_83:
        uint64_t v29 = "::CLP::LogEntry::Nearbyd::NI::VerticalState_IsValid(value)";
        int v30 = 19374;
        int v31 = "set_vertical_state";
        goto LABEL_87;
      }
      int v21 = 5;
LABEL_43:
      *(_DWORD *)(v8 + 104) |= 0x20u;
      *(_DWORD *)(v8 + 72) = v21;
LABEL_44:
      if (a3[31].i8[0])
      {
        float32x2_t v22 = a3[30];
        *(_DWORD *)(v8 + 104) |= 0x40u;
        *(float32x2_t *)(v8 + 56) = v22;
      }
      if (a3[41].i8[0])
      {
        float32x2_t v23 = a3[40];
        *(_DWORD *)(v8 + 104) |= 0x200u;
        *(float32x2_t *)(v8 + 88) = v23;
      }
      if (a3[26].i8[0])
      {
        float32x2_t v24 = a3[25];
        *(_DWORD *)(v8 + 104) |= 8u;
        *(float32x2_t *)(v8 + 40) = v24;
      }
      if (!a3[46].i8[0]) {
        goto LABEL_69;
      }
      break;
    default:
      goto LABEL_44;
  }
  switch(a3[45].i32[1])
  {
    case 0:
      if (!sub_1000F32A8(1u)) {
        goto LABEL_85;
      }
      int v25 = 1;
      goto LABEL_68;
    case 1:
      if (!sub_1000F32A8(2u)) {
        goto LABEL_85;
      }
      int v25 = 2;
      goto LABEL_68;
    case 2:
      if (!sub_1000F32A8(3u)) {
        goto LABEL_85;
      }
      int v25 = 3;
      goto LABEL_68;
    case 3:
      if (!sub_1000F32A8(4u)) {
        goto LABEL_85;
      }
      int v25 = 4;
      goto LABEL_68;
    case 4:
      if (!sub_1000F32A8(5u)) {
        goto LABEL_85;
      }
      int v25 = 5;
      goto LABEL_68;
    case 5:
      if (!sub_1000F32A8(6u)) {
        goto LABEL_85;
      }
      int v25 = 6;
      goto LABEL_68;
    case 6:
      if (!sub_1000F32A8(7u)) {
        goto LABEL_85;
      }
      int v25 = 7;
      goto LABEL_68;
    case 7:
      if (!sub_1000F32A8(8u))
      {
LABEL_85:
        uint64_t v29 = "::CLP::LogEntry::Nearbyd::NI::AlgorithmSource_IsValid(value)";
        int v30 = 19517;
        int v31 = "set_algorithm_source";
        goto LABEL_87;
      }
      int v25 = 8;
LABEL_68:
      *(_DWORD *)(v8 + 104) |= 0x400u;
      *(_DWORD *)(v8 + 76) = v25;
LABEL_69:
      if (!a3[47].i8[0]) {
        goto LABEL_80;
      }
      __int32 v26 = a3[46].i32[1];
      if (v26 == 2)
      {
        if (sub_1000723D4(3u))
        {
          int v27 = 3;
          goto LABEL_79;
        }
        goto LABEL_86;
      }
      if (v26 == 1)
      {
        if (sub_1000723D4(2u))
        {
          int v27 = 2;
          goto LABEL_79;
        }
        goto LABEL_86;
      }
      if (v26) {
        goto LABEL_80;
      }
      if (!sub_1000723D4(1u))
      {
LABEL_86:
        uint64_t v29 = "::CLP::LogEntry::Nearbyd::NI::FindeeMotionState_IsValid(value)";
        int v30 = 19540;
        int v31 = "set_target_motion_state";
LABEL_87:
        __assert_rtn(v31, "NearbyInteractionTypes.pb.h", v30, v29);
      }
      int v27 = 1;
LABEL_79:
      *(_DWORD *)(v8 + 104) |= 0x800u;
      *(_DWORD *)(v8 + 96) = v27;
LABEL_80:
      uint64_t v13 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v32);
      sub_100133D9C(v32);
      if (v36) {
        sub_100133D9C(v35);
      }
      return v13;
    default:
      goto LABEL_69;
  }
}

void sub_1002A2E58()
{
}

uint64_t sub_1002A2F30(uint64_t a1, const std::string *a2, int a3)
{
  sub_10029BDF4(*(void *)(a1 + 120), v16);
  if (!v17) {
    return 0;
  }
  sub_100133C90(v13, v16);
  v15 |= 2u;
  uint64_t v6 = v14;
  if (!v14) {
    operator new();
  }
  *(_DWORD *)(v14 + 44) |= 2u;
  uint64_t v7 = *(void *)(v6 + 24);
  if (!v7) {
    operator new();
  }
  *(_DWORD *)(v7 + 392) |= 0x80000000;
  uint64_t v8 = *(void *)(v7 + 256);
  if (!v8) {
    operator new();
  }
  *(_DWORD *)(v8 + 32) |= 1u;
  uint64_t v9 = *(std::string **)(v8 + 16);
  if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v9, a2);
  if ((a3 - 1) < 4) {
    unsigned int v10 = a3 + 1;
  }
  else {
    unsigned int v10 = 1;
  }
  if (!sub_1000F3284(v10)) {
    __assert_rtn("set_algorithm_container", "NearbyInteractionTypes.pb.h", 19637, "::CLP::LogEntry::Nearbyd::NI::AlgorithmContainer_IsValid(value)");
  }
  *(_DWORD *)(v8 + 32) |= 2u;
  *(_DWORD *)(v8 + 24) = v10;
  uint64_t v11 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v13);
  sub_100133D9C(v13);
  if (v17) {
    sub_100133D9C(v16);
  }
  return v11;
}

void sub_1002A3108()
{
}

uint64_t sub_1002A317C(uint64_t a1, const std::string *a2)
{
  sub_10029BDF4(*(void *)(a1 + 120), v13);
  if (!v14) {
    return 0;
  }
  sub_100133C90(v10, v13);
  v12 |= 2u;
  uint64_t v4 = v11;
  if (!v11) {
    operator new();
  }
  *(_DWORD *)(v11 + 44) |= 2u;
  uint64_t v5 = *(void *)(v4 + 24);
  if (!v5) {
    operator new();
  }
  *(_DWORD *)(v5 + 396) |= 1u;
  uint64_t v6 = *(void *)(v5 + 264);
  if (!v6) {
    operator new();
  }
  *(_DWORD *)(v6 + 28) |= 1u;
  uint64_t v7 = *(std::string **)(v6 + 16);
  if (v7 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v7, a2);
  uint64_t v8 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v10);
  sub_100133D9C(v10);
  if (v14) {
    sub_100133D9C(v13);
  }
  return v8;
}

void sub_1002A32F8()
{
}

uint64_t sub_1002A336C(uint64_t a1, const std::string *a2, double a3, double a4, double a5)
{
  sub_10029BDF4(*(void *)(a1 + 120), v20);
  if (!v21) {
    return 0;
  }
  sub_100133C90(v17, v20);
  v19 |= 2u;
  uint64_t v10 = v18;
  if (!v18) {
    operator new();
  }
  *(_DWORD *)(v18 + 44) |= 2u;
  uint64_t v11 = *(void *)(v10 + 24);
  if (!v11) {
    operator new();
  }
  *(_DWORD *)(v11 + 396) |= 2u;
  uint64_t v12 = *(void *)(v11 + 272);
  if (!v12) {
    operator new();
  }
  *(_DWORD *)(v12 + 52) |= 1u;
  uint64_t v13 = *(std::string **)(v12 + 16);
  if (v13 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v13, a2);
  int v14 = *(_DWORD *)(v12 + 52);
  *(double *)(v12 + 32) = a4;
  *(double *)(v12 + 40) = a5;
  *(_DWORD *)(v12 + 52) = v14 | 0xE;
  *(double *)(v12 + 24) = a3;
  uint64_t v15 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v17);
  sub_100133D9C(v17);
  if (v21) {
    sub_100133D9C(v20);
  }
  return v15;
}

void sub_1002A3518()
{
}

uint64_t sub_1002A358C(uint64_t a1, const std::string *a2, float32x2_t *a3)
{
  sub_10029BDF4(*(void *)(a1 + 120), v22);
  if (!v23) {
    return 0;
  }
  sub_100133C90(v19, v22);
  v21 |= 2u;
  uint64_t v6 = v20;
  if (!v20) {
    operator new();
  }
  *(_DWORD *)(v20 + 44) |= 2u;
  uint64_t v7 = *(void *)(v6 + 24);
  if (!v7) {
    operator new();
  }
  *(_DWORD *)(v7 + 392) |= 0x40000000u;
  uint64_t v8 = *(void *)(v7 + 248);
  if (!v8) {
    operator new();
  }
  *(_DWORD *)(v8 + 112) |= 1u;
  uint64_t v9 = *(std::string **)(v8 + 16);
  if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v9, a2);
  int v10 = *(_DWORD *)(v8 + 112);
  *(float32x2_t *)(v8 + 24) = *a3;
  *(double *)(v8 + 32) = a3[2].f32[0];
  float32x2_t v11 = a3[1];
  int v12 = v10 | 0xE;
  *(_DWORD *)(v8 + 112) = v10 | 0xE;
  *(float32x2_t *)(v8 + 40) = v11;
  if (a3[4].i8[4])
  {
    int v12 = v10 | 0x3E;
    *(_DWORD *)(v8 + 112) = v10 | 0x3E;
    *(float64x2_t *)(v8 + 48) = vcvtq_f64_f32(a3[3]);
  }
  if (a3[22].i8[2])
  {
    int v13 = a3[22].u16[0];
    v12 |= 0x40u;
    *(_DWORD *)(v8 + 112) = v12;
    *(_DWORD *)(v8 + 64) = v13;
  }
  if (a3[22].i8[5])
  {
    int v14 = a3[22].u8[4];
    v12 |= 0x80u;
    *(_DWORD *)(v8 + 112) = v12;
    *(_DWORD *)(v8 + 68) = v14;
  }
  if (a3[9].i8[0])
  {
    float32x2_t v15 = a3[8];
    v12 |= 0x100u;
    *(_DWORD *)(v8 + 112) = v12;
    *(float32x2_t *)(v8 + 72) = v15;
  }
  if (a3[22].i8[7])
  {
    int v16 = a3[22].u8[6];
    *(_DWORD *)(v8 + 112) = v12 | 0x200;
    *(_DWORD *)(v8 + 104) = v16;
  }
  uint64_t v17 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v19);
  sub_100133D9C(v19);
  if (v23) {
    sub_100133D9C(v22);
  }
  return v17;
}

void sub_1002A37B8()
{
}

uint64_t sub_1002A382C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100132F78(v16);
  v19 |= 1u;
  uint64_t v6 = v17;
  if (!v17) {
    operator new();
  }
  int v7 = *(_DWORD *)(v17 + 52);
  *(_OWORD *)(v17 + 16) = *(_OWORD *)a2;
  uint64_t v8 = *(void *)(a2 + 16);
  *(_DWORD *)(v6 + 52) = v7 | 7;
  *(void *)(v6 + 32) = v8;
  v19 |= 2u;
  uint64_t v9 = v18;
  if (!v18) {
    operator new();
  }
  *(_DWORD *)(v18 + 44) |= 2u;
  uint64_t v10 = *(void *)(v9 + 24);
  if (!v10) {
    operator new();
  }
  *(_DWORD *)(v10 + 396) |= 0x200u;
  uint64_t v11 = *(void *)(v10 + 336);
  if (!v11) {
    operator new();
  }
  int v12 = *(_DWORD *)(v11 + 124);
  *(void *)(v11 + 16) = *(void *)a3;
  *(_DWORD *)(v11 + 24) = *(_DWORD *)(a3 + 8);
  *(_DWORD *)(v11 + 28) = *(_DWORD *)(a3 + 12);
  *(_DWORD *)(v11 + 32) = *(_DWORD *)(a3 + 16);
  *(_DWORD *)(v11 + 36) = *(_DWORD *)(a3 + 20);
  *(_DWORD *)(v11 + 40) = *(_DWORD *)(a3 + 24);
  *(_DWORD *)(v11 + 44) = *(_DWORD *)(a3 + 28);
  *(_OWORD *)(v11 + 48) = *(_OWORD *)(a3 + 32);
  *(void *)(v11 + 64) = *(void *)(a3 + 48);
  *(void *)(v11 + 72) = *(void *)(a3 + 56);
  *(_OWORD *)(v11 + 80) = *(_OWORD *)(a3 + 64);
  *(_DWORD *)(v11 + 96) = *(_DWORD *)(a3 + 80);
  *(_DWORD *)(v11 + 100) = *(_DWORD *)(a3 + 84);
  *(_DWORD *)(v11 + 104) = *(_DWORD *)(a3 + 88);
  *(_DWORD *)(v11 + 124) = v12 | 0x3FFFF;
  *(void *)(v11 + 108) = *(void *)(a3 + 92);
  unsigned int v13 = *(unsigned __int8 *)(a3 + 100);
  if (!sub_1000723C8(v13)) {
    __assert_rtn("set_displacing_state", "NearbyInteractionTypes.pb.h", 20631, "::CLP::LogEntry::Nearbyd::NI::DisplacingState_IsValid(value)");
  }
  *(_DWORD *)(v11 + 124) |= 0x40000u;
  *(_DWORD *)(v11 + 116) = v13;
  uint64_t v14 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v16);
  sub_100133D9C(v16);
  return v14;
}

void sub_1002A3A4C()
{
}

uint64_t sub_1002A3AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100132F78(v16);
  v19 |= 1u;
  uint64_t v6 = v17;
  if (!v17) {
    operator new();
  }
  int v7 = *(_DWORD *)(v17 + 52);
  *(_OWORD *)(v17 + 16) = *(_OWORD *)a2;
  uint64_t v8 = *(void *)(a2 + 16);
  *(_DWORD *)(v6 + 52) = v7 | 7;
  *(void *)(v6 + 32) = v8;
  v19 |= 2u;
  uint64_t v9 = v18;
  if (!v18) {
    operator new();
  }
  *(_DWORD *)(v18 + 44) |= 2u;
  uint64_t v10 = *(void *)(v9 + 24);
  if (!v10) {
    operator new();
  }
  *(_DWORD *)(v10 + 396) |= 0x400u;
  uint64_t v11 = *(void *)(v10 + 344);
  if (!v11) {
    operator new();
  }
  int v12 = *(_DWORD *)(v11 + 40);
  *(void *)(v11 + 16) = *(void *)a3;
  *(_DWORD *)(v11 + 24) = *(unsigned __int16 *)(a3 + 8);
  int v13 = *(char *)(a3 + 10);
  *(_DWORD *)(v11 + 40) = v12 | 0xF;
  *(_DWORD *)(v11 + 28) = v13;
  *(_DWORD *)(v11 + 32) = -128;
  uint64_t v14 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v16);
  sub_100133D9C(v16);
  return v14;
}

void sub_1002A3C44()
{
}

uint64_t sub_1002A3CBC(uint64_t a1, uint64_t a2, unsigned __int16 *a3)
{
  sub_100132F78(v18);
  v21 |= 1u;
  uint64_t v6 = v19;
  if (!v19) {
    operator new();
  }
  int v7 = *(_DWORD *)(v19 + 52);
  *(_OWORD *)(v19 + 16) = *(_OWORD *)a2;
  uint64_t v8 = *(void *)(a2 + 16);
  *(_DWORD *)(v6 + 52) = v7 | 7;
  *(void *)(v6 + 32) = v8;
  v21 |= 2u;
  uint64_t v9 = v20;
  if (!v20) {
    operator new();
  }
  *(_DWORD *)(v20 + 44) |= 2u;
  uint64_t v10 = *(void *)(v9 + 24);
  if (!v10) {
    operator new();
  }
  *(_DWORD *)(v10 + 396) |= 0x800u;
  uint64_t v11 = *(void *)(v10 + 352);
  if (!v11) {
    operator new();
  }
  int v12 = *(_DWORD *)(v11 + 32);
  *(_DWORD *)(v11 + 24) = *a3;
  *(_DWORD *)(v11 + 32) = v12 | 3;
  uint64_t v13 = *(void *)(v11 + 16);
  if (!v13) {
    operator new();
  }
  int v14 = *(_DWORD *)(v13 + 68);
  *(_OWORD *)(v13 + 16) = *(_OWORD *)(a3 + 1);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(a3 + 9);
  *(void *)(v13 + 48) = *(void *)(a3 + 17);
  *(_DWORD *)(v13 + 56) = *((char *)a3 + 42);
  int v15 = *((char *)a3 + 43);
  *(_DWORD *)(v13 + 68) = v14 | 0x7F;
  *(_DWORD *)(v13 + 60) = v15;
  uint64_t v16 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v18);
  sub_100133D9C(v18);
  return v16;
}

void sub_1002A3E88()
{
}

uint64_t sub_1002A3F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100132F78(v17);
  v20 |= 1u;
  uint64_t v6 = v18;
  if (!v18) {
    operator new();
  }
  int v7 = *(_DWORD *)(v18 + 52);
  *(_OWORD *)(v18 + 16) = *(_OWORD *)a2;
  uint64_t v8 = *(void *)(a2 + 16);
  *(_DWORD *)(v6 + 52) = v7 | 7;
  *(void *)(v6 + 32) = v8;
  v20 |= 2u;
  uint64_t v9 = v19;
  if (!v19) {
    operator new();
  }
  *(_DWORD *)(v19 + 44) |= 2u;
  uint64_t v10 = *(void *)(v9 + 24);
  if (!v10) {
    operator new();
  }
  *(_DWORD *)(v10 + 396) |= 0x1000u;
  uint64_t v11 = *(void *)(v10 + 360);
  if (!v11) {
    operator new();
  }
  int v12 = *(_DWORD *)(v11 + 40);
  *(_DWORD *)(v11 + 32) = *(unsigned __int16 *)(a3 + 8);
  *(void *)(v11 + 16) = *(void *)a3;
  *(_DWORD *)(v11 + 40) = v12 | 7;
  uint64_t v13 = *(void *)(v11 + 24);
  if (!v13) {
    operator new();
  }
  int v14 = *(_DWORD *)(v13 + 48);
  *(_OWORD *)(v13 + 16) = *(_OWORD *)(a3 + 10);
  *(void *)(v13 + 32) = *(void *)(a3 + 26);
  *(unsigned char *)(v13 + 40) = *(unsigned char *)(a3 + 34);
  *(_WORD *)(v13 + 41) = *(_WORD *)(a3 + 35);
  *(_DWORD *)(v13 + 48) = v14 | 0x3F;
  uint64_t v15 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v17);
  sub_100133D9C(v17);
  return v15;
}

void sub_1002A40E4()
{
}

uint64_t sub_1002A4174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100132F78(v15);
  v18 |= 1u;
  uint64_t v6 = v16;
  if (!v16) {
    operator new();
  }
  int v7 = *(_DWORD *)(v16 + 52);
  *(_OWORD *)(v16 + 16) = *(_OWORD *)a2;
  uint64_t v8 = *(void *)(a2 + 16);
  *(_DWORD *)(v6 + 52) = v7 | 7;
  *(void *)(v6 + 32) = v8;
  v18 |= 2u;
  uint64_t v9 = v17;
  if (!v17) {
    operator new();
  }
  *(_DWORD *)(v17 + 44) |= 2u;
  uint64_t v10 = *(void *)(v9 + 24);
  if (!v10) {
    operator new();
  }
  *(_DWORD *)(v10 + 396) |= 0x4000u;
  uint64_t v11 = *(void *)(v10 + 376);
  if (!v11) {
    operator new();
  }
  int v12 = *(_DWORD *)(v11 + 48);
  *(_DWORD *)(v11 + 40) = *(unsigned __int16 *)(a3 + 8);
  *(void *)(v11 + 16) = *(void *)a3;
  *(_DWORD *)(v11 + 48) = v12 | 0xF;
  *(_OWORD *)(v11 + 24) = *(_OWORD *)(a3 + 10);
  uint64_t v13 = sub_100293BB4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v15);
  sub_100133D9C(v15);
  return v13;
}

void sub_1002A42F0()
{
}

void *sub_1002A4368(void *a1, char **a2)
{
  uint64_t v4 = sub_100004950(a1, *a2);
  sub_100004950(v4 + 3, a2[1]);
  return a1;
}

void sub_1002A43A4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

double sub_1002A43C0(uint64_t a1, unsigned int a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (!v2) {
    sub_100429554();
  }
  if ((a2 & 0x80000000) != 0) {
    sub_100429580();
  }
  if (*(_DWORD *)(a1 + 16) <= (signed int)a2) {
    sub_1004295AC();
  }
  return *(double *)(v2 + 8 * a2);
}

double sub_1002A43FC(uint64_t a1, int a2, int a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (!v3) {
    sub_1004295D8();
  }
  unsigned int v4 = a2 + *(_DWORD *)(a1 + 20) * a3;
  if ((v4 & 0x80000000) != 0) {
    sub_100429604();
  }
  if ((signed int)v4 >= *(_DWORD *)(a1 + 16)) {
    sub_100429630();
  }
  return *(double *)(v3 + 8 * v4);
}

void *sub_1002A4440(void *__dst, void *__src, size_t __len)
{
  if (__len >= 0x7FFFFFFFFFFFFFF8) {
    sub_10000B220();
  }
  if (__len >= 0x17)
  {
    size_t v7 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17) {
      size_t v7 = __len | 7;
    }
    size_t v8 = v7 + 1;
    uint64_t v6 = operator new(v7 + 1);
    __dst[1] = __len;
    __dst[2] = v8 | 0x8000000000000000;
    *std::string __dst = v6;
  }
  else
  {
    *((unsigned char *)__dst + 23) = __len;
    uint64_t v6 = __dst;
    if (!__len) {
      goto LABEL_9;
    }
  }
  memmove(v6, __src, __len);
LABEL_9:
  *((unsigned char *)v6 + __len) = 0;
  return __dst;
}

void *sub_1002A44EC@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X8>)
{
  size_t v8 = operator new(0x58uLL);
  BOOL result = sub_1002A4560(v8, a1, a2, a3);
  *a4 = v8 + 3;
  a4[1] = v8;
  return result;
}

void sub_1002A454C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1002A4560(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_10085D410;
  sub_1002A4658((uint64_t)&v6, (uint64_t)(a1 + 3), a2, a3, a4);
  return a1;
}

void sub_1002A45C4(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1002A45D8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10085D410;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1002A45F8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10085D410;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_1002A464C(uint64_t a1)
{
  return sub_1000D5130(a1 + 24);
}

void sub_1002A4658(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = (std::__shared_weak_count *)a3[1];
  uint64_t v6 = *a3;
  size_t v7 = v5;
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_1000D5040(a2, &v6, a4, a5);
  if (v7) {
    sub_10001A970(v7);
  }
}

void sub_1002A46B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_10001A970(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002A46CC()
{
  sub_10039D144();
  uint64_t v0 = std::string::insert(&v45, 0, "reverseLUT_A");
  long long v1 = *(_OWORD *)&v0->__r_.__value_.__l.__data_;
  *(void *)&v46[16] = *((void *)&v0->__r_.__value_.__l + 2);
  *(_OWORD *)char v46 = v1;
  v0->__r_.__value_.__l.__size_ = 0;
  v0->__r_.__value_.__r.__words[2] = 0;
  v0->__r_.__value_.__r.__words[0] = 0;
  uint64_t v2 = std::string::append((std::string *)v46, ".bin");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  qword_1008A7148 = v2->__r_.__value_.__r.__words[2];
  xmmword_1008A7138 = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if ((v46[23] & 0x80000000) != 0) {
    operator delete(*(void **)v46);
  }
  if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v45.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A7138, (void *)&_mh_execute_header);
  sub_10039D144();
  unsigned int v4 = std::string::insert(&v45, 0, "reverseLUT_A");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  *(void *)&v46[16] = *((void *)&v4->__r_.__value_.__l + 2);
  *(_OWORD *)char v46 = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  uint64_t v6 = std::string::append((std::string *)v46, ".bin");
  long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  qword_1008A7160 = v6->__r_.__value_.__r.__words[2];
  xmmword_1008A7150 = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  if ((v46[23] & 0x80000000) != 0) {
    operator delete(*(void **)v46);
  }
  if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v45.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A7150, (void *)&_mh_execute_header);
  sub_10039D144();
  size_t v8 = std::string::insert(&v45, 0, "reverseLUT_A");
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  *(void *)&v46[16] = *((void *)&v8->__r_.__value_.__l + 2);
  *(_OWORD *)char v46 = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  uint64_t v10 = std::string::append((std::string *)v46, ".bin");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  qword_1008A7178 = v10->__r_.__value_.__r.__words[2];
  xmmword_1008A7168 = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  if ((v46[23] & 0x80000000) != 0) {
    operator delete(*(void **)v46);
  }
  if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v45.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A7168, (void *)&_mh_execute_header);
  sub_10039D144();
  int v12 = std::string::insert(&v45, 0, "reverseLUT_A");
  long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  *(void *)&v46[16] = *((void *)&v12->__r_.__value_.__l + 2);
  *(_OWORD *)char v46 = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  int v14 = std::string::append((std::string *)v46, ".bin");
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  qword_1008A7190 = v14->__r_.__value_.__r.__words[2];
  xmmword_1008A7180 = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  if ((v46[23] & 0x80000000) != 0) {
    operator delete(*(void **)v46);
  }
  if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v45.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A7180, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v16 = std::string::insert(&v45, 0, "reverseLUT_A");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  *(void *)&v46[16] = *((void *)&v16->__r_.__value_.__l + 2);
  *(_OWORD *)char v46 = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  int v18 = std::string::append((std::string *)v46, ".bin");
  long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  qword_1008A71A8 = v18->__r_.__value_.__r.__words[2];
  xmmword_1008A7198 = v19;
  v18->__r_.__value_.__l.__size_ = 0;
  v18->__r_.__value_.__r.__words[2] = 0;
  v18->__r_.__value_.__r.__words[0] = 0;
  if ((v46[23] & 0x80000000) != 0) {
    operator delete(*(void **)v46);
  }
  if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v45.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A7198, (void *)&_mh_execute_header);
  sub_10039D144();
  int v20 = std::string::insert(&v45, 0, "reverseLUT_A");
  long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
  *(void *)&v46[16] = *((void *)&v20->__r_.__value_.__l + 2);
  *(_OWORD *)char v46 = v21;
  v20->__r_.__value_.__l.__size_ = 0;
  v20->__r_.__value_.__r.__words[2] = 0;
  v20->__r_.__value_.__r.__words[0] = 0;
  float32x2_t v22 = std::string::append((std::string *)v46, ".bin");
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  qword_1008A71C0 = v22->__r_.__value_.__r.__words[2];
  xmmword_1008A71B0 = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  if ((v46[23] & 0x80000000) != 0) {
    operator delete(*(void **)v46);
  }
  if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v45.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A71B0, (void *)&_mh_execute_header);
  sub_10039D144();
  float32x2_t v24 = std::string::insert(&v45, 0, "reverseLUT_A");
  long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
  *(void *)&v46[16] = *((void *)&v24->__r_.__value_.__l + 2);
  *(_OWORD *)char v46 = v25;
  v24->__r_.__value_.__l.__size_ = 0;
  v24->__r_.__value_.__r.__words[2] = 0;
  v24->__r_.__value_.__r.__words[0] = 0;
  __int32 v26 = std::string::append((std::string *)v46, ".bin");
  long long v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
  qword_1008A71D8 = v26->__r_.__value_.__r.__words[2];
  xmmword_1008A71C8 = v27;
  v26->__r_.__value_.__l.__size_ = 0;
  v26->__r_.__value_.__r.__words[2] = 0;
  v26->__r_.__value_.__r.__words[0] = 0;
  if ((v46[23] & 0x80000000) != 0) {
    operator delete(*(void **)v46);
  }
  if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v45.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A71C8, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v28 = std::string::insert(&v45, 0, "reverseLUT_A");
  long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
  *(void *)&v46[16] = *((void *)&v28->__r_.__value_.__l + 2);
  *(_OWORD *)char v46 = v29;
  v28->__r_.__value_.__l.__size_ = 0;
  v28->__r_.__value_.__r.__words[2] = 0;
  v28->__r_.__value_.__r.__words[0] = 0;
  int v30 = std::string::append((std::string *)v46, ".bin");
  long long v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
  qword_1008A71F0 = v30->__r_.__value_.__r.__words[2];
  xmmword_1008A71E0 = v31;
  v30->__r_.__value_.__l.__size_ = 0;
  v30->__r_.__value_.__r.__words[2] = 0;
  v30->__r_.__value_.__r.__words[0] = 0;
  if ((v46[23] & 0x80000000) != 0) {
    operator delete(*(void **)v46);
  }
  if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v45.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A71E0, (void *)&_mh_execute_header);
  sub_10039D144();
  int v32 = std::string::insert(&v45, 0, "reverseLUT_A");
  long long v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
  *(void *)&v46[16] = *((void *)&v32->__r_.__value_.__l + 2);
  *(_OWORD *)char v46 = v33;
  v32->__r_.__value_.__l.__size_ = 0;
  v32->__r_.__value_.__r.__words[2] = 0;
  v32->__r_.__value_.__r.__words[0] = 0;
  int v34 = std::string::append((std::string *)v46, ".bin");
  long long v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
  qword_1008A7208 = v34->__r_.__value_.__r.__words[2];
  xmmword_1008A71F8 = v35;
  v34->__r_.__value_.__l.__size_ = 0;
  v34->__r_.__value_.__r.__words[2] = 0;
  v34->__r_.__value_.__r.__words[0] = 0;
  if ((v46[23] & 0x80000000) != 0) {
    operator delete(*(void **)v46);
  }
  if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v45.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A71F8, (void *)&_mh_execute_header);
  *(_OWORD *)char v46 = xmmword_1004BDD70;
  *(_OWORD *)&v46[16] = unk_1004BDD80;
  sub_1001A003C((uint64_t)&unk_1008A7210, (int *)v46, 4);
  xmmword_1008A7228 = xmmword_1004B7660;
  unk_1008A7238 = xmmword_1004B7670;
  qword_1008A7250 = 0;
  unk_1008A7258 = 0;
  qword_1008A7248 = 0x3FD999999999999ALL;
  unk_1008A7260 = xmmword_1004B7680;
  dword_1008A7270 = 5;
  qword_1008A7278 = 0x4000000000000000;
  dword_1008A7280 = 5;
  byte_1008A7288 = 0;
  unk_1008A728C = 0x30000000ALL;
  xmmword_1008A7298 = xmmword_1004B7690;
  unk_1008A72A8 = xmmword_1004B76A0;
  xmmword_1008A72B8 = xmmword_1004B76B0;
  qword_1008A72C8 = 0x3FE3333333333333;
  dword_1008A72D0 = 3;
  xmmword_1008A72D8 = xmmword_1004B76C0;
  unk_1008A72E8 = xmmword_1004B76A0;
  xmmword_1008A72F8 = xmmword_1004B7690;
  qword_1008A7308 = 0x3FE3333333333333;
  byte_1008A7310 = 0;
  xmmword_1008A7318 = xmmword_1004B76D0;
  unk_1008A7328 = xmmword_1004B76E0;
  __asm { FMOV            V0.2D, #1.0 }
  long long v44 = _Q0;
  xmmword_1008A7338 = _Q0;
  qword_1008A7348 = 0xBFD3333333333333;
  xmmword_1008A7350 = xmmword_1004B76F0;
  qword_1008A7360 = 0x3E99999A40000000;
  xmmword_1008A7368 = xmmword_1004B7670;
  qword_1008A7380 = 0;
  unk_1008A7388 = 0;
  qword_1008A7378 = 0x3FD999999999999ALL;
  xmmword_1008A7390 = xmmword_1004B7680;
  dword_1008A73A0 = 5;
  qword_1008A73A8 = 0x4000000000000000;
  dword_1008A73B0 = 4;
  qword_1008A73B8 = 0x300000008;
  qword_1008A73C0 = 0xC04E800000000000;
  v45.__r_.__value_.__r.__words[0] = 0xC04E800000000000;
  sub_1001A02EC((uint64_t)algn_1008A73C8, (double *)&v45, 1);
  xmmword_1008A73E0 = xmmword_1004B7700;
  qword_1008A73F0 = 0x4024000000000000;
  dword_1008A73F8 = 45;
  byte_1008A7400 = 0;
  byte_1008A7418 = 0;
  qword_1008A7420 = 0;
  byte_1008A7428 = 0;
  dword_1008A742C = 1;
  byte_1008A7430 = 1;
  xmmword_1008A7438 = xmmword_1004B7710;
  unk_1008A7448 = xmmword_1004B7720;
  xmmword_1008A7458 = v44;
  qword_1008A7468 = 0xC059000000000000;
  xmmword_1008A7470 = xmmword_1004B7730;
  qword_1008A7480 = (uint64_t)vdup_n_s32(0x3DCCCCCDu);
  xmmword_1008A7488 = xmmword_1004B7670;
  qword_1008A7498 = 0x3FD999999999999ALL;
  qword_1008A74A8 = 0;
  qword_1008A74A0 = 0;
  xmmword_1008A74B0 = xmmword_1004B7680;
  dword_1008A74C0 = 5;
  qword_1008A74C8 = 0x4000000000000000;
  dword_1008A74D0 = 10;
  qword_1008A74D8 = 0x4034000000000000;
  dword_1008A74E0 = 3;
  xmmword_1008A74E8 = xmmword_1004B7740;
  __cxa_atexit((void (*)(void *))sub_10019E4F8, &unk_1008A7210, (void *)&_mh_execute_header);
  __cxa_atexit((void (*)(void *))nullsub_72, &off_10089F270, (void *)&_mh_execute_header);
  __cxa_atexit((void (*)(void *))nullsub_73, &off_10089F278, (void *)&_mh_execute_header);
  qword_1008A7500 = 0;
  unk_1008A7508 = 0;
  qword_1008A74F8 = 0;
  uint64_t v41 = operator new(0x40uLL);
  qword_1008A7500 = (uint64_t)(v41 + 4);
  unk_1008A7508 = v41 + 4;
  _OWORD *v41 = xmmword_1004BDD90;
  v41[1] = unk_1004BDDA0;
  void v41[2] = xmmword_1004BDDB0;
  v41[3] = unk_1004BDDC0;
  qword_1008A74F8 = (uint64_t)v41;
  __cxa_atexit((void (*)(void *))sub_100032C1C, &qword_1008A74F8, (void *)&_mh_execute_header);
  qword_1008A7518 = 0;
  unk_1008A7520 = 0;
  qword_1008A7510 = 0;
  uint64_t v42 = operator new(0x10uLL);
  qword_1008A7518 = (uint64_t)(v42 + 1);
  unk_1008A7520 = v42 + 1;
  *uint64_t v42 = xmmword_1004BDDD0;
  qword_1008A7510 = (uint64_t)v42;
  __cxa_atexit((void (*)(void *))sub_100032C1C, &qword_1008A7510, (void *)&_mh_execute_header);
  *(void *)char v46 = "AntennaMask_1_NN_V5_Model_DeviceType_201.mlmodelc/fp16_model.espresso";
  *(void *)&v46[8] = "net";
  sub_1002A4368(&qword_1008A7528, (char **)v46);
  v45.__r_.__value_.__r.__words[0] = (std::string::size_type)"AntennaMask_2_NN_V5_Model_DeviceType_201.mlmodelc/fp16_model.espresso";
  v45.__r_.__value_.__l.__size_ = (std::string::size_type)"net";
  sub_1002A4368(qword_1008A7558, &v45.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))sub_1002933D4, &qword_1008A7528, (void *)&_mh_execute_header);
  *(void *)char v46 = "AntennaMask_1_NN_V5_ScalingModel_DeviceType_201";
  *(void *)&v46[8] = "mlmodelc";
  sub_1002A4368(&qword_1008A7588, (char **)v46);
  v45.__r_.__value_.__r.__words[0] = (std::string::size_type)"AntennaMask_2_NN_V5_ScalingModel_DeviceType_201";
  v45.__r_.__value_.__l.__size_ = (std::string::size_type)"mlmodelc";
  sub_1002A4368(qword_1008A75B8, &v45.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))sub_1002933D4, &qword_1008A7588, (void *)&_mh_execute_header);
  sub_100004950(qword_1008A75E8, "input_1");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008A75E8, (void *)&_mh_execute_header);
  sub_100004950(qword_1008A7600, "Identity");
  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_1008A7600, (void *)&_mh_execute_header);
}

void sub_1002A51B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (byte_1008A75B7 < 0) {
    sub_10042965C();
  }
  if (byte_1008A759F < 0) {
    operator delete((void *)qword_1008A7588);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1002A52A4@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, (&off_10085D7B0)[a1]);
}

void *sub_1002A52B8@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, (&off_10085D808)[a1]);
}

void *sub_1002A52CC@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, (&off_10085D850)[a1]);
}

void *sub_1002A52E0@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, (&off_10085D870)[a1]);
}

void sub_1002A5400(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002A5B2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002A5EE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002A5F8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002A60BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_1002A6288(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002A62F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002A6380(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002A63FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002A6C14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_1002A6D78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002A7138(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,char a42)
{
  if (a16) {
    sub_10001A970(a16);
  }
  if (a23 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_1002A8848(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, void *a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1002A8DF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002A9044(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002A9208(_Unwind_Exception *a1)
{
  long long v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1002A9500(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002A991C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1002A9B9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1002A9C40(uint64_t a1)
{
  return a1;
}

void sub_1002A9C6C(uint64_t a1)
{
  operator delete();
}

void *sub_1002A9CB8(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  *uint64_t v2 = off_10085D540;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_1002A9D10(uint64_t a1, void *a2)
{
  *a2 = off_10085D540;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_1002A9D58(uint64_t a1)
{
}

void sub_1002A9D60(id *a1)
{
  operator delete(a1);
}

void sub_1002A9D9C(uint64_t a1, void *a2, uint64_t *a3)
{
  long long v3 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  uint64_t v4 = *a3;
  int v8 = *((_DWORD *)a3 + 2);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(NSObject **)(v5 + 56);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1002A9E84;
  block[3] = &unk_100857C10;
  void block[4] = v5;
  void block[5] = v4;
  dispatch_async(v6, block);
  if (v3) {
    sub_10001A970(v3);
  }
}

uint64_t sub_1002A9E38(uint64_t a1, uint64_t a2)
{
  if (sub_10003E730(a2, (uint64_t)&off_10085D5A0)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_1002A9E78()
{
  return &off_10085D5A0;
}

id sub_1002A9E84(uint64_t a1)
{
  return [*(id *)(a1 + 32) serviceRequestDidUpdateStatus:*(void *)(a1 + 40) status:*(unsigned int *)(a1 + 48)];
}

uint64_t sub_1002A9E94(uint64_t a1)
{
  return a1;
}

void sub_1002A9EC0(uint64_t a1)
{
  operator delete();
}

void *sub_1002A9F0C(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  *uint64_t v2 = off_10085D5C0;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_1002A9F64(uint64_t a1, void *a2)
{
  *a2 = off_10085D5C0;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_1002A9FAC(uint64_t a1)
{
}

void sub_1002A9FB4(id *a1)
{
  operator delete(a1);
}

void sub_1002A9FF0(uint64_t a1, void *a2, long long *a3)
{
  uint64_t v5 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  long long v6 = a3[1];
  long long v23 = *a3;
  long long v24 = v6;
  long long v25 = a3[2];
  sub_1001751A0(v26, (uint64_t)(a3 + 3));
  sub_10016E330(v27, (uint64_t)(a3 + 38));
  sub_1001751F8(v30, (__n128 *)((char *)a3 + 760));
  memcpy(v34, a3 + 55, sizeof(v34));
  long long v7 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v10[0]) = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#peer-nba,Registering solutionsCallback.", (uint8_t *)v10, 2u);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  long long v9 = *(NSObject **)(v8 + 56);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3321888768;
  long long v11 = v23;
  _OWORD v10[2] = sub_1002AA338;
  v10[3] = &unk_1008588F8;
  v10[4] = v8;
  long long v12 = v24;
  long long v13 = v25;
  sub_1001751A0(v14, (uint64_t)v26);
  sub_10016E330(v15, (uint64_t)v27);
  sub_1001751F8(v18, v30);
  memcpy(v22, v34, sizeof(v22));
  dispatch_async(v9, v10);
  if (v21 && __p)
  {
    int v20 = __p;
    operator delete(__p);
  }
  if (v17) {
    sub_10003E96C((uint64_t)v16, v16[1]);
  }
  sub_10015DC28((uint64_t)v14);
  if (v33 && v31)
  {
    int v32 = v31;
    operator delete(v31);
  }
  if (v29) {
    sub_10003E96C((uint64_t)v28, v28[1]);
  }
  sub_10015DC28((uint64_t)v26);
  if (v5) {
    sub_10001A970(v5);
  }
}

void sub_1002AA240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (LOBYTE(STACK[0x318])) {
    sub_100412860((uint64_t)&a9);
  }
  sub_10015DC28(v11);
  if (LOBYTE(STACK[0x948]))
  {
    long long v13 = (void *)STACK[0x920];
    if (STACK[0x920])
    {
      STACK[0x928] = (unint64_t)v13;
      operator delete(v13);
    }
  }
  if (LOBYTE(STACK[0x8D0])) {
    sub_10003E96C((uint64_t)&STACK[0x850], (void *)STACK[0x858]);
  }
  sub_10015DC28(v10);
  if (v9) {
    sub_10001A970(v9);
  }
  _Unwind_Resume(a1);
}

void sub_1002AA2E0()
{
  if (!v0) {
    JUMPOUT(0x1002AA2D8);
  }
  JUMPOUT(0x1002AA2D0);
}

uint64_t sub_1002AA2EC(uint64_t a1, uint64_t a2)
{
  if (sub_10003E730(a2, (uint64_t)&off_10085D620)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_1002AA32C()
{
  return &off_10085D620;
}

id sub_1002AA338(uint64_t a1)
{
  return [*(id *)(a1 + 32) didReceiveNewSolution:a1 + 40];
}

uint64_t sub_1002AA348(uint64_t a1)
{
  return a1;
}

void sub_1002AA374(uint64_t a1)
{
  operator delete();
}

void *sub_1002AA3C0(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  *uint64_t v2 = off_10085D640;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_1002AA418(uint64_t a1, void *a2)
{
  *a2 = off_10085D640;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_1002AA460(uint64_t a1)
{
}

void sub_1002AA468(id *a1)
{
  operator delete(a1);
}

void sub_1002AA4A4(uint64_t a1, void *a2, __int16 *a3)
{
  uint64_t v5 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  __int16 v14 = *a3;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  long long v15 = 0;
  sub_10016D488(&v15, *((const void **)a3 + 1), *((void *)a3 + 2), *((void *)a3 + 2) - *((void *)a3 + 1));
  long long v18 = *((_OWORD *)a3 + 2);
  uint64_t v6 = *(void *)(a1 + 8);
  long long v7 = *(NSObject **)(v6 + 56);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  block[2] = sub_1002AA63C;
  block[3] = &unk_1008589C0;
  void block[4] = v6;
  __int16 v9 = v14;
  std::string __p = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  sub_10016D488(&__p, v15, (uint64_t)v16, v16 - (unsigned char *)v15);
  long long v13 = v18;
  dispatch_async(v7, block);
  if (__p)
  {
    uint64_t v11 = __p;
    operator delete(__p);
  }
  if (v15)
  {
    uint64_t v16 = v15;
    operator delete(v15);
  }
  if (v5) {
    sub_10001A970(v5);
  }
}

void sub_1002AA5C0(_Unwind_Exception *exception_object)
{
  uint64_t v4 = *(void **)(v2 - 72);
  if (v4)
  {
    *(void *)(v2 - 64) = v4;
    operator delete(v4);
  }
  if (v1) {
    sub_10001A970(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002AA5F0(uint64_t a1, uint64_t a2)
{
  if (sub_10003E730(a2, (uint64_t)&off_10085D6A0)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_1002AA630()
{
  return &off_10085D6A0;
}

id sub_1002AA63C(uint64_t a1)
{
  return [*(id *)(a1 + 32) didReceiveRemoteData:a1 + 40];
}

uint64_t sub_1002AA64C(uint64_t a1)
{
  return a1;
}

void sub_1002AA678(uint64_t a1)
{
  operator delete();
}

void *sub_1002AA6C4(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  *uint64_t v2 = off_10085D6C0;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_1002AA71C(uint64_t a1, void *a2)
{
  *a2 = off_10085D6C0;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_1002AA764(uint64_t a1)
{
}

void sub_1002AA76C(id *a1)
{
  operator delete(a1);
}

void sub_1002AA7A8(uint64_t a1, void *a2, int *a3)
{
  long long v3 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  int v4 = *a3;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(NSObject **)(v5 + 56);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1002AA88C;
  v7[3] = &unk_100857CC8;
  v7[4] = v5;
  int v8 = v4;
  dispatch_async(v6, v7);
  if (v3) {
    sub_10001A970(v3);
  }
}

uint64_t sub_1002AA840(uint64_t a1, uint64_t a2)
{
  if (sub_10003E730(a2, (uint64_t)&off_10085D720)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_1002AA880()
{
  return &off_10085D720;
}

id sub_1002AA88C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _nbammsSessionInvalidatedWithReason:*(unsigned int *)(a1 + 40)];
}

uint64_t sub_1002AA89C(uint64_t a1)
{
  return a1;
}

void sub_1002AA8C8(uint64_t a1)
{
  operator delete();
}

void *sub_1002AA914(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  *uint64_t v2 = off_10085D740;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_1002AA96C(uint64_t a1, void *a2)
{
  *a2 = off_10085D740;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_1002AA9B4(uint64_t a1)
{
}

void sub_1002AA9BC(id *a1)
{
  operator delete(a1);
}

void sub_1002AA9F8(uint64_t a1, void *a2, long long *a3)
{
  uint64_t v5 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  long long v6 = a3[1];
  long long v23 = *a3;
  long long v24 = v6;
  long long v25 = a3[2];
  sub_1001751A0(v26, (uint64_t)(a3 + 3));
  sub_10016E330(v27, (uint64_t)(a3 + 38));
  sub_1001751F8(v30, (__n128 *)((char *)a3 + 760));
  memcpy(v34, a3 + 55, sizeof(v34));
  long long v7 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v10[0]) = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#peer-nba,Registering unsuccessfulRangingCallback.", (uint8_t *)v10, 2u);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  __int16 v9 = *(NSObject **)(v8 + 56);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3321888768;
  long long v11 = v23;
  _OWORD v10[2] = sub_1002AAD40;
  v10[3] = &unk_1008588F8;
  v10[4] = v8;
  long long v12 = v24;
  long long v13 = v25;
  sub_1001751A0(v14, (uint64_t)v26);
  sub_10016E330(v15, (uint64_t)v27);
  sub_1001751F8(v18, v30);
  memcpy(v22, v34, sizeof(v22));
  dispatch_async(v9, v10);
  if (v21 && __p)
  {
    int v20 = __p;
    operator delete(__p);
  }
  if (v17) {
    sub_10003E96C((uint64_t)v16, v16[1]);
  }
  sub_10015DC28((uint64_t)v14);
  if (v33 && v31)
  {
    int v32 = v31;
    operator delete(v31);
  }
  if (v29) {
    sub_10003E96C((uint64_t)v28, v28[1]);
  }
  sub_10015DC28((uint64_t)v26);
  if (v5) {
    sub_10001A970(v5);
  }
}

void sub_1002AAC48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (LOBYTE(STACK[0x318])) {
    sub_100412860((uint64_t)&a9);
  }
  sub_10015DC28(v11);
  if (LOBYTE(STACK[0x948]))
  {
    long long v13 = (void *)STACK[0x920];
    if (STACK[0x920])
    {
      STACK[0x928] = (unint64_t)v13;
      operator delete(v13);
    }
  }
  if (LOBYTE(STACK[0x8D0])) {
    sub_10003E96C((uint64_t)&STACK[0x850], (void *)STACK[0x858]);
  }
  sub_10015DC28(v10);
  if (v9) {
    sub_10001A970(v9);
  }
  _Unwind_Resume(a1);
}

void sub_1002AACE8()
{
  if (!v0) {
    JUMPOUT(0x1002AACE0);
  }
  JUMPOUT(0x1002AACD8);
}

uint64_t sub_1002AACF4(uint64_t a1, uint64_t a2)
{
  if (sub_10003E730(a2, (uint64_t)&off_10085D7A0)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_1002AAD34()
{
  return &off_10085D7A0;
}

id sub_1002AAD40(uint64_t a1)
{
  return [*(id *)(a1 + 32) didReceiveUnsuccessfulSolution:a1 + 40];
}

void sub_1002AAD50()
{
  v10[0] = xmmword_1004BDF30;
  v10[1] = unk_1004BDF40;
  sub_1001A003C((uint64_t)&unk_1008A7618, (int *)v10, 4);
  xmmword_1008A7630 = xmmword_1004B7660;
  unk_1008A7640 = xmmword_1004B7670;
  qword_1008A7658 = 0;
  unk_1008A7660 = 0;
  qword_1008A7650 = 0x3FD999999999999ALL;
  unk_1008A7668 = xmmword_1004B7680;
  dword_1008A7678 = 5;
  qword_1008A7680 = 0x4000000000000000;
  dword_1008A7688 = 5;
  byte_1008A7690 = 0;
  *(void *)&algn_1008A7691[3] = 0x30000000ALL;
  xmmword_1008A76A0 = xmmword_1004B7690;
  unk_1008A76B0 = xmmword_1004B76A0;
  xmmword_1008A76C0 = xmmword_1004B76B0;
  qword_1008A76D0 = 0x3FE3333333333333;
  dword_1008A76D8 = 3;
  xmmword_1008A76E0 = xmmword_1004B76C0;
  unk_1008A76F0 = xmmword_1004B76A0;
  xmmword_1008A7700 = xmmword_1004B7690;
  qword_1008A7710 = 0x3FE3333333333333;
  byte_1008A7718 = 0;
  xmmword_1008A7720 = xmmword_1004B76D0;
  unk_1008A7730 = xmmword_1004B76E0;
  __asm { FMOV            V0.2D, #1.0 }
  long long v8 = _Q0;
  xmmword_1008A7740 = _Q0;
  qword_1008A7750 = 0xBFD3333333333333;
  xmmword_1008A7758 = xmmword_1004B76F0;
  qword_1008A7768 = 0x3E99999A40000000;
  xmmword_1008A7770 = xmmword_1004B7670;
  qword_1008A7788 = 0;
  unk_1008A7790 = 0;
  qword_1008A7780 = 0x3FD999999999999ALL;
  xmmword_1008A7798 = xmmword_1004B7680;
  dword_1008A77A8 = 5;
  qword_1008A77B0 = 0x4000000000000000;
  dword_1008A77B8 = 4;
  qword_1008A77C0 = 0x300000008;
  qword_1008A77C8 = 0xC04E800000000000;
  unint64_t v9 = 0xC04E800000000000;
  sub_1001A02EC((uint64_t)&unk_1008A77D0, (double *)&v9, 1);
  xmmword_1008A77E8 = xmmword_1004B7700;
  qword_1008A77F8 = 0x4024000000000000;
  dword_1008A7800 = 45;
  byte_1008A7808 = 0;
  byte_1008A7820 = 0;
  qword_1008A7828 = 0;
  byte_1008A7830 = 0;
  dword_1008A7834 = 1;
  byte_1008A7838 = 1;
  xmmword_1008A7840 = xmmword_1004B7710;
  unk_1008A7850 = xmmword_1004B7720;
  xmmword_1008A7860 = v8;
  qword_1008A7870 = 0xC059000000000000;
  xmmword_1008A7878 = xmmword_1004B7730;
  qword_1008A7888 = (uint64_t)vdup_n_s32(0x3DCCCCCDu);
  xmmword_1008A7890 = xmmword_1004B7670;
  qword_1008A78A0 = 0x3FD999999999999ALL;
  qword_1008A78B0 = 0;
  qword_1008A78A8 = 0;
  xmmword_1008A78B8 = xmmword_1004B7680;
  dword_1008A78C8 = 5;
  qword_1008A78D0 = 0x4000000000000000;
  dword_1008A78D8 = 10;
  qword_1008A78E0 = 0x4034000000000000;
  dword_1008A78E8 = 3;
  xmmword_1008A78F0 = xmmword_1004B7740;
  __cxa_atexit((void (*)(void *))sub_10019E4F8, &unk_1008A7618, (void *)&_mh_execute_header);
  __cxa_atexit((void (*)(void *))nullsub_72, &off_10089F280, (void *)&_mh_execute_header);
  __cxa_atexit((void (*)(void *))nullsub_73, &off_10089F288, (void *)&_mh_execute_header);
  qword_1008A7908 = 0;
  unk_1008A7910 = 0;
  qword_1008A7900 = 0;
  long long v6 = operator new(0x40uLL);
  qword_1008A7908 = (uint64_t)(v6 + 4);
  unk_1008A7910 = v6 + 4;
  _OWORD *v6 = xmmword_1004BDF50;
  v6[1] = unk_1004BDF60;
  _OWORD v6[2] = xmmword_1004BDF70;
  v6[3] = unk_1004BDF80;
  qword_1008A7900 = (uint64_t)v6;
  __cxa_atexit((void (*)(void *))sub_100032C1C, &qword_1008A7900, (void *)&_mh_execute_header);
  qword_1008A7920 = 0;
  unk_1008A7928 = 0;
  qword_1008A7918 = 0;
  long long v7 = operator new(0x10uLL);
  qword_1008A7920 = (uint64_t)(v7 + 1);
  unk_1008A7928 = v7 + 1;
  *long long v7 = xmmword_1004BDF90;
  qword_1008A7918 = (uint64_t)v7;
  __cxa_atexit((void (*)(void *))sub_100032C1C, &qword_1008A7918, (void *)&_mh_execute_header);
}

void sub_1002AB110(_Unwind_Exception *a1)
{
  sub_10003E96C(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

void sub_1002AB244(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002AB2B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  uint64_t v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)PRNarrowbandSARManager;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1002AB38C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002AB564(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1002AB584(uint64_t a1)
{
  [*(id *)(a1 + 32) initNarrowbandSARListner];
  uint64_t v2 = *(void **)(a1 + 32);

  return _[v2 updateSARStateIfRequired];
}

void sub_1002AB648(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void **)(v1 + 16);
  if (v2)
  {
    int v4 = +[AVAudioSession sharedInstance];
    [v2 removeObserver:v1 name:AVAudioSessionRouteChangeNotification object:v4];

    uint64_t v5 = *(void *)(a1 + 32);
    long long v6 = *(void **)(v5 + 16);
    *(void *)(v5 + 16) = 0;
  }
}

void sub_1002AB6EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1002AB770(uint64_t a1)
{
  return _[*(id *)(a1 + 32) updateSARStateIfRequired];
}

void sub_1002AB8E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002ABBF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void sub_1002ABDB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void *sub_1002ABE80(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  *(_DWORD *)(v2 + 28) = *(_DWORD *)(a1 + 40);
  *(unsigned char *)(v2 + 32) = 1;
  id result = *(void **)(a1 + 32);
  if (result[5])
  {
    unsigned int v4 = [result nbSARStateToSARIndex:*(unsigned int *)(a1 + 40)];
    uint64_t v5 = (id)qword_1008A7930;
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      sub_100004950(__p, (&off_10085D8A8)[*(int *)(a1 + 40)]);
      if (v8 >= 0) {
        long long v6 = __p;
      }
      else {
        long long v6 = (void **)__p[0];
      }
      *(_DWORD *)uint8_t buf = 136315394;
      uint64_t v10 = v6;
      __int16 v11 = 1024;
      unsigned int v12 = v4;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#nb-sar,injecting SAR state: %s, index: %u", buf, 0x12u);
      if (v8 < 0) {
        operator delete(__p[0]);
      }
    }

    return (void *)(*(uint64_t (**)(void))(*(void *)(*(void *)(a1 + 32) + 40) + 16))();
  }
  return result;
}

void sub_1002ABFBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1002AC04C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(void *)(result + 32);
  if (*(unsigned char *)(v2 + 32))
  {
    *(unsigned char *)(v2 + 32) = 0;
    uint64_t v2 = *(void *)(result + 32);
  }
  if (*(void *)(v2 + 40))
  {
    long long v3 = (id)qword_1008A7930;
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      sub_100004950(__p, (&off_10085D8A8)[*(int *)(*(void *)(v1 + 32) + 36)]);
      if (v6 >= 0) {
        unsigned int v4 = __p;
      }
      else {
        unsigned int v4 = (void **)__p[0];
      }
      *(_DWORD *)uint8_t buf = 136315138;
      char v8 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#nb-sar,reseting SAR state override. state: %s", buf, 0xCu);
      if (v6 < 0) {
        operator delete(__p[0]);
      }
    }

    return (*(uint64_t (**)(void, id))(*(void *)(*(void *)(v1 + 32) + 40) + 16))(*(void *)(*(void *)(v1 + 32) + 40), [*(id *)(v1 + 32) nbSARStateToSARIndex:*(unsigned int *)(*(void *)(v1 + 32) + 36)]);
  }
  return result;
}

void sub_1002AC17C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002AC22C()
{
  qword_1008A7930 = (uint64_t)os_log_create("com.apple.nearbyd", "Regulatory");
}

void sub_1002AC368(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002AC48C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002AC5B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002AC624(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002AC688(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002AC7B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002AC898(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002AC93C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002ACB80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002ACCFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002ACE2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_1002ACF24@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085DD70[a1]);
}

void *sub_1002ACF38@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085DDC8[a1]);
}

void *sub_1002ACF4C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085DE10[a1]);
}

void *sub_1002ACF60@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085DE30[a1]);
}

uint64_t sub_1002ACF74(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  if (v2)
  {
    *(void *)(a1 + 8) = v2;
    operator delete(v2);
  }
  return a1;
}

uint64_t sub_1002ACFA8(uint64_t a1)
{
  std::mutex::~mutex((std::mutex *)(a1 + 32));
  uint64_t v2 = *(void **)a1;
  if (*(void *)a1)
  {
    *(void *)(a1 + 8) = v2;
    operator delete(v2);
  }
  return a1;
}

void sub_1002AD0A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002AD2A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002AD520(id a1)
{
  id v1 = [[NIServerNearbyAccessoryRangingService alloc] _initInternal];
  uint64_t v2 = (void *)qword_1008A7C68;
  qword_1008A7C68 = (uint64_t)v1;
}

uint64_t sub_1002AD6E8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1002AD6F8(uint64_t a1)
{
}

void sub_1002AD700(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    uint64_t v2 = [[*(id *)(*(void *)(a1 + 40) + 16) objectForKey:x0];

    if (!v2)
    {
      long long v3 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v4 = *(void *)(a1 + 48);
        uint64_t v5 = *(void *)(a1 + 32);
        unsigned int v6 = [*(id *)(*(void *)(a1 + 40) + 16) count];
        *(_DWORD *)uint8_t buf = 138412802;
        *(void *)char v102 = v5;
        *(_WORD *)&v102[8] = 2112;
        *(void *)&v102[10] = v4;
        *(_WORD *)&v102[18] = 1024;
        *(_DWORD *)&v102[20] = v6;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#accessory-service,Add client %@ for process %@ (%d previous clients)", buf, 0x1Cu);
      }

      id v7 = [*(id *)(a1 + 56) accessoryConfigData];
      id v8 = [v7 bytes];

      unint64_t v9 = [*(id *)(a1 + 56) accessoryConfigData];
      id v10 = [v9 length];
      std::string __p = 0;
      uint64_t v93 = 0;
      uint64_t v94 = 0;
      sub_10003AD14(&__p, v8, (uint64_t)v10 + (void)v8, (size_t)v10);

      size_t v11 = v93 - (unsigned char *)__p;
      if ((unint64_t)(v93 - (unsigned char *)__p) > 0x13)
      {
        uint64_t v12 = 0;
        unsigned int v13 = *(unsigned __int16 *)__p;
        BOOL v14 = !*((_WORD *)__p + 1) && v13 == 1;
        BOOL v15 = *((_WORD *)__p + 1) && v13 == 1;
        unsigned int v16 = *((unsigned __int16 *)__p + 8);
        uint64_t v17 = *((unsigned __int16 *)__p + 9);
        do
        {
          if (__PAIR64__(v17, v16) == __PAIR64__((unsigned __int16)word_1004BE568[v12 + 1], (unsigned __int16)word_1004BE568[v12]))
          {
            int v18 = 1;
            goto LABEL_17;
          }
          v12 += 2;
        }
        while (v12 != 6);
        int v18 = 0;
LABEL_17:
        BOOL v19 = v16 == 1 && v17 > 2;
        int v20 = v19;
        int v21 = v16 <= 1 ? v20 : 1;
        int v22 = v13 > 1 || v14;
        if ((v22 | v15) & 1) != 0 && ((v18 | v21))
        {
          if (v18)
          {
            if (v16 != 1 || v17 >= 3) {
              __assert_rtn("UWBConfigDataTotalLengthBytes", "NIFiRaDefinitions.h", 375, "false");
            }
            if (*((unsigned __int8 *)__p + 15) != (2 * v17 + 19) || v11 != 2 * v17 + 35) {
              goto LABEL_49;
            }
          }
          else if (v21)
          {
            if (*((unsigned __int8 *)__p + 15) <= 0x16u || v11 <= 0x26) {
              goto LABEL_49;
            }
            size_t v11 = 39;
          }
          else
          {
            size_t v11 = 0;
          }
          *(_DWORD *)uint8_t buf = 0;
          *(_DWORD *)&v102[12] = 0;
          *(_DWORD *)&v102[31] = 0;
          *(void *)&v102[1] = 0;
          *(_WORD *)&v102[9] = 0;
          memcpy(buf, __p, v11);
          if (v102[0] <= 0x14u
            && ((1 << v102[0]) & 0x100401) != 0
            && v102[28] <= 1u
            && v102[33] < 2u
            && v102[34] <= 8u
            && ((1 << v102[34]) & 0x10D) != 0)
          {
            uint64_t v109 = *(void *)v102;
            int v108 = *(_DWORD *)buf;
            int v110 = *(_DWORD *)&v102[8];
            int v111 = *(_DWORD *)&v102[12];
            *(_OWORD *)int32x2_t v112 = *(_OWORD *)&v102[16];
            *(_DWORD *)&v112[15] = *(_DWORD *)&v102[31];
            char v113 = 1;
            goto LABEL_50;
          }
        }
      }
LABEL_49:
      LOBYTE(v108) = 0;
      char v113 = 0;
      if (([*(id *)(a1 + 56) dataExchangeDisabledAndUsingParameterOverrides] & 1) == 0)
      {
        uint64_t v41 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
          sub_100429D38(v41, v42, v43, v44, v45, v46, v47, v48);
        }
        NSErrorUserInfoKey v106 = NSLocalizedFailureReasonErrorKey;
        CFStringRef v107 = @"Add client fail - raw data could not be parsed";
        long long v27 = +[NSDictionary dictionaryWithObjects:&v107 forKeys:&v106 count:1];
        uint64_t v49 = +[NSError errorWithDomain:@"com.apple.NearbyInteraction" code:-5887 userInfo:v27];
        uint64_t v50 = *(void *)(*(void *)(a1 + 72) + 8);
        uint64_t v51 = *(void **)(v50 + 40);
        *(void *)(v50 + 40) = v49;

        goto LABEL_79;
      }
LABEL_50:
      long long v23 = *(void **)(a1 + 40);
      uint64_t v24 = *(void *)(a1 + 48);
      long long v25 = [*(id *)(a1 + 56) debugParameters];
      unint64_t v26 = (unint64_t)[v23 _generateUwbSessionIdForNewServiceClientWithProcessName:v24 parsedAccessoryConfigData:&v108 debugParameters:v25];

      if ((v26 & 0xFF00000000) == 0)
      {
        uint64_t v52 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
          sub_100429BD0(v52, v53, v54, v55, v56, v57, v58, v59);
        }
        NSErrorUserInfoKey v104 = NSLocalizedFailureReasonErrorKey;
        CFStringRef v105 = @"Add client fail - UWB session ID could not be generated";
        long long v27 = +[NSDictionary dictionaryWithObjects:&v105 forKeys:&v104 count:1];
        uint64_t v60 = +[NSError errorWithDomain:@"com.apple.NearbyInteraction" code:-5887 userInfo:v27];
        uint64_t v61 = *(void *)(*(void *)(a1 + 72) + 8);
        int v62 = *(void **)(v61 + 40);
        *(void *)(v61 + 40) = v60;

        goto LABEL_79;
      }
      long long v27 = [[AccessoryServiceClientTracking alloc] initWithNIConfiguration:*(void *)(a1 + 56) parsedAccessoryConfigData:&v108 processName:*(void *)(a1 + 48) uwbSessionId:v26];
      uint64_t v28 = *(void **)(*(void *)(a1 + 40) + 32);
      char v29 = +[NSNumber numberWithUnsignedInt:[(AccessoryServiceClientTracking *)v27 uwbSessionId]];
      int v30 = [v28 objectForKey:v29];
      BOOL v31 = v30 == 0;

      if (!v31)
      {
        int v32 = 0;
LABEL_53:
        [*(id *)(*(void *)(a1 + 40) + 16) setObject:*(void *)(a1 + 64) forKey:*(void *)(a1 + 32)];
        [*(id *)(*(void *)(a1 + 40) + 24) setObject:v27 forKey:*(void *)(a1 + 32)];
        if (v32)
        {
          char v33 = *(void **)(*(void *)(a1 + 40) + 32);
          int v34 = +[NSNumber numberWithUnsignedInt:[(AccessoryServiceClientTracking *)v27 uwbSessionId]];
          [v33 setObject:v32 forKey:v34];
        }
        long long v35 = *(void **)(*(void *)(a1 + 40) + 32);
        char v36 = +[NSNumber numberWithUnsignedInt:[(AccessoryServiceClientTracking *)v27 uwbSessionId]];
        char v37 = [v35 objectForKey:v36];
        uint64_t v38 = [v37 interestedClients];
        [v38 addObject:*(void *)(a1 + 32)];

        [*(id *)(a1 + 40) _updateUwbSessionState:-[AccessoryServiceClientTracking uwbSessionId](v27, "uwbSessionId")];
        long long v39 = (id)qword_1008ABDE0;
        if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
        {
          unsigned int v40 = [(AccessoryServiceClientTracking *)v27 uwbSessionId];
          *(_DWORD *)uint8_t buf = 67109120;
          *(_DWORD *)char v102 = v40;
          _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, "#accessory-service,Add client successful. UWB session ID %u", buf, 8u);
        }

        goto LABEL_79;
      }
      buf[0] = 0;
      char v103 = 0;
      v99[0] = 0;
      char v100 = 0;
      int v63 = *(void **)(a1 + 40);
      id v91 = 0;
      [v63 _prepareUwbSessionTrackingObjectsForClientTracking:v27 outServiceRequest:buf outStartOptions:v99 outShareableConfigData:&v91];
      id v64 = v91;
      uint64_t v65 = v64;
      if (v103)
      {
        if (v100)
        {
          if (!v64)
          {
            int v66 = qword_1008ABDE0;
            if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
            {
              __int16 v90 = 0;
              _os_log_impl((void *)&_mh_execute_header, v66, OS_LOG_TYPE_DEFAULT, "#accessory-service,Add client - no shareable config data generated. This is only valid when data exchange is disabled", (uint8_t *)&v90, 2u);
            }
          }
          int v67 = [(AccessoryServiceClientTracking *)v27 niConfiguration];
          id v68 = [v67 backgroundMode];

          int v69 = [AccessoryUwbSessionTracking alloc];
          if (!v103 || !v100) {
            sub_10000AE44();
          }
          int v32 = [(AccessoryUwbSessionTracking *)v69 initWithServiceRequest:buf startOptions:v99 shareableConfigData:v65 processName:*(void *)(a1 + 48) accessoryConfigData:[(AccessoryServiceClientTracking *)v27 parsedAccessoryConfigData] persistWhileDetached:v68 != 0];

          goto LABEL_53;
        }
        uint64_t v80 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
          sub_100429CC0(v80, v81, v82, v83, v84, v85, v86, v87);
        }
        NSErrorUserInfoKey v95 = NSLocalizedFailureReasonErrorKey;
        CFStringRef v96 = @"Add client fail - ranging start options could not be generated";
        int v78 = +[NSDictionary dictionaryWithObjects:&v96 forKeys:&v95 count:1];
        uint64_t v79 = +[NSError errorWithDomain:@"com.apple.NearbyInteraction" code:-5887 userInfo:v78];
      }
      else
      {
        int v70 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
          sub_100429C48(v70, v71, v72, v73, v74, v75, v76, v77);
        }
        NSErrorUserInfoKey v97 = NSLocalizedFailureReasonErrorKey;
        CFStringRef v98 = @"Add client fail - ranging service request could not be generated";
        int v78 = +[NSDictionary dictionaryWithObjects:&v98 forKeys:&v97 count:1];
        uint64_t v79 = +[NSError errorWithDomain:@"com.apple.NearbyInteraction" code:-5887 userInfo:v78];
      }
      uint64_t v88 = *(void *)(*(void *)(a1 + 72) + 8);
      int v89 = *(void **)(v88 + 40);
      *(void *)(v88 + 40) = v79;

LABEL_79:
      if (__p)
      {
        uint64_t v93 = __p;
        operator delete(__p);
      }
    }
  }
}

void sub_1002ADFA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_1002AE170(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    uint64_t v2 = [[*(id *)(*(void *)(a1 + 40) + 24) objectForKey:];
    if (v2)
    {
      long long v3 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v4 = *(void *)(a1 + 32);
        uint64_t v5 = [v2 processName];
        unsigned int v6 = [v2 uwbSessionId];
        unsigned int v7 = [*(id *)(*(void *)(a1 + 40) + 16) count];
        int v12 = 138413058;
        uint64_t v13 = v4;
        __int16 v14 = 2112;
        BOOL v15 = v5;
        __int16 v16 = 1024;
        unsigned int v17 = v6;
        __int16 v18 = 1024;
        unsigned int v19 = v7;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#accessory-service,Remove client %@ for process %@ tracking UWB session ID %u (%d clients before removal)", (uint8_t *)&v12, 0x22u);
      }
      [*(id *)(*(void *)(a1 + 40) + 16) removeObjectForKey:*(void *)(a1 + 32)];
      [*(id *)(*(void *)(a1 + 40) + 24) removeObjectForKey:*(void *)(a1 + 32)];
      id v8 = *(void **)(*(void *)(a1 + 40) + 32);
      unint64_t v9 = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", [v2 uwbSessionId]);
      id v10 = [v8 objectForKey:v9];
      size_t v11 = [v10 interestedClients];
      [v11 removeObject:*(void *)(a1 + 32)];

      [*(id *)(a1 + 40) _updateUwbSessionState:[v2 uwbSessionId]];
      [*(id *)(a1 + 40) _cleanupExcessiveDetachedSessions];
    }
  }
}

void sub_1002AE338(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002AE434(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    uint64_t v2 = a1 + 40;
    long long v3 = [[*(id *)(*(void *)(a1 + 40) + 16) objectForKey:x0];
    uint64_t v4 = [*(id *)(*(void *)v2 + 24) objectForKey:*(void *)(a1 + 32)];
    uint64_t v5 = v4;
    if (v3) {
      BOOL v6 = v4 == 0;
    }
    else {
      BOOL v6 = 1;
    }
    if (!v6 && *(unsigned __int8 *)(a1 + 48) != [v4 isRunning])
    {
      unsigned int v7 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v8 = *(void *)(a1 + 32);
        unint64_t v9 = [v5 processName];
        unsigned int v10 = [v5 uwbSessionId];
        unsigned int v11 = [v5 isRunning];
        int v12 = *(unsigned __int8 *)(a1 + 48);
        int v17 = 138413314;
        uint64_t v18 = v8;
        __int16 v19 = 2112;
        int v20 = v9;
        __int16 v21 = 1024;
        unsigned int v22 = v10;
        __int16 v23 = 1024;
        unsigned int v24 = v11;
        __int16 v25 = 1024;
        int v26 = v12;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#accessory-service,Client %@ for process %@ UWB session ID %u, was running: %d, is now running: %d", (uint8_t *)&v17, 0x28u);
      }
      [v5 setIsRunning:*(unsigned __int8 *)(a1 + 48)];
      [*(id *)(a1 + 40) _updateUwbSessionState:[v5 uwbSessionId]];
      if ([v5 isRunning])
      {
        uint64_t v13 = *(void **)(*(void *)(a1 + 40) + 32);
        __int16 v14 = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", [v5 uwbSessionId]);
        BOOL v15 = [v13 objectForKeyedSubscript:v14];
        __int16 v16 = [v15 shareableConfigData];

        if (v16) {
          [v3 serviceDidGenerateShareableConfigurationData:v16];
        }
      }
    }
  }
}

void sub_1002AE648(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002AE79C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) _internalPrintableState];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1002AE9FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id a26)
{
  _Block_object_dispose(&a21, 8);
  _Unwind_Resume(a1);
}

void sub_1002AEA30(uint64_t a1, void *a2, void *a3)
{
  id v32 = a2;
  id v5 = a3;
  sub_100004950(__p, "Unspecified");
  if (*((unsigned char *)[v5 parsedAccessoryConfigData] + 39))
  {
    BOOL v6 = [v5 parsedAccessoryConfigData];
    if (!v6[39]) {
      sub_10000AE44();
    }
    int v7 = v6[4];
    uint64_t v8 = "UserInteractive";
    unint64_t v9 = "Unknown";
    if (v7 == 10) {
      unint64_t v9 = "Background";
    }
    if (v7 != 20) {
      uint64_t v8 = v9;
    }
    if (v6[4]) {
      unsigned int v10 = (char *)v8;
    }
    else {
      unsigned int v10 = "Automatic";
    }
    sub_100004950(&v33, v10);
    if (SHIBYTE(v36) < 0) {
      operator delete(__p[0]);
    }
    *(_OWORD *)std::string __p = v33;
    uint64_t v36 = v34;
    unsigned int v11 = [v5 parsedAccessoryConfigData];
    if (!v11[39] || (v31 = *(_DWORD *)v11, int v12 = [v5 parsedAccessoryConfigData], !v12[39])) {
      sub_10000AE44();
    }
    uint64_t v30 = HIWORD(v31);
    unsigned int v28 = *((_DWORD *)v12 + 4);
    uint64_t v29 = HIWORD(v28);
  }
  else
  {
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    LOWORD(v31) = 0;
    LOWORD(v28) = 0;
  }
  uint64_t v13 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  __int16 v14 = +[NSString stringWithFormat:@"    [%@]", v32];
  [v13 addObject:v14];

  BOOL v15 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  __int16 v16 = [v5 processName];
  id v17 = [v5 uwbSessionId];
  uint64_t v18 = [v5 niConfiguration];
  __int16 v19 = [v18 accessoryDiscoveryToken];
  int v20 = [v19 descriptionInternal];
  __int16 v21 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"        Process: %@. UWB session ID: %u. Token: %@. Running: %d", v16, v17, v20, [v5 isRunning]);
  [v15 addObject:v21];

  unsigned int v22 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  if (v36 >= 0) {
    __int16 v23 = __p;
  }
  else {
    __int16 v23 = (void **)__p[0];
  }
  unsigned int v24 = [v5 niConfiguration];
  __int16 v25 = [v24 accessoryConfigData];
  int v26 = sub_10002D648(v25, 0);
  long long v27 = +[NSString stringWithFormat:@"        Versions: [accessory %d.%d, UWB %d.%d]. Rate: %s. Blob: %@", (unsigned __int16)v31, v30, (unsigned __int16)v28, v29, v23, v26];
  [v22 addObject:v27];

  if (SHIBYTE(v36) < 0) {
    operator delete(__p[0]);
  }
}

void sub_1002AED28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_1002AEDB4(uint64_t a1, void *a2, void *a3)
{
  id v51 = a2;
  id v5 = a3;
  sub_1002ACF38(*((_DWORD *)[v5 serviceRequest] + 1), __p);
  if (v55 >= 0) {
    BOOL v6 = __p;
  }
  else {
    BOOL v6 = (void **)__p[0];
  }
  uint64_t v52 = +[NSMutableString stringWithUTF8String:v6];
  if (v55 < 0) {
    operator delete(__p[0]);
  }
  if (*(void *)[v5 rangingSession])
  {
    id v7 = [v5 rangingSession];
    if (*(unsigned char *)(*(void *)v7 + 682)) {
      uint64_t v8 = *(unsigned __int16 *)(*(void *)v7 + 680);
    }
    else {
      uint64_t v8 = 0;
    }
    uint64_t v53 = +[NSString stringWithFormat:@"Ticket [%d]", v8];
  }
  else
  {
    uint64_t v53 = @"None";
  }
  if (*((_DWORD *)[v5 serviceRequest] + 1) == 6)
  {
    unint64_t v9 = [v5 serviceRequest];
    if (v9[433]) {
      unsigned __int8 v10 = v9[432];
    }
    else {
      unsigned __int8 v10 = -1;
    }
    unsigned int v11 = (unsigned __int8 *)[v5 serviceRequest];
    int v12 = v11[435];
    unsigned int v13 = v11[434];
    __int16 v14 = [v5 serviceRequest];
    if (v12) {
      uint64_t v15 = v13;
    }
    else {
      uint64_t v15 = 0;
    }
    if (v14[437]) {
      unsigned __int8 v16 = v14[436];
    }
    else {
      unsigned __int8 v16 = 0;
    }
    [v52 appendFormat:@" [type %d][cap %d to %d]", v10, v15, v16];
  }
  else if (*((_DWORD *)[v5 serviceRequest] + 1) == 5)
  {
    id v17 = [v5 serviceRequest];
    if (*((unsigned char *)v17 + 424)) {
      uint64_t v18 = v17[52];
    }
    else {
      uint64_t v18 = 0;
    }
    [v52 appendFormat:@" [peer-addr %llu]", v18];
  }
  __int16 v19 = (unsigned __int8 *)[v5 serviceRequest];
  int v20 = v19[372];
  int v21 = *((unsigned __int16 *)v19 + 185);
  unsigned int v22 = (unsigned __int8 *)[v5 serviceRequest];
  int v23 = v22[376];
  int v24 = *((unsigned __int16 *)v22 + 187);
  __int16 v25 = [v5 serviceRequest];
  if (v20) {
    int v26 = v21;
  }
  else {
    int v26 = 0;
  }
  if (v23) {
    int v27 = v24;
  }
  else {
    int v27 = 0;
  }
  int v49 = v27;
  int v50 = v26;
  if (v25[380]) {
    int v28 = *((unsigned __int16 *)v25 + 189);
  }
  else {
    int v28 = 0;
  }
  uint64_t v29 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  uint64_t v30 = +[NSString stringWithFormat:@"    [%@]", v51];
  [v29 addObject:v30];

  unsigned int v31 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  id v32 = [v5 processName];
  long long v33 = [v5 interestedClients];
  id v34 = [v33 count];
  id v35 = [v5 persistWhileDetached];
  double v36 = *(double *)(a1 + 40);
  [v5 initTime];
  double v38 = v37;
  double v39 = *(double *)(a1 + 40);
  [v5 timeOfLatestSessionLifecycleChange];
  uint64_t v41 = +[NSString stringWithFormat:@"        Process: %@. Clients: %d. Persist-detached: %d. Ranging: %@. Age: total %.2f s, in-state %.2f s", v32, v34, v35, v53, v36 - v38, v39 - v40];
  [v31 addObject:v41];

  uint64_t v42 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  int v43 = *((unsigned __int8 *)[v5 serviceRequest] + 1);
  if (v43 == 100)
  {
    uint64_t v44 = "Unspecified";
  }
  else if (v43 == 1)
  {
    uint64_t v44 = "Responder";
  }
  else
  {
    uint64_t v44 = "Initiator";
  }
  uint64_t v45 = __p;
  sub_100004950(__p, v44);
  if (v55 < 0) {
    uint64_t v45 = (void **)__p[0];
  }
  uint64_t v46 = [v5 serviceRequest];
  if (*((unsigned char *)v46 + 408)) {
    uint64_t v47 = v46[50];
  }
  else {
    uint64_t v47 = 0;
  }
  uint64_t v48 = +[NSString stringWithFormat:](NSString, @"        Role: %s. Mode: %@. Local-addr: %llu. Interval: %d ms. Job cfg options: 0x%X. Job timeouts: disc %d, reacq %d, track %d, job %d", v45, v52, v47, (v49 * v50 * v28) / 0x4B0uLL, *((unsigned int *)[v5 serviceRequest] + 17), *((unsigned __int16 *)objc_msgSend(v5, "serviceRequest") + 36), *((unsigned __int16 *)objc_msgSend(v5, "serviceRequest") + 37), *((unsigned __int16 *)objc_msgSend(v5, "serviceRequest") + 38), *((unsigned __int16 *)objc_msgSend(v5, "serviceRequest") + 39));
  [v42 addObject:v48];

  if (v55 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1002AF214(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,void *a21,void *a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  _Unwind_Resume(a1);
}

void sub_1002AF468(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

char *sub_1002AF488(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) _internalPrintableState];
  uint64_t v2 = sub_10002DA78(@"Accessory Ranging Service", v1);

  return v2;
}

void sub_1002AF4D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002AFA0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1002AFAD8(uint64_t result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(result + 52) = *(unsigned char *)(a2 + 52);
  *(_DWORD *)(result + 48) = v2;
  return result;
}

void sub_1002AFAF0(uint64_t a1, void *a2, void *a3, unsigned char *a4)
{
  id v12 = a2;
  id v7 = a3;
  uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8);
  if (!*(unsigned char *)(v8 + 52)) {
    sub_10000AE44();
  }
  unint64_t v9 = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(v8 + 48)];
  unsigned int v10 = [v12 isEqualToNumber:v9];

  if (v10)
  {
    uint64_t v11 = *(void *)(*(void *)(a1 + 32) + 8);
    if (*(unsigned char *)(v11 + 52)) {
      *(unsigned char *)(v11 + 52) = 0;
    }
    *a4 = 1;
  }
}

void sub_1002AFBBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002AFBE0(uint64_t a1, unsigned char *a2, unsigned char *a3)
{
  int v3 = *(unsigned __int8 *)(a1 + 37);
  int v4 = *(unsigned __int8 *)(a1 + 38);
  *a2 = 0;
  *a3 = 0;
  if (v3 == 1)
  {
    id v7 = sub_100007D00();
    if (sub_1003D2E64((uint64_t)v7))
    {
      *a2 = 1;
    }
    else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
    {
      sub_100429E1C();
    }
    if (v4 == 3)
    {
      if (+[NIPlatformInfo isInternalBuild])
      {
        *a2 = 0;
        *a3 = 1;
      }
    }
  }
}

void sub_1002AFC88(uint64_t a1, void *a2, void *a3, unsigned char *a4)
{
  id v17 = a2;
  id v7 = a3;
  uint64_t v8 = *(void **)(a1 + 32);
  unint64_t v9 = [v7 processName];
  LOBYTE(v8) = [v8 isEqualToString:v9];

  if (v8)
  {
    if (*(unsigned char *)(a1 + 64))
    {
      if (*((_DWORD *)[v7 serviceRequest] + 1) != 6) {
        goto LABEL_26;
      }
      unsigned int v10 = *((unsigned __int16 *)[v7 serviceRequest] + 216);
      if (v10 < 0x100) {
        goto LABEL_26;
      }
      if (*(unsigned char *)(a1 + 65))
      {
        if (v10 != 3) {
          goto LABEL_26;
        }
      }
      else if ((_BYTE)v10 && *(unsigned char *)(a1 + 66))
      {
        goto LABEL_26;
      }
    }
    else if (*((_DWORD *)[v7 serviceRequest] + 1) != 5)
    {
      goto LABEL_26;
    }
    if (*((unsigned char *)[v7 accessoryConfigData] + 39))
    {
      uint64_t v11 = *(unsigned __int16 **)(a1 + 56);
      if (!*((unsigned char *)v11 + 39)
        || (id v12 = (unsigned __int16 *)[v7 accessoryConfigData], !*((unsigned char *)v12 + 39)))
      {
        sub_10000AE44();
      }
      if (*v11 == *v12
        && v11[1] == v12[1]
        && *((unsigned __int8 *)v11 + 4) == *((unsigned __int8 *)v12 + 4)
        && v11[8] == v12[8]
        && v11[9] == v12[9]
        && *((unsigned __int8 *)v11 + 32) == *((unsigned __int8 *)v12 + 32)
        && *((unsigned __int8 *)v11 + 37) == *((unsigned __int8 *)v12 + 37))
      {
        int v13 = *((unsigned __int8 *)v11 + 38);
        int v14 = *((unsigned __int8 *)v12 + 38);
        if (!*(unsigned char *)(a1 + 64) && v13 == v14)
        {
          int v13 = *(unsigned __int16 *)((char *)v11 + 33);
          int v14 = *(unsigned __int16 *)((char *)v12 + 33);
        }
        if (v13 == v14)
        {
          unsigned int v15 = [v17 unsignedIntValue];
          uint64_t v16 = *(void *)(*(void *)(a1 + 40) + 8);
          *(_DWORD *)(v16 + 48) = v15;
          *(unsigned char *)(v16 + 52) = 1;
          *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
          *a4 = 1;
        }
      }
    }
  }
LABEL_26:
}

void sub_1002AFE80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002B118C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::__shared_weak_count *a20,uint64_t a21,void *a22,void *a23,void *a24,void *a25,void *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *__p,uint64_t a40,int a41,__int16 a42,char a43,char a44)
{
  if (a44 < 0) {
    operator delete(__p);
  }
  if (a20) {
    sub_10001A970(a20);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_1002B138C(int a1, char a2)
{
  uint64_t v2 = 0;
  if (a1 && (a2 & 1) == 0)
  {
    int v3 = +[NSUserDefaults standardUserDefaults];
    int v4 = [v3 objectForKey:@"AccessoryCoordinateScheduling"];

    if (v4 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
      uint64_t v2 = (uint64_t)[v4 BOOLValue];
    }
    else {
      uint64_t v2 = 1;
    }
  }
  return v2;
}

void sub_1002B1424(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1002B1440(uint64_t *a1)
{
  uint64_t v2 = (std::mutex *)(a1 + 4);
  std::mutex::lock((std::mutex *)(a1 + 4));
  uint64_t v3 = *((int *)a1 + 6);
  *((_DWORD *)a1 + 6) = v3 + 1;
  uint64_t v4 = *a1;
  if (v3 + 1 >= (unint64_t)((a1[1] - *a1) >> 1)) {
    *((_DWORD *)a1 + 6) = 0;
  }
  uint64_t v5 = *(unsigned __int16 *)(v4 + 2 * v3);
  std::mutex::unlock(v2);
  return v5;
}

void sub_1002B149C(_OWORD *a1@<X8>)
{
  uint64_t v2 = +[NSUserDefaults standardUserDefaults];
  uint64_t v3 = [v2 objectForKey:@"NIAccessorySubratingOverrides_Subrate"];

  uint64_t v4 = +[NSUserDefaults standardUserDefaults];
  uint64_t v5 = [v4 objectForKey:@"NIAccessorySubratingOverrides_DistanceThreshold"];

  BOOL v6 = +[NSUserDefaults standardUserDefaults];
  id v7 = [v6 objectForKey:@"NIAccessorySubratingOverrides_Hysteresis"];

  if (v3
    && v5
    && v7
    && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)
    && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)
    && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)
    && (id v8 = [v3 count], v8 == objc_msgSend(v5, "count"))
    && (id v9 = [v3 count], v9 == objc_msgSend(v7, "count")))
  {
    unsigned int v10 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v23) = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#accessory-service,Prep session objects: Overriding subrating parameters", (uint8_t *)&v23, 2u);
    }
    uint64_t v11 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      int v23 = 138412290;
      int v24 = v3;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "#accessory-service,Prep session objects: Overrides for subrate: %@", (uint8_t *)&v23, 0xCu);
    }
    id v12 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      int v23 = 138412290;
      int v24 = v5;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "#accessory-service,Prep session objects: Overrides for distance threshold: %@", (uint8_t *)&v23, 0xCu);
    }
    int v13 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      int v23 = 138412290;
      int v24 = v7;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "#accessory-service,Prep session objects: Overrides for hysteresis: %@", (uint8_t *)&v23, 0xCu);
    }
    for (uint64_t i = 0; i != 48; i += 24)
    {
      unsigned int v15 = (char *)a1 + i;
      *unsigned int v15 = 0;
      *((void *)v15 + 1) = 0;
      *((void *)v15 + 2) = 0;
    }
    unint64_t v16 = 0;
    char v17 = 1;
    do
    {
      char v18 = v17;
      if ((unint64_t)[v3 count] <= v16) {
        break;
      }
      __int16 v19 = [v3 objectAtIndex:v16];
      *((unsigned char *)a1 + 24 * v16) = [v19 intValue];

      int v20 = [v5 objectAtIndex:v16];
      *((double *)a1 + 3 * v16 + 1) = (double)(int)[v20 intValue];

      int v21 = [v7 objectAtIndex:v16];
      *((double *)a1 + 3 * v16 + 2) = (double)(int)[v21 intValue];

      char v17 = 0;
      unint64_t v16 = 1;
    }
    while ((v18 & 1) != 0);
  }
  else
  {
    unsigned int v22 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v23) = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "#accessory-service,Prep session objects: Using default subrating parameters", (uint8_t *)&v23, 2u);
    }
    *a1 = xmmword_1004BE578;
    a1[1] = unk_1004BE588;
    a1[2] = xmmword_1004BE598;
  }
}

void sub_1002B1858(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1002B18D4(uint64_t a1, unsigned int a2, unsigned int a3, __int16 a4)
{
  uint64_t v4 = 0;
  if (a2 && a3)
  {
    uint64_t v5 = 0;
    for (char i = 1; ; char i = 0)
    {
      char v7 = i;
      uint64_t v8 = a1 + 2 * v5;
      __int16 v11 = *(_WORD *)(v8 + 19);
      unsigned int v10 = (_WORD *)(v8 + 19);
      char v9 = v11;
      if ((v11 & 1) == 0) {
        break;
      }
      uint64_t v5 = 1;
      if ((v7 & 1) == 0) {
        return ((v9 & 1) == 0) & v10;
      }
    }
    if ((i & 1) != 0 || (unsigned int v12 = *(unsigned __int16 *)(a1 + 19), ((v12 >> 1) & 0xF) < a2) && ((v12 >> 5) & 0x7F) < a3)
    {
      *unsigned int v10 = (2 * (a2 & 0xF)) & 0x1F | (32 * (a3 & 0x7F)) | (a4 << 12) | 1;
      LOBYTE(v10) = 1;
    }
    else
    {
      LOBYTE(v10) = 0;
    }
    return ((v9 & 1) == 0) & v10;
  }
  return v4;
}

uint64_t sub_1002B195C(uint64_t a1)
{
  uint64_t v2 = +[NSUserDefaults standardUserDefaults];
  [v2 doubleForKey:@"AccessoryResponderUncertaintySecondsOverride"];
  double v4 = v3;
  if (v3 <= 0.0)
  {
    if ((unint64_t)(a1 - 1) >= 2) {
      uint64_t v6 = 2000000;
    }
    else {
      uint64_t v6 = 10000000;
    }
  }
  else
  {
    uint64_t v5 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = 134217984;
      double v9 = v4;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#accessory-service,Uncertainty window override: %.3f seconds", (uint8_t *)&v8, 0xCu);
    }
    uint64_t v6 = (v4 * 1000.0 * 1000.0);
  }

  return v6;
}

void sub_1002B1A70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

std::string::const_reference sub_1002B1A88@<X0>(unsigned __int16 *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, int a8@<W7>, uint64_t a9@<X8>, char a10, uint64_t a11, __int16 a12, __int16 a13, char a14, char a15, char a16, char a17)
{
  uint64_t v18 = *(unsigned __int8 *)(a2 + 23);
  if ((v18 & 0x80u) != 0) {
    uint64_t v18 = *(void *)(a2 + 8);
  }
  if (v18 != 2) {
    sub_10042A010();
  }
  uint64_t v20 = 0;
  int v21 = *a1;
  unsigned int v22 = a1[1];
  while (v21 != (unsigned __int16)word_1004BE568[v20] || v22 != (unsigned __int16)word_1004BE568[v20 + 1])
  {
    v20 += 2;
    if (v20 == 6) {
      sub_100429FE4();
    }
  }
  __int16 v32 = a6;
  double __y = 0.0;
  if (modf((double)(416 * a6) * 0.00000200320513, &__y) != 0.0) {
    sub_100429F60();
  }
  if (__y > 65535.0) {
    sub_100429F8C();
  }
  if (v21 != 1 || v22 >= 3) {
    sub_100429FB8();
  }
  __int16 v27 = a7;
  int v28 = a8 * a7 * (int)__y;
  *(_WORD *)a9 = 1;
  if (a10) {
    char v29 = 3;
  }
  else {
    char v29 = 2;
  }
  *(_WORD *)(a9 + 2) = v22;
  *(unsigned char *)(a9 + 4) = 0x1D1917u >> (8 * v22);
  *(unsigned char *)(a9 + 5) = *std::string::at((const std::string *)a2, 0);
  std::string::const_reference result = std::string::at((const std::string *)a2, 1uLL);
  *(unsigned char *)(a9 + 6) = *result;
  *(_DWORD *)(a9 + 7) = a5;
  *(unsigned char *)(a9 + 11) = a4;
  *(unsigned char *)(a9 + 12) = a3;
  *(_WORD *)(a9 + 13) = v27;
  *(_WORD *)(a9 + 15) = v32;
  *(_WORD *)(a9 + 17) = v28;
  *(unsigned char *)(a9 + 19) = v29;
  *(_WORD *)(a9 + 26) = a12;
  *(_WORD *)(a9 + 28) = a13;
  *(unsigned char *)(a9 + 30) = a14;
  *(unsigned char *)(a9 + 31) = a15;
  *(unsigned char *)(a9 + 32) = a16;
  *(unsigned char *)(a9 + 33) = a17;
  *(_DWORD *)(a9 + 20) = *(_DWORD *)a11;
  *(_WORD *)(a9 + 24) = *(_WORD *)(a11 + 4);
  return result;
}

uint64_t sub_1002B1C9C(uint64_t a1)
{
  uint64_t result = 9;
  switch((int)a1)
  {
    case 0:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
      char v5 = a1;
      double v3 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v3, OS_LOG_TYPE_FAULT))
      {
        sub_1003A7E38(v5);
        sub_10042A03C();
      }

      double v4 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)uint8_t buf = 136315650;
        char v7 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/Session/NIServerNearbyAcc"
             "essoryRangingService.mm";
        __int16 v8 = 1024;
        int v9 = 1705;
        __int16 v10 = 2080;
        __int16 v11 = "AppleToFiRaPreamble";
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "#accessory-service,%s:%d: assertion failure in %s", buf, 0x1Cu);
      }
      abort();
    case 10:
    case 11:
    case 12:
      uint64_t result = a1;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1002B1DD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_1002B1E74@<X0>(__int16 *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = 0;
  int v3 = (unsigned __int16)*a1;
  uint64_t v4 = a1[1];
  while (v3 != (unsigned __int16)word_1004BE568[v2] || (unsigned __int16)word_1004BE568[v2 + 1] != (unsigned __int16)v4)
  {
    v2 += 2;
    if (v2 == 6) {
      sub_10042A09C();
    }
  }
  if (v3 != 1 || v4 >= 3) {
    sub_100429FB8();
  }
  size_t v5 = qword_1004BE950[v4];
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;

  return sub_10003AD14(a2, a1, (uint64_t)a1 + v5, v5);
}

void sub_1002B2800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *a20,void *a21,void *a22,void *a23,void *a24,void *a25,void *a26,void *a27,void *a28,void *a29,void *a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,void *a44,uint64_t a45,char a46)
{
  _Block_object_dispose(&a46, 8);
  _Unwind_Resume(a1);
}

void sub_1002B29DC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [*(id *)(a1 + 32) objectForKeyedSubscript:v3];

  if (!v4)
  {
    size_t v5 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042A1CC((uint64_t)v3, v5, v6, v7, v8, v9, v10, v11);
    }
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
  }
}

void sub_1002B2A68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002B2DD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, std::__shared_weak_count *a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a17) {
    sub_10001A970(a17);
  }

  _Unwind_Resume(a1);
}

void sub_1002B31FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1002B3278(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  size_t v5 = [*(id *)(*(void *)(a1 + 32) + 24) objectForKeyedSubscript:a2];
  unsigned int v6 = [v5 isRunning];

  if (v6)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
    *a3 = 1;
  }
}

void sub_1002B32E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002B32F0(id a1, NIServerNearbyAccessoryRangingServiceClient *a2)
{
}

void sub_1002B34CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1002B3518(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  unsigned int v6 = [v5 interestedClients];
  id v7 = [v6 count];

  if (!v7) {
    [*(id *)(a1 + 32) addObject:v8];
  }
}

void sub_1002B359C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002B3A28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  _Unwind_Resume(a1);
}

void sub_1002B3AA0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v4 = (void *)*((void *)WeakRetained + 4);
    id v5 = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(a1 + 40)];
    unsigned int v6 = [v4 objectForKey:v5];

    if (v6 && *(void *)[v6 rangingSession])
    {
      int v7 = sub_1002DB434(*(void *)[v6 rangingSession], (long long *)[v6 startOptions]);
      if (v7)
      {
        id v8 = (id)qword_1008ABDE0;
        if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        {
          sub_1002DE064(v7, v12);
          sub_10042A354();
        }

        uint64_t v9 = *(unsigned int *)(a1 + 40);
        v10[0] = _NSConcreteStackBlock;
        v10[1] = 3221225472;
        _OWORD v10[2] = sub_1002B3C78;
        v10[3] = &unk_10085DA60;
        v10[4] = *(void *)(a1 + 44);
        int v11 = *(_DWORD *)(a1 + 52);
        [v3 _relayToClientsOfUWBSessionId:v9 blockToRelay:v10];
      }
    }
    else
    {
    }
  }
}

void sub_1002B3C38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1002B3C78(uint64_t a1, void *a2)
{
  return [a2 serviceRequestDidUpdateStatus:*(void *)(a1 + 32) status:*(unsigned int *)(a1 + 40)];
}

id sub_1002B3C88(uint64_t a1, void *a2)
{
  return [a2 serviceRequestDidUpdateStatus:*(void *)(a1 + 32) status:*(unsigned int *)(a1 + 40)];
}

void sub_1002B3DA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

BOOL sub_1002B3DCC(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 uwbSessionId] == *(_DWORD *)(a1 + 32);
}

void sub_1002B3E00(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 40);
  id v3 = [*(id *)(*(void *)(a1 + 32) + 16) objectForKey:a2];
  (*(void (**)(uint64_t))(v2 + 16))(v2);
}

void sub_1002B3E64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1002B3ED4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  sub_1001D0B70((void *)a1, *(const void **)a2, *(void *)(a2 + 8), (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 1);
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 850045863;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(void *)(a1 + 88) = 0;
  if (*(void *)(a1 + 8) == *(void *)a1) {
    __assert_rtn("AccessoryRangingIntervalPicker", "NIServerNearbyAccessoryRangingService.mm", 207, "fRangingIntervalOptionsMsec.size() > 0");
  }
  return a1;
}

void sub_1002B3F74(_Unwind_Exception *a1)
{
  std::mutex::~mutex(v2);
  uint64_t v4 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(a1);
}

__n128 sub_1002B3F98(uint64_t a1, uint64_t a2)
{
  if (*(unsigned __int8 *)(a1 + 39) == *(unsigned __int8 *)(a2 + 39))
  {
    if (*(unsigned char *)(a1 + 39))
    {
      __n128 result = *(__n128 *)a2;
      long long v3 = *(_OWORD *)(a2 + 16);
      *(void *)(a1 + 31) = *(void *)(a2 + 31);
      *(__n128 *)a1 = result;
      *(_OWORD *)(a1 + 16) = v3;
    }
  }
  else if (*(unsigned char *)(a1 + 39))
  {
    *(unsigned char *)(a1 + 39) = 0;
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v4 = *(void *)(a2 + 4);
    *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
    *(void *)(a1 + 4) = v4;
    *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
    __n128 result = *(__n128 *)(a2 + 20);
    *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
    *(__n128 *)(a1 + 20) = result;
    *(unsigned char *)(a1 + 39) = 1;
  }
  return result;
}

void sub_1002B4008(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10085DB00;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1002B4028(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10085DB00;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_1002B407C(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

uint64_t sub_1002B40A4(uint64_t a1)
{
  return a1;
}

void sub_1002B40D0(uint64_t a1)
{
  operator delete();
}

void *sub_1002B411C(uint64_t a1)
{
  uint64_t v2 = operator new(0x18uLL);
  *uint64_t v2 = off_10085DB50;
  v2[1] = *(id *)(a1 + 8);
  *((_DWORD *)v2 + 4) = *(_DWORD *)(a1 + 16);
  return v2;
}

id sub_1002B417C(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_10085DB50;
  id result = *(id *)(a1 + 8);
  *(void *)(a2 + 8) = result;
  *(_DWORD *)(a2 + 16) = *(_DWORD *)(a1 + 16);
  return result;
}

void sub_1002B41D0(uint64_t a1)
{
}

void sub_1002B41D8(id *a1)
{
  operator delete(a1);
}

void sub_1002B4214(uint64_t a1, void *a2, uint64_t *a3)
{
  long long v3 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  uint64_t v4 = *(void *)(a1 + 8);
  id v5 = *(NSObject **)(v4 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1002B430C;
  block[3] = &unk_10085DBB8;
  void block[4] = v4;
  int v7 = *(_DWORD *)(a1 + 16);
  uint64_t v8 = *a3;
  int v9 = *((_DWORD *)a3 + 2);
  dispatch_async(v5, block);
  if (v3) {
    sub_10001A970(v3);
  }
}

uint64_t sub_1002B42C0(uint64_t a1, uint64_t a2)
{
  if (sub_10003E730(a2, (uint64_t)&off_10085DBD8)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_1002B4300()
{
  return &off_10085DBD8;
}

id sub_1002B430C(uint64_t a1)
{
  return [_objc_msgSend(*(id *)(a1 + 32), "_serviceRequestForUWBSessionID:didUpdateStatus:", *(unsigned int *)(a1 + 40), *(void *)(a1 + 44), *(unsigned int *)(a1 + 52));
}

uint64_t sub_1002B4324(uint64_t a1)
{
  return a1;
}

void sub_1002B4350(uint64_t a1)
{
  operator delete();
}

void *sub_1002B439C(uint64_t a1)
{
  uint64_t v2 = operator new(0x18uLL);
  *uint64_t v2 = off_10085DBF8;
  v2[1] = *(id *)(a1 + 8);
  *((_DWORD *)v2 + 4) = *(_DWORD *)(a1 + 16);
  return v2;
}

id sub_1002B43FC(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_10085DBF8;
  id result = *(id *)(a1 + 8);
  *(void *)(a2 + 8) = result;
  *(_DWORD *)(a2 + 16) = *(_DWORD *)(a1 + 16);
  return result;
}

void sub_1002B4450(uint64_t a1)
{
}

void sub_1002B4458(id *a1)
{
  operator delete(a1);
}

void sub_1002B4494(uint64_t a1, void *a2, int *a3)
{
  long long v3 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  int v4 = *a3;
  uint64_t v5 = *(void *)(a1 + 8);
  unsigned int v6 = *(NSObject **)(v5 + 8);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1002B4580;
  v7[3] = &unk_100855ED8;
  v7[4] = v5;
  int v8 = *(_DWORD *)(a1 + 16);
  int v9 = v4;
  dispatch_async(v6, v7);
  if (v3) {
    sub_10001A970(v3);
  }
}

uint64_t sub_1002B4534(uint64_t a1, uint64_t a2)
{
  if (sub_10003E730(a2, (uint64_t)&off_10085DC78)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_1002B4574()
{
  return &off_10085DC78;
}

id sub_1002B4580(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1002B45F8;
  v4[3] = &unk_10085DC58;
  uint64_t v2 = *(unsigned int *)(a1 + 40);
  int v5 = *(_DWORD *)(a1 + 44);
  return [v1 _relayToClientsOfUWBSessionId:v2 blockToRelay:v4];
}

id sub_1002B45F8(uint64_t a1, void *a2)
{
  return _[a2 serviceDidInvalidateWithReason:*(unsigned int *)(a1 + 32)];
}

uint64_t sub_1002B4604(uint64_t a1)
{
  return a1;
}

void sub_1002B4630(uint64_t a1)
{
  operator delete();
}

void *sub_1002B467C(uint64_t a1)
{
  uint64_t v2 = operator new(0x18uLL);
  *uint64_t v2 = off_10085DC98;
  v2[1] = *(id *)(a1 + 8);
  *((_DWORD *)v2 + 4) = *(_DWORD *)(a1 + 16);
  return v2;
}

id sub_1002B46DC(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_10085DC98;
  id result = *(id *)(a1 + 8);
  *(void *)(a2 + 8) = result;
  *(_DWORD *)(a2 + 16) = *(_DWORD *)(a1 + 16);
  return result;
}

void sub_1002B4730(uint64_t a1)
{
}

void sub_1002B4738(id *a1)
{
  operator delete(a1);
}

void sub_1002B4774(uint64_t a1, void *a2, long long *a3)
{
  int v5 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  long long v6 = a3[1];
  long long v23 = *a3;
  long long v24 = v6;
  long long v25 = a3[2];
  sub_1001751A0(v26, (uint64_t)(a3 + 3));
  sub_10016E330(v27, (uint64_t)(a3 + 38));
  sub_1001751F8(v30, (__n128 *)((char *)a3 + 760));
  memcpy(v34, a3 + 55, sizeof(v34));
  uint64_t v7 = *(void *)(a1 + 8);
  int v8 = *(NSObject **)(v7 + 8);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3321888768;
  long long v12 = v25;
  long long v11 = v24;
  _DWORD v9[2] = sub_1002B4A80;
  v9[3] = &unk_10085DD30;
  v9[4] = v7;
  int v22 = *(_DWORD *)(a1 + 16);
  long long v10 = v23;
  sub_1001751A0(v13, (uint64_t)v26);
  sub_10016E330(v14, (uint64_t)v27);
  sub_1001751F8(v17, v30);
  memcpy(v21, v34, sizeof(v21));
  dispatch_async(v8, v9);
  if (v20 && __p)
  {
    __int16 v19 = __p;
    operator delete(__p);
  }
  if (v16) {
    sub_10003E96C((uint64_t)v15, v15[1]);
  }
  sub_10015DC28((uint64_t)v13);
  if (v33 && v31)
  {
    __int16 v32 = v31;
    operator delete(v31);
  }
  if (v29) {
    sub_10003E96C((uint64_t)v28, v28[1]);
  }
  sub_10015DC28((uint64_t)v26);
  if (v5) {
    sub_10001A970(v5);
  }
}

void sub_1002B4988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (LOBYTE(STACK[0x318])) {
    sub_100412860((uint64_t)&a9);
  }
  sub_10015DC28(v11);
  if (LOBYTE(STACK[0x948]))
  {
    int v13 = (void *)STACK[0x920];
    if (STACK[0x920])
    {
      STACK[0x928] = (unint64_t)v13;
      operator delete(v13);
    }
  }
  if (LOBYTE(STACK[0x8D0])) {
    sub_10003E96C((uint64_t)&STACK[0x850], (void *)STACK[0x858]);
  }
  sub_10015DC28(v10);
  if (v9) {
    sub_10001A970(v9);
  }
  _Unwind_Resume(a1);
}

void sub_1002B4A28()
{
  if (!v0) {
    JUMPOUT(0x1002B4A20);
  }
  JUMPOUT(0x1002B4A18);
}

uint64_t sub_1002B4A34(uint64_t a1, uint64_t a2)
{
  if (sub_10003E730(a2, (uint64_t)&off_10085DD60)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_1002B4A74()
{
  return &off_10085DD60;
}

uint64_t sub_1002B4A80(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(unsigned int *)(a1 + 1496);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3321888768;
  _OWORD v6[2] = sub_1002B4C1C;
  v6[3] = &unk_10085DCF8;
  long long v4 = *(_OWORD *)(a1 + 56);
  long long v7 = *(_OWORD *)(a1 + 40);
  long long v8 = v4;
  long long v9 = *(_OWORD *)(a1 + 72);
  sub_1001751A0(v10, a1 + 88);
  sub_10016E330(v11, a1 + 648);
  sub_1001751F8(v14, (__n128 *)(a1 + 800));
  memcpy(v18, (const void *)(a1 + 920), sizeof(v18));
  [v2 _relayToClientsOfUWBSessionId:v3 blockToRelay:v6];
  if (v17 && __p)
  {
    char v16 = __p;
    operator delete(__p);
  }
  if (v13) {
    sub_10003E96C((uint64_t)v12, v12[1]);
  }
  return sub_10015DC28((uint64_t)v10);
}

void sub_1002B4BD8(_Unwind_Exception *a1)
{
  sub_10016B718(v1);
  _Unwind_Resume(a1);
}

id sub_1002B4C1C(uint64_t a1, void *a2)
{
  return _[a2 serviceDidReceiveNewSolution:a1 + 32];
}

void *sub_1002B4C28(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 32);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 32) = v4;
  sub_1001751A0((unsigned char *)(a1 + 80), a2 + 80);
  sub_10016E330((unsigned char *)(a1 + 640), a2 + 640);
  sub_1001751F8((__n128 *)(a1 + 792), (__n128 *)(a2 + 792));

  return memcpy((void *)(a1 + 912), (const void *)(a2 + 912), 0x239uLL);
}

void sub_1002B4CA8(_Unwind_Exception *a1)
{
  if (*(unsigned char *)(v2 + 784)) {
    sub_10042A3CC(v2);
  }
  sub_10015DC28(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002B4CD4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 904))
  {
    uint64_t v2 = *(void **)(a1 + 864);
    if (v2)
    {
      *(void *)(a1 + 872) = v2;
      operator delete(v2);
    }
  }
  if (*(unsigned char *)(a1 + 784)) {
    sub_10003E96C(a1 + 656, *(void **)(a1 + 664));
  }

  return sub_10015DC28(a1 + 80);
}

void sub_1002B4D34()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C888, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C888))
  {
    sub_100004950(qword_10089C870, "PRRoseProviderNetworkListener");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C870, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C888);
  }
}

void sub_1002B4DCC(_Unwind_Exception *a1)
{
}

void sub_1002B4DE4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8A8))
  {
    sub_100004950(&qword_10089C890, "com.apple.nearbyd.accessory.download");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C890, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8A8);
  }
}

void sub_1002B4E7C(_Unwind_Exception *a1)
{
}

void sub_1002B4E94()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8C8))
  {
    sub_100004950(&qword_10089C8B0, "com.apple.nearbyd.accessory.files");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C8B0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8C8);
  }
}

void sub_1002B4F2C(_Unwind_Exception *a1)
{
}

void sub_1002B4F44()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8E8))
  {
    sub_100004950(qword_10089C8D0, "MA_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8D0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8E8);
  }
}

void sub_1002B4FDC(_Unwind_Exception *a1)
{
}

void sub_1002B4FF4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C908, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C908))
  {
    sub_100004950(qword_10089C8F0, "MB_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8F0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C908);
  }
}

void sub_1002B508C(_Unwind_Exception *a1)
{
}

void sub_1002B50A4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C928, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C928))
  {
    sub_100004950(qword_10089C910, "D");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C910, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C928);
  }
}

void sub_1002B513C(_Unwind_Exception *a1)
{
}

void sub_1002B5154()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C948, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C948))
  {
    sub_100004950(&qword_10089C930, "A");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C930, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C948);
  }
}

void sub_1002B51EC(_Unwind_Exception *a1)
{
}

void sub_1002B5204()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C968, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C968))
  {
    sub_100004950(qword_10089C950, "FAS.bin");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C950, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C968);
  }
}

void sub_1002B529C(_Unwind_Exception *a1)
{
}

void sub_1002B52B4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C988, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C988))
  {
    qword_10089C970 = 0;
    qword_10089C978 = 0;
    qword_10089C980 = 0;
    uint64_t v0 = operator new(0x30uLL);
    qword_10089C978 = (uint64_t)(v0 + 3);
    qword_10089C980 = (uint64_t)(v0 + 3);
    _OWORD *v0 = xmmword_1004BE538;
    v0[1] = unk_1004BE548;
    v0[2] = xmmword_1004BE558;
    qword_10089C970 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_100008CAC, &qword_10089C970, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C988);
  }
}

void sub_1002B5370(_Unwind_Exception *a1)
{
}

void sub_1002B5388()
{
  sub_10039D144();
  uint64_t v1 = std::string::insert(&v41, 0, "reverseLUT_A");
  long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v42.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  uint64_t v3 = std::string::append(&v42, ".bin");
  long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1008A7948 = v3->__r_.__value_.__r.__words[2];
  xmmword_1008A7938 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v42.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v41.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A7938, (void *)&_mh_execute_header);
  sub_10039D144();
  long long v5 = std::string::insert(&v41, 0, "reverseLUT_A");
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v42.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  long long v7 = std::string::append(&v42, ".bin");
  long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1008A7960 = v7->__r_.__value_.__r.__words[2];
  xmmword_1008A7950 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v42.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v41.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A7950, (void *)&_mh_execute_header);
  sub_10039D144();
  long long v9 = std::string::insert(&v41, 0, "reverseLUT_A");
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v42.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  uint64_t v11 = std::string::append(&v42, ".bin");
  long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1008A7978 = v11->__r_.__value_.__r.__words[2];
  xmmword_1008A7968 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v42.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v41.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A7968, (void *)&_mh_execute_header);
  sub_10039D144();
  char v13 = std::string::insert(&v41, 0, "reverseLUT_A");
  long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v42.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  unsigned int v15 = std::string::append(&v42, ".bin");
  long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1008A7990 = v15->__r_.__value_.__r.__words[2];
  xmmword_1008A7980 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v42.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v41.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A7980, (void *)&_mh_execute_header);
  sub_10039D144();
  char v17 = std::string::insert(&v41, 0, "reverseLUT_A");
  long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v42.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  __int16 v19 = std::string::append(&v42, ".bin");
  long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1008A79A8 = v19->__r_.__value_.__r.__words[2];
  xmmword_1008A7998 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v42.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v41.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A7998, (void *)&_mh_execute_header);
  sub_10039D144();
  int v21 = std::string::insert(&v41, 0, "reverseLUT_A");
  long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v42.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  long long v23 = std::string::append(&v42, ".bin");
  long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1008A79C0 = v23->__r_.__value_.__r.__words[2];
  xmmword_1008A79B0 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v42.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v41.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A79B0, (void *)&_mh_execute_header);
  sub_10039D144();
  long long v25 = std::string::insert(&v41, 0, "reverseLUT_A");
  long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v42.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  __int16 v27 = std::string::append(&v42, ".bin");
  long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1008A79D8 = v27->__r_.__value_.__r.__words[2];
  xmmword_1008A79C8 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v42.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v41.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A79C8, (void *)&_mh_execute_header);
  sub_10039D144();
  char v29 = std::string::insert(&v41, 0, "reverseLUT_A");
  long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v42.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  unsigned int v31 = std::string::append(&v42, ".bin");
  long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1008A79F0 = v31->__r_.__value_.__r.__words[2];
  xmmword_1008A79E0 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v42.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v41.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A79E0, (void *)&_mh_execute_header);
  sub_10039D144();
  char v33 = std::string::insert(&v41, 0, "reverseLUT_A");
  long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v42.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  id v35 = std::string::append(&v42, ".bin");
  long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1008A7A08 = v35->__r_.__value_.__r.__words[2];
  xmmword_1008A79F8 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v42.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v41.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A79F8, (void *)&_mh_execute_header);
  qword_1008A7A18 = 0;
  unk_1008A7A20 = 0;
  qword_1008A7A10 = 0;
  double v37 = operator new(6uLL);
  qword_1008A7A18 = (uint64_t)(v37 + 3);
  unk_1008A7A20 = v37 + 3;
  *(_DWORD *)double v37 = 12976308;
  v37[2] = 162;
  qword_1008A7A10 = (uint64_t)v37;
  __cxa_atexit((void (*)(void *))sub_1002ACF74, &qword_1008A7A10, (void *)&_mh_execute_header);
  qword_1008A7A30 = 0;
  unk_1008A7A38 = 0;
  qword_1008A7A28 = 0;
  double v38 = operator new(0xCuLL);
  qword_1008A7A30 = (uint64_t)(v38 + 3);
  unk_1008A7A38 = v38 + 3;
  *(void *)double v38 = 0x4C8045C04A40480;
  v38[2] = 82576440;
  qword_1008A7A28 = (uint64_t)v38;
  __cxa_atexit((void (*)(void *))sub_1002ACF74, &qword_1008A7A28, (void *)&_mh_execute_header);
  qword_1008A7A48 = 0;
  unk_1008A7A50 = 0;
  qword_1008A7A40 = 0;
  double v39 = operator new(0xCuLL);
  qword_1008A7A48 = (uint64_t)(v39 + 3);
  unk_1008A7A50 = v39 + 3;
  *(void *)double v39 = 0x1F801C201E601D4;
  v39[2] = 27132336;
  qword_1008A7A40 = (uint64_t)v39;
  __cxa_atexit((void (*)(void *))sub_1002ACF74, &qword_1008A7A40, (void *)&_mh_execute_header);
  qword_1008A7A60 = 0;
  unk_1008A7A68 = 0;
  qword_1008A7A58 = 0;
  double v40 = operator new(0xCuLL);
  qword_1008A7A60 = (uint64_t)(v40 + 3);
  unk_1008A7A68 = v40 + 3;
  *(void *)double v40 = 0x8DC087008B80894;
  v40[2] = 150997068;
  qword_1008A7A58 = (uint64_t)v40;
  __cxa_atexit((void (*)(void *))sub_1002ACF74, &qword_1008A7A58, (void *)&_mh_execute_header);
  qword_1008A7A78 = 0;
  unk_1008A7A80 = 0;
  qword_1008A7A70 = 0;
  sub_1001D0B70(&qword_1008A7A70, (const void *)qword_1008A7A10, qword_1008A7A18, (qword_1008A7A18 - qword_1008A7A10) >> 1);
  __cxa_atexit((void (*)(void *))sub_1002ACF74, &qword_1008A7A70, (void *)&_mh_execute_header);
  sub_1002B3ED4((uint64_t)&unk_1008A7A88, (uint64_t)&qword_1008A7A10);
  __cxa_atexit((void (*)(void *))sub_1002ACFA8, &unk_1008A7A88, (void *)&_mh_execute_header);
  sub_1002B3ED4((uint64_t)&unk_1008A7AE8, (uint64_t)&qword_1008A7A28);
  __cxa_atexit((void (*)(void *))sub_1002ACFA8, &unk_1008A7AE8, (void *)&_mh_execute_header);
  sub_1002B3ED4((uint64_t)&unk_1008A7B48, (uint64_t)&qword_1008A7A40);
  __cxa_atexit((void (*)(void *))sub_1002ACFA8, &unk_1008A7B48, (void *)&_mh_execute_header);
  sub_1002B3ED4((uint64_t)&unk_1008A7BA8, (uint64_t)&qword_1008A7A58);
  __cxa_atexit((void (*)(void *))sub_1002ACFA8, &unk_1008A7BA8, (void *)&_mh_execute_header);
  sub_1002B3ED4((uint64_t)qword_1008A7C08, (uint64_t)&qword_1008A7A70);
  __cxa_atexit((void (*)(void *))sub_1002ACFA8, qword_1008A7C08, (void *)&_mh_execute_header);
}

void sub_1002B5C18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002B5C8C(uint64_t a1)
{
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_10042A3D8();
  }
  sub_1002B5CF0(a1);
  return a1;
}

void sub_1002B5CF0(uint64_t a1)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_10042A4A8();
  }
  LOBYTE(v4) = 0;
  *((void *)&v4 + 1) = 0;
  double v5 = 0.0;
  uint64_t v3 = 0;
  if (sub_10039CC5C(&v3, (char *)&v4 + 8, &v5))
  {
    LOBYTE(v4) = 1;
    if (*(unsigned char *)a1 && vabdd_f64(*(double *)(a1 + 8) - *(double *)(a1 + 16), *((double *)&v4 + 1) - v5) <= 0.000001)
    {
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
        sub_10042A474();
      }
      *(_OWORD *)(a1 + 24) = v4;
      *(double *)(a1 + 40) = v5;
    }
    else
    {
      long long v2 = (_OWORD *)(a1 + 24);
      if (*(unsigned char *)(a1 + 24)
        && vabdd_f64(*(double *)(a1 + 32) - *(double *)(a1 + 40), *((double *)&v4 + 1) - v5) <= 0.000001)
      {
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
          sub_10042A440();
        }
        *(_OWORD *)a1 = *v2;
        *(void *)(a1 + 16) = *(void *)(a1 + 40);
        *long long v2 = v4;
        *(double *)(a1 + 40) = v5;
      }
      else
      {
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
          sub_10042A40C();
        }
        *(_OWORD *)a1 = v4;
        *(double *)(a1 + 16) = v5;
        *(unsigned char *)(a1 + 24) = 0;
      }
    }
    sub_1002B6398((unsigned __int8 *)a1);
  }
}

uint64_t sub_1002B5E84(uint64_t a1, double a2)
{
  long long v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_10042A548(v4, v5, v6, v7, v8, v9, v10, v11);
  }
  sub_1002B5CF0(a1);
  if (*(unsigned char *)a1 && *(unsigned char *)(a1 + 24))
  {
    double v12 = *(double *)(a1 + 8);
    if (v12 <= a2 && (double v13 = *(double *)(a1 + 32), v13 >= a2))
    {
      long long v22 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG))
      {
        int v23 = 134218496;
        double v24 = v12;
        __int16 v25 = 2048;
        double v26 = a2;
        __int16 v27 = 2048;
        double v28 = v13;
        _os_log_debug_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEBUG, "getMachContinuousTimeSec: Order OK: startAbs %.9f targetAbs %.9f endAbs %.9f", (uint8_t *)&v23, 0x20u);
        double v13 = *(double *)(a1 + 32);
        long long v22 = qword_1008ABDE0;
      }
      double v15 = *(double *)(a1 + 40) - v13 + a2;
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG)) {
        sub_10042A4DC();
      }
    }
    else
    {
      uint64_t v14 = qword_1008ABDE0;
      double v15 = 0.0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        double v16 = *(double *)(a1 + 32);
        int v23 = 134218496;
        double v24 = v12;
        __int16 v25 = 2048;
        double v26 = a2;
        __int16 v27 = 2048;
        double v28 = v16;
        char v17 = "getMachContinuousTimeSec: Order not OK: startAbs %.9f targetAbs %.9f endAbs %.9f";
        long long v18 = v14;
        uint32_t v19 = 32;
LABEL_11:
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, v17, (uint8_t *)&v23, v19);
      }
    }
  }
  else
  {
    uint64_t v20 = qword_1008ABDE0;
    double v15 = 0.0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v23) = 0;
      char v17 = "getMachContinuousTimeSec: start/end times not valid";
      long long v18 = v20;
      uint32_t v19 = 2;
      goto LABEL_11;
    }
  }
  return *(void *)&v15;
}

uint64_t sub_1002B609C(uint64_t a1, double a2)
{
  long long v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_10042A624(v4, v5, v6, v7, v8, v9, v10, v11);
  }
  sub_1002B5CF0(a1);
  if (*(unsigned char *)a1 && *(unsigned char *)(a1 + 24))
  {
    double v12 = *(double *)(a1 + 16);
    if (v12 <= a2 && (double v13 = *(double *)(a1 + 40), v13 >= a2))
    {
      long long v22 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG))
      {
        int v23 = 134218496;
        double v24 = v12;
        __int16 v25 = 2048;
        double v26 = a2;
        __int16 v27 = 2048;
        double v28 = v13;
        _os_log_debug_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEBUG, "getMachAbsoluteTimeSec: Order OK: startCont %.9f targetCont %.9f endCont %.9f", (uint8_t *)&v23, 0x20u);
        double v13 = *(double *)(a1 + 40);
        long long v22 = qword_1008ABDE0;
      }
      double v15 = a2 - (v13 - *(double *)(a1 + 32));
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG)) {
        sub_10042A5B8();
      }
    }
    else
    {
      uint64_t v14 = qword_1008ABDE0;
      double v15 = 0.0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        double v16 = *(double *)(a1 + 40);
        int v23 = 134218496;
        double v24 = v12;
        __int16 v25 = 2048;
        double v26 = a2;
        __int16 v27 = 2048;
        double v28 = v16;
        char v17 = "getMachAbsoluteTimeSec: Order not OK: startCont %.9f targetCont %.9f endCont %.9f";
        long long v18 = v14;
        uint32_t v19 = 32;
LABEL_11:
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, v17, (uint8_t *)&v23, v19);
      }
    }
  }
  else
  {
    uint64_t v20 = qword_1008ABDE0;
    double v15 = 0.0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v23) = 0;
      char v17 = "getMachAbsoluteTimeSec: start/end times not valid";
      long long v18 = v20;
      uint32_t v19 = 2;
      goto LABEL_11;
    }
  }
  return *(void *)&v15;
}

uint64_t sub_1002B62B4(double a1)
{
  long long v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_10042A740(v2, v3, v4, v5, v6, v7, v8, v9);
  }
  uint64_t v13 = 0;
  double v14 = 0.0;
  double v12 = 0.0;
  if (sub_10039CC5C(&v14, &v13, &v12))
  {
    double v10 = v14 - (v12 - a1);
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
      sub_10042A694();
    }
  }
  else
  {
    double v10 = 0.0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042A700();
    }
  }
  return *(void *)&v10;
}

void sub_1002B6398(unsigned __int8 *a1)
{
  int v2 = *a1;
  uint64_t v3 = qword_1008ABDE0;
  BOOL v4 = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG);
  if (v2)
  {
    if (v4)
    {
      uint64_t v20 = *((void *)a1 + 1);
      int v22 = 134217984;
      uint64_t v23 = v20;
      _os_log_debug_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "PRMachTimeConverter: startAbs: %.9f", (uint8_t *)&v22, 0xCu);
      uint64_t v3 = qword_1008ABDE0;
    }
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG)) {
      sub_10042A888((uint64_t)a1, v3, v5, v6, v7, v8, v9, v10);
    }
  }
  else if (v4)
  {
    sub_10042A854();
  }
  int v11 = a1[24];
  double v12 = qword_1008ABDE0;
  BOOL v13 = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG);
  if (v11)
  {
    if (v13)
    {
      uint64_t v21 = *((void *)a1 + 4);
      int v22 = 134217984;
      uint64_t v23 = v21;
      _os_log_debug_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "PRMachTimeConverter: endAbs: %.9f", (uint8_t *)&v22, 0xCu);
      double v12 = qword_1008ABDE0;
    }
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG)) {
      sub_10042A7E4((uint64_t)a1, v12, v14, v15, v16, v17, v18, v19);
    }
  }
  else if (v13)
  {
    sub_10042A7B0();
  }
}

void sub_1002B652C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

void *sub_1002B6548@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085DF68[a1]);
}

void *sub_1002B655C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085DFC0[a1]);
}

void *sub_1002B6570@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085E008[a1]);
}

void *sub_1002B6584@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085E028[a1]);
}

void sub_1002B6714(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002B6C3C(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1002B6DA8(_Unwind_Exception *a1)
{
  BOOL v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1002B6EFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002B70C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  double v12 = v11;

  _Unwind_Resume(a1);
}

id sub_1002B70F0(const char *a1)
{
  uint64_t v1 = NSStringFromSelector(a1);
  int v2 = +[NSString stringWithFormat:@"'%@': method not supported for this configuration", v1];

  NSErrorUserInfoKey v6 = NSLocalizedDescriptionKey;
  uint64_t v7 = v2;
  uint64_t v3 = +[NSDictionary dictionaryWithObjects:&v7 forKeys:&v6 count:1];
  BOOL v4 = +[NSError errorWithDomain:@"com.apple.NearbyInteraction" code:-5889 userInfo:v3];

  return v4;
}

void sub_1002B71F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002B72A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  double v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1002B7348(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  double v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1002B73F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  double v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1002B7498(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  double v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1002B7540(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  double v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1002B7740(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002B785C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002B7964(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002B7A84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002B7B78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002B7C9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1002B7DA4(void *a1)
{
  id v1 = a1;
  int v2 = v1;
  if (v1)
  {
    uint64_t v3 = [v1 rawToken];
    BOOL v4 = sub_1002B7E30();
  }
  else
  {
    BOOL v4 = 0;
  }

  return v4;
}

void sub_1002B7E14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1002B7E30()
{
  uint64_t v0 = (void *)OPACKDecodeData();
  if (v0 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    id v1 = v0;
  }
  else
  {
    int v2 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042A9D8(v2);
    }
    id v1 = 0;
  }

  return v1;
}

void sub_1002B7ED8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1002B7EE8(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    Data = (void *)OPACKEncoderCreateData();
    uint64_t v3 = Data;
    if (Data)
    {
      id v4 = Data;
    }
    else
    {
      uint64_t v5 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
        sub_10042AA1C(v5);
      }
    }
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

void sub_1002B7F90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1002B7FA0(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = v4;
  if (v4)
  {
    if (v3)
    {
      NSErrorUserInfoKey v6 = sub_1002B7E30();
      id v7 = [v6 mutableCopy];
      [v7 addEntriesFromDictionary:v3];
      sub_1002B7EE8(v7);
      id v8 = (id)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      id v8 = v4;
    }
  }
  else
  {
    id v8 = 0;
  }

  return v8;
}

void sub_1002B8050(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

CFStringRef sub_1002B807C(uint64_t a1)
{
  CFStringRef v1 = @"NISessionPauseSourceInvalid";
  if (a1 == 1) {
    CFStringRef v1 = @"NISessionPauseSourceUser";
  }
  if (a1 == 2) {
    return @"NISessionPauseSourceInterruption";
  }
  else {
    return v1;
  }
}

void *sub_1002B80A8@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, (&off_10085E148)[a1]);
}

void *sub_1002B80BC@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, (&off_10085E1A0)[a1]);
}

void *sub_1002B80D0@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, (&off_10085E1E8)[a1]);
}

void *sub_1002B80E4@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, (&off_10085E208)[a1]);
}

uint64_t sub_1002B80F8(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  *(void *)a1 = off_10085E058;
  *(void *)(a1 + 8) = off_10085E0B8;
  *(void *)(a1 + 16) = dispatch_queue_create("com.apple.nearbyd.coexmanager", 0);
  id v6 = v5;
  *(void *)(a1 + 24) = v6;
  mach_service = xpc_connection_create_mach_service("com.apple.WirelessCoexManager", *(dispatch_queue_t *)(a1 + 16), 0);
  *(void *)(a1 + 32) = mach_service;
  *(_WORD *)(a1 + 40) = 10;
  *(unsigned char *)(a1 + 50) = 0;
  *(_WORD *)(a1 + 52) = 0;
  *(unsigned char *)(a1 + 54) = 0;
  *(unsigned char *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 42) = 0;
  *(_DWORD *)(a1 + 45) = 0;
  *(void *)(a1 + 64) = a3;
  *(unsigned char *)(a1 + 72) = 0;
  *(void *)(a1 + 82) = 0;
  *(void *)(a1 + 74) = 0;
  *(_WORD *)(a1 + 90) = 0;
  handler[0] = _NSConcreteStackBlock;
  handler[1] = 3221225472;
  handler[2] = sub_1002B8290;
  handler[3] = &unk_10085AA08;
  handler[4] = a1;
  xpc_connection_set_event_handler(mach_service, handler);
  xpc_connection_resume(*(xpc_connection_t *)(a1 + 32));
  sub_1002B84B0(a1);
  v9[0] = 0;
  memset(&v9[2], 0, 14);
  sub_1002B85CC(a1, v9);

  return a1;
}

void sub_1002B825C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002B8290(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  if (v3 == &_xpc_error_connection_invalid && os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
    sub_10042AA60();
  }
  sub_1002B831C(v4, v3);
}

void sub_1002B830C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002B831C(uint64_t a1, void *a2)
{
  id v3 = a2;
  xpc_type_t type = xpc_get_type(v3);
  if (type == (xpc_type_t)&_xpc_type_dictionary)
  {
    sub_1002B88F8(a1, v3);
  }
  else if (type == (xpc_type_t)&_xpc_type_error)
  {
    if (v3 == &_xpc_error_connection_interrupted)
    {
      sub_1002B84B0(a1);
      sub_1002B85CC(a1, (BOOL *)(a1 + 72));
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
        sub_10042AA94();
      }
    }
    else
    {
      id v7 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      {
        string = xpc_dictionary_get_string(v3, _xpc_error_key_description);
        sub_10042AAC8((uint64_t)string, v9, v7);
      }
    }
  }
  else
  {
    id v5 = xpc_copy_description(v3);
    id v6 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042AB10((uint64_t)v5, v6);
    }
    free(v5);
  }
}

void sub_1002B8488(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002B84B0(uint64_t a1)
{
  xpc_object_t v2 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_uint64(v2, "kWCMRegisterProcess_ProcessId", 0x1DuLL);
  keys[0] = "kMessageId";
  keys[1] = "kMessageArgs";
  values[0] = xpc_uint64_create(1uLL);
  id v3 = v2;
  values[1] = v3;
  sub_1002B97C8(a1, (const char *const *)keys, values, 2);
  for (uint64_t i = 1; i != -1; --i)
}

void sub_1002B8590(_Unwind_Exception *a1)
{
  for (uint64_t i = 8; i != -8; i -= 8)

  _Unwind_Resume(a1);
}

void sub_1002B85CC(uint64_t a1, BOOL *a2)
{
  *(_OWORD *)(a1 + 72) = *(_OWORD *)a2;
  xpc_object_t v4 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_BOOL(v4, "kWCMRCU1PowerOn", *a2);
  xpc_dictionary_set_uint64(v4, "kWCMRCU1ChannelNum", *((unsigned __int16 *)a2 + 1));
  xpc_dictionary_set_uint64(v4, "kWCMRCU1OnDuration", *((unsigned __int16 *)a2 + 2));
  xpc_dictionary_set_uint64(v4, "kWCMRCU1CycleLength", *((unsigned __int16 *)a2 + 3));
  xpc_dictionary_set_uint64(v4, "kWCMRCU1NumerOfCycles", *((unsigned __int16 *)a2 + 4));
  xpc_dictionary_set_uint64(v4, "kWCMRCU1FrameFormat", *((unsigned __int16 *)a2 + 5));
  xpc_dictionary_set_uint64(v4, "kWCMRCU1UseCaseNum", *((unsigned __int16 *)a2 + 6));
  xpc_dictionary_set_uint64(v4, "kWCMRCU1SideChBandMask", *((unsigned __int16 *)a2 + 7));
  keys[0] = "kMessageId";
  keys[1] = "kMessageArgs";
  values[0] = xpc_uint64_create(0x320uLL);
  id v5 = v4;
  values[1] = v5;
  sub_1002B97C8(a1, (const char *const *)keys, values, 2);
  id v6 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    BOOL v7 = *a2;
    int v8 = *((unsigned __int16 *)a2 + 1);
    int v9 = *((unsigned __int16 *)a2 + 2);
    int v10 = *((unsigned __int16 *)a2 + 3);
    int v11 = *((unsigned __int16 *)a2 + 4);
    int v12 = *((unsigned __int16 *)a2 + 5);
    int v13 = *((unsigned __int16 *)a2 + 6);
    int v14 = *((unsigned __int16 *)a2 + 7);
    v16[0] = 67110912;
    v16[1] = v7;
    __int16 v17 = 1024;
    int v18 = v8;
    __int16 v19 = 1024;
    int v20 = v9;
    __int16 v21 = 1024;
    int v22 = v10;
    __int16 v23 = 1024;
    int v24 = v11;
    __int16 v25 = 1024;
    int v26 = v12;
    __int16 v27 = 1024;
    int v28 = v13;
    __int16 v29 = 1024;
    int v30 = v14;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#coex,sendStatusUpdateMessage-Send message to UCM: State(%x), Channel(%x), OnDuration(%x), CycleLength(%x), NumberOfCycles(%x), Frame(%x), Priority(%x), R2NbBandMask(%x)", (uint8_t *)v16, 0x32u);
  }
  for (uint64_t i = 1; i != -1; --i)
}

void sub_1002B87FC(_Unwind_Exception *a1)
{
  for (uint64_t i = 8; i != -8; i -= 8)

  _Unwind_Resume(a1);
}

id *sub_1002B883C(id *a1)
{
  return a1;
}

id *sub_1002B887C(uint64_t a1)
{
  return sub_1002B883C((id *)(a1 - 8));
}

void sub_1002B8884(id *a1)
{
  sub_1002B883C(a1);

  operator delete();
}

void sub_1002B88BC(uint64_t a1)
{
  sub_1002B883C((id *)(a1 - 8));

  operator delete();
}

void sub_1002B88F8(uint64_t a1, void *a2)
{
  id v3 = a2;
  xpc_object_t v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint8_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#coex,processIncomingMessage-Received message from UCM", buf, 2u);
  }
  char v51 = 0;
  sub_1002B8DB0(v3, &v51, (uint64_t)buf);
  if (buf[26])
  {
    if (buf[18])
    {
      if (*(unsigned __int16 *)&buf[16] != *(unsigned __int16 *)(a1 + 40))
      {
        *(_WORD *)(a1 + 40) = *(_WORD *)&buf[16];
        if (*(void *)(a1 + 64))
        {
          id v5 = *(NSObject **)(a1 + 24);
          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472;
          block[2] = sub_1002B94C0;
          block[3] = &unk_1008466D8;
          void block[4] = a1;
          dispatch_async(v5, block);
        }
      }
    }
    id v6 = (_WORD *)(a1 + 54);
    int v7 = *(unsigned __int16 *)(a1 + 54);
    int v8 = *(unsigned __int8 *)(a1 + 42);
    int v9 = *(unsigned __int8 *)(a1 + 43);
    unsigned int v10 = *(unsigned __int8 *)(a1 + 45);
    if (buf[1])
    {
      unsigned int v11 = *(unsigned __int16 *)buf;
      *(_WORD *)(a1 + 42) = *(_WORD *)buf;
      unsigned int v12 = v11 >> 8;
      int v13 = v11;
    }
    else
    {
      int v13 = *(unsigned __int8 *)(a1 + 42);
      unsigned int v12 = *(unsigned __int8 *)(a1 + 43);
    }
    int v14 = *(unsigned __int8 *)(a1 + 44);
    unsigned int v15 = *(unsigned __int8 *)(a1 + 47);
    if (buf[3])
    {
      unsigned int v16 = *(unsigned __int16 *)&buf[2];
      *(_WORD *)(a1 + 44) = *(_WORD *)&buf[2];
      unsigned int v17 = v16 >> 8;
      int v18 = v16;
    }
    else
    {
      int v18 = *(unsigned __int8 *)(a1 + 44);
      unsigned int v17 = v10;
    }
    int v19 = *(unsigned __int8 *)(a1 + 46);
    if (buf[5])
    {
      unsigned int v20 = *(unsigned __int16 *)&buf[4];
      *(_WORD *)(a1 + 46) = *(_WORD *)&buf[4];
      unsigned int v21 = v20 >> 8;
      int v22 = v20;
    }
    else
    {
      int v22 = *(unsigned __int8 *)(a1 + 46);
      unsigned int v21 = v15;
    }
    int v23 = *(unsigned __int8 *)(a1 + 50);
    unsigned int v24 = *(unsigned __int8 *)(a1 + 53);
    __int16 v25 = (_WORD *)(a1 + 48);
    int v26 = *(unsigned __int16 *)(a1 + 48);
    if (buf[8])
    {
      _WORD *v25 = *(_WORD *)&buf[6];
      *(unsigned char *)(a1 + 50) = buf[8];
    }
    int v27 = *(unsigned __int8 *)(a1 + 52);
    if (buf[11])
    {
      unsigned int v28 = *(unsigned __int16 *)&buf[10];
      *(_WORD *)(a1 + 52) = *(_WORD *)&buf[10];
      unsigned int v29 = v28 >> 8;
      int v30 = v28;
    }
    else
    {
      int v30 = *(unsigned __int8 *)(a1 + 52);
      unsigned int v29 = v24;
    }
    int v31 = *(unsigned __int8 *)(a1 + 56);
    if (buf[14])
    {
      _WORD *v6 = *(_WORD *)&buf[12];
      *(unsigned char *)(a1 + 56) = buf[14];
    }
    if (v9 && v12)
    {
      if (v13 != v8) {
        goto LABEL_54;
      }
    }
    else if ((v9 != 0) != (v12 != 0))
    {
      goto LABEL_54;
    }
    if (v10 && v17)
    {
      if (v18 != v14) {
        goto LABEL_54;
      }
    }
    else if ((v10 != 0) != (v17 != 0))
    {
      goto LABEL_54;
    }
    if (v15 && v21)
    {
      if (v22 != v19) {
        goto LABEL_54;
      }
    }
    else if ((v15 != 0) != (v21 != 0))
    {
      goto LABEL_54;
    }
    if (v23 && *(unsigned char *)(a1 + 50))
    {
      if ((unsigned __int16)*v25 != v26) {
        goto LABEL_54;
      }
    }
    else if ((v23 != 0) != (*(unsigned char *)(a1 + 50) != 0))
    {
      goto LABEL_54;
    }
    if (v24 && v29)
    {
      if (v30 != v27) {
        goto LABEL_54;
      }
    }
    else if ((v24 != 0) != (v29 != 0))
    {
      goto LABEL_54;
    }
    if (v31 && *(unsigned char *)(a1 + 56))
    {
      int v32 = (unsigned __int16)*v6;
    }
    else
    {
      int v32 = v31 != 0;
      int v7 = *(unsigned __int8 *)(a1 + 56) != 0;
    }
    if (v32 == v7)
    {
LABEL_55:
      if (v51 && *((_DWORD *)sub_100007D00() + 186) == 1)
      {
        int v35 = *(unsigned __int16 *)&buf[20];
        if (*(unsigned __int16 *)&buf[20] >= 3u)
        {
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
            sub_10042AB88();
          }
        }
        else
        {
          if (*(_DWORD *)(a1 + 88) != *(unsigned __int16 *)&buf[20] && *(void *)(a1 + 64))
          {
            long long v36 = *(NSObject **)(a1 + 24);
            v41[0] = _NSConcreteStackBlock;
            v41[1] = 3221225472;
            void v41[2] = sub_1002B9528;
            v41[3] = &unk_100853B08;
            v41[4] = a1;
            int v42 = *(unsigned __int16 *)&buf[20];
            dispatch_async(v36, v41);
            *(_DWORD *)(a1 + 88) = v35;
          }
          if (v35 == 2 && *(void *)(a1 + 64))
          {
            double v37 = *(NSObject **)(a1 + 24);
            v38[0] = _NSConcreteStackBlock;
            v38[1] = 3221225472;
            v38[2] = sub_1002B9620;
            v38[3] = &unk_10085E0D8;
            v38[4] = a1;
            int v39 = 2;
            *(_OWORD *)double v40 = *(_OWORD *)buf;
            *(_OWORD *)&v40[12] = *(_OWORD *)&buf[12];
            dispatch_async(v37, v38);
          }
        }
      }
      goto LABEL_66;
    }
LABEL_54:
    double rep = (double)std::chrono::steady_clock::now().__d_.__rep_;
    uint64_t v34 = *(void *)(a1 + 64);
    *(double *)&long long v43 = rep;
    DWORD2(v43) = 4;
    BYTE12(v43) = 0;
    BYTE14(v43) = 0;
    int v44 = 0;
    char v45 = 0;
    char v46 = 0;
    char v47 = 0;
    char v48 = 0;
    sub_100166EE4(v34, &v43);
    goto LABEL_55;
  }
LABEL_66:
}

void sub_1002B8D9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002B8DB0(void *a1@<X1>, unsigned char *a2@<X2>, uint64_t a3@<X8>)
{
  id v5 = a1;
  *a2 = 0;
  if (xpc_dictionary_get_uint64(v5, "kMessageId") == 1500)
  {
    id v6 = xpc_dictionary_get_value(v5, "kMessageArgs");
    int v7 = v6;
    if (v6 && xpc_get_type(v6) == (xpc_type_t)&_xpc_type_dictionary)
    {
      unsigned int v59 = *((_DWORD *)sub_100007D00() + 144);
      __int16 v9 = sub_1002B9744(v7, "kWCMHToRCU1BTPowerStatus");
      __int16 v10 = sub_1002B9744(v7, "kWCMHToRCU1CellularStatus");
      __int16 v11 = sub_1002B9744(v7, "kWCMHToRCU1wiFiPowerStatus");
      unsigned int v12 = xpc_dictionary_get_value(v7, "kWCMHToRCU1BTBandStatus");
      int v13 = v12;
      if (v12 && xpc_get_type(v12) == (xpc_type_t)&_xpc_type_uint64)
      {
        uint64_t value = xpc_uint64_get_value(v13);
        BOOL v58 = value < 0x3E8;
        if (value >= 0x3E8) {
          unsigned __int16 v15 = 0;
        }
        else {
          unsigned __int16 v15 = value;
        }
        unsigned __int16 v56 = v15;
      }
      else
      {
        unsigned __int16 v56 = 0;
        BOOL v58 = 0;
      }

      __int16 v57 = sub_1002B9744(v7, "kWCMHToRCU1Cellularband");
      unsigned int v16 = xpc_dictionary_get_value(v7, "kWCMHToRCU15GStatus");
      unsigned int v17 = v16;
      if (v16 && xpc_get_type(v16) == (xpc_type_t)&_xpc_type_uint64 && (uint64_t v18 = xpc_uint64_get_value(v17), v18 <= 3))
      {
        char v50 = 1;
        char v51 = 0;
        unsigned __int8 v55 = v18;
      }
      else
      {
        unsigned __int8 v55 = 0;
        char v50 = 0;
        char v51 = 1;
      }

      int v19 = xpc_dictionary_get_value(v7, "kWCMHToRCU1DutyCycle");
      unsigned int v21 = v19;
      if (v19 && xpc_get_type(v19) == (xpc_type_t)&_xpc_type_uint64)
      {
        char v22 = 0;
        char v49 = 1;
        uint64_t v53 = xpc_uint64_get_value(v21);
        uint64_t v54 = v53 >> 8;
      }
      else
      {
        char v49 = 0;
        char v22 = 1;
        LOBYTE(v53) = 0;
        LOWORD(v54) = v20;
      }

      char v48 = v22;
      if (sub_10039CF54(v59))
      {
        int v23 = xpc_dictionary_get_value(v7, "kWCMHToRCU1ChannelsToTriggerGPIOBlanking");

        if (v23) {
          *a2 = 1;
        }
        unsigned __int16 uint64 = xpc_dictionary_get_uint64(v7, "kWCMHToRCU1ChannelsToTriggerGPIOBlanking");
        unsigned __int16 v25 = xpc_dictionary_get_uint64(v7, "kWCMHToRCU1SideChannelsToTriggerGPIOBlanking_ChBegin");
        unsigned __int16 v52 = xpc_dictionary_get_uint64(v7, "kWCMHToRCU1SideChannelsToTriggerGPIOBlanking_ChEnd");
      }
      else
      {
        unsigned __int16 v52 = 0;
        unsigned __int16 v25 = 0;
        unsigned __int16 uint64 = 0;
      }
      int v26 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        unsigned __int16 v44 = v25;
        unsigned __int16 v45 = uint64;
        __int16 v47 = v11;
        if ((_BYTE)v9) {
          int v27 = "Y";
        }
        else {
          int v27 = "N";
        }
        if ((v9 & 0xFF00) == 0) {
          int v27 = "-";
        }
        long long v43 = v27;
        __int16 v46 = v9;
        if (v58)
        {
          std::to_string(&v62, v56);
          if ((v62.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            unsigned int v28 = &v62;
          }
          else {
            unsigned int v28 = (std::string *)v62.__r_.__value_.__r.__words[0];
          }
        }
        else
        {
          unsigned int v28 = (std::string *)"-";
        }
        if ((_BYTE)v10) {
          unsigned int v29 = "Y";
        }
        else {
          unsigned int v29 = "N";
        }
        if ((v10 & 0xFF00) != 0) {
          int v30 = v29;
        }
        else {
          int v30 = "-";
        }
        if ((_BYTE)v57) {
          int v31 = "Y";
        }
        else {
          int v31 = "N";
        }
        if ((v57 & 0xFF00) != 0) {
          int v32 = v31;
        }
        else {
          int v32 = "-";
        }
        if ((_BYTE)v11) {
          char v33 = "Y";
        }
        else {
          char v33 = "N";
        }
        if ((v11 & 0xFF00) != 0) {
          uint64_t v34 = v33;
        }
        else {
          uint64_t v34 = "-";
        }
        int v35 = (std::string *)"-";
        if ((v51 & 1) == 0)
        {
          long long v36 = v30;
          double v37 = v34;
          double v38 = v32;
          int v39 = v28;
          int v35 = &v61;
          std::to_string(&v61, v55);
          if ((v61.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            int v35 = (std::string *)v61.__r_.__value_.__r.__words[0];
          }
          unsigned int v28 = v39;
          int v32 = v38;
          uint64_t v34 = v37;
          int v30 = v36;
        }
        if (v48)
        {
          *(_DWORD *)uint8_t buf = 136316674;
          *(void *)id v64 = v43;
          *(_WORD *)&v64[8] = 2080;
          uint64_t v65 = v28;
          __int16 v66 = 2080;
          int v67 = v30;
          __int16 v68 = 2080;
          int v69 = v32;
          __int16 v70 = 2080;
          uint64_t v71 = v34;
          __int16 v72 = 2080;
          uint64_t v73 = v35;
          __int16 v74 = 2080;
          uint64_t v75 = "-";
          _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "#coex,parseIncomingEvent-Received msg from UCM: BT [Power: %s, Band: %s], Cellular [Power: %s, Band: %s], WiFi [Power: %s, Channel: %s], R1DutyCycleNeeded: %s", buf, 0x48u);
        }
        else
        {
          double v40 = v28;
          std::to_string(&v60, v53 | ((unint64_t)v54 << 8));
          if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string v41 = &v60;
          }
          else {
            std::string v41 = (std::string *)v60.__r_.__value_.__r.__words[0];
          }
          *(_DWORD *)uint8_t buf = 136316674;
          *(void *)id v64 = v43;
          *(_WORD *)&v64[8] = 2080;
          uint64_t v65 = v40;
          __int16 v66 = 2080;
          int v67 = v30;
          __int16 v68 = 2080;
          int v69 = v32;
          __int16 v70 = 2080;
          uint64_t v71 = v34;
          __int16 v72 = 2080;
          uint64_t v73 = v35;
          __int16 v74 = 2080;
          uint64_t v75 = (const char *)v41;
          _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "#coex,parseIncomingEvent-Received msg from UCM: BT [Power: %s, Band: %s], Cellular [Power: %s, Band: %s], WiFi [Power: %s, Channel: %s], R1DutyCycleNeeded: %s", buf, 0x48u);
          if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v60.__r_.__value_.__l.__data_);
          }
        }
        __int16 v9 = v46;
        __int16 v11 = v47;
        unsigned __int16 v25 = v44;
        unsigned __int16 uint64 = v45;
        if ((v51 & 1) == 0 && SHIBYTE(v61.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v61.__r_.__value_.__l.__data_);
        }
        if (v58 && SHIBYTE(v62.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v62.__r_.__value_.__l.__data_);
        }
      }

      if (sub_10039CF54(v59))
      {
        int v42 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)uint8_t buf = 67109632;
          *(_DWORD *)id v64 = uint64;
          *(_WORD *)&v64[4] = 1024;
          *(_DWORD *)&_OWORD v64[6] = v25;
          LOWORD(v65) = 1024;
          *(_DWORD *)((char *)&v65 + 2) = v52;
          _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEFAULT, "#coex,parseIncomingEvent-Recevied msg from UCM: R2GpioBlanking:ChannelsToTriggerGPIOBlanking(%d), NbChannelBegIndex(%d), NbChannelEndIndex(%d)", buf, 0x14u);
        }
      }
      *(_WORD *)a3 = v9;
      *(_WORD *)(a3 + 2) = v10;
      *(_WORD *)(a3 + 4) = v11;
      *(_WORD *)(a3 + 6) = v56;
      *(unsigned char *)(a3 + 8) = v58;
      *(_WORD *)(a3 + 10) = v57;
      *(_WORD *)(a3 + 12) = v55;
      *(unsigned char *)(a3 + 14) = v50;
      *(_WORD *)(a3 + 16) = v53 | (unsigned __int16)((_WORD)v54 << 8);
      *(unsigned char *)(a3 + 18) = v49;
      *(_WORD *)(a3 + 20) = uint64;
      *(_WORD *)(a3 + 22) = v25;
      char v8 = 1;
      *(_WORD *)(a3 + 24) = v52;
    }
    else
    {
      char v8 = 0;
      *(unsigned char *)a3 = 0;
    }
    *(unsigned char *)(a3 + 26) = v8;
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042ABBC();
    }
    *(unsigned char *)a3 = 0;
    *(unsigned char *)(a3 + 26) = 0;
  }
}

void sub_1002B9418(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,uint64_t a25,uint64_t a26,uint64_t a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39)
{
  _Unwind_Resume(a1);
}

void sub_1002B94C0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  double rep = (double)std::chrono::steady_clock::now().__d_.__rep_;
  __int16 v3 = *(_WORD *)(v1 + 40);
  uint64_t v4 = *(void *)(v1 + 64);
  *(double *)&long long v5 = rep;
  DWORD2(v5) = 1;
  WORD6(v5) = v3;
  BYTE14(v5) = 1;
  int v6 = 0;
  char v7 = 0;
  char v8 = 0;
  char v9 = 0;
  char v10 = 0;
  sub_100166EE4(v4, &v5);
}

void sub_1002B9528(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  v3.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_;
  int v4 = *(_DWORD *)(a1 + 40);
  long long v5 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint8_t buf = 67109120;
    int v14 = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#coex,R2ChannelToTriggerGpioBlankingChanged changed %d", buf, 8u);
  }
  uint64_t v6 = *(void *)(v2 + 64);
  *(double *)&long long v7 = (double)v3.__d_.__rep_;
  DWORD2(v7) = 2;
  BYTE12(v7) = 0;
  BYTE14(v7) = 0;
  int v8 = v4;
  char v9 = 0;
  char v10 = 0;
  char v11 = 0;
  char v12 = 0;
  sub_100166EE4(v6, &v7);
}

void sub_1002B9620(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  v3.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_;
  if (!*(unsigned char *)(a1 + 70)) {
    sub_10000AE44();
  }
  std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep rep = v3.__d_.__rep_;
  int v5 = *(_DWORD *)(a1 + 40);
  int v6 = *(unsigned __int16 *)(a1 + 66);
  int v7 = *(unsigned __int16 *)(a1 + 68);
  int v8 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint8_t buf = 67109376;
    int v17 = v6;
    __int16 v18 = 1024;
    int v19 = v7;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#coex,R2NbChannelIdxToTriggerGpioBlankingChanged changed begin: %d, end: %d", buf, 0xEu);
  }
  uint64_t v9 = *(void *)(v2 + 64);
  *(double *)&long long v10 = (double)rep;
  DWORD2(v10) = 3;
  BYTE12(v10) = 0;
  BYTE14(v10) = 0;
  int v11 = v5;
  __int16 v12 = v6;
  char v13 = 1;
  __int16 v14 = v7;
  char v15 = 1;
  sub_100166EE4(v9, &v10);
}

uint64_t sub_1002B9744(void *a1, const char *a2)
{
  uint64_t v2 = xpc_dictionary_get_value(a1, a2);
  std::chrono::steady_clock::time_point v3 = v2;
  if (v2 && xpc_get_type(v2) == (xpc_type_t)&_xpc_type_BOOL)
  {
    BOOL value = xpc_BOOL_get_value(v3);
    int v5 = 1;
  }
  else
  {
    BOOL value = 0;
    int v5 = 0;
  }

  return value | (v5 << 8);
}

void sub_1002B97B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002B97C8(uint64_t a1, const char *const *keys, xpc_object_t *values, int a4)
{
  id v5 = xpc_dictionary_create(keys, values, a4);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 32), v5);
}

void sub_1002B9828(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002B983C(uint64_t a1)
{
  keys = "kMessageId";
  xpc_object_t values = xpc_uint64_create(0x321uLL);
  sub_1002B97C8(a1, (const char *const *)&keys, &values, 1);
}

void sub_1002B98C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1002B98E0(uint64_t a1)
{
  return 1;
}

BOOL sub_1002B98FC(uint64_t a1, int *a2)
{
  int v5 = *a2;
  if (*a2 == 2)
  {
    char v18 = 0;
    uint64_t v20 = 0;
    int v21 = 0;
    if (*((unsigned char *)a2 + 19))
    {
      int v7 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        if (!*((unsigned char *)a2 + 19)) {
          sub_10000AE44();
        }
        int v8 = *((unsigned __int8 *)a2 + 18);
        *(_DWORD *)uint8_t buf = 67109120;
        int v23 = v8;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#coex,RangingStatusUpdate-channel,%d", buf, 8u);
      }

      if (!*((unsigned char *)a2 + 19)) {
        sub_10000AE44();
      }
      if (*((unsigned char *)a2 + 18) == 5) {
        __int16 v9 = 5;
      }
      else {
        __int16 v9 = 9;
      }
    }
    else
    {
      __int16 v9 = *(_WORD *)(a1 + 74);
    }
    __int16 v19 = v9;
    BOOL v2 = *((unsigned char *)a2 + 16) != 0;
    if (*((unsigned char *)a2 + 16))
    {
      if (*((unsigned __int16 *)a2 + 6) | *((unsigned __int16 *)a2 + 5))
      {
        long long v10 = (id)qword_1008ABDE0;
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          if (!*((unsigned char *)a2 + 16)) {
            sub_10000AE44();
          }
          int v11 = *((unsigned __int16 *)a2 + 2);
          int v12 = *((unsigned __int16 *)a2 + 3);
          int v13 = *((unsigned __int16 *)a2 + 4);
          int v14 = *((unsigned __int16 *)a2 + 6);
          int v15 = *((unsigned __int16 *)a2 + 5);
          int v16 = *((unsigned __int16 *)a2 + 7);
          *(_DWORD *)uint8_t buf = 67110400;
          int v23 = v11;
          __int16 v24 = 1024;
          int v25 = v12;
          __int16 v26 = 1024;
          int v27 = v13;
          __int16 v28 = 1024;
          int v29 = v14;
          __int16 v30 = 1024;
          int v31 = v15;
          __int16 v32 = 1024;
          int v33 = v16;
          _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#coex,RangingStatusUpdate-onDuration(%d), cycleLength(%d), numberCycles(%d), frameConfigMask(%d), priorityMask(%d), nbBandMask(%d)", buf, 0x26u);
        }

        char v18 = 1;
        if (!*((unsigned char *)a2 + 16)) {
          sub_10000AE44();
        }
        uint64_t v20 = *(void *)(a2 + 1);
        int v21 = a2[3];
      }
      sub_1002B85CC(a1, (BOOL *)&v18);
    }
  }
  else if (v5 == 1)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042AC24();
    }
    if (!*((unsigned char *)a2 + 19)) {
      return 0;
    }
    if (*((unsigned char *)a2 + 18) == 5) {
      __int16 v6 = 5;
    }
    else {
      __int16 v6 = 9;
    }
    *(_WORD *)(a1 + 74) = v6;
    sub_1002B85CC(a1, (BOOL *)(a1 + 72));
    return 1;
  }
  else if (!v5)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042ABF0();
    }
    return 0;
  }
  return v2;
}

void sub_1002B9BA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1002B9BCC(uint64_t a1)
{
  uint64_t v5 = 0;
  __int16 v6 = &v5;
  uint64_t v7 = 0x4012000000;
  int v8 = sub_1002B9CB4;
  char v11 = 0;
  __int16 v12 = 0;
  char v13 = 0;
  char v14 = 0;
  __int16 v9 = nullsub_121;
  v10[0] = 0;
  *(void *)((char *)v10 + 7) = 0;
  uint64_t v1 = *(NSObject **)(a1 + 16);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1002B9CC4;
  v4[3] = &unk_100856F20;
  void v4[4] = &v5;
  v4[5] = a1;
  dispatch_sync(v1, v4);
  uint64_t v2 = v6[6];
  _Block_object_dispose(&v5, 8);
  return v2;
}

__n128 sub_1002B9CB4(__n128 *a1, __n128 *a2)
{
  __n128 result = a2[3];
  a1[3] = result;
  return result;
}

__n128 sub_1002B9CC4(uint64_t a1)
{
  __n128 result = *(__n128 *)(*(void *)(a1 + 40) + 42);
  *(__n128 *)(*(void *)(*(void *)(a1 + 32) + 8) + 48) = result;
  return result;
}

uint64_t sub_1002B9CD8()
{
  return 0;
}

uint64_t sub_1002B9CE0()
{
  return 0;
}

uint64_t sub_1002B9CE8()
{
  return 1;
}

uint64_t sub_1002B9CF0()
{
  return 1;
}

std::string *sub_1002B9CF8(std::string *a1)
{
  a1->__r_.__value_.__s.__data_[0] = 0;
  a1[1].__r_.__value_.__s.__data_[0] = 0;
  a1[1].__r_.__value_.__s.__data_[8] = 0;
  uint64_t v2 = (std::string *)((char *)a1 + 32);
  a1[2].__r_.__value_.__s.__data_[8] = 0;
  std::chrono::steady_clock::time_point v3 = [@"/System/Library/NearbyInteractionBundles" stringByAppendingPathComponent:@"SpatialGesturesResources.bundle"];
  int v4 = +[NSBundle bundleWithPath:v3];
  id v24 = [v4 pathForResource:@"model.espresso" ofType:@"net"];
  uint64_t v5 = [@"/System/Library/NearbyInteractionBundles" stringByAppendingPathComponent:@"MotionBasedSpatialGesturesResources.bundle"];
  __int16 v6 = +[NSBundle bundleWithPath:v5];
  id v25 = [v6 pathForResource:@"model.espresso" ofType:@"net"];
  __ec.__val_ = 0;
  __ec.__cat_ = std::system_category();
  __int16 v28 = (char *)[@"/System/Library/NearbyInteractionBundles" UTF8String];
  sub_1002BA388(&v29.__pn_, &v28);
  std::__fs::filesystem::__status(&v29, &__ec);
  if (v33[0])
  {
    __ec.__val_ = 0;
    __ec.__cat_ = std::system_category();
    int v7 = v33[0];
  }
  else
  {
    int v7 = 0;
  }
  if (SHIBYTE(v29.__pn_.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v29.__pn_.__r_.__value_.__l.__data_);
  }
  if (v7 == 255 || !v7)
  {
    int v8 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_10042AD14((uint64_t)[@"/System/Library/NearbyInteractionBundles" UTF8String], (uint64_t)&v29, v8);
    }

    goto LABEL_11;
  }
  id v10 = v3;
  __int16 v28 = (char *)[v10 UTF8String];
  sub_1002BA388(&v29.__pn_, &v28);
  std::__fs::filesystem::__status(&v29, &__ec);
  if (v33[0])
  {
    __ec.__val_ = 0;
    __ec.__cat_ = std::system_category();
    uint64_t v11 = v33[0];
  }
  else
  {
    uint64_t v11 = 0;
  }
  if (v11) {
    BOOL v12 = v11 == 255;
  }
  else {
    BOOL v12 = 1;
  }
  int v13 = !v12;
  int v23 = v13;
  if (SHIBYTE(v29.__pn_.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v29.__pn_.__r_.__value_.__l.__data_);
  }
  if (v11 == 255 || !v11)
  {
    char v14 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      sub_10042ACD8((uint64_t)[v10 UTF8String], (uint64_t)v33, v14);
    }
  }
  id v15 = v5;
  __int16 v26 = (char *)[v15 UTF8String];
  sub_1002BA388(&v29.__pn_, &v26);
  std::__fs::filesystem::__status(&v29, &__ec);
  if ((_BYTE)v28)
  {
    __ec.__val_ = 0;
    __ec.__cat_ = std::system_category();
    uint64_t v16 = v28;
  }
  else
  {
    uint64_t v16 = 0;
  }
  if (v16) {
    BOOL v17 = v16 == 255;
  }
  else {
    BOOL v17 = 1;
  }
  int v18 = !v17;
  if (SHIBYTE(v29.__pn_.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v29.__pn_.__r_.__value_.__l.__data_);
  }
  if (v16 != 255 && v16)
  {
    if (!v11 || v11 == 255) {
      goto LABEL_49;
    }
    sub_100004950(&v29, (char *)[v24 UTF8String]);
    char v30 = 1;
    sub_100004950(&v31, (char *)[v25 UTF8String]);
    v32[0] = 1;
    sub_10025A018((uint64_t)a1, (__n128 *)&v29);
    sub_10025A018((uint64_t)v2, &v31);
    for (uint64_t i = 0; i != -64; i -= 32)
    {
      char v22 = (void **)((char *)&v29.__pn_.__r_.__value_.__l.__data_ + i);
      if (v32[i] && *((char *)v22 + 55) < 0) {
        operator delete(v22[4]);
      }
    }
  }
  else
  {
    __int16 v19 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
      sub_10042AC9C((uint64_t)[v15 UTF8String], (uint64_t)&v29, v19);
    }

    if ((v23 | v18))
    {
      if (v11 != 255 && v11)
      {
        __int16 v28 = (char *)[v24 UTF8String];
        sub_1002BA270(a1, &v28);
        goto LABEL_11;
      }
LABEL_49:
      __int16 v28 = (char *)[v25 UTF8String];
      sub_1002BA270(v2, &v28);
      goto LABEL_11;
    }
    uint64_t v20 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042AC58(v20);
    }
  }
LABEL_11:

  return a1;
}

void sub_1002BA190(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23)
{
  if (a2) {
    sub_100012C10(exception_object);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_1002BA270(std::string *a1, std::string::value_type **a2)
{
  std::chrono::steady_clock::time_point v3 = *a2;
  if (a1[1].__r_.__value_.__s.__data_[0])
  {
    std::string::assign(a1, v3);
  }
  else
  {
    sub_100004950(a1, v3);
    a1[1].__r_.__value_.__s.__data_[0] = 1;
  }
  return a1;
}

uint64_t sub_1002BA2B4(uint64_t a1)
{
  for (uint64_t i = 0; i != -64; i -= 32)
  {
    uint64_t v3 = a1 + i;
    if (*(unsigned char *)(a1 + i + 56) && *(char *)(v3 + 55) < 0) {
      operator delete(*(void **)(v3 + 32));
    }
  }
  return a1;
}

uint64_t sub_1002BA308@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v4 = 0;
  uint64_t v5 = 0;
  do
  {
    char v6 = v4;
    uint64_t result = sub_10025A21C(a2 + 32 * v5, (long long *)(a1 + 32 * v5));
    char v4 = 1;
    uint64_t v5 = 1;
  }
  while ((v6 & 1) == 0);
  return result;
}

void sub_1002BA36C(_Unwind_Exception *exception_object)
{
  if ((v3 & 1) == 0) {
    sub_10042AD50(v2, v1);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_1002BA388(std::string *this, char **a2)
{
  *(_OWORD *)&this->__r_.__value_.__l.__data_ = 0uLL;
  this->__r_.__value_.__r.__words[2] = 0;
  char v3 = *a2;
  char v4 = v3 - 1;
  while (*++v4)
    ;
  sub_10019CA64(this, v3, v4);
  return this;
}

void sub_1002BA3CC(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002BA3E8(unsigned __int8 *a1)
{
  uint64_t v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    char v3 = a1 + 8;
    if ((char)a1[31] < 0) {
      char v3 = (void *)*v3;
    }
    int v4 = *a1;
    int v5 = a1[1];
    int v6 = *((unsigned __int16 *)a1 + 16);
    int v7 = a1 + 40;
    if ((char)a1[63] < 0) {
      int v7 = (void *)*v7;
    }
    int v8 = *((_DWORD *)a1 + 16);
    int v9 = *((_DWORD *)a1 + 17);
    int v10 = *((_DWORD *)a1 + 18);
    int v11 = *((_DWORD *)a1 + 19);
    v12[0] = 67176707;
    v12[1] = v4;
    __int16 v13 = 1025;
    int v14 = v5;
    __int16 v15 = 2081;
    uint64_t v16 = v3;
    __int16 v17 = 1025;
    int v18 = v6;
    __int16 v19 = 2081;
    uint64_t v20 = v7;
    __int16 v21 = 1025;
    int v22 = v8;
    __int16 v23 = 1025;
    int v24 = v9;
    __int16 v25 = 1025;
    int v26 = v10;
    __int16 v27 = 1025;
    int v28 = v11;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#fu,endian,%{private}d,headerVersion,%{private}d,type,%{private}s,version,%{private}d,copyright,%{private}s,timestamp,%{private}u,expiration,%{private}u,dataSizeBytes,%{private}u,crc,%{private}u", (uint8_t *)v12, 0x40u);
  }
}

unint64_t sub_1002BA508()
{
  sub_100164404(v4);
  if ((*((unsigned char *)&v4[4] + (unint64_t)*(v4[0] - 3)) & 5) != 0)
  {
    uint64_t v0 = 0;
    unint64_t v1 = 0;
  }
  else
  {
    std::istream::tellg();
    unint64_t v1 = v3 & 0xFFFFFFFFFFFFFF00;
    uint64_t v0 = v3;
  }
  std::filebuf::~filebuf();
  std::istream::~istream();
  std::ios::~ios();
  return v1 | v0;
}

void sub_1002BA684(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
}

BOOL sub_1002BA6A0(const char *a1)
{
  if (a1[23] < 0) {
    a1 = *(const char **)a1;
  }
  return stat(a1, &v2) >= 0;
}

void sub_1002BA6DC(const char *a1)
{
  if (a1[23] < 0) {
    a1 = *(const char **)a1;
  }
  if ((stat(a1, &v1) & 0x80000000) == 0) {
    CFAbsoluteTimeGetCurrent();
  }
}

uint64_t sub_1002BA758(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 128))
  {
    int v4 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042AD98(v4);
    }
    return 0;
  }
  uint64_t v2 = *(unsigned __int8 *)(a2 + 31);
  if ((v2 & 0x80u) != 0) {
    uint64_t v2 = *(void *)(a2 + 16);
  }
  if (v2 != 30)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042AE50();
    }
    return 0;
  }
  if ((*(char *)(a2 + 63) & 0x80000000) == 0 || *(void *)(a2 + 48) != 128)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042ADDC();
    }
    return 0;
  }
  uint64_t v3 = 1;
  std::ostream::write();
  std::ostream::write();
  std::ostream::write();
  std::ostream::write();
  std::ostream::write();
  std::ostream::write();
  std::ostream::write();
  std::ostream::write();
  std::ostream::write();
  std::ostream::flush();
  return v3;
}

BOOL sub_1002BA928(FILE *__stream, uint64_t a2)
{
  if (!__stream)
  {
    int v8 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042AEC4(v8);
    }
    return 0;
  }
  size_t v3 = fread(&__ptr, 1uLL, 0xB2uLL, __stream);
  if (v3 != 178)
  {
    uint64_t v9 = v3;
    int v10 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042B058(v9, v10);
    }
    return 0;
  }
  int v4 = __ptr;
  *(unsigned char *)a2 = __ptr;
  if ((v4 - 1) >= 2)
  {
    int v11 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042AFE8(a2, v11, v12, v13, v14, v15, v16, v17);
    }
    return 0;
  }
  int v5 = v44;
  *(unsigned char *)(a2 + 1) = v44;
  uint64_t v6 = a2 + 1;
  if (!v5)
  {
    int v18 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042AF08(v6, v18, v19, v20, v21, v22, v23, v24);
    }
    return 0;
  }
  char v42 = 0;
  *(_OWORD *)__s = *(_OWORD *)v45;
  *(_OWORD *)&__s[14] = *(_OWORD *)&v45[14];
  std::string::assign((std::string *)(a2 + 8), __s);
  if (*(unsigned char *)a2 == 2) {
    unsigned int v7 = bswap32(v46) >> 16;
  }
  else {
    unsigned int v7 = v46;
  }
  *(_WORD *)(a2 + 32) = v7;
  uint64_t v27 = a2 + 32;
  BOOL v25 = v7 != 0;
  if (v7)
  {
    char v40 = 0;
    v39[4] = v51;
    v39[5] = v52;
    v39[6] = v53;
    v39[7] = v54;
    v39[0] = v47;
    v39[1] = v48;
    v39[2] = v49;
    v39[3] = v50;
    std::string::assign((std::string *)(a2 + 40), (const std::string::value_type *)v39);
    if (*(unsigned char *)a2 == 2)
    {
      unsigned int v28 = bswap32(v55);
      unsigned int v29 = bswap32(v56);
      unsigned int v30 = bswap32(v57);
      unsigned int v31 = bswap32(v58);
    }
    else
    {
      unsigned int v28 = v55;
      unsigned int v29 = v56;
      unsigned int v30 = v57;
      unsigned int v31 = v58;
    }
    *(_DWORD *)(a2 + 64) = v28;
    *(_DWORD *)(a2 + 68) = v29;
    *(_DWORD *)(a2 + 72) = v30;
    *(_DWORD *)(a2 + 76) = v31;
  }
  else
  {
    __int16 v32 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042AF78(v27, v32, v33, v34, v35, v36, v37, v38);
    }
  }
  return v25;
}

BOOL sub_1002BAB98(const char *a1, uint64_t a2)
{
  size_t v3 = a1;
  if (a1[23] < 0) {
    a1 = *(const char **)a1;
  }
  if (stat(a1, &v14) < 0)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042B1C0();
    }
    return 0;
  }
  unint64_t v4 = sub_1002BA508();
  if (!v5)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042B0E0();
    }
    return 0;
  }
  __darwin_ino64_t v6 = v4;
  if (v4 <= 0xB1)
  {
    unsigned int v7 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
    {
      if (v3[23] >= 0) {
        uint64_t v13 = v3;
      }
      else {
        uint64_t v13 = *(const char **)v3;
      }
      v14.st_dev = 136315650;
      *(void *)&v14.st_mode = v13;
      WORD2(v14.st_ino) = 2048;
      *(__darwin_ino64_t *)((char *)&v14.st_ino + 6) = v6;
      HIWORD(v14.st_gid) = 1024;
      v14.st_rdev = 178;
      _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "#fu,getHeader,failed,file,%s,fileTooSmall,size,%lu,expected,%d", (uint8_t *)&v14, 0x1Cu);
    }
  }
  if (v3[23] >= 0) {
    int v8 = v3;
  }
  else {
    int v8 = *(const char **)v3;
  }
  uint64_t v9 = fopen(v8, "rb");
  int v10 = v9;
  if (!v9)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042B150();
    }
    return 0;
  }
  BOOL v11 = sub_1002BA928(v9, a2);
  fclose(v10);
  return v11;
}

BOOL sub_1002BAD94(uint64_t a1, int *a2)
{
  sub_100164404(v9);
  uint64_t v3 = v10;
  if (v10)
  {
    unint64_t v4 = v9[0];
    *(_DWORD *)((char *)&v9[1] + (unint64_t)*(v9[0] - 3)) &= ~0x1000u;
    int v5 = -1;
    *a2 = -1;
    if ((*((unsigned char *)&v9[4] + (void)*(v4 - 3)) & 2) == 0)
    {
      uint64_t v6 = -174;
      while (1)
      {
        std::istream::read();
        unsigned int v7 = v9[0];
        if ((*((unsigned char *)&v9[4] + (unint64_t)*(v9[0] - 3)) & 2) != 0) {
          break;
        }
        int v5 = dword_1004BE9B0[*a2] ^ (*a2 >> 8);
        *a2 = v5;
        ++v6;
        if ((*((unsigned char *)&v9[4] + (void)*(v7 - 3)) & 2) != 0) {
          goto LABEL_11;
        }
      }
      int v5 = *a2;
    }
LABEL_11:
    *a2 = ~v5;
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_10042B230();
  }
  std::filebuf::~filebuf();
  std::istream::~istream();
  std::ios::~ios();
  return v3 != 0;
}

void sub_1002BB038(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
}

BOOL sub_1002BB054(uint64_t a1, int *a2)
{
  sub_100004950(&__p, "generateCrc");
  BOOL v4 = sub_1002BAD94(a1, a2);
  if (v7 < 0) {
    operator delete(__p);
  }
  return v4;
}

void sub_1002BB0B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002BB0D4(uint64_t a1)
{
  *(_WORD *)uint64_t v10 = 0;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  std::string __p = 0;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  BOOL v11 = 0;
  __int16 v14 = 0;
  long long v18 = xmmword_1004B5930;
  if (!sub_1002BAB98((const char *)a1, (uint64_t)v10))
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042B2B4();
    }
    goto LABEL_11;
  }
  sub_1002BA3E8(v10);
  int v9 = 0;
  sub_100004950(buf, "isCrcOkay");
  BOOL v2 = sub_1002BAD94(a1, &v9);
  BOOL v3 = v2;
  if (SHIBYTE(v23) < 0)
  {
    operator delete(*(void **)buf);
    if (!v3) {
      goto LABEL_11;
    }
  }
  else if (!v2)
  {
    goto LABEL_11;
  }
  int v4 = v9;
  if (HIDWORD(v18) == v9)
  {
    uint64_t v5 = 1;
    goto LABEL_12;
  }
  uint64_t v6 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    if (*(char *)(a1 + 23) >= 0) {
      uint64_t v8 = a1;
    }
    else {
      uint64_t v8 = *(void *)a1;
    }
    *(_DWORD *)uint8_t buf = 136315650;
    *(void *)&uint8_t buf[4] = v8;
    __int16 v20 = 1024;
    int v21 = HIDWORD(v18);
    __int16 v22 = 1024;
    int v23 = v4;
    _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "#fu,isCrcOkay,file,%s,crcMismatch,onFile,%08x,calculated,%08x", buf, 0x18u);
  }
LABEL_11:
  uint64_t v5 = 0;
LABEL_12:
  if (SHIBYTE(v17) < 0) {
    operator delete(__p);
  }
  if (SHIBYTE(v13) < 0) {
    operator delete(v11);
  }
  return v5;
}

void sub_1002BB294(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
}

BOOL sub_1002BB2CC(uint64_t a1)
{
  sub_1002BA508();
  if (!v2)
  {
    int v4 = qword_1008ABDE0;
    BOOL v5 = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT);
    BOOL result = 0;
    if (!v5) {
      return result;
    }
    if (*(char *)(a1 + 23) >= 0) {
      uint64_t v6 = a1;
    }
    else {
      uint64_t v6 = *(void *)a1;
    }
    int v7 = 136315138;
    uint64_t v8 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#fu,%s does not exist", (uint8_t *)&v7, 0xCu);
    return 0;
  }
  if (sub_1002BB0D4(a1)) {
    return 1;
  }
  BOOL result = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR);
  if (result)
  {
    sub_10042B320();
    return 0;
  }
  return result;
}

BOOL sub_1002BB3DC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002BA508();
  if (!v5)
  {
    uint64_t v8 = qword_1008ABDE0;
    BOOL v9 = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT);
    BOOL result = 0;
    if (!v9) {
      return result;
    }
    if (*(char *)(a1 + 23) >= 0) {
      uint64_t v10 = a1;
    }
    else {
      uint64_t v10 = *(void *)a1;
    }
    int v12 = 136315138;
    uint64_t v13 = v10;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#fu,%s does not exist", (uint8_t *)&v12, 0xCu);
    return 0;
  }
  uint64_t v6 = v4;
  if (v4 != a2)
  {
    BOOL v11 = qword_1008ABDE0;
    BOOL result = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR);
    if (!result) {
      return result;
    }
    sub_10042B38C(a2, v6, v11);
    return 0;
  }
  if (sub_1002BB0D4(a1)) {
    return 1;
  }
  BOOL result = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR);
  if (result)
  {
    sub_10042B320();
    return 0;
  }
  return result;
}

void sub_1002BB534(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

void sub_1002BB54C(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

void sub_1002BB5CC(id a1)
{
  id v1 = [[NIServerKeychainManager alloc] _initInternal];
  char v2 = (void *)qword_1008A7C78;
  qword_1008A7C78 = (uint64_t)v1;

  BOOL v3 = +[NSUserDefaults standardUserDefaults];
  unsigned int v4 = [v3 BOOLForKey:@"KMUnitTestOverride"];

  if (v4)
  {
    [(id)qword_1008A7C78 _unitTest1];
    [(id)qword_1008A7C78 _unitTest2];
    char v5 = (void *)qword_1008A7C78;
    _[v5 _unitTest3];
  }
}

void sub_1002BB670(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002BB764(uint64_t a1)
{
  if ([*(id *)(a1 + 32) _shouldLog])
  {
    char v2 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v3 = *(void *)(a1 + 40);
      int v4 = *(unsigned __int8 *)(a1 + 56);
      int v5 = *(unsigned __int8 *)(a1 + 57);
      *(_DWORD *)uint8_t buf = 138478339;
      uint64_t v29 = v3;
      __int16 v30 = 1024;
      int v31 = v4;
      __int16 v32 = 1024;
      int v33 = v5;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#ni-km,Write: %{private}@, %d, %d", buf, 0x18u);
    }
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(kCFAllocatorDefault, 0, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
  int v7 = (__CFDictionary *)CFAutorelease(Mutable);
  uint64_t v8 = v7;
  if (*(unsigned char *)(a1 + 57)) {
    CFBooleanRef v9 = kCFBooleanTrue;
  }
  else {
    CFBooleanRef v9 = kCFBooleanFalse;
  }
  key = (void *)kSecUseSystemKeychain;
  CFDictionaryAddValue(v7, kSecUseSystemKeychain, v9);
  CFDictionaryAddValue(v8, kSecClass, kSecClassGenericPassword);
  uint64_t v10 = [*(id *)(a1 + 40) data];
  CFDictionaryAddValue(v8, kSecValueData, v10);

  CFDictionaryAddValue(v8, kSecUseDataProtectionKeychain, kCFBooleanTrue);
  BOOL v11 = [*(id *)(a1 + 40) account];
  CFDictionaryAddValue(v8, kSecAttrAccount, v11);

  int v12 = [*(id *)(a1 + 40) service];
  CFDictionaryAddValue(v8, kSecAttrService, v12);

  CFDictionaryAddValue(v8, kSecAttrAccessGroup, @"com.apple.nearbyd");
  if (*(unsigned char *)(a1 + 56)) {
    CFBooleanRef v13 = kCFBooleanTrue;
  }
  else {
    CFBooleanRef v13 = kCFBooleanFalse;
  }
  CFDictionaryAddValue(v8, kSecAttrSynchronizable, v13);
  __int16 v14 = (const void **)&kSecAttrAccessibleAfterFirstUnlock;
  if (!*(unsigned char *)(a1 + 56)) {
    __int16 v14 = (const void **)&kSecAttrAccessibleAfterFirstUnlockThisDeviceOnly;
  }
  CFDictionaryAddValue(v8, kSecAttrAccessible, *v14);
  OSStatus v15 = SecItemAdd(v8, 0);
  if ([*(id *)(a1 + 32) _shouldLog])
  {
    uint64_t v16 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint8_t buf = 67174657;
      LODWORD(v29) = v15;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "#ni-km,Write status: %{private}d.", buf, 8u);
    }
  }
  if (v15 == -25299)
  {
    CFMutableDictionaryRef v17 = CFDictionaryCreateMutable(kCFAllocatorDefault, 0, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
    long long v18 = (__CFDictionary *)CFAutorelease(v17);
    uint64_t v19 = v18;
    if (*(unsigned char *)(a1 + 57)) {
      CFBooleanRef v20 = kCFBooleanTrue;
    }
    else {
      CFBooleanRef v20 = kCFBooleanFalse;
    }
    CFDictionaryAddValue(v18, key, v20);
    CFDictionaryAddValue(v19, kSecClass, kSecClassGenericPassword);
    CFDictionaryAddValue(v19, kSecUseDataProtectionKeychain, kCFBooleanTrue);
    int v21 = [*(id *)(a1 + 40) account];
    CFDictionaryAddValue(v19, kSecAttrAccount, v21);

    __int16 v22 = [*(id *)(a1 + 40) service];
    CFDictionaryAddValue(v19, kSecAttrService, v22);

    CFDictionaryAddValue(v19, kSecAttrAccessGroup, @"com.apple.nearbyd");
    if (*(unsigned char *)(a1 + 56)) {
      CFBooleanRef v23 = kCFBooleanTrue;
    }
    else {
      CFBooleanRef v23 = kCFBooleanFalse;
    }
    CFDictionaryAddValue(v19, kSecAttrSynchronizable, v23);
    CFDictionaryRemoveAllValues(v8);
    uint64_t v24 = [*(id *)(a1 + 40) data];
    CFDictionaryAddValue(v8, kSecValueData, v24);

    OSStatus v25 = SecItemUpdate(v19, v8);
    if ([*(id *)(a1 + 32) _shouldLog])
    {
      int v26 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint8_t buf = 67174657;
        LODWORD(v29) = v25;
        _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "#ni-km,Update status: %{private}d.", buf, 8u);
      }
    }
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = v25 == 0;
  }
  else if (v15)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 0;
  }
  else
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
  }
}

void sub_1002BBC1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1002BBD98(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1002BBDA8(uint64_t a1)
{
}

void sub_1002BBDB0(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) _internalReadItemWithService:*(void *)(a1 + 40) account:*(void *)(a1 + 48) synchronizable:*(unsigned __int8 *)(a1 + 64) systemKeychain:*(unsigned __int8 *)(a1 + 65)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 56) + 8);
  int v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1002BBF4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002BBF5C(uint64_t a1)
{
  if ([*(id *)(a1 + 32) _shouldLog])
  {
    uint64_t v2 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v3 = *(void *)(a1 + 40);
      int v4 = *(unsigned __int8 *)(a1 + 56);
      int v5 = *(unsigned __int8 *)(a1 + 57);
      *(_DWORD *)uint8_t buf = 138478339;
      *(void *)uint64_t v27 = v3;
      *(_WORD *)&v27[8] = 1024;
      int v28 = v4;
      __int16 v29 = 1024;
      int v30 = v5;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#ni-km,Read all: %{private}@, %d, %d", buf, 0x18u);
    }
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(kCFAllocatorDefault, 0, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
  int v7 = (__CFDictionary *)CFAutorelease(Mutable);
  uint64_t v8 = v7;
  CFTypeRef result = 0;
  if (*(unsigned char *)(a1 + 57)) {
    CFBooleanRef v9 = kCFBooleanTrue;
  }
  else {
    CFBooleanRef v9 = kCFBooleanFalse;
  }
  CFDictionaryAddValue(v7, kSecUseSystemKeychain, v9);
  CFDictionaryAddValue(v8, kSecClass, kSecClassGenericPassword);
  CFDictionaryAddValue(v8, kSecUseDataProtectionKeychain, kCFBooleanTrue);
  CFDictionaryAddValue(v8, kSecAttrService, *(const void **)(a1 + 40));
  CFDictionaryAddValue(v8, kSecAttrAccessGroup, @"com.apple.nearbyd");
  if (*(unsigned char *)(a1 + 56)) {
    CFBooleanRef v10 = kCFBooleanTrue;
  }
  else {
    CFBooleanRef v10 = kCFBooleanFalse;
  }
  CFDictionaryAddValue(v8, kSecAttrSynchronizable, v10);
  CFDictionaryAddValue(v8, kSecMatchLimit, kSecMatchLimitAll);
  CFDictionaryAddValue(v8, kSecReturnData, kCFBooleanTrue);
  CFDictionaryAddValue(v8, kSecReturnAttributes, kCFBooleanTrue);
  OSStatus v11 = SecItemCopyMatching(v8, &result);
  if (result)
  {
    CFTypeID TypeID = CFArrayGetTypeID();
    CFTypeID v13 = CFGetTypeID(result);
    __int16 v14 = (void *)result;
    if (TypeID != v13)
    {
      __int16 v14 = 0;
      CFRelease(result);
    }
    if ([*(id *)(a1 + 32) _shouldLog])
    {
      OSStatus v15 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        unsigned int v16 = [v14 count];
        *(_DWORD *)uint8_t buf = 67174913;
        *(_DWORD *)uint64_t v27 = v11;
        *(_WORD *)&v27[4] = 1025;
        *(_DWORD *)&v27[6] = v16;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "#ni-km,Read all status: %{private}d. Num results: %{private}d", buf, 0xEu);
      }
    }
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472;
    _OWORD v21[2] = sub_1002BC348;
    v21[3] = &unk_10085E2A0;
    CFMutableDictionaryRef v17 = *(void **)(a1 + 40);
    void v21[4] = *(void *)(a1 + 32);
    id v18 = v17;
    __int16 v24 = *(_WORD *)(a1 + 56);
    uint64_t v19 = *(void *)(a1 + 48);
    id v22 = v18;
    uint64_t v23 = v19;
    [v14 enumerateObjectsUsingBlock:v21];
  }
  else if ([*(id *)(a1 + 32) _shouldLog])
  {
    CFBooleanRef v20 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint8_t buf = 67174657;
      *(_DWORD *)uint64_t v27 = v11;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "#ni-km,Read all status: %{private}d. No results", buf, 8u);
    }
  }
}

void sub_1002BC314(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002BC348(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 objectForKey:kSecAttrAccount];
  if (v3)
  {
    int v5 = v3;
    int v4 = [*(id *)(a1 + 32) _internalReadItemWithService:*(void *)(a1 + 40) account:v3 synchronizable:*(unsigned __int8 *)(a1 + 56) systemKeychain:*(unsigned __int8 *)(a1 + 57)];
    if (v4) {
      [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) addObject:v4];
    }

    uint64_t v3 = v5;
  }
}

void sub_1002BC3E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002BC50C(uint64_t a1)
{
  if ([*(id *)(a1 + 32) _shouldLog])
  {
    uint64_t v2 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v3 = *(void *)(a1 + 40);
      uint64_t v4 = *(void *)(a1 + 48);
      int v5 = *(unsigned __int8 *)(a1 + 64);
      int v6 = *(unsigned __int8 *)(a1 + 65);
      int v16 = 138478595;
      uint64_t v17 = v3;
      __int16 v18 = 2113;
      uint64_t v19 = v4;
      __int16 v20 = 1024;
      int v21 = v5;
      __int16 v22 = 1024;
      int v23 = v6;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#ni-km,Delete: %{private}@, %{private}@, %d, %d", (uint8_t *)&v16, 0x22u);
    }
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(kCFAllocatorDefault, 0, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
  uint64_t v8 = (__CFDictionary *)CFAutorelease(Mutable);
  CFBooleanRef v9 = v8;
  if (*(unsigned char *)(a1 + 65)) {
    CFBooleanRef v10 = kCFBooleanTrue;
  }
  else {
    CFBooleanRef v10 = kCFBooleanFalse;
  }
  CFDictionaryAddValue(v8, kSecUseSystemKeychain, v10);
  CFDictionaryAddValue(v9, kSecClass, kSecClassGenericPassword);
  CFDictionaryAddValue(v9, kSecUseDataProtectionKeychain, kCFBooleanTrue);
  CFDictionaryAddValue(v9, kSecAttrAccount, *(const void **)(a1 + 48));
  CFDictionaryAddValue(v9, kSecAttrService, *(const void **)(a1 + 40));
  CFDictionaryAddValue(v9, kSecAttrAccessGroup, @"com.apple.nearbyd");
  if (*(unsigned char *)(a1 + 64)) {
    CFBooleanRef v11 = kCFBooleanTrue;
  }
  else {
    CFBooleanRef v11 = kCFBooleanFalse;
  }
  CFDictionaryAddValue(v9, kSecAttrSynchronizable, v11);
  OSStatus v12 = SecItemDelete(v9);
  if ([*(id *)(a1 + 32) _shouldLog])
  {
    CFTypeID v13 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      int v16 = 67174657;
      LODWORD(v17) = v12;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "#ni-km,Delete status: %{private}d.", (uint8_t *)&v16, 8u);
    }
  }
  if (v12) {
    BOOL v14 = v12 == -25300;
  }
  else {
    BOOL v14 = 1;
  }
  char v15 = v14;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = v15;
}

void sub_1002BC85C(uint64_t a1)
{
  if ([*(id *)(a1 + 32) _shouldLog])
  {
    uint64_t v2 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v3 = *(void *)(a1 + 40);
      int v4 = *(unsigned __int8 *)(a1 + 56);
      int v5 = *(unsigned __int8 *)(a1 + 57);
      int v15 = 138478339;
      uint64_t v16 = v3;
      __int16 v17 = 1024;
      int v18 = v4;
      __int16 v19 = 1024;
      int v20 = v5;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#ni-km,Delete all: %{private}@, %d, %d", (uint8_t *)&v15, 0x18u);
    }
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(kCFAllocatorDefault, 0, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
  int v7 = (__CFDictionary *)CFAutorelease(Mutable);
  uint64_t v8 = v7;
  if (*(unsigned char *)(a1 + 57)) {
    CFBooleanRef v9 = kCFBooleanTrue;
  }
  else {
    CFBooleanRef v9 = kCFBooleanFalse;
  }
  CFDictionaryAddValue(v7, kSecUseSystemKeychain, v9);
  CFDictionaryAddValue(v8, kSecClass, kSecClassGenericPassword);
  CFDictionaryAddValue(v8, kSecUseDataProtectionKeychain, kCFBooleanTrue);
  CFDictionaryAddValue(v8, kSecAttrService, *(const void **)(a1 + 40));
  CFDictionaryAddValue(v8, kSecAttrAccessGroup, @"com.apple.nearbyd");
  if (*(unsigned char *)(a1 + 56)) {
    CFBooleanRef v10 = kCFBooleanTrue;
  }
  else {
    CFBooleanRef v10 = kCFBooleanFalse;
  }
  CFDictionaryAddValue(v8, kSecAttrSynchronizable, v10);
  OSStatus v11 = SecItemDelete(v8);
  if ([*(id *)(a1 + 32) _shouldLog])
  {
    OSStatus v12 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      int v15 = 67174657;
      LODWORD(v16) = v11;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "#ni-km,Delete all status: %{private}d.", (uint8_t *)&v15, 8u);
    }
  }
  if (v11) {
    BOOL v13 = v11 == -25300;
  }
  else {
    BOOL v13 = 1;
  }
  char v14 = v13;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = v14;
}

void sub_1002BCB60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002BCED4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002BE0B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002BF49C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  _Block_object_dispose((const void *)(v19 - 160), 8);
  _Unwind_Resume(a1);
}

id sub_1002BF5D0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  id result = [*(id *)(a1 + 32) containsObject:a2];
  if ((result & 1) == 0)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
    *a4 = 1;
  }
  return result;
}

id sub_1002BF618(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  id result = [*(id *)(a1 + 32) containsObject:a2];
  if ((result & 1) == 0)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
    *a4 = 1;
  }
  return result;
}

id sub_1002BF660(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  id result = [*(id *)(a1 + 32) containsObject:a2];
  if ((result & 1) == 0)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
    *a4 = 1;
  }
  return result;
}

id sub_1002BF6A8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  id result = [*(id *)(a1 + 32) containsObject:a2];
  if ((result & 1) == 0)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
    *a4 = 1;
  }
  return result;
}

id sub_1002BF6F0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  id result = [*(id *)(a1 + 32) containsObject:a2];
  if ((result & 1) == 0)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
    *a4 = 1;
  }
  return result;
}

void sub_1002C072C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002C07D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002C0900(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002C0A44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002C0B84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1002C0C08(uint64_t a1)
{
  *(void *)a1 = sub_100006A00();
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_WORD *)(a1 + 32) = -1;
  *(unsigned char *)(a1 + 34) = -1;
  *(unsigned char *)(a1 + 36) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 44) = 1;
  *(_WORD *)(a1 + 48) = 0;
  *(void *)(a1 + 64) = 0;
  *(unsigned char *)(a1 + 50) = 0;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 80) = a1 + 88;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 104) = a1 + 112;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 128) = a1 + 136;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 850045863;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 201) = 0u;
  uint64_t v6 = a1;
  sub_1002C0ECC((uint64_t)&v6, 5u, 1, 0);
  sub_1002C0ECC((uint64_t)&v6, 9u, 1, 0);
  sub_1002C0ECC((uint64_t)&v6, 5u, 2, 0);
  sub_1002C0ECC((uint64_t)&v6, 9u, 2, 0);
  sub_1002C0ECC((uint64_t)&v6, 5u, 0, 1);
  sub_1002C0ECC((uint64_t)&v6, 9u, 0, 1);
  sub_1002C0ECC((uint64_t)&v6, 5u, 3, 0);
  sub_1002C0ECC((uint64_t)&v6, 9u, 3, 0);
  LOWORD(v5) = 5;
  sub_1002C3DC8((uint64_t **)(a1 + 80), (unsigned __int8 *)&v5, &v5);
  LOWORD(v5) = 9;
  sub_1002C3DC8((uint64_t **)(a1 + 80), (unsigned __int8 *)&v5, &v5);
  uint64_t v5 = a1;
  sub_1002C3BC8((uint64_t)&v5, 1, 0);
  sub_1002C3BC8((uint64_t)&v5, 2, 0);
  sub_1002C3BC8((uint64_t)&v5, 0, 1);
  sub_1002C3BC8((uint64_t)&v5, 3, 0);
  *(_WORD *)int v4 = 1;
  sub_1002C3DC8((uint64_t **)(a1 + 128), v4, v4);
  uint64_t v2 = qword_1008A7C88;
  if (os_log_type_enabled((os_log_t)qword_1008A7C88, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "regulatory,settings,init", v4, 2u);
  }
  return a1;
}

void sub_1002C0E68(_Unwind_Exception *a1)
{
  std::mutex::~mutex(v6);
  sub_10003E96C(v5, *(void **)(v1 + 136));
  sub_10015E1A0(v4, *(void **)(v1 + 112));
  sub_10003E96C(v3, *(void **)(v1 + 88));
  sub_10015E1A0(v2, *(void **)(v1 + 64));
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v7);
  }
  _Unwind_Resume(a1);
}

uint64_t **sub_1002C0ECC(uint64_t a1, unsigned int a2, int a3, char a4)
{
  unsigned __int8 v19 = a2;
  uint64_t v6 = *(void *)(*(void *)a1 + 64);
  int v7 = (uint64_t **)(*(void *)a1 + 56);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v8 = *(void *)a1 + 64;
  do
  {
    unsigned int v9 = *(unsigned __int8 *)(v6 + 32);
    BOOL v10 = v9 >= a2;
    if (v9 >= a2) {
      OSStatus v11 = (uint64_t *)v6;
    }
    else {
      OSStatus v11 = (uint64_t *)(v6 + 8);
    }
    if (v10) {
      uint64_t v8 = v6;
    }
    uint64_t v6 = *v11;
  }
  while (*v11);
  if (v8 == *(void *)a1 + 64 || *(unsigned __int8 *)(v8 + 32) > a2)
  {
LABEL_12:
    v15[0] = 0;
    v15[1] = 0;
    char v14 = v15;
    LOBYTE(v16) = a2;
    v18[0] = 0;
    v18[1] = 0;
    __int16 v17 = v18;
    sub_1002C39CC((uint64_t)v7, (unsigned __int8 *)&v16, (uint64_t)&v16);
    sub_10003E96C((uint64_t)&v17, v18[0]);
    sub_10003E96C((uint64_t)&v14, v15[0]);
  }
  uint64_t v16 = &v19;
  OSStatus v12 = sub_1002C3CF8(v7, &v19, (uint64_t)&unk_1004BC2F8, &v16);
  LODWORD(v16) = a3;
  BYTE4(v16) = a4;
  return sub_1002C3B04(v12 + 5, (int *)&v16, (uint64_t)&v16);
}

void sub_1002C0FD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  sub_10003E96C(v14, a14);
  sub_10003E96C((uint64_t)&a9, a10);
  _Unwind_Resume(a1);
}

BOOL sub_1002C0FFC(uint64_t a1, int a2)
{
  unsigned __int8 v24 = a2;
  sub_1002C12EC(a1, a2);
  *(void *)uint8_t buf = &v24;
  uint64_t v3 = sub_1002C3CF8((uint64_t **)(a1 + 104), &v24, (uint64_t)&unk_1004BC2F8, (unsigned char **)buf)[5];
  *(void *)uint8_t buf = &v24;
  uint64_t v4 = sub_1002C3CF8((uint64_t **)(a1 + 104), &v24, (uint64_t)&unk_1004BC2F8, (unsigned char **)buf) + 6;
  if (v3 == (uint64_t *)v4)
  {
    int v5 = 1;
  }
  else
  {
    do
    {
      int v5 = *((unsigned char *)v3 + 32) != 0;
      if (!*((unsigned char *)v3 + 32)) {
        break;
      }
      uint64_t v6 = (uint64_t *)v3[1];
      if (v6)
      {
        do
        {
          int v7 = v6;
          uint64_t v6 = (uint64_t *)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          int v7 = (uint64_t *)v3[2];
          BOOL v8 = *v7 == (void)v3;
          uint64_t v3 = v7;
        }
        while (!v8);
      }
      uint64_t v3 = v7;
    }
    while (v7 != (uint64_t *)v4);
  }
  unsigned int v9 = (uint64_t **)(a1 + 128);
  *(void *)uint8_t buf = &v24;
  int v10 = *((unsigned __int8 *)sub_1002C3E84(v9, &v24, (uint64_t)&unk_1004BC2F8, (unsigned __int8 **)buf) + 26);
  if (v10 != v5)
  {
    OSStatus v11 = qword_1008A7C88;
    if (os_log_type_enabled((os_log_t)qword_1008A7C88, OS_LOG_TYPE_DEFAULT))
    {
      OSStatus v12 = &v22;
      if (v23 < 0) {
        OSStatus v12 = v22;
      }
      *(_DWORD *)uint8_t buf = 136315138;
      *(void *)&uint8_t buf[4] = v12;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%s", buf, 0xCu);
    }
    BOOL v13 = (id)qword_1008A7C88;
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      sub_1003A8C10(v24, __p);
      int v14 = v21;
      int v15 = (void **)__p[0];
      OSStatus v25 = &v24;
      uint64_t v16 = sub_1002C3E84(v9, &v24, (uint64_t)&unk_1004BC2F8, &v25);
      __int16 v17 = __p;
      int v18 = *((unsigned __int8 *)v16 + 26);
      if (v14 < 0) {
        __int16 v17 = v15;
      }
      *(_DWORD *)uint8_t buf = 136315650;
      *(void *)&uint8_t buf[4] = v17;
      __int16 v27 = 1024;
      int v28 = v18;
      __int16 v29 = 1024;
      int v30 = v5;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "regulatory,settings,ch,%s,current,%d,newChannelPreference,%d", buf, 0x18u);
      if (v21 < 0) {
        operator delete(__p[0]);
      }
    }

    *(void *)uint8_t buf = &v24;
    *((unsigned char *)sub_1002C3E84(v9, &v24, (uint64_t)&unk_1004BC2F8, (unsigned __int8 **)buf) + 26) = v5;
  }
  if (v23 < 0) {
    operator delete(v22);
  }
  return v10 != v5;
}

void sub_1002C12A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }

  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1002C12EC(uint64_t a1, int a2)
{
  unsigned __int8 v23 = a2;
  sub_100054E28((uint64_t)v20);
  uint64_t v4 = sub_100056628(v21, (uint64_t)"regulatory,settings,NBChannelPref,", 34);
  sub_1003A8C10(a2, __p);
  if ((v19 & 0x80u) == 0) {
    int v5 = __p;
  }
  else {
    int v5 = (void **)__p[0];
  }
  if ((v19 & 0x80u) == 0) {
    uint64_t v6 = v19;
  }
  else {
    uint64_t v6 = (uint64_t)__p[1];
  }
  int v7 = sub_100056628(v4, (uint64_t)v5, v6);
  sub_100056628(v7, (uint64_t)",", 1);
  if ((char)v19 < 0) {
    operator delete(__p[0]);
  }
  sub_100056628(v21, (uint64_t)"Airplane,", 9);
  BOOL v8 = (uint64_t **)(a1 + 104);
  __p[0] = &v23;
  unsigned int v9 = sub_1002C3CF8(v8, &v23, (uint64_t)&unk_1004BC2F8, (unsigned char **)__p);
  __p[0] = &dword_1004BEDC4;
  sub_1001A2910(v9 + 5, &dword_1004BEDC4, (uint64_t)&unk_1004BC2F8, (_DWORD **)__p);
  int v10 = (void *)std::ostream::operator<<();
  sub_100056628(v10, (uint64_t)",", 1);
  sub_100056628(v21, (uint64_t)"RegulatoryArea,", 15);
  __p[0] = &v23;
  OSStatus v11 = sub_1002C3CF8(v8, &v23, (uint64_t)&unk_1004BC2F8, (unsigned char **)__p);
  __p[0] = &unk_1004BEDD0;
  sub_1001A2910(v11 + 5, (int *)&unk_1004BEDD0, (uint64_t)&unk_1004BC2F8, (_DWORD **)__p);
  OSStatus v12 = (void *)std::ostream::operator<<();
  sub_100056628(v12, (uint64_t)",", 1);
  sub_100056628(v21, (uint64_t)"Switch,", 7);
  __p[0] = &v23;
  BOOL v13 = sub_1002C3CF8(v8, &v23, (uint64_t)&unk_1004BC2F8, (unsigned char **)__p);
  __p[0] = &dword_1004BEDC8;
  sub_1001A2910(v13 + 5, &dword_1004BEDC8, (uint64_t)&unk_1004BC2F8, (_DWORD **)__p);
  int v14 = (void *)std::ostream::operator<<();
  sub_100056628(v14, (uint64_t)",", 1);
  sub_100056628(v21, (uint64_t)"RestrictedRegion,", 17);
  __p[0] = &v23;
  int v15 = sub_1002C3CF8(v8, &v23, (uint64_t)&unk_1004BC2F8, (unsigned char **)__p);
  __p[0] = &dword_1004BEDCC;
  sub_1001A2910(v15 + 5, &dword_1004BEDCC, (uint64_t)&unk_1004BC2F8, (_DWORD **)__p);
  std::ostream::operator<<();
  std::stringbuf::str();
  *(void *)((char *)v20
  v21[0] = v16;
  if (v22 < 0) {
    operator delete((void *)v21[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return std::ios::~ios();
}

void sub_1002C16B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
}

BOOL sub_1002C16E0(uint64_t a1, int a2)
{
  unsigned __int8 v21 = a2;
  sub_1002C19A4(a1, a2);
  *(void *)uint8_t buf = &v21;
  uint64_t v3 = sub_1002C3CF8((uint64_t **)(a1 + 56), &v21, (uint64_t)&unk_1004BC2F8, (unsigned char **)buf)[5];
  *(void *)uint8_t buf = &v21;
  uint64_t v4 = sub_1002C3CF8((uint64_t **)(a1 + 56), &v21, (uint64_t)&unk_1004BC2F8, (unsigned char **)buf) + 6;
  if (v3 == (uint64_t *)v4)
  {
    int v5 = 1;
  }
  else
  {
    do
    {
      int v5 = *((unsigned char *)v3 + 32) != 0;
      if (!*((unsigned char *)v3 + 32)) {
        break;
      }
      uint64_t v6 = (uint64_t *)v3[1];
      if (v6)
      {
        do
        {
          int v7 = v6;
          uint64_t v6 = (uint64_t *)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          int v7 = (uint64_t *)v3[2];
          BOOL v8 = *v7 == (void)v3;
          uint64_t v3 = v7;
        }
        while (!v8);
      }
      uint64_t v3 = v7;
    }
    while (v7 != (uint64_t *)v4);
  }
  unsigned int v9 = (uint64_t **)(a1 + 80);
  *(void *)uint8_t buf = &v21;
  int v10 = *((unsigned __int8 *)sub_1002C3E84(v9, &v21, (uint64_t)&unk_1004BC2F8, (unsigned __int8 **)buf) + 26);
  if (v10 != v5)
  {
    OSStatus v11 = qword_1008A7C88;
    if (os_log_type_enabled((os_log_t)qword_1008A7C88, OS_LOG_TYPE_DEFAULT))
    {
      p_p = &__p;
      if (v20 < 0) {
        p_p = __p;
      }
      *(_DWORD *)uint8_t buf = 136315138;
      *(void *)&uint8_t buf[4] = p_p;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%s", buf, 0xCu);
    }
    BOOL v13 = (id)qword_1008A7C88;
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      int v14 = v21;
      char v22 = &v21;
      int v15 = sub_1002C3E84(v9, &v21, (uint64_t)&unk_1004BC2F8, &v22);
      uint64_t v16 = "CH9";
      int v17 = *((unsigned __int8 *)v15 + 26);
      *(_DWORD *)uint8_t buf = 136315650;
      if (v14 == 5) {
        uint64_t v16 = "CH5";
      }
      *(void *)&uint8_t buf[4] = v16;
      __int16 v24 = 1024;
      int v25 = v17;
      __int16 v26 = 1024;
      int v27 = v5;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "regulatory,settings,ch,%s,current,%d,newChannelPreference,%d", buf, 0x18u);
    }

    *(void *)uint8_t buf = &v21;
    *((unsigned char *)sub_1002C3E84(v9, &v21, (uint64_t)&unk_1004BC2F8, (unsigned __int8 **)buf) + 26) = v5;
  }
  if (v20 < 0) {
    operator delete(__p);
  }
  return v10 != v5;
}

void sub_1002C1974(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1002C19A4(uint64_t a1, int a2)
{
  unsigned __int8 v23 = a2;
  sub_100054E28((uint64_t)v20);
  uint64_t v4 = sub_100056628(v21, (uint64_t)"regulatory,settings,UWBChannelPref,", 35);
  sub_1003A8C44(a2, __p);
  if ((v19 & 0x80u) == 0) {
    int v5 = __p;
  }
  else {
    int v5 = (void **)__p[0];
  }
  if ((v19 & 0x80u) == 0) {
    uint64_t v6 = v19;
  }
  else {
    uint64_t v6 = (uint64_t)__p[1];
  }
  int v7 = sub_100056628(v4, (uint64_t)v5, v6);
  sub_100056628(v7, (uint64_t)",", 1);
  if ((char)v19 < 0) {
    operator delete(__p[0]);
  }
  sub_100056628(v21, (uint64_t)"Airplane,", 9);
  BOOL v8 = (uint64_t **)(a1 + 56);
  __p[0] = &v23;
  unsigned int v9 = sub_1002C3CF8(v8, &v23, (uint64_t)&unk_1004BC2F8, (unsigned char **)__p);
  __p[0] = &dword_1004BEDC4;
  sub_1001A2910(v9 + 5, &dword_1004BEDC4, (uint64_t)&unk_1004BC2F8, (_DWORD **)__p);
  int v10 = (void *)std::ostream::operator<<();
  sub_100056628(v10, (uint64_t)",", 1);
  sub_100056628(v21, (uint64_t)"RegulatoryArea,", 15);
  __p[0] = &v23;
  OSStatus v11 = sub_1002C3CF8(v8, &v23, (uint64_t)&unk_1004BC2F8, (unsigned char **)__p);
  __p[0] = &unk_1004BEDD0;
  sub_1001A2910(v11 + 5, (int *)&unk_1004BEDD0, (uint64_t)&unk_1004BC2F8, (_DWORD **)__p);
  OSStatus v12 = (void *)std::ostream::operator<<();
  sub_100056628(v12, (uint64_t)",", 1);
  sub_100056628(v21, (uint64_t)"Switch,", 7);
  __p[0] = &v23;
  BOOL v13 = sub_1002C3CF8(v8, &v23, (uint64_t)&unk_1004BC2F8, (unsigned char **)__p);
  __p[0] = &dword_1004BEDC8;
  sub_1001A2910(v13 + 5, &dword_1004BEDC8, (uint64_t)&unk_1004BC2F8, (_DWORD **)__p);
  int v14 = (void *)std::ostream::operator<<();
  sub_100056628(v14, (uint64_t)",", 1);
  sub_100056628(v21, (uint64_t)"RestrictedRegion,", 17);
  __p[0] = &v23;
  int v15 = sub_1002C3CF8(v8, &v23, (uint64_t)&unk_1004BC2F8, (unsigned char **)__p);
  __p[0] = &dword_1004BEDCC;
  sub_1001A2910(v15 + 5, &dword_1004BEDCC, (uint64_t)&unk_1004BC2F8, (_DWORD **)__p);
  std::ostream::operator<<();
  std::stringbuf::str();
  *(void *)((char *)v20
  v21[0] = v16;
  if (v22 < 0) {
    operator delete((void *)v21[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return std::ios::~ios();
}

void sub_1002C1D68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
}

uint64_t sub_1002C1D98(uint64_t a1)
{
  BOOL v2 = sub_1002C16E0(a1, 5);
  int v3 = v2 | sub_1002C16E0(a1, 9);
  if (sub_1002C0FFC(a1, 1)) {
    int v4 = 256;
  }
  else {
    int v4 = 0;
  }
  return v4 | v3;
}

uint64_t sub_1002C1DF0(uint64_t a1, int a2, int a3)
{
  uint64_t v6 = (std::mutex *)(a1 + 152);
  std::mutex::lock((std::mutex *)(a1 + 152));
  if (*(unsigned __int8 *)(a1 + 36) == a2 && *(unsigned char *)(a1 + 44) && *(_DWORD *)(a1 + 40) == a3)
  {
    int v7 = 0;
  }
  else
  {
    *(unsigned char *)(a1 + 36) = a2;
    *(_DWORD *)(a1 + 40) = a3;
    int v7 = 1;
    *(unsigned char *)(a1 + 44) = 1;
  }
  if (*(unsigned char *)(a1 + 216))
  {
    BOOL v8 = 1;
  }
  else
  {
    unsigned int v9 = qword_1008A7C88;
    if (os_log_type_enabled((os_log_t)qword_1008A7C88, OS_LOG_TYPE_DEFAULT))
    {
      v11[0] = 67109888;
      v11[1] = 0;
      __int16 v12 = 1024;
      int v13 = v7;
      __int16 v14 = 1024;
      int v15 = 0;
      __int16 v16 = 1024;
      int v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "regulatory,settings,setAttachedAccessoryStatus,ignoreUpdates,isUWBChannelSettingChanged,%d,isUWBPowerTableChanged,%d,isNBChannelSettingChanged,%d,isNBPowerTableChanged,%d", (uint8_t *)v11, 0x1Au);
    }
    BOOL v8 = *(unsigned char *)(a1 + 216) != 0;
  }
  std::mutex::unlock(v6);
  if ((v7 & v8) != 0) {
    return 256;
  }
  else {
    return 0;
  }
}

uint64_t sub_1002C1F2C(uint64_t a1, int a2)
{
  int v4 = (std::mutex *)(a1 + 152);
  std::mutex::lock((std::mutex *)(a1 + 152));
  int v5 = qword_1008A7C88;
  if (os_log_type_enabled((os_log_t)qword_1008A7C88, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint8_t buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = a2;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "regulatory,settings,setAirplaneMode,%d", buf, 8u);
  }
  *(unsigned char *)(a1 + 49) = a2;
  *(void *)uint8_t buf = &unk_1004BEDC0;
  uint64_t v6 = sub_1002C3CF8((uint64_t **)(a1 + 56), (unsigned __int8 *)&unk_1004BEDC0, (uint64_t)&unk_1004BC2F8, (unsigned char **)buf);
  *(void *)uint8_t buf = &dword_1004BEDC4;
  *((unsigned char *)sub_1001A2910(v6 + 5, &dword_1004BEDC4, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf) + 32) = a2 ^ 1;
  char v7 = *(unsigned char *)(a1 + 49);
  *(void *)uint8_t buf = &unk_1004BEDC1;
  BOOL v8 = sub_1002C3CF8((uint64_t **)(a1 + 56), (unsigned __int8 *)&unk_1004BEDC1, (uint64_t)&unk_1004BC2F8, (unsigned char **)buf);
  *(void *)uint8_t buf = &dword_1004BEDC4;
  *((unsigned char *)sub_1001A2910(v8 + 5, &dword_1004BEDC4, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf) + 32) = v7 ^ 1;
  char v9 = *(unsigned char *)(a1 + 49);
  *(void *)uint8_t buf = byte_1004BEDC2;
  int v10 = sub_1002C3CF8((uint64_t **)(a1 + 104), byte_1004BEDC2, (uint64_t)&unk_1004BC2F8, (unsigned char **)buf);
  *(void *)uint8_t buf = &dword_1004BEDC4;
  *((unsigned char *)sub_1001A2910(v10 + 5, &dword_1004BEDC4, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf) + 32) = v9 ^ 1;
  unsigned int v11 = sub_1002C1D98(a1);
  int v12 = v11 & 1;
  int v13 = (v11 >> 8) & 1;
  if (!*(unsigned char *)(a1 + 216))
  {
    __int16 v14 = qword_1008A7C88;
    if (os_log_type_enabled((os_log_t)qword_1008A7C88, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint8_t buf = 67109888;
      *(_DWORD *)&uint8_t buf[4] = v12;
      __int16 v18 = 1024;
      int v19 = 0;
      __int16 v20 = 1024;
      int v21 = v13;
      __int16 v22 = 1024;
      int v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "regulatory,settings,setAirplaneMode,ignoreUpdates,isUWBChannelSettingChanged,%d,isUWBPowerTableChanged,%d, isNBChannelSettingChanged,%d,isNBPowerTableChanged,%d", buf, 0x1Au);
    }
  }
  if (v12) {
    int v15 = *(unsigned __int8 *)(a1 + 216);
  }
  else {
    int v15 = 0;
  }
  std::mutex::unlock(v4);
  return v15 | (v13 << 16);
}

void sub_1002C217C(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002C2194(uint64_t a1, int a2)
{
  int v4 = (std::mutex *)(a1 + 152);
  std::mutex::lock((std::mutex *)(a1 + 152));
  if (*(unsigned __int8 *)(a1 + 50) != a2)
  {
    int v5 = qword_1008A7C88;
    if (os_log_type_enabled((os_log_t)qword_1008A7C88, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint8_t buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = a2;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "regulatory,settings,isRestrictedRegion,%d", buf, 8u);
    }
  }
  *(unsigned char *)(a1 + 50) = a2;
  *(void *)uint8_t buf = &unk_1004BEDC0;
  uint64_t v6 = sub_1002C3CF8((uint64_t **)(a1 + 56), (unsigned __int8 *)&unk_1004BEDC0, (uint64_t)&unk_1004BC2F8, (unsigned char **)buf);
  *(void *)uint8_t buf = &dword_1004BEDCC;
  *((unsigned char *)sub_1001A2910(v6 + 5, &dword_1004BEDCC, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf) + 32) = a2;
  char v7 = *(unsigned char *)(a1 + 50);
  *(void *)uint8_t buf = &unk_1004BEDC1;
  BOOL v8 = sub_1002C3CF8((uint64_t **)(a1 + 56), (unsigned __int8 *)&unk_1004BEDC1, (uint64_t)&unk_1004BC2F8, (unsigned char **)buf);
  *(void *)uint8_t buf = &dword_1004BEDCC;
  *((unsigned char *)sub_1001A2910(v8 + 5, &dword_1004BEDCC, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf) + 32) = v7;
  char v9 = *(unsigned char *)(a1 + 50);
  *(void *)uint8_t buf = byte_1004BEDC2;
  int v10 = sub_1002C3CF8((uint64_t **)(a1 + 104), byte_1004BEDC2, (uint64_t)&unk_1004BC2F8, (unsigned char **)buf);
  *(void *)uint8_t buf = &dword_1004BEDCC;
  *((unsigned char *)sub_1001A2910(v10 + 5, &dword_1004BEDCC, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf) + 32) = v9;
  int v11 = sub_1002C1D98(a1) & 1;
  if (!*(unsigned char *)(a1 + 216))
  {
    int v12 = qword_1008A7C88;
    if (os_log_type_enabled((os_log_t)qword_1008A7C88, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint8_t buf = 67109376;
      *(_DWORD *)&uint8_t buf[4] = v11;
      __int16 v16 = 1024;
      int v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "regulatory,settings,setInRestrictedRegion,ignoreUpdates,isChannelSettingChanged,%d,isPowerTableChanged,%d", buf, 0xEu);
    }
  }
  if (v11) {
    uint64_t v13 = *(unsigned __int8 *)(a1 + 216);
  }
  else {
    uint64_t v13 = 0;
  }
  std::mutex::unlock(v4);
  return v13;
}

void sub_1002C23D8(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002C23F0(uint64_t a1, const std::string *a2)
{
  BOOL v2 = a2;
  int v4 = (std::string *)(a1 + 8);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 31);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = *(unsigned __int8 *)(a1 + 31);
  }
  else {
    uint64_t v6 = *(void *)(a1 + 16);
  }
  std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  int v8 = (char)size;
  if ((size & 0x80u) != 0) {
    std::string::size_type size = a2->__r_.__value_.__l.__size_;
  }
  if (v6 != size) {
    goto LABEL_16;
  }
  if (v8 < 0) {
    a2 = (const std::string *)a2->__r_.__value_.__r.__words[0];
  }
  if ((v5 & 0x80) != 0)
  {
    if (memcmp(v4->__r_.__value_.__l.__data_, a2, *(void *)(a1 + 16))) {
      goto LABEL_16;
    }
LABEL_21:
    int v13 = 0;
    int v14 = 0;
    int v15 = 0;
    int v16 = 0;
    return (v15 << 16) | (v16 << 24) | (v13 << 8) | v14;
  }
  if (!*(unsigned char *)(a1 + 31)) {
    goto LABEL_21;
  }
  char v9 = (unsigned __int8 *)(a1 + 8);
  while (*v9 == a2->__r_.__value_.__s.__data_[0])
  {
    ++v9;
    a2 = (const std::string *)((char *)a2 + 1);
    if (!--v5) {
      goto LABEL_21;
    }
  }
LABEL_16:
  int v10 = qword_1008A7C88;
  if (os_log_type_enabled((os_log_t)qword_1008A7C88, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = "__";
    if (*(char *)(a1 + 31) < 0)
    {
      if (*(void *)(a1 + 16)) {
        int v12 = (const char *)v4->__r_.__value_.__r.__words[0];
      }
      else {
        int v12 = "__";
      }
    }
    else if (*(unsigned char *)(a1 + 31))
    {
      int v12 = (const char *)v4;
    }
    else
    {
      int v12 = "__";
    }
    if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
    {
      if (v2->__r_.__value_.__l.__size_) {
        int v11 = (const char *)v2->__r_.__value_.__r.__words[0];
      }
      else {
        int v11 = "__";
      }
    }
    else if (*((unsigned char *)&v2->__r_.__value_.__s + 23))
    {
      int v11 = (const char *)v2;
    }
    *(_DWORD *)uint8_t buf = 136315394;
    *(void *)&uint8_t buf[4] = v12;
    *(_WORD *)&unsigned char buf[12] = 2080;
    *(void *)&buf[14] = v11;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "regulatory,settings,setIsoCountry,current:%s,new:%s", buf, 0x16u);
  }
  __int16 v71 = 0;
  long long v70 = 0u;
  memset(buf, 0, sizeof(buf));
  unsigned __int8 v72 = -1;
  uint64_t v17 = *(void *)a1;
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_100002DE4(__dst, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)std::string __dst = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    std::string::size_type v62 = v2->__r_.__value_.__r.__words[2];
  }
  BOOL v18 = sub_100003274(v17, (uint64_t)__dst, (std::string *)buf);
  BOOL v19 = v18;
  if (SHIBYTE(v62) < 0)
  {
    operator delete(__dst[0]);
    if (v19) {
      goto LABEL_38;
    }
LABEL_50:
    int v13 = 0;
    int v14 = 0;
    goto LABEL_66;
  }
  if (!v18) {
    goto LABEL_50;
  }
LABEL_38:
  std::mutex::lock((std::mutex *)(a1 + 152));
  __int16 v20 = (id)qword_1008A7C88;
  if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
  {
    int v21 = SHIBYTE(v70);
    __int16 v22 = *(unsigned char **)&buf[24];
    int v23 = buf[23];
    __int16 v24 = *(unsigned char **)buf;
    int v25 = v71;
    int v26 = HIBYTE(v71);
    sub_1003CB450(v72, &__p);
    int v27 = buf;
    int v28 = &buf[24];
    if (v23 < 0) {
      int v27 = v24;
    }
    if (v21 < 0) {
      int v28 = v22;
    }
    *(_DWORD *)int v63 = 136316162;
    p_p = &__p;
    if (v68 < 0) {
      p_p = __p;
    }
    *(void *)&v63[4] = v28;
    *(_WORD *)&v63[12] = 2080;
    *(void *)&v63[14] = v27;
    *(_WORD *)&v63[22] = 1024;
    *(_DWORD *)&v63[24] = v25;
    *(_WORD *)&v63[28] = 1024;
    *(_DWORD *)&v63[30] = v26;
    *(_WORD *)&v63[34] = 2080;
    *(void *)&v63[36] = p_p;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "regulatory,settings,countryAvailable,U,iso,%s,name,%s,ch5,%d,ch9,%d,group,%s", v63, 0x2Cu);
    if (v68 < 0) {
      operator delete(__p);
    }
  }

  BOOL v30 = sub_1002C2B7C(a1);
  char v31 = v71;
  *(void *)int v63 = &unk_1004BEDC0;
  __int16 v32 = sub_1002C3CF8((uint64_t **)(a1 + 56), (unsigned __int8 *)&unk_1004BEDC0, (uint64_t)&unk_1004BC2F8, (unsigned char **)v63);
  *(void *)int v63 = &unk_1004BEDD0;
  *((unsigned char *)sub_1001A2910(v32 + 5, (int *)&unk_1004BEDD0, (uint64_t)&unk_1004BC2F8, (_DWORD **)v63) + 32) = v31;
  char v33 = HIBYTE(v71);
  *(void *)int v63 = &unk_1004BEDC1;
  uint64_t v34 = sub_1002C3CF8((uint64_t **)(a1 + 56), (unsigned __int8 *)&unk_1004BEDC1, (uint64_t)&unk_1004BC2F8, (unsigned char **)v63);
  *(void *)int v63 = &unk_1004BEDD0;
  *((unsigned char *)sub_1001A2910(v34 + 5, (int *)&unk_1004BEDD0, (uint64_t)&unk_1004BC2F8, (_DWORD **)v63) + 32) = v33;
  BOOL v35 = sub_1002C16E0(a1, 5);
  BOOL v36 = sub_1002C16E0(a1, 9);
  std::string::operator=(v4, v2);
  if (*(unsigned __int8 *)(a1 + 32) == v72)
  {
    int v37 = 0;
  }
  else
  {
    *(unsigned char *)(a1 + 32) = v72;
    int v37 = 1;
  }
  int v14 = v35 || v36;
  if (sub_1002C2B7C(a1) && v30) {
    int v38 = v37;
  }
  else {
    int v38 = 0;
  }
  if (*(unsigned char *)(a1 + 216))
  {
    int v39 = 1;
  }
  else
  {
    char v40 = qword_1008A7C88;
    if (os_log_type_enabled((os_log_t)qword_1008A7C88, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int v63 = 67109376;
      *(_DWORD *)&v63[4] = v14;
      *(_WORD *)&unsigned char v63[8] = 1024;
      *(_DWORD *)&v63[10] = v38;
      _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEFAULT, "regulatory,settings,setIsoCountry,ignoreUpdates,isChannelSettingChanged,%d,isPowerTableChanged,%d", v63, 0xEu);
    }
    int v39 = *(unsigned __int8 *)(a1 + 216);
  }
  std::mutex::unlock((std::mutex *)(a1 + 152));
  std::string v41 = sub_100006A00();
  if (!v39) {
    int v14 = 0;
  }
  if (v38) {
    int v13 = v39 != 0;
  }
  else {
    int v13 = 0;
  }
  sub_1003CED38((uint64_t)v41, (char *)v4);
LABEL_66:
  memset(v63, 0, sizeof(v63));
  __int16 v64 = -1;
  uint64_t v42 = *(void *)a1;
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_100002DE4(v59, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)unsigned int v59 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    std::string::size_type v60 = v2->__r_.__value_.__r.__words[2];
  }
  BOOL v43 = sub_1003CD168(v42, (uint64_t *)v59, (uint64_t)v63);
  BOOL v44 = v43;
  if (SHIBYTE(v60) < 0)
  {
    operator delete(v59[0]);
    if (v44) {
      goto LABEL_71;
    }
  }
  else if (v43)
  {
LABEL_71:
    unsigned __int16 v45 = (std::mutex *)(a1 + 152);
    std::mutex::lock((std::mutex *)(a1 + 152));
    BOOL v46 = sub_1002C2BE0(a1);
    BOOL v49 = HIBYTE(v64) < 0xFEu && v64 != 254 && v64 != 255;
    std::string __p = byte_1004BEDC2;
    long long v50 = sub_1002C3CF8((uint64_t **)(a1 + 104), byte_1004BEDC2, (uint64_t)&unk_1004BC2F8, (unsigned char **)&__p);
    std::string __p = &unk_1004BEDD0;
    *((unsigned char *)sub_1001A2910(v50 + 5, (int *)&unk_1004BEDD0, (uint64_t)&unk_1004BC2F8, (_DWORD **)&__p) + 32) = v49;
    int v15 = sub_1002C0FFC(a1, 1);
    char v51 = v64;
    if (__PAIR64__(*(unsigned __int8 *)(a1 + 34), *(unsigned __int8 *)(a1 + 33)) == __PAIR64__(v64, HIBYTE(v64)))
    {
      int v52 = 0;
    }
    else
    {
      *(unsigned char *)(a1 + 33) = HIBYTE(v64);
      *(unsigned char *)(a1 + 34) = v51;
      int v52 = 1;
    }
    BOOL v53 = sub_1002C2BE0(a1);
    if (v46) {
      int v54 = v52;
    }
    else {
      int v54 = 1;
    }
    if (v53) {
      int v55 = v54;
    }
    else {
      int v55 = 0;
    }
    if (*(unsigned char *)(a1 + 216))
    {
      BOOL v56 = 1;
    }
    else
    {
      unsigned int v57 = qword_1008A7C88;
      if (os_log_type_enabled((os_log_t)qword_1008A7C88, OS_LOG_TYPE_DEFAULT))
      {
        LODWORD(__p) = 67109376;
        HIDWORD(__p) = v15;
        __int16 v66 = 1024;
        int v67 = v55;
        _os_log_impl((void *)&_mh_execute_header, v57, OS_LOG_TYPE_DEFAULT, "regulatory,settings,setIsoCountry,ignoreUpdates,N,isChannelSettingChanged,%d,isPowerTableChanged,%d", (uint8_t *)&__p, 0xEu);
      }
      BOOL v56 = *(unsigned char *)(a1 + 216) != 0;
    }
    if (v55) {
      int v16 = v56;
    }
    else {
      int v16 = 0;
    }
    std::mutex::unlock(v45);
    goto LABEL_100;
  }
  int v15 = 0;
  int v16 = 0;
LABEL_100:
  if ((char)v63[47] < 0) {
    operator delete(*(void **)&v63[24]);
  }
  if ((char)v63[23] < 0) {
    operator delete(*(void **)v63);
  }
  if (SHIBYTE(v70) < 0) {
    operator delete(*(void **)&buf[24]);
  }
  if ((buf[23] & 0x80000000) != 0) {
    operator delete(*(void **)buf);
  }
  return (v15 << 16) | (v16 << 24) | (v13 << 8) | v14;
}

void sub_1002C2AE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::mutex *a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,char a25)
{
  std::mutex::unlock(a10);
  sub_1001F8580(v26 - 160);
  _Unwind_Resume(a1);
}

BOOL sub_1002C2B7C(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 80);
  BOOL v2 = (void *)(a1 + 88);
  if (v1 == (void *)(a1 + 88)) {
    return 0;
  }
  do
  {
    BOOL result = *((unsigned char *)v1 + 26) != 0;
    if (*((unsigned char *)v1 + 26)) {
      break;
    }
    int v4 = (void *)v1[1];
    if (v4)
    {
      do
      {
        uint64_t v5 = v4;
        int v4 = (void *)*v4;
      }
      while (v4);
    }
    else
    {
      do
      {
        uint64_t v5 = (void *)v1[2];
        BOOL v6 = *v5 == (void)v1;
        uint64_t v1 = v5;
      }
      while (!v6);
    }
    uint64_t v1 = v5;
  }
  while (v5 != v2);
  return result;
}

BOOL sub_1002C2BE0(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 128);
  BOOL v2 = (void *)(a1 + 136);
  if (v1 == (void *)(a1 + 136)) {
    return 0;
  }
  do
  {
    BOOL result = *((unsigned char *)v1 + 26) != 0;
    if (*((unsigned char *)v1 + 26)) {
      break;
    }
    int v4 = (void *)v1[1];
    if (v4)
    {
      do
      {
        uint64_t v5 = v4;
        int v4 = (void *)*v4;
      }
      while (v4);
    }
    else
    {
      do
      {
        uint64_t v5 = (void *)v1[2];
        BOOL v6 = *v5 == (void)v1;
        uint64_t v1 = v5;
      }
      while (!v6);
    }
    uint64_t v1 = v5;
  }
  while (v5 != v2);
  return result;
}

uint64_t sub_1002C2C44(uint64_t a1)
{
  BOOL v2 = (std::mutex *)(a1 + 152);
  std::mutex::lock((std::mutex *)(a1 + 152));
  if (*(char *)(a1 + 31) < 0)
  {
    **(unsigned char **)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
  }
  else
  {
    *(unsigned char *)(a1 + 8) = 0;
    *(unsigned char *)(a1 + 31) = 0;
  }
  *(void *)uint8_t buf = &unk_1004BEDC0;
  int v3 = sub_1002C3CF8((uint64_t **)(a1 + 56), (unsigned __int8 *)&unk_1004BEDC0, (uint64_t)&unk_1004BC2F8, (unsigned char **)buf);
  *(void *)uint8_t buf = &unk_1004BEDD0;
  *((unsigned char *)sub_1001A2910(v3 + 5, (int *)&unk_1004BEDD0, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf) + 32) = 0;
  *(void *)uint8_t buf = &unk_1004BEDC1;
  int v4 = sub_1002C3CF8((uint64_t **)(a1 + 56), (unsigned __int8 *)&unk_1004BEDC1, (uint64_t)&unk_1004BC2F8, (unsigned char **)buf);
  *(void *)uint8_t buf = &unk_1004BEDD0;
  *((unsigned char *)sub_1001A2910(v4 + 5, (int *)&unk_1004BEDD0, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf) + 32) = 0;
  *(void *)uint8_t buf = byte_1004BEDC2;
  uint64_t v5 = sub_1002C3CF8((uint64_t **)(a1 + 104), byte_1004BEDC2, (uint64_t)&unk_1004BC2F8, (unsigned char **)buf);
  *(void *)uint8_t buf = &unk_1004BEDD0;
  *((unsigned char *)sub_1001A2910(v5 + 5, (int *)&unk_1004BEDD0, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf) + 32) = 0;
  unsigned int v6 = sub_1002C1D98(a1);
  if (*(unsigned char *)(a1 + 216))
  {
    BOOL v7 = 1;
  }
  else
  {
    int v8 = qword_1008A7C88;
    if (os_log_type_enabled((os_log_t)qword_1008A7C88, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint8_t buf = 67109376;
      *(_DWORD *)&uint8_t buf[4] = v6 & 1;
      __int16 v12 = 1024;
      int v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "regulatory,settings,clearIsoCountry,isChannelSettingChanged,%d,isPowerTableChanged,%d", buf, 0xEu);
    }
    BOOL v7 = *(unsigned char *)(a1 + 216) != 0;
  }
  BOOL v9 = (v6 & 1) != 0 && v7;
  std::mutex::unlock(v2);
  return v9 & 0xFFFEFFFF | (((v6 >> 8) & 1) << 16);
}

void sub_1002C2E58(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002C2E70(uint64_t a1)
{
  if (sub_1002C2B7C(a1)) {
    return 1;
  }
  std::string __p = 0;
  BOOL v35 = 0;
  BOOL v36 = 0;
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v4 = a1 + 64;
  uint64_t v3 = v5;
  if (!v5) {
    goto LABEL_52;
  }
  uint64_t v6 = v4;
  do
  {
    unsigned int v7 = *(unsigned __int8 *)(v3 + 32);
    BOOL v8 = v7 >= 9;
    if (v7 >= 9) {
      BOOL v9 = (uint64_t *)v3;
    }
    else {
      BOOL v9 = (uint64_t *)(v3 + 8);
    }
    if (v8) {
      uint64_t v6 = v3;
    }
    uint64_t v3 = *v9;
  }
  while (*v9);
  if (v6 == v4 || *(unsigned __int8 *)(v6 + 32) >= 0xAu) {
LABEL_52:
  }
    __assert_rtn("uwbState", "PRRegulatorySettings.mm", 391, "ch9Preferences != fUWBChannelPref.end()");
  sub_1002C3F48((uint64_t *)&v32, v6 + 40);
  int v10 = v32;
  if (v32 != v33)
  {
    do
    {
      if (!*((unsigned char *)v10 + 32))
      {
        int v11 = v35;
        if (v35 >= v36)
        {
          int v13 = (char *)__p;
          uint64_t v14 = (v35 - (unsigned char *)__p) >> 2;
          unint64_t v15 = v14 + 1;
          if ((unint64_t)(v14 + 1) >> 62) {
            sub_1000267C4();
          }
          uint64_t v16 = v36 - (unsigned char *)__p;
          if ((v36 - (unsigned char *)__p) >> 1 > v15) {
            unint64_t v15 = v16 >> 1;
          }
          if ((unint64_t)v16 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v17 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v17 = v15;
          }
          if (v17)
          {
            BOOL v18 = (char *)sub_10003B54C((uint64_t)&v36, v17);
            int v13 = (char *)__p;
            int v11 = v35;
          }
          else
          {
            BOOL v18 = 0;
          }
          BOOL v19 = &v18[4 * v14];
          *(_DWORD *)BOOL v19 = *((_DWORD *)v10 + 7);
          __int16 v12 = v19 + 4;
          while (v11 != v13)
          {
            int v20 = *((_DWORD *)v11 - 1);
            v11 -= 4;
            *((_DWORD *)v19 - 1) = v20;
            v19 -= 4;
          }
          std::string __p = v19;
          BOOL v35 = v12;
          BOOL v36 = &v18[4 * v17];
          if (v13) {
            operator delete(v13);
          }
        }
        else
        {
          *(_DWORD *)BOOL v35 = *((_DWORD *)v10 + 7);
          __int16 v12 = v11 + 4;
        }
        BOOL v35 = v12;
      }
      int v21 = v10[1];
      if (v21)
      {
        do
        {
          __int16 v22 = (void **)v21;
          int v21 = (void *)*v21;
        }
        while (v21);
      }
      else
      {
        do
        {
          __int16 v22 = (void **)v10[2];
          BOOL v25 = *v22 == v10;
          int v10 = v22;
        }
        while (!v25);
      }
      int v10 = v22;
    }
    while (v22 != v33);
  }
  int v23 = (unsigned int *)__p;
  __int16 v24 = (char *)__p + 4;
  BOOL v25 = __p == v35 || v24 == v35;
  if (!v25)
  {
    int v26 = *(_DWORD *)__p;
    int v27 = (char *)__p + 4;
    do
    {
      int v29 = *(_DWORD *)v27;
      v27 += 4;
      int v28 = v29;
      BOOL v30 = v26 < v29;
      if (v26 <= v29) {
        int v26 = v28;
      }
      if (v30) {
        int v23 = (unsigned int *)v24;
      }
      __int16 v24 = v27;
    }
    while (v27 != v35);
  }
  uint64_t v31 = *v23;
  sub_10003E96C((uint64_t)&v32, v33[0]);
  if (__p)
  {
    BOOL v35 = (char *)__p;
    operator delete(__p);
  }
  return v31 << 32;
}

void sub_1002C30A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002C30DC(uint64_t a1)
{
  if (sub_1002C2BE0(a1)) {
    return 1;
  }
  std::string __p = 0;
  char v33 = 0;
  uint64_t v34 = 0;
  uint64_t v5 = *(void *)(a1 + 112);
  uint64_t v4 = a1 + 112;
  uint64_t v3 = v5;
  if (!v5) {
    goto LABEL_51;
  }
  uint64_t v6 = v4;
  do
  {
    if (*(unsigned char *)(v3 + 32)) {
      unsigned int v7 = (uint64_t *)v3;
    }
    else {
      unsigned int v7 = (uint64_t *)(v3 + 8);
    }
    if (*(unsigned char *)(v3 + 32)) {
      uint64_t v6 = v3;
    }
    uint64_t v3 = *v7;
  }
  while (*v7);
  if (v6 == v4 || *(unsigned __int8 *)(v6 + 32) >= 2u) {
LABEL_51:
  }
    __assert_rtn("nbState", "PRRegulatorySettings.mm", 430, "unii3Preferences != fNBChannelPref.end()");
  sub_1002C3F48((uint64_t *)&v30, v6 + 40);
  BOOL v8 = v30;
  if (v30 != v31)
  {
    do
    {
      if (!*((unsigned char *)v8 + 32))
      {
        BOOL v9 = v33;
        if (v33 >= v34)
        {
          int v11 = (char *)__p;
          uint64_t v12 = (v33 - (unsigned char *)__p) >> 2;
          unint64_t v13 = v12 + 1;
          if ((unint64_t)(v12 + 1) >> 62) {
            sub_1000267C4();
          }
          uint64_t v14 = v34 - (unsigned char *)__p;
          if ((v34 - (unsigned char *)__p) >> 1 > v13) {
            unint64_t v13 = v14 >> 1;
          }
          if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v15 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v15 = v13;
          }
          if (v15)
          {
            uint64_t v16 = (char *)sub_10003B54C((uint64_t)&v34, v15);
            int v11 = (char *)__p;
            BOOL v9 = v33;
          }
          else
          {
            uint64_t v16 = 0;
          }
          unint64_t v17 = &v16[4 * v12];
          *(_DWORD *)unint64_t v17 = *((_DWORD *)v8 + 7);
          int v10 = v17 + 4;
          while (v9 != v11)
          {
            int v18 = *((_DWORD *)v9 - 1);
            v9 -= 4;
            *((_DWORD *)v17 - 1) = v18;
            v17 -= 4;
          }
          std::string __p = v17;
          char v33 = v10;
          uint64_t v34 = &v16[4 * v15];
          if (v11) {
            operator delete(v11);
          }
        }
        else
        {
          *(_DWORD *)char v33 = *((_DWORD *)v8 + 7);
          int v10 = v9 + 4;
        }
        char v33 = v10;
      }
      BOOL v19 = v8[1];
      if (v19)
      {
        do
        {
          int v20 = (void **)v19;
          BOOL v19 = (void *)*v19;
        }
        while (v19);
      }
      else
      {
        do
        {
          int v20 = (void **)v8[2];
          BOOL v23 = *v20 == v8;
          BOOL v8 = v20;
        }
        while (!v23);
      }
      BOOL v8 = v20;
    }
    while (v20 != v31);
  }
  int v21 = (unsigned int *)__p;
  __int16 v22 = (char *)__p + 4;
  BOOL v23 = __p == v33 || v22 == v33;
  if (!v23)
  {
    int v24 = *(_DWORD *)__p;
    BOOL v25 = (char *)__p + 4;
    do
    {
      int v27 = *(_DWORD *)v25;
      v25 += 4;
      int v26 = v27;
      BOOL v28 = v24 < v27;
      if (v24 <= v27) {
        int v24 = v26;
      }
      if (v28) {
        int v21 = (unsigned int *)v22;
      }
      __int16 v22 = v25;
    }
    while (v25 != v33);
  }
  uint64_t v29 = *v21;
  sub_10003E96C((uint64_t)&v30, v31[0]);
  if (__p)
  {
    char v33 = (char *)__p;
    operator delete(__p);
  }
  return v29 << 32;
}

void sub_1002C3310(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002C3348(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (std::mutex *)(a1 + 152);
  std::mutex::lock((std::mutex *)(a1 + 152));
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 4) = 0;
  *(unsigned char *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 12) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 20) = 0;
  *(unsigned char *)(a2 + 24) = 0;
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0;
  if (!*(unsigned char *)(a1 + 216))
  {
    uint64_t v5 = qword_1008A7C88;
    if (os_log_type_enabled((os_log_t)qword_1008A7C88, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint8_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "regulatory,settings,getRegulatorySettingsLocked", buf, 2u);
    }
  }
  *(unsigned char *)(a1 + 216) = 1;
  if (sub_1003CED98())
  {
    uint64_t v6 = qword_1008A7C88;
    if (os_log_type_enabled((os_log_t)qword_1008A7C88, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "PRRegulatorySettings: bypassing regulatory compliance requirements via defaults write.", v10, 2u);
    }
    *(_WORD *)a2 = 257;
    *(unsigned char *)(a2 + 4) = 1;
    *(unsigned char *)(a2 + 8) = 0;
    *(unsigned char *)(a2 + 12) = 0;
    *(unsigned char *)(a2 + 16) = 1;
    *(unsigned char *)(a2 + 20) = 0;
    *(unsigned char *)(a2 + 24) = 0;
    std::string::assign((std::string *)(a2 + 32), "US");
    int v7 = 0;
    *(unsigned char *)(a2 + 56) = 0;
    *(_WORD *)(a2 + 58) = 0;
  }
  else
  {
    *(unsigned char *)a2 = sub_1002C2B7C(a1);
    *(unsigned char *)(a2 + 1) = sub_1002C2BE0(a1);
    *(void *)(a2 + 4) = sub_1002C2E70(a1);
    *(_DWORD *)(a2 + 12) = v8;
    *(void *)(a2 + 16) = sub_1002C30DC(a1);
    *(_DWORD *)(a2 + 24) = v9;
    std::string::operator=((std::string *)(a2 + 32), (const std::string *)(a1 + 8));
    *(unsigned char *)(a2 + 56) = *(unsigned char *)(a1 + 32);
    *(_WORD *)(a2 + 58) = *(unsigned __int8 *)(a1 + 36);
    int v7 = *(unsigned __int8 *)(a1 + 44);
    if (*(unsigned char *)(a1 + 44)) {
      int v7 = *(_DWORD *)(a1 + 40);
    }
  }
  *(_DWORD *)(a2 + 60) = v7;
  std::mutex::unlock(v4);
}

void sub_1002C3500(_Unwind_Exception *a1)
{
  if (*(char *)(v2 + 55) < 0) {
    operator delete(*v3);
  }
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

id sub_1002C352C(uint64_t a1)
{
  uint64_t v2 = (std::mutex *)(a1 + 152);
  std::mutex::lock((std::mutex *)(a1 + 152));
  uint64_t v3 = objc_opt_new();
  uint64_t v4 = (void *)(a1 + 8);
  if (*(char *)(a1 + 31) < 0) {
    uint64_t v4 = (void *)*v4;
  }
  uint64_t v5 = v30;
  sub_1003CB450(*(unsigned char *)(a1 + 32), v30);
  if (v31 < 0) {
    uint64_t v5 = (void **)v30[0];
  }
  sub_1003CB4C0(*(unsigned char *)(a1 + 33), v28);
  int v6 = v29;
  int v7 = (void **)v28[0];
  sub_1003CB488(*(unsigned char *)(a1 + 34), __p);
  int v8 = v28;
  if (v6 < 0) {
    int v8 = v7;
  }
  if (v27 >= 0) {
    int v9 = __p;
  }
  else {
    int v9 = (void **)__p[0];
  }
  int v10 = +[NSString stringWithFormat:@"Country: %s. UWB-reg group: %s. NB-reg group: %s. NB-SAR group: %s. Rose ready: %d", v4, v5, v8, v9, *(unsigned __int8 *)(a1 + 216)];
  [v3 addObject:v10];

  if (v27 < 0) {
    operator delete(__p[0]);
  }
  if (v29 < 0) {
    operator delete(v28[0]);
  }
  if (v31 < 0) {
    operator delete(v30[0]);
  }
  uint64_t v11 = *(unsigned __int8 *)(a1 + 36);
  sub_10039D144();
  if (v31 >= 0) {
    uint64_t v12 = v30;
  }
  else {
    uint64_t v12 = (void **)v30[0];
  }
  unint64_t v13 = +[NSString stringWithFormat:@"Accessory: %d (%s). Switch: %d. Airplane mode: %d. Region allowed: %d", v11, v12, *(unsigned __int8 *)(a1 + 48), *(unsigned __int8 *)(a1 + 49), *(unsigned __int8 *)(a1 + 50)];
  [v3 addObject:v13];

  if (v31 < 0) {
    operator delete(v30[0]);
  }
  LOBYTE(__p[0]) = 5;
  v30[0] = __p;
  uint64_t v14 = *((unsigned __int8 *)sub_1002C3E84((uint64_t **)(a1 + 80), (unsigned __int8 *)__p, (uint64_t)&unk_1004BC2F8, (unsigned __int8 **)v30)+ 26);
  unsigned __int8 v25 = 9;
  v30[0] = &v25;
  uint64_t v15 = *((unsigned __int8 *)sub_1002C3E84((uint64_t **)(a1 + 80), &v25, (uint64_t)&unk_1004BC2F8, (unsigned __int8 **)v30)+ 26);
  unsigned __int8 v24 = 1;
  v30[0] = &v24;
  uint64_t v16 = +[NSString stringWithFormat:@"Channel state: CH5 %d, CH9 %d, UNII-3 %d. Preference strings:", v14, v15, *((unsigned __int8 *)sub_1002C3E84((uint64_t **)(a1 + 128), &v24, (uint64_t)&unk_1004BC2F8, (unsigned __int8 **)v30)+ 26)];
  [v3 addObject:v16];

  sub_1002C19A4(a1, 5);
  if (v31 >= 0) {
    unint64_t v17 = v30;
  }
  else {
    unint64_t v17 = (void **)v30[0];
  }
  int v18 = +[NSString stringWithFormat:@"    %s", v17];
  [v3 addObject:v18];

  if (v31 < 0) {
    operator delete(v30[0]);
  }
  sub_1002C19A4(a1, 9);
  if (v31 >= 0) {
    BOOL v19 = v30;
  }
  else {
    BOOL v19 = (void **)v30[0];
  }
  int v20 = +[NSString stringWithFormat:@"    %s", v19];
  [v3 addObject:v20];

  if (v31 < 0) {
    operator delete(v30[0]);
  }
  sub_1002C12EC(a1, 1);
  if (v31 >= 0) {
    int v21 = v30;
  }
  else {
    int v21 = (void **)v30[0];
  }
  __int16 v22 = +[NSString stringWithFormat:@"    %s", v21];
  [v3 addObject:v22];

  if (v31 < 0) {
    operator delete(v30[0]);
  }
  std::mutex::unlock(v2);

  return v3;
}

void sub_1002C3908(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (a33 < 0) {
    operator delete(__p);
  }

  std::mutex::unlock(v33);
  _Unwind_Resume(a1);
}

uint64_t *sub_1002C39CC(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t **)(a1 + 8);
  uint64_t v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    unsigned int v6 = *a2;
    while (1)
    {
      while (1)
      {
        int v7 = (uint64_t **)v4;
        unsigned int v8 = *((unsigned __int8 *)v4 + 32);
        if (v6 >= v8) {
          break;
        }
        uint64_t v4 = *v7;
        uint64_t v5 = v7;
        if (!*v7) {
          goto LABEL_10;
        }
      }
      if (v8 >= v6) {
        break;
      }
      uint64_t v4 = v7[1];
      if (!v4)
      {
        uint64_t v5 = v7 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    int v7 = (uint64_t **)(a1 + 8);
LABEL_10:
    sub_1002C3A80(a1, a3, (uint64_t)&v10);
    sub_100026D98((uint64_t **)a1, (uint64_t)v7, v5, v10);
    return v10;
  }
  return (uint64_t *)v7;
}

unsigned char *sub_1002C3A80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  BOOL result = operator new(0x40uLL);
  *(void *)a3 = result;
  *(void *)(a3 + 8) = v5;
  result[32] = *(unsigned char *)a2;
  int v7 = (void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 16);
  *((void *)result + 5) = *(void *)(a2 + 8);
  *((void *)result + 6) = v8;
  int v9 = result + 48;
  uint64_t v10 = *(void *)(a2 + 24);
  *((void *)result + 7) = v10;
  if (v10)
  {
    *(void *)(v8 + 16) = v9;
    *(void *)(a2 + 8) = v7;
    *int v7 = 0;
    *(void *)(a2 + 24) = 0;
  }
  else
  {
    *((void *)result + 5) = v9;
  }
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

uint64_t **sub_1002C3B04(uint64_t **a1, int *a2, uint64_t a3)
{
  unsigned int v6 = a1 + 1;
  uint64_t v5 = a1[1];
  if (v5)
  {
    int v7 = *a2;
    while (1)
    {
      while (1)
      {
        uint64_t v8 = (uint64_t **)v5;
        int v9 = *((_DWORD *)v5 + 7);
        if (v7 >= v9) {
          break;
        }
        uint64_t v5 = *v8;
        unsigned int v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (v9 >= v7) {
        break;
      }
      uint64_t v5 = v8[1];
      if (!v5)
      {
        unsigned int v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    uint64_t v8 = a1 + 1;
LABEL_10:
    uint64_t v10 = operator new(0x28uLL);
    v10[7] = *(_DWORD *)a3;
    *((unsigned char *)v10 + 32) = *(unsigned char *)(a3 + 4);
    sub_100026D98(a1, (uint64_t)v8, v6, (uint64_t *)v10);
    return (uint64_t **)v10;
  }
  return v8;
}

uint64_t **sub_1002C3BC8(uint64_t a1, int a2, char a3)
{
  unsigned __int8 v16 = 1;
  uint64_t v5 = *(void *)(*(void *)a1 + 112);
  unsigned int v6 = (uint64_t **)(*(void *)a1 + 104);
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v7 = *(void *)a1 + 112;
  do
  {
    if (*(unsigned char *)(v5 + 32)) {
      uint64_t v8 = (uint64_t *)v5;
    }
    else {
      uint64_t v8 = (uint64_t *)(v5 + 8);
    }
    if (*(unsigned char *)(v5 + 32)) {
      uint64_t v7 = v5;
    }
    uint64_t v5 = *v8;
  }
  while (*v8);
  if (v7 == *(void *)a1 + 112 || *(unsigned __int8 *)(v7 + 32) >= 2u)
  {
LABEL_11:
    v12[0] = 0;
    v12[1] = 0;
    uint64_t v11 = v12;
    LOBYTE(v13) = 1;
    v15[0] = 0;
    v15[1] = 0;
    uint64_t v14 = v15;
    sub_1002C39CC((uint64_t)v6, (unsigned __int8 *)&v13, (uint64_t)&v13);
    sub_10003E96C((uint64_t)&v14, v15[0]);
    sub_10003E96C((uint64_t)&v11, v12[0]);
  }
  unint64_t v13 = &v16;
  int v9 = sub_1002C3CF8(v6, &v16, (uint64_t)&unk_1004BC2F8, &v13);
  LODWORD(v13) = a2;
  BYTE4(v13) = a3;
  return sub_1002C3B04(v9 + 5, (int *)&v13, (uint64_t)&v13);
}

void sub_1002C3CD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  sub_10003E96C(v14, a14);
  sub_10003E96C((uint64_t)&a9, a10);
  _Unwind_Resume(a1);
}

uint64_t **sub_1002C3CF8(uint64_t **a1, unsigned __int8 *a2, uint64_t a3, unsigned char **a4)
{
  uint64_t v7 = a1 + 1;
  unsigned int v6 = a1[1];
  if (v6)
  {
    unsigned int v8 = *a2;
    while (1)
    {
      while (1)
      {
        int v9 = (uint64_t **)v6;
        unsigned int v10 = *((unsigned __int8 *)v6 + 32);
        if (v8 >= v10) {
          break;
        }
        unsigned int v6 = *v9;
        uint64_t v7 = v9;
        if (!*v9) {
          goto LABEL_10;
        }
      }
      if (v10 >= v8) {
        break;
      }
      unsigned int v6 = v9[1];
      if (!v6)
      {
        uint64_t v7 = v9 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    int v9 = a1 + 1;
LABEL_10:
    uint64_t v11 = operator new(0x40uLL);
    v11[32] = **a4;
    *((void *)v11 + 7) = 0;
    *((void *)v11 + 6) = 0;
    *((void *)v11 + 5) = v11 + 48;
    sub_100026D98(a1, (uint64_t)v9, v7, (uint64_t *)v11);
    return (uint64_t **)v11;
  }
  return v9;
}

uint64_t **sub_1002C3DC8(uint64_t **a1, unsigned __int8 *a2, _WORD *a3)
{
  unsigned int v6 = a1 + 1;
  uint64_t v5 = a1[1];
  if (v5)
  {
    unsigned int v7 = *a2;
    while (1)
    {
      while (1)
      {
        unsigned int v8 = (uint64_t **)v5;
        unsigned int v9 = *((unsigned __int8 *)v5 + 25);
        if (v7 >= v9) {
          break;
        }
        uint64_t v5 = *v8;
        unsigned int v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (v9 >= v7) {
        break;
      }
      uint64_t v5 = v8[1];
      if (!v5)
      {
        unsigned int v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    unsigned int v8 = a1 + 1;
LABEL_10:
    unsigned int v10 = (char *)operator new(0x20uLL);
    *(_WORD *)(v10 + 25) = *a3;
    sub_100026D98(a1, (uint64_t)v8, v6, (uint64_t *)v10);
    return (uint64_t **)v10;
  }
  return v8;
}

uint64_t **sub_1002C3E84(uint64_t **a1, unsigned __int8 *a2, uint64_t a3, unsigned __int8 **a4)
{
  unsigned int v7 = a1 + 1;
  unsigned int v6 = a1[1];
  if (v6)
  {
    unsigned int v8 = *a2;
    while (1)
    {
      while (1)
      {
        unsigned int v9 = (uint64_t **)v6;
        unsigned int v10 = *((unsigned __int8 *)v6 + 25);
        if (v8 >= v10) {
          break;
        }
        unsigned int v6 = *v9;
        unsigned int v7 = v9;
        if (!*v9) {
          goto LABEL_10;
        }
      }
      if (v10 >= v8) {
        break;
      }
      unsigned int v6 = v9[1];
      if (!v6)
      {
        unsigned int v7 = v9 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    unsigned int v9 = a1 + 1;
LABEL_10:
    uint64_t v11 = (char *)operator new(0x20uLL);
    *(_WORD *)(v11 + 25) = **a4;
    sub_100026D98(a1, (uint64_t)v9, v7, (uint64_t *)v11);
    return (uint64_t **)v11;
  }
  return v9;
}

uint64_t *sub_1002C3F48(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  sub_1002C3FA0(a1, *(int **)a2, (int *)(a2 + 8));
  return a1;
}

void sub_1002C3F88(_Unwind_Exception *a1)
{
  sub_10003E96C(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_1002C3FA0(uint64_t *result, int *a2, int *a3)
{
  if (a2 != a3)
  {
    uint64_t v4 = a2;
    uint64_t v5 = (uint64_t **)result;
    unsigned int v6 = result + 1;
    do
    {
      BOOL result = sub_1001A00BC(v5, v6, v4 + 7, (uint64_t *)(v4 + 7));
      unsigned int v7 = (int *)*((void *)v4 + 1);
      if (v7)
      {
        do
        {
          unsigned int v8 = v7;
          unsigned int v7 = *(int **)v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          unsigned int v8 = (int *)*((void *)v4 + 2);
          BOOL v9 = *(void *)v8 == (void)v4;
          uint64_t v4 = v8;
        }
        while (!v9);
      }
      uint64_t v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

void sub_1002C402C()
{
  qword_1008A7C88 = (uint64_t)os_log_create("com.apple.nearbyd", "Regulatory");
}

void sub_1002C4104(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002C43F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id a25)
{
  _Block_object_dispose(&a20, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1002C4458(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1002C4468(uint64_t a1)
{
}

void sub_1002C4470(uint64_t a1, void *a2)
{
}

uint64_t sub_1002C4480(uint64_t result)
{
  return result;
}

void sub_1002C44DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void **sub_1002C451C(void **a1)
{
  uint64_t v3 = a1;
  sub_1002C5AC0(&v3);
  return a1;
}

uint64_t sub_1002C4554(uint64_t a1)
{
  return a1;
}

dispatch_queue_t *sub_1002C4580(dispatch_queue_t *a1)
{
  *a1 = dispatch_queue_create("com.apple.nearbyd.ota.queue", 0);
  uint64_t v2 = +[BGSystemTaskScheduler sharedScheduler];
  [v2 deregisterTaskWithIdentifier:@"com.apple.nearbyd.ota.task"];

  uint64_t v3 = +[BGSystemTaskScheduler sharedScheduler];
  dispatch_queue_t v4 = *a1;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  _OWORD v6[2] = sub_1002C4698;
  v6[3] = &unk_10085E338;
  void v6[4] = a1;
  [v3 registerForTaskWithIdentifier:@"com.apple.nearbyd.ota.task" usingQueue:v4 launchHandler:v6];

  dispatch_async(*a1, &stru_10085E358);
  sub_1002C4954(a1);
  return a1;
}

void sub_1002C4674(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002C4698(uint64_t a1, void *a2)
{
}

void sub_1002C46A0(dispatch_queue_t *a1, void *a2)
{
  id v3 = a2;
  dispatch_queue_t v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint8_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#ota,start to query ota files", buf, 2u);
  }
  *(void *)uint8_t buf = 0;
  int v18 = buf;
  uint64_t v19 = 0x2020000000;
  char v20 = 0;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  _DWORD v16[2] = sub_1002C4E14;
  v16[3] = &unk_10085E380;
  v16[4] = buf;
  [v3 setExpirationHandler:v16];
  uint64_t v6 = qword_1008A7D80;
  if ((_UNKNOWN *)qword_1008A7D80 != &unk_1008A7D88)
  {
    *(void *)&long long v5 = 136315138;
    long long v15 = v5;
    while (1)
    {
      int v7 = v18[24];
      unsigned int v8 = qword_1008ABDE0;
      BOOL v9 = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT);
      if (v7) {
        break;
      }
      if (v9)
      {
        uint64_t v10 = v6 + 32;
        if (*(char *)(v6 + 55) < 0) {
          uint64_t v10 = *(void *)(v6 + 32);
        }
        *(_DWORD *)int v21 = v15;
        uint64_t v22 = v10;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#ota,query %s", v21, 0xCu);
      }
      sub_1002C4E28(a1, v6 + 32, (void *)(v6 + 56));
      uint64_t v11 = *(void **)(v6 + 8);
      if (v11)
      {
        do
        {
          uint64_t v12 = v11;
          uint64_t v11 = (void *)*v11;
        }
        while (v11);
      }
      else
      {
        do
        {
          uint64_t v12 = *(void **)(v6 + 16);
          BOOL v13 = *v12 == v6;
          uint64_t v6 = (uint64_t)v12;
        }
        while (!v13);
      }
      uint64_t v6 = (uint64_t)v12;
      if (v12 == (void *)&unk_1008A7D88) {
        goto LABEL_19;
      }
    }
    if (v9)
    {
      *(_WORD *)int v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#ota,task expiration, terminate file query", v21, 2u);
    }
  }
LABEL_19:
  [v3 setTaskCompleted:v15];
  uint64_t v14 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "#ota,task complete", v21, 2u);
  }
  _Block_object_dispose(buf, 8);
}

void sub_1002C492C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);

  _Unwind_Resume(a1);
}

void sub_1002C4954(NSObject **a1)
{
  uint64_t v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint8_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#ota,query configurable parameters on startup", buf, 2u);
  }
  id v3 = *a1;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1002C4B0C;
  block[3] = &unk_1008466D8;
  void block[4] = a1;
  dispatch_async(v3, block);
}

id *sub_1002C4A18(id *a1)
{
  uint64_t v2 = +[BGSystemTaskScheduler sharedScheduler];
  unsigned int v3 = [v2 deregisterTaskWithIdentifier:@"com.apple.nearbyd.ota.task"];

  dispatch_queue_t v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    v6[0] = 67109120;
    v6[1] = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#ota,deregister %d in destructor", (uint8_t *)v6, 8u);
  }

  return a1;
}

void sub_1002C4AFC(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100012C10(a1);
}

void sub_1002C4B0C(uint64_t a1)
{
}

void sub_1002C4B14(dispatch_queue_t *a1)
{
  uint64_t v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#ota,query all files", v7, 2u);
  }
  dispatch_assert_queue_V2(*a1);
  unsigned int v3 = (void *)qword_1008A7D80;
  if ((_UNKNOWN *)qword_1008A7D80 != &unk_1008A7D88)
  {
    do
    {
      sub_1002C4E28(a1, (uint64_t)(v3 + 4), v3 + 7);
      dispatch_queue_t v4 = (void *)v3[1];
      if (v4)
      {
        do
        {
          long long v5 = v4;
          dispatch_queue_t v4 = (void *)*v4;
        }
        while (v4);
      }
      else
      {
        do
        {
          long long v5 = (void *)v3[2];
          BOOL v6 = *v5 == (void)v3;
          unsigned int v3 = v5;
        }
        while (!v6);
      }
      unsigned int v3 = v5;
    }
    while (v5 != (void *)&unk_1008A7D88);
  }
}

void sub_1002C4BF4(id a1)
{
  uint64_t v1 = +[BGSystemTaskScheduler sharedScheduler];
  uint64_t v2 = [v1 taskRequestForIdentifier:@"com.apple.nearbyd.ota.task"];

  if (!v2)
  {
    id v4 = [objc_alloc((Class)BGRepeatingSystemTaskRequest) initWithIdentifier:@"com.apple.nearbyd.ota.task"];
    [v4 setInterval:86400.0];
    [v4 setMinDurationBetweenInstances:69120.0];
    [v4 setPriority:2];
    [v4 setPreventsDeviceSleep:1];
    [v4 setShouldWakeDevice:0];
    long long v5 = +[BGSystemTaskScheduler sharedScheduler];
    id v13 = 0;
    unsigned __int8 v6 = [v5 submitTaskRequest:v4 error:&v13];
    id v7 = v13;

    uint64_t v8 = qword_1008ABDE0;
    BOOL v9 = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT);
    if (v6)
    {
      if (v9)
      {
        *(_WORD *)uint8_t buf = 0;
        uint64_t v10 = "#ota,submitted ota query task successfully";
        uint64_t v11 = v8;
        uint32_t v12 = 2;
LABEL_9:
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, v10, buf, v12);
      }
    }
    else if (v9)
    {
      *(_DWORD *)uint8_t buf = 138412290;
      id v15 = v7;
      uint64_t v10 = "#ota,failed to submit task with error: %@";
      uint64_t v11 = v8;
      uint32_t v12 = 12;
      goto LABEL_9;
    }

    return;
  }
  unsigned int v3 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint8_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#ota,task already submitted, return", buf, 2u);
  }
}

void sub_1002C4DE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1002C4E14(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
  return result;
}

void sub_1002C4E28(dispatch_queue_t *a1, uint64_t a2, void *a3)
{
  dispatch_assert_queue_V2(*a1);
  long long v5 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    if (*(char *)(a2 + 23) >= 0) {
      uint64_t v6 = a2;
    }
    else {
      uint64_t v6 = *(void *)a2;
    }
    *(_DWORD *)cf = 136315138;
    *(void *)&cf[4] = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#ota,query file %s", cf, 0xCu);
  }
  if (*(char *)(a2 + 23) >= 0) {
    uint64_t v7 = a2;
  }
  else {
    uint64_t v7 = *(void *)a2;
  }
  uint64_t v8 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, +[NSString defaultCStringEncoding]);
  CFDictionaryRef v9 = (const __CFDictionary *)CLCopyNearbyAssetSettingsOfAccessoryFile();
  CFDictionaryRef v10 = v9;
  if (v9)
  {
    CFTypeID v11 = CFGetTypeID(v9);
    if (v11 == CFDictionaryGetTypeID())
    {
      *(void *)cf = 0;
      if (*(char *)(a2 + 23) >= 0) {
        uint32_t v12 = (const char *)a2;
      }
      else {
        uint32_t v12 = *(const char **)a2;
      }
      CFStringRef v13 = CFStringCreateWithCString(kCFAllocatorDefault, v12, 0x8000100u);
      if (CFDictionaryGetValueIfPresent(v10, v13, (const void **)cf))
      {
        if (*(void *)cf)
        {
          CFTypeID v14 = CFGetTypeID(*(CFTypeRef *)cf);
          CFTypeID TypeID = CFDataGetTypeID();
          if (v14 == TypeID) {
            sub_1002C5044(TypeID, *(void **)cf, (uint64_t *)a2, a3);
          }
        }
      }
      if (v13) {
        CFRelease(v13);
      }
LABEL_23:
      CFRelease(v10);
      goto LABEL_24;
    }
  }
  unsigned __int8 v16 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)cf = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "#ota,empty file content", cf, 2u);
  }
  if (v10) {
    goto LABEL_23;
  }
LABEL_24:
}

void sub_1002C5020(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002C5044(uint64_t a1, void *a2, uint64_t *a3, void *a4)
{
  id v48 = a2;
  long long v5 = +[NSPropertyListSerialization propertyListWithData:options:format:error:](NSPropertyListSerialization, "propertyListWithData:options:format:error:");
  id v49 = 0;
  if (v49)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042B610();
    }
  }
  else
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v7 = a4[1];
      if (*a4 != v7)
      {
        uint64_t v8 = *a4 + 24;
        *(void *)&long long v6 = 136315906;
        long long v47 = v6;
        do
        {
          CFDictionaryRef v9 = (void *)(v8 - 24);
          if (*(char *)(v8 - 1) < 0) {
            CFDictionaryRef v9 = (void *)*v9;
          }
          CFDictionaryRef v10 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v9, v47);
          uint64_t v11 = v8;
          if (*(char *)(v8 + 23) < 0) {
            uint64_t v11 = *(void *)v8;
          }
          uint32_t v12 = +[NSString stringWithUTF8String:v11];
          CFStringRef v13 = [v5 objectForKeyedSubscript:v10];
          BOOL v14 = v13 == 0;

          if (!v14)
          {
            switch(*(unsigned char *)(v8 + 24))
            {
              case 0:
                id v15 = [v5 objectForKeyedSubscript:v10];
                id v16 = [v15 integerValue];

                id v17 = v12;
                int v18 = +[NSUserDefaults standardUserDefaults];
                [v18 setInteger:v16 forKey:v17];
                uint64_t v19 = +[NSUserDefaults standardUserDefaults];
                [v19 synchronize];

                uint64_t v20 = qword_1008ABDE0;
                if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
                {
                  if (*((char *)a3 + 23) >= 0) {
                    int v21 = a3;
                  }
                  else {
                    int v21 = (uint64_t *)*a3;
                  }
                  *(_DWORD *)uint8_t buf = v47;
                  int v52 = v21;
                  __int16 v53 = 2112;
                  int v54 = v10;
                  __int16 v55 = 2112;
                  id v56 = v17;
                  __int16 v57 = 1024;
                  LODWORD(v58) = v16;
                  uint64_t v22 = v20;
                  BOOL v23 = "#ota,%s integer override. Config file key: %@. Defaults key: %@. Value: %d";
                  goto LABEL_34;
                }
                break;
              case 1:
                unsigned __int8 v24 = [v5 objectForKeyedSubscript:v10];
                [v24 doubleValue];
                double v26 = v25;

                id v27 = v12;
                BOOL v28 = +[NSUserDefaults standardUserDefaults];
                [v28 setDouble:v27 forKey:v26];
                char v29 = +[NSUserDefaults standardUserDefaults];
                [v29 synchronize];

                uint64_t v30 = qword_1008ABDE0;
                if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
                {
                  if (*((char *)a3 + 23) >= 0) {
                    char v31 = a3;
                  }
                  else {
                    char v31 = (uint64_t *)*a3;
                  }
                  *(_DWORD *)uint8_t buf = v47;
                  int v52 = v31;
                  __int16 v53 = 2112;
                  int v54 = v10;
                  __int16 v55 = 2112;
                  id v56 = v27;
                  __int16 v57 = 2048;
                  double v58 = v26;
                  uint64_t v22 = v30;
                  BOOL v23 = "#ota,%s double override. Config file key: %@. Defaults key: %@. Value: %f";
                  uint32_t v32 = 42;
                  goto LABEL_35;
                }
                break;
              case 2:
                id v33 = [v5 objectForKey:v10];
                id v34 = v12;
                BOOL v35 = +[NSUserDefaults standardUserDefaults];
                [v35 setObject:v33 forKey:v34];
                BOOL v36 = +[NSUserDefaults standardUserDefaults];
                [v36 synchronize];

                int v37 = qword_1008ABDE0;
                if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
                {
                  if (*((char *)a3 + 23) >= 0) {
                    int v38 = a3;
                  }
                  else {
                    int v38 = (uint64_t *)*a3;
                  }
                  *(_DWORD *)uint8_t buf = v47;
                  int v52 = v38;
                  __int16 v53 = 2112;
                  int v54 = v10;
                  __int16 v55 = 2112;
                  id v56 = v34;
                  __int16 v57 = 2112;
                  double v58 = *(double *)&v33;
                  _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, "#ota,%s dict override. Config file key: %@. Defaults key: %@. Value: %@", buf, 0x2Au);
                }

                break;
              case 3:
                int v39 = [v5 objectForKeyedSubscript:v10];
                id v40 = [v39 BOOLValue];

                id v41 = v12;
                uint64_t v42 = +[NSUserDefaults standardUserDefaults];
                [v42 setBool:v40 forKey:v41];
                BOOL v43 = +[NSUserDefaults standardUserDefaults];
                [v43 synchronize];

                uint64_t v44 = qword_1008ABDE0;
                if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
                {
                  if (*((char *)a3 + 23) >= 0) {
                    unsigned __int16 v45 = a3;
                  }
                  else {
                    unsigned __int16 v45 = (uint64_t *)*a3;
                  }
                  *(_DWORD *)uint8_t buf = v47;
                  int v52 = v45;
                  __int16 v53 = 2112;
                  int v54 = v10;
                  __int16 v55 = 2112;
                  id v56 = v41;
                  __int16 v57 = 1024;
                  LODWORD(v58) = v40;
                  uint64_t v22 = v44;
                  BOOL v23 = "#ota,%s BOOL override. Config file key: %@. Defaults key: %@. Value: %d";
LABEL_34:
                  uint32_t v32 = 38;
LABEL_35:
                  _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, v23, buf, v32);
                }
                break;
              default:
                break;
            }
          }

          uint64_t v46 = v8 + 32;
          v8 += 56;
        }
        while (v46 != v7);
      }
    }
    else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT))
    {
      sub_10042B598();
    }
  }
}

void sub_1002C55FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

char *sub_1002C571C(char *__dst, long long *a2, long long *a3, char a4)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_100002DE4(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v7 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)std::string __dst = v7;
  }
  uint64_t v8 = __dst + 24;
  if (*((char *)a3 + 23) < 0)
  {
    sub_100002DE4(v8, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v9 = *a3;
    *((void *)__dst + 5) = *((void *)a3 + 2);
    *(_OWORD *)uint64_t v8 = v9;
  }
  __dst[48] = a4;
  return __dst;
}

void sub_1002C57A8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1002C57C4(void *__dst, long long *a2, long long **a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_100002DE4(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)std::string __dst = v5;
  }
  __dst[3] = 0;
  __dst[4] = 0;
  __dst[5] = 0;
  sub_1002C5864(__dst + 3, *a3, a3[1], 0x6DB6DB6DB6DB6DB7 * (((char *)a3[1] - (char *)*a3) >> 3));
  return __dst;
}

void sub_1002C5848(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1002C5864(void *result, long long *a2, long long *a3, unint64_t a4)
{
  if (a4)
  {
    long long v6 = result;
    sub_1001504A8(result, a4);
    BOOL result = sub_1002C58EC((uint64_t)(v6 + 2), a2, a3, (void *)v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_1002C58CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_1002C5AC0(&a9);
  _Unwind_Resume(a1);
}

void *sub_1002C58EC(uint64_t a1, long long *a2, long long *a3, void *__dst)
{
  id v4 = __dst;
  uint64_t v11 = __dst;
  uint32_t v12 = (char *)__dst;
  v9[0] = a1;
  v9[1] = &v11;
  _DWORD v9[2] = &v12;
  char v10 = 0;
  if (a2 != a3)
  {
    long long v6 = a2;
    int v7 = a1;
    do
    {
      sub_1002C5998(v7, v4, v6);
      long long v6 = (long long *)((char *)v6 + 56);
      id v4 = v12 + 56;
      v12 += 56;
    }
    while (v6 != a3);
  }
  char v10 = 1;
  sub_1002C5A34((uint64_t)v9);
  return v4;
}

void sub_1002C5984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

unsigned char *sub_1002C5998(int a1, void *__dst, long long *a3)
{
  if (*((char *)a3 + 23) < 0)
  {
    sub_100002DE4(__dst, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v5 = *a3;
    __dst[2] = *((void *)a3 + 2);
    *(_OWORD *)std::string __dst = v5;
  }
  BOOL result = __dst + 3;
  if (*((char *)a3 + 47) < 0)
  {
    BOOL result = sub_100002DE4(result, *((void **)a3 + 3), *((void *)a3 + 4));
  }
  else
  {
    long long v7 = *(long long *)((char *)a3 + 24);
    __dst[5] = *((void *)a3 + 5);
    *(_OWORD *)BOOL result = v7;
  }
  *((unsigned char *)__dst + 48) = *((unsigned char *)a3 + 48);
  return result;
}

void sub_1002C5A18(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002C5A34(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_1002C5A6C((uint64_t *)a1);
  }
  return a1;
}

void sub_1002C5A6C(uint64_t *a1)
{
  uint64_t v2 = (uint64_t *)a1[1];
  uint64_t v1 = (uint64_t *)a1[2];
  uint64_t v3 = *v1;
  uint64_t v4 = *v2;
  if (*v1 != *v2)
  {
    uint64_t v5 = *a1;
    do
    {
      v3 -= 56;
      sub_1001FC298(v5, v3);
    }
    while (v3 != v4);
  }
}

void sub_1002C5AC0(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 56;
        sub_1001FC298((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void *sub_1002C5B58(uint64_t a1, long long *a2, long long *a3, void *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v11 = __dst;
  uint32_t v12 = (char *)__dst;
  v9[0] = a1;
  v9[1] = &v11;
  _DWORD v9[2] = &v12;
  char v10 = 0;
  if (a2 != a3)
  {
    long long v6 = a2;
    int v7 = a1;
    do
    {
      sub_1002C5C04(v7, v4, v6);
      long long v6 = (long long *)((char *)v6 + 56);
      uint64_t v4 = v12 + 56;
      v12 += 56;
    }
    while (v6 != a3);
  }
  char v10 = 1;
  sub_1002C5A34((uint64_t)v9);
  return v4;
}

void sub_1002C5BF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

unsigned char *sub_1002C5C04(int a1, void *__dst, long long *a3)
{
  if (*((char *)a3 + 23) < 0)
  {
    sub_100002DE4(__dst, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v5 = *a3;
    __dst[2] = *((void *)a3 + 2);
    *(_OWORD *)std::string __dst = v5;
  }
  BOOL result = __dst + 3;
  if (*((char *)a3 + 47) < 0)
  {
    BOOL result = sub_100002DE4(result, *((void **)a3 + 3), *((void *)a3 + 4));
  }
  else
  {
    long long v7 = *(long long *)((char *)a3 + 24);
    __dst[5] = *((void *)a3 + 5);
    *(_OWORD *)BOOL result = v7;
  }
  *((unsigned char *)__dst + 48) = *((unsigned char *)a3 + 48);
  return result;
}

void sub_1002C5C84(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002C5CA0(uint64_t a1, const void **a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 48 * a3;
    do
    {
      sub_1002C5D24((uint64_t **)a1, v4, a2, (long long *)a2);
      a2 += 6;
      v6 -= 48;
    }
    while (v6);
  }
  return a1;
}

void sub_1002C5D0C(_Unwind_Exception *a1)
{
  sub_1002C5F64(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_1002C5D24(uint64_t **a1, uint64_t *a2, const void **a3, long long *a4)
{
  uint64_t v6 = sub_10025A8FC(a1, a2, &v12, &v11, a3);
  long long v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    uint64_t v8 = (uint64_t **)v6;
    sub_1002C5DBC((uint64_t)a1, a4, (uint64_t)v10);
    sub_100026D98(a1, (uint64_t)v12, v8, v10[0]);
    long long v7 = v10[0];
    v10[0] = 0;
    sub_1002C5EC4((uint64_t)v10, 0);
  }
  return v7;
}

void *sub_1002C5DBC@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x50uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  BOOL result = sub_1002C5E28(v6 + 4, a2);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_1002C5E10(_Unwind_Exception *a1)
{
  sub_1002C5EC4(v1, 0);
  _Unwind_Resume(a1);
}

void *sub_1002C5E28(void *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_100002DE4(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)std::string __dst = v4;
  }
  __dst[3] = 0;
  __dst[4] = 0;
  __dst[5] = 0;
  sub_1002C5864(__dst + 3, *((long long **)a2 + 3), *((long long **)a2 + 4), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*((void *)a2 + 4) - *((void *)a2 + 3)) >> 3));
  return __dst;
}

void sub_1002C5EA8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002C5EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_1002C5F1C((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

void sub_1002C5F1C(uint64_t a1)
{
  uint64_t v2 = (void **)(a1 + 24);
  sub_1002C5AC0(&v2);
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
}

void sub_1002C5F64(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1002C5F64(a1, *a2);
    sub_1002C5F64(a1, a2[1]);
    sub_1002C5F1C((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

uint64_t sub_1002C5FC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __chkstk_darwin(a1, a2, a3);
  sub_100004950(v272, "PPFSC");
  sub_100004950(v270, "PeopleFinderAlgorithmsParticleFilterSeedWithCL");
  sub_1002C571C((char *)__dst, (long long *)v272, (long long *)v270, 3);
  sub_100004950(v268, "PPFDSA");
  sub_100004950(v266, "PeopleFinderAlgorithmsParticleFilterDisableSeedWithSA");
  sub_1002C571C(v277, (long long *)v268, (long long *)v266, 3);
  sub_100004950(v264, "PPFNP");
  sub_100004950(v262, "PeopleFinderAlgorithmsParticleFilterNumParticles");
  sub_1002C571C(v278, (long long *)v264, (long long *)v262, 0);
  sub_100004950(v260, "PPFFR");
  sub_100004950(v258, "PeopleFinderAlgorithmsParticleFilterPDRFrameRotationNoiseRads");
  sub_1002C571C(v279, (long long *)v260, (long long *)v258, 1);
  sub_100004950(v256, "PPFSM");
  sub_100004950(v254, "PeopleFinderAlgorithmsParticleFilterPDRScaleNoiseMuLognormal");
  sub_1002C571C(v280, (long long *)v256, (long long *)v254, 1);
  sub_100004950(v252, "PPFSS");
  sub_100004950(v250, "PeopleFinderAlgorithmsParticleFilterPDRScaleNoiseSigmaLognormal");
  sub_1002C571C(v281, (long long *)v252, (long long *)v250, 1);
  sub_100004950(v248, "PPFMV");
  sub_100004950(v246, "PeopleFinderAlgorithmsParticleFilterMultipathProcessVarianceScaling");
  sub_1002C571C(v282, (long long *)v248, (long long *)v246, 1);
  sub_100004950(v244, "PPFMS");
  sub_100004950(v242, "PeopleFinderAlgorithmsParticleFilterMultipathMeasurementStd");
  sub_1002C571C(v283, (long long *)v244, (long long *)v242, 1);
  sub_100004950(v240, "PPFST");
  sub_100004950(v238, "PeopleFinderAlgorithmsParticleFilterTrailingMeasurementStdThreshold");
  sub_1002C571C(v284, (long long *)v240, (long long *)v238, 1);
  sub_100004950(v236, "PPFNT");
  sub_100004950(v234, "PeopleFinderAlgorithmsParticleFilterNLOSTimeoutSec");
  sub_1002C571C(v285, (long long *)v236, (long long *)v234, 1);
  sub_100004950(v232, "PPFMT");
  sub_100004950(v230, "PeopleFinderAlgorithmsParticleFilterNoMeasurementTimeoutSec");
  sub_1002C571C(v286, (long long *)v232, (long long *)v230, 1);
  sub_100004950(v228, "PPFCNT");
  sub_100004950(v226, "PeopleFinderAlgorithmsParticleFilterConservativeNLOSTimeoutSec");
  sub_1002C571C(v287, (long long *)v228, (long long *)v226, 1);
  sub_100004950(v224, "PDFIO");
  sub_100004950(v222, "PeopleFinderAlgorithmsDisableFinderIO");
  sub_1002C571C(v288, (long long *)v224, (long long *)v222, 3);
  sub_100004950(v220, "PDSA");
  sub_100004950(v218, "PeopleFinderAlgorithmsDisableSA");
  sub_1002C571C(v289, (long long *)v220, (long long *)v218, 3);
  sub_100004950(v216, "PDSV");
  sub_100004950(v214, "PeopleFinderAlgorithmsDisableSAWithFindeeVIO");
  sub_1002C571C(v290, (long long *)v216, (long long *)v214, 3);
  sub_100004950(v212, "PDCL");
  sub_100004950(v210, "PeopleFinderAlgorithmsDisableCL");
  sub_1002C571C(v291, (long long *)v212, (long long *)v210, 3);
  sub_100004950(v208, "PESS");
  sub_100004950(v206, "PeopleFinderAlgorithmsEnableStraightPathFilter");
  sub_1002C571C(v292, (long long *)v208, (long long *)v206, 3);
  sub_100004950(v204, "PDPF");
  sub_100004950(v202, "PeopleFinderAlgorithmsDisablePF");
  sub_1002C571C(v293, (long long *)v204, (long long *)v202, 3);
  sub_100004950(v200, "PDSBSR");
  sub_100004950(v198, "PeopleFinderAlgorithmsDisableStrictSABoxSpanRequirement");
  sub_1002C571C(v294, (long long *)v200, (long long *)v198, 3);
  sub_100004950(v196, "PRRR");
  sub_100004950(v194, "PeopleFinderAlgorithmsYieldMinUWBRangeRate");
  sub_1002C571C(v295, (long long *)v196, (long long *)v194, 1);
  sub_100004950(v192, "PRRW");
  sub_100004950(v190, "PeopleFinderAlgorithmsYieldRangeRateWindow");
  sub_1002C571C(v296, (long long *)v192, (long long *)v190, 1);
  sub_100004950(v188, "PGFRRR");
  sub_100004950(v186, "PeopleFinderAlgorithmsYieldGroupFindingMinUWBRangeRate");
  sub_1002C571C(v297, (long long *)v188, (long long *)v186, 1);
  sub_100004950(v184, "PGFRRW");
  sub_100004950(v182, "PeopleFinderAlgorithmsYieldGroupFindingRangeRateWindow");
  sub_1002C571C(v298, (long long *)v184, (long long *)v182, 1);
  sub_100004950(v180, "PMR");
  sub_100004950(v178, "PeopleFinderAlgorithmsYieldMaxRange");
  sub_1002C571C(v299, (long long *)v180, (long long *)v178, 1);
  sub_100004950(v176, "PMRIFGC");
  sub_100004950(v174, "PeopleFinderAlgorithmsYieldMaxRangeInFavorableGnssConditions");
  sub_1002C571C(v300, (long long *)v176, (long long *)v174, 1);
  sub_100004950(v172, "PLFT");
  sub_100004950(v170, "PeopleFinderLowPassFilterTimeConstant");
  sub_1002C571C(v301, (long long *)v172, (long long *)v170, 1);
  sub_100004950(v168, "PDRYC");
  sub_100004950(v166, "PeopleFinderAlgorithmsDisableRelaxedYieldCriteria");
  sub_1002C571C(v302, (long long *)v168, (long long *)v166, 3);
  sub_100004950(v164, "PMSTARFGC");
  sub_100004950(v162, "PeopleFinderMinSvTrackedToAvailableRatioForFavorableGnssConditions");
  sub_1002C571C(v303, (long long *)v164, (long long *)v162, 1);
  sub_100004950(v160, "PMGSED");
  sub_100004950(v158, "PeopleFinderMinGnssSatelliteElevationDeg");
  sub_1002C571C(v304, (long long *)v160, (long long *)v158, 1);
  sub_100004950(v156, "PFBT");
  sub_100004950(v154, "PeopleFindingFindButtonTimeoutSecondsOverride");
  sub_1002C571C(v305, (long long *)v156, (long long *)v154, 1);
  sub_100004950(v152, "FMSTARFGC");
  sub_100004950(v150, "FindeeMinSvTrackedToAvailableRatioForFavorableGnssConditions");
  sub_1002C571C(v306, (long long *)v152, (long long *)v150, 1);
  sub_100004950(v148, "FMGSED");
  sub_100004950(v146, "FindeeMinGnssSatelliteElevationDeg");
  sub_1002C571C(v307, (long long *)v148, (long long *)v146, 1);
  sub_100004950(v144, "DCMD");
  sub_100004950(v142, "DeviceFinderAlgorithmsUseCMADistance");
  sub_1002C571C(v308, (long long *)v144, (long long *)v142, 3);
  sub_100004950(v140, "DRR");
  sub_100004950(v138, "DeviceFinderAlgorithmsYieldMinUWBRangeRate");
  sub_1002C571C(v309, (long long *)v140, (long long *)v138, 1);
  sub_100004950(v136, "DRRW");
  sub_100004950(v134, "DeviceFinderAlgorithmsYieldRangeRateWindow");
  sub_1002C571C(v310, (long long *)v136, (long long *)v134, 1);
  sub_100004950(v132, "DMR");
  sub_100004950(v130, "DeviceFinderAlgorithmsYieldMaxRange");
  sub_1002C571C(v311, (long long *)v132, (long long *)v130, 1);
  sub_100004950(v128, "DAST");
  sub_100004950(v126, "DeviceFinderAlgorithmsArcShowThreshold");
  sub_1002C571C(v312, (long long *)v128, (long long *)v126, 1);
  sub_100004950(v124, "DART");
  sub_100004950(v122, "DeviceFinderAlgorithmsArcRevokeThreshold");
  sub_1002C571C(v313, (long long *)v124, (long long *)v122, 1);
  sub_100004950(v120, "DTRR");
  sub_100004950(v118, "DeviceFinderAlgorithmsTimeWithoutRangeRevoke");
  sub_1002C571C(v314, (long long *)v120, (long long *)v118, 1);
  sub_100004950(v116, "DTRI");
  sub_100004950(v114, "DeviceFinderAlgorithmsTimeWithoutRangeReinitialize");
  sub_1002C571C(v315, (long long *)v116, (long long *)v114, 1);
  sub_100004950(v112, "CTFSI");
  sub_100004950(v110, "FindingSchedulingInterval");
  sub_1002C571C(v316, (long long *)v112, (long long *)v110, 0);
  sub_100004950(v108, "CTFDC");
  sub_100004950(v106, "FindingDutyCycle");
  sub_1002C571C(v317, (long long *)v108, (long long *)v106, 1);
  sub_100004950(v104, "CTFSSD");
  sub_100004950(v102, "FindingSecondarySchedulingDelay");
  sub_1002C571C(v318, (long long *)v104, (long long *)v102, 0);
  sub_100004950(v100, "CTFSSI");
  sub_100004950(v98, "FindingSecondarySchedulingInterval");
  sub_1002C571C(v319, (long long *)v100, (long long *)v98, 0);
  sub_100004950(v96, "CTFSDC");
  sub_100004950(v94, "FindingSecondaryDutyCycle");
  sub_1002C571C(v320, (long long *)v96, (long long *)v94, 1);
  sub_100004950(v92, "CTPFOOB");
  sub_100004950(v90, "PeopleFindingOOBRefreshPeriodSecondsOverride");
  sub_1002C571C(v321, (long long *)v92, (long long *)v90, 1);
  sub_100004950(v88, "CTPFKABT");
  sub_100004950(v86, "PeopleFindingFindableDeviceKeepAliveBluetoothTimeoutSecondsOverride");
  sub_1002C571C(v322, (long long *)v88, (long long *)v86, 1);
  sub_100004950(v84, "CTPFKAOOB");
  sub_100004950(v82, "PeopleFindingFindableDeviceKeepAliveOOBTimeoutSecondsOverride");
  sub_1002C571C(v323, (long long *)v84, (long long *)v82, 1);
  sub_100004950(v80, "CTPFDT");
  sub_100004950(v78, "PeopleFindingUWBDiscoveryTimeoutSecondsOverride");
  sub_1002C571C(v324, (long long *)v80, (long long *)v78, 0);
  sub_100004950(v76, "CTPFRT");
  sub_100004950(v74, "PeopleFindingUWBReacquisitionTimeoutSecondsOverride");
  sub_1002C571C(v325, (long long *)v76, (long long *)v74, 0);
  sub_100004950(v72, "CTDFOOB");
  sub_100004950(v70, "DeviceFindingOOBRefreshPeriodSecondsOverride");
  sub_1002C571C(v326, (long long *)v72, (long long *)v70, 1);
  sub_100004950(v68, "CTDFKABT");
  sub_100004950(v66, "DeviceFindingFindableDeviceKeepAliveBluetoothTimeoutSecondsOverride");
  sub_1002C571C(v327, (long long *)v68, (long long *)v66, 1);
  sub_100004950(v64, "CTDFKAOOB");
  sub_100004950(v62, "DeviceFindingFindableDeviceKeepAliveOOBTimeoutSecondsOverride");
  sub_1002C571C(v328, (long long *)v64, (long long *)v62, 1);
  sub_100004950(v60, "CTDFDT");
  sub_100004950(v58, "DeviceFindingUWBDiscoveryTimeoutSecondsOverride");
  sub_1002C571C(v329, (long long *)v60, (long long *)v58, 0);
  sub_100004950(v56, "CTDFRT");
  sub_100004950(v54, "DeviceFindingUWBReacquisitionTimeoutSecondsOverride");
  sub_1002C571C(v330, (long long *)v56, (long long *)v54, 0);
  sub_100004950(v52, "CTFTT");
  sub_100004950(v50, "FindingUWBTotalTimeoutSecondsOverride");
  sub_1002C571C(v331, (long long *)v52, (long long *)v50, 0);
  sub_100004950(v48, "CTFWDT");
  sub_100004950(v46, "FindingUWBEventWatchdogTimeoutMillisecondsOverride");
  sub_1002C571C(v332, (long long *)v48, (long long *)v46, 0);
  sub_100004950(v44, "CTRTTL");
  sub_100004950(v42, "FindingServiceRangingTriggerTimeLimitOverrideSeconds");
  sub_1002C571C(v333, (long long *)v44, (long long *)v42, 1);
  sub_100004950(v40, "CTRFBT");
  sub_100004950(v38, "RunawayFindingBackstopTimeoutOverrideSeconds");
  sub_1002C571C(v334, (long long *)v40, (long long *)v38, 1);
  sub_100004950(v36, "CTNIDT");
  sub_100004950(v34, "PeerDiscoveryTimeoutSecondsOverride");
  sub_1002C571C(v335, (long long *)v36, (long long *)v34, 0);
  sub_100004950(v32, "CTNIRT");
  sub_100004950(v30, "PeerReacquisitionTimeoutSecondsOverride");
  sub_1002C571C(v336, (long long *)v32, (long long *)v30, 0);
  sub_100004950(v28, "CTNIWDT");
  sub_100004950(v26, "PeerEventWatchdogTimeoutMillisecondsOverride");
  sub_1002C571C(v337, (long long *)v28, (long long *)v26, 0);
  sub_100004950(v24, "CTFSDIS");
  sub_100004950(v22, "FindingDisableService");
  sub_1002C571C(v338, (long long *)v24, (long long *)v22, 3);
  sub_100004950(v20, "CTFPWEN");
  sub_100004950(v18, "FindableDeviceEnableWatch");
  sub_1002C571C(v339, (long long *)v20, (long long *)v18, 3);
  sub_100004950(v16, "CTBSDM");
  sub_100004950(v14, "r121951698_DisableMitigation");
  sub_1002C571C(v340, (long long *)v16, (long long *)v14, 3);
  sub_100004950(v12, "CTDSRC");
  sub_100004950(v10, "DisableDualRxChain");
  sub_1002C571C(v341, (long long *)v12, (long long *)v10, 3);
  sub_100004950(v8, "DUORWS7");
  sub_100004950(__p, "DisableUseOfRangesWithStatus7");
  sub_1002C571C(v342, (long long *)v8, (long long *)__p, 3);
  qword_1008A7D38 = 0;
  qword_1008A7D40 = 0;
  qword_1008A7D48 = 0;
  int v274 = &qword_1008A7D38;
  char v275 = 0;
  qword_1008A7D38 = (uint64_t)operator new(0xEA8uLL);
  qword_1008A7D40 = qword_1008A7D38;
  qword_1008A7D48 = qword_1008A7D38 + 3752;
  qword_1008A7D40 = (uint64_t)sub_1002C5B58((uint64_t)&qword_1008A7D48, __dst, &v343, (void *)qword_1008A7D38);
  uint64_t v3 = 469;
  do
  {
    long long v4 = (void **)((char *)__dst + v3 * 8);
    if (SHIBYTE((&v274)[v3]) < 0) {
      operator delete(*(v4 - 4));
    }
    if (*((char *)v4 - 33) < 0) {
      operator delete(*(v4 - 7));
    }
    v3 -= 7;
  }
  while (v3 * 8);
  if (v7 < 0) {
    operator delete(__p[0]);
  }
  if (v9 < 0) {
    operator delete(v8[0]);
  }
  if (v11 < 0) {
    operator delete(v10[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (v15 < 0) {
    operator delete(v14[0]);
  }
  if (v17 < 0) {
    operator delete(v16[0]);
  }
  if (v19 < 0) {
    operator delete(v18[0]);
  }
  if (v21 < 0) {
    operator delete(v20[0]);
  }
  if (v23 < 0) {
    operator delete(v22[0]);
  }
  if (v25 < 0) {
    operator delete(v24[0]);
  }
  if (v27 < 0) {
    operator delete(v26[0]);
  }
  if (v29 < 0) {
    operator delete(v28[0]);
  }
  if (v31 < 0) {
    operator delete(v30[0]);
  }
  if (v33 < 0) {
    operator delete(v32[0]);
  }
  if (v35 < 0) {
    operator delete(v34[0]);
  }
  if (v37 < 0) {
    operator delete(v36[0]);
  }
  if (v39 < 0) {
    operator delete(v38[0]);
  }
  if (v41 < 0) {
    operator delete(v40[0]);
  }
  if (v43 < 0) {
    operator delete(v42[0]);
  }
  if (v45 < 0) {
    operator delete(v44[0]);
  }
  if (v47 < 0) {
    operator delete(v46[0]);
  }
  if (v49 < 0) {
    operator delete(v48[0]);
  }
  if (v51 < 0) {
    operator delete(v50[0]);
  }
  if (v53 < 0) {
    operator delete(v52[0]);
  }
  if (v55 < 0) {
    operator delete(v54[0]);
  }
  if (v57 < 0) {
    operator delete(v56[0]);
  }
  if (v59 < 0) {
    operator delete(v58[0]);
  }
  if (v61 < 0) {
    operator delete(v60[0]);
  }
  if (v63 < 0) {
    operator delete(v62[0]);
  }
  if (v65 < 0) {
    operator delete(v64[0]);
  }
  if (v67 < 0) {
    operator delete(v66[0]);
  }
  if (v69 < 0) {
    operator delete(v68[0]);
  }
  if (v71 < 0) {
    operator delete(v70[0]);
  }
  if (v73 < 0) {
    operator delete(v72[0]);
  }
  if (v75 < 0) {
    operator delete(v74[0]);
  }
  if (v77 < 0) {
    operator delete(v76[0]);
  }
  if (v79 < 0) {
    operator delete(v78[0]);
  }
  if (v81 < 0) {
    operator delete(v80[0]);
  }
  if (v83 < 0) {
    operator delete(v82[0]);
  }
  if (v85 < 0) {
    operator delete(v84[0]);
  }
  if (v87 < 0) {
    operator delete(v86[0]);
  }
  if (v89 < 0) {
    operator delete(v88[0]);
  }
  if (v91 < 0) {
    operator delete(v90[0]);
  }
  if (v93 < 0) {
    operator delete(v92[0]);
  }
  if (v95 < 0) {
    operator delete(v94[0]);
  }
  if (v97 < 0) {
    operator delete(v96[0]);
  }
  if (v99 < 0) {
    operator delete(v98[0]);
  }
  if (v101 < 0) {
    operator delete(v100[0]);
  }
  if (v103 < 0) {
    operator delete(v102[0]);
  }
  if (v105 < 0) {
    operator delete(v104[0]);
  }
  if (v107 < 0) {
    operator delete(v106[0]);
  }
  if (v109 < 0) {
    operator delete(v108[0]);
  }
  if (v111 < 0) {
    operator delete(v110[0]);
  }
  if (v113 < 0) {
    operator delete(v112[0]);
  }
  if (v115 < 0) {
    operator delete(v114[0]);
  }
  if (v117 < 0) {
    operator delete(v116[0]);
  }
  if (v119 < 0) {
    operator delete(v118[0]);
  }
  if (v121 < 0) {
    operator delete(v120[0]);
  }
  if (v123 < 0) {
    operator delete(v122[0]);
  }
  if (v125 < 0) {
    operator delete(v124[0]);
  }
  if (v127 < 0) {
    operator delete(v126[0]);
  }
  if (v129 < 0) {
    operator delete(v128[0]);
  }
  if (v131 < 0) {
    operator delete(v130[0]);
  }
  if (v133 < 0) {
    operator delete(v132[0]);
  }
  if (v135 < 0) {
    operator delete(v134[0]);
  }
  if (v137 < 0) {
    operator delete(v136[0]);
  }
  if (v139 < 0) {
    operator delete(v138[0]);
  }
  if (v141 < 0) {
    operator delete(v140[0]);
  }
  if (v143 < 0) {
    operator delete(v142[0]);
  }
  if (v145 < 0) {
    operator delete(v144[0]);
  }
  if (v147 < 0) {
    operator delete(v146[0]);
  }
  if (v149 < 0) {
    operator delete(v148[0]);
  }
  if (v151 < 0) {
    operator delete(v150[0]);
  }
  if (v153 < 0) {
    operator delete(v152[0]);
  }
  if (v155 < 0) {
    operator delete(v154[0]);
  }
  if (v157 < 0) {
    operator delete(v156[0]);
  }
  if (v159 < 0) {
    operator delete(v158[0]);
  }
  if (v161 < 0) {
    operator delete(v160[0]);
  }
  if (v163 < 0) {
    operator delete(v162[0]);
  }
  if (v165 < 0) {
    operator delete(v164[0]);
  }
  if (v167 < 0) {
    operator delete(v166[0]);
  }
  if (v169 < 0) {
    operator delete(v168[0]);
  }
  if (v171 < 0) {
    operator delete(v170[0]);
  }
  if (v173 < 0) {
    operator delete(v172[0]);
  }
  if (v175 < 0) {
    operator delete(v174[0]);
  }
  if (v177 < 0) {
    operator delete(v176[0]);
  }
  if (v179 < 0) {
    operator delete(v178[0]);
  }
  if (v181 < 0) {
    operator delete(v180[0]);
  }
  if (v183 < 0) {
    operator delete(v182[0]);
  }
  if (v185 < 0) {
    operator delete(v184[0]);
  }
  if (v187 < 0) {
    operator delete(v186[0]);
  }
  if (v189 < 0) {
    operator delete(v188[0]);
  }
  if (v191 < 0) {
    operator delete(v190[0]);
  }
  if (v193 < 0) {
    operator delete(v192[0]);
  }
  if (v195 < 0) {
    operator delete(v194[0]);
  }
  if (v197 < 0) {
    operator delete(v196[0]);
  }
  if (v199 < 0) {
    operator delete(v198[0]);
  }
  if (v201 < 0) {
    operator delete(v200[0]);
  }
  if (v203 < 0) {
    operator delete(v202[0]);
  }
  if (v205 < 0) {
    operator delete(v204[0]);
  }
  if (v207 < 0) {
    operator delete(v206[0]);
  }
  if (v209 < 0) {
    operator delete(v208[0]);
  }
  if (v211 < 0) {
    operator delete(v210[0]);
  }
  if (v213 < 0) {
    operator delete(v212[0]);
  }
  if (v215 < 0) {
    operator delete(v214[0]);
  }
  if (v217 < 0) {
    operator delete(v216[0]);
  }
  if (v219 < 0) {
    operator delete(v218[0]);
  }
  if (v221 < 0) {
    operator delete(v220[0]);
  }
  if (v223 < 0) {
    operator delete(v222[0]);
  }
  if (v225 < 0) {
    operator delete(v224[0]);
  }
  if (v227 < 0) {
    operator delete(v226[0]);
  }
  if (v229 < 0) {
    operator delete(v228[0]);
  }
  if (v231 < 0) {
    operator delete(v230[0]);
  }
  if (v233 < 0) {
    operator delete(v232[0]);
  }
  if (v235 < 0) {
    operator delete(v234[0]);
  }
  if (v237 < 0) {
    operator delete(v236[0]);
  }
  if (v239 < 0) {
    operator delete(v238[0]);
  }
  if (v241 < 0) {
    operator delete(v240[0]);
  }
  if (v243 < 0) {
    operator delete(v242[0]);
  }
  if (v245 < 0) {
    operator delete(v244[0]);
  }
  if (v247 < 0) {
    operator delete(v246[0]);
  }
  if (v249 < 0) {
    operator delete(v248[0]);
  }
  if (v251 < 0) {
    operator delete(v250[0]);
  }
  if (v253 < 0) {
    operator delete(v252[0]);
  }
  if (v255 < 0) {
    operator delete(v254[0]);
  }
  if (v257 < 0) {
    operator delete(v256[0]);
  }
  if (v259 < 0) {
    operator delete(v258[0]);
  }
  if (v261 < 0) {
    operator delete(v260[0]);
  }
  if (v263 < 0) {
    operator delete(v262[0]);
  }
  if (v265 < 0) {
    operator delete(v264[0]);
  }
  if (v267 < 0) {
    operator delete(v266[0]);
  }
  if (v269 < 0) {
    operator delete(v268[0]);
  }
  if (v271 < 0) {
    operator delete(v270[0]);
  }
  if (v273 < 0) {
    operator delete(v272[0]);
  }
  return __cxa_atexit((void (*)(void *))sub_1002C451C, &qword_1008A7D38, (void *)&_mh_execute_header);
}

void sub_1002C78EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,void *a57,uint64_t a58,int a59,__int16 a60,char a61,char a62,void *a63)
{
  qword_1008A7D40 = v93;
  sub_1002C5AC0((void ***)&STACK[0xC90]);
  for (uint64_t i = 3696; i != -56; i -= 56)
    sub_1001F8580((uint64_t)&STACK[0xCA0] + i);
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  if (a38 < 0) {
    operator delete(a33);
  }
  if (a44 < 0) {
    operator delete(a39);
  }
  if (a50 < 0) {
    operator delete(a45);
  }
  if (a56 < 0) {
    operator delete(a51);
  }
  if (a62 < 0) {
    operator delete(a57);
  }
  if (a68 < 0) {
    operator delete(a63);
  }
  if (a72 < 0) {
    operator delete(a69);
  }
  if (a74 < 0) {
    operator delete(a73);
  }
  if (a76 < 0) {
    operator delete(a75);
  }
  if (a78 < 0) {
    operator delete(a77);
  }
  if (a80 < 0) {
    operator delete(a79);
  }
  if (a82 < 0) {
    operator delete(a81);
  }
  if (a84 < 0) {
    operator delete(a83);
  }
  if (a86 < 0) {
    operator delete(a85);
  }
  if (a88 < 0) {
    operator delete(a87);
  }
  if (a90 < 0) {
    operator delete(a89);
  }
  if (a92 < 0) {
    operator delete(a91);
  }
  if (SLOBYTE(STACK[0x20F]) < 0) {
    operator delete(a93);
  }
  if (SLOBYTE(STACK[0x227]) < 0) {
    operator delete((void *)STACK[0x210]);
  }
  if (SLOBYTE(STACK[0x23F]) < 0) {
    operator delete((void *)STACK[0x228]);
  }
  if (SLOBYTE(STACK[0x257]) < 0) {
    operator delete((void *)STACK[0x240]);
  }
  if (SLOBYTE(STACK[0x26F]) < 0) {
    operator delete((void *)STACK[0x258]);
  }
  if (SLOBYTE(STACK[0x287]) < 0) {
    operator delete((void *)STACK[0x270]);
  }
  if (SLOBYTE(STACK[0x29F]) < 0) {
    operator delete((void *)STACK[0x288]);
  }
  if (SLOBYTE(STACK[0x2B7]) < 0) {
    operator delete((void *)STACK[0x2A0]);
  }
  if (SLOBYTE(STACK[0x2CF]) < 0) {
    operator delete((void *)STACK[0x2B8]);
  }
  if (SLOBYTE(STACK[0x2E7]) < 0) {
    operator delete((void *)STACK[0x2D0]);
  }
  if (SLOBYTE(STACK[0x2FF]) < 0) {
    operator delete((void *)STACK[0x2E8]);
  }
  if (SLOBYTE(STACK[0x317]) < 0) {
    operator delete((void *)STACK[0x300]);
  }
  if (SLOBYTE(STACK[0x32F]) < 0) {
    operator delete((void *)STACK[0x318]);
  }
  if (SLOBYTE(STACK[0x347]) < 0) {
    operator delete((void *)STACK[0x330]);
  }
  if (SLOBYTE(STACK[0x35F]) < 0) {
    operator delete((void *)STACK[0x348]);
  }
  if (SLOBYTE(STACK[0x377]) < 0) {
    operator delete((void *)STACK[0x360]);
  }
  if (SLOBYTE(STACK[0x38F]) < 0) {
    operator delete((void *)STACK[0x378]);
  }
  if (SLOBYTE(STACK[0x3A7]) < 0) {
    operator delete((void *)STACK[0x390]);
  }
  if (SLOBYTE(STACK[0x3BF]) < 0) {
    operator delete((void *)STACK[0x3A8]);
  }
  if (SLOBYTE(STACK[0x3D7]) < 0) {
    operator delete((void *)STACK[0x3C0]);
  }
  if (SLOBYTE(STACK[0x3EF]) < 0) {
    operator delete((void *)STACK[0x3D8]);
  }
  if (SLOBYTE(STACK[0x407]) < 0) {
    operator delete((void *)STACK[0x3F0]);
  }
  if (SLOBYTE(STACK[0x41F]) < 0) {
    operator delete((void *)STACK[0x408]);
  }
  if (SLOBYTE(STACK[0x437]) < 0) {
    operator delete((void *)STACK[0x420]);
  }
  if (SLOBYTE(STACK[0x44F]) < 0) {
    operator delete((void *)STACK[0x438]);
  }
  if (SLOBYTE(STACK[0x467]) < 0) {
    operator delete((void *)STACK[0x450]);
  }
  if (SLOBYTE(STACK[0x47F]) < 0) {
    operator delete((void *)STACK[0x468]);
  }
  if (SLOBYTE(STACK[0x497]) < 0) {
    operator delete((void *)STACK[0x480]);
  }
  if (SLOBYTE(STACK[0x4AF]) < 0) {
    operator delete((void *)STACK[0x498]);
  }
  if (SLOBYTE(STACK[0x4C7]) < 0) {
    operator delete((void *)STACK[0x4B0]);
  }
  if (SLOBYTE(STACK[0x4DF]) < 0) {
    operator delete((void *)STACK[0x4C8]);
  }
  if (SLOBYTE(STACK[0x4F7]) < 0) {
    operator delete((void *)STACK[0x4E0]);
  }
  if (SLOBYTE(STACK[0x50F]) < 0) {
    operator delete((void *)STACK[0x4F8]);
  }
  if (SLOBYTE(STACK[0x527]) < 0) {
    operator delete((void *)STACK[0x510]);
  }
  if (SLOBYTE(STACK[0x53F]) < 0) {
    operator delete((void *)STACK[0x528]);
  }
  if (SLOBYTE(STACK[0x557]) < 0) {
    operator delete((void *)STACK[0x540]);
  }
  if (SLOBYTE(STACK[0x56F]) < 0) {
    operator delete((void *)STACK[0x558]);
  }
  if (SLOBYTE(STACK[0x587]) < 0) {
    operator delete((void *)STACK[0x570]);
  }
  if (SLOBYTE(STACK[0x59F]) < 0) {
    operator delete((void *)STACK[0x588]);
  }
  if (SLOBYTE(STACK[0x5B7]) < 0) {
    operator delete((void *)STACK[0x5A0]);
  }
  if (SLOBYTE(STACK[0x5CF]) < 0) {
    operator delete((void *)STACK[0x5B8]);
  }
  if (SLOBYTE(STACK[0x5E7]) < 0) {
    operator delete((void *)STACK[0x5D0]);
  }
  if (SLOBYTE(STACK[0x5FF]) < 0) {
    operator delete((void *)STACK[0x5E8]);
  }
  if (SLOBYTE(STACK[0x617]) < 0) {
    operator delete((void *)STACK[0x600]);
  }
  if (SLOBYTE(STACK[0x62F]) < 0) {
    operator delete((void *)STACK[0x618]);
  }
  if (SLOBYTE(STACK[0x647]) < 0) {
    operator delete((void *)STACK[0x630]);
  }
  if (SLOBYTE(STACK[0x65F]) < 0) {
    operator delete((void *)STACK[0x648]);
  }
  if (SLOBYTE(STACK[0x677]) < 0) {
    operator delete((void *)STACK[0x660]);
  }
  if (SLOBYTE(STACK[0x68F]) < 0) {
    operator delete((void *)STACK[0x678]);
  }
  if (SLOBYTE(STACK[0x6A7]) < 0) {
    operator delete((void *)STACK[0x690]);
  }
  if (SLOBYTE(STACK[0x6BF]) < 0) {
    operator delete((void *)STACK[0x6A8]);
  }
  if (SLOBYTE(STACK[0x6D7]) < 0) {
    operator delete((void *)STACK[0x6C0]);
  }
  if (SLOBYTE(STACK[0x6EF]) < 0) {
    operator delete((void *)STACK[0x6D8]);
  }
  if (SLOBYTE(STACK[0x707]) < 0) {
    operator delete((void *)STACK[0x6F0]);
  }
  if (SLOBYTE(STACK[0x71F]) < 0) {
    operator delete((void *)STACK[0x708]);
  }
  if (SLOBYTE(STACK[0x737]) < 0) {
    operator delete((void *)STACK[0x720]);
  }
  if (SLOBYTE(STACK[0x74F]) < 0) {
    operator delete((void *)STACK[0x738]);
  }
  if (SLOBYTE(STACK[0x767]) < 0) {
    operator delete((void *)STACK[0x750]);
  }
  if (SLOBYTE(STACK[0x77F]) < 0) {
    operator delete((void *)STACK[0x768]);
  }
  if (SLOBYTE(STACK[0x797]) < 0) {
    operator delete((void *)STACK[0x780]);
  }
  if (SLOBYTE(STACK[0x7AF]) < 0) {
    operator delete((void *)STACK[0x798]);
  }
  if (SLOBYTE(STACK[0x7C7]) < 0) {
    operator delete((void *)STACK[0x7B0]);
  }
  if (SLOBYTE(STACK[0x7DF]) < 0) {
    operator delete((void *)STACK[0x7C8]);
  }
  if (SLOBYTE(STACK[0x7F7]) < 0) {
    operator delete((void *)STACK[0x7E0]);
  }
  if (SLOBYTE(STACK[0x80F]) < 0) {
    operator delete((void *)STACK[0x7F8]);
  }
  if (SLOBYTE(STACK[0x827]) < 0) {
    operator delete((void *)STACK[0x810]);
  }
  if (SLOBYTE(STACK[0x83F]) < 0) {
    operator delete((void *)STACK[0x828]);
  }
  if (SLOBYTE(STACK[0x857]) < 0) {
    operator delete((void *)STACK[0x840]);
  }
  if (SLOBYTE(STACK[0x86F]) < 0) {
    operator delete((void *)STACK[0x858]);
  }
  if (SLOBYTE(STACK[0x887]) < 0) {
    operator delete((void *)STACK[0x870]);
  }
  if (SLOBYTE(STACK[0x89F]) < 0) {
    operator delete((void *)STACK[0x888]);
  }
  if (SLOBYTE(STACK[0x8B7]) < 0) {
    operator delete((void *)STACK[0x8A0]);
  }
  if (SLOBYTE(STACK[0x8CF]) < 0) {
    operator delete((void *)STACK[0x8B8]);
  }
  if (SLOBYTE(STACK[0x8E7]) < 0) {
    operator delete((void *)STACK[0x8D0]);
  }
  if (SLOBYTE(STACK[0x8FF]) < 0) {
    operator delete((void *)STACK[0x8E8]);
  }
  if (SLOBYTE(STACK[0x917]) < 0) {
    operator delete((void *)STACK[0x900]);
  }
  if (SLOBYTE(STACK[0x92F]) < 0) {
    operator delete((void *)STACK[0x918]);
  }
  if (SLOBYTE(STACK[0x947]) < 0) {
    operator delete((void *)STACK[0x930]);
  }
  if (SLOBYTE(STACK[0x95F]) < 0) {
    operator delete((void *)STACK[0x948]);
  }
  if (SLOBYTE(STACK[0x977]) < 0) {
    operator delete((void *)STACK[0x960]);
  }
  if (SLOBYTE(STACK[0x98F]) < 0) {
    operator delete((void *)STACK[0x978]);
  }
  if (SLOBYTE(STACK[0x9A7]) < 0) {
    operator delete((void *)STACK[0x990]);
  }
  if (SLOBYTE(STACK[0x9BF]) < 0) {
    operator delete((void *)STACK[0x9A8]);
  }
  if (SLOBYTE(STACK[0x9D7]) < 0) {
    operator delete((void *)STACK[0x9C0]);
  }
  if (SLOBYTE(STACK[0x9EF]) < 0) {
    operator delete((void *)STACK[0x9D8]);
  }
  if (SLOBYTE(STACK[0xA07]) < 0) {
    operator delete((void *)STACK[0x9F0]);
  }
  if (SLOBYTE(STACK[0xA1F]) < 0) {
    operator delete((void *)STACK[0xA08]);
  }
  if (SLOBYTE(STACK[0xA37]) < 0) {
    operator delete((void *)STACK[0xA20]);
  }
  if (SLOBYTE(STACK[0xA4F]) < 0) {
    operator delete((void *)STACK[0xA38]);
  }
  if (SLOBYTE(STACK[0xA67]) < 0) {
    operator delete((void *)STACK[0xA50]);
  }
  if (SLOBYTE(STACK[0xA7F]) < 0) {
    operator delete((void *)STACK[0xA68]);
  }
  if (SLOBYTE(STACK[0xA97]) < 0) {
    operator delete((void *)STACK[0xA80]);
  }
  if (SLOBYTE(STACK[0xAAF]) < 0) {
    operator delete((void *)STACK[0xA98]);
  }
  if (SLOBYTE(STACK[0xAC7]) < 0) {
    operator delete((void *)STACK[0xAB0]);
  }
  if (SLOBYTE(STACK[0xADF]) < 0) {
    operator delete((void *)STACK[0xAC8]);
  }
  if (SLOBYTE(STACK[0xAF7]) < 0) {
    operator delete((void *)STACK[0xAE0]);
  }
  if (SLOBYTE(STACK[0xB0F]) < 0) {
    operator delete((void *)STACK[0xAF8]);
  }
  if (SLOBYTE(STACK[0xB27]) < 0) {
    operator delete((void *)STACK[0xB10]);
  }
  if (SLOBYTE(STACK[0xB3F]) < 0) {
    operator delete((void *)STACK[0xB28]);
  }
  if (SLOBYTE(STACK[0xB57]) < 0) {
    operator delete((void *)STACK[0xB40]);
  }
  if (SLOBYTE(STACK[0xB6F]) < 0) {
    operator delete((void *)STACK[0xB58]);
  }
  if (SLOBYTE(STACK[0xB87]) < 0) {
    operator delete((void *)STACK[0xB70]);
  }
  if (SLOBYTE(STACK[0xB9F]) < 0) {
    operator delete((void *)STACK[0xB88]);
  }
  if (SLOBYTE(STACK[0xBB7]) < 0) {
    operator delete((void *)STACK[0xBA0]);
  }
  if (SLOBYTE(STACK[0xBCF]) < 0) {
    operator delete((void *)STACK[0xBB8]);
  }
  if (SLOBYTE(STACK[0xBE7]) < 0) {
    operator delete((void *)STACK[0xBD0]);
  }
  if (SLOBYTE(STACK[0xBFF]) < 0) {
    operator delete((void *)STACK[0xBE8]);
  }
  if (SLOBYTE(STACK[0xC17]) < 0) {
    operator delete((void *)STACK[0xC00]);
  }
  if (SLOBYTE(STACK[0xC2F]) < 0) {
    operator delete((void *)STACK[0xC18]);
  }
  if (SLOBYTE(STACK[0xC47]) < 0) {
    operator delete((void *)STACK[0xC30]);
  }
  if (SLOBYTE(STACK[0xC5F]) < 0) {
    operator delete((void *)STACK[0xC48]);
  }
  if (SLOBYTE(STACK[0xC77]) < 0) {
    operator delete((void *)STACK[0xC60]);
  }
  if (SLOBYTE(STACK[0xC8F]) < 0) {
    operator delete((void *)STACK[0xC78]);
  }
  _Unwind_Resume(a1);
}

void sub_1002C8250()
{
}

void sub_1002C825C()
{
}

void sub_1002C826C()
{
}

void sub_1002C8278()
{
}

void sub_1002C8288()
{
}

void sub_1002C8294()
{
}

void sub_1002C82A4()
{
}

void sub_1002C82B0()
{
}

void sub_1002C82C0()
{
}

void sub_1002C82CC()
{
}

void sub_1002C82DC()
{
}

void sub_1002C82E8()
{
}

void sub_1002C82F8()
{
}

void sub_1002C8304()
{
}

void sub_1002C8314()
{
}

void sub_1002C8320()
{
}

void sub_1002C8330()
{
}

void sub_1002C833C()
{
}

void sub_1002C834C()
{
}

void sub_1002C8358()
{
}

void sub_1002C8368()
{
}

void sub_1002C8374()
{
}

void sub_1002C8384()
{
}

void sub_1002C8390()
{
}

void sub_1002C83A0()
{
}

void sub_1002C83AC()
{
}

void sub_1002C83BC()
{
}

void sub_1002C83C8()
{
}

void sub_1002C83D8()
{
}

void sub_1002C83E4()
{
}

void sub_1002C83F4()
{
}

void sub_1002C8400()
{
}

void sub_1002C8410()
{
}

void sub_1002C841C()
{
}

void sub_1002C842C()
{
}

void sub_1002C8438()
{
}

void sub_1002C8448()
{
}

void sub_1002C8454()
{
}

void sub_1002C8464()
{
}

void sub_1002C8470()
{
}

void sub_1002C8480()
{
}

void sub_1002C848C()
{
}

void sub_1002C849C()
{
}

void sub_1002C84A8()
{
}

void sub_1002C84B8()
{
}

void sub_1002C84C4()
{
}

void sub_1002C84D4()
{
}

void sub_1002C84E0()
{
}

void sub_1002C84F0()
{
}

void sub_1002C84FC()
{
}

void sub_1002C850C()
{
}

void sub_1002C8518()
{
}

void sub_1002C8528()
{
}

void sub_1002C8534()
{
}

void sub_1002C8544()
{
}

void sub_1002C8550()
{
}

void sub_1002C8560()
{
}

void sub_1002C856C()
{
}

void sub_1002C857C()
{
}

void sub_1002C8588()
{
}

void sub_1002C8598()
{
}

void sub_1002C85A4()
{
}

void sub_1002C85B4()
{
}

void sub_1002C85C0()
{
}

void sub_1002C85D0()
{
}

void sub_1002C85DC()
{
}

void sub_1002C85EC()
{
}

void sub_1002C85F8()
{
}

void sub_1002C8608()
{
}

void sub_1002C8614()
{
}

void sub_1002C8624()
{
}

void sub_1002C8630()
{
}

void sub_1002C8640()
{
}

void sub_1002C864C()
{
}

void sub_1002C865C()
{
}

void sub_1002C8668()
{
}

void sub_1002C8678()
{
}

void sub_1002C8684()
{
}

void sub_1002C8694()
{
}

void sub_1002C86A0()
{
}

void sub_1002C86B0()
{
}

void sub_1002C86BC()
{
}

void sub_1002C86CC()
{
}

void sub_1002C86D8()
{
}

void sub_1002C86E8()
{
}

void sub_1002C86F4()
{
}

void sub_1002C8704()
{
}

void sub_1002C8710()
{
}

void sub_1002C8720()
{
}

void sub_1002C872C()
{
}

void sub_1002C873C()
{
}

void sub_1002C8748()
{
}

void sub_1002C8758()
{
}

void sub_1002C8764()
{
}

void sub_1002C8774()
{
}

void sub_1002C8780()
{
}

void sub_1002C8790()
{
}

void sub_1002C879C()
{
}

void sub_1002C87AC()
{
}

void sub_1002C87B8()
{
}

void sub_1002C87C8()
{
}

void sub_1002C87D4()
{
}

void sub_1002C87E4()
{
}

void sub_1002C87F0()
{
}

void sub_1002C8800()
{
}

void sub_1002C880C()
{
}

void sub_1002C881C()
{
}

void sub_1002C8828()
{
}

void sub_1002C8838()
{
}

void sub_1002C8844()
{
}

void sub_1002C8854()
{
}

void sub_1002C8860()
{
}

void sub_1002C8870()
{
}

void sub_1002C887C()
{
}

void sub_1002C888C()
{
}

void sub_1002C8898()
{
}

void sub_1002C88A8()
{
}

void sub_1002C88B4()
{
}

void sub_1002C88C4()
{
}

void sub_1002C88D0()
{
}

void sub_1002C88E0()
{
}

void sub_1002C88EC()
{
}

void sub_1002C88F8()
{
}

void sub_1002C8908()
{
}

void sub_1002C8918()
{
}

void sub_1002C8920()
{
  sub_100004950(&xmmword_1008A7C90, "ALP.plist");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A7C90, (void *)&_mh_execute_header);
  sub_100004950(v41, "RDL");
  sub_100004950(v39, "AlishaRangingDurationLimitOverrideSeconds");
  sub_1002C571C((char *)__dst, (long long *)v41, (long long *)v39, 0);
  sub_100004950(v37, "TA");
  sub_100004950(v35, "AlishaTimeoutAOverrideSeconds");
  sub_1002C571C(v45, (long long *)v37, (long long *)v35, 0);
  sub_100004950(v33, "TB");
  sub_100004950(v31, "AlishaTimeoutBOverrideSeconds");
  sub_1002C571C((char *)v47, (long long *)v33, (long long *)v31, 0);
  sub_100004950(v29, "TRFP");
  sub_100004950(v27, "AlishaTimeoutRefirePeriodOverrideSeconds");
  sub_1002C571C((char *)&v49, (long long *)v29, (long long *)v27, 0);
  sub_100004950(v25, "MTRF");
  sub_100004950(v23, "AlishaMaxTimeoutRefiresOverride");
  sub_1002C571C(v51, (long long *)v25, (long long *)v23, 0);
  sub_100004950(v19, "MRM");
  sub_100004950(v17, "AlishaMinRanMultiplierOverride");
  sub_1002C571C((char *)v52, (long long *)v19, (long long *)v17, 0);
  sub_100004950(v15, "STO");
  sub_100004950(__p, "AlishaStartTimeOffsetSeconds");
  sub_1002C571C(v53, (long long *)v15, (long long *)__p, 1);
  qword_1008A7CA8 = 0;
  qword_1008A7CB0 = 0;
  qword_1008A7CB8 = 0;
  char v21 = &qword_1008A7CA8;
  char v22 = 0;
  qword_1008A7CA8 = (uint64_t)operator new(0x188uLL);
  qword_1008A7CB0 = qword_1008A7CA8;
  qword_1008A7CB8 = qword_1008A7CA8 + 392;
  qword_1008A7CB0 = (uint64_t)sub_1002C5B58((uint64_t)&qword_1008A7CB8, __dst, &v54, (void *)qword_1008A7CA8);
  uint64_t v1 = 49;
  do
  {
    uint64_t v2 = (void **)((char *)__dst + v1 * 8);
    if (SHIBYTE(v41[v1 + 1]) < 0) {
      operator delete(*(v2 - 4));
    }
    if (*((char *)v2 - 33) < 0) {
      operator delete(*(v2 - 7));
    }
    v1 -= 7;
  }
  while (v1 * 8);
  if (v14 < 0) {
    operator delete(__p[0]);
  }
  if (v16 < 0) {
    operator delete(v15[0]);
  }
  if (v18 < 0) {
    operator delete(v17[0]);
  }
  if (v20 < 0) {
    operator delete(v19[0]);
  }
  if (v24 < 0) {
    operator delete(v23[0]);
  }
  if (v26 < 0) {
    operator delete(v25[0]);
  }
  if (v28 < 0) {
    operator delete(v27[0]);
  }
  if (v30 < 0) {
    operator delete(v29[0]);
  }
  if (v32 < 0) {
    operator delete(v31[0]);
  }
  if (v34 < 0) {
    operator delete(v33[0]);
  }
  if (v36 < 0) {
    operator delete(v35[0]);
  }
  if (v38 < 0) {
    operator delete(v37[0]);
  }
  if (v40 < 0) {
    operator delete(v39[0]);
  }
  if (v42 < 0) {
    operator delete(v41[0]);
  }
  __cxa_atexit((void (*)(void *))sub_1002C451C, &qword_1008A7CA8, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A7CC0, "GLP.plist");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A7CC0, (void *)&_mh_execute_header);
  sub_100004950(v41, "DSBR");
  sub_100004950(v39, "DisableSleepBetweenRangingCycles");
  sub_1002C571C((char *)__dst, (long long *)v41, (long long *)v39, 0);
  sub_100004950(v37, "DSLP");
  sub_100004950(v35, "AllowRoseDeepSleep");
  sub_1002C571C(v45, (long long *)v37, (long long *)v35, 3);
  qword_1008A7CD8 = 0;
  qword_1008A7CE0 = 0;
  qword_1008A7CE8 = 0;
  v33[0] = &qword_1008A7CD8;
  LOBYTE(v33[1]) = 0;
  qword_1008A7CD8 = (uint64_t)operator new(0x70uLL);
  qword_1008A7CE0 = qword_1008A7CD8;
  qword_1008A7CE8 = qword_1008A7CD8 + 112;
  uint64_t v3 = 0;
  qword_1008A7CE0 = (uint64_t)sub_1002C5B58((uint64_t)&qword_1008A7CE8, __dst, v47, (void *)qword_1008A7CD8);
  do
  {
    long long v4 = (void **)((char *)__dst + v3 * 8);
    if (SHIBYTE(v46[v3]) < 0) {
      operator delete(v4[10]);
    }
    if (*((char *)v4 + 79) < 0) {
      operator delete(v4[7]);
    }
    v3 -= 7;
  }
  while (v3 != -14);
  if (v36 < 0) {
    operator delete(v35[0]);
  }
  if (v38 < 0) {
    operator delete(v37[0]);
  }
  if (v40 < 0) {
    operator delete(v39[0]);
  }
  if (v42 < 0) {
    operator delete(v41[0]);
  }
  __cxa_atexit((void (*)(void *))sub_1002C451C, &qword_1008A7CD8, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A7CF0, "BTP.plist");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A7CF0, (void *)&_mh_execute_header);
  sub_100004950(v41, "SMAM");
  sub_100004950(v39, "BtThresholdScannerModelAdvertiserModel");
  sub_1002C571C((char *)__dst, (long long *)v41, (long long *)v39, 2);
  sub_100004950(v37, "SCAM");
  sub_100004950(v35, "BtThresholdScannerClassAdvertiserModel");
  sub_1002C571C(v45, (long long *)v37, (long long *)v35, 2);
  sub_100004950(v33, "AM");
  sub_100004950(v31, "BtThresholdAdvertiserModel");
  sub_1002C571C((char *)v47, (long long *)v33, (long long *)v31, 2);
  sub_100004950(v29, "SMAC");
  sub_100004950(v27, "BtThresholdScannerModelAdvertiserClass");
  sub_1002C571C((char *)&v49, (long long *)v29, (long long *)v27, 2);
  sub_100004950(v25, "SM");
  sub_100004950(v23, "BtThresholdScannerModel");
  sub_1002C571C(v51, (long long *)v25, (long long *)v23, 2);
  qword_1008A7D08 = 0;
  qword_1008A7D10 = 0;
  qword_1008A7D18 = 0;
  v19[0] = &qword_1008A7D08;
  LOBYTE(v19[1]) = 0;
  qword_1008A7D08 = (uint64_t)operator new(0x118uLL);
  qword_1008A7D10 = qword_1008A7D08;
  qword_1008A7D18 = qword_1008A7D08 + 280;
  qword_1008A7D10 = (uint64_t)sub_1002C5B58((uint64_t)&qword_1008A7D18, __dst, v52, (void *)qword_1008A7D08);
  uint64_t v5 = 35;
  do
  {
    uint64_t v6 = (void **)((char *)__dst + v5 * 8);
    if (SHIBYTE(v41[v5 + 1]) < 0) {
      operator delete(*(v6 - 4));
    }
    if (*((char *)v6 - 33) < 0) {
      operator delete(*(v6 - 7));
    }
    v5 -= 7;
  }
  while (v5 * 8);
  if (v24 < 0) {
    operator delete(v23[0]);
  }
  if (v26 < 0) {
    operator delete(v25[0]);
  }
  if (v28 < 0) {
    operator delete(v27[0]);
  }
  if (v30 < 0) {
    operator delete(v29[0]);
  }
  if (v32 < 0) {
    operator delete(v31[0]);
  }
  if (v34 < 0) {
    operator delete(v33[0]);
  }
  if (v36 < 0) {
    operator delete(v35[0]);
  }
  if (v38 < 0) {
    operator delete(v37[0]);
  }
  if (v40 < 0) {
    operator delete(v39[0]);
  }
  if (v42 < 0) {
    operator delete(v41[0]);
  }
  __cxa_atexit((void (*)(void *))sub_1002C451C, &qword_1008A7D08, (void *)&_mh_execute_header);
  sub_100004950(&xmmword_1008A7D20, "FP.plist");
  uint64_t v7 = __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A7D20, (void *)&_mh_execute_header);
  sub_1002C5FC0(v7, v8, v9);
  sub_100004950(&xmmword_1008A7D50, "NIACP.plist");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A7D50, (void *)&_mh_execute_header);
  sub_100004950(v41, "TOBFTR");
  sub_100004950(v39, "NIBackgroundAccessoryTimeoutSecondsOverride_InactivityBeforeTracking");
  sub_1002C571C((char *)__dst, (long long *)v41, (long long *)v39, 0);
  sub_100004950(v37, "TOAFTR");
  sub_100004950(v35, "NIBackgroundAccessoryTimeoutSecondsOverride_InactivityAfterTracking");
  sub_1002C571C(v45, (long long *)v37, (long long *)v35, 0);
  sub_100004950(v33, "TOTJ");
  sub_100004950(v31, "NIBackgroundAccessoryTimeoutSecondsOverride_TotalJobTime");
  sub_1002C571C((char *)v47, (long long *)v33, (long long *)v31, 0);
  qword_1008A7D68 = 0;
  qword_1008A7D70 = 0;
  qword_1008A7D78 = 0;
  v29[0] = &qword_1008A7D68;
  LOBYTE(v29[1]) = 0;
  qword_1008A7D68 = (uint64_t)operator new(0xA8uLL);
  qword_1008A7D70 = qword_1008A7D68;
  qword_1008A7D78 = qword_1008A7D68 + 168;
  uint64_t v10 = 0;
  qword_1008A7D70 = (uint64_t)sub_1002C5B58((uint64_t)&qword_1008A7D78, __dst, &v49, (void *)qword_1008A7D68);
  do
  {
    char v11 = (void **)((char *)__dst + v10 * 8);
    if (SHIBYTE(v48[v10 + 1]) < 0) {
      operator delete(v11[17]);
    }
    if (*((char *)v11 + 135) < 0) {
      operator delete(v11[14]);
    }
    v10 -= 7;
  }
  while (v10 != -21);
  if (v32 < 0) {
    operator delete(v31[0]);
  }
  if (v34 < 0) {
    operator delete(v33[0]);
  }
  if (v36 < 0) {
    operator delete(v35[0]);
  }
  if (v38 < 0) {
    operator delete(v37[0]);
  }
  if (v40 < 0) {
    operator delete(v39[0]);
  }
  if (v42 < 0) {
    operator delete(v41[0]);
  }
  __cxa_atexit((void (*)(void *))sub_1002C451C, &qword_1008A7D68, (void *)&_mh_execute_header);
  sub_1002C57C4(__dst, &xmmword_1008A7C90, (long long **)&qword_1008A7CA8);
  sub_1002C57C4(&v44, &xmmword_1008A7CC0, (long long **)&qword_1008A7CD8);
  sub_1002C57C4(v46, &xmmword_1008A7CF0, (long long **)&qword_1008A7D08);
  sub_1002C57C4(v48, &xmmword_1008A7D20, (long long **)&qword_1008A7D38);
  sub_1002C57C4(v50, &xmmword_1008A7D50, (long long **)&qword_1008A7D68);
  sub_1002C5CA0((uint64_t)&qword_1008A7D80, (const void **)__dst, 5);
  for (uint64_t i = 0; i != -30; i -= 6)
  {
    v41[0] = &v50[i + 3];
    sub_1002C5AC0((void ***)v41);
    if (SHIBYTE(v50[i + 2]) < 0) {
      operator delete((void *)v50[i]);
    }
  }
  __cxa_atexit((void (*)(void *))sub_1002C4554, &qword_1008A7D80, (void *)&_mh_execute_header);
}

void sub_1002C9448(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,uint64_t a34,void *__p,uint64_t a36,uint64_t a37,void *a38,uint64_t a39,uint64_t a40,void *a41,uint64_t a42,uint64_t a43,void *a44,uint64_t a45,uint64_t a46,void *a47,uint64_t a48,uint64_t a49,void *a50,uint64_t a51,uint64_t a52,void *a53)
{
  sub_10042B698(v53 + 240, &a53);
  _Unwind_Resume(a1);
}

void sub_1002C9C00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002C9D50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002C9E44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002C9F0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002CA134(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002CA2F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002CA438(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_1002CA560@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085E478[a1]);
}

void *sub_1002CA574@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085E4D0[a1]);
}

void *sub_1002CA588@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085E518[a1]);
}

void *sub_1002CA59C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085E538[a1]);
}

uint64_t sub_1002CA5B0(uint64_t a1, void *a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = off_10085E3B0;
  objc_initWeak((id *)(a1 + 24), a2);
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

uint64_t sub_1002CA600(uint64_t a1, void *a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = off_10085E3B0;
  id v3 = a2;
  *(void *)(a1 + 24) = 0;
  objc_initWeak((id *)(a1 + 32), v3);

  *(_DWORD *)(a1 + 40) = 1;
  return a1;
}

uint64_t sub_1002CA66C(uint64_t a1)
{
  *(void *)a1 = off_10085E3B0;
  uint64_t v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "~PRRangingManagerClient()", v5, 2u);
  }
  objc_destroyWeak((id *)(a1 + 32));
  objc_destroyWeak((id *)(a1 + 24));
  id v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3) {
    std::__shared_weak_count::__release_weak(v3);
  }
  return a1;
}

void sub_1002CA718(uint64_t a1)
{
  sub_1002CA66C(a1);

  operator delete();
}

void sub_1002CA750(uint64_t a1, uint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 40);
  if (v3)
  {
    if (v3 != 1) {
      return;
    }
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained serviceRequestDidUpdateStatus:*(void *)a2, *(unsigned int *)(a2 + 8)];
  }
  else
  {
    long long v4 = (id *)(a1 + 24);
    id v10 = objc_loadWeakRetained((id *)(a1 + 24));
    char v5 = objc_opt_respondsToSelector();

    if ((v5 & 1) == 0 || (*(_DWORD *)(a2 + 4) - 1) > 3) {
      return;
    }
    id v6 = objc_loadWeakRetained(v4);
    int v7 = *(_DWORD *)(a2 + 4) - 1;
    if (v7 > 3) {
      uint64_t v8 = 0;
    }
    else {
      uint64_t v8 = qword_1004BEE90[v7];
    }
    id WeakRetained = v6;
    [v6 rangingRequestDidUpdateStatus:v8];
  }
}

void sub_1002CA844(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002CA860(uint64_t a1, double *a2)
{
  int v3 = *(_DWORD *)(a1 + 40);
  if (v3)
  {
    if (v3 != 1) {
      return;
    }
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained didReceiveNewSolution:a2];
    goto LABEL_4;
  }
  if (*((_DWORD *)a2 + 8) == 5) {
    return;
  }
  long long v4 = (id *)(a1 + 24);
  id v52 = objc_loadWeakRetained((id *)(a1 + 24));
  char v5 = objc_opt_respondsToSelector();

  if ((v5 & 1) == 0) {
    return;
  }
  id WeakRetained = objc_loadWeakRetained(v4);
  id v6 = objc_alloc_init((Class)NSMutableArray);
  if (*((unsigned char *)a2 + 928))
  {
    BOOL v7 = *((unsigned char *)a2 + 888) != 0;
    BOOL v8 = *((unsigned char *)a2 + 904) != 0;
    if (*((unsigned char *)a2 + 904)) {
      double v9 = a2[112];
    }
    else {
      double v9 = 0.0;
    }
    BOOL v10 = *((unsigned char *)a2 + 920) != 0;
    if (*((unsigned char *)a2 + 920)) {
      double v11 = a2[114];
    }
    else {
      double v11 = 0.0;
    }
  }
  else
  {
    BOOL v10 = 0;
    BOOL v8 = 0;
    BOOL v7 = 0;
    double v11 = 0.0;
    double v9 = 0.0;
  }
  int v12 = *((_DWORD *)a2 + 8);
  if (v12 == 4)
  {
    if (!*((unsigned char *)a2 + 600))
    {
      uint64_t v46 = "solution.raw_rose_measurement.has_value()";
      int v47 = 239;
      goto LABEL_67;
    }
    if (!*((unsigned char *)a2 + 752)) {
      __assert_rtn("toXPCCompatibleType", "PRRangingManagerClient.mm", 241, "solution.sensor_fusion_solution.has_value()");
    }
    if (*((unsigned char *)a2 + 592)) {
      double v13 = a2[73];
    }
    else {
      double v13 = 0.0;
    }
    if (*((unsigned char *)a2 + 576)) {
      double v14 = a2[71];
    }
    else {
      double v14 = 10.0;
    }
    int v15 = *((unsigned __int8 *)a2 + 80);
    if (*((unsigned char *)a2 + 80)) {
      double v16 = a2[9];
    }
    else {
      double v16 = 0.0;
    }
    uint64_t v17 = sub_1002CB314(*((unsigned __int8 *)a2 + 360), *((unsigned __int8 *)a2 + 416));
    int v18 = *((unsigned __int8 *)a2 + 24);
    double v19 = a2[2];
    id v20 = objc_alloc((Class)PRRoseSolution);
    if (v18) {
      double v21 = v19;
    }
    else {
      double v21 = 0.0;
    }
    LOBYTE(v50) = v15 != 0;
    LOBYTE(v49) = v10;
    BYTE1(v48) = v8;
    LOBYTE(v48) = v7;
    id v22 = objc_msgSend(v20, "initWithVariant:macAddr:machAbsTime_sec:machContTimeValid:machContTime_sec:range_m:rangeUnc_m:azValid:elValid:az_deg:el_deg:azUnc_deg:elUnc_deg:fovConfidence:soiRssiValid:soiRssi_dBm:antennaType:prevSolutionIsBad:trackScoreValid:trackScore:sweepAngleValid:sweepAngle_deg:multipathProbabilityValid:multipathProbability:", 0, *((void *)a2 + 5), *((unsigned __int8 *)a2 + 24), 1, 1, 1, *a2, v21, a2[44], v14, a2[83], a2[82], a2[86], a2[85], *(void *)&v13,
            *((void *)a2 + 27),
            v17,
            v48,
            *(void *)&v9,
            v49,
            *(void *)&v11,
            v50,
            *(void *)&v16);
    [v6 addObject:v22];

    int v12 = *((_DWORD *)a2 + 8);
  }
  if ((v12 | 2) == 3)
  {
    if (!*((unsigned char *)a2 + 600))
    {
      uint64_t v46 = "solution.raw_rose_measurement.has_value()";
      int v47 = 297;
      goto LABEL_67;
    }
    if (*((unsigned char *)a2 + 576)) {
      double v23 = a2[71];
    }
    else {
      double v23 = 10.0;
    }
    if (*((unsigned char *)a2 + 592)) {
      double v24 = a2[73];
    }
    else {
      double v24 = 0.0;
    }
    int v25 = *((unsigned __int8 *)a2 + 80);
    if (*((unsigned char *)a2 + 80)) {
      double v26 = a2[9];
    }
    else {
      double v26 = 0.0;
    }
    uint64_t v27 = sub_1002CB314(*((unsigned __int8 *)a2 + 360), *((unsigned __int8 *)a2 + 416));
    int v28 = *((unsigned __int8 *)a2 + 24);
    double v29 = a2[2];
    id v30 = objc_alloc((Class)PRRoseSolution);
    if (v28) {
      double v31 = v29;
    }
    else {
      double v31 = 0.0;
    }
    LOBYTE(v50) = v25 != 0;
    LOBYTE(v49) = v10;
    BYTE1(v48) = v8;
    LOBYTE(v48) = v7;
    id v32 = objc_msgSend(v30, "initWithVariant:macAddr:machAbsTime_sec:machContTimeValid:machContTime_sec:range_m:rangeUnc_m:azValid:elValid:az_deg:el_deg:azUnc_deg:elUnc_deg:fovConfidence:soiRssiValid:soiRssi_dBm:antennaType:prevSolutionIsBad:trackScoreValid:trackScore:sweepAngleValid:sweepAngle_deg:multipathProbabilityValid:multipathProbability:", 0, *((void *)a2 + 5), *((unsigned __int8 *)a2 + 24), 0, 0, 1, *a2, v31, a2[44], v23, 0.0, 0.0, 0.0, 0.0, *(void *)&v24,
            *((void *)a2 + 27),
            v27,
            v48,
            *(void *)&v9,
            v49,
            *(void *)&v11,
            v50,
            *(void *)&v26);
    [v6 addObject:v32];

    int v12 = *((_DWORD *)a2 + 8);
  }
  char v33 = WeakRetained;
  if ((v12 & 0xFFFFFFFE) == 2)
  {
    if (*((unsigned char *)a2 + 752))
    {
      int v34 = *((unsigned __int8 *)a2 + 600);
      if (*((unsigned char *)a2 + 600))
      {
        uint64_t v35 = *((void *)a2 + 27);
        double v36 = a2[73];
        uint64_t v37 = *((unsigned __int8 *)a2 + 592);
        uint64_t v38 = sub_1002CB314(*((unsigned __int8 *)a2 + 360), *((unsigned __int8 *)a2 + 416));
        if (!v37) {
          double v36 = 0.0;
        }
        BOOL v39 = *((unsigned char *)a2 + 80) != 0;
        if (*((unsigned char *)a2 + 80)) {
          double v40 = a2[9];
        }
        else {
          double v40 = 0.0;
        }
      }
      else
      {
        uint64_t v38 = 0;
        BOOL v39 = 0;
        uint64_t v35 = 0;
        double v36 = 0.0;
        double v40 = 0.0;
      }
      int v41 = *((unsigned __int8 *)a2 + 24);
      double v42 = a2[2];
      id v43 = objc_alloc((Class)PRRoseSolution);
      if (v41) {
        double v44 = v42;
      }
      else {
        double v44 = 0.0;
      }
      LOBYTE(v50) = v39;
      LOBYTE(v49) = v10;
      BYTE1(v48) = v8;
      LOBYTE(v48) = v7;
      id v45 = objc_msgSend(v43, "initWithVariant:macAddr:machAbsTime_sec:machContTimeValid:machContTime_sec:range_m:rangeUnc_m:azValid:elValid:az_deg:el_deg:azUnc_deg:elUnc_deg:fovConfidence:soiRssiValid:soiRssi_dBm:antennaType:prevSolutionIsBad:trackScoreValid:trackScore:sweepAngleValid:sweepAngle_deg:multipathProbabilityValid:multipathProbability:", 1, *((void *)a2 + 5), *((unsigned __int8 *)a2 + 24), 1, 1, v34 != 0, *a2, v44, a2[81], a2[84], a2[83], a2[82], a2[86], a2[85], *(void *)&v36,
              v35,
              v38,
              v48,
              *(void *)&v9,
              v49,
              *(void *)&v11,
              v50,
              *(void *)&v40);
      [v6 addObject:v45];

      char v33 = WeakRetained;
      goto LABEL_62;
    }
    uint64_t v46 = "solution.sensor_fusion_solution.has_value()";
    int v47 = 359;
LABEL_67:
    __assert_rtn("toXPCCompatibleType", "PRRangingManagerClient.mm", v47, v46);
  }
LABEL_62:
  [v33 didReceiveNewSolutions:v6];

LABEL_4:
}

void sub_1002CAD4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id a18)
{
  _Unwind_Resume(a1);
}

void sub_1002CADAC(uint64_t a1, uint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 40);
  if (v3)
  {
    if (v3 != 1) {
      return;
    }
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained didReceiveSessionStartNotification:a2];
    char v5 = WeakRetained;
  }
  else
  {
    if (*(_DWORD *)a2) {
      return;
    }
    id v6 = (id *)(a1 + 24);
    id v7 = objc_loadWeakRetained((id *)(a1 + 24));
    char v8 = objc_opt_respondsToSelector();

    if ((v8 & 1) == 0) {
      return;
    }
    if (!*(unsigned char *)(a2 + 16)) {
      sub_10000AE44();
    }
    double v9 = +[NSNumber numberWithUnsignedLongLong:*(void *)(a2 + 8)];
    uint64_t v11 = +[PRSessionStartNotification createWithBluetoothConnectionEventCounterValue:v9];

    id v10 = objc_loadWeakRetained(v6);
    [v10 didReceiveSessionStartNotification:v11];

    char v5 = (void *)v11;
  }
}

void sub_1002CAEBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1002CAEE4(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a1 + 40) == 1)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained didReceiveRemoteData:a2];
  }
}

void sub_1002CAF50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002CAF70(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a1 + 40) == 1)
  {
    int v3 = (id *)(a1 + 32);
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    char v4 = objc_opt_respondsToSelector();

    if (v4)
    {
      id v6 = objc_loadWeakRetained(v3);
      [v6 didReceiveAopSensorFusionUpdate:**(unsigned int **)(a2 + 8) withBtConnHandle:*(unsigned __int16 *)(*(void *)(a2 + 8) + 4)];
    }
  }
}

void sub_1002CB01C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1002CB038(uint64_t a1, uint64_t *a2)
{
  char v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
    sub_10042B748((uint64_t)a2, v4);
  }
  int v5 = *(_DWORD *)(a1 + 40);
  if (v5)
  {
    if (v5 != 1) {
      return;
    }
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained didFailWithErrorCode:*a2 errorString:a2 + 1];
  }
  else
  {
    id v7 = (id *)(a1 + 24);
    id v8 = objc_loadWeakRetained((id *)(a1 + 24));
    char v9 = objc_opt_respondsToSelector();

    if ((v9 & 1) == 0) {
      return;
    }
    id WeakRetained = objc_loadWeakRetained(v7);
    uint64_t v10 = *a2;
    uint64_t v13 = a2[1];
    int v12 = a2 + 1;
    uint64_t v11 = (void *)v13;
    if (*((char *)v12 + 23) >= 0) {
      uint64_t v11 = v12;
    }
    double v14 = +[NSString stringWithFormat:@"%s", v11];
    NSErrorUserInfoKey v17 = NSLocalizedDescriptionKey;
    int v18 = v14;
    int v15 = +[NSDictionary dictionaryWithObjects:&v18 forKeys:&v17 count:1];
    double v16 = PRErrorWithCodeAndUserInfo(v10, v15);

    [WeakRetained didFailWithError:v16];
  }
}

void sub_1002CB1B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002CB1FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(a1 + 40);
  if (v5)
  {
    if (v5 != 1) {
      return;
    }
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained rangingServiceDidUpdateState:a2 cause:a3];
  }
  else
  {
    id v6 = (id *)(a1 + 24);
    id v12 = objc_loadWeakRetained((id *)(a1 + 24));
    char v7 = objc_opt_respondsToSelector();

    if ((v7 & 1) == 0) {
      return;
    }
    id v8 = objc_loadWeakRetained(v6);
    if (a2 > 3) {
      uint64_t v9 = 3;
    }
    else {
      uint64_t v9 = qword_1004BEEB0[(int)a2];
    }
    if (a3 > 7) {
      uint64_t v10 = 5;
    }
    else {
      uint64_t v10 = qword_1004BEED0[(int)a3];
    }
    id WeakRetained = v8;
    [v8 rangingServiceDidUpdateState:v9 cause:v10];
  }
}

void sub_1002CB2F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1002CB314(int a1, int a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1008A7E78, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1008A7E78))
  {
    dword_1008A7E70 = *((_DWORD *)sub_100007D00() + 144);
    __cxa_guard_release(&qword_1008A7E78);
  }
  if (a2 == 5) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = 2 * (a2 == 9);
  }
  sub_100188B74((uint64_t)v7, dword_1008A7E70, v4, 0);
  unsigned int v5 = sub_100189530((uint64_t)v7, a1) - 1;
  if (v5 >= 4) {
    return 2;
  }
  else {
    return qword_1004BEF10[v5];
  }
}

void sub_1002CB3D8(_Unwind_Exception *a1)
{
}

void sub_1002CB3F0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C888, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C888))
  {
    sub_100004950(qword_10089C870, "PRRoseProviderNetworkListener");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C870, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C888);
  }
}

void sub_1002CB488(_Unwind_Exception *a1)
{
}

void sub_1002CB4A0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8A8))
  {
    sub_100004950(&qword_10089C890, "com.apple.nearbyd.accessory.download");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C890, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8A8);
  }
}

void sub_1002CB538(_Unwind_Exception *a1)
{
}

void sub_1002CB550()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8C8))
  {
    sub_100004950(&qword_10089C8B0, "com.apple.nearbyd.accessory.files");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C8B0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8C8);
  }
}

void sub_1002CB5E8(_Unwind_Exception *a1)
{
}

void sub_1002CB600()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8E8))
  {
    sub_100004950(qword_10089C8D0, "MA_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8D0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8E8);
  }
}

void sub_1002CB698(_Unwind_Exception *a1)
{
}

void sub_1002CB6B0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C908, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C908))
  {
    sub_100004950(qword_10089C8F0, "MB_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8F0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C908);
  }
}

void sub_1002CB748(_Unwind_Exception *a1)
{
}

void sub_1002CB760()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C928, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C928))
  {
    sub_100004950(qword_10089C910, "D");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C910, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C928);
  }
}

void sub_1002CB7F8(_Unwind_Exception *a1)
{
}

void sub_1002CB810()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C948, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C948))
  {
    sub_100004950(&qword_10089C930, "A");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C930, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C948);
  }
}

void sub_1002CB8A8(_Unwind_Exception *a1)
{
}

void sub_1002CB8C0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C968, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C968))
  {
    sub_100004950(qword_10089C950, "FAS.bin");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C950, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C968);
  }
}

void sub_1002CB958(_Unwind_Exception *a1)
{
}

void sub_1002CB970()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C988, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C988))
  {
    qword_10089C970 = 0;
    qword_10089C978 = 0;
    qword_10089C980 = 0;
    uint64_t v0 = operator new(0x30uLL);
    qword_10089C978 = (uint64_t)(v0 + 3);
    qword_10089C980 = (uint64_t)(v0 + 3);
    _OWORD *v0 = xmmword_1004BEDE8;
    v0[1] = unk_1004BEDF8;
    v0[2] = xmmword_1004BEE08;
    qword_10089C970 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_100008CAC, &qword_10089C970, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C988);
  }
}

void sub_1002CBA2C(_Unwind_Exception *a1)
{
}

void sub_1002CBA44()
{
  sub_10039D144();
  uint64_t v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  int v3 = std::string::append(&v38, ".bin");
  long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1008A7DA8 = v3->__r_.__value_.__r.__words[2];
  xmmword_1008A7D98 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A7D98, (void *)&_mh_execute_header);
  sub_10039D144();
  unsigned int v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  char v7 = std::string::append(&v38, ".bin");
  long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1008A7DC0 = v7->__r_.__value_.__r.__words[2];
  xmmword_1008A7DB0 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A7DB0, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  uint64_t v11 = std::string::append(&v38, ".bin");
  long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1008A7DD8 = v11->__r_.__value_.__r.__words[2];
  xmmword_1008A7DC8 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A7DC8, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  int v15 = std::string::append(&v38, ".bin");
  long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1008A7DF0 = v15->__r_.__value_.__r.__words[2];
  xmmword_1008A7DE0 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A7DE0, (void *)&_mh_execute_header);
  sub_10039D144();
  NSErrorUserInfoKey v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  double v19 = std::string::append(&v38, ".bin");
  long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1008A7E08 = v19->__r_.__value_.__r.__words[2];
  xmmword_1008A7DF8 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A7DF8, (void *)&_mh_execute_header);
  sub_10039D144();
  double v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  double v23 = std::string::append(&v38, ".bin");
  long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1008A7E20 = v23->__r_.__value_.__r.__words[2];
  xmmword_1008A7E10 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A7E10, (void *)&_mh_execute_header);
  sub_10039D144();
  int v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  uint64_t v27 = std::string::append(&v38, ".bin");
  long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1008A7E38 = v27->__r_.__value_.__r.__words[2];
  xmmword_1008A7E28 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A7E28, (void *)&_mh_execute_header);
  sub_10039D144();
  double v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  double v31 = std::string::append(&v38, ".bin");
  long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1008A7E50 = v31->__r_.__value_.__r.__words[2];
  xmmword_1008A7E40 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A7E40, (void *)&_mh_execute_header);
  sub_10039D144();
  char v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  uint64_t v35 = std::string::append(&v38, ".bin");
  long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1008A7E68 = v35->__r_.__value_.__r.__words[2];
  xmmword_1008A7E58 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A7E58, (void *)&_mh_execute_header);
}

void sub_1002CC084(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002CC180(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002CC1E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  long long v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)PRSystemSettingsMonitor;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

id sub_1002CC410(uint64_t a1, uint64_t a2, void *a3)
{
  return _[a3 airplaneModeStatusChanged];
}

id sub_1002CC418(uint64_t a1)
{
  return _[*(id *)(a1 + 32) airplaneModeStatusChanged];
}

void sub_1002CC588(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);

  _Unwind_Resume(a1);
}

CFStringRef sub_1002CC5A8(uint64_t a1)
{
  CFStringRef v1 = @"PRAirplaneModeOff";
  if (a1 == 1) {
    CFStringRef v1 = @"PRAirplaneModeOn";
  }
  if (a1) {
    return v1;
  }
  else {
    return @"PRAirplaneModeStatusUnknown";
  }
}

void sub_1002CC758()
{
  qword_1008A7E80 = (uint64_t)os_log_create("com.apple.nearbyd", "Regulatory");
}

uint64_t sub_1002CC7AC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = 0;
  long long v4 = (void (__cdecl ***)(std::ofstream *__hidden))(a1 + 8);
  unsigned int v5 = (void (__cdecl ***)(std::ofstream *__hidden))(a1 + 424);
  *(void *)(a1 + 8) = v7;
  *(void (__cdecl ***)(std::ofstream *__hidden))((char *)v4 + *(void *)(v7 - 24)) = v6;
  long long v8 = (std::ios_base *)(a1 + 8 + *(void *)(*(void *)(a1 + 8) - 24));
  std::ios_base::init(v8, (void *)(a1 + 16));
  v8[1].__vftable = 0;
  v8[1].__fmtflags_ = -1;
  std::filebuf::basic_filebuf();
  if (*(char *)(a2 + 23) >= 0) {
    uint64_t v9 = (const char *)a2;
  }
  else {
    uint64_t v9 = *(const char **)a2;
  }
  gzFile v10 = gzopen(v9, "rb");
  *(void *)a1 = v10;
  if (!v10)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042B8A0();
    }
    exceptiouint64_t n = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::operator+<char>();
    std::runtime_error::runtime_error(exception, &v14);
  }
  std::ofstream::open();
  if (!*(void *)(a1 + 136))
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042B928();
    }
    gzclose(*(gzFile *)a1);
    *(void *)a1 = 0;
    uint64_t v13 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::operator+<char>();
    std::runtime_error::runtime_error(v13, &v14);
  }
  return a1;
}

void sub_1002CCA64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
    {
LABEL_6:
      sub_100164F4C(v15);
      _Unwind_Resume(a1);
    }
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  goto LABEL_6;
}

uint64_t sub_1002CCAD8(uint64_t a1)
{
  long long v2 = *(gzFile_s **)a1;
  if (v2) {
    gzclose(v2);
  }
  std::filebuf::~filebuf();
  std::ostream::~ostream();
  std::ios::~ios();
  return a1;
}

BOOL sub_1002CCBC0(uint64_t a1)
{
  sub_1002CC7AC((uint64_t)file, a1);
  if (file[0] && file[17])
  {
    sub_10002DB50(buf, 0x4000uLL);
    while (2)
    {
      int v1 = gzeof(file[0]);
      BOOL v2 = v1 != 0;
      if (v1)
      {
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
          sub_10042B990();
        }
      }
      else
      {
        int v3 = gzread(file[0], buf[0], 0x4000u);
        if (v3)
        {
          uint64_t v4 = 0;
          uint64_t v5 = v3;
          uint64_t v6 = v3;
          do
          {
            std::ostream::write();
            if ((*((unsigned char *)&file[5] + *(void *)&file[1][-1].have) & 5) != 0)
            {
              if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
                sub_10042BAF4();
              }
              goto LABEL_15;
            }
            ++v4;
          }
          while (v6 != v4);
          if (v6 == v5) {
            continue;
          }
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
            sub_10042BA8C();
          }
        }
        else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
        {
          sub_10042BA24();
        }
      }
      break;
    }
LABEL_15:
    if (buf[0])
    {
      buf[1] = buf[0];
      operator delete(buf[0]);
    }
  }
  else
  {
    BOOL v2 = 0;
  }
  sub_1002CCAD8((uint64_t)file);
  return v2;
}

void sub_1002CCDC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, char a12)
{
  sub_1002CCAD8((uint64_t)&a12);
  if (a2 == 1)
  {
    std::string v14 = __cxa_begin_catch(a1);
    int v15 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042BB5C((uint64_t)v14, v15);
    }
    __cxa_end_catch();
    JUMPOUT(0x1002CCD2CLL);
  }
  _Unwind_Resume(a1);
}

void sub_1002CCF0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002CCF84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002CD050(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002CD214(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1002CD22C(uint64_t a1, void *a2)
{
  BOOL v2 = *(void **)(a1 + 32);
  id v3 = [a2 shortDescription];
  [v2 appendFormat:@"\n    [%@] ", v3];
}

void sub_1002CD288(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002CD3A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002CD4B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002CD740(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002CD98C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002CDA78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002CDBBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_1002CDDD8@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085E580[a1]);
}

void *sub_1002CDDEC@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085E5D8[a1]);
}

void *sub_1002CDE00@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085E620[a1]);
}

void *sub_1002CDE14@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085E640[a1]);
}

void *sub_1002CDE28(void *result, uint64_t a2, uint64_t a3)
{
  *BOOL result = a2;
  result[1] = a3;
  return result;
}

void sub_1002CDE30(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(**(void **)(a1 + 8) + 96))(&v6);
  v22[0] = 0;
  char v27 = 0;
  if (v6)
  {
    uint64_t v4 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042BC08(v4);
    }
  }
  else
  {
    sub_1002CE094(a1, (uint64_t)&v6, (uint64_t)v14);
    sub_1002CEBA8((uint64_t)v22);
    v22[0] = v14[0];
    memset(v23, 0, sizeof(v23));
    sub_100236044(v23, v15, (uint64_t)v16, (v16 - (unsigned char *)v15) >> 3);
    memset(v24, 0, sizeof(v24));
    sub_1002360C0(v24, v17, (uint64_t)v18, (v18 - (unsigned char *)v17) >> 3);
    memset(v25, 0, sizeof(v25));
    sub_10023613C(v25, __p, (uint64_t)v20, (v20 - (unsigned char *)__p) >> 3);
    v26[0] = v21[0];
    *(_DWORD *)((char *)v26 + 7) = *(_DWORD *)((char *)v21 + 7);
    char v27 = 1;
    if (__p)
    {
      long long v20 = __p;
      operator delete(__p);
    }
    if (v17)
    {
      long long v18 = v17;
      operator delete(v17);
    }
    if (v15)
    {
      long long v16 = v15;
      operator delete(v15);
    }
  }
  int v5 = v6;
  sub_100235F10(v13, (uint64_t)v22);
  *(_DWORD *)a2 = v5;
  sub_100235F10((unsigned char *)(a2 + 8), (uint64_t)v13);
  sub_1002361B8((uint64_t)v13);
  sub_1002361B8((uint64_t)v22);
  if (v11)
  {
    long long v12 = v11;
    operator delete(v11);
  }
  if (v9)
  {
    gzFile v10 = v9;
    operator delete(v9);
  }
  if (v7)
  {
    long long v8 = v7;
    operator delete(v7);
  }
}

void sub_1002CE01C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v35 = *(void **)(v33 - 112);
  if (v35)
  {
    *(void *)(v33 - 104) = v35;
    operator delete(v35);
  }
  long long v36 = *(void **)(v33 - 136);
  if (v36)
  {
    *(void *)(v33 - 128) = v36;
    operator delete(v36);
  }
  sub_1002CE260(&a33);
  sub_1002361B8(v33 - 144);
  sub_1002CE260(&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_1002CE094@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint8_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "regulatory,produceRoseConfig", buf, 2u);
  }
  uint64_t v7 = (*(uint64_t (**)(void))(**(void **)a1 + 32))();
  buf[0] = 0;
  char v17 = 0;
  if (BYTE6(v7))
  {
    char v17 = 1;
    *(void *)uint8_t buf = v7 & 0xFFFFFFFFFFFFLL;
  }
  __int16 v15 = 11;
  long long v8 = +[NSUserDefaults standardUserDefaults];
  unsigned int v9 = [v8 BOOLForKey:@"DisableCoex"];

  if (v9) {
    __int16 v15 = 0;
  }
  gzFile v10 = +[PRGlobalDebugSettings sharedSettings];
  id v11 = [v10 integerForKey:PRDebugConfigArgDebugLevel];

  if (!v11)
  {
    long long v12 = +[NSUserDefaults standardUserDefaults];
    id v11 = [v12 integerForKey:@"RoseDebugLevelOverride"];
  }
  if (v11) {
    char v13 = (char)v11;
  }
  else {
    char v13 = 1;
  }
  return sub_1002CEAB0(a3, v13, a2 + 8, a2 + 32, a2 + 56, &v15, (uint64_t *)buf);
}

void sub_1002CE240(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_1002CE260(void *a1)
{
  BOOL v2 = (void *)a1[7];
  if (v2)
  {
    a1[8] = v2;
    operator delete(v2);
  }
  id v3 = (void *)a1[4];
  if (v3)
  {
    a1[5] = v3;
    operator delete(v3);
  }
  uint64_t v4 = (void *)a1[1];
  if (v4)
  {
    a1[2] = v4;
    operator delete(v4);
  }
  return a1;
}

uint64_t sub_1002CE2B4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 48))();
}

BOOL sub_1002CE2DC(uint64_t a1, char *a2, unsigned __int8 *a3, __int16 a4)
{
  (*(void (**)(void **__return_ptr))(**(void **)(a1 + 8) + 48))(&v38);
  long long v8 = (unsigned __int8 *)v38;
  uint64_t v7 = v39;
  if (v39 != v38)
  {
    uint64_t v35 = a2;
    uint64_t v33 = a3;
    int v9 = 0;
    int v10 = 0;
    long long v34 = (unsigned __int8 *)v38;
    do
    {
      int v11 = *v8;
      if (v11 == 9)
      {
        char v13 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)uint8_t buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "[PRConfigurationManager] RF channel 9 ALLOWED.", buf, 2u);
        }
        int v10 = 1;
      }
      else if (v11 == 5)
      {
        long long v12 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)uint8_t buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "[PRConfigurationManager] RF channel 5 ALLOWED.", buf, 2u);
        }
        int v9 = 1;
      }
      ++v8;
    }
    while (v8 != v7);
    if (((v9 | v10) & 1) == 0)
    {
      long long v30 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
        sub_10042BCC4(v30);
      }
      double v31 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)uint8_t buf = 136315650;
        *(void *)&uint8_t buf[4] = "/Library/Caches/com.apple.xbs/Sources/Proximity/Libraries/DaemonCore/PRConfigurationManager.mm";
        __int16 v45 = 1024;
        int v46 = 124;
        __int16 v47 = 2080;
        uint64_t v48 = "getPreferredChannels";
        _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_INFO, "%s:%d: assertion failure in %s", buf, 0x1Cu);
      }
      abort();
    }
    std::string v14 = +[NSUserDefaults standardUserDefaults];
    uint64_t v15 = [v14 objectForKey:@"PreferredUWBChannelOverride"];
    long long v8 = v34;
    long long v16 = a2;
    char v17 = (void *)v15;
    if ((a4 & 0xFF00) != 0)
    {
      if (a4 == 5) {
        goto LABEL_15;
      }
    }
    else if (v15)
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        int v21 = [v17 integerValue];
        if (v21 == sub_1003A8E98(5, 1))
        {
          long long v22 = qword_1008ABDE0;
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)uint8_t buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "[PRConfigurationManager] Ch5 set as preferred in default write. Override preference for channel 9.", buf, 2u);
          }
LABEL_15:
          __int16 v18 = 9;
          if (v9)
          {
            char v19 = 5;
            goto LABEL_26;
          }
LABEL_29:
          double v23 = v33;
          if ((v10 & 1) == 0) {
            __assert_rtn("getPreferredChannels", "PRConfigurationManager.mm", 183, "leastPreferredChannelAllowed");
          }
          *long long v16 = v18;
          goto LABEL_31;
        }
        int v28 = sub_1003A8E98(9, 1);
        double v29 = qword_1008ABDE0;
        if (v21 != v28)
        {
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
            sub_10042BC4C(v21, v29);
          }
          long long v32 = qword_1008ABDE0;
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)uint8_t buf = 136315650;
            *(void *)&uint8_t buf[4] = "/Library/Caches/com.apple.xbs/Sources/Proximity/Libraries/DaemonCore/PRConfigurationManager.mm";
            __int16 v45 = 1024;
            int v46 = 167;
            __int16 v47 = 2080;
            uint64_t v48 = "getPreferredChannels";
            _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_INFO, "%s:%d: assertion failure in %s", buf, 0x1Cu);
          }
          abort();
        }
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)uint8_t buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "[PRConfigurationManager] Ch 9 set as preferred in default write. This is already the preference. Do nothing.", buf, 2u);
        }
        __int16 v18 = 5;
        if ((v10 & 1) == 0)
        {
          LOBYTE(v10) = v9;
          long long v16 = v35;
          goto LABEL_29;
        }
        char v19 = 9;
        LOBYTE(v10) = v9;
        long long v16 = v35;
LABEL_26:
        *long long v16 = v19;
        double v23 = v33;
        if (v10)
        {
          *(_WORD *)uint64_t v33 = v18 | 0x100;
LABEL_33:
          long long v24 = (id)qword_1008ABDE0;
          if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
          {
            int v25 = buf;
            sub_1003A8C44(*v16, buf);
            if (SBYTE3(v48) < 0) {
              int v25 = *(unsigned char **)buf;
            }
            if (v23[1])
            {
              sub_1003A8C44(*v23, __p);
              if (v37 >= 0) {
                long long v26 = __p;
              }
              else {
                long long v26 = (void **)__p[0];
              }
              *(_DWORD *)double v40 = 136315394;
              int v41 = v25;
              __int16 v42 = 2080;
              id v43 = (const char *)v26;
              _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "[PRConfigurationManager] Primary channel %s. Alternate channel %s", v40, 0x16u);
              if (v37 < 0) {
                operator delete(__p[0]);
              }
            }
            else
            {
              *(_DWORD *)double v40 = 136315394;
              int v41 = v25;
              __int16 v42 = 2080;
              id v43 = "None";
              _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "[PRConfigurationManager] Primary channel %s. Alternate channel %s", v40, 0x16u);
            }
            if (SBYTE3(v48) < 0) {
              operator delete(*(void **)buf);
            }
          }

          goto LABEL_46;
        }
LABEL_31:
        if (v23[1]) {
          v23[1] = 0;
        }
        goto LABEL_33;
      }
    }
    __int16 v18 = 5;
    if ((v10 & 1) == 0)
    {
      LOBYTE(v10) = v9;
      goto LABEL_29;
    }
    char v19 = 9;
    LOBYTE(v10) = v9;
    goto LABEL_26;
  }
  long long v20 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
    sub_10042BD08(v20);
  }
LABEL_46:
  if (v38)
  {
    BOOL v39 = (unsigned __int8 *)v38;
    operator delete(v38);
  }
  return v7 != v8;
}

void sub_1002CE894(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0) {
    operator delete(__p);
  }

  if (a16) {
    operator delete(a16);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1002CE8FC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 56))();
}

uint64_t sub_1002CE924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(_DWORD *)a3 = 0;
  if (!*(unsigned char *)(a2 + 105)) {
    return 0;
  }
  sub_1003A7CC4(*(unsigned __int8 *)(a2 + 104), 1, a3, a4, a5, a6, a7, a8);
  *(unsigned char *)(a3 + 1) = *(unsigned char *)(a3 + 1) & 0xF3 | (4 * (v17 & 3));
  if (!*(unsigned char *)(a2 + 107)) {
    return 0;
  }
  sub_1003A7CC4(*(unsigned __int8 *)(a2 + 106), 1, v11, v12, v13, v14, v15, v16);
  *(unsigned char *)(a3 + 1) = *(unsigned char *)(a3 + 1) & 0xCF | (16 * (v18 & 3));
  if (!*(unsigned char *)(a2 + 174)) {
    return 0;
  }
  *(_WORD *)(a3 + 2) = *(_WORD *)(a2 + 172);
  if (!*(unsigned char *)(a2 + 153)) {
    return 0;
  }
  *(unsigned char *)(a3 + 1) = *(unsigned char *)(a3 + 1) & 0xFC | sub_1003A8E98(*(unsigned __int8 *)(a2 + 152), 1) & 3;
  unsigned __int16 v19 = (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 64))(*(void *)(a1 + 8));
  if (v19 < 0x100u) {
    return 0;
  }
  *(unsigned char *)a3 = v19;
  return 1;
}

void *sub_1002CEA1C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  unsigned __int16 v3 = (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 64))(*(void *)(a1 + 8));
  if (v3 > 0xFFu)
  {
    return sub_1003CB450(v3, a2);
  }
  else
  {
    return sub_100004950(a2, "");
  }
}

uint64_t sub_1002CEAB0(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, _WORD *a6, uint64_t *a7)
{
  *(unsigned char *)a1 = a2;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  sub_100236044((void *)(a1 + 8), *(const void **)a3, *(void *)(a3 + 8), (uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 3);
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  sub_1002360C0((void *)(a1 + 32), *(const void **)a4, *(void *)(a4 + 8), (uint64_t)(*(void *)(a4 + 8) - *(void *)a4) >> 3);
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  sub_10023613C((void *)(a1 + 56), *(const void **)a5, *(void *)(a5 + 8), (uint64_t)(*(void *)(a5 + 8) - *(void *)a5) >> 3);
  *(_WORD *)(a1 + 80) = *a6;
  uint64_t v12 = *a7;
  *(unsigned char *)(a1 + 90) = *((unsigned char *)a7 + 8);
  *(void *)(a1 + 82) = v12;
  return a1;
}

void sub_1002CEB74(_Unwind_Exception *exception_object)
{
  int v5 = *v3;
  if (*v3)
  {
    *(void *)(v1 + 40) = v5;
    operator delete(v5);
  }
  uint64_t v6 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 16) = v6;
    operator delete(v6);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002CEBA8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 96))
  {
    BOOL v2 = *(void **)(a1 + 56);
    if (v2)
    {
      *(void *)(a1 + 64) = v2;
      operator delete(v2);
    }
    unsigned __int16 v3 = *(void **)(a1 + 32);
    if (v3)
    {
      *(void *)(a1 + 40) = v3;
      operator delete(v3);
    }
    uint64_t v4 = *(void **)(a1 + 8);
    if (v4)
    {
      *(void *)(a1 + 16) = v4;
      operator delete(v4);
    }
    *(unsigned char *)(a1 + 96) = 0;
  }
}

void sub_1002CECB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1002CEDF8(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateLocationAuthorized];
}

void sub_1002CF10C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1002CF1B4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9 = a2;
  *(void *)a1 = v9;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_OWORD *)(a1 + 40) = xmmword_1004BEF50;
  *(unsigned char *)(a1 + 32) = 0;
  *(int64x2_t *)(a1 + 56) = vdupq_n_s64(0xC08F400000000000);
  *(void *)(a1 + 72) = 0xC08F400000000000;
  *(unsigned char *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  sub_1002CF6FC(a1 + 96, a3);
  sub_100027124(a1 + 128, a4);
  sub_1002CF794(a1 + 160, a5);
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  sub_10019698C(a1 + 224, *(void **)a1);
  *(void *)(a1 + 392) = 0;
  *(_WORD *)(a1 + 400) = 0;
  int v10 = *(NSObject **)a1;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  _DWORD v12[2] = sub_1002CF368;
  void v12[3] = &unk_1008466D8;
  v12[4] = a1;
  dispatch_async(v10, v12);

  return a1;
}

void sub_1002CF2F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void **a14)
{
  int v21 = v17;

  a14 = v21;
  sub_1001FC3BC(&a14);
  sub_1001FD120(v19);
  sub_10000AF74(v18);
  sub_1001FCEA4(v16);
  if (*(char *)(v14 + 31) < 0) {
    operator delete(*v20);
  }

  _Unwind_Resume(a1);
}

id sub_1002CF368(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  BOOL v2 = [[PRCoreLocationClient alloc] initWithQueue:*v1];
  unsigned __int16 v3 = (void *)v1[27];
  v1[27] = v2;

  uint64_t v4 = (void *)v1[27];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1002CF458;
  void v8[3] = &unk_1008572A0;
  v8[4] = v1;
  [v4 setRegulatoryLocationAuthorized:v8];
  int v5 = (void *)v1[27];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100006C60;
  v7[3] = &unk_10085E660;
  v7[4] = v1;
  return [v5 setRegulatoryLocationHandler:v7];
}

void sub_1002CF458(uint64_t a1, uint64_t a2)
{
}

void sub_1002CF460(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = qword_1008A7E88;
  if (os_log_type_enabled((os_log_t)qword_1008A7E88, OS_LOG_TYPE_DEBUG)) {
    sub_10042C0DC(a2, v4, v5, v6, v7, v8, v9, v10);
  }
  if (*(void *)(a1 + 152)) {
    sub_1000220A0(a1 + 128, a2);
  }
}

void sub_1002CF4CC(uint64_t a1)
{
}

uint64_t sub_1002CF4D4(NSObject **a1)
{
  if (os_log_type_enabled((os_log_t)qword_1008A7E88, OS_LOG_TYPE_DEBUG)) {
    sub_10042C14C();
  }
  BOOL v2 = *a1;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1002CF578;
  block[3] = &unk_1008466D8;
  void block[4] = a1;
  dispatch_async(v2, block);
  return 1;
}

id sub_1002CF578(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 216);
  if (result) {
    return [result startMonitoring];
  }
  return result;
}

uint64_t sub_1002CF58C(NSObject **a1)
{
  if (os_log_type_enabled((os_log_t)qword_1008A7E88, OS_LOG_TYPE_DEBUG)) {
    sub_10042C180();
  }
  BOOL v2 = *a1;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1002CF630;
  block[3] = &unk_1008466D8;
  void block[4] = a1;
  dispatch_async(v2, block);
  return 1;
}

id sub_1002CF630(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 216);
  if (result) {
    return _[result upgradeToBestAccuracyMonitoring];
  }
  return result;
}

uint64_t sub_1002CF644(NSObject **a1)
{
  if (os_log_type_enabled((os_log_t)qword_1008A7E88, OS_LOG_TYPE_DEBUG)) {
    sub_10042C1B4();
  }
  BOOL v2 = *a1;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1002CF6E8;
  block[3] = &unk_1008466D8;
  void block[4] = a1;
  dispatch_async(v2, block);
  return 1;
}

id sub_1002CF6E8(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 216);
  if (result) {
    return _[result dowgradeToBystanderMonitoring];
  }
  return result;
}

uint64_t sub_1002CF6FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_1002CF794(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_1002CF82C()
{
  qword_1008A7E88 = (uint64_t)os_log_create("com.apple.nearbyd", "Regulatory");
}

uint64_t sub_1002CF880(uint64_t result, char a2)
{
  *(unsigned char *)id result = a2;
  *(void *)(result + 8) = 0;
  *(unsigned char *)(result + 16) = 0;
  *(unsigned char *)(result + 48) = 0;
  *(unsigned char *)(result + 56) = 0;
  *(unsigned char *)(result + 64) = 0;
  *(unsigned char *)(result + 120) = 0;
  *(unsigned char *)(result + 128) = 0;
  *(unsigned char *)(result + 184) = 0;
  *(unsigned char *)(result + 192) = 0;
  *(unsigned char *)(result + 248) = 0;
  *(unsigned char *)(result + 256) = 0;
  *(unsigned char *)(result + 312) = 0;
  *(_WORD *)(result + 320) = -1;
  *(void *)(result + 336) = 0;
  *(void *)(result + 344) = 0;
  *(void *)(result + 328) = 0;
  return result;
}

void sub_1002CF8C8(unsigned __int8 *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *((void *)a1 + 1) = 0;
  if (a1[48]) {
    a1[48] = 0;
  }
  sub_1002CFEBC((uint64_t)a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t)&v72);
  while (v76)
  {
    sub_1002D0034(&v72, *a1, v10, v11, v12, v13, v14, v15);
    if (!v76) {
      sub_10000AE44();
    }
    LODWORD(v67[0]) = v72;
    v67[1] = v73;
    char v69 = 0;
    uint64_t v70 = 0;
    std::string __p = 0;
    sub_10016D488(&__p, v74, *(uint64_t *)v75, *(void *)v75 - (void)v74);
    if (!v76) {
      goto LABEL_100;
    }
    unsigned int v22 = v72;
    if (v72 == 4162)
    {
      sub_1002D01D0((uint64_t)a1, (uint64_t)&v72);
      sub_1002D021C(a1 + 320, v23, v24, v25, v26, v27, v28, v29);
      if (!v76) {
        goto LABEL_100;
      }
      unsigned int v22 = v72;
    }
    if (v22 == 4234)
    {
      sub_1002D0278(a1, (uint64_t)&v72, v16, v17, v18, v19, v20, v21, v67[0]);
      if (!v76) {
LABEL_100:
      }
        sub_10000AE44();
    }
    unsigned int v30 = v72;
    if (v72 == 5129)
    {
      unint64_t v31 = *((void *)a1 + 42);
      if (v31 >= *((void *)a1 + 43))
      {
        uint64_t v32 = sub_1002D0D60((uint64_t *)a1 + 41, (uint64_t)v67);
      }
      else
      {
        sub_1002D0D08((uint64_t)(a1 + 328), (uint64_t)v67);
        uint64_t v32 = v31 + 40;
      }
      *((void *)a1 + 42) = v32;
      if (!v76) {
        goto LABEL_100;
      }
      unsigned int v30 = v72;
    }
    if (v30 == 5134)
    {
      unint64_t v33 = *((void *)a1 + 42);
      if (v33 >= *((void *)a1 + 43))
      {
        uint64_t v34 = sub_1002D0D60((uint64_t *)a1 + 41, (uint64_t)v67);
      }
      else
      {
        sub_1002D0D08((uint64_t)(a1 + 328), (uint64_t)v67);
        uint64_t v34 = v33 + 40;
      }
      *((void *)a1 + 42) = v34;
      if (!v76) {
        goto LABEL_100;
      }
    }
    unsigned int v35 = v72;
    if (v72 == 5154)
    {
      unint64_t v36 = *((void *)a1 + 42);
      if (v36 >= *((void *)a1 + 43))
      {
        uint64_t v37 = sub_1002D0D60((uint64_t *)a1 + 41, (uint64_t)v67);
      }
      else
      {
        sub_1002D0D08((uint64_t)(a1 + 328), (uint64_t)v67);
        uint64_t v37 = v36 + 40;
      }
      *((void *)a1 + 42) = v37;
      if (!v76) {
        goto LABEL_100;
      }
      unsigned int v35 = v72;
    }
    if (v35 == 5164)
    {
      unint64_t v38 = *((void *)a1 + 42);
      if (v38 >= *((void *)a1 + 43))
      {
        uint64_t v39 = sub_1002D0D60((uint64_t *)a1 + 41, (uint64_t)v67);
      }
      else
      {
        sub_1002D0D08((uint64_t)(a1 + 328), (uint64_t)v67);
        uint64_t v39 = v38 + 40;
      }
      *((void *)a1 + 42) = v39;
      if (!v76) {
        goto LABEL_100;
      }
    }
    unsigned int v40 = v72;
    if (v72 == 5149)
    {
      unint64_t v41 = *((void *)a1 + 42);
      if (v41 >= *((void *)a1 + 43))
      {
        uint64_t v42 = sub_1002D0D60((uint64_t *)a1 + 41, (uint64_t)v67);
      }
      else
      {
        sub_1002D0D08((uint64_t)(a1 + 328), (uint64_t)v67);
        uint64_t v42 = v41 + 40;
      }
      *((void *)a1 + 42) = v42;
      if (!v76) {
        goto LABEL_100;
      }
      unsigned int v40 = v72;
    }
    if (v40 == 5169)
    {
      unint64_t v43 = *((void *)a1 + 42);
      if (v43 >= *((void *)a1 + 43))
      {
        uint64_t v44 = sub_1002D0D60((uint64_t *)a1 + 41, (uint64_t)v67);
      }
      else
      {
        sub_1002D0D08((uint64_t)(a1 + 328), (uint64_t)v67);
        uint64_t v44 = v43 + 40;
      }
      *((void *)a1 + 42) = v44;
      if (!v76) {
        goto LABEL_100;
      }
    }
    unsigned int v45 = v72;
    if (v72 == 5195)
    {
      unint64_t v46 = *((void *)a1 + 42);
      if (v46 >= *((void *)a1 + 43))
      {
        uint64_t v47 = sub_1002D0D60((uint64_t *)a1 + 41, (uint64_t)v67);
      }
      else
      {
        sub_1002D0D08((uint64_t)(a1 + 328), (uint64_t)v67);
        uint64_t v47 = v46 + 40;
      }
      *((void *)a1 + 42) = v47;
      if (!v76) {
        goto LABEL_100;
      }
      unsigned int v45 = v72;
    }
    if (v45 == 5174)
    {
      unint64_t v48 = *((void *)a1 + 42);
      if (v48 >= *((void *)a1 + 43))
      {
        uint64_t v49 = sub_1002D0D60((uint64_t *)a1 + 41, (uint64_t)v67);
      }
      else
      {
        sub_1002D0D08((uint64_t)(a1 + 328), (uint64_t)v67);
        uint64_t v49 = v48 + 40;
      }
      *((void *)a1 + 42) = v49;
      if (!v76) {
        goto LABEL_100;
      }
    }
    unsigned int v50 = v72;
    if (v72 == 5197)
    {
      unint64_t v51 = *((void *)a1 + 42);
      if (v51 >= *((void *)a1 + 43))
      {
        uint64_t v52 = sub_1002D0D60((uint64_t *)a1 + 41, (uint64_t)v67);
      }
      else
      {
        sub_1002D0D08((uint64_t)(a1 + 328), (uint64_t)v67);
        uint64_t v52 = v51 + 40;
      }
      *((void *)a1 + 42) = v52;
      if (!v76) {
        goto LABEL_100;
      }
      unsigned int v50 = v72;
    }
    if (v50 == 5184)
    {
      unint64_t v53 = *((void *)a1 + 42);
      if (v53 >= *((void *)a1 + 43))
      {
        uint64_t v54 = sub_1002D0D60((uint64_t *)a1 + 41, (uint64_t)v67);
      }
      else
      {
        sub_1002D0D08((uint64_t)(a1 + 328), (uint64_t)v67);
        uint64_t v54 = v53 + 40;
      }
      *((void *)a1 + 42) = v54;
      if (!v76) {
        goto LABEL_100;
      }
    }
    unsigned int v55 = v72;
    if (v72 == 5201)
    {
      unint64_t v56 = *((void *)a1 + 42);
      if (v56 >= *((void *)a1 + 43))
      {
        uint64_t v57 = sub_1002D0D60((uint64_t *)a1 + 41, (uint64_t)v67);
      }
      else
      {
        sub_1002D0D08((uint64_t)(a1 + 328), (uint64_t)v67);
        uint64_t v57 = v56 + 40;
      }
      *((void *)a1 + 42) = v57;
      if (!v76) {
        goto LABEL_100;
      }
      unsigned int v55 = v72;
    }
    if (v55 == 5179)
    {
      unint64_t v58 = *((void *)a1 + 42);
      if (v58 >= *((void *)a1 + 43))
      {
        uint64_t v59 = sub_1002D0D60((uint64_t *)a1 + 41, (uint64_t)v67);
      }
      else
      {
        sub_1002D0D08((uint64_t)(a1 + 328), (uint64_t)v67);
        uint64_t v59 = v58 + 40;
      }
      *((void *)a1 + 42) = v59;
      if (!v76) {
        goto LABEL_100;
      }
    }
    unsigned int v60 = v72;
    if (v72 == 5199)
    {
      unint64_t v61 = *((void *)a1 + 42);
      if (v61 >= *((void *)a1 + 43))
      {
        uint64_t v62 = sub_1002D0D60((uint64_t *)a1 + 41, (uint64_t)v67);
      }
      else
      {
        sub_1002D0D08((uint64_t)(a1 + 328), (uint64_t)v67);
        uint64_t v62 = v61 + 40;
      }
      *((void *)a1 + 42) = v62;
      if (!v76) {
        goto LABEL_100;
      }
      unsigned int v60 = v72;
    }
    if (v60 == 5189)
    {
      unint64_t v63 = *((void *)a1 + 42);
      if (v63 >= *((void *)a1 + 43))
      {
        uint64_t v64 = sub_1002D0D60((uint64_t *)a1 + 41, (uint64_t)v67);
      }
      else
      {
        sub_1002D0D08((uint64_t)(a1 + 328), (uint64_t)v67);
        uint64_t v64 = v63 + 40;
      }
      *((void *)a1 + 42) = v64;
      if (!v76) {
        goto LABEL_100;
      }
    }
    if (v72 == 5203)
    {
      unint64_t v65 = *((void *)a1 + 42);
      if (v65 >= *((void *)a1 + 43))
      {
        uint64_t v66 = sub_1002D0D60((uint64_t *)a1 + 41, (uint64_t)v67);
      }
      else
      {
        sub_1002D0D08((uint64_t)(a1 + 328), (uint64_t)v67);
        uint64_t v66 = v65 + 40;
      }
      *((void *)a1 + 42) = v66;
    }
    if (__p)
    {
      char v69 = __p;
      operator delete(__p);
    }
    sub_1002CFEBC((uint64_t)a1, a2, v16, v17, v18, v19, v20, v21, (uint64_t)v67);
    sub_1002D0C60((uint64_t)&v72, (uint64_t)v67);
    if (v71)
    {
      if (__p)
      {
        char v69 = __p;
        operator delete(__p);
      }
    }
  }
}

void sub_1002CFE6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  if (a22)
  {
    if (__p) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(exception_object);
}

double sub_1002CFEBC@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  if (!*(unsigned char *)(a1 + 48) || *(void *)(a1 + 8) >= *(void *)(a1 + 24) + *(void *)(a1 + 16))
  {
    sub_1002D0604(a1, a2, a3, a4, a5, a6, a7, a8);
    if (!*(unsigned char *)(a1 + 48)) {
      goto LABEL_14;
    }
    sub_1002D07E8(a1 + 16, v12, v13, v14, v15, v16, v17, v18);
    if (!*(unsigned char *)(a1 + 48)) {
      sub_10000AE44();
    }
  }
  unsigned int v20 = *(_DWORD *)(a1 + 36);
  if (v20 >= 2) {
    sub_10042C3D4();
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if (v20) {
    uint64_t v22 = 4;
  }
  else {
    uint64_t v22 = 2;
  }
  if (v22 + v21 + 2 <= (unint64_t)(a2[1] - *a2))
  {
    uint64_t v23 = sub_1002D0880(a1, a2, v21, 2, a5, a6, a7, a8);
    __int16 v24 = v23;
    unsigned int v29 = sub_1002D0880(v23, a2, *(void *)(a1 + 8) + 2, v22, v25, v26, v27, v28);
    uint64_t v36 = *(void *)(a1 + 8);
    uint64_t v37 = 6;
    if (!v20) {
      uint64_t v37 = 4;
    }
    unint64_t v38 = v36 + v37 + v29;
    uint64_t v39 = *a2;
    if (v38 <= a2[1] - *a2)
    {
      LODWORD(v42) = v24 & 0x3FFF;
      *((void *)&v42 + 1) = v29;
      long long v43 = 0uLL;
      uint64_t v44 = 0;
      sub_100253FD4(&v43, (const void *)(v39 + v36 + v37), v39 + v36 + v37 + v29, v29);
      uint64_t v40 = *(void *)(a1 + 8);
      *(void *)(a1 + 8) = v38;
      double result = *(double *)&v42;
      long long v41 = v43;
      *(_OWORD *)a9 = v42;
      *(_OWORD *)(a9 + 16) = v41;
      *(void *)(a9 + 32) = v44;
      *(void *)(a9 + 40) = v40;
      *(unsigned char *)(a9 + 48) = 1;
      return result;
    }
    sub_1003A9600("RoseCalFileParser::getNextTLV: read idx %zu + data offset %zu + length %u exceeds data size %zu", v30, v31, v29, v32, v33, v34, v35, v36);
  }
LABEL_14:
  *(unsigned char *)a9 = 0;
  *(unsigned char *)(a9 + 48) = 0;
  return result;
}

void sub_1002D0034(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = a2;
  sub_10000486C("Cal TLV:", a2, a3, a4, a5, a6, a7, a8, v49);
  uint64_t v10 = *a1;
  sub_1002D0A60(*a1, v55);
  sub_10000486C("    tag ID: 0x%04x (%s)", v11, v12, v13, v14, v15, v16, v17, v10);
  if (v56 < 0) {
    operator delete(v55[0]);
  }
  sub_10000486C("    length: %zu", v18, v19, v20, v21, v22, v23, v24, *((void *)a1 + 1));
  sub_10000486C("    offset within file: %zu", v25, v26, v27, v28, v29, v30, v31, *((void *)a1 + 5));
  if (v8)
  {
    sub_10000486C("    value:", v32, v33, v34, v35, v36, v37, v38, v50);
    sub_100004950(v53, "");
    uint64_t v40 = *((void *)a1 + 2);
    uint64_t v39 = *((void *)a1 + 3);
    sub_100004950(__p, "");
    sub_1003E0810((uint64_t)v53, v40, v39 - v40, 0x10u, (uint64_t)__p);
    if (v52 < 0) {
      operator delete(__p[0]);
    }
    if (v54 < 0) {
      operator delete(v53[0]);
    }
    unint64_t v48 = v55;
    if (v56 < 0) {
      unint64_t v48 = (void **)v55[0];
    }
    sub_10000486C("%s", v41, v42, v43, v44, v45, v46, v47, (uint64_t)v48);
    if (v56 < 0) {
      operator delete(v55[0]);
    }
  }
}

void sub_1002D0184(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (*(char *)(v23 - 33) < 0) {
    operator delete(*(void **)(v23 - 56));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002D01D0(uint64_t result, uint64_t a2)
{
  if (*(_DWORD *)a2 != 4162) {
    sub_10042C42C();
  }
  BOOL v2 = *(char **)(a2 + 16);
  if (*(void *)(a2 + 24) - (void)v2 <= 1uLL) {
    sub_10042C400();
  }
  char v3 = *v2;
  *(unsigned char *)(result + 320) = v2[1];
  *(unsigned char *)(result + 321) = v3;
  return result;
}

void sub_1002D021C(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10000486C("SystemFactoryCalVersion:", a2, a3, a4, a5, a6, a7, a8, v23);
  sub_10000486C("    major version: %d", v9, v10, v11, v12, v13, v14, v15, *a1);
  sub_10000486C("    minor version: %d", v16, v17, v18, v19, v20, v21, v22, a1[1]);
}

void sub_1002D0278(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  char v21 = 0;
  int v9 = a1[320];
  if (v9 != 255)
  {
    unsigned int v11 = a1[321];
    if (v11 != 255)
    {
      if (v9 == 1)
      {
        if (v11 > 0xC)
        {
          if (*(void *)(a2 + 8) != 131044)
          {
            uint64_t v12 = "systemFactoryCalVersion indicates two forward PDOA Luts but the segment length does not match";
            goto LABEL_4;
          }
          uint64_t v13 = (void *)(a2 + 16);
          sub_1002D08F4((void *)(a2 + 16), 0, 0x7FF9uLL, (uint64_t)&v16);
          sub_1001C8200(v18, 0, 180, 0, 180, &v16);
          sub_1001C8D24((uint64_t)(a1 + 192), (uint64_t)v18);
          if (__p)
          {
            uint64_t v20 = __p;
            operator delete(__p);
          }
          if (v16)
          {
            uint64_t v17 = v16;
            operator delete(v16);
          }
          sub_1002D08F4(v13, 0xFFF2uLL, 0x7FF9uLL, (uint64_t)&v16);
          sub_1001C8200(v18, 0, 180, 0, 180, &v16);
          sub_1001C8D24((uint64_t)(a1 + 256), (uint64_t)v18);
          uint64_t v14 = a1 + 56;
          if (__p)
          {
            uint64_t v20 = __p;
            operator delete(__p);
          }
          if (v16)
          {
            uint64_t v17 = v16;
            operator delete(v16);
          }
          goto LABEL_39;
        }
      }
      else if (a1[320] || !a1[321])
      {
        uint64_t v12 = "Unexpected systemFactoryCalVersion, return from parsing PDOA_Forward_LUT";
        goto LABEL_4;
      }
      if (*(void *)(a2 + 8) != 262088)
      {
        uint64_t v12 = "systemFactoryCalVersion indicates four forward PDOA Luts but the segment length does not match";
        goto LABEL_4;
      }
      uint64_t v15 = (void *)(a2 + 16);
      sub_1002D08F4((void *)(a2 + 16), 0, 0x7FF9uLL, (uint64_t)&v16);
      sub_1001C8200(v18, 0, 180, 0, 180, &v16);
      sub_1001C8D24((uint64_t)(a1 + 64), (uint64_t)v18);
      if (__p)
      {
        uint64_t v20 = __p;
        operator delete(__p);
      }
      if (v16)
      {
        uint64_t v17 = v16;
        operator delete(v16);
      }
      sub_1002D08F4(v15, 0xFFF2uLL, 0x7FF9uLL, (uint64_t)&v16);
      sub_1001C8200(v18, 0, 180, 0, 180, &v16);
      sub_1001C8D24((uint64_t)(a1 + 128), (uint64_t)v18);
      if (__p)
      {
        uint64_t v20 = __p;
        operator delete(__p);
      }
      if (v16)
      {
        uint64_t v17 = v16;
        operator delete(v16);
      }
      sub_1002D08F4(v15, 0x1FFE4uLL, 0x7FF9uLL, (uint64_t)&v16);
      sub_1001C8200(v18, 0, 180, 0, 180, &v16);
      sub_1001C8D24((uint64_t)(a1 + 192), (uint64_t)v18);
      if (__p)
      {
        uint64_t v20 = __p;
        operator delete(__p);
      }
      if (v16)
      {
        uint64_t v17 = v16;
        operator delete(v16);
      }
      sub_1002D08F4(v15, 0x2FFD6uLL, 0x7FF9uLL, (uint64_t)&v16);
      sub_1001C8200(v18, 0, 180, 0, 180, &v16);
      sub_1001C8D24((uint64_t)(a1 + 256), (uint64_t)v18);
      uint64_t v14 = a1 + 56;
      if (__p)
      {
        uint64_t v20 = __p;
        operator delete(__p);
      }
      if (v16)
      {
        uint64_t v17 = v16;
        operator delete(v16);
      }
      sub_1003A8CA4(&v21, 5);
LABEL_39:
      sub_1003A8CA4(&v21, 9);
      sub_1001C8D94(v14, v21);
      return;
    }
  }
  uint64_t v12 = "systemFactoryCalVersion is not valid, return from parsing PDOA_Forward_LUT";
LABEL_4:

  sub_1003A9600(v12, a2, a3, a4, a5, a6, a7, a8, a9);
}

void sub_1002D05A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  if (__p) {
    operator delete(__p);
  }
  if (a10) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002D0604(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10000486C("RoseCalFileParser::findNextHeader: read idx %zu", (uint64_t)a2, a3, a4, a5, a6, a7, a8, *(void *)(a1 + 8));
  if (*(unsigned char *)(a1 + 48)) {
    *(unsigned char *)(a1 + 48) = 0;
  }
  unint64_t v18 = *(void *)(a1 + 8);
  uint64_t v20 = *a2;
  uint64_t v19 = a2[1];
  unint64_t v21 = v19 - *a2;
  if (v18 + 2 > v21)
  {
LABEL_16:
    sub_10000486C("RoseCalFileParser::findNextHeader: no header found! read idx %zu", v11, v12, v13, v14, v15, v16, v17, v18);
    return;
  }
  uint64_t v22 = 0;
  while (1)
  {
    int v23 = *(unsigned __int16 *)(v20 + v18);
    if (v23 == 20054) {
      break;
    }
    if (v23 == 20055)
    {
      uint64_t v24 = &unk_1004BEFA8;
      goto LABEL_9;
    }
LABEL_13:
    unint64_t v41 = v18 + 3;
    *(void *)(a1 + 8) = ++v18;
    unint64_t v21 = v19 - v20;
    --v22;
    if (v41 > v19 - v20)
    {
      if (v22)
      {
        sub_10000486C("RoseCalFileParser::findNextHeader: skipped %zu bytes looking for next header", v11, v12, v13, v14, v15, v16, v17, -v22);
        unint64_t v18 = *(void *)(a1 + 8);
      }
      goto LABEL_16;
    }
  }
  uint64_t v24 = &unk_1004BEF60;
LABEL_9:
  unint64_t v25 = v24[3];
  uint64_t v26 = v18 - v25;
  if (v18 < v25) {
    goto LABEL_13;
  }
  uint64_t v13 = v24[2];
  uint64_t v27 = v24[6];
  uint64_t v28 = v24[8];
  if (v13 + v24[4] + v26 + v27 + v28 > v21) {
    goto LABEL_13;
  }
  uint64_t v42 = v13 + v24[4] + v26 + v27 + v28;
  uint64_t v29 = sub_1002D0880(v10, a2, v24[1] + v26, v13, v14, v15, v16, v17);
  unsigned int v30 = v29;
  uint64_t v35 = sub_1002D0880(v29, a2, v24[5] + v26, v27, v31, v32, v33, v34);
  int v36 = v35;
  uint64_t v10 = sub_1002D0880(v35, a2, v24[7] + v26, v28, v37, v38, v39, v40);
  if (v36 != *((unsigned __int16 *)v24 + 1))
  {
    unint64_t v18 = *(void *)(a1 + 8);
    uint64_t v20 = *a2;
    uint64_t v19 = a2[1];
    goto LABEL_13;
  }
  if (!*(unsigned char *)(a1 + 48)) {
    *(unsigned char *)(a1 + 48) = 1;
  }
  *(void *)(a1 + 24) = v30;
  *(_DWORD *)(a1 + 32) = v23;
  *(_DWORD *)(a1 + 36) = v36;
  *(_DWORD *)(a1 + 40) = v10;
  *(void *)(a1 + 8) = v42;
  *(void *)(a1 + 16) = v42;
  if (v22) {
    sub_10000486C("RoseCalFileParser::findNextHeader: skipped %zu bytes looking for next header", v11, v12, v13, v14, v15, v16, v17, -v22);
  }
}

void sub_1002D07E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10000486C("Cal header:", a2, a3, a4, a5, a6, a7, a8, v44);
  sub_10000486C("    blob start idx: %zu", v9, v10, v11, v12, v13, v14, v15, *(void *)a1);
  sub_10000486C("    blob length: %zu", v16, v17, v18, v19, v20, v21, v22, *(void *)(a1 + 8));
  sub_10000486C("    signature: 0x%04x", v23, v24, v25, v26, v27, v28, v29, *(unsigned int *)(a1 + 16));
  sub_10000486C("    version: %u", v30, v31, v32, v33, v34, v35, v36, *(unsigned int *)(a1 + 20));
  sub_10000486C("    checksum: 0x%04x", v37, v38, v39, v40, v41, v42, v43, *(unsigned int *)(a1 + 24));
}

uint64_t sub_1002D0880(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a4 == 4)
  {
    if ((unint64_t)(a3 + 4) > a2[1] - *a2) {
      sub_10042C4C4();
    }
    return *(unsigned __int16 *)(*a2 + a3 + 2) | (*(unsigned __int16 *)(*a2 + a3) << 16);
  }
  else
  {
    if (a4 != 2) {
      sub_10042C458(a4, (uint64_t)a2, a3, a4, a5, a6, a7, a8);
    }
    if ((unint64_t)(a3 + 2) > a2[1] - *a2) {
      sub_10042C498();
    }
    return *(unsigned __int16 *)(*a2 + a3);
  }
}

void sub_1002D08F4(void *a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v5 = a2 + 2 * a3;
  if (v5 > a1[1] - *a1) {
    sub_10042C4F0();
  }
  unint64_t v6 = a2;
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  sub_1001C8C80((void **)a4, a3);
  if (v5 > v6)
  {
    int v8 = (void *)(a4 + 16);
    uint64_t v9 = *(_WORD **)(a4 + 8);
    do
    {
      __int16 v10 = *(_WORD *)(*a1 + v6);
      if ((unint64_t)v9 >= *v8)
      {
        uint64_t v12 = *(_WORD **)a4;
        uint64_t v13 = (uint64_t)v9 - *(void *)a4;
        if (v13 <= -3) {
          sub_1000267C4();
        }
        uint64_t v14 = v13 >> 1;
        unint64_t v15 = *v8 - (void)v12;
        if (v15 <= (v13 >> 1) + 1) {
          uint64_t v16 = v14 + 1;
        }
        else {
          uint64_t v16 = *v8 - (void)v12;
        }
        if (v15 >= 0x7FFFFFFFFFFFFFFELL) {
          uint64_t v17 = 0x7FFFFFFFFFFFFFFFLL;
        }
        else {
          uint64_t v17 = v16;
        }
        if (v17)
        {
          uint64_t v18 = (char *)sub_10014A47C(a4 + 16, v17);
          uint64_t v12 = *(_WORD **)a4;
          uint64_t v9 = *(_WORD **)(a4 + 8);
        }
        else
        {
          uint64_t v18 = 0;
        }
        uint64_t v19 = &v18[2 * v14];
        *(_WORD *)uint64_t v19 = v10;
        uint64_t v11 = v19 + 2;
        while (v9 != v12)
        {
          __int16 v20 = *--v9;
          *((_WORD *)v19 - 1) = v20;
          v19 -= 2;
        }
        *(void *)a4 = v19;
        *(void *)(a4 + 8) = v11;
        *(void *)(a4 + 16) = &v18[2 * v17];
        if (v12) {
          operator delete(v12);
        }
      }
      else
      {
        *uint64_t v9 = v10;
        uint64_t v11 = v9 + 1;
      }
      *(void *)(a4 + 8) = v11;
      v6 += 2;
      uint64_t v9 = v11;
    }
    while (v6 < v5);
  }
}

void sub_1002D0A3C(_Unwind_Exception *exception_object)
{
  char v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1002D0A60@<X0>(int a1@<W0>, void *a2@<X8>)
{
  BOOL v2 = "PDOA_LUT_Ch0";
  switch(a1)
  {
    case 4140:
      return sub_100004950(a2, v2);
    case 4141:
      BOOL v2 = "PDOA_LUT_Ch1";
      break;
    case 4142:
      BOOL v2 = "XO_Cal";
      break;
    case 4143:
      BOOL v2 = "TX_CW_Power_Cal";
      break;
    case 4144:
      BOOL v2 = "RX_Gain_Cal";
      break;
    case 4145:
    case 4146:
    case 4147:
    case 4148:
    case 4149:
    case 4150:
    case 4151:
    case 4153:
    case 4154:
    case 4155:
    case 4157:
    case 4158:
    case 4167:
    case 4168:
    case 4169:
LABEL_20:
      BOOL v2 = "UNKNOWN";
      break;
    case 4152:
      BOOL v2 = "OTA_Group_Delay_Cal";
      break;
    case 4156:
      BOOL v2 = "Internal_Group_delay_Cal";
      break;
    case 4159:
      BOOL v2 = "PDOA_LUT_Generated_at_PHY_Out";
      break;
    case 4160:
      BOOL v2 = "SMT_Group_Delay_Derived";
      break;
    case 4161:
      BOOL v2 = "AOA_Antenna_RX_Chain_Map";
      break;
    case 4162:
      BOOL v2 = "System_Factory_Cal_Version";
      break;
    case 4163:
      BOOL v2 = "SMT_Leakage_Group_Delay_128_Tap_TF";
      break;
    case 4164:
      BOOL v2 = "RX_Transfer_Function_128_Tap";
      break;
    case 4165:
      BOOL v2 = "Fixture_Transfer_Function_128_Tap";
      break;
    case 4166:
      BOOL v2 = "OTA_PDOA_Offset";
      break;
    case 4170:
      BOOL v2 = "FATP_TX_Power_Cal";
      break;
    default:
      switch(a1)
      {
        case 4232:
          BOOL v2 = "Drona_Ant_Efficiency";
          break;
        case 4234:
          BOOL v2 = "PDOA_Forward_LUT_Ch0";
          break;
        case 4235:
          BOOL v2 = "PDOA_Forward_LUT_Ch1";
          break;
        case 4236:
          BOOL v2 = "OTA_PDOA_Offset_at_90_90_Per_Gain_Stage_Ch0";
          break;
        case 4237:
          BOOL v2 = "OTA_PDOA_Offset_at_90_90_Per_Gain_Stage_Ch1";
          break;
        default:
          goto LABEL_20;
      }
      break;
  }
  return sub_100004950(a2, v2);
}

__n128 sub_1002D0C60(uint64_t a1, uint64_t a2)
{
  if (*(unsigned __int8 *)(a1 + 48) == *(unsigned __int8 *)(a2 + 48))
  {
    if (*(unsigned char *)(a1 + 48))
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      result.n128_u64[0] = sub_100150500(a1 + 16, (__n128 *)(a2 + 16)).n128_u64[0];
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
    }
  }
  else if (*(unsigned char *)(a1 + 48))
  {
    unint64_t v5 = *(void **)(a1 + 16);
    if (v5)
    {
      *(void *)(a1 + 24) = v5;
      operator delete(v5);
    }
    *(unsigned char *)(a1 + 48) = 0;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 16) = 0;
    __n128 result = *(__n128 *)(a2 + 16);
    *(__n128 *)(a1 + 16) = result;
    uint64_t v6 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a2 + 24) = 0;
    *(void *)(a2 + 32) = 0;
    *(void *)(a2 + 16) = 0;
    *(void *)(a1 + 40) = v6;
    *(unsigned char *)(a1 + 48) = 1;
  }
  return result;
}

void *sub_1002D0D08(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  *(_OWORD *)uint64_t v3 = *(_OWORD *)a2;
  *(void *)(v3 + 24) = 0;
  *(void *)(v3 + 32) = 0;
  *(void *)(v3 + 16) = 0;
  __n128 result = sub_10016D488((void *)(v3 + 16), *(const void **)(a2 + 16), *(void *)(a2 + 24), *(void *)(a2 + 24) - *(void *)(a2 + 16));
  *(void *)(a1 + 8) = v3 + 40;
  return result;
}

void sub_1002D0D58(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_1002D0D60(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xCCCCCCCCCCCCCCCDLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0x666666666666666) {
    sub_1000267C4();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xCCCCCCCCCCCCCCCDLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x333333333333333) {
    unint64_t v9 = 0x666666666666666;
  }
  else {
    unint64_t v9 = v5;
  }
  uint64_t v17 = a1 + 2;
  if (v9) {
    __int16 v10 = (char *)sub_10003E580(v7, v9);
  }
  else {
    __int16 v10 = 0;
  }
  uint64_t v11 = &v10[40 * v4];
  v14[0] = v10;
  v14[1] = v11;
  unint64_t v15 = v11;
  uint64_t v16 = &v10[40 * v9];
  *(_OWORD *)uint64_t v11 = *(_OWORD *)a2;
  *((void *)v11 + 3) = 0;
  *((void *)v11 + 4) = 0;
  *((void *)v11 + 2) = 0;
  sub_10016D488((void *)v11 + 2, *(const void **)(a2 + 16), *(void *)(a2 + 24), *(void *)(a2 + 24) - *(void *)(a2 + 16));
  v15 += 40;
  sub_1002D0E7C(a1, v14);
  uint64_t v12 = a1[1];
  sub_1002D1028((uint64_t)v14);
  return v12;
}

void sub_1002D0E68(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1002D1028((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002D0E7C(uint64_t *a1, void *a2)
{
  uint64_t result = sub_1002D0EF4((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_1002D0EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v13 = a6;
  *((void *)&v13 + 1) = a7;
  long long v12 = v13;
  v10[0] = a1;
  v10[1] = &v12;
  void v10[2] = &v13;
  if (a3 == a5)
  {
    uint64_t v8 = a6;
  }
  else
  {
    do
    {
      *(_OWORD *)(v7 - 40) = *(_OWORD *)(a3 - 40);
      *(void *)(v7 - 16) = 0;
      *(void *)(v7 - 8) = 0;
      *(void *)(v7 - 24) = 0;
      *(_OWORD *)(v7 - 24) = *(_OWORD *)(a3 - 24);
      *(void *)(v7 - 8) = *(void *)(a3 - 8);
      *(void *)(a3 - 24) = 0;
      *(void *)(a3 - 16) = 0;
      *(void *)(a3 - 8) = 0;
      uint64_t v7 = *((void *)&v13 + 1) - 40;
      *((void *)&v13 + 1) -= 40;
      a3 -= 40;
    }
    while (a3 != a5);
    uint64_t v8 = v13;
  }
  char v11 = 1;
  sub_1002D0FA8((uint64_t)v10);
  return v8;
}

uint64_t sub_1002D0FA8(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_1002D0FE0(a1);
  }
  return a1;
}

void sub_1002D0FE0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    uint64_t v3 = *(void **)(v1 + 16);
    if (v3)
    {
      *(void *)(v1 + 24) = v3;
      operator delete(v3);
    }
    v1 += 40;
  }
}

uint64_t sub_1002D1028(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_1002D1060(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  while (v2 != a2)
  {
    *(void *)(a1 + 16) = v2 - 40;
    uint64_t v5 = *(void **)(v2 - 24);
    if (v5)
    {
      *(void *)(v2 - 16) = v5;
      operator delete(v5);
      uint64_t v2 = *(void *)(a1 + 16);
    }
    else
    {
      v2 -= 40;
    }
  }
}

void *sub_1002D10BC@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, (&off_10085E8B8)[a1]);
}

void *sub_1002D10D0@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, (&off_10085E910)[a1]);
}

void *sub_1002D10E4@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, (&off_10085E958)[a1]);
}

void *sub_1002D10F8@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, (&off_10085E978)[a1]);
}

uint64_t sub_1002D110C(uint64_t a1)
{
  return a1;
}

void sub_1002D122C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1002D1248(uint64_t a1, int a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &off_10085E6D8;
  *(_DWORD *)(a1 + 24) = a2;
  id v9 = v7;
  *(void *)(a1 + 32) = v9;
  __int16 v10 = v8;
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 56) = 0;
  dispatch_assert_queue_V2(v10);
  char v11 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    sub_1002D10BC(*(_DWORD *)(a1 + 24), __p);
    if (v16 >= 0) {
      long long v12 = __p;
    }
    else {
      long long v12 = (void **)__p[0];
    }
    uint64_t v13 = *(void *)(a1 + 32);
    *(_DWORD *)uint8_t buf = 136315394;
    uint64_t v18 = v12;
    __int16 v19 = 2112;
    uint64_t v20 = v13;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "#rlm,Created RangingLimitInputProvider for '%s' with sessionIdentifier %@", buf, 0x16u);
    if (v16 < 0) {
      operator delete(__p[0]);
    }
  }

  return a1;
}

void sub_1002D13AC(_Unwind_Exception *a1)
{
  uint64_t v5 = v4;

  id v7 = *(std::__shared_weak_count **)(v1 + 16);
  if (v7) {
    std::__shared_weak_count::__release_weak(v7);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_1002D13FC(uint64_t a1)
{
  return 0;
}

uint64_t sub_1002D141C(uint64_t a1)
{
  return 0;
}

void sub_1002D143C(uint64_t a1)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 40));
  if (*(unsigned char *)(a1 + 48))
  {
    uint64_t v2 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    {
      sub_1002D10BC(*(_DWORD *)(a1 + 24), __p);
      sub_10042C51C();
    }
  }
  else
  {
    *(unsigned char *)(a1 + 48) = 1;
    uint64_t v3 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      sub_1002D10BC(*(_DWORD *)(a1 + 24), __p);
      unint64_t v4 = SHIBYTE(v9) >= 0 ? __p : (void **)__p[0];
      uint64_t v5 = *(void *)(a1 + 32);
      *(_DWORD *)uint8_t buf = 136315394;
      uint64_t v14 = v4;
      __int16 v15 = 2112;
      uint64_t v16 = v5;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#rlm,indicateRangingStarted for '%s' with sessionIdentifier %@", buf, 0x16u);
      if (SHIBYTE(v9) < 0) {
        operator delete(__p[0]);
      }
    }

    sub_1002D162C();
    int v6 = *(_DWORD *)(a1 + 24);
    __p[0] = _NSConcreteStackBlock;
    __p[1] = (void *)3221225472;
    id v9 = sub_1002D3A74;
    __int16 v10 = &unk_100853B08;
    char v11 = &qword_1008A7EA8;
    int v12 = v6;
    dispatch_sync((dispatch_queue_t)qword_1008A7EA8, __p);
    uint64_t v7 = +[NSDate now];
    uint64_t v2 = *(NSObject **)(a1 + 56);
    *(void *)(a1 + 56) = v7;
  }
}

void sub_1002D1610(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t *sub_1002D162C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1008A7F40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1008A7F40))
  {
    sub_1002D228C((uint64_t)&qword_1008A7EA8);
    __cxa_atexit((void (*)(void *))sub_1002D2C60, &qword_1008A7EA8, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1008A7F40);
  }
  return &qword_1008A7EA8;
}

void sub_1002D16B0(_Unwind_Exception *a1)
{
}

void sub_1002D16C8(uint64_t a1)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 40));
  if (*(unsigned char *)(a1 + 48))
  {
    *(unsigned char *)(a1 + 48) = 0;
    uint64_t v2 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      sub_1002D10BC(*(_DWORD *)(a1 + 24), __p);
      uint64_t v3 = __p[23] >= 0 ? __p : *(unsigned char **)__p;
      uint64_t v4 = *(void *)(a1 + 32);
      *(_DWORD *)int v12 = 136315394;
      *(void *)&v12[4] = v3;
      __int16 v13 = 2112;
      uint64_t v14 = v4;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#rlm,indicateRangingStopped for '%s' with sessionIdentifier %@", v12, 0x16u);
      if ((__p[23] & 0x80000000) != 0) {
        operator delete(*(void **)__p);
      }
    }

    sub_1002D162C();
    int v5 = *(_DWORD *)(a1 + 24);
    *(void *)std::string __p = _NSConcreteStackBlock;
    *(void *)&__p[8] = 3221225472;
    *(void *)&__p[16] = sub_1002D3C70;
    uint64_t v17 = &unk_100853B08;
    uint64_t v18 = &qword_1008A7EA8;
    int v19 = v5;
    dispatch_sync((dispatch_queue_t)qword_1008A7EA8, __p);
    int v6 = +[NSDate now];
    [v6 timeIntervalSinceDate:*(void *)(a1 + 56)];
    id v8 = v7;

    id v9 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      sub_1002D10BC(*(_DWORD *)(a1 + 24), v12);
      if (v15 >= 0) {
        __int16 v10 = v12;
      }
      else {
        __int16 v10 = *(unsigned char **)v12;
      }
      uint64_t v11 = *(void *)(a1 + 32);
      *(_DWORD *)std::string __p = 136315650;
      *(void *)&__p[4] = v10;
      *(_WORD *)&unsigned char __p[12] = 2112;
      *(void *)&__p[14] = v11;
      *(_WORD *)&__p[22] = 2048;
      uint64_t v17 = v8;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#rlm,ranging complete [%s, %@] = %.1f secs", __p, 0x20u);
      if (v15 < 0) {
        operator delete(*(void **)v12);
      }
    }
  }
  else
  {
    id v9 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      sub_1002D10BC(*(_DWORD *)(a1 + 24), __p);
      sub_10042C578();
    }
  }
}

void sub_1002D1944(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002D1968(uint64_t a1)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 8));
  int v2 = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = v2 + 1;
  uint64_t v3 = (id)qword_1008ABDE0;
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG);
  if (v2)
  {
    if (v4)
    {
      sub_1002D10BC(*(_DWORD *)a1, v5);
      sub_10042C634();
    }
  }
  else
  {
    if (v4)
    {
      sub_1002D10BC(*(_DWORD *)a1, v5);
      sub_10042C5D4();
    }

    *(double *)(a1 + 32) = sub_100006C38();
  }
}

void sub_1002D1A4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

double sub_1002D1A68(uint64_t a1)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 8));
  int v2 = *(_DWORD *)(a1 + 16);
  if (!v2)
  {
    id v9 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v9, OS_LOG_TYPE_FAULT))
    {
      sub_1002D10BC(*(_DWORD *)a1, __p);
      sub_10042C694();
    }

    __int16 v10 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint8_t buf = 136315650;
      uint64_t v14 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/RangingLimitManager/NIServ"
            "erRangingLimitManager.mm";
      __int16 v15 = 1024;
      *(_DWORD *)uint64_t v16 = 334;
      *(_WORD *)&v16[4] = 2080;
      *(void *)&v16[6] = "indicateRangingStopped";
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "#rlm,%s:%d: assertion failure in %s", buf, 0x1Cu);
    }
    abort();
  }
  *(_DWORD *)(a1 + 16) = v2 - 1;
  double v3 = sub_100006C38();
  double v4 = v3 - *(double *)(a1 + 32);
  *(double *)(a1 + 24) = *(double *)(a1 + 24) + v4;
  *(double *)(a1 + 32) = v3;
  *(double *)(a1 + 40) = v3;
  int v5 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    sub_1002D10BC(*(_DWORD *)a1, __p);
    if (v12 >= 0) {
      int v6 = __p;
    }
    else {
      int v6 = (void **)__p[0];
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *(_DWORD *)uint8_t buf = 136315650;
    uint64_t v14 = (const char *)v6;
    __int16 v15 = 2048;
    *(void *)uint64_t v16 = v7;
    *(_WORD *)&v16[8] = 2048;
    *(double *)&v16[10] = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#rlm,RangingDurationTracker(%s): overall = %.0f secs, current_delta = %.0f secs", buf, 0x20u);
    if (v12 < 0) {
      operator delete(__p[0]);
    }
  }

  return v4;
}

void sub_1002D1C5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002D1C78(uint64_t a1)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 8));
  int v2 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    sub_1002D10BC(*(_DWORD *)a1, __p);
    double v3 = v7 >= 0 ? __p : (void **)__p[0];
    uint64_t v4 = *(void *)(a1 + 24);
    *(_DWORD *)uint8_t buf = 136315394;
    id v9 = v3;
    __int16 v10 = 2048;
    uint64_t v11 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#rlm,RangingDurationTracker(%s): periodicReset: rangingDuratiouint64_t n = %.0f -> 0 secs", buf, 0x16u);
    if (v7 < 0) {
      operator delete(__p[0]);
    }
  }

  if (*(_DWORD *)(a1 + 16)) {
    double v5 = sub_100006C38();
  }
  else {
    double v5 = 0.0;
  }
  *(double *)(a1 + 32) = v5;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 40) = 0;
}

void sub_1002D1D94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1002D1DAC(uint64_t a1, uint64_t a2, void *a3, double a4)
{
  id v7 = a3;
  sub_1002D4068((uint64_t *)a1, a2);
  id v8 = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = 0;
  *(double *)(a1 + 40) = a4;
  if (!*(void *)(a2 + 16))
  {
    uint64_t v23 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
      sub_10042C6E8(v23);
    }
    uint64_t v24 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::string __p = 136315650;
      *(void *)&__p[4] = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/RangingLimi"
                           "tManager/NIServerRangingLimitManager.mm";
      __int16 v26 = 1024;
      int v27 = 396;
      __int16 v28 = 2080;
      uint64_t v29 = "RangingBudgetTracker";
      _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_INFO, "#rlm,%s:%d: assertion failure in %s", __p, 0x1Cu);
    }
    abort();
  }
  id v9 = v8;
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = objc_opt_new();
  sub_1002D10BC(*(_DWORD *)(v10 + 28), __p);
  if (SBYTE3(v29) >= 0) {
    char v12 = __p;
  }
  else {
    char v12 = *(unsigned char **)__p;
  }
  __int16 v13 = +[NSString stringWithUTF8String:v12];
  [v11 appendString:v13];

  if (SBYTE3(v29) < 0) {
    operator delete(*(void **)__p);
  }
  uint64_t v14 = *(void **)(v10 + 8);
  if (v14)
  {
    do
    {
      __int16 v15 = v14;
      uint64_t v14 = (void *)*v14;
    }
    while (v14);
  }
  else
  {
    do
    {
      __int16 v15 = *(void **)(v10 + 16);
      BOOL v16 = *v15 == v10;
      uint64_t v10 = (uint64_t)v15;
    }
    while (!v16);
  }
  if (v15 != (void *)(a1 + 8))
  {
    do
    {
      sub_1002D10BC(*((_DWORD *)v15 + 7), __p);
      if (SBYTE3(v29) >= 0) {
        uint64_t v17 = __p;
      }
      else {
        uint64_t v17 = *(unsigned char **)__p;
      }
      uint64_t v18 = +[NSString stringWithFormat:@" | %s", v17];
      [v11 appendString:v18];

      if (SBYTE3(v29) < 0) {
        operator delete(*(void **)__p);
      }
      int v19 = (void *)v15[1];
      if (v19)
      {
        do
        {
          uint64_t v20 = v19;
          int v19 = (void *)*v19;
        }
        while (v19);
      }
      else
      {
        do
        {
          uint64_t v20 = (void *)v15[2];
          BOOL v16 = *v20 == (void)v15;
          __int16 v15 = v20;
        }
        while (!v16);
      }
      __int16 v15 = v20;
    }
    while (v20 != (void *)(a1 + 8));
  }
  uint64_t v21 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v11;

  *(void *)(a1 + 48) = *(void *)(a1 + 40);
  return a1;
}

void sub_1002D2058(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }

  sub_10003E96C(v16, *(void **)(v16 + 8));
  _Unwind_Resume(a1);
}

void sub_1002D20DC(uint64_t a1, double a2)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 24));
  double v4 = *(double *)(a1 + 48);
  *(double *)(a1 + 48) = v4 - a2;
  double v5 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 32);
    uint64_t v7 = *(void *)(a1 + 48);
    int v8 = 138412802;
    uint64_t v9 = v6;
    __int16 v10 = 2048;
    double v11 = v4;
    __int16 v12 = 2048;
    uint64_t v13 = v7;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#rlm,RangingBudgetTracker(%@): budget changed: %.0f -> %.0f secs", (uint8_t *)&v8, 0x20u);
  }
}

double sub_1002D21BC(uint64_t a1)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 24));
  int v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 40);
    uint64_t v3 = *(void *)(a1 + 48);
    uint64_t v5 = *(void *)(a1 + 32);
    int v7 = 138412802;
    uint64_t v8 = v5;
    __int16 v9 = 2048;
    uint64_t v10 = v3;
    __int16 v11 = 2048;
    uint64_t v12 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#rlm,RangingBudgetTracker(%@): periodicReset: budgetRemaining = %.0f -> %.0f secs", (uint8_t *)&v7, 0x20u);
  }
  double result = *(double *)(a1 + 40);
  *(double *)(a1 + 48) = result;
  return result;
}

uint64_t sub_1002D228C(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 16) = a1 + 24;
  char v54 = (uint64_t **)(a1 + 16);
  *(void *)(a1 + 32) = 0;
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 40) = a1 + 48;
  unint64_t v51 = (void *)(a1 + 48);
  char v52 = (uint64_t **)(a1 + 40);
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 64) = a1 + 72;
  unint64_t v53 = (uint64_t **)(a1 + 64);
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 88) = a1 + 96;
  int v2 = (uint64_t **)(a1 + 88);
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = a1 + 128;
  uint64_t v3 = (uint64_t **)(a1 + 120);
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  uint64_t v50 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_USER_INITIATED, 0);
  dispatch_queue_t v4 = dispatch_queue_create("com.apple.nearbyd.rangingLimitManager", v50);
  id v5 = *(id *)a1;
  *(void *)a1 = v4;

  uint64_t v6 = qword_1008A7E90;
  if ((_UNKNOWN *)qword_1008A7E90 != &unk_1008A7E98)
  {
    do
    {
      int v7 = operator new(0x48uLL);
      v7[1] = 0;
      v7[2] = 0;
      *int v7 = off_10085E7D8;
      int v8 = *(_DWORD *)(v6 + 32);
      id v9 = *(id *)a1;
      *((_DWORD *)v7 + 6) = v8;
      v7[4] = v9;
      *((_DWORD *)v7 + 10) = 0;
      v7[7] = 0;
      v7[8] = 0;
      v7[6] = 0;
      *(void *)uint8_t buf = v6 + 32;
      uint64_t v10 = sub_1001A254C(v54, (int *)(v6 + 32), (uint64_t)&unk_1004BC2F8, (_DWORD **)buf);
      __int16 v11 = (std::__shared_weak_count *)v10[6];
      void v10[5] = v7 + 3;
      v10[6] = v7;
      if (v11) {
        sub_10001A970(v11);
      }
      *(void *)uint8_t buf = v6 + 32;
      *((unsigned char *)sub_1001A2910(v53, (int *)(v6 + 32), (uint64_t)&unk_1004BC2F8, (_DWORD **)buf) + 32) = 0;
      *(void *)uint8_t buf = v6 + 32;
      *((unsigned char *)sub_1001A2910(v2, (int *)(v6 + 32), (uint64_t)&unk_1004BC2F8, (_DWORD **)buf) + 32) = 0;
      *(void *)uint8_t buf = v6 + 32;
      uint64_t v12 = sub_1002D4318(v3, (int *)(v6 + 32), (uint64_t)&unk_1004BC2F8, (_DWORD **)buf);
      uint64_t v13 = v12;
      if (*((unsigned char *)v12 + 48))
      {

        *((unsigned char *)v13 + 48) = 0;
      }
      uint64_t v14 = *(void **)(v6 + 8);
      if (v14)
      {
        do
        {
          __int16 v15 = v14;
          uint64_t v14 = (void *)*v14;
        }
        while (v14);
      }
      else
      {
        do
        {
          __int16 v15 = *(void **)(v6 + 16);
          BOOL v16 = *v15 == v6;
          uint64_t v6 = (uint64_t)v15;
        }
        while (!v16);
      }
      uint64_t v6 = (uint64_t)v15;
    }
    while (v15 != (void *)&unk_1008A7E98);
  }
  if (sub_1003270D8(@"DigitalKeyCombinedRangingBudgetEnabled", (id)1))
  {
    *(void *)&uint8_t buf[8] = 0;
    *(void *)&uint8_t buf[16] = 0;
    *(void *)uint8_t buf = &buf[8];
    LODWORD(v55) = 8;
    sub_1002D43E0((uint64_t **)buf, (int *)&v55, &v55);
    LODWORD(v55) = 5;
    sub_1002D43E0((uint64_t **)buf, (int *)&v55, &v55);
    double v60 = sub_100327230(@"DigitalKeyRangingBudgetSeconds", 86400.0);
    sub_1002D449C((uint64_t)buf, &v60, (void **)a1, &v55);
    LODWORD(v57) = 8;
    double v60 = COERCE_DOUBLE(&v57);
    uint64_t v17 = sub_1001A254C(v52, (int *)&v57, (uint64_t)&unk_1004BC2F8, (_DWORD **)&v60);
    int v19 = v55;
    uint64_t v18 = v56;
    if (v56) {
      atomic_fetch_add_explicit(&v56->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    uint64_t v20 = (std::__shared_weak_count *)v17[6];
    void v17[5] = v19;
    v17[6] = (uint64_t *)v18;
    if (v20) {
      sub_10001A970(v20);
    }
    LODWORD(v57) = 5;
    double v60 = COERCE_DOUBLE(&v57);
    uint64_t v21 = sub_1001A254C(v52, (int *)&v57, (uint64_t)&unk_1004BC2F8, (_DWORD **)&v60);
    uint64_t v23 = v55;
    uint64_t v22 = v56;
    if (v56) {
      atomic_fetch_add_explicit(&v56->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    uint64_t v24 = (std::__shared_weak_count *)v21[6];
    void v21[5] = v23;
    v21[6] = (uint64_t *)v22;
    if (v24) {
      sub_10001A970(v24);
    }
    if (v56) {
      sub_10001A970(v56);
    }
    sub_10003E96C((uint64_t)buf, *(void **)&buf[8]);
  }
  else
  {
    LODWORD(v57) = 5;
    sub_1002D46EC((uint64_t)buf, (int *)&v57, 1);
    double v60 = sub_100327230(@"AlishaRangingBudgetSeconds", 86400.0);
    sub_1002D476C(buf, &v60, (void **)a1, &v55);
    sub_10003E96C((uint64_t)buf, *(void **)&buf[8]);
    LODWORD(v60) = 5;
    *(void *)uint8_t buf = &v60;
    uint64_t v25 = sub_1001A254C(v52, (int *)&v60, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf);
    int v27 = v55;
    __int16 v26 = v56;
    if (v56) {
      atomic_fetch_add_explicit(&v56->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    __int16 v28 = (std::__shared_weak_count *)v25[6];
    v25[5] = v27;
    v25[6] = (uint64_t *)v26;
    if (v28) {
      sub_10001A970(v28);
    }
    int v58 = 8;
    sub_1002D46EC((uint64_t)buf, &v58, 1);
    double v57 = sub_100327230(@"LyonRangingBudgetSeconds", 86400.0);
    sub_1002D476C(buf, &v57, (void **)a1, &v60);
    sub_10003E96C((uint64_t)buf, *(void **)&buf[8]);
    LODWORD(v57) = 8;
    *(void *)uint8_t buf = &v57;
    uint64_t v29 = sub_1001A254C(v52, (int *)&v57, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf);
    double v31 = v60;
    uint64_t v30 = v61;
    if (v61) {
      atomic_fetch_add_explicit(&v61->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    uint64_t v32 = (std::__shared_weak_count *)v29[6];
    *((double *)v29 + 5) = v31;
    v29[6] = (uint64_t *)v30;
    if (v32) {
      sub_10001A970(v32);
    }
    if (v61) {
      sub_10001A970(v61);
    }
    if (v56) {
      sub_10001A970(v56);
    }
  }
  uint64_t v33 = qword_1008A7E90;
  if ((_UNKNOWN *)qword_1008A7E90 != &unk_1008A7E98)
  {
    do
    {
      if (!*v51) {
        goto LABEL_54;
      }
      int v34 = *(_DWORD *)(v33 + 32);
      uint64_t v35 = v51;
      uint64_t v36 = *v51;
      do
      {
        int v37 = *(_DWORD *)(v36 + 32);
        BOOL v38 = v37 < v34;
        if (v37 >= v34) {
          uint64_t v39 = (uint64_t *)v36;
        }
        else {
          uint64_t v39 = (uint64_t *)(v36 + 8);
        }
        if (!v38) {
          uint64_t v35 = (void *)v36;
        }
        uint64_t v36 = *v39;
      }
      while (*v39);
      if (v35 == v51 || v34 < *((_DWORD *)v35 + 8))
      {
LABEL_54:
        unint64_t v48 = (id)qword_1008ABDE0;
        if (os_log_type_enabled(v48, OS_LOG_TYPE_FAULT))
        {
          sub_1002D10BC(*(_DWORD *)(v33 + 32), &v55);
          sub_10042C72C();
        }

        uint64_t v49 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)uint8_t buf = 136315650;
          *(void *)&uint8_t buf[4] = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/Ranging"
                               "LimitManager/NIServerRangingLimitManager.mm";
          *(_WORD *)&unsigned char buf[12] = 1024;
          *(_DWORD *)&buf[14] = 506;
          *(_WORD *)&buf[18] = 2080;
          *(void *)&buf[20] = "RangingLimitManager";
          _os_log_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_INFO, "#rlm,%s:%d: assertion failure in %s", buf, 0x1Cu);
        }
        abort();
      }
      uint64_t v40 = *(void **)(v33 + 8);
      if (v40)
      {
        do
        {
          uint64_t v41 = v40;
          uint64_t v40 = (void *)*v40;
        }
        while (v40);
      }
      else
      {
        do
        {
          uint64_t v41 = *(void **)(v33 + 16);
          BOOL v16 = *v41 == v33;
          uint64_t v33 = (uint64_t)v41;
        }
        while (!v16);
      }
      uint64_t v33 = (uint64_t)v41;
    }
    while (v41 != (void *)&unk_1008A7E98);
  }
  sub_1002D2AAC(a1);
  uint64_t v42 = objc_opt_new();
  uint64_t v43 = *(void **)(a1 + 144);
  *(void *)(a1 + 144) = v42;

  uint64_t v44 = +[NIServerSystemConfigurator sharedInstance];
  [v44 addClient:*(void *)(a1 + 144) identifier:@"RangingLimitManager"];

  uint64_t v45 = +[NSDate now];
  uint64_t v46 = *(void **)(a1 + 112);
  *(void *)(a1 + 112) = v45;

  return a1;
}

void sub_1002D2984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_1002D4234(v16, *(void **)(v14 + 128));
  sub_10003E96C(v15, *(void **)(v14 + 96));
  sub_10003E96C(a13, *(void **)(v14 + 72));
  sub_1002D41D4(a12, *(void **)(v14 + 48));
  sub_1002D41D4(a14, *(void **)(v14 + 24));

  _Unwind_Resume(a1);
}

id sub_1002D2AAC(uint64_t a1)
{
  id v2 = [objc_alloc((Class)NSBackgroundActivityScheduler) initWithIdentifier:@"com.apple.nearbyd.rangingBudget.xpcActivity"];
  uint64_t v3 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v2;

  [*(id *)(a1 + 8) invalidate];
  [*(id *)(a1 + 8) setQualityOfService:17];
  [*(id *)(a1 + 8) setInterval:sub_100327230(@"DigitalKeyRangingDurationResetPeriodSeconds", 86400.0)];
  [*(id *)(a1 + 8) setTolerance:sub_100327230(@"DigitalKeyRangingDurationResetPeriodToleranceSeconds", 300.0)];
  [*(id *)(a1 + 8) setRepeats:1];
  dispatch_queue_t v4 = *(void **)(a1 + 8);

  return [v4 scheduleWithBlock:&stru_10085E728];
}

uint64_t sub_1002D2B64(uint64_t a1)
{
  id v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#rlm,~RangingLimitManager()", v5, 2u);
  }
  [*(id *)(a1 + 8) invalidate];
  uint64_t v3 = +[NIServerSystemConfigurator sharedInstance];
  [v3 removeClientWithIdentifier:@"RangingLimitManager"];

  sub_1002D4234(a1 + 120, *(void **)(a1 + 128));
  sub_10003E96C(a1 + 88, *(void **)(a1 + 96));
  sub_10003E96C(a1 + 64, *(void **)(a1 + 72));
  sub_1002D41D4(a1 + 40, *(void **)(a1 + 48));
  sub_1002D41D4(a1 + 16, *(void **)(a1 + 24));

  return a1;
}

void sub_1002D2C64(id a1, id a2)
{
  id v2 = a2;
  sub_1002D162C();
  uint64_t v3 = qword_1008A7EA8;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1002D2D14;
  block[3] = &unk_100856F48;
  id v6 = v2;
  id v4 = v2;
  dispatch_async(v3, block);
}

void sub_1002D2D04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1002D2D14(uint64_t a1)
{
  sub_1002D162C();
  sub_1002D2D64((uint64_t)&qword_1008A7EA8);
  id v2 = *(uint64_t (**)(void))(*(void *)(a1 + 32) + 16);

  return v2();
}

void sub_1002D2D64(uint64_t a1)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)a1);
  sub_1002D3234(a1);
  id v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint8_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#rlm,Periodic Reset Handler: reset ranging budgets", buf, 2u);
  }
  uint64_t v3 = qword_1008A7E90;
  if ((_UNKNOWN *)qword_1008A7E90 != &unk_1008A7E98)
  {
    do
    {
      *(void *)uint8_t buf = v3 + 32;
      id v4 = sub_1001A254C((uint64_t **)(a1 + 16), (int *)(v3 + 32), (uint64_t)&unk_1004BC2F8, (_DWORD **)buf);
      sub_1002D1C78((uint64_t)v4[5]);
      *(void *)uint8_t buf = v3 + 32;
      id v5 = sub_1001A254C((uint64_t **)(a1 + 40), (int *)(v3 + 32), (uint64_t)&unk_1004BC2F8, (_DWORD **)buf);
      sub_1002D21BC((uint64_t)v5[5]);
      *(void *)uint8_t buf = v3 + 32;
      *((unsigned char *)sub_1001A2910((uint64_t **)(a1 + 64), (int *)(v3 + 32), (uint64_t)&unk_1004BC2F8, (_DWORD **)buf) + 32) = 0;
      *(void *)uint8_t buf = v3 + 32;
      id v6 = sub_1002D4318((uint64_t **)(a1 + 120), (int *)(v3 + 32), (uint64_t)&unk_1004BC2F8, (_DWORD **)buf);
      if (*((unsigned char *)v6 + 48))
      {
        int v7 = v6;

        *((unsigned char *)v7 + 48) = 0;
      }
      int v8 = *(void **)(v3 + 8);
      if (v8)
      {
        do
        {
          id v9 = v8;
          int v8 = (void *)*v8;
        }
        while (v8);
      }
      else
      {
        do
        {
          id v9 = *(void **)(v3 + 16);
          BOOL v10 = *v9 == v3;
          uint64_t v3 = (uint64_t)v9;
        }
        while (!v10);
      }
      uint64_t v3 = (uint64_t)v9;
    }
    while (v9 != (void *)&unk_1008A7E98);
  }
  sub_1002D36E0((dispatch_queue_t *)a1);
  uint64_t v11 = +[NSDate now];
  uint64_t v12 = *(void **)(a1 + 112);
  *(void *)(a1 + 112) = v11;
}

void sub_1002D2F30(int a1@<W1>, void *a2@<X2>, void *a3@<X3>, _OWORD *a4@<X8>)
{
  int v9 = a1;
  id v8 = a2;
  int v7 = a3;
  dispatch_assert_queue_V2(v7);
  sub_1002D48EC(&v9, &v8, (void **)&v7, &v6);
  *a4 = v6;
}

void sub_1002D2FA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1002D2FCC(NSObject **a1, int a2)
{
  uint64_t v7 = 0;
  id v8 = &v7;
  uint64_t v9 = 0x2020000000;
  char v10 = 0;
  id v2 = *a1;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1002D307C;
  block[3] = &unk_10085AC00;
  int v6 = a2;
  void block[4] = &v7;
  void block[5] = a1;
  dispatch_sync(v2, block);
  uint64_t v3 = *((unsigned __int8 *)v8 + 24);
  _Block_object_dispose(&v7, 8);
  return v3;
}

uint64_t sub_1002D307C(uint64_t a1)
{
  id v2 = (int *)(a1 + 48);
  uint64_t result = sub_1002D31D8(*(void *)(a1 + 40) + 64, (int *)(a1 + 48));
  if ((unsigned __int16)result <= 0xFFu)
  {
    id v4 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v4, OS_LOG_TYPE_FAULT))
    {
      sub_1002D10BC(*v2, v6);
      sub_10042C780();
    }

    id v5 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint8_t buf = 136315650;
      id v8 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/RangingLimitManager/NIServe"
           "rRangingLimitManager.mm";
      __int16 v9 = 1024;
      int v10 = 580;
      __int16 v11 = 2080;
      uint64_t v12 = "limitExceeded_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "#rlm,%s:%d: assertion failure in %s", buf, 0x1Cu);
    }
    abort();
  }
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  return result;
}

void sub_1002D31C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1002D31D8(uint64_t a1, int *a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v2 = a1 + 8;
  uint64_t v3 = v4;
  if (!v4) {
    goto LABEL_11;
  }
  int v5 = *a2;
  uint64_t v6 = v2;
  do
  {
    int v7 = *(_DWORD *)(v3 + 28);
    BOOL v8 = v7 < v5;
    if (v7 >= v5) {
      __int16 v9 = (uint64_t *)v3;
    }
    else {
      __int16 v9 = (uint64_t *)(v3 + 8);
    }
    if (!v8) {
      uint64_t v6 = v3;
    }
    uint64_t v3 = *v9;
  }
  while (*v9);
  if (v6 != v2 && v5 >= *(_DWORD *)(v6 + 28))
  {
    int v10 = *(unsigned __int8 *)(v6 + 32);
    int v11 = 1;
  }
  else
  {
LABEL_11:
    int v10 = 0;
    int v11 = 0;
  }
  return v10 | (v11 << 8);
}

void sub_1002D3234(uint64_t a1)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)a1);
  uint64_t v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint8_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#rlm,Periodic Reset Handler: sending analytics", buf, 2u);
  }
  LODWORD(__p[0]) = 8;
  *(void *)uint8_t buf = __p;
  uint64_t v3 = sub_1001A254C((uint64_t **)(a1 + 40), (int *)__p, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf)[5];
  dispatch_assert_queue_V2((dispatch_queue_t)v3[3]);
  uint64_t v4 = +[NSNumber numberWithDouble:(*((double *)v3 + 5) - *((double *)v3 + 6)) / 60.0];
  LODWORD(__p[0]) = 8;
  *(void *)uint8_t buf = __p;
  int v5 = sub_1002D4318((uint64_t **)(a1 + 120), (int *)__p, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf);
  int v6 = *((unsigned __int8 *)v5 + 48);
  if (*((unsigned char *)v5 + 48))
  {
    int v7 = v5[5];
    BOOL v8 = *(void **)(a1 + 112);
    __int16 v9 = v7;
    id v10 = v8;
    [v9 timeIntervalSinceDate:v10];
    uint64_t v12 = +[NSNumber numberWithDouble:v11 / 3600.0];

    uint64_t v13 = v9;
    uint64_t v14 = +[NSCalendar currentCalendar];
    uint64_t v15 = [v14 components:32 fromDate:v13];
    +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [v15 hour]);
    uint64_t v16 = (_UNKNOWN **)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v16 = &off_100878928;
    uint64_t v12 = &off_100878940;
  }
  uint64_t v17 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    sub_100004950(__p, "HomeKey");
    uint64_t v18 = v23 >= 0 ? __p : (void **)__p[0];
    *(_DWORD *)uint8_t buf = 136315906;
    *(void *)&uint8_t buf[4] = v18;
    __int16 v25 = 2112;
    __int16 v26 = v4;
    __int16 v27 = 2112;
    __int16 v28 = v16;
    __int16 v29 = 2112;
    uint64_t v30 = v12;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "#rlm,budget reset [%s]: spent = %@ mins, exhausted_hour = %@, hours_to_exhaust = %@", buf, 0x2Au);
    if (v23 < 0) {
      operator delete(__p[0]);
    }
  }

  id v19 = v4;
  uint64_t v20 = v16;
  uint64_t v21 = v12;
  AnalyticsSendEventLazy();

  if (v6) {
}
  }

void sub_1002D3598(_Unwind_Exception *a1)
{
  if (v6) {
  _Unwind_Resume(a1);
  }
}

id sub_1002D363C(uint64_t a1)
{
  long long v1 = *(_OWORD *)(a1 + 32);
  v4[0] = @"budgetSpentMins";
  v4[1] = @"exhaustedLocalHour";
  long long v5 = v1;
  v4[2] = @"hoursTookToExhaustBudget";
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v2 = +[NSDictionary dictionaryWithObjects:&v5 forKeys:v4 count:3];

  return v2;
}

void sub_1002D36E0(dispatch_queue_t *a1)
{
  dispatch_assert_queue_V2(*a1);
  uint64_t v2 = qword_1008A7E90;
  if ((_UNKNOWN *)qword_1008A7E90 != &unk_1008A7E98)
  {
    uint64_t v3 = (uint64_t **)(a1 + 5);
    uint64_t v4 = (uint64_t **)(a1 + 8);
    long long v5 = (uint64_t **)(a1 + 11);
    char v23 = (uint64_t **)(a1 + 15);
    do
    {
      __p[0] = (void *)(v2 + 32);
      uint64_t v6 = sub_1001A254C(v3, (int *)(v2 + 32), (uint64_t)&unk_1004BC2F8, (_DWORD **)__p)[5];
      dispatch_assert_queue_V2((dispatch_queue_t)v6[3]);
      LOBYTE(v6) = *((double *)v6 + 6) <= 0.0;
      __p[0] = (void *)(v2 + 32);
      *((unsigned char *)sub_1001A2910(v4, (int *)(v2 + 32), (uint64_t)&unk_1004BC2F8, (_DWORD **)__p) + 32) = (_BYTE)v6;
      __p[0] = (void *)(v2 + 32);
      int v7 = *((unsigned __int8 *)sub_1001A2910(v4, (int *)(v2 + 32), (uint64_t)&unk_1004BC2F8, (_DWORD **)__p) + 32);
      __p[0] = (void *)(v2 + 32);
      if (v7 != *((unsigned __int8 *)sub_1001A2910(v5, (int *)(v2 + 32), (uint64_t)&unk_1004BC2F8, (_DWORD **)__p) + 32))
      {
        BOOL v8 = (id)qword_1008ABDE0;
        if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
        {
          sub_1002D10BC(*(_DWORD *)(v2 + 32), __p);
          int v9 = v25;
          id v10 = (void **)__p[0];
          __int16 v26 = (_DWORD *)(v2 + 32);
          double v11 = sub_1001A2910(v4, (int *)(v2 + 32), (uint64_t)&unk_1004BC2F8, &v26);
          uint64_t v12 = __p;
          if (v9 < 0) {
            uint64_t v12 = v10;
          }
          BOOL v13 = *((unsigned char *)v11 + 32) == 0;
          *(_DWORD *)uint8_t buf = 136315394;
          CFStringRef v14 = @"Limit Exceeded";
          if (v13) {
            CFStringRef v14 = @"Limit Available";
          }
          __int16 v28 = v12;
          __int16 v29 = 2112;
          CFStringRef v30 = v14;
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#rlm,Ranging limit reached status changed for '%s': %@", buf, 0x16u);
          if (v25 < 0) {
            operator delete(__p[0]);
          }
        }

        __p[0] = (void *)(v2 + 32);
        int v15 = *((unsigned __int8 *)sub_1001A2910(v4, (int *)(v2 + 32), (uint64_t)&unk_1004BC2F8, (_DWORD **)__p) + 32);
        uint64_t v16 = +[NIServerSystemConfigurator sharedInstance];
        [v16 clientWithIdentifier:@"RangingLimitManager" notifiedResourceUsageLimitExceeded:v15 != 0 forSessionConfigurationType:NSClassFromString(*(NSString **)(v2 + 40))];

        __p[0] = (void *)(v2 + 32);
        char v17 = *((unsigned char *)sub_1001A2910(v4, (int *)(v2 + 32), (uint64_t)&unk_1004BC2F8, (_DWORD **)__p) + 32);
        __p[0] = (void *)(v2 + 32);
        *((unsigned char *)sub_1001A2910(v5, (int *)(v2 + 32), (uint64_t)&unk_1004BC2F8, (_DWORD **)__p) + 32) = v17;
        if (v15)
        {
          uint64_t v18 = +[NSDate now];
          __p[0] = (void *)(v2 + 32);
          id v19 = sub_1002D4318(v23, (int *)(v2 + 32), (uint64_t)&unk_1004BC2F8, (_DWORD **)__p);
          if (*((unsigned char *)v19 + 48))
          {
            uint64_t v20 = v19[5];
            v19[5] = (uint64_t *)v18;
          }
          else
          {
            v19[5] = (uint64_t *)v18;
            *((unsigned char *)v19 + 48) = 1;
          }
        }
      }
      uint64_t v21 = *(void **)(v2 + 8);
      if (v21)
      {
        do
        {
          uint64_t v22 = v21;
          uint64_t v21 = (void *)*v21;
        }
        while (v21);
      }
      else
      {
        do
        {
          uint64_t v22 = *(void **)(v2 + 16);
          BOOL v13 = *v22 == v2;
          uint64_t v2 = (uint64_t)v22;
        }
        while (!v13);
      }
      uint64_t v2 = (uint64_t)v22;
    }
    while (v22 != (void *)&unk_1008A7E98);
  }
}

void sub_1002D3A3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_1002D3A74(uint64_t a1)
{
  long long v1 = (int *)(a1 + 40);
  sub_1002D3BFC(*(void *)(a1 + 32) + 16, (int *)(a1 + 40), (uint64_t)&v5);
  if (!v7)
  {
    uint64_t v2 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v2, OS_LOG_TYPE_FAULT))
    {
      sub_1002D10BC(*v1, v4);
      sub_10042C780();
    }

    uint64_t v3 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint8_t buf = 136315650;
      int v9 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/RangingLimitManager/NIServe"
           "rRangingLimitManager.mm";
      __int16 v10 = 1024;
      int v11 = 675;
      __int16 v12 = 2080;
      BOOL v13 = "indicateRangingStarted_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "#rlm,%s:%d: assertion failure in %s", buf, 0x1Cu);
    }
    abort();
  }
  sub_1002D1968(v5);
  if (v7)
  {
    if (v6) {
      sub_10001A970(v6);
    }
  }
}

void sub_1002D3BC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, std::__shared_weak_count *a13, char a14)
{
  if (a14)
  {
    if (a13) {
      sub_10001A970(a13);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1002D3BFC@<X0>(uint64_t a1@<X0>, int *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t result = a1 + 8;
  uint64_t v4 = v5;
  if (!v5) {
    goto LABEL_11;
  }
  int v6 = *a2;
  uint64_t v7 = result;
  do
  {
    int v8 = *(_DWORD *)(v4 + 32);
    BOOL v9 = v8 < v6;
    if (v8 >= v6) {
      __int16 v10 = (uint64_t *)v4;
    }
    else {
      __int16 v10 = (uint64_t *)(v4 + 8);
    }
    if (!v9) {
      uint64_t v7 = v4;
    }
    uint64_t v4 = *v10;
  }
  while (*v10);
  if (v7 != result && v6 >= *(_DWORD *)(v7 + 32))
  {
    uint64_t v13 = *(void *)(v7 + 40);
    uint64_t v12 = *(void *)(v7 + 48);
    *(void *)a3 = v13;
    *(void *)(a3 + 8) = v12;
    if (v12)
    {
      CFStringRef v14 = (atomic_ullong *)(v12 + 8);
      char v11 = 1;
      atomic_fetch_add_explicit(v14, 1uLL, memory_order_relaxed);
    }
    else
    {
      char v11 = 1;
    }
  }
  else
  {
LABEL_11:
    char v11 = 0;
    *(unsigned char *)a3 = 0;
  }
  *(unsigned char *)(a3 + 16) = v11;
  return result;
}

void sub_1002D3C70(uint64_t a1)
{
  long long v1 = *(dispatch_queue_t **)(a1 + 32);
  uint64_t v2 = (int *)(a1 + 40);
  sub_1002D3BFC((uint64_t)(v1 + 2), (int *)(a1 + 40), (uint64_t)&v11);
  if (!v13)
  {
    uint64_t v4 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v4, OS_LOG_TYPE_FAULT))
    {
      sub_1002D10BC(*v2, &v8);
      sub_10042C780();
    }

    uint64_t v5 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint8_t buf = 136315650;
      uint64_t v16 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/RangingLimitManager/NIServ"
            "erRangingLimitManager.mm";
      __int16 v17 = 1024;
      int v18 = 686;
      __int16 v19 = 2080;
      uint64_t v20 = "indicateRangingStopped_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "#rlm,%s:%d: assertion failure in %s", buf, 0x1Cu);
    }
    abort();
  }
  sub_1002D3BFC((uint64_t)(v1 + 5), v2, (uint64_t)&v8);
  if (!v10)
  {
    int v6 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v6, OS_LOG_TYPE_FAULT))
    {
      sub_1002D10BC(*v2, v14);
      sub_10042C780();
    }

    uint64_t v7 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint8_t buf = 136315650;
      uint64_t v16 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/RangingLimitManager/NIServ"
            "erRangingLimitManager.mm";
      __int16 v17 = 1024;
      int v18 = 690;
      __int16 v19 = 2080;
      uint64_t v20 = "indicateRangingStopped_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "#rlm,%s:%d: assertion failure in %s", buf, 0x1Cu);
    }
    abort();
  }
  if (!v13 || (double v3 = sub_1002D1A68(v11), !v10)) {
    sub_10000AE44();
  }
  sub_1002D20DC(v8, v3);
  sub_1002D36E0(v1);
  if (v10 && v9) {
    sub_10001A970(v9);
  }
  if (v13)
  {
    if (v12) {
      sub_10001A970(v12);
    }
  }
}

void sub_1002D3ED4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, std::__shared_weak_count *a13, char a14)
{
  if (a14)
  {
    if (a13) {
      sub_10001A970(a13);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002D3F38(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }
  return a1;
}

void sub_1002D3F80(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }

  operator delete();
}

uint64_t sub_1002D3FE8(uint64_t a1, int *a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 16 * a3;
    do
    {
      sub_100259F84((uint64_t **)a1, v4, a2, (uint64_t)a2);
      a2 += 4;
      v6 -= 16;
    }
    while (v6);
  }
  return a1;
}

void sub_1002D4050(_Unwind_Exception *a1)
{
  sub_1001A23EC(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_1002D4068(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  sub_1002D40C0(a1, *(int **)a2, (int *)(a2 + 8));
  return a1;
}

void sub_1002D40A8(_Unwind_Exception *a1)
{
  sub_10003E96C(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_1002D40C0(uint64_t *result, int *a2, int *a3)
{
  if (a2 != a3)
  {
    uint64_t v4 = a2;
    uint64_t v5 = (uint64_t **)result;
    uint64_t v6 = result + 1;
    do
    {
      uint64_t result = sub_1002D414C(v5, v6, v4 + 7, v4 + 7);
      uint64_t v7 = (int *)*((void *)v4 + 1);
      if (v7)
      {
        do
        {
          uint64_t v8 = v7;
          uint64_t v7 = *(int **)v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          uint64_t v8 = (int *)*((void *)v4 + 2);
          BOOL v9 = *(void *)v8 == (void)v4;
          uint64_t v4 = v8;
        }
        while (!v9);
      }
      uint64_t v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

uint64_t *sub_1002D414C(uint64_t **a1, uint64_t *a2, int *a3, _DWORD *a4)
{
  uint64_t v6 = sub_1001A0144(a1, a2, &v11, &v10, a3);
  uint64_t v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    uint64_t v8 = (uint64_t **)v6;
    uint64_t v7 = (uint64_t *)operator new(0x20uLL);
    *((_DWORD *)v7 + 7) = *a4;
    sub_100026D98(a1, (uint64_t)v11, v8, v7);
  }
  return v7;
}

void sub_1002D41D4(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1002D41D4(a1, *a2);
    sub_1002D41D4(a1, a2[1]);
    uint64_t v4 = (std::__shared_weak_count *)a2[6];
    if (v4) {
      sub_10001A970(v4);
    }
    operator delete(a2);
  }
}

void sub_1002D4234(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1002D4234(a1, *a2);
    sub_1002D4234(a1, a2[1]);
    if (*((unsigned char *)a2 + 48)) {

    }
    operator delete(a2);
  }
}

void sub_1002D4298(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10085E7D8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1002D42B8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10085E7D8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_1002D430C(uint64_t a1)
{
}

uint64_t **sub_1002D4318(uint64_t **a1, int *a2, uint64_t a3, _DWORD **a4)
{
  uint64_t v7 = a1 + 1;
  uint64_t v6 = a1[1];
  if (v6)
  {
    int v8 = *a2;
    while (1)
    {
      while (1)
      {
        BOOL v9 = (uint64_t **)v6;
        int v10 = *((_DWORD *)v6 + 8);
        if (v8 >= v10) {
          break;
        }
        uint64_t v6 = *v9;
        uint64_t v7 = v9;
        if (!*v9) {
          goto LABEL_10;
        }
      }
      if (v10 >= v8) {
        break;
      }
      uint64_t v6 = v9[1];
      if (!v6)
      {
        uint64_t v7 = v9 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    BOOL v9 = a1 + 1;
LABEL_10:
    uint64_t v11 = operator new(0x38uLL);
    v11[8] = **a4;
    *((unsigned char *)v11 + 40) = 0;
    *((unsigned char *)v11 + 48) = 0;
    sub_100026D98(a1, (uint64_t)v9, v7, (uint64_t *)v11);
    return (uint64_t **)v11;
  }
  return v9;
}

uint64_t **sub_1002D43E0(uint64_t **a1, int *a2, _DWORD *a3)
{
  uint64_t v6 = a1 + 1;
  uint64_t v5 = a1[1];
  if (v5)
  {
    int v7 = *a2;
    while (1)
    {
      while (1)
      {
        int v8 = (uint64_t **)v5;
        int v9 = *((_DWORD *)v5 + 7);
        if (v7 >= v9) {
          break;
        }
        uint64_t v5 = *v8;
        uint64_t v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (v9 >= v7) {
        break;
      }
      uint64_t v5 = v8[1];
      if (!v5)
      {
        uint64_t v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    int v8 = a1 + 1;
LABEL_10:
    int v10 = (uint64_t *)operator new(0x20uLL);
    *((_DWORD *)v10 + 7) = *a3;
    sub_100026D98(a1, (uint64_t)v8, v6, v10);
    return (uint64_t **)v10;
  }
  return v8;
}

void *sub_1002D449C@<X0>(uint64_t a1@<X1>, double *a2@<X2>, void **a3@<X3>, void *a4@<X8>)
{
  int v8 = operator new(0x50uLL);
  uint64_t result = sub_1002D4510(v8, a1, a2, a3);
  *a4 = v8 + 3;
  a4[1] = v8;
  return result;
}

void sub_1002D44FC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1002D4510(void *a1, uint64_t a2, double *a3, void **a4)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_10085E828;
  sub_1002D4628((uint64_t)&v6, (uint64_t)(a1 + 3), a2, a3, a4);
  return a1;
}

void sub_1002D4574(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1002D4588(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10085E828;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1002D45A8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10085E828;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_1002D45FC(uint64_t a1)
{
  sub_1002D46A4((uint64_t)&v1, a1 + 24);
}

void sub_1002D4628(uint64_t a1, uint64_t a2, uint64_t a3, double *a4, void **a5)
{
  sub_1002D4068(v8, a3);
  sub_1002D1DAC(a2, (uint64_t)v8, *a5, *a4);
  sub_10003E96C((uint64_t)v8, (void *)v8[1]);
}

void sub_1002D468C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, void *a11)
{
}

void sub_1002D46A4(uint64_t a1, uint64_t a2)
{
  double v3 = *(void **)(a2 + 8);

  sub_10003E96C(a2, v3);
}

uint64_t sub_1002D46EC(uint64_t a1, int *a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 4 * a3;
    do
    {
      sub_1002D414C((uint64_t **)a1, v4, a2, a2);
      ++a2;
      v6 -= 4;
    }
    while (v6);
  }
  return a1;
}

void sub_1002D4754(_Unwind_Exception *a1)
{
  sub_10003E96C(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

void *sub_1002D476C@<X0>(void *a1@<X1>, double *a2@<X2>, void **a3@<X3>, void *a4@<X8>)
{
  int v8 = operator new(0x50uLL);
  uint64_t result = sub_1002D47E0(v8, a1, a2, a3);
  *a4 = v8 + 3;
  a4[1] = v8;
  return result;
}

void sub_1002D47CC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1002D47E0(void *a1, void *a2, double *a3, void **a4)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_10085E828;
  sub_1002D4858((uint64_t)&v6, (uint64_t)(a1 + 3), a2, a3, a4);
  return a1;
}

void sub_1002D4844(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1002D4858(uint64_t a1, uint64_t a2, void *a3, double *a4, void **a5)
{
  uint64_t v5 = a3 + 1;
  char v6 = (void *)a3[1];
  int v7 = (void **)*a3;
  int v8 = v6;
  if (a3[2])
  {
    _DWORD v6[2] = &v8;
    *a3 = v5;
    void *v5 = 0;
    a3[2] = 0;
  }
  else
  {
    int v7 = &v8;
  }
  sub_1002D1DAC(a2, (uint64_t)&v7, *a5, *a4);
  sub_10003E96C((uint64_t)&v7, v8);
}

void sub_1002D48D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, void *a11)
{
}

void sub_1002D48EC(int *a1@<X1>, void **a2@<X2>, void **a3@<X3>, void *a4@<X8>)
{
  int v8 = operator new(0x58uLL);
  sub_1002D4978(v8, a1, a2, a3);
  *a4 = v8 + 3;
  a4[1] = v8;

  sub_10001ABCC((uint64_t)a4, v8 + 4, (uint64_t)(v8 + 3));
}

void sub_1002D4964(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1002D4978(void *a1, int *a2, void **a3, void **a4)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_10085E878;
  sub_1002D1248((uint64_t)(a1 + 3), *a2, *a3, *a4);
  return a1;
}

void sub_1002D49CC(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1002D49E0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10085E878;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1002D4A00(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10085E878;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_1002D4A54(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_1002D4A7C(void *a1, int a2, os_log_t log, const char *a4, uint8_t *a5)
{
  _os_log_fault_impl(a1, log, OS_LOG_TYPE_FAULT, a4, a5, 0xCu);
}

void sub_1002D4ABC(float a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(float *)a4 = a1;
  *(void *)(a4 + 4) = v4;
  *(_WORD *)(a4 + 12) = 2112;
  *(void *)(a4 + 14) = v5;
}

void sub_1002D4AD4()
{
  v2[0] = 8;
  CFStringRef v3 = @"NIAcwgConfiguration";
  int v4 = 5;
  CFStringRef v5 = @"NICarKeyConfiguration";
  sub_1002D3FE8((uint64_t)&qword_1008A7E90, v2, 2);
  for (uint64_t i = 6; i != -2; i -= 4)

  __cxa_atexit((void (*)(void *))sub_1002D110C, &qword_1008A7E90, (void *)&_mh_execute_header);
}

void sub_1002D4BBC(_Unwind_Exception *a1)
{
  for (uint64_t i = 24; i != -8; i -= 16)

  _Unwind_Resume(a1);
}

uint64_t sub_1002D4BE8(uint64_t a1)
{
  *(unsigned char *)a1 = 0;
  *(unsigned char *)(a1 + 4) = 0;
  *(void *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 56) = 0;
  *(_OWORD *)(a1 + 64) = xmmword_1004BF160;
  *(_DWORD *)(a1 + 80) = 0;
  *(unsigned char *)(a1 + 84) = 0;
  *(unsigned char *)(a1 + 88) = 0;
  LODWORD(v3[0]) = -1;
  *((void *)&v3[0] + 1) = 0;
  sub_1002381BC(a1 + 96, (int *)v3, 1);
  _DWORD v3[2] = xmmword_1004BF1C8;
  v3[3] = unk_1004BF1D8;
  v3[4] = xmmword_1004BF1E8;
  _OWORD v3[5] = unk_1004BF1F8;
  v3[0] = xmmword_1004BF1A8;
  v3[1] = unk_1004BF1B8;
  sub_1002D5D18(a1 + 120, (int *)v3, 6);
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 144) = a1 + 152;
  return a1;
}

void sub_1002D4CDC(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100012C10(a1);
}

void sub_1002D4CEC(uint64_t a1, int a2, void *a3, uint64_t a4, double a5)
{
  id v9 = a3;
  *(double *)(a1 + 24) = a5;
  *(_DWORD *)a1 = a4;
  *(unsigned char *)(a1 + 4) = BYTE4(a4);
  id v10 = v9;
  sub_1002D4D8C(a1, v9);
  sub_1002D4F54((uint64_t **)a1, a2, a5);
}

void sub_1002D4D78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002D4D8C(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = v3;
  if (v3 && [v3 count])
  {
    int v15 = v4;
    CFStringRef v5 = [v4 sortedArrayUsingComparator:&stru_10085E9B8];
    id v6 = [v5 count];
    if ((unint64_t)v6 >= 4) {
      uint64_t v7 = 4;
    }
    else {
      uint64_t v7 = (uint64_t)v6;
    }
    int v8 = operator new(0x18uLL);
    v8[2] = 0x500000004;
    *(_OWORD *)int v8 = xmmword_1004BF208;
    if (v7)
    {
      uint64_t v9 = 0;
      id v10 = (uint64_t **)(a1 + 144);
      do
      {
        uint64_t v11 = [v5 objectAtIndexedSubscript:v9];
        uint64_t v12 = [v11 name];

        int v13 = *((_DWORD *)v8 + v9);
        id v14 = v12;
        sub_100004950(__p, (char *)[v14 UTF8String]);
        int v18 = __p;
        *((_DWORD *)sub_1002D5D98(v10, (const void **)__p, (uint64_t)&unk_1004BC2F8, (_OWORD **)&v18) + 14) = v13;
        if (v17 < 0) {
          operator delete(__p[0]);
        }

        ++v9;
      }
      while (v7 != v9);
    }
    operator delete(v8);

    int v4 = v15;
  }
}

void sub_1002D4EF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

uint64_t **sub_1002D4F54(uint64_t **result, int a2, double a3)
{
  if (a2 >= 1)
  {
    CFStringRef v5 = result;
    if (*((unsigned char *)result + 88))
    {
      id v6 = result[13];
      if (!v6) {
        goto LABEL_13;
      }
      int v7 = *((_DWORD *)result + 21);
      int v8 = result + 13;
      do
      {
        int v9 = *((_DWORD *)v6 + 8);
        BOOL v10 = v9 < v7;
        if (v9 >= v7) {
          uint64_t v11 = (uint64_t **)v6;
        }
        else {
          uint64_t v11 = (uint64_t **)(v6 + 1);
        }
        if (!v10) {
          int v8 = (uint64_t **)v6;
        }
        id v6 = *v11;
      }
      while (*v11);
      if (v8 == result + 13 || v7 < *((_DWORD *)v8 + 8))
      {
LABEL_13:
        int v13 = (_DWORD *)result + 21;
        sub_1001A284C(result + 12, (int *)result + 21, (uint64_t)&unk_1004BC2F8, &v13)[5] = 0;
        if (!*((unsigned char *)v5 + 88)) {
          sub_10000AE44();
        }
      }
      double v12 = a3 - *((double *)v5 + 7);
      int v13 = (_DWORD *)v5 + 21;
      uint64_t result = sub_1001A284C(v5 + 12, (int *)v5 + 21, (uint64_t)&unk_1004BC2F8, &v13);
      *((double *)result + 5) = v12 + *((double *)result + 5);
    }
    *((double *)v5 + 7) = a3;
    *((_DWORD *)v5 + 21) = a2;
    *((unsigned char *)v5 + 88) = 1;
  }
  return result;
}

void sub_1002D5064(double *a1, double a2)
{
  double v2 = a2 - a1[3];
  a1[4] = a2;
  a1[5] = v2;
  if (v2 > 0.0)
  {
    sub_1002D50BC((uint64_t)a1);
    sub_1002D52DC((uint64_t)a1);
  }
}

uint64_t sub_1002D50BC(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 88))
  {
    uint64_t v2 = *(void *)(result + 104);
    if (!v2) {
      goto LABEL_12;
    }
    int v3 = *(_DWORD *)(result + 84);
    uint64_t v4 = result + 104;
    do
    {
      int v5 = *(_DWORD *)(v2 + 32);
      BOOL v6 = v5 < v3;
      if (v5 >= v3) {
        int v7 = (uint64_t *)v2;
      }
      else {
        int v7 = (uint64_t *)(v2 + 8);
      }
      if (!v6) {
        uint64_t v4 = v2;
      }
      uint64_t v2 = *v7;
    }
    while (*v7);
    if (v4 == result + 104 || v3 < *(_DWORD *)(v4 + 32))
    {
LABEL_12:
      char v17 = (_DWORD *)(result + 84);
      sub_1001A284C((uint64_t **)(result + 96), (int *)(result + 84), (uint64_t)&unk_1004BC2F8, &v17)[5] = 0;
      if (!*(unsigned char *)(v1 + 88)) {
        sub_10000AE44();
      }
    }
    double v8 = *(double *)(v1 + 32) - *(double *)(v1 + 56);
    char v17 = (_DWORD *)(v1 + 84);
    uint64_t result = (uint64_t)sub_1001A284C((uint64_t **)(v1 + 96), (int *)(v1 + 84), (uint64_t)&unk_1004BC2F8, &v17);
    *(double *)(result + 40) = v8 + *(double *)(result + 40);
  }
  if (*(_DWORD *)(v1 + 76) != 6)
  {
    double v9 = *(double *)(v1 + 32) - *(double *)(v1 + 48);
    char v17 = (_DWORD *)(v1 + 76);
    uint64_t result = (uint64_t)sub_1001A284C((uint64_t **)(v1 + 120), (int *)(v1 + 76), (uint64_t)&unk_1004BC2F8, &v17);
    *(double *)(result + 40) = v9 + *(double *)(result + 40);
  }
  BOOL v10 = *(void **)(v1 + 96);
  if (v10 != (void *)(v1 + 104))
  {
    double v11 = *(double *)(v1 + 8);
    do
    {
      int v12 = *((_DWORD *)v10 + 8);
      if (v12 < 1) {
        double v13 = 0.0;
      }
      else {
        double v13 = 1000.0 / (double)v12 * 0.01 * 32.9;
      }
      double v11 = v11 + v13 * *((double *)v10 + 5) / 3600.0;
      *(double *)(v1 + 8) = v11;
      uint64_t result = sub_1002D5C58(v1, v12);
      switch(result)
      {
        case 2:
          *(_DWORD *)(v1 + 72) = v12;
          break;
        case 1:
          *(_DWORD *)(v1 + 68) = v12;
          break;
        case 0:
          *(_DWORD *)(v1 + 64) = v12;
          break;
      }
      id v14 = (void *)v10[1];
      if (v14)
      {
        do
        {
          int v15 = v14;
          id v14 = (void *)*v14;
        }
        while (v14);
      }
      else
      {
        do
        {
          int v15 = (void *)v10[2];
          BOOL v16 = *v15 == (void)v10;
          BOOL v10 = v15;
        }
        while (!v16);
      }
      BOOL v10 = v15;
    }
    while (v15 != (void *)(v1 + 104));
  }
  return result;
}

void sub_1002D52DC(uint64_t a1)
{
  uint64_t v2 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(_DWORD *)(a1 + 16);
    int v37 = (int *)(a1 + 64);
    uint64_t v4 = sub_1001A284C((uint64_t **)(a1 + 96), (int *)(a1 + 64), (uint64_t)&unk_1004BC2F8, &v37)[5];
    int v37 = (int *)(a1 + 68);
    int v5 = sub_1001A284C((uint64_t **)(a1 + 96), (int *)(a1 + 68), (uint64_t)&unk_1004BC2F8, &v37)[5];
    int v37 = (int *)(a1 + 72);
    __int16 v28 = sub_1001A284C((uint64_t **)(a1 + 96), (int *)(a1 + 72), (uint64_t)&unk_1004BC2F8, &v37)[5];
    int v36 = 0;
    int v37 = &v36;
    __int16 v27 = sub_1001A284C((uint64_t **)(a1 + 120), &v36, (uint64_t)&unk_1004BC2F8, &v37)[5];
    int v35 = 1;
    int v37 = &v35;
    __int16 v26 = sub_1001A284C((uint64_t **)(a1 + 120), &v35, (uint64_t)&unk_1004BC2F8, &v37)[5];
    int v34 = 2;
    int v37 = &v34;
    uint64_t v24 = sub_1001A284C((uint64_t **)(a1 + 120), &v34, (uint64_t)&unk_1004BC2F8, &v37)[5];
    char v25 = v5;
    int v33 = 3;
    int v37 = &v33;
    BOOL v6 = sub_1001A284C((uint64_t **)(a1 + 120), &v33, (uint64_t)&unk_1004BC2F8, &v37)[5];
    int v32 = 4;
    int v37 = &v32;
    int v7 = sub_1001A284C((uint64_t **)(a1 + 120), &v32, (uint64_t)&unk_1004BC2F8, &v37)[5];
    int v31 = 5;
    int v37 = &v31;
    double v8 = sub_1001A284C((uint64_t **)(a1 + 120), &v31, (uint64_t)&unk_1004BC2F8, &v37)[5];
    int v9 = *(_DWORD *)(a1 + 64);
    int v10 = *(_DWORD *)(a1 + 68);
    int v11 = *(_DWORD *)(a1 + 72);
    *(_DWORD *)uint8_t buf = 67112192;
    *(_DWORD *)&uint8_t buf[4] = v3;
    __int16 v41 = 2048;
    uint64_t v42 = v4;
    __int16 v43 = 2048;
    uint64_t v44 = v25;
    __int16 v45 = 2048;
    uint64_t v46 = v28;
    __int16 v47 = 2048;
    unint64_t v48 = v27;
    __int16 v49 = 2048;
    uint64_t v50 = v26;
    __int16 v51 = 2048;
    char v52 = v24;
    __int16 v53 = 2048;
    char v54 = v6;
    __int16 v55 = 2048;
    char v56 = v7;
    __int16 v57 = 2048;
    int v58 = v8;
    __int16 v59 = 1024;
    int v60 = v9;
    __int16 v61 = 1024;
    int v62 = v10;
    __int16 v63 = 1024;
    int v64 = v11;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#handoffca Handoff device report: {\nNumTimesSmallestRegionEntered: %d,\nTimeSpentRangingAtRate0: %f s,\nTimeSpentRangingAtRate1: %f s,\nTimeSpentRangingAtRate2: %f s,\nTimeSpentRegion0: %f s,\nTimeSpentRegion1: %f s,\nTimeSpentRegion2: %f s,\nTimeSpentRegion3: %f s,\nTimeSpentRegion4: %f s,\nTimeSpentRegion5: %f s,\nRangingIntervalMillisecondsRate0: %d ms,\nRangingIntervalMillisecondsRate1: %d ms,\nRangingIntervalMillisecondsRate2: %d ms\n}", buf,
      0x74u);
  }

  v38[0] = @"numTimesSmallestRegionEntered";
  int v12 = +[NSNumber numberWithInt:*(unsigned int *)(a1 + 16)];
  v39[0] = v12;
  v38[1] = @"timeSpentRangingAtRate0";
  *(void *)uint8_t buf = a1 + 64;
  os_log_t log = +[NSNumber numberWithDouble:*((double *)sub_1001A284C((uint64_t **)(a1 + 96), (int *)(a1 + 64), (uint64_t)&unk_1004BC2F8, (_DWORD **)buf) + 5)];
  v39[1] = log;
  v38[2] = @"timeSpentRangingAtRate1";
  *(void *)uint8_t buf = a1 + 68;
  __int16 v29 = +[NSNumber numberWithDouble:*((double *)sub_1001A284C((uint64_t **)(a1 + 96), (int *)(a1 + 68), (uint64_t)&unk_1004BC2F8, (_DWORD **)buf) + 5)];
  v39[2] = v29;
  v38[3] = @"timeSpentRangingAtRate2";
  *(void *)uint8_t buf = a1 + 72;
  double v13 = +[NSNumber numberWithDouble:*((double *)sub_1001A284C((uint64_t **)(a1 + 96), (int *)(a1 + 72), (uint64_t)&unk_1004BC2F8, (_DWORD **)buf) + 5)];
  v39[3] = v13;
  v38[4] = @"timeSpentRegion0";
  id v14 = (uint64_t **)(a1 + 120);
  LODWORD(v37) = 0;
  *(void *)uint8_t buf = &v37;
  int v15 = +[NSNumber numberWithDouble:*((double *)sub_1001A284C((uint64_t **)(a1 + 120), (int *)&v37, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf) + 5)];
  v39[4] = v15;
  void v38[5] = @"timeSpentRegion1";
  int v36 = 1;
  *(void *)uint8_t buf = &v36;
  BOOL v16 = +[NSNumber numberWithDouble:*((double *)sub_1001A284C(v14, &v36, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf) + 5)];
  v39[5] = v16;
  v38[6] = @"timeSpentRegion2";
  int v35 = 2;
  *(void *)uint8_t buf = &v35;
  char v17 = +[NSNumber numberWithDouble:*((double *)sub_1001A284C(v14, &v35, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf) + 5)];
  v39[6] = v17;
  v38[7] = @"timeSpentRegion3";
  int v34 = 3;
  *(void *)uint8_t buf = &v34;
  int v18 = +[NSNumber numberWithDouble:*((double *)sub_1001A284C(v14, &v34, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf) + 5)];
  v39[7] = v18;
  v38[8] = @"timeSpentRegion4";
  int v33 = 4;
  *(void *)uint8_t buf = &v33;
  __int16 v19 = +[NSNumber numberWithDouble:*((double *)sub_1001A284C(v14, &v33, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf) + 5)];
  _OWORD v39[8] = v19;
  v38[9] = @"timeSpentRegion5";
  int v32 = 5;
  *(void *)uint8_t buf = &v32;
  uint64_t v20 = +[NSNumber numberWithDouble:*((double *)sub_1001A284C(v14, &v32, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf) + 5)];
  v39[9] = v20;
  uint64_t v21 = +[NSDictionary dictionaryWithObjects:v39 forKeys:v38 count:10];

  id v22 = v21;
  AnalyticsSendEventLazy();
  char v23 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint8_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "#handoffca Uploaded device information through AnalyticsSendEventLazy", buf, 2u);
  }
}

void sub_1002D59F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

int64_t sub_1002D5AB4(id a1, id a2, id a3)
{
  id v4 = a3;
  [a2 radius];
  float v6 = v5;
  [v4 radius];
  if (v6 < v7) {
    int64_t v8 = -1;
  }
  else {
    int64_t v8 = v6 > v7;
  }

  return v8;
}

void sub_1002D5B0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002D5B20(uint64_t a1, void *a2, double a3)
{
  id v5 = a2;
  float v6 = v5;
  if (v5)
  {
    id v7 = [v5 name];
    sub_100004950(__p, (char *)[v7 UTF8String]);
    uint64_t v8 = sub_100007494(a1 + 144, (const void **)__p);
    if (a1 + 152 != v8)
    {
      int v9 = *(_DWORD *)(v8 + 56);
      if (v9 == *(_DWORD *)(a1 + 80)) {
        ++*(_DWORD *)(a1 + 16);
      }
      if (*(_DWORD *)(a1 + 76) <= 5u)
      {
        double v10 = *(double *)(a1 + 48);
        id v14 = (_DWORD *)(a1 + 76);
        int v11 = sub_1001A284C((uint64_t **)(a1 + 120), (int *)(a1 + 76), (uint64_t)&unk_1004BC2F8, &v14);
        *((double *)v11 + 5) = a3 - v10 + *((double *)v11 + 5);
      }
      *(double *)(a1 + 48) = a3;
      *(_DWORD *)(a1 + 76) = v9;
    }
    if (v13 < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_1002D5C20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_1002D5C58(uint64_t a1, int a2)
{
  float v2 = (float)a2;
  if (*(unsigned char *)(a1 + 4))
  {
    double v3 = (double)*(int *)a1;
    float v4 = v3 * 14.2999998;
    if (v4 <= v2)
    {
      float v5 = (double)*(int *)a1 * 16.2000002;
      BOOL v6 = v5 < v2;
    }
    else
    {
      BOOL v6 = 1;
    }
    if (!v6) {
      return 0;
    }
    float v7 = v3 * 9.54999977;
    if (v7 <= v2)
    {
      float v8 = v3 * 11.4500002;
      BOOL v9 = v8 < v2;
    }
    else
    {
      BOOL v9 = 1;
    }
    if (!v9) {
      return 1;
    }
    float v10 = (float)*(int *)a1;
    float v11 = v3 * 1.95000001;
  }
  else
  {
    float v10 = -1.0;
    float v11 = -1.0;
    if (a2 == -1) {
      return 0;
    }
  }
  if (v11 < v2 || v10 > v2) {
    return 0xFFFFFFFFLL;
  }
  else {
    return 2;
  }
}

id sub_1002D5D10(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

uint64_t sub_1002D5D18(uint64_t a1, int *a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  float v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 16 * a3;
    do
    {
      sub_10023823C((uint64_t **)a1, v4, a2, a2);
      a2 += 4;
      v6 -= 16;
    }
    while (v6);
  }
  return a1;
}

void sub_1002D5D80(_Unwind_Exception *a1)
{
  sub_10003E96C(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

_OWORD *sub_1002D5D98(uint64_t **a1, const void **a2, uint64_t a3, _OWORD **a4)
{
  uint64_t v6 = (void **)sub_100026C8C((uint64_t)a1, &v12, a2);
  float v7 = *v6;
  if (!*v6)
  {
    float v8 = (uint64_t **)v6;
    float v7 = operator new(0x40uLL);
    BOOL v9 = *a4;
    uint64_t v10 = *((void *)*a4 + 2);
    v7[2] = **a4;
    *((void *)v7 + 6) = v10;
    v9[1] = 0;
    _DWORD v9[2] = 0;
    *BOOL v9 = 0;
    *((_DWORD *)v7 + 14) = 0;
    sub_100026D98(a1, v12, v8, (uint64_t *)v7);
  }
  return v7;
}

uint64_t sub_1002D5E34(uint64_t result)
{
  *(void *)uint64_t result = 0;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 1;
  return result;
}

void sub_1002D5E44(uint64_t a1)
{
  float v2 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    double v3 = *(_DWORD *)(a1 + 16) ? "PowerOff" : "PowerOn";
    sub_100004950(__p, v3);
    float v4 = v7 >= 0 ? __p : (void **)__p[0];
    *(_DWORD *)uint8_t buf = 136315138;
    BOOL v9 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#rosepower-ca,poweredOn roseState:%s", buf, 0xCu);
    if (v7 < 0) {
      operator delete(__p[0]);
    }
  }

  double v5 = sub_100006C38();
  if (*(_DWORD *)(a1 + 16) == 1)
  {
    *(double *)a1 = v5;
    *(_DWORD *)(a1 + 16) = 0;
  }
}

void sub_1002D5F58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002D5F70(uint64_t a1)
{
  float v2 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    double v3 = *(_DWORD *)(a1 + 16) ? "PowerOff" : "PowerOn";
    sub_100004950(__p, v3);
    float v4 = v8 >= 0 ? __p : (void **)__p[0];
    *(_DWORD *)uint8_t buf = 136315138;
    uint64_t v10 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#rosepower-ca,poweredOff roseState:%s", buf, 0xCu);
    if (v8 < 0) {
      operator delete(__p[0]);
    }
  }

  double v5 = sub_100006C38();
  if (!*(_DWORD *)(a1 + 16))
  {
    double v6 = v5 - *(double *)a1;
    *(double *)(a1 + 8) = v6;
    if (v6 > 0.0)
    {
      sub_1002D60B8(a1);
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
    }
    *(_DWORD *)(a1 + 16) = 1;
  }
}

void sub_1002D60A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002D60B8(uint64_t a1)
{
  v10[0] = @"numPowerUps";
  float v2 = +[NSNumber numberWithInt:1];
  v11[0] = v2;
  v10[1] = @"powerOnDuration";
  double v3 = +[NSNumber numberWithDouble:*(double *)(a1 + 8)];
  v11[1] = v3;
  float v4 = +[NSDictionary dictionaryWithObjects:v11 forKeys:v10 count:2];

  double v5 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    id v6 = [v4 description];
    *(_DWORD *)uint8_t buf = 136315138;
    id v9 = [v6 UTF8String];
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#rosepower-ca,rose power data to be uploaded:\n%s\n", buf, 0xCu);
  }
  id v7 = v4;
  AnalyticsSendEventLazy();
}

void sub_1002D6268(_Unwind_Exception *a1)
{
  float v4 = v3;

  _Unwind_Resume(a1);
}

id sub_1002D62BC(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void *sub_1002D62C4@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085EAD8[a1]);
}

void *sub_1002D62D8@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085EB30[a1]);
}

void *sub_1002D62EC@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085EB78[a1]);
}

void *sub_1002D6300@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085EB98[a1]);
}

uint64_t sub_1002D6314(uint64_t a1, void *a2, uint64_t a3, double a4)
{
  id v7 = a2;
  *(void *)a1 = off_10085E9E8;
  *(void *)(a1 + 8) = off_10085EA48;
  id v8 = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = dispatch_queue_create("com.apple.nearbyd.motion", 0);
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = a3;
  *(void *)(a1 + 48) = 0;
  if (!a3)
  {
    id v14 = "motionProxyObject";
    int v15 = 21;
    goto LABEL_8;
  }
  if (!v8)
  {
    id v14 = "clientQueue";
    int v15 = 22;
    goto LABEL_8;
  }
  if (a4 == 0.0)
  {
    id v14 = "updateInterval != 0";
    int v15 = 23;
LABEL_8:
    __assert_rtn("PRMotionProvider", "PRMotionProvider.mm", v15, v14);
  }
  id v9 = objc_alloc_init((Class)NSOperationQueue);
  uint64_t v10 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v9;

  [*(id *)(a1 + 32) setUnderlyingQueue:*(void *)(a1 + 24)];
  id v11 = objc_alloc_init((Class)CMMotionManager);
  uint64_t v12 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = v11;

  [*(id *)(a1 + 48) setDeviceMotionUpdateInterval:a4];
  return a1;
}

void sub_1002D6450(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002D6484(uint64_t a1)
{
  float v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint8_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "starting motion updates", buf, 2u);
  }
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_1002D65B0;
  void v5[3] = &unk_10085EA68;
  v5[4] = a1;
  double v3 = objc_retainBlock(v5);
  [*(id *)(a1 + 48) startDeviceMotionUpdatesUsingReferenceFrame:4 toQueue:*(void *)(a1 + 32) withHandler:v3];
  float v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint8_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "started motion updates", buf, 2u);
  }
}

void sub_1002D65A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002D65B0(uint64_t a1, void *a2, void *a3)
{
}

void sub_1002D65B8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042C818((uint64_t)v6, v7);
    }
  }
  else if (v5)
  {
    [v5 timestamp];
    uint64_t v9 = v8;
    [v5 userAcceleration];
    uint64_t v11 = v10;
    [v5 userAcceleration];
    uint64_t v13 = v12;
    [v5 userAcceleration];
    uint64_t v15 = v14;
    [v5 rotationRate];
    uint64_t v17 = v16;
    [v5 rotationRate];
    uint64_t v19 = v18;
    [v5 rotationRate];
    uint64_t v56 = v20;
    uint64_t v21 = [v5 attitude];
    [v21 quaternion];
    uint64_t v55 = v22;
    char v23 = [v5 attitude];
    [v23 quaternion];
    uint64_t v54 = v24;
    char v25 = [v5 attitude];
    [v25 quaternion];
    uint64_t v53 = v26;
    __int16 v27 = [v5 attitude];
    [v27 quaternion];
    uint64_t v52 = v28;
    [v5 gravity];
    uint64_t v51 = v29;
    [v5 gravity];
    uint64_t v50 = v30;
    [v5 gravity];
    uint64_t v49 = v31;
    [v5 magneticField];
    uint64_t v47 = v80;
    uint64_t v48 = v19;
    [v5 magneticField];
    uint64_t v32 = v17;
    uint64_t v33 = v9;
    uint64_t v46 = v79;
    [v5 magneticField];
    uint64_t v45 = v78;
    int v34 = [v5 attitude];
    [v34 yaw];
    uint64_t v36 = v35;
    int v37 = [v5 attitude];
    [v37 pitch];
    uint64_t v39 = v38;
    uint64_t v40 = [v5 attitude];
    [v40 roll];
    uint64_t v42 = v41;

    __int16 v43 = *(NSObject **)(a1 + 16);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1002D6AF0;
    block[3] = &unk_100853A48;
    void block[4] = a1;
    void block[5] = v33;
    void block[6] = 0;
    char v58 = 1;
    uint64_t v59 = v11;
    uint64_t v60 = v13;
    uint64_t v61 = v15;
    uint64_t v62 = v32;
    uint64_t v63 = v48;
    uint64_t v64 = v56;
    uint64_t v65 = v55;
    uint64_t v66 = v54;
    uint64_t v67 = v53;
    uint64_t v68 = v52;
    uint64_t v69 = v51;
    uint64_t v70 = v50;
    uint64_t v71 = v49;
    uint64_t v72 = v47;
    uint64_t v73 = v46;
    uint64_t v74 = v45;
    uint64_t v75 = v36;
    uint64_t v76 = v39;
    uint64_t v77 = v42;
    dispatch_async(v43, block);
  }
  else
  {
    uint64_t v44 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042C7D4(v44);
    }
  }
}

void sub_1002D68D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002D6980(uint64_t a1)
{
  float v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint8_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "stopping motion updates", buf, 2u);
  }
  [*(id *)(a1 + 48) stopDeviceMotionUpdates];
  double v3 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)float v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "stopped motion updates.", v4, 2u);
  }
}

id sub_1002D6A38(uint64_t a1)
{
  return _[*(id *)(a1 + 48) isDeviceMotionAvailable];
}

BOOL sub_1002D6A40(uint64_t a1, uint64_t a2)
{
  switch(*(_DWORD *)a2)
  {
    case 0:
      float v2 = qword_1008ABDE0;
      BOOL result = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR);
      if (result)
      {
        sub_10042C8BC(v2);
        return 0;
      }
      return result;
    case 1:
      sub_1002D6484(a1);
      return 1;
    case 2:
      sub_1002D6980(a1);
      return 1;
    case 3:
      if (!*(unsigned char *)(a2 + 16)) {
        sub_10042C890();
      }
      [*(id *)(a1 + 48) setDeviceMotionUpdateInterval:*(double *)(a2 + 8)];
      return 1;
    default:
      return 1;
  }
}

void sub_1002D6AF0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  *(_OWORD *)&v19[68] = *(_OWORD *)(a1 + 104);
  *(_OWORD *)&v19[52] = *(_OWORD *)(a1 + 88);
  *(_OWORD *)&v19[116] = *(_OWORD *)(a1 + 152);
  *(_OWORD *)&v19[132] = *(_OWORD *)(a1 + 168);
  *(_OWORD *)&v19[148] = *(_OWORD *)(a1 + 184);
  *(_OWORD *)&v19[164] = *(_OWORD *)(a1 + 200);
  *(_OWORD *)&v19[84] = *(_OWORD *)(a1 + 120);
  *(_OWORD *)&v19[100] = *(_OWORD *)(a1 + 136);
  *(_OWORD *)&v19[4] = *(_OWORD *)(a1 + 40);
  *(_OWORD *)&v19[20] = *(_OWORD *)(a1 + 56);
  *(_OWORD *)&v19[36] = *(_OWORD *)(a1 + 72);
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v4 = v2;
  int v5 = 1;
  long long v14 = *(_OWORD *)&v19[128];
  long long v15 = *(_OWORD *)&v19[144];
  long long v16 = *(_OWORD *)&v19[160];
  int v17 = *(_DWORD *)&v19[176];
  long long v10 = *(_OWORD *)&v19[64];
  long long v11 = *(_OWORD *)&v19[80];
  long long v12 = *(_OWORD *)&v19[96];
  long long v13 = *(_OWORD *)&v19[112];
  long long v6 = *(_OWORD *)v19;
  long long v7 = *(_OWORD *)&v19[16];
  long long v8 = *(_OWORD *)&v19[32];
  long long v9 = *(_OWORD *)&v19[48];
  char v18 = 1;
  sub_100187150(v3, (uint64_t)&v4);
}

id *sub_1002D6C10(id *a1)
{
  return a1;
}

void sub_1002D6C54(id *a1)
{
  operator delete();
}

void sub_1002D6CB8(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
}

void sub_1002D6D04(id *a1)
{
  operator delete();
}

uint64_t sub_1002D6EF8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_1002D6FA8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_1002D706C(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 24);
  id v2 = [*(id *)(a1 + 40) state];
  uint64_t v3 = *(uint64_t (**)(uint64_t, id))(v1 + 16);

  return v3(v1, v2);
}

unsigned char *sub_1002D7118(unsigned char *result)
{
  *uint64_t result = 0;
  result[8] = 0;
  result[16] = 0;
  result[24] = 0;
  result[32] = 0;
  result[40] = 0;
  result[48] = 0;
  result[56] = 0;
  result[64] = 0;
  result[68] = 0;
  result[72] = 0;
  result[76] = 0;
  result[80] = 0;
  result[88] = 0;
  result[96] = 0;
  result[100] = 0;
  result[104] = 0;
  result[108] = 0;
  return result;
}

void sub_1002D7164(uint64_t a1)
{
  v6[0] = @"maxNumberOfInitiators";
  if (*(unsigned char *)(a1 + 100)) {
    +[NSNumber numberWithInt:*(unsigned int *)(a1 + 96)];
  }
  else {
  id v2 = +[NSNull null];
  }
  v6[1] = @"maxNumberOfResponders";
  v7[0] = v2;
  if (*(unsigned char *)(a1 + 108)) {
    +[NSNumber numberWithInt:*(unsigned int *)(a1 + 104)];
  }
  else {
  uint64_t v3 = +[NSNull null];
  }
  v7[1] = v3;
  uint64_t v4 = +[NSDictionary dictionaryWithObjects:v7 forKeys:v6 count:2];

  id v5 = v4;
  AnalyticsSendEventLazy();
}

void sub_1002D72DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1002D7320(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

unsigned char *sub_1002D7328(unsigned char *a1)
{
  sub_1002D7368((uint64_t)a1);
  sub_1002D7164((uint64_t)a1);

  return sub_1002D7850(a1);
}

void sub_1002D7368(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8))
  {
    double v2 = 0.0;
    if (*(unsigned char *)(a1 + 56) && (double v3 = *(double *)(a1 + 48) - *(double *)a1, v3 > 0.0))
    {
      int v17 = 1;
    }
    else
    {
      int v17 = 0;
      double v3 = 0.0;
    }
    if (!*(unsigned char *)(a1 + 24))
    {
      BOOL v19 = 1;
      double v5 = 0.0;
      char v6 = 1;
      goto LABEL_15;
    }
    double v4 = *(double *)(a1 + 16) - *(double *)a1;
    BOOL v19 = v4 <= 0.0;
    if (v4 > 0.0) {
      double v2 = *(double *)(a1 + 16) - *(double *)a1;
    }
    else {
      double v2 = 0.0;
    }
  }
  else
  {
    int v17 = 0;
    double v2 = 0.0;
    BOOL v19 = 1;
    double v3 = 0.0;
    double v5 = 0.0;
    char v6 = 1;
    if (!*(unsigned char *)(a1 + 24)) {
      goto LABEL_15;
    }
  }
  if (*(unsigned char *)(a1 + 40))
  {
    char v6 = 0;
    double v5 = *(double *)(a1 + 32) - *(double *)(a1 + 16);
  }
  else
  {
    char v6 = 1;
    double v5 = 0.0;
  }
LABEL_15:
  double v7 = 0.0;
  if (*(unsigned char *)(a1 + 56) && *(unsigned char *)(a1 + 88))
  {
    char v8 = 0;
    double v7 = *(double *)(a1 + 48) - *(double *)(a1 + 80);
  }
  else
  {
    char v8 = 1;
  }
  v26[0] = @"numberOfInitiators";
  if (*(unsigned char *)(a1 + 68)) {
    +[NSNumber numberWithInt:*(unsigned int *)(a1 + 64)];
  }
  else {
  long long v9 = +[NSNull null];
  }
  v27[0] = v9;
  v26[1] = @"numberOfResponders";
  if (*(unsigned char *)(a1 + 76)) {
    +[NSNumber numberWithInt:*(unsigned int *)(a1 + 72)];
  }
  else {
  char v18 = +[NSNull null];
  }
  v27[1] = v18;
  void v26[2] = @"timeFromLockScreenToFirstMeasurement";
  if (v17) {
    +[NSNumber numberWithDouble:v3];
  }
  else {
  long long v10 = +[NSNull null];
  }
  v27[2] = v10;
  v26[3] = @"timeFromLockScreenToNiSessionStart";
  if (v19) {
    +[NSNull null];
  }
  else {
  long long v11 = +[NSNumber numberWithDouble:v2];
  }
  v27[3] = v11;
  v26[4] = @"timeFromNiSessionStartToBluetoothDiscovery";
  if (v6) {
    +[NSNull null];
  }
  else {
  long long v12 = +[NSNumber numberWithDouble:v5];
  }
  v27[4] = v12;
  v26[5] = @"timeFromRangingRequestToFirstMeasurement";
  if (v8) {
    +[NSNull null];
  }
  else {
  long long v13 = +[NSNumber numberWithDouble:v7];
  }
  v27[5] = v13;
  long long v14 = +[NSDictionary dictionaryWithObjects:v27 forKeys:v26 count:6];

  uint64_t v21 = _NSConcreteStackBlock;
  uint64_t v22 = 3221225472;
  char v23 = sub_1002D78C0;
  uint64_t v24 = &unk_1008465D8;
  id v15 = v14;
  id v25 = v15;
  AnalyticsSendEventLazy();
  long long v16 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint8_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "#proximitywifica Uploaded device information through AnalyticsSendEventLazy", buf, 2u);
  }
}

void sub_1002D778C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

unsigned char *sub_1002D7850(unsigned char *result)
{
  if (result[8]) {
    result[8] = 0;
  }
  if (result[24]) {
    result[24] = 0;
  }
  if (result[40]) {
    result[40] = 0;
  }
  if (result[56]) {
    result[56] = 0;
  }
  if (result[68]) {
    result[68] = 0;
  }
  if (result[76]) {
    result[76] = 0;
  }
  if (result[88]) {
    result[88] = 0;
  }
  if (result[100]) {
    result[100] = 0;
  }
  if (result[108]) {
    result[108] = 0;
  }
  return result;
}

id sub_1002D78C0(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_1002D78C8(uint64_t a1, double a2)
{
  *(double *)a1 = a2;
  *(unsigned char *)(a1 + 8) = 1;
  double v3 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    if (!*(unsigned char *)(a1 + 8)) {
      sub_10000AE44();
    }
    double v4 = *(double *)a1;
    int v5 = 134217984;
    double v6 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#proximitywifica lock screen time: %f", (uint8_t *)&v5, 0xCu);
  }
}

void sub_1002D7994(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002D79AC(uint64_t a1, double a2)
{
  *(double *)(a1 + 16) = a2;
  *(unsigned char *)(a1 + 24) = 1;
  if (*(unsigned char *)(a1 + 56)) {
    *(unsigned char *)(a1 + 56) = 0;
  }
  double v3 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    if (!*(unsigned char *)(a1 + 24)) {
      sub_10000AE44();
    }
    uint64_t v4 = *(void *)(a1 + 16);
    int v5 = 134217984;
    uint64_t v6 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#proximitywifica session start time %f", (uint8_t *)&v5, 0xCu);
  }
}

void sub_1002D7A84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002D7A9C(uint64_t a1, double a2)
{
  *(double *)(a1 + 32) = a2;
  *(unsigned char *)(a1 + 40) = 1;
  double v3 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    if (!*(unsigned char *)(a1 + 40)) {
      sub_10000AE44();
    }
    uint64_t v4 = *(void *)(a1 + 32);
    int v5 = 134217984;
    uint64_t v6 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#proximitywifica device discovery time %f", (uint8_t *)&v5, 0xCu);
  }
}

void sub_1002D7B68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1002D7B80(uint64_t result, double a2)
{
  *(double *)(result + 48) = a2;
  *(unsigned char *)(result + 56) = 1;
  return result;
}

uint64_t sub_1002D7B90(uint64_t result, int a2, double a3)
{
  *(_DWORD *)(result + 64) = a2;
  *(unsigned char *)(result + 68) = 1;
  *(double *)(result + 80) = a3;
  *(unsigned char *)(result + 88) = 1;
  if (!*(unsigned char *)(result + 100) || *(_DWORD *)(result + 96) < a2)
  {
    *(_DWORD *)(result + 96) = a2;
    *(unsigned char *)(result + 100) = 1;
  }
  return result;
}

uint64_t sub_1002D7BC4(uint64_t result, int a2, double a3)
{
  *(_DWORD *)(result + 72) = a2;
  *(unsigned char *)(result + 76) = 1;
  *(double *)(result + 80) = a3;
  *(unsigned char *)(result + 88) = 1;
  if (!*(unsigned char *)(result + 108) || *(_DWORD *)(result + 104) < a2)
  {
    *(_DWORD *)(result + 104) = a2;
    *(unsigned char *)(result + 108) = 1;
  }
  return result;
}

void *sub_1002D7BF8@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, (&off_10085F038)[a1]);
}

void *sub_1002D7C0C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, (&off_10085F090)[a1]);
}

void *sub_1002D7C20@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, (&off_10085F0D8)[a1]);
}

void *sub_1002D7C34@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, (&off_10085F0F8)[a1]);
}

uint64_t sub_1002D7C48(uint64_t a1, long long *a2, void *__src, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)a1 = off_10085EC40;
  *(void *)(a1 + 8) = off_10085ED08;
  memcpy((void *)(a1 + 32), __src, 0x1F8uLL);
  uint64_t v20 = (unsigned char *)(a1 + 536);
  if (*((char *)a2 + 23) < 0)
  {
    sub_100002DE4(v20, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v21 = *a2;
    *(void *)(a1 + 552) = *((void *)a2 + 2);
    *(_OWORD *)uint64_t v20 = v21;
  }
  uint64_t v22 = a13[1];
  *(void *)(a1 + 560) = *a13;
  *(void *)(a1 + 568) = v22;
  if (v22) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v22 + 8), 1uLL, memory_order_relaxed);
  }
  *(void *)(a1 + 600) = 0;
  *(void *)(a1 + 632) = 0;
  *(void *)(a1 + 664) = 0;
  *(void *)(a1 + 672) = *((id *)sub_1002F6464() + 7);
  *(unsigned char *)(a1 + 680) = 0;
  *(unsigned char *)(a1 + 682) = 0;
  *(unsigned char *)(a1 + 688) = 0;
  *(unsigned char *)(a1 + 800) = 0;
  *(unsigned char *)(a1 + 808) = 0;
  *(unsigned char *)(a1 + 820) = 0;
  *(unsigned char *)(a1 + 824) = 0;
  *(unsigned char *)(a1 + 832) = 0;
  *(_WORD *)(a1 + 836) = 0;
  *(void *)(a1 + 840) = 1018212795;
  *(_OWORD *)(a1 + 848) = 0u;
  *(_OWORD *)(a1 + 864) = 0u;
  *(void *)(a1 + 880) = 0;
  *(void *)(a1 + 888) = 850045863;
  *(unsigned char *)(a1 + 984) = 0;
  *(unsigned char *)(a1 + 992) = 0;
  *(unsigned char *)(a1 + 1048) = 0;
  *(void *)(a1 + 1056) = 0;
  *(_DWORD *)(a1 + 1064) = 0;
  *(_OWORD *)(a1 + 937) = 0u;
  *(_OWORD *)(a1 + 912) = 0u;
  *(_OWORD *)(a1 + 928) = 0u;
  *(_OWORD *)(a1 + 896) = 0u;
  *(void *)(a1 + 1072) = 1018212795;
  *(_OWORD *)(a1 + 1080) = 0u;
  *(_OWORD *)(a1 + 1096) = 0u;
  *(void *)(a1 + 1112) = 0;
  *(void *)(a1 + 1120) = 850045863;
  *(_OWORD *)(a1 + 1128) = 0u;
  *(_OWORD *)(a1 + 1144) = 0u;
  *(_OWORD *)(a1 + 1160) = 0u;
  *(void *)(a1 + 1176) = 0;
  sub_1002DE50C(a1 + 1184, a4);
  sub_1002DE5A4(a1 + 1216, a5);
  sub_1002DE5A4(a1 + 1248, a8);
  sub_1002DE934(a1 + 1280, a12);
  sub_1002DE63C(a1 + 1312, a6);
  sub_1002DE6D4(a1 + 1344, a7);
  sub_1002DE76C(a1 + 1376, a9);
  sub_1002DE804(a1 + 1408, a10);
  sub_1002DE89C(a1 + 1440, a11);
  if (*(char *)(a1 + 559) < 0)
  {
    if (*(void *)(a1 + 544)) {
      return a1;
    }
LABEL_10:
    __assert_rtn("RoseBaseSession", "NIServerRoseSession.mm", 72, "fSessionContainerIdentifier.size() > 0");
  }
  if (!*(unsigned char *)(a1 + 559)) {
    goto LABEL_10;
  }
  return a1;
}

void sub_1002D7ED0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  long long v16 = *(std::__shared_weak_count **)(v14 + 24);
  if (v16) {
    std::__shared_weak_count::__release_weak(v16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002D8058(uint64_t a1)
{
  *(void *)a1 = off_10085EC40;
  *(void *)(a1 + 8) = off_10085ED08;
  double v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    double v3 = (void *)(a1 + 536);
    if (*(char *)(a1 + 559) < 0) {
      double v3 = (void *)*v3;
    }
    uint64_t v4 = (unsigned __int16 *)(a1 + 680);
    if (!*(unsigned char *)(a1 + 682)) {
      uint64_t v4 = (unsigned __int16 *)&unk_1004BF2A0;
    }
    int v5 = *v4;
    int v12 = 136315394;
    long long v13 = v3;
    __int16 v14 = 1024;
    int v15 = v5;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#rose-ses,~rose::objects::RoseBaseSession (Session ID: %s, Ticket: %d)", (uint8_t *)&v12, 0x12u);
  }
  unsigned __int8 v6 = atomic_load((unsigned __int8 *)(a1 + 836));
  if (v6) {
    sub_1002D8288(a1);
  }
  sub_1001D2B78((void *)(a1 + 1440));
  sub_1001D2BFC((void *)(a1 + 1408));
  sub_1001E11D4((void *)(a1 + 1376));
  sub_1001D2C80((void *)(a1 + 1344));
  sub_1001E12DC((void *)(a1 + 1312));
  sub_1001E1150((void *)(a1 + 1280));
  sub_1001E1258((void *)(a1 + 1248));
  sub_1001E1258((void *)(a1 + 1216));
  sub_1001D2D04((void *)(a1 + 1184));
  std::mutex::~mutex((std::mutex *)(a1 + 1120));
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 1072));
  double v7 = *(void **)(a1 + 1056);
  *(void *)(a1 + 1056) = 0;
  if (v7) {
    sub_1002DF5BC(a1 + 1056, v7);
  }
  if (*(unsigned char *)(a1 + 1048))
  {
    char v8 = *(void **)(a1 + 1000);
    if (v8)
    {
      *(void *)(a1 + 1008) = v8;
      operator delete(v8);
    }
  }
  if (*(unsigned char *)(a1 + 984) && *(char *)(a1 + 983) < 0) {
    operator delete(*(void **)(a1 + 960));
  }
  std::mutex::~mutex((std::mutex *)(a1 + 888));
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 840));

  sub_1001D29EC((void *)(a1 + 640));
  sub_1001D2A70((void *)(a1 + 608));
  sub_1001D2AF4((void *)(a1 + 576));
  long long v9 = *(std::__shared_weak_count **)(a1 + 568);
  if (v9) {
    sub_10001A970(v9);
  }
  if (*(char *)(a1 + 559) < 0) {
    operator delete(*(void **)(a1 + 536));
  }
  long long v10 = *(std::__shared_weak_count **)(a1 + 24);
  if (v10) {
    std::__shared_weak_count::__release_weak(v10);
  }
  return a1;
}

void sub_1002D827C(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_100012C10(a1);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1002D8288(uint64_t a1)
{
  unsigned __int8 v1 = atomic_load((unsigned __int8 *)(a1 + 836));
  if ((v1 & 1) == 0) {
    return 0;
  }
  uint64_t v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint8_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#rose-ses,#hangup Session::invalidate", buf, 2u);
  }
  sub_1002DE9CC((void *)(a1 + 1184));
  sub_1002DEA54((void *)(a1 + 1216));
  sub_1002DEADC((void *)(a1 + 1312));
  sub_1002DEB64((void *)(a1 + 1344));
  sub_1002DEBEC((void *)(a1 + 1280));
  if (*(unsigned char *)(a1 + 800)) {
    *(unsigned char *)(a1 + 800) = 0;
  }
  if (*(unsigned char *)(a1 + 820)) {
    *(unsigned char *)(a1 + 820) = 0;
  }
  if (*(unsigned char *)(a1 + 682))
  {
    uint64_t v5 = *(unsigned __int16 *)(a1 + 680);
    unsigned __int8 v6 = sub_1002F6464();
    double v7 = *(std::__shared_weak_count **)(a1 + 24);
    if (v7)
    {
      uint64_t v8 = *(void *)(a1 + 16);
      atomic_fetch_add_explicit(&v7->__shared_weak_owners_, 1uLL, memory_order_relaxed);
      uint64_t v18 = 0;
      BOOL v19 = 0;
      long long v9 = std::__shared_weak_count::lock(v7);
      long long v10 = v9;
      if (v9)
      {
        atomic_fetch_add_explicit(&v9->__shared_weak_owners_, 1uLL, memory_order_relaxed);
        uint64_t v18 = v8;
        BOOL v19 = v9;
        std::__shared_weak_count::__release_weak(v7);
        sub_10001A970(v10);
      }
      else
      {
        uint64_t v18 = 0;
        BOOL v19 = 0;
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    else
    {
      uint64_t v18 = 0;
      BOOL v19 = 0;
    }
    BOOL v11 = sub_1002F7308((uint64_t)v6, &v18, v5);
    if (v19) {
      std::__shared_weak_count::__release_weak(v19);
    }
    uint64_t v12 = *(void *)(a1 + 560);
    if (v12) {
      sub_10029E9E8(v12, v5, (const std::string *)(a1 + 536));
    }
    uint64_t v2 = (v11 - 1);
    long long v13 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v14 = (void *)(a1 + 536);
      if (*(char *)(a1 + 559) < 0) {
        __int16 v14 = (void *)*v14;
      }
      *(_DWORD *)uint8_t buf = 136315394;
      *(void *)&uint8_t buf[4] = v14;
      *(_WORD *)&unsigned char buf[12] = 1024;
      *(_DWORD *)&buf[14] = v5;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "#rose-ses,Invalidate session. (Session ID: %s, Ticket: %d)", buf, 0x12u);
    }
    if (*(unsigned char *)(a1 + 682)) {
      *(unsigned char *)(a1 + 682) = 0;
    }
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042C900();
    }
    uint64_t v2 = 0;
  }
  int v15 = sub_1002F6464();
  sub_10001A8A4(buf, (void *)(a1 + 16));
  long long v17 = *(_OWORD *)buf;
  *(void *)uint8_t buf = 0;
  *(void *)&uint8_t buf[8] = 0;
  sub_1002FA594((uint64_t)v15, (unint64_t *)&v17);
  if (*((void *)&v17 + 1)) {
    sub_10001A970(*((std::__shared_weak_count **)&v17 + 1));
  }
  if (*(void *)&buf[8]) {
    sub_10001A970(*(std::__shared_weak_count **)&buf[8]);
  }
  atomic_store(0, (unsigned __int8 *)(a1 + 836));
  return v2;
}

void sub_1002D8534(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14)
{
  if (a12) {
    std::__shared_weak_count::__release_weak(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002D8578(uint64_t a1)
{
  return sub_1002D8058(a1 - 8);
}

void sub_1002D8580(uint64_t a1)
{
  sub_1002D8058(a1);

  operator delete();
}

void sub_1002D85B8(uint64_t a1)
{
  sub_1002D8058(a1 - 8);

  operator delete();
}

uint64_t sub_1002D85F4(uint64_t a1)
{
  unsigned __int8 v1 = atomic_load((unsigned __int8 *)(a1 + 836));
  if (v1)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
      sub_10042C99C();
    }
    BOOL v19 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint8_t buf = 136315650;
      *(void *)&uint8_t buf[4] = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/UWB/NIServerRoseSession.mm";
      *(_WORD *)&unsigned char buf[12] = 1024;
      *(_DWORD *)&buf[14] = 86;
      __int16 v24 = 2080;
      id v25 = "initialize";
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "#rose-ses,%s:%d: assertion failure in %s", buf, 0x1Cu);
    }
    abort();
  }
  atomic_store(0, (unsigned int *)(a1 + 1064));
  double v3 = sub_1002F6464();
  sub_10001A8A4(buf, (void *)(a1 + 16));
  long long v22 = *(_OWORD *)buf;
  *(void *)uint8_t buf = 0;
  *(void *)&uint8_t buf[8] = 0;
  sub_1002FA4B8((uint64_t)v3, (unint64_t *)&v22);
  if (*((void *)&v22 + 1)) {
    sub_10001A970(*((std::__shared_weak_count **)&v22 + 1));
  }
  if (*(void *)&buf[8]) {
    sub_10001A970(*(std::__shared_weak_count **)&buf[8]);
  }
  uint64_t v4 = sub_1002F6464();
  uint64_t v5 = *((void *)v4 + 406);
  unsigned __int8 v6 = (std::__shared_weak_count *)*((void *)v4 + 407);
  if (v6) {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (!v5)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042C934();
    }
LABEL_31:
    uint64_t v17 = 0xFFFFFFFFLL;
    if (!v6) {
      return v17;
    }
LABEL_32:
    sub_10001A970(v6);
    return v17;
  }
  double v7 = sub_1002F6464();
  uint64_t v8 = *(std::__shared_weak_count **)(a1 + 24);
  if (v8)
  {
    uint64_t v9 = *(void *)(a1 + 16);
    atomic_fetch_add_explicit(&v8->__shared_weak_owners_, 1uLL, memory_order_relaxed);
    uint64_t v20 = 0;
    long long v21 = 0;
    long long v10 = std::__shared_weak_count::lock(v8);
    BOOL v11 = v10;
    if (v10)
    {
      atomic_fetch_add_explicit(&v10->__shared_weak_owners_, 1uLL, memory_order_relaxed);
      uint64_t v20 = v9;
      long long v21 = v10;
      std::__shared_weak_count::__release_weak(v8);
      sub_10001A970(v11);
    }
    else
    {
      uint64_t v20 = 0;
      long long v21 = 0;
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  else
  {
    uint64_t v20 = 0;
    long long v21 = 0;
  }
  uint64_t v12 = sub_1002F6CB4((uint64_t)v7, &v20);
  *(_WORD *)(a1 + 680) = v12;
  *(unsigned char *)(a1 + 682) = BYTE2(v12);
  if (v21)
  {
    std::__shared_weak_count::__release_weak(v21);
    int v13 = *(unsigned __int8 *)(a1 + 682);
  }
  else
  {
    int v13 = BYTE2(v12);
  }
  if (!v13)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042C968();
    }
    goto LABEL_31;
  }
  __int16 v14 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    int v15 = (void *)(a1 + 536);
    if (*(char *)(a1 + 559) < 0) {
      int v15 = (void *)*v15;
    }
    if (!*(unsigned char *)(a1 + 682)) {
      sub_10000AE44();
    }
    int v16 = *(unsigned __int16 *)(a1 + 680);
    *(_DWORD *)uint8_t buf = 136315394;
    *(void *)&uint8_t buf[4] = v15;
    *(_WORD *)&unsigned char buf[12] = 1024;
    *(_DWORD *)&buf[14] = v16;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "#rose-ses,Service registration success. (Session ID: %s, Ticket: %d)", buf, 0x12u);
  }

  if (*(unsigned char *)(a1 + 820)) {
    *(unsigned char *)(a1 + 820) = 0;
  }
  uint64_t v17 = 0;
  atomic_store(1u, (unsigned __int8 *)(a1 + 836));
  if (v6) {
    goto LABEL_32;
  }
  return v17;
}

void sub_1002D891C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (v14) {
    sub_10001A970(v14);
  }
  _Unwind_Resume(a1);
}

BOOL sub_1002D8978(uint64_t a1)
{
  unsigned __int8 v1 = atomic_load((unsigned __int8 *)(a1 + 836));
  if ((v1 & 1) == 0)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
      sub_10042C9D0();
    }
    uint64_t v4 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
    {
      int v5 = 136315650;
      unsigned __int8 v6 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/UWB/NIServerRoseSession.mm";
      __int16 v7 = 1024;
      int v8 = 116;
      __int16 v9 = 2080;
      long long v10 = "isInitiator";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "#rose-ses,%s:%d: assertion failure in %s", (uint8_t *)&v5, 0x1Cu);
    }
    abort();
  }
  int v2 = *(unsigned __int8 *)(a1 + 33);
  if (v2 == 100) {
    sub_10042CA04();
  }
  return v2 == 0;
}

BOOL sub_1002D8A88(uint64_t a1, uint64_t a2)
{
  v16.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 1120);
  v16.__owns_ = 1;
  std::mutex::lock((std::mutex *)(a1 + 1120));
  uint64_t v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint8_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#rose-ses,#time-convert waitForTimeConversionReadiness before", buf, 2u);
  }
  v5.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_ + 1000000 * a2;
  while (1)
  {
    unsigned int v6 = atomic_load((unsigned int *)(a1 + 1064));
    if (v6 == 1) {
      break;
    }
    if (std::chrono::steady_clock::now().__d_.__rep_ >= v5.__d_.__rep_) {
      goto LABEL_20;
    }
    v7.__d_.__rep_ = v5.__d_.__rep_ - std::chrono::steady_clock::now().__d_.__rep_;
    if (v7.__d_.__rep_ >= 1)
    {
      std::chrono::steady_clock::now();
      v8.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
      if (!v8.__d_.__rep_)
      {
        std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v9 = 0;
        goto LABEL_15;
      }
      if (v8.__d_.__rep_ < 1)
      {
        if ((unint64_t)v8.__d_.__rep_ >= 0xFFDF3B645A1CAC09) {
          goto LABEL_14;
        }
        std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v9 = 0x8000000000000000;
      }
      else
      {
        if ((unint64_t)v8.__d_.__rep_ > 0x20C49BA5E353F7)
        {
          std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v9 = 0x7FFFFFFFFFFFFFFFLL;
          goto LABEL_15;
        }
LABEL_14:
        std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v9 = 1000 * v8.__d_.__rep_;
LABEL_15:
        if (v9 > (v7.__d_.__rep_ ^ 0x7FFFFFFFFFFFFFFFLL))
        {
          v10.__d_.__rep_ = 0x7FFFFFFFFFFFFFFFLL;
LABEL_18:
          std::condition_variable::__do_timed_wait((std::condition_variable *)(a1 + 1072), &v16, v10);
          std::chrono::steady_clock::now();
          goto LABEL_19;
        }
      }
      v10.__d_.__rep_ = v9 + v7.__d_.__rep_;
      goto LABEL_18;
    }
LABEL_19:
    if (std::chrono::steady_clock::now().__d_.__rep_ >= v5.__d_.__rep_)
    {
LABEL_20:
      unsigned int v11 = atomic_load((unsigned int *)(a1 + 1064));
      BOOL v12 = v11 == 1;
      goto LABEL_22;
    }
  }
  BOOL v12 = 1;
LABEL_22:
  int v13 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    __int16 v14 = "No";
    if (v12) {
      __int16 v14 = "Yes";
    }
    *(_DWORD *)uint8_t buf = 136315138;
    uint64_t v18 = v14;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "#rose-ses,#time-convert waitForTimeConversionReadiness after. Is ready? %s", buf, 0xCu);
  }
  if (v16.__owns_) {
    std::mutex::unlock(v16.__m_);
  }
  return v12;
}

uint64_t sub_1002D8CB4()
{
  return 0;
}

void sub_1002D8CBC(uint64_t a1, uint64_t a2)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 672));
  unsigned __int8 v4 = atomic_load((unsigned __int8 *)(a1 + 836));
  if ((v4 & 1) == 0) {
    return;
  }
  if (*(unsigned char *)(a2 + 600) && !*(_WORD *)(a2 + 144) && *(unsigned char *)(a2 + 8))
  {
    if (!*(void *)(a1 + 1240)) {
      return;
    }
    sub_10001A8A4(&v10, (void *)(a1 + 16));
    uint64_t v5 = *(void *)(a1 + 1240);
    if (!v5) {
      sub_100027894();
    }
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)v5 + 48))(v5, &v10, a2);
    unsigned int v6 = v11;
    if (!v11) {
      return;
    }
LABEL_12:
    sub_10001A970(v6);
    return;
  }
  if (*(void *)(a1 + 1272))
  {
    sub_10001A8A4(&v8, (void *)(a1 + 16));
    uint64_t v7 = *(void *)(a1 + 1272);
    if (!v7) {
      sub_100027894();
    }
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)v7 + 48))(v7, &v8, a2);
    unsigned int v6 = v9;
    if (v9) {
      goto LABEL_12;
    }
  }
}

void sub_1002D8DCC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_10001A970(a12);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002D8DF4(uint64_t a1, uint64_t a2)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 672));
  unsigned __int8 v4 = atomic_load((unsigned __int8 *)(a1 + 836));
  if ((v4 & 1) != 0 && *(void *)(a1 + 1304))
  {
    sub_10001A8A4(&v6, (void *)(a1 + 16));
    uint64_t v5 = *(void *)(a1 + 1304);
    if (!v5) {
      sub_100027894();
    }
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)v5 + 48))(v5, &v6, a2);
    if (v7) {
      sub_10001A970(v7);
    }
  }
}

void sub_1002D8E90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_10001A970(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002D8EA8(uint64_t a1)
{
}

void sub_1002D8ED8(uint64_t a1, unsigned __int16 *a2)
{
  unsigned __int8 v4 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
  {
    int v7 = *a2;
    uint64_t v8 = *((void *)a2 + 5);
    sub_1002D9088((uint64_t *)a2 + 1);
    std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v9 = v13 >= 0 ? &__p : (void **)__p;
    *(_DWORD *)uint8_t buf = 67109635;
    int v15 = v7;
    __int16 v16 = 2049;
    uint64_t v17 = v8;
    __int16 v18 = 2081;
    BOOL v19 = v9;
    _os_log_debug_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "#rose-ses,didReceiveRemoteData (tkt %d, addr 0x%{private}llx): %{private}s", buf, 0x1Cu);
    if (v13 < 0) {
      operator delete(__p);
    }
  }

  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 672));
  unsigned __int8 v5 = atomic_load((unsigned __int8 *)(a1 + 836));
  if ((v5 & 1) != 0 && *(void *)(a1 + 1336))
  {
    sub_10001A8A4(&v10, (void *)(a1 + 16));
    uint64_t v6 = *(void *)(a1 + 1336);
    if (!v6) {
      sub_100027894();
    }
    (*(void (**)(uint64_t, uint64_t *, unsigned __int16 *))(*(void *)v6 + 48))(v6, &v10, a2);
    if (v11) {
      sub_10001A970(v11);
    }
  }
}

void sub_1002D905C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  if (a11) {
    sub_10001A970(a11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002D9088(uint64_t *a1)
{
  sub_1002363E4((uint64_t)v8);
  char v7 = 48;
  int v2 = sub_1001771C8(v8, &v7);
  *(_DWORD *)((char *)v2 + *(void *)(*v2 - 24) + 8) = *(_DWORD *)((unsigned char *)v2 + *(void *)(*v2 - 24) + 8) & 0xFFFFFFB5 | 8;
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1 != v4)
  {
    do
    {
      *(void *)((char *)&v8[3] + *(void *)(v8[0] - 24)) = 2;
      unsigned __int8 v5 = (void *)std::ostream::operator<<();
      sub_100056628(v5, (uint64_t)" ", 1);
      ++v3;
    }
    while (v3 != v4);
  }
  std::stringbuf::str();
  if (v9 < 0) {
    operator delete((void *)v8[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_1002D9260(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10023657C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1002D927C(uint64_t a1, uint64_t a2)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 672));
  if (*(unsigned char *)(a1 + 682))
  {
    int v4 = *(unsigned __int16 *)(a1 + 680);
    if (*(unsigned __int16 *)(a2 + 26) != v4)
    {
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
        sub_10042CB28();
      }
      id v25 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)uint8_t buf = 136315650;
        *(void *)uint64_t v33 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/UWB/NIServerRoseSession.mm";
        *(_WORD *)&v33[8] = 1024;
        *(_DWORD *)&v33[10] = 214;
        *(_WORD *)&v33[14] = 2080;
        *(void *)&unsigned char v33[16] = "didReceiveRangingRateUpdateEvent";
        _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_INFO, "#rose-ses,%s:%d: assertion failure in %s", buf, 0x1Cu);
      }
      abort();
    }
    float v5 = sub_1002D9788(a1);
    if (*(unsigned char *)(a2 + 31) == 2)
    {
      uint64_t v6 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        int v7 = *(unsigned __int8 *)(a2 + 30);
        uint64_t v8 = (void *)(a1 + 536);
        if (*(char *)(a1 + 559) < 0) {
          uint64_t v8 = (void *)*v8;
        }
        *(_DWORD *)uint8_t buf = 67109634;
        *(_DWORD *)uint64_t v33 = v7;
        *(_WORD *)&v33[4] = 2080;
        *(void *)&v33[6] = v8;
        *(_WORD *)&v33[14] = 1024;
        *(_DWORD *)&unsigned char v33[16] = v4;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#rose-ses,#throttle interrupted by silent restart, but eventually succeeded in updating to subrate %d. (Session ID: %s, Ticket: %d)", buf, 0x18u);
      }
      int v9 = 0;
      atomic_store(*(unsigned char *)(a2 + 30), (unsigned __int8 *)(a1 + 837));
      int v10 = -1;
    }
    else if (*(_DWORD *)(a2 + 32))
    {
      unsigned int v11 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
      {
        int v22 = *(unsigned __int8 *)(a2 + 30);
        int v23 = *(_DWORD *)(a2 + 32);
        __int16 v24 = (void *)(a1 + 536);
        if (*(char *)(a1 + 559) < 0) {
          __int16 v24 = (void *)*v24;
        }
        *(_DWORD *)uint8_t buf = 67109890;
        *(_DWORD *)uint64_t v33 = v22;
        *(_WORD *)&v33[4] = 1024;
        *(_DWORD *)&v33[6] = v23;
        *(_WORD *)&v33[10] = 2080;
        *(void *)&v33[12] = v24;
        *(_WORD *)&v33[20] = 1024;
        *(_DWORD *)&v33[22] = v4;
        _os_log_error_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "#rose-ses,#throttle failure to throttle. Current known subrate: %d. FW error code: 0x%x. (Session ID: %s, Ticket: %d)", buf, 0x1Eu);
      }
      atomic_store(*(unsigned char *)(a2 + 30), (unsigned __int8 *)(a1 + 837));
      int v10 = -1;
      int v9 = -1;
    }
    else
    {
      BOOL v12 = qword_1008ABDE0;
      if (*(unsigned char *)(a2 + 31))
      {
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
          sub_10042CAF4();
        }
        uint64_t v26 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)uint8_t buf = 136315650;
          *(void *)uint64_t v33 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/UWB/NIServerRoseSession.mm";
          *(_WORD *)&v33[8] = 1024;
          *(_DWORD *)&v33[10] = 235;
          *(_WORD *)&v33[14] = 2080;
          *(void *)&unsigned char v33[16] = "didReceiveRangingRateUpdateEvent";
          _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_INFO, "#rose-ses,%s:%d: assertion failure in %s", buf, 0x1Cu);
        }
        abort();
      }
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        int v13 = *(unsigned __int8 *)(a2 + 63);
        int v14 = *(unsigned __int8 *)(a2 + 62);
        int v15 = *(unsigned __int16 *)(a2 + 60);
        __int16 v16 = (void *)(a1 + 536);
        if (*(char *)(a1 + 559) < 0) {
          __int16 v16 = (void *)*v16;
        }
        *(_DWORD *)uint8_t buf = 67110146;
        *(_DWORD *)uint64_t v33 = v13;
        *(_WORD *)&v33[4] = 1024;
        *(_DWORD *)&v33[6] = v14;
        *(_WORD *)&v33[10] = 1024;
        *(_DWORD *)&v33[12] = v15;
        *(_WORD *)&unsigned char v33[16] = 2080;
        *(void *)&v33[18] = v16;
        __int16 v34 = 1024;
        int v35 = v4;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "#rose-ses,#throttle successful throttle. New: %d, Old: %d, Cycle: %d. (Session ID: %s, Ticket: %d)", buf, 0x24u);
      }
      __int16 v18 = (unsigned __int8 *)(a2 + 62);
      int v17 = *(unsigned __int8 *)(a2 + 62);
      int v19 = atomic_load((unsigned __int8 *)(a1 + 837));
      if (v17 != v19)
      {
        __int16 v27 = (unsigned __int8 *)(a1 + 837);
        uint64_t v28 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
          sub_10042CA64(v18, v27, v28);
        }
        uint64_t v29 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)uint8_t buf = 136315650;
          *(void *)uint64_t v33 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/UWB/NIServerRoseSession.mm";
          *(_WORD *)&v33[8] = 1024;
          *(_DWORD *)&v33[10] = 239;
          *(_WORD *)&v33[14] = 2080;
          *(void *)&unsigned char v33[16] = "didReceiveRangingRateUpdateEvent";
          _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_INFO, "#rose-ses,%s:%d: assertion failure in %s", buf, 0x1Cu);
        }
        abort();
      }
      int v9 = 0;
      atomic_store(*(unsigned char *)(a2 + 63), (unsigned __int8 *)(a1 + 837));
      int v10 = *(unsigned __int16 *)(a2 + 60);
    }
    float v20 = sub_1002D9788(a1);
    if (*(void *)(a1 + 1400))
    {
      float v21 = v20;
      sub_10001A8A4(&v30, (void *)(a1 + 16));
      sub_1002D9898(a1 + 1376, (uint64_t)&v30, v9, v10, v21, v5);
      if (v31) {
        sub_10001A970(v31);
      }
    }
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT))
  {
    sub_10042CA30();
  }
}

void sub_1002D9768(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_10001A970(a10);
  }
  _Unwind_Resume(exception_object);
}

float sub_1002D9788(uint64_t a1)
{
  if (sub_1002D8978(a1))
  {
    int v4 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
      sub_10042CB5C(v4, v5, v6, v7, v8, v9, v10, v11);
    }
    BOOL v12 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
    {
      int v13 = 136315650;
      int v14 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/UWB/NIServerRoseSession.mm";
      __int16 v15 = 1024;
      int v16 = 572;
      __int16 v17 = 2080;
      __int16 v18 = "currentResponderParticipationThrottleRate";
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "#rose-ses,%s:%d: assertion failure in %s", (uint8_t *)&v13, 0x1Cu);
    }
    abort();
  }
  unsigned int v2 = atomic_load((unsigned __int8 *)(a1 + 837));
  return (double)v2 / 19.0;
}

uint64_t sub_1002D9898(uint64_t a1, uint64_t a2, int a3, int a4, float a5, float a6)
{
  int v11 = a3;
  float v9 = a6;
  float v10 = a5;
  int v8 = a4;
  uint64_t v6 = *(void *)(a1 + 24);
  if (!v6) {
    sub_100027894();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, int *, float *, float *, int *))(*(void *)v6 + 48))(v6, a2, &v11, &v10, &v9, &v8);
}

void sub_1002D9900(uint64_t a1, void *a2)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 672));
  if (a2[2])
  {
    std::mutex::lock((std::mutex *)(a1 + 888));
    operator new();
  }
  uint64_t v4 = a2[3];
  if (v4)
  {
    if (*(unsigned char *)v4)
    {
      if (*(unsigned char *)v4 == 1)
      {
        int v5 = *(_DWORD *)(v4 + 29);
        char v6 = *(unsigned char *)(v4 + 33);
        int v7 = *(_DWORD *)(v4 + 37);
        char v8 = *(unsigned char *)(v4 + 36);
        float v9 = *(void **)(v4 + 41);
        uint64_t v10 = *(void *)(v4 + 49);
        unsigned int v11 = *(unsigned __int8 *)(v4 + 34);
        int v12 = *(_DWORD *)(v4 + 57);
        __int16 v13 = *(unsigned __int8 *)(v4 + 61);
        char v14 = *(unsigned char *)(v4 + 62);
        __int16 v15 = *(_WORD *)(v4 + 63);
        int v16 = *(_DWORD *)(v4 + 65);
        int v17 = *(_DWORD *)(v4 + 69);
        char v18 = *(unsigned char *)(v4 + 73);
        int v19 = *(__int16 *)(v4 + 74);
        char v20 = *(unsigned char *)(v4 + 76);
        int v21 = *(__int16 *)(v4 + 77);
        char v22 = *(unsigned char *)(v4 + 79);
        int v23 = *(__int16 *)(v4 + 80);
        LODWORD(v77) = v5;
        BYTE4(v77) = v6;
        LODWORD(v78) = v7;
        BYTE4(v78) = v8;
        uint64_t v79 = v9;
        uint64_t v80 = v10;
        int v81 = v12;
        LOWORD(v82) = v13;
        BYTE2(v82) = v14;
        __int16 v83 = v15;
        char v84 = v11 & 0xF;
        char v85 = v11 >> 4;
        float v24 = (double)v16 / 1.0e12 * 299792458.0;
        float v86 = v24;
        LODWORD(v87) = v17;
        BYTE4(v87) = v18;
        double v88 = (double)v19 * 0.25;
        char v89 = v20;
        double v90 = (double)v21 * 0.25;
        char v91 = v22;
        *(double *)&uint64_t v93 = (double)v23 * 0.25;
        LOBYTE(v94) = v22;
        double v95 = *(double *)&v93;
        id v25 = (id)qword_1008ABDE0;
        if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
        {
          sub_100332728((unsigned __int16 *)&v77);
          uint64_t v26 = SBYTE3(v74) >= 0 ? __p : *(unsigned char **)__p;
          *(_DWORD *)uint8_t buf = 136315138;
          uint64_t v76 = v26;
          _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "#rose-ses,Anchor ranging block summary: %s", buf, 0xCu);
          if (SBYTE3(v74) < 0) {
            operator delete(*(void **)__p);
          }
        }

        uint64_t v27 = *(void *)(a1 + 560);
        if (v27) {
          (*(void (**)(uint64_t, uint64_t *))(*(void *)v27 + 96))(v27, &v77);
        }
        if (*(void *)(a1 + 1464))
        {
          sub_10001A8A4(&v68, (void *)(a1 + 16));
          uint64_t v28 = *(void *)(a1 + 1464);
          if (!v28) {
            sub_100027894();
          }
          (*(void (**)(uint64_t, uint64_t *, uint64_t *))(*(void *)v28 + 48))(v28, &v68, &v77);
          if (v69) {
            sub_10001A970(v69);
          }
        }
      }
      return;
    }
    char v39 = *(unsigned char *)(v4 + 33);
    int v40 = *(_DWORD *)(v4 + 37);
    uint64_t v41 = *(void **)(v4 + 41);
    int v42 = *(_DWORD *)(v4 + 49);
    int v43 = *(_DWORD *)(v4 + 53);
    unsigned int v44 = *(unsigned __int8 *)(v4 + 34);
    int v45 = *(_DWORD *)(v4 + 57);
    __int16 v46 = *(unsigned __int8 *)(v4 + 61);
    char v47 = *(unsigned char *)(v4 + 90);
    char v48 = *(unsigned char *)(v4 + 91);
    char v49 = *(unsigned char *)(v4 + 92);
    __int16 v50 = *(_WORD *)(v4 + 93);
    char v51 = *(unsigned char *)(v4 + 95);
    LODWORD(v77) = *(_DWORD *)(v4 + 29);
    BYTE4(v77) = v39;
    LODWORD(v78) = v40;
    uint64_t v79 = v41;
    LODWORD(v80) = v42;
    BYTE4(v80) = v44 & 0xF;
    BYTE5(v80) = v44 >> 4;
    int v81 = v43;
    int v82 = v45;
    __int16 v83 = v46;
    char v84 = v47;
    sub_10033027C(v48, (unint64_t *)&v87);
    LOBYTE(v90) = v49;
    WORD1(v90) = v50;
    BYTE4(v90) = 0;
    char v91 = 0;
    char v92 = v51;
    uint64_t v94 = 0;
    double v95 = 0.0;
    *(double *)&uint64_t v93 = 0.0;
    if (*(unsigned char *)(v4 + 96))
    {
      unint64_t v52 = 0;
      uint64_t v53 = (__int16 *)(v4 + 99);
      do
      {
        sub_1002DA350(&v77, *((unsigned char *)v53 - 2), *((unsigned char *)v53 - 1), *v53);
        v53 += 2;
        ++v52;
      }
      while (v52 < *(unsigned __int8 *)(v4 + 96));
    }
    uint64_t v54 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT))
    {
      sub_100330CD4((unsigned __int16 *)&v77);
      uint64_t v55 = SBYTE3(v74) >= 0 ? __p : *(unsigned char **)__p;
      *(_DWORD *)uint8_t buf = 136315138;
      uint64_t v76 = v55;
      _os_log_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_DEFAULT, "#rose-ses,Ranging block summary: %s", buf, 0xCu);
      if (SBYTE3(v74) < 0) {
        operator delete(*(void **)__p);
      }
    }

    uint64_t v56 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v56, OS_LOG_TYPE_DEFAULT))
    {
      sub_1003323DC((unsigned __int16 *)&v77);
      __int16 v57 = SBYTE3(v74) >= 0 ? __p : *(unsigned char **)__p;
      *(_DWORD *)uint8_t buf = 136315138;
      uint64_t v76 = v57;
      _os_log_impl((void *)&_mh_execute_header, v56, OS_LOG_TYPE_DEFAULT, "#rose-ses,RBSS: %s", buf, 0xCu);
      if (SBYTE3(v74) < 0) {
        operator delete(*(void **)__p);
      }
    }

    uint64_t v58 = *(void *)(a1 + 560);
    if (v58) {
      (*(void (**)(uint64_t, uint64_t *))(*(void *)v58 + 88))(v58, &v77);
    }
    if (*(void *)(a1 + 1432))
    {
      sub_10001A8A4(&v66, (void *)(a1 + 16));
      uint64_t v59 = *(void *)(a1 + 1432);
      if (!v59) {
        sub_100027894();
      }
      (*(void (**)(uint64_t, uint64_t *, uint64_t *))(*(void *)v59 + 48))(v59, &v66, &v77);
      if (v67) {
        sub_10001A970(v67);
      }
    }
    if (*(double *)&v93 != 0.0)
    {
      uint64_t v94 = v93;
      operator delete(v93);
    }
    uint64_t v60 = v87;
    if (*(double *)&v87 != 0.0)
    {
      double v88 = *(double *)&v87;
LABEL_70:
      operator delete(v60);
    }
  }
  else
  {
    uint64_t v29 = (unsigned __int8 *)a2[4];
    if (v29)
    {
      unsigned int v30 = *v29;
      BOOL v31 = v30 < 5 && (v30 & 0x1F) != 0;
      if (v30 >= 5) {
        int v32 = 0;
      }
      else {
        int v32 = *v29;
      }
      int v33 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
      sub_1002DE208((uint64_t)&v77, v33, v32, *(_WORD *)(a2[4] + 4), (__int16 *)(a2[4] + 6), 6, *(_WORD *)(a2[4] + 20), *(__int16 *)(a2[4] + 22), *(_WORD *)(a2[4] + 24));
      __int16 v34 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
      {
        sub_1001C2354((uint64_t)&v77);
        int v35 = SBYTE3(v74) >= 0 ? __p : *(unsigned char **)__p;
        *(_DWORD *)uint8_t buf = 136315138;
        uint64_t v76 = v35;
        _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, "#rose-ses,Session stats: %s", buf, 0xCu);
        if (SBYTE3(v74) < 0) {
          operator delete(*(void **)__p);
        }
      }

      uint64_t v36 = *(void *)(a1 + 600);
      if (v36) {
        (*(void (**)(uint64_t, uint64_t *))(*(void *)v36 + 48))(v36, &v77);
      }
      uint64_t v37 = *(void *)(a1 + 560);
      if (v37) {
        (*(void (**)(uint64_t, uint64_t *))(*(void *)v37 + 104))(v37, &v77);
      }
      if (*(void *)(a1 + 664) && (double v38 = sub_100006C38(), (v32 - 2) < 3))
      {
        sub_1001FF480(a1 + 640, (v32 - 2) + 2, v38);
      }
      else if ((v30 & 0x1F) == 1 && *(void *)(a1 + 632) && v30 <= 4)
      {
        int v63 = *(unsigned __int8 *)(a2[4] + 3);
        if (v63 == 2)
        {
          int v64 = 1;
        }
        else if (v63 == 3)
        {
          int v64 = 2;
        }
        else
        {
          if (!*(unsigned char *)(a2[4] + 3))
          {
            if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
              sub_10042CC08();
            }
            uint64_t v65 = qword_1008ABDE0;
            if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)std::string __p = 136315650;
              *(void *)&__p[4] = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/UWB"
                                   "/NIServerRoseSession.mm";
              __int16 v71 = 1024;
              int v72 = 352;
              __int16 v73 = 2080;
              uint64_t v74 = "didReceiveAlishaUpdate";
              _os_log_impl((void *)&_mh_execute_header, v65, OS_LOG_TYPE_INFO, "#rose-ses,%s:%d: assertion failure in %s", __p, 0x1Cu);
            }
            abort();
          }
          int v64 = 0;
        }
        sub_1002DA4B0(a1 + 608, v64);
      }
      else if (!v31)
      {
        std::mutex::lock((std::mutex *)(a1 + 888));
        sub_1002DA504(a1 + 992, (uint64_t)&v77);
        std::mutex::unlock((std::mutex *)(a1 + 888));
        std::condition_variable::notify_one((std::condition_variable *)(a1 + 840));
      }
      uint64_t v60 = v78;
      if (v78)
      {
        uint64_t v79 = v78;
        goto LABEL_70;
      }
    }
    else
    {
      uint64_t v61 = qword_1008ABDE0;
      if (a2[5])
      {
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          int v62 = *(_DWORD *)(a2[5] + 24);
          LODWORD(v77) = 67109120;
          HIDWORD(v77) = v62;
          _os_log_impl((void *)&_mh_execute_header, v61, OS_LOG_TYPE_DEFAULT, "#rose-ses,KeyExpiredEvent for uwb session id %u.", (uint8_t *)&v77, 8u);
        }
      }
      else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT))
      {
        sub_10042CBD4();
      }
    }
  }
}

void sub_1002DA220(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,void *__p,uint64_t a23)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002DA300(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  if (!v1) {
    sub_100027894();
  }
  unsigned int v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);

  return v2();
}

void sub_1002DA350(void *a1, char a2, char a3, int a4)
{
  unint64_t v9 = a1[13];
  uint64_t v7 = (uint64_t)(a1 + 13);
  unint64_t v8 = v9;
  double v10 = (double)a4 * 0.25;
  unint64_t v11 = *(void *)(v7 - 8);
  if (v11 >= v9)
  {
    __int16 v13 = (void **)(v7 - 16);
    uint64_t v14 = *(void *)(v7 - 16);
    uint64_t v15 = (uint64_t)(v11 - v14) >> 4;
    unint64_t v16 = v15 + 1;
    if ((unint64_t)(v15 + 1) >> 60) {
      sub_1000267C4();
    }
    uint64_t v17 = v8 - v14;
    if (v17 >> 3 > v16) {
      unint64_t v16 = v17 >> 3;
    }
    if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v18 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v18 = v16;
    }
    int v19 = (char *)sub_10015344C(v7, v18);
    char v20 = (double *)&v19[16 * v15];
    char v22 = &v19[16 * v21];
    *(unsigned char *)char v20 = a2;
    *((unsigned char *)v20 + 1) = a3;
    v20[1] = v10;
    int v12 = (char *)(v20 + 2);
    float v24 = (char *)a1[11];
    int v23 = (char *)a1[12];
    if (v23 != v24)
    {
      do
      {
        *((_OWORD *)v20 - 1) = *((_OWORD *)v23 - 1);
        v20 -= 2;
        v23 -= 16;
      }
      while (v23 != v24);
      int v23 = (char *)*v13;
    }
    a1[11] = v20;
    a1[12] = v12;
    a1[13] = v22;
    if (v23) {
      operator delete(v23);
    }
  }
  else
  {
    *(unsigned char *)unint64_t v11 = a2;
    *(unsigned char *)(v11 + 1) = a3;
    int v12 = (char *)(v11 + 16);
    *(double *)(v11 + 8) = v10;
  }
  a1[12] = v12;
}

uint64_t sub_1002DA460(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  if (!v1) {
    sub_100027894();
  }
  unsigned int v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);

  return v2();
}

uint64_t sub_1002DA4B0(uint64_t a1, int a2)
{
  int v4 = a2;
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2) {
    sub_100027894();
  }
  return (*(uint64_t (**)(uint64_t, int *))(*(void *)v2 + 48))(v2, &v4);
}

uint64_t sub_1002DA504(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 56);
  *(void *)a1 = *(void *)a2;
  if (v4)
  {
    if (a1 != a2) {
      sub_1001D09E4((char *)(a1 + 8), *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 1);
    }
    long long v5 = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = v5;
  }
  else
  {
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    sub_1001D0B70((void *)(a1 + 8), *(const void **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 1);
    long long v6 = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = v6;
    *(unsigned char *)(a1 + 56) = 1;
  }
  return a1;
}

void sub_1002DA5AC(uint64_t a1, uint64_t a2)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 672));
  int v4 = *(unsigned __int8 **)(a2 + 16);
  if (!v4) {
    return;
  }
  int v5 = *(_DWORD *)(v4 + 3);
  int v6 = *v4;
  if (v5 != 25)
  {
    if (v5 != 24) {
      return;
    }
    if (v6 == 1)
    {
      unsigned __int8 v7 = v4[33];
      int v8 = *(_DWORD *)(v4 + 37);
      unsigned __int8 v9 = v4[36];
      uint64_t v10 = *(void *)(v4 + 41);
      uint64_t v11 = *(void *)(v4 + 49);
      int v12 = *(_DWORD *)(v4 + 57);
      __int16 v13 = v4[61];
      unsigned __int8 v14 = v4[62];
      __int16 v15 = *(_WORD *)(v4 + 63);
      int v16 = *(_DWORD *)(v4 + 65);
      int v17 = *(_DWORD *)(v4 + 69);
      unsigned __int8 v18 = v4[73];
      int v19 = *((__int16 *)v4 + 37);
      unsigned __int8 v20 = v4[76];
      int v21 = *(__int16 *)(v4 + 77);
      char v22 = v4[79];
      int v23 = *((__int16 *)v4 + 40);
      LODWORD(v93) = *(_DWORD *)(v4 + 29);
      BYTE4(v93) = v7;
      int v94 = v8;
      unsigned __int8 v95 = v9;
      uint64_t v96 = v10;
      uint64_t v97 = v11;
      int v98 = v12;
      LOWORD(v99) = v13;
      BYTE2(v99) = v14;
      __int16 v100 = v15;
      __int16 v101 = 257;
      float v24 = (double)v16 / 1.0e12 * 299792458.0;
      float v102 = v24;
      LODWORD(v103) = v17;
      BYTE4(v103) = v18;
      double v104 = (double)v19 * 0.25;
      unsigned __int8 v105 = v20;
      double v106 = (double)v21 * 0.25;
      char v107 = v22;
      *(double *)&std::string __p = (double)v23 * 0.25;
      LOBYTE(v110) = v22;
      double v111 = *(double *)&__p;
      id v25 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      {
        sub_100332728((unsigned __int16 *)&v93);
        uint64_t v26 = v118 >= 0 ? v117 : (void **)v117[0];
        *(_DWORD *)uint8_t buf = 136315138;
        int v120 = v26;
        _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "#rose-ses,Responder ranging block summary: %s", buf, 0xCu);
        if (v118 < 0) {
          operator delete(v117[0]);
        }
      }

      uint64_t v27 = *(void *)(a1 + 560);
      if (v27) {
        (*(void (**)(uint64_t, uint64_t *))(*(void *)v27 + 96))(v27, &v93);
      }
      if (!*(void *)(a1 + 1464)) {
        return;
      }
      sub_10001A8A4(&v115, (void *)(a1 + 16));
      uint64_t v28 = *(void *)(a1 + 1464);
      if (!v28) {
        sub_100027894();
      }
      (*(void (**)(uint64_t, uint64_t *, uint64_t *))(*(void *)v28 + 48))(v28, &v115, &v93);
      uint64_t v29 = v116;
      if (!v116) {
        return;
      }
LABEL_68:
      sub_10001A970(v29);
      return;
    }
    if (*v4) {
      return;
    }
    unsigned __int8 v35 = v4[33];
    int v36 = *(_DWORD *)(v4 + 37);
    uint64_t v37 = *(void *)(v4 + 41);
    __int16 v38 = *(_WORD *)(v4 + 49);
    __int16 v39 = *(_WORD *)(v4 + 51);
    int v40 = *(_DWORD *)(v4 + 53);
    int v41 = *(_DWORD *)(v4 + 57);
    __int16 v42 = v4[61];
    unsigned __int8 v43 = v4[90];
    char v44 = v4[91];
    unsigned __int8 v45 = v4[92];
    unsigned __int8 v46 = v4[95];
    LODWORD(v93) = *(_DWORD *)(v4 + 29);
    BYTE4(v93) = v35;
    int v94 = v36;
    uint64_t v96 = v37;
    LOWORD(v97) = v38;
    WORD1(v97) = v39;
    WORD2(v97) = 257;
    int v98 = v40;
    int v99 = v41;
    __int16 v100 = v42;
    LOBYTE(v101) = v43;
    sub_10033027C(v44, (unint64_t *)&v103);
    LOBYTE(v106) = v45;
    WORD1(v106) = v39;
    BYTE4(v106) = 0;
    char v107 = 0;
    unsigned __int8 v108 = v46;
    int v110 = 0;
    double v111 = 0.0;
    *(double *)&std::string __p = 0.0;
    if (v4[96])
    {
      unint64_t v47 = 0;
      char v48 = (__int16 *)(v4 + 99);
      do
      {
        sub_1002DA350(&v93, *((unsigned char *)v48 - 2), *((unsigned char *)v48 - 1), *v48);
        v48 += 2;
        ++v47;
      }
      while (v47 < v4[96]);
    }
    if (v4[62])
    {
      float v49 = (double)*(int *)(v4 + 63) / 1.0e12 * 299792458.0;
      *((float *)&v106 + 1) = v49;
      char v107 = 1;
    }
    __int16 v50 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT))
    {
      sub_100330CD4((unsigned __int16 *)&v93);
      char v51 = v118 >= 0 ? v117 : (void **)v117[0];
      *(_DWORD *)uint8_t buf = 136315138;
      int v120 = v51;
      _os_log_impl((void *)&_mh_execute_header, v50, OS_LOG_TYPE_DEFAULT, "#rose-ses,Initiator ranging block summary: %s", buf, 0xCu);
      if (v118 < 0) {
        operator delete(v117[0]);
      }
    }

    uint64_t v52 = *(void *)(a1 + 560);
    if (v52) {
      (*(void (**)(uint64_t, uint64_t *))(*(void *)v52 + 88))(v52, &v93);
    }
    if (!*(void *)(a1 + 1432)) {
      goto LABEL_51;
    }
    sub_10001A8A4(&v113, (void *)(a1 + 16));
    uint64_t v53 = *(void *)(a1 + 1432);
    if (!v53) {
      sub_100027894();
    }
    (*(void (**)(uint64_t, uint64_t *, uint64_t *))(*(void *)v53 + 48))(v53, &v113, &v93);
    uint64_t v54 = v114;
    if (!v114) {
      goto LABEL_51;
    }
LABEL_50:
    sub_10001A970(v54);
LABEL_51:
    if (*(double *)&__p != 0.0)
    {
      int v110 = __p;
      operator delete(__p);
    }
    if (*(double *)&v103 != 0.0)
    {
      double v104 = *(double *)&v103;
      operator delete(v103);
    }
    return;
  }
  if (v6 != 1)
  {
    if (*v4) {
      return;
    }
    int v55 = *(_DWORD *)(v4 + 29);
    unsigned __int8 v56 = v4[33];
    int v57 = *(_DWORD *)(v4 + 37);
    uint64_t v58 = *(void *)(v4 + 41);
    __int16 v59 = *(_WORD *)(v4 + 49);
    __int16 v60 = *(_WORD *)(v4 + 51);
    int v61 = *(_DWORD *)(v4 + 53);
    int v62 = *(_DWORD *)(v4 + 57);
    __int16 v63 = *(_WORD *)(v4 + 61);
    unsigned __int8 v64 = v4[134];
    char v65 = v4[135];
    unsigned __int8 v66 = v4[129];
    unsigned __int8 v67 = v4[133];
    LODWORD(v93) = v55;
    BYTE4(v93) = v56;
    int v94 = v57;
    uint64_t v96 = v58;
    LOWORD(v97) = v59;
    WORD1(v97) = v60;
    WORD2(v97) = 257;
    int v98 = v61;
    int v99 = v62;
    __int16 v100 = v63;
    LOBYTE(v101) = v64;
    sub_10033027C(v65, (unint64_t *)&v103);
    LOBYTE(v106) = v66;
    WORD1(v106) = v60;
    BYTE4(v106) = 0;
    char v107 = 0;
    unsigned __int8 v108 = v67;
    int v110 = 0;
    double v111 = 0.0;
    *(double *)&std::string __p = 0.0;
    uint64_t v68 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v68, OS_LOG_TYPE_DEFAULT))
    {
      sub_100330CD4((unsigned __int16 *)&v93);
      uint64_t v69 = v118 >= 0 ? v117 : (void **)v117[0];
      *(_DWORD *)uint8_t buf = 136315138;
      int v120 = v69;
      _os_log_impl((void *)&_mh_execute_header, v68, OS_LOG_TYPE_DEFAULT, "#rose-ses,Initiator ranging block summary: %s", buf, 0xCu);
      if (v118 < 0) {
        operator delete(v117[0]);
      }
    }

    uint64_t v70 = *(void *)(a1 + 560);
    if (v70) {
      (*(void (**)(uint64_t, uint64_t *))(*(void *)v70 + 88))(v70, &v93);
    }
    if (!*(void *)(a1 + 1432)) {
      goto LABEL_51;
    }
    sub_10001A8A4(&v89, (void *)(a1 + 16));
    sub_1002DA460(a1 + 1408);
    uint64_t v54 = v90;
    if (!v90) {
      goto LABEL_51;
    }
    goto LABEL_50;
  }
  char v112 = 0;
  int v30 = *((_DWORD *)sub_100007D00() + 187);
  if (v30 == 2)
  {
    uint64_t v31 = *(void *)(a2 + 16);
    int v32 = (int *)(v31 + 100);
    int v33 = (char *)(v31 + 97);
    __int16 v34 = (__int16 *)(v31 + 98);
  }
  else
  {
    if (v30 != 1) {
      return;
    }
    uint64_t v31 = *(void *)(a2 + 16);
    int v32 = (int *)(v31 + 99);
    int v33 = (char *)(v31 + 96);
    __int16 v34 = (__int16 *)(v31 + 97);
  }
  double v71 = (double)*v34 * 0.25;
  char v72 = *v33;
  double v73 = (double)*(__int16 *)(v31 + 79) * 0.25;
  unsigned __int8 v74 = *(unsigned char *)(v31 + 78);
  int v75 = *(_DWORD *)(v31 + 66);
  double v76 = (double)*v32 / 1.0e12;
  __int16 v77 = *(_WORD *)(v31 + 64);
  char v78 = *(unsigned char *)(v31 + 63);
  __int16 v79 = *(_WORD *)(v31 + 61);
  int v80 = *(_DWORD *)(v31 + 57);
  uint64_t v81 = *(void *)(v31 + 49);
  uint64_t v82 = *(void *)(v31 + 41);
  *(float *)&double v76 = v76 * 299792458.0;
  unsigned __int8 v83 = *(unsigned char *)(v31 + 36);
  int v84 = *(_DWORD *)(v31 + 37);
  char v85 = *(unsigned char *)(v31 + 33);
  LODWORD(v93) = *(_DWORD *)(v31 + 29);
  BYTE4(v93) = v85;
  int v94 = v84;
  unsigned __int8 v95 = v83;
  uint64_t v96 = v82;
  uint64_t v97 = v81;
  int v98 = v80;
  LOWORD(v99) = v79;
  BYTE2(v99) = v78;
  __int16 v100 = v77;
  __int16 v101 = 257;
  float v102 = *(float *)&v76;
  LODWORD(v103) = v75;
  BYTE4(v103) = 0;
  double v104 = 0.0;
  unsigned __int8 v105 = v74;
  double v106 = v73;
  char v107 = 0;
  *(double *)&std::string __p = 0.0;
  LOBYTE(v110) = v72;
  double v111 = v71;
  char v112 = 1;
  float v86 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v86, OS_LOG_TYPE_DEFAULT))
  {
    sub_100332728((unsigned __int16 *)&v93);
    char v87 = v118 >= 0 ? v117 : (void **)v117[0];
    *(_DWORD *)uint8_t buf = 136315138;
    int v120 = v87;
    _os_log_impl((void *)&_mh_execute_header, v86, OS_LOG_TYPE_DEFAULT, "#rose-ses,Responder ranging block summary: %s", buf, 0xCu);
    if (v118 < 0) {
      operator delete(v117[0]);
    }
  }

  uint64_t v88 = *(void *)(a1 + 560);
  if (v88)
  {
    if (!v112) {
      sub_10000AE44();
    }
    (*(void (**)(uint64_t, uint64_t *))(*(void *)v88 + 96))(v88, &v93);
  }
  if (*(void *)(a1 + 1464))
  {
    sub_10001A8A4(&v91, (void *)(a1 + 16));
    if (!v112) {
      sub_10000AE44();
    }
    sub_1002DA300(a1 + 1440);
    uint64_t v29 = v92;
    if (v92) {
      goto LABEL_68;
    }
  }
}

void sub_1002DAE04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);

  sub_1001D1F3C(va);
  _Unwind_Resume(a1);
}

void sub_1002DAEA4(uint64_t a1, uint64_t *a2)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 672));
  unsigned __int8 v4 = atomic_load((unsigned __int8 *)(a1 + 836));
  if (v4)
  {
    sub_100004950(v14, (&off_10085F118)[*((int *)a2 + 1)]);
    sub_100004950(__p, (&off_10085F190)[*((int *)a2 + 2)]);
    int v5 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      int v6 = v14;
      if (v15 < 0) {
        int v6 = (void **)v14[0];
      }
      unsigned __int8 v7 = __p;
      if (v13 < 0) {
        unsigned __int8 v7 = (void **)__p[0];
      }
      *(_DWORD *)uint8_t buf = 136315394;
      int v17 = v6;
      __int16 v18 = 2080;
      int v19 = v7;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#rose-ses,serviceRequestDidUpdateStatus. type: %s, reason: %s", buf, 0x16u);
    }
    if (*(unsigned char *)(a1 + 820)) {
      *(unsigned char *)(a1 + 820) = 0;
    }
    uint64_t v8 = *a2;
    *(_DWORD *)(a1 + 816) = *((_DWORD *)a2 + 2);
    *(void *)(a1 + 808) = v8;
    *(unsigned char *)(a1 + 820) = 1;
    if (*(void *)(a1 + 1208))
    {
      sub_10001A8A4(&v10, (void *)(a1 + 16));
      uint64_t v9 = *(void *)(a1 + 1208);
      if (!v9) {
        sub_100027894();
      }
      (*(void (**)(uint64_t, uint64_t *, uint64_t *))(*(void *)v9 + 48))(v9, &v10, a2);
      if (v11) {
        sub_10001A970(v11);
      }
    }
    if (v13 < 0) {
      operator delete(__p[0]);
    }
    if (v15 < 0) {
      operator delete(v14[0]);
    }
  }
}

void sub_1002DB070(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002DB0C0(uint64_t a1, int a2, int a3)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 672));
  unsigned __int8 v6 = atomic_load((unsigned __int8 *)(a1 + 836));
  if (v6)
  {
    *(_DWORD *)(a1 + 824) = a2;
    *(_DWORD *)(a1 + 828) = a3;
    *(unsigned char *)(a1 + 832) = 1;
  }
}

void sub_1002DB114(uint64_t a1, unsigned int *a2)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 672));
  unsigned __int8 v4 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    if (*a2) {
      int v5 = "Ready";
    }
    else {
      int v5 = "NotReady";
    }
    sub_100004950(__p, v5);
    if (v8 >= 0) {
      unsigned __int8 v6 = __p;
    }
    else {
      unsigned __int8 v6 = (void **)__p[0];
    }
    *(_DWORD *)uint8_t buf = 136315138;
    uint64_t v10 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#rose-ses,timeConversionDidUpdateState (%s)", buf, 0xCu);
    if (v8 < 0) {
      operator delete(__p[0]);
    }
  }

  std::mutex::lock((std::mutex *)(a1 + 1120));
  atomic_store(*a2, (unsigned int *)(a1 + 1064));
  std::condition_variable::notify_one((std::condition_variable *)(a1 + 1072));
  std::mutex::unlock((std::mutex *)(a1 + 1120));
}

void sub_1002DB244(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002DB25C(uint64_t a1, uint64_t *a2)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 672));
  unsigned __int8 v4 = atomic_load((unsigned __int8 *)(a1 + 836));
  if (v4)
  {
    int v5 = (*(uint64_t (**)(uint64_t, uint64_t *))(*(void *)a1 + 176))(a1, a2);
    unsigned __int8 v6 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
    {
      sub_10042CC3C(a2, v5, v6);
      if (v5) {
        goto LABEL_4;
      }
    }
    else if (v5)
    {
LABEL_4:
      std::mutex::lock((std::mutex *)(a1 + 888));
      sub_1002DB398(a1 + 952, (uint64_t)a2);
      std::mutex::unlock((std::mutex *)(a1 + 888));
      std::condition_variable::notify_one((std::condition_variable *)(a1 + 840));
      return;
    }
    sub_1002D8288(a1);
    if (*(void *)(a1 + 1368))
    {
      sub_10001A8A4(&v7, (void *)(a1 + 16));
      sub_1002DB3E0(a1 + 1344, (uint64_t)&v7, -2);
      if (v8) {
        sub_10001A970(v8);
      }
    }
  }
}

void sub_1002DB370(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_10001A970(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002DB398(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 32))
  {
    *(void *)a1 = *(void *)a2;
    std::string::operator=((std::string *)(a1 + 8), (const std::string *)(a2 + 8));
  }
  else
  {
    sub_100175144(a1, a2);
  }
  return a1;
}

uint64_t sub_1002DB3E0(uint64_t a1, uint64_t a2, int a3)
{
  int v5 = a3;
  uint64_t v3 = *(void *)(a1 + 24);
  if (!v3) {
    sub_100027894();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, int *))(*(void *)v3 + 48))(v3, a2, &v5);
}

uint64_t sub_1002DB434(uint64_t a1, long long *a2)
{
  unsigned __int8 v2 = atomic_load((unsigned __int8 *)(a1 + 836));
  if ((v2 & 1) == 0 || !*(unsigned char *)(a1 + 682)) {
    return 4294967294;
  }
  int v5 = sub_1002F6464();
  unsigned __int8 v6 = *(std::__shared_weak_count **)(a1 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a1 + 16);
    atomic_fetch_add_explicit(&v6->__shared_weak_owners_, 1uLL, memory_order_relaxed);
    uint64_t v18 = 0;
    int v19 = 0;
    char v8 = std::__shared_weak_count::lock(v6);
    uint64_t v9 = v8;
    if (v8)
    {
      atomic_fetch_add_explicit(&v8->__shared_weak_owners_, 1uLL, memory_order_relaxed);
      uint64_t v18 = v7;
      int v19 = v8;
      std::__shared_weak_count::__release_weak(v6);
      sub_10001A970(v9);
    }
    else
    {
      uint64_t v18 = 0;
      int v19 = 0;
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  else
  {
    uint64_t v18 = 0;
    int v19 = 0;
  }
  if (!*(unsigned char *)(a1 + 682)) {
    sub_10000AE44();
  }
  BOOL v11 = sub_1002F7A30((uint64_t)v5, &v18, *(unsigned __int16 *)(a1 + 680));
  if (v19) {
    std::__shared_weak_count::__release_weak(v19);
  }
  if (v11)
  {
    if (*(unsigned char *)(a1 + 800)) {
      *(unsigned char *)(a1 + 800) = 0;
    }
    long long v12 = *a2;
    long long v13 = a2[2];
    *(_OWORD *)(a1 + 704) = a2[1];
    *(_OWORD *)(a1 + 720) = v13;
    *(_OWORD *)(a1 + 688) = v12;
    long long v14 = a2[3];
    long long v15 = a2[4];
    long long v16 = a2[6];
    *(_OWORD *)(a1 + 768) = a2[5];
    *(_OWORD *)(a1 + 784) = v16;
    *(_OWORD *)(a1 + 736) = v14;
    *(_OWORD *)(a1 + 752) = v15;
    *(unsigned char *)(a1 + 800) = 1;
  }
  uint64_t v17 = *(void *)(a1 + 560);
  if (v17)
  {
    if (!*(unsigned char *)(a1 + 682)) {
      sub_10000AE44();
    }
    sub_10029E798(v17, *(unsigned __int16 *)(a1 + 680), (const std::string *)(a1 + 536));
  }
  return (v11 - 1);
}

void sub_1002DB58C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_weak(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002DB5A4()
{
}

void sub_1002DB5D0()
{
}

uint64_t sub_1002DB5FC(uint64_t a1, float a2)
{
  if (sub_1002D8978(a1))
  {
    unsigned __int8 v20 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
      sub_10042CCF8(v20, v21, v22, v23, v24, v25, v26, v27);
    }
    uint64_t v28 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint8_t buf = 136315650;
      *(void *)unsigned __int8 v35 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/UWB/NIServerRoseSession.mm";
      *(_WORD *)&v35[8] = 1024;
      int v36 = 621;
      __int16 v37 = 2080;
      __int16 v38 = "throttleSuperframeParticipationWithRate";
      _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_INFO, "#rose-ses,%s:%d: assertion failure in %s", buf, 0x1Cu);
    }
    abort();
  }
  if (a2 < 0.0)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
      sub_10042CD70();
    }
    uint64_t v29 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint8_t buf = 136315650;
      *(void *)unsigned __int8 v35 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/UWB/NIServerRoseSession.mm";
      *(_WORD *)&v35[8] = 1024;
      int v36 = 622;
      __int16 v37 = 2080;
      __int16 v38 = "throttleSuperframeParticipationWithRate";
      _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_INFO, "#rose-ses,%s:%d: assertion failure in %s", buf, 0x1Cu);
    }
    abort();
  }
  unsigned __int8 v4 = qword_1008ABDE0;
  if (a2 > 1.0)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
      sub_10042CDA4();
    }
    int v30 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint8_t buf = 136315650;
      *(void *)unsigned __int8 v35 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/UWB/NIServerRoseSession.mm";
      *(_WORD *)&v35[8] = 1024;
      int v36 = 623;
      __int16 v37 = 2080;
      __int16 v38 = "throttleSuperframeParticipationWithRate";
      _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_INFO, "#rose-ses,%s:%d: assertion failure in %s", buf, 0x1Cu);
    }
    abort();
  }
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint8_t buf = 134217984;
    *(double *)unsigned __int8 v35 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#rose-ses,#throttle Requested throttle rate: %0.2f.", buf, 0xCu);
  }
  if (*(unsigned char *)(a1 + 682))
  {
    uint8_t v5 = llroundf(a2 * 19.0);
    unsigned __int8 v6 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      if (!*(unsigned char *)(a1 + 682)) {
        sub_10000AE44();
      }
      int v7 = v5;
      int v8 = *(unsigned __int16 *)(a1 + 680);
      *(_DWORD *)uint8_t buf = 134218496;
      *(double *)unsigned __int8 v35 = a2;
      *(_WORD *)&v35[8] = 1024;
      int v36 = v5;
      __int16 v37 = 1024;
      LODWORD(v38) = v8;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#rose-ses,#throttle Throttle rate = %0.2f translates to subrate = %d. Ticket: %d", buf, 0x18u);
    }
    else
    {
      int v7 = v5;
    }

    int v10 = atomic_load((unsigned __int8 *)(a1 + 837));
    if (v10 == v5)
    {
      BOOL v11 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        if (!*(unsigned char *)(a1 + 682)) {
          sub_10000AE44();
        }
        int v12 = *(unsigned __int16 *)(a1 + 680);
        *(_DWORD *)uint8_t buf = 67109376;
        *(_DWORD *)unsigned __int8 v35 = v7;
        *(_WORD *)&v35[4] = 1024;
        *(_DWORD *)&v35[6] = v12;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "#rose-ses,#throttle Subrate = %d already in effect. Ticket: %d", buf, 0xEu);
      }

      return 0;
    }
    if (!*(unsigned char *)(a1 + 682)) {
      sub_10000AE44();
    }
    *(_WORD *)uint8_t buf = *(_WORD *)(a1 + 680);
    buf[2] = v5;
    long long v13 = sub_1002F6464();
    long long v14 = *(std::__shared_weak_count **)(a1 + 24);
    if (v14)
    {
      uint64_t v15 = *(void *)(a1 + 16);
      atomic_fetch_add_explicit(&v14->__shared_weak_owners_, 1uLL, memory_order_relaxed);
      uint64_t v32 = 0;
      int v33 = 0;
      long long v16 = std::__shared_weak_count::lock(v14);
      uint64_t v17 = v16;
      if (v16)
      {
        atomic_fetch_add_explicit(&v16->__shared_weak_owners_, 1uLL, memory_order_relaxed);
        uint64_t v32 = v15;
        int v33 = v16;
        std::__shared_weak_count::__release_weak(v14);
        sub_10001A970(v17);
      }
      else
      {
        uint64_t v32 = 0;
        int v33 = 0;
        std::__shared_weak_count::__release_weak(v14);
      }
    }
    else
    {
      uint64_t v32 = 0;
      int v33 = 0;
    }
    char v18 = sub_1002F812C((uint64_t)v13, &v32, (unsigned __int16 *)buf);
    if (v33) {
      std::__shared_weak_count::__release_weak(v33);
    }
    if (v18) {
      return 0;
    }
    int v19 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "#rose-ses,#throttle PRRangingManager::updateRangingParameter failed.", v31, 2u);
    }
    return 0xFFFFFFFFLL;
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042CDD8();
    }
    return 4294967294;
  }
}

void sub_1002DBAD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1002DBB0C(uint64_t a1, uint64_t *a2)
{
  unsigned __int8 v4 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
  {
    sub_1002D9088(a2);
    sub_10042CE0C();
  }

  unsigned __int8 v5 = atomic_load((unsigned __int8 *)(a1 + 836));
  if ((v5 & 1) == 0 || !*(unsigned char *)(a1 + 682)) {
    return 0;
  }
  unsigned __int8 v6 = sub_1002F6464();
  uint64_t v7 = *((void *)v6 + 808);
  int v8 = (std::__shared_weak_count *)*((void *)v6 + 809);
  if (v8) {
    atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (!v7)
  {
    uint64_t v9 = 0;
    if (!v8) {
      return v9;
    }
LABEL_15:
    sub_10001A970(v8);
    return v9;
  }
  if (!*(unsigned char *)(a1 + 682)) {
    sub_10000AE44();
  }
  __int16 v11 = *(_WORD *)(a1 + 680);
  long long v13 = 0;
  uint64_t v14 = 0;
  std::string __p = 0;
  sub_10016D488(&__p, (const void *)*a2, a2[1], a2[1] - *a2);
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  uint64_t v9 = (*(uint64_t (**)(uint64_t, __int16 *))(*(void *)(v7 + 24) + 16))(v7 + 24, &v11);
  if (__p)
  {
    long long v13 = __p;
    operator delete(__p);
  }
  if (v8) {
    goto LABEL_15;
  }
  return v9;
}

void sub_1002DBC7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  if (v12) {
    sub_10001A970(v12);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002DBCC0(int a1@<W1>, uint64_t a2@<X8>)
{
  unsigned __int8 v4 = +[NSUserDefaults standardUserDefaults];
  unsigned __int8 v5 = [v4 objectForKey:@"AlishaGetKeyTimeoutMillisecondsOverride"];

  if (v5)
  {
    unsigned __int8 v6 = +[NSUserDefaults standardUserDefaults];
    signed int v7 = [v6 integerForKey:@"AlishaGetKeyTimeoutMillisecondsOverride"];
  }
  else
  {
    signed int v7 = 5000;
  }
  int v8 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint8_t buf = 67109376;
    int v37 = a1;
    __int16 v38 = 1024;
    signed int v39 = v7;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#rose-ses,AlishaSubsystem: get key for uwb session id: %u. Timeout: %d ms", buf, 0xEu);
  }
  uint64_t v9 = sub_1002F6464();
  sub_1002F6688((uint64_t)v9, a1, v7, (uint64_t)buf);
  int v10 = *(_DWORD *)buf;
  if (v43) {
    int v11 = 0;
  }
  else {
    int v11 = -1004;
  }
  if (!*(_DWORD *)buf) {
    int v10 = v11;
  }
  if (v10)
  {
    char v12 = 0;
LABEL_13:
    *(_DWORD *)a2 = v10;
LABEL_26:
    *(unsigned char *)(a2 + 4) = 0;
    goto LABEL_27;
  }
  if (!v43) {
    sub_10000AE44();
  }
  if (!(_BYTE)v37)
  {
    int v14 = sub_100334B0C(v40);
    uint64_t v17 = qword_1008ABDE0;
    if (!v14)
    {
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
        sub_10042CF0C();
      }
      uint64_t v23 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
      {
        int v32 = 136315650;
        *(void *)int v33 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/UWB/NIServerRoseSession.mm";
        *(_WORD *)&v33[8] = 1024;
        *(_DWORD *)__int16 v34 = 734;
        *(_WORD *)&v34[4] = 2080;
        unsigned __int8 v35 = "getKey";
        _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_INFO, "#rose-ses,%s:%d: assertion failure in %s", (uint8_t *)&v32, 0x1Cu);
      }
      abort();
    }
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      int v32 = 67109376;
      *(_DWORD *)int v33 = *(_DWORD *)v41;
      *(_WORD *)&v33[4] = 1024;
      *(_DWORD *)&v33[6] = v40;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "#rose-ses,AlishaSubsystem: get key response for uwb session id: %u, status code: %u", (uint8_t *)&v32, 0xEu);
    }
    goto LABEL_25;
  }
  if (v37 != 1)
  {
    uint64_t v24 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
      sub_10042CE70((uint64_t)&v37, v24, v25, v26, v27, v28, v29, v30);
    }
    uint64_t v31 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
    {
      int v32 = 136315650;
      *(void *)int v33 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/UWB/NIServerRoseSession.mm";
      *(_WORD *)&v33[8] = 1024;
      *(_DWORD *)__int16 v34 = 742;
      *(_WORD *)&v34[4] = 2080;
      unsigned __int8 v35 = "getKey";
      _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_INFO, "#rose-ses,%s:%d: assertion failure in %s", (uint8_t *)&v32, 0x1Cu);
    }
    abort();
  }
  int v13 = v40;
  int v14 = sub_100334B0C(v40);
  if (v14)
  {
    uint64_t v15 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      int v32 = 67109376;
      *(_DWORD *)int v33 = *(_DWORD *)&v41[2];
      *(_WORD *)&v33[4] = 1024;
      *(_DWORD *)&v33[6] = v13;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "#rose-ses,AlishaSubsystem: get key complete event failure for uwb session id: %u, status code: %u", (uint8_t *)&v32, 0xEu);
    }
    if (v14 == 71)
    {
      uint64_t v16 = (std::mutex *)sub_100278308();
      sub_1002783E4(v16, 1u, 3);
    }
LABEL_25:
    char v12 = 0;
    *(_DWORD *)a2 = v14;
    goto LABEL_26;
  }
  int v18 = *(_DWORD *)&v41[2];
  int v19 = qword_1008ABDE0;
  BOOL v20 = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT);
  if (v18 != a1)
  {
    if (v20)
    {
      int v32 = 67109376;
      *(_DWORD *)int v33 = *(_DWORD *)&v41[2];
      *(_WORD *)&v33[4] = 1024;
      *(_DWORD *)&v33[6] = a1;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "#rose-ses,AlishaSubsystem: get key complete event uwb session id: %u, does not match requested id: %u", (uint8_t *)&v32, 0xEu);
    }
    char v12 = 0;
    int v10 = -1008;
    goto LABEL_13;
  }
  if (v20)
  {
    int v32 = 67109632;
    *(_DWORD *)int v33 = *(_DWORD *)&v41[2];
    *(_WORD *)&v33[4] = 1024;
    *(_DWORD *)&v33[6] = v42;
    *(_WORD *)__int16 v34 = 1024;
    *(_DWORD *)&v34[2] = HIDWORD(v42);
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "#rose-ses,AlishaSubsystem: get key complete event success for uwb session id: %u, sts_index_0: %u, hop_key: %u", (uint8_t *)&v32, 0x14u);
  }
  uint64_t v21 = (std::mutex *)sub_100278308();
  sub_100279268(v21, 1);
  int v22 = *(_DWORD *)&v41[2];
  *(_DWORD *)a2 = 0;
  *(_DWORD *)(a2 + 4) = v22;
  *(void *)(a2 + 8) = v42;
  char v12 = 1;
LABEL_27:
  *(unsigned char *)(a2 + 16) = v12;
}

void sub_1002DC160(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002DC17C(uint64_t a1@<X8>)
{
  unsigned __int8 v2 = sub_1002F6464();
  sub_1002F6680((uint64_t)v2, 1000, (uint64_t)v16);
  int v3 = v16[0];
  if (v25) {
    int v4 = 0;
  }
  else {
    int v4 = -1004;
  }
  if (!v16[0]) {
    int v3 = v4;
  }
  if (v3)
  {
    v15[0] = 0;
    unsigned char v15[64] = 0;
    *(_DWORD *)a1 = v3;
    sub_1002DEC74((unsigned char *)(a1 + 8), (uint64_t)v15);
    sub_1001D0BEC((uint64_t)v15);
  }
  else
  {
    if (!v25) {
      sub_10000AE44();
    }
    size_t v5 = v23;
    char v12 = 0;
    int v13 = 0;
    uint64_t v14 = 0;
    sub_1002DECCC(&v12, v18, (uint64_t)&v18[v17], v17);
    uint64_t v9 = 0;
    int v10 = 0;
    uint64_t v11 = 0;
    sub_10003AD14(&v9, v24, (uint64_t)&v24[v5], v5);
    sub_1002DE320((uint64_t)v6, (uint64_t)&v12, v19, v20, v21, v22, (uint64_t)&v9);
    sub_1002DE3C8((uint64_t)v15, (uint64_t)v6);
    *(_DWORD *)a1 = 0;
    sub_1002DEC74((unsigned char *)(a1 + 8), (uint64_t)v15);
    sub_1001D0BEC((uint64_t)v15);
    if (__p)
    {
      int v8 = __p;
      operator delete(__p);
    }
    if (v6[0])
    {
      v6[1] = v6[0];
      operator delete(v6[0]);
    }
    if (v9)
    {
      int v10 = v9;
      operator delete(v9);
    }
    if (v12)
    {
      int v13 = v12;
      operator delete(v12);
    }
  }
}

void sub_1002DC2FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,char a24)
{
  if (__p)
  {
    a19 = (uint64_t)__p;
    operator delete(__p);
  }
  if (a21)
  {
    a22 = (uint64_t)a21;
    operator delete(a21);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1002DC368(uint64_t a1)
{
  unsigned __int8 v2 = *(void **)(a1 + 40);
  if (v2)
  {
    *(void *)(a1 + 48) = v2;
    operator delete(v2);
  }
  int v3 = *(void **)a1;
  if (*(void *)a1)
  {
    *(void *)(a1 + 8) = v3;
    operator delete(v3);
  }
  return a1;
}

uint64_t sub_1002DC3AC(uint64_t a1, uint64_t a2)
{
  int v3 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)unsigned __int8 v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#rose-ses,AlishaSubsystem: delete keys", v6, 2u);
  }
  int v4 = sub_1002F6464();
  return sub_1002F6690((uint64_t)v4, a2, 1000);
}

uint64_t sub_1002DC428()
{
  uint64_t v0 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "#rose-ses,AlishaSubsystem: delete all keys", v3, 2u);
  }
  uint64_t v1 = sub_1002F6464();
  return sub_1002F6698((uint64_t)v1, 1000);
}

void sub_1002DC49C(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  int v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint8_t buf = 134217984;
    uint64_t v15 = (const char *)a1;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#rose-ses,AlishaSubsystem: convertBtClkToUwbClk (BT: %llu)", buf, 0xCu);
  }
  size_t v5 = sub_1002F6464();
  sub_1002F6678((uint64_t)v5, 2u, 1u, a1, (uint64_t)v10);
  if (v13)
  {
    if (v10[0] == 2)
    {
      if (v10[1] == 1)
      {
        unsigned __int8 v6 = qword_1008ABDE0;
        if (v11 == a1)
        {
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)uint8_t buf = 134218240;
            uint64_t v15 = (const char *)a1;
            __int16 v16 = 2048;
            v17[0] = v12;
            _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#rose-ses,AlishaSubsystem: conversion result %llu -> %llu", buf, 0x16u);
          }
          uint64_t v7 = v12;
          *(_DWORD *)a2 = 0;
          *(void *)(a2 + 8) = v7;
          char v8 = 1;
          goto LABEL_13;
        }
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
          sub_10042CF74();
        }
        uint64_t v9 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)uint8_t buf = 136315650;
          uint64_t v15 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/UWB/NIServerRoseSession.mm";
          __int16 v16 = 1024;
          LODWORD(v17[0]) = 794;
          WORD2(v17[0]) = 2080;
          *(void *)((char *)v17 + 6) = "convertBtClkToUwbClk";
          goto LABEL_26;
        }
LABEL_27:
        abort();
      }
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
        sub_10042CFA8();
      }
      uint64_t v9 = qword_1008ABDE0;
      if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO)) {
        goto LABEL_27;
      }
      *(_DWORD *)uint8_t buf = 136315650;
      uint64_t v15 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/UWB/NIServerRoseSession.mm";
      __int16 v16 = 1024;
      LODWORD(v17[0]) = 793;
      WORD2(v17[0]) = 2080;
      *(void *)((char *)v17 + 6) = "convertBtClkToUwbClk";
    }
    else
    {
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
        sub_10042CFDC();
      }
      uint64_t v9 = qword_1008ABDE0;
      if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO)) {
        goto LABEL_27;
      }
      *(_DWORD *)uint8_t buf = 136315650;
      uint64_t v15 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/UWB/NIServerRoseSession.mm";
      __int16 v16 = 1024;
      LODWORD(v17[0]) = 792;
      WORD2(v17[0]) = 2080;
      *(void *)((char *)v17 + 6) = "convertBtClkToUwbClk";
    }
LABEL_26:
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "#rose-ses,%s:%d: assertion failure in %s", buf, 0x1Cu);
    goto LABEL_27;
  }
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
    sub_10042CF40();
  }
  char v8 = 0;
  *(_DWORD *)a2 = -1026;
  *(unsigned char *)(a2 + 8) = 0;
LABEL_13:
  *(unsigned char *)(a2 + 16) = v8;
}

uint64_t sub_1002DC7BC(uint64_t a1, uint64_t a2)
{
  int v3 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = *(_DWORD *)a2;
    *(_DWORD *)uint8_t buf = 67109120;
    int v24 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#rose-ses,AlishaSubsystem: debug set key for uwb session id: %u", buf, 8u);
  }
  size_t v5 = sub_1002F6464();
  sub_1002F66A0((uint64_t)v5, *(_DWORD *)a2, (long long *)(a2 + 4), 1000, (uint64_t)buf);
  if (v26) {
    unsigned int v6 = 0;
  }
  else {
    unsigned int v6 = -1004;
  }
  if (*(_DWORD *)buf) {
    uint64_t result = *(unsigned int *)buf;
  }
  else {
    uint64_t result = v6;
  }
  if (!result)
  {
    if (!v26) {
      sub_10000AE44();
    }
    uint64_t v8 = v24;
    if (v24 != 3)
    {
      uint64_t v9 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT)) {
        sub_10042D010(v8, v9, v10, v11, v12, v13, v14, v15);
      }
      __int16 v16 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
      {
        int v17 = 136315650;
        int v18 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/UWB/NIServerRoseSession.mm";
        __int16 v19 = 1024;
        int v20 = 815;
        __int16 v21 = 2080;
        char v22 = "_debugSetKey";
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_INFO, "#rose-ses,%s:%d: assertion failure in %s", (uint8_t *)&v17, 0x1Cu);
      }
      abort();
    }
    return sub_100334B0C(v25);
  }
  return result;
}

uint64_t sub_1002DC964(uint64_t a1, uint64_t a2)
{
  int v3 = sub_1002F6464();
  uint64_t v4 = sub_1002F66A8((uint64_t)v3, a2);
  size_t v5 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    sub_100333FC8(v4, __p);
    if (v9 >= 0) {
      unsigned int v6 = __p;
    }
    else {
      unsigned int v6 = (void **)__p[0];
    }
    *(_DWORD *)uint8_t buf = 134218242;
    uint64_t v11 = a2;
    __int16 v12 = 2080;
    uint64_t v13 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#rose-ses,AlishaSubsystem: set URSK TTL to %llu. Status code %s", buf, 0x16u);
    if (v9 < 0) {
      operator delete(__p[0]);
    }
  }

  return v4;
}

void sub_1002DCA68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_1002DCA80(void *a1, long long *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  sub_1002DE50C((uint64_t)v29, a4);
  v28[3] = 0;
  v27[3] = 0;
  sub_1002DE6D4((uint64_t)v26, a5);
  void v25[3] = 0;
  void v24[3] = 0;
  sub_1002DE804((uint64_t)v23, a6);
  sub_1002DE89C((uint64_t)v22, a7);
  v21[3] = 0;
  int v18 = (std::__shared_weak_count *)a11[1];
  v20[0] = *a11;
  v20[1] = v18;
  if (v18) {
    atomic_fetch_add_explicit(&v18->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_1002D7C48((uint64_t)a1, a2, a3, (uint64_t)v29, (uint64_t)v28, (uint64_t)v27, (uint64_t)v26, (uint64_t)v25, (uint64_t)v24, (uint64_t)v23, (uint64_t)v22, (uint64_t)v21, v20);
  if (v18) {
    sub_10001A970(v18);
  }
  sub_1001E1150(v21);
  sub_1001D2B78(v22);
  sub_1001D2BFC(v23);
  sub_1001E11D4(v24);
  sub_1001E1258(v25);
  sub_1001D2C80(v26);
  sub_1001E12DC(v27);
  sub_1001E1258(v28);
  sub_1001D2D04(v29);
  *a1 = off_10085ED40;
  a1[1] = off_10085EE08;
  sub_1002DCCF0(a1 + 72, a8);
  sub_1002DCD64(a1 + 76, a9);
  sub_1002DCDD8(a1 + 80, a10);
  return a1;
}

void sub_1002DCC60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  if (v32) {
    sub_10001A970(v32);
  }
  sub_1001E1150(&a16);
  sub_1001D2B78(&a20);
  sub_1001D2BFC(&a24);
  sub_1001E11D4(&a28);
  sub_1001E1258(&a32);
  sub_1001D2C80((void *)(v33 - 200));
  sub_1001E12DC((void *)(v33 - 168));
  sub_1001E1258((void *)(v33 - 136));
  sub_1001D2D04((void *)(v33 - 104));
  _Unwind_Resume(a1);
}

void *sub_1002DCCF0(void *a1, uint64_t a2)
{
  sub_1002DED48((uint64_t)v4, a2);
  sub_1002DEDE0(v4, a1);
  sub_1001D2AF4(v4);
  return a1;
}

void *sub_1002DCD64(void *a1, uint64_t a2)
{
  sub_1002DF04C((uint64_t)v4, a2);
  sub_1002DF0E4(v4, a1);
  sub_1001D2A70(v4);
  return a1;
}

void *sub_1002DCDD8(void *a1, uint64_t a2)
{
  sub_1001FF508((uint64_t)v4, a2);
  sub_1002DF350(v4, a1);
  sub_1001D29EC(v4);
  return a1;
}

void *sub_1002DCE4C(void *a1, long long *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  return sub_1002DCA80(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_1002DCE60(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 332)) {
    sub_10042D0A8();
  }
  return *(unsigned int *)(a1 + 328);
}

uint64_t sub_1002DCE84(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 324)) {
    sub_10042D0A8();
  }
  return *(unsigned int *)(a1 + 320);
}

void sub_1002DCEA8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v3 = qword_1008ABDE0;
  if (!*(unsigned char *)(a1 + 682))
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042D0D4();
    }
    char v16 = 0;
    uint64_t v17 = a3;
    *(_DWORD *)a3 = -1000;
LABEL_41:
    *(unsigned char *)(v17 + 8) = 0;
    goto LABEL_44;
  }
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint8_t buf = 134217984;
    *(void *)&uint8_t buf[4] = a2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#rose-ses,Alisha range enable. Preferred start time offset usec: %llu", buf, 0xCu);
  }
  uint64_t v6 = *(void *)(a1 + 560);
  if (v6)
  {
    uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v6 + 64))(v6, v7, a2);
  }
  int v8 = 0;
  uint64_t v9 = 1000 * a2;
  if ((double)a2 >= 9.22337204e15) {
    uint64_t v9 = 0x7FFFFFFFFFFFFFFFLL;
  }
  uint64_t v20 = v9;
  int v10 = -1000;
  while (v8 <= 8)
  {
    if (v8 >= 1)
    {
      uint64_t v11 = (id)qword_1008ABDE0;
      BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);
      if (v10 == 6)
      {
        if (v12)
        {
          sub_100333FC8(6, __p);
          uint64_t v13 = __p;
          if (v22 < 0) {
            uint64_t v13 = (void **)__p[0];
          }
          *(_DWORD *)uint8_t buf = 136315906;
          *(void *)&uint8_t buf[4] = v13;
          __int16 v26 = 2048;
          *(void *)uint64_t v27 = a2;
          *(_WORD *)&v27[8] = 1024;
          int v28 = v8;
          __int16 v29 = 1024;
          int v30 = 8;
          _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "#rose-ses,Alisha range enable retry. Last status code %s. Sleeping for %llu usec. %d of %d retries.", buf, 0x22u);
          if (v22 < 0) {
            operator delete(__p[0]);
          }
        }

        if (a2 > 0)
        {
          *(void *)uint8_t buf = v20;
          std::this_thread::sleep_for ((const std::chrono::nanoseconds *)buf);
        }
      }
      else
      {
        if (v12)
        {
          sub_100333FC8(v10, __p);
          uint64_t v14 = __p;
          if (v22 < 0) {
            uint64_t v14 = (void **)__p[0];
          }
          *(_DWORD *)uint8_t buf = 136315650;
          *(void *)&uint8_t buf[4] = v14;
          __int16 v26 = 1024;
          *(_DWORD *)uint64_t v27 = v8;
          *(_WORD *)&void v27[4] = 1024;
          *(_DWORD *)&void v27[6] = 8;
          _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "#rose-ses,Alisha range enable retry. Last status code %s. Not sleeping. %d of %d retries.", buf, 0x18u);
          if (v22 < 0) {
            operator delete(__p[0]);
          }
        }
      }
    }
    if (sub_1002D8A88(a1, 1000))
    {
      buf[0] = 0;
      char v31 = 0;
      uint64_t v32 = a2;
      char v33 = 1;
      long long v34 = 0u;
      long long v35 = 0u;
      long long v36 = 0u;
      int v37 = 0;
      sub_1002DD29C(a1, (long long *)buf, (uint64_t)__p);
      int v10 = (int)__p[0];
      if (LODWORD(__p[0]) == -1022 || LODWORD(__p[0]) == 6)
      {
        int v15 = 0;
      }
      else
      {
        if (!LODWORD(__p[0]))
        {
          if (!v24) {
            sub_10042D108();
          }
          uint64_t v18 = v23;
          goto LABEL_43;
        }
        int v15 = 3;
      }
      if (LODWORD(__p[0]) != 6 && LODWORD(__p[0]) != -1022) {
        goto LABEL_35;
      }
    }
    else
    {
      int v10 = -1025;
    }
    int v15 = 0;
    ++v8;
LABEL_35:
    if (v15) {
      break;
    }
  }
  if (v10)
  {
    char v16 = 0;
    uint64_t v17 = a3;
    *(_DWORD *)a3 = v10;
    goto LABEL_41;
  }
  uint64_t v18 = 0;
LABEL_43:
  uint64_t v17 = a3;
  *(_DWORD *)a3 = 0;
  *(void *)(a3 + 8) = v18;
  char v16 = 1;
LABEL_44:
  *(unsigned char *)(v17 + 16) = v16;
}

void sub_1002DD280(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002DD29C(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  if (!*(unsigned char *)(a1 + 682)) {
    sub_10042D134();
  }
  __lk.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 888);
  __lk.__owns_ = 1;
  std::mutex::lock((std::mutex *)(a1 + 888));
  uint64_t v6 = (double **)(a1 + 1056);
  uint64_t v7 = *(void **)(a1 + 1056);
  *(void *)(a1 + 1056) = 0;
  if (v7) {
    sub_1002DF5BC(a1 + 1056, v7);
  }
  if (*(unsigned char *)(a1 + 984))
  {
    if (*(char *)(a1 + 983) < 0) {
      operator delete(*(void **)(a1 + 960));
    }
    *(unsigned char *)(a1 + 984) = 0;
  }
  if (!sub_1002DB434(a1, a2))
  {
    v9.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_ + 1000000000;
    while (1)
    {
      if (*v6 || *(unsigned char *)(a1 + 984))
      {
LABEL_31:
        sub_1001750EC(v16, a1 + 952);
        if (*(unsigned char *)(a1 + 984))
        {
          if (*(char *)(a1 + 983) < 0) {
            operator delete(*(void **)(a1 + 960));
          }
          *(unsigned char *)(a1 + 984) = 0;
        }
        if (*v6) {
          sub_1002DDC70(*v6, (uint64_t)v15);
        }
        if (!v18) {
          __assert_rtn("_alishaSendRangeEnableCommand", "NIServerRoseSession.mm", 1047, "roseServiceErrorCopy.has_value()");
        }
        if (v16[0] == 2002) {
          int v14 = -1022;
        }
        else {
          int v14 = -1023;
        }
        *(_DWORD *)a3 = v14;
        *(unsigned char *)(a3 + 4) = 0;
        *(unsigned char *)(a3 + 38) = 0;
        if (v17 < 0) {
          operator delete((void *)v16[1]);
        }
        goto LABEL_43;
      }
      if (std::chrono::steady_clock::now().__d_.__rep_ >= v9.__d_.__rep_) {
        goto LABEL_29;
      }
      v10.__d_.__rep_ = v9.__d_.__rep_ - std::chrono::steady_clock::now().__d_.__rep_;
      if (v10.__d_.__rep_ >= 1) {
        break;
      }
LABEL_28:
      if (std::chrono::steady_clock::now().__d_.__rep_ >= v9.__d_.__rep_)
      {
LABEL_29:
        if (!*v6 && !*(unsigned char *)(a1 + 984))
        {
          NSObject *v6 = 0;
          int v8 = -1001;
          goto LABEL_10;
        }
        goto LABEL_31;
      }
    }
    std::chrono::steady_clock::now();
    v11.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
    if (v11.__d_.__rep_)
    {
      if (v11.__d_.__rep_ < 1)
      {
        if ((unint64_t)v11.__d_.__rep_ < 0xFFDF3B645A1CAC09)
        {
          std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v12 = 0x8000000000000000;
          goto LABEL_26;
        }
      }
      else if ((unint64_t)v11.__d_.__rep_ > 0x20C49BA5E353F7)
      {
        std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v12 = 0x7FFFFFFFFFFFFFFFLL;
        goto LABEL_24;
      }
      std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v12 = 1000 * v11.__d_.__rep_;
    }
    else
    {
      std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v12 = 0;
    }
LABEL_24:
    if (v12 > (v10.__d_.__rep_ ^ 0x7FFFFFFFFFFFFFFFLL))
    {
      v13.__d_.__rep_ = 0x7FFFFFFFFFFFFFFFLL;
LABEL_27:
      std::condition_variable::__do_timed_wait((std::condition_variable *)(a1 + 840), &__lk, v13);
      std::chrono::steady_clock::now();
      goto LABEL_28;
    }
LABEL_26:
    v13.__d_.__rep_ = v12 + v10.__d_.__rep_;
    goto LABEL_27;
  }
  int v8 = -1000;
LABEL_10:
  *(_DWORD *)a3 = v8;
  *(unsigned char *)(a3 + 4) = 0;
  *(unsigned char *)(a3 + 38) = 0;
LABEL_43:
  if (__lk.__owns_) {
    std::mutex::unlock(__lk.__m_);
  }
}

void sub_1002DD640(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23,std::mutex *a24,char a25)
{
  if (a23 && a22 < 0) {
    operator delete(__p);
  }
  if (a25) {
    std::mutex::unlock(a24);
  }
  _Unwind_Resume(a1);
}

void sub_1002DD698(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
}

void sub_1002DD6A0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 v3 = atomic_load((unsigned __int8 *)(a1 + 836));
  if (v3)
  {
    uint64_t v5 = *(void *)(a1 + 560);
    if (v5)
    {
      uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
      (*(void (**)(uint64_t, uint64_t))(*(void *)v5 + 72))(v5, v6);
    }
    sub_1002DD870(a1, &v11);
    if (sub_1002D8288(a1))
    {
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
        sub_10042D1BC();
      }
      v7[0] = 0;
      char v10 = 0;
      *(_DWORD *)a2 = 0;
      sub_1002DE458((__n128 *)(a2 + 8), (uint64_t)v7);
      if (v10 && __p)
      {
        std::chrono::steady_clock::time_point v9 = __p;
        operator delete(__p);
      }
    }
    else
    {
      *(_DWORD *)a2 = 0;
      sub_1002DE458((__n128 *)(a2 + 8), (uint64_t)&v11);
    }
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042D188();
    }
    v11.n128_u8[0] = 0;
    char v13 = 0;
    *(_DWORD *)a2 = 0;
    sub_1002DE458((__n128 *)(a2 + 8), (uint64_t)&v11);
  }
  if (v13)
  {
    if (v11.n128_u64[1])
    {
      unint64_t v12 = v11.n128_u64[1];
      operator delete((void *)v11.n128_u64[1]);
    }
  }
}

void sub_1002DD81C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, int a17, __int16 a18, char a19, char a20,void *__p,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  if (a16) {
    sub_10042D160((uint64_t)&a9);
  }
  if (a27)
  {
    if (__p)
    {
      a22 = (uint64_t)__p;
      operator delete(__p);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_1002DD870(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  __lk.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 888);
  __lk.__owns_ = 1;
  std::mutex::lock((std::mutex *)(a1 + 888));
  uint64_t v4 = (unsigned __int8 *)(a1 + 1048);
  if (*(unsigned char *)(a1 + 1048))
  {
    uint64_t v5 = *(void **)(a1 + 1000);
    if (v5)
    {
      *(void *)(a1 + 1008) = v5;
      operator delete(v5);
    }
    *uint64_t v4 = 0;
  }
  uint64_t v6 = sub_1002F6464();
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  int v8 = sub_1002F66C0((uint64_t)v6, v7);
  if (!v8)
  {
    v11.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_ + 1000000000;
    while (1)
    {
      if (*v4)
      {
LABEL_36:
        sub_1002DE458(a2, a1 + 992);
        if (!*v4) {
          goto LABEL_15;
        }
        char v16 = *(void **)(a1 + 1000);
        if (v16)
        {
          *(void *)(a1 + 1008) = v16;
          operator delete(v16);
        }
        goto LABEL_14;
      }
      if (std::chrono::steady_clock::now().__d_.__rep_ >= v11.__d_.__rep_) {
        goto LABEL_35;
      }
      v12.__d_.__rep_ = v11.__d_.__rep_ - std::chrono::steady_clock::now().__d_.__rep_;
      if (v12.__d_.__rep_ >= 1) {
        break;
      }
LABEL_34:
      if (std::chrono::steady_clock::now().__d_.__rep_ >= v11.__d_.__rep_)
      {
LABEL_35:
        if (!*v4)
        {
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
            sub_10042D1F0();
          }
          goto LABEL_9;
        }
        goto LABEL_36;
      }
    }
    std::chrono::steady_clock::now();
    v13.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
    if (v13.__d_.__rep_)
    {
      if (v13.__d_.__rep_ < 1)
      {
        if ((unint64_t)v13.__d_.__rep_ < 0xFFDF3B645A1CAC09)
        {
          std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v14 = 0x8000000000000000;
          goto LABEL_32;
        }
      }
      else if ((unint64_t)v13.__d_.__rep_ > 0x20C49BA5E353F7)
      {
        std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v14 = 0x7FFFFFFFFFFFFFFFLL;
        goto LABEL_30;
      }
      std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v14 = 1000 * v13.__d_.__rep_;
    }
    else
    {
      std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v14 = 0;
    }
LABEL_30:
    if (v14 > (v12.__d_.__rep_ ^ 0x7FFFFFFFFFFFFFFFLL))
    {
      v15.__d_.__rep_ = 0x7FFFFFFFFFFFFFFFLL;
LABEL_33:
      std::condition_variable::__do_timed_wait((std::condition_variable *)(a1 + 840), &__lk, v15);
      std::chrono::steady_clock::now();
      goto LABEL_34;
    }
LABEL_32:
    v15.__d_.__rep_ = v14 + v12.__d_.__rep_;
    goto LABEL_33;
  }
  std::chrono::steady_clock::time_point v9 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
  {
    sub_100333FC8(v8, v17);
    sub_10042D224();
  }

LABEL_9:
  if (*v4)
  {
    char v10 = *(void **)(a1 + 1000);
    if (v10)
    {
      *(void *)(a1 + 1008) = v10;
      operator delete(v10);
    }
    *uint64_t v4 = 0;
  }
  a2->n128_u8[0] = 0;
  uint64_t v4 = &a2[3].n128_u8[8];
LABEL_14:
  *uint64_t v4 = 0;
LABEL_15:
  if (__lk.__owns_) {
    std::mutex::unlock(__lk.__m_);
  }
}

void sub_1002DDB04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, std::mutex *a13, char a14)
{
  if (a14) {
    std::mutex::unlock(a13);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002DDB38(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1002DDB40(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v2 = qword_1008ABDE0;
  if (*(unsigned char *)(a1 + 682))
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint8_t buf = 134217984;
      *(void *)&uint8_t buf[4] = a2;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#rose-ses,Alisha range enable. Start time bt clk usec: %llu", buf, 0xCu);
    }
    if (sub_1002D8A88(a1, 1000))
    {
      buf[0] = 0;
      buf[40] = 0;
      uint64_t v8 = a2;
      char v9 = 3;
      long long v10 = 0u;
      long long v11 = 0u;
      long long v12 = 0u;
      int v13 = 0;
      sub_1002DD29C(a1, (long long *)buf, (uint64_t)v6);
      return v6[0];
    }
    else
    {
      return 4294966271;
    }
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042D0D4();
    }
    return 4294966296;
  }
}

void sub_1002DDC70(double *a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 v2 = (_WORD *)*((void *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = *((void *)a1 + 1);
    *(_WORD *)a2 = *v2;
    *(void *)(a2 + 8) = v3;
    operator new();
  }
  uint64_t v4 = *((void *)a1 + 3);
  if (v4)
  {
    double v5 = a1[1];
    sub_1001BDCB4(a2, v4, v5);
  }
  uint64_t v6 = *((void *)a1 + 4);
  if (v6)
  {
    double v7 = a1[1];
    sub_1001BDD60(a2, v6, v7);
  }
  if (*((void *)a1 + 5))
  {
    double v8 = a1[1];
    sub_1001BDBFC(a2, v8);
  }
  exceptiouint64_t n = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, "Ill formed AlishaUpdate has no data (range_response, block_complete_event, session_stats, or key_expired_event)");
}

void sub_1002DDD94(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

BOOL sub_1002DDDA8(uint64_t a1, void *a2)
{
  return *a2 == 2002;
}

void *sub_1002DDDC4(void *a1, long long *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_1002DE50C((uint64_t)v27, a4);
  sub_1002DE5A4((uint64_t)v26, a6);
  void v25[3] = 0;
  sub_1002DE6D4((uint64_t)v24, a5);
  void v23[3] = 0;
  v22[3] = 0;
  sub_1002DE804((uint64_t)v21, a7);
  sub_1002DE89C((uint64_t)v20, a8);
  v19[3] = 0;
  char v16 = (std::__shared_weak_count *)a9[1];
  v18[0] = *a9;
  v18[1] = v16;
  if (v16) {
    atomic_fetch_add_explicit(&v16->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_1002D7C48((uint64_t)a1, a2, a3, (uint64_t)v27, (uint64_t)v26, (uint64_t)v25, (uint64_t)v24, (uint64_t)v23, (uint64_t)v22, (uint64_t)v21, (uint64_t)v20, (uint64_t)v19, v18);
  if (v16) {
    sub_10001A970(v16);
  }
  sub_1001E1150(v19);
  sub_1001D2B78(v20);
  sub_1001D2BFC(v21);
  sub_1001E11D4(v22);
  sub_1001E1258(v23);
  sub_1001D2C80(v24);
  sub_1001E12DC(v25);
  sub_1001E1258(v26);
  sub_1001D2D04(v27);
  *a1 = &off_10085EE40;
  a1[1] = off_10085EF08;
  return a1;
}

void sub_1002DDF88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  if (v32) {
    sub_10001A970(v32);
  }
  sub_1001E1150(&a16);
  sub_1001D2B78(&a20);
  sub_1001D2BFC(&a24);
  sub_1001E11D4(&a28);
  sub_1001E1258(&a32);
  sub_1001D2C80((void *)(v33 - 200));
  sub_1001E12DC((void *)(v33 - 168));
  sub_1001E1258((void *)(v33 - 136));
  sub_1001D2D04((void *)(v33 - 104));
  _Unwind_Resume(a1);
}

void sub_1002DE008()
{
}

void *sub_1002DE010(void *a1, long long *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  return sub_1002DDDC4(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1002DE01C(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 392)) {
    sub_10042D288();
  }
  return *(unsigned int *)(a1 + 388);
}

uint64_t sub_1002DE040(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 384)) {
    sub_10042D288();
  }
  return *(unsigned int *)(a1 + 380);
}

void *sub_1002DE064@<X0>(int a1@<W0>, void *a2@<X8>)
{
  if ((a1 + 2) >= 3) {
    sub_10042D2B4();
  }
  unsigned __int8 v2 = (&off_10085F270)[a1 + 2];

  return sub_100004950(a2, v2);
}

void *sub_1002DE0A8@<X0>(int a1@<W0>, void *a2@<X8>)
{
  if (a1 == -1)
  {
    uint64_t v3 = "UNDEFINED";
  }
  else
  {
    if (a1 != -2) {
      sub_10042D2E0();
    }
    uint64_t v3 = "SERVICE_ERROR";
  }
  return sub_100004950(a2, v3);
}

void sub_1002DE0F4()
{
}

void sub_1002DE10C(uint64_t a1)
{
  sub_1002D8058(a1);

  operator delete();
}

uint64_t sub_1002DE144(uint64_t a1)
{
  return sub_1002D8058(a1 - 8);
}

void sub_1002DE14C(uint64_t a1)
{
  sub_1002D8058(a1 - 8);

  operator delete();
}

void sub_1002DE18C(uint64_t a1)
{
  sub_1002D8058(a1);

  operator delete();
}

uint64_t sub_1002DE1C4(uint64_t a1)
{
  return sub_1002D8058(a1 - 8);
}

void sub_1002DE1CC(uint64_t a1)
{
  sub_1002D8058(a1 - 8);

  operator delete();
}

uint64_t sub_1002DE208(uint64_t a1, int a2, char a3, __int16 a4, __int16 *a5, uint64_t a6, __int16 a7, int a8, __int16 a9)
{
  *(_DWORD *)a1 = a2;
  *(unsigned char *)(a1 + 4) = a3;
  *(_WORD *)(a1 + 6) = a4;
  sub_1002DE2A8((void *)(a1 + 8), a6 + 1);
  *(_WORD *)(a1 + 32) = a7;
  *(double *)(a1 + 40) = (double)a8 * 0.25;
  *(double *)(a1 + 48) = (double)a9 * 0.25;
  int v13 = *(_WORD **)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16) - (void)v13;
  if (v14)
  {
    unint64_t v15 = v14 >> 1;
    if (v15 <= 1) {
      unint64_t v15 = 1;
    }
    do
    {
      __int16 v16 = *a5++;
      *v13++ = v16;
      --v15;
    }
    while (v15);
  }
  return a1;
}

void *sub_1002DE2A8(void *a1, uint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1001C92A8(a1, a2);
    uint64_t v4 = (char *)a1[1];
    bzero(v4, 2 * a2);
    a1[1] = &v4[2 * a2];
  }
  return a1;
}

void sub_1002DE304(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002DE320(uint64_t a1, uint64_t a2, char a3, int a4, char a5, char a6, uint64_t a7)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  sub_1001D0B70((void *)a1, *(const void **)a2, *(void *)(a2 + 8), (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 1);
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 24) = a3;
  *(_DWORD *)(a1 + 28) = a4;
  *(unsigned char *)(a1 + 32) = a5;
  *(unsigned char *)(a1 + 33) = a6;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  sub_10016D488((void *)(a1 + 40), *(const void **)a7, *(void *)(a7 + 8), *(void *)(a7 + 8) - *(void *)a7);
  return a1;
}

void sub_1002DE3AC(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002DE3C8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  sub_1001D0B70((void *)a1, *(const void **)a2, *(void *)(a2 + 8), (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 1);
  uint64_t v4 = *(void *)(a2 + 24);
  __int16 v5 = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = 0;
  *(_WORD *)(a1 + 32) = v5;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  sub_10016D488((void *)(a1 + 40), *(const void **)(a2 + 40), *(void *)(a2 + 48), *(void *)(a2 + 48) - *(void *)(a2 + 40));
  *(unsigned char *)(a1 + 64) = 1;
  return a1;
}

void sub_1002DE43C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

__n128 *sub_1002DE458(__n128 *a1, uint64_t a2)
{
  a1->n128_u8[0] = 0;
  a1[3].n128_u8[8] = 0;
  sub_1002DE4A4(a1, a2);
  return a1;
}

void sub_1002DE488(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 56)) {
    sub_10042D30C(v1);
  }
  _Unwind_Resume(exception_object);
}

__n128 sub_1002DE4A4(__n128 *a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 56))
  {
    a1->n128_u64[0] = *(void *)a2;
    a1[1].n128_u64[0] = 0;
    a1[1].n128_u64[1] = 0;
    a1->n128_u64[1] = 0;
    sub_1001D0B70(&a1->n128_u64[1], *(const void **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 1);
    __n128 result = *(__n128 *)(a2 + 32);
    a1[3].n128_u64[0] = *(void *)(a2 + 48);
    a1[2] = result;
    a1[3].n128_u8[8] = 1;
  }
  return result;
}

uint64_t sub_1002DE50C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_1002DE5A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_1002DE63C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_1002DE6D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_1002DE76C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_1002DE804(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_1002DE89C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_1002DE934(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_1002DE9CC(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  a1[3] = 0;
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_1002DEA54(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  a1[3] = 0;
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_1002DEADC(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  a1[3] = 0;
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_1002DEB64(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  a1[3] = 0;
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_1002DEBEC(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  a1[3] = 0;
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

unsigned char *sub_1002DEC74(unsigned char *a1, uint64_t a2)
{
  *a1 = 0;
  a1[64] = 0;
  if (*(unsigned char *)(a2 + 64))
  {
    sub_1001D0AE8((uint64_t)a1, a2);
    a1[64] = 1;
  }
  return a1;
}

void sub_1002DECB8(_Unwind_Exception *a1)
{
  sub_1001D0BEC(v1);
  _Unwind_Resume(a1);
}

void *sub_1002DECCC(void *result, const void *a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    __n128 result = sub_1001C92A8(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      __n128 result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1002DED2C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002DED48(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_1002DEDE0(void *result, void *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    uint64_t v4 = (void *)result[3];
    __int16 v5 = (void *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(void *, void *))(*result + 24))(result, v6);
        (*(void (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        v3[3] = 0;
        (*(void (**)(void, void *))(*(void *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(void))(*(void *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        v3[3] = v3;
        (*(void (**)(void *, void *))(v6[0] + 24))(v6, a2);
        __n128 result = (void *)(*(uint64_t (**)(void *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(void *, void *))(*result + 24))(result, a2);
        __n128 result = (void *)(*(uint64_t (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(void *, void *))(*a2 + 24))(a2, result);
      __n128 result = (void *)(*(uint64_t (**)(void))(*(void *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_1002DF040(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100012C10(a1);
}

uint64_t sub_1002DF04C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_1002DF0E4(void *result, void *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    uint64_t v4 = (void *)result[3];
    __int16 v5 = (void *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(void *, void *))(*result + 24))(result, v6);
        (*(void (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        v3[3] = 0;
        (*(void (**)(void, void *))(*(void *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(void))(*(void *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        v3[3] = v3;
        (*(void (**)(void *, void *))(v6[0] + 24))(v6, a2);
        __n128 result = (void *)(*(uint64_t (**)(void *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(void *, void *))(*result + 24))(result, a2);
        __n128 result = (void *)(*(uint64_t (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(void *, void *))(*a2 + 24))(a2, result);
      __n128 result = (void *)(*(uint64_t (**)(void))(*(void *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_1002DF344(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100012C10(a1);
}

void *sub_1002DF350(void *result, void *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    uint64_t v4 = (void *)result[3];
    __int16 v5 = (void *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(void *, void *))(*result + 24))(result, v6);
        (*(void (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        v3[3] = 0;
        (*(void (**)(void, void *))(*(void *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(void))(*(void *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        v3[3] = v3;
        (*(void (**)(void *, void *))(v6[0] + 24))(v6, a2);
        __n128 result = (void *)(*(uint64_t (**)(void *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(void *, void *))(*result + 24))(result, a2);
        __n128 result = (void *)(*(uint64_t (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(void *, void *))(*a2 + 24))(a2, result);
      __n128 result = (void *)(*(uint64_t (**)(void))(*(void *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_1002DF5B0(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100012C10(a1);
}

void sub_1002DF5BC(uint64_t a1, void *a2)
{
  if (a2)
  {
    uint64_t v2 = a2[5];
    a2[5] = 0;
    if (v2) {
      operator delete();
    }
    uint64_t v3 = a2[4];
    a2[4] = 0;
    if (v3) {
      operator delete();
    }
    uint64_t v4 = a2[3];
    a2[3] = 0;
    if (v4) {
      operator delete();
    }
    uint64_t v5 = a2[2];
    a2[2] = 0;
    if (v5) {
      operator delete();
    }
    operator delete();
  }
}

void sub_1002DF688()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C888, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C888))
  {
    sub_100004950(qword_10089C870, "PRRoseProviderNetworkListener");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C870, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C888);
  }
}

void sub_1002DF720(_Unwind_Exception *a1)
{
}

void sub_1002DF738()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8A8))
  {
    sub_100004950(&qword_10089C890, "com.apple.nearbyd.accessory.download");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C890, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8A8);
  }
}

void sub_1002DF7D0(_Unwind_Exception *a1)
{
}

void sub_1002DF7E8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8C8))
  {
    sub_100004950(&qword_10089C8B0, "com.apple.nearbyd.accessory.files");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C8B0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8C8);
  }
}

void sub_1002DF880(_Unwind_Exception *a1)
{
}

void sub_1002DF898()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8E8))
  {
    sub_100004950(qword_10089C8D0, "MA_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8D0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8E8);
  }
}

void sub_1002DF930(_Unwind_Exception *a1)
{
}

void sub_1002DF948()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C908, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C908))
  {
    sub_100004950(qword_10089C8F0, "MB_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8F0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C908);
  }
}

void sub_1002DF9E0(_Unwind_Exception *a1)
{
}

void sub_1002DF9F8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C928, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C928))
  {
    sub_100004950(qword_10089C910, "D");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C910, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C928);
  }
}

void sub_1002DFA90(_Unwind_Exception *a1)
{
}

void sub_1002DFAA8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C948, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C948))
  {
    sub_100004950(&qword_10089C930, "A");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C930, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C948);
  }
}

void sub_1002DFB40(_Unwind_Exception *a1)
{
}

void sub_1002DFB58()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C968, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C968))
  {
    sub_100004950(qword_10089C950, "FAS.bin");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C950, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C968);
  }
}

void sub_1002DFBF0(_Unwind_Exception *a1)
{
}

void sub_1002DFC08()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C988, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C988))
  {
    qword_10089C970 = 0;
    qword_10089C978 = 0;
    qword_10089C980 = 0;
    uint64_t v0 = operator new(0x30uLL);
    qword_10089C978 = (uint64_t)(v0 + 3);
    qword_10089C980 = (uint64_t)(v0 + 3);
    _OWORD *v0 = xmmword_1004BF270;
    v0[1] = unk_1004BF280;
    v0[2] = xmmword_1004BF290;
    qword_10089C970 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_100008CAC, &qword_10089C970, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C988);
  }
}

void sub_1002DFCC4(_Unwind_Exception *a1)
{
}

void sub_1002DFCDC()
{
  sub_10039D144();
  uint64_t v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  uint64_t v3 = std::string::append(&v38, ".bin");
  long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1008A7F58 = v3->__r_.__value_.__r.__words[2];
  xmmword_1008A7F48 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A7F48, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  uint64_t v7 = std::string::append(&v38, ".bin");
  long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1008A7F70 = v7->__r_.__value_.__r.__words[2];
  xmmword_1008A7F60 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A7F60, (void *)&_mh_execute_header);
  sub_10039D144();
  char v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  long long v11 = std::string::append(&v38, ".bin");
  long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1008A7F88 = v11->__r_.__value_.__r.__words[2];
  xmmword_1008A7F78 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A7F78, (void *)&_mh_execute_header);
  sub_10039D144();
  int v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  unint64_t v15 = std::string::append(&v38, ".bin");
  long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1008A7FA0 = v15->__r_.__value_.__r.__words[2];
  xmmword_1008A7F90 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A7F90, (void *)&_mh_execute_header);
  sub_10039D144();
  char v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  __int16 v19 = std::string::append(&v38, ".bin");
  long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1008A7FB8 = v19->__r_.__value_.__r.__words[2];
  xmmword_1008A7FA8 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A7FA8, (void *)&_mh_execute_header);
  sub_10039D144();
  __int16 v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  uint64_t v23 = std::string::append(&v38, ".bin");
  long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1008A7FD0 = v23->__r_.__value_.__r.__words[2];
  xmmword_1008A7FC0 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A7FC0, (void *)&_mh_execute_header);
  sub_10039D144();
  unsigned __int16 v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  uint64_t v27 = std::string::append(&v38, ".bin");
  long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1008A7FE8 = v27->__r_.__value_.__r.__words[2];
  xmmword_1008A7FD8 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A7FD8, (void *)&_mh_execute_header);
  sub_10039D144();
  __int16 v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  char v31 = std::string::append(&v38, ".bin");
  long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1008A8000 = v31->__r_.__value_.__r.__words[2];
  xmmword_1008A7FF0 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A7FF0, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  long long v35 = std::string::append(&v38, ".bin");
  long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1008A8018 = v35->__r_.__value_.__r.__words[2];
  xmmword_1008A8008 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A8008, (void *)&_mh_execute_header);
}

void sub_1002E031C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002E0478(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002E0774(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002E0908(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  if (v18) {
    sub_10042D324((uint64_t)&a18);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002E09B8(id a1)
{
  uint64_t v1 = +[NSUserDefaults standardUserDefaults];
  long long v2 = [v1 stringForKey:@"FindingDiscoveryFlowOverride"];

  if (v2 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    if (![v2 isEqualToString:@"NearbyActionNoWake_SpatialInteraction"])
    {
      if ([v2 isEqualToString:@"SpatialInteraction_BothSides"])
      {
        byte_1008A8028 = 1;
        uint64_t v3 = qword_1008ABDE0;
        if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_15;
        }
        if (byte_1008A8028) {
          uint64_t v7 = "SpatialInteraction_BothSides";
        }
        else {
          uint64_t v7 = "NearbyActionNoWake_SpatialInteraction";
        }
        int v9 = 136315138;
        long long v10 = v7;
        uint64_t v5 = "#find-common,Discovery flow override: %s";
      }
      else
      {
        uint64_t v3 = qword_1008ABDE0;
        if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_15;
        }
        if (byte_1008A8028) {
          long long v8 = "SpatialInteraction_BothSides";
        }
        else {
          long long v8 = "NearbyActionNoWake_SpatialInteraction";
        }
        int v9 = 136315138;
        long long v10 = v8;
        uint64_t v5 = "#find-common,Invalid discovery flow override. Returning discovery flow: %s";
      }
      goto LABEL_14;
    }
    byte_1008A8028 = 0;
    uint64_t v3 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      if (byte_1008A8028) {
        long long v4 = "SpatialInteraction_BothSides";
      }
      else {
        long long v4 = "NearbyActionNoWake_SpatialInteraction";
      }
      int v9 = 136315138;
      long long v10 = v4;
      uint64_t v5 = "#find-common,Discovery flow override: %s";
LABEL_14:
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, v5, (uint8_t *)&v9, 0xCu);
    }
  }
  else
  {
    uint64_t v3 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      if (byte_1008A8028) {
        long long v6 = "SpatialInteraction_BothSides";
      }
      else {
        long long v6 = "NearbyActionNoWake_SpatialInteraction";
      }
      int v9 = 136315138;
      long long v10 = v6;
      uint64_t v5 = "#find-common,No discovery flow override. Returning discovery flow: %s";
      goto LABEL_14;
    }
  }
LABEL_15:
}

void sub_1002E0C24(_Unwind_Exception *a1)
{
  long long v2 = v1;

  _Unwind_Resume(a1);
}

uint64_t sub_1002E0C44(int a1)
{
  if (qword_1008A8020 != -1) {
    dispatch_once(&qword_1008A8020, &stru_10085F288);
  }
  if ((a1 & ~byte_1008A8028) != 0) {
    return 26;
  }
  else {
    return 19;
  }
}

double sub_1002E0CA4(int a1)
{
  if (a1)
  {
    if (a1 != 1) {
      sub_10042D348();
    }
    double v2 = 30.0;
    uint64_t v3 = @"DeviceFindingOOBRefreshPeriodSecondsOverride";
  }
  else
  {
    double v2 = 2.0;
    uint64_t v3 = @"PeopleFindingOOBRefreshPeriodSecondsOverride";
  }
  return sub_1002E0CF8(v3, v2);
}

double sub_1002E0CF8(void *a1, double a2)
{
  id v3 = a1;
  long long v4 = +[NSUserDefaults standardUserDefaults];
  uint64_t v5 = [v4 objectForKey:v3];
  if (v5)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      [v5 doubleValue];
      a2 = v6;
    }
  }

  return a2;
}

void sub_1002E0D90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

double sub_1002E0DB8(int a1, int a2)
{
  if (a2)
  {
    if (a1)
    {
      if (a1 == 1)
      {
        double v3 = 0.0;
        long long v4 = @"DeviceFindingFindableDeviceKeepAliveBluetoothTimeoutSecondsOverride";
        return sub_1002E0CF8(v4, v3);
      }
LABEL_18:
      sub_10042D374();
    }
    double v3 = 10.0;
    long long v4 = @"PeopleFindingFindableDeviceKeepAliveBluetoothTimeoutSecondsOverride";
  }
  else if (a1)
  {
    if (a1 != 1) {
      goto LABEL_18;
    }
    double v3 = 0.0;
    long long v4 = @"DeviceFindingFindableDeviceKeepAliveOOBTimeoutSecondsOverride";
  }
  else
  {
    double v3 = 5.0;
    long long v4 = @"PeopleFindingFindableDeviceKeepAliveOOBTimeoutSecondsOverride";
  }
  return sub_1002E0CF8(v4, v3);
}

uint64_t sub_1002E0E54(int a1)
{
  if (a1)
  {
    if (a1 != 1) {
      sub_10042D3A0();
    }
    uint64_t v2 = @"DeviceFindingUWBDiscoveryTimeoutSecondsOverride";
  }
  else
  {
    uint64_t v2 = @"PeopleFindingUWBDiscoveryTimeoutSecondsOverride";
  }
  return sub_1002E0E98(v2, 0x78u);
}

uint64_t sub_1002E0E98(void *a1, unsigned __int16 a2)
{
  id v3 = a1;
  long long v4 = +[NSUserDefaults standardUserDefaults];
  uint64_t v5 = [v4 objectForKey:v3];

  if (v5)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      int v6 = [v5 intValue];
      if (v6 >= 0xFFFF) {
        a2 = -1;
      }
      else {
        a2 = v6;
      }
    }
  }

  return a2;
}

void sub_1002E0F30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1002E0F5C(int a1)
{
  if (a1)
  {
    if (a1 != 1) {
      sub_10042D3CC();
    }
    uint64_t v2 = @"DeviceFindingUWBReacquisitionTimeoutSecondsOverride";
  }
  else
  {
    uint64_t v2 = @"PeopleFindingUWBReacquisitionTimeoutSecondsOverride";
  }
  return sub_1002E0E98(v2, 0x3Cu);
}

const char *sub_1002E0FA0(int a1)
{
  if (a1) {
    return "Device";
  }
  else {
    return "People";
  }
}

const char *sub_1002E0FBC(int a1)
{
  if (a1) {
    return "Finder";
  }
  else {
    return "Findee";
  }
}

id sub_1002E0FD8(uint64_t a1, int a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  int v9 = "Findee";
  if (a2) {
    int v9 = "Finder";
  }
  long long v10 = +[NSMutableString stringWithFormat:@"#event %-*s | Role: %-*s", 16, a1, 14, v9];
  if (v7)
  {
    long long v11 = [v7 descriptionInternal];
    [v10 appendFormat:@" | Token: %@", v11];
  }
  if (v8) {
    [v10 appendFormat:@" | %@", v8];
  }

  return v10;
}

void sub_1002E10C4(_Unwind_Exception *a1)
{
  uint64_t v5 = v4;

  _Unwind_Resume(a1);
}

id sub_1002E10F4(void *a1)
{
  id v1 = a1;
  if (qword_1008A8030 != -1) {
    dispatch_once(&qword_1008A8030, &stru_10085F2A8);
  }
  uint64_t v2 = [(id)qword_1008A8038 stringFromDate:v1];

  return v2;
}

void sub_1002E1170(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002E1180(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_1008A8038;
  qword_1008A8038 = v1;

  id v3 = (void *)qword_1008A8038;

  [v3 setDateFormat:@"yyyy-MM-dd' 'HH:mm:ss'.'SSS"];
}

void sub_1002E11D4(void *a1, void *a2)
{
  id v3 = a1;
  long long v4 = +[NSDate now];
  uint64_t v5 = sub_1002E10F4(v4);
  int v6 = +[NSString stringWithFormat:@"%@ : %@", v5, v3];

  id v7 = v6;
  sub_100004950(__p, (char *)[v7 UTF8String]);
  sub_1002E12F4(__p);
  sub_1002E148C(a2);
  sub_1002E1514(a2, (long long *)__p);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1002E12B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  _Unwind_Resume(a1);
}

void sub_1002E12F4(void *__dst)
{
  unint64_t v2 = *((unsigned __int8 *)__dst + 23);
  if ((*((char *)__dst + 23) & 0x80000000) == 0)
  {
    if (v2 < 0x17) {
      return;
    }
    unint64_t v3 = v2 | 7;
    if ((v2 | 7) == 0x17)
    {
      unint64_t v4 = v2 & 0xF8;
      if (v4 <= 0xE)
      {
        unint64_t v5 = v4 + 9;
        int v6 = (void *)*__dst;
        char v7 = 1;
        uint64_t v8 = *((unsigned __int8 *)__dst + 23);
        char v9 = __dst;
        int v10 = 1;
        goto LABEL_20;
      }
      unint64_t v3 = v4 + 8;
    }
    uint64_t v8 = *((unsigned __int8 *)__dst + 23);
    goto LABEL_16;
  }
  unint64_t v11 = __dst[1];
  if (v11 < 0x17)
  {
    if ((__dst[2] & 0x7FFFFFFFFFFFFFFFLL) == 0x17) {
      return;
    }
    unint64_t v3 = 22;
    goto LABEL_13;
  }
  unint64_t v3 = (v11 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v11 | 7) != 0x17) {
    unint64_t v3 = v11 | 7;
  }
  if (v3 != (__dst[2] & 0x7FFFFFFFFFFFFFFFLL) - 1)
  {
    if (v3 >= 0x17)
    {
      uint64_t v8 = __dst[1];
LABEL_16:
      unint64_t v5 = v3 + 1;
      char v9 = operator new(v3 + 1);
      char v7 = 0;
      if ((v2 & 0x80) == 0)
      {
        int v10 = 0;
        int v6 = __dst;
        goto LABEL_20;
      }
      unint64_t v11 = __dst[1];
LABEL_19:
      int v6 = (void *)*__dst;
      int v10 = 1;
      unint64_t v2 = v11;
LABEL_20:
      if (v2 == -1)
      {
        if (!v10) {
          goto LABEL_22;
        }
      }
      else
      {
        memmove(v9, v6, v2 + 1);
        if (!v10)
        {
LABEL_22:
          if (v7)
          {
LABEL_23:
            *((unsigned char *)__dst + 23) = v8 & 0x7F;
            return;
          }
          goto LABEL_26;
        }
      }
      operator delete(v6);
      if (v7) {
        goto LABEL_23;
      }
LABEL_26:
      __dst[1] = v8;
      __dst[2] = v5 | 0x8000000000000000;
      *std::string __dst = v9;
      return;
    }
LABEL_13:
    unint64_t v5 = v3 + 1;
    char v7 = 1;
    uint64_t v8 = __dst[1];
    char v9 = __dst;
    goto LABEL_19;
  }
}

void sub_1002E147C(void *a1)
{
}

uint64_t sub_1002E148C(void *a1)
{
  unint64_t v2 = a1[4];
  unint64_t v3 = *(void *)(a1[1] + 8 * (v2 / 0xAA)) + 24 * (v2 % 0xAA);
  if (*(char *)(v3 + 23) < 0)
  {
    operator delete(*(void **)v3);
    unint64_t v2 = a1[4];
  }
  uint64_t v4 = a1[5] - 1;
  a1[4] = v2 + 1;
  a1[5] = v4;

  return sub_1002E1F98((uint64_t)a1, 1);
}

void *sub_1002E1514(void *a1, long long *a2)
{
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = 170 * ((v5 - v4) >> 3) - 1;
  if (v5 == v4) {
    uint64_t v6 = 0;
  }
  if (v6 == a1[5] + a1[4])
  {
    sub_1002E1FF8(a1);
    uint64_t v4 = a1[1];
    uint64_t v5 = a1[2];
  }
  if (v5 == v4)
  {
    __n128 result = 0;
  }
  else
  {
    unint64_t v7 = a1[5] + a1[4];
    __n128 result = (void *)(*(void *)(v4 + 8 * (v7 / 0xAA)) + 24 * (v7 % 0xAA));
  }
  if (*((char *)a2 + 23) < 0)
  {
    __n128 result = sub_100002DE4(result, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v9 = *a2;
    result[2] = *((void *)a2 + 2);
    *(_OWORD *)__n128 result = v9;
  }
  ++a1[5];
  return result;
}

id sub_1002E15E0(void *a1, int a2, int a3)
{
  id v5 = a1;
  if (a2 < 1)
  {
    long long v12 = "tokensPerLine > 0";
    int v13 = 368;
    goto LABEL_11;
  }
  if (a3 < 0)
  {
    long long v12 = "indentLevel >= 0";
    int v13 = 369;
LABEL_11:
    __assert_rtn("printableStringsForTokens", "NIServerFindingCommon.mm", v13, v12);
  }
  uint64_t v22 = 0;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x3032000000;
  unsigned __int16 v25 = sub_1002E187C;
  long long v26 = sub_1002E188C;
  id v27 = (id)objc_opt_new();
  v20[0] = 0;
  v20[1] = v20;
  void v20[2] = 0x3032000000;
  v20[3] = sub_1002E187C;
  void v20[4] = sub_1002E188C;
  id v21 = (id)objc_opt_new();
  uint64_t v6 = objc_opt_new();
  int v7 = a3 + 1;
  while (--v7)
    [v6 appendString:@"    "];
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  void v14[2] = sub_1002E1894;
  void v14[3] = &unk_10085F2F8;
  char v17 = v20;
  int v19 = a2;
  id v8 = v5;
  id v15 = v8;
  id v9 = v6;
  id v16 = v9;
  uint64_t v18 = &v22;
  [v8 enumerateObjectsUsingBlock:v14];
  id v10 = (id)v23[5];

  _Block_object_dispose(v20, 8);
  _Block_object_dispose(&v22, 8);

  return v10;
}

void sub_1002E180C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id a24)
{
  _Block_object_dispose(&a19, 8);
  _Block_object_dispose((const void *)(v26 - 112), 8);

  _Unwind_Resume(a1);
}

uint64_t sub_1002E187C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1002E188C(uint64_t a1)
{
}

void sub_1002E1894(uint64_t a1, void *a2, char *a3)
{
  id v5 = a2;
  [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) addObject:v5];
  if ((unint64_t)[*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) count] >= *(int *)(a1 + 64)
    || (char *)[*(id *)(a1 + 32) count] - 1 <= a3)
  {
    uint64_t v8 = 0;
    id v9 = &v8;
    uint64_t v10 = 0x3032000000;
    unint64_t v11 = sub_1002E187C;
    long long v12 = sub_1002E188C;
    id v13 = [*(id *)(a1 + 40) mutableCopy];
    uint64_t v6 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    void v7[2] = sub_1002E1A28;
    v7[3] = &unk_10085F2D0;
    v7[4] = &v8;
    [v6 enumerateObjectsUsingBlock:v7];
    [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) addObject:v9[5]];
    [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) removeAllObjects];
    _Block_object_dispose(&v8, 8);
  }
}

void sub_1002E19F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002E1A28(uint64_t a1, void *a2)
{
  unint64_t v2 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  id v3 = [a2 descriptionInternal];
  [v2 appendFormat:@"%@ ", v3];
}

void sub_1002E1A8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

const char *sub_1002E1AA0(int a1)
{
  if (a1 == 19) {
    return "SpatialInteraction";
  }
  else {
    return "NearbyActionNoWake";
  }
}

const char *sub_1002E1ABC(int a1)
{
  uint64_t v1 = "Unspecified";
  if (a1 == 2) {
    uint64_t v1 = "UWB";
  }
  if (a1 == 1) {
    return "NB-UWB";
  }
  else {
    return v1;
  }
}

BOOL sub_1002E1AE8(void *a1, int a2)
{
  uint64_t v2 = a1[1];
  if (*a1 == v2) {
    return 0;
  }
  uint64_t v3 = *a1 + 4;
  do
  {
    int v4 = *(_DWORD *)(v3 - 4);
    BOOL result = v4 == a2;
    BOOL v6 = v4 == a2 || v3 == v2;
    v3 += 4;
  }
  while (!v6);
  return result;
}

id sub_1002E1B1C(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (!v1) {
    __assert_rtn("getCBOOBKeyAddressFromDiscoveryToken", "NIServerFindingCommon.mm", 491, "token");
  }
  uint64_t v3 = [v1 getIRK];
  int v4 = v3;
  if (v3)
  {
    [v3 bytes];
    uint64_t v7 = SipHash();
    id v5 = +[NSData dataWithBytes:&v7 length:6];
  }
  else
  {
    id v5 = 0;
  }

  return v5;
}

void sub_1002E1BF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1002E1C10()
{
  uint64_t v0 = +[NSUserDefaults standardUserDefaults];
  if ([v0 BOOLForKey:@"FindingBypassDiscovery"])
  {
    id v1 = +[NSUserDefaults standardUserDefaults];
    unsigned int v2 = [v1 BOOLForKey:@"FindingGateObjectUpdatesOnDiscovery"];

    if (v2)
    {
      uint64_t v3 = qword_1008ABDE0;
      uint64_t v4 = 0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t v8 = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#find-common,Cannot set both FindingBypassDiscovery and FindingGateObjectUpdatesOnDiscovery defaults writes, remove one.", v8, 2u);
        return 0;
      }
      return v4;
    }
  }
  else
  {
  }
  id v5 = +[NSUserDefaults standardUserDefaults];
  if ([v5 BOOLForKey:@"FindingBypassDiscovery"])
  {
    uint64_t v4 = 1;
  }
  else
  {
    BOOL v6 = +[NSUserDefaults standardUserDefaults];
    uint64_t v4 = (uint64_t)[v6 BOOLForKey:@"FindingGateObjectUpdatesOnDiscovery"];
  }
  return v4;
}

void sub_1002E1D34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002E1D64(void *a1)
{
  id v1 = a1;
  unsigned int v2 = +[NSUserDefaults standardUserDefaults];
  uint64_t v3 = [v2 stringForKey:@"FindableDeviceFilterSingleTokenHash"];

  if (v3)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v4 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint8_t buf = 138477827;
        id v9 = v3;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#find-common,Findable device: override to use only %{private}@", buf, 0xCu);
      }
      v6[0] = _NSConcreteStackBlock;
      v6[1] = 3221225472;
      void v6[2] = sub_1002E1F44;
      void v6[3] = &unk_10085F320;
      id v7 = v3;
      id v5 = +[NSPredicate predicateWithBlock:v6];
      [v1 filterUsingPredicate:v5];
    }
  }
}

void sub_1002E1EE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  char v17 = v16;

  _Unwind_Resume(a1);
}

id sub_1002E1F44(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 descriptionInternal];
  id v4 = [v3 isEqualToString:*(void *)(a1 + 32)];

  return v4;
}

void sub_1002E1F88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1002E1F98(uint64_t a1, int a2)
{
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 < 0xAA) {
    a2 = 1;
  }
  if (v2 < 0x154) {
    int v4 = a2;
  }
  else {
    int v4 = 0;
  }
  if ((v4 & 1) == 0)
  {
    operator delete(**(void ***)(a1 + 8));
    *(void *)(a1 + 8) += 8;
    *(void *)(a1 + 32) -= 170;
  }
  return v4 ^ 1u;
}

void sub_1002E1FF8(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0xAA;
  unint64_t v4 = v2 - 170;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    BOOL v6 = (char *)a1[3];
    a1[4] = v4;
    id v7 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    id v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)uint64_t v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      long long v34 = (char *)sub_100056BF0(v5, v33);
      long long v35 = &v34[8 * (v33 >> 2)];
      std::string v37 = &v34[8 * v36];
      std::string v38 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        uint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        int v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)int v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    int v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      id v9 = (char *)a1[1];
    }
    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0xFF0uLL);
      sub_100151818(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0xFF0uLL);
    sub_100151930((uint64_t)a1, &v54);
    char v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    id v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      long long v34 = (char *)sub_100056BF0((uint64_t)(a1 + 3), v46);
      long long v35 = &v34[8 * (v46 >> 2)];
      std::string v37 = &v34[8 * v47];
      char v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        char v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)char v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      char v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        uint64_t v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  unsigned __int8 v56 = a1 + 3;
  *(void *)&long long v54 = sub_100056BF0((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0xFF0uLL);
  sub_100151A50(&v54, &v53);
  id v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    sub_100151B68((uint64_t)&v54, v27);
  }
  __int16 v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_1002E22C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void *sub_1002E2310@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085F3A8[a1]);
}

void *sub_1002E2324@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085F400[a1]);
}

void *sub_1002E2338@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085F448[a1]);
}

void *sub_1002E234C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085F468[a1]);
}

void sub_1002E256C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002E29C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1002E2A5C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) remote];
  [v2 didUpdateNearbyObjects:*(void *)(a1 + 40)];
}

void sub_1002E2AB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1002E2DD0(uint64_t result)
{
  *(void *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(void *)(*(void *)(result + 32) + 120);
  return result;
}

void sub_1002E3174(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  objc_destroyWeak(v27);
  objc_destroyWeak(v26);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_1002E31DC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _serverConnectionInterrupted];
}

void sub_1002E3224(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002E3238(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _serverConnectionInvalidated];
}

void sub_1002E3280(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002E3294(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  BOOL v6 = *(void **)(a1 + 32);
  if (v5) {
    [v6 _handleActivationError:v5];
  }
  else {
    [v6 _handleActivationSuccess:v7];
  }
}

void sub_1002E3304(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002E3360(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002E34C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1002E3508(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1002E3518(uint64_t a1)
{
}

void sub_1002E3520(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1002E37D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002E380C(uint64_t a1, void *a2)
{
  id v14 = a2;
  [v14 distance];
  float v4 = v3;
  [v14 horizontalAngle];
  ++*(_DWORD *)(*(void *)(a1 + 32) + 212);
  float v6 = NINearbyObjectDistanceNotAvailable;
  if (v4 != NINearbyObjectDistanceNotAvailable)
  {
    ++*(_DWORD *)(*(void *)(a1 + 32) + 216);
    *(float *)(*(void *)(a1 + 32) + 228) = v4;
    id v7 = *(float **)(a1 + 32);
    if (v7[56] == v6)
    {
      v7[56] = v4;
      id v7 = *(float **)(a1 + 32);
    }
    float v8 = v7[58];
    if (v8 == v6 || v8 > v4)
    {
      v7[58] = v4;
      id v7 = *(float **)(a1 + 32);
    }
    float v10 = v7[59];
    if (v10 == v6 || v10 < v4) {
      v7[59] = v4;
    }
  }
  float v12 = NINearbyObjectAngleNotAvailable;
  if (v5 != NINearbyObjectAngleNotAvailable)
  {
    ++*(_DWORD *)(*(void *)(a1 + 32) + 220);
    *(float *)(*(void *)(a1 + 32) + 244) = v5;
    uint64_t v13 = *(void *)(a1 + 32);
    if (*(float *)(v13 + 240) == v12) {
      *(float *)(v13 + 240) = v5;
    }
  }
}

void sub_1002E3928(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id sub_1002E39FC(uint64_t a1)
{
  CFStringRef v4 = @"duration";
  id v1 = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 32) + 104)];
  float v5 = v1;
  id v2 = +[NSDictionary dictionaryWithObjects:&v5 forKeys:&v4 count:1];

  return v2;
}

void sub_1002E3AB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1002E3B84(uint64_t a1)
{
  CFStringRef v4 = @"duration";
  id v1 = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 32) + 104)];
  float v5 = v1;
  id v2 = +[NSDictionary dictionaryWithObjects:&v5 forKeys:&v4 count:1];

  return v2;
}

void sub_1002E3C3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002E3DB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1002E3E04(uint64_t a1)
{
  v8[0] = @"domain";
  id v2 = (id *)(a1 + 32);
  float v3 = [*(id *)(a1 + 32) domain];
  v9[0] = v3;
  v8[1] = @"code";
  CFStringRef v4 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [*v2 code]);
  v8[2] = @"string";
  uint64_t v5 = *(void *)(a1 + 40);
  v9[1] = v4;
  _DWORD v9[2] = v5;
  float v6 = +[NSDictionary dictionaryWithObjects:v9 forKeys:v8 count:3];

  return v6;
}

void sub_1002E3F04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1002E3FC0(uint64_t a1)
{
  if (+[NIPlatformInfo isInternalBuild])
  {
    id v2 = *(NSObject **)(*(void *)(a1 + 32) + 88);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v3 = *(void *)(a1 + 40);
      int v5 = 134283521;
      uint64_t v6 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Set delegate: %{private}p", (uint8_t *)&v5, 0xCu);
    }
  }
  return objc_storeWeak((id *)(*(void *)(a1 + 32) + 256), *(id *)(a1 + 40));
}

void sub_1002E4174(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002E4184(uint64_t a1)
{
  if (+[NIPlatformInfo isInternalBuild])
  {
    id v2 = *(NSObject **)(*(void *)(a1 + 32) + 88);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v3 = *(void *)(a1 + 40);
      int v4 = 134283521;
      uint64_t v5 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Set delegate queue: %{private}p", (uint8_t *)&v4, 0xCu);
    }
  }
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 264), *(id *)(a1 + 40));
}

void sub_1002E42C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002E445C(uint64_t a1)
{
}

void sub_1002E4674(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 112), 8);

  _Unwind_Resume(a1);
}

void sub_1002E4694(uint64_t a1)
{
}

void sub_1002E46A8(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) _remoteObject];
  [v1 generateDiscoveryToken];
}

void sub_1002E46F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002E4708(uint64_t a1)
{
}

void sub_1002E47A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002E48BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002E48CC(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) internalState];
  if (+[NIPlatformInfo isInternalBuild])
  {
    uint64_t v3 = *(NSObject **)(*(void *)(a1 + 32) + 88);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 16);
      if (v2 - 1 > 7) {
        CFStringRef v5 = @"Activating";
      }
      else {
        CFStringRef v5 = off_10085F9D0[v2 - 1];
      }
      uint64_t v6 = *(void *)(a1 + 40);
      *(_DWORD *)uint8_t buf = 138412802;
      uint64_t v19 = v4;
      __int16 v20 = 2112;
      CFStringRef v21 = v5;
      __int16 v22 = 2112;
      uint64_t v23 = v6;
      id v7 = v3;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Client: runWithConfiguration [%@]. State: %@. Config: %@.", buf, 0x20u);
    }
  }
  atomic_store(1u, (unsigned __int8 *)(*(void *)(a1 + 32) + 80));
  void v16[5] = _NSConcreteStackBlock;
  int v16[6] = 3221225472;
  v16[7] = sub_1002E4C18;
  v16[8] = &unk_100859558;
  unsigned int v17 = v2;
  AnalyticsSendEventLazy();
  switch(v2)
  {
    case 0u:
    case 1u:
    case 4u:
    case 5u:
      goto LABEL_8;
    case 2u:
    case 3u:
      if ([*(id *)(*(void *)(a1 + 32) + 40) isEqual:*(void *)(a1 + 40)]) {
        goto LABEL_10;
      }
LABEL_8:
      [*(id *)(a1 + 32) setInternalState:2];
      id v8 = [*(id *)(a1 + 40) copy];
      id v9 = *(void **)(*(void *)(a1 + 32) + 40);
      *(void *)(*(void *)(a1 + 32) + 40) = v8;

      [*(id *)(a1 + 32) _logTime];
      float v10 = [*(id *)(a1 + 32) _remoteObject];
      uint64_t v11 = *(void *)(a1 + 40);
      v16[0] = _NSConcreteStackBlock;
      v16[1] = 3221225472;
      _DWORD v16[2] = sub_1002E4CC8;
      void v16[3] = &unk_10085F5B8;
      v16[4] = *(void *)(a1 + 32);
      [v10 runWithConfiguration:v11 reply:v16];

      break;
    case 6u:
      [*(id *)(a1 + 32) _reinterruptSessionWithCachedInterruption];
      return;
    case 7u:
    case 8u:
      uint64_t v13 = [*(id *)(a1 + 32) invalidationError];
      id v14 = *(void **)(a1 + 32);
      if (v13) {
        [v14 invalidationError];
      }
      else {
      uint64_t v15 = [v14 _getSessionFailureError];
      }

      [*(id *)(a1 + 32) _notifyDidInvalidateWithError:v15];
      return;
    default:
LABEL_10:
      if (+[NIPlatformInfo isInternalBuild])
      {
        float v12 = *(NSObject **)(*(void *)(a1 + 32) + 88);
        if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)uint8_t buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "Not runnable", buf, 2u);
        }
      }
      break;
  }
}

void sub_1002E4BC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1002E4C18(uint64_t a1)
{
  CFStringRef v5 = @"state";
  unsigned int v1 = *(_DWORD *)(a1 + 32) - 1;
  if (v1 > 7) {
    CFStringRef v2 = @"Activating";
  }
  else {
    CFStringRef v2 = off_10085F9D0[v1];
  }
  CFStringRef v6 = v2;
  uint64_t v3 = +[NSDictionary dictionaryWithObjects:&v6 forKeys:&v5 count:1];

  return v3;
}

void sub_1002E4CC8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = v3;
  if (v3) {
    [v4 _handleRunSessionError:v3];
  }
  else {
    [v4 _handleRunSessionSuccess];
  }
}

void sub_1002E4D28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002E4DB0(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) internalState];
  if (+[NIPlatformInfo isInternalBuild])
  {
    id v3 = *(NSObject **)(*(void *)(a1 + 32) + 88);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 16);
      if (v2 - 1 > 7) {
        CFStringRef v5 = @"Activating";
      }
      else {
        CFStringRef v5 = off_10085F9D0[v2 - 1];
      }
      *(_DWORD *)uint8_t buf = 138412546;
      uint64_t v15 = v4;
      __int16 v16 = 2112;
      CFStringRef v17 = v5;
      CFStringRef v6 = v3;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Client: pause [%@]. State: %@.", buf, 0x16u);
    }
  }
  if (v2 - 2 < 2)
  {
    float v10 = *(void **)(a1 + 32);
    id v9 = (id *)(a1 + 32);
    [v10 setInternalState:4];
    [*v9 _pauseInternalARSessionIfNeeded];
    uint64_t v11 = [*v9 _remoteObject];
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_1002E4FD8;
    v13[3] = &unk_10085F5B8;
    void v13[4] = *v9;
    [v11 pause:v13];
  }
  else if (v2 - 7 >= 2)
  {
    if (v2 == 6) {
      [*(id *)(a1 + 32) _reinterruptSessionWithCachedInterruption];
    }
  }
  else
  {
    id v7 = [*(id *)(a1 + 32) invalidationError];
    id v8 = *(void **)(a1 + 32);
    if (v7) {
      [v8 invalidationError];
    }
    else {
    float v12 = [v8 _getSessionFailureError];
    }

    [*(id *)(a1 + 32) _notifyDidInvalidateWithError:v12];
  }
}

void sub_1002E4FAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002E4FD8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = v3;
  if (v3) {
    [v4 _handlePauseSessionError:v3];
  }
  else {
    [v4 _handlePauseSessionSuccess];
  }
}

void sub_1002E5038(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id sub_1002E50C0(uint64_t a1)
{
  if (+[NIPlatformInfo isInternalBuild])
  {
    unsigned int v2 = *(id *)(*(void *)(a1 + 32) + 88);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      id v3 = *(void **)(a1 + 32);
      uint64_t v4 = v3[2];
      unsigned int v5 = [v3 internalState] - 1;
      if (v5 > 7) {
        CFStringRef v6 = @"Activating";
      }
      else {
        CFStringRef v6 = off_10085F9D0[v5];
      }
      int v8 = 138412546;
      uint64_t v9 = v4;
      __int16 v10 = 2112;
      CFStringRef v11 = v6;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Client: invalidate [%@]. State: %@.", (uint8_t *)&v8, 0x16u);
    }
  }
  return [*(id *)(a1 + 32) _invalidateInternal];
}

void sub_1002E51C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002E52A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
}

void sub_1002E53DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1002E53EC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _setARSessionInternal:*(void *)(a1 + 40)];
}

void sub_1002E5548(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

__n128 sub_1002E569C(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)(a2 + 48);
  long long v3 = *(_OWORD *)(a2 + 64);
  long long v4 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v4;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v3;
  return result;
}

uint32x4_t sub_1002E56B4(uint64_t a1)
{
  unsigned int v2 = *(void **)(*(void *)(a1 + 32) + 192);
  if (v2)
  {
    long long v3 = [v2 latestARFrame];

    if (v3)
    {
      unsigned int v5 = [*(id *)(*(void *)(a1 + 32) + 192) latestARFrame];
      CFStringRef v6 = [v5 camera];
      id v7 = [v6 trackingState];

      if (v7 == (id)2)
      {
        [*(id *)(a1 + 40) worldPosition];
        uint32x4_t result = (uint32x4_t)vceqq_f32(v8, (float32x4_t)NINearbyObjectWorldPositionNotAvailable);
        result.i32[3] = result.i32[2];
        result.i32[0] = vminvq_u32(result);
        if ((result.i32[0] & 0x80000000) == 0)
        {
          [*(id *)(a1 + 40) worldPosition];
          result.i32[3] = 1.0;
          uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8);
          *(_OWORD *)(v9 + 48) = xmmword_1004A0490;
          *(_OWORD *)(v9 + 64) = xmmword_1004A04A0;
          *(_OWORD *)(v9 + 80) = xmmword_1004BF3D0;
          *(uint32x4_t *)(v9 + 96) = result;
        }
      }
    }
  }
  return result;
}

void sub_1002E5790(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002E581C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002E5A3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1002E5A74(uint64_t a1)
{
  unsigned int v2 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  id v5 = [*(id *)(*(void *)(a1 + 32) + 128) descriptionInternal];
  [v2 appendFormat:@", Token: %@", v5];

  uint64_t v3 = *(void *)(a1 + 32);
  long long v4 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  id v6 = [*(id *)(v3 + 40) descriptionInternal];
  [v4 appendFormat:@", Config: %@", v6];
}

void sub_1002E5B10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1002E5BC0(uint64_t a1)
{
}

void sub_1002E5D28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002E5EB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002E6160(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

void sub_1002E6198(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 256));
  [WeakRetained session:*(void *)(a1 + 32) didRemoveNearbyObjects:*(void *)(a1 + 40) withReason:0];
}

void sub_1002E61F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002E6204(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 256));
  [WeakRetained session:*(void *)(a1 + 32) didRemoveNearbyObjects:*(void *)(a1 + 40) withReason:1];
}

void sub_1002E625C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id sub_1002E6270(uint64_t a1)
{
  CFStringRef v4 = @"reason";
  unsigned int v1 = sub_100304350(*(void *)(a1 + 32));
  id v5 = v1;
  unsigned int v2 = +[NSDictionary dictionaryWithObjects:&v5 forKeys:&v4 count:1];

  return v2;
}

void sub_1002E6318(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002E6544(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1002E65C8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 256));
  [WeakRetained session:*(void *)(a1 + 32) didUpdateNearbyObjects:*(void *)(a1 + 40)];
}

void sub_1002E661C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002E66AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002E6738(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002E6A14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1002E6A6C(uint64_t a1)
{
  v7[0] = @"reason";
  unsigned int v2 = sub_10030432C(*(void *)(a1 + 40));
  v8[0] = v2;
  v7[1] = @"reinterrupted";
  uint64_t v3 = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 48)];
  void v7[2] = @"previousReason";
  uint64_t v4 = *(void *)(a1 + 32);
  v8[1] = v3;
  v8[2] = v4;
  id v5 = +[NSDictionary dictionaryWithObjects:v8 forKeys:v7 count:3];

  return v5;
}

void sub_1002E6B5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002E6EE4(_Unwind_Exception *exception_object)
{
}

id sub_1002E6F08(uint64_t a1)
{
  v6[0] = @"reason";
  unsigned int v2 = sub_10030432C(*(void *)(a1 + 32));
  v6[1] = @"duration";
  v7[0] = v2;
  uint64_t v3 = +[NSNumber numberWithDouble:*(double *)(a1 + 40) - *(double *)(a1 + 48)];
  v7[1] = v3;
  uint64_t v4 = +[NSDictionary dictionaryWithObjects:v7 forKeys:v6 count:2];

  return v4;
}

void sub_1002E6FE8(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1002E7010(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 256));
  [WeakRetained sessionSuspensionEnded:*(void *)(a1 + 32)];
}

void sub_1002E7064(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002E7078(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 256));
  [WeakRetained session:*(void *)(a1 + 32) suspensionReasonEnded:*(void *)(a1 + 40) isNoLongerSuspended:*(unsigned __int8 *)(a1 + 48)];
}

void sub_1002E70D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002E7220(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002E723C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 256));
  [WeakRetained sessionDidUpdateDiscoveryToken:*(void *)(a1 + 32)];
}

void sub_1002E7290(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002E7360(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1002E7380(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 256));
  [WeakRetained session:*(void *)(a1 + 32) didReceiveRangingAuthRecommendation:*(unsigned __int8 *)(a1 + 48) forObject:*(void *)(a1 + 40)];
}

void sub_1002E73D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002E7524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1002E754C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 256));
  [WeakRetained session:*(void *)(a1 + 32) didDiscoverNearbyObject:*(void *)(a1 + 40)];
}

void sub_1002E75A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002E7758(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1002E7798(void *a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1[4] + 256));
  [WeakRetained session:a1[4] object:a1[5] didUpdateRegion:a1[6] previousRegion:a1[7]];
}

void sub_1002E77F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002E789C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 256));
  [WeakRetained session:*(void *)(a1 + 32) didUpdateLocalMotionState:*(void *)(a1 + 40)];
}

void sub_1002E78F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002E799C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 256));
  [WeakRetained session:*(void *)(a1 + 32) didUpdateHomeDeviceUWBRangingAvailability:*(unsigned __int8 *)(a1 + 40)];
}

void sub_1002E79F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002E7AB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1002E7AC8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 256));
  [WeakRetained session:*(void *)(a1 + 32) relayDCKMessage:*(void *)(a1 + 40)];
}

void sub_1002E7B1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002E7BA8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 256));
  [WeakRetained session:*(void *)(a1 + 32) didUpdateHealthStatus:*(void *)(a1 + 40)];
}

void sub_1002E7BFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002E7CE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1002E7D08(void *a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1[4] + 256));
  [WeakRetained session:a1[4] didProcessAcwgM1MsgWithResponse:a1[5] error:a1[6]];
}

void sub_1002E7D60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002E7E48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1002E7E6C(void *a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1[4] + 256));
  [WeakRetained session:a1[4] didProcessAcwgM3MsgWithResponse:a1[5] error:a1[6]];
}

void sub_1002E7EC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002E7FAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1002E7FD0(void *a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1[4] + 256));
  [WeakRetained session:a1[4] didProcessAcwgRangingSessionResumeRequestMsgWithResponse:a1[5] error:a1[6]];
}

void sub_1002E8028(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002E80B8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 256));
  [WeakRetained session:*(void *)(a1 + 32) requestAcwgRangingSessionSuspend:*(unsigned int *)(a1 + 48) withSuspendTriggerReason:*(void *)(a1 + 40)];
}

void sub_1002E8110(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002E819C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 256));
  [WeakRetained session:*(void *)(a1 + 32) didStartAcwgRanging:*(void *)(a1 + 40)];
}

void sub_1002E81F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002E827C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 256));
  [WeakRetained session:*(void *)(a1 + 32) didSuspendAcwgRanging:*(void *)(a1 + 40)];
}

void sub_1002E82D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002E8394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1002E83AC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 256));
  [WeakRetained session:*(void *)(a1 + 32) didPrefetchAcwgUrsk:*(unsigned int *)(a1 + 48) error:*(void *)(a1 + 40)];
}

void sub_1002E8404(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002E8580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1002E85B4(void *a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1[4] + 256));
  [WeakRetained session:a1[4] didGenerateShareableConfigurationData:a1[5] forObject:a1[6]];
}

void sub_1002E860C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002E8750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1002E8778(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 256));
  [WeakRetained systemConfigurator:*(void *)(a1 + 32) didUpdateState:*(void *)(a1 + 40)];
}

void sub_1002E87CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002E891C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002E893C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 256));
  [WeakRetained systemConfigurator:*(void *)(a1 + 32) didUpdateResourceUsageLimitExceeded:*(unsigned __int8 *)(a1 + 48) forSessionConfigurationType:*(void *)(a1 + 40)];
}

void sub_1002E8994(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002E8C58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,void *a23)
{
  _Unwind_Resume(a1);
}

void sub_1002E8CC4(void *a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1[4] + 256));
  uint64_t v2 = a1[4];
  uint64_t v3 = [[NIAlgorithmConvergence alloc] initWithStatus:a1[7] andReasons:a1[5]];
  [WeakRetained session:v2 didUpdateAlgorithmConvergence:v3 forObject:a1[6]];
}

void sub_1002E8D50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002E8D70(void *a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1[4] + 256));
  [WeakRetained session:a1[4] didUpdateAlgorithmState:a1[5] forObject:a1[6]];
}

void sub_1002E8DC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id sub_1002E8E74(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _handleARSessionDidUpdateFrame:*(void *)(a1 + 40)];
}

id sub_1002E8F18(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _handleARSessionDidFailWithError:*(void *)(a1 + 40)];
}

id sub_1002E8F98(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _handleARSessionWasInterrupted];
}

id sub_1002E9014(uint64_t a1)
{
  return [*(id *)(a1 + 32) _handleARSessionInterruptionEnded];
}

id sub_1002E9090(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _handleARSessionDidChangeState:*(void *)(a1 + 40)];
}

id sub_1002E9164(uint64_t a1)
{
  return [*(id *)(a1 + 32) _handleARSession:*(void *)(a1 + 40) willRunWithConfiguration:*(void *)(a1 + 48)];
}

void sub_1002E9268(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1002E9278(uint64_t a1)
{
  if (+[NIPlatformInfo isInternalBuild])
  {
    uint64_t v2 = *(NSObject **)(*(void *)(a1 + 32) + 88);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Called with sessionShouldAttemptRelocalization", v4, 2u);
    }
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_1002E94B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id a18)
{
  _Unwind_Resume(a1);
}

void sub_1002E95A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002E9658(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002E96FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002E9884(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1002E9B88(_Unwind_Exception *a1)
{
  uint64_t v3 = v1;

  _Unwind_Resume(a1);
}

void sub_1002E9BB0(uint64_t a1)
{
  unsigned int v1 = *(void **)(a1 + 32);
  NSErrorUserInfoKey v4 = NSLocalizedDescriptionKey;
  CFStringRef v5 = @"Invalid camera assistance configuration.";
  uint64_t v2 = +[NSDictionary dictionaryWithObjects:&v5 forKeys:&v4 count:1];
  uint64_t v3 = +[NSError errorWithDomain:@"com.apple.NearbyInteraction" code:-5888 userInfo:v2];
  [v1 _invalidateSessionAndNotifyError:v3];
}

void sub_1002E9C84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EA148(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EA198(uint64_t a1, int a2)
{
  if (a2)
  {
    if (+[NIPlatformInfo isInternalBuild])
    {
      uint64_t v3 = *(NSObject **)(*(void *)(a1 + 32) + 88);
      if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)CFStringRef v5 = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "_isValidARSession invalidating session: attempting relocalization is not disabled in internal session", v5, 2u);
      }
    }
    NSErrorUserInfoKey v4 = [*(id *)(a1 + 32) _remoteObject];
    [v4 arSessionWillRunWithInvalidConfiguration];
  }
}

void sub_1002EA22C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EA2BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002EA368(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EA3E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EA450(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002EA628(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 256));
  [WeakRetained sessionWasSuspended:*(void *)(a1 + 32)];
}

void sub_1002EA67C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002EA690(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 256));
  [WeakRetained session:*(void *)(a1 + 32) suspendedWithReason:*(void *)(a1 + 40)];
}

void sub_1002EA6E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002EAA6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EABF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EAD34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EAEE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EAF00(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 256));
  [WeakRetained sessionDidStartRunning:*(void *)(a1 + 32)];
}

void sub_1002EAF54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002EB088(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EB1D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EB2A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002EB424(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EB578(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1002EB5A8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 256));
  [WeakRetained session:*(void *)(a1 + 32) didInvalidateWithError:*(void *)(a1 + 40)];
}

void sub_1002EB5FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002EB6C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EB950(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EB9E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EBA5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002EBBE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EBCF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EBD80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EBF54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EC0A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EC0B4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) _remoteObject];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1002EC154;
  void v4[3] = &unk_10085F5B8;
  uint64_t v3 = *(void *)(a1 + 40);
  void v4[4] = *(void *)(a1 + 32);
  [v2 _addObject:v3 reply:v4];
}

void sub_1002EC144(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EC154(uint64_t a1, void *a2)
{
  id v3 = a2;
  NSErrorUserInfoKey v4 = v3;
  if (v3)
  {
    CFStringRef v5 = *(void **)(a1 + 32);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    void v6[2] = sub_1002EC220;
    void v6[3] = &unk_100846588;
    void v6[4] = v5;
    id v7 = v3;
    [v5 _performBlockOnDelegateQueue:v6 ifRespondsToSelector:"session:didFailWithError:"];
  }
}

void sub_1002EC208(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1002EC220(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 256));
  [WeakRetained session:*(void *)(a1 + 32) didFailWithError:*(void *)(a1 + 40)];
}

void sub_1002EC274(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002EC37C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EC38C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) _remoteObject];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1002EC42C;
  void v4[3] = &unk_10085F5B8;
  uint64_t v3 = *(void *)(a1 + 40);
  void v4[4] = *(void *)(a1 + 32);
  [v2 _removeObject:v3 reply:v4];
}

void sub_1002EC41C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EC42C(uint64_t a1, void *a2)
{
  id v3 = a2;
  NSErrorUserInfoKey v4 = v3;
  if (v3)
  {
    CFStringRef v5 = *(void **)(a1 + 32);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    void v6[2] = sub_1002EC4F8;
    void v6[3] = &unk_100846588;
    void v6[4] = v5;
    id v7 = v3;
    [v5 _performBlockOnDelegateQueue:v6 ifRespondsToSelector:"session:didFailWithError:"];
  }
}

void sub_1002EC4E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1002EC4F8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 256));
  [WeakRetained session:*(void *)(a1 + 32) didFailWithError:*(void *)(a1 + 40)];
}

void sub_1002EC54C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002EC5D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002EC65C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002EC754(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) _synchronousRemoteObject];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  _DWORD v3[2] = sub_1002EC7F4;
  v3[3] = &unk_10085F6A8;
  long long v4 = *(_OWORD *)(a1 + 32);
  [v2 isPreciseRangingAllowed:v3];
}

void sub_1002EC7E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EC7F4(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  id v6 = v5;
  if (v5) {
    [*(id *)(a1 + 32) _invalidateSessionAndNotifyError:v5];
  }
  else {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = a2;
  }
}

void sub_1002EC860(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002EC920(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) _synchronousRemoteObject];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  _DWORD v3[2] = sub_1002EC9C0;
  v3[3] = &unk_10085F6A8;
  long long v4 = *(_OWORD *)(a1 + 32);
  [v2 isExtendedDistanceMeasurementAllowed:v3];
}

void sub_1002EC9B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EC9C0(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  id v6 = v5;
  if (v5) {
    [*(id *)(a1 + 32) _invalidateSessionAndNotifyError:v5];
  }
  else {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = a2;
  }
}

void sub_1002ECA2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002ECAB8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) _remoteObject];
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  void v6[2] = sub_1002ECB60;
  void v6[3] = &unk_10085F6F8;
  void v6[4] = *(void *)(a1 + 32);
  [v2 processBluetoothHostTimeSyncWithType:v3 btcClockTicks:v4 eventCounter:v5 reply:v6];
}

void sub_1002ECB50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002ECB60(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = *(void **)(a1 + 32);
  if (v6)
  {
    [v7 _invalidateSessionAndNotifyError:v6];
  }
  else
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_1002ECC64;
    void v8[3] = &unk_100855EB0;
    v8[4] = v7;
    id v9 = v5;
    id v10 = 0;
    [v7 _performBlockOnDelegateQueue:v8 ifRespondsToSelector:"session:didProcessBluetoothHostTimeSyncWithResponse:error:"];
  }
}

void sub_1002ECC38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1002ECC64(void *a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1[4] + 256));
  [WeakRetained session:a1[4] didProcessBluetoothHostTimeSyncWithResponse:a1[5] error:a1[6]];
}

void sub_1002ECCBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002ECD38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002ECEEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002ECF30(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _remoteObject];
  [v2 _processCarKeyEvent:*(void *)(a1 + 40) reply:&stru_10085F740];
}

void sub_1002ECF8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002ED148(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002ED18C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _remoteObject];
  [v2 _processCarKeyEvent:*(void *)(a1 + 40) reply:&stru_10085F760];
}

void sub_1002ED1E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002ED3A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002ED3E8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _remoteObject];
  [v2 _processCarKeyEvent:*(void *)(a1 + 40) reply:&stru_10085F780];
}

void sub_1002ED444(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002ED600(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002ED644(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _remoteObject];
  [v2 _processCarKeyEvent:*(void *)(a1 + 40) reply:&stru_10085F7A0];
}

void sub_1002ED6A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002ED830(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002ED868(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _remoteObject];
  [v2 _processCarKeyEvent:*(void *)(a1 + 40) reply:&stru_10085F7C0];
}

void sub_1002ED8C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002EDA54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EDA8C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _remoteObject];
  [v2 _processCarKeyEvent:*(void *)(a1 + 40) reply:&stru_10085F7E0];
}

void sub_1002EDAE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002EDCDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EDD00(uint64_t a1)
{
  NSErrorUserInfoKey v4 = NSLocalizedDescriptionKey;
  CFStringRef v5 = @"Received a nil or 0 length DCK message.";
  id v2 = +[NSDictionary dictionaryWithObjects:&v5 forKeys:&v4 count:1];
  uint64_t v3 = +[NSError errorWithDomain:@"com.apple.NearbyInteraction" code:-19889 userInfo:v2];

  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1002EDDE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EDE04(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _remoteObject];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1002EDED0;
  void v4[3] = &unk_10085F830;
  uint64_t v3 = *(void *)(a1 + 40);
  void v4[4] = *(void *)(a1 + 32);
  id v5 = *(id *)(a1 + 48);
  [v2 processDCKMessage:v3 reply:v4];
}

void sub_1002EDEB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1002EDED0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = *(NSObject **)(*(void *)(a1 + 32) + 264);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1002EDFAC;
  block[3] = &unk_10085F808;
  id v8 = *(id *)(a1 + 40);
  id v13 = v6;
  id v14 = v8;
  id v12 = v5;
  id v9 = v6;
  id v10 = v5;
  dispatch_async(v7, block);
}

uint64_t sub_1002EDFAC(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void sub_1002EE0C4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _synchronousRemoteObject];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  _DWORD v3[2] = sub_1002EE164;
  v3[3] = &unk_10085E318;
  void v3[4] = *(void *)(a1 + 40);
  [v2 deleteURSKs:v3];
}

void sub_1002EE154(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EE164(uint64_t a1, void *a2)
{
}

void sub_1002EE33C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EE354(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _synchronousRemoteObject];
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_1002EE3F8;
  void v5[3] = &unk_10085E318;
  uint64_t v4 = *(void *)(a1 + 40);
  v5[4] = *(void *)(a1 + 48);
  [v2 _setDebugURSK:v4 transactionIdentifier:v3 reply:v5];
}

void sub_1002EE3E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EE3F8(uint64_t a1, void *a2)
{
}

void sub_1002EE4B4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _synchronousRemoteObject];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  _DWORD v3[2] = sub_1002EE554;
  v3[3] = &unk_10085F6A8;
  long long v4 = *(_OWORD *)(a1 + 32);
  [v2 isRangingLimitExceeded:v3];
}

void sub_1002EE544(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EE554(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  id v6 = v5;
  if (v5) {
    [*(id *)(a1 + 32) _invalidateSessionAndNotifyError:v5];
  }
  else {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = a2;
  }
}

void sub_1002EE5C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002EE724(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _synchronousRemoteObject];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1002EE7C4;
  void v4[3] = &unk_10085E318;
  uint64_t v3 = *(void *)(a1 + 48);
  void v4[4] = *(void *)(a1 + 40);
  [v2 _setURSKTTL:v3 reply:v4];
}

void sub_1002EE7B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EE7C4(uint64_t a1, void *a2)
{
}

void sub_1002EE83C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EE8EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002EE9AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002EEB34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EEB44(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _remoteObject];
  [v2 processAcwgM1Msg:*(void *)(a1 + 40) withSessionTriggerReason:*(void *)(a1 + 48)];
}

void sub_1002EEB98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002EECA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EECB0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _remoteObject];
  [v2 processAcwgM3Msg:*(void *)(a1 + 40)];
}

void sub_1002EED04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002EED90(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _remoteObject];
  [v2 suspendAcwgRanging:*(unsigned int *)(a1 + 48) withSuspendTriggerReason:*(void *)(a1 + 40)];
}

void sub_1002EEDE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002EEE74(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _remoteObject];
  [v2 processAcwgRangingSessionResumeRequestMsg:*(unsigned int *)(a1 + 48) withResumeTriggerReason:*(void *)(a1 + 40)];
}

void sub_1002EEECC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002EEF58(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _remoteObject];
  [v2 prefetchAcwgUrsk:*(unsigned int *)(a1 + 40)];
}

void sub_1002EEFAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002EF038(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _remoteObject];
  [v2 processUpdatedLockState:*(unsigned __int16 *)(a1 + 40)];
}

void sub_1002EF08C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002EF1B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002EF274(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _remoteObject];
  [v2 processVisionInput:*(void *)(a1 + 40)];
}

void sub_1002EF2C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002EF344(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EF470(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EF490(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _remoteObject];
  [v2 _processBluetoothSample:*(void *)(a1 + 40)];
}

void sub_1002EF4E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002EF754(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EF810(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EFBCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002EFC6C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _remoteObject];
  [v2 _processFindingEvent:*(void *)(a1 + 40) reply:&stru_10085F8F0];
}

void sub_1002EFCC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002F0010(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002F00A8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _remoteObject];
  [v2 _processFindingEvent:*(void *)(a1 + 40) reply:&stru_10085F910];
}

void sub_1002F0104(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002F02FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002F0348(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _remoteObject];
  [v2 _processFindingEvent:*(void *)(a1 + 40) reply:&stru_10085F930];
}

void sub_1002F03A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002F059C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002F05E8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _remoteObject];
  [v2 _processFindingEvent:*(void *)(a1 + 40) reply:&stru_10085F950];
}

void sub_1002F0644(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002F08A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002F08FC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _remoteObject];
  [v2 _processFindingEvent:*(void *)(a1 + 40) reply:&stru_10085F970];
}

void sub_1002F0958(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002F09D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002F0A50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002F0B88(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _remoteObject];
  [v2 _provideTruthTag:*(void *)(a1 + 40)];
}

void sub_1002F0BDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002F0C58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002F0E0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002F0E50(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _remoteObject];
  [v2 _processSystemEvent:*(void *)(a1 + 40) reply:&stru_10085F990];
}

void sub_1002F0EAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002F1098(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1002F10EC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _remoteObject];
  [v2 _processSystemEvent:*(void *)(a1 + 40) reply:&stru_10085F9B0];
}

void sub_1002F1148(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void *sub_1002F11C4@<X0>(int a1@<W1>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085FB60[a1]);
}

uint64_t sub_1002F1244(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = objc_alloc_init(CTClientDelegate);
  *(void *)(a1 + 16) = [objc_alloc((Class)CoreTelephonyClient) initWithQueue:v5];
  uint64_t v6 = _CTServerConnectionCreateOnTargetQueue();
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 32) = a1 + 40;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 48) = 0;
  sub_1002F2850((uint64_t)v12, a3);
  sub_1002F28E8(a1 + 56, (uint64_t)v12);
  sub_1001FCD48(v12);
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 88) = a1 + 96;
  *(void *)(a1 + 104) = 0;
  *(unsigned char *)(a1 + 112) = 0;
  *(_DWORD *)(a1 + 116) = *((_DWORD *)sub_100007D00() + 144);
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 120) = a1 + 128;
  *(void *)(a1 + 136) = 0;
  *(unsigned char *)(a1 + 144) = 0;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  unsigned char v10[2] = sub_100004E44;
  void v10[3] = &unk_10085FA10;
  v10[4] = a1;
  [*(id *)(a1 + 8) setFOnCellMonitorUpdateCb:v10];
  [*(id *)(a1 + 16) setDelegate:*(void *)(a1 + 8)];
  if (!*(void *)(a1 + 24))
  {
    id v7 = qword_1008A8048;
    if (os_log_type_enabled((os_log_t)qword_1008A8048, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint8_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#regulatory,regulatory,geo,mcc,Failed to create CT connection", buf, 2u);
    }
  }
  int v9 = 0;
  *(void *)uint8_t buf = &v9;
  *((unsigned char *)sub_100006930((uint64_t **)(a1 + 120), &v9, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf) + 40) = 0;
  int v9 = 1;
  *(void *)uint8_t buf = &v9;
  *((unsigned char *)sub_100006930((uint64_t **)(a1 + 120), &v9, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf) + 40) = 0;
  int v9 = 2;
  *(void *)uint8_t buf = &v9;
  *((unsigned char *)sub_100006930((uint64_t **)(a1 + 120), &v9, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf) + 40) = 0;
  int v9 = 3;
  *(void *)uint8_t buf = &v9;
  *((unsigned char *)sub_100006930((uint64_t **)(a1 + 120), &v9, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf) + 40) = 0;

  return a1;
}

void sub_1002F14E8(_Unwind_Exception *a1)
{
  sub_1001FC4AC(v6, *v9);
  sub_1001FC510(v5, *v8);
  sub_1001FC5C4(v4);
  sub_1001FC648(v3, *v7);

  _Unwind_Resume(a1);
}

void sub_1002F1590(uint64_t a1, uint64_t a2)
{
  long long v4 = (id)qword_1008A8048;
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    if (a2 == 1) {
      uint64_t v5 = "kSlot1";
    }
    else {
      uint64_t v5 = "kSlot2";
    }
    sub_100004950(__p, v5);
    if (v14 >= 0) {
      uint64_t v6 = __p;
    }
    else {
      uint64_t v6 = (void **)__p[0];
    }
    *(_DWORD *)uint8_t buf = 136315138;
    __int16 v16 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#regulatory,regulatory,geo,mcc,queryCT,slot:%s", buf, 0xCu);
    if (v14 < 0) {
      operator delete(__p[0]);
    }
  }

  id v7 = [objc_alloc((Class)CTXPCServiceSubscriptionContext) initWithSlot:a2];
  id v8 = *(void **)(a1 + 16);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  unsigned char v10[2] = sub_1002F1734;
  void v10[3] = &unk_10085FA38;
  id v11 = v7;
  uint64_t v12 = a1;
  id v9 = v7;
  [v8 copyCellInfo:v9 completion:v10];
}

void sub_1002F170C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002F1734(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(a1 + 40);
  if (v6)
  {
    id v8 = qword_1008A8048;
    if (os_log_type_enabled((os_log_t)qword_1008A8048, OS_LOG_TYPE_ERROR))
    {
      sub_10042D7F8((uint64_t)v6, v8);
      if (!v5) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  if (v5)
  {
LABEL_4:
    id v9 = [*(id *)(v7 + 8) fOnCellMonitorUpdateCb];
    ((void (**)(void, void, id))v9)[2](v9, *(void *)(a1 + 32), v5);
  }
LABEL_5:
}

void sub_1002F17E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002F1800(uint64_t a1)
{
  if (sub_100005424(*(_DWORD *)(a1 + 116)))
  {
    sub_1002F1590(a1, 1);
    uint64_t v2 = 2;
  }
  else
  {
    if (!sub_10039CF88(*(_DWORD *)(a1 + 116))) {
      return;
    }
    uint64_t v2 = 1;
  }

  sub_1002F1590(a1, v2);
}

void sub_1002F1870(uint64_t a1, int a2)
{
  if (!a2) {
    sub_10042D870();
  }
  if (*(unsigned __int8 *)(a1 + 112) == a2)
  {
    uint64_t v3 = qword_1008A8048;
    if (os_log_type_enabled((os_log_t)qword_1008A8048, OS_LOG_TYPE_DEFAULT))
    {
      int v4 = *(unsigned __int8 *)(a1 + 112);
      v6[0] = 67109120;
      v6[1] = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#regulatory,regulatory,geo,mcc,noChangeInAirplaneModeStatus:%d", (uint8_t *)v6, 8u);
    }
  }
  else
  {
    *(unsigned char *)(a1 + 112) = a2;
    if (a2 != 1)
    {
      if (a2 == 2)
      {
        if (sub_100005424(*(_DWORD *)(a1 + 116)) || sub_10039CF88(*(_DWORD *)(a1 + 116)))
        {
          sub_1002F1800(a1);
        }
      }
      else
      {
        id v5 = qword_1008A8048;
        if (os_log_type_enabled((os_log_t)qword_1008A8048, OS_LOG_TYPE_ERROR)) {
          sub_10042D89C(v5);
        }
      }
    }
  }
}

void sub_1002F19B8(void *a1, uint64_t a2)
{
  BOOL v25 = a2 != 1;
  int v4 = (id)qword_1008A8048;
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    id v5 = a2 == 1 ? "kSlot1" : "kSlot2";
    sub_100004950(__p, v5);
    id v6 = v24 >= 0 ? __p : (void **)__p[0];
    *(_DWORD *)uint8_t buf = 136315138;
    id v27 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#regulatory,regulatory,geo,mcc,queryCT,slot:%s", buf, 0xCu);
    if (v24 < 0) {
      operator delete(__p[0]);
    }
  }

  id v7 = [objc_alloc((Class)CTXPCServiceSubscriptionContext) initWithSlot:a2];
  id v8 = (void *)a1[2];
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  void v20[2] = sub_1002F1CBC;
  v20[3] = &unk_10085FA38;
  __int16 v22 = a1;
  id v9 = v7;
  id v21 = v9;
  [v8 copyCellInfo:v9 completion:v20];
  __p[0] = &v25;
  __p[1] = a1;
  id v10 = (void *)a1[2];
  id v19 = 0;
  id v11 = [v10 copyMobileCountryCode:v9 error:&v19];
  uint64_t v12 = (void **)v19;
  if (sub_1002F1D50((int **)__p, v11, v12, 0))
  {
    id v13 = v12;
    id v14 = v11;
  }
  else
  {
    uint64_t v15 = qword_1008A8048;
    if (os_log_type_enabled((os_log_t)qword_1008A8048, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint8_t buf = 138412290;
      id v27 = v12;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "#regulatory,regulatory,CurrentMcc,cantObtain,error:%@", buf, 0xCu);
    }
    __int16 v16 = (void *)a1[2];
    uint64_t v18 = v12;
    id v14 = [v16 copyLastKnownMobileCountryCode:v9 error:&v18];
    id v13 = v18;

    if ((sub_1002F1D50((int **)__p, v14, v13, 1) & 1) == 0)
    {
      CFStringRef v17 = qword_1008A8048;
      if (os_log_type_enabled((os_log_t)qword_1008A8048, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint8_t buf = 138412290;
        id v27 = v13;
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "#regulatory,regulatory,LastKnownMcc,cantObtain,error:%@", buf, 0xCu);
      }
    }
  }
}

void sub_1002F1C80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002F1CBC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v5 = v3;
    int v4 = [*(id *)(*(void *)(a1 + 40) + 8) fOnCellMonitorUpdateCb];
    ((void (**)(void, void, id))v4)[2](v4, *(void *)(a1 + 32), v5);

    id v3 = v5;
  }
}

void sub_1002F1D30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1002F1D50(int **a1, void *a2, void *a3, int a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = (NSObject **)a1[1];
  int v10 = **a1;
  id v11 = (id)qword_1008A8048;
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    sub_100004950(__p, off_10085FB60[v10]);
    uint64_t v12 = "Current";
    if (a4) {
      uint64_t v12 = "lastKnown";
    }
    *(_DWORD *)uint8_t buf = 136315906;
    if (v24 >= 0) {
      id v13 = __p;
    }
    else {
      id v13 = (void **)__p[0];
    }
    *(void *)&uint8_t buf[4] = v12;
    *(_WORD *)&unsigned char buf[12] = 2080;
    *(void *)&buf[14] = v13;
    *(_WORD *)&buf[22] = 2112;
    id v26 = v7;
    __int16 v27 = 2112;
    id v28 = v8;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "#regulatory,regulatory,%sMcc,slot:%s,mcc:%@,error:%@", buf, 0x2Au);
    if (v24 < 0) {
      operator delete(__p[0]);
    }
  }

  if (v7) {
    BOOL v14 = v8 == 0;
  }
  else {
    BOOL v14 = 0;
  }
  uint64_t v15 = v14;
  if (v14)
  {
    [v7 intValue];
    sub_100004950(buf, (char *)[v7 UTF8String]);
    __int16 v16 = *v9;
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3321888768;
    void v18[2] = sub_1002F27A0;
    v18[3] = &unk_10085FA58;
    __n128 v18[4] = v9;
    int v21 = v10;
    if ((buf[23] & 0x80000000) != 0)
    {
      sub_100002DE4(&v19, *(void **)buf, *(unint64_t *)&buf[8]);
    }
    else
    {
      long long v19 = *(_OWORD *)buf;
      uint64_t v20 = *(void *)&buf[16];
    }
    char v22 = a4;
    dispatch_async(v16, v18);
    if (SHIBYTE(v20) < 0) {
      operator delete((void *)v19);
    }
    if ((buf[23] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
  }

  return v15;
}

void sub_1002F1F88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_1002F1FCC(uint64_t a1)
{
  atomic_store(1u, (unsigned __int8 *)(a1 + 144));
  if (sub_100005424(*(_DWORD *)(a1 + 116)))
  {
    sub_1002F19B8((void *)a1, 1);
    uint64_t v2 = 2;
LABEL_5:
    sub_1002F19B8((void *)a1, v2);
    return 1;
  }
  if (sub_10039CF88(*(_DWORD *)(a1 + 116)))
  {
    uint64_t v2 = 1;
    goto LABEL_5;
  }
  return 1;
}

void sub_1002F2034(unsigned __int16 *a1@<X1>, void *a2@<X8>)
{
  sub_100006A00();
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1008A8068, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1008A8068))
  {
    sub_1003CEE58((uint64_t)&qword_1008A8050);
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1008A8050, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1008A8068);
  }
  int v4 = *((unsigned __int8 *)a1 + 23);
  if (*((char *)a1 + 23) < 0)
  {
    if (*((void *)a1 + 1) != 3) {
      goto LABEL_11;
    }
    id v5 = *(unsigned __int16 **)a1;
  }
  else
  {
    id v5 = a1;
    if (v4 != 3) {
      goto LABEL_11;
    }
  }
  int v6 = *v5;
  int v7 = *((unsigned __int8 *)v5 + 2);
  if (v6 == 12345 && v7 == 49)
  {
    int v21 = off_10089F748;
    goto LABEL_49;
  }
LABEL_11:
  uint64_t v9 = byte_1008A8067;
  if (byte_1008A8067 < 0) {
    uint64_t v9 = qword_1008A8058;
  }
  int v10 = (char)v4;
  if (v9)
  {
    uint64_t v11 = *((unsigned __int8 *)a1 + 23);
    uint64_t v12 = (v4 & 0x80u) == 0 ? *((unsigned __int8 *)a1 + 23) : *((void *)a1 + 1);
    if (v12 == v9)
    {
      if (byte_1008A8067 >= 0) {
        id v13 = &qword_1008A8050;
      }
      else {
        id v13 = (uint64_t *)qword_1008A8050;
      }
      if ((v4 & 0x80) != 0)
      {
        uint64_t v15 = *(const void **)a1;
        if (memcmp(*(const void **)a1, v13, *((void *)a1 + 1))) {
          goto LABEL_30;
        }
      }
      else if (*((unsigned char *)a1 + 23))
      {
        BOOL v14 = (unsigned __int8 *)a1;
        while (*v14 == *(unsigned __int8 *)v13)
        {
          ++v14;
          id v13 = (uint64_t *)((char *)v13 + 1);
          if (!--v11) {
            goto LABEL_48;
          }
        }
        goto LABEL_27;
      }
LABEL_48:
      int v21 = off_10089F750;
LABEL_49:
      char v22 = *v21;
      sub_100004950(a2, v22);
      return;
    }
  }
LABEL_27:
  if (v10 >= 0) {
    uint64_t v15 = a1;
  }
  else {
    uint64_t v15 = *(const void **)a1;
  }
LABEL_30:
  __int16 v16 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v15, +[NSString defaultCStringEncoding]);
  id v27 = 0;
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v26 = 0;
  if (_CTServerConnectionCopyISOForMCC()) {
    BOOL v17 = 1;
  }
  else {
    BOOL v17 = v27 == 0;
  }
  if (!v17)
  {
    id v18 = v27;
    sub_100004950(&v23, (char *)[v18 UTF8String]);
    uint64_t v26 = v24;
    *(_OWORD *)std::string __p = v23;
    if (v24 >= 0) {
      long long v19 = (void **)((char *)__p + HIBYTE(v24));
    }
    else {
      long long v19 = (void **)(v23 + *((void *)&v23 + 1));
    }
    if (v24 >= 0) {
      uint64_t v20 = __p;
    }
    else {
      uint64_t v20 = (void **)v23;
    }
    while (v20 != v19)
    {
      *(unsigned char *)uint64_t v20 = __toupper(*(char *)v20);
      uint64_t v20 = (void **)((char *)v20 + 1);
    }
  }
  sub_1002F2344((uint64_t *)a1, (uint64_t)a2);
  if (SHIBYTE(v26) < 0) {
    operator delete(__p[0]);
  }
}

void sub_1002F22F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
}

void sub_1002F2344(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  sub_100004950((void *)a2, "");
  id v14 = 0;
  if (*((char *)a1 + 23) < 0)
  {
    if (!a1[1]) {
      return;
    }
    a1 = (uint64_t *)*a1;
  }
  else if (!*((unsigned char *)a1 + 23))
  {
    return;
  }
  int v4 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", a1, +[NSString defaultCStringEncoding]);
  if (_CTServerConnectionCopyISOForMCC()) {
    BOOL v5 = 1;
  }
  else {
    BOOL v5 = v14 == 0;
  }
  if (!v5)
  {
    id v6 = v14;
    sub_100004950(&v12, (char *)[v6 UTF8String]);
    if (*(char *)(a2 + 23) < 0) {
      operator delete(*(void **)a2);
    }
    *(_OWORD *)a2 = v12;
    unint64_t v7 = v13;
    *(void *)(a2 + 16) = v13;
    v7 >>= 56;
    int v8 = (char)v7;
    uint64_t v9 = (unsigned char *)(a2 + v7);
    if (v8 >= 0) {
      int v10 = v9;
    }
    else {
      int v10 = (unsigned char *)(*(void *)a2 + *(void *)(a2 + 8));
    }
    if (v8 >= 0) {
      uint64_t v11 = (unsigned char *)a2;
    }
    else {
      uint64_t v11 = *(unsigned char **)a2;
    }
    while (v11 != v10)
    {
      *uint64_t v11 = __toupper((char)*v11);
      ++v11;
    }
  }
}

void sub_1002F2478(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1002F24B0(uint64_t a1, int a2, uint64_t a3, char a4)
{
  int v7 = a2;
  char v6 = a4;
  uint64_t v4 = *(void *)(a1 + 24);
  if (!v4) {
    sub_100027894();
  }
  return (*(uint64_t (**)(uint64_t, int *, uint64_t, char *))(*(void *)v4 + 48))(v4, &v7, a3, &v6);
}

void sub_1002F250C(uint64_t a1, int a2, uint64_t a3, int a4)
{
  int v20 = a2;
  int v8 = (id)qword_1008A8048;
  if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT)) {
    goto LABEL_20;
  }
  sub_100004950(__p, off_10085FB60[a2]);
  if (v19 >= 0) {
    uint64_t v9 = __p;
  }
  else {
    uint64_t v9 = (void **)__p[0];
  }
  if (*(char *)(a3 + 23) < 0)
  {
    if (*(void *)(a3 + 8)) {
      int v10 = *(const char **)a3;
    }
    else {
      int v10 = "__";
    }
  }
  else if (*(unsigned char *)(a3 + 23))
  {
    int v10 = (const char *)a3;
  }
  else
  {
    int v10 = "__";
  }
  int v21 = &v20;
  uint64_t v11 = sub_10000529C((uint64_t **)(a1 + 32), &v20, (uint64_t)&unk_1004BC2F8, &v21);
  if (*((char *)v11 + 63) < 0)
  {
    if (v11[6])
    {
LABEL_14:
      int v21 = &v20;
      long long v12 = sub_10000529C((uint64_t **)(a1 + 32), &v20, (uint64_t)&unk_1004BC2F8, &v21);
      unint64_t v13 = (const char *)(v12 + 5);
      if (*((char *)v12 + 63) < 0) {
        unint64_t v13 = *(const char **)v13;
      }
      goto LABEL_18;
    }
  }
  else if (*((unsigned char *)v11 + 63))
  {
    goto LABEL_14;
  }
  unint64_t v13 = "__";
LABEL_18:
  *(_DWORD *)uint8_t buf = 136315650;
  *(void *)&uint8_t buf[4] = v9;
  __int16 v23 = 2080;
  int64_t v24 = v10;
  __int16 v25 = 2080;
  uint64_t v26 = v13;
  _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#regulatory,regulatory,geo,mcc,processIsoCountry,slot:%s,isoCountryCode(new):%s,fCurrentIsoFromMcc(old):%s", buf, 0x20u);
  if (v19 < 0) {
    operator delete(__p[0]);
  }
LABEL_20:

  *(void *)uint8_t buf = &v20;
  id v14 = sub_10000529C((uint64_t **)(a1 + 32), &v20, (uint64_t)&unk_1004BC2F8, (_DWORD **)buf);
  std::string::operator=((std::string *)(v14 + 5), (const std::string *)a3);
  int v15 = v20;
  if (*(char *)(a3 + 23) < 0)
  {
    sub_100002DE4(v16, *(void **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)__int16 v16 = *(_OWORD *)a3;
    uint64_t v17 = *(void *)(a3 + 16);
  }
  sub_1000064F4(a1, v15, (const char *)v16, a4);
  if (SHIBYTE(v17) < 0) {
    operator delete(v16[0]);
  }
}

void sub_1002F2758(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  _Unwind_Resume(a1);
}

void sub_1002F27A0(uint64_t a1)
{
}

char *sub_1002F27B8(char *__dst, long long *a2, long long *a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_100002DE4(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)std::string __dst = v5;
  }
  char v6 = __dst + 24;
  if (*((char *)a3 + 23) < 0)
  {
    sub_100002DE4(v6, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v7 = *a3;
    *((void *)__dst + 5) = *((void *)a3 + 2);
    *(_OWORD *)char v6 = v7;
  }
  return __dst;
}

void sub_1002F2834(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002F2850(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_1002F28E8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 24) = 0;
  if (*(void *)(a2 + 24))
  {
    uint64_t v4 = operator new(0x28uLL);
    *uint64_t v4 = off_10085FA98;
    sub_1002F2B34((uint64_t)(v4 + 1), a2);
    *(void *)(a1 + 24) = v4;
  }
  return a1;
}

void *sub_1002F2958(void *a1)
{
  *a1 = off_10085FA98;
  sub_1001FCD48(a1 + 1);
  return a1;
}

void sub_1002F299C(void *a1)
{
  *a1 = off_10085FA98;
  sub_1001FCD48(a1 + 1);

  operator delete();
}

void *sub_1002F2A00(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = operator new(0x28uLL);
  *uint64_t v2 = off_10085FA98;
  sub_1002F2850((uint64_t)(v2 + 1), v1);
  return v2;
}

void sub_1002F2A54(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002F2A68(uint64_t a1, void *a2)
{
  *a2 = off_10085FA98;
  return sub_1002F2850((uint64_t)(a2 + 1), a1 + 8);
}

void *sub_1002F2A94(uint64_t a1)
{
  return sub_1001FCD48((void *)(a1 + 8));
}

void sub_1002F2A9C(void *a1)
{
  sub_1001FCD48(a1 + 1);

  operator delete(a1);
}

uint64_t sub_1002F2AD8(uint64_t a1, int *a2, uint64_t a3, char *a4)
{
  return sub_1002F2BB4(a1 + 8, *a2, a3, *a4);
}

uint64_t sub_1002F2AE8(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_1002F2B28()
{
}

uint64_t sub_1002F2B34(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(*(void *)*v3 + 24))(*v3, a1);
      return a1;
    }
    *(void *)(a1 + 24) = v4;
  }
  else
  {
    uint64_t v3 = (void *)(a1 + 24);
  }
  *uint64_t v3 = 0;
  return a1;
}

uint64_t sub_1002F2BB4(uint64_t a1, int a2, uint64_t a3, char a4)
{
  int v7 = a2;
  char v6 = a4;
  uint64_t v4 = *(void *)(a1 + 24);
  if (!v4) {
    sub_100027894();
  }
  return (*(uint64_t (**)(uint64_t, int *, uint64_t, char *))(*(void *)v4 + 48))(v4, &v7, a3, &v6);
}

_OWORD *sub_1002F2C10(uint64_t **a1, const void **a2, uint64_t a3)
{
  long long v5 = (void **)sub_100026C8C((uint64_t)a1, &v11, a2);
  char v6 = *v5;
  if (!*v5)
  {
    int v7 = (uint64_t **)v5;
    char v6 = operator new(0x50uLL);
    v9[1] = a1 + 1;
    _DWORD v6[2] = *(_OWORD *)a3;
    *((void *)v6 + 6) = *(void *)(a3 + 16);
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(_OWORD *)((char *)v6 + 56) = *(_OWORD *)(a3 + 24);
    *((void *)v6 + 9) = *(void *)(a3 + 40);
    *(void *)(a3 + 16) = 0;
    *(void *)(a3 + 24) = 0;
    *(void *)(a3 + 32) = 0;
    *(void *)(a3 + 40) = 0;
    char v10 = 1;
    sub_100026D98(a1, v11, v7, (uint64_t *)v6);
    v9[0] = 0;
    sub_1002F2CE0((uint64_t)v9, 0);
  }
  return v6;
}

void sub_1002F2CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_1001FC56C((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

void sub_1002F2D38()
{
  qword_1008A8048 = (uint64_t)os_log_create("com.apple.nearbyd", "Regulatory");
}

void *sub_1002F2D8C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085FCF0[a1]);
}

void *sub_1002F2DA0@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085FD48[a1]);
}

void *sub_1002F2DB4@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085FD90[a1]);
}

void *sub_1002F2DC8@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_10085FDB0[a1]);
}

void *sub_1002F2DDC(void *a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  *(void *)a1 = off_10085FB98;
  *((void *)a1 + 1) = off_10085FC10;
  id v6 = v5;
  *((void *)a1 + 2) = v6;
  *((void *)a1 + 3) = a3;
  *((_DWORD *)a1 + 8) = 2;
  id v7 = objc_alloc((Class)CBPeripheralManager);
  uint64_t v16 = CBManagerNeedsRestrictedStateOperation;
  uint64_t v17 = &__kCFBooleanTrue;
  int v8 = +[NSDictionary dictionaryWithObjects:&v17 forKeys:&v16 count:1];
  *((void *)a1 + 5) = [v7 initWithDelegate:0 queue:0 options:v8];

  *((void *)a1 + 6) = [[PRWirelessProximityAdapter alloc] initWithQueue:*((void *)a1 + 2)];
  *((void *)a1 + 7) = [[PRSettingsObserver alloc] initWithSettings:*((void *)a1 + 5) queue:*((void *)a1 + 2)];
  if (!*((void *)a1 + 2))
  {
    uint64_t v11 = "fDispatchQueue";
    int v12 = 35;
    goto LABEL_6;
  }
  if (!*((void *)a1 + 3))
  {
    uint64_t v11 = "fBtProxyObject";
    int v12 = 36;
LABEL_6:
    __assert_rtn("PRBluetoothProvider", "PRBluetoothProvider.mm", v12, v11);
  }
  objc_initWeak(&location, *((id *)a1 + 6));
  uint64_t v9 = (void *)*((void *)a1 + 6);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_1002F3074;
  v13[3] = &unk_10085FC40;
  v14[1] = a1;
  objc_copyWeak(v14, &location);
  [v9 setWiproxStateHandler:v13];
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);

  return a1;
}

void sub_1002F3000(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_1002F3074(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  sub_1002F30E4(v3, WeakRetained, a2);
}

void sub_1002F30D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1002F30E4(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  sub_100004950(&v10, "");
  id v6 = "WPStateResetting";
  switch(a3)
  {
    case 0:
      std::string::append(&v10, "WPStateUnknown");
      unsigned int v7 = 2;
      goto LABEL_5;
    case 1:
      goto LABEL_4;
    case 2:
      id v6 = "WPStateOff";
LABEL_4:
      std::string::append(&v10, v6);
      unsigned int v7 = 1;
LABEL_5:
      atomic_store(v7, (unsigned int *)(a1 + 32));
      break;
    case 3:
      std::string::append(&v10, "WPStateOn");
      atomic_store(0, (unsigned int *)(a1 + 32));
      [v5 enableSPMIMessagingWithHandler:&stru_10085FC80];
      break;
    default:
      break;
  }
  int v8 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v9 = &v10;
    if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      uint64_t v9 = (std::string *)v10.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)uint8_t buf = 136315138;
    int v12 = v9;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "WiProx changed state: %s", buf, 0xCu);
  }
  if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v10.__r_.__value_.__l.__data_);
  }
}

void sub_1002F3268(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_1002F32AC(uint64_t a1)
{
  *(void *)a1 = off_10085FB98;
  *(void *)(a1 + 8) = off_10085FC10;
  [*(id *)(a1 + 56) stopObserving:@"advertisingAddress"];
  [*(id *)(a1 + 48) setWiproxStateHandler:0];

  return a1;
}

uint64_t sub_1002F3350(uint64_t a1)
{
  return sub_1002F32AC(a1 - 8);
}

void sub_1002F3358(uint64_t a1)
{
  sub_1002F32AC(a1);

  operator delete();
}

void sub_1002F3390(uint64_t a1)
{
  sub_1002F32AC(a1 - 8);

  operator delete();
}

id sub_1002F33CC(uint64_t a1)
{
  uint64_t v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint8_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Start observing BT address roll events.", buf, 2u);
  }
  uint64_t v3 = *(void **)(a1 + 56);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_1002F3498;
  void v5[3] = &unk_100857300;
  v5[4] = a1;
  return [v3 startObserving:@"advertisingAddress" observeImmediately:0 callback:v5];
}

void sub_1002F3498(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "BT address roll event.", v3, 2u);
  }
  sub_1002F350C(v1);
}

void sub_1002F350C(uint64_t a1)
{
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 96))(a1);
  if (BYTE6(v2))
  {
    uint64_t v3 = *(NSObject **)(a1 + 16);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1002F3648;
    block[3] = &unk_10085FC60;
    void block[4] = a1;
    int v6 = v2;
    __int16 v7 = WORD2(v2);
    char v8 = BYTE6(v2);
    dispatch_async(v3, block);
  }
  else
  {
    sub_1002F3618((uint64_t)[*(id *)(a1 + 40) state], v9);
    uint64_t v4 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042D924((uint64_t *)v9, v4);
    }
    if (v10 < 0) {
      operator delete(v9[0]);
    }
  }
}

void *sub_1002F3618@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  if ((unint64_t)(a1 - 1) > 4) {
    uint64_t v2 = "CBManagerStateUnknown";
  }
  else {
    uint64_t v2 = off_10085FDD0[a1 - 1];
  }
  return sub_100004950(a2, v2);
}

void sub_1002F3648(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 46)) {
    sub_10000AE44();
  }
  uint64_t v1 = *(void *)(a1 + 32);
  int v6 = *(_DWORD *)(a1 + 40);
  __int16 v7 = *(_WORD *)(a1 + 44);
  double rep = (double)std::chrono::steady_clock::now().__d_.__rep_;
  uint64_t v3 = *(void *)(v1 + 24);
  double v4 = rep;
  int v5 = 1;
  char v8 = 1;
  sub_10018191C(v3, (uint64_t)&v4);
}

uint64_t sub_1002F36B0(uint64_t a1)
{
  if ([*(id *)(a1 + 40) state] == (id)5 || objc_msgSend(*(id *)(a1 + 40), "state") == (id)10)
  {
    uint64_t v3 = [*(id *)(a1 + 40) advertisingAddress];
    id v4 = [v3 copy];

    id v5 = [v4 length];
    int v6 = qword_1008ABDE0;
    if (v5 == (id)6)
    {
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int16 v25 = 138477827;
        *(void *)&void v25[4] = v4;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "PRBluetoothProvider: BT Adv Address = %{private}@", v25, 0xCu);
      }
      __int16 v7 = [*(id *)(a1 + 40) nonConnectableAdvertisingAddress];
      char v8 = [v7 copy];

      uint64_t v9 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int16 v25 = 138477827;
        *(void *)&void v25[4] = v8;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "PRBluetoothProvider: NonConnectable BT Adv Address = %{private}@", v25, 0xCu);
      }
      [v4 getBytes:v25 length:6];
      char v10 = &v25[5];
      uint64_t v11 = &v25[1];
      do
      {
        char v12 = *(v11 - 1);
        *(v11 - 1) = *v10;
        *v10-- = v12;
      }
      while (v11++ < v10);
      unsigned int v14 = v25[0];
      unint64_t v1 = *(unsigned int *)&v25[1] | ((unint64_t)v25[5] << 32);
      uint64_t v15 = 1;
    }
    else
    {
      char v8 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
        sub_10042D9AC(v25, (uint64_t)[v4 length], v8);
      }
      uint64_t v15 = 0;
      unsigned int v14 = 0;
    }
  }
  else
  {
    uint64_t v16 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042DA04(v16, v17, v18, v19, v20, v21, v22, v23);
    }
    uint64_t v15 = 0;
    unsigned int v14 = 0;
  }
  return ((v1 & 0xFFFFFFFFFFLL) << 8) | (v15 << 48) | v14;
}

void sub_1002F38E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1002F393C(uint64_t a1)
{
  return sub_1002F36B0(a1 - 8);
}

void sub_1002F3944(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  if (!v2) {
    goto LABEL_5;
  }
  uint64_t v3 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
    sub_10042DA3C((uint64_t)v2, v3);
  }
  if (sub_1002222D8())
  {
    [(NSError *)v2 description];
    [ objc_claimAutoreleasedReturnValue() UTF8String];
    abort_report_np();
    __break(1u);
  }
  else
  {
LABEL_5:
  }
}

void sub_1002F39E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1002F39FC()
{
  uint64_t v0 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "PRBluetoothProvider: Probe", v2, 2u);
  }
  return 1;
}

uint64_t sub_1002F3A68(uint64_t a1)
{
  return 1;
}

uint64_t sub_1002F3AA4(uint64_t a1)
{
  uint64_t v1 = a1 - 8;
  [*(id *)(a1 + 40) enableSPMIMessagingWithHandler:&stru_10085FC80];
  sub_1002F33CC(v1);
  return 1;
}

uint64_t sub_1002F3AE0(uint64_t a1)
{
  return 1;
}

uint64_t sub_1002F3B08(uint64_t a1)
{
  return 1;
}

uint64_t sub_1002F3B30(uint64_t a1, _DWORD *a2)
{
  if (*a2)
  {
    if (*a2 == 1)
    {
      uint64_t v2 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
        sub_10042DAB4(v2, v3, v4, v5, v6, v7, v8, v9);
      }
    }
  }
  else
  {
    char v10 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042DAEC(v10, v11, v12, v13, v14, v15, v16, v17);
    }
  }
  return 0;
}

void sub_1002F3F14(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (+[NIPlatformInfo isInternalBuild])
  {
    uint64_t v4 = *(NSObject **)(*(void *)(a1 + 32) + 32);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_10042DB24((uint64_t)v3, v4);
    }
  }
}

void sub_1002F4000(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (+[NIPlatformInfo isInternalBuild])
  {
    uint64_t v4 = *(NSObject **)(*(void *)(a1 + 32) + 32);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_10042DB9C((uint64_t)v3, v4);
    }
  }
}

void *sub_1002F451C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100860698[a1]);
}

void *sub_1002F4530@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_1008606F0[a1]);
}

void *sub_1002F4544@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100860738[a1]);
}

void *sub_1002F4558@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100860758[a1]);
}

uint64_t sub_1002F456C(uint64_t a1)
{
  uint64_t v2 = a1 + 8;
  uint64_t v3 = a1 + 16;
  uint64_t v4 = a1 + 24;
  uint64_t v5 = a1 + 40;
  *(void *)a1 = off_10085FE30;
  *(void *)(a1 + 8) = off_10085FEE8;
  *(void *)(a1 + 16) = off_10085FF10;
  *(void *)(a1 + 24) = off_10085FF38;
  *(void *)(a1 + 32) = off_10085FF60;
  *(void *)(a1 + 40) = off_10085FF88;
  *(void *)(a1 + 48) = off_10085FFB0;
  uint64_t v6 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_USER_INITIATED, 0);
  *(void *)(a1 + 56) = dispatch_queue_create("com.apple.nearbyd.SensorQueue", v6);
  id v28 = (uint64_t *)(a1 + 56);

  std::recursive_mutex::recursive_mutex((std::recursive_mutex *)(a1 + 64));
  *(void *)(a1 + 152) = 0;
  uint64_t v7 = operator new(0x20uLL);
  *uint64_t v7 = off_1008602F8;
  v7[1] = sub_1002F5398;
  void v7[2] = 0;
  void v7[3] = a1;
  *(void *)(a1 + 152) = v7;
  uint64_t v39 = v5;
  __int16 v29 = (uint64_t *)(a1 + 160);
  if ((sub_100222388() & 1) != 0
    || (+[NSUserDefaults standardUserDefaults],
        uint64_t v8 = objc_claimAutoreleasedReturnValue(),
        unsigned __int8 v9 = [v8 BOOLForKey:@"ProtobufLoggingEnabled"],
        v8,
        (v9 & 1) != 0))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1008A9AC0, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_1008A9AC0))
    {
      sub_100007D00();
      sub_100007C0C((uint64_t)&unk_1008A9AA8);
      __cxa_atexit((void (*)(void *))&std::string::~string, &unk_1008A9AA8, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008A9AC0);
    }
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1008A9AE0, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_1008A9AE0))
    {
      sub_100004950(byte_1008A9AC8, "nearbyd-new-");
      __cxa_atexit((void (*)(void *))&std::string::~string, byte_1008A9AC8, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1008A9AE0);
    }
    sub_100326804(byte_1008A9AC8, buf);
    if (SHIBYTE(v38) < 0)
    {
      sub_100002DE4(&__dst, *(void **)buf, *(unint64_t *)&buf[8]);
    }
    else
    {
      long long __dst = *(_OWORD *)buf;
      uint64_t v41 = v38;
    }
    sub_1002FAB2C((uint64_t)&v36, (const void **)&__dst, 1);
    if (SHIBYTE(v41) < 0) {
      operator delete((void *)__dst);
    }
    sub_1001589F4((const void **)&unk_1008A9AA8, (const void **)buf, (uint64_t)&__dst);
    operator new();
  }
  *__int16 v29 = 0;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 208) = a1 + 216;
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = 0;
  *(unsigned char *)(a1 + 200) = 0;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_DWORD *)(a1 + 264) = 1065353216;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_DWORD *)(a1 + 304) = 1065353216;
  *(_OWORD *)(a1 + 288) = 0u;
  uint64_t v27 = a1 + 312;
  sub_100187CA4(a1 + 312, a1 + 3264);
  sub_100186FD8(a1 + 408, a1 + 856);
  sub_100166D68(a1 + 504, a1 + 912);
  sub_1001818DC(a1 + 592, a1 + 1008);
  sub_10018ACE8(a1 + 680, 0);
  sub_100186E10(a1 + 768, a1 + 1072);
  sub_1002D6480(a1 + 856, *v28, a1 + 408, 0.02);
  sub_1002B8838(a1 + 912, *v28, a1 + 504);
  sub_1002F32A8(a1 + 1008, *v28, a1 + 592);
  sub_100304BDC(a1 + 1072, *v28, a1 + 768);
  sub_1002FB3F8(a1 + 1008, a1 + 1072, (void *)(a1 + 3248));
  uint64_t v10 = *(void *)(a1 + 56);
  uint64_t v11 = *(std::__shared_weak_count **)(a1 + 3256);
  uint64_t v34 = *(void *)(a1 + 3248);
  long long v35 = v11;
  if (v11) {
    atomic_fetch_add_explicit(&v11->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v12 = *(std::__shared_weak_count **)(a1 + 168);
  uint64_t v32 = *(void *)(a1 + 160);
  unint64_t v33 = v12;
  if (v12) {
    atomic_fetch_add_explicit(&v12->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_1001B86C0(a1 + 3264, v10, &v34, v27, v2, v3, v4, &v32);
  if (v33) {
    sub_10001A970(v33);
  }
  if (v35) {
    sub_10001A970(v35);
  }
  *(void *)(a1 + 6376) = v27;
  *(void *)(a1 + 6384) = a1 + 408;
  *(void *)(a1 + 6392) = a1 + 504;
  *(void *)(a1 + 6400) = a1 + 592;
  *(void *)(a1 + 6408) = a1 + 680;
  *(void *)(a1 + 6416) = a1 + 768;
  *(void *)(a1 + 6424) = a1 + 1016;
  *(void *)(a1 + 6432) = a1 + 920;
  *(void *)(a1 + 6440) = a1 + 864;
  *(void *)(a1 + 6448) = a1 + 1080;
  *(void *)(a1 + 6456) = a1 + 3272;
  *(_OWORD *)(a1 + 6464) = 0u;
  sub_1002C4A14(a1 + 6480);
  uint64_t v13 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint8_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "PRRangingManager construction", buf, 2u);
  }

  if (sub_1002222D8())
  {
    uint64_t v36 = a1;
    sub_1002FB7A8(a1 + 6376, a1 + 6424, &v36, v28, v29, buf);
  }
  else
  {
    uint64_t v14 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint8_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "PRRangingManager: Not a supported platform.", buf, 2u);
    }

    uint64_t v36 = a1;
    sub_1002FB9D0(&v36, v28, buf);
  }
  long long v15 = *(_OWORD *)buf;
  memset(buf, 0, sizeof(buf));
  uint64_t v16 = *(std::__shared_weak_count **)(a1 + 6472);
  *(_OWORD *)(a1 + 6464) = v15;
  if (v16)
  {
    sub_10001A970(v16);
    if (*(void *)&buf[8]) {
      sub_10001A970(*(std::__shared_weak_count **)&buf[8]);
    }
  }
  sub_1002FBB34(buf);
  long long v17 = *(_OWORD *)buf;
  memset(buf, 0, sizeof(buf));
  uint64_t v18 = *(std::__shared_weak_count **)(a1 + 184);
  *(_OWORD *)(a1 + 176) = v17;
  if (v18)
  {
    sub_10001A970(v18);
    if (*(void *)&buf[8]) {
      sub_10001A970(*(std::__shared_weak_count **)&buf[8]);
    }
  }
  if (sub_1002222D8() && sub_10018ADD0() && (sub_10018ADD0() & 1) == 0)
  {
    uint64_t v19 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
      sub_10042DC14();
    }
  }
  uint64_t v20 = *(void *)(a1 + 6464);
  uint64_t v21 = v20 + 16;
  if (!v20) {
    uint64_t v21 = 0;
  }
  uint64_t v22 = *(std::__shared_weak_count **)(a1 + 6472);
  uint64_t v30 = v21;
  long long v31 = v22;
  if (v22) {
    atomic_fetch_add_explicit(&v22->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_1001BC7D4(a1 + 3264, &v30);
  if (v31) {
    sub_10001A970(v31);
  }
  (*(void (**)(void))(**(void **)(a1 + 6464) + 24))();
  if ((sub_100222388() & 1) != 0
    || (+[NSUserDefaults standardUserDefaults],
        uint64_t v23 = objc_claimAutoreleasedReturnValue(),
        unsigned int v24 = [v23 BOOLForKey:@"EnableStateDump"],
        v23,
        v24))
  {
    id v25 = &_dispatch_main_q;
    os_state_add_handler();
  }
  return a1;
}

void sub_1002F5044(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, std::recursive_mutex *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  __cxa_guard_abort(&qword_1008A9AE0);
  sub_10003E780((void *)(v38 + 128));
  std::recursive_mutex::~recursive_mutex(a13);

  _Unwind_Resume(a1);
}

void sub_1002F5398(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (v2)
  {
    uint64_t v3 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      uint64_t v4 = [v2 localizedDescription];
      int v6 = 138412290;
      uint64_t v7 = v4;
      _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "PRRangingManager::defaultErrorHandler %@", (uint8_t *)&v6, 0xCu);
    }
  }
  exceptiouint64_t n = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, "PRRangingManager::defaultErrorHandler");
}

void sub_1002F5474(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

char *sub_1002F54AC(uint64_t a1)
{
  uint64_t v1 = sub_1002F5504(*(void *)(a1 + 32));
  id v2 = sub_10002D834(@"PRRangingManager", v1);

  return v2;
}

void sub_1002F54F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1002F5504(uint64_t a1)
{
  __int16 v63 = objc_opt_new();
  std::recursive_mutex::lock((std::recursive_mutex *)(a1 + 64));
  uint64_t v3 = +[NSString stringWithFormat:@"Total ranging manager clients: %zu", *(void *)(a1 + 224)];
  [v63 addObject:v3];

  uint64_t v4 = *(void **)(a1 + 208);
  if (v4 != (void *)(a1 + 216))
  {
    do
    {
      uint64_t v5 = +[NSString stringWithFormat:@"    Client: H<%04x>", CUObfuscatedPtr()];
      [v63 addObject:v5];

      int v6 = (void *)v4[1];
      if (v6)
      {
        do
        {
          uint64_t v7 = v6;
          int v6 = (void *)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          uint64_t v7 = (void *)v4[2];
          BOOL v26 = *v7 == (void)v4;
          uint64_t v4 = v7;
        }
        while (!v26);
      }
      uint64_t v4 = v7;
    }
    while (v7 != (void *)(a1 + 216));
  }
  uint64_t v8 = +[NSString stringWithFormat:@"Total service requests: %zu", *(void *)(a1 + 256)];
  [v63 addObject:v8];

  for (uint64_t i = *(uint64_t ***)(a1 + 248); i; uint64_t i = (uint64_t **)*i)
  {
    uint64_t v10 = *((unsigned __int16 *)i + 8);
    uint64_t v11 = (std::__shared_weak_count *)i[4];
    if (v11) {
      atomic_fetch_add_explicit(&v11->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    uint64_t v12 = +[NSString stringWithFormat:@"    Ticket: %d. Client: H<%04x>", v10, CUObfuscatedPtr()];
    [v63 addObject:v12];

    if (v11) {
      sub_10001A970(v11);
    }
  }
  uint64_t v13 = +[NSString stringWithFormat:@"Clients holding service requests: %zu", *(void *)(a1 + 296)];
  context = v2;
  [v63 addObject:v13];

  uint64_t v62 = a1;
  for (uint64_t j = *(void **)(a1 + 288); j; uint64_t j = (void *)*j)
  {
    sub_1002FC780(&v64, j + 2);
    long long v15 = +[NSMutableString stringWithFormat:@"    Client: H<%04x> with %zu tickets: [", CUObfuscatedPtr(), v67[1]];
    uint64_t v16 = v66;
    if (v66 != v67)
    {
      do
      {
        if (v16 == v66) {
          CFStringRef v17 = @"%d";
        }
        else {
          CFStringRef v17 = @", %d";
        }
        [v15 appendFormat:v17, *((unsigned __int16 *)v16 + 13)];
        uint64_t v18 = v16[1];
        if (v18)
        {
          do
          {
            uint64_t v19 = (void **)v18;
            uint64_t v18 = (void *)*v18;
          }
          while (v18);
        }
        else
        {
          do
          {
            uint64_t v19 = (void **)v16[2];
            BOOL v26 = *v19 == v16;
            uint64_t v16 = v19;
          }
          while (!v26);
        }
        uint64_t v16 = v19;
      }
      while (v19 != v67);
    }
    [v15 appendString:@"]"];
    [v63 addObject:v15];

    sub_10003E96C((uint64_t)&v66, v67[0]);
    if (v65) {
      sub_10001A970(v65);
    }
  }
  std::recursive_mutex::unlock((std::recursive_mutex *)(a1 + 64));
  uint64_t v20 = objc_opt_new();
  sub_1001B949C(a1 + 3264, &v64);
  if (v86[119])
  {
    uint64_t v21 = +[NSString stringWithFormat:@"AOP timestamp: %llu us", v64];
    [v20 addObject:v21];

    uint64_t v22 = +[NSString stringWithFormat:@"DRAM assertion: %d", v68];
    [v20 addObject:v22];

    uint64_t v23 = v65;
    unsigned int v24 = +[NSString stringWithFormat:@"Total AOP jobs: %d", v65];
    [v20 addObject:v24];

    if (v23)
    {
      uint64_t v27 = (unsigned __int8 *)&v65 + 4;
      do
      {
        if (!v26 && v25)
        {
          id v28 = "Alisha_CCC";
          switch(*(v27 - 1))
          {
            case 'd':
              id v28 = "P2P";
              break;
            case 'e':
              id v28 = "PTS";
              break;
            case 'g':
              id v28 = "FiRa";
              break;
            case 'h':
              id v28 = "TestNMI";
              break;
            case 'i':
              id v28 = "NMI";
              break;
            case 'j':
              id v28 = "Alisha_ACWG";
              break;
            default:
              break;
          }
        }
        else
        {
          switch(*(v27 - 1))
          {
            case 0u:
              id v28 = "GRBroadcastingBeacon";
              break;
            case 1u:
              id v28 = "GRSingleResponseSurvey";
              break;
            case 2u:
              id v28 = "GRTranspondingBeacon";
              break;
            case 3u:
              id v28 = "GRDoubleResponseSurvey";
              break;
            case 4u:
              id v28 = "GRSymmetricalMultiPeer";
              break;
            case 5u:
              id v28 = "GRNoDataSymmetricalSinglePeer";
              break;
            default:
              JUMPOUT(0);
          }
        }
        __int16 v29 = +[NSString stringWithFormat:@"    Ticket: [%d]. Is ranging: [%u]. Type: [%s]", *(unsigned __int16 *)(v27 - 3), *v27, v28];
        [v20 addObject:v29];

        v27 += 4;
        BOOL v25 = v23-- != 0;
        BOOL v26 = v23 == 0;
      }
      while (v23);
    }
    uint64_t v30 = +[NSString stringWithFormat:@"Scheduler: has service handle %d", v69 & 1];
    [v20 addObject:v30];

    long long v31 = +[NSString stringWithFormat:@"    Task array: %d total, %d runnable, %d suspended, %d waiting trigger, %d waiting FW rsp", v70, v71, v72, v73, v74];
    [v20 addObject:v31];

    uint64_t v32 = +[NSString stringWithFormat:@"    Task lists: %d runnable, %d suspended, %d waiting trigger, %d waiting FW rsp", v75, v76, v77, v78];
    [v20 addObject:v32];

    if ((unint64_t)v80 > 3) {
      unint64_t v33 = "<Error: OutOfBounds>";
    }
    else {
      unint64_t v33 = off_100860778[v80];
    }
    uint64_t v34 = +[NSString stringWithFormat:@"SF manager: has PDR %d, IO activated %d, stationary timer %d, displacing state %s", v79 & 1, (v79 >> 1) & 1, (v79 >> 2) & 1, v33];
    [v20 addObject:v34];

    uint64_t v35 = v81 - v64;
    if (!v81) {
      uint64_t v35 = 0;
    }
    uint64_t v36 = +[NSString stringWithFormat:@"    Last IO data received: %llu us (dT: %lld us)", v81, v35];
    [v20 addObject:v36];

    uint64_t v37 = v82 - v64;
    if (!v82) {
      uint64_t v37 = 0;
    }
    uint64_t v38 = +[NSString stringWithFormat:@"    Last IO data processed: %llu us (dT: %lld us)", v82, v37];
    [v20 addObject:v38];

    uint64_t v39 = v83 - v64;
    if (!v83) {
      uint64_t v39 = 0;
    }
    uint64_t v40 = +[NSString stringWithFormat:@"    Last BT RSSI: received %llu us (dT: %lld us), conn handle 0x%04x, value %d dBm", v83, v39, v84, v85];
    [v20 addObject:v40];

    int32x4_t v41 = 0uLL;
    uint64_t v42 = 154;
    v43.i64[0] = 0x100000001;
    v43.i64[1] = 0x100000001;
    do
    {
      v44.i16[0] = *(_WORD *)((char *)&v64 + v42);
      v44.i16[1] = *(_WORD *)((char *)&v65 + v42 + 7);
      v44.i16[2] = *(_WORD *)((char *)v67 + v42 + 6);
      v44.i16[3] = *(_WORD *)((char *)&v67[2] + v42 + 5);
      int32x4_t v41 = vaddq_s32(v41, (int32x4_t)vandq_s8((int8x16_t)vmovl_u16((uint16x4_t)vmvn_s8((int8x8_t)vceq_s16(v44, (int16x4_t)-1))), v43));
      v42 += 60;
    }
    while (v42 != 274);
    uint64_t v45 = +[NSString stringWithFormat:@"    Num valid BT connections: %d", vaddvq_s32(v41)];
    [v20 addObject:v45];

    for (uint64_t k = 0; k != 120; k += 15)
    {
      uint64_t v47 = (char *)&v64 + k;
      uint64_t v48 = *(unsigned __int16 *)&v86[k];
      if (v48 != 0xFFFF)
      {
        uint64_t v49 = *(void *)(v47 + 156);
        uint64_t v50 = v49 - v64;
        if (!v49) {
          uint64_t v50 = 0;
        }
        unint64_t v51 = v47[165];
        uint64_t v52 = "OutOfBounds";
        if (v51 <= 2) {
          uint64_t v52 = off_1008607B8[v51];
        }
        unint64_t v53 = (char)v86[k + 12];
        long long v54 = "<Error: OutOfBounds>";
        if (v53 <= 3) {
          long long v54 = off_100860798[v53];
        }
        unint64_t v55 = (char)v86[k + 13];
        unsigned __int8 v56 = "OutOfBounds";
        if (v55 <= 2) {
          unsigned __int8 v56 = off_1008607B8[v55];
        }
        int v57 = +[NSString stringWithFormat:@"        [0x%04x] Job: %d. CfgEnbl: %d. RSSI: %d dBm @ %llu us (dT: %lld us). State: bubble %d, zone: %s. Dispatched: NI %s, BT %s", v48, v47[153] & 1, (v47[153] >> 1) & 1, v47[164], v49, v50, (v47[153] >> 2) & 1, v52, v54, v56];
        [v20 addObject:v57];
      }
    }
  }
  else
  {
    [v20 addObject:@"Could not get AOP activity report"];
  }
  uint64_t v58 = sub_1003072E0(v62 + 1072);
  v87[0] = @"Ranging Manager";
  v87[1] = @"AOP Activity Summary";
  v88[0] = v63;
  v88[1] = v20;
  v87[2] = @"Regulatory";
  v88[2] = v58;
  __int16 v59 = +[NSDictionary dictionaryWithObjects:v88 forKeys:v87 count:3];

  return v59;
}

void sub_1002F5E9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,std::recursive_mutex *a21,uint64_t a22,void *a23,char a24)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1002F603C(uint64_t a1)
{
  *(void *)a1 = off_10085FE30;
  *(void *)(a1 + 8) = off_10085FEE8;
  *(void *)(a1 + 16) = off_10085FF10;
  *(void *)(a1 + 24) = off_10085FF38;
  *(void *)(a1 + 32) = off_10085FF60;
  *(void *)(a1 + 40) = off_10085FF88;
  *(void *)(a1 + 48) = off_10085FFB0;
  id v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "~PRRangingManager", v8, 2u);
  }
  sub_1002C4B08((id *)(a1 + 6480));
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 6472);
  if (v3) {
    sub_10001A970(v3);
  }
  sub_1001B8BCC(a1 + 3264);
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 3256);
  if (v4) {
    sub_10001A970(v4);
  }
  sub_100304CC0(a1 + 1072);
  sub_1002F334C(a1 + 1008);
  sub_1002B8878((id *)(a1 + 912));

  sub_100186E50(a1 + 768);
  sub_10018AD28(a1 + 680);
  *(void *)(a1 + 592) = off_100853108;
  std::mutex::~mutex((std::mutex *)(a1 + 616));
  sub_100166DA8(a1 + 504);
  sub_100187014(a1 + 408);
  sub_100187CE0(a1 + 312);
  sub_1002FB6D8(a1 + 272);
  sub_10020E584(a1 + 232);
  sub_1002FB678(a1 + 208, *(void **)(a1 + 216));

  uint64_t v5 = *(std::__shared_weak_count **)(a1 + 184);
  if (v5) {
    sub_10001A970(v5);
  }
  int v6 = *(std::__shared_weak_count **)(a1 + 168);
  if (v6) {
    sub_10001A970(v6);
  }
  sub_10003E780((void *)(a1 + 128));
  std::recursive_mutex::~recursive_mutex((std::recursive_mutex *)(a1 + 64));

  return a1;
}

uint64_t sub_1002F6294(uint64_t a1)
{
  return sub_1002F603C(a1 - 8);
}

uint64_t sub_1002F629C(uint64_t a1)
{
  return sub_1002F603C(a1 - 16);
}

uint64_t sub_1002F62A4(uint64_t a1)
{
  return sub_1002F603C(a1 - 24);
}

uint64_t sub_1002F62AC(uint64_t a1)
{
  return sub_1002F603C(a1 - 32);
}

uint64_t sub_1002F62B4(uint64_t a1)
{
  return sub_1002F603C(a1 - 40);
}

uint64_t sub_1002F62BC(uint64_t a1)
{
  return sub_1002F603C(a1 - 48);
}

void sub_1002F62C4(uint64_t a1)
{
  sub_1002F603C(a1);

  operator delete();
}

void sub_1002F62FC(uint64_t a1)
{
  sub_1002F603C(a1 - 8);

  operator delete();
}

void sub_1002F6338(uint64_t a1)
{
  sub_1002F603C(a1 - 16);

  operator delete();
}

void sub_1002F6374(uint64_t a1)
{
  sub_1002F603C(a1 - 24);

  operator delete();
}

void sub_1002F63B0(uint64_t a1)
{
  sub_1002F603C(a1 - 32);

  operator delete();
}

void sub_1002F63EC(uint64_t a1)
{
  sub_1002F603C(a1 - 40);

  operator delete();
}

void sub_1002F6428(uint64_t a1)
{
  sub_1002F603C(a1 - 48);

  operator delete();
}

void *sub_1002F6464()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1008A9AA0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1008A9AA0))
  {
    sub_1002F456C((uint64_t)&unk_1008A8148);
    __cxa_atexit((void (*)(void *))sub_1002F6290, &unk_1008A8148, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1008A9AA0);
  }
  return &unk_1008A8148;
}

void sub_1002F64E8(_Unwind_Exception *a1)
{
}

void *sub_1002F6500(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 24)) {
    sub_10042DCB0();
  }
  id v2 = (void *)(a1 + 128);

  return sub_1002F6534(v2, a2);
}

void *sub_1002F6534(void *a1, uint64_t a2)
{
  sub_1002FBCE8((uint64_t)v4, a2);
  sub_1002FBD80(v4, a1);
  sub_10003E780(v4);
  return a1;
}

void sub_1002F65A8(std::recursive_mutex *a1, void *a2)
{
  id v3 = a2;
  std::recursive_mutex::lock(a1 + 1);
  sig = (void *)a1[3].__m_.__sig;
  a1[3].__m_.__sig = (uint64_t)v3;

  std::recursive_mutex::unlock(a1 + 1);
}

void sub_1002F6604(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1002F6614(uint64_t a1)
{
  id v2 = (std::recursive_mutex *)(a1 + 64);
  std::recursive_mutex::lock((std::recursive_mutex *)(a1 + 64));
  id v3 = *(id *)(a1 + 192);
  std::recursive_mutex::unlock(v2);

  return v3;
}

id sub_1002F6668(uint64_t a1)
{
  return sub_1002F6614(a1 - 40);
}

void sub_1002F6670(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
}

void sub_1002F6678(uint64_t a1@<X0>, unsigned int a2@<W1>, unsigned int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
}

void sub_1002F6680(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
}

void sub_1002F6688(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
}

uint64_t sub_1002F6690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BB0D0(a1 + 3264, a2, a3);
}

uint64_t sub_1002F6698(uint64_t a1, uint64_t a2)
{
  return sub_1001BB590(a1 + 3264, a2);
}

void sub_1002F66A0(uint64_t a1@<X0>, int a2@<W1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
}

uint64_t sub_1002F66A8(uint64_t a1, uint64_t a2)
{
  return sub_1001BAB54(a1 + 3264, a2);
}

uint64_t sub_1002F66B0(uint64_t a1, int a2)
{
  return sub_1001BAB7C(a1 + 3264, a2);
}

unint64_t sub_1002F66B8(uint64_t a1)
{
  return sub_1001BABA4(a1 + 3264);
}

uint64_t sub_1002F66C0(uint64_t a1, int a2)
{
  return sub_1001BA9FC(a1 + 3264, a2);
}

uint64_t sub_1002F66C8(uint64_t a1)
{
  return sub_1001BA3B8(a1 + 3264);
}

BOOL sub_1002F66D0(uint64_t a1, char a2, __int16 a3)
{
  return sub_1001BABD8(a1 + 3264, a2, a3);
}

BOOL sub_1002F66D8(uint64_t a1, int a2)
{
  return sub_1001BAD34(a1 + 3264, a2);
}

uint64_t sub_1002F66E0(uint64_t a1)
{
  int v3 = 8;
  __int16 v4 = 0;
  char v5 = 0;
  char v6 = 0;
  char v7 = 0;
  char v8 = 0;
  char v9 = 0;
  char v12 = 0;
  char v13 = 0;
  char v16 = 0;
  __int16 v17 = 0;
  char v18 = 0;
  char v19 = 0;
  __int16 v20 = 0;
  char v21 = 0;
  char v22 = 0;
  char v23 = 0;
  char v24 = 0;
  uint64_t v1 = sub_1001BB96C(a1 + 3264, (uint64_t)&v3);
  if (v16 && __p)
  {
    long long v15 = __p;
    operator delete(__p);
  }
  if (v12 && v10)
  {
    uint64_t v11 = v10;
    operator delete(v10);
  }
  return v1;
}

void sub_1002F67C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1002F67D4(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 200);
  int v3 = qword_1008ABDE0;
  BOOL v4 = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT);
  if (v2)
  {
    if (v4)
    {
      *(_WORD *)uint8_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "PRRangingManager::firstUnlockNotificationAction - unlock notification previously received. Ignore action.", buf, 2u);
    }
  }
  else
  {
    if (v4)
    {
      *(_WORD *)uint8_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "PRRangingManager::firstUnlockNotificationAction - this is the first notification received. Execute action.", buf, 2u);
    }
    *(unsigned char *)(a1 + 200) = 1;
    if (sub_1002222D8()) {
      sub_1001B8784(a1 + 3264);
    }
    sub_100305690(a1 + 1072);
    uint64_t v5 = *(void *)(a1 + 160);
    if (v5 && !sub_10029EFBC(v5))
    {
      char v6 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint8_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "fPbLogger protobuf exists but it's not open.", buf, 2u);
      }
      if ((sub_100293800(*(void *)(a1 + 160)) & 1) == 0
        && os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
      {
        sub_10042DD10();
      }
      char v7 = *(std::__shared_weak_count **)(a1 + 168);
      v10[0] = *(void *)(a1 + 160);
      v10[1] = (uint64_t)v7;
      if (v7) {
        atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      char v8 = sub_1002F69B0(v10);
      if (v7) {
        sub_10001A970(v7);
      }
      if ((v8 & 1) == 0 && os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
        sub_10042DCDC();
      }
    }
    uint64_t v9 = *(void *)(a1 + 6464);
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 88))(v9);
    }
  }
}

void sub_1002F6998(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_10001A970(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002F69B0(uint64_t *a1)
{
  if (*a1)
  {
    int v2 = sub_100221FF0();
    int v3 = sub_100222034();
    if (v2) {
      sub_100004950(&v7, (char *)[v2 UTF8String]);
    }
    else {
      sub_100004950(&v7, "UNKNOWN");
    }
    if (v3) {
      sub_100004950(&__p, (char *)[v3 UTF8String]);
    }
    else {
      sub_100004950(&__p, "UNKNOWN");
    }
    uint64_t v4 = sub_1002938BC(*a1, &v7, &__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v7.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042DD44();
    }
    return 0;
  }
  return v4;
}

void sub_1002F6AD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }

  _Unwind_Resume(a1);
}

void sub_1002F6B1C(uint64_t a1, uint64_t *a2)
{
  int v3 = (std::__shared_weak_count *)a2[1];
  if (v3)
  {
    uint64_t v5 = std::__shared_weak_count::lock(v3);
    if (v5)
    {
      uint64_t v6 = *a2;
      if (v6)
      {
        uint64_t v7 = (*(uint64_t (**)(void))(**(void **)(a1 + 6464) + 72))(*(void *)(a1 + 6464));
        char v8 = *(NSObject **)(a1 + 56);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3321888768;
        block[2] = sub_1002F6C58;
        block[3] = &unk_100860008;
        void block[4] = v6;
        uint64_t v10 = v5;
        atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v11 = v7;
        dispatch_async(v8, block);
        if (v10) {
          sub_10001A970(v10);
        }
LABEL_10:
        sub_10001A970(v5);
        return;
      }
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
    sub_10042DD78();
  }
  if (v5) {
    goto LABEL_10;
  }
}

void sub_1002F6C44(_Unwind_Exception *a1)
{
  sub_10001A970(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002F6C58(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(**(void **)(a1 + 32) + 88))(*(void *)(a1 + 32), *(unsigned int *)(a1 + 48), *(unsigned int *)(a1 + 52));
}

uint64_t sub_1002F6C88(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(result + 32) = *(void *)(a2 + 32);
  *(void *)(result + 40) = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_1002F6CA4(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 40);
  if (v1) {
    sub_10001A970(v1);
  }
}

uint64_t sub_1002F6CB4(uint64_t a1, uint64_t *a2)
{
  uint64_t v20 = 0;
  char v21 = 0;
  int v3 = (std::__shared_weak_count *)a2[1];
  if (v3 && (v21 = std::__shared_weak_count::lock(v3)) != 0 && (uint64_t v20 = *a2) != 0)
  {
    uint64_t v5 = (std::recursive_mutex *)(a1 + 64);
    std::recursive_mutex::lock((std::recursive_mutex *)(a1 + 64));
    (*(void (**)(void *__return_ptr))(**(void **)(a1 + 6464) + 40))(__src);
    if (LODWORD(__src[81]) != 1) {
      sub_1002FBFEC();
    }
    if (LOBYTE(__src[80]))
    {
      *(_WORD *)uint64_t v30 = __src[1];
      *(void *)uint8_t buf = &v20;
      uint64_t v6 = (uint64_t **)sub_1002FC03C(a1 + 272, &v20, (uint64_t)&unk_1004BC2F8, (void **)buf);
      sub_1002FC348(v6 + 4, (unsigned __int16 *)v30, v30);
      if (sub_10016F024((void *)(a1 + 232), (unsigned __int16 *)v30))
      {
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
          sub_10042DE54();
        }
        for (uint64_t i = *(uint64_t ***)(a1 + 248); i; uint64_t i = (uint64_t **)*i)
        {
          char v18 = qword_1008ABDE0;
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
          {
            int v19 = *((unsigned __int16 *)i + 8);
            *(_DWORD *)uint8_t buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = v19;
            _os_log_error_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "fRequestToClientMap contains ticket Id: %d", buf, 8u);
          }
        }
        __assert_rtn("registerForService", "PRRangingManager.mm", 342, "false");
      }
      *(void *)uint8_t buf = v30;
      uint64_t v7 = sub_1002FC404(a1 + 232, (unsigned __int16 *)v30, (uint64_t)&unk_1004BC2F8, (_WORD **)buf);
      uint64_t v9 = v20;
      char v8 = v21;
      if (v21) {
        atomic_fetch_add_explicit(&v21->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      uint64_t v10 = (std::__shared_weak_count *)v7[4];
      void v7[3] = v9;
      v7[4] = v8;
      if (v10) {
        sub_10001A970(v10);
      }
      sub_1001B944C(a1 + 3264);
      uint8_t v11 = v30[0];
      int v12 = v30[1];
      int v13 = 0x10000;
    }
    else
    {
      uint64_t v14 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        sub_1002F70F8(__src, buf);
        sub_10042DDE0((char *)buf, v30, v14);
      }

      long long v15 = *(NSObject **)(a1 + 56);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3321888768;
      block[2] = sub_1002F7140;
      block[3] = &unk_100860038;
      void block[4] = v20;
      char v23 = v21;
      atomic_fetch_add_explicit(&v21->__shared_owners_, 1uLL, memory_order_relaxed);
      memcpy(v24, __src, sizeof(v24));
      sub_1001750EC(v25, (uint64_t)&v32);
      dispatch_async(v15, block);
      if (v28 && v27 < 0) {
        operator delete(__p);
      }
      if (v23) {
        sub_10001A970(v23);
      }
      int v13 = 0;
      uint8_t v11 = 0;
      int v12 = 0;
    }
    if (v35 && v34 < 0) {
      operator delete(v33);
    }
    std::recursive_mutex::unlock(v5);
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042DDAC();
    }
    int v13 = 0;
    uint8_t v11 = 0;
    int v12 = 0;
  }
  if (v21) {
    sub_10001A970(v21);
  }
  return v13 & 0x10000 | v11 | (v12 << 8);
}

void sub_1002F7080(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (LOBYTE(STACK[0x5F0]) && SLOBYTE(STACK[0x5EF]) < 0) {
    operator delete((void *)STACK[0x5D8]);
  }
  std::recursive_mutex::unlock(v12);
  if (a12) {
    sub_10001A970(a12);
  }
  _Unwind_Resume(a1);
}

void *sub_1002F70F8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (!*((unsigned char *)result + 688)) {
    return sub_100004950(a2, "");
  }
  if (*((char *)result + 687) < 0) {
    return sub_100002DE4(a2, (void *)result[83], result[84]);
  }
  *(_OWORD *)a2 = *(_OWORD *)(result + 83);
  a2[2] = result[85];
  return result;
}

void sub_1002F7140(uint64_t a1)
{
  uint64_t v2 = (void *)(a1 + 48);
  if (*(unsigned char *)(a1 + 736)) {
    uint64_t v3 = *(void *)(a1 + 704);
  }
  else {
    uint64_t v3 = 1000;
  }
  uint64_t v4 = *(void *)(a1 + 32);
  sub_1002F70F8(v2, v5);
  uint64_t v7 = v3;
  if (SHIBYTE(v6) < 0)
  {
    sub_100002DE4(&__p, v5[0], (unint64_t)v5[1]);
  }
  else
  {
    long long __p = *(_OWORD *)v5;
    uint64_t v9 = v6;
  }
  (*(void (**)(uint64_t, uint64_t *))(*(void *)v4 + 104))(v4, &v7);
  if (SHIBYTE(v9) < 0) {
    operator delete((void *)__p);
  }
  if (SHIBYTE(v6) < 0) {
    operator delete(v5[0]);
  }
}

void sub_1002F7208(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

unsigned char *sub_1002F723C(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[5];
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  memcpy((void *)(a1 + 48), a2 + 6, 0x290uLL);
  return sub_1001750EC((unsigned char *)(a1 + 704), (uint64_t)(a2 + 88));
}

void sub_1002F7294(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 40);
  if (v3) {
    sub_10001A970(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002F72AC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 736) && *(char *)(a1 + 735) < 0) {
    operator delete(*(void **)(a1 + 712));
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 40);
  if (v2)
  {
    sub_10001A970(v2);
  }
}

BOOL sub_1002F7308(uint64_t a1, uint64_t *a2, unsigned int a3)
{
  uint64_t v6 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint8_t buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = a3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "unregisterForService with ticket id: %d", buf, 8u);
  }
  uint64_t v24 = 0;
  BOOL v25 = 0;
  uint64_t v7 = (std::__shared_weak_count *)a2[1];
  if (!v7 || (v25 = std::__shared_weak_count::lock(v7)) == 0 || (uint64_t v24 = *a2) == 0)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042DEBC();
    }
    BOOL v14 = 0;
    goto LABEL_23;
  }
  char v8 = (std::recursive_mutex *)(a1 + 64);
  std::recursive_mutex::lock((std::recursive_mutex *)(a1 + 64));
  uint64_t v9 = sub_1002FC658((void *)(a1 + 272), &v24);
  if (!v9)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042DEF0();
    }
    char v16 = *(NSObject **)(a1 + 56);
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3321888768;
    v22[2] = sub_1002F775C;
    v22[3] = &unk_100860068;
    void v22[4] = v24;
    char v23 = v25;
    if (v25) {
      atomic_fetch_add_explicit(&v25->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    dispatch_async(v16, v22);
    int v13 = v23;
    if (!v23) {
      goto LABEL_18;
    }
LABEL_17:
    sub_10001A970(v13);
LABEL_18:
    BOOL v14 = 0;
    goto LABEL_19;
  }
  uint64_t v10 = (uint64_t **)v9[5];
  if (!v10)
  {
LABEL_12:
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042DF24();
    }
    int v12 = *(NSObject **)(a1 + 56);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3321888768;
    block[2] = sub_1002F7848;
    block[3] = &unk_100860068;
    void block[4] = v24;
    char v21 = v25;
    if (v25) {
      atomic_fetch_add_explicit(&v25->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    dispatch_async(v12, block);
    int v13 = v21;
    if (!v21) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  while (1)
  {
    unsigned int v11 = *((unsigned __int16 *)v10 + 13);
    if (v11 <= a3) {
      break;
    }
LABEL_11:
    uint64_t v10 = (uint64_t **)*v10;
    if (!v10) {
      goto LABEL_12;
    }
  }
  if (v11 < a3)
  {
    ++v10;
    goto LABEL_11;
  }
  (*(void (**)(uint8_t *__return_ptr))(**(void **)(a1 + 6464) + 48))(buf);
  if (*(_DWORD *)&buf[648]) {
    sub_1002FBFEC();
  }
  BOOL v14 = buf[8] != 0;
  if (!buf[8])
  {
    __int16 v17 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
      sub_1002F70F8(buf, v19);
      sub_10042DF58();
    }

    char v18 = *(NSObject **)(a1 + 56);
    v26[0] = _NSConcreteStackBlock;
    v26[1] = 3321888768;
    void v26[2] = sub_1002F7934;
    v26[3] = &unk_100860038;
    void v26[4] = v24;
    char v27 = v25;
    if (v25) {
      atomic_fetch_add_explicit(&v25->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    memcpy(v28, buf, sizeof(v28));
    sub_1001750EC(v29, (uint64_t)&v34);
    dispatch_async(v18, v26);
    if (v32 && v31 < 0) {
      operator delete(__p);
    }
    if (v27) {
      sub_10001A970(v27);
    }
  }
  if (v37 && v36 < 0) {
    operator delete(v35);
  }
LABEL_19:
  std::recursive_mutex::unlock(v8);
LABEL_23:
  if (v25) {
    sub_10001A970(v25);
  }
  return v14;
}

void sub_1002F76E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,std::__shared_weak_count *a25)
{
  if (LOBYTE(STACK[0x640]) && SLOBYTE(STACK[0x63F]) < 0) {
    operator delete((void *)STACK[0x628]);
  }
  std::recursive_mutex::unlock(v25);
  if (a25) {
    sub_10001A970(a25);
  }
  _Unwind_Resume(a1);
}

void sub_1002F775C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_100004950(v2, "Client asked to cancel service, but has no registered requests.");
  uint64_t v4 = 113;
  if (SHIBYTE(v3) < 0)
  {
    sub_100002DE4(&__p, v2[0], (unint64_t)v2[1]);
  }
  else
  {
    long long __p = *(_OWORD *)v2;
    uint64_t v6 = v3;
  }
  (*(void (**)(uint64_t, uint64_t *))(*(void *)v1 + 104))(v1, &v4);
  if (SHIBYTE(v6) < 0) {
    operator delete((void *)__p);
  }
  if (SHIBYTE(v3) < 0) {
    operator delete(v2[0]);
  }
}

void sub_1002F7814(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002F7848(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_100004950(v2, "Client asked to cancel service with invalid ticket id.");
  uint64_t v4 = 108;
  if (SHIBYTE(v3) < 0)
  {
    sub_100002DE4(&__p, v2[0], (unint64_t)v2[1]);
  }
  else
  {
    long long __p = *(_OWORD *)v2;
    uint64_t v6 = v3;
  }
  (*(void (**)(uint64_t, uint64_t *))(*(void *)v1 + 104))(v1, &v4);
  if (SHIBYTE(v6) < 0) {
    operator delete((void *)__p);
  }
  if (SHIBYTE(v3) < 0) {
    operator delete(v2[0]);
  }
}

void sub_1002F7900(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002F7934(uint64_t a1)
{
  uint64_t v2 = (void *)(a1 + 48);
  if (*(unsigned char *)(a1 + 736)) {
    uint64_t v3 = *(void *)(a1 + 704);
  }
  else {
    uint64_t v3 = 1000;
  }
  uint64_t v4 = *(void *)(a1 + 32);
  sub_1002F70F8(v2, v5);
  uint64_t v7 = v3;
  if (SHIBYTE(v6) < 0)
  {
    sub_100002DE4(&__p, v5[0], (unint64_t)v5[1]);
  }
  else
  {
    long long __p = *(_OWORD *)v5;
    uint64_t v9 = v6;
  }
  (*(void (**)(uint64_t, uint64_t *))(*(void *)v4 + 104))(v4, &v7);
  if (SHIBYTE(v9) < 0) {
    operator delete((void *)__p);
  }
  if (SHIBYTE(v6) < 0) {
    operator delete(v5[0]);
  }
}

void sub_1002F79FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1002F7A30(uint64_t a1, uint64_t *a2, unsigned int a3)
{
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  uint64_t v4 = (std::__shared_weak_count *)a2[1];
  if (!v4 || (v24 = std::__shared_weak_count::lock(v4)) == 0 || (uint64_t v23 = *a2) == 0)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042DFA8();
    }
    BOOL v13 = 0;
    goto LABEL_21;
  }
  uint64_t v7 = (std::recursive_mutex *)(a1 + 64);
  std::recursive_mutex::lock((std::recursive_mutex *)(a1 + 64));
  char v8 = sub_1002FC658((void *)(a1 + 272), &v23);
  if (!v8)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042DFDC();
    }
    long long v15 = *(NSObject **)(a1 + 56);
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3321888768;
    void v21[2] = sub_1002F7E58;
    v21[3] = &unk_100860068;
    void v21[4] = v23;
    char v22 = v24;
    if (v24) {
      atomic_fetch_add_explicit(&v24->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    dispatch_async(v15, v21);
    int v12 = v22;
    if (!v22) {
      goto LABEL_16;
    }
LABEL_15:
    sub_10001A970(v12);
LABEL_16:
    BOOL v13 = 0;
    goto LABEL_17;
  }
  uint64_t v9 = (uint64_t **)v8[5];
  if (!v9)
  {
LABEL_10:
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042E010();
    }
    unsigned int v11 = *(NSObject **)(a1 + 56);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3321888768;
    block[2] = sub_1002F7F44;
    block[3] = &unk_100860068;
    void block[4] = v23;
    uint64_t v20 = v24;
    if (v24) {
      atomic_fetch_add_explicit(&v24->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    dispatch_async(v11, block);
    int v12 = v20;
    if (!v20) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
  while (1)
  {
    unsigned int v10 = *((unsigned __int16 *)v9 + 13);
    if (v10 <= a3) {
      break;
    }
LABEL_9:
    uint64_t v9 = (uint64_t **)*v9;
    if (!v9) {
      goto LABEL_10;
    }
  }
  if (v10 < a3)
  {
    ++v9;
    goto LABEL_9;
  }
  (*(void (**)(void *__return_ptr))(**(void **)(a1 + 6464) + 56))(__src);
  if (LODWORD(__src[81])) {
    sub_1002FBFEC();
  }
  BOOL v13 = LOBYTE(__src[1]) != 0;
  if (!LOBYTE(__src[1]))
  {
    char v16 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    {
      sub_1002F70F8(__src, v18);
      sub_10042E07C();
    }

    __int16 v17 = *(NSObject **)(a1 + 56);
    v25[0] = _NSConcreteStackBlock;
    v25[1] = 3321888768;
    void v25[2] = sub_1002F8030;
    void v25[3] = &unk_100860038;
    void v25[4] = v23;
    BOOL v26 = v24;
    if (v24) {
      atomic_fetch_add_explicit(&v24->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    memcpy(v27, __src, sizeof(v27));
    sub_1001750EC(v28, (uint64_t)&v33);
    dispatch_async(v17, v25);
    if (v31 && v30 < 0) {
      operator delete(__p);
    }
    if (v26) {
      sub_10001A970(v26);
    }
  }
  if (v36 && v35 < 0) {
    operator delete(v34);
  }
LABEL_17:
  std::recursive_mutex::unlock(v7);
LABEL_21:
  if (v24) {
    sub_10001A970(v24);
  }
  return v13;
}

void sub_1002F7DE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,std::__shared_weak_count *a25)
{
  if (LOBYTE(STACK[0x640]) && SLOBYTE(STACK[0x63F]) < 0) {
    operator delete((void *)STACK[0x628]);
  }
  std::recursive_mutex::unlock(v25);
  if (a25) {
    sub_10001A970(a25);
  }
  _Unwind_Resume(a1);
}

void sub_1002F7E58(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_100004950(v2, "Client asked to trigger service, but has no registered requests.");
  uint64_t v4 = 113;
  if (SHIBYTE(v3) < 0)
  {
    sub_100002DE4(&__p, v2[0], (unint64_t)v2[1]);
  }
  else
  {
    long long __p = *(_OWORD *)v2;
    uint64_t v6 = v3;
  }
  (*(void (**)(uint64_t, uint64_t *))(*(void *)v1 + 104))(v1, &v4);
  if (SHIBYTE(v6) < 0) {
    operator delete((void *)__p);
  }
  if (SHIBYTE(v3) < 0) {
    operator delete(v2[0]);
  }
}

void sub_1002F7F10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002F7F44(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_100004950(v2, "Client asked to trigger service with invalid ticket id.");
  uint64_t v4 = 108;
  if (SHIBYTE(v3) < 0)
  {
    sub_100002DE4(&__p, v2[0], (unint64_t)v2[1]);
  }
  else
  {
    long long __p = *(_OWORD *)v2;
    uint64_t v6 = v3;
  }
  (*(void (**)(uint64_t, uint64_t *))(*(void *)v1 + 104))(v1, &v4);
  if (SHIBYTE(v6) < 0) {
    operator delete((void *)__p);
  }
  if (SHIBYTE(v3) < 0) {
    operator delete(v2[0]);
  }
}

void sub_1002F7FFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002F8030(uint64_t a1)
{
  uint64_t v2 = (void *)(a1 + 48);
  if (*(unsigned char *)(a1 + 736)) {
    uint64_t v3 = *(void *)(a1 + 704);
  }
  else {
    uint64_t v3 = 1000;
  }
  uint64_t v4 = *(void *)(a1 + 32);
  sub_1002F70F8(v2, v5);
  uint64_t v7 = v3;
  if (SHIBYTE(v6) < 0)
  {
    sub_100002DE4(&__p, v5[0], (unint64_t)v5[1]);
  }
  else
  {
    long long __p = *(_OWORD *)v5;
    uint64_t v9 = v6;
  }
  (*(void (**)(uint64_t, uint64_t *))(*(void *)v4 + 104))(v4, &v7);
  if (SHIBYTE(v9) < 0) {
    operator delete((void *)__p);
  }
  if (SHIBYTE(v6) < 0) {
    operator delete(v5[0]);
  }
}

void sub_1002F80F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002F812C(uint64_t a1, uint64_t *a2, unsigned __int16 *a3)
{
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t v4 = (std::__shared_weak_count *)a2[1];
  if (!v4 || (uint64_t v23 = std::__shared_weak_count::lock(v4)) == 0 || (v22 = *a2) == 0)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042E0CC();
    }
    uint64_t v14 = 0;
    goto LABEL_22;
  }
  uint64_t v7 = (std::recursive_mutex *)(a1 + 64);
  std::recursive_mutex::lock((std::recursive_mutex *)(a1 + 64));
  char v8 = sub_1002FC658((void *)(a1 + 272), &v22);
  if (!v8)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042E100();
    }
    char v16 = *(NSObject **)(a1 + 56);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3321888768;
    block[2] = sub_1002F845C;
    block[3] = &unk_100860068;
    void block[4] = v22;
    char v21 = v23;
    if (v23) {
      atomic_fetch_add_explicit(&v23->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    dispatch_async(v16, block);
    BOOL v13 = v21;
    if (!v21) {
      goto LABEL_17;
    }
LABEL_16:
    sub_10001A970(v13);
LABEL_17:
    uint64_t v14 = 0;
    goto LABEL_18;
  }
  uint64_t v9 = (uint64_t **)v8[5];
  if (!v9)
  {
LABEL_11:
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042E134();
    }
    int v12 = *(NSObject **)(a1 + 56);
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3321888768;
    void v18[2] = sub_1002F8548;
    void v18[3] = &unk_100860068;
    __n128 v18[4] = v22;
    int v19 = v23;
    if (v23) {
      atomic_fetch_add_explicit(&v23->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    dispatch_async(v12, v18);
    BOOL v13 = v19;
    if (!v19) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  unsigned int v10 = *a3;
  while (1)
  {
    unsigned int v11 = *((unsigned __int16 *)v9 + 13);
    if (v10 >= v11) {
      break;
    }
LABEL_10:
    uint64_t v9 = (uint64_t **)*v9;
    if (!v9) {
      goto LABEL_11;
    }
  }
  if (v11 < v10)
  {
    ++v9;
    goto LABEL_10;
  }
  char v17 = *((unsigned char *)a3 + 2);
  int v24 = 7;
  __int16 v25 = 0;
  char v26 = 0;
  char v27 = 0;
  char v28 = 0;
  char v29 = 0;
  char v30 = 0;
  char v33 = 0;
  char v34 = 0;
  char v37 = 0;
  __int16 v38 = 0;
  __int16 v39 = v10;
  char v40 = v17;
  char v41 = 1;
  __int16 v42 = 0;
  char v43 = 0;
  char v44 = 0;
  char v45 = 0;
  char v46 = 0;
  uint64_t v14 = sub_1001BB96C(a1 + 3264, (uint64_t)&v24);
  if (v37 && __p)
  {
    char v36 = __p;
    operator delete(__p);
  }
  if (v33 && v31)
  {
    char v32 = v31;
    operator delete(v31);
  }
LABEL_18:
  std::recursive_mutex::unlock(v7);
LABEL_22:
  if (v23) {
    sub_10001A970(v23);
  }
  return v14;
}

void sub_1002F841C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, std::__shared_weak_count *a15, ...)
{
  va_start(va, a15);
  sub_100183548((uint64_t)va);
  std::recursive_mutex::unlock(v15);
  if (a15) {
    sub_10001A970(a15);
  }
  _Unwind_Resume(a1);
}

void sub_1002F845C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_100004950(v2, "Client asked to trigger service, but has no registered requests.");
  uint64_t v4 = 113;
  if (SHIBYTE(v3) < 0)
  {
    sub_100002DE4(&__p, v2[0], (unint64_t)v2[1]);
  }
  else
  {
    long long __p = *(_OWORD *)v2;
    uint64_t v6 = v3;
  }
  (*(void (**)(uint64_t, uint64_t *))(*(void *)v1 + 104))(v1, &v4);
  if (SHIBYTE(v6) < 0) {
    operator delete((void *)__p);
  }
  if (SHIBYTE(v3) < 0) {
    operator delete(v2[0]);
  }
}

void sub_1002F8514(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002F8548(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_100004950(v2, "Client asked to trigger service with invalid ticket id.");
  uint64_t v4 = 108;
  if (SHIBYTE(v3) < 0)
  {
    sub_100002DE4(&__p, v2[0], (unint64_t)v2[1]);
  }
  else
  {
    long long __p = *(_OWORD *)v2;
    uint64_t v6 = v3;
  }
  (*(void (**)(uint64_t, uint64_t *))(*(void *)v1 + 104))(v1, &v4);
  if (SHIBYTE(v6) < 0) {
    operator delete((void *)__p);
  }
  if (SHIBYTE(v3) < 0) {
    operator delete(v2[0]);
  }
}

void sub_1002F8600(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1002F8634(uint64_t a1, uint64_t *a2, unsigned int a3)
{
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  uint64_t v4 = (std::__shared_weak_count *)a2[1];
  if (v4 && (uint64_t v22 = std::__shared_weak_count::lock(v4)) != 0 && (v21 = *a2) != 0)
  {
    uint64_t v7 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint8_t buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = a3;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "stopUserTriggeredRanging! Ticket: %d", buf, 8u);
    }
    char v8 = (std::recursive_mutex *)(a1 + 64);
    std::recursive_mutex::lock((std::recursive_mutex *)(a1 + 64));
    uint64_t v9 = sub_1002FC658((void *)(a1 + 272), &v21);
    if (v9)
    {
      unsigned int v10 = (uint64_t **)v9[5];
      if (!v10)
      {
LABEL_12:
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
          sub_10042E1D0();
        }
        int v12 = *(NSObject **)(a1 + 56);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3321888768;
        block[2] = sub_1002F8A34;
        block[3] = &unk_100860068;
        void block[4] = v21;
        uint64_t v20 = v22;
        if (v22) {
          atomic_fetch_add_explicit(&v22->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        dispatch_async(v12, block);
        if (v20) {
          sub_10001A970(v20);
        }
        BOOL v13 = 0;
        goto LABEL_25;
      }
      while (1)
      {
        unsigned int v11 = *((unsigned __int16 *)v10 + 13);
        if (v11 <= a3)
        {
          if (v11 >= a3)
          {
            (*(void (**)(uint8_t *__return_ptr))(**(void **)(a1 + 6464) + 64))(buf);
            if (*(_DWORD *)&buf[648]) {
              sub_1002FBFEC();
            }
            BOOL v13 = buf[8] != 0;
            if (!buf[8])
            {
              char v16 = (id)qword_1008ABDE0;
              if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
              {
                sub_1002F70F8(buf, v18);
                sub_10042E204();
              }

              char v17 = *(NSObject **)(a1 + 56);
              v23[0] = _NSConcreteStackBlock;
              v23[1] = 3321888768;
              void v23[2] = sub_1002F8B20;
              void v23[3] = &unk_100860038;
              void v23[4] = v21;
              int v24 = v22;
              if (v22) {
                atomic_fetch_add_explicit(&v22->__shared_owners_, 1uLL, memory_order_relaxed);
              }
              memcpy(v25, buf, sizeof(v25));
              sub_1001750EC(v26, (uint64_t)&v31);
              dispatch_async(v17, v23);
              if (v29 && v28 < 0) {
                operator delete(__p);
              }
              if (v24) {
                sub_10001A970(v24);
              }
            }
            if (v34 && v33 < 0) {
              operator delete(v32);
            }
            goto LABEL_25;
          }
          ++v10;
        }
        unsigned int v10 = (uint64_t **)*v10;
        if (!v10) {
          goto LABEL_12;
        }
      }
    }
    uint64_t v14 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint8_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "Client asked to stop service, but has no registered requests. Ignoring.", buf, 2u);
    }
    BOOL v13 = 1;
LABEL_25:
    std::recursive_mutex::unlock(v8);
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10042E19C();
    }
    BOOL v13 = 0;
  }
  if (v22) {
    sub_10001A970(v22);
  }
  return v13;
}

void sub_1002F89C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, std::__shared_weak_count *a19)
{
  if (LOBYTE(STACK[0x610]) && SLOBYTE(STACK[0x60F]) < 0) {
    operator delete((void *)STACK[0x5F8]);
  }
  std::recursive_mutex::unlock(v19);
  if (a19) {
    sub_10001A970(a19);
  }
  _Unwind_Resume(a1);
}

void sub_1002F8A34(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_100004950(v2, "Client asked to stop service with invalid ticket id.");
  uint64_t v4 = 108;
  if (SHIBYTE(v3) < 0)
  {
    sub_100002DE4(&__p, v2[0], (unint64_t)v2[1]);
  }
  else
  {
    long long __p = *(_OWORD *)v2;
    uint64_t v6 = v3;
  }
  (*(void (**)(uint64_t, uint64_t *))(*(void *)v1 + 104))(v1, &v4);
  if (SHIBYTE(v6) < 0) {
    operator delete((void *)__p);
  }
  if (SHIBYTE(v3) < 0) {
    operator delete(v2[0]);
  }
}

void sub_1002F8AEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002F8B20(uint64_t a1)
{
  uint64_t v2 = (void *)(a1 + 48);
  if (*(unsigned char *)(a1 + 736)) {
    uint64_t v3 = *(void *)(a1 + 704);
  }
  else {
    uint64_t v3 = 1000;
  }
  uint64_t v4 = *(void *)(a1 + 32);
  sub_1002F70F8(v2, v5);
  uint64_t v7 = v3;
  if (SHIBYTE(v6) < 0)
  {
    sub_100002DE4(&__p, v5[0], (unint64_t)v5[1]);
  }
  else
  {
    long long __p = *(_OWORD *)v5;
    uint64_t v9 = v6;
  }
  (*(void (**)(uint64_t, uint64_t *))(*(void *)v4 + 104))(v4, &v7);
  if (SHIBYTE(v9) < 0) {
    operator delete((void *)__p);
  }
  if (SHIBYTE(v6) < 0) {
    operator delete(v5[0]);
  }
}

void sub_1002F8BE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002F8C1C(uint64_t a1, uint64_t a2)
{
  return sub_1001BC908(a1 + 3264, a2);
}

uint64_t sub_1002F8C24(uint64_t a1, uint64_t a2)
{
  return sub_1001BC908(a1 + 3232, a2);
}

void sub_1002F8C2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 24)) {
    sub_10042E254();
  }
  uint64_t v6 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint8_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "PRRangingManager::pushBeaconAllowlist ++", buf, 2u);
  }
  if (*(void *)(a2 + 8) == *(void *)a2)
  {
    v14[0] = NSLocalizedDescriptionKey;
    v14[1] = NSLocalizedFailureReasonErrorKey;
    v15[0] = @"Failed to push beacon allowlist.";
    v15[1] = @"To allowlist, must specify at least one beacon.";
    unsigned int v10 = +[NSDictionary dictionaryWithObjects:v15 forKeys:v14 count:2];
    PRErrorWithCodeAndUserInfo(107, v10);
    id v8 = (id)objc_claimAutoreleasedReturnValue();

    sub_1002F8DFC(a3, v8);
  }
  else
  {
    id v12 = 0;
    BOOL v7 = sub_1001BCB8C(a1 + 3264, (int **)a2, &v12);
    id v8 = v12;
    if (v7)
    {
      uint64_t v9 = 0;
    }
    else
    {
      BOOL v11 = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR);
      uint64_t v9 = v8;
      if (v11)
      {
        sub_10042E280();
        uint64_t v9 = v8;
      }
    }
    sub_1002F8DFC(a3, v9);
  }
}

void sub_1002F8DD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002F8DFC(uint64_t a1, void *a2)
{
  id v4 = a2;
  uint64_t v3 = *(void *)(a1 + 24);
  if (!v3) {
    sub_100027894();
  }
  (*(void (**)(uint64_t, id *))(*(void *)v3 + 48))(v3, &v4);
}

void sub_1002F8E6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1002F8E80(uint64_t a1, uint64_t a2)
{
  long long __p = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  id v7 = 0;
  BOOL v3 = sub_1001BCB8C(a1 + 3264, (int **)&__p, &v7);
  id v4 = v7;
  if (__p)
  {
    uint64_t v9 = __p;
    operator delete(__p);
  }
  if (v3)
  {
    uint64_t v5 = 0;
  }
  else
  {
    BOOL v6 = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR);
    uint64_t v5 = v4;
    if (v6)
    {
      sub_10042E2B4();
      uint64_t v5 = v4;
    }
  }
  sub_1002F8DFC(a2, v5);
}

void sub_1002F8F34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1002F8F5C(uint64_t a1)
{
  return sub_1002B9BCC(a1 + 912);
}

uint64_t sub_1002F8F64(std::recursive_mutex *a1, uint64_t *a2)
{
  id v4 = a1 + 1;
  std::recursive_mutex::lock(a1 + 1);
  uint64_t v5 = sub_100307180((uint64_t)&a1[16].__m_.__opaque[40], a2);
  std::recursive_mutex::unlock(v4);
  return v5;
}

void sub_1002F8FB8(_Unwind_Exception *a1)
{
  std::recursive_mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002F8FCC(uint64_t a1, uint64_t *a2)
{
  return sub_1002F8F64((std::recursive_mutex *)(a1 - 48), a2);
}

id sub_1002F8FD4(std::recursive_mutex *a1, uint64_t a2)
{
  id v4 = a1 + 1;
  std::recursive_mutex::lock(a1 + 1);
  id v5 = sub_10030725C((uint64_t)&a1[16].__m_.__opaque[40], a2);
  std::recursive_mutex::unlock(v4);
  return v5;
}

void sub_1002F9028(_Unwind_Exception *a1)
{
  std::recursive_mutex::unlock(v1);
  _Unwind_Resume(a1);
}

id sub_1002F903C(uint64_t a1, uint64_t a2)
{
  return sub_1002F8FD4((std::recursive_mutex *)(a1 - 48), a2);
}

id sub_1002F9044(std::recursive_mutex *a1)
{
  uint64_t v2 = a1 + 1;
  std::recursive_mutex::lock(a1 + 1);
  id v3 = sub_1003072D0((uint64_t)&a1[16].__m_.__opaque[40]);
  std::recursive_mutex::unlock(v2);
  return v3;
}

void sub_1002F9088(_Unwind_Exception *a1)
{
  std::recursive_mutex::unlock(v1);
  _Unwind_Resume(a1);
}

id sub_1002F909C(uint64_t a1)
{
  return sub_1002F9044((std::recursive_mutex *)(a1 - 48));
}

uint64_t sub_1002F90A4(std::recursive_mutex *a1)
{
  uint64_t v2 = a1 + 1;
  std::recursive_mutex::lock(a1 + 1);
  uint64_t v3 = sub_1003065A8((uint64_t)&a1[16].__m_.__opaque[40]);
  std::recursive_mutex::unlock(v2);
  return v3;
}

void sub_1002F90E8(_Unwind_Exception *a1)
{
  std::recursive_mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002F90FC(uint64_t a1)
{
  return sub_1002F90A4((std::recursive_mutex *)(a1 - 48));
}

uint64_t sub_1002F9104(std::recursive_mutex *a1)
{
  uint64_t v2 = a1 + 1;
  std::recursive_mutex::lock(a1 + 1);
  uint64_t v3 = sub_10030669C((uint64_t)&a1[16].__m_.__opaque[40]);
  std::recursive_mutex::unlock(v2);
  return v3;
}

void sub_1002F9148(_Unwind_Exception *a1)
{
  std::recursive_mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002F915C(uint64_t a1)
{
  return sub_1002F9104((std::recursive_mutex *)(a1 - 48));
}

uint64_t sub_1002F9164(uint64_t a1)
{
  return sub_1001B8C90(a1 + 3264);
}

uint64_t sub_1002F916C(uint64_t a1)
{
  return sub_1001B8D34(a1 + 3264);
}

uint64_t sub_1002F9174(uint64_t a1, uint64_t a2)
{
  return sub_1001B8D3C(a1 + 3264, a2);
}

void sub_1002F917C(uint64_t a1, void *a2)
{
}

uint64_t sub_1002F9184(uint64_t a1, uint64_t a2, std::string::size_type a3)
{
  BOOL v6 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    sub_1003DDC18(a2, __p);
    if (v11 >= 0) {
      id v7 = __p;
    }
    else {
      id v7 = (void **)__p[0];
    }
    if (*(char *)(a3 + 23) >= 0) {
      std::string::size_type v8 = a3;
    }
    else {
      std::string::size_type v8 = *(void *)a3;
    }
    *(_DWORD *)uint8_t buf = 136315394;
    BOOL v13 = v7;
    __int16 v14 = 2080;
    std::string::size_type v15 = v8;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "[Diagnostics] Client triggered log collection. Type: %s, Reason: %s", buf, 0x16u);
    if (v11 < 0) {
      operator delete(__p[0]);
    }
  }

  return sub_1001B89A0(a1 + 3264, a2, a3);
}

void sub_1002F92A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002F92BC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
}

uint64_t sub_1002F92C4(uint64_t a1, BOOL *a2)
{
  return sub_1001B8E98(a1 + 3264, a2);
}

uint64_t sub_1002F92CC(uint64_t a1, int a2)
{
  return sub_1001B8EA8(a1 + 3264, a2);
}

uint64_t sub_1002F92D4(uint64_t a1, unsigned char *a2)
{
  return sub_1001B8EA0(a1 + 3264, a2);
}

CFDataRef sub_1002F92DC(uint64_t a1)
{
  return sub_1001B9008(a1 + 3264);
}

uint64_t sub_1002F92E4(uint64_t a1)
{
  uint64_t v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#deep-slp PRRangingManager getDeepSleepState", v4, 2u);
  }
  return sub_1001BAE80(a1 + 3264);
}

uint64_t sub_1002F9358(uint64_t a1)
{
  return sub_1001BB0C8(a1 + 3264);
}

void sub_1002F9364(uint64_t a1, uint64_t a2)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 56));
  kdebug_trace();
  sub_1002F963C(a1, *(_WORD *)(a2 + 36), &v4);
  if (v4)
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)v4 + 16))(v4, a2);
    kdebug_trace();
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_10042E2E8();
  }
  if (v5) {
    sub_10001A970(v5);
  }
}

void sub_1002F9458(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_10001A970(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1002F9474(uint64_t a1, _OWORD *a2)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 56));
  uint64_t v4 = (char *)operator new(0xB8uLL);
  long long v5 = a2[6];
  *(_OWORD *)(v4 + 120) = a2[7];
  long long v6 = a2[9];
  *(_OWORD *)(v4 + 136) = a2[8];
  *(_OWORD *)(v4 + 152) = v6;
  *(_OWORD *)(v4 + 168) = a2[10];
  long long v7 = a2[2];
  *(_OWORD *)(v4 + 56) = a2[3];
  long long v8 = a2[5];
  *(_OWORD *)(v4 + 72) = a2[4];
  *(_OWORD *)(v4 + 88) = v8;
  *(_OWORD *)(v4 + 104) = v5;
  long long v9 = a2[1];
  *(_OWORD *)(v4 + 8) = *a2;
  *(_OWORD *)(v4 + 24) = v9;
  *(void *)uint64_t v4 = off_100860628;
  *(_OWORD *)(v4 + 40) = v7;
  v11[3] = v4;
  sub_1002F991C(a1, (uint64_t)v11);
  return sub_1002FC950(v11);
}

void sub_1002F9554(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1002FC950((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_1002F9568(uint64_t a1, uint64_t a2)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 56));
  sub_1002F963C(a1, *(_WORD *)(a2 + 4), &v4);
  if (v4)
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)v4 + 32))(v4, a2);
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_10042E354();
  }
  if (v5) {
    sub_10001A970(v5);
  }
}

void sub_1002F9624(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_10001A970(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002F963C(uint64_t a1@<X0>, unsigned __int16 a2@<W1>, void *a3@<X8>)
{
  unsigned __int16 v8 = a2;
  long long v5 = (std::recursive_mutex *)(a1 + 64);
  std::recursive_mutex::lock((std::recursive_mutex *)(a1 + 64));
  long long v6 = sub_10016F024((void *)(a1 + 232), &v8);
  if (v6)
  {
    long long v7 = v6[4];
    *a3 = v6[3];
    a3[1] = v7;
    if (v7) {
      atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
    }
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
  }
  std::recursive_mutex::unlock(v5);
}

void sub_1002F96B8(_Unwind_Exception *a1)
{
  std::recursive_mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1002F96CC(uint64_t a1, unsigned __int16 *a2)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 56));
  sub_1002F963C(a1, *a2, &v4);
  if (v4)
  {
    (*(void (**)(uint64_t, unsigned __int16 *))(*(void *)v4 + 48))(v4, a2);
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_10042E3C0();
  }
  if (v5) {
    sub_10001A970(v5);
  }
}

void sub_1002F977C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_10001A970(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002F9794(uint64_t a1, uint64_t a2)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 56));
  sub_1002F963C(a1, *(_WORD *)(a2 + 24), &v4);
  if (v4)
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)v4 + 40))(v4, a2);
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_10042E428();
  }
  if (v5) {
    sub_10001A970(v5);
  }
}

void sub_1002F9850(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_10001A970(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1002F9868(uint64_t a1, int *a2)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 56));
  int v4 = *a2;
  long long v6 = off_100860498;
  int v7 = v4;
  unsigned __int16 v8 = &v6;
  sub_1002F991C(a1, (uint64_t)&v6);
  return sub_1002FC950(&v6);
}

void sub_1002F9908(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1002FC950((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_1002F991C(uint64_t a1, uint64_t a2)
{
  int v4 = (std::recursive_mutex *)(a1 + 64);
  std::recursive_mutex::lock((std::recursive_mutex *)(a1 + 64));
  if (!*(void *)(a1 + 224))
  {
    long long v5 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "forEachClientWithFunction but no registered clients.", v7, 2u);
    }
  }
  long long v6 = *(void **)(a1 + 208);
  sub_1002FD12C((uint64_t)v8, a2);
  sub_1002FAA24(v6, (void *)(a1 + 216), (uint64_t)v8, (uint64_t)v9);
  sub_1002FC950(v9);
  sub_1002FC950(v8);
  std::recursive_mutex::unlock(v4);
}

void sub_1002F9A10(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1002FC950((uint64_t *)va);
  std::recursive_mutex::unlock(v2);
  _Unwind_Resume(a1);
}

void sub_1002F9A34(uint64_t a1, unsigned __int16 *a2)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 56));
  sub_1002F963C(a1, *a2, &v4);
  if (v4)
  {
    (*(void (**)(uint64_t, unsigned __int16 *))(*(void *)v4 + 56))(v4, a2);
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_10042E490();
  }
  if (v5) {
    sub_10001A970(v5);
  }
}

void sub_1002F9AE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_10001A970(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002F9AFC(uint64_t a1, unsigned __int16 *a2)
{
}

void sub_1002F9B04(uint64_t a1, unsigned __int16 *a2)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 56));
  sub_1002F963C(a1, *a2, &v4);
  if (v4)
  {
    (*(void (**)(uint64_t, unsigned __int16 *))(*(void *)v4 + 64))(v4, a2);
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_10042E4F8();
  }
  if (v5) {
    sub_10001A970(v5);
  }
}

void sub_1002F9BB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_10001A970(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002F9BCC(uint64_t a1, unsigned __int16 *a2)
{
}

void *sub_1002F9BD4(uint64_t a1, uint64_t a2)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 56));
  v5[0] = off_100860528;
  v5[1] = a2;
  void v5[3] = v5;
  sub_1002F991C(a1, (uint64_t)v5);
  return sub_1002FC950(v5);
}