wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100109E38(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v3;
  int v5;
  char v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  unsigned int *v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  unsigned char *v11;
  unsigned int *v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  unsigned char *v14;
  void *v15;
  wireless_diagnostics::google::protobuf::internal::WireFormat *v16;
  void *v17;
  uint64_t vars8;

  v3 = a2;
  v5 = *((_DWORD *)this + 11);
  if (v5)
  {
    v6 = *((unsigned char *)this + 16);
    *(unsigned char *)a2 = 8;
    *((unsigned char *)a2 + 1) = v6;
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    v5 = *((_DWORD *)this + 11);
  }
  if ((v5 & 2) != 0)
  {
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    *(unsigned char *)v3 = 16;
    if (v7 > 0x7F)
    {
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v7;
      v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  v8 = *((_DWORD *)this + 11);
  if ((v8 & 4) != 0)
  {
    v9 = (unsigned int *)*((void *)this + 3);
    if (!v9) {
      v9 = *(unsigned int **)(qword_1008AC288 + 24);
    }
    *(unsigned char *)v3 = 26;
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9[21];
    if (v10 > 0x7F)
    {
      v11 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v10;
      v11 = (char *)v3 + 2;
    }
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100108E64((wireless_diagnostics::google::protobuf::internal::WireFormat *)v9, v11, a3);
    v8 = *((_DWORD *)this + 11);
  }
  if ((v8 & 8) != 0)
  {
    v12 = (unsigned int *)*((void *)this + 4);
    if (!v12) {
      v12 = *(unsigned int **)(qword_1008AC288 + 32);
    }
    *(unsigned char *)v3 = 34;
    v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v12[21];
    if (v13 > 0x7F)
    {
      v14 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v13;
      v14 = (char *)v3 + 2;
    }
    v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100108E64((wireless_diagnostics::google::protobuf::internal::WireFormat *)v12, v14, a3);
  }
  v17 = (void *)*((void *)this + 1);
  v16 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v15 = v17;
  if (!v17 || *v15 == v15[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v16, v3, a3);
}

uint64_t sub_100109F90(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 44);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_23;
  }
  uint64_t v4 = 2 * (v3 & 1u);
  if ((v3 & 2) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v5 >= 0x80)
    {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 44);
    }
    else
    {
      int v6 = 2;
    }
    uint64_t v4 = (v6 + v4);
    if ((v3 & 4) == 0)
    {
LABEL_4:
      if ((v3 & 8) == 0) {
        goto LABEL_23;
      }
      goto LABEL_17;
    }
  }
  else if ((v3 & 4) == 0)
  {
    goto LABEL_4;
  }
  v7 = *(unsigned int **)(a1 + 24);
  if (!v7) {
    v7 = *(unsigned int **)(qword_1008AC288 + 24);
  }
  v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001091B0(v7, a2);
  int v9 = (int)v8;
  if (v8 >= 0x80) {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
  }
  else {
    int v10 = 1;
  }
  uint64_t v4 = (v4 + v9 + v10 + 1);
  if ((*(_DWORD *)(a1 + 44) & 8) != 0)
  {
LABEL_17:
    v11 = *(unsigned int **)(a1 + 32);
    if (!v11) {
      v11 = *(unsigned int **)(qword_1008AC288 + 32);
    }
    v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001091B0(v11, a2);
    int v13 = (int)v12;
    if (v12 >= 0x80) {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
    }
    else {
      int v14 = 1;
    }
    uint64_t v4 = (v4 + v13 + v14 + 1);
  }
LABEL_23:
  v15 = *(void **)(a1 + 8);
  if (v15 && *v15 != v15[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 40) = v4;
  return v4;
}

uint64_t sub_10010A0B8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100109550((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10010A18C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010A1A4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10010A230()
{
  return 1;
}

uint64_t sub_10010A238()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1198;
}

void sub_10010A2CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010A2E0(uint64_t a1)
{
  *(void *)a1 = off_10084ED50;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 60) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return a1;
}

void sub_10010A334(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10010A348(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  int v4 = *(_DWORD *)(a2 + 72);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    int v10 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 72) |= 1u;
    *(_DWORD *)(a1 + 16) = v10;
    int v4 = *(_DWORD *)(a2 + 72);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_25;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v11 = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 72) |= 2u;
  *(_DWORD *)(a1 + 20) = v11;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  int v12 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 72) |= 4u;
  *(_DWORD *)(a1 + 24) = v12;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  int v13 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 72) |= 8u;
  *(_DWORD *)(a1 + 28) = v13;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_28:
    int v15 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 72) |= 0x20u;
    *(_DWORD *)(a1 + 36) = v15;
    int v4 = *(_DWORD *)(a2 + 72);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_27:
  int v14 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 72) |= 0x10u;
  *(_DWORD *)(a1 + 32) = v14;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_29:
  int v16 = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 72) |= 0x40u;
  *(_DWORD *)(a1 + 64) = v16;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    uint64_t v5 = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 72) |= 0x80u;
    *(void *)(a1 + 40) = v5;
    int v4 = *(_DWORD *)(a2 + 72);
  }
LABEL_13:
  if ((v4 & 0xFF00) != 0)
  {
    if ((v4 & 0x100) != 0)
    {
      uint64_t v6 = *(void *)(a2 + 48);
      *(_DWORD *)(a1 + 72) |= 0x100u;
      *(void *)(a1 + 48) = v6;
      int v4 = *(_DWORD *)(a2 + 72);
    }
    if ((v4 & 0x200) != 0)
    {
      *(_DWORD *)(a1 + 72) |= 0x200u;
      v7 = *(_DWORD **)(a1 + 56);
      if (!v7) {
        operator new();
      }
      uint64_t v8 = *(void *)(a2 + 56);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_1008AC290 + 56);
      }
      sub_100107248(v7, v8);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10010A554()
{
}

void sub_10010A58C(void *a1)
{
  *a1 = off_10084ED50;
  if ((void *)qword_1008AC290 != a1)
  {
    uint64_t v2 = a1[7];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10010A624(void *a1)
{
  sub_10010A58C(a1);

  operator delete();
}

uint64_t sub_10010A65C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 68) = a2;
  return result;
}

void sub_10010A664()
{
}

void sub_10010A6A4()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10010A6C8(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  v1 = this;
  int v2 = *((_DWORD *)this + 18);
  if ((_BYTE)v2)
  {
    *((_DWORD *)this + 16) = 0;
    *((_OWORD *)this + 1) = 0u;
    *((_OWORD *)this + 2) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *((void *)this + 6) = 0;
    if ((v2 & 0x200) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)this + 7);
      if (this) {
        this = sub_100107440((uint64_t)this);
      }
    }
  }
  uint64_t v4 = *((void *)v1 + 1);
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v3 + 16) = 0;
  if (v4)
  {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return this;
}

uint64_t sub_10010A748(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (unint64_t *)(a1 + 40);
  v7 = (unint64_t *)(a1 + 48);
  unsigned int v8 = a1 + 8;
  while (2)
  {
    int v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if (v11 != 5) {
          goto LABEL_53;
        }
        unsigned int v36 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v36) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 16) = v36;
        *(_DWORD *)(a1 + 72) |= 1u;
        int v12 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 != 21) {
          continue;
        }
        *((void *)this + 1) = v12 + 1;
        goto LABEL_15;
      case 2u:
        int v11 = TagFallback & 7;
        if (v11 != 5) {
          goto LABEL_53;
        }
LABEL_15:
        unsigned int v36 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v36) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 20) = v36;
        *(_DWORD *)(a1 + 72) |= 2u;
        int v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 != 29) {
          continue;
        }
        *((void *)this + 1) = v13 + 1;
LABEL_20:
        unsigned int v36 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v36) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 24) = v36;
        *(_DWORD *)(a1 + 72) |= 4u;
        int v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 != 37) {
          continue;
        }
        *((void *)this + 1) = v14 + 1;
LABEL_25:
        unsigned int v36 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v36) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 28) = v36;
        *(_DWORD *)(a1 + 72) |= 8u;
        int v15 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 != 45) {
          continue;
        }
        *((void *)this + 1) = v15 + 1;
LABEL_30:
        unsigned int v36 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v36) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 32) = v36;
        *(_DWORD *)(a1 + 72) |= 0x10u;
        int v16 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v16 >= *((void *)this + 2) || *v16 != 53) {
          continue;
        }
        *((void *)this + 1) = v16 + 1;
LABEL_35:
        unsigned int v36 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v36) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 36) = v36;
        *(_DWORD *)(a1 + 72) |= 0x20u;
        v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 61) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
LABEL_40:
        unsigned int v36 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v36) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 64) = v36;
        *(_DWORD *)(a1 + 72) |= 0x40u;
        v19 = (unsigned char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        if ((unint64_t)v19 >= v18 || *v19 != 64) {
          continue;
        }
        v20 = v19 + 1;
        *((void *)this + 1) = v20;
LABEL_46:
        if ((unint64_t)v20 >= v18 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!result) {
            return result;
          }
          v21 = (unsigned char *)*((void *)this + 1);
          unint64_t v18 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v6 = *v20;
          v21 = v20 + 1;
          *((void *)this + 1) = v21;
        }
        *(_DWORD *)(a1 + 72) |= 0x80u;
        if ((unint64_t)v21 >= v18 || *v21 != 72) {
          continue;
        }
        v22 = v21 + 1;
        *((void *)this + 1) = v22;
LABEL_61:
        if ((unint64_t)v22 >= v18 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v7);
          if (!result) {
            return result;
          }
          v25 = (unsigned char *)*((void *)this + 1);
          unint64_t v18 = *((void *)this + 2);
        }
        else
        {
          unint64_t *v7 = *v22;
          v25 = v22 + 1;
          *((void *)this + 1) = v25;
        }
        int v23 = *(_DWORD *)(a1 + 72) | 0x100;
        *(_DWORD *)(a1 + 72) = v23;
        if ((unint64_t)v25 >= v18 || *v25 != 82) {
          continue;
        }
        *((void *)this + 1) = v25 + 1;
LABEL_69:
        *(_DWORD *)(a1 + 72) = v23 | 0x200;
        v26 = *(_DWORD **)(a1 + 56);
        if (!v26) {
          operator new();
        }
        unsigned int v36 = 0;
        v27 = (char *)*((void *)this + 1);
        if ((unint64_t)v27 >= *((void *)this + 2) || *v27 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v36))return 0; {
        }
          }
        else
        {
          unsigned int v36 = *v27;
          *((void *)this + 1) = v27 + 1;
        }
        int v28 = *((_DWORD *)this + 14);
        int v29 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v28 + 1;
        if (v28 < v29)
        {
          int v30 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v36);
          if (sub_100107460(v26, this, v31, v32))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v30);
              int v33 = *((_DWORD *)this + 14);
              BOOL v34 = __OFSUB__(v33, 1);
              int v35 = v33 - 1;
              if (v35 < 0 == v34) {
                *((_DWORD *)this + 14) = v35;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v11 = TagFallback & 7;
        if (v11 == 5) {
          goto LABEL_20;
        }
        goto LABEL_53;
      case 4u:
        int v11 = TagFallback & 7;
        if (v11 == 5) {
          goto LABEL_25;
        }
        goto LABEL_53;
      case 5u:
        int v11 = TagFallback & 7;
        if (v11 == 5) {
          goto LABEL_30;
        }
        goto LABEL_53;
      case 6u:
        int v11 = TagFallback & 7;
        if (v11 == 5) {
          goto LABEL_35;
        }
        goto LABEL_53;
      case 7u:
        int v11 = TagFallback & 7;
        if (v11 == 5) {
          goto LABEL_40;
        }
        goto LABEL_53;
      case 8u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_53;
        }
        v20 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_46;
      case 9u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_53;
        }
        v22 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_61;
      case 0xAu:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_53;
        }
        int v23 = *(_DWORD *)(a1 + 72);
        goto LABEL_69;
      default:
        int v11 = TagFallback & 7;
LABEL_53:
        if (v11 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v8, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_10010AC8C()
{
}

uint64_t sub_10010ACD8(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 72);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(this + 16), a3);
    int v6 = *(_DWORD *)(v5 + 72);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v5 + 20), a3);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(float *)(v5 + 28), a3);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(float *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(float *)(v5 + 36), a3);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(float *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
LABEL_20:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(void *)(v5 + 48), (unint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 72) & 0x200) == 0) {
      goto LABEL_24;
    }
    goto LABEL_21;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(void *)(v5 + 40), (unint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x100) != 0) {
    goto LABEL_20;
  }
LABEL_10:
  if ((v6 & 0x200) == 0) {
    goto LABEL_24;
  }
LABEL_21:
  uint64_t v7 = *(void *)(v5 + 56);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1008AC290 + 56);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v7, a2, a4);
LABEL_24:
  int v10 = *(void **)(v5 + 8);
  int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v8 = v10;
  if (v10 && *v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

uint64_t sub_10010AE5C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, unsigned __int8 *a3)
{
  int v4 = *((_DWORD *)this + 18);
  if (v4)
  {
    int v5 = *((_DWORD *)this + 4);
    *(unsigned char *)a2 = 13;
    *(_DWORD *)(a2 + 1) = v5;
    a2 += 5;
    int v4 = *((_DWORD *)this + 18);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v6 = *((_DWORD *)this + 5);
  *(unsigned char *)a2 = 21;
  *(_DWORD *)(a2 + 1) = v6;
  a2 += 5;
  int v4 = *((_DWORD *)this + 18);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  int v7 = *((_DWORD *)this + 6);
  *(unsigned char *)a2 = 29;
  *(_DWORD *)(a2 + 1) = v7;
  a2 += 5;
  int v4 = *((_DWORD *)this + 18);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  int v8 = *((_DWORD *)this + 7);
  *(unsigned char *)a2 = 37;
  *(_DWORD *)(a2 + 1) = v8;
  a2 += 5;
  int v4 = *((_DWORD *)this + 18);
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  int v9 = *((_DWORD *)this + 8);
  *(unsigned char *)a2 = 45;
  *(_DWORD *)(a2 + 1) = v9;
  a2 += 5;
  int v4 = *((_DWORD *)this + 18);
  if ((v4 & 0x20) == 0)
  {
LABEL_7:
    if ((v4 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
LABEL_17:
  int v10 = *((_DWORD *)this + 9);
  *(unsigned char *)a2 = 53;
  *(_DWORD *)(a2 + 1) = v10;
  a2 += 5;
  int v4 = *((_DWORD *)this + 18);
  if ((v4 & 0x40) == 0)
  {
LABEL_8:
    if ((v4 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_18:
  int v11 = *((_DWORD *)this + 16);
  *(unsigned char *)a2 = 61;
  *(_DWORD *)(a2 + 1) = v11;
  a2 += 5;
  int v4 = *((_DWORD *)this + 18);
  if ((v4 & 0x80) == 0)
  {
LABEL_9:
    if ((v4 & 0x100) == 0) {
      goto LABEL_10;
    }
LABEL_20:
    int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 6);
    *(unsigned char *)a2 = 72;
    a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v13, a2 + 1, a3);
    if ((*((_DWORD *)this + 18) & 0x200) == 0) {
      goto LABEL_27;
    }
    goto LABEL_21;
  }
LABEL_19:
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 5);
  *(unsigned char *)a2 = 64;
  a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v12, a2 + 1, a3);
  int v4 = *((_DWORD *)this + 18);
  if ((v4 & 0x100) != 0) {
    goto LABEL_20;
  }
LABEL_10:
  if ((v4 & 0x200) == 0) {
    goto LABEL_27;
  }
LABEL_21:
  int v14 = (_DWORD *)*((void *)this + 7);
  if (!v14) {
    int v14 = *(_DWORD **)(qword_1008AC290 + 56);
  }
  *(unsigned char *)a2 = 82;
  int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14[6];
  if (v15 > 0x7F)
  {
    uint64_t v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, (int)a2 + 1, a3);
  }
  else
  {
    *(unsigned char *)(a2 + 1) = (_BYTE)v15;
    uint64_t v16 = a2 + 2;
  }
  a2 = sub_100107664(v14, v16, a3);
LABEL_27:
  v19 = (void *)*((void *)this + 1);
  unint64_t v18 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v17 = v19;
  if (!v19 || *v17 == v17[1]) {
    return a2;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v18, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_10010B0D8(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 72);
  if ((_BYTE)v3)
  {
    unsigned int v4 = (v3 << 31 >> 31) & 5;
    if ((v3 & 2) != 0) {
      v4 += 5;
    }
    if ((v3 & 4) != 0) {
      v4 += 5;
    }
    if ((v3 & 8) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x40) != 0) {
      uint64_t v5 = v4 + 5;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 0x80) != 0)
    {
      uint64_t v5 = v5
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 40), (unint64_t)a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 72);
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      uint64_t v5 = v5
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 48), (unint64_t)a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 72);
    }
    if ((v3 & 0x200) != 0)
    {
      uint64_t v6 = *(void *)(a1 + 56);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_1008AC290 + 56);
      }
      int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001076EC(v6, a2);
      int v8 = (int)v7;
      if (v7 >= 0x80) {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      }
      else {
        int v9 = 1;
      }
      uint64_t v5 = (v5 + v8 + v9 + 1);
    }
  }
  int v10 = *(void **)(a1 + 8);
  if (v10 && *v10 != v10[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 68) = v5;
  return v5;
}

uint64_t sub_10010B20C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10010A348((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10010B2E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010B2F8(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10010B384()
{
  return 1;
}

uint64_t sub_10010B38C()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A11A8;
}

void sub_10010B420(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010B434(uint64_t a1)
{
  *(void *)a1 = off_10084EE00;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  *(void *)(a1 + 16) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(void *)(a1 + 24) = 0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(_DWORD *)(a1 + 120) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  return a1;
}

void sub_10010B4A4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_10010B4B8(uint64_t *a1)
{
  *a1 = (uint64_t)off_10084EE00;
  uint64_t v2 = a1 + 3;
  sub_10010B524(a1);
  sub_10006F938(v2);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void *sub_10010B524(void *result)
{
  v1 = result;
  uint64_t v2 = result[2];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  uint64_t v4 = result[11];
  if ((_UNKNOWN *)v4 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    operator delete();
  }
  if ((void *)qword_1008AC298 != result)
  {
    uint64_t v6 = result[6];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = v1[7];
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = v1[8];
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = v1[9];
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
    uint64_t v10 = v1[10];
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    uint64_t v11 = v1[12];
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
    uint64_t result = (void *)v1[13];
    if (result)
    {
      int v12 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v12();
    }
  }
  return result;
}

void sub_10010B728(uint64_t *a1)
{
  sub_10010B4B8(a1);

  operator delete();
}

uint64_t sub_10010B760(uint64_t result, int a2)
{
  *(_DWORD *)(result + 116) = a2;
  return result;
}

void sub_10010B768()
{
}

void sub_10010B7A8()
{
}

uint64_t sub_10010B7CC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24);
  unsigned int v7 = a1 + 8;
  while (1)
  {
LABEL_2:
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 < *((void *)this + 2) && (*v8 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 120) |= 1u;
        if (*(_UNKNOWN **)(a1 + 16) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
        if (result)
        {
          int v12 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v12 >= *((void *)this + 2) || *v12 != 18) {
            continue;
          }
          goto LABEL_39;
        }
        return result;
      case 2u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_36;
        }
        while (1)
        {
          int v13 = *(_DWORD *)(a1 + 36);
          uint64_t v14 = *(int *)(a1 + 32);
          if ((int)v14 >= v13)
          {
            if (v13 == *(_DWORD *)(a1 + 40))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v13 + 1);
              int v13 = *(_DWORD *)(a1 + 36);
            }
            *(_DWORD *)(a1 + 36) = v13 + 1;
            sub_100132778();
          }
          uint64_t v15 = *(void *)(a1 + 24);
          *(_DWORD *)(a1 + 32) = v14 + 1;
          uint64_t v16 = *(void *)(v15 + 8 * v14);
          unsigned int v98 = 0;
          v17 = (char *)*((void *)this + 1);
          if ((unint64_t)v17 >= *((void *)this + 2) || *v17 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v98))return 0; {
          }
            }
          else
          {
            unsigned int v98 = *v17;
            *((void *)this + 1) = v17 + 1;
          }
          int v18 = *((_DWORD *)this + 14);
          int v19 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v18 + 1;
          if (v18 >= v19) {
            return 0;
          }
          int v20 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v98);
          if (!sub_1000F8AFC(v16, this, v21, v22) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v20);
          int v23 = *((_DWORD *)this + 14);
          BOOL v24 = __OFSUB__(v23, 1);
          int v25 = v23 - 1;
          if (v25 < 0 == v24) {
            *((_DWORD *)this + 14) = v25;
          }
          int v12 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v12 >= *((void *)this + 2)) {
            goto LABEL_2;
          }
          int v26 = *v12;
          if (v26 != 18) {
            break;
          }
LABEL_39:
          *((void *)this + 1) = v12 + 1;
        }
        if (v26 != 26) {
          continue;
        }
        *((void *)this + 1) = v12 + 1;
        goto LABEL_58;
      case 3u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_36;
        }
LABEL_58:
        *(_DWORD *)(a1 + 120) |= 4u;
        uint64_t v27 = *(void *)(a1 + 48);
        if (!v27) {
          operator new();
        }
        unsigned int v98 = 0;
        int v28 = (char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v98))return 0; {
        }
          }
        else
        {
          unsigned int v98 = *v28;
          *((void *)this + 1) = v28 + 1;
        }
        int v29 = *((_DWORD *)this + 14);
        int v30 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v29 + 1;
        if (v29 >= v30) {
          return 0;
        }
        int v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v98);
        if (!sub_100107CE0(v27, this, v32, v33) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v31);
        int v34 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v34, 1);
        int v35 = v34 - 1;
        if (v35 < 0 == v24) {
          *((_DWORD *)this + 14) = v35;
        }
        unsigned int v36 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v36 >= *((void *)this + 2) || *v36 != 34) {
          continue;
        }
        *((void *)this + 1) = v36 + 1;
LABEL_72:
        *(_DWORD *)(a1 + 120) |= 8u;
        v37 = *(_DWORD **)(a1 + 56);
        if (!v37) {
          operator new();
        }
        unsigned int v98 = 0;
        v38 = (char *)*((void *)this + 1);
        if ((unint64_t)v38 >= *((void *)this + 2) || *v38 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v98))return 0; {
        }
          }
        else
        {
          unsigned int v98 = *v38;
          *((void *)this + 1) = v38 + 1;
        }
        int v39 = *((_DWORD *)this + 14);
        int v40 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v39 + 1;
        if (v39 >= v40) {
          return 0;
        }
        int v41 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v98);
        if (!sub_100107460(v37, this, v42, v43) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v41);
        int v44 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v44, 1);
        int v45 = v44 - 1;
        if (v45 < 0 == v24) {
          *((_DWORD *)this + 14) = v45;
        }
        v46 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v46 >= *((void *)this + 2) || *v46 != 42) {
          continue;
        }
        *((void *)this + 1) = v46 + 1;
LABEL_86:
        *(_DWORD *)(a1 + 120) |= 0x10u;
        uint64_t v47 = *(void *)(a1 + 64);
        if (!v47) {
          operator new();
        }
        unsigned int v98 = 0;
        v48 = (char *)*((void *)this + 1);
        if ((unint64_t)v48 >= *((void *)this + 2) || *v48 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v98))return 0; {
        }
          }
        else
        {
          unsigned int v98 = *v48;
          *((void *)this + 1) = v48 + 1;
        }
        int v49 = *((_DWORD *)this + 14);
        int v50 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v49 + 1;
        if (v49 >= v50) {
          return 0;
        }
        int v51 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v98);
        if (!sub_10010A748(v47, this, v52, v53) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v51);
        int v54 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v54, 1);
        int v55 = v54 - 1;
        if (v55 < 0 == v24) {
          *((_DWORD *)this + 14) = v55;
        }
        v56 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v56 >= *((void *)this + 2) || *v56 != 50) {
          continue;
        }
        *((void *)this + 1) = v56 + 1;
LABEL_100:
        *(_DWORD *)(a1 + 120) |= 0x20u;
        v57 = *(int **)(a1 + 72);
        if (!v57) {
          operator new();
        }
        unsigned int v98 = 0;
        v58 = (char *)*((void *)this + 1);
        if ((unint64_t)v58 >= *((void *)this + 2) || *v58 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v98))return 0; {
        }
          }
        else
        {
          unsigned int v98 = *v58;
          *((void *)this + 1) = v58 + 1;
        }
        int v59 = *((_DWORD *)this + 14);
        int v60 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v59 + 1;
        if (v59 >= v60) {
          return 0;
        }
        int v61 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v98);
        if (!sub_100106BC0(v57, this, v62, v63) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v61);
        int v64 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v64, 1);
        int v65 = v64 - 1;
        if (v65 < 0 == v24) {
          *((_DWORD *)this + 14) = v65;
        }
        v66 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v66 >= *((void *)this + 2) || *v66 != 58) {
          continue;
        }
        *((void *)this + 1) = v66 + 1;
LABEL_114:
        *(_DWORD *)(a1 + 120) |= 0x40u;
        uint64_t v67 = *(void *)(a1 + 80);
        if (!v67) {
          operator new();
        }
        unsigned int v98 = 0;
        v68 = (char *)*((void *)this + 1);
        if ((unint64_t)v68 >= *((void *)this + 2) || *v68 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v98))return 0; {
        }
          }
        else
        {
          unsigned int v98 = *v68;
          *((void *)this + 1) = v68 + 1;
        }
        int v69 = *((_DWORD *)this + 14);
        int v70 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v69 + 1;
        if (v69 >= v70) {
          return 0;
        }
        int v71 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v98);
        if (!sub_1001060C8(v67, this, v72, v73) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v71);
        int v74 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v74, 1);
        int v75 = v74 - 1;
        if (v75 < 0 == v24) {
          *((_DWORD *)this + 14) = v75;
        }
        v76 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v76 >= *((void *)this + 2) || *v76 != 66) {
          continue;
        }
        *((void *)this + 1) = v76 + 1;
LABEL_128:
        *(_DWORD *)(a1 + 120) |= 0x80u;
        if (*(_UNKNOWN **)(a1 + 88) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback();
        v77 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v77 >= *((void *)this + 2) || *v77 != 74) {
          continue;
        }
        *((void *)this + 1) = v77 + 1;
LABEL_134:
        *(_DWORD *)(a1 + 120) |= 0x100u;
        uint64_t v78 = *(void *)(a1 + 96);
        if (!v78) {
          operator new();
        }
        unsigned int v98 = 0;
        v79 = (char *)*((void *)this + 1);
        if ((unint64_t)v79 >= *((void *)this + 2) || *v79 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v98))return 0; {
        }
          }
        else
        {
          unsigned int v98 = *v79;
          *((void *)this + 1) = v79 + 1;
        }
        int v80 = *((_DWORD *)this + 14);
        int v81 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v80 + 1;
        if (v80 >= v81) {
          return 0;
        }
        int v82 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v98);
        if (!sub_10010880C(v78, this, v83, v84) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v82);
        int v85 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v85, 1);
        int v86 = v85 - 1;
        if (v86 < 0 == v24) {
          *((_DWORD *)this + 14) = v86;
        }
        v87 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v87 >= *((void *)this + 2) || *v87 != 82) {
          continue;
        }
        *((void *)this + 1) = v87 + 1;
LABEL_148:
        *(_DWORD *)(a1 + 120) |= 0x200u;
        uint64_t v88 = *(void *)(a1 + 104);
        if (!v88) {
          operator new();
        }
        unsigned int v98 = 0;
        v89 = (char *)*((void *)this + 1);
        if ((unint64_t)v89 >= *((void *)this + 2) || *v89 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v98))return 0; {
        }
          }
        else
        {
          unsigned int v98 = *v89;
          *((void *)this + 1) = v89 + 1;
        }
        int v90 = *((_DWORD *)this + 14);
        int v91 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v90 + 1;
        if (v90 >= v91) {
          return 0;
        }
        int v92 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v98);
        if (!sub_10010993C(v88, this, v93, v94) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v92);
        int v95 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v95, 1);
        int v96 = v95 - 1;
        if (v96 < 0 == v24) {
          *((_DWORD *)this + 14) = v96;
        }
        v97 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v97 >= *((void *)this + 2) || *v97 != 93) {
          continue;
        }
        *((void *)this + 1) = v97 + 1;
LABEL_162:
        unsigned int v98 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v98) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 112) = v98;
        *(_DWORD *)(a1 + 120) |= 0x400u;
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 4u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_72;
        }
        goto LABEL_36;
      case 5u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_86;
        }
        goto LABEL_36;
      case 6u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_100;
        }
        goto LABEL_36;
      case 7u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_114;
        }
        goto LABEL_36;
      case 8u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_128;
        }
        goto LABEL_36;
      case 9u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_134;
        }
        goto LABEL_36;
      case 0xAu:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_148;
        }
        goto LABEL_36;
      case 0xBu:
        int v10 = TagFallback & 7;
        if (v10 == 5) {
          goto LABEL_162;
        }
        goto LABEL_36;
      default:
        int v10 = TagFallback & 7;
LABEL_36:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_10010C254()
{
}

uint64_t sub_10010C31C(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 120)) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  }
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 24) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 32));
  }
  int v7 = *(_DWORD *)(v5 + 120);
  if ((v7 & 4) != 0)
  {
    uint64_t v11 = *(void *)(v5 + 48);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_1008AC298 + 48);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v11, a2, a4);
    int v7 = *(_DWORD *)(v5 + 120);
    if ((v7 & 8) == 0)
    {
LABEL_8:
      if ((v7 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_28;
    }
  }
  else if ((v7 & 8) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v12 = *(void *)(v5 + 56);
  if (!v12) {
    uint64_t v12 = *(void *)(qword_1008AC298 + 56);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v12, a2, a4);
  int v7 = *(_DWORD *)(v5 + 120);
  if ((v7 & 0x10) == 0)
  {
LABEL_9:
    if ((v7 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_31;
  }
LABEL_28:
  uint64_t v13 = *(void *)(v5 + 64);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_1008AC298 + 64);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v13, a2, a4);
  int v7 = *(_DWORD *)(v5 + 120);
  if ((v7 & 0x20) == 0)
  {
LABEL_10:
    if ((v7 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_34;
  }
LABEL_31:
  uint64_t v14 = *(void *)(v5 + 72);
  if (!v14) {
    uint64_t v14 = *(void *)(qword_1008AC298 + 72);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v14, a2, a4);
  int v7 = *(_DWORD *)(v5 + 120);
  if ((v7 & 0x40) == 0)
  {
LABEL_11:
    if ((v7 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_37;
  }
LABEL_34:
  uint64_t v15 = *(void *)(v5 + 80);
  if (!v15) {
    uint64_t v15 = *(void *)(qword_1008AC298 + 80);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v15, a2, a4);
  int v7 = *(_DWORD *)(v5 + 120);
  if ((v7 & 0x80) == 0)
  {
LABEL_12:
    if ((v7 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_38;
  }
LABEL_37:
  wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback();
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v7 = *(_DWORD *)(v5 + 120);
  if ((v7 & 0x100) == 0)
  {
LABEL_13:
    if ((v7 & 0x200) == 0) {
      goto LABEL_14;
    }
LABEL_41:
    uint64_t v17 = *(void *)(v5 + 104);
    if (!v17) {
      uint64_t v17 = *(void *)(qword_1008AC298 + 104);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v17, a2, a4);
    if ((*(_DWORD *)(v5 + 120) & 0x400) != 0) {
      goto LABEL_15;
    }
    goto LABEL_16;
  }
LABEL_38:
  uint64_t v16 = *(void *)(v5 + 96);
  if (!v16) {
    uint64_t v16 = *(void *)(qword_1008AC298 + 96);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v16, a2, a4);
  int v7 = *(_DWORD *)(v5 + 120);
  if ((v7 & 0x200) != 0) {
    goto LABEL_41;
  }
LABEL_14:
  if ((v7 & 0x400) != 0) {
LABEL_15:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (int)a2, *(float *)(v5 + 112), a3);
LABEL_16:
  int v10 = *(void **)(v5 + 8);
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v8 = v10;
  if (v10 && *v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10010C55C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  if (*((unsigned char *)this + 120))
  {
    uint64_t v6 = *((void *)this + 2);
    *(unsigned char *)a2 = 10;
    unsigned int v7 = a2 + 1;
    if (*(char *)(v6 + 23) < 0) {
      uint64_t v8 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v6 + 8);
    }
    else {
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v6 + 23);
    }
    if (v8 > 0x7F)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v7, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v8;
      int v9 = v4 + 2;
    }
    int v10 = *(char *)(v6 + 23);
    if (v10 >= 0) {
      uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v6;
    }
    else {
      uint64_t v11 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v6;
    }
    if (v10 >= 0) {
      uint64_t v12 = (const void *)*(unsigned __int8 *)(v6 + 23);
    }
    else {
      uint64_t v12 = (const void *)*(unsigned int *)(v6 + 8);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v11, v12, v9, a4);
  }
  if (*((int *)this + 8) >= 1)
  {
    uint64_t v13 = 0;
    do
    {
      uint64_t v14 = *(unsigned int **)(*((void *)this + 3) + 8 * v13);
      *(unsigned char *)uint64_t v4 = 18;
      uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14[13];
      if (v15 > 0x7F)
      {
        uint64_t v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, (int)v4 + 1, a3);
      }
      else
      {
        *((unsigned char *)v4 + 1) = (_BYTE)v15;
        uint64_t v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      }
      uint64_t v4 = sub_1000F90DC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v14, v16, a3);
      ++v13;
    }
    while (v13 < *((int *)this + 8));
  }
  int v17 = *((_DWORD *)this + 30);
  if ((v17 & 4) != 0)
  {
    int v23 = (unsigned int *)*((void *)this + 6);
    if (!v23) {
      int v23 = *(unsigned int **)(qword_1008AC298 + 48);
    }
    *(unsigned char *)uint64_t v4 = 26;
    BOOL v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v23[8];
    if (v24 > 0x7F)
    {
      uint64_t v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v24, (int)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v24;
      uint64_t v25 = (uint64_t)v4 + 2;
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100108048((wireless_diagnostics::google::protobuf::internal::WireFormat *)v23, v25, a3);
    int v17 = *((_DWORD *)this + 30);
    if ((v17 & 8) == 0)
    {
LABEL_23:
      if ((v17 & 0x10) == 0) {
        goto LABEL_24;
      }
      goto LABEL_49;
    }
  }
  else if ((v17 & 8) == 0)
  {
    goto LABEL_23;
  }
  int v26 = (_DWORD *)*((void *)this + 7);
  if (!v26) {
    int v26 = *(_DWORD **)(qword_1008AC298 + 56);
  }
  *(unsigned char *)uint64_t v4 = 34;
  uint64_t v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v26[6];
  if (v27 > 0x7F)
  {
    uint64_t v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v27, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v27;
    uint64_t v28 = (uint64_t)v4 + 2;
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100107664(v26, v28, a3);
  int v17 = *((_DWORD *)this + 30);
  if ((v17 & 0x10) == 0)
  {
LABEL_24:
    if ((v17 & 0x20) == 0) {
      goto LABEL_25;
    }
    goto LABEL_55;
  }
LABEL_49:
  int v29 = (unsigned int *)*((void *)this + 8);
  if (!v29) {
    int v29 = *(unsigned int **)(qword_1008AC298 + 64);
  }
  *(unsigned char *)uint64_t v4 = 42;
  int v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v29[17];
  if (v30 > 0x7F)
  {
    uint64_t v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v30, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v30;
    uint64_t v31 = (uint64_t)v4 + 2;
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10010AE5C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v29, v31, a3);
  int v17 = *((_DWORD *)this + 30);
  if ((v17 & 0x20) == 0)
  {
LABEL_25:
    if ((v17 & 0x40) == 0) {
      goto LABEL_26;
    }
    goto LABEL_61;
  }
LABEL_55:
  uint64_t v32 = (unsigned int *)*((void *)this + 9);
  if (!v32) {
    uint64_t v32 = *(unsigned int **)(qword_1008AC298 + 72);
  }
  *(unsigned char *)uint64_t v4 = 50;
  int v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v32[10];
  if (v33 > 0x7F)
  {
    int v34 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v33, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v33;
    int v34 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  uint64_t v4 = sub_100106E58((wireless_diagnostics::google::protobuf::internal::WireFormat *)v32, v34, a3);
  int v17 = *((_DWORD *)this + 30);
  if ((v17 & 0x40) == 0)
  {
LABEL_26:
    if ((v17 & 0x80) == 0) {
      goto LABEL_27;
    }
    goto LABEL_67;
  }
LABEL_61:
  int v35 = (unsigned int *)*((void *)this + 10);
  if (!v35) {
    int v35 = *(unsigned int **)(qword_1008AC298 + 80);
  }
  *(unsigned char *)uint64_t v4 = 58;
  unsigned int v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v35[9];
  if (v36 > 0x7F)
  {
    v37 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v36, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v36;
    v37 = (char *)v4 + 2;
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10010646C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v35, v37, a3);
  int v17 = *((_DWORD *)this + 30);
  if ((v17 & 0x80) == 0)
  {
LABEL_27:
    if ((v17 & 0x100) == 0) {
      goto LABEL_28;
    }
    goto LABEL_80;
  }
LABEL_67:
  wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback();
  uint64_t v40 = *((void *)this + 11);
  *(unsigned char *)uint64_t v4 = 66;
  if (*(char *)(v40 + 23) < 0) {
    int v41 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v40 + 8);
  }
  else {
    int v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v40 + 23);
  }
  if (v41 > 0x7F)
  {
    int v42 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v41, (int)v4 + 1, v38);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v41;
    int v42 = v4 + 2;
  }
  int v43 = *(char *)(v40 + 23);
  if (v43 >= 0) {
    int v44 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v40;
  }
  else {
    int v44 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v40;
  }
  if (v43 >= 0) {
    int v45 = (const void *)*(unsigned __int8 *)(v40 + 23);
  }
  else {
    int v45 = (const void *)*(unsigned int *)(v40 + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v44, v45, v42, v39);
  int v17 = *((_DWORD *)this + 30);
  if ((v17 & 0x100) == 0)
  {
LABEL_28:
    if ((v17 & 0x200) == 0) {
      goto LABEL_29;
    }
LABEL_86:
    int v49 = (unsigned int *)*((void *)this + 13);
    if (!v49) {
      int v49 = *(unsigned int **)(qword_1008AC298 + 104);
    }
    *(unsigned char *)uint64_t v4 = 82;
    int v50 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v49[10];
    if (v50 > 0x7F)
    {
      int v51 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v50, (int)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v50;
      int v51 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
    uint64_t v4 = sub_100109E38((wireless_diagnostics::google::protobuf::internal::WireFormat *)v49, v51, a3);
    if ((*((_DWORD *)this + 30) & 0x400) != 0) {
      goto LABEL_30;
    }
    goto LABEL_31;
  }
LABEL_80:
  v46 = (unsigned int *)*((void *)this + 12);
  if (!v46) {
    v46 = *(unsigned int **)(qword_1008AC298 + 96);
  }
  *(unsigned char *)uint64_t v4 = 74;
  uint64_t v47 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v46[21];
  if (v47 > 0x7F)
  {
    v48 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v47, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v47;
    v48 = (char *)v4 + 2;
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100108E64((wireless_diagnostics::google::protobuf::internal::WireFormat *)v46, v48, a3);
  int v17 = *((_DWORD *)this + 30);
  if ((v17 & 0x200) != 0) {
    goto LABEL_86;
  }
LABEL_29:
  if ((v17 & 0x400) != 0)
  {
LABEL_30:
    int v18 = *((_DWORD *)this + 28);
    *(unsigned char *)uint64_t v4 = 93;
    *(_DWORD *)((char *)v4 + 1) = v18;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 5);
  }
LABEL_31:
  uint64_t v21 = (void *)*((void *)this + 1);
  int v20 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v19 = v21;
  if (!v21 || *v19 == v19[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v20, v4, a3);
}

uint64_t sub_10010C9D0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 120);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    goto LABEL_60;
  }
  if ((v3 & 1) == 0)
  {
    int v4 = 0;
    if ((v3 & 4) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
  uint64_t v5 = *(void *)(a1 + 16);
  int v6 = *(unsigned __int8 *)(v5 + 23);
  char v7 = v6;
  uint64_t v8 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
  }
  else {
    unint64_t v9 = v8;
  }
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9, a2);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v8 = *(void *)(v5 + 8);
    int v3 = *(_DWORD *)(a1 + 120);
    char v7 = *(unsigned char *)(v5 + 23);
  }
  else
  {
    int v10 = 1;
  }
  if (v7 < 0) {
    int v6 = v8;
  }
  int v4 = v10 + v6 + 1;
  if ((v3 & 4) != 0)
  {
LABEL_15:
    uint64_t v11 = *(void *)(a1 + 48);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_1008AC298 + 48);
    }
    uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10010816C(v11, a2);
    int v13 = (int)v12;
    if (v12 >= 0x80) {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
    }
    else {
      int v14 = 1;
    }
    v4 += v13 + v14 + 1;
    int v3 = *(_DWORD *)(a1 + 120);
  }
LABEL_21:
  if ((v3 & 8) != 0)
  {
    uint64_t v15 = *(void *)(a1 + 56);
    if (!v15) {
      uint64_t v15 = *(void *)(qword_1008AC298 + 56);
    }
    uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001076EC(v15, a2);
    int v17 = (int)v16;
    if (v16 >= 0x80) {
      int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
    }
    else {
      int v18 = 1;
    }
    v4 += v17 + v18 + 1;
    int v3 = *(_DWORD *)(a1 + 120);
    if ((v3 & 0x10) == 0)
    {
LABEL_23:
      if ((v3 & 0x20) == 0) {
        goto LABEL_24;
      }
      goto LABEL_39;
    }
  }
  else if ((v3 & 0x10) == 0)
  {
    goto LABEL_23;
  }
  uint64_t v19 = *(void *)(a1 + 64);
  if (!v19) {
    uint64_t v19 = *(void *)(qword_1008AC298 + 64);
  }
  int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10010B0D8(v19, a2);
  int v21 = (int)v20;
  if (v20 >= 0x80) {
    int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, a2);
  }
  else {
    int v22 = 1;
  }
  v4 += v21 + v22 + 1;
  int v3 = *(_DWORD *)(a1 + 120);
  if ((v3 & 0x20) == 0)
  {
LABEL_24:
    if ((v3 & 0x40) == 0) {
      goto LABEL_25;
    }
    goto LABEL_45;
  }
LABEL_39:
  uint64_t v23 = *(void *)(a1 + 72);
  if (!v23) {
    uint64_t v23 = *(void *)(qword_1008AC298 + 72);
  }
  BOOL v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100106F24(v23, a2);
  int v25 = (int)v24;
  if (v24 >= 0x80) {
    int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24, a2);
  }
  else {
    int v26 = 1;
  }
  v4 += v25 + v26 + 1;
  int v3 = *(_DWORD *)(a1 + 120);
  if ((v3 & 0x40) == 0)
  {
LABEL_25:
    if ((v3 & 0x80) == 0) {
      goto LABEL_60;
    }
    goto LABEL_51;
  }
LABEL_45:
  uint64_t v27 = *(void *)(a1 + 80);
  if (!v27) {
    uint64_t v27 = *(void *)(qword_1008AC298 + 80);
  }
  uint64_t v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001065B4(v27, a2);
  int v29 = (int)v28;
  if (v28 >= 0x80) {
    int v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28, a2);
  }
  else {
    int v30 = 1;
  }
  v4 += v29 + v30 + 1;
  int v3 = *(_DWORD *)(a1 + 120);
  if ((v3 & 0x80) != 0)
  {
LABEL_51:
    uint64_t v31 = *(void *)(a1 + 88);
    int v32 = *(unsigned __int8 *)(v31 + 23);
    char v33 = v32;
    uint64_t v34 = *(void *)(v31 + 8);
    if ((v32 & 0x80u) == 0) {
      unint64_t v35 = *(unsigned __int8 *)(v31 + 23);
    }
    else {
      unint64_t v35 = v34;
    }
    if (v35 >= 0x80)
    {
      int v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v35, a2);
      int v32 = *(unsigned __int8 *)(v31 + 23);
      uint64_t v34 = *(void *)(v31 + 8);
      int v3 = *(_DWORD *)(a1 + 120);
      char v33 = *(unsigned char *)(v31 + 23);
    }
    else
    {
      int v36 = 1;
    }
    if (v33 < 0) {
      int v32 = v34;
    }
    v4 += v36 + v32 + 1;
  }
LABEL_60:
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      v37 = *(unsigned int **)(a1 + 96);
      if (!v37) {
        v37 = *(unsigned int **)(qword_1008AC298 + 96);
      }
      v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001091B0(v37, a2);
      int v39 = (int)v38;
      if (v38 >= 0x80) {
        int v40 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38, a2);
      }
      else {
        int v40 = 1;
      }
      v4 += v39 + v40 + 1;
      int v3 = *(_DWORD *)(a1 + 120);
    }
    if ((v3 & 0x200) != 0)
    {
      uint64_t v41 = *(void *)(a1 + 104);
      if (!v41) {
        uint64_t v41 = *(void *)(qword_1008AC298 + 104);
      }
      int v42 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100109F90(v41, a2);
      int v43 = (int)v42;
      if (v42 >= 0x80) {
        int v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v42, a2);
      }
      else {
        int v44 = 1;
      }
      v4 += v43 + v44 + 1;
      int v3 = *(_DWORD *)(a1 + 120);
    }
    if ((v3 & 0x400) != 0) {
      v4 += 5;
    }
  }
  int v45 = *(_DWORD *)(a1 + 32);
  uint64_t v46 = (v45 + v4);
  if (v45 >= 1)
  {
    uint64_t v47 = 0;
    do
    {
      v48 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000F930C(*(void *)(*(void *)(a1 + 24) + 8 * v47), a2);
      int v49 = (int)v48;
      if (v48 >= 0x80) {
        int v50 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v48, a2);
      }
      else {
        int v50 = 1;
      }
      uint64_t v46 = (v49 + v46 + v50);
      ++v47;
    }
    while (v47 < *(int *)(a1 + 32));
  }
  int v51 = *(void **)(a1 + 8);
  if (v51 && *v51 != v51[1]) {
    uint64_t v46 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v46;
  }
  *(_DWORD *)(a1 + 116) = v46;
  return v46;
}

uint64_t sub_10010CD60(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000F6B48((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10010CE34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010CE4C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10010CED8()
{
  return 1;
}

uint64_t sub_10010CEE0()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A11B8;
}

void sub_10010CF74(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_10010CF88(void *a1)
{
  *a1 = off_10084EEB0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  a1[3] = 0;
  return a1;
}

void sub_10010CFD8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_10010CFEC(wireless_diagnostics::google::protobuf::Message *a1)
{
  *(void *)a1 = off_10084EEB0;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::Message *)((char *)a1 + 8);
  sub_100098658((uint64_t)a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message(a1);
}

void sub_10010D050(wireless_diagnostics::google::protobuf::Message *a1)
{
  sub_10010CFEC(a1);

  operator delete();
}

uint64_t sub_10010D088(uint64_t result, int a2)
{
  *(_DWORD *)(result + 24) = a2;
  return result;
}

void sub_10010D090()
{
}

void sub_10010D0D0()
{
}

uint64_t sub_10010D0F4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      char v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
      }
      if (TagFallback != 10) {
        break;
      }
      *(_DWORD *)(a1 + 28) |= 1u;
      if (*(_UNKNOWN **)(a1 + 16) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
      if (!result) {
        return result;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_10010D21C(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  if (*(unsigned char *)(this + 28)) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  }
  char v7 = *(void **)(v4 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  uint64_t v5 = v7;
  if (v7 && *v5 != v5[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v6, a2, a3);
  }
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10010D290(wireless_diagnostics::google::protobuf::internal::WireFormat *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  if (*((unsigned char *)this + 28))
  {
    uint64_t v5 = *((void *)this + 2);
    *(unsigned char *)a2 = 10;
    if (*(char *)(v5 + 23) < 0) {
      unsigned int v6 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v5 + 8);
    }
    else {
      unsigned int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v5 + 23);
    }
    if (v6 > 0x7F)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, (int)a2 + 1, a3);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v6;
      int v7 = a2 + 2;
    }
    int v8 = *(char *)(v5 + 23);
    if (v8 >= 0) {
      unint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v5;
    }
    else {
      unint64_t v9 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v5;
    }
    if (v8 >= 0) {
      int v10 = (const void *)*(unsigned __int8 *)(v5 + 23);
    }
    else {
      int v10 = (const void *)*(unsigned int *)(v5 + 8);
    }
    a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v9, v10, v7, a4);
  }
  int v13 = (void *)*((void *)this + 1);
  uint64_t v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v11 = v13;
  if (!v13 || *v11 == v11[1]) {
    return a2;
  }

  return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v12, a2, a3);
}

uint64_t sub_10010D358(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (*(unsigned char *)(a1 + 28))
  {
    uint64_t v4 = *(void *)(a1 + 16);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    char v6 = v5;
    uint64_t v7 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
    }
    else {
      unint64_t v8 = v7;
    }
    if (v8 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8, a2);
      int v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v7 = *(void *)(v4 + 8);
      int v9 = v10 + 1;
      char v6 = *(unsigned char *)(v4 + 23);
    }
    else
    {
      int v9 = 2;
    }
    if (v6 < 0) {
      int v5 = v7;
    }
    uint64_t v3 = (v9 + v5);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v11 = *(void **)(a1 + 8);
  if (v11 && *v11 != v11[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  }
  *(_DWORD *)(a1 + 24) = v3;
  return v3;
}

uint64_t sub_10010D3FC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000F7468((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10010D4D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010D4E8(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10010D574()
{
  return 1;
}

uint64_t sub_10010D57C()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A11C8;
}

void sub_10010D610(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010D624(uint64_t a1)
{
  *(void *)a1 = off_10084EF60;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 64) = 0;
  *(_DWORD *)(a1 + 72) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 44) = 0u;
  return a1;
}

void sub_10010D67C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_10010D690(uint64_t *a1)
{
  *a1 = (uint64_t)off_10084EF60;
  sub_10006F938(a1 + 5);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10010D6F4(uint64_t *a1)
{
  sub_10010D690(a1);

  operator delete();
}

uint64_t sub_10010D72C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 68) = a2;
  return result;
}

void sub_10010D734()
{
}

void sub_10010D774()
{
}

uint64_t sub_10010D798(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  char v6 = (unint64_t *)(a1 + 24);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 40);
  unint64_t v8 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
LABEL_2:
  while (1)
  {
    int v9 = (unsigned __int8 *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || (char)*v9 < 0) {
      break;
    }
    unint64_t TagFallback = *v9;
    *((_DWORD *)this + 8) = TagFallback;
    *((void *)this + 1) = v9 + 1;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if (v11 != 1) {
          goto LABEL_24;
        }
        *(void *)v37 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v37) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v37;
        }
        *(_DWORD *)(a1 + 72) |= 1u;
        int v13 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v13 >= v12 || *v13 != 16) {
          continue;
        }
        int v14 = v13 + 1;
        *((void *)this + 1) = v14;
        goto LABEL_16;
      case 2u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
LABEL_16:
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!result) {
            return result;
          }
          uint64_t v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *char v6 = *v14;
          uint64_t v15 = v14 + 1;
          *((void *)this + 1) = v15;
        }
        *(_DWORD *)(a1 + 72) |= 2u;
        if ((unint64_t)v15 >= v12 || *v15 != 24) {
          continue;
        }
        uint64_t v16 = v15 + 1;
        *((void *)this + 1) = v16;
LABEL_33:
        *(void *)v37 = 0;
        if ((unint64_t)v16 >= v12 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, (unint64_t *)v37);
          if (!result) {
            return result;
          }
          uint64_t v20 = *(void *)v37;
          int v21 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          uint64_t v20 = *v16;
          int v21 = v16 + 1;
          *((void *)this + 1) = v21;
        }
        *(void *)(a1 + 32) = v20;
        *(_DWORD *)(a1 + 72) |= 4u;
        if ((unint64_t)v21 >= v12 || *v21 != 34) {
          continue;
        }
        break;
      case 3u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_33;
      case 4u:
        int v11 = TagFallback & 7;
        if (v11 == 2) {
          goto LABEL_41;
        }
        goto LABEL_24;
      case 5u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_59;
      default:
        int v11 = TagFallback & 7;
LABEL_24:
        if (v11 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v8, a4) & 1) == 0)return 0; {
        continue;
        }
    }
    do
    {
      *((void *)this + 1) = v21 + 1;
LABEL_41:
      int v22 = *(_DWORD *)(a1 + 52);
      uint64_t v23 = *(int *)(a1 + 48);
      if ((int)v23 >= v22)
      {
        if (v22 == *(_DWORD *)(a1 + 56))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v22 + 1);
          int v22 = *(_DWORD *)(a1 + 52);
        }
        *(_DWORD *)(a1 + 52) = v22 + 1;
        sub_100132778();
      }
      uint64_t v24 = *(void *)(a1 + 40);
      *(_DWORD *)(a1 + 48) = v23 + 1;
      uint64_t v25 = *(void *)(v24 + 8 * v23);
      v37[0] = 0;
      int v26 = (char *)*((void *)this + 1);
      if ((unint64_t)v26 >= *((void *)this + 2) || *v26 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v37))return 0; {
      }
        }
      else
      {
        v37[0] = *v26;
        *((void *)this + 1) = v26 + 1;
      }
      int v27 = *((_DWORD *)this + 14);
      int v28 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v27 + 1;
      if (v27 >= v28) {
        return 0;
      }
      int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v37[0]);
      if (!sub_1000F8AFC(v25, this, v30, v31) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
      int v32 = *((_DWORD *)this + 14);
      BOOL v33 = __OFSUB__(v32, 1);
      int v34 = v32 - 1;
      if (v34 < 0 == v33) {
        *((_DWORD *)this + 14) = v34;
      }
      int v21 = (unsigned char *)*((void *)this + 1);
      unint64_t v17 = *((void *)this + 2);
      if ((unint64_t)v21 >= v17) {
        goto LABEL_2;
      }
      int v35 = *v21;
    }
    while (v35 == 34);
    if (v35 != 40) {
      continue;
    }
    int v18 = v21 + 1;
    *((void *)this + 1) = v18;
LABEL_59:
    v37[0] = 0;
    if ((unint64_t)v18 < v17 && (*v18 & 0x80000000) == 0)
    {
      unsigned int v36 = *v18;
      *((void *)this + 1) = v18 + 1;
      goto LABEL_64;
    }
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v37);
    if (!result) {
      return result;
    }
    unsigned int v36 = v37[0];
LABEL_64:
    if (v36 > 4)
    {
      wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v8, 5, (int)v36);
    }
    else
    {
      *(_DWORD *)(a1 + 72) |= 0x10u;
      *(_DWORD *)(a1 + 64) = v36;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
  unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
  *((_DWORD *)this + 8) = TagFallback;
  if (TagFallback) {
    goto LABEL_7;
  }
  return 1;
}

uint64_t sub_10010DBB0(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 72);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    int v6 = *(_DWORD *)(v5 + 72);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 24), (unint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 72) & 4) != 0) {
LABEL_4:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(v5 + 32), (uint64_t)a2, a4);
LABEL_5:
  if (*(int *)(v5 + 48) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(*(void *)(v5 + 40) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 48));
  }
  if ((*(unsigned char *)(v5 + 72) & 0x10) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 64), (int)a2, a4);
  }
  int v10 = *(void **)(v5 + 8);
  int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unint64_t v8 = v10;
  if (v10 && *v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10010DCB8(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  char v3 = a2;
  int v5 = *((_DWORD *)this + 18);
  if (v5)
  {
    uint64_t v13 = *((void *)this + 2);
    *(unsigned char *)a2 = 9;
    *(void *)((char *)a2 + 1) = v13;
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
    int v5 = *((_DWORD *)this + 18);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 3);
  *(unsigned char *)char v3 = 16;
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v14, (unint64_t)v3 + 1, a3);
  if ((*((_DWORD *)this + 18) & 4) != 0)
  {
LABEL_4:
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 4);
    *(unsigned char *)char v3 = 24;
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v6, (unint64_t)v3 + 1, a3);
  }
LABEL_5:
  if (*((int *)this + 12) >= 1)
  {
    uint64_t v7 = 0;
    do
    {
      unint64_t v8 = *(unsigned int **)(*((void *)this + 5) + 8 * v7);
      *(unsigned char *)char v3 = 34;
      int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8[13];
      if (v9 > 0x7F)
      {
        int v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (int)v3 + 1, a3);
      }
      else
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v9;
        int v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      }
      char v3 = sub_1000F90DC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v8, v10, a3);
      ++v7;
    }
    while (v7 < *((int *)this + 12));
  }
  if ((*((unsigned char *)this + 72) & 0x10) != 0)
  {
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 16);
    *(unsigned char *)char v3 = 40;
    unint64_t v12 = (unint64_t)v3 + 1;
    if ((v11 & 0x80000000) != 0)
    {
      uint64_t v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v11, v12, a3);
    }
    else
    {
      if (v11 <= 0x7F)
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v11;
        char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        goto LABEL_21;
      }
      uint64_t v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, v12, a3);
    }
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v15;
  }
LABEL_21:
  int v18 = (void *)*((void *)this + 1);
  unint64_t v17 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v16 = v18;
  if (!v18 || *v16 == v16[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v17, v3, a3);
}

uint64_t sub_10010DE64(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 72);
  if (!*(unsigned char *)(a1 + 72))
  {
    int v4 = 0;
    goto LABEL_15;
  }
  int v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0)
  {
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 24), (unint64_t)a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 72);
    if ((v3 & 4) == 0)
    {
LABEL_4:
      if ((v3 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_9;
    }
  }
  else if ((v3 & 4) == 0)
  {
    goto LABEL_4;
  }
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 32), (unint64_t)a2)+ 1;
  if ((*(_DWORD *)(a1 + 72) & 0x10) == 0) {
    goto LABEL_15;
  }
LABEL_9:
  int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
  if ((v5 & 0x80000000) != 0)
  {
    int v6 = 11;
  }
  else if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
  }
  else
  {
    int v6 = 2;
  }
  v4 += v6;
LABEL_15:
  int v7 = *(_DWORD *)(a1 + 48);
  uint64_t v8 = (v7 + v4);
  if (v7 >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000F930C(*(void *)(*(void *)(a1 + 40) + 8 * v9), a2);
      int v11 = (int)v10;
      if (v10 >= 0x80) {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
      }
      else {
        int v12 = 1;
      }
      uint64_t v8 = (v11 + v8 + v12);
      ++v9;
    }
    while (v9 < *(int *)(a1 + 48));
  }
  uint64_t v13 = *(void **)(a1 + 8);
  if (v13 && *v13 != v13[1]) {
    uint64_t v8 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v8;
  }
  *(_DWORD *)(a1 + 68) = v8;
  return v8;
}

uint64_t sub_10010DF90(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000F7F70((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10010E064(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010E07C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10010E108()
{
  return 1;
}

uint64_t sub_10010E110()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A11D8;
}

void sub_10010E1A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_10010E1B8(void *a1)
{
  *a1 = off_10084F010;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  return a1;
}

void sub_10010E200(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_10010E214(uint64_t a1)
{
  *(void *)a1 = off_10084F010;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10010E268(uint64_t a1)
{
  *(void *)a1 = off_10084F010;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_10010E2D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 24) = a2;
  return result;
}

void sub_10010E2D8()
{
}

void sub_10010E318()
{
}

uint64_t sub_10010E33C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (unint64_t *)(a1 + 16);
  unsigned int v7 = a1 + 8;
  while (1)
  {
    while (1)
    {
      uint64_t v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v8;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v8 + 1;
      }
      if (TagFallback != 16) {
        break;
      }
      int v11 = (char *)*((void *)this + 1);
      unint64_t v10 = *((void *)this + 2);
      if ((unint64_t)v11 >= v10 || *v11 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
        if (!result) {
          return result;
        }
        int v12 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
      }
      else
      {
        *int v6 = *v11;
        int v12 = (unsigned __int8 *)(v11 + 1);
        *((void *)this + 1) = v12;
      }
      *(_DWORD *)(a1 + 28) |= 1u;
      if (v12 == (unsigned __int8 *)v10 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_10010E458(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 28)) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(this + 16), (unint64_t)a2, a4);
  }
  uint64_t v8 = *(void **)(v5 + 8);
  unsigned int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v6 = v8;
  if (v8 && *v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10010E4CC(wireless_diagnostics::google::protobuf::internal::WireFormat *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  if (*((unsigned char *)this + 28))
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 2);
    *(unsigned char *)a2 = 16;
    a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v4, (unint64_t)a2 + 1, a3);
  }
  unsigned int v7 = (void *)*((void *)this + 1);
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v5 = v7;
  if (!v7 || *v5 == v5[1]) {
    return a2;
  }

  return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, a2, a3);
}

uint64_t sub_10010E540(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (*(unsigned char *)(a1 + 28)) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16), (unint64_t)a2)+ 1;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void **)(a1 + 8);
  if (v4 && *v4 != v4[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  }
  *(_DWORD *)(a1 + 24) = v3;
  return v3;
}

uint64_t sub_10010E5A4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000F814C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10010E678(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010E690(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10010E71C()
{
  return 1;
}

uint64_t sub_10010E724()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A11E8;
}

void sub_10010E7B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_10010E7CC(void *a1)
{
  *a1 = off_10084F0C0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_10010E820(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_10010E834(wireless_diagnostics::google::protobuf::Message *a1)
{
  *(void *)a1 = off_10084F0C0;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::Message *)((char *)a1 + 8);
  sub_100098658((uint64_t)a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message(a1);
}

void sub_10010E898(wireless_diagnostics::google::protobuf::Message *a1)
{
  sub_10010E834(a1);

  operator delete();
}

uint64_t sub_10010E8D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_10010E8D8()
{
}

void sub_10010E918()
{
}

uint64_t sub_10010E93C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (unint64_t *)(a1 + 24);
  unsigned int v7 = a1 + 8;
  while (1)
  {
    while (1)
    {
      uint64_t v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v8;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v8 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v10 = TagFallback & 7;
      if (v10 != 2) {
        goto LABEL_22;
      }
      *(_DWORD *)(a1 + 36) |= 1u;
      if (*(_UNKNOWN **)(a1 + 16) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
      if (!result) {
        return result;
      }
      int v14 = (unsigned char *)*((void *)this + 1);
      unint64_t v11 = *((void *)this + 2);
      if ((unint64_t)v14 < v11 && *v14 == 16)
      {
        int v12 = v14 + 1;
        *((void *)this + 1) = v12;
LABEL_18:
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!result) {
            return result;
          }
          uint64_t v15 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v12;
          uint64_t v15 = (unsigned __int8 *)(v12 + 1);
          *((void *)this + 1) = v15;
        }
        *(_DWORD *)(a1 + 36) |= 2u;
        if (v15 == (unsigned __int8 *)v11
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v10 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_18;
      }
    }
    else
    {
      int v10 = TagFallback & 7;
    }
LABEL_22:
    if (v10 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_10010EAFC(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 36);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
    int v6 = *(_DWORD *)(v5 + 36);
  }
  if ((v6 & 2) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 24), (unint64_t)a2, a4);
  }
  uint64_t v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10010EB88(wireless_diagnostics::google::protobuf::internal::WireFormat *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  int v5 = *((_DWORD *)this + 9);
  if (v5)
  {
    uint64_t v6 = *((void *)this + 2);
    *(unsigned char *)a2 = 10;
    if (*(char *)(v6 + 23) < 0) {
      unsigned int v7 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v6 + 8);
    }
    else {
      unsigned int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v6 + 23);
    }
    if (v7 > 0x7F)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, (int)a2 + 1, a3);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v7;
      int v8 = a2 + 2;
    }
    int v9 = *(char *)(v6 + 23);
    if (v9 >= 0) {
      int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v6;
    }
    else {
      int v10 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v6;
    }
    if (v9 >= 0) {
      unint64_t v11 = (const void *)*(unsigned __int8 *)(v6 + 23);
    }
    else {
      unint64_t v11 = (const void *)*(unsigned int *)(v6 + 8);
    }
    a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v10, v11, v8, a4);
    int v5 = *((_DWORD *)this + 9);
  }
  if ((v5 & 2) != 0)
  {
    int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 3);
    *(unsigned char *)a2 = 16;
    a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v12, (unint64_t)a2 + 1, a3);
  }
  uint64_t v15 = (void *)*((void *)this + 1);
  int v14 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v13 = v15;
  if (!v15 || *v13 == v13[1]) {
    return a2;
  }

  return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v14, a2, a3);
}

uint64_t sub_10010EC6C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if ((_BYTE)v3)
  {
    if ((*(unsigned char *)(a1 + 36) & 1) == 0)
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 36) & 2) == 0) {
        goto LABEL_16;
      }
      goto LABEL_15;
    }
    uint64_t v5 = *(void *)(a1 + 16);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    char v7 = v6;
    uint64_t v8 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
    }
    else {
      unint64_t v9 = v8;
    }
    if (v9 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9, a2);
      int v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v8 = *(void *)(v5 + 8);
      int v10 = v11 + 1;
      int v3 = *(_DWORD *)(a1 + 36);
      char v7 = *(unsigned char *)(v5 + 23);
    }
    else
    {
      int v10 = 2;
    }
    if (v7 < 0) {
      int v6 = v8;
    }
    uint64_t v4 = (v10 + v6);
    if ((v3 & 2) != 0) {
LABEL_15:
    }
      uint64_t v4 = v4
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 24), (unint64_t)a2)+ 1;
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_16:
  int v12 = *(void **)(a1 + 8);
  if (v12 && *v12 != v12[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

uint64_t sub_10010ED38(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000F755C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10010EE0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010EE24(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10010EEB0()
{
  return 1;
}

uint64_t sub_10010EEB8()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A11F8;
}

void sub_10010EF4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_10010EF60(void *a1)
{
  *a1 = off_10084F170;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_10010EFB4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_10010EFC8(wireless_diagnostics::google::protobuf::Message *a1)
{
  *(void *)a1 = off_10084F170;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::Message *)((char *)a1 + 8);
  sub_100098658((uint64_t)a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message(a1);
}

void sub_10010F02C(wireless_diagnostics::google::protobuf::Message *a1)
{
  sub_10010EFC8(a1);

  operator delete();
}

uint64_t sub_10010F064(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_10010F06C()
{
}

void sub_10010F0AC()
{
}

uint64_t sub_10010F0D0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (unint64_t *)(a1 + 24);
  unsigned int v7 = a1 + 8;
  while (1)
  {
    while (1)
    {
      uint64_t v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v8;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v8 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v10 = TagFallback & 7;
      if (v10 != 2) {
        goto LABEL_22;
      }
      *(_DWORD *)(a1 + 36) |= 1u;
      if (*(_UNKNOWN **)(a1 + 16) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
      if (!result) {
        return result;
      }
      int v14 = (unsigned char *)*((void *)this + 1);
      unint64_t v11 = *((void *)this + 2);
      if ((unint64_t)v14 < v11 && *v14 == 16)
      {
        int v12 = v14 + 1;
        *((void *)this + 1) = v12;
LABEL_18:
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!result) {
            return result;
          }
          uint64_t v15 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v12;
          uint64_t v15 = (unsigned __int8 *)(v12 + 1);
          *((void *)this + 1) = v15;
        }
        *(_DWORD *)(a1 + 36) |= 2u;
        if (v15 == (unsigned __int8 *)v11
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v10 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_18;
      }
    }
    else
    {
      int v10 = TagFallback & 7;
    }
LABEL_22:
    if (v10 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_10010F290(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 36);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
    int v6 = *(_DWORD *)(v5 + 36);
  }
  if ((v6 & 2) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 24), (unint64_t)a2, a4);
  }
  unint64_t v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10010F31C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  int v5 = *((_DWORD *)this + 9);
  if (v5)
  {
    uint64_t v6 = *((void *)this + 2);
    *(unsigned char *)a2 = 10;
    if (*(char *)(v6 + 23) < 0) {
      unsigned int v7 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v6 + 8);
    }
    else {
      unsigned int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v6 + 23);
    }
    if (v7 > 0x7F)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, (int)a2 + 1, a3);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v7;
      int v8 = a2 + 2;
    }
    int v9 = *(char *)(v6 + 23);
    if (v9 >= 0) {
      int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v6;
    }
    else {
      int v10 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v6;
    }
    if (v9 >= 0) {
      unint64_t v11 = (const void *)*(unsigned __int8 *)(v6 + 23);
    }
    else {
      unint64_t v11 = (const void *)*(unsigned int *)(v6 + 8);
    }
    a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v10, v11, v8, a4);
    int v5 = *((_DWORD *)this + 9);
  }
  if ((v5 & 2) != 0)
  {
    int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 3);
    *(unsigned char *)a2 = 16;
    a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v12, (unint64_t)a2 + 1, a3);
  }
  uint64_t v15 = (void *)*((void *)this + 1);
  int v14 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v13 = v15;
  if (!v15 || *v13 == v13[1]) {
    return a2;
  }

  return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v14, a2, a3);
}

uint64_t sub_10010F400(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if ((_BYTE)v3)
  {
    if ((*(unsigned char *)(a1 + 36) & 1) == 0)
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 36) & 2) == 0) {
        goto LABEL_16;
      }
      goto LABEL_15;
    }
    uint64_t v5 = *(void *)(a1 + 16);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    char v7 = v6;
    uint64_t v8 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
    }
    else {
      unint64_t v9 = v8;
    }
    if (v9 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9, a2);
      int v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v8 = *(void *)(v5 + 8);
      int v10 = v11 + 1;
      int v3 = *(_DWORD *)(a1 + 36);
      char v7 = *(unsigned char *)(v5 + 23);
    }
    else
    {
      int v10 = 2;
    }
    if (v7 < 0) {
      int v6 = v8;
    }
    uint64_t v4 = (v10 + v6);
    if ((v3 & 2) != 0) {
LABEL_15:
    }
      uint64_t v4 = v4
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 24), (unint64_t)a2)+ 1;
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_16:
  int v12 = *(void **)(a1 + 8);
  if (v12 && *v12 != v12[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

uint64_t sub_10010F4CC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000F7670((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10010F5A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010F5B8(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10010F644()
{
  return 1;
}

uint64_t sub_10010F64C()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1208;
}

void sub_10010F6E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010F6F4(uint64_t a1)
{
  *(void *)a1 = off_10084F220;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return a1;
}

void sub_10010F740(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10010F754(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 44);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((*(unsigned char *)(a2 + 44) & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 44) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_10:
    uint64_t v8 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 44) |= 2u;
    *(void *)(a1 + 24) = v8;
    if ((*(_DWORD *)(a2 + 44) & 4) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 44) |= 1u;
  *(void *)(a1 + 16) = v7;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_6:
  if ((v4 & 4) != 0)
  {
LABEL_7:
    uint64_t v5 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(void *)(a1 + 32) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10010F834(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10010F84C(uint64_t a1)
{
  *(void *)a1 = off_10084F220;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10010F8A0(uint64_t a1)
{
  *(void *)a1 = off_10084F220;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_10010F908(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_10010F910()
{
}

void sub_10010F950()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10010F974(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 44))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 9) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10010F998(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v9 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v10 = TagFallback & 7;
        if (v10 != 1) {
          goto LABEL_28;
        }
        unint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v14;
        *(_DWORD *)(a1 + 44) |= 1u;
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
LABEL_18:
          unint64_t v14 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
            return 0;
          }
          *(void *)(a1 + 24) = v14;
          *(_DWORD *)(a1 + 44) |= 2u;
          int v12 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v12 < *((void *)this + 2) && *v12 == 25)
          {
            *((void *)this + 1) = v12 + 1;
            goto LABEL_22;
          }
        }
      }
      if (v9 == 2)
      {
        int v10 = TagFallback & 7;
        if (v10 != 1) {
          goto LABEL_28;
        }
        goto LABEL_18;
      }
      if (v9 != 3)
      {
        int v10 = TagFallback & 7;
        goto LABEL_28;
      }
      int v10 = TagFallback & 7;
      if (v10 == 1) {
        break;
      }
LABEL_28:
      if (v10 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
    }
      }
LABEL_22:
    unint64_t v14 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
      return 0;
    }
    *(void *)(a1 + 32) = v14;
    *(_DWORD *)(a1 + 44) |= 4u;
  }
  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_10010FB70(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 44);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_12:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
    if ((*(_DWORD *)(v4 + 44) & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
  int v5 = *(_DWORD *)(v4 + 44);
  if ((v5 & 2) != 0) {
    goto LABEL_12;
  }
LABEL_3:
  if ((v5 & 4) != 0) {
LABEL_4:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v4 + 32), a3);
LABEL_5:
  uint64_t v8 = *(void **)(v4 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v8;
  if (v8 && *v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

uint64_t sub_10010FC20(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_10:
    uint64_t v10 = *(void *)(a1 + 24);
    *(unsigned char *)a2 = 17;
    *(void *)(a2 + 1) = v10;
    a2 += 9;
    if ((*(_DWORD *)(a1 + 44) & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  uint64_t v9 = *(void *)(a1 + 16);
  *(unsigned char *)a2 = 9;
  *(void *)(a2 + 1) = v9;
  a2 += 9;
  int v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_3:
  if ((v3 & 4) != 0)
  {
LABEL_4:
    uint64_t v4 = *(void *)(a1 + 32);
    *(unsigned char *)a2 = 25;
    *(void *)(a2 + 1) = v4;
    a2 += 9;
  }
LABEL_5:
  uint64_t v7 = *(void **)(a1 + 8);
  int v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  unsigned int v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v5, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
}

uint64_t sub_10010FD48(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 44);
  unsigned int v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0) {
    v4 += 9;
  }
  if ((v3 & 4) != 0) {
    v4 += 9;
  }
  if (*(unsigned char *)(a1 + 44)) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v8 = *(void **)(a1 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v7 = v8;
  if (v8 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
  *(_DWORD *)(a1 + 40) = v5;
  return v5;
}

uint64_t sub_10010FDBC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10010F754((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10010FE90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010FEA8(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10010FF34()
{
  return 1;
}

uint64_t sub_10010FF3C()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1218;
}

void sub_10010FFD0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010FFE4(uint64_t a1)
{
  *(void *)a1 = off_10084F2D0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 76) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return a1;
}

void sub_100110038(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10011004C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  int v4 = *(_DWORD *)(a2 + 88);
  if (!(_BYTE)v4) {
    goto LABEL_12;
  }
  if (v4)
  {
    int v7 = *(_DWORD *)(a2 + 80);
    *(_DWORD *)(a1 + 88) |= 1u;
    *(_DWORD *)(a1 + 80) = v7;
    int v4 = *(_DWORD *)(a2 + 88);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_17;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 88) |= 2u;
  *(void *)(a1 + 16) = v8;
  int v4 = *(_DWORD *)(a2 + 88);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t v9 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 88) |= 4u;
  *(void *)(a1 + 24) = v9;
  int v4 = *(_DWORD *)(a2 + 88);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t v10 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 88) |= 8u;
  *(void *)(a1 + 32) = v10;
  int v4 = *(_DWORD *)(a2 + 88);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_20:
    *(_DWORD *)(a1 + 88) |= 0x20u;
    uint64_t v12 = *(void *)(a1 + 48);
    if (!v12) {
      operator new();
    }
    uint64_t v13 = *(void *)(a2 + 48);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_1008AC2D0 + 48);
    }
    sub_10010F754(v12, v13);
    int v4 = *(_DWORD *)(a2 + 88);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_12;
      }
LABEL_30:
      *(_DWORD *)(a1 + 88) |= 0x80u;
      uint64_t v16 = *(void *)(a1 + 64);
      if (!v16) {
        operator new();
      }
      uint64_t v17 = *(void *)(a2 + 64);
      if (!v17) {
        uint64_t v17 = *(void *)(qword_1008AC2D0 + 64);
      }
      sub_10010F754(v16, v17);
      if ((*(_DWORD *)(a2 + 88) & 0x100) != 0) {
        goto LABEL_13;
      }
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_25;
  }
LABEL_19:
  uint64_t v11 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 88) |= 0x10u;
  *(void *)(a1 + 40) = v11;
  int v4 = *(_DWORD *)(a2 + 88);
  if ((v4 & 0x20) != 0) {
    goto LABEL_20;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_25:
  *(_DWORD *)(a1 + 88) |= 0x40u;
  uint64_t v14 = *(void *)(a1 + 56);
  if (!v14) {
    operator new();
  }
  uint64_t v15 = *(void *)(a2 + 56);
  if (!v15) {
    uint64_t v15 = *(void *)(qword_1008AC2D0 + 56);
  }
  sub_10010F754(v14, v15);
  int v4 = *(_DWORD *)(a2 + 88);
  if ((v4 & 0x80) != 0) {
    goto LABEL_30;
  }
LABEL_12:
  if ((v4 & 0x100) != 0)
  {
LABEL_13:
    uint64_t v5 = *(void *)(a2 + 72);
    *(_DWORD *)(a1 + 88) |= 0x100u;
    *(void *)(a1 + 72) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001102B8()
{
}

void sub_1001102F8(void *a1)
{
  *a1 = off_10084F2D0;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_100110358(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void *sub_100110358(void *result)
{
  if ((void *)qword_1008AC2D0 != result)
  {
    v1 = result;
    uint64_t v2 = result[6];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[7];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t result = (void *)v1[8];
    if (result)
    {
      int v4 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v4();
    }
  }
  return result;
}

void sub_100110428(void *a1)
{
  sub_1001102F8(a1);

  operator delete();
}

uint64_t sub_100110460(uint64_t result, int a2)
{
  *(_DWORD *)(result + 84) = a2;
  return result;
}

void sub_100110468()
{
}

void sub_1001104A8()
{
}

uint64_t sub_1001104CC(uint64_t this)
{
  uint64_t v1 = this;
  char v2 = *(unsigned char *)(this + 88);
  if (v2)
  {
    *(_DWORD *)(this + 80) = 0;
    *(_OWORD *)(this + 16) = 0u;
    *(_OWORD *)(this + 32) = 0u;
    if ((v2 & 0x20) != 0)
    {
      this = *(void *)(this + 48);
      if (this)
      {
        if (*(unsigned char *)(this + 44))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
          *(void *)(this + 32) = 0;
        }
        uint64_t v3 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 36) = 0;
        if (v3) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    if ((*(unsigned char *)(v1 + 88) & 0x40) != 0)
    {
      this = *(void *)(v1 + 56);
      if (this)
      {
        if (*(unsigned char *)(this + 44))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
          *(void *)(this + 32) = 0;
        }
        uint64_t v4 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 36) = 0;
        if (v4) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    if ((*(unsigned char *)(v1 + 88) & 0x80) != 0)
    {
      this = *(void *)(v1 + 64);
      if (this)
      {
        if (*(unsigned char *)(this + 44))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
          *(void *)(this + 32) = 0;
        }
        uint64_t v5 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 36) = 0;
        if (v5) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
  }
  if (*(unsigned char *)(v1 + 89)) {
    *(void *)(v1 + 72) = 0;
  }
  uint64_t v7 = *(void *)(v1 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v6 + 20) = 0;
  if (v7)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v6);
  }
  return this;
}

uint64_t sub_1001105C4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = (unsigned int *)(a1 + 80);
  unsigned int v7 = a1 + 8;
  while (1)
  {
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 < *((void *)this + 2) && (*v8 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        uint64_t v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          uint64_t v13 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          *unsigned int v6 = *v12;
          uint64_t v13 = v12 + 1;
          *((void *)this + 1) = v13;
        }
        *(_DWORD *)(a1 + 88) |= 1u;
        if ((unint64_t)v13 < v11 && *v13 == 17)
        {
          *((void *)this + 1) = v13 + 1;
          goto LABEL_37;
        }
        continue;
      case 2u:
        int v10 = TagFallback & 7;
        if (v10 != 1) {
          goto LABEL_29;
        }
LABEL_37:
        *(void *)int v51 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v51) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v51;
        }
        *(_DWORD *)(a1 + 88) |= 2u;
        uint64_t v16 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v16 >= *((void *)this + 2) || *v16 != 25) {
          continue;
        }
        *((void *)this + 1) = v16 + 1;
LABEL_41:
        *(void *)int v51 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v51) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v51;
        }
        *(_DWORD *)(a1 + 88) |= 4u;
        uint64_t v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 33) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
LABEL_45:
        *(void *)int v51 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v51) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v51;
        }
        *(_DWORD *)(a1 + 88) |= 8u;
        int v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 != 41) {
          continue;
        }
        *((void *)this + 1) = v18 + 1;
LABEL_49:
        *(void *)int v51 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v51) & 1) == 0)return 0; {
        *(void *)(a1 + 40) = *(void *)v51;
        }
        int v14 = *(_DWORD *)(a1 + 88) | 0x10;
        *(_DWORD *)(a1 + 88) = v14;
        uint64_t v19 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 != 50) {
          continue;
        }
        *((void *)this + 1) = v19 + 1;
LABEL_53:
        *(_DWORD *)(a1 + 88) = v14 | 0x20;
        uint64_t v20 = *(void *)(a1 + 48);
        if (!v20) {
          operator new();
        }
        v51[0] = 0;
        int v21 = (char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v51))return 0; {
        }
          }
        else
        {
          v51[0] = *v21;
          *((void *)this + 1) = v21 + 1;
        }
        int v22 = *((_DWORD *)this + 14);
        int v23 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v22 + 1;
        if (v22 >= v23) {
          return 0;
        }
        int v24 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v51[0]);
        if (!sub_10010F998(v20, this, v25, v26) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v24);
        int v27 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v27, 1);
        int v29 = v27 - 1;
        if (v29 < 0 == v28) {
          *((_DWORD *)this + 14) = v29;
        }
        uint64_t v30 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v30 >= *((void *)this + 2) || *v30 != 58) {
          continue;
        }
        *((void *)this + 1) = v30 + 1;
LABEL_67:
        *(_DWORD *)(a1 + 88) |= 0x40u;
        uint64_t v31 = *(void *)(a1 + 56);
        if (!v31) {
          operator new();
        }
        v51[0] = 0;
        int v32 = (char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v51))return 0; {
        }
          }
        else
        {
          v51[0] = *v32;
          *((void *)this + 1) = v32 + 1;
        }
        int v33 = *((_DWORD *)this + 14);
        int v34 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v33 + 1;
        if (v33 >= v34) {
          return 0;
        }
        int v35 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v51[0]);
        if (!sub_10010F998(v31, this, v36, v37) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v35);
        int v38 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v38, 1);
        int v39 = v38 - 1;
        if (v39 < 0 == v28) {
          *((_DWORD *)this + 14) = v39;
        }
        int v40 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v40 >= *((void *)this + 2) || *v40 != 66) {
          continue;
        }
        *((void *)this + 1) = v40 + 1;
LABEL_81:
        *(_DWORD *)(a1 + 88) |= 0x80u;
        uint64_t v41 = *(void *)(a1 + 64);
        if (!v41) {
          operator new();
        }
        v51[0] = 0;
        int v42 = (char *)*((void *)this + 1);
        if ((unint64_t)v42 >= *((void *)this + 2) || *v42 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v51))return 0; {
        }
          }
        else
        {
          v51[0] = *v42;
          *((void *)this + 1) = v42 + 1;
        }
        int v43 = *((_DWORD *)this + 14);
        int v44 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v43 + 1;
        if (v43 >= v44) {
          return 0;
        }
        int v45 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v51[0]);
        if (!sub_10010F998(v41, this, v46, v47) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v45);
        int v48 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v48, 1);
        int v49 = v48 - 1;
        if (v49 < 0 == v28) {
          *((_DWORD *)this + 14) = v49;
        }
        int v50 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v50 >= *((void *)this + 2) || *v50 != 73) {
          continue;
        }
        *((void *)this + 1) = v50 + 1;
LABEL_95:
        *(void *)int v51 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v51) & 1) == 0)return 0; {
        *(void *)(a1 + 72) = *(void *)v51;
        }
        *(_DWORD *)(a1 + 88) |= 0x100u;
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v10 = TagFallback & 7;
        if (v10 == 1) {
          goto LABEL_41;
        }
        goto LABEL_29;
      case 4u:
        int v10 = TagFallback & 7;
        if (v10 == 1) {
          goto LABEL_45;
        }
        goto LABEL_29;
      case 5u:
        int v10 = TagFallback & 7;
        if (v10 == 1) {
          goto LABEL_49;
        }
        goto LABEL_29;
      case 6u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_29;
        }
        int v14 = *(_DWORD *)(a1 + 88);
        goto LABEL_53;
      case 7u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_67;
        }
        goto LABEL_29;
      case 8u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_81;
        }
        goto LABEL_29;
      case 9u:
        int v10 = TagFallback & 7;
        if (v10 == 1) {
          goto LABEL_95;
        }
        goto LABEL_29;
      default:
        int v10 = TagFallback & 7;
LABEL_29:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_100110BD0()
{
}

uint64_t sub_100110C20(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 88);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 80), a2, a4);
    int v6 = *(_DWORD *)(v5 + 88);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_22:
  uint64_t v10 = *(void *)(v5 + 48);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_1008AC2D0 + 48);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
LABEL_28:
    uint64_t v12 = *(void *)(v5 + 64);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_1008AC2D0 + 64);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v12, a2, a4);
    if ((*(_DWORD *)(v5 + 88) & 0x100) != 0) {
      goto LABEL_10;
    }
    goto LABEL_11;
  }
LABEL_25:
  uint64_t v11 = *(void *)(v5 + 56);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_1008AC2D0 + 56);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v11, a2, a4);
  int v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x80) != 0) {
    goto LABEL_28;
  }
LABEL_9:
  if ((v6 & 0x100) != 0) {
LABEL_10:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(double *)(v5 + 72), a3);
LABEL_11:
  uint64_t v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100110DA8(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  if (*((unsigned char *)this + 88))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 20);
    *(unsigned char *)a2 = 8;
    unsigned int v6 = a2 + 1;
    if (v5 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v5, v6, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v5;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  int v7 = *((_DWORD *)this + 22);
  if ((v7 & 2) != 0)
  {
    uint64_t v13 = *((void *)this + 2);
    *(unsigned char *)uint64_t v3 = 17;
    *(void *)((char *)v3 + 1) = v13;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
    int v7 = *((_DWORD *)this + 22);
    if ((v7 & 4) == 0)
    {
LABEL_7:
      if ((v7 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_22;
    }
  }
  else if ((v7 & 4) == 0)
  {
    goto LABEL_7;
  }
  uint64_t v14 = *((void *)this + 3);
  *(unsigned char *)uint64_t v3 = 25;
  *(void *)((char *)v3 + 1) = v14;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  int v7 = *((_DWORD *)this + 22);
  if ((v7 & 8) == 0)
  {
LABEL_8:
    if ((v7 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t v15 = *((void *)this + 4);
  *(unsigned char *)uint64_t v3 = 33;
  *(void *)((char *)v3 + 1) = v15;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  int v7 = *((_DWORD *)this + 22);
  if ((v7 & 0x10) == 0)
  {
LABEL_9:
    if ((v7 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v16 = *((void *)this + 5);
  *(unsigned char *)uint64_t v3 = 41;
  *(void *)((char *)v3 + 1) = v16;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  int v7 = *((_DWORD *)this + 22);
  if ((v7 & 0x20) == 0)
  {
LABEL_10:
    if ((v7 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_24:
  uint64_t v17 = *((void *)this + 6);
  if (!v17) {
    uint64_t v17 = *(void *)(qword_1008AC2D0 + 48);
  }
  *(unsigned char *)uint64_t v3 = 50;
  int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v17 + 40);
  if (v18 > 0x7F)
  {
    uint64_t v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, (int)v3 + 1, a3);
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v18;
    uint64_t v19 = (uint64_t)v3 + 2;
  }
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10010FC20(v17, v19, a3);
  int v7 = *((_DWORD *)this + 22);
  if ((v7 & 0x40) == 0)
  {
LABEL_11:
    if ((v7 & 0x80) == 0) {
      goto LABEL_12;
    }
LABEL_36:
    uint64_t v23 = *((void *)this + 8);
    if (!v23) {
      uint64_t v23 = *(void *)(qword_1008AC2D0 + 64);
    }
    *(unsigned char *)uint64_t v3 = 66;
    int v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v23 + 40);
    if (v24 > 0x7F)
    {
      uint64_t v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v24, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v24;
      uint64_t v25 = (uint64_t)v3 + 2;
    }
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10010FC20(v23, v25, a3);
    if ((*((_DWORD *)this + 22) & 0x100) != 0) {
      goto LABEL_13;
    }
    goto LABEL_14;
  }
LABEL_30:
  uint64_t v20 = *((void *)this + 7);
  if (!v20) {
    uint64_t v20 = *(void *)(qword_1008AC2D0 + 56);
  }
  *(unsigned char *)uint64_t v3 = 58;
  int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v20 + 40);
  if (v21 > 0x7F)
  {
    uint64_t v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, (int)v3 + 1, a3);
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v21;
    uint64_t v22 = (uint64_t)v3 + 2;
  }
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10010FC20(v20, v22, a3);
  int v7 = *((_DWORD *)this + 22);
  if ((v7 & 0x80) != 0) {
    goto LABEL_36;
  }
LABEL_12:
  if ((v7 & 0x100) != 0)
  {
LABEL_13:
    uint64_t v8 = *((void *)this + 9);
    *(unsigned char *)uint64_t v3 = 73;
    *(void *)((char *)v3 + 1) = v8;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  }
LABEL_14:
  uint64_t v11 = (void *)*((void *)this + 1);
  uint64_t v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v9 = v11;
  if (!v11 || *v9 == v9[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v10, v3, a3);
}

uint64_t sub_1001110FC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 88);
  if (!(_BYTE)v3)
  {
    unsigned int v5 = 0;
    goto LABEL_39;
  }
  if (v3)
  {
    unsigned int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 80);
    if (v6 >= 0x80)
    {
      int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 88);
    }
    else
    {
      int v4 = 2;
    }
  }
  else
  {
    int v4 = 0;
  }
  if ((v3 & 2) != 0) {
    v4 += 9;
  }
  if ((v3 & 4) != 0) {
    v4 += 9;
  }
  if ((v3 & 8) != 0) {
    v4 += 9;
  }
  if ((v3 & 0x10) != 0) {
    unsigned int v5 = v4 + 9;
  }
  else {
    unsigned int v5 = v4;
  }
  if ((v3 & 0x20) != 0)
  {
    uint64_t v7 = *(void *)(a1 + 48);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1008AC2D0 + 48);
    }
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10010FD48(v7, a2);
    int v9 = (int)v8;
    if (v8 >= 0x80) {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
    }
    else {
      int v10 = 1;
    }
    v5 += v9 + v10 + 1;
    int v3 = *(_DWORD *)(a1 + 88);
    if ((v3 & 0x40) == 0)
    {
LABEL_19:
      if ((v3 & 0x80) == 0) {
        goto LABEL_39;
      }
      goto LABEL_33;
    }
  }
  else if ((v3 & 0x40) == 0)
  {
    goto LABEL_19;
  }
  uint64_t v11 = *(void *)(a1 + 56);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_1008AC2D0 + 56);
  }
  uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10010FD48(v11, a2);
  int v13 = (int)v12;
  if (v12 >= 0x80) {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
  }
  else {
    int v14 = 1;
  }
  v5 += v13 + v14 + 1;
  int v3 = *(_DWORD *)(a1 + 88);
  if ((v3 & 0x80) != 0)
  {
LABEL_33:
    uint64_t v15 = *(void *)(a1 + 64);
    if (!v15) {
      uint64_t v15 = *(void *)(qword_1008AC2D0 + 64);
    }
    uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10010FD48(v15, a2);
    int v17 = (int)v16;
    if (v16 >= 0x80) {
      int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
    }
    else {
      int v18 = 1;
    }
    v5 += v17 + v18 + 1;
    int v3 = *(_DWORD *)(a1 + 88);
  }
LABEL_39:
  if ((v3 & 0x100) != 0) {
    uint64_t v19 = v5 + 9;
  }
  else {
    uint64_t v19 = v5;
  }
  uint64_t v20 = *(void **)(a1 + 8);
  if (v20 && *v20 != v20[1]) {
    uint64_t v19 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v19;
  }
  *(_DWORD *)(a1 + 84) = v19;
  return v19;
}

uint64_t sub_1001112AC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10011004C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100111380(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100111398(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100111424()
{
  return 1;
}

uint64_t sub_10011142C()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1228;
}

void sub_1001114C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001114D4(uint64_t a1)
{
  *(void *)a1 = off_10084F380;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0;
  *(_WORD *)(a1 + 24) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 44) = 0;
  *(void *)(a1 + 36) = 0;
  *(_DWORD *)(a1 + 52) = 0;
  return a1;
}

void sub_100111530(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100111544(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 52);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 52))
  {
    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 52) |= 1u;
    *(void *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 52);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_16;
    }
  }
  else if ((*(unsigned char *)(a2 + 52) & 2) == 0)
  {
    goto LABEL_6;
  }
  char v8 = *(unsigned char *)(a2 + 24);
  *(_DWORD *)(a1 + 52) |= 2u;
  *(unsigned char *)(a1 + 24) = v8;
  int v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  char v9 = *(unsigned char *)(a2 + 25);
  *(_DWORD *)(a1 + 52) |= 4u;
  *(unsigned char *)(a1 + 25) = v9;
  int v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_18;
  }
LABEL_17:
  int v10 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 52) |= 8u;
  *(_DWORD *)(a1 + 28) = v10;
  int v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_19;
  }
LABEL_18:
  int v11 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 52) |= 0x10u;
  *(_DWORD *)(a1 + 32) = v11;
  int v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 0x20) == 0)
  {
LABEL_10:
    if ((v4 & 0x40) == 0) {
      goto LABEL_11;
    }
LABEL_20:
    int v13 = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 52) |= 0x40u;
    *(_DWORD *)(a1 + 40) = v13;
    if ((*(_DWORD *)(a2 + 52) & 0x80) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_12;
  }
LABEL_19:
  int v12 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 52) |= 0x20u;
  *(_DWORD *)(a1 + 36) = v12;
  int v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 0x40) != 0) {
    goto LABEL_20;
  }
LABEL_11:
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *(_DWORD *)(a2 + 44);
    *(_DWORD *)(a1 + 52) |= 0x80u;
    *(_DWORD *)(a1 + 44) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001116C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001116DC(uint64_t a1)
{
  *(void *)a1 = off_10084F380;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100111730(uint64_t a1)
{
  *(void *)a1 = off_10084F380;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100111798(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) = a2;
  return result;
}

uint64_t sub_1001117A0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008AC2D8;
  if (!qword_1008AC2D8)
  {
    sub_1000EF4F0(0, a2, a3, a4);
    return qword_1008AC2D8;
  }
  return result;
}

void sub_1001117D0()
{
}

void sub_100111810()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100111834(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 52))
  {
    *(void *)(a1 + 16) = 0;
    *(_WORD *)(a1 + 24) = 0;
    *(void *)(a1 + 36) = 0;
    *(void *)(a1 + 28) = 0;
    *(_DWORD *)(a1 + 44) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 11) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100111864(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_30;
        }
        *(void *)uint64_t v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v23) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v23;
        }
        *(_DWORD *)(a1 + 52) |= 1u;
        int v11 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v11 >= v10 || *v11 != 16) {
          continue;
        }
        int v12 = v11 + 1;
        *((void *)this + 1) = v12;
        goto LABEL_16;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        int v12 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_16:
        v23[0] = 0;
        if ((unint64_t)v12 >= v10 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v23);
          if (!result) {
            return result;
          }
          unsigned int v13 = v23[0];
          int v14 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v13 = *v12;
          int v14 = v12 + 1;
          *((void *)this + 1) = v14;
        }
        *(unsigned char *)(a1 + 24) = v13 != 0;
        *(_DWORD *)(a1 + 52) |= 2u;
        if ((unint64_t)v14 >= v10 || *v14 != 24) {
          continue;
        }
        uint64_t v15 = v14 + 1;
        *((void *)this + 1) = v15;
LABEL_38:
        v23[0] = 0;
        if ((unint64_t)v15 >= v10 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v23);
          if (!result) {
            return result;
          }
          unsigned int v17 = v23[0];
          int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v17 = *v15;
          int v18 = v15 + 1;
          *((void *)this + 1) = v18;
        }
        *(unsigned char *)(a1 + 25) = v17 != 0;
        *(_DWORD *)(a1 + 52) |= 4u;
        if ((unint64_t)v18 >= v10 || *v18 != 37) {
          continue;
        }
        *((void *)this + 1) = v18 + 1;
LABEL_46:
        v23[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v23) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 28) = v23[0];
        *(_DWORD *)(a1 + 52) |= 8u;
        uint64_t v19 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 != 45) {
          continue;
        }
        *((void *)this + 1) = v19 + 1;
LABEL_50:
        v23[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v23) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 32) = v23[0];
        *(_DWORD *)(a1 + 52) |= 0x10u;
        uint64_t v20 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 != 53) {
          continue;
        }
        *((void *)this + 1) = v20 + 1;
LABEL_54:
        v23[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v23) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 36) = v23[0];
        *(_DWORD *)(a1 + 52) |= 0x20u;
        int v21 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 != 61) {
          continue;
        }
        *((void *)this + 1) = v21 + 1;
LABEL_58:
        v23[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v23) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 40) = v23[0];
        *(_DWORD *)(a1 + 52) |= 0x40u;
        uint64_t v22 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 != 69) {
          continue;
        }
        *((void *)this + 1) = v22 + 1;
LABEL_62:
        v23[0] = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v23))
        {
          *(_DWORD *)(a1 + 44) = v23[0];
          *(_DWORD *)(a1 + 52) |= 0x80u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        uint64_t v15 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_38;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 5) {
          goto LABEL_46;
        }
        goto LABEL_30;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 == 5) {
          goto LABEL_50;
        }
        goto LABEL_30;
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 == 5) {
          goto LABEL_54;
        }
        goto LABEL_30;
      case 7u:
        int v9 = TagFallback & 7;
        if (v9 == 5) {
          goto LABEL_58;
        }
        goto LABEL_30;
      case 8u:
        int v9 = TagFallback & 7;
        if (v9 != 5) {
          goto LABEL_30;
        }
        goto LABEL_62;
      default:
        int v9 = TagFallback & 7;
LABEL_30:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100111C78(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 52);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 24), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 25), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(float *)(v5 + 28), a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(float *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_22:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(float *)(v5 + 40), a3);
    if ((*(_DWORD *)(v5 + 52) & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(float *)(v5 + 36), a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x40) != 0) {
    goto LABEL_22;
  }
LABEL_8:
  if ((v6 & 0x80) != 0) {
LABEL_9:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(float *)(v5 + 44), a3);
LABEL_10:
  int v9 = *(void **)(v5 + 8);
  char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

uint64_t sub_100111DB4(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 52);
  if (v3)
  {
    uint64_t v9 = *(void *)(a1 + 16);
    *(unsigned char *)a2 = 9;
    *(void *)(a2 + 1) = v9;
    a2 += 9;
    int v3 = *(_DWORD *)(a1 + 52);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)a2 = 16;
  *(unsigned char *)(a2 + 1) = v10;
  a2 += 2;
  int v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 4) == 0)
  {
LABEL_4:
    if ((v3 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  char v11 = *(unsigned char *)(a1 + 25);
  *(unsigned char *)a2 = 24;
  *(unsigned char *)(a2 + 1) = v11;
  a2 += 2;
  int v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  int v12 = *(_DWORD *)(a1 + 28);
  *(unsigned char *)a2 = 37;
  *(_DWORD *)(a2 + 1) = v12;
  a2 += 5;
  int v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 0x10) == 0)
  {
LABEL_6:
    if ((v3 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  int v13 = *(_DWORD *)(a1 + 32);
  *(unsigned char *)a2 = 45;
  *(_DWORD *)(a2 + 1) = v13;
  a2 += 5;
  int v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 0x20) == 0)
  {
LABEL_7:
    if ((v3 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_20:
    int v15 = *(_DWORD *)(a1 + 40);
    *(unsigned char *)a2 = 61;
    *(_DWORD *)(a2 + 1) = v15;
    a2 += 5;
    if ((*(_DWORD *)(a1 + 52) & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_19:
  int v14 = *(_DWORD *)(a1 + 36);
  *(unsigned char *)a2 = 53;
  *(_DWORD *)(a2 + 1) = v14;
  a2 += 5;
  int v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 0x40) != 0) {
    goto LABEL_20;
  }
LABEL_8:
  if ((v3 & 0x80) != 0)
  {
LABEL_9:
    int v4 = *(_DWORD *)(a1 + 44);
    *(unsigned char *)a2 = 69;
    *(_DWORD *)(a2 + 1) = v4;
    a2 += 5;
  }
LABEL_10:
  uint64_t v7 = *(void **)(a1 + 8);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v5, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
}

uint64_t sub_100111F84(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 52);
  if (*(unsigned char *)(a1 + 52))
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9 | v3 & 2;
    if ((v3 & 4) != 0) {
      v4 += 2;
    }
    if ((v3 & 8) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x80) != 0) {
      uint64_t v5 = v4 + 5;
    }
    else {
      uint64_t v5 = v4;
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v7 = *(void **)(a1 + 8);
  if (v7 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
  *(_DWORD *)(a1 + 48) = v5;
  return v5;
}

uint64_t sub_100112038(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100111544((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10011210C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100112124(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001121B0()
{
  return 1;
}

uint64_t sub_1001121B8()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1238;
}

void sub_10011224C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100112260(uint64_t a1)
{
  *(void *)a1 = off_10084F430;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_WORD *)(a1 + 16) = 0;
  *(void *)(a1 + 20) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 28) = 0;
  return a1;
}

void sub_1001122B4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1001122C8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 40);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 40))
  {
    char v7 = *(unsigned char *)(a2 + 16);
    *(_DWORD *)(a1 + 40) |= 1u;
    *(unsigned char *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 40);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_13;
    }
  }
  else if ((*(unsigned char *)(a2 + 40) & 2) == 0)
  {
    goto LABEL_6;
  }
  char v8 = *(unsigned char *)(a2 + 17);
  *(_DWORD *)(a1 + 40) |= 2u;
  *(unsigned char *)(a1 + 17) = v8;
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
LABEL_14:
    int v10 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 40) |= 8u;
    *(_DWORD *)(a1 + 32) = v10;
    if ((*(_DWORD *)(a2 + 40) & 0x10) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_9;
  }
LABEL_13:
  int v9 = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 40) |= 4u;
  *(_DWORD *)(a1 + 20) = v9;
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 8) != 0) {
    goto LABEL_14;
  }
LABEL_8:
  if ((v4 & 0x10) != 0)
  {
LABEL_9:
    uint64_t v5 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 40) |= 0x10u;
    *(void *)(a1 + 24) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001123E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100112400(uint64_t a1)
{
  *(void *)a1 = off_10084F430;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100112454(uint64_t a1)
{
  *(void *)a1 = off_10084F430;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1001124BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 36) = a2;
  return result;
}

void sub_1001124C4()
{
}

void sub_100112504()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100112528(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40))
  {
    *(_WORD *)(a1 + 16) = 0;
    *(void *)(a1 + 28) = 0;
    *(void *)(a1 + 20) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 8) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100112550(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (2)
  {
    char v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        v26[0] = 0;
        char v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v26);
          if (!result) {
            return result;
          }
          unsigned int v12 = v26[0];
          int v13 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v12 = *v11;
          int v13 = v11 + 1;
          *((void *)this + 1) = v13;
        }
        *(unsigned char *)(a1 + 16) = v12 != 0;
        *(_DWORD *)(a1 + 40) |= 1u;
        if ((unint64_t)v13 < v10 && *v13 == 16)
        {
          int v14 = v13 + 1;
          *((void *)this + 1) = v14;
          goto LABEL_29;
        }
        continue;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_29:
        v26[0] = 0;
        if ((unint64_t)v14 >= v10 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v26);
          if (!result) {
            return result;
          }
          unsigned int v19 = v26[0];
          uint64_t v20 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v19 = *v14;
          uint64_t v20 = v14 + 1;
          *((void *)this + 1) = v20;
        }
        *(unsigned char *)(a1 + 17) = v19 != 0;
        *(_DWORD *)(a1 + 40) |= 2u;
        if ((unint64_t)v20 >= v10 || *v20 != 29) {
          continue;
        }
        *((void *)this + 1) = v20 + 1;
LABEL_37:
        v26[0] = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v26))
        {
          *(_DWORD *)(a1 + 20) = v26[0];
          *(_DWORD *)(a1 + 40) |= 4u;
          int v21 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
          if ((unint64_t)v21 < v15 && *v21 == 32)
          {
            uint64_t v16 = v21 + 1;
            *((void *)this + 1) = v16;
LABEL_41:
            v26[0] = 0;
            if ((unint64_t)v16 >= v15 || *v16 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v26);
              if (!result) {
                return result;
              }
              unsigned int v22 = v26[0];
              uint64_t v23 = (unsigned char *)*((void *)this + 1);
              unint64_t v15 = *((void *)this + 2);
            }
            else
            {
              unsigned int v22 = *v16;
              uint64_t v23 = v16 + 1;
              *((void *)this + 1) = v23;
            }
            *(_DWORD *)(a1 + 32) = v22;
            *(_DWORD *)(a1 + 40) |= 8u;
            if ((unint64_t)v23 < v15 && *v23 == 40)
            {
              unsigned int v17 = v23 + 1;
              *((void *)this + 1) = v17;
LABEL_49:
              *(void *)int v26 = 0;
              if ((unint64_t)v17 >= v15 || *v17 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, (unint64_t *)v26);
                if (!result) {
                  return result;
                }
                uint64_t v24 = *(void *)v26;
                uint64_t v25 = (unsigned __int8 *)*((void *)this + 1);
                unint64_t v15 = *((void *)this + 2);
              }
              else
              {
                uint64_t v24 = *v17;
                uint64_t v25 = (unsigned __int8 *)(v17 + 1);
                *((void *)this + 1) = v25;
              }
              *(void *)(a1 + 24) = v24;
              *(_DWORD *)(a1 + 40) |= 0x10u;
              if (v25 == (unsigned __int8 *)v15
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 5) {
          goto LABEL_37;
        }
        goto LABEL_20;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        uint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_41;
      case 5u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        unsigned int v17 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_49;
      default:
        int v9 = TagFallback & 7;
LABEL_20:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100112894(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 40);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(this + 16), (BOOL)a2, a4);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 17), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_16:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 32), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 40) & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v5 + 20), a3);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 8) != 0) {
    goto LABEL_16;
  }
LABEL_5:
  if ((v6 & 0x10) != 0) {
LABEL_6:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(v5 + 24), (uint64_t)a2, a4);
LABEL_7:
  int v9 = *(void **)(v5 + 8);
  char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  char v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

unsigned char *sub_10011297C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, unsigned char *a2, unsigned __int8 *a3)
{
  int v4 = *((_DWORD *)this + 10);
  if (v4)
  {
    char v5 = *((unsigned char *)this + 16);
    *a2 = 8;
    a2[1] = v5;
    a2 += 2;
    int v4 = *((_DWORD *)this + 10);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  char v6 = *((unsigned char *)this + 17);
  *a2 = 16;
  a2[1] = v6;
  a2 += 2;
  int v4 = *((_DWORD *)this + 10);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
LABEL_8:
  int v7 = *((_DWORD *)this + 5);
  *a2 = 29;
  *(_DWORD *)(a2 + 1) = v7;
  a2 += 5;
  if ((*((_DWORD *)this + 10) & 8) == 0) {
    goto LABEL_15;
  }
LABEL_9:
  char v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 8);
  *a2 = 32;
  if ((v8 & 0x80000000) != 0)
  {
    uint64_t v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v8, (unint64_t)(a2 + 1), a3);
  }
  else
  {
    if (v8 <= 0x7F)
    {
      a2[1] = (_BYTE)v8;
      a2 += 2;
      goto LABEL_15;
    }
    uint64_t v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)a2 + 1, a3);
  }
  a2 = (unsigned char *)v9;
LABEL_15:
  if ((*((unsigned char *)this + 40) & 0x10) != 0)
  {
    unint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 3);
    *a2 = 40;
    a2 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v10, (unint64_t)(a2 + 1), a3);
  }
  int v13 = (void *)*((void *)this + 1);
  unsigned int v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  char v11 = v13;
  if (!v13 || *v11 == v11[1]) {
    return a2;
  }

  return (unsigned char *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v12, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_100112AB4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 40);
  if ((_BYTE)v3)
  {
    unsigned int v4 = 2 * (v3 & 1);
    if ((v3 & 2) != 0) {
      v4 += 2;
    }
    if ((v3 & 4) != 0) {
      uint64_t v5 = v4 + 5;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 8) != 0)
    {
      char v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
      if ((v6 & 0x80000000) != 0)
      {
        int v7 = 11;
      }
      else if (v6 >= 0x80)
      {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2)
           + 1;
        int v3 = *(_DWORD *)(a1 + 40);
      }
      else
      {
        int v7 = 2;
      }
      uint64_t v5 = (v7 + v5);
    }
    if ((v3 & 0x10) != 0) {
      uint64_t v5 = v5
    }
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 24), (unint64_t)a2)+ 1;
  }
  else
  {
    uint64_t v5 = 0;
  }
  char v8 = *(void **)(a1 + 8);
  if (v8 && *v8 != v8[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 36) = v5;
  return v5;
}

uint64_t sub_100112B74(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001122C8((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100112C48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100112C60(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100112CEC()
{
  return 1;
}

uint64_t sub_100112CF4()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1248;
}

void sub_100112D88(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_100112D9C(void *a1)
{
  *a1 = off_10084F4E0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  return a1;
}

void sub_100112DE4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100112DF8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (*(unsigned char *)(a2 + 28))
  {
    *(_DWORD *)(a1 + 28) |= 1u;
    uint64_t v4 = *(void *)(a1 + 16);
    if (!v4) {
      operator new();
    }
    uint64_t v5 = *(void *)(a2 + 16);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_1008AC2E8 + 16);
    }
    sub_1001122C8(v4, v5);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100112ED8()
{
}

void sub_100112F10(void *a1)
{
  *a1 = off_10084F4E0;
  if ((void *)qword_1008AC2E8 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100112FA8(void *a1)
{
  sub_100112F10(a1);

  operator delete();
}

uint64_t sub_100112FE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 24) = a2;
  return result;
}

void sub_100112FE8()
{
}

void sub_100113028()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10011304C(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  uint64_t v1 = this;
  if (*((unsigned char *)this + 28))
  {
    this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)this + 2);
    if (this) {
      this = sub_100112528((uint64_t)this);
    }
  }
  uint64_t v3 = *((void *)v1 + 1);
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v2 + 5) = 0;
  if (v3)
  {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v2);
  }
  return this;
}

uint64_t sub_1001130AC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
      }
      if (TagFallback != 10) {
        break;
      }
      *(_DWORD *)(a1 + 28) |= 1u;
      uint64_t v9 = *(void *)(a1 + 16);
      if (!v9) {
        operator new();
      }
      unsigned int v20 = 0;
      unint64_t v10 = (char *)*((void *)this + 1);
      if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v20))return 0; {
      }
        }
      else
      {
        unsigned int v20 = *v10;
        *((void *)this + 1) = v10 + 1;
      }
      int v11 = *((_DWORD *)this + 14);
      int v12 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v11 + 1;
      if (v11 >= v12) {
        return 0;
      }
      int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v20);
      if (!sub_100112550(v9, this, v14, v15) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
      int v16 = *((_DWORD *)this + 14);
      BOOL v17 = __OFSUB__(v16, 1);
      int v18 = v16 - 1;
      if (v18 < 0 == v17) {
        *((_DWORD *)this + 14) = v18;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
  }
    }
  return 1;
}

void sub_10011325C()
{
}

uint64_t sub_100113280(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 28))
  {
    uint64_t v6 = *(void *)(this + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1008AC2E8 + 16);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  uint64_t v9 = *(void **)(v5 + 8);
  char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

unsigned char *sub_100113304(wireless_diagnostics::google::protobuf::internal::WireFormat *this, unsigned char *a2, unsigned __int8 *a3)
{
  if (*((unsigned char *)this + 28))
  {
    uint64_t v4 = (unsigned int *)*((void *)this + 2);
    if (!v4) {
      uint64_t v4 = *(unsigned int **)(qword_1008AC2E8 + 16);
    }
    *a2 = 10;
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v4[9];
    if (v5 > 0x7F)
    {
      uint64_t v6 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v5, (int)a2 + 1, a3);
    }
    else
    {
      a2[1] = (_BYTE)v5;
      uint64_t v6 = a2 + 2;
    }
    a2 = sub_10011297C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v4, v6, a3);
  }
  uint64_t v9 = (void *)*((void *)this + 1);
  char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v7 = v9;
  if (!v9 || *v7 == v7[1]) {
    return a2;
  }

  return (unsigned char *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v8, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_1001133B4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (*(unsigned char *)(a1 + 28))
  {
    uint64_t v4 = *(void *)(a1 + 16);
    if (!v4) {
      uint64_t v4 = *(void *)(qword_1008AC2E8 + 16);
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100112AB4(v4, a2);
    int v6 = (int)v5;
    if (v5 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    }
    else {
      int v7 = 1;
    }
    uint64_t v3 = (v6 + v7 + 1);
  }
  else
  {
    uint64_t v3 = 0;
  }
  char v8 = *(void **)(a1 + 8);
  if (v8 && *v8 != v8[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  }
  *(_DWORD *)(a1 + 24) = v3;
  return v3;
}

uint64_t sub_100113448(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100112DF8((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10011351C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100113534(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001135C0()
{
  return 1;
}

uint64_t sub_1001135C8()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1258;
}

void sub_10011365C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100113670(uint64_t a1)
{
  *(void *)a1 = off_10084F590;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 80) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 60) = 0u;
  return a1;
}

void sub_1001136C8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1001136DC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v23);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 56), *(_DWORD *)(a2 + 64) + *(_DWORD *)(a1 + 64));
  if (*(int *)(a2 + 64) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 56) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 68);
      uint64_t v7 = *(int *)(a1 + 64);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 72))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 56), v6 + 1);
          int v6 = *(_DWORD *)(a1 + 68);
        }
        *(_DWORD *)(a1 + 68) = v6 + 1;
        sub_1001327DC();
      }
      uint64_t v8 = *(void *)(a1 + 56);
      *(_DWORD *)(a1 + 64) = v7 + 1;
      sub_10011004C(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 64));
  }
  int v9 = *(_DWORD *)(a2 + 84);
  if (!(_BYTE)v9) {
    goto LABEL_21;
  }
  if (v9)
  {
    uint64_t v13 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 84) |= 1u;
    *(void *)(a1 + 16) = v13;
    int v9 = *(_DWORD *)(a2 + 84);
    if ((v9 & 2) == 0)
    {
LABEL_14:
      if ((v9 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_30;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_14;
  }
  char v14 = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 84) |= 2u;
  *(unsigned char *)(a1 + 36) = v14;
  int v9 = *(_DWORD *)(a2 + 84);
  if ((v9 & 4) == 0)
  {
LABEL_15:
    if ((v9 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_31;
  }
LABEL_30:
  int v15 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 84) |= 4u;
  *(_DWORD *)(a1 + 24) = v15;
  int v9 = *(_DWORD *)(a2 + 84);
  if ((v9 & 8) == 0)
  {
LABEL_16:
    if ((v9 & 0x10) == 0) {
      goto LABEL_17;
    }
    goto LABEL_32;
  }
LABEL_31:
  char v16 = *(unsigned char *)(a2 + 37);
  *(_DWORD *)(a1 + 84) |= 8u;
  *(unsigned char *)(a1 + 37) = v16;
  int v9 = *(_DWORD *)(a2 + 84);
  if ((v9 & 0x10) == 0)
  {
LABEL_17:
    if ((v9 & 0x20) == 0) {
      goto LABEL_18;
    }
LABEL_33:
    int v18 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 84) |= 0x20u;
    *(_DWORD *)(a1 + 32) = v18;
    int v9 = *(_DWORD *)(a2 + 84);
    if ((v9 & 0x40) == 0)
    {
LABEL_19:
      if ((v9 & 0x80) == 0) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }
    goto LABEL_34;
  }
LABEL_32:
  int v17 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 84) |= 0x10u;
  *(_DWORD *)(a1 + 28) = v17;
  int v9 = *(_DWORD *)(a2 + 84);
  if ((v9 & 0x20) != 0) {
    goto LABEL_33;
  }
LABEL_18:
  if ((v9 & 0x40) == 0) {
    goto LABEL_19;
  }
LABEL_34:
  int v19 = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 84) |= 0x40u;
  *(_DWORD *)(a1 + 40) = v19;
  int v9 = *(_DWORD *)(a2 + 84);
  if ((v9 & 0x80) != 0)
  {
LABEL_20:
    int v10 = *(_DWORD *)(a2 + 44);
    *(_DWORD *)(a1 + 84) |= 0x80u;
    *(_DWORD *)(a1 + 44) = v10;
    int v9 = *(_DWORD *)(a2 + 84);
  }
LABEL_21:
  if ((v9 & 0xFF00) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v9 & 0x100) != 0)
  {
    int v20 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 84) |= 0x100u;
    *(_DWORD *)(a1 + 48) = v20;
    int v9 = *(_DWORD *)(a2 + 84);
    if ((v9 & 0x200) == 0)
    {
LABEL_24:
      if ((v9 & 0x400) == 0) {
        goto LABEL_25;
      }
LABEL_38:
      char v22 = *(unsigned char *)(a2 + 39);
      *(_DWORD *)(a1 + 84) |= 0x400u;
      *(unsigned char *)(a1 + 39) = v22;
      if ((*(_DWORD *)(a2 + 84) & 0x800) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
      goto LABEL_26;
    }
  }
  else if ((v9 & 0x200) == 0)
  {
    goto LABEL_24;
  }
  char v21 = *(unsigned char *)(a2 + 38);
  *(_DWORD *)(a1 + 84) |= 0x200u;
  *(unsigned char *)(a1 + 38) = v21;
  int v9 = *(_DWORD *)(a2 + 84);
  if ((v9 & 0x400) != 0) {
    goto LABEL_38;
  }
LABEL_25:
  if ((v9 & 0x800) != 0)
  {
LABEL_26:
    int v11 = *(_DWORD *)(a2 + 52);
    *(_DWORD *)(a1 + 84) |= 0x800u;
    *(_DWORD *)(a1 + 52) = v11;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001139A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001139B8(uint64_t *a1)
{
  *a1 = (uint64_t)off_10084F590;
  sub_10006F938(a1 + 7);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100113A1C(uint64_t *a1)
{
  sub_1001139B8(a1);

  operator delete();
}

uint64_t sub_100113A54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 80) = a2;
  return result;
}

void sub_100113A5C()
{
}

void sub_100113A9C()
{
}

uint64_t sub_100113AC0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 84);
  if ((_BYTE)v2)
  {
    *(void *)(a1 + 40) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 30) = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_WORD *)(a1 + 38) = 0;
    *(void *)(a1 + 48) = 0;
  }
  uint64_t result = sub_10006F8C8(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)v4 + 19) = 0;
  if (v5)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return result;
}

uint64_t sub_100113B3C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 56);
  unsigned int v7 = a1 + 8;
  while (2)
  {
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if (v10 != 1) {
          goto LABEL_40;
        }
        *(void *)int v49 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v49) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v49;
        }
        *(_DWORD *)(a1 + 84) |= 1u;
        int v12 = (unsigned char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v12 >= v11 || *v12 != 16) {
          continue;
        }
        uint64_t v13 = v12 + 1;
        *((void *)this + 1) = v13;
        goto LABEL_16;
      case 2u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
LABEL_16:
        v49[0] = 0;
        if ((unint64_t)v13 >= v11 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v49);
          if (!result) {
            return result;
          }
          unsigned int v14 = v49[0];
          int v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          unsigned int v14 = *v13;
          int v15 = v13 + 1;
          *((void *)this + 1) = v15;
        }
        *(unsigned char *)(a1 + 36) = v14 != 0;
        *(_DWORD *)(a1 + 84) |= 2u;
        if ((unint64_t)v15 >= v11 || *v15 != 29) {
          continue;
        }
        *((void *)this + 1) = v15 + 1;
LABEL_48:
        v49[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v49) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 24) = v49[0];
        *(_DWORD *)(a1 + 84) |= 4u;
        char v22 = (unsigned char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v22 >= v16 || *v22 != 32) {
          continue;
        }
        int v17 = v22 + 1;
        *((void *)this + 1) = v17;
LABEL_52:
        v49[0] = 0;
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v49);
          if (!result) {
            return result;
          }
          unsigned int v23 = v49[0];
          uint64_t v24 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v23 = *v17;
          uint64_t v24 = v17 + 1;
          *((void *)this + 1) = v24;
        }
        *(unsigned char *)(a1 + 37) = v23 != 0;
        *(_DWORD *)(a1 + 84) |= 8u;
        if ((unint64_t)v24 >= v16 || *v24 != 45) {
          continue;
        }
        *((void *)this + 1) = v24 + 1;
LABEL_60:
        v49[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v49) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 28) = v49[0];
        *(_DWORD *)(a1 + 84) |= 0x10u;
        uint64_t v25 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 != 53) {
          continue;
        }
        *((void *)this + 1) = v25 + 1;
LABEL_64:
        v49[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v49) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 32) = v49[0];
        *(_DWORD *)(a1 + 84) |= 0x20u;
        int v26 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v26 >= *((void *)this + 2) || *v26 != 61) {
          continue;
        }
        *((void *)this + 1) = v26 + 1;
LABEL_68:
        v49[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v49) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 40) = v49[0];
        *(_DWORD *)(a1 + 84) |= 0x40u;
        int v27 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v27 >= *((void *)this + 2) || *v27 != 69) {
          continue;
        }
        *((void *)this + 1) = v27 + 1;
LABEL_72:
        v49[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v49) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 44) = v49[0];
        *(_DWORD *)(a1 + 84) |= 0x80u;
        BOOL v28 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 != 77) {
          continue;
        }
        *((void *)this + 1) = v28 + 1;
LABEL_76:
        v49[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v49) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 48) = v49[0];
        *(_DWORD *)(a1 + 84) |= 0x100u;
        int v29 = (unsigned char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        if ((unint64_t)v29 >= v18 || *v29 != 80) {
          continue;
        }
        int v19 = v29 + 1;
        *((void *)this + 1) = v19;
LABEL_80:
        v49[0] = 0;
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v49);
          if (!result) {
            return result;
          }
          unsigned int v30 = v49[0];
          uint64_t v31 = (unsigned char *)*((void *)this + 1);
          unint64_t v18 = *((void *)this + 2);
        }
        else
        {
          unsigned int v30 = *v19;
          uint64_t v31 = v19 + 1;
          *((void *)this + 1) = v31;
        }
        *(unsigned char *)(a1 + 38) = v30 != 0;
        *(_DWORD *)(a1 + 84) |= 0x200u;
        if ((unint64_t)v31 >= v18 || *v31 != 88) {
          continue;
        }
        int v20 = v31 + 1;
        *((void *)this + 1) = v20;
LABEL_88:
        v49[0] = 0;
        if ((unint64_t)v20 >= v18 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v49);
          if (!result) {
            return result;
          }
          unsigned int v32 = v49[0];
          int v33 = (unsigned char *)*((void *)this + 1);
          unint64_t v18 = *((void *)this + 2);
        }
        else
        {
          unsigned int v32 = *v20;
          int v33 = v20 + 1;
          *((void *)this + 1) = v33;
        }
        *(unsigned char *)(a1 + 39) = v32 != 0;
        *(_DWORD *)(a1 + 84) |= 0x400u;
        if ((unint64_t)v33 >= v18 || *v33 != 101) {
          continue;
        }
        *((void *)this + 1) = v33 + 1;
LABEL_96:
        v49[0] = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v49))
        {
          *(_DWORD *)(a1 + 52) = v49[0];
          *(_DWORD *)(a1 + 84) |= 0x800u;
          int v34 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v34 < *((void *)this + 2) && *v34 == 106)
          {
            do
            {
              *((void *)this + 1) = v34 + 1;
LABEL_100:
              int v35 = *(_DWORD *)(a1 + 68);
              uint64_t v36 = *(int *)(a1 + 64);
              if ((int)v36 >= v35)
              {
                if (v35 == *(_DWORD *)(a1 + 72))
                {
                  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v35 + 1);
                  int v35 = *(_DWORD *)(a1 + 68);
                }
                *(_DWORD *)(a1 + 68) = v35 + 1;
                sub_1001327DC();
              }
              uint64_t v37 = *(void *)(a1 + 56);
              *(_DWORD *)(a1 + 64) = v36 + 1;
              uint64_t v38 = *(void *)(v37 + 8 * v36);
              v49[0] = 0;
              int v39 = (char *)*((void *)this + 1);
              if ((unint64_t)v39 >= *((void *)this + 2) || *v39 < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v49))return 0; {
              }
                }
              else
              {
                v49[0] = *v39;
                *((void *)this + 1) = v39 + 1;
              }
              int v40 = *((_DWORD *)this + 14);
              int v41 = *((_DWORD *)this + 15);
              *((_DWORD *)this + 14) = v40 + 1;
              if (v40 >= v41) {
                return 0;
              }
              int v42 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v49[0]);
              if (!sub_1001105C4(v38, this, v43, v44) || !*((unsigned char *)this + 36)) {
                return 0;
              }
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v42);
              int v45 = *((_DWORD *)this + 14);
              BOOL v46 = __OFSUB__(v45, 1);
              int v47 = v45 - 1;
              if (v47 < 0 == v46) {
                *((_DWORD *)this + 14) = v47;
              }
              int v34 = (unsigned char *)*((void *)this + 1);
              int v48 = (unsigned char *)*((void *)this + 2);
            }
            while (v34 < v48 && *v34 == 106);
            if (v34 == v48 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)this + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v10 = TagFallback & 7;
        if (v10 == 5) {
          goto LABEL_48;
        }
        goto LABEL_40;
      case 4u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_52;
      case 5u:
        int v10 = TagFallback & 7;
        if (v10 == 5) {
          goto LABEL_60;
        }
        goto LABEL_40;
      case 6u:
        int v10 = TagFallback & 7;
        if (v10 == 5) {
          goto LABEL_64;
        }
        goto LABEL_40;
      case 7u:
        int v10 = TagFallback & 7;
        if (v10 == 5) {
          goto LABEL_68;
        }
        goto LABEL_40;
      case 8u:
        int v10 = TagFallback & 7;
        if (v10 == 5) {
          goto LABEL_72;
        }
        goto LABEL_40;
      case 9u:
        int v10 = TagFallback & 7;
        if (v10 == 5) {
          goto LABEL_76;
        }
        goto LABEL_40;
      case 0xAu:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_80;
      case 0xBu:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_88;
      case 0xCu:
        int v10 = TagFallback & 7;
        if (v10 == 5) {
          goto LABEL_96;
        }
        goto LABEL_40;
      case 0xDu:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_40;
        }
        goto LABEL_100;
      default:
        int v10 = TagFallback & 7;
LABEL_40:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_10011425C(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 84);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    int v6 = *(_DWORD *)(v5 + 84);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_25;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 36), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 37), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(float *)(v5 + 28), a3);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(float *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(float *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_31;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(float *)(v5 + 44), a3);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_32;
  }
LABEL_31:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(float *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_33;
  }
LABEL_32:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned __int8 *)(v5 + 38), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_33:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned __int8 *)(v5 + 39), (BOOL)a2, a4);
  if ((*(_DWORD *)(v5 + 84) & 0x800) != 0) {
LABEL_13:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (int)a2, *(float *)(v5 + 52), a3);
LABEL_14:
  if (*(int *)(v5 + 64) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(void *)(*(void *)(v5 + 56) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 64));
  }
  int v10 = *(void **)(v5 + 8);
  int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v8 = v10;
  if (v10 && *v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100114448(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  char v3 = a2;
  int v5 = *((_DWORD *)this + 21);
  if (v5)
  {
    uint64_t v15 = *((void *)this + 2);
    *(unsigned char *)a2 = 9;
    *(void *)((char *)a2 + 1) = v15;
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
    int v5 = *((_DWORD *)this + 21);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_28;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  char v16 = *((unsigned char *)this + 36);
  *(unsigned char *)char v3 = 16;
  *((unsigned char *)v3 + 1) = v16;
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  int v5 = *((_DWORD *)this + 21);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_29;
  }
LABEL_28:
  int v17 = *((_DWORD *)this + 6);
  *(unsigned char *)char v3 = 29;
  *(_DWORD *)((char *)v3 + 1) = v17;
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
  int v5 = *((_DWORD *)this + 21);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_30;
  }
LABEL_29:
  char v18 = *((unsigned char *)this + 37);
  *(unsigned char *)char v3 = 32;
  *((unsigned char *)v3 + 1) = v18;
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  int v5 = *((_DWORD *)this + 21);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_31;
  }
LABEL_30:
  int v19 = *((_DWORD *)this + 7);
  *(unsigned char *)char v3 = 45;
  *(_DWORD *)((char *)v3 + 1) = v19;
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
  int v5 = *((_DWORD *)this + 21);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_32;
  }
LABEL_31:
  int v20 = *((_DWORD *)this + 8);
  *(unsigned char *)char v3 = 53;
  *(_DWORD *)((char *)v3 + 1) = v20;
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
  int v5 = *((_DWORD *)this + 21);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_33;
  }
LABEL_32:
  int v21 = *((_DWORD *)this + 10);
  *(unsigned char *)char v3 = 61;
  *(_DWORD *)((char *)v3 + 1) = v21;
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
  int v5 = *((_DWORD *)this + 21);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_34;
  }
LABEL_33:
  int v22 = *((_DWORD *)this + 11);
  *(unsigned char *)char v3 = 69;
  *(_DWORD *)((char *)v3 + 1) = v22;
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
  int v5 = *((_DWORD *)this + 21);
  if ((v5 & 0x100) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_35;
  }
LABEL_34:
  int v23 = *((_DWORD *)this + 12);
  *(unsigned char *)char v3 = 77;
  *(_DWORD *)((char *)v3 + 1) = v23;
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
  int v5 = *((_DWORD *)this + 21);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_36;
  }
LABEL_35:
  char v24 = *((unsigned char *)this + 38);
  *(unsigned char *)char v3 = 80;
  *((unsigned char *)v3 + 1) = v24;
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  int v5 = *((_DWORD *)this + 21);
  if ((v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v5 & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_36:
  char v25 = *((unsigned char *)this + 39);
  *(unsigned char *)char v3 = 88;
  *((unsigned char *)v3 + 1) = v25;
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  if ((*((_DWORD *)this + 21) & 0x800) != 0)
  {
LABEL_13:
    int v6 = *((_DWORD *)this + 13);
    *(unsigned char *)char v3 = 101;
    *(_DWORD *)((char *)v3 + 1) = v6;
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
  }
LABEL_14:
  if (*((int *)this + 16) >= 1)
  {
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = *(unsigned int **)(*((void *)this + 7) + 8 * v7);
      *(unsigned char *)char v3 = 106;
      int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8[21];
      if (v9 > 0x7F)
      {
        int v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (int)v3 + 1, a3);
      }
      else
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v9;
        int v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      }
      char v3 = sub_100110DA8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v8, v10, a3);
      ++v7;
    }
    while (v7 < *((int *)this + 16));
  }
  uint64_t v13 = (void *)*((void *)this + 1);
  int v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  unint64_t v11 = v13;
  if (!v13 || *v11 == v11[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v12, v3, a3);
}

uint64_t sub_100114774(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 84);
  if ((_BYTE)v3)
  {
    int v4 = (v3 << 31 >> 31) & 9 | v3 & 2;
    if ((v3 & 4) != 0) {
      v4 += 5;
    }
    if ((v3 & 8) != 0) {
      v4 += 2;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x80) != 0) {
      v4 += 5;
    }
  }
  else
  {
    int v4 = 0;
  }
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x200) != 0) {
      v4 += 2;
    }
    if ((v3 & 0x400) != 0) {
      v4 += 2;
    }
    if ((v3 & 0x800) != 0) {
      v4 += 5;
    }
  }
  int v5 = *(_DWORD *)(a1 + 64);
  uint64_t v6 = (v5 + v4);
  if (v5 >= 1)
  {
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001110FC(*(void *)(*(void *)(a1 + 56) + 8 * v7), a2);
      int v9 = (int)v8;
      if (v8 >= 0x80) {
        int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
      }
      else {
        int v10 = 1;
      }
      uint64_t v6 = (v9 + v6 + v10);
      ++v7;
    }
    while (v7 < *(int *)(a1 + 64));
  }
  unint64_t v11 = *(void **)(a1 + 8);
  if (v11 && *v11 != v11[1]) {
    uint64_t v6 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v6;
  }
  *(_DWORD *)(a1 + 80) = v6;
  return v6;
}

uint64_t sub_1001148C0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001136DC((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100114994(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001149AC(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100114A38()
{
  return 1;
}

uint64_t sub_100114A40()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1268;
}

void sub_100114AD4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100114AE8(uint64_t a1)
{
  *(void *)a1 = off_10084F640;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_DWORD *)(a1 + 64) = 0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return a1;
}

void sub_100114B3C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100114B50(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 64);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 64))
  {
    uint64_t v5 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 64) |= 1u;
    *(void *)(a1 + 16) = v5;
    int v4 = *(_DWORD *)(a2 + 64);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a2 + 64) & 2) == 0)
  {
    goto LABEL_6;
  }
  int v6 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 64) |= 2u;
  *(_DWORD *)(a1 + 24) = v6;
  int v4 = *(_DWORD *)(a2 + 64);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_15;
  }
LABEL_14:
  int v7 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 64) |= 4u;
  *(_DWORD *)(a1 + 28) = v7;
  int v4 = *(_DWORD *)(a2 + 64);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
LABEL_16:
    *(_DWORD *)(a1 + 64) |= 0x10u;
    uint64_t v9 = *(void *)(a1 + 32);
    if (!v9) {
      operator new();
    }
    uint64_t v10 = *(void *)(a2 + 32);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_1008AC2F8 + 32);
    }
    sub_1001136DC(v9, v10);
    int v4 = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
      goto LABEL_26;
    }
    goto LABEL_21;
  }
LABEL_15:
  int v8 = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 64) |= 8u;
  *(_DWORD *)(a1 + 56) = v8;
  int v4 = *(_DWORD *)(a2 + 64);
  if ((v4 & 0x10) != 0) {
    goto LABEL_16;
  }
LABEL_9:
  if ((v4 & 0x20) == 0) {
    goto LABEL_10;
  }
LABEL_21:
  *(_DWORD *)(a1 + 64) |= 0x20u;
  uint64_t v11 = *(void *)(a1 + 40);
  if (!v11) {
    operator new();
  }
  uint64_t v12 = *(void *)(a2 + 40);
  if (!v12) {
    uint64_t v12 = *(void *)(qword_1008AC2F8 + 40);
  }
  sub_100111544(v11, v12);
  if ((*(_DWORD *)(a2 + 64) & 0x40) != 0)
  {
LABEL_26:
    *(_DWORD *)(a1 + 64) |= 0x40u;
    uint64_t v13 = *(void *)(a1 + 48);
    if (!v13) {
      operator new();
    }
    uint64_t v14 = *(void *)(a2 + 48);
    if (!v14) {
      uint64_t v14 = *(void *)(qword_1008AC2F8 + 48);
    }
    sub_100112DF8(v13, v14);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100114D78()
{
}

void sub_100114DD8(void *a1)
{
  *a1 = off_10084F640;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_100114E38(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void *sub_100114E38(void *result)
{
  if ((void *)qword_1008AC2F8 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[4];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[5];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t result = (void *)v1[6];
    if (result)
    {
      int v4 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v4();
    }
  }
  return result;
}

void sub_100114F08(void *a1)
{
  sub_100114DD8(a1);

  operator delete();
}

uint64_t sub_100114F40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 60) = a2;
  return result;
}

void sub_100114F48()
{
}

void sub_100114F88()
{
}

uint64_t sub_100114FAC(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 64);
  if ((_BYTE)v2)
  {
    *(_DWORD *)(this + 56) = 0;
    *(void *)(this + 16) = 0;
    *(void *)(this + 24) = 0;
    if ((v2 & 0x10) != 0)
    {
      this = *(void *)(this + 32);
      if (this)
      {
        this = sub_100113AC0(this);
        int v2 = *(_DWORD *)(v1 + 64);
      }
    }
    if ((v2 & 0x20) != 0)
    {
      this = *(void *)(v1 + 40);
      if (this)
      {
        this = (uint64_t)sub_100111834(this);
        int v2 = *(_DWORD *)(v1 + 64);
      }
    }
    if ((v2 & 0x40) != 0)
    {
      this = *(void *)(v1 + 48);
      if (this) {
        this = (uint64_t)sub_10011304C((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
  }
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v3 + 14) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return this;
}

uint64_t sub_100115040(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (unint64_t *)(a1 + 16);
  int v7 = (unsigned int *)(a1 + 24);
  int v8 = (unsigned int *)(a1 + 28);
  uint64_t v9 = (unsigned int *)(a1 + 56);
  unsigned int v10 = a1 + 8;
  while (1)
  {
    uint64_t v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 < *((void *)this + 2) && (*v11 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v11;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v11 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!result) {
            return result;
          }
          char v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v15;
          char v16 = v15 + 1;
          *((void *)this + 1) = v16;
        }
        *(_DWORD *)(a1 + 64) |= 1u;
        if ((unint64_t)v16 < v14 && *v16 == 16)
        {
          int v17 = v16 + 1;
          *((void *)this + 1) = v17;
          goto LABEL_32;
        }
        continue;
      case 2u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
LABEL_32:
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v22 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v17;
          int v22 = v17 + 1;
          *((void *)this + 1) = v22;
        }
        *(_DWORD *)(a1 + 64) |= 2u;
        if ((unint64_t)v22 >= v14 || *v22 != 24) {
          continue;
        }
        char v18 = v22 + 1;
        *((void *)this + 1) = v18;
LABEL_40:
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v23 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v8 = *v18;
          int v23 = v18 + 1;
          *((void *)this + 1) = v23;
        }
        *(_DWORD *)(a1 + 64) |= 4u;
        if ((unint64_t)v23 >= v14 || *v23 != 32) {
          continue;
        }
        int v19 = v23 + 1;
        *((void *)this + 1) = v19;
LABEL_48:
        if ((unint64_t)v19 >= v14 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          char v24 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v9 = *v19;
          char v24 = v19 + 1;
          *((void *)this + 1) = v24;
        }
        int v20 = *(_DWORD *)(a1 + 64) | 8;
        *(_DWORD *)(a1 + 64) = v20;
        if ((unint64_t)v24 >= v14 || *v24 != 42) {
          continue;
        }
        *((void *)this + 1) = v24 + 1;
LABEL_56:
        *(_DWORD *)(a1 + 64) = v20 | 0x10;
        uint64_t v25 = *(void *)(a1 + 32);
        if (!v25) {
          operator new();
        }
        unsigned int v55 = 0;
        int v26 = (char *)*((void *)this + 1);
        if ((unint64_t)v26 >= *((void *)this + 2) || *v26 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v55))return 0; {
        }
          }
        else
        {
          unsigned int v55 = *v26;
          *((void *)this + 1) = v26 + 1;
        }
        int v27 = *((_DWORD *)this + 14);
        int v28 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v27 + 1;
        if (v27 >= v28) {
          return 0;
        }
        int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v55);
        if (!sub_100113B3C(v25, this, v30, v31) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
        int v32 = *((_DWORD *)this + 14);
        BOOL v33 = __OFSUB__(v32, 1);
        int v34 = v32 - 1;
        if (v34 < 0 == v33) {
          *((_DWORD *)this + 14) = v34;
        }
        int v35 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v35 >= *((void *)this + 2) || *v35 != 50) {
          continue;
        }
        *((void *)this + 1) = v35 + 1;
LABEL_70:
        *(_DWORD *)(a1 + 64) |= 0x20u;
        uint64_t v36 = *(void *)(a1 + 40);
        if (!v36) {
          operator new();
        }
        unsigned int v56 = 0;
        uint64_t v37 = (char *)*((void *)this + 1);
        if ((unint64_t)v37 >= *((void *)this + 2) || *v37 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v56))return 0; {
        }
          }
        else
        {
          unsigned int v56 = *v37;
          *((void *)this + 1) = v37 + 1;
        }
        int v38 = *((_DWORD *)this + 14);
        int v39 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v38 + 1;
        if (v38 >= v39) {
          return 0;
        }
        int v40 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v56);
        if (!sub_100111864(v36, this, v41, v42) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v40);
        int v43 = *((_DWORD *)this + 14);
        BOOL v33 = __OFSUB__(v43, 1);
        int v44 = v43 - 1;
        if (v44 < 0 == v33) {
          *((_DWORD *)this + 14) = v44;
        }
        int v45 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v45 >= *((void *)this + 2) || *v45 != 58) {
          continue;
        }
        *((void *)this + 1) = v45 + 1;
LABEL_84:
        *(_DWORD *)(a1 + 64) |= 0x40u;
        uint64_t v46 = *(void *)(a1 + 48);
        if (!v46) {
          operator new();
        }
        unsigned int v57 = 0;
        int v47 = (char *)*((void *)this + 1);
        if ((unint64_t)v47 >= *((void *)this + 2) || *v47 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v57))return 0; {
        }
          }
        else
        {
          unsigned int v57 = *v47;
          *((void *)this + 1) = v47 + 1;
        }
        int v48 = *((_DWORD *)this + 14);
        int v49 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v48 + 1;
        if (v48 >= v49) {
          return 0;
        }
        int v50 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v57);
        if (!sub_1001130AC(v46, this, v51, v52) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v50);
        int v53 = *((_DWORD *)this + 14);
        BOOL v33 = __OFSUB__(v53, 1);
        int v54 = v53 - 1;
        if (v54 < 0 == v33) {
          *((_DWORD *)this + 14) = v54;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        char v18 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_40;
      case 4u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_48;
      case 5u:
        int v13 = TagFallback & 7;
        if (v13 != 2) {
          goto LABEL_24;
        }
        int v20 = *(_DWORD *)(a1 + 64);
        goto LABEL_56;
      case 6u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_70;
        }
        goto LABEL_24;
      case 7u:
        int v13 = TagFallback & 7;
        if (v13 != 2) {
          goto LABEL_24;
        }
        goto LABEL_84;
      default:
        int v13 = TagFallback & 7;
LABEL_24:
        if (v13 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v10, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_100115600()
{
}

uint64_t sub_100115668(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 64);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 16), (unint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 64);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 28), a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 56), a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_13:
  uint64_t v7 = *(void *)(v5 + 32);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1008AC2F8 + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_22;
    }
    goto LABEL_19;
  }
LABEL_16:
  uint64_t v8 = *(void *)(v5 + 40);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1008AC2F8 + 40);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v8, a2, a4);
  if ((*(_DWORD *)(v5 + 64) & 0x40) != 0)
  {
LABEL_19:
    uint64_t v9 = *(void *)(v5 + 48);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1008AC2F8 + 48);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v9, a2, a4);
  }
LABEL_22:
  uint64_t v12 = *(void **)(v5 + 8);
  uint64_t v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v10 = v12;
  if (v12 && *v10 != v10[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v11, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001157B8(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  int v5 = *((_DWORD *)this + 16);
  if (v5)
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 2);
    *(unsigned char *)a2 = 8;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v6, (unint64_t)a2 + 1, a3);
    int v5 = *((_DWORD *)this + 16);
  }
  if ((v5 & 2) != 0)
  {
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    *(unsigned char *)uint64_t v3 = 16;
    if (v7 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v7;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 64) & 4) != 0)
  {
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    *(unsigned char *)uint64_t v3 = 24;
    if (v8 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v8;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 64) & 8) != 0)
  {
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    *(unsigned char *)uint64_t v3 = 32;
    if (v9 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v9;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  int v10 = *((_DWORD *)this + 16);
  if ((v10 & 0x10) != 0)
  {
    uint64_t v11 = (unsigned int *)*((void *)this + 4);
    if (!v11) {
      uint64_t v11 = *(unsigned int **)(qword_1008AC2F8 + 32);
    }
    *(unsigned char *)uint64_t v3 = 42;
    uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[20];
    if (v12 > 0x7F)
    {
      int v13 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v12;
      int v13 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
    uint64_t v3 = sub_100114448((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, v13, a3);
    int v10 = *((_DWORD *)this + 16);
    if ((v10 & 0x20) == 0)
    {
LABEL_17:
      if ((v10 & 0x40) == 0) {
        goto LABEL_37;
      }
      goto LABEL_31;
    }
  }
  else if ((v10 & 0x20) == 0)
  {
    goto LABEL_17;
  }
  uint64_t v14 = *((void *)this + 5);
  if (!v14) {
    uint64_t v14 = *(void *)(qword_1008AC2F8 + 40);
  }
  *(unsigned char *)uint64_t v3 = 50;
  uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v14 + 48);
  if (v15 > 0x7F)
  {
    uint64_t v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, (int)v3 + 1, a3);
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v15;
    uint64_t v16 = (uint64_t)v3 + 2;
  }
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100111DB4(v14, v16, a3);
  if ((*((_DWORD *)this + 16) & 0x40) != 0)
  {
LABEL_31:
    int v17 = (unsigned int *)*((void *)this + 6);
    if (!v17) {
      int v17 = *(unsigned int **)(qword_1008AC2F8 + 48);
    }
    *(unsigned char *)uint64_t v3 = 58;
    char v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17[6];
    if (v18 > 0x7F)
    {
      int v19 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v18;
      int v19 = (char *)v3 + 2;
    }
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100113304((wireless_diagnostics::google::protobuf::internal::WireFormat *)v17, v19, a3);
  }
LABEL_37:
  int v22 = (void *)*((void *)this + 1);
  int v21 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v20 = v22;
  if (!v22 || *v20 == v20[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v21, v3, a3);
}

uint64_t sub_1001159DC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 64);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_43;
  }
  if (*(unsigned char *)(a1 + 64))
  {
    uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16), (unint64_t)a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 64);
    if ((v3 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 64) & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 64);
  }
  else
  {
    int v6 = 2;
  }
  uint64_t v4 = (v6 + v4);
LABEL_11:
  if ((v3 & 4) != 0)
  {
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 64);
    }
    else
    {
      int v8 = 2;
    }
    uint64_t v4 = (v8 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_13:
      if ((v3 & 0x10) == 0) {
        goto LABEL_14;
      }
      goto LABEL_25;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_13;
  }
  uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 64);
  }
  else
  {
    int v10 = 2;
  }
  uint64_t v4 = (v10 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_14:
    if ((v3 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_31;
  }
LABEL_25:
  uint64_t v11 = *(void *)(a1 + 32);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_1008AC2F8 + 32);
  }
  uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100114774(v11, a2);
  int v13 = (int)v12;
  if (v12 >= 0x80) {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
  }
  else {
    int v14 = 1;
  }
  uint64_t v4 = (v4 + v13 + v14 + 1);
  int v3 = *(_DWORD *)(a1 + 64);
  if ((v3 & 0x20) == 0)
  {
LABEL_15:
    if ((v3 & 0x40) == 0) {
      goto LABEL_43;
    }
    goto LABEL_37;
  }
LABEL_31:
  uint64_t v15 = *(void *)(a1 + 40);
  if (!v15) {
    uint64_t v15 = *(void *)(qword_1008AC2F8 + 40);
  }
  uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100111F84(v15, a2);
  int v17 = (int)v16;
  if (v16 >= 0x80) {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
  }
  else {
    int v18 = 1;
  }
  uint64_t v4 = (v4 + v17 + v18 + 1);
  if ((*(_DWORD *)(a1 + 64) & 0x40) != 0)
  {
LABEL_37:
    uint64_t v19 = *(void *)(a1 + 48);
    if (!v19) {
      uint64_t v19 = *(void *)(qword_1008AC2F8 + 48);
    }
    int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001133B4(v19, a2);
    int v21 = (int)v20;
    if (v20 >= 0x80) {
      int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, a2);
    }
    else {
      int v22 = 1;
    }
    uint64_t v4 = (v4 + v21 + v22 + 1);
  }
LABEL_43:
  int v23 = *(void **)(a1 + 8);
  if (v23 && *v23 != v23[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 60) = v4;
  return v4;
}

uint64_t sub_100115BBC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100114B50((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100115C90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100115CA8(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100115D34()
{
  return 1;
}

uint64_t sub_100115D3C()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1278;
}

void sub_100115DD0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100115DE4(uint64_t a1)
{
  *(void *)a1 = off_10084F6F0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_100115E38(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100115E4C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), *(_DWORD *)(a2 + 32) + *(_DWORD *)(a1 + 32));
  if (*(int *)(a2 + 32) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 24) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 36);
      uint64_t v7 = *(int *)(a1 + 32);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 40))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), v6 + 1);
          int v6 = *(_DWORD *)(a1 + 36);
        }
        *(_DWORD *)(a1 + 36) = v6 + 1;
        sub_100132840();
      }
      uint64_t v8 = *(void *)(a1 + 24);
      *(_DWORD *)(a1 + 32) = v7 + 1;
      sub_100114B50(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 32));
  }
  if (*(unsigned char *)(a2 + 52))
  {
    *(_DWORD *)(a1 + 52) |= 1u;
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      operator new();
    }
    uint64_t v10 = *(void *)(a2 + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_1008AC300 + 16);
    }
    sub_100111544(v9, v10);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100115FDC()
{
}

void sub_100116014(uint64_t *a1)
{
  *a1 = (uint64_t)off_10084F6F0;
  if ((uint64_t *)qword_1008AC300 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  sub_10006F938(a1 + 3);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001160B8(uint64_t *a1)
{
  sub_100116014(a1);

  operator delete();
}

uint64_t sub_1001160F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) = a2;
  return result;
}

uint64_t sub_1001160F8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008AC300;
  if (!qword_1008AC300)
  {
    sub_1000EF4F0(0, a2, a3, a4);
    return qword_1008AC300;
  }
  return result;
}

void sub_100116128()
{
}

void sub_100116168()
{
}

uint64_t sub_10011618C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 52))
  {
    uint64_t v2 = *(void *)(a1 + 16);
    if (v2) {
      sub_100111834(v2);
    }
  }
  uint64_t result = sub_10006F8C8(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)v4 + 11) = 0;
  if (v5)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return result;
}

uint64_t sub_1001161F4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24);
  unsigned int v7 = a1 + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v8;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v8 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_18;
        }
        *(_DWORD *)(a1 + 52) |= 1u;
        uint64_t v11 = *(void *)(a1 + 16);
        if (!v11) {
          operator new();
        }
        unsigned int v36 = 0;
        uint64_t v12 = (char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v36))return 0; {
        }
          }
        else
        {
          unsigned int v36 = *v12;
          *((void *)this + 1) = v12 + 1;
        }
        int v13 = *((_DWORD *)this + 14);
        int v14 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v13 + 1;
        if (v13 >= v14) {
          return 0;
        }
        int v15 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v36);
        if (!sub_100111864(v11, this, v16, v17) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v15);
        int v18 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v18, 1);
        int v20 = v18 - 1;
        if (v20 < 0 == v19) {
          *((_DWORD *)this + 14) = v20;
        }
        int v21 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v21 < *((void *)this + 2) && *v21 == 18) {
          goto LABEL_29;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v10 = TagFallback & 7;
      if (v10 != 2) {
        goto LABEL_18;
      }
      while (1)
      {
        int v22 = *(_DWORD *)(a1 + 36);
        uint64_t v23 = *(int *)(a1 + 32);
        if ((int)v23 >= v22)
        {
          if (v22 == *(_DWORD *)(a1 + 40))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v22 + 1);
            int v22 = *(_DWORD *)(a1 + 36);
          }
          *(_DWORD *)(a1 + 36) = v22 + 1;
          sub_100132840();
        }
        uint64_t v24 = *(void *)(a1 + 24);
        *(_DWORD *)(a1 + 32) = v23 + 1;
        uint64_t v25 = *(void *)(v24 + 8 * v23);
        unsigned int v37 = 0;
        int v26 = (char *)*((void *)this + 1);
        if ((unint64_t)v26 >= *((void *)this + 2) || *v26 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37))return 0; {
        }
          }
        else
        {
          unsigned int v37 = *v26;
          *((void *)this + 1) = v26 + 1;
        }
        int v27 = *((_DWORD *)this + 14);
        int v28 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v27 + 1;
        if (v27 >= v28) {
          return 0;
        }
        int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v37);
        if (!sub_100115040(v25, this, v30, v31) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
        int v32 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v32, 1);
        int v33 = v32 - 1;
        if (v33 < 0 == v19) {
          *((_DWORD *)this + 14) = v33;
        }
        int v21 = (unsigned char *)*((void *)this + 1);
        int v34 = (unsigned char *)*((void *)this + 2);
        if (v21 >= v34 || *v21 != 18) {
          break;
        }
LABEL_29:
        *((void *)this + 1) = v21 + 1;
      }
      if (v21 == v34 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v10 = TagFallback & 7;
LABEL_18:
    if (v10 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
  }
    }
}

void sub_100116500()
{
}

uint64_t sub_100116524(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 52))
  {
    uint64_t v6 = *(void *)(this + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1008AC300 + 16);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 24) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  int v10 = *(void **)(v5 + 8);
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v8 = v10;
  if (v10 && *v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001165E8(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  char v3 = a2;
  if (*((unsigned char *)this + 52))
  {
    uint64_t v5 = *((void *)this + 2);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_1008AC300 + 16);
    }
    *(unsigned char *)a2 = 10;
    unsigned int v6 = a2 + 1;
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v5 + 48);
    if (v7 > 0x7F)
    {
      uint64_t v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, v6, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v7;
      uint64_t v8 = (uint64_t)v3 + 2;
    }
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100111DB4(v5, v8, a3);
  }
  if (*((int *)this + 8) >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      int v10 = *(unsigned int **)(*((void *)this + 3) + 8 * v9);
      *(unsigned char *)char v3 = 18;
      uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10[15];
      if (v11 > 0x7F)
      {
        uint64_t v12 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)v3 + 1, a3);
      }
      else
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v11;
        uint64_t v12 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      }
      char v3 = sub_1001157B8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v10, v12, a3);
      ++v9;
    }
    while (v9 < *((int *)this + 8));
  }
  int v15 = (void *)*((void *)this + 1);
  int v14 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v13 = v15;
  if (!v15 || *v13 == v13[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v14, v3, a3);
}

uint64_t sub_100116708(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (*(unsigned char *)(a1 + 52))
  {
    uint64_t v4 = *(void *)(a1 + 16);
    if (!v4) {
      uint64_t v4 = *(void *)(qword_1008AC300 + 16);
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100111F84(v4, a2);
    int v6 = (int)v5;
    if (v5 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    }
    else {
      int v7 = 1;
    }
    int v3 = v6 + v7 + 1;
  }
  else
  {
    int v3 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 32);
  uint64_t v9 = (v8 + v3);
  if (v8 >= 1)
  {
    uint64_t v10 = 0;
    do
    {
      uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001159DC(*(void *)(*(void *)(a1 + 24) + 8 * v10), a2);
      int v12 = (int)v11;
      if (v11 >= 0x80) {
        int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
      }
      else {
        int v13 = 1;
      }
      uint64_t v9 = (v12 + v9 + v13);
      ++v10;
    }
    while (v10 < *(int *)(a1 + 32));
  }
  int v14 = *(void **)(a1 + 8);
  if (v14 && *v14 != v14[1]) {
    uint64_t v9 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v9;
  }
  *(_DWORD *)(a1 + 48) = v9;
  return v9;
}

uint64_t sub_1001167F8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100115E4C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001168CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001168E4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100116970()
{
  return 1;
}

uint64_t sub_100116978()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1288;
}

void sub_100116A0C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100116A20(uint64_t a1)
{
  *(void *)a1 = off_10084F7A0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 31) = 0;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_DWORD *)(a1 + 72) = 0;
  return a1;
}

void sub_100116A7C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100116A90(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v21);
  }
  int v4 = *(_DWORD *)(a2 + 72);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    int v8 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 72) |= 1u;
    *(_DWORD *)(a1 + 16) = v8;
    int v4 = *(_DWORD *)(a2 + 72);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_25;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v9 = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 72) |= 2u;
  *(_DWORD *)(a1 + 20) = v9;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  int v10 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 72) |= 4u;
  *(_DWORD *)(a1 + 24) = v10;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  int v11 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 72) |= 8u;
  *(_DWORD *)(a1 + 28) = v11;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_28:
    char v13 = *(unsigned char *)(a2 + 36);
    *(_DWORD *)(a1 + 72) |= 0x20u;
    *(unsigned char *)(a1 + 36) = v13;
    int v4 = *(_DWORD *)(a2 + 72);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_27:
  int v12 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 72) |= 0x10u;
  *(_DWORD *)(a1 + 32) = v12;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_29:
  char v14 = *(unsigned char *)(a2 + 37);
  *(_DWORD *)(a1 + 72) |= 0x40u;
  *(unsigned char *)(a1 + 37) = v14;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    char v5 = *(unsigned char *)(a2 + 38);
    *(_DWORD *)(a1 + 72) |= 0x80u;
    *(unsigned char *)(a1 + 38) = v5;
    int v4 = *(_DWORD *)(a2 + 72);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v4 & 0x100) != 0)
  {
    int v15 = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 72) |= 0x100u;
    *(_DWORD *)(a1 + 40) = v15;
    int v4 = *(_DWORD *)(a2 + 72);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_33;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  int v16 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 72) |= 0x200u;
  *(_DWORD *)(a1 + 44) = v16;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_34;
  }
LABEL_33:
  int v17 = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 72) |= 0x400u;
  *(_DWORD *)(a1 + 48) = v17;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_35;
  }
LABEL_34:
  int v18 = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 72) |= 0x800u;
  *(_DWORD *)(a1 + 52) = v18;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_20;
    }
LABEL_36:
    int v20 = *(_DWORD *)(a2 + 60);
    *(_DWORD *)(a1 + 72) |= 0x2000u;
    *(_DWORD *)(a1 + 60) = v20;
    if ((*(_DWORD *)(a2 + 72) & 0x4000) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_21;
  }
LABEL_35:
  int v19 = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 72) |= 0x1000u;
  *(_DWORD *)(a1 + 56) = v19;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x2000) != 0) {
    goto LABEL_36;
  }
LABEL_20:
  if ((v4 & 0x4000) != 0)
  {
LABEL_21:
    int v6 = *(_DWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 72) |= 0x4000u;
    *(_DWORD *)(a1 + 64) = v6;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100116CFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100116D14(uint64_t a1)
{
  *(void *)a1 = off_10084F7A0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100116D68(uint64_t a1)
{
  *(void *)a1 = off_10084F7A0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100116DD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 68) = a2;
  return result;
}

void sub_100116DD8()
{
}

void sub_100116E18()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100116E3C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 72);
  if ((_BYTE)v1)
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 31) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(a1 + 40) = 0;
    *(void *)(a1 + 48) = 0;
    *(_DWORD *)(a1 + 64) = 0;
    *(void *)(a1 + 56) = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 16) = 0;
  if (v3) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100116E78(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v51 = (unsigned int *)(a1 + 16);
  uint64_t v52 = (unsigned int *)(a1 + 20);
  int v6 = (unsigned int *)(a1 + 32);
  int v7 = (unsigned int *)(a1 + 40);
  int v8 = (unsigned int *)(a1 + 48);
  int v9 = (unsigned int *)(a1 + 52);
  int v10 = (unsigned int *)(a1 + 56);
  int v11 = (unsigned int *)(a1 + 60);
  int v12 = (unsigned int *)(a1 + 64);
  unsigned int v13 = a1 + 8;
  while (2)
  {
    char v14 = (char *)*((void *)this + 1);
    if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v14;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v14 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v51);
          if (!result) {
            return result;
          }
          int v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v51 = *v18;
          int v19 = v18 + 1;
          *((void *)this + 1) = v19;
        }
        *(_DWORD *)(a1 + 72) |= 1u;
        if ((unint64_t)v19 < v17 && *v19 == 16)
        {
          int v20 = v19 + 1;
          *((void *)this + 1) = v20;
          goto LABEL_49;
        }
        continue;
      case 2u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
LABEL_49:
        if ((unint64_t)v20 >= v17 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v52);
          if (!result) {
            return result;
          }
          int v34 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v52 = *v20;
          int v34 = v20 + 1;
          *((void *)this + 1) = v34;
        }
        *(_DWORD *)(a1 + 72) |= 2u;
        if ((unint64_t)v34 >= v17 || *v34 != 29) {
          continue;
        }
        *((void *)this + 1) = v34 + 1;
LABEL_57:
        unsigned int v53 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v53) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 24) = v53;
        *(_DWORD *)(a1 + 72) |= 4u;
        int v35 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v35 >= *((void *)this + 2) || *v35 != 37) {
          continue;
        }
        *((void *)this + 1) = v35 + 1;
LABEL_61:
        unsigned int v53 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v53) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 28) = v53;
        *(_DWORD *)(a1 + 72) |= 8u;
        unsigned int v36 = (unsigned char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        if ((unint64_t)v36 >= v21 || *v36 != 40) {
          continue;
        }
        int v22 = v36 + 1;
        *((void *)this + 1) = v22;
LABEL_65:
        if ((unint64_t)v22 >= v21 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unsigned int v37 = (unsigned char *)*((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v22;
          unsigned int v37 = v22 + 1;
          *((void *)this + 1) = v37;
        }
        *(_DWORD *)(a1 + 72) |= 0x10u;
        if ((unint64_t)v37 >= v21 || *v37 != 48) {
          continue;
        }
        uint64_t v23 = v37 + 1;
        *((void *)this + 1) = v23;
LABEL_73:
        unsigned int v53 = 0;
        if ((unint64_t)v23 >= v21 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v53);
          if (!result) {
            return result;
          }
          unsigned int v38 = v53;
          int v39 = (unsigned char *)*((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
        }
        else
        {
          unsigned int v38 = *v23;
          int v39 = v23 + 1;
          *((void *)this + 1) = v39;
        }
        *(unsigned char *)(a1 + 36) = v38 != 0;
        *(_DWORD *)(a1 + 72) |= 0x20u;
        if ((unint64_t)v39 >= v21 || *v39 != 56) {
          continue;
        }
        uint64_t v24 = v39 + 1;
        *((void *)this + 1) = v24;
LABEL_81:
        unsigned int v53 = 0;
        if ((unint64_t)v24 >= v21 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v53);
          if (!result) {
            return result;
          }
          unsigned int v40 = v53;
          uint64_t v41 = (unsigned char *)*((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
        }
        else
        {
          unsigned int v40 = *v24;
          uint64_t v41 = v24 + 1;
          *((void *)this + 1) = v41;
        }
        *(unsigned char *)(a1 + 37) = v40 != 0;
        *(_DWORD *)(a1 + 72) |= 0x40u;
        if ((unint64_t)v41 >= v21 || *v41 != 64) {
          continue;
        }
        uint64_t v25 = v41 + 1;
        *((void *)this + 1) = v25;
LABEL_89:
        unsigned int v53 = 0;
        if ((unint64_t)v25 >= v21 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v53);
          if (!result) {
            return result;
          }
          unsigned int v42 = v53;
          int v43 = (unsigned char *)*((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
        }
        else
        {
          unsigned int v42 = *v25;
          int v43 = v25 + 1;
          *((void *)this + 1) = v43;
        }
        *(unsigned char *)(a1 + 38) = v42 != 0;
        *(_DWORD *)(a1 + 72) |= 0x80u;
        if ((unint64_t)v43 >= v21 || *v43 != 72) {
          continue;
        }
        int v26 = v43 + 1;
        *((void *)this + 1) = v26;
LABEL_97:
        if ((unint64_t)v26 >= v21 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v44 = (unsigned char *)*((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v26;
          int v44 = v26 + 1;
          *((void *)this + 1) = v44;
        }
        *(_DWORD *)(a1 + 72) |= 0x100u;
        if ((unint64_t)v44 >= v21 || *v44 != 85) {
          continue;
        }
        *((void *)this + 1) = v44 + 1;
LABEL_105:
        unsigned int v53 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v53))
        {
          *(_DWORD *)(a1 + 44) = v53;
          *(_DWORD *)(a1 + 72) |= 0x200u;
          int v45 = (unsigned char *)*((void *)this + 1);
          unint64_t v27 = *((void *)this + 2);
          if ((unint64_t)v45 < v27 && *v45 == 88)
          {
            int v28 = v45 + 1;
            *((void *)this + 1) = v28;
LABEL_109:
            if ((unint64_t)v28 >= v27 || *v28 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
              if (!result) {
                return result;
              }
              uint64_t v46 = (unsigned char *)*((void *)this + 1);
              unint64_t v27 = *((void *)this + 2);
            }
            else
            {
              unsigned int *v8 = *v28;
              uint64_t v46 = v28 + 1;
              *((void *)this + 1) = v46;
            }
            *(_DWORD *)(a1 + 72) |= 0x400u;
            if ((unint64_t)v46 < v27 && *v46 == 96)
            {
              int v29 = v46 + 1;
              *((void *)this + 1) = v29;
LABEL_117:
              if ((unint64_t)v29 >= v27 || *v29 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
                if (!result) {
                  return result;
                }
                int v47 = (unsigned char *)*((void *)this + 1);
                unint64_t v27 = *((void *)this + 2);
              }
              else
              {
                *int v9 = *v29;
                int v47 = v29 + 1;
                *((void *)this + 1) = v47;
              }
              *(_DWORD *)(a1 + 72) |= 0x800u;
              if ((unint64_t)v47 < v27 && *v47 == 104)
              {
                uint64_t v30 = v47 + 1;
                *((void *)this + 1) = v30;
LABEL_125:
                if ((unint64_t)v30 >= v27 || *v30 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
                  if (!result) {
                    return result;
                  }
                  int v48 = (unsigned char *)*((void *)this + 1);
                  unint64_t v27 = *((void *)this + 2);
                }
                else
                {
                  *int v10 = *v30;
                  int v48 = v30 + 1;
                  *((void *)this + 1) = v48;
                }
                *(_DWORD *)(a1 + 72) |= 0x1000u;
                if ((unint64_t)v48 < v27 && *v48 == 112)
                {
                  uint64_t v31 = v48 + 1;
                  *((void *)this + 1) = v31;
LABEL_133:
                  if ((unint64_t)v31 >= v27 || *v31 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
                    if (!result) {
                      return result;
                    }
                    int v49 = (unsigned char *)*((void *)this + 1);
                    unint64_t v27 = *((void *)this + 2);
                  }
                  else
                  {
                    unsigned int *v11 = *v31;
                    int v49 = v31 + 1;
                    *((void *)this + 1) = v49;
                  }
                  *(_DWORD *)(a1 + 72) |= 0x2000u;
                  if ((unint64_t)v49 < v27 && *v49 == 120)
                  {
                    int v32 = v49 + 1;
                    *((void *)this + 1) = v32;
LABEL_141:
                    if ((unint64_t)v32 >= v27 || *v32 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v12);
                      if (!result) {
                        return result;
                      }
                      int v50 = (unsigned __int8 *)*((void *)this + 1);
                      unint64_t v27 = *((void *)this + 2);
                    }
                    else
                    {
                      unsigned int *v12 = *v32;
                      int v50 = (unsigned __int8 *)(v32 + 1);
                      *((void *)this + 1) = v50;
                    }
                    *(_DWORD *)(a1 + 72) |= 0x4000u;
                    if (v50 == (unsigned __int8 *)v27
                      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                    {
                      *((_DWORD *)this + 8) = 0;
                      uint64_t result = 1;
                      *((unsigned char *)this + 36) = 1;
                      return result;
                    }
                  }
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v16 = TagFallback & 7;
        if (v16 == 5) {
          goto LABEL_57;
        }
        goto LABEL_40;
      case 4u:
        int v16 = TagFallback & 7;
        if (v16 == 5) {
          goto LABEL_61;
        }
        goto LABEL_40;
      case 5u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v22 = (char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        goto LABEL_65;
      case 6u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        uint64_t v23 = (char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        goto LABEL_73;
      case 7u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        uint64_t v24 = (char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        goto LABEL_81;
      case 8u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        uint64_t v25 = (char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        goto LABEL_89;
      case 9u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v26 = (char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        goto LABEL_97;
      case 0xAu:
        int v16 = TagFallback & 7;
        if (v16 == 5) {
          goto LABEL_105;
        }
        goto LABEL_40;
      case 0xBu:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v28 = (char *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        goto LABEL_109;
      case 0xCu:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v29 = (char *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        goto LABEL_117;
      case 0xDu:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        uint64_t v30 = (char *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        goto LABEL_125;
      case 0xEu:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        uint64_t v31 = (char *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        goto LABEL_133;
      case 0xFu:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v32 = (char *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        goto LABEL_141;
      default:
        int v16 = TagFallback & 7;
LABEL_40:
        if (v16 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v13, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_10011765C(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 72);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 72);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_25;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 20), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(float *)(v5 + 28), a3);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 32), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 36), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 37), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_31;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 38), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_32;
  }
LABEL_31:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(v5 + 40), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_33;
  }
LABEL_32:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (int)a2, *(float *)(v5 + 44), a3);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_34;
  }
LABEL_33:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(_DWORD *)(v5 + 48), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_35;
  }
LABEL_34:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(_DWORD *)(v5 + 52), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
LABEL_36:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(_DWORD *)(v5 + 60), a2, a4);
    if ((*(_DWORD *)(v5 + 72) & 0x4000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_35:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(_DWORD *)(v5 + 56), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x2000) != 0) {
    goto LABEL_36;
  }
LABEL_15:
  if ((v6 & 0x4000) != 0) {
LABEL_16:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(_DWORD *)(v5 + 64), a2, a4);
LABEL_17:
  int v9 = *(void **)(v5 + 8);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10011785C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  if (*((unsigned char *)this + 72))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    *(unsigned char *)a2 = 8;
    unsigned int v6 = a2 + 1;
    if (v5 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v5, v6, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v5;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 72) & 2) != 0)
  {
    int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    *(unsigned char *)uint64_t v3 = 16;
    if (v7 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v7;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  int v8 = *((_DWORD *)this + 18);
  if ((v8 & 4) != 0)
  {
    int v9 = *((_DWORD *)this + 6);
    *(unsigned char *)uint64_t v3 = 29;
    *(_DWORD *)((char *)v3 + 1) = v9;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
    int v8 = *((_DWORD *)this + 18);
    if ((v8 & 8) == 0)
    {
LABEL_11:
      if ((v8 & 0x10) == 0) {
        goto LABEL_18;
      }
      goto LABEL_15;
    }
  }
  else if ((v8 & 8) == 0)
  {
    goto LABEL_11;
  }
  int v10 = *((_DWORD *)this + 7);
  *(unsigned char *)uint64_t v3 = 37;
  *(_DWORD *)((char *)v3 + 1) = v10;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
  if ((*((_DWORD *)this + 18) & 0x10) == 0) {
    goto LABEL_18;
  }
LABEL_15:
  int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  *(unsigned char *)uint64_t v3 = 40;
  if (v11 > 0x7F)
  {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)v3 + 1, a3);
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v11;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  }
LABEL_18:
  int v12 = *((_DWORD *)this + 18);
  if ((v12 & 0x20) != 0)
  {
    char v13 = *((unsigned char *)this + 36);
    *(unsigned char *)uint64_t v3 = 48;
    *((unsigned char *)v3 + 1) = v13;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    int v12 = *((_DWORD *)this + 18);
    if ((v12 & 0x40) == 0)
    {
LABEL_20:
      if ((v12 & 0x80) == 0) {
        goto LABEL_21;
      }
      goto LABEL_25;
    }
  }
  else if ((v12 & 0x40) == 0)
  {
    goto LABEL_20;
  }
  char v14 = *((unsigned char *)this + 37);
  *(unsigned char *)uint64_t v3 = 56;
  *((unsigned char *)v3 + 1) = v14;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  int v12 = *((_DWORD *)this + 18);
  if ((v12 & 0x80) == 0)
  {
LABEL_21:
    if ((v12 & 0x100) == 0) {
      goto LABEL_29;
    }
    goto LABEL_26;
  }
LABEL_25:
  char v15 = *((unsigned char *)this + 38);
  *(unsigned char *)uint64_t v3 = 64;
  *((unsigned char *)v3 + 1) = v15;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  if ((*((_DWORD *)this + 18) & 0x100) == 0) {
    goto LABEL_29;
  }
LABEL_26:
  int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  *(unsigned char *)uint64_t v3 = 72;
  if (v16 > 0x7F)
  {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v16, (int)v3 + 1, a3);
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v16;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  }
LABEL_29:
  int v17 = *((_DWORD *)this + 18);
  if ((v17 & 0x200) != 0)
  {
    int v18 = *((_DWORD *)this + 11);
    *(unsigned char *)uint64_t v3 = 85;
    *(_DWORD *)((char *)v3 + 1) = v18;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
    int v17 = *((_DWORD *)this + 18);
  }
  if ((v17 & 0x400) != 0)
  {
    int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    *(unsigned char *)uint64_t v3 = 88;
    if (v19 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v19, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v19;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 73) & 8) != 0)
  {
    int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
    *(unsigned char *)uint64_t v3 = 96;
    if (v20 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v20, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v20;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 73) & 0x10) != 0)
  {
    unint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    *(unsigned char *)uint64_t v3 = 104;
    if (v21 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v21;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 73) & 0x20) != 0)
  {
    int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
    *(unsigned char *)uint64_t v3 = 112;
    if (v22 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v22, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v22;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 73) & 0x40) != 0)
  {
    uint64_t v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    *(unsigned char *)uint64_t v3 = 120;
    if (v23 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v23, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v23;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  int v26 = (void *)*((void *)this + 1);
  uint64_t v25 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v24 = v26;
  if (!v26 || *v24 == v24[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v25, v3, a3);
}

uint64_t sub_100117B9C(unsigned int *a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  unsigned int v3 = a1[18];
  if (!(_BYTE)v3)
  {
    uint64_t v5 = 0;
    goto LABEL_31;
  }
  if (v3)
  {
    unsigned int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[4];
    if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
      unsigned int v3 = a1[18];
    }
    else
    {
      int v7 = 1;
    }
    int v4 = v7 + 1;
    if ((v3 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_10;
  }
  int v4 = 0;
  if ((v3 & 2) != 0)
  {
LABEL_10:
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[5];
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
      unsigned int v3 = a1[18];
    }
    else
    {
      int v9 = 1;
    }
    v4 += v9 + 1;
  }
LABEL_14:
  int v10 = v4 + 5;
  if ((v3 & 4) == 0) {
    int v10 = v4;
  }
  if ((v3 & 8) != 0) {
    int v11 = v10 + 5;
  }
  else {
    int v11 = v10;
  }
  if ((v3 & 0x10) != 0)
  {
    int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[8];
    if (v12 >= 0x80)
    {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2)
          + 1;
      unsigned int v3 = a1[18];
    }
    else
    {
      int v13 = 2;
    }
    v11 += v13;
  }
  unsigned int v14 = v11 + 2;
  if ((v3 & 0x20) == 0) {
    unsigned int v14 = v11;
  }
  if ((v3 & 0x40) != 0) {
    v14 += 2;
  }
  if ((v3 & 0x80) != 0) {
    uint64_t v5 = v14 + 2;
  }
  else {
    uint64_t v5 = v14;
  }
LABEL_31:
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      char v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[10];
      if (v15 >= 0x80)
      {
        int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2)
            + 1;
        unsigned int v3 = a1[18];
      }
      else
      {
        int v16 = 2;
      }
      LODWORD(v5) = v16 + v5;
    }
    if ((v3 & 0x200) != 0) {
      uint64_t v5 = (v5 + 5);
    }
    else {
      uint64_t v5 = v5;
    }
    if ((v3 & 0x400) != 0)
    {
      int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[12];
      if (v17 >= 0x80)
      {
        int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2)
            + 1;
        unsigned int v3 = a1[18];
      }
      else
      {
        int v18 = 2;
      }
      uint64_t v5 = (v18 + v5);
      if ((v3 & 0x800) == 0)
      {
LABEL_42:
        if ((v3 & 0x1000) == 0) {
          goto LABEL_43;
        }
        goto LABEL_54;
      }
    }
    else if ((v3 & 0x800) == 0)
    {
      goto LABEL_42;
    }
    int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[13];
    if (v19 >= 0x80)
    {
      int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2)
          + 1;
      unsigned int v3 = a1[18];
    }
    else
    {
      int v20 = 2;
    }
    uint64_t v5 = (v20 + v5);
    if ((v3 & 0x1000) == 0)
    {
LABEL_43:
      if ((v3 & 0x2000) == 0) {
        goto LABEL_44;
      }
      goto LABEL_58;
    }
LABEL_54:
    unint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[14];
    if (v21 >= 0x80)
    {
      int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2)
          + 1;
      unsigned int v3 = a1[18];
    }
    else
    {
      int v22 = 2;
    }
    uint64_t v5 = (v22 + v5);
    if ((v3 & 0x2000) == 0)
    {
LABEL_44:
      if ((v3 & 0x4000) == 0) {
        goto LABEL_66;
      }
LABEL_62:
      uint64_t v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[16];
      if (v25 >= 0x80) {
        int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2)
      }
            + 1;
      else {
        int v26 = 2;
      }
      uint64_t v5 = (v26 + v5);
      goto LABEL_66;
    }
LABEL_58:
    uint64_t v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[15];
    if (v23 >= 0x80)
    {
      int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2)
          + 1;
      unsigned int v3 = a1[18];
    }
    else
    {
      int v24 = 2;
    }
    uint64_t v5 = (v24 + v5);
    if ((v3 & 0x4000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_62;
  }
LABEL_66:
  unint64_t v27 = (void *)*((void *)a1 + 1);
  if (v27 && *v27 != v27[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2), a2)+ v5;
  }
  a1[17] = v5;
  return v5;
}

uint64_t sub_100117DC8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100116A90((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100117E9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100117EB4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100117F40()
{
  return 1;
}

uint64_t sub_100117F48()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1298;
}

void sub_100117FDC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100117FF0(uint64_t a1)
{
  *(void *)a1 = off_10084F850;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_DWORD *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return a1;
}

void sub_100118040(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100118054(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    sub_10006F57C(a1 + 16, *(_DWORD *)(a1 + 24) + v4);
    memcpy((void *)(*(void *)(a1 + 16) + 4 * *(int *)(a1 + 24)), *(const void **)(a2 + 16), 4 * *(int *)(a2 + 24));
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
  }
  int v5 = *(_DWORD *)(a2 + 48);
  if ((v5 & 0x1FE) != 0)
  {
    if ((v5 & 2) != 0)
    {
      uint64_t v6 = *(void *)(a2 + 32);
      *(_DWORD *)(a1 + 48) |= 2u;
      *(void *)(a1 + 32) = v6;
      int v5 = *(_DWORD *)(a2 + 48);
    }
    if ((v5 & 4) != 0)
    {
      int v7 = *(_DWORD *)(a2 + 40);
      *(_DWORD *)(a1 + 48) |= 4u;
      *(_DWORD *)(a1 + 40) = v7;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100118154(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10011816C(void *a1)
{
  *a1 = off_10084F850;
  if (a1[2]) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001181E4(void *a1)
{
  sub_10011816C(a1);

  operator delete();
}

uint64_t sub_10011821C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 44) = a2;
  return result;
}

void sub_100118224()
{
}

void sub_100118264()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100118288(uint64_t a1)
{
  if ((*(_WORD *)(a1 + 48) & 0x1FE) != 0)
  {
    *(void *)(a1 + 32) = 0;
    *(_DWORD *)(a1 + 40) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  *((_DWORD *)result + 10) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1001182B4(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = a1 + 16;
  int v7 = (unsigned int *)(a1 + 40);
  unsigned int v8 = a1 + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
LABEL_2:
        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v9;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v9 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v11 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v12 = TagFallback & 7;
        if (v12 != 2)
        {
          if (v12 != 5) {
            goto LABEL_18;
          }
          goto LABEL_23;
        }
        uint64_t result = sub_10005CDA4(this, v6);
        if (!result) {
          return result;
        }
        while (1)
        {
          int v26 = (unsigned __int8 *)*((void *)this + 1);
          if ((unint64_t)v26 >= *((void *)this + 2)) {
            break;
          }
          int v27 = *v26;
          if (v27 == 17)
          {
            *((void *)this + 1) = v26 + 1;
            goto LABEL_44;
          }
          if (v27 != 13) {
            goto LABEL_2;
          }
          *((void *)this + 1) = v26 + 1;
LABEL_23:
          v30[0] = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v30) & 1) == 0) {
            return 0;
          }
          unsigned int v16 = v30[0];
          int v17 = *(_DWORD *)(a1 + 24);
          if (v17 == *(_DWORD *)(a1 + 28))
          {
            sub_10006F57C(v6, v17 + 1);
            int v17 = *(_DWORD *)(a1 + 24);
          }
          uint64_t v18 = *(void *)(a1 + 16);
          int v19 = v17 + 1;
          *(_DWORD *)(a1 + 24) = v17 + 1;
          *(_DWORD *)(v18 + 4 * v17) = v16;
          uint64_t v20 = *((void *)this + 1);
          int v21 = *((_DWORD *)this + 4) - v20;
          if (v21 >= 1)
          {
            signed int v22 = v21 / 5u;
            int v23 = v22 >= *(_DWORD *)(a1 + 28) - v19 ? *(_DWORD *)(a1 + 28) - v19 : v22;
            if (v23 >= 1)
            {
              int v24 = 0;
              while (*(unsigned char *)v20 == 13)
              {
                int v25 = *(_DWORD *)(v20 + 1);
                if (v19 >= *(_DWORD *)(a1 + 28))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v30);
                  int v19 = *(_DWORD *)(a1 + 24);
                  uint64_t v18 = *(void *)(a1 + 16);
                }
                *(_DWORD *)(a1 + 24) = v19 + 1;
                *(_DWORD *)(v18 + 4 * v19) = v25;
                ++v24;
                v20 += 5;
                ++v19;
                if (v23 == v24)
                {
                  int v24 = v23;
                  break;
                }
              }
              if (v24) {
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 5 * v24);
              }
            }
          }
        }
      }
      if (v11 != 2) {
        break;
      }
      int v12 = TagFallback & 7;
      if (v12 != 1) {
        goto LABEL_18;
      }
LABEL_44:
      *(void *)uint64_t v30 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v30) & 1) == 0)return 0; {
      *(void *)(a1 + 32) = *(void *)v30;
      }
      *(_DWORD *)(a1 + 48) |= 2u;
      int v28 = (unsigned char *)*((void *)this + 1);
      unint64_t v13 = *((void *)this + 2);
      if ((unint64_t)v28 < v13 && *v28 == 24)
      {
        unsigned int v14 = v28 + 1;
        *((void *)this + 1) = v14;
LABEL_48:
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v29 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v14;
          int v29 = (unsigned __int8 *)(v14 + 1);
          *((void *)this + 1) = v29;
        }
        *(_DWORD *)(a1 + 48) |= 4u;
        if (v29 == (unsigned __int8 *)v13
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v11 == 3)
    {
      int v12 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        unsigned int v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_48;
      }
    }
    else
    {
      int v12 = TagFallback & 7;
    }
LABEL_18:
    if (v12 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v8, a4) & 1) == 0)return 0; {
  }
    }
}

void sub_1001185F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100118610(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(int *)(this + 24) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(*(void *)(v5 + 16) + 4 * v6++), a3);
    while (v6 < *(int *)(v5 + 24));
  }
  int v7 = *(_DWORD *)(v5 + 48);
  if ((v7 & 2) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 32), a3);
    int v7 = *(_DWORD *)(v5 + 48);
  }
  if ((v7 & 4) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 40), a2, a4);
  }
  int v10 = *(void **)(v5 + 8);
  int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v8 = v10;
  if (v10 && *v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

uint64_t sub_1001186DC(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, unsigned __int8 *a3)
{
  if (*((int *)this + 6) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*((void *)this + 2) + 4 * v4);
      *(unsigned char *)a2 = 13;
      *(_DWORD *)(a2 + 1) = v5;
      a2 += 5;
      ++v4;
    }
    while (v4 < *((int *)this + 6));
  }
  int v6 = *((_DWORD *)this + 12);
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *((void *)this + 4);
    *(unsigned char *)a2 = 17;
    *(void *)(a2 + 1) = v7;
    a2 += 9;
    int v6 = *((_DWORD *)this + 12);
  }
  if ((v6 & 4) != 0)
  {
    unsigned int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    *(unsigned char *)a2 = 24;
    if (v8 > 0x7F)
    {
      a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)a2 + 1, a3);
    }
    else
    {
      *(unsigned char *)(a2 + 1) = (_BYTE)v8;
      a2 += 2;
    }
  }
  unsigned int v11 = (void *)*((void *)this + 1);
  int v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v9 = v11;
  if (!v11 || *v9 == v9[1]) {
    return a2;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v10, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_100118810(_DWORD *a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = a1[12];
  if ((v3 & 0x1FE) != 0)
  {
    int v4 = (v3 << 30 >> 31) & 9;
    if ((v3 & 4) != 0)
    {
      int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[10];
      if (v5 >= 0x80) {
        int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
      }
           + 1;
      else {
        int v6 = 2;
      }
      v4 += v6;
    }
  }
  else
  {
    int v4 = 0;
  }
  uint64_t v7 = (void *)*((void *)a1 + 1);
  uint64_t v8 = (5 * a1[6] + v4);
  if (v7 && *v7 != v7[1]) {
    uint64_t v8 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2), a2)+ v8;
  }
  a1[11] = v8;
  return v8;
}

uint64_t sub_1001188A8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100118054((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10011897C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100118994(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100118A20()
{
  return 1;
}

uint64_t sub_100118A28()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A12A8;
}

void sub_100118ABC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100118AD0(uint64_t a1)
{
  *(void *)a1 = off_10084F900;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 24) = 0;
  return a1;
}

void sub_100118B1C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100118B30(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (*(unsigned char *)(a2 + 24))
  {
    int v4 = *(_DWORD *)(a2 + 16);
    a1[6] |= 1u;
    a1[4] = v4;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100118BC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100118BE0(uint64_t a1)
{
  *(void *)a1 = off_10084F900;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100118C34(uint64_t a1)
{
  *(void *)a1 = off_10084F900;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100118C9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 20) = a2;
  return result;
}

void sub_100118CA4()
{
}

void sub_100118CE4()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100118D08(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 24)) {
    *(_DWORD *)(a1 + 16) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100118D28(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (unsigned int *)(a1 + 16);
  unsigned int v7 = a1 + 8;
  while (1)
  {
    while (1)
    {
      uint64_t v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v8;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v8 + 1;
      }
      if (TagFallback != 8) {
        break;
      }
      unsigned int v11 = (char *)*((void *)this + 1);
      unint64_t v10 = *((void *)this + 2);
      if ((unint64_t)v11 >= v10 || *v11 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
        if (!result) {
          return result;
        }
        int v12 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
      }
      else
      {
        *int v6 = *v11;
        int v12 = (unsigned __int8 *)(v11 + 1);
        *((void *)this + 1) = v12;
      }
      *(_DWORD *)(a1 + 24) |= 1u;
      if (v12 == (unsigned __int8 *)v10 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_100118E44(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 24)) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 16), a2, a4);
  }
  uint64_t v8 = *(void **)(v5 + 8);
  unsigned int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v6 = v8;
  if (v8 && *v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100118EB8(wireless_diagnostics::google::protobuf::internal::WireFormat *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  if (*((unsigned char *)this + 24))
  {
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    *(unsigned char *)a2 = 8;
    if (v4 > 0x7F)
    {
      a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v4, (int)a2 + 1, a3);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v4;
      a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
  }
  unsigned int v7 = (void *)*((void *)this + 1);
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v5 = v7;
  if (!v7 || *v5 == v5[1]) {
    return a2;
  }

  return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, a2, a3);
}

uint64_t sub_100118F48(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (*(unsigned char *)(a1 + 24))
  {
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v4 >= 0x80) {
      uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4, a2)+ 1;
    }
    else {
      uint64_t v3 = 2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v5 = *(void **)(a1 + 8);
  if (v5 && *v5 != v5[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_100118FBC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100118B30(a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100119090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001190A8(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100119134()
{
  return 1;
}

uint64_t sub_10011913C()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A12B8;
}

void sub_1001191D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001191E4(uint64_t a1)
{
  *(void *)a1 = off_10084F9B0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return a1;
}

void sub_100119230(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100119244(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 44);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 44))
    {
      *(_DWORD *)(a1 + 44) |= 1u;
      uint64_t v5 = *(void *)(a1 + 16);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 16);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_1008AC320 + 16);
      }
      sub_100116A90(v5, v6);
      int v4 = *(_DWORD *)(a2 + 44);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 44) |= 2u;
      uint64_t v7 = *(void *)(a1 + 24);
      if (!v7) {
        operator new();
      }
      uint64_t v8 = *(void *)(a2 + 24);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_1008AC320 + 24);
      }
      sub_100118054(v7, v8);
      int v4 = *(_DWORD *)(a2 + 44);
    }
    if ((v4 & 4) != 0)
    {
      *(_DWORD *)(a1 + 44) |= 4u;
      int v9 = *(_DWORD **)(a1 + 32);
      if (!v9) {
        operator new();
      }
      uint64_t v10 = *(void *)(a2 + 32);
      if (!v10) {
        uint64_t v10 = *(void *)(qword_1008AC320 + 32);
      }
      sub_100118B30(v9, v10);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001193E0()
{
}

void sub_100119440(void *a1)
{
  *a1 = off_10084F9B0;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_1001194A0(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void *sub_1001194A0(void *result)
{
  if ((void *)qword_1008AC320 != result)
  {
    int v1 = result;
    uint64_t v2 = result[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[3];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t result = (void *)v1[4];
    if (result)
    {
      int v4 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v4();
    }
  }
  return result;
}

void sub_100119570(void *a1)
{
  sub_100119440(a1);

  operator delete();
}

uint64_t sub_1001195A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

uint64_t sub_1001195B0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008AC320;
  if (!qword_1008AC320)
  {
    sub_1000EF4F0(0, a2, a3, a4);
    return qword_1008AC320;
  }
  return result;
}

void sub_1001195E0()
{
}

void sub_100119620()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100119644(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  int v1 = this;
  LOBYTE(v2) = *((unsigned char *)this + 44);
  if ((_BYTE)v2)
  {
    if (*((unsigned char *)this + 44))
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)this + 2);
      if (this)
      {
        this = sub_100116E3C((uint64_t)this);
        int v2 = *((_DWORD *)v1 + 11);
      }
    }
    if ((v2 & 2) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)v1 + 3);
      if (this)
      {
        this = sub_100118288((uint64_t)this);
        int v2 = *((_DWORD *)v1 + 11);
      }
    }
    if ((v2 & 4) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)v1 + 4);
      if (this)
      {
        if (*((unsigned char *)this + 24)) {
          *((_DWORD *)this + 4) = 0;
        }
        uint64_t v3 = *((void *)this + 1);
        this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)this + 8);
        *((_DWORD *)this + 4) = 0;
        if (v3) {
          this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(this);
        }
      }
    }
  }
  uint64_t v5 = *((void *)v1 + 1);
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v4 + 9) = 0;
  if (v5)
  {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return this;
}

uint64_t sub_1001196E8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v7 = (char *)*((void *)this + 1);
          if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v7;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v7 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v9 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v10 = TagFallback & 7;
          if (v10 != 2) {
            goto LABEL_21;
          }
          *(_DWORD *)(a1 + 44) |= 1u;
          uint64_t v11 = *(void *)(a1 + 16);
          if (!v11) {
            operator new();
          }
          unsigned int v42 = 0;
          int v12 = (char *)*((void *)this + 1);
          if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v42))return 0; {
          }
            }
          else
          {
            unsigned int v42 = *v12;
            *((void *)this + 1) = v12 + 1;
          }
          int v13 = *((_DWORD *)this + 14);
          int v14 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v13 + 1;
          if (v13 >= v14) {
            return 0;
          }
          int v15 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v42);
          if (!sub_100116E78(v11, this, v16, v17) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v15);
          int v18 = *((_DWORD *)this + 14);
          BOOL v19 = __OFSUB__(v18, 1);
          int v20 = v18 - 1;
          if (v20 < 0 == v19) {
            *((_DWORD *)this + 14) = v20;
          }
          int v21 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v21 < *((void *)this + 2) && *v21 == 18)
          {
            *((void *)this + 1) = v21 + 1;
            goto LABEL_33;
          }
        }
        if (v9 != 2) {
          break;
        }
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_21;
        }
LABEL_33:
        *(_DWORD *)(a1 + 44) |= 2u;
        uint64_t v22 = *(void *)(a1 + 24);
        if (!v22) {
          operator new();
        }
        unsigned int v43 = 0;
        int v23 = (char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v43))return 0; {
        }
          }
        else
        {
          unsigned int v43 = *v23;
          *((void *)this + 1) = v23 + 1;
        }
        int v24 = *((_DWORD *)this + 14);
        int v25 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v24 + 1;
        if (v24 >= v25) {
          return 0;
        }
        int v26 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v43);
        if (!sub_1001182B4(v22, this, v27, v28) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v26);
        int v29 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v29, 1);
        int v30 = v29 - 1;
        if (v30 < 0 == v19) {
          *((_DWORD *)this + 14) = v30;
        }
        uint64_t v31 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v31 < *((void *)this + 2) && *v31 == 26)
        {
          *((void *)this + 1) = v31 + 1;
          goto LABEL_47;
        }
      }
      if (v9 != 3) {
        break;
      }
      int v10 = TagFallback & 7;
      if (v10 != 2) {
        goto LABEL_21;
      }
LABEL_47:
      *(_DWORD *)(a1 + 44) |= 4u;
      uint64_t v32 = *(void *)(a1 + 32);
      if (!v32) {
        operator new();
      }
      unsigned int v44 = 0;
      int v33 = (char *)*((void *)this + 1);
      if ((unint64_t)v33 >= *((void *)this + 2) || *v33 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v44))return 0; {
      }
        }
      else
      {
        unsigned int v44 = *v33;
        *((void *)this + 1) = v33 + 1;
      }
      int v34 = *((_DWORD *)this + 14);
      int v35 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v34 + 1;
      if (v34 >= v35) {
        return 0;
      }
      int v36 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v44);
      if (!sub_100118D28(v32, this, v37, v38) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v36);
      int v39 = *((_DWORD *)this + 14);
      BOOL v19 = __OFSUB__(v39, 1);
      int v40 = v39 - 1;
      if (v40 < 0 == v19) {
        *((_DWORD *)this + 14) = v40;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v10 = TagFallback & 7;
LABEL_21:
    if (v10 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
  }
    }
}

void sub_100119AB4()
{
}

uint64_t sub_100119B00(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 44);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 16);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1008AC320 + 16);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_14;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1008AC320 + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  if ((*(_DWORD *)(v5 + 44) & 4) != 0)
  {
LABEL_11:
    uint64_t v9 = *(void *)(v5 + 32);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1008AC320 + 32);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  }
LABEL_14:
  int v12 = *(void **)(v5 + 8);
  uint64_t v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v10 = v12;
  if (v12 && *v10 != v10[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v11, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100119BE0(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  int v5 = *((_DWORD *)this + 11);
  if (v5)
  {
    int v6 = (unsigned int *)*((void *)this + 2);
    if (!v6) {
      int v6 = *(unsigned int **)(qword_1008AC320 + 16);
    }
    *(unsigned char *)a2 = 10;
    unsigned int v7 = a2 + 1;
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v6[17];
    if (v8 > 0x7F)
    {
      uint64_t v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v7, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v8;
      uint64_t v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
    uint64_t v3 = sub_10011785C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v6, v9, a3);
    int v5 = *((_DWORD *)this + 11);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_23;
      }
      goto LABEL_17;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v10 = (unsigned int *)*((void *)this + 3);
  if (!v10) {
    int v10 = *(unsigned int **)(qword_1008AC320 + 24);
  }
  *(unsigned char *)uint64_t v3 = 18;
  uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10[11];
  if (v11 > 0x7F)
  {
    uint64_t v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)v3 + 1, a3);
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v11;
    uint64_t v12 = (uint64_t)v3 + 2;
  }
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001186DC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v10, v12, a3);
  if ((*((_DWORD *)this + 11) & 4) != 0)
  {
LABEL_17:
    int v13 = (unsigned int *)*((void *)this + 4);
    if (!v13) {
      int v13 = *(unsigned int **)(qword_1008AC320 + 32);
    }
    *(unsigned char *)uint64_t v3 = 26;
    int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13[5];
    if (v14 > 0x7F)
    {
      int v15 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v14;
      int v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
    uint64_t v3 = sub_100118EB8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v13, v15, a3);
  }
LABEL_23:
  int v18 = (void *)*((void *)this + 1);
  int v17 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v16 = v18;
  if (!v18 || *v16 == v16[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v17, v3, a3);
}

uint64_t sub_100119D48(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 44);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_25;
  }
  if (*(unsigned char *)(a1 + 44))
  {
    int v5 = *(unsigned int **)(a1 + 16);
    if (!v5) {
      int v5 = *(unsigned int **)(qword_1008AC320 + 16);
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100117B9C(v5, a2);
    int v7 = (int)v6;
    if (v6 >= 0x80) {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
    }
    else {
      int v8 = 1;
    }
    uint64_t v4 = (v7 + v8 + 1);
    int v3 = *(_DWORD *)(a1 + 44);
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v4 = 0;
  if ((*(unsigned char *)(a1 + 44) & 2) != 0)
  {
LABEL_12:
    uint64_t v9 = *(_DWORD **)(a1 + 24);
    if (!v9) {
      uint64_t v9 = *(_DWORD **)(qword_1008AC320 + 24);
    }
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100118810(v9, a2);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    }
    else {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v11 + v12 + 1);
    int v3 = *(_DWORD *)(a1 + 44);
  }
LABEL_18:
  if ((v3 & 4) != 0)
  {
    uint64_t v13 = *(void *)(a1 + 32);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_1008AC320 + 32);
    }
    int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100118F48(v13, a2);
    int v15 = (int)v14;
    if (v14 >= 0x80) {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
    }
    else {
      int v16 = 1;
    }
    uint64_t v4 = (v4 + v15 + v16 + 1);
  }
LABEL_25:
  int v17 = *(void **)(a1 + 8);
  if (v17 && *v17 != v17[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 40) = v4;
  return v4;
}

uint64_t sub_100119E84(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100119244((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100119F58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100119F70(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100119FFC()
{
  return 1;
}

uint64_t sub_10011A004()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A12C8;
}

void sub_10011A098(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_10011A0AC(void *a1)
{
  *a1 = off_10084FA60;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  a1[7] = 0;
  a1[4] = 0;
  a1[5] = 0;
  *(void *)((char *)a1 + 46) = 0;
  return a1;
}

void sub_10011A108(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10011A11C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 60);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 60))
  {
    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 60) |= 1u;
    *(void *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 60);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_17;
    }
  }
  else if ((*(unsigned char *)(a2 + 60) & 2) == 0)
  {
    goto LABEL_6;
  }
  int v8 = *(const std::string **)(a2 + 24);
  *(_DWORD *)(a1 + 60) |= 2u;
  uint64_t v9 = *(std::string **)(a1 + 24);
  if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v9, v8);
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_17:
  *(_DWORD *)(a1 + 60) |= 4u;
  int v10 = *(_DWORD **)(a1 + 32);
  if (!v10) {
    operator new();
  }
  uint64_t v11 = *(void *)(a2 + 32);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_1008AC328 + 32);
  }
  sub_10005E550(v10, v11);
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_22:
  unsigned int v12 = *(_DWORD *)(a2 + 48);
  if (v12 >= 4) {
    sub_100410580();
  }
  *(_DWORD *)(a1 + 60) |= 8u;
  *(_DWORD *)(a1 + 48) = v12;
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_25:
    char v14 = *(unsigned char *)(a2 + 52);
    *(_DWORD *)(a1 + 60) |= 0x20u;
    *(unsigned char *)(a1 + 52) = v14;
    if ((*(_DWORD *)(a2 + 60) & 0x40) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_11;
  }
LABEL_24:
  uint64_t v13 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 60) |= 0x10u;
  *(void *)(a1 + 40) = v13;
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 0x20) != 0) {
    goto LABEL_25;
  }
LABEL_10:
  if ((v4 & 0x40) != 0)
  {
LABEL_11:
    char v5 = *(unsigned char *)(a2 + 53);
    *(_DWORD *)(a1 + 60) |= 0x40u;
    *(unsigned char *)(a1 + 53) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10011A30C()
{
}

void sub_10011A344(void *a1)
{
  *a1 = off_10084FA60;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_10011A3A4(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void *sub_10011A3A4(void *result)
{
  uint64_t v1 = result[3];
  if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  if ((void *)qword_1008AC328 != result)
  {
    uint64_t result = (void *)result[4];
    if (result)
    {
      char v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_10011A45C(void *a1)
{
  sub_10011A344(a1);

  operator delete();
}

uint64_t sub_10011A494(uint64_t result, int a2)
{
  *(_DWORD *)(result + 56) = a2;
  return result;
}

uint64_t sub_10011A49C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008AC328;
  if (!qword_1008AC328)
  {
    sub_1000EF4F0(0, a2, a3, a4);
    return qword_1008AC328;
  }
  return result;
}

void sub_10011A4CC()
{
}

void sub_10011A50C()
{
}

uint64_t sub_10011A530(uint64_t this)
{
  uint64_t v1 = (void *)this;
  char v2 = *(unsigned char *)(this + 60);
  if (v2)
  {
    *(void *)(this + 16) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *(void *)(this + 24);
      if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 60) & 4) != 0)
    {
      this = *(void *)(this + 32);
      if (this) {
        this = sub_10005E7D4(this);
      }
    }
    *(void *)((char *)v1 + 46) = 0;
    v1[5] = 0;
  }
  uint64_t v5 = v1[1];
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 1);
  *((_DWORD *)v4 + 13) = 0;
  if (v5)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return this;
}

uint64_t sub_10011A5DC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_35;
        }
        *(void *)uint64_t v37 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v37) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v37;
        }
        int v10 = *(_DWORD *)(a1 + 60) | 1;
        *(_DWORD *)(a1 + 60) = v10;
        uint64_t v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 18) {
          continue;
        }
        *((void *)this + 1) = v11 + 1;
        goto LABEL_16;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_35;
        }
        int v10 = *(_DWORD *)(a1 + 60);
LABEL_16:
        *(_DWORD *)(a1 + 60) = v10 | 2;
        if (*(_UNKNOWN **)(a1 + 24) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
        if (!result) {
          return result;
        }
        uint64_t v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 != 26) {
          continue;
        }
        *((void *)this + 1) = v13 + 1;
LABEL_23:
        *(_DWORD *)(a1 + 60) |= 4u;
        char v14 = *(int **)(a1 + 32);
        if (!v14) {
          operator new();
        }
        v37[0] = 0;
        int v15 = (char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v37))return 0; {
        }
          }
        else
        {
          v37[0] = *v15;
          *((void *)this + 1) = v15 + 1;
        }
        int v21 = *((_DWORD *)this + 14);
        int v22 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v21 + 1;
        if (v21 >= v22) {
          return 0;
        }
        int v23 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v37[0]);
        if (!sub_10005E828(v14, this, v24, v25) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v23);
        int v26 = *((_DWORD *)this + 14);
        BOOL v27 = __OFSUB__(v26, 1);
        int v28 = v26 - 1;
        if (v28 < 0 == v27) {
          *((_DWORD *)this + 14) = v28;
        }
        int v29 = (unsigned char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v29 >= v16 || *v29 != 32) {
          continue;
        }
        int v17 = v29 + 1;
        *((void *)this + 1) = v17;
LABEL_48:
        v37[0] = 0;
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v37);
          if (!result) {
            return result;
          }
          unsigned int v30 = v37[0];
        }
        else
        {
          unsigned int v30 = *v17;
          *((void *)this + 1) = v17 + 1;
        }
        if (v30 > 3)
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 4, (int)v30);
        }
        else
        {
          *(_DWORD *)(a1 + 60) |= 8u;
          *(_DWORD *)(a1 + 48) = v30;
        }
        uint64_t v31 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v31 >= *((void *)this + 2) || *v31 != 41) {
          continue;
        }
        *((void *)this + 1) = v31 + 1;
LABEL_59:
        *(void *)uint64_t v37 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v37))
        {
          *(void *)(a1 + 40) = *(void *)v37;
          *(_DWORD *)(a1 + 60) |= 0x10u;
          uint64_t v32 = (unsigned char *)*((void *)this + 1);
          unint64_t v18 = *((void *)this + 2);
          if ((unint64_t)v32 < v18 && *v32 == 48)
          {
            BOOL v19 = v32 + 1;
            *((void *)this + 1) = v19;
LABEL_63:
            v37[0] = 0;
            if ((unint64_t)v19 >= v18 || *v19 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v37);
              if (!result) {
                return result;
              }
              unsigned int v33 = v37[0];
              int v34 = (unsigned char *)*((void *)this + 1);
              unint64_t v18 = *((void *)this + 2);
            }
            else
            {
              unsigned int v33 = *v19;
              int v34 = v19 + 1;
              *((void *)this + 1) = v34;
            }
            *(unsigned char *)(a1 + 52) = v33 != 0;
            *(_DWORD *)(a1 + 60) |= 0x20u;
            if ((unint64_t)v34 < v18 && *v34 == 56)
            {
              int v20 = v34 + 1;
              *((void *)this + 1) = v20;
LABEL_71:
              v37[0] = 0;
              if ((unint64_t)v20 >= v18 || *v20 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v37);
                if (!result) {
                  return result;
                }
                unsigned int v35 = v37[0];
                int v36 = (unsigned __int8 *)*((void *)this + 1);
                unint64_t v18 = *((void *)this + 2);
              }
              else
              {
                unsigned int v35 = *v20;
                int v36 = (unsigned __int8 *)(v20 + 1);
                *((void *)this + 1) = v36;
              }
              *(unsigned char *)(a1 + 53) = v35 != 0;
              *(_DWORD *)(a1 + 60) |= 0x40u;
              if (v36 == (unsigned __int8 *)v18
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_23;
        }
        goto LABEL_35;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_48;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_59;
        }
        goto LABEL_35;
      case 6u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        BOOL v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_63;
      case 7u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_71;
      default:
        int v9 = TagFallback & 7;
LABEL_35:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_10011AA90()
{
}

uint64_t sub_10011AAD0(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 60);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    int v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_17:
  uint64_t v10 = *(void *)(v5 + 32);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_1008AC328 + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 48), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_22:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 52), (BOOL)a2, a4);
    if ((*(_DWORD *)(v5 + 60) & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x20) != 0) {
    goto LABEL_22;
  }
LABEL_7:
  if ((v6 & 0x40) != 0) {
LABEL_8:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 53), (BOOL)a2, a4);
LABEL_9:
  int v9 = *(void **)(v5 + 8);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10011AC00(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  int v4 = a2;
  int v6 = *((_DWORD *)this + 15);
  if (v6)
  {
    uint64_t v7 = *((void *)this + 2);
    *(unsigned char *)a2 = 9;
    *(void *)((char *)a2 + 1) = v7;
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
    int v6 = *((_DWORD *)this + 15);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_20:
      char v14 = (unsigned int *)*((void *)this + 4);
      if (!v14) {
        char v14 = *(unsigned int **)(qword_1008AC328 + 32);
      }
      *(unsigned char *)int v4 = 26;
      int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14[10];
      if (v15 > 0x7F)
      {
        unint64_t v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, (int)v4 + 1, a3);
      }
      else
      {
        *((unsigned char *)v4 + 1) = (_BYTE)v15;
        unint64_t v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      }
      int v4 = sub_10005EAC0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v14, v16, a3);
      if ((*((_DWORD *)this + 15) & 8) == 0) {
        goto LABEL_32;
      }
      goto LABEL_26;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *((void *)this + 3);
  *(unsigned char *)int v4 = 18;
  if (*(char *)(v8 + 23) < 0) {
    int v9 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v8 + 8);
  }
  else {
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v8 + 23);
  }
  if (v9 > 0x7F)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v9;
    int v10 = v4 + 2;
  }
  int v11 = *(char *)(v8 + 23);
  if (v11 >= 0) {
    unsigned int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8;
  }
  else {
    unsigned int v12 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v8;
  }
  if (v11 >= 0) {
    uint64_t v13 = (const void *)*(unsigned __int8 *)(v8 + 23);
  }
  else {
    uint64_t v13 = (const void *)*(unsigned int *)(v8 + 8);
  }
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v12, v13, v10, a4);
  int v6 = *((_DWORD *)this + 15);
  if ((v6 & 4) != 0) {
    goto LABEL_20;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    goto LABEL_32;
  }
LABEL_26:
  int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 12);
  *(unsigned char *)int v4 = 32;
  unint64_t v18 = (unint64_t)v4 + 1;
  if ((v17 & 0x80000000) != 0)
  {
    uint64_t v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v17, v18, a3);
  }
  else
  {
    if (v17 <= 0x7F)
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v17;
      int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      goto LABEL_32;
    }
    uint64_t v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, v18, a3);
  }
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v19;
LABEL_32:
  int v20 = *((_DWORD *)this + 15);
  if ((v20 & 0x10) == 0)
  {
    if ((v20 & 0x20) == 0) {
      goto LABEL_34;
    }
LABEL_43:
    char v27 = *((unsigned char *)this + 52);
    *(unsigned char *)int v4 = 48;
    *((unsigned char *)v4 + 1) = v27;
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if ((*((_DWORD *)this + 15) & 0x40) == 0) {
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  uint64_t v26 = *((void *)this + 5);
  *(unsigned char *)int v4 = 41;
  *(void *)((char *)v4 + 1) = v26;
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v20 = *((_DWORD *)this + 15);
  if ((v20 & 0x20) != 0) {
    goto LABEL_43;
  }
LABEL_34:
  if ((v20 & 0x40) != 0)
  {
LABEL_35:
    char v21 = *((unsigned char *)this + 53);
    *(unsigned char *)int v4 = 56;
    *((unsigned char *)v4 + 1) = v21;
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
LABEL_36:
  uint64_t v24 = (void *)*((void *)this + 1);
  int v23 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v22 = v24;
  if (!v24 || *v22 == v22[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v23, v4, a3);
}

uint64_t sub_10011AE5C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 60);
  if (!*(unsigned char *)(a1 + 60))
  {
    uint64_t v5 = 0;
    goto LABEL_35;
  }
  int v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) == 0)
  {
    if ((v3 & 4) == 0) {
      goto LABEL_4;
    }
LABEL_16:
    uint64_t v12 = *(void *)(a1 + 32);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_1008AC328 + 32);
    }
    uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005EB8C(v12, a2);
    int v14 = (int)v13;
    if (v13 >= 0x80) {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
    }
    else {
      int v15 = 1;
    }
    v4 += v14 + v15 + 1;
    int v3 = *(_DWORD *)(a1 + 60);
    if ((v3 & 8) == 0) {
      goto LABEL_28;
    }
    goto LABEL_22;
  }
  uint64_t v6 = *(void *)(a1 + 24);
  int v7 = *(unsigned __int8 *)(v6 + 23);
  char v8 = v7;
  uint64_t v9 = *(void *)(v6 + 8);
  if ((v7 & 0x80u) == 0) {
    unint64_t v10 = *(unsigned __int8 *)(v6 + 23);
  }
  else {
    unint64_t v10 = v9;
  }
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10, a2);
    int v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v9 = *(void *)(v6 + 8);
    int v3 = *(_DWORD *)(a1 + 60);
    char v8 = *(unsigned char *)(v6 + 23);
  }
  else
  {
    int v11 = 1;
  }
  if (v8 < 0) {
    int v7 = v9;
  }
  v4 += v11 + v7 + 1;
  if ((v3 & 4) != 0) {
    goto LABEL_16;
  }
LABEL_4:
  if ((v3 & 8) != 0)
  {
LABEL_22:
    unint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
    if ((v16 & 0x80000000) != 0)
    {
      int v17 = 11;
    }
    else if (v16 >= 0x80)
    {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2)
          + 1;
      int v3 = *(_DWORD *)(a1 + 60);
    }
    else
    {
      int v17 = 2;
    }
    v4 += v17;
  }
LABEL_28:
  unsigned int v18 = v4 + 9;
  if ((v3 & 0x10) == 0) {
    unsigned int v18 = v4;
  }
  if ((v3 & 0x20) != 0) {
    v18 += 2;
  }
  if ((v3 & 0x40) != 0) {
    uint64_t v5 = v18 + 2;
  }
  else {
    uint64_t v5 = v18;
  }
LABEL_35:
  uint64_t v19 = *(void **)(a1 + 8);
  if (v19 && *v19 != v19[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 56) = v5;
  return v5;
}

uint64_t sub_10011AFCC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10011A11C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10011B0A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10011B0B8(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10011B144()
{
  return 1;
}

uint64_t sub_10011B14C()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A12D8;
}

void sub_10011B1E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_10011B1F4(void *a1)
{
  *a1 = off_10084FB10;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  a1[5] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  a1[6] = 0;
  return a1;
}

void sub_10011B24C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10011B260(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 52);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 52))
    {
      uint64_t v5 = *(void *)(a2 + 16);
      *(_DWORD *)(a1 + 52) |= 1u;
      *(void *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 52);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_11;
      }
    }
    else if ((*(unsigned char *)(a2 + 52) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v6 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 52) |= 2u;
    *(void *)(a1 + 24) = v6;
    int v4 = *(_DWORD *)(a2 + 52);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
LABEL_12:
      char v8 = *(const std::string **)(a2 + 40);
      *(_DWORD *)(a1 + 52) |= 8u;
      uint64_t v9 = *(std::string **)(a1 + 40);
      if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      std::string::operator=(v9, v8);
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
LABEL_11:
    uint64_t v7 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 52) |= 4u;
    *(void *)(a1 + 32) = v7;
    if ((*(_DWORD *)(a2 + 52) & 8) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_12;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10011B3A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10011B3BC(wireless_diagnostics::google::protobuf::Message *a1)
{
  *(void *)a1 = off_10084FB10;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::Message *)((char *)a1 + 8);
  sub_10011B41C((uint64_t)a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message(a1);
}

uint64_t sub_10011B41C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 40);
  if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  return result;
}

void sub_10011B494(wireless_diagnostics::google::protobuf::Message *a1)
{
  sub_10011B3BC(a1);

  operator delete();
}

uint64_t sub_10011B4CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) = a2;
  return result;
}

uint64_t sub_10011B4D4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008AC330;
  if (!qword_1008AC330)
  {
    sub_1000EF4F0(0, a2, a3, a4);
    return qword_1008AC330;
  }
  return result;
}

void sub_10011B504()
{
}

void sub_10011B544()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10011B568(uint64_t a1)
{
  char v1 = *(unsigned char *)(a1 + 52);
  if (v1)
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    if ((v1 & 8) != 0)
    {
      uint64_t v2 = *(void *)(a1 + 40);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
  }
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 11) = 0;
  if (v4) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10011B5C4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_33;
        }
        unint64_t v15 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v15) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v15;
        *(_DWORD *)(a1 + 52) |= 1u;
        unint64_t v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 17) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_33;
        }
LABEL_15:
        unint64_t v15 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v15) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 24) = v15;
        *(_DWORD *)(a1 + 52) |= 2u;
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 25) {
          continue;
        }
        *((void *)this + 1) = v11 + 1;
LABEL_20:
        unint64_t v15 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v15) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 32) = v15;
        int v12 = *(_DWORD *)(a1 + 52) | 4;
        *(_DWORD *)(a1 + 52) = v12;
        uint64_t v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 != 34) {
          continue;
        }
        *((void *)this + 1) = v13 + 1;
LABEL_26:
        *(_DWORD *)(a1 + 52) = v12 | 8;
        if (*(_UNKNOWN **)(a1 + 40) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
        if (!result) {
          return result;
        }
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_20;
        }
        goto LABEL_33;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_33;
        }
        int v12 = *(_DWORD *)(a1 + 52);
        goto LABEL_26;
      default:
        int v9 = TagFallback & 7;
LABEL_33:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
    return result;
  }
}

uint64_t sub_10011B848(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 52);
  if (v5)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    int v5 = *(_DWORD *)(v4 + 52);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_14:
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v4 + 32), a3);
      if ((*(_DWORD *)(v4 + 52) & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_5;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  int v5 = *(_DWORD *)(v4 + 52);
  if ((v5 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_4:
  if ((v5 & 8) != 0) {
LABEL_5:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
LABEL_6:
  char v8 = *(void **)(v4 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v8;
  if (v8 && *v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

uint64_t sub_10011B914(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  int v5 = *((_DWORD *)this + 13);
  if (v5)
  {
    uint64_t v6 = *((void *)this + 2);
    *(unsigned char *)a2 = 9;
    *(void *)(a2 + 1) = v6;
    a2 += 9;
    int v5 = *((_DWORD *)this + 13);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v7 = *((void *)this + 3);
  *(unsigned char *)a2 = 17;
  *(void *)(a2 + 1) = v7;
  a2 += 9;
  int v5 = *((_DWORD *)this + 13);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_22;
    }
LABEL_9:
    uint64_t v9 = *((void *)this + 5);
    *(unsigned char *)a2 = 34;
    if (*(char *)(v9 + 23) < 0) {
      unint64_t v10 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v9 + 8);
    }
    else {
      unint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v9 + 23);
    }
    if (v10 > 0x7F)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, (int)a2 + 1, a3);
    }
    else
    {
      *(unsigned char *)(a2 + 1) = (_BYTE)v10;
      int v11 = a2 + 2;
    }
    int v12 = *(char *)(v9 + 23);
    if (v12 >= 0) {
      uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9;
    }
    else {
      uint64_t v13 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v9;
    }
    if (v12 >= 0) {
      int v14 = (const void *)*(unsigned __int8 *)(v9 + 23);
    }
    else {
      int v14 = (const void *)*(unsigned int *)(v9 + 8);
    }
    a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v13, v14, v11, a4);
    goto LABEL_22;
  }
LABEL_8:
  uint64_t v8 = *((void *)this + 4);
  *(unsigned char *)a2 = 25;
  *(void *)(a2 + 1) = v8;
  a2 += 9;
  if ((*((_DWORD *)this + 13) & 8) != 0) {
    goto LABEL_9;
  }
LABEL_22:
  int v17 = (void *)*((void *)this + 1);
  unint64_t v16 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  unint64_t v15 = v17;
  if (!v17 || *v15 == v15[1]) {
    return a2;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v16, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_10011BAE8(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 52);
  if (*(unsigned char *)(a1 + 52))
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 8) != 0)
    {
      uint64_t v6 = *(void *)(a1 + 40);
      int v7 = *(unsigned __int8 *)(v6 + 23);
      char v8 = v7;
      uint64_t v9 = *(void *)(v6 + 8);
      if ((v7 & 0x80u) == 0) {
        unint64_t v10 = *(unsigned __int8 *)(v6 + 23);
      }
      else {
        unint64_t v10 = v9;
      }
      if (v10 >= 0x80)
      {
        int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10, a2);
        int v7 = *(unsigned __int8 *)(v6 + 23);
        uint64_t v9 = *(void *)(v6 + 8);
        char v8 = *(unsigned char *)(v6 + 23);
      }
      else
      {
        int v11 = 1;
      }
      if (v8 < 0) {
        int v7 = v9;
      }
      uint64_t v5 = (v5 + v11 + v7 + 1);
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  int v12 = *(void **)(a1 + 8);
  if (v12 && *v12 != v12[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 48) = v5;
  return v5;
}

uint64_t sub_10011BBC0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10011B260((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10011BC94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10011BCAC(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10011BD38()
{
  return 1;
}

uint64_t sub_10011BD40()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A12E8;
}

void sub_10011BDD4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10011BDE8(uint64_t a1)
{
  *(void *)a1 = off_10084FBC0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(unsigned char *)(a1 + 32) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(_DWORD *)(a1 + 36) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_10011BE40(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10011BE54(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 40);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 40))
    {
      uint64_t v5 = *(void *)(a2 + 16);
      *(_DWORD *)(a1 + 40) |= 1u;
      *(void *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 40);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
        }
LABEL_10:
        int v7 = *(const std::string **)(a2 + 24);
        *(_DWORD *)(a1 + 40) |= 4u;
        char v8 = *(std::string **)(a1 + 24);
        if (v8 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        std::string::operator=(v8, v7);
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
    }
    else if ((*(unsigned char *)(a2 + 40) & 2) == 0)
    {
      goto LABEL_6;
    }
    char v6 = *(unsigned char *)(a2 + 32);
    *(_DWORD *)(a1 + 40) |= 2u;
    *(unsigned char *)(a1 + 32) = v6;
    if ((*(_DWORD *)(a2 + 40) & 4) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_10;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10011BF78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10011BF90(wireless_diagnostics::google::protobuf::Message *a1)
{
  *(void *)a1 = off_10084FBC0;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::Message *)((char *)a1 + 8);
  sub_1000801F4((uint64_t)a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message(a1);
}

void sub_10011BFF4(wireless_diagnostics::google::protobuf::Message *a1)
{
  sub_10011BF90(a1);

  operator delete();
}

uint64_t sub_10011C02C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 36) = a2;
  return result;
}

uint64_t sub_10011C034(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008AC338;
  if (!qword_1008AC338)
  {
    sub_1000EF4F0(0, a2, a3, a4);
    return qword_1008AC338;
  }
  return result;
}

void sub_10011C064()
{
}

void sub_10011C0A4()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10011C0C8(uint64_t a1)
{
  char v1 = *(unsigned char *)(a1 + 40);
  if (v1)
  {
    *(void *)(a1 + 16) = 0;
    *(unsigned char *)(a1 + 32) = 0;
    if ((v1 & 4) != 0)
    {
      uint64_t v2 = *(void *)(a1 + 24);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
  }
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 8) = 0;
  if (v4) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10011C124(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          int v7 = (char *)*((void *)this + 1);
          if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v7;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v7 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v9 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v10 = TagFallback & 7;
          if (v10 != 1) {
            goto LABEL_23;
          }
          unint64_t v18 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v18) & 1) == 0) {
            return 0;
          }
          *(void *)(a1 + 16) = v18;
          *(_DWORD *)(a1 + 40) |= 1u;
          uint64_t v13 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v13 < v12 && *v13 == 16)
          {
            int v14 = v13 + 1;
            *((void *)this + 1) = v14;
            goto LABEL_19;
          }
        }
        if (v9 != 2) {
          break;
        }
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_23;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
LABEL_19:
        unsigned int v19 = 0;
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v19);
          if (!result) {
            return result;
          }
          unsigned int v15 = v19;
          unint64_t v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int v15 = *v14;
          unint64_t v16 = v14 + 1;
          *((void *)this + 1) = v16;
        }
        *(unsigned char *)(a1 + 32) = v15 != 0;
        int v11 = *(_DWORD *)(a1 + 40) | 2;
        *(_DWORD *)(a1 + 40) = v11;
        if ((unint64_t)v16 < v12 && *v16 == 26)
        {
          *((void *)this + 1) = v16 + 1;
          goto LABEL_31;
        }
      }
      if (v9 != 3) {
        break;
      }
      int v10 = TagFallback & 7;
      if (v10 != 2) {
        goto LABEL_23;
      }
      int v11 = *(_DWORD *)(a1 + 40);
LABEL_31:
      *(_DWORD *)(a1 + 40) = v11 | 4;
      if (*(_UNKNOWN **)(a1 + 24) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
      if (!result) {
        return result;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v10 = TagFallback & 7;
LABEL_23:
    if (v10 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) != 0);
  return 0;
}

uint64_t sub_10011C350(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 40);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_12:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 32), (BOOL)a2, a4);
    if ((*(_DWORD *)(v5 + 40) & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 2) != 0) {
    goto LABEL_12;
  }
LABEL_3:
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
LABEL_5:
  unsigned int v9 = *(void **)(v5 + 8);
  char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

uint64_t sub_10011C400(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  int v5 = *((_DWORD *)this + 10);
  if (v5)
  {
    uint64_t v6 = *((void *)this + 2);
    *(unsigned char *)a2 = 9;
    *(void *)(a2 + 1) = v6;
    a2 += 9;
    int v5 = *((_DWORD *)this + 10);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_20;
      }
LABEL_7:
      uint64_t v8 = *((void *)this + 3);
      *(unsigned char *)a2 = 26;
      if (*(char *)(v8 + 23) < 0) {
        unsigned int v9 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v8 + 8);
      }
      else {
        unsigned int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v8 + 23);
      }
      if (v9 > 0x7F)
      {
        int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (int)a2 + 1, a3);
      }
      else
      {
        *(unsigned char *)(a2 + 1) = (_BYTE)v9;
        int v10 = a2 + 2;
      }
      int v11 = *(char *)(v8 + 23);
      if (v11 >= 0) {
        unint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8;
      }
      else {
        unint64_t v12 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v8;
      }
      if (v11 >= 0) {
        uint64_t v13 = (const void *)*(unsigned __int8 *)(v8 + 23);
      }
      else {
        uint64_t v13 = (const void *)*(unsigned int *)(v8 + 8);
      }
      a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v12, v13, v10, a4);
      goto LABEL_20;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  char v7 = *((unsigned char *)this + 32);
  *(unsigned char *)a2 = 16;
  *(unsigned char *)(a2 + 1) = v7;
  a2 += 2;
  if ((*((_DWORD *)this + 10) & 4) != 0) {
    goto LABEL_7;
  }
LABEL_20:
  unint64_t v16 = (void *)*((void *)this + 1);
  unsigned int v15 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v14 = v16;
  if (!v16 || *v14 == v14[1]) {
    return a2;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v15, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_10011C544(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 40);
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v4 = (v3 << 31 >> 31) & 9 | v3 & 2u;
    if ((v3 & 4) != 0)
    {
      uint64_t v5 = *(void *)(a1 + 24);
      int v6 = *(unsigned __int8 *)(v5 + 23);
      char v7 = v6;
      uint64_t v8 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
      }
      else {
        unint64_t v9 = v8;
      }
      if (v9 >= 0x80)
      {
        int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9, a2);
        int v6 = *(unsigned __int8 *)(v5 + 23);
        uint64_t v8 = *(void *)(v5 + 8);
        char v7 = *(unsigned char *)(v5 + 23);
      }
      else
      {
        int v10 = 1;
      }
      if (v7 < 0) {
        int v6 = v8;
      }
      uint64_t v4 = (v4 + v10 + v6 + 1);
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  int v11 = *(void **)(a1 + 8);
  if (v11 && *v11 != v11[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 36) = v4;
  return v4;
}

uint64_t sub_10011C60C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10011BE54((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10011C6E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10011C6F8(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10011C784()
{
  return 1;
}

uint64_t sub_10011C78C()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A12F8;
}

void sub_10011C820(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10011C834(uint64_t a1)
{
  *(void *)a1 = off_10084FC70;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 72) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(void *)(a1 + 64) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(_DWORD *)(a1 + 80) = 0;
  return a1;
}

void sub_10011C898(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10011C8AC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  int v4 = *(_DWORD *)(a2 + 80);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v9 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 80) |= 1u;
    *(void *)(a1 + 16) = v9;
    int v4 = *(_DWORD *)(a2 + 80);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_20;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v10 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 80) |= 2u;
  *(void *)(a1 + 24) = v10;
  int v4 = *(_DWORD *)(a2 + 80);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  int v11 = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 80) |= 4u;
  *(_DWORD *)(a1 + 48) = v11;
  int v4 = *(_DWORD *)(a2 + 80);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t v12 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 80) |= 8u;
  *(void *)(a1 + 32) = v12;
  int v4 = *(_DWORD *)(a2 + 80);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_23:
    uint64_t v14 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 80) |= 0x20u;
    *(void *)(a1 + 56) = v14;
    int v4 = *(_DWORD *)(a2 + 80);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_24;
  }
LABEL_22:
  uint64_t v13 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 80) |= 0x10u;
  *(void *)(a1 + 40) = v13;
  int v4 = *(_DWORD *)(a2 + 80);
  if ((v4 & 0x20) != 0) {
    goto LABEL_23;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_24:
  int v15 = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 80) |= 0x40u;
  *(_DWORD *)(a1 + 52) = v15;
  int v4 = *(_DWORD *)(a2 + 80);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *(_DWORD *)(a2 + 72);
    *(_DWORD *)(a1 + 80) |= 0x80u;
    *(_DWORD *)(a1 + 72) = v5;
    int v4 = *(_DWORD *)(a2 + 80);
  }
LABEL_13:
  if ((v4 & 0x100) != 0)
  {
    int v6 = *(const std::string **)(a2 + 64);
    *(_DWORD *)(a1 + 80) |= 0x100u;
    char v7 = *(std::string **)(a1 + 64);
    if (v7 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v7, v6);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10011CA90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10011CAA8(wireless_diagnostics::google::protobuf::Message *a1)
{
  *(void *)a1 = off_10084FC70;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::Message *)((char *)a1 + 8);
  sub_10011CB08((uint64_t)a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message(a1);
}

uint64_t sub_10011CB08(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 64);
  if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  return result;
}

void sub_10011CB80(wireless_diagnostics::google::protobuf::Message *a1)
{
  sub_10011CAA8(a1);

  operator delete();
}

uint64_t sub_10011CBB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 76) = a2;
  return result;
}

uint64_t sub_10011CBC0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008AC340;
  if (!qword_1008AC340)
  {
    sub_1000EF4F0(0, a2, a3, a4);
    return qword_1008AC340;
  }
  return result;
}

void sub_10011CBF0()
{
}

void sub_10011CC30()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10011CC54(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 80);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(a1 + 72) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
  }
  if ((v1 & 0x100) != 0)
  {
    uint64_t v2 = *(void *)(a1 + 64);
    if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)uint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v2 = 0;
        *(unsigned char *)(v2 + 23) = 0;
      }
    }
  }
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 18) = 0;
  if (v4) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10011CCBC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (unsigned int *)(a1 + 48);
  char v7 = (unsigned int *)(a1 + 52);
  uint64_t v8 = (unsigned int *)(a1 + 72);
  unsigned int v9 = a1 + 8;
  while (2)
  {
    uint64_t v10 = (char *)*((void *)this + 1);
    if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if (v12 != 1) {
          goto LABEL_36;
        }
        unint64_t v28 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v28) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v28;
        *(_DWORD *)(a1 + 80) |= 1u;
        uint64_t v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 != 17) {
          continue;
        }
        *((void *)this + 1) = v13 + 1;
        goto LABEL_15;
      case 2u:
        int v12 = TagFallback & 7;
        if (v12 != 1) {
          goto LABEL_36;
        }
LABEL_15:
        unint64_t v28 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v28) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 24) = v28;
        *(_DWORD *)(a1 + 80) |= 2u;
        int v15 = (unsigned char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v15 >= v14 || *v15 != 24) {
          continue;
        }
        unint64_t v16 = v15 + 1;
        *((void *)this + 1) = v16;
LABEL_21:
        if ((unint64_t)v16 >= v14 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v17 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v16;
          int v17 = v16 + 1;
          *((void *)this + 1) = v17;
        }
        *(_DWORD *)(a1 + 80) |= 4u;
        if ((unint64_t)v17 >= v14 || *v17 != 33) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
LABEL_44:
        unint64_t v28 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v28) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 32) = v28;
        *(_DWORD *)(a1 + 80) |= 8u;
        int v23 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 != 41) {
          continue;
        }
        *((void *)this + 1) = v23 + 1;
LABEL_48:
        unint64_t v28 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v28) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 40) = v28;
        *(_DWORD *)(a1 + 80) |= 0x10u;
        uint64_t v24 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 != 49) {
          continue;
        }
        *((void *)this + 1) = v24 + 1;
LABEL_52:
        unint64_t v28 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v28))
        {
          *(void *)(a1 + 56) = v28;
          *(_DWORD *)(a1 + 80) |= 0x20u;
          int v25 = (unsigned char *)*((void *)this + 1);
          unint64_t v18 = *((void *)this + 2);
          if ((unint64_t)v25 < v18 && *v25 == 56)
          {
            unsigned int v19 = v25 + 1;
            *((void *)this + 1) = v19;
LABEL_56:
            if ((unint64_t)v19 >= v18 || *v19 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
              if (!result) {
                return result;
              }
              uint64_t v26 = (unsigned char *)*((void *)this + 1);
              unint64_t v18 = *((void *)this + 2);
            }
            else
            {
              unsigned int *v7 = *v19;
              uint64_t v26 = v19 + 1;
              *((void *)this + 1) = v26;
            }
            *(_DWORD *)(a1 + 80) |= 0x40u;
            if ((unint64_t)v26 < v18 && *v26 == 64)
            {
              int v20 = v26 + 1;
              *((void *)this + 1) = v20;
LABEL_64:
              if ((unint64_t)v20 >= v18 || *v20 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
                if (!result) {
                  return result;
                }
                char v27 = (unsigned char *)*((void *)this + 1);
                unint64_t v18 = *((void *)this + 2);
              }
              else
              {
                unsigned int *v8 = *v20;
                char v27 = v20 + 1;
                *((void *)this + 1) = v27;
              }
              int v21 = *(_DWORD *)(a1 + 80) | 0x80;
              *(_DWORD *)(a1 + 80) = v21;
              if ((unint64_t)v27 < v18 && *v27 == 74)
              {
                *((void *)this + 1) = v27 + 1;
LABEL_72:
                *(_DWORD *)(a1 + 80) = v21 | 0x100;
                if (*(_UNKNOWN **)(a1 + 64) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
                  operator new();
                }
                uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
                if (!result) {
                  return result;
                }
                if (*((void *)this + 1) == *((void *)this + 2)
                  && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                {
                  *((_DWORD *)this + 8) = 0;
                  uint64_t result = 1;
                  *((unsigned char *)this + 36) = 1;
                  return result;
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        unint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_21;
      case 4u:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_44;
        }
        goto LABEL_36;
      case 5u:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_48;
        }
        goto LABEL_36;
      case 6u:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_52;
        }
        goto LABEL_36;
      case 7u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        unsigned int v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_56;
      case 8u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_64;
      case 9u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_36;
        }
        int v21 = *(_DWORD *)(a1 + 80);
        goto LABEL_72;
      default:
        int v12 = TagFallback & 7;
LABEL_36:
        if (v12 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v9, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_10011D170(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 80);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    int v6 = *(_DWORD *)(v5 + 80);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 48), a2, a4);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
LABEL_24:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 72), a2, a4);
    if ((*(_DWORD *)(v5 + 80) & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 52), a2, a4);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x80) != 0) {
    goto LABEL_24;
  }
LABEL_9:
  if ((v6 & 0x100) != 0) {
LABEL_10:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
LABEL_11:
  unsigned int v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  char v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10011D2C8(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 20);
  if (v6)
  {
    uint64_t v7 = *((void *)this + 2);
    *(unsigned char *)a2 = 9;
    *(void *)((char *)a2 + 1) = v7;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
    int v6 = *((_DWORD *)this + 20);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_10;
      }
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *((void *)this + 3);
  *(unsigned char *)uint64_t v4 = 17;
  *(void *)((char *)v4 + 1) = v8;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  if ((*((_DWORD *)this + 20) & 4) == 0) {
    goto LABEL_10;
  }
LABEL_7:
  unsigned int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
  *(unsigned char *)uint64_t v4 = 24;
  if (v9 > 0x7F)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v9;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
LABEL_10:
  int v10 = *((_DWORD *)this + 20);
  if ((v10 & 8) != 0)
  {
    uint64_t v11 = *((void *)this + 4);
    *(unsigned char *)uint64_t v4 = 33;
    *(void *)((char *)v4 + 1) = v11;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
    int v10 = *((_DWORD *)this + 20);
    if ((v10 & 0x10) == 0)
    {
LABEL_12:
      if ((v10 & 0x20) == 0) {
        goto LABEL_13;
      }
      goto LABEL_17;
    }
  }
  else if ((v10 & 0x10) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v12 = *((void *)this + 5);
  *(unsigned char *)uint64_t v4 = 41;
  *(void *)((char *)v4 + 1) = v12;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v10 = *((_DWORD *)this + 20);
  if ((v10 & 0x20) == 0)
  {
LABEL_13:
    if ((v10 & 0x40) == 0) {
      goto LABEL_21;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t v13 = *((void *)this + 7);
  *(unsigned char *)uint64_t v4 = 49;
  *(void *)((char *)v4 + 1) = v13;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  if ((*((_DWORD *)this + 20) & 0x40) == 0) {
    goto LABEL_21;
  }
LABEL_18:
  unint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  *(unsigned char *)uint64_t v4 = 56;
  if (v14 > 0x7F)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v14;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
LABEL_21:
  if ((*((unsigned char *)this + 80) & 0x80) != 0)
  {
    int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 18);
    *(unsigned char *)uint64_t v4 = 64;
    if (v15 > 0x7F)
    {
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, (int)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v15;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
  }
  if (*((unsigned char *)this + 81))
  {
    uint64_t v16 = *((void *)this + 8);
    *(unsigned char *)uint64_t v4 = 74;
    if (*(char *)(v16 + 23) < 0) {
      int v17 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v16 + 8);
    }
    else {
      int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v16 + 23);
    }
    if (v17 > 0x7F)
    {
      int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, (int)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v17;
      int v18 = v4 + 2;
    }
    int v19 = *(char *)(v16 + 23);
    if (v19 >= 0) {
      int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16;
    }
    else {
      int v20 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v16;
    }
    if (v19 >= 0) {
      int v21 = (const void *)*(unsigned __int8 *)(v16 + 23);
    }
    else {
      int v21 = (const void *)*(unsigned int *)(v16 + 8);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v20, v21, v18, a4);
  }
  uint64_t v24 = (void *)*((void *)this + 1);
  int v23 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v22 = v24;
  if (!v24 || *v22 == v22[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v23, v4, a3);
}

uint64_t sub_10011D5F0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 80);
  if (!(_BYTE)v3)
  {
    uint64_t v7 = 0;
    if ((v3 & 0x100) == 0) {
      goto LABEL_40;
    }
    goto LABEL_31;
  }
  if ((v3 & 2) != 0) {
    int v4 = ((v3 << 31 >> 31) & 9) + 9;
  }
  else {
    int v4 = (v3 << 31 >> 31) & 9;
  }
  if ((v3 & 4) != 0)
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
    if (v5 >= 0x80)
    {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 80);
    }
    else
    {
      int v6 = 2;
    }
    v4 += v6;
  }
  unsigned int v8 = v4 + 9;
  if ((v3 & 8) == 0) {
    unsigned int v8 = v4;
  }
  if ((v3 & 0x10) != 0) {
    v8 += 9;
  }
  if ((v3 & 0x20) != 0) {
    uint64_t v7 = v8 + 9;
  }
  else {
    uint64_t v7 = v8;
  }
  if ((v3 & 0x40) != 0)
  {
    unsigned int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2)
          + 1;
      int v3 = *(_DWORD *)(a1 + 80);
    }
    else
    {
      int v10 = 2;
    }
    uint64_t v7 = (v10 + v7);
    if ((v3 & 0x80) == 0)
    {
LABEL_21:
      if ((v3 & 0x100) == 0) {
        goto LABEL_40;
      }
      goto LABEL_31;
    }
  }
  else if ((v3 & 0x80) == 0)
  {
    goto LABEL_21;
  }
  uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 72);
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 80);
  }
  else
  {
    int v12 = 2;
  }
  uint64_t v7 = (v12 + v7);
  if ((v3 & 0x100) == 0) {
    goto LABEL_40;
  }
LABEL_31:
  uint64_t v13 = *(void *)(a1 + 64);
  int v14 = *(unsigned __int8 *)(v13 + 23);
  char v15 = v14;
  uint64_t v16 = *(void *)(v13 + 8);
  if ((v14 & 0x80u) == 0) {
    unint64_t v17 = *(unsigned __int8 *)(v13 + 23);
  }
  else {
    unint64_t v17 = v16;
  }
  if (v17 >= 0x80)
  {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17, a2);
    int v14 = *(unsigned __int8 *)(v13 + 23);
    uint64_t v16 = *(void *)(v13 + 8);
    char v15 = *(unsigned char *)(v13 + 23);
  }
  else
  {
    int v18 = 1;
  }
  if (v15 < 0) {
    int v14 = v16;
  }
  uint64_t v7 = (v7 + v18 + v14 + 1);
LABEL_40:
  int v19 = *(void **)(a1 + 8);
  if (v19 && *v19 != v19[1]) {
    uint64_t v7 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v7;
  }
  *(_DWORD *)(a1 + 76) = v7;
  return v7;
}

uint64_t sub_10011D76C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10011C8AC((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10011D840(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10011D858(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10011D8E4()
{
  return 1;
}

uint64_t sub_10011D8EC()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1308;
}

void sub_10011D980(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10011D994(uint64_t a1)
{
  *(void *)a1 = off_10084FD20;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 30) = 0;
  *(void *)(a1 + 40) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(_DWORD *)(a1 + 56) = 0;
  return a1;
}

void sub_10011D9F4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10011DA08(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  int v4 = *(_DWORD *)(a2 + 56);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v10 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 56) |= 1u;
    *(void *)(a1 + 16) = v10;
    int v4 = *(_DWORD *)(a2 + 56);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_24;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v11 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 56) |= 2u;
  *(void *)(a1 + 24) = v11;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_24:
  char v12 = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 56) |= 4u;
  *(unsigned char *)(a1 + 32) = v12;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }
LABEL_25:
  char v13 = *(unsigned char *)(a2 + 33);
  *(_DWORD *)(a1 + 56) |= 8u;
  *(unsigned char *)(a1 + 33) = v13;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_27:
    char v15 = *(unsigned char *)(a2 + 35);
    *(_DWORD *)(a1 + 56) |= 0x20u;
    *(unsigned char *)(a1 + 35) = v15;
    int v4 = *(_DWORD *)(a2 + 56);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_26:
  char v14 = *(unsigned char *)(a2 + 34);
  *(_DWORD *)(a1 + 56) |= 0x10u;
  *(unsigned char *)(a1 + 34) = v14;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 0x20) != 0) {
    goto LABEL_27;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_28:
  char v16 = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 56) |= 0x40u;
  *(unsigned char *)(a1 + 36) = v16;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    char v5 = *(unsigned char *)(a2 + 37);
    *(_DWORD *)(a1 + 56) |= 0x80u;
    *(unsigned char *)(a1 + 37) = v5;
    int v4 = *(_DWORD *)(a2 + 56);
  }
LABEL_13:
  if ((v4 & 0xFF00) != 0)
  {
    if ((v4 & 0x100) != 0)
    {
      unsigned int v6 = *(_DWORD *)(a2 + 48);
      if (v6 >= 3) {
        sub_1004105AC();
      }
      *(_DWORD *)(a1 + 56) |= 0x100u;
      *(_DWORD *)(a1 + 48) = v6;
      int v4 = *(_DWORD *)(a2 + 56);
    }
    if ((v4 & 0x200) != 0)
    {
      uint64_t v7 = *(const std::string **)(a2 + 40);
      *(_DWORD *)(a1 + 56) |= 0x200u;
      unsigned int v8 = *(std::string **)(a1 + 40);
      if (v8 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      std::string::operator=(v8, v7);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10011DC1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10011DC34(wireless_diagnostics::google::protobuf::Message *a1)
{
  *(void *)a1 = off_10084FD20;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::Message *)((char *)a1 + 8);
  sub_10011B41C((uint64_t)a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message(a1);
}

void sub_10011DC98(wireless_diagnostics::google::protobuf::Message *a1)
{
  sub_10011DC34(a1);

  operator delete();
}

uint64_t sub_10011DCD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 52) = a2;
  return result;
}

uint64_t sub_10011DCD8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008AC348;
  if (!qword_1008AC348)
  {
    sub_1000EF4F0(0, a2, a3, a4);
    return qword_1008AC348;
  }
  return result;
}

void sub_10011DD08()
{
}

void sub_10011DD48()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10011DD6C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 56);
  if ((_BYTE)v1)
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 30) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_DWORD *)(a1 + 48) = 0;
    if ((v1 & 0x200) != 0)
    {
      uint64_t v2 = *(void *)(a1 + 40);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
  }
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 12) = 0;
  if (v4) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10011DDD8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_37;
        }
        *(void *)unsigned int v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v35) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v35;
        }
        *(_DWORD *)(a1 + 56) |= 1u;
        uint64_t v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 17) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_37;
        }
LABEL_15:
        *(void *)unsigned int v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v35) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v35;
        }
        *(_DWORD *)(a1 + 56) |= 2u;
        char v12 = (unsigned char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v12 >= v11 || *v12 != 24) {
          continue;
        }
        char v13 = v12 + 1;
        *((void *)this + 1) = v13;
LABEL_21:
        v35[0] = 0;
        if ((unint64_t)v13 >= v11 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v35);
          if (!result) {
            return result;
          }
          unsigned int v14 = v35[0];
          char v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          unsigned int v14 = *v13;
          char v15 = v13 + 1;
          *((void *)this + 1) = v15;
        }
        *(unsigned char *)(a1 + 32) = v14 != 0;
        *(_DWORD *)(a1 + 56) |= 4u;
        if ((unint64_t)v15 >= v11 || *v15 != 32) {
          continue;
        }
        char v16 = v15 + 1;
        *((void *)this + 1) = v16;
LABEL_45:
        v35[0] = 0;
        if ((unint64_t)v16 >= v11 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v35);
          if (!result) {
            return result;
          }
          unsigned int v23 = v35[0];
          uint64_t v24 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          unsigned int v23 = *v16;
          uint64_t v24 = v16 + 1;
          *((void *)this + 1) = v24;
        }
        *(unsigned char *)(a1 + 33) = v23 != 0;
        *(_DWORD *)(a1 + 56) |= 8u;
        if ((unint64_t)v24 >= v11 || *v24 != 40) {
          continue;
        }
        unint64_t v17 = v24 + 1;
        *((void *)this + 1) = v17;
LABEL_53:
        v35[0] = 0;
        if ((unint64_t)v17 >= v11 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v35);
          if (!result) {
            return result;
          }
          unsigned int v25 = v35[0];
          uint64_t v26 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          unsigned int v25 = *v17;
          uint64_t v26 = v17 + 1;
          *((void *)this + 1) = v26;
        }
        *(unsigned char *)(a1 + 34) = v25 != 0;
        *(_DWORD *)(a1 + 56) |= 0x10u;
        if ((unint64_t)v26 >= v11 || *v26 != 48) {
          continue;
        }
        int v18 = v26 + 1;
        *((void *)this + 1) = v18;
LABEL_61:
        v35[0] = 0;
        if ((unint64_t)v18 >= v11 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v35);
          if (!result) {
            return result;
          }
          unsigned int v27 = v35[0];
          unint64_t v28 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          unsigned int v27 = *v18;
          unint64_t v28 = v18 + 1;
          *((void *)this + 1) = v28;
        }
        *(unsigned char *)(a1 + 35) = v27 != 0;
        *(_DWORD *)(a1 + 56) |= 0x20u;
        if ((unint64_t)v28 >= v11 || *v28 != 56) {
          continue;
        }
        int v19 = v28 + 1;
        *((void *)this + 1) = v19;
LABEL_69:
        v35[0] = 0;
        if ((unint64_t)v19 >= v11 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v35);
          if (!result) {
            return result;
          }
          unsigned int v29 = v35[0];
          unsigned int v30 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          unsigned int v29 = *v19;
          unsigned int v30 = v19 + 1;
          *((void *)this + 1) = v30;
        }
        *(unsigned char *)(a1 + 36) = v29 != 0;
        *(_DWORD *)(a1 + 56) |= 0x40u;
        if ((unint64_t)v30 >= v11 || *v30 != 64) {
          continue;
        }
        int v20 = v30 + 1;
        *((void *)this + 1) = v20;
LABEL_77:
        v35[0] = 0;
        if ((unint64_t)v20 >= v11 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v35);
          if (!result) {
            return result;
          }
          unsigned int v31 = v35[0];
          uint64_t v32 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          unsigned int v31 = *v20;
          uint64_t v32 = v20 + 1;
          *((void *)this + 1) = v32;
        }
        *(unsigned char *)(a1 + 37) = v31 != 0;
        *(_DWORD *)(a1 + 56) |= 0x80u;
        if ((unint64_t)v32 >= v11 || *v32 != 72) {
          continue;
        }
        int v21 = v32 + 1;
        *((void *)this + 1) = v21;
LABEL_85:
        v35[0] = 0;
        if ((unint64_t)v21 >= v11 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v35);
          if (!result) {
            return result;
          }
          unsigned int v33 = v35[0];
        }
        else
        {
          unsigned int v33 = *v21;
          *((void *)this + 1) = v21 + 1;
        }
        if (v33 > 2)
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 9, (int)v33);
        }
        else
        {
          *(_DWORD *)(a1 + 56) |= 0x100u;
          *(_DWORD *)(a1 + 48) = v33;
        }
        int v34 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v34 >= *((void *)this + 2) || *v34 != 82) {
          continue;
        }
        *((void *)this + 1) = v34 + 1;
LABEL_96:
        *(_DWORD *)(a1 + 56) |= 0x200u;
        if (*(_UNKNOWN **)(a1 + 40) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
        if (!result) {
          return result;
        }
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        char v13 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_21;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        char v16 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_45;
      case 5u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        unint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_53;
      case 6u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_61;
      case 7u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_69;
      case 8u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_77;
      case 9u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        int v21 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_85;
      case 0xAu:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_37;
        }
        goto LABEL_96;
      default:
        int v9 = TagFallback & 7;
LABEL_37:
        if (v9 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_10011E3AC(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 56);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    int v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 32), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 33), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 34), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 35), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 36), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
LABEL_26:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(v5 + 48), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 56) & 0x200) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 37), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x100) != 0) {
    goto LABEL_26;
  }
LABEL_10:
  if ((v6 & 0x200) != 0) {
LABEL_11:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
LABEL_12:
  int v9 = *(void **)(v5 + 8);
  unsigned int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10011E520(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 14);
  if (v6)
  {
    uint64_t v7 = *((void *)this + 2);
    *(unsigned char *)a2 = 9;
    *(void *)((char *)a2 + 1) = v7;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
    int v6 = *((_DWORD *)this + 14);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *((void *)this + 3);
  *(unsigned char *)uint64_t v4 = 17;
  *(void *)((char *)v4 + 1) = v8;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v6 = *((_DWORD *)this + 14);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  char v9 = *((unsigned char *)this + 32);
  *(unsigned char *)uint64_t v4 = 24;
  *((unsigned char *)v4 + 1) = v9;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  int v6 = *((_DWORD *)this + 14);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  char v10 = *((unsigned char *)this + 33);
  *(unsigned char *)uint64_t v4 = 32;
  *((unsigned char *)v4 + 1) = v10;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  int v6 = *((_DWORD *)this + 14);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  char v11 = *((unsigned char *)this + 34);
  *(unsigned char *)uint64_t v4 = 40;
  *((unsigned char *)v4 + 1) = v11;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  int v6 = *((_DWORD *)this + 14);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  char v12 = *((unsigned char *)this + 35);
  *(unsigned char *)uint64_t v4 = 48;
  *((unsigned char *)v4 + 1) = v12;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  int v6 = *((_DWORD *)this + 14);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_18;
  }
LABEL_17:
  char v13 = *((unsigned char *)this + 36);
  *(unsigned char *)uint64_t v4 = 56;
  *((unsigned char *)v4 + 1) = v13;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  int v6 = *((_DWORD *)this + 14);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_25;
    }
    goto LABEL_19;
  }
LABEL_18:
  char v14 = *((unsigned char *)this + 37);
  *(unsigned char *)uint64_t v4 = 64;
  *((unsigned char *)v4 + 1) = v14;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  if ((*((_DWORD *)this + 14) & 0x100) == 0) {
    goto LABEL_25;
  }
LABEL_19:
  char v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 12);
  *(unsigned char *)uint64_t v4 = 72;
  unint64_t v16 = (unint64_t)v4 + 1;
  if ((v15 & 0x80000000) != 0)
  {
    uint64_t v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v15, v16, a3);
  }
  else
  {
    if (v15 <= 0x7F)
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v15;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      goto LABEL_25;
    }
    uint64_t v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, v16, a3);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v17;
LABEL_25:
  if ((*((unsigned char *)this + 57) & 2) != 0)
  {
    uint64_t v18 = *((void *)this + 5);
    *(unsigned char *)uint64_t v4 = 82;
    if (*(char *)(v18 + 23) < 0) {
      int v19 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v18 + 8);
    }
    else {
      int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v18 + 23);
    }
    if (v19 > 0x7F)
    {
      int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v19, (int)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v19;
      int v20 = v4 + 2;
    }
    int v21 = *(char *)(v18 + 23);
    if (v21 >= 0) {
      int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v18;
    }
    else {
      int v22 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v18;
    }
    if (v21 >= 0) {
      unsigned int v23 = (const void *)*(unsigned __int8 *)(v18 + 23);
    }
    else {
      unsigned int v23 = (const void *)*(unsigned int *)(v18 + 8);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v22, v23, v20, a4);
  }
  uint64_t v26 = (void *)*((void *)this + 1);
  unsigned int v25 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v24 = v26;
  if (!v26 || *v24 == v24[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v25, v4, a3);
}

uint64_t sub_10011E7A0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 56);
  if ((_BYTE)v3)
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 2;
    }
    if ((v3 & 8) != 0) {
      v4 += 2;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 2;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 2;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 2;
    }
    if ((v3 & 0x80) != 0) {
      uint64_t v5 = v4 + 2;
    }
    else {
      uint64_t v5 = v4;
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
      if ((v6 & 0x80000000) != 0)
      {
        int v7 = 11;
      }
      else if (v6 >= 0x80)
      {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2)
           + 1;
        int v3 = *(_DWORD *)(a1 + 56);
      }
      else
      {
        int v7 = 2;
      }
      uint64_t v5 = (v7 + v5);
    }
    if ((v3 & 0x200) != 0)
    {
      uint64_t v8 = *(void *)(a1 + 40);
      int v9 = *(unsigned __int8 *)(v8 + 23);
      char v10 = v9;
      uint64_t v11 = *(void *)(v8 + 8);
      if ((v9 & 0x80u) == 0) {
        unint64_t v12 = *(unsigned __int8 *)(v8 + 23);
      }
      else {
        unint64_t v12 = v11;
      }
      if (v12 >= 0x80)
      {
        int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v12, a2);
        int v9 = *(unsigned __int8 *)(v8 + 23);
        uint64_t v11 = *(void *)(v8 + 8);
        char v10 = *(unsigned char *)(v8 + 23);
      }
      else
      {
        int v13 = 1;
      }
      if (v10 < 0) {
        int v9 = v11;
      }
      uint64_t v5 = (v5 + v13 + v9 + 1);
    }
  }
  char v14 = *(void **)(a1 + 8);
  if (v14 && *v14 != v14[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 52) = v5;
  return v5;
}

uint64_t sub_10011E8F4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10011DA08((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10011E9C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10011E9E0(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10011EA6C()
{
  return 1;
}

uint64_t sub_10011EA74()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1318;
}

void sub_10011EB08(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_10011EB1C(void *a1)
{
  *a1 = off_10084FDD0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_10011EB68(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10011EB7C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      uint64_t v5 = *(void *)(a2 + 16);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(void *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v6 = *(void *)(a2 + 24);
      *(_DWORD *)(a1 + 36) |= 2u;
      *(void *)(a1 + 24) = v6;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10011EC34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10011EC4C(uint64_t a1)
{
  *(void *)a1 = off_10084FDD0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10011ECA0(uint64_t a1)
{
  *(void *)a1 = off_10084FDD0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_10011ED08(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_10011ED10()
{
}

void sub_10011ED50()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10011ED74(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 36))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10011ED94(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  do
  {
    while (1)
    {
      while (1)
      {
        int v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_22;
        }
        unint64_t v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v12;
        *(_DWORD *)(a1 + 36) |= 1u;
        char v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 17)
        {
          *((void *)this + 1) = v10 + 1;
          goto LABEL_16;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        int v9 = TagFallback & 7;
        goto LABEL_22;
      }
      int v9 = TagFallback & 7;
      if (v9 == 1) {
        break;
      }
LABEL_22:
      if (v9 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
    }
      }
LABEL_16:
    unint64_t v12 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
      return 0;
    }
    *(void *)(a1 + 24) = v12;
    *(_DWORD *)(a1 + 36) |= 2u;
  }
  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_10011EF0C(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 36);
  if (v5)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    int v5 = *(_DWORD *)(v4 + 36);
  }
  if ((v5 & 2) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  }
  uint64_t v8 = *(void **)(v4 + 8);
  int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v8;
  if (v8 && *v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

uint64_t sub_10011EF98(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 36);
  if (v3)
  {
    uint64_t v4 = *(void *)(a1 + 16);
    *(unsigned char *)a2 = 9;
    *(void *)(a2 + 1) = v4;
    a2 += 9;
    int v3 = *(_DWORD *)(a1 + 36);
  }
  if ((v3 & 2) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    *(unsigned char *)a2 = 17;
    *(void *)(a2 + 1) = v5;
    a2 += 9;
  }
  uint64_t v8 = *(void **)(a1 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v7 = v8;
  if (!v8 || *v7 == v7[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
}

uint64_t sub_10011F060(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 36);
  unsigned int v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0) {
    v4 += 9;
  }
  if (*(unsigned char *)(a1 + 36)) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v8 = *(void **)(a1 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v7 = v8;
  if (v8 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
  *(_DWORD *)(a1 + 32) = v5;
  return v5;
}

uint64_t sub_10011F0C8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10011EB7C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10011F19C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10011F1B4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10011F240()
{
  return 1;
}

uint64_t sub_10011F248()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1328;
}

void sub_10011F2DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10011F2F0(uint64_t a1)
{
  *(void *)a1 = off_10084FE80;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 128) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(void *)(a1 + 136) = 0;
  return a1;
}

void sub_10011F354(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10011F368(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v25);
  }
  int v4 = *(_DWORD *)(a2 + 140);
  if (!(_BYTE)v4) {
    goto LABEL_18;
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 140) |= 1u;
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1008AC358 + 16);
    }
    sub_10011EB7C(v5, v6);
    int v4 = *(_DWORD *)(a2 + 140);
  }
  if ((v4 & 2) != 0)
  {
    uint64_t v19 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 140) |= 2u;
    *(void *)(a1 + 24) = v19;
    int v4 = *(_DWORD *)(a2 + 140);
    if ((v4 & 4) == 0)
    {
LABEL_12:
      if ((v4 & 8) == 0) {
        goto LABEL_13;
      }
      goto LABEL_46;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v20 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 140) |= 4u;
  *(void *)(a1 + 32) = v20;
  int v4 = *(_DWORD *)(a2 + 140);
  if ((v4 & 8) == 0)
  {
LABEL_13:
    if ((v4 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t v21 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 140) |= 8u;
  *(void *)(a1 + 40) = v21;
  int v4 = *(_DWORD *)(a2 + 140);
  if ((v4 & 0x10) == 0)
  {
LABEL_14:
    if ((v4 & 0x20) == 0) {
      goto LABEL_15;
    }
LABEL_48:
    uint64_t v23 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 140) |= 0x20u;
    *(void *)(a1 + 56) = v23;
    int v4 = *(_DWORD *)(a2 + 140);
    if ((v4 & 0x40) == 0)
    {
LABEL_16:
      if ((v4 & 0x80) == 0) {
        goto LABEL_18;
      }
      goto LABEL_17;
    }
    goto LABEL_49;
  }
LABEL_47:
  uint64_t v22 = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 140) |= 0x10u;
  *(void *)(a1 + 48) = v22;
  int v4 = *(_DWORD *)(a2 + 140);
  if ((v4 & 0x20) != 0) {
    goto LABEL_48;
  }
LABEL_15:
  if ((v4 & 0x40) == 0) {
    goto LABEL_16;
  }
LABEL_49:
  uint64_t v24 = *(void *)(a2 + 64);
  *(_DWORD *)(a1 + 140) |= 0x40u;
  *(void *)(a1 + 64) = v24;
  int v4 = *(_DWORD *)(a2 + 140);
  if ((v4 & 0x80) != 0)
  {
LABEL_17:
    uint64_t v7 = *(void *)(a2 + 72);
    *(_DWORD *)(a1 + 140) |= 0x80u;
    *(void *)(a1 + 72) = v7;
    int v4 = *(_DWORD *)(a2 + 140);
  }
LABEL_18:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_27;
  }
  if ((v4 & 0x100) != 0)
  {
    uint64_t v8 = *(void *)(a2 + 80);
    *(_DWORD *)(a1 + 140) |= 0x100u;
    *(void *)(a1 + 80) = v8;
    int v4 = *(_DWORD *)(a2 + 140);
    if ((v4 & 0x200) == 0)
    {
LABEL_21:
      if ((v4 & 0x400) == 0) {
        goto LABEL_22;
      }
      goto LABEL_31;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_21;
  }
  uint64_t v9 = *(void *)(a2 + 88);
  *(_DWORD *)(a1 + 140) |= 0x200u;
  *(void *)(a1 + 88) = v9;
  int v4 = *(_DWORD *)(a2 + 140);
  if ((v4 & 0x400) == 0)
  {
LABEL_22:
    if ((v4 & 0x800) == 0) {
      goto LABEL_23;
    }
    goto LABEL_32;
  }
LABEL_31:
  int v10 = *(_DWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 140) |= 0x400u;
  *(_DWORD *)(a1 + 96) = v10;
  int v4 = *(_DWORD *)(a2 + 140);
  if ((v4 & 0x800) == 0)
  {
LABEL_23:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_34;
  }
LABEL_32:
  unsigned int v11 = *(_DWORD *)(a2 + 100);
  if (v11 >= 4) {
    sub_100410630();
  }
  *(_DWORD *)(a1 + 140) |= 0x800u;
  *(_DWORD *)(a1 + 100) = v11;
  int v4 = *(_DWORD *)(a2 + 140);
  if ((v4 & 0x1000) == 0)
  {
LABEL_24:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t v12 = *(void *)(a2 + 104);
  *(_DWORD *)(a1 + 140) |= 0x1000u;
  *(void *)(a1 + 104) = v12;
  int v4 = *(_DWORD *)(a2 + 140);
  if ((v4 & 0x2000) == 0)
  {
LABEL_25:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t v13 = *(void *)(a2 + 112);
  *(_DWORD *)(a1 + 140) |= 0x2000u;
  *(void *)(a1 + 112) = v13;
  int v4 = *(_DWORD *)(a2 + 140);
  if ((v4 & 0x4000) == 0)
  {
LABEL_26:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_38;
  }
LABEL_36:
  unsigned int v14 = *(_DWORD *)(a2 + 120);
  if (v14 >= 8) {
    sub_100410604();
  }
  *(_DWORD *)(a1 + 140) |= 0x4000u;
  *(_DWORD *)(a1 + 120) = v14;
  int v4 = *(_DWORD *)(a2 + 140);
  if ((v4 & 0x8000) == 0)
  {
LABEL_27:
    if ((v4 & 0x10000) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_40;
  }
LABEL_38:
  unsigned int v15 = *(_DWORD *)(a2 + 124);
  if (v15 >= 0xF) {
    sub_1004105D8();
  }
  *(_DWORD *)(a1 + 140) |= 0x8000u;
  *(_DWORD *)(a1 + 124) = v15;
  if ((*(_DWORD *)(a2 + 140) & 0x10000) != 0)
  {
LABEL_40:
    unint64_t v16 = *(const std::string **)(a2 + 128);
    *(_DWORD *)(a1 + 140) |= 0x10000u;
    uint64_t v17 = *(std::string **)(a1 + 128);
    if (v17 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v17, v16);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10011F6B8()
{
}

void sub_10011F6F0(void *a1)
{
  *a1 = off_10084FE80;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_10011F750(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void *sub_10011F750(void *result)
{
  uint64_t v1 = result[16];
  if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  if ((void *)qword_1008AC358 != result)
  {
    uint64_t result = (void *)result[2];
    if (result)
    {
      char v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_10011F808(void *a1)
{
  sub_10011F6F0(a1);

  operator delete();
}

uint64_t sub_10011F840(uint64_t result, int a2)
{
  *(_DWORD *)(result + 136) = a2;
  return result;
}

uint64_t sub_10011F848(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008AC358;
  if (!qword_1008AC358)
  {
    sub_1000EF4F0(0, a2, a3, a4);
    return qword_1008AC358;
  }
  return result;
}

void sub_10011F878()
{
}

void sub_10011F8B8()
{
}

uint64_t sub_10011F8DC(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 140);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(unsigned char *)(this + 36))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
        }
        uint64_t v3 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 28) = 0;
        if (v3) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    *(void *)(v1 + 72) = 0;
    *(_OWORD *)(v1 + 56) = 0u;
    *(_OWORD *)(v1 + 40) = 0u;
    *(_OWORD *)(v1 + 24) = 0u;
    int v2 = *(_DWORD *)(v1 + 140);
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_OWORD *)(v1 + 96) = 0u;
    *(_OWORD *)(v1 + 112) = 0u;
    *(_OWORD *)(v1 + 80) = 0u;
  }
  if ((v2 & 0x10000) != 0)
  {
    uint64_t v4 = *(void *)(v1 + 128);
    if ((_UNKNOWN *)v4 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      if (*(char *)(v4 + 23) < 0)
      {
        **(unsigned char **)uint64_t v4 = 0;
        *(void *)(v4 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v4 = 0;
        *(unsigned char *)(v4 + 23) = 0;
      }
    }
  }
  uint64_t v6 = *(void *)(v1 + 8);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v5 + 33) = 0;
  if (v6)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
  }
  return this;
}

uint64_t sub_10011F9C0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_46;
        }
        *(_DWORD *)(a1 + 140) |= 1u;
        uint64_t v10 = *(void *)(a1 + 16);
        if (!v10) {
          operator new();
        }
        v48[0] = 0;
        unsigned int v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v48))return 0; {
        }
          }
        else
        {
          v48[0] = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        int v19 = *((_DWORD *)this + 14);
        int v20 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v19 + 1;
        if (v19 >= v20) {
          return 0;
        }
        int v21 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v48[0]);
        if (!sub_10011ED94(v10, this, v22, v23) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v21);
        int v24 = *((_DWORD *)this + 14);
        BOOL v25 = __OFSUB__(v24, 1);
        int v26 = v24 - 1;
        if (v26 < 0 == v25) {
          *((_DWORD *)this + 14) = v26;
        }
        unsigned int v27 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v27 >= *((void *)this + 2) || *v27 != 17) {
          continue;
        }
        *((void *)this + 1) = v27 + 1;
        goto LABEL_59;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_46;
        }
LABEL_59:
        *(void *)int v48 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v48) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v48;
        }
        *(_DWORD *)(a1 + 140) |= 2u;
        unint64_t v28 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 != 25) {
          continue;
        }
        *((void *)this + 1) = v28 + 1;
LABEL_63:
        *(void *)int v48 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v48) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v48;
        }
        *(_DWORD *)(a1 + 140) |= 4u;
        unsigned int v29 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v29 >= *((void *)this + 2) || *v29 != 33) {
          continue;
        }
        *((void *)this + 1) = v29 + 1;
LABEL_67:
        *(void *)int v48 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v48) & 1) == 0)return 0; {
        *(void *)(a1 + 40) = *(void *)v48;
        }
        *(_DWORD *)(a1 + 140) |= 8u;
        unsigned int v30 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v30 >= *((void *)this + 2) || *v30 != 41) {
          continue;
        }
        *((void *)this + 1) = v30 + 1;
LABEL_71:
        *(void *)int v48 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v48) & 1) == 0)return 0; {
        *(void *)(a1 + 48) = *(void *)v48;
        }
        *(_DWORD *)(a1 + 140) |= 0x10u;
        unsigned int v31 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v31 >= *((void *)this + 2) || *v31 != 49) {
          continue;
        }
        *((void *)this + 1) = v31 + 1;
LABEL_75:
        *(void *)int v48 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v48) & 1) == 0)return 0; {
        *(void *)(a1 + 56) = *(void *)v48;
        }
        *(_DWORD *)(a1 + 140) |= 0x20u;
        uint64_t v32 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 != 57) {
          continue;
        }
        *((void *)this + 1) = v32 + 1;
LABEL_79:
        *(void *)int v48 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v48) & 1) == 0)return 0; {
        *(void *)(a1 + 64) = *(void *)v48;
        }
        *(_DWORD *)(a1 + 140) |= 0x40u;
        unsigned int v33 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v33 >= *((void *)this + 2) || *v33 != 65) {
          continue;
        }
        *((void *)this + 1) = v33 + 1;
LABEL_83:
        *(void *)int v48 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v48) & 1) == 0)return 0; {
        *(void *)(a1 + 72) = *(void *)v48;
        }
        *(_DWORD *)(a1 + 140) |= 0x80u;
        int v34 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v34 >= *((void *)this + 2) || *v34 != 73) {
          continue;
        }
        *((void *)this + 1) = v34 + 1;
LABEL_87:
        *(void *)int v48 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v48) & 1) == 0)return 0; {
        *(void *)(a1 + 80) = *(void *)v48;
        }
        *(_DWORD *)(a1 + 140) |= 0x100u;
        unsigned int v35 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v35 >= *((void *)this + 2) || *v35 != 81) {
          continue;
        }
        *((void *)this + 1) = v35 + 1;
LABEL_91:
        *(void *)int v48 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v48) & 1) == 0)return 0; {
        *(void *)(a1 + 88) = *(void *)v48;
        }
        *(_DWORD *)(a1 + 140) |= 0x200u;
        int v36 = (unsigned char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v36 >= v14 || *v36 != 88) {
          continue;
        }
        unsigned int v15 = v36 + 1;
        *((void *)this + 1) = v15;
LABEL_95:
        v48[0] = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v48);
          if (!result) {
            return result;
          }
          unsigned int v37 = v48[0];
          unsigned int v38 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          unsigned int v37 = *v15;
          unsigned int v38 = v15 + 1;
          *((void *)this + 1) = v38;
        }
        *(_DWORD *)(a1 + 96) = v37;
        *(_DWORD *)(a1 + 140) |= 0x400u;
        if ((unint64_t)v38 >= v14 || *v38 != 96) {
          continue;
        }
        unint64_t v16 = v38 + 1;
        *((void *)this + 1) = v16;
LABEL_103:
        v48[0] = 0;
        if ((unint64_t)v16 >= v14 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v48);
          if (!result) {
            return result;
          }
          unsigned int v40 = v48[0];
        }
        else
        {
          unsigned int v40 = *v16;
          *((void *)this + 1) = v16 + 1;
        }
        if (v40 > 3)
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 12, (int)v40);
        }
        else
        {
          *(_DWORD *)(a1 + 140) |= 0x800u;
          *(_DWORD *)(a1 + 100) = v40;
        }
        uint64_t v41 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v41 >= *((void *)this + 2) || *v41 != 105) {
          continue;
        }
        *((void *)this + 1) = v41 + 1;
LABEL_114:
        *(void *)int v48 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v48) & 1) == 0)return 0; {
        *(void *)(a1 + 104) = *(void *)v48;
        }
        *(_DWORD *)(a1 + 140) |= 0x1000u;
        unsigned int v42 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v42 >= *((void *)this + 2) || *v42 != 113) {
          continue;
        }
        *((void *)this + 1) = v42 + 1;
LABEL_118:
        *(void *)int v48 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v48))
        {
          *(void *)(a1 + 112) = *(void *)v48;
          *(_DWORD *)(a1 + 140) |= 0x2000u;
          unsigned int v43 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v43 < v12 && *v43 == 120)
          {
            uint64_t v13 = v43 + 1;
            *((void *)this + 1) = v13;
LABEL_122:
            v48[0] = 0;
            if ((unint64_t)v13 >= v12 || *v13 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v48);
              if (!result) {
                return result;
              }
              unsigned int v44 = v48[0];
            }
            else
            {
              unsigned int v44 = *v13;
              *((void *)this + 1) = v13 + 1;
            }
            if (v44 > 7)
            {
              wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 15, (int)v44);
            }
            else
            {
              *(_DWORD *)(a1 + 140) |= 0x4000u;
              *(_DWORD *)(a1 + 120) = v44;
            }
            int v45 = (unsigned __int8 *)*((void *)this + 1);
            unint64_t v17 = *((void *)this + 2);
            if ((int)v17 - (int)v45 >= 2 && *v45 == 128 && v45[1] == 1)
            {
              uint64_t v18 = (char *)(v45 + 2);
              *((void *)this + 1) = v18;
LABEL_134:
              v48[0] = 0;
              if ((unint64_t)v18 >= v17 || *v18 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v48);
                if (!result) {
                  return result;
                }
                unsigned int v46 = v48[0];
              }
              else
              {
                unsigned int v46 = *v18;
                *((void *)this + 1) = v18 + 1;
              }
              if (v46 > 0xE)
              {
                wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 16, (int)v46);
              }
              else
              {
                *(_DWORD *)(a1 + 140) |= 0x8000u;
                *(_DWORD *)(a1 + 124) = v46;
              }
              int v47 = (unsigned __int8 *)*((void *)this + 1);
              if (*((_DWORD *)this + 4) - (int)v47 >= 2 && *v47 == 138 && v47[1] == 1)
              {
                *((void *)this + 1) = v47 + 2;
LABEL_146:
                *(_DWORD *)(a1 + 140) |= 0x10000u;
                if (*(_UNKNOWN **)(a1 + 128) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
                  operator new();
                }
                uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
                if (!result) {
                  return result;
                }
                if (*((void *)this + 1) == *((void *)this + 2)
                  && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                {
                  *((_DWORD *)this + 8) = 0;
                  uint64_t result = 1;
                  *((unsigned char *)this + 36) = 1;
                  return result;
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_63;
        }
        goto LABEL_46;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_67;
        }
        goto LABEL_46;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_71;
        }
        goto LABEL_46;
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_75;
        }
        goto LABEL_46;
      case 7u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_79;
        }
        goto LABEL_46;
      case 8u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_83;
        }
        goto LABEL_46;
      case 9u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_87;
        }
        goto LABEL_46;
      case 0xAu:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_91;
        }
        goto LABEL_46;
      case 0xBu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        unsigned int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_95;
      case 0xCu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        unint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_103;
      case 0xDu:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_114;
        }
        goto LABEL_46;
      case 0xEu:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_118;
        }
        goto LABEL_46;
      case 0xFu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_122;
      case 0x10u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        uint64_t v18 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_134;
      case 0x11u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_146;
        }
        goto LABEL_46;
      default:
        int v9 = TagFallback & 7;
LABEL_46:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_100120250()
{
}

uint64_t sub_1001202B8(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 140);
  if (v6)
  {
    uint64_t v10 = *(void *)(this + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_1008AC358 + 16);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
    int v6 = *(_DWORD *)(v5 + 140);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_29;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_31;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_32;
  }
LABEL_31:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_33;
  }
LABEL_32:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_34;
  }
LABEL_33:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_35;
  }
LABEL_34:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(double *)(v5 + 72), a3);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_36;
  }
LABEL_35:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(double *)(v5 + 80), a3);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_37;
  }
LABEL_36:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (int)a2, *(double *)(v5 + 88), a3);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_38;
  }
LABEL_37:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(_DWORD *)(v5 + 96), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_39;
  }
LABEL_38:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(_DWORD *)(v5 + 100), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_40;
  }
LABEL_39:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (int)a2, *(double *)(v5 + 104), a3);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_41;
  }
LABEL_40:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, (int)a2, *(double *)(v5 + 112), a3);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
LABEL_42:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(_DWORD *)(v5 + 124), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 140) & 0x10000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
LABEL_41:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(_DWORD *)(v5 + 120), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x8000) != 0) {
    goto LABEL_42;
  }
LABEL_17:
  if ((v6 & 0x10000) != 0) {
LABEL_18:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
LABEL_19:
  int v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100120500(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 35);
  if (v6)
  {
    uint64_t v7 = *((void *)this + 2);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1008AC358 + 16);
    }
    *(unsigned char *)a2 = 10;
    unsigned int v8 = a2 + 1;
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v7 + 32);
    if (v9 > 0x7F)
    {
      uint64_t v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, v8, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v9;
      uint64_t v10 = (uint64_t)v4 + 2;
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10011EF98(v7, v10, a3);
    int v6 = *((_DWORD *)this + 35);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v11 = *((void *)this + 3);
  *(unsigned char *)uint64_t v4 = 17;
  *(void *)((char *)v4 + 1) = v11;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v6 = *((_DWORD *)this + 35);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t v12 = *((void *)this + 4);
  *(unsigned char *)uint64_t v4 = 25;
  *(void *)((char *)v4 + 1) = v12;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v6 = *((_DWORD *)this + 35);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t v13 = *((void *)this + 5);
  *(unsigned char *)uint64_t v4 = 33;
  *(void *)((char *)v4 + 1) = v13;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v6 = *((_DWORD *)this + 35);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t v14 = *((void *)this + 6);
  *(unsigned char *)uint64_t v4 = 41;
  *(void *)((char *)v4 + 1) = v14;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v6 = *((_DWORD *)this + 35);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v15 = *((void *)this + 7);
  *(unsigned char *)uint64_t v4 = 49;
  *(void *)((char *)v4 + 1) = v15;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v6 = *((_DWORD *)this + 35);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t v16 = *((void *)this + 8);
  *(unsigned char *)uint64_t v4 = 57;
  *(void *)((char *)v4 + 1) = v16;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v6 = *((_DWORD *)this + 35);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t v17 = *((void *)this + 9);
  *(unsigned char *)uint64_t v4 = 65;
  *(void *)((char *)v4 + 1) = v17;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v6 = *((_DWORD *)this + 35);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v18 = *((void *)this + 10);
  *(unsigned char *)uint64_t v4 = 73;
  *(void *)((char *)v4 + 1) = v18;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v6 = *((_DWORD *)this + 35);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_34;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t v19 = *((void *)this + 11);
  *(unsigned char *)uint64_t v4 = 81;
  *(void *)((char *)v4 + 1) = v19;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  if ((*((_DWORD *)this + 35) & 0x400) == 0) {
    goto LABEL_34;
  }
LABEL_28:
  int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 24);
  *(unsigned char *)uint64_t v4 = 88;
  unint64_t v21 = (unint64_t)v4 + 1;
  if ((v20 & 0x80000000) != 0)
  {
    uint64_t v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v20, v21, a3);
  }
  else
  {
    if (v20 <= 0x7F)
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v20;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      goto LABEL_34;
    }
    uint64_t v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v20, v21, a3);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v22;
LABEL_34:
  if ((*((unsigned char *)this + 141) & 8) == 0) {
    goto LABEL_41;
  }
  uint64_t v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 25);
  *(unsigned char *)uint64_t v4 = 96;
  unint64_t v24 = (unint64_t)v4 + 1;
  if ((v23 & 0x80000000) != 0)
  {
    uint64_t v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v23, v24, a3);
  }
  else
  {
    if (v23 <= 0x7F)
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v23;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      goto LABEL_41;
    }
    uint64_t v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v23, v24, a3);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v25;
LABEL_41:
  int v26 = *((_DWORD *)this + 35);
  if ((v26 & 0x1000) != 0)
  {
    uint64_t v27 = *((void *)this + 13);
    *(unsigned char *)uint64_t v4 = 105;
    *(void *)((char *)v4 + 1) = v27;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
    int v26 = *((_DWORD *)this + 35);
    if ((v26 & 0x2000) == 0)
    {
LABEL_43:
      if ((v26 & 0x4000) == 0) {
        goto LABEL_53;
      }
      goto LABEL_47;
    }
  }
  else if ((v26 & 0x2000) == 0)
  {
    goto LABEL_43;
  }
  uint64_t v28 = *((void *)this + 14);
  *(unsigned char *)uint64_t v4 = 113;
  *(void *)((char *)v4 + 1) = v28;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  if ((*((_DWORD *)this + 35) & 0x4000) == 0) {
    goto LABEL_53;
  }
LABEL_47:
  unsigned int v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 30);
  *(unsigned char *)uint64_t v4 = 120;
  unint64_t v30 = (unint64_t)v4 + 1;
  if ((v29 & 0x80000000) != 0)
  {
    uint64_t v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v29, v30, a3);
  }
  else
  {
    if (v29 <= 0x7F)
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v29;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      goto LABEL_53;
    }
    uint64_t v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v29, v30, a3);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v31;
LABEL_53:
  if ((*((unsigned char *)this + 141) & 0x80) == 0) {
    goto LABEL_60;
  }
  uint64_t v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 31);
  *(_WORD *)uint64_t v4 = 384;
  unint64_t v33 = (unint64_t)v4 + 2;
  if ((v32 & 0x80000000) != 0)
  {
    uint64_t v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v32, v33, a3);
  }
  else
  {
    if (v32 <= 0x7F)
    {
      *((unsigned char *)v4 + 2) = (_BYTE)v32;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
      goto LABEL_60;
    }
    uint64_t v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v32, v33, a3);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v34;
LABEL_60:
  if (*((unsigned char *)this + 142))
  {
    uint64_t v35 = *((void *)this + 16);
    *(_WORD *)uint64_t v4 = 394;
    if (*(char *)(v35 + 23) < 0) {
      int v36 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v35 + 8);
    }
    else {
      int v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v35 + 23);
    }
    if (v36 > 0x7F)
    {
      int v37 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v36, (int)v4 + 2, a3);
    }
    else
    {
      *((unsigned char *)v4 + 2) = (_BYTE)v36;
      int v37 = v4 + 3;
    }
    int v38 = *(char *)(v35 + 23);
    if (v38 >= 0) {
      int v39 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v35;
    }
    else {
      int v39 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v35;
    }
    if (v38 >= 0) {
      unsigned int v40 = (const void *)*(unsigned __int8 *)(v35 + 23);
    }
    else {
      unsigned int v40 = (const void *)*(unsigned int *)(v35 + 8);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v39, v40, v37, a4);
  }
  unsigned int v43 = (void *)*((void *)this + 1);
  unsigned int v42 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v41 = v43;
  if (!v43 || *v41 == v41[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v42, v4, a3);
}

uint64_t sub_100120AF4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 140);
  if ((_BYTE)v3)
  {
    if (v3)
    {
      uint64_t v6 = *(void *)(a1 + 16);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_1008AC358 + 16);
      }
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10011F060(v6, a2);
      int v8 = (int)v7;
      if (v7 >= 0x80) {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      }
      else {
        int v9 = 1;
      }
      unsigned int v4 = v8 + v9 + 1;
      int v3 = *(_DWORD *)(a1 + 140);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x80) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  if ((v3 & 0xFF00) != 0)
  {
    unsigned int v10 = v5 + 9;
    if ((v3 & 0x100) == 0) {
      unsigned int v10 = v5;
    }
    if ((v3 & 0x200) != 0) {
      unsigned int v11 = v10 + 9;
    }
    else {
      unsigned int v11 = v10;
    }
    if ((v3 & 0x400) != 0)
    {
      uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 96);
      if ((v12 & 0x80000000) != 0)
      {
        int v13 = 11;
      }
      else if (v12 >= 0x80)
      {
        int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2)
            + 1;
        int v3 = *(_DWORD *)(a1 + 140);
      }
      else
      {
        int v13 = 2;
      }
      v11 += v13;
    }
    if ((v3 & 0x800) != 0)
    {
      uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 100);
      if ((v14 & 0x80000000) != 0)
      {
        int v15 = 11;
      }
      else if (v14 >= 0x80)
      {
        int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2)
            + 1;
        int v3 = *(_DWORD *)(a1 + 140);
      }
      else
      {
        int v15 = 2;
      }
      v11 += v15;
    }
    unsigned int v16 = v11 + 9;
    if ((v3 & 0x1000) == 0) {
      unsigned int v16 = v11;
    }
    if ((v3 & 0x2000) != 0) {
      uint64_t v5 = v16 + 9;
    }
    else {
      uint64_t v5 = v16;
    }
    if ((v3 & 0x4000) != 0)
    {
      uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 120);
      if ((v17 & 0x80000000) != 0)
      {
        int v18 = 11;
      }
      else if (v17 >= 0x80)
      {
        int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2)
            + 1;
        int v3 = *(_DWORD *)(a1 + 140);
      }
      else
      {
        int v18 = 2;
      }
      uint64_t v5 = (v18 + v5);
    }
    if ((v3 & 0x8000) != 0)
    {
      uint64_t v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 124);
      if ((v19 & 0x80000000) != 0)
      {
        int v20 = 12;
      }
      else if (v19 >= 0x80)
      {
        int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2)
            + 2;
        int v3 = *(_DWORD *)(a1 + 140);
      }
      else
      {
        int v20 = 3;
      }
      uint64_t v5 = (v20 + v5);
    }
  }
  if ((v3 & 0x10000) != 0)
  {
    uint64_t v21 = *(void *)(a1 + 128);
    int v22 = *(unsigned __int8 *)(v21 + 23);
    char v23 = v22;
    uint64_t v24 = *(void *)(v21 + 8);
    if ((v22 & 0x80u) == 0) {
      unint64_t v25 = *(unsigned __int8 *)(v21 + 23);
    }
    else {
      unint64_t v25 = v24;
    }
    if (v25 >= 0x80)
    {
      int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v25, a2);
      int v22 = *(unsigned __int8 *)(v21 + 23);
      uint64_t v24 = *(void *)(v21 + 8);
      char v23 = *(unsigned char *)(v21 + 23);
    }
    else
    {
      int v26 = 1;
    }
    if (v23 < 0) {
      int v22 = v24;
    }
    uint64_t v5 = (v5 + v26 + v22 + 2);
  }
  uint64_t v27 = *(void **)(a1 + 8);
  if (v27 && *v27 != v27[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 136) = v5;
  return v5;
}

uint64_t sub_100120D54(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10011F368((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100120E28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100120E40(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100120ECC()
{
  return 1;
}

uint64_t sub_100120ED4()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1338;
}

void sub_100120F68(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100120F7C(uint64_t a1)
{
  *(void *)a1 = off_10084FF30;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(void *)(a1 + 48) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(void *)(a1 + 56) = 0;
  return a1;
}

void sub_100120FD4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100120FE8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 60);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 60))
    {
      uint64_t v5 = *(void *)(a2 + 16);
      *(_DWORD *)(a1 + 60) |= 1u;
      *(void *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 60);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((*(unsigned char *)(a2 + 60) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v6 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 60) |= 2u;
    *(void *)(a1 + 24) = v6;
    int v4 = *(_DWORD *)(a2 + 60);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_12:
    uint64_t v7 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 60) |= 4u;
    *(void *)(a1 + 32) = v7;
    int v4 = *(_DWORD *)(a2 + 60);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
LABEL_14:
      int v9 = *(const std::string **)(a2 + 48);
      *(_DWORD *)(a1 + 60) |= 0x10u;
      unsigned int v10 = *(std::string **)(a1 + 48);
      if (v10 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      std::string::operator=(v10, v9);
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
LABEL_13:
    uint64_t v8 = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 60) |= 8u;
    *(void *)(a1 + 40) = v8;
    if ((*(_DWORD *)(a2 + 60) & 0x10) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_14;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10012114C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100121164(wireless_diagnostics::google::protobuf::Message *a1)
{
  *(void *)a1 = off_10084FF30;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::Message *)((char *)a1 + 8);
  sub_1001211C4((uint64_t)a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message(a1);
}

uint64_t sub_1001211C4(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 48);
  if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  return result;
}

void sub_10012123C(wireless_diagnostics::google::protobuf::Message *a1)
{
  sub_100121164(a1);

  operator delete();
}

uint64_t sub_100121274(uint64_t result, int a2)
{
  *(_DWORD *)(result + 56) = a2;
  return result;
}

uint64_t sub_10012127C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008AC360;
  if (!qword_1008AC360)
  {
    sub_1000EF4F0(0, a2, a3, a4);
    return qword_1008AC360;
  }
  return result;
}

void sub_1001212AC()
{
}

void sub_1001212EC()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100121310(uint64_t a1)
{
  char v1 = *(unsigned char *)(a1 + 60);
  if (v1)
  {
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    if ((v1 & 0x10) != 0)
    {
      uint64_t v2 = *(void *)(a1 + 48);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
  }
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 13) = 0;
  if (v4) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10012136C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_38;
        }
        unint64_t v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v16) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v16;
        *(_DWORD *)(a1 + 60) |= 1u;
        unsigned int v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 17) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_38;
        }
LABEL_15:
        unint64_t v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v16) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 24) = v16;
        *(_DWORD *)(a1 + 60) |= 2u;
        unsigned int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 25) {
          continue;
        }
        *((void *)this + 1) = v11 + 1;
LABEL_20:
        unint64_t v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v16) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 32) = v16;
        *(_DWORD *)(a1 + 60) |= 4u;
        uint64_t v12 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 != 33) {
          continue;
        }
        *((void *)this + 1) = v12 + 1;
LABEL_25:
        unint64_t v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v16) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 40) = v16;
        int v13 = *(_DWORD *)(a1 + 60) | 8;
        *(_DWORD *)(a1 + 60) = v13;
        uint64_t v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 != 42) {
          continue;
        }
        *((void *)this + 1) = v14 + 1;
LABEL_31:
        *(_DWORD *)(a1 + 60) = v13 | 0x10;
        if (*(_UNKNOWN **)(a1 + 48) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
        if (!result) {
          return result;
        }
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_20;
        }
        goto LABEL_38;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_25;
        }
        goto LABEL_38;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_38;
        }
        int v13 = *(_DWORD *)(a1 + 60);
        goto LABEL_31;
      default:
        int v9 = TagFallback & 7;
LABEL_38:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
    return result;
  }
}

uint64_t sub_10012164C(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 60);
  if (v5)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    int v5 = *(_DWORD *)(v4 + 60);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  int v5 = *(_DWORD *)(v4 + 60);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_16:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v4 + 40), a3);
    if ((*(_DWORD *)(v4 + 60) & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v4 + 32), a3);
  int v5 = *(_DWORD *)(v4 + 60);
  if ((v5 & 8) != 0) {
    goto LABEL_16;
  }
LABEL_5:
  if ((v5 & 0x10) != 0) {
LABEL_6:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
LABEL_7:
  uint64_t v8 = *(void **)(v4 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v8;
  if (v8 && *v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

uint64_t sub_100121734(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  int v5 = *((_DWORD *)this + 15);
  if (v5)
  {
    uint64_t v6 = *((void *)this + 2);
    *(unsigned char *)a2 = 9;
    *(void *)(a2 + 1) = v6;
    a2 += 9;
    int v5 = *((_DWORD *)this + 15);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v7 = *((void *)this + 3);
  *(unsigned char *)a2 = 17;
  *(void *)(a2 + 1) = v7;
  a2 += 9;
  int v5 = *((_DWORD *)this + 15);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  uint64_t v8 = *((void *)this + 4);
  *(unsigned char *)a2 = 25;
  *(void *)(a2 + 1) = v8;
  a2 += 9;
  int v5 = *((_DWORD *)this + 15);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_24;
    }
LABEL_11:
    uint64_t v10 = *((void *)this + 6);
    *(unsigned char *)a2 = 42;
    if (*(char *)(v10 + 23) < 0) {
      unsigned int v11 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v10 + 8);
    }
    else {
      unsigned int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v10 + 23);
    }
    if (v11 > 0x7F)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)a2 + 1, a3);
    }
    else
    {
      *(unsigned char *)(a2 + 1) = (_BYTE)v11;
      int v12 = a2 + 2;
    }
    int v13 = *(char *)(v10 + 23);
    if (v13 >= 0) {
      uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10;
    }
    else {
      uint64_t v14 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v10;
    }
    if (v13 >= 0) {
      int v15 = (const void *)*(unsigned __int8 *)(v10 + 23);
    }
    else {
      int v15 = (const void *)*(unsigned int *)(v10 + 8);
    }
    a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v14, v15, v12, a4);
    goto LABEL_24;
  }
LABEL_10:
  uint64_t v9 = *((void *)this + 5);
  *(unsigned char *)a2 = 33;
  *(void *)(a2 + 1) = v9;
  a2 += 9;
  if ((*((_DWORD *)this + 15) & 0x10) != 0) {
    goto LABEL_11;
  }
LABEL_24:
  int v18 = (void *)*((void *)this + 1);
  uint64_t v17 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  unint64_t v16 = v18;
  if (!v18 || *v16 == v16[1]) {
    return a2;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v17, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_100121960(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 60);
  if (*(unsigned char *)(a1 + 60))
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 0x10) != 0)
    {
      uint64_t v6 = *(void *)(a1 + 48);
      int v7 = *(unsigned __int8 *)(v6 + 23);
      char v8 = v7;
      uint64_t v9 = *(void *)(v6 + 8);
      if ((v7 & 0x80u) == 0) {
        unint64_t v10 = *(unsigned __int8 *)(v6 + 23);
      }
      else {
        unint64_t v10 = v9;
      }
      if (v10 >= 0x80)
      {
        int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10, a2);
        int v7 = *(unsigned __int8 *)(v6 + 23);
        uint64_t v9 = *(void *)(v6 + 8);
        char v8 = *(unsigned char *)(v6 + 23);
      }
      else
      {
        int v11 = 1;
      }
      if (v8 < 0) {
        int v7 = v9;
      }
      uint64_t v5 = (v5 + v11 + v7 + 1);
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  int v12 = *(void **)(a1 + 8);
  if (v12 && *v12 != v12[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 56) = v5;
  return v5;
}

uint64_t sub_100121A44(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100120FE8((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100121B18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100121B30(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100121BBC()
{
  return 1;
}

uint64_t sub_100121BC4()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1348;
}

void sub_100121C58(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100121C6C(uint64_t a1)
{
  *(void *)a1 = off_10084FFE0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_DWORD *)(a1 + 60) = 0;
  *(_DWORD *)(a1 + 64) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 42) = 0u;
  return a1;
}

void sub_100121CC0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100121CD4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 64);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 64))
  {
    unsigned int v5 = *(_DWORD *)(a2 + 16);
    if (v5 >= 8) {
      sub_10041065C();
    }
    *(_DWORD *)(a1 + 64) |= 1u;
    *(_DWORD *)(a1 + 16) = v5;
    int v4 = *(_DWORD *)(a2 + 64);
  }
  if ((v4 & 2) != 0)
  {
    int v8 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 64) |= 2u;
    *(_DWORD *)(a1 + 20) = v8;
    int v4 = *(_DWORD *)(a2 + 64);
    if ((v4 & 4) == 0)
    {
LABEL_9:
      if ((v4 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_18;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_9;
  }
  uint64_t v9 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 64) |= 4u;
  *(void *)(a1 + 24) = v9;
  int v4 = *(_DWORD *)(a2 + 64);
  if ((v4 & 8) == 0)
  {
LABEL_10:
    if ((v4 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t v10 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 64) |= 8u;
  *(void *)(a1 + 32) = v10;
  int v4 = *(_DWORD *)(a2 + 64);
  if ((v4 & 0x10) == 0)
  {
LABEL_11:
    if ((v4 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v11 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 64) |= 0x10u;
  *(void *)(a1 + 40) = v11;
  int v4 = *(_DWORD *)(a2 + 64);
  if ((v4 & 0x20) == 0)
  {
LABEL_12:
    if ((v4 & 0x40) == 0) {
      goto LABEL_13;
    }
LABEL_21:
    char v13 = *(unsigned char *)(a2 + 56);
    *(_DWORD *)(a1 + 64) |= 0x40u;
    *(unsigned char *)(a1 + 56) = v13;
    if ((*(_DWORD *)(a2 + 64) & 0x80) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_14;
  }
LABEL_20:
  uint64_t v12 = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 64) |= 0x20u;
  *(void *)(a1 + 48) = v12;
  int v4 = *(_DWORD *)(a2 + 64);
  if ((v4 & 0x40) != 0) {
    goto LABEL_21;
  }
LABEL_13:
  if ((v4 & 0x80) != 0)
  {
LABEL_14:
    char v6 = *(unsigned char *)(a2 + 57);
    *(_DWORD *)(a1 + 64) |= 0x80u;
    *(unsigned char *)(a1 + 57) = v6;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100121E5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100121E74(uint64_t a1)
{
  *(void *)a1 = off_10084FFE0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100121EC8(uint64_t a1)
{
  *(void *)a1 = off_10084FFE0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100121F30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 60) = a2;
  return result;
}

void sub_100121F38()
{
}

void sub_100121F78()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100121F9C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 64))
  {
    *(_OWORD *)(a1 + 42) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 14) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100121FC4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  char v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (2)
  {
    int v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        v29[0] = 0;
        uint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v29);
          if (!result) {
            return result;
          }
          unsigned int v11 = v29[0];
        }
        else
        {
          unsigned int v11 = *v10;
          *((void *)this + 1) = v10 + 1;
        }
        if (v11 > 7)
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 1, (int)v11);
        }
        else
        {
          *(_DWORD *)(a1 + 64) |= 1u;
          *(_DWORD *)(a1 + 16) = v11;
        }
        int v18 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v18 < v12 && *v18 == 16)
        {
          char v13 = v18 + 1;
          *((void *)this + 1) = v13;
          goto LABEL_38;
        }
        continue;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        char v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
LABEL_38:
        v29[0] = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v29);
          if (!result) {
            return result;
          }
          unsigned int v19 = v29[0];
          int v20 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int v19 = *v13;
          int v20 = v13 + 1;
          *((void *)this + 1) = v20;
        }
        *(_DWORD *)(a1 + 20) = v19;
        *(_DWORD *)(a1 + 64) |= 2u;
        if ((unint64_t)v20 >= v12 || *v20 != 25) {
          continue;
        }
        *((void *)this + 1) = v20 + 1;
LABEL_46:
        *(void *)unsigned int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v29) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v29;
        }
        *(_DWORD *)(a1 + 64) |= 4u;
        uint64_t v21 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 != 33) {
          continue;
        }
        *((void *)this + 1) = v21 + 1;
LABEL_50:
        *(void *)unsigned int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v29) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v29;
        }
        *(_DWORD *)(a1 + 64) |= 8u;
        int v22 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 != 41) {
          continue;
        }
        *((void *)this + 1) = v22 + 1;
LABEL_54:
        *(void *)unsigned int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v29) & 1) == 0)return 0; {
        *(void *)(a1 + 40) = *(void *)v29;
        }
        *(_DWORD *)(a1 + 64) |= 0x10u;
        char v23 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 != 49) {
          continue;
        }
        *((void *)this + 1) = v23 + 1;
LABEL_58:
        *(void *)unsigned int v29 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v29))
        {
          *(void *)(a1 + 48) = *(void *)v29;
          *(_DWORD *)(a1 + 64) |= 0x20u;
          uint64_t v24 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
          if ((unint64_t)v24 < v14 && *v24 == 56)
          {
            int v15 = v24 + 1;
            *((void *)this + 1) = v15;
LABEL_62:
            v29[0] = 0;
            if ((unint64_t)v15 >= v14 || *v15 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v29);
              if (!result) {
                return result;
              }
              unsigned int v25 = v29[0];
              int v26 = (unsigned char *)*((void *)this + 1);
              unint64_t v14 = *((void *)this + 2);
            }
            else
            {
              unsigned int v25 = *v15;
              int v26 = v15 + 1;
              *((void *)this + 1) = v26;
            }
            *(unsigned char *)(a1 + 56) = v25 != 0;
            *(_DWORD *)(a1 + 64) |= 0x40u;
            if ((unint64_t)v26 < v14 && *v26 == 64)
            {
              unint64_t v16 = v26 + 1;
              *((void *)this + 1) = v16;
LABEL_70:
              v29[0] = 0;
              if ((unint64_t)v16 >= v14 || *v16 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v29);
                if (!result) {
                  return result;
                }
                unsigned int v27 = v29[0];
                uint64_t v28 = (unsigned __int8 *)*((void *)this + 1);
                unint64_t v14 = *((void *)this + 2);
              }
              else
              {
                unsigned int v27 = *v16;
                uint64_t v28 = (unsigned __int8 *)(v16 + 1);
                *((void *)this + 1) = v28;
              }
              *(unsigned char *)(a1 + 57) = v27 != 0;
              *(_DWORD *)(a1 + 64) |= 0x80u;
              if (v28 == (unsigned __int8 *)v14
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_46;
        }
        goto LABEL_26;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_50;
        }
        goto LABEL_26;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_54;
        }
        goto LABEL_26;
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_58;
        }
        goto LABEL_26;
      case 7u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_62;
      case 8u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        unint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_70;
      default:
        int v9 = TagFallback & 7;
LABEL_26:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100122438(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 64);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 16), (int)a2, a4);
    int v6 = *(_DWORD *)(v5 + 64);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 20), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_22:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 56), (BOOL)a2, a4);
    if ((*(_DWORD *)(v5 + 64) & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x40) != 0) {
    goto LABEL_22;
  }
LABEL_8:
  if ((v6 & 0x80) != 0) {
LABEL_9:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 57), (BOOL)a2, a4);
LABEL_10:
  int v9 = *(void **)(v5 + 8);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

unsigned char *sub_100122574(wireless_diagnostics::google::protobuf::internal::WireFormat *this, unsigned char *a2, unsigned __int8 *a3)
{
  if (*((unsigned char *)this + 64))
  {
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 4);
    *a2 = 8;
    if ((v4 & 0x80000000) != 0)
    {
      uint64_t v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v4, (unint64_t)(a2 + 1), a3);
    }
    else
    {
      if (v4 <= 0x7F)
      {
        a2[1] = (_BYTE)v4;
        a2 += 2;
        goto LABEL_8;
      }
      uint64_t v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v4, (int)a2 + 1, a3);
    }
    a2 = (unsigned char *)v5;
  }
LABEL_8:
  if ((*((unsigned char *)this + 64) & 2) == 0) {
    goto LABEL_15;
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 5);
  *a2 = 16;
  if ((v6 & 0x80000000) != 0)
  {
    uint64_t v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v6, (unint64_t)(a2 + 1), a3);
  }
  else
  {
    if (v6 <= 0x7F)
    {
      a2[1] = (_BYTE)v6;
      a2 += 2;
      goto LABEL_15;
    }
    uint64_t v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, (int)a2 + 1, a3);
  }
  a2 = (unsigned char *)v7;
LABEL_15:
  int v8 = *((_DWORD *)this + 16);
  if ((v8 & 4) != 0)
  {
    uint64_t v14 = *((void *)this + 3);
    *a2 = 25;
    *(void *)(a2 + 1) = v14;
    a2 += 9;
    int v8 = *((_DWORD *)this + 16);
    if ((v8 & 8) == 0)
    {
LABEL_17:
      if ((v8 & 0x10) == 0) {
        goto LABEL_18;
      }
      goto LABEL_30;
    }
  }
  else if ((v8 & 8) == 0)
  {
    goto LABEL_17;
  }
  uint64_t v15 = *((void *)this + 4);
  *a2 = 33;
  *(void *)(a2 + 1) = v15;
  a2 += 9;
  int v8 = *((_DWORD *)this + 16);
  if ((v8 & 0x10) == 0)
  {
LABEL_18:
    if ((v8 & 0x20) == 0) {
      goto LABEL_19;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t v16 = *((void *)this + 5);
  *a2 = 41;
  *(void *)(a2 + 1) = v16;
  a2 += 9;
  int v8 = *((_DWORD *)this + 16);
  if ((v8 & 0x20) == 0)
  {
LABEL_19:
    if ((v8 & 0x40) == 0) {
      goto LABEL_20;
    }
LABEL_32:
    char v18 = *((unsigned char *)this + 56);
    *a2 = 56;
    a2[1] = v18;
    a2 += 2;
    if ((*((_DWORD *)this + 16) & 0x80) == 0) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
LABEL_31:
  uint64_t v17 = *((void *)this + 6);
  *a2 = 49;
  *(void *)(a2 + 1) = v17;
  a2 += 9;
  int v8 = *((_DWORD *)this + 16);
  if ((v8 & 0x40) != 0) {
    goto LABEL_32;
  }
LABEL_20:
  if ((v8 & 0x80) != 0)
  {
LABEL_21:
    char v9 = *((unsigned char *)this + 57);
    *a2 = 64;
    a2[1] = v9;
    a2 += 2;
  }
LABEL_22:
  unint64_t v12 = (void *)*((void *)this + 1);
  unsigned int v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v10 = v12;
  if (!v12 || *v10 == v10[1]) {
    return a2;
  }

  return (unsigned char *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v11, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_1001227FC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 64);
  if (!(_BYTE)v3)
  {
    uint64_t v5 = 0;
    goto LABEL_32;
  }
  if ((*(unsigned char *)(a1 + 64) & 1) == 0)
  {
    int v4 = 0;
    if ((*(unsigned char *)(a1 + 64) & 2) == 0) {
      goto LABEL_19;
    }
LABEL_13:
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if ((v7 & 0x80000000) != 0)
    {
      int v8 = 11;
    }
    else if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 64);
    }
    else
    {
      int v8 = 2;
    }
    v4 += v8;
    goto LABEL_19;
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
  if ((v6 & 0x80000000) != 0)
  {
    int v4 = 11;
    if ((v3 & 2) == 0) {
      goto LABEL_19;
    }
    goto LABEL_13;
  }
  if (v6 < 0x80)
  {
    int v4 = 2;
    if ((v3 & 2) == 0) {
      goto LABEL_19;
    }
    goto LABEL_13;
  }
  int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
  int v3 = *(_DWORD *)(a1 + 64);
  if ((v3 & 2) != 0) {
    goto LABEL_13;
  }
LABEL_19:
  unsigned int v9 = v4 + 9;
  if ((v3 & 4) == 0) {
    unsigned int v9 = v4;
  }
  if ((v3 & 8) != 0) {
    v9 += 9;
  }
  if ((v3 & 0x10) != 0) {
    v9 += 9;
  }
  if ((v3 & 0x20) != 0) {
    v9 += 9;
  }
  if ((v3 & 0x40) != 0) {
    v9 += 2;
  }
  if ((v3 & 0x80) != 0) {
    uint64_t v5 = v9 + 2;
  }
  else {
    uint64_t v5 = v9;
  }
LABEL_32:
  uint64_t v10 = *(void **)(a1 + 8);
  if (v10 && *v10 != v10[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 60) = v5;
  return v5;
}

uint64_t sub_100122914(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100121CD4((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001229E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100122A00(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100122A8C()
{
  return 1;
}

uint64_t sub_100122A94()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1358;
}

void sub_100122B28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100122B3C(uint64_t a1)
{
  *(void *)a1 = off_100850090;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(void *)(a1 + 48) = 0;
  return a1;
}

void sub_100122B94(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100122BA8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 16) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 28);
      uint64_t v7 = *(int *)(a1 + 24);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), v6 + 1);
          int v6 = *(_DWORD *)(a1 + 28);
        }
        *(_DWORD *)(a1 + 28) = v6 + 1;
        sub_1001328A4();
      }
      uint64_t v8 = *(void *)(a1 + 16);
      *(_DWORD *)(a1 + 24) = v7 + 1;
      sub_100121CD4(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 24));
  }
  if ((*(unsigned char *)(a2 + 52) & 2) != 0)
  {
    unsigned int v9 = *(const std::string **)(a2 + 40);
    *(_DWORD *)(a1 + 52) |= 2u;
    uint64_t v10 = *(std::string **)(a1 + 40);
    if (v10 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v10, v9);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100122D34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100122D4C(uint64_t a1)
{
  *(void *)a1 = off_100850090;
  uint64_t v2 = (uint64_t *)(a1 + 16);
  sub_10011B41C(a1);
  sub_10006F938(v2);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100122DBC(uint64_t a1)
{
  sub_100122D4C(a1);

  operator delete();
}

uint64_t sub_100122DF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) = a2;
  return result;
}

uint64_t sub_100122DFC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008AC370;
  if (!qword_1008AC370)
  {
    sub_1000EF4F0(0, a2, a3, a4);
    return qword_1008AC370;
  }
  return result;
}

void sub_100122E2C()
{
}

void sub_100122E6C()
{
}

uint64_t sub_100122E90(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 52) & 2) != 0)
  {
    uint64_t v2 = *(void *)(a1 + 40);
    if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)uint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v2 = 0;
        *(unsigned char *)(v2 + 23) = 0;
      }
    }
  }
  uint64_t result = sub_10006F8C8(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)v4 + 11) = 0;
  if (v5)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return result;
}

uint64_t sub_100122F20(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16);
  unsigned int v7 = a1 + 8;
  do
  {
    while (1)
    {
LABEL_2:
      uint64_t v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v8;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v8 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v10 = TagFallback & 7;
      if (v10 == 2)
      {
        while (1)
        {
          int v12 = *(_DWORD *)(a1 + 28);
          uint64_t v13 = *(int *)(a1 + 24);
          if ((int)v13 >= v12)
          {
            if (v12 == *(_DWORD *)(a1 + 32))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v12 + 1);
              int v12 = *(_DWORD *)(a1 + 28);
            }
            *(_DWORD *)(a1 + 28) = v12 + 1;
            sub_1001328A4();
          }
          uint64_t v14 = *(void *)(a1 + 16);
          *(_DWORD *)(a1 + 24) = v13 + 1;
          uint64_t v15 = *(void *)(v14 + 8 * v13);
          unsigned int v27 = 0;
          uint64_t v16 = (char *)*((void *)this + 1);
          if ((unint64_t)v16 >= *((void *)this + 2) || *v16 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27))return 0; {
          }
            }
          else
          {
            unsigned int v27 = *v16;
            *((void *)this + 1) = v16 + 1;
          }
          int v17 = *((_DWORD *)this + 14);
          int v18 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v17 + 1;
          if (v17 >= v18) {
            return 0;
          }
          int v19 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27);
          if (!sub_100121FC4(v15, this, v20, v21) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v19);
          int v22 = *((_DWORD *)this + 14);
          BOOL v23 = __OFSUB__(v22, 1);
          int v24 = v22 - 1;
          if (v24 < 0 == v23) {
            *((_DWORD *)this + 14) = v24;
          }
          unsigned int v25 = (unsigned __int8 *)*((void *)this + 1);
          if ((unint64_t)v25 >= *((void *)this + 2)) {
            goto LABEL_2;
          }
          int v26 = *v25;
          if (v26 != 10)
          {
            if (v26 != 18) {
              goto LABEL_2;
            }
            *((void *)this + 1) = v25 + 1;
            goto LABEL_10;
          }
          *((void *)this + 1) = v25 + 1;
        }
      }
LABEL_36:
      if (v10 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
    }
      }
    if (TagFallback >> 3 != 2)
    {
      int v10 = TagFallback & 7;
      goto LABEL_36;
    }
    int v10 = TagFallback & 7;
    if (v10 != 2) {
      goto LABEL_36;
    }
LABEL_10:
    *(_DWORD *)(a1 + 52) |= 2u;
    if (*(_UNKNOWN **)(a1 + 40) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
    if (!result) {
      return result;
    }
  }
  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_1001231C0(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(int *)(this + 24) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 16) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 24));
  }
  if ((*(unsigned char *)(v5 + 52) & 2) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  }
  unsigned int v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100123274(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  if (*((int *)this + 6) >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      unsigned int v7 = *(unsigned int **)(*((void *)this + 2) + 8 * v6);
      *(unsigned char *)a2 = 10;
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7[15];
      if (v8 > 0x7F)
      {
        unsigned int v9 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)a2 + 1, a3);
      }
      else
      {
        *((unsigned char *)a2 + 1) = (_BYTE)v8;
        unsigned int v9 = (char *)a2 + 2;
      }
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100122574((wireless_diagnostics::google::protobuf::internal::WireFormat *)v7, v9, a3);
      ++v6;
    }
    while (v6 < *((int *)this + 6));
  }
  if ((*((unsigned char *)this + 52) & 2) != 0)
  {
    uint64_t v10 = *((void *)this + 5);
    *(unsigned char *)a2 = 18;
    if (*(char *)(v10 + 23) < 0) {
      unsigned int v11 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v10 + 8);
    }
    else {
      unsigned int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v10 + 23);
    }
    if (v11 > 0x7F)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)a2 + 1, a3);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v11;
      int v12 = a2 + 2;
    }
    int v13 = *(char *)(v10 + 23);
    if (v13 >= 0) {
      uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10;
    }
    else {
      uint64_t v14 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v10;
    }
    if (v13 >= 0) {
      uint64_t v15 = (const void *)*(unsigned __int8 *)(v10 + 23);
    }
    else {
      uint64_t v15 = (const void *)*(unsigned int *)(v10 + 8);
    }
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v14, v15, v12, a4);
  }
  int v18 = (void *)*((void *)this + 1);
  int v17 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v16 = v18;
  if (!v18 || *v16 == v16[1]) {
    return a2;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v17, a2, a3);
}

uint64_t sub_1001233AC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if ((*(unsigned char *)(a1 + 52) & 2) != 0)
  {
    uint64_t v4 = *(void *)(a1 + 40);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    char v6 = v5;
    uint64_t v7 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
    }
    else {
      unint64_t v8 = v7;
    }
    if (v8 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8, a2);
      int v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v7 = *(void *)(v4 + 8);
      int v9 = v10 + 1;
      char v6 = *(unsigned char *)(v4 + 23);
    }
    else
    {
      int v9 = 2;
    }
    if (v6 < 0) {
      int v5 = v7;
    }
    int v3 = v9 + v5;
  }
  else
  {
    int v3 = 0;
  }
  int v11 = *(_DWORD *)(a1 + 24);
  uint64_t v12 = (v11 + v3);
  if (v11 >= 1)
  {
    uint64_t v13 = 0;
    do
    {
      uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001227FC(*(void *)(*(void *)(a1 + 16) + 8 * v13), a2);
      int v15 = (int)v14;
      if (v14 >= 0x80) {
        int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
      }
      else {
        int v16 = 1;
      }
      uint64_t v12 = (v15 + v12 + v16);
      ++v13;
    }
    while (v13 < *(int *)(a1 + 24));
  }
  int v17 = *(void **)(a1 + 8);
  if (v17 && *v17 != v17[1]) {
    uint64_t v12 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v12;
  }
  *(_DWORD *)(a1 + 48) = v12;
  return v12;
}

uint64_t sub_1001234AC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100122BA8((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100123580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100123598(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100123624()
{
  return 1;
}

uint64_t sub_10012362C()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1368;
}

void sub_1001236C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_1001236D4(void *a1)
{
  *a1 = off_100850140;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_100123728(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10012373C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      int v5 = *(const std::string **)(a2 + 16);
      *(_DWORD *)(a1 + 36) |= 1u;
      char v6 = *(std::string **)(a1 + 16);
      if (v6 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      std::string::operator=(v6, v5);
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 36) |= 2u;
      uint64_t v7 = *(void *)(a1 + 24);
      if (!v7) {
        operator new();
      }
      uint64_t v8 = *(void *)(a2 + 24);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_1008AC378 + 24);
      }
      sub_1000DA2F8(v7, v8);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100123878()
{
}

void sub_1001238B0(void *a1)
{
  *a1 = off_100850140;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_100123910(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void *sub_100123910(void *result)
{
  uint64_t v1 = result[2];
  if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  if ((void *)qword_1008AC378 != result)
  {
    uint64_t result = (void *)result[3];
    if (result)
    {
      char v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_1001239C8(void *a1)
{
  sub_1001238B0(a1);

  operator delete();
}

uint64_t sub_100123A00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

uint64_t sub_100123A08(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008AC378;
  if (!qword_1008AC378)
  {
    sub_1000EF4F0(0, a2, a3, a4);
    return qword_1008AC378;
  }
  return result;
}

void sub_100123A38()
{
}

void sub_100123A78()
{
}

uint64_t sub_100123A9C(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 36))
  {
    if (*(unsigned char *)(this + 36))
    {
      uint64_t v2 = *(void *)(this + 16);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 36) & 2) != 0)
    {
      this = *(void *)(this + 24);
      if (this) {
        this = sub_1000DA838(this);
      }
    }
  }
  uint64_t v4 = *(void *)(v1 + 8);
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v3 + 7) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return this;
}

uint64_t sub_100123B3C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      uint64_t v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v9 = TagFallback & 7;
      if (v9 == 2)
      {
        *(_DWORD *)(a1 + 36) |= 1u;
        if (*(_UNKNOWN **)(a1 + 16) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
        if (!result) {
          return result;
        }
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 18)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_18;
        }
      }
      else
      {
LABEL_24:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
      }
        }
    }
    if (TagFallback >> 3 != 2)
    {
      int v9 = TagFallback & 7;
      goto LABEL_24;
    }
    int v9 = TagFallback & 7;
    if (v9 != 2) {
      goto LABEL_24;
    }
LABEL_18:
    *(_DWORD *)(a1 + 36) |= 2u;
    uint64_t v12 = *(void *)(a1 + 24);
    if (!v12) {
      operator new();
    }
    unsigned int v22 = 0;
    uint64_t v13 = (char *)*((void *)this + 1);
    if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22)) {
        return 0;
      }
    }
    else
    {
      unsigned int v22 = *v13;
      *((void *)this + 1) = v13 + 1;
    }
    int v14 = *((_DWORD *)this + 14);
    int v15 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v14 + 1;
    if (v14 >= v15) {
      return 0;
    }
    int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v22);
    if (!sub_1000DA964(v12, this, v17, v18) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
    int v19 = *((_DWORD *)this + 14);
    BOOL v20 = __OFSUB__(v19, 1);
    int v21 = v19 - 1;
    if (v21 < 0 == v20) {
      *((_DWORD *)this + 14) = v21;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

void sub_100123D8C()
{
}

uint64_t sub_100123DB0(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 36);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
    int v6 = *(_DWORD *)(v5 + 36);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(void *)(v5 + 24);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1008AC378 + 24);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  int v10 = *(void **)(v5 + 8);
  int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v8 = v10;
  if (v10 && *v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100123E4C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 9);
  if (v6)
  {
    uint64_t v7 = *((void *)this + 2);
    *(unsigned char *)a2 = 10;
    unsigned int v8 = a2 + 1;
    if (*(char *)(v7 + 23) < 0) {
      int v9 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v7 + 8);
    }
    else {
      int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v7 + 23);
    }
    if (v9 > 0x7F)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, v8, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v9;
      int v10 = v4 + 2;
    }
    int v11 = *(char *)(v7 + 23);
    if (v11 >= 0) {
      uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7;
    }
    else {
      uint64_t v12 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v7;
    }
    if (v11 >= 0) {
      uint64_t v13 = (const void *)*(unsigned __int8 *)(v7 + 23);
    }
    else {
      uint64_t v13 = (const void *)*(unsigned int *)(v7 + 8);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v12, v13, v10, a4);
    int v6 = *((_DWORD *)this + 9);
  }
  if ((v6 & 2) != 0)
  {
    int v14 = (unsigned int *)*((void *)this + 3);
    if (!v14) {
      int v14 = *(unsigned int **)(qword_1008AC378 + 24);
    }
    *(unsigned char *)uint64_t v4 = 18;
    int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14[18];
    if (v15 > 0x7F)
    {
      int v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, (int)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v15;
      int v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
    uint64_t v4 = sub_1000DB1BC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v14, v16, a3);
  }
  int v19 = (void *)*((void *)this + 1);
  int v18 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v17 = v19;
  if (!v19 || *v17 == v17[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v18, v4, a3);
}

uint64_t sub_100123F6C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_21;
  }
  if ((*(unsigned char *)(a1 + 36) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 36) & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
  uint64_t v5 = *(void *)(a1 + 16);
  int v6 = *(unsigned __int8 *)(v5 + 23);
  char v7 = v6;
  uint64_t v8 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
  }
  else {
    unint64_t v9 = v8;
  }
  if (v9 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9, a2);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v8 = *(void *)(v5 + 8);
    int v10 = v11 + 1;
    int v3 = *(_DWORD *)(a1 + 36);
    char v7 = *(unsigned char *)(v5 + 23);
  }
  else
  {
    int v10 = 2;
  }
  if (v7 < 0) {
    int v6 = v8;
  }
  uint64_t v4 = (v10 + v6);
  if ((v3 & 2) != 0)
  {
LABEL_15:
    uint64_t v12 = *(void *)(a1 + 24);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_1008AC378 + 24);
    }
    uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000DB484(v12, a2);
    int v14 = (int)v13;
    if (v13 >= 0x80) {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
    }
    else {
      int v15 = 1;
    }
    uint64_t v4 = (v4 + v14 + v15 + 1);
  }
LABEL_21:
  int v16 = *(void **)(a1 + 8);
  if (v16 && *v16 != v16[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

uint64_t sub_100124070(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10012373C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100124144(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10012415C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001241E8()
{
  return 1;
}

uint64_t sub_1001241F0()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1378;
}

void sub_100124284(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_100124298(void *a1)
{
  *a1 = off_1008501F0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  a1[4] = 0;
  return a1;
}

void sub_1001242EC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100124300(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      uint64_t v5 = *(void *)(a2 + 16);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(void *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(const std::string **)(a2 + 24);
      *(_DWORD *)(a1 + 36) |= 2u;
      char v7 = *(std::string **)(a1 + 24);
      if (v7 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      std::string::operator=(v7, v6);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001243FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100124414(wireless_diagnostics::google::protobuf::Message *a1)
{
  *(void *)a1 = off_1008501F0;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::Message *)((char *)a1 + 8);
  sub_1000801F4((uint64_t)a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message(a1);
}

void sub_100124478(wireless_diagnostics::google::protobuf::Message *a1)
{
  sub_100124414(a1);

  operator delete();
}

uint64_t sub_1001244B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

uint64_t sub_1001244B8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008AC380;
  if (!qword_1008AC380)
  {
    sub_1000EF4F0(0, a2, a3, a4);
    return qword_1008AC380;
  }
  return result;
}

void sub_1001244E8()
{
}

void sub_100124528()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10012454C(uint64_t a1)
{
  char v1 = *(unsigned char *)(a1 + 36);
  if (v1)
  {
    *(void *)(a1 + 16) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(a1 + 24);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
  }
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v4) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1001245A4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      char v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (TagFallback >> 3 == 2)
      {
        int v9 = TagFallback & 7;
        if (v9 == 2)
        {
          int v10 = *(_DWORD *)(a1 + 36);
          goto LABEL_16;
        }
      }
      else
      {
        int v9 = TagFallback & 7;
      }
LABEL_24:
      if (v9 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
    }
      }
    int v9 = TagFallback & 7;
    if (v9 != 1) {
      goto LABEL_24;
    }
    unint64_t v13 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v13) & 1) == 0) {
      return 0;
    }
    *(void *)(a1 + 16) = v13;
    int v10 = *(_DWORD *)(a1 + 36) | 1;
    *(_DWORD *)(a1 + 36) = v10;
    int v11 = (unsigned char *)*((void *)this + 1);
    if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 18)
    {
      *((void *)this + 1) = v11 + 1;
LABEL_16:
      *(_DWORD *)(a1 + 36) = v10 | 2;
      if (*(_UNKNOWN **)(a1 + 24) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
      if (!result) {
        return result;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        break;
      }
    }
  }
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_100124748(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 36);
  if (v5)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    int v5 = *(_DWORD *)(v4 + 36);
  }
  if ((v5 & 2) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  }
  uint64_t v8 = *(void **)(v4 + 8);
  char v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v8;
  if (v8 && *v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

uint64_t sub_1001247D4(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  int v5 = *((_DWORD *)this + 9);
  if (v5)
  {
    uint64_t v6 = *((void *)this + 2);
    *(unsigned char *)a2 = 9;
    *(void *)(a2 + 1) = v6;
    a2 += 9;
    int v5 = *((_DWORD *)this + 9);
  }
  if ((v5 & 2) != 0)
  {
    uint64_t v7 = *((void *)this + 3);
    *(unsigned char *)a2 = 18;
    if (*(char *)(v7 + 23) < 0) {
      uint64_t v8 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v7 + 8);
    }
    else {
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v7 + 23);
    }
    if (v8 > 0x7F)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)a2 + 1, a3);
    }
    else
    {
      *(unsigned char *)(a2 + 1) = (_BYTE)v8;
      int v9 = a2 + 2;
    }
    int v10 = *(char *)(v7 + 23);
    if (v10 >= 0) {
      int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7;
    }
    else {
      int v11 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v7;
    }
    if (v10 >= 0) {
      uint64_t v12 = (const void *)*(unsigned __int8 *)(v7 + 23);
    }
    else {
      uint64_t v12 = (const void *)*(unsigned int *)(v7 + 8);
    }
    a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v11, v12, v9, a4);
  }
  int v15 = (void *)*((void *)this + 1);
  int v14 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  unint64_t v13 = v15;
  if (!v15 || *v13 == v13[1]) {
    return a2;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v14, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_1001248F0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 36);
  if (*(unsigned char *)(a1 + 36))
  {
    uint64_t v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0)
    {
      uint64_t v5 = *(void *)(a1 + 24);
      int v6 = *(unsigned __int8 *)(v5 + 23);
      char v7 = v6;
      uint64_t v8 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
      }
      else {
        unint64_t v9 = v8;
      }
      if (v9 >= 0x80)
      {
        int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9, a2);
        int v6 = *(unsigned __int8 *)(v5 + 23);
        uint64_t v8 = *(void *)(v5 + 8);
        char v7 = *(unsigned char *)(v5 + 23);
      }
      else
      {
        int v10 = 1;
      }
      if (v7 < 0) {
        int v6 = v8;
      }
      uint64_t v4 = (v4 + v10 + v6 + 1);
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  int v11 = *(void **)(a1 + 8);
  if (v11 && *v11 != v11[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

uint64_t sub_1001249B0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100124300((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100124A84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100124A9C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100124B28()
{
  return 1;
}

uint64_t sub_100124B30()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1388;
}

void sub_100124BC4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100124BD8(uint64_t a1)
{
  *(void *)a1 = off_1008502A0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(_DWORD *)(a1 + 112) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(void *)(a1 + 104) = 0;
  return a1;
}

void sub_100124C48(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100124C5C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  int v4 = *(_DWORD *)(a2 + 112);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v8 = *(const std::string **)(a2 + 16);
    *(_DWORD *)(a1 + 112) |= 1u;
    unint64_t v9 = *(std::string **)(a1 + 16);
    if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v9, v8);
    int v4 = *(_DWORD *)(a2 + 112);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_25;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v10 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 112) |= 2u;
  *(void *)(a1 + 24) = v10;
  int v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t v11 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 112) |= 4u;
  *(void *)(a1 + 32) = v11;
  int v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v12 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 112) |= 8u;
  *(void *)(a1 + 40) = v12;
  int v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_28:
    uint64_t v14 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 112) |= 0x20u;
    *(void *)(a1 + 56) = v14;
    int v4 = *(_DWORD *)(a2 + 112);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_27:
  uint64_t v13 = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 112) |= 0x10u;
  *(void *)(a1 + 48) = v13;
  int v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_29:
  int v15 = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 112) |= 0x40u;
  *(_DWORD *)(a1 + 64) = v15;
  int v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *(_DWORD *)(a2 + 68);
    *(_DWORD *)(a1 + 112) |= 0x80u;
    *(_DWORD *)(a1 + 68) = v5;
    int v4 = *(_DWORD *)(a2 + 112);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v4 & 0x100) != 0)
  {
    uint64_t v16 = *(void *)(a2 + 72);
    *(_DWORD *)(a1 + 112) |= 0x100u;
    *(void *)(a1 + 72) = v16;
    int v4 = *(_DWORD *)(a2 + 112);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_33;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  int v17 = *(_DWORD *)(a2 + 104);
  *(_DWORD *)(a1 + 112) |= 0x200u;
  *(_DWORD *)(a1 + 104) = v17;
  int v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
LABEL_34:
    uint64_t v19 = *(void *)(a2 + 88);
    *(_DWORD *)(a1 + 112) |= 0x800u;
    *(void *)(a1 + 88) = v19;
    if ((*(_DWORD *)(a2 + 112) & 0x1000) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_19;
  }
LABEL_33:
  uint64_t v18 = *(void *)(a2 + 80);
  *(_DWORD *)(a1 + 112) |= 0x400u;
  *(void *)(a1 + 80) = v18;
  int v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 0x800) != 0) {
    goto LABEL_34;
  }
LABEL_18:
  if ((v4 & 0x1000) != 0)
  {
LABEL_19:
    uint64_t v6 = *(void *)(a2 + 96);
    *(_DWORD *)(a1 + 112) |= 0x1000u;
    *(void *)(a1 + 96) = v6;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100124ECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100124EE4(wireless_diagnostics::google::protobuf::Message *a1)
{
  *(void *)a1 = off_1008502A0;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::Message *)((char *)a1 + 8);
  sub_100098658((uint64_t)a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message(a1);
}

void sub_100124F48(wireless_diagnostics::google::protobuf::Message *a1)
{
  sub_100124EE4(a1);

  operator delete();
}

uint64_t sub_100124F80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 108) = a2;
  return result;
}

uint64_t sub_100124F88(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008AC388;
  if (!qword_1008AC388)
  {
    sub_1000EF4F0(0, a2, a3, a4);
    return qword_1008AC388;
  }
  return result;
}

void sub_100124FB8()
{
}

void sub_100124FF8()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10012501C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 112);
  if ((_BYTE)v1)
  {
    if (v1)
    {
      uint64_t v2 = *(void *)(a1 + 16);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    int v1 = *(_DWORD *)(a1 + 112);
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_DWORD *)(a1 + 104) = 0;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 26) = 0;
  if (v4) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1001250A0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (unint64_t *)(a1 + 24);
  char v7 = (unsigned int *)(a1 + 64);
  uint64_t v8 = (unsigned int *)(a1 + 68);
  unint64_t v9 = (unsigned int *)(a1 + 104);
  unsigned int v10 = a1 + 8;
  while (2)
  {
    uint64_t v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v11;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v11 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v13 = TagFallback & 7;
        if (v13 != 2) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 112) |= 1u;
        if (*(_UNKNOWN **)(a1 + 16) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
        if (result)
        {
          uint64_t v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
          if ((unint64_t)v16 < v15 && *v16 == 16)
          {
            int v17 = v16 + 1;
            *((void *)this + 1) = v17;
            goto LABEL_18;
          }
          continue;
        }
        return result;
      case 2u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
LABEL_18:
        if ((unint64_t)v17 >= v15 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!result) {
            return result;
          }
          uint64_t v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v6 = *v17;
          uint64_t v18 = v17 + 1;
          *((void *)this + 1) = v18;
        }
        *(_DWORD *)(a1 + 112) |= 2u;
        if ((unint64_t)v18 < v15 && *v18 == 25)
        {
          *((void *)this + 1) = v18 + 1;
          goto LABEL_50;
        }
        continue;
      case 3u:
        int v13 = TagFallback & 7;
        if (v13 != 1) {
          goto LABEL_42;
        }
LABEL_50:
        unint64_t v34 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v34) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 32) = v34;
        *(_DWORD *)(a1 + 112) |= 4u;
        int v24 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 != 33) {
          continue;
        }
        *((void *)this + 1) = v24 + 1;
LABEL_54:
        unint64_t v34 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v34) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 40) = v34;
        *(_DWORD *)(a1 + 112) |= 8u;
        unsigned int v25 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 != 41) {
          continue;
        }
        *((void *)this + 1) = v25 + 1;
LABEL_58:
        unint64_t v34 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v34) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 48) = v34;
        *(_DWORD *)(a1 + 112) |= 0x10u;
        int v26 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v26 >= *((void *)this + 2) || *v26 != 49) {
          continue;
        }
        *((void *)this + 1) = v26 + 1;
LABEL_62:
        unint64_t v34 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v34) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 56) = v34;
        *(_DWORD *)(a1 + 112) |= 0x20u;
        unsigned int v27 = (unsigned char *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        if ((unint64_t)v27 >= v19 || *v27 != 56) {
          continue;
        }
        BOOL v20 = v27 + 1;
        *((void *)this + 1) = v20;
LABEL_66:
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          uint64_t v28 = (unsigned char *)*((void *)this + 1);
          unint64_t v19 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v20;
          uint64_t v28 = v20 + 1;
          *((void *)this + 1) = v28;
        }
        *(_DWORD *)(a1 + 112) |= 0x40u;
        if ((unint64_t)v28 >= v19 || *v28 != 64) {
          continue;
        }
        int v21 = v28 + 1;
        *((void *)this + 1) = v21;
LABEL_74:
        if ((unint64_t)v21 >= v19 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          unsigned int v29 = (unsigned char *)*((void *)this + 1);
          unint64_t v19 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v8 = *v21;
          unsigned int v29 = v21 + 1;
          *((void *)this + 1) = v29;
        }
        *(_DWORD *)(a1 + 112) |= 0x80u;
        if ((unint64_t)v29 >= v19 || *v29 != 73) {
          continue;
        }
        *((void *)this + 1) = v29 + 1;
LABEL_82:
        unint64_t v34 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v34) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 72) = v34;
        *(_DWORD *)(a1 + 112) |= 0x100u;
        unint64_t v30 = (unsigned char *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        if ((unint64_t)v30 >= v22 || *v30 != 80) {
          continue;
        }
        BOOL v23 = v30 + 1;
        *((void *)this + 1) = v23;
LABEL_86:
        if ((unint64_t)v23 >= v22 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          uint64_t v31 = (unsigned char *)*((void *)this + 1);
          unint64_t v22 = *((void *)this + 2);
        }
        else
        {
          *unint64_t v9 = *v23;
          uint64_t v31 = v23 + 1;
          *((void *)this + 1) = v31;
        }
        *(_DWORD *)(a1 + 112) |= 0x200u;
        if ((unint64_t)v31 >= v22 || *v31 != 89) {
          continue;
        }
        *((void *)this + 1) = v31 + 1;
LABEL_94:
        unint64_t v34 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v34) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 80) = v34;
        *(_DWORD *)(a1 + 112) |= 0x400u;
        uint64_t v32 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 != 97) {
          continue;
        }
        *((void *)this + 1) = v32 + 1;
LABEL_98:
        unint64_t v34 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v34) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 88) = v34;
        *(_DWORD *)(a1 + 112) |= 0x800u;
        unint64_t v33 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v33 >= *((void *)this + 2) || *v33 != 105) {
          continue;
        }
        *((void *)this + 1) = v33 + 1;
LABEL_102:
        unint64_t v34 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v34))
        {
          *(void *)(a1 + 96) = v34;
          *(_DWORD *)(a1 + 112) |= 0x1000u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 4u:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_54;
        }
        goto LABEL_42;
      case 5u:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_58;
        }
        goto LABEL_42;
      case 6u:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_62;
        }
        goto LABEL_42;
      case 7u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        BOOL v20 = (char *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        goto LABEL_66;
      case 8u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        int v21 = (char *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        goto LABEL_74;
      case 9u:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_82;
        }
        goto LABEL_42;
      case 0xAu:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        BOOL v23 = (char *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        goto LABEL_86;
      case 0xBu:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_94;
        }
        goto LABEL_42;
      case 0xCu:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_98;
        }
        goto LABEL_42;
      case 0xDu:
        int v13 = TagFallback & 7;
        if (v13 != 1) {
          goto LABEL_42;
        }
        goto LABEL_102;
      default:
        int v13 = TagFallback & 7;
LABEL_42:
        if (v13 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v10, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1001256DC(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 112);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
    int v6 = *(_DWORD *)(v5 + 112);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_23;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 24), (unint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 64), a2, a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 68), a2, a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(double *)(v5 + 72), a3);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_DWORD *)(v5 + 104), a2, a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
LABEL_32:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (int)a2, *(double *)(v5 + 88), a3);
    if ((*(_DWORD *)(v5 + 112) & 0x1000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_31:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (int)a2, *(double *)(v5 + 80), a3);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x800) != 0) {
    goto LABEL_32;
  }
LABEL_13:
  if ((v6 & 0x1000) != 0) {
LABEL_14:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (int)a2, *(double *)(v5 + 96), a3);
LABEL_15:
  unint64_t v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  char v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001258A4(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 28);
  if (v6)
  {
    uint64_t v7 = *((void *)this + 2);
    *(unsigned char *)a2 = 10;
    unsigned int v8 = a2 + 1;
    if (*(char *)(v7 + 23) < 0) {
      unint64_t v9 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v7 + 8);
    }
    else {
      unint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v7 + 23);
    }
    if (v9 > 0x7F)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, v8, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v9;
      int v10 = v4 + 2;
    }
    int v11 = *(char *)(v7 + 23);
    if (v11 >= 0) {
      uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7;
    }
    else {
      uint64_t v12 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v7;
    }
    if (v11 >= 0) {
      int v13 = (const void *)*(unsigned __int8 *)(v7 + 23);
    }
    else {
      int v13 = (const void *)*(unsigned int *)(v7 + 8);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v12, v13, v10, a4);
    int v6 = *((_DWORD *)this + 28);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_23;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 3);
  *(unsigned char *)uint64_t v4 = 16;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v14, (unint64_t)v4 + 1, a3);
  int v6 = *((_DWORD *)this + 28);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v15 = *((void *)this + 4);
  *(unsigned char *)uint64_t v4 = 25;
  *(void *)((char *)v4 + 1) = v15;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v6 = *((_DWORD *)this + 28);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t v16 = *((void *)this + 5);
  *(unsigned char *)uint64_t v4 = 33;
  *(void *)((char *)v4 + 1) = v16;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v6 = *((_DWORD *)this + 28);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t v17 = *((void *)this + 6);
  *(unsigned char *)uint64_t v4 = 41;
  *(void *)((char *)v4 + 1) = v17;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v6 = *((_DWORD *)this + 28);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_30;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v18 = *((void *)this + 7);
  *(unsigned char *)uint64_t v4 = 49;
  *(void *)((char *)v4 + 1) = v18;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  if ((*((_DWORD *)this + 28) & 0x40) == 0) {
    goto LABEL_30;
  }
LABEL_27:
  unint64_t v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  *(unsigned char *)uint64_t v4 = 56;
  if (v19 > 0x7F)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v19, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v19;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
LABEL_30:
  if ((*((unsigned char *)this + 112) & 0x80) != 0)
  {
    BOOL v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
    *(unsigned char *)uint64_t v4 = 64;
    if (v20 > 0x7F)
    {
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v20, (int)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v20;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
  }
  int v21 = *((_DWORD *)this + 28);
  if ((v21 & 0x100) != 0)
  {
    uint64_t v22 = *((void *)this + 9);
    *(unsigned char *)uint64_t v4 = 73;
    *(void *)((char *)v4 + 1) = v22;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
    int v21 = *((_DWORD *)this + 28);
  }
  if ((v21 & 0x200) != 0)
  {
    BOOL v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 26);
    *(unsigned char *)uint64_t v4 = 80;
    if (v23 > 0x7F)
    {
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v23, (int)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v23;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
  }
  int v24 = *((_DWORD *)this + 28);
  if ((v24 & 0x400) == 0)
  {
    if ((v24 & 0x800) == 0) {
      goto LABEL_42;
    }
LABEL_51:
    uint64_t v31 = *((void *)this + 11);
    *(unsigned char *)uint64_t v4 = 97;
    *(void *)((char *)v4 + 1) = v31;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
    if ((*((_DWORD *)this + 28) & 0x1000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_43;
  }
  uint64_t v30 = *((void *)this + 10);
  *(unsigned char *)uint64_t v4 = 89;
  *(void *)((char *)v4 + 1) = v30;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v24 = *((_DWORD *)this + 28);
  if ((v24 & 0x800) != 0) {
    goto LABEL_51;
  }
LABEL_42:
  if ((v24 & 0x1000) != 0)
  {
LABEL_43:
    uint64_t v25 = *((void *)this + 12);
    *(unsigned char *)uint64_t v4 = 105;
    *(void *)((char *)v4 + 1) = v25;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  }
LABEL_44:
  uint64_t v28 = (void *)*((void *)this + 1);
  unsigned int v27 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v26 = v28;
  if (!v28 || *v26 == v26[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v27, v4, a3);
}

uint64_t sub_100125CF4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 112);
  if (!(_BYTE)v3)
  {
    uint64_t v5 = 0;
    goto LABEL_35;
  }
  if (v3)
  {
    uint64_t v6 = *(void *)(a1 + 16);
    int v7 = *(unsigned __int8 *)(v6 + 23);
    char v8 = v7;
    uint64_t v9 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      unint64_t v10 = *(unsigned __int8 *)(v6 + 23);
    }
    else {
      unint64_t v10 = v9;
    }
    if (v10 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10, a2);
      int v7 = *(unsigned __int8 *)(v6 + 23);
      uint64_t v9 = *(void *)(v6 + 8);
      int v11 = v12 + 1;
      int v3 = *(_DWORD *)(a1 + 112);
      char v8 = *(unsigned char *)(v6 + 23);
    }
    else
    {
      int v11 = 2;
    }
    if (v8 < 0) {
      int v7 = v9;
    }
    unsigned int v4 = v11 + v7;
    if ((v3 & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    unsigned int v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_16;
    }
  }
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 24), (unint64_t)a2)+ 1;
  int v3 = *(_DWORD *)(a1 + 112);
LABEL_16:
  unsigned int v13 = v4 + 9;
  if ((v3 & 4) == 0) {
    unsigned int v13 = v4;
  }
  if ((v3 & 8) != 0) {
    v13 += 9;
  }
  if ((v3 & 0x10) != 0) {
    v13 += 9;
  }
  if ((v3 & 0x20) != 0) {
    uint64_t v5 = v13 + 9;
  }
  else {
    uint64_t v5 = v13;
  }
  if ((v3 & 0x40) != 0)
  {
    uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
    if (v14 >= 0x80)
    {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2)
          + 1;
      int v3 = *(_DWORD *)(a1 + 112);
    }
    else
    {
      int v15 = 2;
    }
    uint64_t v5 = (v15 + v5);
  }
  if ((v3 & 0x80) != 0)
  {
    uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 68);
    if (v16 >= 0x80)
    {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2)
          + 1;
      int v3 = *(_DWORD *)(a1 + 112);
    }
    else
    {
      int v17 = 2;
    }
    uint64_t v5 = (v17 + v5);
  }
LABEL_35:
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0) {
      LODWORD(v5) = v5 + 9;
    }
    if ((v3 & 0x200) != 0)
    {
      uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 104);
      if (v18 >= 0x80)
      {
        int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2)
            + 1;
        int v3 = *(_DWORD *)(a1 + 112);
      }
      else
      {
        int v19 = 2;
      }
      LODWORD(v5) = v19 + v5;
    }
    unsigned int v20 = v5 + 9;
    if ((v3 & 0x400) == 0) {
      unsigned int v20 = v5;
    }
    if ((v3 & 0x800) != 0) {
      v20 += 9;
    }
    if ((v3 & 0x1000) != 0) {
      uint64_t v5 = v20 + 9;
    }
    else {
      uint64_t v5 = v20;
    }
  }
  int v21 = *(void **)(a1 + 8);
  if (v21 && *v21 != v21[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 108) = v5;
  return v5;
}

uint64_t sub_100125EA8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100124C5C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100125F7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100125F94(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100126020()
{
  return 1;
}

uint64_t sub_100126028()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1398;
}

void sub_1001260BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_1001260D0(void *a1)
{
  *a1 = off_100850350;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  return a1;
}

void sub_100126118(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10012612C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 28);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 28))
  {
    unsigned int v5 = *(_DWORD *)(a2 + 16);
    if (v5 >= 3) {
      sub_100410688();
    }
    *(_DWORD *)(a1 + 28) |= 1u;
    *(_DWORD *)(a1 + 16) = v5;
    int v4 = *(_DWORD *)(a2 + 28);
  }
  if ((v4 & 2) != 0)
  {
    char v8 = *(unsigned char *)(a2 + 20);
    *(_DWORD *)(a1 + 28) |= 2u;
    *(unsigned char *)(a1 + 20) = v8;
    int v4 = *(_DWORD *)(a2 + 28);
    if ((v4 & 4) == 0)
    {
LABEL_9:
      if ((v4 & 8) == 0) {
        goto LABEL_10;
      }
LABEL_15:
      char v10 = *(unsigned char *)(a2 + 22);
      *(_DWORD *)(a1 + 28) |= 8u;
      *(unsigned char *)(a1 + 22) = v10;
      if ((*(_DWORD *)(a2 + 28) & 0x10) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
      goto LABEL_11;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_9;
  }
  char v9 = *(unsigned char *)(a2 + 21);
  *(_DWORD *)(a1 + 28) |= 4u;
  *(unsigned char *)(a1 + 21) = v9;
  int v4 = *(_DWORD *)(a2 + 28);
  if ((v4 & 8) != 0) {
    goto LABEL_15;
  }
LABEL_10:
  if ((v4 & 0x10) != 0)
  {
LABEL_11:
    char v6 = *(unsigned char *)(a2 + 23);
    *(_DWORD *)(a1 + 28) |= 0x10u;
    *(unsigned char *)(a1 + 23) = v6;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100126254(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10012626C(uint64_t a1)
{
  *(void *)a1 = off_100850350;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001262C0(uint64_t a1)
{
  *(void *)a1 = off_100850350;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100126328(uint64_t result, int a2)
{
  *(_DWORD *)(result + 24) = a2;
  return result;
}

void sub_100126330()
{
}

void sub_100126370()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100126394(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 28)) {
    *(void *)(a1 + 16) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 5) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1001263B4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  char v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (2)
  {
    int v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        unsigned int v27 = 0;
        char v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 < *((void *)this + 2) && (*v10 & 0x80000000) == 0)
        {
          unsigned int v11 = *v10;
          *((void *)this + 1) = v10 + 1;
          goto LABEL_26;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27);
        if (result)
        {
          unsigned int v11 = v27;
LABEL_26:
          if (v11 > 2)
          {
            wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 1, (int)v11);
          }
          else
          {
            *(_DWORD *)(a1 + 28) |= 1u;
            *(_DWORD *)(a1 + 16) = v11;
          }
          int v17 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v17 < v12 && *v17 == 16)
          {
            unsigned int v13 = v17 + 1;
            *((void *)this + 1) = v13;
            goto LABEL_32;
          }
          continue;
        }
        break;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        unsigned int v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
LABEL_32:
        unsigned int v27 = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27);
          if (!result) {
            return result;
          }
          unsigned int v18 = v27;
          int v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int v18 = *v13;
          int v19 = v13 + 1;
          *((void *)this + 1) = v19;
        }
        *(unsigned char *)(a1 + 20) = v18 != 0;
        *(_DWORD *)(a1 + 28) |= 2u;
        if ((unint64_t)v19 >= v12 || *v19 != 24) {
          continue;
        }
        uint64_t v14 = v19 + 1;
        *((void *)this + 1) = v14;
LABEL_40:
        unsigned int v27 = 0;
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27);
          if (!result) {
            return result;
          }
          unsigned int v20 = v27;
          int v21 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int v20 = *v14;
          int v21 = v14 + 1;
          *((void *)this + 1) = v21;
        }
        *(unsigned char *)(a1 + 21) = v20 != 0;
        *(_DWORD *)(a1 + 28) |= 4u;
        if ((unint64_t)v21 >= v12 || *v21 != 32) {
          continue;
        }
        int v15 = v21 + 1;
        *((void *)this + 1) = v15;
LABEL_48:
        unsigned int v27 = 0;
        if ((unint64_t)v15 >= v12 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27);
          if (!result) {
            return result;
          }
          unsigned int v22 = v27;
          BOOL v23 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int v22 = *v15;
          BOOL v23 = v15 + 1;
          *((void *)this + 1) = v23;
        }
        *(unsigned char *)(a1 + 22) = v22 != 0;
        *(_DWORD *)(a1 + 28) |= 8u;
        if ((unint64_t)v23 >= v12 || *v23 != 40) {
          continue;
        }
        uint64_t v16 = v23 + 1;
        *((void *)this + 1) = v16;
LABEL_56:
        unsigned int v27 = 0;
        if ((unint64_t)v16 >= v12 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27);
          if (!result) {
            return result;
          }
          unsigned int v24 = v27;
          uint64_t v25 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int v24 = *v16;
          uint64_t v25 = (unsigned __int8 *)(v16 + 1);
          *((void *)this + 1) = v25;
        }
        *(unsigned char *)(a1 + 23) = v24 != 0;
        *(_DWORD *)(a1 + 28) |= 0x10u;
        if (v25 != (unsigned __int8 *)v12 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_40;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_48;
      case 5u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        uint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_56;
      default:
        int v9 = TagFallback & 7;
LABEL_20:
        if (v9 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_100126744(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 28);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 16), (int)a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 20), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_16:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 22), (BOOL)a2, a4);
    if ((*(_DWORD *)(v5 + 28) & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 21), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 8) != 0) {
    goto LABEL_16;
  }
LABEL_5:
  if ((v6 & 0x10) != 0) {
LABEL_6:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 23), (BOOL)a2, a4);
LABEL_7:
  int v9 = *(void **)(v5 + 8);
  char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10012682C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  if (*((unsigned char *)this + 28))
  {
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 4);
    *(unsigned char *)a2 = 8;
    if ((v4 & 0x80000000) != 0)
    {
      uint64_t v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v4, (unint64_t)a2 + 1, a3);
    }
    else
    {
      if (v4 <= 0x7F)
      {
        *((unsigned char *)a2 + 1) = (_BYTE)v4;
        a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
        goto LABEL_8;
      }
      uint64_t v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v4, (int)a2 + 1, a3);
    }
    a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)v5;
  }
LABEL_8:
  int v6 = *((_DWORD *)this + 7);
  if ((v6 & 2) != 0)
  {
    char v12 = *((unsigned char *)this + 20);
    *(unsigned char *)a2 = 16;
    *((unsigned char *)a2 + 1) = v12;
    a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    int v6 = *((_DWORD *)this + 7);
    if ((v6 & 4) == 0)
    {
LABEL_10:
      if ((v6 & 8) == 0) {
        goto LABEL_11;
      }
LABEL_21:
      char v14 = *((unsigned char *)this + 22);
      *(unsigned char *)a2 = 32;
      *((unsigned char *)a2 + 1) = v14;
      a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      if ((*((_DWORD *)this + 7) & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_10;
  }
  char v13 = *((unsigned char *)this + 21);
  *(unsigned char *)a2 = 24;
  *((unsigned char *)a2 + 1) = v13;
  a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
  int v6 = *((_DWORD *)this + 7);
  if ((v6 & 8) != 0) {
    goto LABEL_21;
  }
LABEL_11:
  if ((v6 & 0x10) != 0)
  {
LABEL_12:
    char v7 = *((unsigned char *)this + 23);
    *(unsigned char *)a2 = 40;
    *((unsigned char *)a2 + 1) = v7;
    a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
  }
LABEL_13:
  char v10 = (void *)*((void *)this + 1);
  int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  char v8 = v10;
  if (!v10 || *v8 == v8[1]) {
    return a2;
  }

  return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v9, a2, a3);
}

uint64_t sub_10012694C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 28);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 28))
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if ((v6 & 0x80000000) != 0)
      {
        unsigned int v4 = 11;
      }
      else if (v6 >= 0x80)
      {
        unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2)
           + 1;
        int v3 = *(_DWORD *)(a1 + 28);
      }
      else
      {
        unsigned int v4 = 2;
      }
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 2;
    }
    if ((v3 & 4) != 0) {
      v4 += 2;
    }
    if ((v3 & 8) != 0) {
      v4 += 2;
    }
    if ((v3 & 0x10) != 0) {
      uint64_t v5 = v4 + 2;
    }
    else {
      uint64_t v5 = v4;
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  char v7 = *(void **)(a1 + 8);
  if (v7 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 24) = v5;
  return v5;
}

uint64_t sub_100126A0C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10012612C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100126AE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100126AF8(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100126B84()
{
  return 1;
}

uint64_t sub_100126B8C()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A13A8;
}

void sub_100126C20(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100126C34(uint64_t a1)
{
  *(void *)a1 = off_100850400;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(_DWORD *)(a1 + 100) = 0;
  *(_DWORD *)(a1 + 104) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 84) = 0u;
  return a1;
}

void sub_100126CA0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100126CB4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v23);
  }
  int v4 = *(_DWORD *)(a2 + 104);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v5 = *(const std::string **)(a2 + 16);
      *(_DWORD *)(a1 + 104) |= 1u;
      int v6 = *(std::string **)(a1 + 16);
      if (v6 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      std::string::operator=(v6, v5);
      int v4 = *(_DWORD *)(a2 + 104);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 104) |= 2u;
      uint64_t v7 = *(void *)(a1 + 24);
      if (!v7) {
        operator new();
      }
      uint64_t v8 = *(void *)(a2 + 24);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_1008AC398 + 24);
      }
      sub_10012612C(v7, v8);
      int v4 = *(_DWORD *)(a2 + 104);
    }
    if ((v4 & 4) != 0)
    {
      *(_DWORD *)(a1 + 104) |= 4u;
      uint64_t v9 = *(void *)(a1 + 32);
      if (!v9) {
        operator new();
      }
      uint64_t v10 = *(void *)(a2 + 32);
      if (!v10) {
        uint64_t v10 = *(void *)(qword_1008AC398 + 32);
      }
      sub_100124C5C(v9, v10);
      int v4 = *(_DWORD *)(a2 + 104);
    }
    if ((v4 & 8) != 0)
    {
      uint64_t v20 = *(void *)(a2 + 40);
      *(_DWORD *)(a1 + 104) |= 8u;
      *(void *)(a1 + 40) = v20;
      int v4 = *(_DWORD *)(a2 + 104);
      if ((v4 & 0x10) == 0)
      {
LABEL_22:
        if ((v4 & 0x20) == 0) {
          goto LABEL_23;
        }
        goto LABEL_49;
      }
    }
    else if ((v4 & 0x10) == 0)
    {
      goto LABEL_22;
    }
    uint64_t v21 = *(void *)(a2 + 48);
    *(_DWORD *)(a1 + 104) |= 0x10u;
    *(void *)(a1 + 48) = v21;
    int v4 = *(_DWORD *)(a2 + 104);
    if ((v4 & 0x20) == 0)
    {
LABEL_23:
      if ((v4 & 0x40) == 0) {
        goto LABEL_25;
      }
      goto LABEL_24;
    }
LABEL_49:
    unsigned int v22 = *(_DWORD *)(a2 + 72);
    if (v22 >= 6) {
      sub_10041070C();
    }
    *(_DWORD *)(a1 + 104) |= 0x20u;
    *(_DWORD *)(a1 + 72) = v22;
    int v4 = *(_DWORD *)(a2 + 104);
    if ((v4 & 0x40) == 0) {
      goto LABEL_25;
    }
LABEL_24:
    uint64_t v11 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 104) |= 0x40u;
    *(void *)(a1 + 56) = v11;
    int v4 = *(_DWORD *)(a2 + 104);
LABEL_25:
    if ((v4 & 0x80) != 0)
    {
      *(_DWORD *)(a1 + 104) |= 0x80u;
      uint64_t v12 = *(void *)(a1 + 64);
      if (!v12) {
        operator new();
      }
      uint64_t v13 = *(void *)(a2 + 64);
      if (!v13) {
        uint64_t v13 = *(void *)(qword_1008AC398 + 64);
      }
      sub_10005C8E4(v12, v13);
      int v4 = *(_DWORD *)(a2 + 104);
    }
  }
  if ((v4 & 0xFF00) != 0)
  {
    if ((v4 & 0x100) != 0)
    {
      *(_DWORD *)(a1 + 104) |= 0x100u;
      uint64_t v14 = *(void *)(a1 + 80);
      if (!v14) {
        operator new();
      }
      uint64_t v15 = *(void *)(a2 + 80);
      if (!v15) {
        uint64_t v15 = *(void *)(qword_1008AC398 + 80);
      }
      sub_10005C8E4(v14, v15);
      int v4 = *(_DWORD *)(a2 + 104);
    }
    if ((v4 & 0x200) != 0)
    {
      uint64_t v16 = *(void *)(a2 + 88);
      *(_DWORD *)(a1 + 104) |= 0x200u;
      *(void *)(a1 + 88) = v16;
      int v4 = *(_DWORD *)(a2 + 104);
    }
    if ((v4 & 0x400) != 0)
    {
      unsigned int v17 = *(_DWORD *)(a2 + 76);
      if (v17 >= 9) {
        sub_1004106E0();
      }
      *(_DWORD *)(a1 + 104) |= 0x400u;
      *(_DWORD *)(a1 + 76) = v17;
      int v4 = *(_DWORD *)(a2 + 104);
    }
    if ((v4 & 0x800) != 0)
    {
      unsigned int v18 = *(_DWORD *)(a2 + 96);
      if (v18 >= 4) {
        sub_1004106B4();
      }
      *(_DWORD *)(a1 + 104) |= 0x800u;
      *(_DWORD *)(a1 + 96) = v18;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100127008()
{
}

void sub_10012706C(void *a1)
{
  *a1 = off_100850400;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_1001270CC(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void *sub_1001270CC(void *result)
{
  int v1 = result;
  uint64_t v2 = result[2];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  if ((void *)qword_1008AC398 != result)
  {
    uint64_t v4 = result[3];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[4];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = v1[8];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t result = (void *)v1[10];
    if (result)
    {
      uint64_t v7 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v7();
    }
  }
  return result;
}

void sub_100127208(void *a1)
{
  sub_10012706C(a1);

  operator delete();
}

uint64_t sub_100127240(uint64_t result, int a2)
{
  *(_DWORD *)(result + 100) = a2;
  return result;
}

uint64_t sub_100127248(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008AC398;
  if (!qword_1008AC398)
  {
    sub_1000EF4F0(0, a2, a3, a4);
    return qword_1008AC398;
  }
  return result;
}

void sub_100127278()
{
}

void sub_1001272B8()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001272DC(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  int v1 = this;
  int v2 = *((_DWORD *)this + 26);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t v3 = *((void *)this + 2);
      if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 104) & 2) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)this + 3);
      if (this)
      {
        if (*((unsigned char *)this + 28)) {
          *((void *)this + 2) = 0;
        }
        uint64_t v4 = *((void *)this + 1);
        this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)this + 8);
        *((_DWORD *)this + 5) = 0;
        if (v4) {
          this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(this);
        }
      }
    }
    int v2 = *((_DWORD *)v1 + 26);
    if ((v2 & 4) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)v1 + 4);
      if (this)
      {
        this = sub_10012501C((uint64_t)this);
        int v2 = *((_DWORD *)v1 + 26);
      }
    }
    *((_DWORD *)v1 + 18) = 0;
    *((void *)v1 + 6) = 0;
    *((void *)v1 + 7) = 0;
    *((void *)v1 + 5) = 0;
    if ((v2 & 0x80) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)v1 + 8);
      if (this)
      {
        this = sub_10005CB08((uint64_t)this);
        int v2 = *((_DWORD *)v1 + 26);
      }
    }
  }
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)v1 + 10);
      if (this) {
        this = sub_10005CB08((uint64_t)this);
      }
    }
    *((void *)v1 + 11) = 0;
    *((_DWORD *)v1 + 19) = 0;
    *((_DWORD *)v1 + 24) = 0;
  }
  uint64_t v6 = *((void *)v1 + 1);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v5 + 24) = 0;
  if (v6)
  {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
  }
  return this;
}

uint64_t sub_1001273F4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 < *((void *)this + 2) && (*v7 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 104) |= 1u;
        if (*(_UNKNOWN **)(a1 + 16) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
        if (result)
        {
          uint64_t v11 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 18)
          {
            *((void *)this + 1) = v11 + 1;
            goto LABEL_17;
          }
          continue;
        }
        return result;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_41;
        }
LABEL_17:
        *(_DWORD *)(a1 + 104) |= 2u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (!v12) {
          operator new();
        }
        v69[0] = 0;
        uint64_t v13 = (char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69))return 0; {
        }
          }
        else
        {
          v69[0] = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        int v21 = *((_DWORD *)this + 14);
        int v22 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v21 + 1;
        if (v21 >= v22) {
          return 0;
        }
        int v23 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v69[0]);
        if (!sub_1001263B4(v12, this, v24, v25) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v23);
        int v26 = *((_DWORD *)this + 14);
        BOOL v27 = __OFSUB__(v26, 1);
        int v28 = v26 - 1;
        if (v28 < 0 == v27) {
          *((_DWORD *)this + 14) = v28;
        }
        unsigned int v29 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v29 >= *((void *)this + 2) || *v29 != 26) {
          continue;
        }
        *((void *)this + 1) = v29 + 1;
        goto LABEL_54;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_41;
        }
LABEL_54:
        *(_DWORD *)(a1 + 104) |= 4u;
        uint64_t v30 = *(void *)(a1 + 32);
        if (!v30) {
          operator new();
        }
        v69[0] = 0;
        uint64_t v31 = (char *)*((void *)this + 1);
        if ((unint64_t)v31 >= *((void *)this + 2) || *v31 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69))return 0; {
        }
          }
        else
        {
          v69[0] = *v31;
          *((void *)this + 1) = v31 + 1;
        }
        int v32 = *((_DWORD *)this + 14);
        int v33 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v32 + 1;
        if (v32 >= v33) {
          return 0;
        }
        int v34 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v69[0]);
        if (!sub_1001250A0(v30, this, v35, v36) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v34);
        int v37 = *((_DWORD *)this + 14);
        BOOL v27 = __OFSUB__(v37, 1);
        int v38 = v37 - 1;
        if (v38 < 0 == v27) {
          *((_DWORD *)this + 14) = v38;
        }
        int v39 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v39 >= *((void *)this + 2) || *v39 != 33) {
          continue;
        }
        *((void *)this + 1) = v39 + 1;
LABEL_68:
        *(void *)int v69 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v69) & 1) == 0)return 0; {
        *(void *)(a1 + 40) = *(void *)v69;
        }
        *(_DWORD *)(a1 + 104) |= 8u;
        unsigned int v40 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v40 >= *((void *)this + 2) || *v40 != 41) {
          continue;
        }
        *((void *)this + 1) = v40 + 1;
LABEL_72:
        *(void *)int v69 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v69) & 1) == 0)return 0; {
        *(void *)(a1 + 48) = *(void *)v69;
        }
        *(_DWORD *)(a1 + 104) |= 0x10u;
        uint64_t v41 = (unsigned char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v41 >= v14 || *v41 != 48) {
          continue;
        }
        uint64_t v15 = v41 + 1;
        *((void *)this + 1) = v15;
LABEL_76:
        v69[0] = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69);
          if (!result) {
            return result;
          }
          unsigned int v42 = v69[0];
        }
        else
        {
          unsigned int v42 = *v15;
          *((void *)this + 1) = v15 + 1;
        }
        if (v42 > 5)
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 6, (int)v42);
        }
        else
        {
          *(_DWORD *)(a1 + 104) |= 0x20u;
          *(_DWORD *)(a1 + 72) = v42;
        }
        unsigned int v43 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v43 >= *((void *)this + 2) || *v43 != 57) {
          continue;
        }
        *((void *)this + 1) = v43 + 1;
LABEL_87:
        *(void *)int v69 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v69) & 1) == 0)return 0; {
        *(void *)(a1 + 56) = *(void *)v69;
        }
        int v16 = *(_DWORD *)(a1 + 104) | 0x40;
        *(_DWORD *)(a1 + 104) = v16;
        unsigned int v44 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v44 >= *((void *)this + 2) || *v44 != 66) {
          continue;
        }
        *((void *)this + 1) = v44 + 1;
LABEL_91:
        *(_DWORD *)(a1 + 104) = v16 | 0x80;
        uint64_t v45 = *(void *)(a1 + 64);
        if (!v45) {
          operator new();
        }
        v69[0] = 0;
        unsigned int v46 = (char *)*((void *)this + 1);
        if ((unint64_t)v46 >= *((void *)this + 2) || *v46 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69))return 0; {
        }
          }
        else
        {
          v69[0] = *v46;
          *((void *)this + 1) = v46 + 1;
        }
        int v47 = *((_DWORD *)this + 14);
        int v48 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v47 + 1;
        if (v47 >= v48) {
          return 0;
        }
        int v49 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v69[0]);
        if (!sub_10005CB20(v45, this, v50, v51) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v49);
        int v52 = *((_DWORD *)this + 14);
        BOOL v27 = __OFSUB__(v52, 1);
        int v53 = v52 - 1;
        if (v53 < 0 == v27) {
          *((_DWORD *)this + 14) = v53;
        }
        int v54 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v54 >= *((void *)this + 2) || *v54 != 74) {
          continue;
        }
        *((void *)this + 1) = v54 + 1;
LABEL_105:
        *(_DWORD *)(a1 + 104) |= 0x100u;
        uint64_t v55 = *(void *)(a1 + 80);
        if (!v55) {
          operator new();
        }
        v69[0] = 0;
        unsigned int v56 = (char *)*((void *)this + 1);
        if ((unint64_t)v56 >= *((void *)this + 2) || *v56 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69))return 0; {
        }
          }
        else
        {
          v69[0] = *v56;
          *((void *)this + 1) = v56 + 1;
        }
        int v57 = *((_DWORD *)this + 14);
        int v58 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v57 + 1;
        if (v57 >= v58) {
          return 0;
        }
        int v59 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v69[0]);
        if (!sub_10005CB20(v55, this, v60, v61) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v59);
        int v62 = *((_DWORD *)this + 14);
        BOOL v27 = __OFSUB__(v62, 1);
        int v63 = v62 - 1;
        if (v63 < 0 == v27) {
          *((_DWORD *)this + 14) = v63;
        }
        int v64 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v64 >= *((void *)this + 2) || *v64 != 81) {
          continue;
        }
        *((void *)this + 1) = v64 + 1;
LABEL_119:
        *(void *)int v69 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v69) & 1) == 0)return 0; {
        *(void *)(a1 + 88) = *(void *)v69;
        }
        *(_DWORD *)(a1 + 104) |= 0x200u;
        int v65 = (unsigned char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        if ((unint64_t)v65 < v17 && *v65 == 88)
        {
          unsigned int v18 = v65 + 1;
          *((void *)this + 1) = v18;
LABEL_123:
          v69[0] = 0;
          if ((unint64_t)v18 >= v17 || *v18 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69);
            if (!result) {
              return result;
            }
            unsigned int v66 = v69[0];
          }
          else
          {
            unsigned int v66 = *v18;
            *((void *)this + 1) = v18 + 1;
          }
          if (v66 > 8)
          {
            wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 11, (int)v66);
          }
          else
          {
            *(_DWORD *)(a1 + 104) |= 0x400u;
            *(_DWORD *)(a1 + 76) = v66;
          }
          uint64_t v67 = (unsigned char *)*((void *)this + 1);
          unint64_t v19 = *((void *)this + 2);
          if ((unint64_t)v67 < v19 && *v67 == 96)
          {
            uint64_t v20 = v67 + 1;
            *((void *)this + 1) = v20;
LABEL_134:
            v69[0] = 0;
            if ((unint64_t)v20 >= v19 || *v20 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69);
              if (!result) {
                return result;
              }
              unsigned int v68 = v69[0];
            }
            else
            {
              unsigned int v68 = *v20;
              *((void *)this + 1) = v20 + 1;
            }
            if (v68 > 3)
            {
              wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 12, (int)v68);
            }
            else
            {
              *(_DWORD *)(a1 + 104) |= 0x800u;
              *(_DWORD *)(a1 + 96) = v68;
            }
            if (*((void *)this + 1) == *((void *)this + 2)
              && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)this + 36) = 1;
              return result;
            }
          }
        }
        break;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_68;
        }
        goto LABEL_41;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_72;
        }
        goto LABEL_41;
      case 6u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        uint64_t v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_76;
      case 7u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_87;
        }
        goto LABEL_41;
      case 8u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_41;
        }
        int v16 = *(_DWORD *)(a1 + 104);
        goto LABEL_91;
      case 9u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_105;
        }
        goto LABEL_41;
      case 0xAu:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_119;
        }
        goto LABEL_41;
      case 0xBu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v18 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_123;
      case 0xCu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        uint64_t v20 = (char *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        goto LABEL_134;
      default:
        int v9 = TagFallback & 7;
LABEL_41:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_100127C74()
{
}

uint64_t sub_100127CF4(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 104);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
    int v6 = *(_DWORD *)(v5 + 104);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_24;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v10 = *(void *)(v5 + 24);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_1008AC398 + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_27;
  }
LABEL_24:
  uint64_t v11 = *(void *)(v5 + 32);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_1008AC398 + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v11, a2, a4);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 72), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_31;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_34;
  }
LABEL_31:
  uint64_t v12 = *(void *)(v5 + 64);
  if (!v12) {
    uint64_t v12 = *(void *)(qword_1008AC398 + 64);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v12, a2, a4);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_37;
  }
LABEL_34:
  uint64_t v13 = *(void *)(v5 + 80);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_1008AC398 + 80);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v13, a2, a4);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
LABEL_38:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(_DWORD *)(v5 + 76), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 104) & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_37:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (int)a2, *(double *)(v5 + 88), a3);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x400) != 0) {
    goto LABEL_38;
  }
LABEL_12:
  if ((v6 & 0x800) != 0) {
LABEL_13:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(_DWORD *)(v5 + 96), (int)a2, a4);
LABEL_14:
  int v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100127EE0(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 26);
  if (v6)
  {
    uint64_t v7 = *((void *)this + 2);
    *(unsigned char *)a2 = 10;
    unsigned int v8 = a2 + 1;
    if (*(char *)(v7 + 23) < 0) {
      int v9 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v7 + 8);
    }
    else {
      int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v7 + 23);
    }
    if (v9 > 0x7F)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, v8, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v9;
      int v10 = v4 + 2;
    }
    int v11 = *(char *)(v7 + 23);
    if (v11 >= 0) {
      uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7;
    }
    else {
      uint64_t v12 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v7;
    }
    if (v11 >= 0) {
      uint64_t v13 = (const void *)*(unsigned __int8 *)(v7 + 23);
    }
    else {
      uint64_t v13 = (const void *)*(unsigned int *)(v7 + 8);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v12, v13, v10, a4);
    int v6 = *((_DWORD *)this + 26);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_27;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v14 = (unsigned int *)*((void *)this + 3);
  if (!v14) {
    unint64_t v14 = *(unsigned int **)(qword_1008AC398 + 24);
  }
  *(unsigned char *)uint64_t v4 = 18;
  uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14[6];
  if (v15 > 0x7F)
  {
    int v16 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v15;
    int v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  uint64_t v4 = sub_10012682C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v14, v16, a3);
  int v6 = *((_DWORD *)this + 26);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_33;
  }
LABEL_27:
  unint64_t v17 = (unsigned int *)*((void *)this + 4);
  if (!v17) {
    unint64_t v17 = *(unsigned int **)(qword_1008AC398 + 32);
  }
  *(unsigned char *)uint64_t v4 = 26;
  unsigned int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17[27];
  if (v18 > 0x7F)
  {
    unint64_t v19 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v18;
    unint64_t v19 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  uint64_t v4 = sub_1001258A4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v17, v19, a3, a4);
  int v6 = *((_DWORD *)this + 26);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t v20 = *((void *)this + 5);
  *(unsigned char *)uint64_t v4 = 33;
  *(void *)((char *)v4 + 1) = v20;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v6 = *((_DWORD *)this + 26);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_41;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t v21 = *((void *)this + 6);
  *(unsigned char *)uint64_t v4 = 41;
  *(void *)((char *)v4 + 1) = v21;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  if ((*((_DWORD *)this + 26) & 0x20) == 0) {
    goto LABEL_41;
  }
LABEL_35:
  int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 18);
  *(unsigned char *)uint64_t v4 = 48;
  unint64_t v23 = (unint64_t)v4 + 1;
  if ((v22 & 0x80000000) != 0)
  {
    uint64_t v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v22, v23, a3);
  }
  else
  {
    if (v22 <= 0x7F)
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v22;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      goto LABEL_41;
    }
    uint64_t v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v22, v23, a3);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v24;
LABEL_41:
  int v25 = *((_DWORD *)this + 26);
  if ((v25 & 0x40) != 0)
  {
    uint64_t v26 = *((void *)this + 7);
    *(unsigned char *)uint64_t v4 = 57;
    *(void *)((char *)v4 + 1) = v26;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
    int v25 = *((_DWORD *)this + 26);
    if ((v25 & 0x80) == 0)
    {
LABEL_43:
      if ((v25 & 0x100) == 0) {
        goto LABEL_44;
      }
      goto LABEL_54;
    }
  }
  else if ((v25 & 0x80) == 0)
  {
    goto LABEL_43;
  }
  uint64_t v27 = *((void *)this + 8);
  if (!v27) {
    uint64_t v27 = *(void *)(qword_1008AC398 + 64);
  }
  *(unsigned char *)uint64_t v4 = 66;
  int v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v27 + 32);
  if (v28 > 0x7F)
  {
    uint64_t v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v28, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v28;
    uint64_t v29 = (uint64_t)v4 + 2;
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10005CF3C(v27, v29, a3);
  int v25 = *((_DWORD *)this + 26);
  if ((v25 & 0x100) == 0)
  {
LABEL_44:
    if ((v25 & 0x200) == 0) {
      goto LABEL_45;
    }
    goto LABEL_60;
  }
LABEL_54:
  uint64_t v30 = *((void *)this + 10);
  if (!v30) {
    uint64_t v30 = *(void *)(qword_1008AC398 + 80);
  }
  *(unsigned char *)uint64_t v4 = 74;
  uint64_t v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v30 + 32);
  if (v31 > 0x7F)
  {
    uint64_t v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v31, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v31;
    uint64_t v32 = (uint64_t)v4 + 2;
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10005CF3C(v30, v32, a3);
  int v25 = *((_DWORD *)this + 26);
  if ((v25 & 0x200) == 0)
  {
LABEL_45:
    if ((v25 & 0x400) == 0) {
      goto LABEL_67;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t v33 = *((void *)this + 11);
  *(unsigned char *)uint64_t v4 = 81;
  *(void *)((char *)v4 + 1) = v33;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  if ((*((_DWORD *)this + 26) & 0x400) == 0) {
    goto LABEL_67;
  }
LABEL_61:
  int v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 19);
  *(unsigned char *)uint64_t v4 = 88;
  unint64_t v35 = (unint64_t)v4 + 1;
  if ((v34 & 0x80000000) != 0)
  {
    uint64_t v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v34, v35, a3);
  }
  else
  {
    if (v34 <= 0x7F)
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v34;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      goto LABEL_67;
    }
    uint64_t v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v34, v35, a3);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v36;
LABEL_67:
  if ((*((unsigned char *)this + 105) & 8) != 0)
  {
    int v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 24);
    *(unsigned char *)uint64_t v4 = 96;
    unint64_t v38 = (unint64_t)v4 + 1;
    if ((v37 & 0x80000000) != 0)
    {
      uint64_t v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v37, v38, a3);
    }
    else
    {
      if (v37 <= 0x7F)
      {
        *((unsigned char *)v4 + 1) = (_BYTE)v37;
        uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
        goto LABEL_74;
      }
      uint64_t v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v37, v38, a3);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v39;
  }
LABEL_74:
  unsigned int v42 = (void *)*((void *)this + 1);
  uint64_t v41 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  unsigned int v40 = v42;
  if (!v42 || *v40 == v40[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v41, v4, a3);
}

uint64_t sub_100128338(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 104);
  if (!(_BYTE)v3)
  {
    uint64_t v5 = 0;
    goto LABEL_50;
  }
  if (v3)
  {
    uint64_t v6 = *(void *)(a1 + 16);
    int v7 = *(unsigned __int8 *)(v6 + 23);
    char v8 = v7;
    uint64_t v9 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      unint64_t v10 = *(unsigned __int8 *)(v6 + 23);
    }
    else {
      unint64_t v10 = v9;
    }
    if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10, a2);
      int v7 = *(unsigned __int8 *)(v6 + 23);
      uint64_t v9 = *(void *)(v6 + 8);
      int v3 = *(_DWORD *)(a1 + 104);
      char v8 = *(unsigned char *)(v6 + 23);
    }
    else
    {
      int v11 = 1;
    }
    if (v8 < 0) {
      int v7 = v9;
    }
    int v4 = v11 + v7 + 1;
    if ((v3 & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
  int v4 = 0;
  if ((v3 & 2) != 0)
  {
LABEL_15:
    uint64_t v12 = *(void *)(a1 + 24);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_1008AC398 + 24);
    }
    uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10012694C(v12, a2);
    int v14 = (int)v13;
    if (v13 >= 0x80) {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
    }
    else {
      int v15 = 1;
    }
    v4 += v14 + v15 + 1;
    int v3 = *(_DWORD *)(a1 + 104);
  }
LABEL_21:
  if ((v3 & 4) != 0)
  {
    uint64_t v16 = *(void *)(a1 + 32);
    if (!v16) {
      uint64_t v16 = *(void *)(qword_1008AC398 + 32);
    }
    unint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100125CF4(v16, a2);
    int v18 = (int)v17;
    if (v17 >= 0x80) {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2);
    }
    else {
      int v19 = 1;
    }
    v4 += v18 + v19 + 1;
    int v3 = *(_DWORD *)(a1 + 104);
  }
  int v20 = v4 + 9;
  if ((v3 & 8) == 0) {
    int v20 = v4;
  }
  if ((v3 & 0x10) != 0) {
    LODWORD(v5) = v20 + 9;
  }
  else {
    LODWORD(v5) = v20;
  }
  if ((v3 & 0x20) != 0)
  {
    uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 72);
    if ((v21 & 0x80000000) != 0)
    {
      int v22 = 11;
    }
    else if (v21 >= 0x80)
    {
      int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2)
          + 1;
      int v3 = *(_DWORD *)(a1 + 104);
    }
    else
    {
      int v22 = 2;
    }
    LODWORD(v5) = v22 + v5;
  }
  if ((v3 & 0x40) != 0) {
    uint64_t v5 = (v5 + 9);
  }
  else {
    uint64_t v5 = v5;
  }
  if ((v3 & 0x80) != 0)
  {
    uint64_t v23 = *(void *)(a1 + 64);
    if (!v23) {
      uint64_t v23 = *(void *)(qword_1008AC398 + 64);
    }
    uint64_t v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005CFAC(v23, a2);
    int v25 = (int)v24;
    if (v24 >= 0x80) {
      int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24, a2);
    }
    else {
      int v26 = 1;
    }
    uint64_t v5 = (v5 + v25 + v26 + 1);
    int v3 = *(_DWORD *)(a1 + 104);
  }
LABEL_50:
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      uint64_t v27 = *(void *)(a1 + 80);
      if (!v27) {
        uint64_t v27 = *(void *)(qword_1008AC398 + 80);
      }
      int v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005CFAC(v27, a2);
      int v29 = (int)v28;
      if (v28 >= 0x80) {
        int v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28, a2);
      }
      else {
        int v30 = 1;
      }
      LODWORD(v5) = v5 + v29 + v30 + 1;
      int v3 = *(_DWORD *)(a1 + 104);
    }
    if ((v3 & 0x200) != 0) {
      uint64_t v5 = (v5 + 9);
    }
    else {
      uint64_t v5 = v5;
    }
    if ((v3 & 0x400) != 0)
    {
      uint64_t v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 76);
      if ((v31 & 0x80000000) != 0)
      {
        int v32 = 11;
      }
      else if (v31 >= 0x80)
      {
        int v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31, a2)
            + 1;
        int v3 = *(_DWORD *)(a1 + 104);
      }
      else
      {
        int v32 = 2;
      }
      uint64_t v5 = (v32 + v5);
    }
    if ((v3 & 0x800) != 0)
    {
      uint64_t v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 96);
      if ((v33 & 0x80000000) != 0)
      {
        int v34 = 11;
      }
      else if (v33 >= 0x80)
      {
        int v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33, a2)
            + 1;
      }
      else
      {
        int v34 = 2;
      }
      uint64_t v5 = (v34 + v5);
    }
  }
  unint64_t v35 = *(void **)(a1 + 8);
  if (v35 && *v35 != v35[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 100) = v5;
  return v5;
}

uint64_t sub_1001285EC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100126CB4((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001286C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001286D8(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100128764()
{
  return 1;
}

uint64_t sub_10012876C()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A13B8;
}

void sub_100128800(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100128814(uint64_t a1)
{
  *(void *)a1 = off_1008504B0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  return a1;
}

void sub_100128868(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10012887C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      uint64_t v5 = *(const std::string **)(a2 + 16);
      *(_DWORD *)(a1 + 32) |= 1u;
      uint64_t v6 = *(std::string **)(a1 + 16);
      if (v6 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      std::string::operator=(v6, v5);
      int v4 = *(_DWORD *)(a2 + 32);
    }
    if ((v4 & 2) != 0)
    {
      unsigned int v7 = *(_DWORD *)(a2 + 24);
      if (v7 >= 7) {
        sub_100410738();
      }
      *(_DWORD *)(a1 + 32) |= 2u;
      *(_DWORD *)(a1 + 24) = v7;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100128984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10012899C(wireless_diagnostics::google::protobuf::Message *a1)
{
  *(void *)a1 = off_1008504B0;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::Message *)((char *)a1 + 8);
  sub_100098658((uint64_t)a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message(a1);
}

void sub_100128A00(wireless_diagnostics::google::protobuf::Message *a1)
{
  sub_10012899C(a1);

  operator delete();
}

uint64_t sub_100128A38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 28) = a2;
  return result;
}

uint64_t sub_100128A40(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008AC3A0;
  if (!qword_1008AC3A0)
  {
    sub_1000EF4F0(0, a2, a3, a4);
    return qword_1008AC3A0;
  }
  return result;
}

void sub_100128A70()
{
}

void sub_100128AB0()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100128AD4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 32))
  {
    if (*(unsigned char *)(a1 + 32))
    {
      uint64_t v1 = *(void *)(a1 + 16);
      if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v1 + 23) < 0)
        {
          **(unsigned char **)uint64_t v1 = 0;
          *(void *)(v1 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v1 = 0;
          *(unsigned char *)(v1 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(a1 + 24) = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 6) = 0;
  if (v3) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100128B2C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      unsigned int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v9 = TagFallback & 7;
      if (v9 != 2) {
        goto LABEL_22;
      }
      *(_DWORD *)(a1 + 32) |= 1u;
      if (*(_UNKNOWN **)(a1 + 16) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
      if (!result) {
        return result;
      }
      uint64_t v13 = (unsigned char *)*((void *)this + 1);
      unint64_t v10 = *((void *)this + 2);
      if ((unint64_t)v13 < v10 && *v13 == 16)
      {
        int v11 = v13 + 1;
        *((void *)this + 1) = v11;
LABEL_18:
        unsigned int v15 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v15);
          if (!result) {
            return result;
          }
          unsigned int v14 = v15;
        }
        else
        {
          unsigned int v14 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        if (v14 > 6)
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 2, (int)v14);
        }
        else
        {
          *(_DWORD *)(a1 + 32) |= 2u;
          *(_DWORD *)(a1 + 24) = v14;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_18;
      }
    }
    else
    {
      int v9 = TagFallback & 7;
    }
LABEL_22:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_100128D0C(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 32);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
    int v6 = *(_DWORD *)(v5 + 32);
  }
  if ((v6 & 2) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), (int)a2, a4);
  }
  int v9 = *(void **)(v5 + 8);
  char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100128D98(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  int v4 = a2;
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    uint64_t v7 = *((void *)this + 2);
    *(unsigned char *)a2 = 10;
    unsigned int v8 = a2 + 1;
    if (*(char *)(v7 + 23) < 0) {
      int v9 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v7 + 8);
    }
    else {
      int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v7 + 23);
    }
    if (v9 > 0x7F)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, v8, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v9;
      int v10 = v4 + 2;
    }
    int v11 = *(char *)(v7 + 23);
    if (v11 >= 0) {
      uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7;
    }
    else {
      uint64_t v12 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v7;
    }
    if (v11 >= 0) {
      uint64_t v13 = (const void *)*(unsigned __int8 *)(v7 + 23);
    }
    else {
      uint64_t v13 = (const void *)*(unsigned int *)(v7 + 8);
    }
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v12, v13, v10, a4);
    int v6 = *((_DWORD *)this + 8);
  }
  if ((v6 & 2) != 0)
  {
    unsigned int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 6);
    *(unsigned char *)int v4 = 16;
    unint64_t v15 = (unint64_t)v4 + 1;
    if ((v14 & 0x80000000) != 0)
    {
      uint64_t v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v14, v15, a3);
    }
    else
    {
      if (v14 <= 0x7F)
      {
        *((unsigned char *)v4 + 1) = (_BYTE)v14;
        int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
        goto LABEL_22;
      }
      uint64_t v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, v15, a3);
    }
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v16;
  }
LABEL_22:
  int v19 = (void *)*((void *)this + 1);
  int v18 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  unint64_t v17 = v19;
  if (!v19 || *v17 == v17[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v18, v4, a3);
}

uint64_t sub_100128EA4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 32);
  if ((_BYTE)v3)
  {
    if ((*(unsigned char *)(a1 + 32) & 1) == 0)
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 32) & 2) == 0) {
        goto LABEL_21;
      }
LABEL_15:
      uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
      if ((v12 & 0x80000000) != 0)
      {
        int v13 = 11;
      }
      else if (v12 >= 0x80)
      {
        int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2)
            + 1;
      }
      else
      {
        int v13 = 2;
      }
      uint64_t v4 = (v13 + v4);
      goto LABEL_21;
    }
    uint64_t v5 = *(void *)(a1 + 16);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    char v7 = v6;
    uint64_t v8 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
    }
    else {
      unint64_t v9 = v8;
    }
    if (v9 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9, a2);
      int v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v8 = *(void *)(v5 + 8);
      int v10 = v11 + 1;
      int v3 = *(_DWORD *)(a1 + 32);
      char v7 = *(unsigned char *)(v5 + 23);
    }
    else
    {
      int v10 = 2;
    }
    if (v7 < 0) {
      int v6 = v8;
    }
    uint64_t v4 = (v10 + v6);
    if ((v3 & 2) != 0) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_21:
  unsigned int v14 = *(void **)(a1 + 8);
  if (v14 && *v14 != v14[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

uint64_t sub_100128F8C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10012887C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100129060(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100129078(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100129104()
{
  return 1;
}

uint64_t sub_10012910C()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A13C8;
}

void sub_1001291A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_1001291B4(void *a1)
{
  *a1 = off_100850560;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  a1[3] = 0;
  return a1;
}

void sub_100129204(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100129218(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (*(unsigned char *)(a2 + 28))
  {
    uint64_t v4 = *(const std::string **)(a2 + 16);
    *(_DWORD *)(a1 + 28) |= 1u;
    uint64_t v5 = *(std::string **)(a1 + 16);
    if (v5 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v5, v4);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001292F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10012930C(wireless_diagnostics::google::protobuf::Message *a1)
{
  *(void *)a1 = off_100850560;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::Message *)((char *)a1 + 8);
  sub_100098658((uint64_t)a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message(a1);
}

void sub_100129370(wireless_diagnostics::google::protobuf::Message *a1)
{
  sub_10012930C(a1);

  operator delete();
}

uint64_t sub_1001293A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 24) = a2;
  return result;
}

uint64_t sub_1001293B0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008AC3A8;
  if (!qword_1008AC3A8)
  {
    sub_1000EF4F0(0, a2, a3, a4);
    return qword_1008AC3A8;
  }
  return result;
}

void sub_1001293E0()
{
}

void sub_100129420()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100129444(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 28))
  {
    uint64_t v1 = *(void *)(a1 + 16);
    if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      if (*(char *)(v1 + 23) < 0)
      {
        **(unsigned char **)uint64_t v1 = 0;
        *(void *)(v1 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v1 = 0;
        *(unsigned char *)(v1 + 23) = 0;
      }
    }
  }
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 5) = 0;
  if (v3) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100129494(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      char v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
      }
      if (TagFallback != 10) {
        break;
      }
      *(_DWORD *)(a1 + 28) |= 1u;
      if (*(_UNKNOWN **)(a1 + 16) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
      if (!result) {
        return result;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_1001295BC(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  if (*(unsigned char *)(this + 28)) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  }
  char v7 = *(void **)(v4 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  uint64_t v5 = v7;
  if (v7 && *v5 != v5[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v6, a2, a3);
  }
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100129630(wireless_diagnostics::google::protobuf::internal::WireFormat *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  if (*((unsigned char *)this + 28))
  {
    uint64_t v5 = *((void *)this + 2);
    *(unsigned char *)a2 = 10;
    if (*(char *)(v5 + 23) < 0) {
      unsigned int v6 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v5 + 8);
    }
    else {
      unsigned int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v5 + 23);
    }
    if (v6 > 0x7F)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, (int)a2 + 1, a3);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v6;
      int v7 = a2 + 2;
    }
    int v8 = *(char *)(v5 + 23);
    if (v8 >= 0) {
      unint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v5;
    }
    else {
      unint64_t v9 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v5;
    }
    if (v8 >= 0) {
      int v10 = (const void *)*(unsigned __int8 *)(v5 + 23);
    }
    else {
      int v10 = (const void *)*(unsigned int *)(v5 + 8);
    }
    a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v9, v10, v7, a4);
  }
  int v13 = (void *)*((void *)this + 1);
  uint64_t v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v11 = v13;
  if (!v13 || *v11 == v11[1]) {
    return a2;
  }

  return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v12, a2, a3);
}

uint64_t sub_1001296F8(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (*(unsigned char *)(a1 + 28))
  {
    uint64_t v4 = *(void *)(a1 + 16);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    char v6 = v5;
    uint64_t v7 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
    }
    else {
      unint64_t v8 = v7;
    }
    if (v8 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8, a2);
      int v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v7 = *(void *)(v4 + 8);
      int v9 = v10 + 1;
      char v6 = *(unsigned char *)(v4 + 23);
    }
    else
    {
      int v9 = 2;
    }
    if (v6 < 0) {
      int v5 = v7;
    }
    uint64_t v3 = (v9 + v5);
  }
  else
  {
    uint64_t v3 = 0;
  }
  int v11 = *(void **)(a1 + 8);
  if (v11 && *v11 != v11[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  }
  *(_DWORD *)(a1 + 24) = v3;
  return v3;
}

uint64_t sub_10012979C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100129218((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100129870(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100129888(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100129914()
{
  return 1;
}

uint64_t sub_10012991C()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A13D8;
}

void sub_1001299B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_1001299C4(void *a1)
{
  *a1 = off_100850610;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[5] = 0;
  a1[6] = 0;
  a1[2] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_100129A1C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100129A30(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 52);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 52))
  {
    uint64_t v7 = *(const std::string **)(a2 + 16);
    *(_DWORD *)(a1 + 52) |= 1u;
    unint64_t v8 = *(std::string **)(a1 + 16);
    if (v8 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v8, v7);
    int v4 = *(_DWORD *)(a2 + 52);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_14:
      uint64_t v10 = *(void *)(a2 + 32);
      *(_DWORD *)(a1 + 52) |= 4u;
      *(void *)(a1 + 32) = v10;
      if ((*(_DWORD *)(a2 + 52) & 8) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
      goto LABEL_8;
    }
  }
  else if ((*(unsigned char *)(a2 + 52) & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 52) |= 2u;
  *(void *)(a1 + 24) = v9;
  int v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_7:
  if ((v4 & 8) != 0)
  {
LABEL_8:
    uint64_t v5 = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 52) |= 8u;
    *(void *)(a1 + 40) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100129B74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100129B8C(wireless_diagnostics::google::protobuf::Message *a1)
{
  *(void *)a1 = off_100850610;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::Message *)((char *)a1 + 8);
  sub_100098658((uint64_t)a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message(a1);
}

void sub_100129BF0(wireless_diagnostics::google::protobuf::Message *a1)
{
  sub_100129B8C(a1);

  operator delete();
}

uint64_t sub_100129C28(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) = a2;
  return result;
}

uint64_t sub_100129C30(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008AC3B0;
  if (!qword_1008AC3B0)
  {
    sub_1000EF4F0(0, a2, a3, a4);
    return qword_1008AC3B0;
  }
  return result;
}

void sub_100129C60()
{
}

void sub_100129CA0()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100129CC4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 52))
  {
    if (*(unsigned char *)(a1 + 52))
    {
      uint64_t v1 = *(void *)(a1 + 16);
      if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v1 + 23) < 0)
        {
          **(unsigned char **)uint64_t v1 = 0;
          *(void *)(v1 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v1 = 0;
          *(unsigned char *)(v1 + 23) = 0;
        }
      }
    }
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 11) = 0;
  if (v3) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100129D20(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 52) |= 1u;
        if (*(_UNKNOWN **)(a1 + 16) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
        if (result)
        {
          int v11 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 17)
          {
            *((void *)this + 1) = v11 + 1;
            goto LABEL_17;
          }
          continue;
        }
        return result;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_32;
        }
LABEL_17:
        unint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 24) = v14;
        *(_DWORD *)(a1 + 52) |= 2u;
        uint64_t v12 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 != 25) {
          continue;
        }
        *((void *)this + 1) = v12 + 1;
        goto LABEL_22;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_32;
        }
LABEL_22:
        unint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 32) = v14;
        *(_DWORD *)(a1 + 52) |= 4u;
        int v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 != 33) {
          continue;
        }
        *((void *)this + 1) = v13 + 1;
LABEL_27:
        unint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 40) = v14;
        *(_DWORD *)(a1 + 52) |= 8u;
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_27;
        }
        goto LABEL_32;
      default:
        int v9 = TagFallback & 7;
LABEL_32:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
    return result;
  }
}

uint64_t sub_100129FA4(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 52);
  if (v5)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
    int v5 = *(_DWORD *)(v4 + 52);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_14:
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v4 + 32), a3);
      if ((*(_DWORD *)(v4 + 52) & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_5;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  int v5 = *(_DWORD *)(v4 + 52);
  if ((v5 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_4:
  if ((v5 & 8) != 0) {
LABEL_5:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v4 + 40), a3);
LABEL_6:
  unint64_t v8 = *(void **)(v4 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v8;
  if (v8 && *v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

unsigned char *sub_10012A070(wireless_diagnostics::google::protobuf::internal::WireFormat *this, unsigned char *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  int v5 = *((_DWORD *)this + 13);
  if (v5)
  {
    uint64_t v11 = *((void *)this + 2);
    *a2 = 10;
    if (*(char *)(v11 + 23) < 0) {
      uint64_t v12 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v11 + 8);
    }
    else {
      uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v11 + 23);
    }
    if (v12 > 0x7F)
    {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)a2 + 1, a3);
    }
    else
    {
      a2[1] = (_BYTE)v12;
      int v13 = a2 + 2;
    }
    int v14 = *(char *)(v11 + 23);
    if (v14 >= 0) {
      unint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11;
    }
    else {
      unint64_t v15 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v11;
    }
    if (v14 >= 0) {
      uint64_t v16 = (const void *)*(unsigned __int8 *)(v11 + 23);
    }
    else {
      uint64_t v16 = (const void *)*(unsigned int *)(v11 + 8);
    }
    a2 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v15, v16, v13, a4);
    int v5 = *((_DWORD *)this + 13);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_26:
      uint64_t v18 = *((void *)this + 4);
      *a2 = 25;
      *(void *)(a2 + 1) = v18;
      a2 += 9;
      if ((*((_DWORD *)this + 13) & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_5;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v17 = *((void *)this + 3);
  *a2 = 17;
  *(void *)(a2 + 1) = v17;
  a2 += 9;
  int v5 = *((_DWORD *)this + 13);
  if ((v5 & 4) != 0) {
    goto LABEL_26;
  }
LABEL_4:
  if ((v5 & 8) != 0)
  {
LABEL_5:
    uint64_t v6 = *((void *)this + 5);
    *a2 = 33;
    *(void *)(a2 + 1) = v6;
    a2 += 9;
  }
LABEL_6:
  int v9 = (void *)*((void *)this + 1);
  unint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v7 = v9;
  if (!v9 || *v7 == v7[1]) {
    return a2;
  }

  return (unsigned char *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v8, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_10012A244(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 52);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 52))
    {
      uint64_t v6 = *(void *)(a1 + 16);
      int v7 = *(unsigned __int8 *)(v6 + 23);
      char v8 = v7;
      uint64_t v9 = *(void *)(v6 + 8);
      if ((v7 & 0x80u) == 0) {
        unint64_t v10 = *(unsigned __int8 *)(v6 + 23);
      }
      else {
        unint64_t v10 = v9;
      }
      if (v10 >= 0x80)
      {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10, a2);
        int v7 = *(unsigned __int8 *)(v6 + 23);
        uint64_t v9 = *(void *)(v6 + 8);
        int v11 = v12 + 1;
        int v3 = *(_DWORD *)(a1 + 52);
        char v8 = *(unsigned char *)(v6 + 23);
      }
      else
      {
        int v11 = 2;
      }
      if (v8 < 0) {
        int v7 = v9;
      }
      unsigned int v4 = v11 + v7;
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  int v13 = *(void **)(a1 + 8);
  if (v13 && *v13 != v13[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 48) = v5;
  return v5;
}

uint64_t sub_10012A31C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100129A30((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10012A3F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10012A408(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10012A494()
{
  return 1;
}

uint64_t sub_10012A49C()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A13E8;
}

void sub_10012A530(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_10012A544(void *a1)
{
  *a1 = off_1008506C0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[4] = 0;
  a1[5] = 0;
  a1[2] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  a1[3] = 0;
  return a1;
}

void sub_10012A598(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10012A5AC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 44);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 44))
  {
    int v7 = *(const std::string **)(a2 + 16);
    *(_DWORD *)(a1 + 44) |= 1u;
    char v8 = *(std::string **)(a1 + 16);
    if (v8 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v8, v7);
    int v4 = *(_DWORD *)(a2 + 44);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_14:
      int v10 = *(_DWORD *)(a2 + 32);
      *(_DWORD *)(a1 + 44) |= 4u;
      *(_DWORD *)(a1 + 32) = v10;
      if ((*(_DWORD *)(a2 + 44) & 8) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
      goto LABEL_8;
    }
  }
  else if ((*(unsigned char *)(a2 + 44) & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 44) |= 2u;
  *(void *)(a1 + 24) = v9;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_7:
  if ((v4 & 8) != 0)
  {
LABEL_8:
    int v5 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 44) |= 8u;
    *(_DWORD *)(a1 + 36) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10012A6F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10012A708(wireless_diagnostics::google::protobuf::Message *a1)
{
  *(void *)a1 = off_1008506C0;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::Message *)((char *)a1 + 8);
  sub_100098658((uint64_t)a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message(a1);
}

void sub_10012A76C(wireless_diagnostics::google::protobuf::Message *a1)
{
  sub_10012A708(a1);

  operator delete();
}

uint64_t sub_10012A7A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

uint64_t sub_10012A7AC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008AC3B8;
  if (!qword_1008AC3B8)
  {
    sub_1000EF4F0(0, a2, a3, a4);
    return qword_1008AC3B8;
  }
  return result;
}

void sub_10012A7DC()
{
}

void sub_10012A81C()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10012A840(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 44))
  {
    if (*(unsigned char *)(a1 + 44))
    {
      uint64_t v1 = *(void *)(a1 + 16);
      if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v1 + 23) < 0)
        {
          **(unsigned char **)uint64_t v1 = 0;
          *(void *)(v1 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v1 = 0;
          *(unsigned char *)(v1 + 23) = 0;
        }
      }
    }
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 9) = 0;
  if (v3) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10012A898(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (unsigned int *)(a1 + 32);
  int v7 = (unsigned int *)(a1 + 36);
  unsigned int v8 = a1 + 8;
  while (2)
  {
    uint64_t v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_27;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        if (*(_UNKNOWN **)(a1 + 16) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
        if (result)
        {
          int v13 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v13 < *((void *)this + 2) && *v13 == 17)
          {
            *((void *)this + 1) = v13 + 1;
            goto LABEL_17;
          }
          continue;
        }
        return result;
      case 2u:
        int v11 = TagFallback & 7;
        if (v11 != 1) {
          goto LABEL_27;
        }
LABEL_17:
        unint64_t v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v20) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 24) = v20;
        *(_DWORD *)(a1 + 44) |= 2u;
        unint64_t v15 = (unsigned char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v15 >= v14 || *v15 != 24) {
          continue;
        }
        uint64_t v16 = v15 + 1;
        *((void *)this + 1) = v16;
        goto LABEL_23;
      case 3u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_27;
        }
        uint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
LABEL_23:
        if ((unint64_t)v16 >= v14 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          uint64_t v17 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v6 = *v16;
          uint64_t v17 = v16 + 1;
          *((void *)this + 1) = v17;
        }
        *(_DWORD *)(a1 + 44) |= 4u;
        if ((unint64_t)v17 >= v14 || *v17 != 32) {
          continue;
        }
        uint64_t v18 = v17 + 1;
        *((void *)this + 1) = v18;
LABEL_36:
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v19 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v18;
          int v19 = (unsigned __int8 *)(v18 + 1);
          *((void *)this + 1) = v19;
        }
        *(_DWORD *)(a1 + 44) |= 8u;
        if (v19 != (unsigned __int8 *)v14 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 4u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_27;
        }
        uint64_t v18 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_36;
      default:
        int v11 = TagFallback & 7;
LABEL_27:
        if (v11 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v8, a4))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_10012AB5C(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 44);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_14:
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 32), a2, a4);
      if ((*(_DWORD *)(v5 + 44) & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_5;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_4:
  if ((v6 & 8) != 0) {
LABEL_5:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 36), a2, a4);
LABEL_6:
  uint64_t v9 = *(void **)(v5 + 8);
  unsigned int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10012AC28(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  int v4 = a2;
  int v6 = *((_DWORD *)this + 11);
  if (v6)
  {
    uint64_t v7 = *((void *)this + 2);
    *(unsigned char *)a2 = 10;
    unsigned int v8 = a2 + 1;
    if (*(char *)(v7 + 23) < 0) {
      uint64_t v9 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v7 + 8);
    }
    else {
      uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v7 + 23);
    }
    if (v9 > 0x7F)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, v8, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v9;
      int v10 = v4 + 2;
    }
    int v11 = *(char *)(v7 + 23);
    if (v11 >= 0) {
      int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7;
    }
    else {
      int v12 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v7;
    }
    if (v11 >= 0) {
      int v13 = (const void *)*(unsigned __int8 *)(v7 + 23);
    }
    else {
      int v13 = (const void *)*(unsigned int *)(v7 + 8);
    }
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v12, v13, v10, a4);
    int v6 = *((_DWORD *)this + 11);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_22;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v14 = *((void *)this + 3);
  *(unsigned char *)int v4 = 17;
  *(void *)((char *)v4 + 1) = v14;
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  if ((*((_DWORD *)this + 11) & 4) == 0) {
    goto LABEL_22;
  }
LABEL_19:
  unint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  *(unsigned char *)int v4 = 24;
  if (v15 > 0x7F)
  {
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v15;
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
LABEL_22:
  if ((*((unsigned char *)this + 44) & 8) != 0)
  {
    uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    *(unsigned char *)int v4 = 32;
    if (v16 > 0x7F)
    {
      int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v16, (int)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v16;
      int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
  }
  int v19 = (void *)*((void *)this + 1);
  uint64_t v18 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v17 = v19;
  if (!v19 || *v17 == v17[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v18, v4, a3);
}

uint64_t sub_10012ADBC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 44);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 44))
    {
      uint64_t v6 = *(void *)(a1 + 16);
      int v7 = *(unsigned __int8 *)(v6 + 23);
      char v8 = v7;
      uint64_t v9 = *(void *)(v6 + 8);
      if ((v7 & 0x80u) == 0) {
        unint64_t v10 = *(unsigned __int8 *)(v6 + 23);
      }
      else {
        unint64_t v10 = v9;
      }
      if (v10 >= 0x80)
      {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10, a2);
        int v7 = *(unsigned __int8 *)(v6 + 23);
        uint64_t v9 = *(void *)(v6 + 8);
        int v11 = v12 + 1;
        int v3 = *(_DWORD *)(a1 + 44);
        char v8 = *(unsigned char *)(v6 + 23);
      }
      else
      {
        int v11 = 2;
      }
      if (v8 < 0) {
        int v7 = v9;
      }
      unsigned int v4 = v11 + v7;
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 4) != 0)
    {
      int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
      if (v13 >= 0x80)
      {
        int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2)
            + 1;
        int v3 = *(_DWORD *)(a1 + 44);
      }
      else
      {
        int v14 = 2;
      }
      uint64_t v5 = (v14 + v5);
    }
    if ((v3 & 8) != 0)
    {
      unint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
      if (v15 >= 0x80) {
        int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2)
      }
            + 1;
      else {
        int v16 = 2;
      }
      uint64_t v5 = (v16 + v5);
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  uint64_t v17 = *(void **)(a1 + 8);
  if (v17 && *v17 != v17[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 40) = v5;
  return v5;
}

uint64_t sub_10012AEC8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10012A5AC((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10012AF9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10012AFB4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10012B040()
{
  return 1;
}

uint64_t sub_10012B048()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A13F8;
}

void sub_10012B0DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_10012B0F0(void *a1)
{
  *a1 = off_100850770;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_10012B144(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10012B158(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      uint64_t v5 = *(const std::string **)(a2 + 16);
      *(_DWORD *)(a1 + 36) |= 1u;
      uint64_t v6 = *(std::string **)(a1 + 16);
      if (v6 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      std::string::operator=(v6, v5);
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v7 = *(void *)(a2 + 24);
      *(_DWORD *)(a1 + 36) |= 2u;
      *(void *)(a1 + 24) = v7;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10012B254(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10012B26C(wireless_diagnostics::google::protobuf::Message *a1)
{
  *(void *)a1 = off_100850770;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::Message *)((char *)a1 + 8);
  sub_100098658((uint64_t)a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message(a1);
}

void sub_10012B2D0(wireless_diagnostics::google::protobuf::Message *a1)
{
  sub_10012B26C(a1);

  operator delete();
}

uint64_t sub_10012B308(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

uint64_t sub_10012B310(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008AC3C0;
  if (!qword_1008AC3C0)
  {
    sub_1000EF4F0(0, a2, a3, a4);
    return qword_1008AC3C0;
  }
  return result;
}

void sub_10012B340()
{
}

void sub_10012B380()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10012B3A4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 36))
  {
    if (*(unsigned char *)(a1 + 36))
    {
      uint64_t v1 = *(void *)(a1 + 16);
      if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v1 + 23) < 0)
        {
          **(unsigned char **)uint64_t v1 = 0;
          *(void *)(v1 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v1 = 0;
          *(unsigned char *)(v1 + 23) = 0;
        }
      }
    }
    *(void *)(a1 + 24) = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v3) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10012B3FC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_24;
        }
        *(_DWORD *)(a1 + 36) |= 1u;
        if (*(_UNKNOWN **)(a1 + 16) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
        if (!result) {
          return result;
        }
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_18;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        int v9 = TagFallback & 7;
        goto LABEL_24;
      }
      int v9 = TagFallback & 7;
      if (v9 == 1) {
        break;
      }
LABEL_24:
      if (v9 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
    }
      }
LABEL_18:
    unint64_t v12 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
      return 0;
    }
    *(void *)(a1 + 24) = v12;
    *(_DWORD *)(a1 + 36) |= 2u;
  }
  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_10012B5A0(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 36);
  if (v5)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
    int v5 = *(_DWORD *)(v4 + 36);
  }
  if ((v5 & 2) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  }
  char v8 = *(void **)(v4 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v8;
  if (v8 && *v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

unsigned char *sub_10012B62C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, unsigned char *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  int v5 = *((_DWORD *)this + 9);
  if (v5)
  {
    uint64_t v6 = *((void *)this + 2);
    *a2 = 10;
    if (*(char *)(v6 + 23) < 0) {
      uint64_t v7 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v6 + 8);
    }
    else {
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v6 + 23);
    }
    if (v7 > 0x7F)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, (int)a2 + 1, a3);
    }
    else
    {
      a2[1] = (_BYTE)v7;
      int v8 = a2 + 2;
    }
    int v9 = *(char *)(v6 + 23);
    if (v9 >= 0) {
      unint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v6;
    }
    else {
      unint64_t v10 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v6;
    }
    if (v9 >= 0) {
      int v11 = (const void *)*(unsigned __int8 *)(v6 + 23);
    }
    else {
      int v11 = (const void *)*(unsigned int *)(v6 + 8);
    }
    a2 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v10, v11, v8, a4);
    int v5 = *((_DWORD *)this + 9);
  }
  if ((v5 & 2) != 0)
  {
    uint64_t v12 = *((void *)this + 3);
    *a2 = 17;
    *(void *)(a2 + 1) = v12;
    a2 += 9;
  }
  unint64_t v15 = (void *)*((void *)this + 1);
  int v14 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v13 = v15;
  if (!v15 || *v13 == v13[1]) {
    return a2;
  }

  return (unsigned char *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v14, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_10012B748(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 36))
    {
      uint64_t v6 = *(void *)(a1 + 16);
      int v7 = *(unsigned __int8 *)(v6 + 23);
      char v8 = v7;
      uint64_t v9 = *(void *)(v6 + 8);
      if ((v7 & 0x80u) == 0) {
        unint64_t v10 = *(unsigned __int8 *)(v6 + 23);
      }
      else {
        unint64_t v10 = v9;
      }
      if (v10 >= 0x80)
      {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10, a2);
        int v7 = *(unsigned __int8 *)(v6 + 23);
        uint64_t v9 = *(void *)(v6 + 8);
        int v11 = v12 + 1;
        int v3 = *(_DWORD *)(a1 + 36);
        char v8 = *(unsigned char *)(v6 + 23);
      }
      else
      {
        int v11 = 2;
      }
      if (v8 < 0) {
        int v7 = v9;
      }
      unsigned int v4 = v11 + v7;
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  int v13 = *(void **)(a1 + 8);
  if (v13 && *v13 != v13[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 32) = v5;
  return v5;
}

uint64_t sub_10012B808(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10012B158((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10012B8DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10012B8F4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10012B980()
{
  return 1;
}

uint64_t sub_10012B988()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1408;
}

void sub_10012BA1C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10012BA30(uint64_t a1)
{
  *(void *)a1 = off_100850820;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 48) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(void *)(a1 + 56) = 0;
  return a1;
}

void sub_10012BA8C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10012BAA0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 32), *(_DWORD *)(a2 + 40) + *(_DWORD *)(a1 + 40));
  if (*(int *)(a2 + 40) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 32) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 44);
      uint64_t v7 = *(int *)(a1 + 40);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 48))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 32), v6 + 1);
          int v6 = *(_DWORD *)(a1 + 44);
        }
        *(_DWORD *)(a1 + 44) = v6 + 1;
        sub_100132908();
      }
      uint64_t v8 = *(void *)(a1 + 32);
      *(_DWORD *)(a1 + 40) = v7 + 1;
      sub_1000FA1B8(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 40));
  }
  LOBYTE(v9) = *(unsigned char *)(a2 + 60);
  if ((_BYTE)v9)
  {
    if (*(unsigned char *)(a2 + 60))
    {
      uint64_t v10 = *(void *)(a2 + 16);
      *(_DWORD *)(a1 + 60) |= 1u;
      *(void *)(a1 + 16) = v10;
      int v9 = *(_DWORD *)(a2 + 60);
    }
    if ((v9 & 2) != 0)
    {
      int v11 = *(const std::string **)(a2 + 24);
      *(_DWORD *)(a1 + 60) |= 2u;
      int v12 = *(std::string **)(a1 + 24);
      if (v12 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      std::string::operator=(v12, v11);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10012BC4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10012BC64(uint64_t a1)
{
  *(void *)a1 = off_100850820;
  uint64_t v2 = (uint64_t *)(a1 + 32);
  sub_1000801F4(a1);
  sub_10006F938(v2);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10012BCD4(uint64_t a1)
{
  sub_10012BC64(a1);

  operator delete();
}

uint64_t sub_10012BD0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 56) = a2;
  return result;
}

uint64_t sub_10012BD14(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008AC3C8;
  if (!qword_1008AC3C8)
  {
    sub_1000EF4F0(0, a2, a3, a4);
    return qword_1008AC3C8;
  }
  return result;
}

void sub_10012BD44()
{
}

void sub_10012BD84()
{
}

uint64_t sub_10012BDA8(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 60);
  if (v2)
  {
    *(void *)(a1 + 16) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *(void *)(a1 + 24);
      if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
  }
  uint64_t result = sub_10006F8C8(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)v5 + 13) = 0;
  if (v6)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
  }
  return result;
}

uint64_t sub_10012BE40(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 32);
  unsigned int v7 = a1 + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v8 = (char *)*((void *)this + 1);
          if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v8;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v8 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v10 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v11 = TagFallback & 7;
          if (v11 != 1) {
            goto LABEL_26;
          }
          unint64_t v30 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v30) & 1) == 0) {
            return 0;
          }
          *(void *)(a1 + 16) = v30;
          int v12 = *(_DWORD *)(a1 + 60) | 1;
          *(_DWORD *)(a1 + 60) = v12;
          int v13 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v13 < *((void *)this + 2) && *v13 == 18)
          {
            *((void *)this + 1) = v13 + 1;
            goto LABEL_19;
          }
        }
        if (v10 != 2) {
          break;
        }
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_26;
        }
        int v12 = *(_DWORD *)(a1 + 60);
LABEL_19:
        *(_DWORD *)(a1 + 60) = v12 | 2;
        if (*(_UNKNOWN **)(a1 + 24) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
        if (!result) {
          return result;
        }
        unint64_t v15 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v15 < *((void *)this + 2) && *v15 == 26) {
          goto LABEL_29;
        }
      }
      if (v10 != 3) {
        break;
      }
      int v11 = TagFallback & 7;
      if (v11 != 2) {
        goto LABEL_26;
      }
      while (1)
      {
        int v16 = *(_DWORD *)(a1 + 44);
        uint64_t v17 = *(int *)(a1 + 40);
        if ((int)v17 >= v16)
        {
          if (v16 == *(_DWORD *)(a1 + 48))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v16 + 1);
            int v16 = *(_DWORD *)(a1 + 44);
          }
          *(_DWORD *)(a1 + 44) = v16 + 1;
          sub_100132908();
        }
        uint64_t v18 = *(void *)(a1 + 32);
        *(_DWORD *)(a1 + 40) = v17 + 1;
        uint64_t v19 = *(void *)(v18 + 8 * v17);
        unsigned int v31 = 0;
        unint64_t v20 = (char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v31))return 0; {
        }
          }
        else
        {
          unsigned int v31 = *v20;
          *((void *)this + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)this + 14);
        int v22 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v21 + 1;
        if (v21 >= v22) {
          return 0;
        }
        int v23 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v31);
        if (!sub_1000FA6C0(v19, this, v24, v25) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v23);
        int v26 = *((_DWORD *)this + 14);
        BOOL v27 = __OFSUB__(v26, 1);
        int v28 = v26 - 1;
        if (v28 < 0 == v27) {
          *((_DWORD *)this + 14) = v28;
        }
        unint64_t v15 = (unsigned char *)*((void *)this + 1);
        int v29 = (unsigned char *)*((void *)this + 2);
        if (v15 >= v29 || *v15 != 26) {
          break;
        }
LABEL_29:
        *((void *)this + 1) = v15 + 1;
      }
      if (v15 == v29 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v11 = TagFallback & 7;
LABEL_26:
    if (v11 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_10012C140(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 60);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    int v6 = *(_DWORD *)(v5 + 60);
  }
  if ((v6 & 2) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  }
  if (*(int *)(v5 + 40) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(*(void *)(v5 + 32) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 40));
  }
  unsigned int v10 = *(void **)(v5 + 8);
  int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v8 = v10;
  if (v10 && *v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10012C20C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 15);
  if (v6)
  {
    uint64_t v7 = *((void *)this + 2);
    *(unsigned char *)a2 = 9;
    *(void *)((char *)a2 + 1) = v7;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
    int v6 = *((_DWORD *)this + 15);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v8 = *((void *)this + 3);
    *(unsigned char *)uint64_t v4 = 18;
    if (*(char *)(v8 + 23) < 0) {
      int v9 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v8 + 8);
    }
    else {
      int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v8 + 23);
    }
    if (v9 > 0x7F)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (int)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v9;
      int v10 = v4 + 2;
    }
    int v11 = *(char *)(v8 + 23);
    if (v11 >= 0) {
      int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8;
    }
    else {
      int v12 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v8;
    }
    if (v11 >= 0) {
      int v13 = (const void *)*(unsigned __int8 *)(v8 + 23);
    }
    else {
      int v13 = (const void *)*(unsigned int *)(v8 + 8);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v12, v13, v10, a4);
  }
  if (*((int *)this + 10) >= 1)
  {
    uint64_t v14 = 0;
    do
    {
      unint64_t v15 = *(unsigned int **)(*((void *)this + 4) + 8 * v14);
      *(unsigned char *)uint64_t v4 = 26;
      int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v15[20];
      if (v16 > 0x7F)
      {
        uint64_t v17 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v16, (int)v4 + 1, a3);
      }
      else
      {
        *((unsigned char *)v4 + 1) = (_BYTE)v16;
        uint64_t v17 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      }
      uint64_t v4 = sub_1000FADC0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v15, v17, a3, a4);
      ++v14;
    }
    while (v14 < *((int *)this + 10));
  }
  unint64_t v20 = (void *)*((void *)this + 1);
  uint64_t v19 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v18 = v20;
  if (!v20 || *v18 == v18[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v19, v4, a3);
}

uint64_t sub_10012C398(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 60);
  if (*(unsigned char *)(a1 + 60))
  {
    int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0)
    {
      uint64_t v5 = *(void *)(a1 + 24);
      int v6 = *(unsigned __int8 *)(v5 + 23);
      char v7 = v6;
      uint64_t v8 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
      }
      else {
        unint64_t v9 = v8;
      }
      if (v9 >= 0x80)
      {
        int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9, a2);
        int v6 = *(unsigned __int8 *)(v5 + 23);
        uint64_t v8 = *(void *)(v5 + 8);
        char v7 = *(unsigned char *)(v5 + 23);
      }
      else
      {
        int v10 = 1;
      }
      if (v7 < 0) {
        int v6 = v8;
      }
      v4 += v10 + v6 + 1;
    }
  }
  else
  {
    int v4 = 0;
  }
  int v11 = *(_DWORD *)(a1 + 40);
  uint64_t v12 = (v11 + v4);
  if (v11 >= 1)
  {
    uint64_t v13 = 0;
    do
    {
      uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000FB0E0(*(void *)(*(void *)(a1 + 32) + 8 * v13), a2);
      int v15 = (int)v14;
      if (v14 >= 0x80) {
        int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
      }
      else {
        int v16 = 1;
      }
      uint64_t v12 = (v15 + v12 + v16);
      ++v13;
    }
    while (v13 < *(int *)(a1 + 40));
  }
  uint64_t v17 = *(void **)(a1 + 8);
  if (v17 && *v17 != v17[1]) {
    uint64_t v12 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v12;
  }
  *(_DWORD *)(a1 + 56) = v12;
  return v12;
}

uint64_t sub_10012C4AC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10012BAA0((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10012C580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10012C598(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10012C624()
{
  return 1;
}

uint64_t sub_10012C62C()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1418;
}

void sub_10012C6C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10012C6D4(uint64_t a1)
{
  *(void *)a1 = off_1008508D0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return a1;
}

void sub_10012C72C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10012C740(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v25);
  }
  int v4 = *(_DWORD *)(a2 + 124);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 124) |= 1u;
    *(void *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 124);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_30;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v8 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 124) |= 2u;
  *(_DWORD *)(a1 + 24) = v8;
  int v4 = *(_DWORD *)(a2 + 124);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_31;
  }
LABEL_30:
  int v9 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 124) |= 4u;
  *(_DWORD *)(a1 + 28) = v9;
  int v4 = *(_DWORD *)(a2 + 124);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_32;
  }
LABEL_31:
  int v10 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 124) |= 8u;
  *(_DWORD *)(a1 + 32) = v10;
  int v4 = *(_DWORD *)(a2 + 124);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_33:
    int v12 = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 124) |= 0x20u;
    *(_DWORD *)(a1 + 40) = v12;
    int v4 = *(_DWORD *)(a2 + 124);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_34;
  }
LABEL_32:
  int v11 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 124) |= 0x10u;
  *(_DWORD *)(a1 + 36) = v11;
  int v4 = *(_DWORD *)(a2 + 124);
  if ((v4 & 0x20) != 0) {
    goto LABEL_33;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_34:
  int v13 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 124) |= 0x40u;
  *(_DWORD *)(a1 + 44) = v13;
  int v4 = *(_DWORD *)(a2 + 124);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    uint64_t v5 = *(void *)(a2 + 48);
    *(_DWORD *)(a1 + 124) |= 0x80u;
    *(void *)(a1 + 48) = v5;
    int v4 = *(_DWORD *)(a2 + 124);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_23;
  }
  if ((v4 & 0x100) != 0)
  {
    uint64_t v14 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 124) |= 0x100u;
    *(void *)(a1 + 56) = v14;
    int v4 = *(_DWORD *)(a2 + 124);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_38;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  uint64_t v15 = *(void *)(a2 + 64);
  *(_DWORD *)(a1 + 124) |= 0x200u;
  *(void *)(a1 + 64) = v15;
  int v4 = *(_DWORD *)(a2 + 124);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t v16 = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 124) |= 0x400u;
  *(void *)(a1 + 72) = v16;
  int v4 = *(_DWORD *)(a2 + 124);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t v17 = *(void *)(a2 + 80);
  *(_DWORD *)(a1 + 124) |= 0x800u;
  *(void *)(a1 + 80) = v17;
  int v4 = *(_DWORD *)(a2 + 124);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t v18 = *(void *)(a2 + 88);
  *(_DWORD *)(a1 + 124) |= 0x1000u;
  *(void *)(a1 + 88) = v18;
  int v4 = *(_DWORD *)(a2 + 124);
  if ((v4 & 0x2000) == 0)
  {
LABEL_20:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_42;
  }
LABEL_41:
  int v19 = *(_DWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 124) |= 0x2000u;
  *(_DWORD *)(a1 + 96) = v19;
  int v4 = *(_DWORD *)(a2 + 124);
  if ((v4 & 0x4000) == 0)
  {
LABEL_21:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
LABEL_42:
  int v20 = *(_DWORD *)(a2 + 100);
  *(_DWORD *)(a1 + 124) |= 0x4000u;
  *(_DWORD *)(a1 + 100) = v20;
  int v4 = *(_DWORD *)(a2 + 124);
  if ((v4 & 0x8000) != 0)
  {
LABEL_22:
    int v6 = *(_DWORD *)(a2 + 104);
    *(_DWORD *)(a1 + 124) |= 0x8000u;
    *(_DWORD *)(a1 + 104) = v6;
    int v4 = *(_DWORD *)(a2 + 124);
  }
LABEL_23:
  if ((v4 & 0xFF0000) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v4 & 0x10000) == 0)
  {
    if ((v4 & 0x20000) == 0) {
      goto LABEL_26;
    }
LABEL_45:
    int v22 = *(_DWORD *)(a2 + 112);
    *(_DWORD *)(a1 + 124) |= 0x20000u;
    *(_DWORD *)(a1 + 112) = v22;
    if ((*(_DWORD *)(a2 + 124) & 0x40000) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_46;
  }
  int v21 = *(_DWORD *)(a2 + 108);
  *(_DWORD *)(a1 + 124) |= 0x10000u;
  *(_DWORD *)(a1 + 108) = v21;
  int v4 = *(_DWORD *)(a2 + 124);
  if ((v4 & 0x20000) != 0) {
    goto LABEL_45;
  }
LABEL_26:
  if ((v4 & 0x40000) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
LABEL_46:
  unsigned int v23 = *(_DWORD *)(a2 + 116);
  if (v23 >= 3) {
    sub_100410764();
  }
  *(_DWORD *)(a1 + 124) |= 0x40000u;
  *(_DWORD *)(a1 + 116) = v23;
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10012CA40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10012CA58(uint64_t a1)
{
  *(void *)a1 = off_1008508D0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10012CAAC(uint64_t a1)
{
  *(void *)a1 = off_1008508D0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_10012CB14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 120) = a2;
  return result;
}

uint64_t sub_10012CB1C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008AC3D0;
  if (!qword_1008AC3D0)
  {
    sub_1000EF4F0(0, a2, a3, a4);
    return qword_1008AC3D0;
  }
  return result;
}

void sub_10012CB4C()
{
}

void sub_10012CB8C()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10012CBB0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 124);
  if ((_BYTE)v1)
  {
    *(void *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_DWORD *)(a1 + 104) = 0;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(void *)(a1 + 112) = 0;
    *(_DWORD *)(a1 + 108) = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 29) = 0;
  if (v3) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10012CC08(unint64_t *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = a1 + 2;
  uint64_t v7 = a1 + 6;
  int v8 = a1 + 7;
  int v9 = a1 + 8;
  int v10 = a1 + 9;
  int v11 = a1 + 10;
  int v12 = a1 + 11;
  int v13 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  while (2)
  {
    uint64_t v14 = (char *)*((void *)this + 1);
    if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v14;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v14 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        uint64_t v18 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v18;
          int v19 = v18 + 1;
          *((void *)this + 1) = v19;
        }
        *((_DWORD *)a1 + 31) |= 1u;
        if ((unint64_t)v19 < v17 && *v19 == 21)
        {
          *((void *)this + 1) = v19 + 1;
          goto LABEL_57;
        }
        continue;
      case 2u:
        int v16 = TagFallback & 7;
        if (v16 != 5) {
          goto LABEL_48;
        }
LABEL_57:
        unsigned int v48 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v48) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)a1 + 6) = v48;
        *((_DWORD *)a1 + 31) |= 2u;
        unint64_t v30 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v30 >= *((void *)this + 2) || *v30 != 29) {
          continue;
        }
        *((void *)this + 1) = v30 + 1;
LABEL_61:
        unsigned int v48 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v48) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)a1 + 7) = v48;
        *((_DWORD *)a1 + 31) |= 4u;
        unsigned int v31 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v31 >= *((void *)this + 2) || *v31 != 37) {
          continue;
        }
        *((void *)this + 1) = v31 + 1;
LABEL_65:
        unsigned int v48 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v48) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)a1 + 8) = v48;
        *((_DWORD *)a1 + 31) |= 8u;
        int v32 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 != 45) {
          continue;
        }
        *((void *)this + 1) = v32 + 1;
LABEL_69:
        unsigned int v48 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v48) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)a1 + 9) = v48;
        *((_DWORD *)a1 + 31) |= 0x10u;
        uint64_t v33 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v33 >= *((void *)this + 2) || *v33 != 53) {
          continue;
        }
        *((void *)this + 1) = v33 + 1;
LABEL_73:
        unsigned int v48 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v48) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)a1 + 10) = v48;
        *((_DWORD *)a1 + 31) |= 0x20u;
        int v34 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v34 >= *((void *)this + 2) || *v34 != 61) {
          continue;
        }
        *((void *)this + 1) = v34 + 1;
LABEL_77:
        unsigned int v48 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v48) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)a1 + 11) = v48;
        *((_DWORD *)a1 + 31) |= 0x40u;
        unint64_t v35 = (unsigned char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        if ((unint64_t)v35 >= v20 || *v35 != 64) {
          continue;
        }
        int v21 = v35 + 1;
        *((void *)this + 1) = v21;
LABEL_81:
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v7);
          if (!result) {
            return result;
          }
          uint64_t v36 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }
        else
        {
          unint64_t *v7 = *v21;
          uint64_t v36 = v21 + 1;
          *((void *)this + 1) = v36;
        }
        *((_DWORD *)a1 + 31) |= 0x80u;
        if ((unint64_t)v36 >= v20 || *v36 != 72) {
          continue;
        }
        int v22 = v36 + 1;
        *((void *)this + 1) = v22;
LABEL_89:
        if ((unint64_t)v22 >= v20 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v37 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }
        else
        {
          unint64_t *v8 = *v22;
          int v37 = v22 + 1;
          *((void *)this + 1) = v37;
        }
        *((_DWORD *)a1 + 31) |= 0x100u;
        if ((unint64_t)v37 >= v20 || *v37 != 80) {
          continue;
        }
        unsigned int v23 = v37 + 1;
        *((void *)this + 1) = v23;
LABEL_97:
        if ((unint64_t)v23 >= v20 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v9);
          if (!result) {
            return result;
          }
          unint64_t v38 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }
        else
        {
          *int v9 = *v23;
          unint64_t v38 = v23 + 1;
          *((void *)this + 1) = v38;
        }
        *((_DWORD *)a1 + 31) |= 0x200u;
        if ((unint64_t)v38 >= v20 || *v38 != 88) {
          continue;
        }
        uint64_t v24 = v38 + 1;
        *((void *)this + 1) = v24;
LABEL_105:
        if ((unint64_t)v24 >= v20 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v10);
          if (!result) {
            return result;
          }
          uint64_t v39 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }
        else
        {
          *int v10 = *v24;
          uint64_t v39 = v24 + 1;
          *((void *)this + 1) = v39;
        }
        *((_DWORD *)a1 + 31) |= 0x400u;
        if ((unint64_t)v39 >= v20 || *v39 != 96) {
          continue;
        }
        int v25 = v39 + 1;
        *((void *)this + 1) = v25;
LABEL_113:
        if ((unint64_t)v25 >= v20 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v11);
          if (!result) {
            return result;
          }
          unsigned int v40 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }
        else
        {
          unint64_t *v11 = *v25;
          unsigned int v40 = v25 + 1;
          *((void *)this + 1) = v40;
        }
        *((_DWORD *)a1 + 31) |= 0x800u;
        if ((unint64_t)v40 >= v20 || *v40 != 104) {
          continue;
        }
        int v26 = v40 + 1;
        *((void *)this + 1) = v26;
LABEL_121:
        if ((unint64_t)v26 >= v20 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v12);
          if (!result) {
            return result;
          }
          uint64_t v41 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }
        else
        {
          unint64_t *v12 = *v26;
          uint64_t v41 = v26 + 1;
          *((void *)this + 1) = v41;
        }
        *((_DWORD *)a1 + 31) |= 0x1000u;
        if ((unint64_t)v41 >= v20 || *v41 != 117) {
          continue;
        }
        *((void *)this + 1) = v41 + 1;
LABEL_129:
        unsigned int v48 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v48) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)a1 + 24) = v48;
        *((_DWORD *)a1 + 31) |= 0x2000u;
        unsigned int v42 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v42 >= *((void *)this + 2) || *v42 != 125) {
          continue;
        }
        *((void *)this + 1) = v42 + 1;
LABEL_133:
        unsigned int v48 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v48) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)a1 + 25) = v48;
        *((_DWORD *)a1 + 31) |= 0x4000u;
        unsigned int v43 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v43 < 2 || *v43 != 133 || v43[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v43 + 2;
LABEL_138:
        unsigned int v48 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v48) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)a1 + 26) = v48;
        *((_DWORD *)a1 + 31) |= 0x8000u;
        unsigned int v44 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v44 < 2 || *v44 != 141 || v44[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v44 + 2;
LABEL_143:
        unsigned int v48 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v48) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)a1 + 27) = v48;
        *((_DWORD *)a1 + 31) |= 0x10000u;
        uint64_t v45 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v45 < 2 || *v45 != 149 || v45[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v45 + 2;
LABEL_148:
        unsigned int v48 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v48))
        {
          *((_DWORD *)a1 + 28) = v48;
          *((_DWORD *)a1 + 31) |= 0x20000u;
          unsigned int v46 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v27 = *((void *)this + 2);
          if ((int)v27 - (int)v46 >= 2 && *v46 == 152 && v46[1] == 1)
          {
            int v28 = (char *)(v46 + 2);
            *((void *)this + 1) = v28;
LABEL_153:
            unsigned int v48 = 0;
            if ((unint64_t)v28 >= v27 || *v28 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v48);
              if (!result) {
                return result;
              }
              unsigned int v47 = v48;
            }
            else
            {
              unsigned int v47 = *v28;
              *((void *)this + 1) = v28 + 1;
            }
            if (v47 > 2)
            {
              wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v13, 19, (int)v47);
            }
            else
            {
              *((_DWORD *)a1 + 31) |= 0x40000u;
              *((_DWORD *)a1 + 29) = v47;
            }
            if (*((void *)this + 1) == *((void *)this + 2)
              && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)this + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v16 = TagFallback & 7;
        if (v16 == 5) {
          goto LABEL_61;
        }
        goto LABEL_48;
      case 4u:
        int v16 = TagFallback & 7;
        if (v16 == 5) {
          goto LABEL_65;
        }
        goto LABEL_48;
      case 5u:
        int v16 = TagFallback & 7;
        if (v16 == 5) {
          goto LABEL_69;
        }
        goto LABEL_48;
      case 6u:
        int v16 = TagFallback & 7;
        if (v16 == 5) {
          goto LABEL_73;
        }
        goto LABEL_48;
      case 7u:
        int v16 = TagFallback & 7;
        if (v16 == 5) {
          goto LABEL_77;
        }
        goto LABEL_48;
      case 8u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        int v21 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_81;
      case 9u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        int v22 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_89;
      case 0xAu:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        unsigned int v23 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_97;
      case 0xBu:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        uint64_t v24 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_105;
      case 0xCu:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        int v25 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_113;
      case 0xDu:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        int v26 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_121;
      case 0xEu:
        int v16 = TagFallback & 7;
        if (v16 == 5) {
          goto LABEL_129;
        }
        goto LABEL_48;
      case 0xFu:
        int v16 = TagFallback & 7;
        if (v16 == 5) {
          goto LABEL_133;
        }
        goto LABEL_48;
      case 0x10u:
        int v16 = TagFallback & 7;
        if (v16 == 5) {
          goto LABEL_138;
        }
        goto LABEL_48;
      case 0x11u:
        int v16 = TagFallback & 7;
        if (v16 == 5) {
          goto LABEL_143;
        }
        goto LABEL_48;
      case 0x12u:
        int v16 = TagFallback & 7;
        if (v16 == 5) {
          goto LABEL_148;
        }
        goto LABEL_48;
      case 0x13u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        int v28 = (char *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        goto LABEL_153;
      default:
        int v16 = TagFallback & 7;
LABEL_48:
        if (v16 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v13, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_10012D528(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 124);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 16), (unint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 124);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_29;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v5 + 28), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_31;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(float *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_32;
  }
LABEL_31:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(float *)(v5 + 36), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_33;
  }
LABEL_32:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(float *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_34;
  }
LABEL_33:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(float *)(v5 + 44), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_35;
  }
LABEL_34:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(void *)(v5 + 48), (unint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_36;
  }
LABEL_35:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(void *)(v5 + 56), (unint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_37;
  }
LABEL_36:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(void *)(v5 + 64), (unint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_38;
  }
LABEL_37:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(void *)(v5 + 72), (unint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_39;
  }
LABEL_38:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(void *)(v5 + 80), (unint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_40;
  }
LABEL_39:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(void *)(v5 + 88), (unint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_41;
  }
LABEL_40:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, (int)a2, *(float *)(v5 + 96), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_42;
  }
LABEL_41:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, (int)a2, *(float *)(v5 + 100), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_43;
  }
LABEL_42:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, (int)a2, *(float *)(v5 + 104), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
LABEL_44:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, (int)a2, *(float *)(v5 + 112), a3);
    if ((*(_DWORD *)(v5 + 124) & 0x40000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }
LABEL_43:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, (int)a2, *(float *)(v5 + 108), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x20000) != 0) {
    goto LABEL_44;
  }
LABEL_19:
  if ((v6 & 0x40000) != 0) {
LABEL_20:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, *(_DWORD *)(v5 + 116), (int)a2, a4);
LABEL_21:
  int v9 = *(void **)(v5 + 8);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

uint64_t sub_10012D798(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, unsigned __int8 *a3)
{
  int v4 = *((_DWORD *)this + 31);
  if (v4)
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 2);
    *(unsigned char *)a2 = 8;
    a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v5, a2 + 1, a3);
    int v4 = *((_DWORD *)this + 31);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_23;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v6 = *((_DWORD *)this + 6);
  *(unsigned char *)a2 = 21;
  *(_DWORD *)(a2 + 1) = v6;
  a2 += 5;
  int v4 = *((_DWORD *)this + 31);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_24;
  }
LABEL_23:
  int v7 = *((_DWORD *)this + 7);
  *(unsigned char *)a2 = 29;
  *(_DWORD *)(a2 + 1) = v7;
  a2 += 5;
  int v4 = *((_DWORD *)this + 31);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v8 = *((_DWORD *)this + 8);
  *(unsigned char *)a2 = 37;
  *(_DWORD *)(a2 + 1) = v8;
  a2 += 5;
  int v4 = *((_DWORD *)this + 31);
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }
LABEL_25:
  int v9 = *((_DWORD *)this + 9);
  *(unsigned char *)a2 = 45;
  *(_DWORD *)(a2 + 1) = v9;
  a2 += 5;
  int v4 = *((_DWORD *)this + 31);
  if ((v4 & 0x20) == 0)
  {
LABEL_7:
    if ((v4 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }
LABEL_26:
  int v10 = *((_DWORD *)this + 10);
  *(unsigned char *)a2 = 53;
  *(_DWORD *)(a2 + 1) = v10;
  a2 += 5;
  int v4 = *((_DWORD *)this + 31);
  if ((v4 & 0x40) == 0)
  {
LABEL_8:
    if ((v4 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_28;
  }
LABEL_27:
  int v11 = *((_DWORD *)this + 11);
  *(unsigned char *)a2 = 61;
  *(_DWORD *)(a2 + 1) = v11;
  a2 += 5;
  int v4 = *((_DWORD *)this + 31);
  if ((v4 & 0x80) == 0)
  {
LABEL_9:
    if ((v4 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }
LABEL_28:
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 6);
  *(unsigned char *)a2 = 64;
  a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v12, a2 + 1, a3);
  int v4 = *((_DWORD *)this + 31);
  if ((v4 & 0x100) == 0)
  {
LABEL_10:
    if ((v4 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_29:
  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 7);
  *(unsigned char *)a2 = 72;
  a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v13, a2 + 1, a3);
  int v4 = *((_DWORD *)this + 31);
  if ((v4 & 0x200) == 0)
  {
LABEL_11:
    if ((v4 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 8);
  *(unsigned char *)a2 = 80;
  a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v14, a2 + 1, a3);
  int v4 = *((_DWORD *)this + 31);
  if ((v4 & 0x400) == 0)
  {
LABEL_12:
    if ((v4 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 9);
  *(unsigned char *)a2 = 88;
  a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v15, a2 + 1, a3);
  int v4 = *((_DWORD *)this + 31);
  if ((v4 & 0x800) == 0)
  {
LABEL_13:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_33;
  }
LABEL_32:
  int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 10);
  *(unsigned char *)a2 = 96;
  a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v16, a2 + 1, a3);
  int v4 = *((_DWORD *)this + 31);
  if ((v4 & 0x1000) == 0)
  {
LABEL_14:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_34;
  }
LABEL_33:
  unint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 11);
  *(unsigned char *)a2 = 104;
  a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v17, a2 + 1, a3);
  int v4 = *((_DWORD *)this + 31);
  if ((v4 & 0x2000) == 0)
  {
LABEL_15:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_34:
  int v18 = *((_DWORD *)this + 24);
  *(unsigned char *)a2 = 117;
  *(_DWORD *)(a2 + 1) = v18;
  a2 += 5;
  int v4 = *((_DWORD *)this + 31);
  if ((v4 & 0x4000) == 0)
  {
LABEL_16:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_36;
  }
LABEL_35:
  int v19 = *((_DWORD *)this + 25);
  *(unsigned char *)a2 = 125;
  *(_DWORD *)(a2 + 1) = v19;
  a2 += 5;
  int v4 = *((_DWORD *)this + 31);
  if ((v4 & 0x8000) == 0)
  {
LABEL_17:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_37;
  }
LABEL_36:
  int v20 = *((_DWORD *)this + 26);
  *(_WORD *)a2 = 389;
  *(_DWORD *)(a2 + 2) = v20;
  a2 += 6;
  int v4 = *((_DWORD *)this + 31);
  if ((v4 & 0x10000) == 0)
  {
LABEL_18:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_38;
  }
LABEL_37:
  int v21 = *((_DWORD *)this + 27);
  *(_WORD *)a2 = 397;
  *(_DWORD *)(a2 + 2) = v21;
  a2 += 6;
  int v4 = *((_DWORD *)this + 31);
  if ((v4 & 0x20000) == 0)
  {
LABEL_19:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_45;
    }
LABEL_39:
    unsigned int v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 29);
    *(_WORD *)a2 = 408;
    if ((v23 & 0x80000000) != 0)
    {
      uint64_t v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v23, a2 + 2, a3);
    }
    else
    {
      if (v23 <= 0x7F)
      {
        *(unsigned char *)(a2 + 2) = (_BYTE)v23;
        a2 += 3;
        goto LABEL_45;
      }
      uint64_t v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v23, (int)a2 + 2, a3);
    }
    a2 = v24;
    goto LABEL_45;
  }
LABEL_38:
  int v22 = *((_DWORD *)this + 28);
  *(_WORD *)a2 = 405;
  *(_DWORD *)(a2 + 2) = v22;
  a2 += 6;
  if ((*((_DWORD *)this + 31) & 0x40000) != 0) {
    goto LABEL_39;
  }
LABEL_45:
  unint64_t v27 = (void *)*((void *)this + 1);
  int v26 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v25 = v27;
  if (!v27 || *v25 == v25[1]) {
    return a2;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v26, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_10012DB84(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 124);
  if ((_BYTE)v3)
  {
    if (v3)
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16), (unint64_t)a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 124);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 5;
    }
    if ((v3 & 4) != 0) {
      v4 += 5;
    }
    if ((v3 & 8) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x40) != 0) {
      uint64_t v5 = v4 + 5;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 0x80) != 0)
    {
      uint64_t v5 = v5
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 48), (unint64_t)a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 124);
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      LODWORD(v5) = v5
                  + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 56), (unint64_t)a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 124);
      if ((v3 & 0x200) == 0)
      {
LABEL_24:
        if ((v3 & 0x400) == 0) {
          goto LABEL_25;
        }
        goto LABEL_47;
      }
    }
    else if ((v3 & 0x200) == 0)
    {
      goto LABEL_24;
    }
    LODWORD(v5) = v5
                + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 64), (unint64_t)a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 124);
    if ((v3 & 0x400) == 0)
    {
LABEL_25:
      if ((v3 & 0x800) == 0) {
        goto LABEL_26;
      }
      goto LABEL_48;
    }
LABEL_47:
    LODWORD(v5) = v5
                + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 72), (unint64_t)a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 124);
    if ((v3 & 0x800) == 0)
    {
LABEL_26:
      if ((v3 & 0x1000) == 0)
      {
LABEL_28:
        unsigned int v6 = v5 + 5;
        if ((v3 & 0x2000) == 0) {
          unsigned int v6 = v5;
        }
        if ((v3 & 0x4000) != 0) {
          v6 += 5;
        }
        if ((v3 & 0x8000) != 0) {
          uint64_t v5 = v6 + 6;
        }
        else {
          uint64_t v5 = v6;
        }
        goto LABEL_35;
      }
LABEL_27:
      LODWORD(v5) = v5
                  + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 88), (unint64_t)a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 124);
      goto LABEL_28;
    }
LABEL_48:
    LODWORD(v5) = v5
                + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 80), (unint64_t)a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 124);
    if ((v3 & 0x1000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_27;
  }
LABEL_35:
  if ((v3 & 0xFF0000) != 0)
  {
    unsigned int v7 = v5 + 6;
    if ((v3 & 0x10000) == 0) {
      unsigned int v7 = v5;
    }
    if ((v3 & 0x20000) != 0) {
      uint64_t v5 = v7 + 6;
    }
    else {
      uint64_t v5 = v7;
    }
    if ((v3 & 0x40000) != 0)
    {
      int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 116);
      if ((v8 & 0x80000000) != 0)
      {
        int v9 = 12;
      }
      else if (v8 >= 0x80)
      {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2)
           + 2;
      }
      else
      {
        int v9 = 3;
      }
      uint64_t v5 = (v9 + v5);
    }
  }
  int v10 = *(void **)(a1 + 8);
  if (v10 && *v10 != v10[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 120) = v5;
  return v5;
}

uint64_t sub_10012DD64(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10012C740((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10012DE38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10012DE50(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10012DEDC()
{
  return 1;
}

uint64_t sub_10012DEE4()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1428;
}

void sub_10012DF78(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10012DF8C(uint64_t a1)
{
  *(void *)a1 = off_100850980;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  *(void *)(a1 + 32) = 0;
  return a1;
}

void sub_10012DFDC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10012DFF0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 40);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 40))
  {
    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 40) |= 1u;
    *(void *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 40);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_12:
      int v9 = *(_DWORD *)(a2 + 28);
      *(_DWORD *)(a1 + 40) |= 4u;
      *(_DWORD *)(a1 + 28) = v9;
      if ((*(_DWORD *)(a2 + 40) & 8) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
      goto LABEL_8;
    }
  }
  else if ((*(unsigned char *)(a2 + 40) & 2) == 0)
  {
    goto LABEL_6;
  }
  int v8 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 40) |= 2u;
  *(_DWORD *)(a1 + 24) = v8;
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_7:
  if ((v4 & 8) != 0)
  {
LABEL_8:
    int v5 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 40) |= 8u;
    *(_DWORD *)(a1 + 32) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10012E0F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10012E108(uint64_t a1)
{
  *(void *)a1 = off_100850980;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10012E15C(uint64_t a1)
{
  *(void *)a1 = off_100850980;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_10012E1C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 36) = a2;
  return result;
}

uint64_t sub_10012E1CC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008AC3D8;
  if (!qword_1008AC3D8)
  {
    sub_1000EF4F0(0, a2, a3, a4);
    return qword_1008AC3D8;
  }
  return result;
}

void sub_10012E1FC()
{
}

void sub_10012E23C()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10012E260(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(_DWORD *)(a1 + 32) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 8) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10012E284(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = (unint64_t *)(a1 + 4);
  uint64_t v7 = a1 + 6;
  unsigned int v8 = a1 + 8;
  while (2)
  {
    int v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v13 < v12 && (*v13 & 0x80000000) == 0)
        {
          *unsigned int v6 = *v13;
          uint64_t v14 = v13 + 1;
          *((void *)this + 1) = v14;
LABEL_24:
          a1[10] |= 1u;
          if ((unint64_t)v14 < v12 && *v14 == 16)
          {
            uint64_t v15 = v14 + 1;
            *((void *)this + 1) = v15;
            goto LABEL_27;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
        if (result)
        {
          uint64_t v14 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          goto LABEL_24;
        }
        break;
      case 2u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        uint64_t v15 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
LABEL_27:
        if ((unint64_t)v15 >= v12 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v15;
          int v18 = v15 + 1;
          *((void *)this + 1) = v18;
        }
        a1[10] |= 2u;
        if ((unint64_t)v18 >= v12 || *v18 != 24) {
          continue;
        }
        int v16 = v18 + 1;
        *((void *)this + 1) = v16;
LABEL_35:
        unsigned int v25 = 0;
        if ((unint64_t)v16 >= v12 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
          if (!result) {
            return result;
          }
          unsigned int v19 = v25;
          int v20 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int v19 = *v16;
          int v20 = v16 + 1;
          *((void *)this + 1) = v20;
        }
        a1[7] = v19;
        a1[10] |= 4u;
        if ((unint64_t)v20 >= v12 || *v20 != 32) {
          continue;
        }
        unint64_t v17 = v20 + 1;
        *((void *)this + 1) = v17;
LABEL_43:
        unsigned int v24 = 0;
        if ((unint64_t)v17 >= v12 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v24);
          if (!result) {
            return result;
          }
          unsigned int v21 = v24;
          int v22 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int v21 = *v17;
          int v22 = (unsigned __int8 *)(v17 + 1);
          *((void *)this + 1) = v22;
        }
        a1[8] = v21;
        a1[10] |= 8u;
        if (v22 != (unsigned __int8 *)v12 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_35;
      case 4u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_43;
      default:
        int v11 = TagFallback & 7;
LABEL_18:
        if (v11 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v8, a4))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_10012E55C(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 40);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 16), (unint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_14:
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 28), (int)a2, a4);
      if ((*(_DWORD *)(v5 + 40) & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_5;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_4:
  if ((v6 & 8) != 0) {
LABEL_5:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 32), (int)a2, a4);
LABEL_6:
  int v9 = *(void **)(v5 + 8);
  unsigned int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10012E628(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  char v3 = a2;
  int v5 = *((_DWORD *)this + 10);
  if (v5)
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 2);
    *(unsigned char *)a2 = 8;
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v6, (unint64_t)a2 + 1, a3);
    int v5 = *((_DWORD *)this + 10);
  }
  if ((v5 & 2) != 0)
  {
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    *(unsigned char *)char v3 = 16;
    if (v7 > 0x7F)
    {
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v7;
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  if ((*((unsigned char *)this + 40) & 4) != 0)
  {
    unsigned int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 7);
    *(unsigned char *)char v3 = 24;
    unint64_t v9 = (unint64_t)v3 + 1;
    if ((v8 & 0x80000000) != 0)
    {
      uint64_t v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v8, v9, a3);
    }
    else
    {
      if (v8 <= 0x7F)
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v8;
        char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        goto LABEL_14;
      }
      uint64_t v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v9, a3);
    }
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v10;
  }
LABEL_14:
  if ((*((unsigned char *)this + 40) & 8) != 0)
  {
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 8);
    *(unsigned char *)char v3 = 32;
    unint64_t v12 = (unint64_t)v3 + 1;
    if ((v11 & 0x80000000) != 0)
    {
      uint64_t v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v11, v12, a3);
    }
    else
    {
      if (v11 <= 0x7F)
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v11;
        char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        goto LABEL_21;
      }
      uint64_t v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, v12, a3);
    }
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v13;
  }
LABEL_21:
  int v16 = (void *)*((void *)this + 1);
  uint64_t v15 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v14 = v16;
  if (!v16 || *v14 == v14[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v15, v3, a3);
}

uint64_t sub_10012E75C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 40);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 40))
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16), (unint64_t)a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 40);
      if ((v3 & 2) == 0) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 40) & 2) == 0) {
        goto LABEL_11;
      }
    }
    int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
    if (v5 >= 0x80)
    {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 40);
    }
    else
    {
      int v6 = 2;
    }
    uint64_t v4 = (v6 + v4);
LABEL_11:
    if ((v3 & 4) != 0)
    {
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
      if ((v7 & 0x80000000) != 0)
      {
        int v8 = 11;
      }
      else if (v7 >= 0x80)
      {
        int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2)
           + 1;
        int v3 = *(_DWORD *)(a1 + 40);
      }
      else
      {
        int v8 = 2;
      }
      uint64_t v4 = (v8 + v4);
      if ((v3 & 8) == 0) {
        goto LABEL_26;
      }
    }
    else if ((v3 & 8) == 0)
    {
      goto LABEL_26;
    }
    unint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if ((v9 & 0x80000000) != 0)
    {
      int v10 = 11;
    }
    else if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2)
          + 1;
    }
    else
    {
      int v10 = 2;
    }
    uint64_t v4 = (v10 + v4);
    goto LABEL_26;
  }
  uint64_t v4 = 0;
LABEL_26:
  int v11 = *(void **)(a1 + 8);
  if (v11 && *v11 != v11[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 36) = v4;
  return v4;
}

uint64_t sub_10012E868(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10012DFF0((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10012E93C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10012E954(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10012E9E0()
{
  return 1;
}

uint64_t sub_10012E9E8()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1438;
}

void sub_10012EA7C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10012EA90(uint64_t a1)
{
  *(void *)a1 = off_100850A30;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 64) = 0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return a1;
}

void sub_10012EAE4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10012EAF8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 68);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 68))
  {
    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 68) |= 1u;
    *(void *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 68);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_15;
    }
  }
  else if ((*(unsigned char *)(a2 + 68) & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 68) |= 2u;
  *(void *)(a1 + 24) = v8;
  int v4 = *(_DWORD *)(a2 + 68);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t v9 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 68) |= 4u;
  *(void *)(a1 + 32) = v9;
  int v4 = *(_DWORD *)(a2 + 68);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t v10 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 68) |= 8u;
  *(void *)(a1 + 40) = v10;
  int v4 = *(_DWORD *)(a2 + 68);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_18:
    int v12 = *(_DWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 68) |= 0x20u;
    *(_DWORD *)(a1 + 56) = v12;
    if ((*(_DWORD *)(a2 + 68) & 0x40) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_11;
  }
LABEL_17:
  uint64_t v11 = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 68) |= 0x10u;
  *(void *)(a1 + 48) = v11;
  int v4 = *(_DWORD *)(a2 + 68);
  if ((v4 & 0x20) != 0) {
    goto LABEL_18;
  }
LABEL_10:
  if ((v4 & 0x40) != 0)
  {
LABEL_11:
    int v5 = *(_DWORD *)(a2 + 60);
    *(_DWORD *)(a1 + 68) |= 0x40u;
    *(_DWORD *)(a1 + 60) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10012EC58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10012EC70(uint64_t a1)
{
  *(void *)a1 = off_100850A30;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10012ECC4(uint64_t a1)
{
  *(void *)a1 = off_100850A30;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_10012ED2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 64) = a2;
  return result;
}

void sub_10012ED34()
{
}

void sub_10012ED74()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10012ED98(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 68))
  {
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 15) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10012EDC0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_40;
        }
        *(void *)unsigned int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v23) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v23;
        }
        *(_DWORD *)(a1 + 68) |= 1u;
        uint64_t v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 17) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_40;
        }
LABEL_15:
        *(void *)unsigned int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v23) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v23;
        }
        *(_DWORD *)(a1 + 68) |= 2u;
        uint64_t v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 25) {
          continue;
        }
        *((void *)this + 1) = v11 + 1;
LABEL_20:
        *(void *)unsigned int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v23) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v23;
        }
        *(_DWORD *)(a1 + 68) |= 4u;
        int v12 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 != 33) {
          continue;
        }
        *((void *)this + 1) = v12 + 1;
LABEL_25:
        *(void *)unsigned int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v23) & 1) == 0)return 0; {
        *(void *)(a1 + 40) = *(void *)v23;
        }
        *(_DWORD *)(a1 + 68) |= 8u;
        uint64_t v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 != 41) {
          continue;
        }
        *((void *)this + 1) = v13 + 1;
LABEL_30:
        *(void *)unsigned int v23 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v23))
        {
          *(void *)(a1 + 48) = *(void *)v23;
          *(_DWORD *)(a1 + 68) |= 0x10u;
          uint64_t v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
          if ((unint64_t)v15 < v14 && *v15 == 48)
          {
            int v16 = v15 + 1;
            *((void *)this + 1) = v16;
LABEL_36:
            v23[0] = 0;
            if ((unint64_t)v16 >= v14 || *v16 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v23);
              if (!result) {
                return result;
              }
              unsigned int v17 = v23[0];
              int v18 = (unsigned char *)*((void *)this + 1);
              unint64_t v14 = *((void *)this + 2);
            }
            else
            {
              unsigned int v17 = *v16;
              int v18 = v16 + 1;
              *((void *)this + 1) = v18;
            }
            *(_DWORD *)(a1 + 56) = v17;
            *(_DWORD *)(a1 + 68) |= 0x20u;
            if ((unint64_t)v18 < v14 && *v18 == 56)
            {
              unsigned int v19 = v18 + 1;
              *((void *)this + 1) = v19;
LABEL_49:
              v23[0] = 0;
              if ((unint64_t)v19 >= v14 || *v19 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v23);
                if (!result) {
                  return result;
                }
                unsigned int v21 = v23[0];
                int v22 = (unsigned __int8 *)*((void *)this + 1);
                unint64_t v14 = *((void *)this + 2);
              }
              else
              {
                unsigned int v21 = *v19;
                int v22 = (unsigned __int8 *)(v19 + 1);
                *((void *)this + 1) = v22;
              }
              *(_DWORD *)(a1 + 60) = v21;
              *(_DWORD *)(a1 + 68) |= 0x40u;
              if (v22 == (unsigned __int8 *)v14
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_20;
        }
        goto LABEL_40;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_25;
        }
        goto LABEL_40;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_30;
        }
        goto LABEL_40;
      case 6u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_36;
      case 7u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        unsigned int v19 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_49;
      default:
        int v9 = TagFallback & 7;
LABEL_40:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_10012F16C(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 68);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    int v6 = *(_DWORD *)(v5 + 68);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_20:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 56), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 68) & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x20) != 0) {
    goto LABEL_20;
  }
LABEL_7:
  if ((v6 & 0x40) != 0) {
LABEL_8:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 60), (int)a2, a4);
LABEL_9:
  int v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

uint64_t sub_10012F28C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, unsigned __int8 *a3)
{
  int v4 = *((_DWORD *)this + 17);
  if (v4)
  {
    uint64_t v5 = *((void *)this + 2);
    *(unsigned char *)a2 = 9;
    *(void *)(a2 + 1) = v5;
    a2 += 9;
    int v4 = *((_DWORD *)this + 17);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v6 = *((void *)this + 3);
  *(unsigned char *)a2 = 17;
  *(void *)(a2 + 1) = v6;
  a2 += 9;
  int v4 = *((_DWORD *)this + 17);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t v7 = *((void *)this + 4);
  *(unsigned char *)a2 = 25;
  *(void *)(a2 + 1) = v7;
  a2 += 9;
  int v4 = *((_DWORD *)this + 17);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t v8 = *((void *)this + 5);
  *(unsigned char *)a2 = 33;
  *(void *)(a2 + 1) = v8;
  a2 += 9;
  int v4 = *((_DWORD *)this + 17);
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 0x20) == 0) {
      goto LABEL_19;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t v9 = *((void *)this + 6);
  *(unsigned char *)a2 = 41;
  *(void *)(a2 + 1) = v9;
  a2 += 9;
  if ((*((_DWORD *)this + 17) & 0x20) == 0) {
    goto LABEL_19;
  }
LABEL_13:
  uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 14);
  *(unsigned char *)a2 = 48;
  if ((v10 & 0x80000000) != 0)
  {
    uint64_t v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v10, a2 + 1, a3);
  }
  else
  {
    if (v10 <= 0x7F)
    {
      *(unsigned char *)(a2 + 1) = (_BYTE)v10;
      a2 += 2;
      goto LABEL_19;
    }
    uint64_t v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, (int)a2 + 1, a3);
  }
  a2 = v11;
LABEL_19:
  if ((*((unsigned char *)this + 68) & 0x40) != 0)
  {
    int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 15);
    *(unsigned char *)a2 = 56;
    if ((v12 & 0x80000000) != 0)
    {
      uint64_t v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v12, a2 + 1, a3);
    }
    else
    {
      if (v12 <= 0x7F)
      {
        *(unsigned char *)(a2 + 1) = (_BYTE)v12;
        a2 += 2;
        goto LABEL_26;
      }
      uint64_t v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)a2 + 1, a3);
    }
    a2 = v13;
  }
LABEL_26:
  int v16 = (void *)*((void *)this + 1);
  uint64_t v15 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  unint64_t v14 = v16;
  if (!v16 || *v14 == v14[1]) {
    return a2;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v15, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_10012F530(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 68);
  if (*(unsigned char *)(a1 + 68))
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 0x20) != 0)
    {
      uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
      if ((v6 & 0x80000000) != 0)
      {
        int v7 = 11;
      }
      else if (v6 >= 0x80)
      {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2)
           + 1;
        int v3 = *(_DWORD *)(a1 + 68);
      }
      else
      {
        int v7 = 2;
      }
      uint64_t v5 = (v7 + v5);
    }
    if ((v3 & 0x40) != 0)
    {
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
      if ((v8 & 0x80000000) != 0)
      {
        int v9 = 11;
      }
      else if (v8 >= 0x80)
      {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2)
           + 1;
      }
      else
      {
        int v9 = 2;
      }
      uint64_t v5 = (v9 + v5);
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  uint64_t v10 = *(void **)(a1 + 8);
  if (v10 && *v10 != v10[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 64) = v5;
  return v5;
}

uint64_t sub_10012F628(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10012EAF8((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10012F6FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10012F714(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10012F7A0()
{
  return 1;
}

uint64_t sub_10012F7A8()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1448;
}

void sub_10012F83C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10012F850(uint64_t a1)
{
  *(void *)a1 = off_100850AE0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  return a1;
}

void sub_10012F89C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10012F8B0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      int v5 = *(_DWORD *)(a2 + 24);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(_DWORD *)(a1 + 24) = v5;
      int v4 = *(_DWORD *)(a2 + 32);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 32) |= 2u;
      uint64_t v6 = *(void *)(a1 + 16);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 16);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_1008AC3E8 + 16);
      }
      sub_10012EAF8(v6, v7);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10012F9B0()
{
}

void sub_10012F9E8(void *a1)
{
  *a1 = off_100850AE0;
  if ((void *)qword_1008AC3E8 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10012FA80(void *a1)
{
  sub_10012F9E8(a1);

  operator delete();
}

uint64_t sub_10012FAB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 28) = a2;
  return result;
}

uint64_t sub_10012FAC0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008AC3E8;
  if (!qword_1008AC3E8)
  {
    sub_1000EF4F0(0, a2, a3, a4);
    return qword_1008AC3E8;
  }
  return result;
}

void sub_10012FAF0()
{
}

void sub_10012FB30()
{
}

uint64_t sub_10012FB54(uint64_t this)
{
  uint64_t v1 = this;
  char v2 = *(unsigned char *)(this + 32);
  if (v2)
  {
    *(_DWORD *)(this + 24) = 0;
    if ((v2 & 2) != 0)
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(unsigned char *)(this + 68))
        {
          *(_OWORD *)(this + 32) = 0u;
          *(_OWORD *)(this + 48) = 0u;
          *(_OWORD *)(this + 16) = 0u;
        }
        uint64_t v3 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 60) = 0;
        if (v3) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
  }
  uint64_t v5 = *(void *)(v1 + 8);
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 6) = 0;
  if (v5)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return this;
}

uint64_t sub_10012FBDC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (unsigned int *)(a1 + 24);
  unsigned int v7 = a1 + 8;
  while (1)
  {
    do
    {
      while (1)
      {
        uint64_t v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v8;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v8 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 == 1) {
          break;
        }
        if (TagFallback >> 3 == 2)
        {
          int v10 = TagFallback & 7;
          if (v10 == 2)
          {
            int v11 = *(_DWORD *)(a1 + 32);
            goto LABEL_24;
          }
        }
        else
        {
          int v10 = TagFallback & 7;
        }
LABEL_16:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
      }
        }
      int v10 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      uint64_t v13 = (char *)*((void *)this + 1);
      unint64_t v12 = *((void *)this + 2);
      if ((unint64_t)v13 >= v12 || *v13 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
        if (!result) {
          return result;
        }
        unint64_t v14 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
      }
      else
      {
        *uint64_t v6 = *v13;
        unint64_t v14 = v13 + 1;
        *((void *)this + 1) = v14;
      }
      int v11 = *(_DWORD *)(a1 + 32) | 1;
      *(_DWORD *)(a1 + 32) = v11;
    }
    while ((unint64_t)v14 >= v12 || *v14 != 18);
    *((void *)this + 1) = v14 + 1;
LABEL_24:
    *(_DWORD *)(a1 + 32) = v11 | 2;
    uint64_t v16 = *(void *)(a1 + 16);
    if (!v16) {
      operator new();
    }
    unsigned int v26 = 0;
    unsigned int v17 = (char *)*((void *)this + 1);
    if ((unint64_t)v17 >= *((void *)this + 2) || *v17 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26)) {
        return 0;
      }
    }
    else
    {
      unsigned int v26 = *v17;
      *((void *)this + 1) = v17 + 1;
    }
    int v18 = *((_DWORD *)this + 14);
    int v19 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v18 + 1;
    if (v18 >= v19) {
      return 0;
    }
    int v20 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v26);
    if (!sub_10012EDC0(v16, this, v21, v22) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v20);
    int v23 = *((_DWORD *)this + 14);
    BOOL v24 = __OFSUB__(v23, 1);
    int v25 = v23 - 1;
    if (v25 < 0 == v24) {
      *((_DWORD *)this + 14) = v25;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

void sub_10012FE1C()
{
}

uint64_t sub_10012FE40(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 32);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 24), a2, a4);
    int v6 = *(_DWORD *)(v5 + 32);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(void *)(v5 + 16);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1008AC3E8 + 16);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  int v10 = *(void **)(v5 + 8);
  int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v8 = v10;
  if (v10 && *v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10012FEDC(wireless_diagnostics::google::protobuf::internal::WireFormat *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  if (*((unsigned char *)this + 32))
  {
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    *(unsigned char *)a2 = 8;
    if (v4 > 0x7F)
    {
      a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v4, (int)a2 + 1, a3);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v4;
      a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
  }
  if ((*((unsigned char *)this + 32) & 2) != 0)
  {
    uint64_t v5 = (unsigned int *)*((void *)this + 2);
    if (!v5) {
      uint64_t v5 = *(unsigned int **)(qword_1008AC3E8 + 16);
    }
    *(unsigned char *)a2 = 18;
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v5[16];
    if (v6 > 0x7F)
    {
      uint64_t v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, (int)a2 + 1, a3);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v6;
      uint64_t v7 = (uint64_t)a2 + 2;
    }
    a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10012F28C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v5, v7, a3);
  }
  int v10 = (void *)*((void *)this + 1);
  int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v8 = v10;
  if (!v10 || *v8 == v8[1]) {
    return a2;
  }

  return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v9, a2, a3);
}

uint64_t sub_10012FFC4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  char v3 = *(unsigned char *)(a1 + 32);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 32))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
      if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)+ 1;
        if ((*(_DWORD *)(a1 + 32) & 2) == 0) {
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_16;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 32) & 2) == 0) {
        goto LABEL_16;
      }
    }
    uint64_t v6 = *(void *)(a1 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1008AC3E8 + 16);
    }
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10012F530(v6, a2);
    int v8 = (int)v7;
    if (v7 >= 0x80) {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
    }
    else {
      int v9 = 1;
    }
    uint64_t v4 = (v4 + v8 + v9 + 1);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_16:
  int v10 = *(void **)(a1 + 8);
  if (v10 && *v10 != v10[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

uint64_t sub_10013009C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10012F8B0((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100130170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100130188(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100130214()
{
  return 1;
}

uint64_t sub_10013021C()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1458;
}

void sub_1001302B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001302C4(uint64_t a1)
{
  *(void *)a1 = off_100850B90;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_DWORD *)(a1 + 44) = 0;
  *(_DWORD *)(a1 + 48) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  return a1;
}

void sub_100130318(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10013032C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 48);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 48))
  {
    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 48) |= 1u;
    *(void *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 48);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a2 + 48) & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 48) |= 2u;
  *(void *)(a1 + 24) = v8;
  int v4 = *(_DWORD *)(a2 + 48);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t v9 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 48) |= 4u;
  *(void *)(a1 + 32) = v9;
  int v4 = *(_DWORD *)(a2 + 48);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
LABEL_16:
    char v11 = *(unsigned char *)(a2 + 41);
    *(_DWORD *)(a1 + 48) |= 0x10u;
    *(unsigned char *)(a1 + 41) = v11;
    if ((*(_DWORD *)(a2 + 48) & 0x20) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_10;
  }
LABEL_15:
  char v10 = *(unsigned char *)(a2 + 40);
  *(_DWORD *)(a1 + 48) |= 8u;
  *(unsigned char *)(a1 + 40) = v10;
  int v4 = *(_DWORD *)(a2 + 48);
  if ((v4 & 0x10) != 0) {
    goto LABEL_16;
  }
LABEL_9:
  if ((v4 & 0x20) != 0)
  {
LABEL_10:
    char v5 = *(unsigned char *)(a2 + 42);
    *(_DWORD *)(a1 + 48) |= 0x20u;
    *(unsigned char *)(a1 + 42) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10013046C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100130484(uint64_t a1)
{
  *(void *)a1 = off_100850B90;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001304D8(uint64_t a1)
{
  *(void *)a1 = off_100850B90;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100130540(uint64_t result, int a2)
{
  *(_DWORD *)(result + 44) = a2;
  return result;
}

void sub_100130548()
{
}

void sub_100130588()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001305AC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(_DWORD *)(a1 + 39) = 0;
    *(void *)(a1 + 32) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 10) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1001305D4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (unint64_t *)(a1 + 32);
  unsigned int v7 = a1 + 8;
  while (2)
  {
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if (v10 != 1) {
          goto LABEL_29;
        }
        *(void *)unsigned int v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v26) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v26;
        }
        *(_DWORD *)(a1 + 48) |= 1u;
        char v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 17) {
          continue;
        }
        *((void *)this + 1) = v11 + 1;
        goto LABEL_15;
      case 2u:
        int v10 = TagFallback & 7;
        if (v10 != 1) {
          goto LABEL_29;
        }
LABEL_15:
        *(void *)unsigned int v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v26) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v26;
        }
        *(_DWORD *)(a1 + 48) |= 2u;
        uint64_t v13 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v13 >= v12 || *v13 != 24) {
          continue;
        }
        unint64_t v14 = v13 + 1;
        *((void *)this + 1) = v14;
LABEL_21:
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!result) {
            return result;
          }
          uint64_t v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v6 = *v14;
          uint64_t v15 = v14 + 1;
          *((void *)this + 1) = v15;
        }
        *(_DWORD *)(a1 + 48) |= 4u;
        if ((unint64_t)v15 >= v12 || *v15 != 32) {
          continue;
        }
        uint64_t v16 = v15 + 1;
        *((void *)this + 1) = v16;
LABEL_38:
        v26[0] = 0;
        if ((unint64_t)v16 >= v12 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v26);
          if (!result) {
            return result;
          }
          unsigned int v20 = v26[0];
          uint64_t v21 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int v20 = *v16;
          uint64_t v21 = v16 + 1;
          *((void *)this + 1) = v21;
        }
        *(unsigned char *)(a1 + 40) = v20 != 0;
        *(_DWORD *)(a1 + 48) |= 8u;
        if ((unint64_t)v21 >= v12 || *v21 != 40) {
          continue;
        }
        unsigned int v17 = v21 + 1;
        *((void *)this + 1) = v17;
LABEL_46:
        v26[0] = 0;
        if ((unint64_t)v17 >= v12 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v26);
          if (!result) {
            return result;
          }
          unsigned int v22 = v26[0];
          int v23 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int v22 = *v17;
          int v23 = v17 + 1;
          *((void *)this + 1) = v23;
        }
        *(unsigned char *)(a1 + 41) = v22 != 0;
        *(_DWORD *)(a1 + 48) |= 0x10u;
        if ((unint64_t)v23 >= v12 || *v23 != 48) {
          continue;
        }
        int v18 = v23 + 1;
        *((void *)this + 1) = v18;
LABEL_54:
        v26[0] = 0;
        if ((unint64_t)v18 >= v12 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v26);
          if (!result) {
            return result;
          }
          unsigned int v24 = v26[0];
          int v25 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int v24 = *v18;
          int v25 = (unsigned __int8 *)(v18 + 1);
          *((void *)this + 1) = v25;
        }
        *(unsigned char *)(a1 + 42) = v24 != 0;
        *(_DWORD *)(a1 + 48) |= 0x20u;
        if (v25 != (unsigned __int8 *)v12 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        unint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_21;
      case 4u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        uint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_38;
      case 5u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        unsigned int v17 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_46;
      case 6u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_54;
      default:
        int v10 = TagFallback & 7;
LABEL_29:
        if (v10 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_100130978(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 48);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(v5 + 32), (unint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_18:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 41), (BOOL)a2, a4);
    if ((*(_DWORD *)(v5 + 48) & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 40), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x10) != 0) {
    goto LABEL_18;
  }
LABEL_6:
  if ((v6 & 0x20) != 0) {
LABEL_7:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 42), (BOOL)a2, a4);
LABEL_8:
  uint64_t v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

uint64_t sub_100130A7C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, unsigned __int8 *a3)
{
  int v4 = *((_DWORD *)this + 12);
  if (v4)
  {
    uint64_t v10 = *((void *)this + 2);
    *(unsigned char *)a2 = 9;
    *(void *)(a2 + 1) = v10;
    a2 += 9;
    int v4 = *((_DWORD *)this + 12);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v11 = *((void *)this + 3);
  *(unsigned char *)a2 = 17;
  *(void *)(a2 + 1) = v11;
  a2 += 9;
  int v4 = *((_DWORD *)this + 12);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  unint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 4);
  *(unsigned char *)a2 = 24;
  a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v12, a2 + 1, a3);
  int v4 = *((_DWORD *)this + 12);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_18:
    char v14 = *((unsigned char *)this + 41);
    *(unsigned char *)a2 = 40;
    *(unsigned char *)(a2 + 1) = v14;
    a2 += 2;
    if ((*((_DWORD *)this + 12) & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_17:
  char v13 = *((unsigned char *)this + 40);
  *(unsigned char *)a2 = 32;
  *(unsigned char *)(a2 + 1) = v13;
  a2 += 2;
  int v4 = *((_DWORD *)this + 12);
  if ((v4 & 0x10) != 0) {
    goto LABEL_18;
  }
LABEL_6:
  if ((v4 & 0x20) != 0)
  {
LABEL_7:
    char v5 = *((unsigned char *)this + 42);
    *(unsigned char *)a2 = 48;
    *(unsigned char *)(a2 + 1) = v5;
    a2 += 2;
  }
LABEL_8:
  uint64_t v8 = (void *)*((void *)this + 1);
  unsigned int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v6 = v8;
  if (!v8 || *v6 == v6[1]) {
    return a2;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v7, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_100130C04(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 48);
  if (*(unsigned char *)(a1 + 48))
  {
    if ((v3 & 2) != 0) {
      int v4 = ((v3 << 31 >> 31) & 9) + 9;
    }
    else {
      int v4 = (v3 << 31 >> 31) & 9;
    }
    if ((v3 & 4) != 0)
    {
      v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 32), (unint64_t)a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 48);
    }
    unsigned int v5 = v4 + 2;
    if ((v3 & 8) == 0) {
      unsigned int v5 = v4;
    }
    if ((v3 & 0x10) != 0) {
      v5 += 2;
    }
    if ((v3 & 0x20) != 0) {
      uint64_t v6 = v5 + 2;
    }
    else {
      uint64_t v6 = v5;
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
  unsigned int v7 = *(void **)(a1 + 8);
  if (v7 && *v7 != v7[1]) {
    uint64_t v6 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v6;
  }
  *(_DWORD *)(a1 + 44) = v6;
  return v6;
}

uint64_t sub_100130CB0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10013032C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100130D84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100130D9C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100130E28()
{
  return 1;
}

uint64_t sub_100130E30()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1468;
}

void sub_100130EC4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100130ED8(uint64_t a1)
{
  *(void *)a1 = off_100850C40;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  *(void *)(a1 + 32) = 0;
  return a1;
}

void sub_100130F28(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100130F3C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 40);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 40))
    {
      uint64_t v5 = *(void *)(a2 + 16);
      *(_DWORD *)(a1 + 40) |= 1u;
      *(void *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 40);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
        }
LABEL_10:
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v7 = *(void *)(a1 + 24);
        if (!v7) {
          operator new();
        }
        uint64_t v8 = *(void *)(a2 + 24);
        if (!v8) {
          uint64_t v8 = *(void *)(qword_1008AC3F8 + 24);
        }
        sub_10013032C(v7, v8);
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
    }
    else if ((*(unsigned char *)(a2 + 40) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v6 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 40) |= 2u;
    *(_DWORD *)(a1 + 32) = v6;
    if ((*(_DWORD *)(a2 + 40) & 4) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_10;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100131064()
{
}

void sub_10013109C(void *a1)
{
  *a1 = off_100850C40;
  if ((void *)qword_1008AC3F8 != a1)
  {
    uint64_t v2 = a1[3];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100131134(void *a1)
{
  sub_10013109C(a1);

  operator delete();
}

uint64_t sub_10013116C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 36) = a2;
  return result;
}

uint64_t sub_100131174(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008AC3F8;
  if (!qword_1008AC3F8)
  {
    sub_1000EF4F0(0, a2, a3, a4);
    return qword_1008AC3F8;
  }
  return result;
}

void sub_1001311A4()
{
}

void sub_1001311E4()
{
}

uint64_t sub_100131208(uint64_t this)
{
  uint64_t v1 = this;
  char v2 = *(unsigned char *)(this + 40);
  if (v2)
  {
    *(void *)(this + 16) = 0;
    *(_DWORD *)(this + 32) = 0;
    if ((v2 & 4) != 0)
    {
      this = *(void *)(this + 24);
      if (this)
      {
        if (*(unsigned char *)(this + 48))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
          *(_DWORD *)(this + 39) = 0;
          *(void *)(this + 32) = 0;
        }
        uint64_t v3 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 40) = 0;
        if (v3) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
  }
  uint64_t v5 = *(void *)(v1 + 8);
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 8) = 0;
  if (v5)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return this;
}

uint64_t sub_100131294(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (unint64_t *)(a1 + 16);
  uint64_t v7 = (unsigned int *)(a1 + 32);
  unsigned int v8 = a1 + 8;
  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          uint64_t v9 = (char *)*((void *)this + 1);
          if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v9;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v9 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v11 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v12 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_19;
          }
          uint64_t v15 = (char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
          if ((unint64_t)v15 >= v14 || *v15 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
            if (!result) {
              return result;
            }
            uint64_t v16 = (unsigned char *)*((void *)this + 1);
            unint64_t v14 = *((void *)this + 2);
          }
          else
          {
            *int v6 = *v15;
            uint64_t v16 = v15 + 1;
            *((void *)this + 1) = v16;
          }
          *(_DWORD *)(a1 + 40) |= 1u;
          if ((unint64_t)v16 < v14 && *v16 == 16)
          {
            unsigned int v17 = v16 + 1;
            *((void *)this + 1) = v17;
            goto LABEL_27;
          }
        }
        if (v11 == 2) {
          break;
        }
        if (v11 == 3)
        {
          int v12 = TagFallback & 7;
          if (v12 == 2)
          {
            int v13 = *(_DWORD *)(a1 + 40);
            goto LABEL_35;
          }
        }
        else
        {
          int v12 = TagFallback & 7;
        }
LABEL_19:
        if (v12 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v8, a4) & 1) == 0)return 0; {
      }
        }
      int v12 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_19;
      }
      unsigned int v17 = (char *)*((void *)this + 1);
      unint64_t v14 = *((void *)this + 2);
LABEL_27:
      if ((unint64_t)v17 >= v14 || *v17 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
        if (!result) {
          return result;
        }
        int v19 = (unsigned char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
      }
      else
      {
        unsigned int *v7 = *v17;
        int v19 = v17 + 1;
        *((void *)this + 1) = v19;
      }
      int v13 = *(_DWORD *)(a1 + 40) | 2;
      *(_DWORD *)(a1 + 40) = v13;
    }
    while ((unint64_t)v19 >= v14 || *v19 != 26);
    *((void *)this + 1) = v19 + 1;
LABEL_35:
    *(_DWORD *)(a1 + 40) = v13 | 4;
    uint64_t v20 = *(void *)(a1 + 24);
    if (!v20) {
      operator new();
    }
    unsigned int v30 = 0;
    uint64_t v21 = (char *)*((void *)this + 1);
    if ((unint64_t)v21 >= *((void *)this + 2) || *v21 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v30)) {
        return 0;
      }
    }
    else
    {
      unsigned int v30 = *v21;
      *((void *)this + 1) = v21 + 1;
    }
    int v22 = *((_DWORD *)this + 14);
    int v23 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v22 + 1;
    if (v22 >= v23) {
      return 0;
    }
    int v24 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v30);
    if (!sub_1001305D4(v20, this, v25, v26) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v24);
    int v27 = *((_DWORD *)this + 14);
    BOOL v28 = __OFSUB__(v27, 1);
    int v29 = v27 - 1;
    if (v29 < 0 == v28) {
      *((_DWORD *)this + 14) = v29;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

void sub_100131558()
{
}

uint64_t sub_10013157C(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 40);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 32), a2, a4);
    if ((*(_DWORD *)(v5 + 40) & 4) == 0) {
      goto LABEL_10;
    }
    goto LABEL_7;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 16), (unint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    goto LABEL_10;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v5 + 24);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1008AC3F8 + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
LABEL_10:
  uint64_t v10 = *(void **)(v5 + 8);
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v8 = v10;
  if (v10 && *v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10013163C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  int v4 = *((_DWORD *)this + 10);
  if (v4)
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 2);
    *(unsigned char *)a2 = 8;
    a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v5, (unint64_t)a2 + 1, a3);
    int v4 = *((_DWORD *)this + 10);
  }
  if ((v4 & 2) != 0)
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    *(unsigned char *)a2 = 16;
    if (v6 > 0x7F)
    {
      a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, (int)a2 + 1, a3);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v6;
      a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
  }
  if ((*((unsigned char *)this + 40) & 4) != 0)
  {
    uint64_t v7 = (unsigned int *)*((void *)this + 3);
    if (!v7) {
      uint64_t v7 = *(unsigned int **)(qword_1008AC3F8 + 24);
    }
    *(unsigned char *)a2 = 26;
    unsigned int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7[11];
    if (v8 > 0x7F)
    {
      uint64_t v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)a2 + 1, a3);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v8;
      uint64_t v9 = (uint64_t)a2 + 2;
    }
    a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100130A7C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v7, v9, a3);
  }
  int v12 = (void *)*((void *)this + 1);
  unsigned int v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v10 = v12;
  if (!v12 || *v10 == v10[1]) {
    return a2;
  }

  return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v11, a2, a3);
}

uint64_t sub_100131740(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 40);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_18;
  }
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16), (unint64_t)a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 40);
    if ((v3 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 40) & 2) == 0) {
      goto LABEL_11;
    }
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 40);
  }
  else
  {
    int v6 = 2;
  }
  uint64_t v4 = (v6 + v4);
LABEL_11:
  if ((v3 & 4) != 0)
  {
    uint64_t v7 = *(void *)(a1 + 24);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1008AC3F8 + 24);
    }
    unsigned int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100130C04(v7, a2);
    int v9 = (int)v8;
    if (v8 >= 0x80) {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
    }
    else {
      int v10 = 1;
    }
    uint64_t v4 = (v4 + v9 + v10 + 1);
  }
LABEL_18:
  unsigned int v11 = *(void **)(a1 + 8);
  if (v11 && *v11 != v11[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 36) = v4;
  return v4;
}

uint64_t sub_10013182C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100130F3C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100131900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100131918(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001319A4()
{
  return 1;
}

uint64_t sub_1001319AC()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1478;
}

void sub_100131A40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100131A54(uint64_t a1)
{
  *(void *)a1 = off_100850CF0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_DWORD *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return a1;
}

void sub_100131AA4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100131AB8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 48);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 48))
  {
    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 48) |= 1u;
    *(void *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 48);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_12:
      uint64_t v9 = *(void *)(a2 + 24);
      *(_DWORD *)(a1 + 48) |= 4u;
      *(void *)(a1 + 24) = v9;
      if ((*(_DWORD *)(a2 + 48) & 8) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
      goto LABEL_8;
    }
  }
  else if ((*(unsigned char *)(a2 + 48) & 2) == 0)
  {
    goto LABEL_6;
  }
  int v8 = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) |= 2u;
  *(_DWORD *)(a1 + 40) = v8;
  int v4 = *(_DWORD *)(a2 + 48);
  if ((v4 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_7:
  if ((v4 & 8) != 0)
  {
LABEL_8:
    uint64_t v5 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 48) |= 8u;
    *(void *)(a1 + 32) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100131BB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100131BD0(uint64_t a1)
{
  *(void *)a1 = off_100850CF0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100131C24(uint64_t a1)
{
  *(void *)a1 = off_100850CF0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100131C8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 44) = a2;
  return result;
}

uint64_t sub_100131C94(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008AC400;
  if (!qword_1008AC400)
  {
    sub_1000EF4F0(0, a2, a3, a4);
    return qword_1008AC400;
  }
  return result;
}

void sub_100131CC4()
{
}

void sub_100131D04()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100131D28(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(_DWORD *)(a1 + 40) = 0;
    *(void *)(a1 + 32) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 10) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100131D50(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (unint64_t *)(a1 + 16);
  uint64_t v7 = (unsigned int *)(a1 + 40);
  unsigned int v8 = a1 + 8;
  while (2)
  {
    uint64_t v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!result) {
            return result;
          }
          unint64_t v14 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v13;
          unint64_t v14 = v13 + 1;
          *((void *)this + 1) = v14;
        }
        *(_DWORD *)(a1 + 48) |= 1u;
        if ((unint64_t)v14 < v12 && *v14 == 16)
        {
          uint64_t v15 = v14 + 1;
          *((void *)this + 1) = v15;
          goto LABEL_26;
        }
        continue;
      case 2u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        uint64_t v15 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
LABEL_26:
        if ((unint64_t)v15 >= v12 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          unsigned int v17 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v15;
          unsigned int v17 = v15 + 1;
          *((void *)this + 1) = v17;
        }
        *(_DWORD *)(a1 + 48) |= 2u;
        if ((unint64_t)v17 >= v12 || *v17 != 25) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
LABEL_34:
        unint64_t v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v19) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 24) = v19;
        *(_DWORD *)(a1 + 48) |= 4u;
        int v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 != 33) {
          continue;
        }
        *((void *)this + 1) = v18 + 1;
LABEL_38:
        unint64_t v19 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v19))
        {
          *(void *)(a1 + 32) = v19;
          *(_DWORD *)(a1 + 48) |= 8u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v11 = TagFallback & 7;
        if (v11 == 1) {
          goto LABEL_34;
        }
        goto LABEL_18;
      case 4u:
        int v11 = TagFallback & 7;
        if (v11 != 1) {
          goto LABEL_18;
        }
        goto LABEL_38;
      default:
        int v11 = TagFallback & 7;
LABEL_18:
        if (v11 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v8, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100131FE4(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 48);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 16), (unint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_14:
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 24), a3);
      if ((*(_DWORD *)(v5 + 48) & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_5;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 40), a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_4:
  if ((v6 & 8) != 0) {
LABEL_5:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 32), a3);
LABEL_6:
  uint64_t v9 = *(void **)(v5 + 8);
  unsigned int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

unsigned char *sub_1001320B0(wireless_diagnostics::google::protobuf::internal::WireFormat *this, unsigned char *a2, unsigned __int8 *a3)
{
  int v4 = *((_DWORD *)this + 12);
  if (v4)
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 2);
    *a2 = 8;
    a2 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v5, (unint64_t)(a2 + 1), a3);
    int v4 = *((_DWORD *)this + 12);
  }
  if ((v4 & 2) != 0)
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    *a2 = 16;
    if (v6 > 0x7F)
    {
      a2 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, (int)a2 + 1, a3);
    }
    else
    {
      a2[1] = (_BYTE)v6;
      a2 += 2;
    }
  }
  int v7 = *((_DWORD *)this + 12);
  if ((v7 & 4) != 0)
  {
    uint64_t v8 = *((void *)this + 3);
    *a2 = 25;
    *(void *)(a2 + 1) = v8;
    a2 += 9;
    int v7 = *((_DWORD *)this + 12);
  }
  if ((v7 & 8) != 0)
  {
    uint64_t v9 = *((void *)this + 4);
    *a2 = 33;
    *(void *)(a2 + 1) = v9;
    a2 += 9;
  }
  unint64_t v12 = (void *)*((void *)this + 1);
  int v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v10 = v12;
  if (!v12 || *v10 == v10[1]) {
    return a2;
  }

  return (unsigned char *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v11, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_100132204(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 48);
  if (!(_BYTE)v3)
  {
    uint64_t v5 = 0;
    goto LABEL_16;
  }
  if ((*(unsigned char *)(a1 + 48) & 1) == 0)
  {
    unsigned int v4 = 0;
    if ((*(unsigned char *)(a1 + 48) & 2) == 0) {
      goto LABEL_11;
    }
LABEL_7:
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
    if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 48);
    }
    else
    {
      int v7 = 2;
    }
    v4 += v7;
    goto LABEL_11;
  }
  unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16), (unint64_t)a2)+ 1;
  int v3 = *(_DWORD *)(a1 + 48);
  if ((v3 & 2) != 0) {
    goto LABEL_7;
  }
LABEL_11:
  unsigned int v8 = v4 + 9;
  if ((v3 & 4) == 0) {
    unsigned int v8 = v4;
  }
  if ((v3 & 8) != 0) {
    uint64_t v5 = v8 + 9;
  }
  else {
    uint64_t v5 = v8;
  }
LABEL_16:
  uint64_t v9 = *(void **)(a1 + 8);
  if (v9 && *v9 != v9[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 44) = v5;
  return v5;
}

uint64_t sub_1001322BC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100131AB8((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100132390(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001323A8(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100132434()
{
  return 1;
}

uint64_t sub_10013243C()
{
  uint64_t v0 = qword_1008A1540;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000ECE50;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1488;
}

void sub_1001324D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001324E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 144);
}

uint64_t sub_1001324EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t sub_1001324F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_1001324FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 80);
}

uint64_t sub_100132504(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_10013250C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_100132514(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

uint64_t sub_10013251C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_100132524(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t sub_10013252C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_100132534(uint64_t a1)
{
  return *(unsigned int *)(a1 + 128);
}

uint64_t sub_10013253C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 92);
}

uint64_t sub_100132544(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_10013254C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 68);
}

uint64_t sub_100132554(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_10013255C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 72);
}

uint64_t sub_100132564(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_10013256C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_100132574(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_10013257C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_100132584(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_10013258C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 84);
}

uint64_t sub_100132594(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_10013259C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 68);
}

uint64_t sub_1001325A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 116);
}

uint64_t sub_1001325AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_1001325B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 68);
}

uint64_t sub_1001325BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_1001325C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1001325CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1001325D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1001325DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 84);
}

uint64_t sub_1001325E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_1001325EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_1001325F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_1001325FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 80);
}

uint64_t sub_100132604(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60);
}

uint64_t sub_10013260C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_100132614(uint64_t a1)
{
  return *(unsigned int *)(a1 + 68);
}

uint64_t sub_10013261C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_100132624(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_10013262C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_100132634(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_10013263C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_100132644(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_10013264C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 76);
}

uint64_t sub_100132654(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t sub_10013265C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_100132664(uint64_t a1)
{
  return *(unsigned int *)(a1 + 136);
}

uint64_t sub_10013266C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_100132674(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60);
}

uint64_t sub_10013267C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_100132684(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_10013268C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_100132694(uint64_t a1)
{
  return *(unsigned int *)(a1 + 108);
}

uint64_t sub_10013269C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_1001326A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 100);
}

uint64_t sub_1001326AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_1001326B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_1001326BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_1001326C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1001326CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1001326D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_1001326DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 120);
}

uint64_t sub_1001326E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_1001326EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

uint64_t sub_1001326F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_1001326FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_100132704(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_10013270C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_100132714()
{
}

void sub_100132754()
{
}

void sub_100132778()
{
}

void sub_1001327B8()
{
}

void sub_1001327DC()
{
}

void sub_10013281C()
{
}

void sub_100132840()
{
}

void sub_100132880()
{
}

void sub_1001328A4()
{
}

void sub_1001328E4()
{
}

void sub_100132908()
{
}

void sub_100132948()
{
}

uint64_t sub_100132970(uint64_t a1, void *a2)
{
  uint64_t v2 = a2[1];
  if (*a2 == v2) {
    return 1;
  }
  uint64_t v4 = *a2 + 1;
  do
  {
    uint64_t result = sub_1001329CC(a1, *(unsigned __int8 *)(v4 - 1));
    if (result) {
      BOOL v6 = v4 == v2;
    }
    else {
      BOOL v6 = 1;
    }
    ++v4;
  }
  while (!v6);
  return result;
}

uint64_t sub_1001329CC(uint64_t a1, int a2)
{
  uint64_t v4 = *(void *)a1;
  if ((a2 & 0xFFFFFFDF) == 0x5D && *(unsigned char *)(a1 + 16) != 0) {
    sub_1000EC560(*(void *)a1);
  }
  sub_1000EC560(v4);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 24))(v4);
  if (result) {
    *(unsigned char *)(a1 + 16) = a2 == 126;
  }
  return result;
}

void sub_100132A60(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  sub_100132C68(a1, a2, a3, a4);
  wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v4);
  sub_100004950(__p, "CLPLogEntry.proto");
  uint64_t FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName();
  uint64_t v6 = FileByName;
  if (v8 < 0)
  {
    operator delete(__p[0]);
    if (v6) {
      goto LABEL_6;
    }
  }
  else if (FileByName)
  {
    goto LABEL_6;
  }
  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)__p);
LABEL_6:
  qword_1008A1548 = *(void *)(v6 + 80);
  operator new();
}

void sub_100132C14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

void sub_100132C68(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_1008A1568 & 1) == 0)
  {
    byte_1008A1568 = 1;
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPLogEntry.pb.cc", a4);
    sub_1000D3CD8(v4, v5, v6, v7);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)"\n\x11CLPLogEntry.proto\x12\fCLP.LogEntry\x1A\x1BCLPPrivateDataCapture.proto\"\xA6\x02\n\bLogEntry\x12;\n"
                                                                "\x11event_record_time\x18\x01 \x01(\v2 .CLP.LogEntry.Log"
                                                                "Entry.TimeStamp\x12J\n"
                                                                "\x14private_data_capture\x18\x04 \x01(\v2,.CLP.LogEntry."
                                                                "PrivateData.PrivateDataCapture\x1A\x8A\x01\n"
                                                                "\tTimeStamp\x12\x1A\n"
                                                                "\x12cf_absolute_time_s\x18\x01 \x01(\x01\x12\x1C\n"
                                                                "\x14mach_absolute_time_s\x18\x02 \x01(\x01\x12\x1E\n"
                                                                "\x16mach_continuous_time_s\x18\x03 \x01(\x01\x12#\n"
                                                                "\x1Bpipelined_monotonic_time_ns\x18\x04 \x01(\x03*\x04\b\x02\x10\x03",
      (const void *)0x167,
      v8);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile();
    operator new();
  }
}

void sub_100132D70()
{
}

uint64_t sub_100132DB0()
{
  if (qword_1008AC408) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC408 + 8))(qword_1008AC408);
  }
  if (qword_1008A1550) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A1550 + 8))(qword_1008A1550);
  }
  if (qword_1008AC410) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC410 + 8))(qword_1008AC410);
  }
  uint64_t result = qword_1008A1560;
  if (qword_1008A1560)
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)qword_1008A1560 + 8);
    return v1();
  }
  return result;
}

uint64_t sub_100132E98()
{
  uint64_t v0 = qword_1008A1570;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v3[1] = sub_100132A60;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
  if (!qword_1008AC408) {
    ((void (*)(void))sub_100132C68)();
  }
  uint64_t v1 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC410) {
    sub_100132C68(v1);
  }
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
}

void sub_100132F64(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100132F80(uint64_t a1)
{
  *(void *)a1 = off_100851430;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return a1;
}

void sub_100132FD0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100132FE4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 52);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 52))
  {
    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 52) |= 1u;
    *(void *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 52);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_12:
      uint64_t v9 = *(void *)(a2 + 32);
      *(_DWORD *)(a1 + 52) |= 4u;
      *(void *)(a1 + 32) = v9;
      if ((*(_DWORD *)(a2 + 52) & 8) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
      goto LABEL_8;
    }
  }
  else if ((*(unsigned char *)(a2 + 52) & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 52) |= 2u;
  *(void *)(a1 + 24) = v8;
  int v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_7:
  if ((v4 & 8) != 0)
  {
LABEL_8:
    uint64_t v5 = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 52) |= 8u;
    *(void *)(a1 + 40) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001330E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001330FC(uint64_t a1)
{
  *(void *)a1 = off_100851430;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100133150(uint64_t a1)
{
  *(void *)a1 = off_100851430;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1001331B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) = a2;
  return result;
}

void sub_1001331C0()
{
}

void sub_100133200()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100133224(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 52))
  {
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 11) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100133248(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_25;
        }
        unint64_t v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v18) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v18;
        *(_DWORD *)(a1 + 52) |= 1u;
        int v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 17) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_25;
        }
LABEL_15:
        unint64_t v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v18) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 24) = v18;
        *(_DWORD *)(a1 + 52) |= 2u;
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 25) {
          continue;
        }
        *((void *)this + 1) = v11 + 1;
LABEL_20:
        unint64_t v18 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v18))
        {
          *(void *)(a1 + 32) = v18;
          *(_DWORD *)(a1 + 52) |= 4u;
          int v13 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v13 < v12 && *v13 == 32)
          {
            unint64_t v14 = v13 + 1;
            *((void *)this + 1) = v14;
LABEL_29:
            unint64_t v18 = 0;
            if ((unint64_t)v14 >= v12 || *v14 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v18);
              if (!result) {
                return result;
              }
              unint64_t v15 = v18;
              uint64_t v16 = (unsigned __int8 *)*((void *)this + 1);
              unint64_t v12 = *((void *)this + 2);
            }
            else
            {
              unint64_t v15 = *v14;
              uint64_t v16 = (unsigned __int8 *)(v14 + 1);
              *((void *)this + 1) = v16;
            }
            *(void *)(a1 + 40) = v15;
            *(_DWORD *)(a1 + 52) |= 8u;
            if (v16 == (unsigned __int8 *)v12
              && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)this + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_20;
        }
        goto LABEL_25;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        unint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_29;
      default:
        int v9 = TagFallback & 7;
LABEL_25:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1001334C0(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 52);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_14:
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 32), a3);
      if ((*(_DWORD *)(v5 + 52) & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_5;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_4:
  if ((v6 & 8) != 0) {
LABEL_5:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(v5 + 40), (uint64_t)a2, a4);
LABEL_6:
  int v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

uint64_t sub_10013358C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, unsigned __int8 *a3)
{
  int v4 = *((_DWORD *)this + 13);
  if (v4)
  {
    uint64_t v10 = *((void *)this + 2);
    *(unsigned char *)a2 = 9;
    *(void *)(a2 + 1) = v10;
    a2 += 9;
    int v4 = *((_DWORD *)this + 13);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_14:
      uint64_t v12 = *((void *)this + 4);
      *(unsigned char *)a2 = 25;
      *(void *)(a2 + 1) = v12;
      a2 += 9;
      if ((*((_DWORD *)this + 13) & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_5;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v11 = *((void *)this + 3);
  *(unsigned char *)a2 = 17;
  *(void *)(a2 + 1) = v11;
  a2 += 9;
  int v4 = *((_DWORD *)this + 13);
  if ((v4 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_4:
  if ((v4 & 8) != 0)
  {
LABEL_5:
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 5);
    *(unsigned char *)a2 = 32;
    a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v5, a2 + 1, a3);
  }
LABEL_6:
  uint64_t v8 = (void *)*((void *)this + 1);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v6 = v8;
  if (!v8 || *v6 == v6[1]) {
    return a2;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v7, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_10013370C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 52);
  if (*(unsigned char *)(a1 + 52))
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 8) != 0) {
      uint64_t v5 = v5
    }
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 40), (unint64_t)a2)+ 1;
  }
  else
  {
    uint64_t v5 = 0;
  }
  int v6 = *(void **)(a1 + 8);
  if (v6 && *v6 != v6[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 48) = v5;
  return v5;
}

uint64_t sub_10013379C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100132FE4((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100133870(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100133888(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100133914()
{
  return 1;
}

uint64_t sub_10013391C()
{
  uint64_t v0 = qword_1008A1570;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100132A60;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1558;
}

void sub_1001339B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_1001339C4(void *a1)
{
  *a1 = off_1008514E0;
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::ExtensionSet((wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 4));
  a1[5] = 0;
  a1[6] = 0;
  a1[7] = 0;
  return a1;
}

void sub_100133A28(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::~ExtensionSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void *sub_100133A4C(void *a1, uint64_t a2)
{
  *a1 = off_1008514E0;
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::ExtensionSet((wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 4));
  a1[5] = 0;
  a1[6] = 0;
  a1[7] = 0;
  sub_100133AF8((uint64_t)a1, a2);
  return a1;
}

void sub_100133AC4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v3);
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::~ExtensionSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100133AF8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 60);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 60))
    {
      *(_DWORD *)(a1 + 60) |= 1u;
      uint64_t v5 = *(void *)(a1 + 40);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 40);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_1008AC408 + 40);
      }
      sub_100132FE4(v5, v6);
      int v4 = *(_DWORD *)(a2 + 60);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 60) |= 2u;
      uint64_t v7 = *(void *)(a1 + 48);
      if (!v7) {
        operator new();
      }
      uint64_t v8 = *(void *)(a2 + 48);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_1008AC408 + 48);
      }
      sub_1000D3F94(v7, v8);
    }
  }
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::MergeFrom((wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(a2 + 8));
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 32), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 32));
}

void sub_100133C44()
{
}

void sub_100133C94(void *a1)
{
  *a1 = off_1008514E0;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(a1 + 1);
  sub_100133CFC(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 4));
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::~ExtensionSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void *sub_100133CFC(void *result)
{
  if ((void *)qword_1008AC408 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[5];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t result = (void *)v1[6];
    if (result)
    {
      char v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_100133DA0(void *a1)
{
  sub_100133C94(a1);

  operator delete();
}

uint64_t sub_100133DD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 56) = a2;
  return result;
}

void sub_100133DE0()
{
}

void sub_100133E20()
{
}

uint64_t sub_100133E44(uint64_t a1)
{
  uint64_t result = wireless_diagnostics::google::protobuf::internal::ExtensionSet::Clear((wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(a1 + 8));
  if (*(unsigned char *)(a1 + 60))
  {
    if (*(unsigned char *)(a1 + 60))
    {
      uint64_t result = *(void *)(a1 + 40);
      if (result)
      {
        if (*(unsigned char *)(result + 52))
        {
          *(_OWORD *)(result + 16) = 0u;
          *(_OWORD *)(result + 32) = 0u;
        }
        uint64_t v3 = *(void *)(result + 8);
        result += 8;
        *(_DWORD *)(result + 44) = 0;
        if (v3) {
          uint64_t result = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)result);
        }
      }
    }
    if ((*(unsigned char *)(a1 + 60) & 2) != 0)
    {
      uint64_t result = *(void *)(a1 + 48);
      if (result) {
        uint64_t result = sub_1000D4394(result);
      }
    }
  }
  uint64_t v5 = *(void *)(a1 + 32);
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 32);
  *((_DWORD *)v4 + 7) = 0;
  if (v5)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return result;
}

uint64_t sub_100133EE0(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 32);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v8;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v8 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_18;
        }
        *(_DWORD *)(a1 + 60) |= 1u;
        uint64_t v11 = *(void *)(a1 + 40);
        if (!v11) {
          operator new();
        }
        unsigned int v32 = 0;
        uint64_t v12 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v32))return 0; {
        }
          }
        else
        {
          unsigned int v32 = *v12;
          *((void *)a2 + 1) = v12 + 1;
        }
        int v13 = *((_DWORD *)a2 + 14);
        int v14 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v13 + 1;
        if (v13 >= v14) {
          return 0;
        }
        int v15 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v32);
        if (!sub_100133248(v11, a2, v16, v17) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v15);
        int v18 = *((_DWORD *)a2 + 14);
        BOOL v19 = __OFSUB__(v18, 1);
        int v20 = v18 - 1;
        if (v20 < 0 == v19) {
          *((_DWORD *)a2 + 14) = v20;
        }
        uint64_t v21 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v21 < *((void *)a2 + 2) && *v21 == 34)
        {
          *((void *)a2 + 1) = v21 + 1;
          goto LABEL_33;
        }
      }
      if (TagFallback >> 3 != 4) {
        break;
      }
      int v10 = TagFallback & 7;
      if (v10 != 2) {
        goto LABEL_18;
      }
LABEL_33:
      *(_DWORD *)(a1 + 60) |= 2u;
      uint64_t v22 = *(void *)(a1 + 48);
      if (!v22) {
        operator new();
      }
      unsigned int v33 = 0;
      int v23 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v23 >= *((void *)a2 + 2) || *v23 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v33)) {
          return 0;
        }
      }
      else
      {
        unsigned int v33 = *v23;
        *((void *)a2 + 1) = v23 + 1;
      }
      int v24 = *((_DWORD *)a2 + 14);
      int v25 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v24 + 1;
      if (v24 >= v25) {
        return 0;
      }
      int v26 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v33);
      if (!sub_1000D4420(v22, a2, v27, v28) || !*((unsigned char *)a2 + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v26);
      int v29 = *((_DWORD *)a2 + 14);
      BOOL v19 = __OFSUB__(v29, 1);
      int v30 = v29 - 1;
      if (v30 < 0 == v19) {
        *((_DWORD *)a2 + 14) = v30;
      }
      if (*((void *)a2 + 1) == *((void *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    int v10 = TagFallback & 7;
LABEL_18:
    if (v10 == 4) {
      return 1;
    }
    if ((TagFallback & 0xFFFFFFF8) == 0x10)
    {
      if ((wireless_diagnostics::google::protobuf::internal::ExtensionSet::ParseField(v7, TagFallback, a2, (const wireless_diagnostics::google::protobuf::Message *)qword_1008AC408, v6) & 1) == 0)return 0; {
    }
      }
    else if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)
    {
      return 0;
    }
  }
}

void sub_1001341E0()
{
}

uint64_t sub_100134218(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(a1 + 60))
  {
    uint64_t v6 = *(void *)(a1 + 40);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1008AC408 + 40);
    }
    wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::ExtensionSet::SerializeWithCachedSizes((wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(a1 + 8), 2, 3, a2);
  if ((*(unsigned char *)(a1 + 60) & 2) != 0)
  {
    uint64_t v10 = *(void *)(a1 + 48);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_1008AC408 + 48);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, v9);
  }
  int v13 = *(void **)(a1 + 32);
  uint64_t v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 32);
  uint64_t v11 = v13;
  if (v13 && *v11 != v11[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v12, a2, v8);
  }
  return result;
}

uint64_t sub_1001342D8(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  if (*(unsigned char *)(a1 + 60))
  {
    uint64_t v5 = *(unsigned int **)(a1 + 40);
    if (!v5) {
      uint64_t v5 = *(unsigned int **)(qword_1008AC408 + 40);
    }
    *a2 = 10;
    unsigned int v6 = a2 + 1;
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v5[12];
    if (v7 > 0x7F)
    {
      uint64_t v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, v6, a3);
    }
    else
    {
      v3[1] = v7;
      uint64_t v8 = (uint64_t)(v3 + 2);
    }
    uint64_t v3 = (unsigned __int8 *)sub_10013358C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v5, v8, a3);
  }
  int v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::ExtensionSet::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(a1 + 8), 2, 3, v3);
  uint64_t v12 = v9;
  if ((*(unsigned char *)(a1 + 60) & 2) != 0)
  {
    int v13 = *(unsigned int **)(a1 + 48);
    if (!v13) {
      int v13 = *(unsigned int **)(qword_1008AC408 + 48);
    }
    *(unsigned char *)int v9 = 34;
    unsigned int v14 = v9 + 1;
    int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13[10];
    if (v15 > 0x7F)
    {
      uint64_t v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, v14, v10);
    }
    else
    {
      *((unsigned char *)v12 + 1) = (_BYTE)v15;
      uint64_t v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v12 + 2);
    }
    uint64_t v12 = sub_1000D4944((wireless_diagnostics::google::protobuf::internal::WireFormat *)v13, v16, v10, v11);
  }
  BOOL v19 = *(void **)(a1 + 32);
  int v18 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 32);
  unsigned int v17 = v19;
  if (!v19 || *v17 == v17[1]) {
    return (uint64_t)v12;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v18, v12, v10);
}

uint64_t sub_1001343F4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (!*(unsigned char *)(a1 + 60))
  {
    int v3 = 0;
    goto LABEL_18;
  }
  if ((*(unsigned char *)(a1 + 60) & 1) == 0)
  {
    int v3 = 0;
    if ((*(unsigned char *)(a1 + 60) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v4 = *(void *)(a1 + 40);
  if (!v4) {
    uint64_t v4 = *(void *)(qword_1008AC408 + 40);
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10013370C(v4, a2);
  int v6 = (int)v5;
  if (v5 >= 0x80) {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
  }
  else {
    int v7 = 1;
  }
  int v3 = v6 + v7 + 1;
  if ((*(_DWORD *)(a1 + 60) & 2) != 0)
  {
LABEL_12:
    uint64_t v8 = *(void *)(a1 + 48);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1008AC408 + 48);
    }
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000D4AAC(v8, a2);
    int v11 = (int)v9;
    if (v9 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, v10);
    }
    else {
      int v12 = 1;
    }
    v3 += v11 + v12 + 1;
  }
LABEL_18:
  uint64_t v14 = wireless_diagnostics::google::protobuf::internal::ExtensionSet::ByteSize((wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(a1 + 8))
      + v3;
  int v15 = *(void **)(a1 + 32);
  if (v15 && *v15 != v15[1]) {
    uint64_t v14 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 32), v13)+ v14;
  }
  *(_DWORD *)(a1 + 56) = v14;
  return v14;
}

uint64_t sub_1001344F4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100133AF8((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001345C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001345E0(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10013466C(uint64_t a1)
{
  return wireless_diagnostics::google::protobuf::internal::ExtensionSet::IsInitialized(a1 + 8);
}

uint64_t sub_100134674()
{
  uint64_t v0 = qword_1008A1570;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100132A60;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1548;
}

void sub_100134708(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10013471C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_100134724(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

void sub_100134730()
{
  uint64_t v0 = (wireless_diagnostics::google::protobuf::DescriptorPool *)sub_100134938();
  wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v0);
  sub_100004950(__p, "CLPBTProxEstimatorEntry.proto");
  uint64_t FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName();
  uint64_t v2 = FileByName;
  if (v4 < 0)
  {
    operator delete(__p[0]);
    if (v2) {
      goto LABEL_6;
    }
  }
  else if (FileByName)
  {
    goto LABEL_6;
  }
  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)__p);
LABEL_6:
  qword_1008A1578 = *(void *)(v2 + 80);
  operator new();
}

void sub_1001348E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

void sub_100134938(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_1008A1598 & 1) == 0)
  {
    byte_1008A1598 = 1;
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPBTProxEstimatorEntry.pb.cc", a4);
    sub_1000C4974(v4, v5, v6, v7);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)"\n\x1DCLPBTProxEstimatorEntry.proto\x12$CLP.LogEntry.Nearbyd.BTProxEstimator\x1A\x14CLPBTProxEntry.proto\"\x82\x03\n\x14BTProxEstimatorEntry\x12I\n\x11btSampleTimestamp\x18\x01 \x01(\v2..CLP.LogEntry.Nearbyd.BTProx.BTSampleTimeStamp\x12\f\n\x04UUID\x18\x02 \x01(\t\x12\x12\n\nfilterType\x18\x03 \x01(\t\x12\x12\n\nsampleSize\x18\x04 \x01(\x05\x12W\n\x06sample\x18\x05 \x03(\v2G.CLP.LogEntry.Nearbyd.BTProxEstimator.BTProxEstimatorEntry.BTProxSample\x12\x16\n\x0EfilteredResult\x18\x06 \x01(\x01\x1Ax\n\fBTProxSample\x12I\n\x11btSampleTimestamp\x18\x01 \x01(\v2..CLP.LogEntry.Nearbyd.BTProx.BTSampleTimeStamp\x12\x0F\n\achannel\x18\x02 \x01(\x05\x12\f\n"
                                                                "\x04rssi\x18\x03 \x01(\x01",
      (const void *)0x1E0,
      v8);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile();
    operator new();
  }
}

void sub_100134A54()
{
}

uint64_t sub_100134A94()
{
  if (qword_1008AC418) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC418 + 8))(qword_1008AC418);
  }
  if (qword_1008A1580) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A1580 + 8))(qword_1008A1580);
  }
  if (qword_1008AC420) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC420 + 8))(qword_1008AC420);
  }
  uint64_t result = qword_1008A1590;
  if (qword_1008A1590)
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)qword_1008A1590 + 8);
    return v1();
  }
  return result;
}

uint64_t sub_100134B7C()
{
  uint64_t v0 = qword_1008A15A0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v3[1] = sub_100134730;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
  if (!qword_1008AC418) {
    ((void (*)(void))sub_100134938)();
  }
  uint64_t v1 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC420) {
    sub_100134938(v1);
  }
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
}

void sub_100134C48(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100134C60(uint64_t a1)
{
  *(void *)a1 = off_1008515C0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  *(void *)(a1 + 32) = 0;
  return a1;
}

void sub_100134CB0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100134CC4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 40);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 40))
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v5 = *(void *)(a1 + 16);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 16);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_1008AC420 + 16);
      }
      sub_1000C4FA0(v5, v6);
      int v4 = *(_DWORD *)(a2 + 40);
    }
    if ((v4 & 2) != 0)
    {
      int v7 = *(_DWORD *)(a2 + 32);
      *(_DWORD *)(a1 + 40) |= 2u;
      *(_DWORD *)(a1 + 32) = v7;
      int v4 = *(_DWORD *)(a2 + 40);
    }
    if ((v4 & 4) != 0)
    {
      uint64_t v8 = *(void *)(a2 + 24);
      *(_DWORD *)(a1 + 40) |= 4u;
      *(void *)(a1 + 24) = v8;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100134DE0()
{
}

void sub_100134E18(void *a1)
{
  *a1 = off_1008515C0;
  if ((void *)qword_1008AC420 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100134EB0(void *a1)
{
  sub_100134E18(a1);

  operator delete();
}

uint64_t sub_100134EE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 36) = a2;
  return result;
}

void sub_100134EF0()
{
}

void sub_100134F30()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100134F54(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  uint64_t v1 = this;
  if (*((unsigned char *)this + 40))
  {
    if (*((unsigned char *)this + 40))
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)this + 2);
      if (this) {
        this = sub_1000C51A8((uint64_t)this);
      }
    }
    *((_DWORD *)v1 + 8) = 0;
    *((void *)v1 + 3) = 0;
  }
  uint64_t v3 = *((void *)v1 + 1);
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v2 + 8) = 0;
  if (v3)
  {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v2);
  }
  return this;
}

uint64_t sub_100134FC0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      unsigned int v9 = TagFallback >> 3;
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (v9 == 2)
      {
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
LABEL_33:
        v27[0] = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v27);
          if (!result) {
            return result;
          }
          unsigned int v24 = v27[0];
          int v25 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          unsigned int v24 = *v14;
          int v25 = v14 + 1;
          *((void *)this + 1) = v25;
        }
        *(_DWORD *)(a1 + 32) = v24;
        *(_DWORD *)(a1 + 40) |= 2u;
        if ((unint64_t)v25 < v13 && *v25 == 25)
        {
          *((void *)this + 1) = v25 + 1;
          goto LABEL_41;
        }
      }
      else
      {
        if (v9 != 3)
        {
          int v10 = TagFallback & 7;
          goto LABEL_21;
        }
        int v10 = TagFallback & 7;
        if (v10 == 1)
        {
LABEL_41:
          *(void *)uint64_t v27 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
          *(void *)(a1 + 24) = *(void *)v27;
          }
          *(_DWORD *)(a1 + 40) |= 4u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
        }
        else
        {
LABEL_21:
          if (v10 == 4) {
            return 1;
          }
          if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        }
          }
      }
    }
    int v10 = TagFallback & 7;
    if (v10 != 2) {
      goto LABEL_21;
    }
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v11 = *(void *)(a1 + 16);
    if (!v11) {
      operator new();
    }
    v27[0] = 0;
    int v12 = (char *)*((void *)this + 1);
    if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v27)) {
        return 0;
      }
    }
    else
    {
      v27[0] = *v12;
      *((void *)this + 1) = v12 + 1;
    }
    int v15 = *((_DWORD *)this + 14);
    int v16 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v15 + 1;
    if (v15 >= v16) {
      return 0;
    }
    int v17 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27[0]);
    if (!sub_1000C51C8(v11, this, v18, v19) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v17);
    int v20 = *((_DWORD *)this + 14);
    BOOL v21 = __OFSUB__(v20, 1);
    int v22 = v20 - 1;
    if (v22 < 0 == v21) {
      *((_DWORD *)this + 14) = v22;
    }
    int v23 = (unsigned char *)*((void *)this + 1);
    unint64_t v13 = *((void *)this + 2);
    if ((unint64_t)v23 < v13 && *v23 == 16)
    {
      uint64_t v14 = v23 + 1;
      *((void *)this + 1) = v14;
      goto LABEL_33;
    }
  }
}

void sub_100135264()
{
}

uint64_t sub_100135288(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 40);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_14:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 32), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 40) & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  uint64_t v10 = *(void *)(this + 16);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_1008AC420 + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 2) != 0) {
    goto LABEL_14;
  }
LABEL_3:
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 24), a3);
LABEL_5:
  unsigned int v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100135348(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  int v5 = *((_DWORD *)this + 10);
  if (v5)
  {
    uint64_t v6 = *((void *)this + 2);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1008AC420 + 16);
    }
    *(unsigned char *)a2 = 10;
    unsigned int v7 = a2 + 1;
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v6 + 24);
    if (v8 > 0x7F)
    {
      uint64_t v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v7, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v8;
      uint64_t v9 = (uint64_t)v3 + 2;
    }
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000C5340(v6, v9, a3);
    int v5 = *((_DWORD *)this + 10);
  }
  if ((v5 & 2) != 0)
  {
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 8);
    *(unsigned char *)uint64_t v3 = 16;
    unint64_t v11 = (unint64_t)v3 + 1;
    if ((v10 & 0x80000000) != 0)
    {
      uint64_t v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v10, v11, a3);
    }
    else
    {
      if (v10 <= 0x7F)
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v10;
        uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        goto LABEL_15;
      }
      uint64_t v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, v11, a3);
    }
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v12;
  }
LABEL_15:
  if ((*((unsigned char *)this + 40) & 4) != 0)
  {
    uint64_t v13 = *((void *)this + 3);
    *(unsigned char *)uint64_t v3 = 25;
    *(void *)((char *)v3 + 1) = v13;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  }
  int v16 = (void *)*((void *)this + 1);
  int v15 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v14 = v16;
  if (!v16 || *v14 == v14[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v15, v3, a3);
}

uint64_t sub_100135490(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 40);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_21;
  }
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_1008AC420 + 16);
    }
    uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000C53B4(v5, a2);
    int v7 = (int)v6;
    if (v6 >= 0x80) {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
    }
    else {
      int v8 = 1;
    }
    LODWORD(v4) = v7 + v8 + 1;
    int v3 = *(_DWORD *)(a1 + 40);
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  LODWORD(v4) = 0;
  if ((*(unsigned char *)(a1 + 40) & 2) != 0)
  {
LABEL_12:
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if ((v9 & 0x80000000) != 0)
    {
      int v10 = 11;
    }
    else if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2)
          + 1;
      int v3 = *(_DWORD *)(a1 + 40);
    }
    else
    {
      int v10 = 2;
    }
    LODWORD(v4) = v10 + v4;
  }
LABEL_18:
  if ((v3 & 4) != 0) {
    uint64_t v4 = (v4 + 9);
  }
  else {
    uint64_t v4 = v4;
  }
LABEL_21:
  unint64_t v11 = *(void **)(a1 + 8);
  if (v11 && *v11 != v11[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 36) = v4;
  return v4;
}

uint64_t sub_100135578(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100134CC4((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10013564C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100135664(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001356F0()
{
  return 1;
}

uint64_t sub_1001356F8()
{
  uint64_t v0 = qword_1008A15A0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100134730;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1588;
}

void sub_10013578C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001357A0(uint64_t a1)
{
  *(void *)a1 = off_100851670;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(void *)(a1 + 32) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(_DWORD *)(a1 + 80) = 0;
  return a1;
}

void sub_100135804(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100135818(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 40), *(_DWORD *)(a2 + 48) + *(_DWORD *)(a1 + 48));
  if (*(int *)(a2 + 48) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 40) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 52);
      uint64_t v7 = *(int *)(a1 + 48);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 56))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 40), v6 + 1);
          int v6 = *(_DWORD *)(a1 + 52);
        }
        *(_DWORD *)(a1 + 52) = v6 + 1;
        sub_100136BEC();
      }
      uint64_t v8 = *(void *)(a1 + 40);
      *(_DWORD *)(a1 + 48) = v7 + 1;
      sub_100134CC4(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 48));
  }
  LOBYTE(v9) = *(unsigned char *)(a2 + 80);
  if (!(_BYTE)v9) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 80))
  {
    *(_DWORD *)(a1 + 80) |= 1u;
    uint64_t v10 = *(void *)(a1 + 16);
    if (!v10) {
      operator new();
    }
    uint64_t v11 = *(void *)(a2 + 16);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_1008AC418 + 16);
    }
    sub_1000C4FA0(v10, v11);
    int v9 = *(_DWORD *)(a2 + 80);
  }
  if ((v9 & 2) != 0)
  {
    uint64_t v14 = *(const std::string **)(a2 + 24);
    *(_DWORD *)(a1 + 80) |= 2u;
    int v15 = *(std::string **)(a1 + 24);
    if (v15 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v15, v14);
    int v9 = *(_DWORD *)(a2 + 80);
    if ((v9 & 4) == 0)
    {
LABEL_20:
      if ((v9 & 8) == 0) {
        goto LABEL_21;
      }
LABEL_30:
      int v18 = *(_DWORD *)(a2 + 72);
      *(_DWORD *)(a1 + 80) |= 8u;
      *(_DWORD *)(a1 + 72) = v18;
      if ((*(_DWORD *)(a2 + 80) & 0x20) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
      goto LABEL_22;
    }
  }
  else if ((v9 & 4) == 0)
  {
    goto LABEL_20;
  }
  int v16 = *(const std::string **)(a2 + 32);
  *(_DWORD *)(a1 + 80) |= 4u;
  int v17 = *(std::string **)(a1 + 32);
  if (v17 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v17, v16);
  int v9 = *(_DWORD *)(a2 + 80);
  if ((v9 & 8) != 0) {
    goto LABEL_30;
  }
LABEL_21:
  if ((v9 & 0x20) != 0)
  {
LABEL_22:
    uint64_t v12 = *(void *)(a2 + 64);
    *(_DWORD *)(a1 + 80) |= 0x20u;
    *(void *)(a1 + 64) = v12;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100135A9C()
{
}

void sub_100135AD4(uint64_t *a1)
{
  *a1 = (uint64_t)off_100851670;
  uint64_t v2 = a1 + 5;
  sub_100135B40(a1);
  sub_10006F938(v2);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void *sub_100135B40(void *result)
{
  uint64_t v1 = result[3];
  if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  uint64_t v3 = result[4];
  if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v3 != 0)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    operator delete();
  }
  if ((void *)qword_1008AC418 != result)
  {
    uint64_t result = (void *)result[2];
    if (result)
    {
      uint64_t v5 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v5();
    }
  }
  return result;
}

void sub_100135C3C(uint64_t *a1)
{
  sub_100135AD4(a1);

  operator delete();
}

uint64_t sub_100135C74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 76) = a2;
  return result;
}

uint64_t sub_100135C7C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008AC418;
  if (!qword_1008AC418)
  {
    sub_100134938(0, a2, a3, a4);
    return qword_1008AC418;
  }
  return result;
}

void sub_100135CAC()
{
}

void sub_100135CEC()
{
}

uint64_t sub_100135D10(uint64_t a1)
{
  LOBYTE(v2) = *(unsigned char *)(a1 + 80);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(a1 + 80))
    {
      uint64_t v3 = *(void *)(a1 + 16);
      if (v3)
      {
        sub_1000C51A8(v3);
        int v2 = *(_DWORD *)(a1 + 80);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v4 = *(void *)(a1 + 24);
      if ((_UNKNOWN *)v4 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(unsigned char **)uint64_t v4 = 0;
          *(void *)(v4 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v4 = 0;
          *(unsigned char *)(v4 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(a1 + 80) & 4) != 0)
    {
      uint64_t v5 = *(void *)(a1 + 32);
      if ((_UNKNOWN *)v5 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(unsigned char **)uint64_t v5 = 0;
          *(void *)(v5 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v5 = 0;
          *(unsigned char *)(v5 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(a1 + 72) = 0;
    *(void *)(a1 + 64) = 0;
  }
  uint64_t result = sub_10006F8C8(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)v7 + 18) = 0;
  if (v8)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v7);
  }
  return result;
}

uint64_t sub_100135DF4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 40);
  unsigned int v7 = a1 + 8;
LABEL_2:
  while (2)
  {
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_24;
        }
        *(_DWORD *)(a1 + 80) |= 1u;
        uint64_t v11 = *(void *)(a1 + 16);
        if (!v11) {
          operator new();
        }
        v42[0] = 0;
        uint64_t v12 = (char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v42))return 0; {
        }
          }
        else
        {
          v42[0] = *v12;
          *((void *)this + 1) = v12 + 1;
        }
        int v15 = *((_DWORD *)this + 14);
        int v16 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v15 + 1;
        if (v15 >= v16) {
          return 0;
        }
        int v17 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v42[0]);
        if (!sub_1000C51C8(v11, this, v18, v19) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v17);
        int v20 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)this + 14) = v22;
        }
        int v23 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 != 18) {
          continue;
        }
        *((void *)this + 1) = v23 + 1;
        goto LABEL_36;
      case 2u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_24;
        }
LABEL_36:
        *(_DWORD *)(a1 + 80) |= 2u;
        if (*(_UNKNOWN **)(a1 + 24) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback();
        int v25 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 != 26) {
          continue;
        }
        *((void *)this + 1) = v25 + 1;
LABEL_42:
        *(_DWORD *)(a1 + 80) |= 4u;
        if (*(_UNKNOWN **)(a1 + 32) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback();
        int v26 = (unsigned char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v26 >= v13 || *v26 != 32) {
          continue;
        }
        uint64_t v14 = v26 + 1;
        *((void *)this + 1) = v14;
LABEL_48:
        v42[0] = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v42);
          if (!result) {
            return result;
          }
          unsigned int v27 = v42[0];
          BOOL v28 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          unsigned int v27 = *v14;
          BOOL v28 = v14 + 1;
          *((void *)this + 1) = v28;
        }
        *(_DWORD *)(a1 + 72) = v27;
        *(_DWORD *)(a1 + 80) |= 8u;
        if ((unint64_t)v28 >= v13 || *v28 != 42) {
          continue;
        }
        do
        {
          *((void *)this + 1) = v28 + 1;
LABEL_56:
          int v29 = *(_DWORD *)(a1 + 52);
          uint64_t v30 = *(int *)(a1 + 48);
          if ((int)v30 >= v29)
          {
            if (v29 == *(_DWORD *)(a1 + 56))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v29 + 1);
              int v29 = *(_DWORD *)(a1 + 52);
            }
            *(_DWORD *)(a1 + 52) = v29 + 1;
            sub_100136BEC();
          }
          uint64_t v31 = *(void *)(a1 + 40);
          *(_DWORD *)(a1 + 48) = v30 + 1;
          uint64_t v32 = *(void *)(v31 + 8 * v30);
          v42[0] = 0;
          unsigned int v33 = (char *)*((void *)this + 1);
          if ((unint64_t)v33 >= *((void *)this + 2) || *v33 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v42))return 0; {
          }
            }
          else
          {
            v42[0] = *v33;
            *((void *)this + 1) = v33 + 1;
          }
          int v34 = *((_DWORD *)this + 14);
          int v35 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v34 + 1;
          if (v34 >= v35) {
            return 0;
          }
          int v36 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v42[0]);
          if (!sub_100134FC0(v32, this, v37, v38) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v36);
          int v39 = *((_DWORD *)this + 14);
          BOOL v21 = __OFSUB__(v39, 1);
          int v40 = v39 - 1;
          if (v40 < 0 == v21) {
            *((_DWORD *)this + 14) = v40;
          }
          BOOL v28 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v28 >= *((void *)this + 2)) {
            goto LABEL_2;
          }
          int v41 = *v28;
        }
        while (v41 == 42);
        if (v41 != 49) {
          continue;
        }
        *((void *)this + 1) = v28 + 1;
LABEL_74:
        *(void *)unsigned int v42 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v42))
        {
          *(void *)(a1 + 64) = *(void *)v42;
          *(_DWORD *)(a1 + 80) |= 0x20u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_42;
        }
        goto LABEL_24;
      case 4u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_48;
      case 5u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_56;
        }
        goto LABEL_24;
      case 6u:
        int v10 = TagFallback & 7;
        if (v10 != 1) {
          goto LABEL_24;
        }
        goto LABEL_74;
      default:
        int v10 = TagFallback & 7;
LABEL_24:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_100136328()
{
}

uint64_t sub_100136364(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 80);
  if (v6)
  {
    uint64_t v11 = *(void *)(this + 16);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_1008AC418 + 16);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v11, a2, a4);
    int v6 = *(_DWORD *)(v5 + 80);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_21;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback();
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_21:
  wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback();
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  if ((*(_DWORD *)(v5 + 80) & 8) != 0) {
LABEL_5:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 72), (int)a2, a4);
LABEL_6:
  if (*(int *)(v5 + 48) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(*(void *)(v5 + 40) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 48));
  }
  if ((*(unsigned char *)(v5 + 80) & 0x20) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 64), a3);
  }
  int v10 = *(void **)(v5 + 8);
  int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v8 = v10;
  if (v10 && *v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001364D8(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  int v5 = *((_DWORD *)this + 20);
  if (v5)
  {
    uint64_t v6 = *((void *)this + 2);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1008AC418 + 16);
    }
    *(unsigned char *)a2 = 10;
    unsigned int v7 = a2 + 1;
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v6 + 24);
    if (v8 > 0x7F)
    {
      uint64_t v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v7, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v8;
      uint64_t v9 = (uint64_t)v3 + 2;
    }
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000C5340(v6, v9, a3);
    int v5 = *((_DWORD *)this + 20);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_25:
      wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback();
      uint64_t v20 = *((void *)this + 4);
      *(unsigned char *)uint64_t v3 = 26;
      if (*(char *)(v20 + 23) < 0) {
        BOOL v21 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v20 + 8);
      }
      else {
        BOOL v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v20 + 23);
      }
      if (v21 > 0x7F)
      {
        int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, (int)v3 + 1, v18);
      }
      else
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v21;
        int v22 = v3 + 2;
      }
      int v23 = *(char *)(v20 + 23);
      if (v23 >= 0) {
        unsigned int v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v20;
      }
      else {
        unsigned int v24 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v20;
      }
      if (v23 >= 0) {
        int v25 = (const void *)*(unsigned __int8 *)(v20 + 23);
      }
      else {
        int v25 = (const void *)*(unsigned int *)(v20 + 8);
      }
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v24, v25, v22, v19);
      if ((*((_DWORD *)this + 20) & 8) == 0) {
        goto LABEL_44;
      }
      goto LABEL_38;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback();
  uint64_t v12 = *((void *)this + 3);
  *(unsigned char *)uint64_t v3 = 18;
  if (*(char *)(v12 + 23) < 0) {
    unint64_t v13 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v12 + 8);
  }
  else {
    unint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v12 + 23);
  }
  if (v13 > 0x7F)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, (int)v3 + 1, v10);
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v13;
    int v14 = v3 + 2;
  }
  int v15 = *(char *)(v12 + 23);
  if (v15 >= 0) {
    int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v12;
  }
  else {
    int v16 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v12;
  }
  if (v15 >= 0) {
    int v17 = (const void *)*(unsigned __int8 *)(v12 + 23);
  }
  else {
    int v17 = (const void *)*(unsigned int *)(v12 + 8);
  }
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v16, v17, v14, v11);
  int v5 = *((_DWORD *)this + 20);
  if ((v5 & 4) != 0) {
    goto LABEL_25;
  }
LABEL_4:
  if ((v5 & 8) == 0) {
    goto LABEL_44;
  }
LABEL_38:
  int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 18);
  *(unsigned char *)uint64_t v3 = 32;
  unint64_t v27 = (unint64_t)v3 + 1;
  if ((v26 & 0x80000000) != 0)
  {
    uint64_t v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v26, v27, a3);
  }
  else
  {
    if (v26 <= 0x7F)
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v26;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      goto LABEL_44;
    }
    uint64_t v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v26, v27, a3);
  }
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v28;
LABEL_44:
  if (*((int *)this + 12) >= 1)
  {
    uint64_t v29 = 0;
    do
    {
      uint64_t v30 = *(unsigned int **)(*((void *)this + 5) + 8 * v29);
      *(unsigned char *)uint64_t v3 = 42;
      uint64_t v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v30[9];
      if (v31 > 0x7F)
      {
        uint64_t v32 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v31, (int)v3 + 1, a3);
      }
      else
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v31;
        uint64_t v32 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      }
      uint64_t v3 = sub_100135348((wireless_diagnostics::google::protobuf::internal::WireFormat *)v30, v32, a3);
      ++v29;
    }
    while (v29 < *((int *)this + 12));
  }
  if ((*((unsigned char *)this + 80) & 0x20) != 0)
  {
    uint64_t v33 = *((void *)this + 8);
    *(unsigned char *)uint64_t v3 = 49;
    *(void *)((char *)v3 + 1) = v33;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  }
  int v36 = (void *)*((void *)this + 1);
  int v35 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v34 = v36;
  if (!v36 || *v34 == v34[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v35, v3, a3);
}

uint64_t sub_1001367C0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 80);
  if (*(unsigned char *)(a1 + 80))
  {
    if (v3)
    {
      uint64_t v5 = *(void *)(a1 + 16);
      if (!v5) {
        uint64_t v5 = *(void *)(qword_1008AC418 + 16);
      }
      uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000C53B4(v5, a2);
      int v7 = (int)v6;
      if (v6 >= 0x80) {
        int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
      }
      else {
        int v8 = 1;
      }
      int v4 = v7 + v8 + 1;
      int v3 = *(_DWORD *)(a1 + 80);
      if ((v3 & 2) == 0)
      {
LABEL_20:
        if ((v3 & 4) != 0)
        {
          uint64_t v15 = *(void *)(a1 + 32);
          int v16 = *(unsigned __int8 *)(v15 + 23);
          char v17 = v16;
          uint64_t v18 = *(void *)(v15 + 8);
          if ((v16 & 0x80u) == 0) {
            unint64_t v19 = *(unsigned __int8 *)(v15 + 23);
          }
          else {
            unint64_t v19 = v18;
          }
          if (v19 >= 0x80)
          {
            int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v19, a2);
            int v16 = *(unsigned __int8 *)(v15 + 23);
            uint64_t v18 = *(void *)(v15 + 8);
            int v3 = *(_DWORD *)(a1 + 80);
            char v17 = *(unsigned char *)(v15 + 23);
          }
          else
          {
            int v20 = 1;
          }
          if (v17 < 0) {
            int v16 = v18;
          }
          v4 += v20 + v16 + 1;
          if ((v3 & 8) == 0) {
            goto LABEL_38;
          }
        }
        else if ((v3 & 8) == 0)
        {
LABEL_38:
          if ((v3 & 0x20) != 0) {
            int v3 = v4 + 9;
          }
          else {
            int v3 = v4;
          }
          goto LABEL_41;
        }
        BOOL v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 72);
        if ((v21 & 0x80000000) != 0)
        {
          int v22 = 11;
        }
        else if (v21 >= 0x80)
        {
          int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2)+ 1;
          int v3 = *(_DWORD *)(a1 + 80);
        }
        else
        {
          int v22 = 2;
        }
        v4 += v22;
        goto LABEL_38;
      }
    }
    else
    {
      int v4 = 0;
      if ((v3 & 2) == 0) {
        goto LABEL_20;
      }
    }
    uint64_t v9 = *(void *)(a1 + 24);
    int v10 = *(unsigned __int8 *)(v9 + 23);
    char v11 = v10;
    uint64_t v12 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      unint64_t v13 = *(unsigned __int8 *)(v9 + 23);
    }
    else {
      unint64_t v13 = v12;
    }
    if (v13 >= 0x80)
    {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13, a2);
      int v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v12 = *(void *)(v9 + 8);
      int v3 = *(_DWORD *)(a1 + 80);
      char v11 = *(unsigned char *)(v9 + 23);
    }
    else
    {
      int v14 = 1;
    }
    if (v11 < 0) {
      int v10 = v12;
    }
    v4 += v14 + v10 + 1;
    goto LABEL_20;
  }
LABEL_41:
  int v23 = *(_DWORD *)(a1 + 48);
  uint64_t v24 = (v23 + v3);
  if (v23 >= 1)
  {
    uint64_t v25 = 0;
    do
    {
      int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100135490(*(void *)(*(void *)(a1 + 40) + 8 * v25), a2);
      int v27 = (int)v26;
      if (v26 >= 0x80) {
        int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26, a2);
      }
      else {
        int v28 = 1;
      }
      uint64_t v24 = (v27 + v24 + v28);
      ++v25;
    }
    while (v25 < *(int *)(a1 + 48));
  }
  uint64_t v29 = *(void **)(a1 + 8);
  if (v29 && *v29 != v29[1]) {
    uint64_t v24 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v24;
  }
  *(_DWORD *)(a1 + 76) = v24;
  return v24;
}

uint64_t sub_1001369B4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100135818((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100136A88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100136AA0(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100136B2C()
{
  return 1;
}

uint64_t sub_100136B34()
{
  uint64_t v0 = qword_1008A15A0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100134730;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1578;
}

void sub_100136BC8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100136BDC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_100136BE4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 76);
}

void sub_100136BEC()
{
}

void sub_100136C2C()
{
}

void sub_100136C54()
{
  uint64_t v0 = (wireless_diagnostics::google::protobuf::DescriptorPool *)sub_100137788();
  wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v0);
  sub_100004950(__p, "CLPRangeAndAoaSolution.proto");
  uint64_t FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName();
  uint64_t v2 = FileByName;
  if (v4 < 0)
  {
    operator delete(__p[0]);
    if (v2) {
      goto LABEL_6;
    }
  }
  else if (FileByName)
  {
    goto LABEL_6;
  }
  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)__p);
LABEL_6:
  qword_1008A15A8 = *(void *)(v2 + 80);
  operator new();
}

void sub_1001376EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

void sub_100137788(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_1008A16F0 & 1) == 0)
  {
    byte_1008A16F0 = 1;
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPRangeAndAoaSolution.pb.cc", a4);
    sub_10008AECC(v4, v5, v6, v7);
    sub_1000D5FDC(v8, v9, v10, v11);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)&unk_1004B34C4, (const void *)0x15AE, v12);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile();
    operator new();
  }
}

void sub_100137CC8()
{
}

uint64_t sub_100137E58()
{
  if (qword_1008AC428) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC428 + 8))(qword_1008AC428);
  }
  if (qword_1008A15B0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A15B0 + 8))(qword_1008A15B0);
  }
  if (qword_1008AC430) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC430 + 8))(qword_1008AC430);
  }
  if (qword_1008A15C0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A15C0 + 8))(qword_1008A15C0);
  }
  if (qword_1008AC438) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC438 + 8))(qword_1008AC438);
  }
  if (qword_1008A15D0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A15D0 + 8))(qword_1008A15D0);
  }
  if (qword_1008AC440) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC440 + 8))(qword_1008AC440);
  }
  if (qword_1008A15E0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A15E0 + 8))(qword_1008A15E0);
  }
  if (qword_1008AC448) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC448 + 8))(qword_1008AC448);
  }
  if (qword_1008A15F0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A15F0 + 8))(qword_1008A15F0);
  }
  if (qword_1008AC450) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC450 + 8))(qword_1008AC450);
  }
  if (qword_1008A1600) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A1600 + 8))(qword_1008A1600);
  }
  if (qword_1008AC458) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC458 + 8))(qword_1008AC458);
  }
  if (qword_1008A1610) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A1610 + 8))(qword_1008A1610);
  }
  if (qword_1008AC460) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC460 + 8))(qword_1008AC460);
  }
  if (qword_1008A1620) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A1620 + 8))(qword_1008A1620);
  }
  if (qword_1008AC468) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC468 + 8))(qword_1008AC468);
  }
  if (qword_1008A1630) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A1630 + 8))(qword_1008A1630);
  }
  if (qword_1008AC470) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC470 + 8))(qword_1008AC470);
  }
  if (qword_1008A1640) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A1640 + 8))(qword_1008A1640);
  }
  if (qword_1008AC478) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC478 + 8))(qword_1008AC478);
  }
  if (qword_1008A1650) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A1650 + 8))(qword_1008A1650);
  }
  if (qword_1008AC480) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC480 + 8))(qword_1008AC480);
  }
  if (qword_1008A1660) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A1660 + 8))(qword_1008A1660);
  }
  if (qword_1008AC488) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC488 + 8))(qword_1008AC488);
  }
  if (qword_1008A1678) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A1678 + 8))(qword_1008A1678);
  }
  if (qword_1008AC490) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC490 + 8))(qword_1008AC490);
  }
  if (qword_1008A1688) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A1688 + 8))(qword_1008A1688);
  }
  if (qword_1008AC498) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC498 + 8))(qword_1008AC498);
  }
  if (qword_1008A1698) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A1698 + 8))(qword_1008A1698);
  }
  if (qword_1008AC4A0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC4A0 + 8))(qword_1008AC4A0);
  }
  if (qword_1008A16A8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A16A8 + 8))(qword_1008A16A8);
  }
  if (qword_1008AC4A8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC4A8 + 8))(qword_1008AC4A8);
  }
  if (qword_1008A16B8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A16B8 + 8))(qword_1008A16B8);
  }
  if (qword_1008AC4B0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC4B0 + 8))(qword_1008AC4B0);
  }
  if (qword_1008A16C8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008A16C8 + 8))(qword_1008A16C8);
  }
  if (qword_1008AC4B8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008AC4B8 + 8))(qword_1008AC4B8);
  }
  uint64_t result = qword_1008A16D8;
  if (qword_1008A16D8)
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)qword_1008A16D8 + 8);
    return v1();
  }
  return result;
}

uint64_t sub_1001385A0()
{
  uint64_t v0 = qword_1008A16F8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v20[1] = sub_100136C54;
    char v21 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v20);
  }
  if (!qword_1008AC428) {
    ((void (*)(void))sub_100137788)();
  }
  uint64_t v1 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC430) {
    sub_100137788(v1);
  }
  uint64_t v2 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC438) {
    sub_100137788(v2);
  }
  uint64_t v3 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC440) {
    sub_100137788(v3);
  }
  uint64_t v4 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC448) {
    sub_100137788(v4);
  }
  uint64_t v5 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC450) {
    sub_100137788(v5);
  }
  uint64_t v6 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC458) {
    sub_100137788(v6);
  }
  uint64_t v7 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC460) {
    sub_100137788(v7);
  }
  uint64_t v8 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC468) {
    sub_100137788(v8);
  }
  uint64_t v9 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC470) {
    sub_100137788(v9);
  }
  uint64_t v10 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC478) {
    sub_100137788(v10);
  }
  uint64_t v11 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC480) {
    sub_100137788(v11);
  }
  uint64_t v12 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC488) {
    sub_100137788(v12);
  }
  uint64_t v13 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC490) {
    sub_100137788(v13);
  }
  uint64_t v14 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC498) {
    sub_100137788(v14);
  }
  uint64_t v15 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC4A0) {
    sub_100137788(v15);
  }
  uint64_t v16 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC4A8) {
    sub_100137788(v16);
  }
  uint64_t v17 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC4B0) {
    sub_100137788(v17);
  }
  uint64_t v18 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1008AC4B8) {
    sub_100137788(v18);
  }
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
}

void sub_1001388D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100138914(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_1008AC4A8;
  if (!qword_1008AC4A8)
  {
    uint64_t result = sub_100137788(result);
    uint64_t v2 = qword_1008AC4A8;
  }
  v1[2] = v2;
  uint64_t v3 = qword_1008AC450;
  if (!qword_1008AC450)
  {
    uint64_t result = sub_100137788(result);
    uint64_t v3 = qword_1008AC450;
  }
  v1[8] = v3;
  uint64_t v4 = qword_1008AC478;
  if (!qword_1008AC478)
  {
    uint64_t result = sub_100137788(result);
    uint64_t v4 = qword_1008AC478;
  }
  v1[9] = v4;
  uint64_t v5 = qword_1008AC480;
  if (!qword_1008AC480)
  {
    uint64_t result = sub_100137788(result);
    uint64_t v5 = qword_1008AC480;
  }
  v1[10] = v5;
  return result;
}

BOOL sub_100138994(int a1)
{
  return (a1 - 1) < 0xA;
}

uint64_t sub_1001389A4(uint64_t a1)
{
  *(void *)a1 = off_100851750;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 56) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_DWORD *)(a1 + 48) = 0;
  return a1;
}

void sub_1001389F8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100138A0C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 32), *(_DWORD *)(a2 + 40) + *(_DWORD *)(a1 + 40));
  if (*(int *)(a2 + 40) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 32) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 44);
      uint64_t v7 = *(int *)(a1 + 40);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 48))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 32), v6 + 1);
          int v6 = *(_DWORD *)(a1 + 44);
        }
        *(_DWORD *)(a1 + 44) = v6 + 1;
        sub_10014911C();
      }
      uint64_t v8 = *(void *)(a1 + 32);
      *(_DWORD *)(a1 + 40) = v7 + 1;
      sub_1001397D4(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 40));
  }
  LOBYTE(v9) = *(unsigned char *)(a2 + 60);
  if ((_BYTE)v9)
  {
    if (*(unsigned char *)(a2 + 60))
    {
      *(_DWORD *)(a1 + 60) |= 1u;
      uint64_t v10 = *(void *)(a1 + 16);
      if (!v10) {
        operator new();
      }
      uint64_t v11 = *(void *)(a2 + 16);
      if (!v11) {
        uint64_t v11 = *(void *)(qword_1008AC438 + 16);
      }
      sub_1001397D4(v10, v11);
      int v9 = *(_DWORD *)(a2 + 60);
    }
    if ((v9 & 2) != 0)
    {
      *(_DWORD *)(a1 + 60) |= 2u;
      uint64_t v12 = *(void *)(a1 + 24);
      if (!v12) {
        operator new();
      }
      uint64_t v13 = *(void *)(a2 + 24);
      if (!v13) {
        uint64_t v13 = *(void *)(qword_1008AC438 + 24);
      }
      sub_1000DB8F0(v12, v13);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100138BFC()
{
}

void sub_100138C48(uint64_t *a1)
{
  *a1 = (uint64_t)off_100851750;
  uint64_t v2 = a1 + 4;
  sub_100138CB4(a1);
  sub_10006F938(v2);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void *sub_100138CB4(void *result)
{
  if ((void *)qword_1008AC438 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t result = (void *)v1[3];
    if (result)
    {
      uint64_t v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_100138D58(uint64_t *a1)
{
  sub_100138C48(a1);

  operator delete();
}

uint64_t sub_100138D90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 56) = a2;
  return result;
}

void sub_100138D98()
{
}

void sub_100138DD8()
{
}

uint64_t sub_100138DFC(uint64_t a1)
{
  LOBYTE(v2) = *(unsigned char *)(a1 + 60);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(a1 + 60))
    {
      uint64_t v3 = *(void *)(a1 + 16);
      if (v3)
      {
        sub_100138E7C(v3);
        int v2 = *(_DWORD *)(a1 + 60);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v4 = *(void *)(a1 + 24);
      if (v4) {
        sub_1000DBB74(v4);
      }
    }
  }
  uint64_t result = sub_10006F8C8(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 8);
  int v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)v6 + 13) = 0;
  if (v7)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v6);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100138E7C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 140);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(a1 + 80) = 0;
    if ((v1 & 0x400) != 0)
    {
      uint64_t v2 = *(void *)(a1 + 88);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(void *)(a1 + 128) = 0;
    *(void *)(a1 + 96) = 0;
    *(void *)(a1 + 104) = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 28) = 0;
  *((_DWORD *)result + 33) = 0;
  if (v4) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100138EF8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 32);
  unsigned int v7 = a1 + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v8 = (char *)*((void *)this + 1);
          if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v8;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v8 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v10 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v11 = TagFallback & 7;
          if (v11 != 2) {
            goto LABEL_21;
          }
          *(_DWORD *)(a1 + 60) |= 1u;
          uint64_t v12 = *(void *)(a1 + 16);
          if (!v12) {
            operator new();
          }
          unsigned int v47 = 0;
          uint64_t v13 = (char *)*((void *)this + 1);
          if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v47))return 0; {
          }
            }
          else
          {
            unsigned int v47 = *v13;
            *((void *)this + 1) = v13 + 1;
          }
          int v14 = *((_DWORD *)this + 14);
          int v15 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v14 + 1;
          if (v14 >= v15) {
            return 0;
          }
          int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v47);
          if (!sub_1001447A4(v12, this, v17, v18) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
          int v19 = *((_DWORD *)this + 14);
          BOOL v20 = __OFSUB__(v19, 1);
          int v21 = v19 - 1;
          if (v21 < 0 == v20) {
            *((_DWORD *)this + 14) = v21;
          }
          int v22 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v22 < *((void *)this + 2) && *v22 == 18)
          {
            *((void *)this + 1) = v22 + 1;
            goto LABEL_33;
          }
        }
        if (v10 != 2) {
          break;
        }
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_21;
        }
LABEL_33:
        *(_DWORD *)(a1 + 60) |= 2u;
        uint64_t v23 = *(void *)(a1 + 24);
        if (!v23) {
          operator new();
        }
        unsigned int v48 = 0;
        uint64_t v24 = (char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v48))return 0; {
        }
          }
        else
        {
          unsigned int v48 = *v24;
          *((void *)this + 1) = v24 + 1;
        }
        int v25 = *((_DWORD *)this + 14);
        int v26 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v25 + 1;
        if (v25 >= v26) {
          return 0;
        }
        int v27 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v48);
        if (!sub_1000DBBD4(v23, this, v28, v29) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v27);
        int v30 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v30, 1);
        int v31 = v30 - 1;
        if (v31 < 0 == v20) {
          *((_DWORD *)this + 14) = v31;
        }
        uint64_t v32 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v32 < *((void *)this + 2) && *v32 == 26) {
          goto LABEL_46;
        }
      }
      if (v10 != 3) {
        break;
      }
      int v11 = TagFallback & 7;
      if (v11 != 2) {
        goto LABEL_21;
      }
      while (1)
      {
        int v33 = *(_DWORD *)(a1 + 44);
        uint64_t v34 = *(int *)(a1 + 40);
        if ((int)v34 >= v33)
        {
          if (v33 == *(_DWORD *)(a1 + 48))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v33 + 1);
            int v33 = *(_DWORD *)(a1 + 44);
          }
          *(_DWORD *)(a1 + 44) = v33 + 1;
          sub_10014911C();
        }
        uint64_t v35 = *(void *)(a1 + 32);
        *(_DWORD *)(a1 + 40) = v34 + 1;
        uint64_t v36 = *(void *)(v35 + 8 * v34);
        unsigned int v49 = 0;
        uint64_t v37 = (char *)*((void *)this + 1);
        if ((unint64_t)v37 >= *((void *)this + 2) || *v37 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v49))return 0; {
        }
          }
        else
        {
          unsigned int v49 = *v37;
          *((void *)this + 1) = v37 + 1;
        }
        int v38 = *((_DWORD *)this + 14);
        int v39 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v38 + 1;
        if (v38 >= v39) {
          return 0;
        }
        int v40 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v49);
        if (!sub_1001447A4(v36, this, v41, v42) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v40);
        int v43 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v43, 1);
        int v44 = v43 - 1;
        if (v44 < 0 == v20) {
          *((_DWORD *)this + 14) = v44;
        }
        uint64_t v32 = (unsigned char *)*((void *)this + 1);
        uint64_t v45 = (unsigned char *)*((void *)this + 2);
        if (v32 >= v45 || *v32 != 26) {
          break;
        }
LABEL_46:
        *((void *)this + 1) = v32 + 1;
      }
      if (v32 == v45 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v11 = TagFallback & 7;
LABEL_21:
    if (v11 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
  }
    }
}

void sub_100139308()
{
}

uint64_t sub_100139340(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 60);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 16);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1008AC438 + 16);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 60);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v8 = *(void *)(v5 + 24);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1008AC438 + 24);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  }
  if (*(int *)(v5 + 40) >= 1)
  {
    uint64_t v9 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(*(void *)(v5 + 32) + 8 * v9++), a2, a4);
    while (v9 < *(int *)(v5 + 40));
  }
  uint64_t v12 = *(void **)(v5 + 8);
  int v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v10 = v12;
  if (v12 && *v10 != v10[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v11, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10013942C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 15);
  if (v6)
  {
    uint64_t v7 = (unsigned int *)*((void *)this + 2);
    if (!v7) {
      uint64_t v7 = *(unsigned int **)(qword_1008AC438 + 16);
    }
    *(unsigned char *)a2 = 10;
    unsigned int v8 = a2 + 1;
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7[34];
    if (v9 > 0x7F)
    {
      unsigned int v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, v8, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v9;
      unsigned int v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
    uint64_t v4 = sub_10014531C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v7, v10, a3, a4);
    int v6 = *((_DWORD *)this + 15);
  }
  if ((v6 & 2) != 0)
  {
    int v11 = (unsigned int *)*((void *)this + 3);
    if (!v11) {
      int v11 = *(unsigned int **)(qword_1008AC438 + 24);
    }
    *(unsigned char *)uint64_t v4 = 18;
    uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[6];
    if (v12 > 0x7F)
    {
      uint64_t v13 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v12;
      uint64_t v13 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
    uint64_t v4 = sub_1000DBE2C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, v13, a3);
  }
  if (*((int *)this + 10) >= 1)
  {
    uint64_t v14 = 0;
    do
    {
      int v15 = *(unsigned int **)(*((void *)this + 4) + 8 * v14);
      *(unsigned char *)uint64_t v4 = 26;
      int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v15[34];
      if (v16 > 0x7F)
      {
        uint64_t v17 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v16, (int)v4 + 1, a3);
      }
      else
      {
        *((unsigned char *)v4 + 1) = (_BYTE)v16;
        uint64_t v17 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      }
      uint64_t v4 = sub_10014531C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v15, v17, a3, a4);
      ++v14;
    }
    while (v14 < *((int *)this + 10));
  }
  BOOL v20 = (void *)*((void *)this + 1);
  int v19 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v18 = v20;
  if (!v20 || *v18 == v18[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v19, v4, a3);
}

uint64_t sub_1001395A0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (!*(unsigned char *)(a1 + 60))
  {
    int v3 = 0;
    goto LABEL_18;
  }
  if ((*(unsigned char *)(a1 + 60) & 1) == 0)
  {
    int v3 = 0;
    if ((*(unsigned char *)(a1 + 60) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    uint64_t v4 = *(void *)(qword_1008AC438 + 16);
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100145884(v4, a2);
  int v6 = (int)v5;
  if (v5 >= 0x80) {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
  }
  else {
    int v7 = 1;
  }
  int v3 = v6 + v7 + 1;
  if ((*(_DWORD *)(a1 + 60) & 2) != 0)
  {
LABEL_12:
    uint64_t v8 = *(void *)(a1 + 24);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1008AC438 + 24);
    }
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000DBEDC(v8, a2);
    int v10 = (int)v9;
    if (v9 >= 0x80) {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
    }
    else {
      int v11 = 1;
    }
    v3 += v10 + v11 + 1;
  }
LABEL_18:
  int v12 = *(_DWORD *)(a1 + 40);
  uint64_t v13 = (v12 + v3);
  if (v12 >= 1)
  {
    uint64_t v14 = 0;
    do
    {
      int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100145884(*(void *)(*(void *)(a1 + 32) + 8 * v14), a2);
      int v16 = (int)v15;
      if (v15 >= 0x80) {
        int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
      }
      else {
        int v17 = 1;
      }
      uint64_t v13 = (v16 + v13 + v17);
      ++v14;
    }
    while (v14 < *(int *)(a1 + 40));
  }
  uint64_t v18 = *(void **)(a1 + 8);
  if (v18 && *v18 != v18[1]) {
    uint64_t v13 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v13;
  }
  *(_DWORD *)(a1 + 56) = v13;
  return v13;
}

uint64_t sub_1001396E8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100138A0C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001397BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001397D4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v23);
  }
  int v4 = *(_DWORD *)(a2 + 120);
  if (v4)
  {
    sub_10006F628(a1 + 112, *(_DWORD *)(a1 + 120) + v4);
    memcpy((void *)(*(void *)(a1 + 112) + 8 * *(int *)(a1 + 120)), *(const void **)(a2 + 112), 8 * *(int *)(a2 + 120));
    *(_DWORD *)(a1 + 120) += *(_DWORD *)(a2 + 120);
  }
  int v5 = *(_DWORD *)(a2 + 140);
  if (!(_BYTE)v5) {
    goto LABEL_15;
  }
  if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 140) |= 1u;
    *(void *)(a1 + 16) = v7;
    int v5 = *(_DWORD *)(a2 + 140);
    if ((v5 & 2) == 0)
    {
LABEL_8:
      if ((v5 & 4) == 0) {
        goto LABEL_9;
      }
      goto LABEL_26;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v8 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 140) |= 2u;
  *(void *)(a1 + 24) = v8;
  int v5 = *(_DWORD *)(a2 + 140);
  if ((v5 & 4) == 0)
  {
LABEL_9:
    if ((v5 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v9 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 140) |= 4u;
  *(void *)(a1 + 32) = v9;
  int v5 = *(_DWORD *)(a2 + 140);
  if ((v5 & 8) == 0)
  {
LABEL_10:
    if ((v5 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t v10 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 140) |= 8u;
  *(void *)(a1 + 40) = v10;
  int v5 = *(_DWORD *)(a2 + 140);
  if ((v5 & 0x10) == 0)
  {
LABEL_11:
    if ((v5 & 0x20) == 0) {
      goto LABEL_12;
    }
LABEL_29:
    uint64_t v12 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 140) |= 0x20u;
    *(void *)(a1 + 56) = v12;
    int v5 = *(_DWORD *)(a2 + 140);
    if ((v5 & 0x40) == 0)
    {
LABEL_13:
      if ((v5 & 0x80) == 0) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
    goto LABEL_30;
  }
LABEL_28:
  uint64_t v11 = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 140) |= 0x10u;
  *(void *)(a1 + 48) = v11;
  int v5 = *(_DWORD *)(a2 + 140);
  if ((v5 & 0x20) != 0) {
    goto LABEL_29;
  }
LABEL_12:
  if ((v5 & 0x40) == 0) {
    goto LABEL_13;
  }
LABEL_30:
  uint64_t v13 = *(void *)(a2 + 64);
  *(_DWORD *)(a1 + 140) |= 0x40u;
  *(void *)(a1 + 64) = v13;
  int v5 = *(_DWORD *)(a2 + 140);
  if ((v5 & 0x80) != 0)
  {
LABEL_14:
    uint64_t v6 = *(void *)(a2 + 72);
    *(_DWORD *)(a1 + 140) |= 0x80u;
    *(void *)(a1 + 72) = v6;
    int v5 = *(_DWORD *)(a2 + 140);
  }
LABEL_15:
  if ((v5 & 0xFF00) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v5 & 0x100) != 0)
  {
    int v14 = *(_DWORD *)(a2 + 80);
    *(_DWORD *)(a1 + 140) |= 0x100u;
    *(_DWORD *)(a1 + 80) = v14;
    int v5 = *(_DWORD *)(a2 + 140);
    if ((v5 & 0x200) == 0)
    {
LABEL_18:
      if ((v5 & 0x400) == 0) {
        goto LABEL_19;
      }
      goto LABEL_34;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_18;
  }
  int v15 = *(_DWORD *)(a2 + 84);
  *(_DWORD *)(a1 + 140) |= 0x200u;
  *(_DWORD *)(a1 + 84) = v15;
  int v5 = *(_DWORD *)(a2 + 140);
  if ((v5 & 0x400) == 0)
  {
LABEL_19:
    if ((v5 & 0x800) == 0) {
      goto LABEL_20;
    }
    goto LABEL_37;
  }
LABEL_34:
  int v16 = *(const std::string **)(a2 + 88);
  *(_DWORD *)(a1 + 140) |= 0x400u;
  int v17 = *(std::string **)(a1 + 88);
  if (v17 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v17, v16);
  int v5 = *(_DWORD *)(a2 + 140);
  if ((v5 & 0x800) == 0)
  {
LABEL_20:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t v18 = *(void *)(a2 + 96);
  *(_DWORD *)(a1 + 140) |= 0x800u;
  *(void *)(a1 + 96) = v18;
  int v5 = *(_DWORD *)(a2 + 140);
  if ((v5 & 0x1000) == 0)
  {
LABEL_21:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t v19 = *(void *)(a2 + 104);
  *(_DWORD *)(a1 + 140) |= 0x1000u;
  *(void *)(a1 + 104) = v19;
  int v5 = *(_DWORD *)(a2 + 140);
  if ((v5 & 0x4000) == 0)
  {
LABEL_22:
    if ((v5 & 0x8000) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_41;
  }
LABEL_39:
  unsigned int v20 = *(_DWORD *)(a2 + 128);
  if (!sub_100071A2C(v20)) {
    sub_1004107BC();
  }
  *(_DWORD *)(a1 + 140) |= 0x4000u;
  *(_DWORD *)(a1 + 128) = v20;
  if ((*(_DWORD *)(a2 + 140) & 0x8000) != 0)
  {
LABEL_41:
    unsigned int v21 = *(_DWORD *)(a2 + 132);
    if (v21 >= 2) {
      sub_100410790();
    }
    *(_DWORD *)(a1 + 140) |= 0x8000u;
    *(_DWORD *)(a1 + 132) = v21;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100139AE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100139AFC(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100139B88()
{
  return 1;
}

uint64_t sub_100139B90()
{
  uint64_t v0 = qword_1008A16F8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100136C54;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A15C8;
}

void sub_100139C24(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100139C38(uint64_t a1)
{
  *(void *)a1 = off_100851800;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_100139C90(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100139CA4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), *(_DWORD *)(a2 + 32) + *(_DWORD *)(a1 + 32));
  if (*(int *)(a2 + 32) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 24) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 36);
      uint64_t v7 = *(int *)(a1 + 32);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 40))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), v6 + 1);
          int v6 = *(_DWORD *)(a1 + 36);
        }
        *(_DWORD *)(a1 + 36) = v6 + 1;
        sub_100149180();
      }
      uint64_t v8 = *(void *)(a1 + 24);
      *(_DWORD *)(a1 + 32) = v7 + 1;
      sub_100140330(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 32));
  }
  LOBYTE(v9) = *(unsigned char *)(a2 + 68);
  if ((_BYTE)v9)
  {
    if (*(unsigned char *)(a2 + 68))
    {
      *(_DWORD *)(a1 + 68) |= 1u;
      uint64_t v10 = *(void *)(a1 + 16);
      if (!v10) {
        operator new();
      }
      uint64_t v11 = *(void *)(a2 + 16);
      if (!v11) {
        uint64_t v11 = *(void *)(qword_1008AC440 + 16);
      }
      sub_10013ADAC(v10, v11);
      int v9 = *(_DWORD *)(a2 + 68);
    }
    if ((v9 & 4) != 0)
    {
      *(_DWORD *)(a1 + 68) |= 4u;
      uint64_t v12 = *(void *)(a1 + 48);
      if (!v12) {
        operator new();
      }
      uint64_t v13 = *(void *)(a2 + 48);
      if (!v13) {
        uint64_t v13 = *(void *)(qword_1008AC440 + 48);
      }
      sub_10013AF64(v12, v13);
      int v9 = *(_DWORD *)(a2 + 68);
    }
    if ((v9 & 8) != 0)
    {
      *(_DWORD *)(a1 + 68) |= 8u;
      uint64_t v14 = *(void *)(a1 + 56);
      if (!v14) {
        operator new();
      }
      uint64_t v15 = *(void *)(a2 + 56);
      if (!v15) {
        uint64_t v15 = *(void *)(qword_1008AC440 + 56);
      }
      sub_10013B20C(v14, v15);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100139EF0()
{
}

void sub_100139F58(uint64_t *a1)
{
  *a1 = (uint64_t)off_100851800;
  uint64_t v2 = a1 + 3;
  sub_100139FC4(a1);
  sub_10006F938(v2);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void *sub_100139FC4(void *result)
{
  if ((void *)qword_1008AC440 != result)
  {
    int v1 = result;
    uint64_t v2 = result[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[6];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t result = (void *)v1[7];
    if (result)
    {
      uint64_t v4 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v4();
    }
  }
  return result;
}

void sub_10013A094(uint64_t *a1)
{
  sub_100139F58(a1);

  operator delete();
}

uint64_t sub_10013A0CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 64) = a2;
  return result;
}

void sub_10013A0D4()
{
}

void sub_10013A114()
{
}

uint64_t sub_10013A138(uint64_t a1)
{
  LOBYTE(v2) = *(unsigned char *)(a1 + 68);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(a1 + 68))
    {
      uint64_t v3 = *(void *)(a1 + 16);
      if (v3)
      {
        sub_10013A1E8(v3);
        int v2 = *(_DWORD *)(a1 + 68);
      }
    }
    if ((v2 & 4) != 0)
    {
      uint64_t v4 = *(void *)(a1 + 48);
      if (v4)
      {
        sub_10013A268(v4);
        int v2 = *(_DWORD *)(a1 + 68);
      }
    }
    if ((v2 & 8) != 0)
    {
      uint64_t v5 = *(void *)(a1 + 56);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 40))
        {
          *(void *)(v5 + 16) = 0;
          *(void *)(v5 + 24) = 0;
          *(unsigned char *)(v5 + 32) = 0;
        }
        uint64_t v7 = *(void *)(v5 + 8);
        int v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v5 + 8);
        *((_DWORD *)v6 + 8) = 0;
        if (v7) {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v6);
        }
      }
    }
  }
  uint64_t result = sub_10006F8C8(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 8);
  int v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)v9 + 15) = 0;
  if (v10)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v9);
  }
  return result;
}

uint64_t sub_10013A1E8(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 40);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(this + 40))
    {
      this = *(void *)(this + 16);
      if (this)
      {
        this = (uint64_t)sub_100138E7C(this);
        int v2 = *(_DWORD *)(v1 + 40);
      }
    }
    if ((v2 & 2) != 0)
    {
      this = *(void *)(v1 + 24);
      if (this) {
        this = sub_100140968(this);
      }
    }
    *(_DWORD *)(v1 + 32) = 1;
  }
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v3 + 8) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10013A268(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 148);
  if ((_BYTE)v1)
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(void *)(a1 + 80) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(a1 + 136) = 0;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 8) = 0;
  *((_DWORD *)result + 35) = 0;
  if (v3) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10013A2B8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(unsigned char *)(a1 + 32) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 8) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10013A2DC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24);
  unsigned int v7 = a1 + 8;
  while (1)
  {
LABEL_2:
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 < *((void *)this + 2) && (*v8 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_20;
        }
        *(_DWORD *)(a1 + 68) |= 1u;
        uint64_t v11 = *(void *)(a1 + 16);
        if (!v11) {
          operator new();
        }
        unsigned int v55 = 0;
        uint64_t v12 = (char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v55))return 0; {
        }
          }
        else
        {
          unsigned int v55 = *v12;
          *((void *)this + 1) = v12 + 1;
        }
        int v13 = *((_DWORD *)this + 14);
        int v14 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v13 + 1;
        if (v13 >= v14) {
          return 0;
        }
        int v15 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v55);
        if (!sub_100143C80(v11, this, v16, v17) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v15);
        int v18 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v18, 1);
        int v20 = v18 - 1;
        if (v20 < 0 == v19) {
          *((_DWORD *)this + 14) = v20;
        }
        unsigned int v21 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 != 18) {
          continue;
        }
        goto LABEL_31;
      case 2u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_20;
        }
        break;
      case 3u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_50;
        }
        goto LABEL_20;
      case 4u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_20;
        }
        goto LABEL_64;
      default:
        int v10 = TagFallback & 7;
LABEL_20:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
        continue;
        }
    }
    while (1)
    {
      int v22 = *(_DWORD *)(a1 + 36);
      uint64_t v23 = *(int *)(a1 + 32);
      if ((int)v23 >= v22)
      {
        if (v22 == *(_DWORD *)(a1 + 40))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v22 + 1);
          int v22 = *(_DWORD *)(a1 + 36);
        }
        *(_DWORD *)(a1 + 36) = v22 + 1;
        sub_100149180();
      }
      uint64_t v24 = *(void *)(a1 + 24);
      *(_DWORD *)(a1 + 32) = v23 + 1;
      uint64_t v25 = *(void *)(v24 + 8 * v23);
      unsigned int v55 = 0;
      int v26 = (char *)*((void *)this + 1);
      if ((unint64_t)v26 >= *((void *)this + 2) || *v26 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v55))return 0; {
      }
        }
      else
      {
        unsigned int v55 = *v26;
        *((void *)this + 1) = v26 + 1;
      }
      int v27 = *((_DWORD *)this + 14);
      int v28 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v27 + 1;
      if (v27 >= v28) {
        return 0;
      }
      int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v55);
      if (!sub_100140A1C(v25, this, v30, v31) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
      int v32 = *((_DWORD *)this + 14);
      BOOL v19 = __OFSUB__(v32, 1);
      int v33 = v32 - 1;
      if (v33 < 0 == v19) {
        *((_DWORD *)this + 14) = v33;
      }
      unsigned int v21 = (unsigned char *)*((void *)this + 1);
      if ((unint64_t)v21 >= *((void *)this + 2)) {
        goto LABEL_2;
      }
      int v34 = *v21;
      if (v34 != 18) {
        break;
      }
LABEL_31:
      *((void *)this + 1) = v21 + 1;
    }
    if (v34 != 26) {
      continue;
    }
    *((void *)this + 1) = v21 + 1;
LABEL_50:
    *(_DWORD *)(a1 + 68) |= 4u;
    uint64_t v35 = *(void *)(a1 + 48);
    if (!v35) {
      operator new();
    }
    unsigned int v55 = 0;
    uint64_t v36 = (char *)*((void *)this + 1);
    if ((unint64_t)v36 >= *((void *)this + 2) || *v36 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v55)) {
        return 0;
      }
    }
    else
    {
      unsigned int v55 = *v36;
      *((void *)this + 1) = v36 + 1;
    }
    int v37 = *((_DWORD *)this + 14);
    int v38 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v37 + 1;
    if (v37 >= v38) {
      return 0;
    }
    int v39 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v55);
    if (!sub_100141FD0(v35, this, v40, v41) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v39);
    int v42 = *((_DWORD *)this + 14);
    BOOL v19 = __OFSUB__(v42, 1);
    int v43 = v42 - 1;
    if (v43 < 0 == v19) {
      *((_DWORD *)this + 14) = v43;
    }
    int v44 = (unsigned char *)*((void *)this + 1);
    if ((unint64_t)v44 < *((void *)this + 2) && *v44 == 34)
    {
      *((void *)this + 1) = v44 + 1;
LABEL_64:
      *(_DWORD *)(a1 + 68) |= 8u;
      uint64_t v45 = *(void *)(a1 + 56);
      if (!v45) {
        operator new();
      }
      unsigned int v55 = 0;
      unsigned int v46 = (char *)*((void *)this + 1);
      if ((unint64_t)v46 >= *((void *)this + 2) || *v46 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v55))return 0; {
      }
        }
      else
      {
        unsigned int v55 = *v46;
        *((void *)this + 1) = v46 + 1;
      }
      int v47 = *((_DWORD *)this + 14);
      int v48 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v47 + 1;
      if (v47 >= v48) {
        return 0;
      }
      int v49 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v55);
      if (!sub_100143434(v45, this, v50, v51) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v49);
      int v52 = *((_DWORD *)this + 14);
      BOOL v19 = __OFSUB__(v52, 1);
      int v53 = v52 - 1;
      if (v53 < 0 == v19) {
        *((_DWORD *)this + 14) = v53;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
  }
}

void sub_10013A7F0()
{
}

uint64_t sub_10013A854(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 68))
  {
    uint64_t v6 = *(void *)(this + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1008AC440 + 16);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 24) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  int v8 = *(_DWORD *)(v5 + 68);
  if ((v8 & 4) != 0)
  {
    uint64_t v9 = *(void *)(v5 + 48);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1008AC440 + 48);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
    int v8 = *(_DWORD *)(v5 + 68);
  }
  if ((v8 & 8) != 0)
  {
    uint64_t v10 = *(void *)(v5 + 56);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_1008AC440 + 56);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  }
  int v13 = *(void **)(v5 + 8);
  uint64_t v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v11 = v13;
  if (v13 && *v11 != v11[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v12, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10013A968(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  if (*((unsigned char *)this + 68))
  {
    uint64_t v6 = (unsigned int *)*((void *)this + 2);
    if (!v6) {
      uint64_t v6 = *(unsigned int **)(qword_1008AC440 + 16);
    }
    *(unsigned char *)a2 = 10;
    unsigned int v7 = a2 + 1;
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v6[9];
    if (v8 > 0x7F)
    {
      uint64_t v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v7, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v8;
      uint64_t v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
    uint64_t v4 = sub_1001440F0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v6, v9, a3, a4);
  }
  if (*((int *)this + 8) >= 1)
  {
    uint64_t v10 = 0;
    do
    {
      uint64_t v11 = *(unsigned int **)(*((void *)this + 3) + 8 * v10);
      *(unsigned char *)uint64_t v4 = 18;
      uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[22];
      if (v12 > 0x7F)
      {
        int v13 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)v4 + 1, a3);
      }
      else
      {
        *((unsigned char *)v4 + 1) = (_BYTE)v12;
        int v13 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      }
      uint64_t v4 = sub_100141478((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, v13, a3);
      ++v10;
    }
    while (v10 < *((int *)this + 8));
  }
  int v14 = *((_DWORD *)this + 17);
  if ((v14 & 4) != 0)
  {
    int v15 = (unsigned int *)*((void *)this + 6);
    if (!v15) {
      int v15 = *(unsigned int **)(qword_1008AC440 + 48);
    }
    *(unsigned char *)uint64_t v4 = 26;
    uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v15[36];
    if (v16 > 0x7F)
    {
      int v17 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v16, (int)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v16;
      int v17 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
    uint64_t v4 = sub_1001429BC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v15, v17, a3);
    int v14 = *((_DWORD *)this + 17);
  }
  if ((v14 & 8) != 0)
  {
    uint64_t v18 = *((void *)this + 7);
    if (!v18) {
      uint64_t v18 = *(void *)(qword_1008AC440 + 56);
    }
    *(unsigned char *)uint64_t v4 = 34;
    BOOL v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v18 + 36);
    if (v19 > 0x7F)
    {
      uint64_t v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v19, (int)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v19;
      uint64_t v20 = (uint64_t)v4 + 2;
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001436E4(v18, v20, a3);
  }
  uint64_t v23 = (void *)*((void *)this + 1);
  int v22 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  unsigned int v21 = v23;
  if (!v23 || *v21 == v21[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v22, v4, a3);
}

uint64_t sub_10013AB30(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 68);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    goto LABEL_25;
  }
  if (*(unsigned char *)(a1 + 68))
  {
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_1008AC440 + 16);
    }
    uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100144244(v5, a2);
    int v7 = (int)v6;
    if (v6 >= 0x80) {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
    }
    else {
      int v8 = 1;
    }
    int v4 = v7 + v8 + 1;
    int v3 = *(_DWORD *)(a1 + 68);
    if ((v3 & 4) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  int v4 = 0;
  if ((*(unsigned char *)(a1 + 68) & 4) != 0)
  {
LABEL_12:
    uint64_t v9 = *(void *)(a1 + 48);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1008AC440 + 48);
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100142F0C(v9, a2);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    }
    else {
      int v12 = 1;
    }
    v4 += v11 + v12 + 1;
    int v3 = *(_DWORD *)(a1 + 68);
  }
LABEL_18:
  if ((v3 & 8) != 0)
  {
    int v13 = *(_DWORD **)(a1 + 56);
    if (!v13) {
      int v13 = *(_DWORD **)(qword_1008AC440 + 56);
    }
    int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001437D4(v13, a2);
    int v15 = (int)v14;
    if (v14 >= 0x80) {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
    }
    else {
      int v16 = 1;
    }
    v4 += v15 + v16 + 1;
  }
LABEL_25:
  int v17 = *(_DWORD *)(a1 + 32);
  uint64_t v18 = (v17 + v4);
  if (v17 >= 1)
  {
    uint64_t v19 = 0;
    do
    {
      uint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100141800(*(void *)(*(void *)(a1 + 24) + 8 * v19), a2);
      int v21 = (int)v20;
      if (v20 >= 0x80) {
        int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, a2);
      }
      else {
        int v22 = 1;
      }
      uint64_t v18 = (v21 + v18 + v22);
      ++v19;
    }
    while (v19 < *(int *)(a1 + 32));
  }
  uint64_t v23 = *(void **)(a1 + 8);
  if (v23 && *v23 != v23[1]) {
    uint64_t v18 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v18;
  }
  *(_DWORD *)(a1 + 64) = v18;
  return v18;
}

uint64_t sub_10013ACC0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100139CA4((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10013AD94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10013ADAC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 40);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 40))
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v5 = *(void *)(a1 + 16);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 16);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_1008AC498 + 16);
      }
      sub_1001397D4(v5, v6);
      int v4 = *(_DWORD *)(a2 + 40);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 2u;
      uint64_t v7 = *(void *)(a1 + 24);
      if (!v7) {
        operator new();
      }
      uint64_t v8 = *(void *)(a2 + 24);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_1008AC498 + 24);
      }
      sub_100141B7C(v7, v8);
      int v4 = *(_DWORD *)(a2 + 40);
    }
    if ((v4 & 4) != 0)
    {
      int v9 = *(_DWORD *)(a2 + 32);
      if ((v9 - 1) >= 0xA) {
        sub_1004107E8();
      }
      *(_DWORD *)(a1 + 40) |= 4u;
      *(_DWORD *)(a1 + 32) = v9;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10013AF18()
{
}

uint64_t sub_10013AF64(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v21);
  }
  int v4 = *(_DWORD *)(a2 + 40);
  if (v4)
  {
    sub_10006F57C(a1 + 32, *(_DWORD *)(a1 + 40) + v4);
    memcpy((void *)(*(void *)(a1 + 32) + 4 * *(int *)(a1 + 40)), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 40));
    *(_DWORD *)(a1 + 40) += *(_DWORD *)(a2 + 40);
  }
  int v5 = *(_DWORD *)(a2 + 148);
  if (!(_BYTE)v5) {
    goto LABEL_14;
  }
  if (v5)
  {
    uint64_t v9 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 148) |= 1u;
    *(void *)(a1 + 16) = v9;
    int v5 = *(_DWORD *)(a2 + 148);
    if ((v5 & 2) == 0)
    {
LABEL_8:
      if ((v5 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_26;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 148) |= 2u;
  *(void *)(a1 + 24) = v10;
  int v5 = *(_DWORD *)(a2 + 148);
  if ((v5 & 8) == 0)
  {
LABEL_9:
    if ((v5 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v11 = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 148) |= 8u;
  *(void *)(a1 + 48) = v11;
  int v5 = *(_DWORD *)(a2 + 148);
  if ((v5 & 0x10) == 0)
  {
LABEL_10:
    if ((v5 & 0x20) == 0) {
      goto LABEL_11;
    }
LABEL_28:
    uint64_t v13 = *(void *)(a2 + 64);
    *(_DWORD *)(a1 + 148) |= 0x20u;
    *(void *)(a1 + 64) = v13;
    int v5 = *(_DWORD *)(a2 + 148);
    if ((v5 & 0x40) == 0)
    {
LABEL_12:
      if ((v5 & 0x80) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_27:
  uint64_t v12 = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 148) |= 0x10u;
  *(void *)(a1 + 56) = v12;
  int v5 = *(_DWORD *)(a2 + 148);
  if ((v5 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_11:
  if ((v5 & 0x40) == 0) {
    goto LABEL_12;
  }
LABEL_29:
  uint64_t v14 = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 148) |= 0x40u;
  *(void *)(a1 + 72) = v14;
  int v5 = *(_DWORD *)(a2 + 148);
  if ((v5 & 0x80) != 0)
  {
LABEL_13:
    uint64_t v6 = *(void *)(a2 + 80);
    *(_DWORD *)(a1 + 148) |= 0x80u;
    *(void *)(a1 + 80) = v6;
    int v5 = *(_DWORD *)(a2 + 148);
  }
LABEL_14:
  if ((v5 & 0xFF00) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v5 & 0x100) != 0)
  {
    uint64_t v15 = *(void *)(a2 + 88);
    *(_DWORD *)(a1 + 148) |= 0x100u;
    *(void *)(a1 + 88) = v15;
    int v5 = *(_DWORD *)(a2 + 148);
    if ((v5 & 0x200) == 0)
    {
LABEL_17:
      if ((v5 & 0x400) == 0) {
        goto LABEL_18;
      }
      goto LABEL_33;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_17;
  }
  uint64_t v16 = *(void *)(a2 + 96);
  *(_DWORD *)(a1 + 148) |= 0x200u;
  *(void *)(a1 + 96) = v16;
  int v5 = *(_DWORD *)(a2 + 148);
  if ((v5 & 0x400) == 0)
  {
LABEL_18:
    if ((v5 & 0x800) == 0) {
      goto LABEL_19;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t v17 = *(void *)(a2 + 104);
  *(_DWORD *)(a1 + 148) |= 0x400u;
  *(void *)(a1 + 104) = v17;
  int v5 = *(_DWORD *)(a2 + 148);
  if ((v5 & 0x800) == 0)
  {
LABEL_19:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t v18 = *(void *)(a2 + 112);
  *(_DWORD *)(a1 + 148) |= 0x800u;
  *(void *)(a1 + 112) = v18;
  int v5 = *(_DWORD *)(a2 + 148);
  if ((v5 & 0x1000) == 0)
  {
LABEL_20:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_21;
    }
LABEL_36:
    uint64_t v20 = *(void *)(a2 + 128);
    *(_DWORD *)(a1 + 148) |= 0x2000u;
    *(void *)(a1 + 128) = v20;
    if ((*(_DWORD *)(a2 + 148) & 0x4000) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_22;
  }
LABEL_35:
  uint64_t v19 = *(void *)(a2 + 120);
  *(_DWORD *)(a1 + 148) |= 0x1000u;
  *(void *)(a1 + 120) = v19;
  int v5 = *(_DWORD *)(a2 + 148);
  if ((v5 & 0x2000) != 0) {
    goto LABEL_36;
  }
LABEL_21:
  if ((v5 & 0x4000) != 0)
  {
LABEL_22:
    uint64_t v7 = *(void *)(a2 + 136);
    *(_DWORD *)(a1 + 148) |= 0x4000u;
    *(void *)(a1 + 136) = v7;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10013B1F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10013B20C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 40);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((*(unsigned char *)(a2 + 40) & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 40) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_10:
    uint64_t v8 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 40) |= 2u;
    *(void *)(a1 + 16) = v8;
    if ((*(_DWORD *)(a2 + 40) & 4) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_7;
  }
  char v7 = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 40) |= 1u;
  *(unsigned char *)(a1 + 32) = v7;
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_6:
  if ((v4 & 4) != 0)
  {
LABEL_7:
    uint64_t v5 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 40) |= 4u;
    *(void *)(a1 + 24) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10013B2EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10013B304(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10013B390()
{
  return 1;
}

uint64_t sub_10013B398()
{
  uint64_t v0 = qword_1008A16F8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100136C54;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A15D8;
}

void sub_10013B42C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10013B440(uint64_t a1)
{
  *(void *)a1 = off_1008518B0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return a1;
}

void sub_10013B48C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10013B4A0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 44);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((*(unsigned char *)(a2 + 44) & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 44) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_10:
    uint64_t v8 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 44) |= 2u;
    *(void *)(a1 + 24) = v8;
    if ((*(_DWORD *)(a2 + 44) & 4) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 44) |= 1u;
  *(void *)(a1 + 16) = v7;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_6:
  if ((v4 & 4) != 0)
  {
LABEL_7:
    uint64_t v5 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(void *)(a1 + 32) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10013B580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10013B598(uint64_t a1)
{
  *(void *)a1 = off_1008518B0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10013B5EC(uint64_t a1)
{
  *(void *)a1 = off_1008518B0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_10013B654(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_10013B65C()
{
}

void sub_10013B69C()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10013B6C0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 44))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 9) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10013B6E4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v9 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v10 = TagFallback & 7;
        if (v10 != 1) {
          goto LABEL_28;
        }
        unint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v14;
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
LABEL_18:
          unint64_t v14 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
            return 0;
          }
          *(void *)(a1 + 24) = v14;
          *(_DWORD *)(a1 + 44) |= 2u;
          uint64_t v12 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v12 < *((void *)this + 2) && *v12 == 25)
          {
            *((void *)this + 1) = v12 + 1;
            goto LABEL_22;
          }
        }
      }
      if (v9 == 2)
      {
        int v10 = TagFallback & 7;
        if (v10 != 1) {
          goto LABEL_28;
        }
        goto LABEL_18;
      }
      if (v9 != 3)
      {
        int v10 = TagFallback & 7;
        goto LABEL_28;
      }
      int v10 = TagFallback & 7;
      if (v10 == 1) {
        break;
      }
LABEL_28:
      if (v10 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
    }
      }
LABEL_22:
    unint64_t v14 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
      return 0;
    }
    *(void *)(a1 + 32) = v14;
    *(_DWORD *)(a1 + 44) |= 4u;
  }
  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_10013B8BC(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 44);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_12:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
    if ((*(_DWORD *)(v4 + 44) & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
  int v5 = *(_DWORD *)(v4 + 44);
  if ((v5 & 2) != 0) {
    goto LABEL_12;
  }
LABEL_3:
  if ((v5 & 4) != 0) {
LABEL_4:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v4 + 32), a3);
LABEL_5:
  uint64_t v8 = *(void **)(v4 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v8;
  if (v8 && *v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

uint64_t sub_10013B96C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_10:
    uint64_t v10 = *(void *)(a1 + 24);
    *(unsigned char *)a2 = 17;
    *(void *)(a2 + 1) = v10;
    a2 += 9;
    if ((*(_DWORD *)(a1 + 44) & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  uint64_t v9 = *(void *)(a1 + 16);
  *(unsigned char *)a2 = 9;
  *(void *)(a2 + 1) = v9;
  a2 += 9;
  int v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_3:
  if ((v3 & 4) != 0)
  {
LABEL_4:
    uint64_t v4 = *(void *)(a1 + 32);
    *(unsigned char *)a2 = 25;
    *(void *)(a2 + 1) = v4;
    a2 += 9;
  }
LABEL_5:
  uint64_t v7 = *(void **)(a1 + 8);
  int v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  unsigned int v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v5, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
}

uint64_t sub_10013BA94(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 44);
  unsigned int v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0) {
    v4 += 9;
  }
  if ((v3 & 4) != 0) {
    v4 += 9;
  }
  if (*(unsigned char *)(a1 + 44)) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v8 = *(void **)(a1 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v7 = v8;
  if (v8 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
  *(_DWORD *)(a1 + 40) = v5;
  return v5;
}

uint64_t sub_10013BB08(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10013B4A0((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10013BBDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10013BBF4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10013BC80()
{
  return 1;
}

uint64_t sub_10013BC88()
{
  uint64_t v0 = qword_1008A16F8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100136C54;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1608;
}

void sub_10013BD1C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10013BD30(uint64_t a1)
{
  *(void *)a1 = off_100851960;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return a1;
}

void sub_10013BD7C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10013BD90(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 44);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((*(unsigned char *)(a2 + 44) & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 44) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_10:
    uint64_t v8 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 44) |= 2u;
    *(void *)(a1 + 24) = v8;
    if ((*(_DWORD *)(a2 + 44) & 4) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 44) |= 1u;
  *(void *)(a1 + 16) = v7;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_6:
  if ((v4 & 4) != 0)
  {
LABEL_7:
    uint64_t v5 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(void *)(a1 + 32) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10013BE70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10013BE88(uint64_t a1)
{
  *(void *)a1 = off_100851960;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10013BEDC(uint64_t a1)
{
  *(void *)a1 = off_100851960;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_10013BF44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_10013BF4C()
{
}

void sub_10013BF8C()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10013BFB0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 44))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 9) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10013BFD4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v9 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v10 = TagFallback & 7;
        if (v10 != 1) {
          goto LABEL_28;
        }
        unint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v14;
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
LABEL_18:
          unint64_t v14 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
            return 0;
          }
          *(void *)(a1 + 24) = v14;
          *(_DWORD *)(a1 + 44) |= 2u;
          uint64_t v12 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v12 < *((void *)this + 2) && *v12 == 25)
          {
            *((void *)this + 1) = v12 + 1;
            goto LABEL_22;
          }
        }
      }
      if (v9 == 2)
      {
        int v10 = TagFallback & 7;
        if (v10 != 1) {
          goto LABEL_28;
        }
        goto LABEL_18;
      }
      if (v9 != 3)
      {
        int v10 = TagFallback & 7;
        goto LABEL_28;
      }
      int v10 = TagFallback & 7;
      if (v10 == 1) {
        break;
      }
LABEL_28:
      if (v10 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
    }
      }
LABEL_22:
    unint64_t v14 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
      return 0;
    }
    *(void *)(a1 + 32) = v14;
    *(_DWORD *)(a1 + 44) |= 4u;
  }
  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_10013C1AC(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 44);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_12:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
    if ((*(_DWORD *)(v4 + 44) & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
  int v5 = *(_DWORD *)(v4 + 44);
  if ((v5 & 2) != 0) {
    goto LABEL_12;
  }
LABEL_3:
  if ((v5 & 4) != 0) {
LABEL_4:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v4 + 32), a3);
LABEL_5:
  uint64_t v8 = *(void **)(v4 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v8;
  if (v8 && *v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

uint64_t sub_10013C25C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_10:
    uint64_t v10 = *(void *)(a1 + 24);
    *(unsigned char *)a2 = 17;
    *(void *)(a2 + 1) = v10;
    a2 += 9;
    if ((*(_DWORD *)(a1 + 44) & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  uint64_t v9 = *(void *)(a1 + 16);
  *(unsigned char *)a2 = 9;
  *(void *)(a2 + 1) = v9;
  a2 += 9;
  int v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_3:
  if ((v3 & 4) != 0)
  {
LABEL_4:
    uint64_t v4 = *(void *)(a1 + 32);
    *(unsigned char *)a2 = 25;
    *(void *)(a2 + 1) = v4;
    a2 += 9;
  }
LABEL_5:
  uint64_t v7 = *(void **)(a1 + 8);
  int v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  unsigned int v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v5, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
}

uint64_t sub_10013C384(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 44);
  unsigned int v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0) {
    v4 += 9;
  }
  if ((v3 & 4) != 0) {
    v4 += 9;
  }
  if (*(unsigned char *)(a1 + 44)) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v8 = *(void **)(a1 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v7 = v8;
  if (v8 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
  *(_DWORD *)(a1 + 40) = v5;
  return v5;
}

uint64_t sub_10013C3F8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10013BD90((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10013C4CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10013C4E4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10013C570()
{
  return 1;
}

uint64_t sub_10013C578()
{
  uint64_t v0 = qword_1008A16F8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100136C54;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1618;
}

void sub_10013C60C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_10013C620(void *a1)
{
  *a1 = off_100851A10;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_10013C66C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10013C680(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    sub_10006F628(a1 + 16, *(_DWORD *)(a1 + 24) + v4);
    memcpy((void *)(*(void *)(a1 + 16) + 8 * *(int *)(a1 + 24)), *(const void **)(a2 + 16), 8 * *(int *)(a2 + 24));
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10013C740(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10013C758(void *a1)
{
  *a1 = off_100851A10;
  if (a1[2]) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10013C7D0(void *a1)
{
  sub_10013C758(a1);

  operator delete();
}

uint64_t sub_10013C808(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_10013C810()
{
}

void sub_10013C850()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10013C874(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  *((_DWORD *)result + 7) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10013C88C(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = a1 + 16;
  unsigned int v7 = a1 + 8;
  while (1)
  {
LABEL_2:
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    int v10 = TagFallback & 7;
    if ((TagFallback & 0xFFFFFFF8) == 8)
    {
      if (v10 == 1)
      {
        while (1)
        {
          v24[0] = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v24) & 1) == 0) {
            return 0;
          }
          unint64_t v12 = v24[0];
          int v13 = *(_DWORD *)(a1 + 24);
          if (v13 == *(_DWORD *)(a1 + 28))
          {
            sub_10006F628(v6, v13 + 1);
            int v13 = *(_DWORD *)(a1 + 24);
          }
          uint64_t v14 = *(void *)(a1 + 16);
          int v15 = v13 + 1;
          *(_DWORD *)(a1 + 24) = v13 + 1;
          *(void *)(v14 + 8 * v13) = v12;
          uint64_t v16 = *((void *)this + 1);
          int v17 = *((_DWORD *)this + 4) - v16;
          if (v17 >= 1)
          {
            signed int v18 = v17 / 9u;
            int v19 = v18 >= *(_DWORD *)(a1 + 28) - v15 ? *(_DWORD *)(a1 + 28) - v15 : v18;
            if (v19 >= 1)
            {
              int v20 = 0;
              while (*(unsigned char *)v16 == 9)
              {
                uint64_t v21 = *(void *)(v16 + 1);
                if (v15 >= *(_DWORD *)(a1 + 28))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v24);
                  int v15 = *(_DWORD *)(a1 + 24);
                  uint64_t v14 = *(void *)(a1 + 16);
                }
                *(_DWORD *)(a1 + 24) = v15 + 1;
                *(void *)(v14 + 8 * v15) = v21;
                ++v20;
                v16 += 9;
                ++v15;
                if (v19 == v20)
                {
                  int v20 = v19;
                  break;
                }
              }
              if (v20) {
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * v20);
              }
            }
          }
LABEL_31:
          int v22 = (unsigned char *)*((void *)this + 1);
          uint64_t v23 = (unsigned char *)*((void *)this + 2);
          if (v22 >= v23 || *v22 != 9)
          {
            if (v22 == v23 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)this + 36) = 1;
              return result;
            }
            goto LABEL_2;
          }
          *((void *)this + 1) = v22 + 1;
        }
      }
      if (v10 == 2) {
        break;
      }
    }
    if (v10 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
  }
    }
  uint64_t result = sub_10005D718(this, v6);
  if (result) {
    goto LABEL_31;
  }
  return result;
}

void sub_10013CB00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10013CB18(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  if (*(int *)(this + 24) >= 1)
  {
    uint64_t v5 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(*(void *)(v4 + 16) + 8 * v5++), a3);
    while (v5 < *(int *)(v4 + 24));
  }
  uint64_t v8 = *(void **)(v4 + 8);
  unsigned int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  uint64_t v6 = v8;
  if (v8 && *v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

uint64_t sub_10013CBB4(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  if (*(int *)(a1 + 24) >= 1)
  {
    uint64_t v3 = 0;
    do
    {
      uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * v3);
      *(unsigned char *)a2 = 9;
      *(void *)(a2 + 1) = v4;
      a2 += 9;
      ++v3;
    }
    while (v3 < *(int *)(a1 + 24));
  }
  unsigned int v7 = *(void **)(a1 + 8);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v5, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
}

uint64_t sub_10013CC44(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v5 = *(void **)(a1 + 8);
  uint64_t v3 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v4 = v5;
  uint64_t v6 = (9 * *((_DWORD *)v3 + 4));
  if (v5 && *v4 != v4[1]) {
    uint64_t v6 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v3, a2)
  }
       + v6;
  *(_DWORD *)(a1 + 32) = v6;
  return v6;
}

uint64_t sub_10013CC90(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10013C680((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10013CD64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10013CD7C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10013CE08()
{
  return 1;
}

uint64_t sub_10013CE10()
{
  uint64_t v0 = qword_1008A16F8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100136C54;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1638;
}

void sub_10013CEA4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10013CEB8(uint64_t a1)
{
  *(void *)a1 = off_100851AC0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_10013CF0C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10013CF20(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 6), *(_DWORD *)(a2 + 32) + a1[8]);
  if (*(int *)(a2 + 32) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 24) + 8 * v4);
      int v6 = a1[9];
      uint64_t v7 = (int)a1[8];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[10])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 6), v6 + 1);
          int v6 = a1[9];
        }
        a1[9] = v6 + 1;
        sub_1001491E4();
      }
      uint64_t v8 = *((void *)a1 + 3);
      a1[8] = v7 + 1;
      sub_10013C680(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 32));
  }
  LOBYTE(v9) = *(unsigned char *)(a2 + 52);
  if ((_BYTE)v9)
  {
    if (*(unsigned char *)(a2 + 52))
    {
      int v10 = *(_DWORD *)(a2 + 16);
      a1[13] |= 1u;
      a1[4] = v10;
      int v9 = *(_DWORD *)(a2 + 52);
    }
    if ((v9 & 2) != 0)
    {
      int v11 = *(_DWORD *)(a2 + 20);
      a1[13] |= 2u;
      a1[5] = v11;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10013D090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10013D0A8(uint64_t *a1)
{
  *a1 = (uint64_t)off_100851AC0;
  sub_10006F938(a1 + 3);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10013D10C(uint64_t *a1)
{
  sub_10013D0A8(a1);

  operator delete();
}

uint64_t sub_10013D144(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) = a2;
  return result;
}

void sub_10013D14C()
{
}

void sub_10013D18C()
{
}

uint64_t sub_10013D1B0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 52)) {
    *(void *)(a1 + 16) = 0;
  }
  uint64_t result = sub_10006F8C8(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 8);
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)v3 + 11) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return result;
}

uint64_t sub_10013D210(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 6);
  unsigned int v7 = a1 + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v8 = (char *)*((void *)this + 1);
          if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v8;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v8 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v10 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v11 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_19;
          }
          unsigned int v35 = 0;
          int v13 = (char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v13 >= v12 || *v13 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v35);
            if (!result) {
              return result;
            }
            unsigned int v14 = v35;
            int v15 = (unsigned char *)*((void *)this + 1);
            unint64_t v12 = *((void *)this + 2);
          }
          else
          {
            unsigned int v14 = *v13;
            int v15 = v13 + 1;
            *((void *)this + 1) = v15;
          }
          a1[4] = v14;
          a1[13] |= 1u;
          if ((unint64_t)v15 < v12 && *v15 == 16)
          {
            uint64_t v16 = v15 + 1;
            *((void *)this + 1) = v16;
            goto LABEL_27;
          }
        }
        if (v10 != 2) {
          break;
        }
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        uint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
LABEL_27:
        unsigned int v34 = 0;
        if ((unint64_t)v16 >= v12 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34);
          if (!result) {
            return result;
          }
          unsigned int v18 = v34;
          int v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int v18 = *v16;
          int v19 = v16 + 1;
          *((void *)this + 1) = v19;
        }
        a1[5] = v18;
        a1[13] |= 2u;
        if ((unint64_t)v19 < v12 && *v19 == 26) {
          goto LABEL_34;
        }
      }
      if (v10 != 3) {
        break;
      }
      int v11 = TagFallback & 7;
      if (v11 != 2) {
        goto LABEL_19;
      }
      while (1)
      {
        int v20 = a1[9];
        uint64_t v21 = (int)a1[8];
        if ((int)v21 >= v20)
        {
          if (v20 == a1[10])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v20 + 1);
            int v20 = a1[9];
          }
          a1[9] = v20 + 1;
          sub_1001491E4();
        }
        uint64_t v22 = *((void *)a1 + 3);
        a1[8] = v21 + 1;
        uint64_t v23 = *(void *)(v22 + 8 * v21);
        unsigned int v36 = 0;
        uint64_t v24 = (char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v36))return 0; {
        }
          }
        else
        {
          unsigned int v36 = *v24;
          *((void *)this + 1) = v24 + 1;
        }
        int v25 = *((_DWORD *)this + 14);
        int v26 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v25 + 1;
        if (v25 >= v26) {
          return 0;
        }
        int v27 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v36);
        if (!sub_10013C88C(v23, this, v28, v29) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v27);
        int v30 = *((_DWORD *)this + 14);
        BOOL v31 = __OFSUB__(v30, 1);
        int v32 = v30 - 1;
        if (v32 < 0 == v31) {
          *((_DWORD *)this + 14) = v32;
        }
        int v19 = (unsigned char *)*((void *)this + 1);
        int v33 = (unsigned char *)*((void *)this + 2);
        if (v19 >= v33 || *v19 != 26) {
          break;
        }
LABEL_34:
        *((void *)this + 1) = v19 + 1;
      }
      if (v19 == v33 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v11 = TagFallback & 7;
LABEL_19:
    if (v11 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_10013D518(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 52);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 16), (int)a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
  }
  if ((v6 & 2) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 20), (int)a2, a4);
  }
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(*(void *)(v5 + 24) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  unsigned int v10 = *(void **)(v5 + 8);
  int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v8 = v10;
  if (v10 && *v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10013D5E4(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  char v3 = a2;
  if (*((unsigned char *)this + 52))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 4);
    *(unsigned char *)a2 = 8;
    int v6 = (char *)a2 + 1;
    if ((v5 & 0x80000000) != 0)
    {
      uint64_t v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v5, (unint64_t)v6, a3);
    }
    else
    {
      if (v5 <= 0x7F)
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v5;
        char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        goto LABEL_8;
      }
      uint64_t v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v5, v6, a3);
    }
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v7;
  }
LABEL_8:
  if ((*((unsigned char *)this + 52) & 2) == 0) {
    goto LABEL_15;
  }
  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 5);
  *(unsigned char *)char v3 = 16;
  unint64_t v9 = (unint64_t)v3 + 1;
  if ((v8 & 0x80000000) != 0)
  {
    uint64_t v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v8, v9, a3);
  }
  else
  {
    if (v8 <= 0x7F)
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v8;
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      goto LABEL_15;
    }
    uint64_t v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v9, a3);
  }
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v10;
LABEL_15:
  if (*((int *)this + 8) >= 1)
  {
    uint64_t v11 = 0;
    do
    {
      uint64_t v12 = *(void *)(*((void *)this + 3) + 8 * v11);
      *(unsigned char *)char v3 = 26;
      int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v12 + 32);
      if (v13 > 0x7F)
      {
        uint64_t v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, (int)v3 + 1, a3);
      }
      else
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v13;
        uint64_t v14 = (uint64_t)v3 + 2;
      }
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10013CBB4(v12, v14, a3);
      ++v11;
    }
    while (v11 < *((int *)this + 8));
  }
  int v17 = (void *)*((void *)this + 1);
  uint64_t v16 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v15 = v17;
  if (!v17 || *v15 == v15[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v16, v3, a3);
}

uint64_t sub_10013D730(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  char v3 = *(unsigned char *)(a1 + 52);
  if (!v3)
  {
    int v4 = 0;
    goto LABEL_19;
  }
  if (*(unsigned char *)(a1 + 52))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v5 & 0x80000000) != 0)
    {
      int v4 = 11;
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else if (v5 >= 0x80)
    {
      int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      if ((*(_DWORD *)(a1 + 52) & 2) == 0) {
        goto LABEL_19;
      }
    }
    else
    {
      int v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
  }
  else
  {
    int v4 = 0;
    if ((*(unsigned char *)(a1 + 52) & 2) == 0) {
      goto LABEL_19;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if ((v6 & 0x80000000) != 0)
  {
    int v7 = 11;
  }
  else if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
  }
  else
  {
    int v7 = 2;
  }
  v4 += v7;
LABEL_19:
  int v8 = *(_DWORD *)(a1 + 32);
  uint64_t v9 = (v8 + v4);
  if (v8 >= 1)
  {
    uint64_t v10 = 0;
    do
    {
      uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10013CC44(*(void *)(*(void *)(a1 + 24) + 8 * v10), a2);
      int v12 = (int)v11;
      if (v11 >= 0x80) {
        int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
      }
      else {
        int v13 = 1;
      }
      uint64_t v9 = (v12 + v9 + v13);
      ++v10;
    }
    while (v10 < *(int *)(a1 + 32));
  }
  uint64_t v14 = *(void **)(a1 + 8);
  if (v14 && *v14 != v14[1]) {
    uint64_t v9 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v9;
  }
  *(_DWORD *)(a1 + 48) = v9;
  return v9;
}

uint64_t sub_10013D858(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10013CF20(a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10013D92C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10013D944(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10013D9D0()
{
  return 1;
}

uint64_t sub_10013D9D8()
{
  uint64_t v0 = qword_1008A16F8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100136C54;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1628;
}

void sub_10013DA6C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10013DA80(uint64_t a1)
{
  *(void *)a1 = off_100851B70;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 1;
  *(_DWORD *)(a1 + 48) = 0;
  return a1;
}

void sub_10013DADC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10013DAF0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 48);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 48))
    {
      *(_DWORD *)(a1 + 48) |= 1u;
      uint64_t v5 = *(void *)(a1 + 16);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 16);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_1008AC450 + 16);
      }
      sub_10013B4A0(v5, v6);
      int v4 = *(_DWORD *)(a2 + 48);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 48) |= 2u;
      uint64_t v7 = *(void *)(a1 + 24);
      if (!v7) {
        operator new();
      }
      uint64_t v8 = *(void *)(a2 + 24);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_1008AC450 + 24);
      }
      sub_10013BD90(v7, v8);
      int v4 = *(_DWORD *)(a2 + 48);
    }
    if ((v4 & 4) != 0)
    {
      *(_DWORD *)(a1 + 48) |= 4u;
      uint64_t v9 = *(_DWORD **)(a1 + 32);
      if (!v9) {
        operator new();
      }
      uint64_t v10 = *(void *)(a2 + 32);
      if (!v10) {
        uint64_t v10 = *(void *)(qword_1008AC450 + 32);
      }
      sub_10013CF20(v9, v10);
      int v4 = *(_DWORD *)(a2 + 48);
    }
    if ((v4 & 8) != 0)
    {
      int v11 = *(_DWORD *)(a2 + 40);
      if ((v11 - 1) >= 0xA) {
        sub_100410814();
      }
      *(_DWORD *)(a1 + 48) |= 8u;
      *(_DWORD *)(a1 + 40) = v11;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10013DCB8()
{
}

void sub_10013DD08(void *a1)
{
  *a1 = off_100851B70;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_10013DD68(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void *sub_10013DD68(void *result)
{
  if ((void *)qword_1008AC450 != result)
  {
    int v1 = result;
    uint64_t v2 = result[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[3];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t result = (void *)v1[4];
    if (result)
    {
      int v4 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v4();
    }
  }
  return result;
}

void sub_10013DE38(void *a1)
{
  sub_10013DD08(a1);

  operator delete();
}

uint64_t sub_10013DE70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 44) = a2;
  return result;
}

void sub_10013DE78()
{
}

void sub_10013DEB8()
{
}

uint64_t sub_10013DEDC(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 48))
  {
    if (*(unsigned char *)(this + 48))
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(unsigned char *)(this + 44))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
          *(void *)(this + 32) = 0;
        }
        uint64_t v2 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 36) = 0;
        if (v2) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    if ((*(unsigned char *)(v1 + 48) & 2) != 0)
    {
      this = *(void *)(v1 + 24);
      if (this)
      {
        if (*(unsigned char *)(this + 44))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
          *(void *)(this + 32) = 0;
        }
        uint64_t v3 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 36) = 0;
        if (v3) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    if ((*(unsigned char *)(v1 + 48) & 4) != 0)
    {
      this = *(void *)(v1 + 32);
      if (this) {
        this = sub_10013D1B0(this);
      }
    }
    *(_DWORD *)(v1 + 40) = 1;
  }
  uint64_t v5 = *(void *)(v1 + 8);
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 10) = 0;
  if (v5)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return this;
}

uint64_t sub_10013DFA8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 < *((void *)this + 2) && (*v7 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_21;
        }
        *(_DWORD *)(a1 + 48) |= 1u;
        uint64_t v10 = *(void *)(a1 + 16);
        if (!v10) {
          operator new();
        }
        unsigned int v45 = 0;
        int v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v45))return 0; {
        }
          }
        else
        {
          unsigned int v45 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        int v14 = *((_DWORD *)this + 14);
        int v15 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v14 + 1;
        if (v14 >= v15) {
          return 0;
        }
        int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v45);
        if (!sub_10013B6E4(v10, this, v17, v18) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
        int v19 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v19, 1);
        int v21 = v19 - 1;
        if (v21 < 0 == v20) {
          *((_DWORD *)this + 14) = v21;
        }
        uint64_t v22 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 != 18) {
          continue;
        }
        *((void *)this + 1) = v22 + 1;
        goto LABEL_33;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_21;
        }
LABEL_33:
        *(_DWORD *)(a1 + 48) |= 2u;
        uint64_t v23 = *(void *)(a1 + 24);
        if (!v23) {
          operator new();
        }
        unsigned int v45 = 0;
        uint64_t v24 = (char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v45))return 0; {
        }
          }
        else
        {
          unsigned int v45 = *v24;
          *((void *)this + 1) = v24 + 1;
        }
        int v25 = *((_DWORD *)this + 14);
        int v26 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v25 + 1;
        if (v25 >= v26) {
          return 0;
        }
        int v27 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v45);
        if (!sub_10013BFD4(v23, this, v28, v29) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v27);
        int v30 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v30, 1);
        int v31 = v30 - 1;
        if (v31 < 0 == v20) {
          *((_DWORD *)this + 14) = v31;
        }
        int v32 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 != 26) {
          continue;
        }
        *((void *)this + 1) = v32 + 1;
LABEL_47:
        *(_DWORD *)(a1 + 48) |= 4u;
        int v33 = *(_DWORD **)(a1 + 32);
        if (!v33) {
          operator new();
        }
        unsigned int v45 = 0;
        unsigned int v34 = (char *)*((void *)this + 1);
        if ((unint64_t)v34 >= *((void *)this + 2) || *v34 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v45))return 0; {
        }
          }
        else
        {
          unsigned int v45 = *v34;
          *((void *)this + 1) = v34 + 1;
        }
        int v35 = *((_DWORD *)this + 14);
        int v36 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v35 + 1;
        if (v35 >= v36) {
          return 0;
        }
        int v37 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v45);
        if (!sub_10013D210(v33, this, v38, v39) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v37);
        int v40 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v40, 1);
        int v41 = v40 - 1;
        if (v41 < 0 == v20) {
          *((_DWORD *)this + 14) = v41;
        }
        int v42 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v42 < v12 && *v42 == 32)
        {
          int v13 = v42 + 1;
          *((void *)this + 1) = v13;
LABEL_61:
          unsigned int v45 = 0;
          if ((unint64_t)v13 >= v12 || *v13 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v45);
            if (!result) {
              return result;
            }
            signed int v43 = v45;
          }
          else
          {
            signed int v43 = *v13;
            *((void *)this + 1) = v13 + 1;
          }
          if ((v43 - 1) > 9)
          {
            wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 4, v43);
          }
          else
          {
            *(_DWORD *)(a1 + 48) |= 8u;
            *(_DWORD *)(a1 + 40) = v43;
          }
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
        }
        break;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_47;
        }
        goto LABEL_21;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        int v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_61;
      default:
        int v9 = TagFallback & 7;
LABEL_21:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_10013E420()
{
}

uint64_t sub_10013E46C(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 48);
  if (v6)
  {
    uint64_t v10 = *(void *)(this + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_1008AC450 + 16);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_18:
      uint64_t v12 = *(void *)(v5 + 32);
      if (!v12) {
        uint64_t v12 = *(void *)(qword_1008AC450 + 32);
      }
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v12, a2, a4);
      if ((*(_DWORD *)(v5 + 48) & 8) != 0) {
        goto LABEL_5;
      }
      goto LABEL_6;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v11 = *(void *)(v5 + 24);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_1008AC450 + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v11, a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) != 0) {
    goto LABEL_18;
  }
LABEL_4:
  if ((v6 & 8) != 0) {
LABEL_5:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 40), (int)a2, a4);
LABEL_6:
  int v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10013E568(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  int v5 = *((_DWORD *)this + 12);
  if (v5)
  {
    uint64_t v6 = *((void *)this + 2);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1008AC450 + 16);
    }
    *(unsigned char *)a2 = 10;
    unsigned int v7 = a2 + 1;
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v6 + 40);
    if (v8 > 0x7F)
    {
      uint64_t v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v7, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v8;
      uint64_t v9 = (uint64_t)v3 + 2;
    }
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10013B96C(v6, v9, a3);
    int v5 = *((_DWORD *)this + 12);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v10 = *((void *)this + 3);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_1008AC450 + 24);
  }
  *(unsigned char *)uint64_t v3 = 18;
  uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v10 + 40);
  if (v11 > 0x7F)
  {
    uint64_t v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)v3 + 1, a3);
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v11;
    uint64_t v12 = (uint64_t)v3 + 2;
  }
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10013C25C(v10, v12, a3);
  int v5 = *((_DWORD *)this + 12);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_30;
    }
LABEL_24:
    int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 10);
    *(unsigned char *)uint64_t v3 = 32;
    unint64_t v17 = (unint64_t)v3 + 1;
    if ((v16 & 0x80000000) != 0)
    {
      uint64_t v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v16, v17, a3);
    }
    else
    {
      if (v16 <= 0x7F)
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v16;
        uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        goto LABEL_30;
      }
      uint64_t v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v16, v17, a3);
    }
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v18;
    goto LABEL_30;
  }
LABEL_18:
  int v13 = (unsigned int *)*((void *)this + 4);
  if (!v13) {
    int v13 = *(unsigned int **)(qword_1008AC450 + 32);
  }
  *(unsigned char *)uint64_t v3 = 26;
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13[12];
  if (v14 > 0x7F)
  {
    int v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, (int)v3 + 1, a3);
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v14;
    int v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  }
  uint64_t v3 = sub_10013D5E4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v13, v15, a3);
  if ((*((_DWORD *)this + 12) & 8) != 0) {
    goto LABEL_24;
  }
LABEL_30:
  int v21 = (void *)*((void *)this + 1);
  BOOL v20 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v19 = v21;
  if (!v21 || *v19 == v19[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v20, v3, a3);
}

uint64_t sub_10013E714(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 48);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_33;
  }
  if (*(unsigned char *)(a1 + 48))
  {
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_1008AC450 + 16);
    }
    uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10013BA94(v5, a2);
    int v7 = (int)v6;
    if (v6 >= 0x80) {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
    }
    else {
      int v8 = 1;
    }
    uint64_t v4 = (v7 + v8 + 1);
    int v3 = *(_DWORD *)(a1 + 48);
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v4 = 0;
  if ((*(unsigned char *)(a1 + 48) & 2) != 0)
  {
LABEL_12:
    uint64_t v9 = *(void *)(a1 + 24);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1008AC450 + 24);
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10013C384(v9, a2);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    }
    else {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v11 + v12 + 1);
    int v3 = *(_DWORD *)(a1 + 48);
  }
LABEL_18:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_33;
    }
LABEL_27:
    unint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
    if ((v17 & 0x80000000) != 0)
    {
      int v18 = 11;
    }
    else if (v17 >= 0x80)
    {
      int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2)
          + 1;
    }
    else
    {
      int v18 = 2;
    }
    uint64_t v4 = (v18 + v4);
    goto LABEL_33;
  }
  uint64_t v13 = *(void *)(a1 + 32);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_1008AC450 + 32);
  }
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10013D730(v13, a2);
  int v15 = (int)v14;
  if (v14 >= 0x80) {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
  }
  else {
    int v16 = 1;
  }
  uint64_t v4 = (v4 + v15 + v16 + 1);
  if ((*(_DWORD *)(a1 + 48) & 8) != 0) {
    goto LABEL_27;
  }
LABEL_33:
  int v19 = *(void **)(a1 + 8);
  if (v19 && *v19 != v19[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

uint64_t sub_10013E88C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10013DAF0((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10013E960(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10013E978(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10013EA04()
{
  return 1;
}

uint64_t sub_10013EA0C()
{
  uint64_t v0 = qword_1008A16F8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100136C54;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A15F8;
}

void sub_10013EAA0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10013EAB4(uint64_t a1)
{
  *(void *)a1 = off_100851C20;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return a1;
}

void sub_10013EB00(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10013EB14(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 44);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((*(unsigned char *)(a2 + 44) & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 44) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_10:
    uint64_t v8 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 44) |= 2u;
    *(void *)(a1 + 24) = v8;
    if ((*(_DWORD *)(a2 + 44) & 4) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 44) |= 1u;
  *(void *)(a1 + 16) = v7;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_6:
  if ((v4 & 4) != 0)
  {
LABEL_7:
    uint64_t v5 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(void *)(a1 + 32) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10013EBF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10013EC0C(uint64_t a1)
{
  *(void *)a1 = off_100851C20;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10013EC60(uint64_t a1)
{
  *(void *)a1 = off_100851C20;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_10013ECC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_10013ECD0()
{
}

void sub_10013ED10()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10013ED34(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 44))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 9) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10013ED58(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v9 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v10 = TagFallback & 7;
        if (v10 != 1) {
          goto LABEL_28;
        }
        unint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v14;
        *(_DWORD *)(a1 + 44) |= 1u;
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
LABEL_18:
          unint64_t v14 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
            return 0;
          }
          *(void *)(a1 + 24) = v14;
          *(_DWORD *)(a1 + 44) |= 2u;
          int v12 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v12 < *((void *)this + 2) && *v12 == 25)
          {
            *((void *)this + 1) = v12 + 1;
            goto LABEL_22;
          }
        }
      }
      if (v9 == 2)
      {
        int v10 = TagFallback & 7;
        if (v10 != 1) {
          goto LABEL_28;
        }
        goto LABEL_18;
      }
      if (v9 != 3)
      {
        int v10 = TagFallback & 7;
        goto LABEL_28;
      }
      int v10 = TagFallback & 7;
      if (v10 == 1) {
        break;
      }
LABEL_28:
      if (v10 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
    }
      }
LABEL_22:
    unint64_t v14 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
      return 0;
    }
    *(void *)(a1 + 32) = v14;
    *(_DWORD *)(a1 + 44) |= 4u;
  }
  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_10013EF30(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 44);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_12:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
    if ((*(_DWORD *)(v4 + 44) & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
  int v5 = *(_DWORD *)(v4 + 44);
  if ((v5 & 2) != 0) {
    goto LABEL_12;
  }
LABEL_3:
  if ((v5 & 4) != 0) {
LABEL_4:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v4 + 32), a3);
LABEL_5:
  uint64_t v8 = *(void **)(v4 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v8;
  if (v8 && *v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

uint64_t sub_10013EFE0(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_10:
    uint64_t v10 = *(void *)(a1 + 24);
    *(unsigned char *)a2 = 17;
    *(void *)(a2 + 1) = v10;
    a2 += 9;
    if ((*(_DWORD *)(a1 + 44) & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  uint64_t v9 = *(void *)(a1 + 16);
  *(unsigned char *)a2 = 9;
  *(void *)(a2 + 1) = v9;
  a2 += 9;
  int v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_3:
  if ((v3 & 4) != 0)
  {
LABEL_4:
    uint64_t v4 = *(void *)(a1 + 32);
    *(unsigned char *)a2 = 25;
    *(void *)(a2 + 1) = v4;
    a2 += 9;
  }
LABEL_5:
  uint64_t v7 = *(void **)(a1 + 8);
  int v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  unsigned int v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v5, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
}

uint64_t sub_10013F108(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 44);
  unsigned int v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0) {
    v4 += 9;
  }
  if ((v3 & 4) != 0) {
    v4 += 9;
  }
  if (*(unsigned char *)(a1 + 44)) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v8 = *(void **)(a1 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v7 = v8;
  if (v8 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
  *(_DWORD *)(a1 + 40) = v5;
  return v5;
}

uint64_t sub_10013F17C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10013EB14((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10013F250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10013F268(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10013F2F4()
{
  return 1;
}

uint64_t sub_10013F2FC()
{
  uint64_t v0 = qword_1008A16F8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100136C54;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1648;
}

void sub_10013F390(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10013F3A4(uint64_t a1)
{
  *(void *)a1 = off_100851CD0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return a1;
}

void sub_10013F3F8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10013F40C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  int v4 = *(_DWORD *)(a2 + 92);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v8 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 92) |= 1u;
    *(void *)(a1 + 16) = v8;
    int v4 = *(_DWORD *)(a2 + 92);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_18;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 92) |= 2u;
  *(void *)(a1 + 24) = v9;
  int v4 = *(_DWORD *)(a2 + 92);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t v10 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 92) |= 4u;
  *(void *)(a1 + 32) = v10;
  int v4 = *(_DWORD *)(a2 + 92);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v11 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 92) |= 8u;
  *(void *)(a1 + 40) = v11;
  int v4 = *(_DWORD *)(a2 + 92);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_21:
    uint64_t v13 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 92) |= 0x20u;
    *(void *)(a1 + 56) = v13;
    int v4 = *(_DWORD *)(a2 + 92);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_20:
  uint64_t v12 = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 92) |= 0x10u;
  *(void *)(a1 + 48) = v12;
  int v4 = *(_DWORD *)(a2 + 92);
  if ((v4 & 0x20) != 0) {
    goto LABEL_21;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_22:
  uint64_t v14 = *(void *)(a2 + 64);
  *(_DWORD *)(a1 + 92) |= 0x40u;
  *(void *)(a1 + 64) = v14;
  int v4 = *(_DWORD *)(a2 + 92);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    uint64_t v5 = *(void *)(a2 + 72);
    *(_DWORD *)(a1 + 92) |= 0x80u;
    *(void *)(a1 + 72) = v5;
    int v4 = *(_DWORD *)(a2 + 92);
  }
LABEL_13:
  if ((v4 & 0x100) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 80);
    *(_DWORD *)(a1 + 92) |= 0x100u;
    *(void *)(a1 + 80) = v6;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10013F5AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10013F5C4(uint64_t a1)
{
  *(void *)a1 = off_100851CD0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10013F618(uint64_t a1)
{
  *(void *)a1 = off_100851CD0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_10013F680(uint64_t result, int a2)
{
  *(_DWORD *)(result + 88) = a2;
  return result;
}

void sub_10013F688()
{
}

void sub_10013F6C8()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10013F6EC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 92);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
  }
  if ((v1 & 0xFF00) != 0) {
    *(void *)(a1 + 80) = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 21) = 0;
  if (v3) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10013F724(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_55;
        }
        unint64_t v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v19) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v19;
        *(_DWORD *)(a1 + 92) |= 1u;
        uint64_t v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 17) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_55;
        }
LABEL_15:
        unint64_t v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v19) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 24) = v19;
        *(_DWORD *)(a1 + 92) |= 2u;
        uint64_t v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 25) {
          continue;
        }
        *((void *)this + 1) = v11 + 1;
LABEL_20:
        unint64_t v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v19) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 32) = v19;
        *(_DWORD *)(a1 + 92) |= 4u;
        uint64_t v12 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 != 33) {
          continue;
        }
        *((void *)this + 1) = v12 + 1;
LABEL_25:
        unint64_t v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v19) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 40) = v19;
        *(_DWORD *)(a1 + 92) |= 8u;
        uint64_t v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 != 41) {
          continue;
        }
        *((void *)this + 1) = v13 + 1;
LABEL_30:
        unint64_t v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v19) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 48) = v19;
        *(_DWORD *)(a1 + 92) |= 0x10u;
        uint64_t v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 != 49) {
          continue;
        }
        *((void *)this + 1) = v14 + 1;
LABEL_35:
        unint64_t v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v19) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 56) = v19;
        *(_DWORD *)(a1 + 92) |= 0x20u;
        int v15 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 != 57) {
          continue;
        }
        *((void *)this + 1) = v15 + 1;
LABEL_40:
        unint64_t v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v19) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 64) = v19;
        *(_DWORD *)(a1 + 92) |= 0x40u;
        int v16 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v16 >= *((void *)this + 2) || *v16 != 65) {
          continue;
        }
        *((void *)this + 1) = v16 + 1;
LABEL_45:
        unint64_t v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v19) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 72) = v19;
        *(_DWORD *)(a1 + 92) |= 0x80u;
        unint64_t v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 73) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
LABEL_50:
        unint64_t v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v19) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 80) = v19;
        *(_DWORD *)(a1 + 92) |= 0x100u;
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_20;
        }
        goto LABEL_55;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_25;
        }
        goto LABEL_55;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_30;
        }
        goto LABEL_55;
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_35;
        }
        goto LABEL_55;
      case 7u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_40;
        }
        goto LABEL_55;
      case 8u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_45;
        }
        goto LABEL_55;
      case 9u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_50;
        }
        goto LABEL_55;
      default:
        int v9 = TagFallback & 7;
LABEL_55:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
    return result;
  }
}

uint64_t sub_10013FB48(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 92);
  if (v5)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    int v5 = *(_DWORD *)(v4 + 92);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  int v5 = *(_DWORD *)(v4 + 92);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v4 + 32), a3);
  int v5 = *(_DWORD *)(v4 + 92);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v4 + 40), a3);
  int v5 = *(_DWORD *)(v4 + 92);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v4 + 48), a3);
  int v5 = *(_DWORD *)(v4 + 92);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v4 + 56), a3);
  int v5 = *(_DWORD *)(v4 + 92);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
LABEL_24:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(double *)(v4 + 72), a3);
    if ((*(_DWORD *)(v4 + 92) & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v4 + 64), a3);
  int v5 = *(_DWORD *)(v4 + 92);
  if ((v5 & 0x80) != 0) {
    goto LABEL_24;
  }
LABEL_9:
  if ((v5 & 0x100) != 0) {
LABEL_10:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(double *)(v4 + 80), a3);
LABEL_11:
  uint64_t v8 = *(void **)(v4 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v8;
  if (v8 && *v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

uint64_t sub_10013FCA0(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 92);
  if (v3)
  {
    uint64_t v9 = *(void *)(a1 + 16);
    *(unsigned char *)a2 = 9;
    *(void *)(a2 + 1) = v9;
    a2 += 9;
    int v3 = *(_DWORD *)(a1 + 92);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v10 = *(void *)(a1 + 24);
  *(unsigned char *)a2 = 17;
  *(void *)(a2 + 1) = v10;
  a2 += 9;
  int v3 = *(_DWORD *)(a1 + 92);
  if ((v3 & 4) == 0)
  {
LABEL_4:
    if ((v3 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t v11 = *(void *)(a1 + 32);
  *(unsigned char *)a2 = 25;
  *(void *)(a2 + 1) = v11;
  a2 += 9;
  int v3 = *(_DWORD *)(a1 + 92);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t v12 = *(void *)(a1 + 40);
  *(unsigned char *)a2 = 33;
  *(void *)(a2 + 1) = v12;
  a2 += 9;
  int v3 = *(_DWORD *)(a1 + 92);
  if ((v3 & 0x10) == 0)
  {
LABEL_6:
    if ((v3 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v13 = *(void *)(a1 + 48);
  *(unsigned char *)a2 = 41;
  *(void *)(a2 + 1) = v13;
  a2 += 9;
  int v3 = *(_DWORD *)(a1 + 92);
  if ((v3 & 0x20) == 0)
  {
LABEL_7:
    if ((v3 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t v14 = *(void *)(a1 + 56);
  *(unsigned char *)a2 = 49;
  *(void *)(a2 + 1) = v14;
  a2 += 9;
  int v3 = *(_DWORD *)(a1 + 92);
  if ((v3 & 0x40) == 0)
  {
LABEL_8:
    if ((v3 & 0x80) == 0) {
      goto LABEL_9;
    }
LABEL_22:
    uint64_t v16 = *(void *)(a1 + 72);
    *(unsigned char *)a2 = 65;
    *(void *)(a2 + 1) = v16;
    a2 += 9;
    if ((*(_DWORD *)(a1 + 92) & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_21:
  uint64_t v15 = *(void *)(a1 + 64);
  *(unsigned char *)a2 = 57;
  *(void *)(a2 + 1) = v15;
  a2 += 9;
  int v3 = *(_DWORD *)(a1 + 92);
  if ((v3 & 0x80) != 0) {
    goto LABEL_22;
  }
LABEL_9:
  if ((v3 & 0x100) != 0)
  {
LABEL_10:
    uint64_t v4 = *(void *)(a1 + 80);
    *(unsigned char *)a2 = 73;
    *(void *)(a2 + 1) = v4;
    a2 += 9;
  }
LABEL_11:
  uint64_t v7 = *(void **)(a1 + 8);
  int v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  unsigned int v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v5, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
}

uint64_t sub_10013FFD8(_DWORD *a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = a1[23];
  if ((_BYTE)v3)
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x80) != 0) {
      v4 += 9;
    }
  }
  else
  {
    unsigned int v4 = 0;
  }
  if ((v3 & 0x100) != 0) {
    uint64_t v5 = v4 + 9;
  }
  else {
    uint64_t v5 = v4;
  }
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
  uint64_t v7 = (void *)*((void *)a1 + 1);
  if (v7 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
  a1[22] = v5;
  return v5;
}

uint64_t sub_1001400A0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10013F40C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100140174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10014018C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100140218()
{
  return 1;
}

uint64_t sub_100140220()
{
  uint64_t v0 = qword_1008A16F8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100136C54;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1658;
}

void sub_1001402B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001402C8(uint64_t a1)
{
  *(void *)a1 = off_100851D80;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return a1;
}

void sub_10014031C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100140330(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v21);
  }
  int v4 = *(_DWORD *)(a2 + 92);
  if (!(_BYTE)v4) {
    goto LABEL_21;
  }
  if (v4)
  {
    int v5 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 92) |= 1u;
    *(_DWORD *)(a1 + 24) = v5;
    int v4 = *(_DWORD *)(a2 + 92);
  }
  if ((v4 & 2) != 0)
  {
    *(_DWORD *)(a1 + 92) |= 2u;
    uint64_t v6 = *(void *)(a1 + 16);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = *(void *)(a2 + 16);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1008AC448 + 16);
    }
    sub_100141B7C(v6, v7);
    int v4 = *(_DWORD *)(a2 + 92);
  }
  if ((v4 & 4) != 0)
  {
    unsigned int v8 = *(_DWORD *)(a2 + 28);
    if (v8 >= 4) {
      sub_100410840();
    }
    *(_DWORD *)(a1 + 92) |= 4u;
    *(_DWORD *)(a1 + 28) = v8;
    int v4 = *(_DWORD *)(a2 + 92);
  }
  if ((v4 & 8) != 0)
  {
    uint64_t v17 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 92) |= 8u;
    *(void *)(a1 + 32) = v17;
    int v4 = *(_DWORD *)(a2 + 92);
    if ((v4 & 0x10) == 0)
    {
LABEL_17:
      if ((v4 & 0x20) == 0) {
        goto LABEL_18;
      }
LABEL_43:
      uint64_t v19 = *(void *)(a2 + 48);
      *(_DWORD *)(a1 + 92) |= 0x20u;
      *(void *)(a1 + 48) = v19;
      int v4 = *(_DWORD *)(a2 + 92);
      if ((v4 & 0x40) == 0)
      {
LABEL_19:
        if ((v4 & 0x80) == 0) {
          goto LABEL_21;
        }
        goto LABEL_20;
      }
      goto LABEL_44;
    }
  }
  else if ((v4 & 0x10) == 0)
  {
    goto LABEL_17;
  }
  uint64_t v18 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 92) |= 0x10u;
  *(void *)(a1 + 40) = v18;
  int v4 = *(_DWORD *)(a2 + 92);
  if ((v4 & 0x20) != 0) {
    goto LABEL_43;
  }
LABEL_18:
  if ((v4 & 0x40) == 0) {
    goto LABEL_19;
  }
LABEL_44:
  int v20 = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 92) |= 0x40u;
  *(_DWORD *)(a1 + 56) = v20;
  int v4 = *(_DWORD *)(a2 + 92);
  if ((v4 & 0x80) != 0)
  {
LABEL_20:
    int v9 = *(_DWORD *)(a2 + 60);
    *(_DWORD *)(a1 + 92) |= 0x80u;
    *(_DWORD *)(a1 + 60) = v9;
    int v4 = *(_DWORD *)(a2 + 92);
  }
LABEL_21:
  if ((v4 & 0xFF00) != 0)
  {
    if ((v4 & 0x100) != 0)
    {
      *(_DWORD *)(a1 + 92) |= 0x100u;
      uint64_t v10 = *(void *)(a1 + 64);
      if (!v10) {
        operator new();
      }
      uint64_t v11 = *(void *)(a2 + 64);
      if (!v11) {
        uint64_t v11 = *(void *)(qword_1008AC448 + 64);
      }
      sub_10013DAF0(v10, v11);
      int v4 = *(_DWORD *)(a2 + 92);
    }
    if ((v4 & 0x200) != 0)
    {
      *(_DWORD *)(a1 + 92) |= 0x200u;
      uint64_t v12 = *(void *)(a1 + 72);
      if (!v12) {
        operator new();
      }
      uint64_t v13 = *(void *)(a2 + 72);
      if (!v13) {
        uint64_t v13 = *(void *)(qword_1008AC448 + 72);
      }
      sub_10013EB14(v12, v13);
      int v4 = *(_DWORD *)(a2 + 92);
    }
    if ((v4 & 0x400) != 0)
    {
      *(_DWORD *)(a1 + 92) |= 0x400u;
      uint64_t v14 = *(void *)(a1 + 80);
      if (!v14) {
        operator new();
      }
      uint64_t v15 = *(void *)(a2 + 80);
      if (!v15) {
        uint64_t v15 = *(void *)(qword_1008AC448 + 80);
      }
      sub_10013F40C(v14, v15);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100140618()
{
}

void sub_10014068C(void *a1)
{
  *a1 = off_100851D80;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_1001406EC(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void *sub_1001406EC(void *result)
{
  if ((void *)qword_1008AC448 != result)
  {
    int v1 = result;
    uint64_t v2 = result[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[8];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[9];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t result = (void *)v1[10];
    if (result)
    {
      int v5 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v5();
    }
  }
  return result;
}

void sub_1001407E8(void *a1)
{
  sub_10014068C(a1);

  operator delete();
}

uint64_t sub_100140820(uint64_t result, int a2)
{
  *(_DWORD *)(result + 88) = a2;
  return result;
}

void sub_100140828()
{
}

void sub_100140868()
{
}

uint64_t sub_10014088C(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 92);
  if ((_BYTE)v2)
  {
    *(_DWORD *)(this + 24) = 0;
    if ((v2 & 2) != 0)
    {
      this = *(void *)(this + 16);
      if (this)
      {
        this = sub_100140968(this);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }
    *(_DWORD *)(v1 + 60) = 0;
    *(_OWORD *)(v1 + 44) = 0u;
    *(_OWORD *)(v1 + 28) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      this = *(void *)(v1 + 64);
      if (this)
      {
        this = sub_10013DEDC(this);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }
    if ((v2 & 0x200) != 0)
    {
      this = *(void *)(v1 + 72);
      if (this)
      {
        if (*(unsigned char *)(this + 44))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
          *(void *)(this + 32) = 0;
        }
        uint64_t v3 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 36) = 0;
        if (v3) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    if ((*(unsigned char *)(v1 + 93) & 4) != 0)
    {
      this = *(void *)(v1 + 80);
      if (this) {
        this = (uint64_t)sub_10013F6EC(this);
      }
    }
  }
  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 21) = 0;
  if (v5)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return this;
}

uint64_t sub_100140968(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 36))
  {
    if (*(unsigned char *)(this + 36))
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(unsigned char *)(this + 44))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
          *(void *)(this + 32) = 0;
        }
        uint64_t v2 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 36) = 0;
        if (v2) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    if ((*(unsigned char *)(v1 + 36) & 2) != 0)
    {
      this = *(void *)(v1 + 24);
      if (this)
      {
        if (*(unsigned char *)(this + 68))
        {
          *(_OWORD *)(this + 32) = 0u;
          *(_OWORD *)(this + 48) = 0u;
          *(_OWORD *)(this + 16) = 0u;
        }
        uint64_t v3 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 60) = 0;
        if (v3) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
  }
  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 7) = 0;
  if (v5)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return this;
}

uint64_t sub_100140A1C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (unsigned int *)(a1 + 24);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  unsigned int v8 = (unint64_t *)(a1 + 40);
  while (1)
  {
    int v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 < *((void *)this + 2) && (*v9 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_33;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          uint64_t v14 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v6 = *v13;
          uint64_t v14 = v13 + 1;
          *((void *)this + 1) = v14;
        }
        int v15 = *(_DWORD *)(a1 + 92) | 1;
        *(_DWORD *)(a1 + 92) = v15;
        if ((unint64_t)v14 < v12 && *v14 == 18)
        {
          *((void *)this + 1) = v14 + 1;
          goto LABEL_41;
        }
        continue;
      case 2u:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_33;
        }
        int v15 = *(_DWORD *)(a1 + 92);
LABEL_41:
        *(_DWORD *)(a1 + 92) = v15 | 2;
        uint64_t v25 = *(void *)(a1 + 16);
        if (!v25) {
          operator new();
        }
        v74[0] = 0;
        int v26 = (char *)*((void *)this + 1);
        if ((unint64_t)v26 >= *((void *)this + 2) || *v26 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v74))return 0; {
        }
          }
        else
        {
          v74[0] = *v26;
          *((void *)this + 1) = v26 + 1;
        }
        int v27 = *((_DWORD *)this + 14);
        int v28 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v27 + 1;
        if (v27 >= v28) {
          return 0;
        }
        int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v74[0]);
        if (!sub_1001473D4(v25, this, v30, v31) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
        int v32 = *((_DWORD *)this + 14);
        BOOL v33 = __OFSUB__(v32, 1);
        int v34 = v32 - 1;
        if (v34 < 0 == v33) {
          *((_DWORD *)this + 14) = v34;
        }
        int v35 = (unsigned char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v35 >= v16 || *v35 != 24) {
          continue;
        }
        uint64_t v17 = v35 + 1;
        *((void *)this + 1) = v17;
LABEL_55:
        v74[0] = 0;
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v74);
          if (!result) {
            return result;
          }
          unsigned int v36 = v74[0];
        }
        else
        {
          unsigned int v36 = *v17;
          *((void *)this + 1) = v17 + 1;
        }
        if (v36 > 3)
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v7, 3, (int)v36);
        }
        else
        {
          *(_DWORD *)(a1 + 92) |= 4u;
          *(_DWORD *)(a1 + 28) = v36;
        }
        int v37 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v37 >= *((void *)this + 2) || *v37 != 33) {
          continue;
        }
        *((void *)this + 1) = v37 + 1;
LABEL_66:
        *(void *)int v74 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v74) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v74;
        }
        *(_DWORD *)(a1 + 92) |= 8u;
        uint64_t v38 = (unsigned char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        if ((unint64_t)v38 >= v18 || *v38 != 40) {
          continue;
        }
        uint64_t v19 = v38 + 1;
        *((void *)this + 1) = v19;
LABEL_70:
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v39 = (unsigned char *)*((void *)this + 1);
          unint64_t v18 = *((void *)this + 2);
        }
        else
        {
          unint64_t *v8 = *v19;
          int v39 = v19 + 1;
          *((void *)this + 1) = v39;
        }
        *(_DWORD *)(a1 + 92) |= 0x10u;
        if ((unint64_t)v39 >= v18 || *v39 != 49) {
          continue;
        }
        *((void *)this + 1) = v39 + 1;
LABEL_78:
        *(void *)int v74 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v74) & 1) == 0)return 0; {
        *(void *)(a1 + 48) = *(void *)v74;
        }
        *(_DWORD *)(a1 + 92) |= 0x20u;
        int v40 = (unsigned char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        if ((unint64_t)v40 >= v20 || *v40 != 56) {
          continue;
        }
        int v21 = v40 + 1;
        *((void *)this + 1) = v21;
LABEL_82:
        v74[0] = 0;
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v74);
          if (!result) {
            return result;
          }
          unsigned int v41 = v74[0];
          int v42 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }
        else
        {
          unsigned int v41 = *v21;
          int v42 = v21 + 1;
          *((void *)this + 1) = v42;
        }
        *(_DWORD *)(a1 + 56) = v41;
        *(_DWORD *)(a1 + 92) |= 0x40u;
        if ((unint64_t)v42 >= v20 || *v42 != 64) {
          continue;
        }
        uint64_t v22 = v42 + 1;
        *((void *)this + 1) = v22;
LABEL_90:
        v74[0] = 0;
        if ((unint64_t)v22 >= v20 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v74);
          if (!result) {
            return result;
          }
          unsigned int v43 = v74[0];
          int v44 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }
        else
        {
          unsigned int v43 = *v22;
          int v44 = v22 + 1;
          *((void *)this + 1) = v44;
        }
        *(_DWORD *)(a1 + 60) = v43;
        int v23 = *(_DWORD *)(a1 + 92) | 0x80;
        *(_DWORD *)(a1 + 92) = v23;
        if ((unint64_t)v44 >= v20 || *v44 != 74) {
          continue;
        }
        *((void *)this + 1) = v44 + 1;
LABEL_98:
        *(_DWORD *)(a1 + 92) = v23 | 0x100;
        uint64_t v45 = *(void *)(a1 + 64);
        if (!v45) {
          operator new();
        }
        v74[0] = 0;
        unsigned int v46 = (char *)*((void *)this + 1);
        if ((unint64_t)v46 >= *((void *)this + 2) || *v46 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v74))return 0; {
        }
          }
        else
        {
          v74[0] = *v46;
          *((void *)this + 1) = v46 + 1;
        }
        int v47 = *((_DWORD *)this + 14);
        int v48 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v47 + 1;
        if (v47 >= v48) {
          return 0;
        }
        int v49 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v74[0]);
        if (!sub_10013DFA8(v45, this, v50, v51) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v49);
        int v52 = *((_DWORD *)this + 14);
        BOOL v33 = __OFSUB__(v52, 1);
        int v53 = v52 - 1;
        if (v53 < 0 == v33) {
          *((_DWORD *)this + 14) = v53;
        }
        int v54 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v54 >= *((void *)this + 2) || *v54 != 82) {
          continue;
        }
        *((void *)this + 1) = v54 + 1;
LABEL_112:
        *(_DWORD *)(a1 + 92) |= 0x200u;
        uint64_t v55 = *(void *)(a1 + 72);
        if (!v55) {
          operator new();
        }
        v74[0] = 0;
        unsigned int v56 = (char *)*((void *)this + 1);
        if ((unint64_t)v56 >= *((void *)this + 2) || *v56 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v74))return 0; {
        }
          }
        else
        {
          v74[0] = *v56;
          *((void *)this + 1) = v56 + 1;
        }
        int v57 = *((_DWORD *)this + 14);
        int v58 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v57 + 1;
        if (v57 >= v58) {
          return 0;
        }
        int v59 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v74[0]);
        if (!sub_10013ED58(v55, this, v60, v61) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v59);
        int v62 = *((_DWORD *)this + 14);
        BOOL v33 = __OFSUB__(v62, 1);
        int v63 = v62 - 1;
        if (v63 < 0 == v33) {
          *((_DWORD *)this + 14) = v63;
        }
        int v64 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v64 >= *((void *)this + 2) || *v64 != 90) {
          continue;
        }
        *((void *)this + 1) = v64 + 1;
LABEL_126:
        *(_DWORD *)(a1 + 92) |= 0x400u;
        uint64_t v65 = *(void *)(a1 + 80);
        if (!v65) {
          operator new();
        }
        v74[0] = 0;
        unsigned int v66 = (char *)*((void *)this + 1);
        if ((unint64_t)v66 >= *((void *)this + 2) || *v66 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v74))return 0; {
        }
          }
        else
        {
          v74[0] = *v66;
          *((void *)this + 1) = v66 + 1;
        }
        int v67 = *((_DWORD *)this + 14);
        int v68 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v67 + 1;
        if (v67 >= v68) {
          return 0;
        }
        int v69 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v74[0]);
        if (!sub_10013F724(v65, this, v70, v71) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v69);
        int v72 = *((_DWORD *)this + 14);
        BOOL v33 = __OFSUB__(v72, 1);
        int v73 = v72 - 1;
        if (v73 < 0 == v33) {
          *((_DWORD *)this + 14) = v73;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_33;
        }
        uint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_55;
      case 4u:
        int v11 = TagFallback & 7;
        if (v11 == 1) {
          goto LABEL_66;
        }
        goto LABEL_33;
      case 5u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_33;
        }
        uint64_t v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_70;
      case 6u:
        int v11 = TagFallback & 7;
        if (v11 == 1) {
          goto LABEL_78;
        }
        goto LABEL_33;
      case 7u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_33;
        }
        int v21 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_82;
      case 8u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_33;
        }
        uint64_t v22 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_90;
      case 9u:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_33;
        }
        int v23 = *(_DWORD *)(a1 + 92);
        goto LABEL_98;
      case 0xAu:
        int v11 = TagFallback & 7;
        if (v11 == 2) {
          goto LABEL_112;
        }
        goto LABEL_33;
      case 0xBu:
        int v11 = TagFallback & 7;
        if (v11 == 2) {
          goto LABEL_126;
        }
        goto LABEL_33;
      default:
        int v11 = TagFallback & 7;
LABEL_33:
        if (v11 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_10014121C()
{
}

uint64_t sub_1001412A8(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 92);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(this + 24), a2, a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1008AC448 + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 28), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(v5 + 40), (unint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 56), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 60), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_26;
  }
LABEL_23:
  uint64_t v8 = *(void *)(v5 + 64);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1008AC448 + 64);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_32;
    }
    goto LABEL_29;
  }
LABEL_26:
  uint64_t v9 = *(void *)(v5 + 72);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_1008AC448 + 72);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v9, a2, a4);
  if ((*(_DWORD *)(v5 + 92) & 0x400) != 0)
  {
LABEL_29:
    uint64_t v10 = *(void *)(v5 + 80);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_1008AC448 + 80);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v10, a2, a4);
  }
LABEL_32:
  uint64_t v13 = *(void **)(v5 + 8);
  unint64_t v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v11 = v13;
  if (v13 && *v11 != v11[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v12, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100141478(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  if (*((unsigned char *)this + 92))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    *(unsigned char *)a2 = 8;
    unsigned int v6 = a2 + 1;
    if (v5 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v5, v6, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v5;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }
  int v7 = *((_DWORD *)this + 23);
  if ((v7 & 2) != 0)
  {
    uint64_t v8 = (unsigned int *)*((void *)this + 2);
    if (!v8) {
      uint64_t v8 = *(unsigned int **)(qword_1008AC448 + 16);
    }
    *(unsigned char *)uint64_t v3 = 18;
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8[8];
    if (v9 > 0x7F)
    {
      uint64_t v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v9;
      uint64_t v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
    uint64_t v3 = sub_100147780((wireless_diagnostics::google::protobuf::internal::WireFormat *)v8, v10, a3);
    int v7 = *((_DWORD *)this + 23);
  }
  if ((v7 & 4) != 0)
  {
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 7);
    *(unsigned char *)uint64_t v3 = 24;
    unint64_t v12 = (unint64_t)v3 + 1;
    if ((v11 & 0x80000000) != 0)
    {
      uint64_t v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v11, v12, a3);
    }
    else
    {
      if (v11 <= 0x7F)
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v11;
        uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        goto LABEL_19;
      }
      uint64_t v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, v12, a3);
    }
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v13;
  }
LABEL_19:
  int v14 = *((_DWORD *)this + 23);
  if ((v14 & 8) != 0)
  {
    uint64_t v15 = *((void *)this + 4);
    *(unsigned char *)uint64_t v3 = 33;
    *(void *)((char *)v3 + 1) = v15;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
    int v14 = *((_DWORD *)this + 23);
    if ((v14 & 0x10) == 0)
    {
LABEL_21:
      if ((v14 & 0x20) == 0) {
        goto LABEL_22;
      }
      goto LABEL_26;
    }
  }
  else if ((v14 & 0x10) == 0)
  {
    goto LABEL_21;
  }
  unint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 5);
  *(unsigned char *)uint64_t v3 = 40;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v16, (unint64_t)v3 + 1, a3);
  int v14 = *((_DWORD *)this + 23);
  if ((v14 & 0x20) == 0)
  {
LABEL_22:
    if ((v14 & 0x40) == 0) {
      goto LABEL_33;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v17 = *((void *)this + 6);
  *(unsigned char *)uint64_t v3 = 49;
  *(void *)((char *)v3 + 1) = v17;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  if ((*((_DWORD *)this + 23) & 0x40) == 0) {
    goto LABEL_33;
  }
LABEL_27:
  unint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 14);
  *(unsigned char *)uint64_t v3 = 56;
  unint64_t v19 = (unint64_t)v3 + 1;
  if ((v18 & 0x80000000) != 0)
  {
    uint64_t v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v18, v19, a3);
  }
  else
  {
    if (v18 <= 0x7F)
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v18;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      goto LABEL_33;
    }
    uint64_t v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, v19, a3);
  }
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v20;
LABEL_33:
  if ((*((unsigned char *)this + 92) & 0x80) == 0) {
    goto LABEL_40;
  }
  int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 15);
  *(unsigned char *)uint64_t v3 = 64;
  unint64_t v22 = (unint64_t)v3 + 1;
  if ((v21 & 0x80000000) != 0)
  {
    uint64_t v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v21, v22, a3);
  }
  else
  {
    if (v21 <= 0x7F)
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v21;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      goto LABEL_40;
    }
    uint64_t v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, v22, a3);
  }
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v23;
LABEL_40:
  int v24 = *((_DWORD *)this + 23);
  if ((v24 & 0x100) != 0)
  {
    uint64_t v25 = (unsigned int *)*((void *)this + 8);
    if (!v25) {
      uint64_t v25 = *(unsigned int **)(qword_1008AC448 + 64);
    }
    *(unsigned char *)uint64_t v3 = 74;
    int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v25[11];
    if (v26 > 0x7F)
    {
      int v27 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v26, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v26;
      int v27 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
    uint64_t v3 = sub_10013E568((wireless_diagnostics::google::protobuf::internal::WireFormat *)v25, v27, a3);
    int v24 = *((_DWORD *)this + 23);
    if ((v24 & 0x200) == 0)
    {
LABEL_42:
      if ((v24 & 0x400) == 0) {
        goto LABEL_62;
      }
      goto LABEL_56;
    }
  }
  else if ((v24 & 0x200) == 0)
  {
    goto LABEL_42;
  }
  uint64_t v28 = *((void *)this + 9);
  if (!v28) {
    uint64_t v28 = *(void *)(qword_1008AC448 + 72);
  }
  *(unsigned char *)uint64_t v3 = 82;
  int v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v28 + 40);
  if (v29 > 0x7F)
  {
    uint64_t v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v29, (int)v3 + 1, a3);
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v29;
    uint64_t v30 = (uint64_t)v3 + 2;
  }
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10013EFE0(v28, v30, a3);
  if ((*((_DWORD *)this + 23) & 0x400) != 0)
  {
LABEL_56:
    uint64_t v31 = *((void *)this + 10);
    if (!v31) {
      uint64_t v31 = *(void *)(qword_1008AC448 + 80);
    }
    *(unsigned char *)uint64_t v3 = 90;
    int v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v31 + 88);
    if (v32 > 0x7F)
    {
      uint64_t v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v32, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v32;
      uint64_t v33 = (uint64_t)v3 + 2;
    }
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10013FCA0(v31, v33, a3);
  }
LABEL_62:
  unsigned int v36 = (void *)*((void *)this + 1);
  int v35 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v34 = v36;
  if (!v36 || *v34 == v34[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v35, v3, a3);
}

uint64_t sub_100141800(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 92);
  if (!(_BYTE)v3)
  {
    uint64_t v5 = 0;
    goto LABEL_45;
  }
  if (v3)
  {
    unsigned int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
    if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
      int v3 = *(_DWORD *)(a1 + 92);
    }
    else
    {
      int v7 = 1;
    }
    int v4 = v7 + 1;
    if ((v3 & 2) == 0) {
      goto LABEL_16;
    }
LABEL_10:
    uint64_t v8 = *(void *)(a1 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1008AC448 + 16);
    }
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100147888(v8, a2);
    int v10 = (int)v9;
    if (v9 >= 0x80) {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
    }
    else {
      int v11 = 1;
    }
    v4 += v10 + v11 + 1;
    int v3 = *(_DWORD *)(a1 + 92);
    goto LABEL_16;
  }
  int v4 = 0;
  if ((v3 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_16:
  if ((v3 & 4) != 0)
  {
    unint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if ((v12 & 0x80000000) != 0)
    {
      int v13 = 10;
    }
    else if (v12 >= 0x80)
    {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
      int v3 = *(_DWORD *)(a1 + 92);
    }
    else
    {
      int v13 = 1;
    }
    v4 += v13 + 1;
  }
  if ((v3 & 8) != 0) {
    LODWORD(v5) = v4 + 9;
  }
  else {
    LODWORD(v5) = v4;
  }
  if ((v3 & 0x10) != 0)
  {
    LODWORD(v5) = v5
                + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 40), (unint64_t)a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 92);
  }
  if ((v3 & 0x20) != 0) {
    uint64_t v5 = (v5 + 9);
  }
  else {
    uint64_t v5 = v5;
  }
  if ((v3 & 0x40) != 0)
  {
    int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
    if ((v14 & 0x80000000) != 0)
    {
      int v15 = 11;
    }
    else if (v14 >= 0x80)
    {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2)
          + 1;
      int v3 = *(_DWORD *)(a1 + 92);
    }
    else
    {
      int v15 = 2;
    }
    uint64_t v5 = (v15 + v5);
  }
  if ((v3 & 0x80) != 0)
  {
    unint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
    if ((v16 & 0x80000000) != 0)
    {
      int v17 = 11;
    }
    else if (v16 >= 0x80)
    {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2)
          + 1;
      int v3 = *(_DWORD *)(a1 + 92);
    }
    else
    {
      int v17 = 2;
    }
    uint64_t v5 = (v17 + v5);
  }
LABEL_45:
  if ((v3 & 0xFF00) == 0) {
    goto LABEL_68;
  }
  if ((v3 & 0x100) != 0)
  {
    uint64_t v18 = *(void *)(a1 + 64);
    if (!v18) {
      uint64_t v18 = *(void *)(qword_1008AC448 + 64);
    }
    unint64_t v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10013E714(v18, a2);
    int v20 = (int)v19;
    if (v19 >= 0x80) {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2);
    }
    else {
      int v21 = 1;
    }
    uint64_t v5 = (v5 + v20 + v21 + 1);
    int v3 = *(_DWORD *)(a1 + 92);
    if ((v3 & 0x200) == 0)
    {
LABEL_48:
      if ((v3 & 0x400) == 0) {
        goto LABEL_68;
      }
      goto LABEL_62;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_48;
  }
  uint64_t v22 = *(void *)(a1 + 72);
  if (!v22) {
    uint64_t v22 = *(void *)(qword_1008AC448 + 72);
  }
  uint64_t v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10013F108(v22, a2);
  int v24 = (int)v23;
  if (v23 >= 0x80) {
    int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2);
  }
  else {
    int v25 = 1;
  }
  uint64_t v5 = (v5 + v24 + v25 + 1);
  if ((*(_DWORD *)(a1 + 92) & 0x400) != 0)
  {
LABEL_62:
    int v26 = *(_DWORD **)(a1 + 80);
    if (!v26) {
      int v26 = *(_DWORD **)(qword_1008AC448 + 80);
    }
    int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10013FFD8(v26, a2);
    int v28 = (int)v27;
    if (v27 >= 0x80) {
      int v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2);
    }
    else {
      int v29 = 1;
    }
    uint64_t v5 = (v5 + v28 + v29 + 1);
  }
LABEL_68:
  uint64_t v30 = *(void **)(a1 + 8);
  if (v30 && *v30 != v30[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 88) = v5;
  return v5;
}

uint64_t sub_100141A90(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100140330((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100141B64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100141B7C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      *(_DWORD *)(a1 + 36) |= 1u;
      uint64_t v5 = *(void *)(a1 + 16);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 16);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_1008AC4A8 + 16);
      }
      sub_100145D20(v5, v6);
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 36) |= 2u;
      uint64_t v7 = *(void *)(a1 + 24);
      if (!v7) {
        operator new();
      }
      uint64_t v8 = *(void *)(a2 + 24);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_1008AC4A8 + 24);
      }
      sub_100146618(v7, v8);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100141CBC()
{
}

uint64_t sub_100141D08(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100141D94()
{
  return 1;
}

uint64_t sub_100141D9C()
{
  uint64_t v0 = qword_1008A16F8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100136C54;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A15E8;
}

void sub_100141E30(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100141E44(uint64_t a1)
{
  *(void *)a1 = off_100851E30;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 144) = 0;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return a1;
}

void sub_100141EA0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_100141EB4(void *a1)
{
  *a1 = off_100851E30;
  if (a1[4]) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100141F2C(void *a1)
{
  sub_100141EB4(a1);

  operator delete();
}

uint64_t sub_100141F64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 144) = a2;
  return result;
}

void sub_100141F6C()
{
}

void sub_100141FAC()
{
}

uint64_t sub_100141FD0(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = a1 + 32;
  uint64_t v7 = (unint64_t *)(a1 + 24);
  unsigned int v8 = a1 + 8;
LABEL_2:
  while (2)
  {
    uint64_t v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if (v11 != 1) {
          goto LABEL_45;
        }
        v41[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v41) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v41[0];
        *(_DWORD *)(a1 + 148) |= 1u;
        int v13 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v13 >= v12 || *v13 != 16) {
          continue;
        }
        int v14 = v13 + 1;
        *((void *)this + 1) = v14;
        goto LABEL_16;
      case 2u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_45;
        }
        int v14 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
LABEL_16:
        if ((unint64_t)v14 >= v12 || (char)*v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v15 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unint64_t *v7 = *v14;
          int v15 = v14 + 1;
          *((void *)this + 1) = v15;
        }
        *(_DWORD *)(a1 + 148) |= 2u;
        if ((unint64_t)v15 < v12)
        {
          int v18 = *v15;
          goto LABEL_73;
        }
        continue;
      case 3u:
        int v11 = TagFallback & 7;
        if (v11 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            unint64_t v16 = (char *)*((void *)this + 1);
            unint64_t v12 = *((void *)this + 2);
            goto LABEL_54;
          }
LABEL_45:
          if (v11 == 4) {
            return 1;
          }
          if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v8, a4) & 1) == 0)return 0; {
          continue;
          }
        }
        uint64_t result = sub_10009F8B0(this, v6);
        if (!result) {
          return result;
        }
        while (1)
        {
          int v15 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v15 >= v12) {
            goto LABEL_2;
          }
          int v18 = *v15;
          if (v18 == 33) {
            break;
          }
LABEL_73:
          if (v18 != 24) {
            goto LABEL_2;
          }
          unint64_t v16 = (char *)(v15 + 1);
          *((void *)this + 1) = v16;
LABEL_54:
          unsigned int v40 = 0;
          if ((unint64_t)v16 >= v12 || *v16 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40))return 0; {
          }
            }
          else
          {
            unsigned int v40 = *v16;
            *((void *)this + 1) = v16 + 1;
          }
          int v19 = *(_DWORD *)(a1 + 40);
          if (v19 == *(_DWORD *)(a1 + 44))
          {
            sub_10006F57C(v6, v19 + 1);
            int v19 = *(_DWORD *)(a1 + 40);
          }
          unsigned int v20 = v40;
          uint64_t v21 = *(void *)(a1 + 32);
          *(_DWORD *)(a1 + 40) = v19 + 1;
          *(_DWORD *)(v21 + 4 * v19) = v20;
          int v22 = *(_DWORD *)(a1 + 44) - *(_DWORD *)(a1 + 40);
          if (v22 >= 1)
          {
            int v23 = v22 + 1;
            do
            {
              int v24 = (unsigned char *)*((void *)this + 1);
              unint64_t v25 = *((void *)this + 2);
              if ((unint64_t)v24 >= v25 || *v24 != 24) {
                break;
              }
              *((void *)this + 1) = v24 + 1;
              if ((unint64_t)(v24 + 1) >= v25 || (char)v24[1] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40))return 0; {
              }
                }
              else
              {
                unsigned int v40 = v24[1];
                *((void *)this + 1) = v24 + 2;
              }
              int v26 = *(_DWORD *)(a1 + 40);
              if (v26 >= *(_DWORD *)(a1 + 44))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v41);
                int v26 = *(_DWORD *)(a1 + 40);
              }
              unsigned int v27 = v40;
              uint64_t v28 = *(void *)(a1 + 32);
              *(_DWORD *)(a1 + 40) = v26 + 1;
              *(_DWORD *)(v28 + 4 * v26) = v27;
              --v23;
            }
            while (v23 > 1);
          }
        }
        *((void *)this + 1) = v15 + 1;
LABEL_76:
        v41[0] = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v41))
        {
          *(void *)(a1 + 48) = v41[0];
          *(_DWORD *)(a1 + 148) |= 8u;
          int v29 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v29 < *((void *)this + 2) && *v29 == 41)
          {
            *((void *)this + 1) = v29 + 1;
LABEL_80:
            v41[0] = 0;
            if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v41) & 1) == 0) {
              return 0;
            }
            *(void *)(a1 + 56) = v41[0];
            *(_DWORD *)(a1 + 148) |= 0x10u;
            uint64_t v30 = (unsigned char *)*((void *)this + 1);
            if ((unint64_t)v30 < *((void *)this + 2) && *v30 == 49)
            {
              *((void *)this + 1) = v30 + 1;
LABEL_84:
              v41[0] = 0;
              if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v41) & 1) == 0) {
                return 0;
              }
              *(void *)(a1 + 64) = v41[0];
              *(_DWORD *)(a1 + 148) |= 0x20u;
              uint64_t v31 = (unsigned char *)*((void *)this + 1);
              if ((unint64_t)v31 < *((void *)this + 2) && *v31 == 57)
              {
                *((void *)this + 1) = v31 + 1;
LABEL_88:
                v41[0] = 0;
                if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v41) & 1) == 0)return 0; {
                *(void *)(a1 + 72) = v41[0];
                }
                *(_DWORD *)(a1 + 148) |= 0x40u;
                int v32 = (unsigned char *)*((void *)this + 1);
                if ((unint64_t)v32 < *((void *)this + 2) && *v32 == 65)
                {
                  *((void *)this + 1) = v32 + 1;
LABEL_92:
                  v41[0] = 0;
                  if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v41) & 1) == 0)return 0; {
                  *(void *)(a1 + 80) = v41[0];
                  }
                  *(_DWORD *)(a1 + 148) |= 0x80u;
                  uint64_t v33 = (unsigned char *)*((void *)this + 1);
                  if ((unint64_t)v33 < *((void *)this + 2) && *v33 == 73)
                  {
                    *((void *)this + 1) = v33 + 1;
LABEL_96:
                    v41[0] = 0;
                    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v41) & 1) == 0)return 0; {
                    *(void *)(a1 + 88) = v41[0];
                    }
                    *(_DWORD *)(a1 + 148) |= 0x100u;
                    int v34 = (unsigned char *)*((void *)this + 1);
                    if ((unint64_t)v34 < *((void *)this + 2) && *v34 == 81)
                    {
                      *((void *)this + 1) = v34 + 1;
LABEL_100:
                      v41[0] = 0;
                      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v41) & 1) == 0)return 0; {
                      *(void *)(a1 + 96) = v41[0];
                      }
                      *(_DWORD *)(a1 + 148) |= 0x200u;
                      int v35 = (unsigned char *)*((void *)this + 1);
                      if ((unint64_t)v35 < *((void *)this + 2) && *v35 == 89)
                      {
                        *((void *)this + 1) = v35 + 1;
LABEL_104:
                        v41[0] = 0;
                        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v41) & 1) == 0)return 0; {
                        *(void *)(a1 + 104) = v41[0];
                        }
                        *(_DWORD *)(a1 + 148) |= 0x400u;
                        unsigned int v36 = (unsigned char *)*((void *)this + 1);
                        if ((unint64_t)v36 < *((void *)this + 2) && *v36 == 97)
                        {
                          *((void *)this + 1) = v36 + 1;
LABEL_108:
                          v41[0] = 0;
                          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v41) & 1) == 0)return 0; {
                          *(void *)(a1 + 112) = v41[0];
                          }
                          *(_DWORD *)(a1 + 148) |= 0x800u;
                          int v37 = (unsigned char *)*((void *)this + 1);
                          if ((unint64_t)v37 < *((void *)this + 2) && *v37 == 105)
                          {
                            *((void *)this + 1) = v37 + 1;
LABEL_112:
                            v41[0] = 0;
                            if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v41) & 1) == 0)return 0; {
                            *(void *)(a1 + 120) = v41[0];
                            }
                            *(_DWORD *)(a1 + 148) |= 0x1000u;
                            uint64_t v38 = (unsigned char *)*((void *)this + 1);
                            if ((unint64_t)v38 < *((void *)this + 2) && *v38 == 113)
                            {
                              *((void *)this + 1) = v38 + 1;
LABEL_116:
                              v41[0] = 0;
                              if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v41) & 1) == 0)return 0; {
                              *(void *)(a1 + 128) = v41[0];
                              }
                              *(_DWORD *)(a1 + 148) |= 0x2000u;
                              int v39 = (unsigned char *)*((void *)this + 1);
                              if ((unint64_t)v39 < *((void *)this + 2) && *v39 == 121)
                              {
                                *((void *)this + 1) = v39 + 1;
LABEL_120:
                                v41[0] = 0;
                                if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v41) & 1) == 0)return 0; {
                                *(void *)(a1 + 136) = v41[0];
                                }
                                *(_DWORD *)(a1 + 148) |= 0x4000u;
                                if (*((void *)this + 1) == *((void *)this + 2)
                                  && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                                {
                                  *((_DWORD *)this + 8) = 0;
                                  uint64_t result = 1;
                                  *((unsigned char *)this + 36) = 1;
                                  return result;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 4u:
        int v11 = TagFallback & 7;
        if (v11 == 1) {
          goto LABEL_76;
        }
        goto LABEL_45;
      case 5u:
        int v11 = TagFallback & 7;
        if (v11 == 1) {
          goto LABEL_80;
        }
        goto LABEL_45;
      case 6u:
        int v11 = TagFallback & 7;
        if (v11 == 1) {
          goto LABEL_84;
        }
        goto LABEL_45;
      case 7u:
        int v11 = TagFallback & 7;
        if (v11 == 1) {
          goto LABEL_88;
        }
        goto LABEL_45;
      case 8u:
        int v11 = TagFallback & 7;
        if (v11 == 1) {
          goto LABEL_92;
        }
        goto LABEL_45;
      case 9u:
        int v11 = TagFallback & 7;
        if (v11 == 1) {
          goto LABEL_96;
        }
        goto LABEL_45;
      case 0xAu:
        int v11 = TagFallback & 7;
        if (v11 == 1) {
          goto LABEL_100;
        }
        goto LABEL_45;
      case 0xBu:
        int v11 = TagFallback & 7;
        if (v11 == 1) {
          goto LABEL_104;
        }
        goto LABEL_45;
      case 0xCu:
        int v11 = TagFallback & 7;
        if (v11 == 1) {
          goto LABEL_108;
        }
        goto LABEL_45;
      case 0xDu:
        int v11 = TagFallback & 7;
        if (v11 == 1) {
          goto LABEL_112;
        }
        goto LABEL_45;
      case 0xEu:
        int v11 = TagFallback & 7;
        if (v11 == 1) {
          goto LABEL_116;
        }
        goto LABEL_45;
      case 0xFu:
        int v11 = TagFallback & 7;
        if (v11 != 1) {
          goto LABEL_45;
        }
        goto LABEL_120;
      default:
        int v11 = TagFallback & 7;
        goto LABEL_45;
    }
  }
}

void sub_10014274C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001427A0(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 148);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    int v6 = *(_DWORD *)(v5 + 148);
  }
  if ((v6 & 2) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 24), (unint64_t)a2, a4);
  }
  if (*(int *)(v5 + 40) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(*(void *)(v5 + 32) + 4 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 40));
  }
  int v8 = *(_DWORD *)(v5 + 148);
  if ((v8 & 8) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 48), a3);
    int v8 = *(_DWORD *)(v5 + 148);
    if ((v8 & 0x10) == 0)
    {
LABEL_10:
      if ((v8 & 0x20) == 0) {
        goto LABEL_11;
      }
      goto LABEL_29;
    }
  }
  else if ((v8 & 0x10) == 0)
  {
    goto LABEL_10;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 56), a3);
  int v8 = *(_DWORD *)(v5 + 148);
  if ((v8 & 0x20) == 0)
  {
LABEL_11:
    if ((v8 & 0x40) == 0) {
      goto LABEL_12;
    }
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 64), a3);
  int v8 = *(_DWORD *)(v5 + 148);
  if ((v8 & 0x40) == 0)
  {
LABEL_12:
    if ((v8 & 0x80) == 0) {
      goto LABEL_13;
    }
    goto LABEL_31;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v5 + 72), a3);
  int v8 = *(_DWORD *)(v5 + 148);
  if ((v8 & 0x80) == 0)
  {
LABEL_13:
    if ((v8 & 0x100) == 0) {
      goto LABEL_14;
    }
    goto LABEL_32;
  }
LABEL_31:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(double *)(v5 + 80), a3);
  int v8 = *(_DWORD *)(v5 + 148);
  if ((v8 & 0x100) == 0)
  {
LABEL_14:
    if ((v8 & 0x200) == 0) {
      goto LABEL_15;
    }
    goto LABEL_33;
  }
LABEL_32:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(double *)(v5 + 88), a3);
  int v8 = *(_DWORD *)(v5 + 148);
  if ((v8 & 0x200) == 0)
  {
LABEL_15:
    if ((v8 & 0x400) == 0) {
      goto LABEL_16;
    }
    goto LABEL_34;
  }
LABEL_33:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (int)a2, *(double *)(v5 + 96), a3);
  int v8 = *(_DWORD *)(v5 + 148);
  if ((v8 & 0x400) == 0)
  {
LABEL_16:
    if ((v8 & 0x800) == 0) {
      goto LABEL_17;
    }
    goto LABEL_35;
  }
LABEL_34:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (int)a2, *(double *)(v5 + 104), a3);
  int v8 = *(_DWORD *)(v5 + 148);
  if ((v8 & 0x800) == 0)
  {
LABEL_17:
    if ((v8 & 0x1000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_36;
  }
LABEL_35:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (int)a2, *(double *)(v5 + 112), a3);
  int v8 = *(_DWORD *)(v5 + 148);
  if ((v8 & 0x1000) == 0)
  {
LABEL_18:
    if ((v8 & 0x2000) == 0) {
      goto LABEL_19;
    }
LABEL_37:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, (int)a2, *(double *)(v5 + 128), a3);
    if ((*(_DWORD *)(v5 + 148) & 0x4000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }
LABEL_36:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (int)a2, *(double *)(v5 + 120), a3);
  int v8 = *(_DWORD *)(v5 + 148);
  if ((v8 & 0x2000) != 0) {
    goto LABEL_37;
  }
LABEL_19:
  if ((v8 & 0x4000) != 0) {
LABEL_20:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, (int)a2, *(double *)(v5 + 136), a3);
LABEL_21:
  int v11 = *(void **)(v5 + 8);
  int v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v9 = v11;
  if (v11 && *v9 != v9[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v10, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001429BC(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  char v3 = a2;
  int v5 = *((_DWORD *)this + 37);
  if (v5)
  {
    uint64_t v6 = *((void *)this + 2);
    *(unsigned char *)a2 = 9;
    *(void *)((char *)a2 + 1) = v6;
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
    int v5 = *((_DWORD *)this + 37);
  }
  if ((v5 & 2) != 0)
  {
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 3);
    *(unsigned char *)char v3 = 16;
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v7, (unint64_t)v3 + 1, a3);
  }
  if (*((int *)this + 10) >= 1)
  {
    uint64_t v8 = 0;
    do
    {
      uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 4)
                                                                                            + 4 * v8);
      *(unsigned char *)char v3 = 24;
      if (v9 > 0x7F)
      {
        char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (int)v3 + 1, a3);
      }
      else
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v9;
        char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      }
      ++v8;
    }
    while (v8 < *((int *)this + 10));
  }
  int v10 = *((_DWORD *)this + 37);
  if ((v10 & 8) != 0)
  {
    uint64_t v16 = *((void *)this + 6);
    *(unsigned char *)char v3 = 33;
    *(void *)((char *)v3 + 1) = v16;
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
    int v10 = *((_DWORD *)this + 37);
    if ((v10 & 0x10) == 0)
    {
LABEL_13:
      if ((v10 & 0x20) == 0) {
        goto LABEL_14;
      }
      goto LABEL_32;
    }
  }
  else if ((v10 & 0x10) == 0)
  {
    goto LABEL_13;
  }
  uint64_t v17 = *((void *)this + 7);
  *(unsigned char *)char v3 = 41;
  *(void *)((char *)v3 + 1) = v17;
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  int v10 = *((_DWORD *)this + 37);
  if ((v10 & 0x20) == 0)
  {
LABEL_14:
    if ((v10 & 0x40) == 0) {
      goto LABEL_15;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t v18 = *((void *)this + 8);
  *(unsigned char *)char v3 = 49;
  *(void *)((char *)v3 + 1) = v18;
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  int v10 = *((_DWORD *)this + 37);
  if ((v10 & 0x40) == 0)
  {
LABEL_15:
    if ((v10 & 0x80) == 0) {
      goto LABEL_16;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t v19 = *((void *)this + 9);
  *(unsigned char *)char v3 = 57;
  *(void *)((char *)v3 + 1) = v19;
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  int v10 = *((_DWORD *)this + 37);
  if ((v10 & 0x80) == 0)
  {
LABEL_16:
    if ((v10 & 0x100) == 0) {
      goto LABEL_17;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t v20 = *((void *)this + 10);
  *(unsigned char *)char v3 = 65;
  *(void *)((char *)v3 + 1) = v20;
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  int v10 = *((_DWORD *)this + 37);
  if ((v10 & 0x100) == 0)
  {
LABEL_17:
    if ((v10 & 0x200) == 0) {
      goto LABEL_18;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t v21 = *((void *)this + 11);
  *(unsigned char *)char v3 = 73;
  *(void *)((char *)v3 + 1) = v21;
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  int v10 = *((_DWORD *)this + 37);
  if ((v10 & 0x200) == 0)
  {
LABEL_18:
    if ((v10 & 0x400) == 0) {
      goto LABEL_19;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t v22 = *((void *)this + 12);
  *(unsigned char *)char v3 = 81;
  *(void *)((char *)v3 + 1) = v22;
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  int v10 = *((_DWORD *)this + 37);
  if ((v10 & 0x400) == 0)
  {
LABEL_19:
    if ((v10 & 0x800) == 0) {
      goto LABEL_20;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t v23 = *((void *)this + 13);
  *(unsigned char *)char v3 = 89;
  *(void *)((char *)v3 + 1) = v23;
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  int v10 = *((_DWORD *)this + 37);
  if ((v10 & 0x800) == 0)
  {
LABEL_20:
    if ((v10 & 0x1000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t v24 = *((void *)this + 14);
  *(unsigned char *)char v3 = 97;
  *(void *)((char *)v3 + 1) = v24;
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  int v10 = *((_DWORD *)this + 37);
  if ((v10 & 0x1000) == 0)
  {
LABEL_21:
    if ((v10 & 0x2000) == 0) {
      goto LABEL_22;
    }
LABEL_40:
    uint64_t v26 = *((void *)this + 16);
    *(unsigned char *)char v3 = 113;
    *(void *)((char *)v3 + 1) = v26;
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
    if ((*((_DWORD *)this + 37) & 0x4000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_23;
  }
LABEL_39:
  uint64_t v25 = *((void *)this + 15);
  *(unsigned char *)char v3 = 105;
  *(void *)((char *)v3 + 1) = v25;
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  int v10 = *((_DWORD *)this + 37);
  if ((v10 & 0x2000) != 0) {
    goto LABEL_40;
  }
LABEL_22:
  if ((v10 & 0x4000) != 0)
  {
LABEL_23:
    uint64_t v11 = *((void *)this + 17);
    *(unsigned char *)char v3 = 121;
    *(void *)((char *)v3 + 1) = v11;
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  }
LABEL_24:
  int v14 = (void *)*((void *)this + 1);
  int v13 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  unint64_t v12 = v14;
  if (!v14 || *v12 == v12[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v13, v3, a3);
}

uint64_t sub_100142F0C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 148);
  if ((_BYTE)v3)
  {
    int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0)
    {
      v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 24), (unint64_t)a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 148);
    }
    int v5 = v4 + 9;
    if ((v3 & 8) == 0) {
      int v5 = v4;
    }
    if ((v3 & 0x10) != 0) {
      v5 += 9;
    }
    if ((v3 & 0x20) != 0) {
      v5 += 9;
    }
    if ((v3 & 0x40) != 0) {
      v5 += 9;
    }
    if ((v3 & 0x80) != 0) {
      int v6 = v5 + 9;
    }
    else {
      int v6 = v5;
    }
  }
  else
  {
    int v6 = 0;
  }
  if ((v3 & 0xFF00) != 0)
  {
    int v7 = v6 + 9;
    if ((v3 & 0x100) == 0) {
      int v7 = v6;
    }
    if ((v3 & 0x200) != 0) {
      v7 += 9;
    }
    if ((v3 & 0x400) != 0) {
      v7 += 9;
    }
    if ((v3 & 0x800) != 0) {
      v7 += 9;
    }
    if ((v3 & 0x1000) != 0) {
      v7 += 9;
    }
    if ((v3 & 0x2000) != 0) {
      v7 += 9;
    }
    if ((v3 & 0x4000) != 0) {
      int v6 = v7 + 9;
    }
    else {
      int v6 = v7;
    }
  }
  int v8 = *(_DWORD *)(a1 + 40);
  if (v8 < 1)
  {
    int v10 = 0;
  }
  else
  {
    uint64_t v9 = 0;
    int v10 = 0;
    do
    {
      uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 32)
                                                                                             + 4 * v9);
      if (v11 >= 0x80)
      {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
        int v8 = *(_DWORD *)(a1 + 40);
      }
      else
      {
        int v12 = 1;
      }
      v10 += v12;
      ++v9;
    }
    while (v9 < v8);
  }
  uint64_t v13 = (v10 + v6 + v8);
  int v14 = *(void **)(a1 + 8);
  if (v14 && *v14 != v14[1]) {
    uint64_t v13 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v13;
  }
  *(_DWORD *)(a1 + 144) = v13;
  return v13;
}

uint64_t sub_100143080(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10013AF64((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100143154(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10014316C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001431F8()
{
  return 1;
}

uint64_t sub_100143200()
{
  uint64_t v0 = qword_1008A16F8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100136C54;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1670;
}

void sub_100143294(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001432A8(uint64_t a1)
{
  *(void *)a1 = off_100851EE0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_DWORD *)(a1 + 36) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 0;
  return a1;
}

void sub_1001432F8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_10014330C(uint64_t a1)
{
  *(void *)a1 = off_100851EE0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100143360(uint64_t a1)
{
  *(void *)a1 = off_100851EE0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1001433C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 36) = a2;
  return result;
}

void sub_1001433D0()
{
}

void sub_100143410()
{
}

uint64_t sub_100143434(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          int v7 = (char *)*((void *)this + 1);
          if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v7;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v7 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v9 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v10 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_19;
          }
          v17[0] = 0;
          int v12 = (char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
          if ((unint64_t)v12 >= v11 || *v12 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v17);
            if (!result) {
              return result;
            }
            unsigned int v13 = v17[0];
            int v14 = (unsigned char *)*((void *)this + 1);
            unint64_t v11 = *((void *)this + 2);
          }
          else
          {
            unsigned int v13 = *v12;
            int v14 = v12 + 1;
            *((void *)this + 1) = v14;
          }
          *(unsigned char *)(a1 + 32) = v13 != 0;
          *(_DWORD *)(a1 + 40) |= 1u;
          if ((unint64_t)v14 < v11 && *v14 == 17)
          {
            *((void *)this + 1) = v14 + 1;
            goto LABEL_27;
          }
        }
        if (v9 != 2) {
          break;
        }
        int v10 = TagFallback & 7;
        if (v10 != 1) {
          goto LABEL_19;
        }
LABEL_27:
        *(void *)uint64_t v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v17) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v17;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v16 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v16 < *((void *)this + 2) && *v16 == 25)
        {
          *((void *)this + 1) = v16 + 1;
          goto LABEL_31;
        }
      }
      if (v9 != 3) {
        break;
      }
      int v10 = TagFallback & 7;
      if (v10 != 1) {
        goto LABEL_19;
      }
LABEL_31:
      *(void *)uint64_t v17 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v17) & 1) == 0)return 0; {
      *(void *)(a1 + 24) = *(void *)v17;
      }
      *(_DWORD *)(a1 + 40) |= 4u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v10 = TagFallback & 7;
LABEL_19:
    if (v10 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) != 0);
  return 0;
}

uint64_t sub_100143634(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 40);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_12:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 16), a3);
    if ((*(_DWORD *)(v5 + 40) & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(this + 32), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 2) != 0) {
    goto LABEL_12;
  }
LABEL_3:
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 24), a3);
LABEL_5:
  unsigned int v9 = *(void **)(v5 + 8);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

uint64_t sub_1001436E4(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_10:
    uint64_t v10 = *(void *)(a1 + 16);
    *(unsigned char *)a2 = 17;
    *(void *)(a2 + 1) = v10;
    a2 += 9;
    if ((*(_DWORD *)(a1 + 40) & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)a2 = 8;
  *(unsigned char *)(a2 + 1) = v9;
  a2 += 2;
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_3:
  if ((v3 & 4) != 0)
  {
LABEL_4:
    uint64_t v4 = *(void *)(a1 + 24);
    *(unsigned char *)a2 = 25;
    *(void *)(a2 + 1) = v4;
    a2 += 9;
  }
LABEL_5:
  int v7 = *(void **)(a1 + 8);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v5, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
}

uint64_t sub_1001437D4(_DWORD *a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = a1[10];
  unsigned int v4 = 2 * (v3 & 1);
  if ((v3 & 2) != 0) {
    unsigned int v4 = (2 * (v3 & 1)) | 9;
  }
  if ((v3 & 4) != 0) {
    v4 += 9;
  }
  if (a1[10]) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  int v8 = (void *)*((void *)a1 + 1);
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
  int v7 = v8;
  if (v8 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
  a1[9] = v5;
  return v5;
}

uint64_t sub_100143844(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10013B20C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100143918(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100143930(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001439BC()
{
  return 1;
}

uint64_t sub_1001439C4()
{
  uint64_t v0 = qword_1008A16F8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100136C54;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1680;
}

void sub_100143A58(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100143A6C(uint64_t a1)
{
  *(void *)a1 = off_100851F90;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 1;
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_100143AC4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_100143AD8(void *a1)
{
  *a1 = off_100851F90;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_100143B38(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void *sub_100143B38(void *result)
{
  if ((void *)qword_1008AC498 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t result = (void *)v1[3];
    if (result)
    {
      char v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_100143BDC(void *a1)
{
  sub_100143AD8(a1);

  operator delete();
}

uint64_t sub_100143C14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 36) = a2;
  return result;
}

void sub_100143C1C()
{
}

void sub_100143C5C()
{
}

uint64_t sub_100143C80(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v9 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_21;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v13 = *(void *)(a1 + 16);
        if (!v13) {
          operator new();
        }
        unsigned int v37 = 0;
        int v14 = (char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37))return 0; {
        }
          }
        else
        {
          unsigned int v37 = *v14;
          *((void *)this + 1) = v14 + 1;
        }
        int v15 = *((_DWORD *)this + 14);
        int v16 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v15 + 1;
        if (v15 >= v16) {
          return 0;
        }
        int v17 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v37);
        if (!sub_1001447A4(v13, this, v18, v19) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v17);
        int v20 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)this + 14) = v22;
        }
        uint64_t v23 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v23 < *((void *)this + 2) && *v23 == 18)
        {
          *((void *)this + 1) = v23 + 1;
          goto LABEL_33;
        }
      }
      if (v9 == 2) {
        break;
      }
      if (v9 == 3)
      {
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) == 0)
        {
          int v12 = (char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
          goto LABEL_47;
        }
      }
      else
      {
        int v10 = TagFallback & 7;
      }
LABEL_21:
      if (v10 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
    }
      }
    int v10 = TagFallback & 7;
    if (v10 != 2) {
      goto LABEL_21;
    }
LABEL_33:
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v24 = *(void *)(a1 + 24);
    if (!v24) {
      operator new();
    }
    unsigned int v38 = 0;
    uint64_t v25 = (char *)*((void *)this + 1);
    if ((unint64_t)v25 >= *((void *)this + 2) || *v25 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v38)) {
        return 0;
      }
    }
    else
    {
      unsigned int v38 = *v25;
      *((void *)this + 1) = v25 + 1;
    }
    int v26 = *((_DWORD *)this + 14);
    int v27 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v26 + 1;
    if (v26 >= v27) {
      return 0;
    }
    int v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v38);
    if (!sub_1001473D4(v24, this, v29, v30) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
    int v31 = *((_DWORD *)this + 14);
    BOOL v21 = __OFSUB__(v31, 1);
    int v32 = v31 - 1;
    if (v32 < 0 == v21) {
      *((_DWORD *)this + 14) = v32;
    }
    uint64_t v33 = (unsigned char *)*((void *)this + 1);
    unint64_t v11 = *((void *)this + 2);
    if ((unint64_t)v33 < v11 && *v33 == 24)
    {
      int v12 = v33 + 1;
      *((void *)this + 1) = v12;
LABEL_47:
      unsigned int v36 = 0;
      if ((unint64_t)v12 >= v11 || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v36);
        if (!result) {
          return result;
        }
        signed int v34 = v36;
      }
      else
      {
        signed int v34 = *v12;
        *((void *)this + 1) = v12 + 1;
      }
      if ((v34 - 1) > 9)
      {
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 3, v34);
      }
      else
      {
        *(_DWORD *)(a1 + 40) |= 4u;
        *(_DWORD *)(a1 + 32) = v34;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
  }
}

void sub_100143FE8()
{
}

uint64_t sub_100144020(uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 40);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_14:
    uint64_t v11 = *(void *)(v5 + 24);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_1008AC498 + 24);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v11, a2, a4);
    if ((*(_DWORD *)(v5 + 40) & 4) != 0) {
      goto LABEL_4;
    }
    goto LABEL_5;
  }
  uint64_t v10 = *(void *)(this + 16);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_1008AC498 + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 2) != 0) {
    goto LABEL_14;
  }
LABEL_3:
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 32), (int)a2, a4);
LABEL_5:
  unsigned int v9 = *(void **)(v5 + 8);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001440F0(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 10);
  if (v6)
  {
    int v7 = (unsigned int *)*((void *)this + 2);
    if (!v7) {
      int v7 = *(unsigned int **)(qword_1008AC498 + 16);
    }
    *(unsigned char *)a2 = 10;
    unsigned int v8 = a2 + 1;
    unsigned int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7[34];
    if (v9 > 0x7F)
    {
      uint64_t v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, v8, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v9;
      uint64_t v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
    uint64_t v4 = sub_10014531C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v7, v10, a3, a4);
    int v6 = *((_DWORD *)this + 10);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_23;
      }
LABEL_17:
      int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 8);
      *(unsigned char *)uint64_t v4 = 24;
      unint64_t v15 = (unint64_t)v4 + 1;
      if ((v14 & 0x80000000) != 0)
      {
        uint64_t v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v14, v15, a3);
      }
      else
      {
        if (v14 <= 0x7F)
        {
          *((unsigned char *)v4 + 1) = (_BYTE)v14;
          uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
          goto LABEL_23;
        }
        uint64_t v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, v15, a3);
      }
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v16;
      goto LABEL_23;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v11 = (unsigned int *)*((void *)this + 3);
  if (!v11) {
    uint64_t v11 = *(unsigned int **)(qword_1008AC498 + 24);
  }
  *(unsigned char *)uint64_t v4 = 18;
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[8];
  if (v12 > 0x7F)
  {
    uint64_t v13 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v12;
    uint64_t v13 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
  uint64_t v4 = sub_100147780((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, v13, a3);
  if ((*((_DWORD *)this + 10) & 4) != 0) {
    goto LABEL_17;
  }
LABEL_23:
  uint64_t v19 = (void *)*((void *)this + 1);
  uint64_t v18 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v17 = v19;
  if (!v19 || *v17 == v17[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v18, v4, a3);
}

uint64_t sub_100144244(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 40);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_25;
  }
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_1008AC498 + 16);
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100145884(v5, a2);
    int v7 = (int)v6;
    if (v6 >= 0x80) {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
    }
    else {
      int v8 = 1;
    }
    uint64_t v4 = (v7 + v8 + 1);
    int v3 = *(_DWORD *)(a1 + 40);
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v4 = 0;
  if ((*(unsigned char *)(a1 + 40) & 2) != 0)
  {
LABEL_12:
    uint64_t v9 = *(void *)(a1 + 24);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1008AC498 + 24);
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100147888(v9, a2);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    }
    else {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v11 + v12 + 1);
    int v3 = *(_DWORD *)(a1 + 40);
  }
LABEL_18:
  if ((v3 & 4) != 0)
  {
    uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if ((v13 & 0x80000000) != 0)
    {
      int v14 = 11;
    }
    else if (v13 >= 0x80)
    {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2)
          + 1;
    }
    else
    {
      int v14 = 2;
    }
    uint64_t v4 = (v14 + v4);
  }
LABEL_25:
  unint64_t v15 = *(void **)(a1 + 8);
  if (v15 && *v15 != v15[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 36) = v4;
  return v4;
}

uint64_t sub_10014436C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10013ADAC((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100144440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100144458(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001444E4()
{
  return 1;
}

uint64_t sub_1001444EC()
{
  uint64_t v0 = qword_1008A16F8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100136C54;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A1690;
}

void sub_100144580(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100144594(uint64_t a1)
{
  *(void *)a1 = off_100852040;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  return a1;
}

void sub_1001445FC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_100144610(void *a1)
{
  *a1 = off_100852040;
  sub_100144688((uint64_t)a1);
  if (a1[14]) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_100144688(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 88);
  if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  return result;
}

void sub_100144700(void *a1)
{
  sub_100144610(a1);

  operator delete();
}

uint64_t sub_100144738(uint64_t result, int a2)
{
  *(_DWORD *)(result + 136) = a2;
  return result;
}

void sub_100144740()
{
}

void sub_100144780()
{
}

uint64_t sub_1001447A4(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = a1 + 112;
  int v7 = (unint64_t *)(a1 + 24);
  int v8 = (unsigned int *)(a1 + 80);
  uint64_t v9 = (unsigned int *)(a1 + 84);
  uint64_t v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  unsigned int v56 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (2)
  {
    int v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v11;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v11 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v13 = TagFallback & 7;
        if (v13 != 1) {
          goto LABEL_48;
        }
        *(void *)int v57 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v57) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v57;
        }
        *(_DWORD *)(a1 + 140) |= 1u;
        unint64_t v15 = (unsigned char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v15 >= v14 || *v15 != 16) {
          continue;
        }
        uint64_t v16 = v15 + 1;
        *((void *)this + 1) = v16;
        goto LABEL_16;
      case 2u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        uint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
LABEL_16:
        if ((unint64_t)v16 >= v14 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v17 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          unint64_t *v7 = *v16;
          int v17 = v16 + 1;
          *((void *)this + 1) = v17;
        }
        *(_DWORD *)(a1 + 140) |= 2u;
        if ((unint64_t)v17 >= v14 || *v17 != 25) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
LABEL_57:
        *(void *)int v57 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v57) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v57;
        }
        *(_DWORD *)(a1 + 140) |= 4u;
        int v27 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v27 >= *((void *)this + 2) || *v27 != 33) {
          continue;
        }
        *((void *)this + 1) = v27 + 1;
LABEL_61:
        *(void *)int v57 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v57) & 1) == 0)return 0; {
        *(void *)(a1 + 40) = *(void *)v57;
        }
        *(_DWORD *)(a1 + 140) |= 8u;
        int v28 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 != 41) {
          continue;
        }
        *((void *)this + 1) = v28 + 1;
LABEL_65:
        *(void *)int v57 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v57) & 1) == 0)return 0; {
        *(void *)(a1 + 48) = *(void *)v57;
        }
        *(_DWORD *)(a1 + 140) |= 0x10u;
        uint64_t v29 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v29 >= *((void *)this + 2) || *v29 != 49) {
          continue;
        }
        *((void *)this + 1) = v29 + 1;
LABEL_69:
        *(void *)int v57 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v57) & 1) == 0)return 0; {
        *(void *)(a1 + 56) = *(void *)v57;
        }
        *(_DWORD *)(a1 + 140) |= 0x20u;
        uint64_t v30 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v30 >= *((void *)this + 2) || *v30 != 57) {
          continue;
        }
        *((void *)this + 1) = v30 + 1;
LABEL_73:
        *(void *)int v57 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v57) & 1) == 0)return 0; {
        *(void *)(a1 + 64) = *(void *)v57;
        }
        *(_DWORD *)(a1 + 140) |= 0x40u;
        int v31 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v31 >= *((void *)this + 2) || *v31 != 65) {
          continue;
        }
        *((void *)this + 1) = v31 + 1;
LABEL_77:
        *(void *)int v57 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v57) & 1) == 0)return 0; {
        *(void *)(a1 + 72) = *(void *)v57;
        }
        *(_DWORD *)(a1 + 140) |= 0x80u;
        int v32 = (unsigned char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        if ((unint64_t)v32 >= v18 || *v32 != 72) {
          continue;
        }
        uint64_t v19 = v32 + 1;
        *((void *)this + 1) = v19;
LABEL_81:
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          uint64_t v33 = (unsigned char *)*((void *)this + 1);
          unint64_t v18 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v8 = *v19;
          uint64_t v33 = v19 + 1;
          *((void *)this + 1) = v33;
        }
        *(_DWORD *)(a1 + 140) |= 0x100u;
        if ((unint64_t)v33 >= v18 || *v33 != 80) {
          continue;
        }
        int v20 = v33 + 1;
        *((void *)this + 1) = v20;
LABEL_89:
        if ((unint64_t)v20 >= v18 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          signed int v34 = (unsigned char *)*((void *)this + 1);
          unint64_t v18 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v9 = *v20;
          signed int v34 = v20 + 1;
          *((void *)this + 1) = v34;
        }
        int v21 = *(_DWORD *)(a1 + 140) | 0x200;
        *(_DWORD *)(a1 + 140) = v21;
        if ((unint64_t)v34 >= v18 || *v34 != 90) {
          continue;
        }
        *((void *)this + 1) = v34 + 1;
LABEL_97:
        *(_DWORD *)(a1 + 140) = v21 | 0x400;
        if (*(_UNKNOWN **)(a1 + 88) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
        if (!result) {
          return result;
        }
        int v35 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v35 >= *((void *)this + 2) || *v35 != 97) {
          continue;
        }
        *((void *)this + 1) = v35 + 1;
LABEL_103:
        *(void *)int v57 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v57) & 1) == 0)return 0; {
        *(void *)(a1 + 96) = *(void *)v57;
        }
        *(_DWORD *)(a1 + 140) |= 0x800u;
        unsigned int v36 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v36 >= *((void *)this + 2) || *v36 != 105) {
          continue;
        }
        *((void *)this + 1) = v36 + 1;
LABEL_107:
        *(void *)int v57 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v57) & 1) == 0)return 0; {
        *(void *)(a1 + 104) = *(void *)v57;
        }
        *(_DWORD *)(a1 + 140) |= 0x1000u;
        unsigned int v37 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v37 < *((void *)this + 2) && *v37 == 113) {
          goto LABEL_110;
        }
        continue;
      case 3u:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_57;
        }
        goto LABEL_48;
      case 4u:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_61;
        }
        goto LABEL_48;
      case 5u:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_65;
        }
        goto LABEL_48;
      case 6u:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_69;
        }
        goto LABEL_48;
      case 7u:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_73;
        }
        goto LABEL_48;
      case 8u:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_77;
        }
        goto LABEL_48;
      case 9u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        uint64_t v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_81;
      case 0xAu:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_89;
      case 0xBu:
        int v13 = TagFallback & 7;
        if (v13 != 2) {
          goto LABEL_48;
        }
        int v21 = *(_DWORD *)(a1 + 140);
        goto LABEL_97;
      case 0xCu:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_103;
        }
        goto LABEL_48;
      case 0xDu:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_107;
        }
        goto LABEL_48;
      case 0xEu:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_111;
        }
        if (v13 != 2)
        {
LABEL_48:
          if (v13 == 4) {
            return 1;
          }
          if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v10, a4) & 1) == 0)return 0; {
          continue;
          }
        }
        uint64_t result = sub_10005D718(this, v6);
        if (!result) {
          return result;
        }
LABEL_127:
        unsigned int v37 = (unsigned char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        uint64_t v10 = v56;
        if ((unint64_t)v37 >= v24) {
          continue;
        }
        int v52 = *v37;
        if (v52 != 113)
        {
          if (v52 == 120)
          {
            uint64_t v23 = v37 + 1;
            *((void *)this + 1) = v23;
LABEL_131:
            v57[0] = 0;
            if ((unint64_t)v23 >= v24 || *v23 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v57);
              if (!result) {
                return result;
              }
              signed int v53 = v57[0];
            }
            else
            {
              signed int v53 = *v23;
              *((void *)this + 1) = v23 + 1;
            }
            if (sub_100071A2C(v53))
            {
              if (!sub_100071A2C(v53)) {
                sub_1004107BC();
              }
              *(_DWORD *)(a1 + 140) |= 0x4000u;
              *(_DWORD *)(a1 + 128) = v53;
            }
            else
            {
              wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v10, 15, v53);
            }
            int v54 = (unsigned __int8 *)*((void *)this + 1);
            unint64_t v25 = *((void *)this + 2);
            if ((int)v25 - (int)v54 >= 2 && *v54 == 128 && v54[1] == 1)
            {
              int v26 = (char *)(v54 + 2);
              *((void *)this + 1) = v26;
LABEL_144:
              v57[0] = 0;
              if ((unint64_t)v26 >= v25 || *v26 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v57);
                if (!result) {
                  return result;
                }
                unsigned int v55 = v57[0];
              }
              else
              {
                unsigned int v55 = *v26;
                *((void *)this + 1) = v26 + 1;
              }
              if (v55 > 1)
              {
                wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v10, 16, (int)v55);
              }
              else
              {
                *(_DWORD *)(a1 + 140) |= 0x8000u;
                *(_DWORD *)(a1 + 132) = v55;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
            }
          }
          continue;
        }
LABEL_110:
        *((void *)this + 1) = v37 + 1;
LABEL_111:
        *(void *)int v57 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v57))
        {
          uint64_t v38 = *(void *)v57;
          int v39 = *(_DWORD *)(a1 + 120);
          if (v39 == *(_DWORD *)(a1 + 124))
          {
            sub_10006F628(v6, v39 + 1);
            int v39 = *(_DWORD *)(a1 + 120);
          }
          uint64_t v40 = *(void *)(a1 + 112);
          int v41 = v39 + 1;
          *(_DWORD *)(a1 + 120) = v39 + 1;
          *(void *)(v40 + 8 * v39) = v38;
          uint64_t v42 = *((void *)this + 1);
          int v43 = *((_DWORD *)this + 4) - v42;
          if (v43 >= 1)
          {
            signed int v44 = v43 / 9u;
            int v45 = v44 >= *(_DWORD *)(a1 + 124) - v41 ? *(_DWORD *)(a1 + 124) - v41 : v44;
            if (v45 >= 1)
            {
              unsigned int v46 = v9;
              int v47 = v8;
              uint64_t v48 = v6;
              int v49 = v7;
              int v50 = 0;
              while (*(unsigned char *)v42 == 113)
              {
                uint64_t v51 = *(void *)(v42 + 1);
                if (v41 >= *(_DWORD *)(a1 + 124))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v57);
                  int v41 = *(_DWORD *)(a1 + 120);
                  uint64_t v40 = *(void *)(a1 + 112);
                }
                *(_DWORD *)(a1 + 120) = v41 + 1;
                *(void *)(v40 + 8 * v41) = v51;
                ++v50;
                v42 += 9;
                ++v41;
                if (v45 == v50)
                {
                  int v50 = v45;
                  break;
                }
              }
              int v7 = v49;
              uint64_t v6 = v48;
              int v8 = v47;
              uint64_t v9 = v46;
              if (v50) {
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * v50);
              }
            }
          }
          goto LABEL_127;
        }
        return 0;
      case 0xFu:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        uint64_t v23 = (char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_131;
      case 0x10u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        int v26 = (char *)*((void *)this + 1);
        unint64_t v25 = *((void *)this + 2);
        goto LABEL_144;
      default:
        int v13 = TagFallback & 7;
        goto LABEL_48;
    }
  }
}

void sub_10014508C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001450E4(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 140);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    int v6 = *(_DWORD *)(v5 + 140);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_30;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 24), (unint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_31;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_32;
  }
LABEL_31:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_33;
  }
LABEL_32:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_34;
  }
LABEL_33:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_35;
  }
LABEL_34:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_36;
  }
LABEL_35:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(double *)(v5 + 72), a3);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_37;
  }
LABEL_36:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(v5 + 80), a2, a4);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_38;
  }
LABEL_37:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_DWORD *)(v5 + 84), a2, a4);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_39;
  }
LABEL_38:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_39:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (int)a2, *(double *)(v5 + 96), a3);
  if ((*(_DWORD *)(v5 + 140) & 0x1000) != 0) {
LABEL_14:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (int)a2, *(double *)(v5 + 104), a3);
LABEL_15:
  if (*(int *)(v5 + 120) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, (int)a2, *(double *)(*(void *)(v5 + 112) + 8 * v7++), a3);
    while (v7 < *(int *)(v5 + 120));
  }
  int v8 = *(_DWORD *)(v5 + 140);
  if ((v8 & 0x4000) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(_DWORD *)(v5 + 128), (int)a2, a4);
    int v8 = *(_DWORD *)(v5 + 140);
  }
  if ((v8 & 0x8000) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(_DWORD *)(v5 + 132), (int)a2, a4);
  }
  int v11 = *(void **)(v5 + 8);
  uint64_t v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v9 = v11;
  if (v11 && *v9 != v9[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v10, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10014531C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 35);
  if (v6)
  {
    uint64_t v7 = *((void *)this + 2);
    *(unsigned char *)a2 = 9;
    *(void *)((char *)a2 + 1) = v7;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
    int v6 = *((_DWORD *)this + 35);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 3);
  *(unsigned char *)uint64_t v4 = 16;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v8, (unint64_t)v4 + 1, a3);
  int v6 = *((_DWORD *)this + 35);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t v9 = *((void *)this + 4);
  *(unsigned char *)uint64_t v4 = 25;
  *(void *)((char *)v4 + 1) = v9;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v6 = *((_DWORD *)this + 35);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t v10 = *((void *)this + 5);
  *(unsigned char *)uint64_t v4 = 33;
  *(void *)((char *)v4 + 1) = v10;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v6 = *((_DWORD *)this + 35);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t v11 = *((void *)this + 6);
  *(unsigned char *)uint64_t v4 = 41;
  *(void *)((char *)v4 + 1) = v11;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v6 = *((_DWORD *)this + 35);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t v12 = *((void *)this + 7);
  *(unsigned char *)uint64_t v4 = 49;
  *(void *)((char *)v4 + 1) = v12;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v6 = *((_DWORD *)this + 35);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t v13 = *((void *)this + 8);
  *(unsigned char *)uint64_t v4 = 57;
  *(void *)((char *)v4 + 1) = v13;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v6 = *((_DWORD *)this + 35);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_22;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t v14 = *((void *)this + 9);
  *(unsigned char *)uint64_t v4 = 65;
  *(void *)((char *)v4 + 1) = v14;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  if ((*((_DWORD *)this + 35) & 0x100) == 0) {
    goto LABEL_22;
  }
LABEL_19:
  unint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 20);
  *(unsigned char *)uint64_t v4 = 72;
  if (v15 > 0x7F)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, (int)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v15;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }
LABEL_22:
  if ((*((unsigned char *)this + 141) & 2) != 0)
  {
    uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 21);
    *(unsigned char *)uint64_t v4 = 80;
    if (v16 > 0x7F)
    {
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v16, (int)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v16;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
  }
  int v17 = *((_DWORD *)this + 35);
  if ((v17 & 0x400) != 0)
  {
    uint64_t v23 = *((void *)this + 11);
    *(unsigned char *)uint64_t v4 = 90;
    if (*(char *)(v23 + 23) < 0) {
      unint64_t v24 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v23 + 8);
    }
    else {
      unint64_t v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v23 + 23);
    }
    if (v24 > 0x7F)
    {
      int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v24, (int)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v24;
      int v26 = v4 + 2;
    }
    int v27 = *(char *)(v23 + 23);
    if (v27 >= 0) {
      int v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v23;
    }
    else {
      int v28 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v23;
    }
    if (v27 >= 0) {
      uint64_t v29 = (const void *)*(unsigned __int8 *)(v23 + 23);
    }
    else {
      uint64_t v29 = (const void *)*(unsigned int *)(v23 + 8);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v28, v29, v26, a4);
    int v17 = *((_DWORD *)this + 35);
    if ((v17 & 0x800) == 0)
    {
LABEL_28:
      if ((v17 & 0x1000) == 0) {
        goto LABEL_30;
      }
      goto LABEL_29;
    }
  }
  else if ((v17 & 0x800) == 0)
  {
    goto LABEL_28;
  }
  uint64_t v30 = *((void *)this + 12);
  *(unsigned char *)uint64_t v4 = 97;
  *(void *)((char *)v4 + 1) = v30;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  if ((*((_DWORD *)this + 35) & 0x1000) != 0)
  {
LABEL_29:
    uint64_t v18 = *((void *)this + 13);
    *(unsigned char *)uint64_t v4 = 105;
    *(void *)((char *)v4 + 1) = v18;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  }
LABEL_30:
  if (*((int *)this + 30) >= 1)
  {
    uint64_t v19 = 0;
    do
    {
      uint64_t v20 = *(void *)(*((void *)this + 14) + 8 * v19);
      *(unsigned char *)uint64_t v4 = 113;
      *(void *)((char *)v4 + 1) = v20;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
      ++v19;
    }
    while (v19 < *((int *)this + 30));
  }
  if ((*((unsigned char *)this + 141) & 0x40) != 0)
  {
    int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 32);
    *(unsigned char *)uint64_t v4 = 120;
    unint64_t v22 = (unint64_t)v4 + 1;
    if ((v21 & 0x80000000) != 0)
    {
      uint64_t v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v21, v22, a3);
    }
    else
    {
      if (v21 <= 0x7F)
      {
        *((unsigned char *)v4 + 1) = (_BYTE)v21;
        uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
        goto LABEL_55;
      }
      uint64_t v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, v22, a3);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v25;
  }
LABEL_55:
  if ((*((unsigned char *)this + 141) & 0x80) != 0)
  {
    int v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 33);
    *(_WORD *)uint64_t v4 = 384;
    unint64_t v32 = (unint64_t)v4 + 2;
    if ((v31 & 0x80000000) != 0)
    {
      uint64_t v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v31, v32, a3);
    }
    else
    {
      if (v31 <= 0x7F)
      {
        *((unsigned char *)v4 + 2) = (_BYTE)v31;
        uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
        goto LABEL_62;
      }
      uint64_t v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v31, v32, a3);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v33;
  }
LABEL_62:
  unsigned int v36 = (void *)*((void *)this + 1);
  int v35 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  signed int v34 = v36;
  if (!v36 || *v34 == v34[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v35, v4, a3);
}

uint64_t sub_100145884(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 140);
  if ((_BYTE)v3)
  {
    int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0)
    {
      v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 24), (unint64_t)a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 140);
    }
    int v5 = v4 + 9;
    if ((v3 & 4) == 0) {
      int v5 = v4;
    }
    if ((v3 & 8) != 0) {
      v5 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v5 += 9;
    }
    if ((v3 & 0x20) != 0) {
      v5 += 9;
    }
    if ((v3 & 0x40) != 0) {
      v5 += 9;
    }
    if ((v3 & 0x80) != 0) {
      int v6 = v5 + 9;
    }
    else {
      int v6 = v5;
    }
  }
  else
  {
    int v6 = 0;
  }
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 80);
      if (v7 >= 0x80)
      {
        int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2)
           + 1;
        int v3 = *(_DWORD *)(a1 + 140);
      }
      else
      {
        int v8 = 2;
      }
      v6 += v8;
      if ((v3 & 0x200) == 0)
      {
LABEL_21:
        if ((v3 & 0x400) == 0)
        {
LABEL_40:
          int v17 = v6 + 9;
          if ((v3 & 0x800) == 0) {
            int v17 = v6;
          }
          if ((v3 & 0x1000) != 0) {
            int v6 = v17 + 9;
          }
          else {
            int v6 = v17;
          }
          if ((v3 & 0x4000) != 0)
          {
            uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 128);
            if ((v18 & 0x80000000) != 0)
            {
              int v19 = 11;
            }
            else if (v18 >= 0x80)
            {
              int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2)+ 1;
              int v3 = *(_DWORD *)(a1 + 140);
            }
            else
            {
              int v19 = 2;
            }
            v6 += v19;
          }
          if ((v3 & 0x8000) != 0)
          {
            uint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 132);
            if ((v20 & 0x80000000) != 0)
            {
              int v21 = 12;
            }
            else if (v20 >= 0x80)
            {
              int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, a2)+ 2;
            }
            else
            {
              int v21 = 3;
            }
            v6 += v21;
          }
          goto LABEL_59;
        }
LABEL_31:
        uint64_t v11 = *(void *)(a1 + 88);
        int v12 = *(unsigned __int8 *)(v11 + 23);
        char v13 = v12;
        uint64_t v14 = *(void *)(v11 + 8);
        if ((v12 & 0x80u) == 0) {
          unint64_t v15 = *(unsigned __int8 *)(v11 + 23);
        }
        else {
          unint64_t v15 = v14;
        }
        if (v15 >= 0x80)
        {
          int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v15, a2);
          int v12 = *(unsigned __int8 *)(v11 + 23);
          uint64_t v14 = *(void *)(v11 + 8);
          int v3 = *(_DWORD *)(a1 + 140);
          char v13 = *(unsigned char *)(v11 + 23);
        }
        else
        {
          int v16 = 1;
        }
        if (v13 < 0) {
          int v12 = v14;
        }
        v6 += v16 + v12 + 1;
        goto LABEL_40;
      }
    }
    else if ((v3 & 0x200) == 0)
    {
      goto LABEL_21;
    }
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 84);
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2)
          + 1;
      int v3 = *(_DWORD *)(a1 + 140);
    }
    else
    {
      int v10 = 2;
    }
    v6 += v10;
    if ((v3 & 0x400) == 0) {
      goto LABEL_40;
    }
    goto LABEL_31;
  }
LABEL_59:
  unint64_t v22 = *(void **)(a1 + 8);
  uint64_t v23 = (9 * *(_DWORD *)(a1 + 120) + v6);
  if (v22 && *v22 != v22[1]) {
    uint64_t v23 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v23;
  }
  *(_DWORD *)(a1 + 136) = v23;
  return v23;
}

uint64_t sub_100145A98(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001397D4((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100145B6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100145B84(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100145C10()
{
  return 1;
}

uint64_t sub_100145C18()
{
  uint64_t v0 = qword_1008A16F8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100136C54;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A16A0;
}

void sub_100145CAC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100145CC0(uint64_t a1)
{
  *(void *)a1 = off_1008520F0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return a1;
}

void sub_100145D0C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100145D20(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 44);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((*(unsigned char *)(a2 + 44) & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 44) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_10:
    uint64_t v8 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 44) |= 2u;
    *(void *)(a1 + 24) = v8;
    if ((*(_DWORD *)(a2 + 44) & 4) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 44) |= 1u;
  *(void *)(a1 + 16) = v7;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_6:
  if ((v4 & 4) != 0)
  {
LABEL_7:
    uint64_t v5 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(void *)(a1 + 32) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100145E00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100145E18(uint64_t a1)
{
  *(void *)a1 = off_1008520F0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100145E6C(uint64_t a1)
{
  *(void *)a1 = off_1008520F0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100145ED4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_100145EDC()
{
}

void sub_100145F1C()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100145F40(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 44))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 9) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100145F64(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v9 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v10 = TagFallback & 7;
        if (v10 != 1) {
          goto LABEL_28;
        }
        unint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v14;
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
LABEL_18:
          unint64_t v14 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
            return 0;
          }
          *(void *)(a1 + 24) = v14;
          *(_DWORD *)(a1 + 44) |= 2u;
          int v12 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v12 < *((void *)this + 2) && *v12 == 25)
          {
            *((void *)this + 1) = v12 + 1;
            goto LABEL_22;
          }
        }
      }
      if (v9 == 2)
      {
        int v10 = TagFallback & 7;
        if (v10 != 1) {
          goto LABEL_28;
        }
        goto LABEL_18;
      }
      if (v9 != 3)
      {
        int v10 = TagFallback & 7;
        goto LABEL_28;
      }
      int v10 = TagFallback & 7;
      if (v10 == 1) {
        break;
      }
LABEL_28:
      if (v10 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
    }
      }
LABEL_22:
    unint64_t v14 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
      return 0;
    }
    *(void *)(a1 + 32) = v14;
    *(_DWORD *)(a1 + 44) |= 4u;
  }
  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_10014613C(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 44);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_12:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
    if ((*(_DWORD *)(v4 + 44) & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
  int v5 = *(_DWORD *)(v4 + 44);
  if ((v5 & 2) != 0) {
    goto LABEL_12;
  }
LABEL_3:
  if ((v5 & 4) != 0) {
LABEL_4:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v4 + 32), a3);
LABEL_5:
  uint64_t v8 = *(void **)(v4 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v8;
  if (v8 && *v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

uint64_t sub_1001461EC(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_10:
    uint64_t v10 = *(void *)(a1 + 24);
    *(unsigned char *)a2 = 17;
    *(void *)(a2 + 1) = v10;
    a2 += 9;
    if ((*(_DWORD *)(a1 + 44) & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  uint64_t v9 = *(void *)(a1 + 16);
  *(unsigned char *)a2 = 9;
  *(void *)(a2 + 1) = v9;
  a2 += 9;
  int v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_3:
  if ((v3 & 4) != 0)
  {
LABEL_4:
    uint64_t v4 = *(void *)(a1 + 32);
    *(unsigned char *)a2 = 25;
    *(void *)(a2 + 1) = v4;
    a2 += 9;
  }
LABEL_5:
  uint64_t v7 = *(void **)(a1 + 8);
  int v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  unsigned int v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v5, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
}

uint64_t sub_100146314(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 44);
  unsigned int v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0) {
    v4 += 9;
  }
  if ((v3 & 4) != 0) {
    v4 += 9;
  }
  if (*(unsigned char *)(a1 + 44)) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v8 = *(void **)(a1 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v7 = v8;
  if (v8 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
  *(_DWORD *)(a1 + 40) = v5;
  return v5;
}

uint64_t sub_100146388(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100145D20((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10014645C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100146474(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100146500()
{
  return 1;
}

uint64_t sub_100146508()
{
  uint64_t v0 = qword_1008A16F8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100136C54;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A16C0;
}

void sub_10014659C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001465B0(uint64_t a1)
{
  *(void *)a1 = off_1008521A0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 64) = 0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return a1;
}

void sub_100146604(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100146618(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 68);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 68))
  {
    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 68) |= 1u;
    *(void *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 68);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a2 + 68) & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 68) |= 2u;
  *(void *)(a1 + 24) = v8;
  int v4 = *(_DWORD *)(a2 + 68);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t v9 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 68) |= 4u;
  *(void *)(a1 + 32) = v9;
  int v4 = *(_DWORD *)(a2 + 68);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
LABEL_16:
    uint64_t v11 = *(void *)(a2 + 48);
    *(_DWORD *)(a1 + 68) |= 0x10u;
    *(void *)(a1 + 48) = v11;
    if ((*(_DWORD *)(a2 + 68) & 0x20) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_10;
  }
LABEL_15:
  uint64_t v10 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 68) |= 8u;
  *(void *)(a1 + 40) = v10;
  int v4 = *(_DWORD *)(a2 + 68);
  if ((v4 & 0x10) != 0) {
    goto LABEL_16;
  }
LABEL_9:
  if ((v4 & 0x20) != 0)
  {
LABEL_10:
    uint64_t v5 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 68) |= 0x20u;
    *(void *)(a1 + 56) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100146758(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100146770(uint64_t a1)
{
  *(void *)a1 = off_1008521A0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001467C4(uint64_t a1)
{
  *(void *)a1 = off_1008521A0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_10014682C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 64) = a2;
  return result;
}

void sub_100146834()
{
}

void sub_100146874()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100146898(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 68))
  {
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 15) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1001468C0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_40;
        }
        unint64_t v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v16) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v16;
        *(_DWORD *)(a1 + 68) |= 1u;
        uint64_t v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 17) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_40;
        }
LABEL_15:
        unint64_t v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v16) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 24) = v16;
        *(_DWORD *)(a1 + 68) |= 2u;
        uint64_t v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 25) {
          continue;
        }
        *((void *)this + 1) = v11 + 1;
LABEL_20:
        unint64_t v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v16) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 32) = v16;
        *(_DWORD *)(a1 + 68) |= 4u;
        int v12 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 != 33) {
          continue;
        }
        *((void *)this + 1) = v12 + 1;
LABEL_25:
        unint64_t v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v16) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 40) = v16;
        *(_DWORD *)(a1 + 68) |= 8u;
        char v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 != 41) {
          continue;
        }
        *((void *)this + 1) = v13 + 1;
LABEL_30:
        unint64_t v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v16) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 48) = v16;
        *(_DWORD *)(a1 + 68) |= 0x10u;
        unint64_t v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 != 49) {
          continue;
        }
        *((void *)this + 1) = v14 + 1;
LABEL_35:
        unint64_t v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v16) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 56) = v16;
        *(_DWORD *)(a1 + 68) |= 0x20u;
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_20;
        }
        goto LABEL_40;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_25;
        }
        goto LABEL_40;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_30;
        }
        goto LABEL_40;
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_35;
        }
        goto LABEL_40;
      default:
        int v9 = TagFallback & 7;
LABEL_40:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
    return result;
  }
}

uint64_t sub_100146BD0(uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 68);
  if (v5)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(this + 16), a3);
    int v5 = *(_DWORD *)(v4 + 68);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  int v5 = *(_DWORD *)(v4 + 68);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v4 + 32), a3);
  int v5 = *(_DWORD *)(v4 + 68);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_18:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v4 + 48), a3);
    if ((*(_DWORD *)(v4 + 68) & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v4 + 40), a3);
  int v5 = *(_DWORD *)(v4 + 68);
  if ((v5 & 0x10) != 0) {
    goto LABEL_18;
  }
LABEL_6:
  if ((v5 & 0x20) != 0) {
LABEL_7:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v4 + 56), a3);
LABEL_8:
  uint64_t v8 = *(void **)(v4 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v8;
  if (v8 && *v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

uint64_t sub_100146CD4(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 68);
  if (v3)
  {
    uint64_t v9 = *(void *)(a1 + 16);
    *(unsigned char *)a2 = 9;
    *(void *)(a2 + 1) = v9;
    a2 += 9;
    int v3 = *(_DWORD *)(a1 + 68);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v10 = *(void *)(a1 + 24);
  *(unsigned char *)a2 = 17;
  *(void *)(a2 + 1) = v10;
  a2 += 9;
  int v3 = *(_DWORD *)(a1 + 68);
  if ((v3 & 4) == 0)
  {
LABEL_4:
    if ((v3 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t v11 = *(void *)(a1 + 32);
  *(unsigned char *)a2 = 25;
  *(void *)(a2 + 1) = v11;
  a2 += 9;
  int v3 = *(_DWORD *)(a1 + 68);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_16:
    uint64_t v13 = *(void *)(a1 + 48);
    *(unsigned char *)a2 = 41;
    *(void *)(a2 + 1) = v13;
    a2 += 9;
    if ((*(_DWORD *)(a1 + 68) & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_15:
  uint64_t v12 = *(void *)(a1 + 40);
  *(unsigned char *)a2 = 33;
  *(void *)(a2 + 1) = v12;
  a2 += 9;
  int v3 = *(_DWORD *)(a1 + 68);
  if ((v3 & 0x10) != 0) {
    goto LABEL_16;
  }
LABEL_6:
  if ((v3 & 0x20) != 0)
  {
LABEL_7:
    uint64_t v4 = *(void *)(a1 + 56);
    *(unsigned char *)a2 = 49;
    *(void *)(a2 + 1) = v4;
    a2 += 9;
  }
LABEL_8:
  uint64_t v7 = *(void **)(a1 + 8);
  int v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  unsigned int v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v5, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
}

uint64_t sub_100146F04(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 68);
  if (*(unsigned char *)(a1 + 68))
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v7 = *(void **)(a1 + 8);
  if (v7 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
  *(_DWORD *)(a1 + 64) = v5;
  return v5;
}

uint64_t sub_100146FA4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100146618((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100147078(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100147090(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10014711C()
{
  return 1;
}

uint64_t sub_100147124()
{
  uint64_t v0 = qword_1008A16F8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100136C54;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A16D0;
}

void sub_1001471B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_1001471CC(void *a1)
{
  *a1 = off_100852250;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_100147218(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_10014722C(void *a1)
{
  *a1 = off_100852250;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_10014728C(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void *sub_10014728C(void *result)
{
  if ((void *)qword_1008AC4A8 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t result = (void *)v1[3];
    if (result)
    {
      char v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_100147330(void *a1)
{
  sub_10014722C(a1);

  operator delete();
}

uint64_t sub_100147368(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_100147370()
{
}

void sub_1001473B0()
{
}

uint64_t sub_1001473D4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_18;
        }
        *(_DWORD *)(a1 + 36) |= 1u;
        uint64_t v10 = *(void *)(a1 + 16);
        if (!v10) {
          operator new();
        }
        unsigned int v31 = 0;
        uint64_t v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v31))return 0; {
        }
          }
        else
        {
          unsigned int v31 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        int v12 = *((_DWORD *)this + 14);
        int v13 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v12 + 1;
        if (v12 >= v13) {
          return 0;
        }
        int v14 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v31);
        if (!sub_100145F64(v10, this, v15, v16) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v14);
        int v17 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v17, 1);
        int v19 = v17 - 1;
        if (v19 < 0 == v18) {
          *((_DWORD *)this + 14) = v19;
        }
        uint64_t v20 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v20 < *((void *)this + 2) && *v20 == 18)
        {
          *((void *)this + 1) = v20 + 1;
          goto LABEL_30;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v9 = TagFallback & 7;
      if (v9 != 2) {
        goto LABEL_18;
      }
LABEL_30:
      *(_DWORD *)(a1 + 36) |= 2u;
      uint64_t v21 = *(void *)(a1 + 24);
      if (!v21) {
        operator new();
      }
      unsigned int v32 = 0;
      unint64_t v22 = (char *)*((void *)this + 1);
      if ((unint64_t)v22 >= *((void *)this + 2) || *v22 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v32))return 0; {
      }
        }
      else
      {
        unsigned int v32 = *v22;
        *((void *)this + 1) = v22 + 1;
      }
      int v23 = *((_DWORD *)this + 14);
      int v24 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v23 + 1;
      if (v23 >= v24) {
        return 0;
      }
      int v25 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v32);
      if (!sub_1001468C0(v21, this, v26, v27) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v25);
      int v28 = *((_DWORD *)this + 14);
      BOOL v18 = __OFSUB__(v28, 1);
      int v29 = v28 - 1;
      if (v29 < 0 == v18) {
        *((_DWORD *)this + 14) = v29;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v9 = TagFallback & 7;
LABEL_18:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
  }
    }
}

void sub_10014769C()
{
}

uint64_t sub_1001476D4(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 36);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 16);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1008AC4A8 + 16);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v8 = *(void *)(v5 + 24);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1008AC4A8 + 24);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  }
  uint64_t v11 = *(void **)(v5 + 8);
  uint64_t v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v9 = v11;
  if (v11 && *v9 != v9[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v10, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100147780(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  char v3 = a2;
  int v5 = *((_DWORD *)this + 9);
  if (v5)
  {
    uint64_t v6 = *((void *)this + 2);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1008AC4A8 + 16);
    }
    *(unsigned char *)a2 = 10;
    unsigned int v7 = a2 + 1;
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v6 + 40);
    if (v8 > 0x7F)
    {
      uint64_t v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v7, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v8;
      uint64_t v9 = (uint64_t)v3 + 2;
    }
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001461EC(v6, v9, a3);
    int v5 = *((_DWORD *)this + 9);
  }
  if ((v5 & 2) != 0)
  {
    uint64_t v10 = *((void *)this + 3);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_1008AC4A8 + 24);
    }
    *(unsigned char *)char v3 = 18;
    uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v10 + 64);
    if (v11 > 0x7F)
    {
      uint64_t v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)v3 + 1, a3);
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v11;
      uint64_t v12 = (uint64_t)v3 + 2;
    }
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100146CD4(v10, v12, a3);
  }
  uint64_t v15 = (void *)*((void *)this + 1);
  int v14 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v13 = v15;
  if (!v15 || *v13 == v13[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v14, v3, a3);
}

uint64_t sub_100147888(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (!*(unsigned char *)(a1 + 36))
  {
    uint64_t v3 = 0;
    goto LABEL_18;
  }
  if ((*(unsigned char *)(a1 + 36) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*(unsigned char *)(a1 + 36) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    uint64_t v4 = *(void *)(qword_1008AC4A8 + 16);
  }
  int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100146314(v4, a2);
  int v6 = (int)v5;
  if (v5 >= 0x80) {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
  }
  else {
    int v7 = 1;
  }
  uint64_t v3 = (v6 + v7 + 1);
  if ((*(_DWORD *)(a1 + 36) & 2) != 0)
  {
LABEL_12:
    uint64_t v8 = *(void *)(a1 + 24);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1008AC4A8 + 24);
    }
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100146F04(v8, a2);
    int v10 = (int)v9;
    if (v9 >= 0x80) {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
    }
    else {
      int v11 = 1;
    }
    uint64_t v3 = (v3 + v10 + v11 + 1);
  }
LABEL_18:
  uint64_t v12 = *(void **)(a1 + 8);
  if (v12 && *v12 != v12[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  }
  *(_DWORD *)(a1 + 32) = v3;
  return v3;
}

uint64_t sub_10014797C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100141B7C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100147A50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100147A68(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100147AF4()
{
  return 1;
}

uint64_t sub_100147AFC()
{
  uint64_t v0 = qword_1008A16F8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100136C54;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A16B0;
}

void sub_100147B90(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_100147BA4(void *a1)
{
  *a1 = off_100852300;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_100147BF0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100147C04(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      *(_DWORD *)(a1 + 36) |= 1u;
      uint64_t v5 = *(void *)(a1 + 16);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 16);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_1008AC430 + 16);
      }
      sub_100138A0C(v5, v6);
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 36) |= 2u;
      uint64_t v7 = *(void *)(a1 + 24);
      if (!v7) {
        operator new();
      }
      uint64_t v8 = *(void *)(a2 + 24);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_1008AC430 + 24);
      }
      sub_100139CA4(v7, v8);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100147D44()
{
}

void sub_100147D90(void *a1)
{
  *a1 = off_100852300;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_100147DF0(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void *sub_100147DF0(void *result)
{
  if ((void *)qword_1008AC430 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t result = (void *)v1[3];
    if (result)
    {
      char v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_100147E94(void *a1)
{
  sub_100147D90(a1);

  operator delete();
}

uint64_t sub_100147ECC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_100147ED4()
{
}

void sub_100147F14()
{
}

uint64_t sub_100147F38(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 36);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(this + 36))
    {
      this = *(void *)(this + 16);
      if (this)
      {
        this = sub_100138DFC(this);
        int v2 = *(_DWORD *)(v1 + 36);
      }
    }
    if ((v2 & 2) != 0)
    {
      this = *(void *)(v1 + 24);
      if (this) {
        this = sub_10013A138(this);
      }
    }
  }
  uint64_t v4 = *(void *)(v1 + 8);
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v3 + 7) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return this;
}

uint64_t sub_100147FB0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_18;
        }
        *(_DWORD *)(a1 + 36) |= 1u;
        uint64_t v10 = *(void *)(a1 + 16);
        if (!v10) {
          operator new();
        }
        unsigned int v31 = 0;
        int v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v31))return 0; {
        }
          }
        else
        {
          unsigned int v31 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        int v12 = *((_DWORD *)this + 14);
        int v13 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v12 + 1;
        if (v12 >= v13) {
          return 0;
        }
        int v14 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v31);
        if (!sub_100138EF8(v10, this, v15, v16) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v14);
        int v17 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v17, 1);
        int v19 = v17 - 1;
        if (v19 < 0 == v18) {
          *((_DWORD *)this + 14) = v19;
        }
        uint64_t v20 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v20 < *((void *)this + 2) && *v20 == 18)
        {
          *((void *)this + 1) = v20 + 1;
          goto LABEL_30;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v9 = TagFallback & 7;
      if (v9 != 2) {
        goto LABEL_18;
      }
LABEL_30:
      *(_DWORD *)(a1 + 36) |= 2u;
      uint64_t v21 = *(void *)(a1 + 24);
      if (!v21) {
        operator new();
      }
      unsigned int v32 = 0;
      unint64_t v22 = (char *)*((void *)this + 1);
      if ((unint64_t)v22 >= *((void *)this + 2) || *v22 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v32))return 0; {
      }
        }
      else
      {
        unsigned int v32 = *v22;
        *((void *)this + 1) = v22 + 1;
      }
      int v23 = *((_DWORD *)this + 14);
      int v24 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v23 + 1;
      if (v23 >= v24) {
        return 0;
      }
      int v25 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v32);
      if (!sub_10013A2DC(v21, this, v26, v27) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v25);
      int v28 = *((_DWORD *)this + 14);
      BOOL v18 = __OFSUB__(v28, 1);
      int v29 = v28 - 1;
      if (v29 < 0 == v18) {
        *((_DWORD *)this + 14) = v29;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v9 = TagFallback & 7;
LABEL_18:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
  }
    }
}

void sub_100148278()
{
}

uint64_t sub_1001482B0(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 36);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 16);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1008AC430 + 16);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v8 = *(void *)(v5 + 24);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1008AC430 + 24);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  }
  int v11 = *(void **)(v5 + 8);
  uint64_t v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v9 = v11;
  if (v11 && *v9 != v9[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v10, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10014835C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 9);
  if (v6)
  {
    uint64_t v7 = (unsigned int *)*((void *)this + 2);
    if (!v7) {
      uint64_t v7 = *(unsigned int **)(qword_1008AC430 + 16);
    }
    *(unsigned char *)a2 = 10;
    unsigned int v8 = a2 + 1;
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7[14];
    if (v9 > 0x7F)
    {
      uint64_t v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, v8, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v9;
      uint64_t v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
    uint64_t v4 = sub_10013942C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v7, v10, a3, a4);
    int v6 = *((_DWORD *)this + 9);
  }
  if ((v6 & 2) != 0)
  {
    int v11 = (unsigned int *)*((void *)this + 3);
    if (!v11) {
      int v11 = *(unsigned int **)(qword_1008AC430 + 24);
    }
    *(unsigned char *)uint64_t v4 = 18;
    int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[16];
    if (v12 > 0x7F)
    {
      int v13 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v12;
      int v13 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
    uint64_t v4 = sub_10013A968((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, v13, a3, a4);
  }
  unint64_t v16 = (void *)*((void *)this + 1);
  uint64_t v15 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v14 = v16;
  if (!v16 || *v14 == v14[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v15, v4, a3);
}

uint64_t sub_100148464(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (!*(unsigned char *)(a1 + 36))
  {
    uint64_t v3 = 0;
    goto LABEL_18;
  }
  if ((*(unsigned char *)(a1 + 36) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*(unsigned char *)(a1 + 36) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    uint64_t v4 = *(void *)(qword_1008AC430 + 16);
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001395A0(v4, a2);
  int v6 = (int)v5;
  if (v5 >= 0x80) {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
  }
  else {
    int v7 = 1;
  }
  uint64_t v3 = (v6 + v7 + 1);
  if ((*(_DWORD *)(a1 + 36) & 2) != 0)
  {
LABEL_12:
    uint64_t v8 = *(void *)(a1 + 24);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1008AC430 + 24);
    }
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10013AB30(v8, a2);
    int v10 = (int)v9;
    if (v9 >= 0x80) {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
    }
    else {
      int v11 = 1;
    }
    uint64_t v3 = (v3 + v10 + v11 + 1);
  }
LABEL_18:
  int v12 = *(void **)(a1 + 8);
  if (v12 && *v12 != v12[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  }
  *(_DWORD *)(a1 + 32) = v3;
  return v3;
}

uint64_t sub_100148558(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100147C04((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10014862C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100148644(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001486D0()
{
  return 1;
}

uint64_t sub_1001486D8()
{
  uint64_t v0 = qword_1008A16F8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100136C54;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A15B8;
}

void sub_10014876C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_100148780(void *a1)
{
  *a1 = off_1008523B0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  return a1;
}

void sub_1001487C8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1001487DC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (*(unsigned char *)(a2 + 28))
  {
    *(_DWORD *)(a1 + 28) |= 1u;
    uint64_t v4 = *(void *)(a1 + 16);
    if (!v4) {
      operator new();
    }
    uint64_t v5 = *(void *)(a2 + 16);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_1008AC428 + 16);
    }
    sub_100147C04(v4, v5);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001488BC()
{
}

void sub_1001488F4(void *a1)
{
  *a1 = off_1008523B0;
  if ((void *)qword_1008AC428 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10014898C(void *a1)
{
  sub_1001488F4(a1);

  operator delete();
}

uint64_t sub_1001489C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 24) = a2;
  return result;
}

uint64_t sub_1001489CC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008AC428;
  if (!qword_1008AC428)
  {
    sub_100137788(0, a2, a3, a4);
    return qword_1008AC428;
  }
  return result;
}

void sub_1001489FC()
{
}

void sub_100148A3C()
{
}

uint64_t sub_100148A60(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 28))
  {
    this = *(void *)(this + 16);
    if (this) {
      this = sub_100147F38(this);
    }
  }
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v2 + 5) = 0;
  if (v3)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v2);
  }
  return this;
}

uint64_t sub_100148AC0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
      }
      if (TagFallback != 10) {
        break;
      }
      *(_DWORD *)(a1 + 28) |= 1u;
      uint64_t v9 = *(void *)(a1 + 16);
      if (!v9) {
        operator new();
      }
      unsigned int v20 = 0;
      int v10 = (char *)*((void *)this + 1);
      if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v20))return 0; {
      }
        }
      else
      {
        unsigned int v20 = *v10;
        *((void *)this + 1) = v10 + 1;
      }
      int v11 = *((_DWORD *)this + 14);
      int v12 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v11 + 1;
      if (v11 >= v12) {
        return 0;
      }
      int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v20);
      if (!sub_100147FB0(v9, this, v14, v15) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
      int v16 = *((_DWORD *)this + 14);
      BOOL v17 = __OFSUB__(v16, 1);
      int v18 = v16 - 1;
      if (v18 < 0 == v17) {
        *((_DWORD *)this + 14) = v18;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
  }
    }
  return 1;
}

void sub_100148C70()
{
}

uint64_t sub_100148C94(uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 28))
  {
    uint64_t v6 = *(void *)(this + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1008AC428 + 16);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  uint64_t v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100148D18(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  if (*((unsigned char *)this + 28))
  {
    uint64_t v5 = (unsigned int *)*((void *)this + 2);
    if (!v5) {
      uint64_t v5 = *(unsigned int **)(qword_1008AC428 + 16);
    }
    *(unsigned char *)a2 = 10;
    uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v5[8];
    if (v6 > 0x7F)
    {
      int v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, (int)a2 + 1, a3);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v6;
      int v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
    a2 = sub_10014835C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v5, v7, a3, a4);
  }
  int v10 = (void *)*((void *)this + 1);
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v8 = v10;
  if (!v10 || *v8 == v8[1]) {
    return a2;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v9, a2, a3);
}

uint64_t sub_100148DC8(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (*(unsigned char *)(a1 + 28))
  {
    uint64_t v4 = *(void *)(a1 + 16);
    if (!v4) {
      uint64_t v4 = *(void *)(qword_1008AC428 + 16);
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100148464(v4, a2);
    int v6 = (int)v5;
    if (v5 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    }
    else {
      int v7 = 1;
    }
    uint64_t v3 = (v6 + v7 + 1);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v8 = *(void **)(a1 + 8);
  if (v8 && *v8 != v8[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  }
  *(_DWORD *)(a1 + 24) = v3;
  return v3;
}

uint64_t sub_100148E5C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001487DC((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100148F30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100148F48(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100148FD4()
{
  return 1;
}

uint64_t sub_100148FDC()
{
  uint64_t v0 = qword_1008A16F8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100136C54;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1008A15A8;
}

void sub_100149070(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100149084(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_10014908C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

uint64_t sub_100149094(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_10014909C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1001490A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1001490AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_1001490B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_1001490BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1001490C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

uint64_t sub_1001490CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

uint64_t sub_1001490D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 144);
}

uint64_t sub_1001490DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_1001490E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_1001490EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 136);
}

uint64_t sub_1001490F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1001490FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

uint64_t sub_100149104(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_10014910C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_100149114(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

void sub_10014911C()
{
}

void sub_10014915C()
{
}

void sub_100149180()
{
}

void sub_1001491C0()
{
}

void sub_1001491E4()
{
}

void sub_100149224()
{
}

void ***sub_10014924C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  int v39 = 0;
  int v38 = 2147450879;
  sub_100149C30(&__p, 0x25uLL, &v38);
  sub_100149CB4(v37, 0x25uLL, (uint64_t)&__p);
  if (__p)
  {
    int v35 = (__int16 *)__p;
    operator delete(__p);
  }
  unint64_t v6 = 0;
  *a3 = 0;
  a3[1] = 0;
  int v7 = 3;
  a3[2] = 0;
  do
  {
    if (v6 >= a3[2])
    {
      unint64_t v6 = sub_100149F6C(a3, v37);
    }
    else
    {
      sub_100149F0C((uint64_t)a3, v37);
      v6 += 24;
    }
    a3[1] = v6;
    --v7;
  }
  while (v7);
  uint64_t v8 = 0;
  __p = 0;
  int v35 = 0;
  unsigned int v36 = 0;
  __int16 v9 = -180;
  do
  {
    if (v8 >= v36)
    {
      int v10 = (__int16 *)__p;
      uint64_t v11 = (char *)v8 - (unsigned char *)__p;
      if ((char *)v8 - (unsigned char *)__p <= -3) {
        sub_1000267C4();
      }
      uint64_t v12 = v11 >> 1;
      if ((char *)v36 - (unsigned char *)__p <= (unint64_t)((v11 >> 1) + 1)) {
        uint64_t v13 = v12 + 1;
      }
      else {
        uint64_t v13 = (char *)v36 - (unsigned char *)__p;
      }
      if ((unint64_t)((char *)v36 - (unsigned char *)__p) >= 0x7FFFFFFFFFFFFFFELL) {
        uint64_t v14 = 0x7FFFFFFFFFFFFFFFLL;
      }
      else {
        uint64_t v14 = v13;
      }
      if (v14)
      {
        uint64_t v15 = (char *)sub_10014A47C((uint64_t)&v36, v14);
        int v10 = (__int16 *)__p;
        uint64_t v8 = v35;
      }
      else
      {
        uint64_t v15 = 0;
      }
      int v16 = (__int16 *)&v15[2 * v12];
      *int v16 = v9;
      BOOL v17 = v16 + 1;
      while (v8 != v10)
      {
        __int16 v18 = *--v8;
        *--int v16 = v18;
      }
      __p = v16;
      int v35 = v17;
      unsigned int v36 = (__int16 *)&v15[2 * v14];
      if (v10) {
        operator delete(v10);
      }
      uint64_t v8 = v17;
    }
    else
    {
      *v8++ = v9;
    }
    int v35 = v8;
    int v19 = v9;
    v9 += 10;
  }
  while (v19 < 171);
  unsigned int v20 = (__int16 *)__p;
  if (v8 == __p) {
    goto LABEL_38;
  }
  unint64_t v21 = 0;
  do
  {
    if (v8 == v20) {
      break;
    }
    unint64_t v22 = 0;
    do
    {
      __int16 v23 = v20[v21];
      __int16 v24 = v20[v22];
      v33[0] = v23;
      v33[1] = v24;
      sub_1001495F0(v33, a1, a2, v32);
      int v31 = 0;
      LODWORD(v40) = sub_100149730((uint64_t)v32);
      float v25 = sub_1001497D0(a1, a2, (__int16 *)&v40, v33, (__int16 *)&v31);
      int v26 = v31;
      *(_DWORD *)(*(void *)(*(void *)*a3 + 24 * v21) + 4 * v22) = v31;
      double v27 = v25 + 25.0;
      for (uint64_t i = 24; i != 72; i += 24)
      {
        sub_100149938(v32, (__int16)v26, v26 >> 16);
        LODWORD(v40) = sub_100149730((uint64_t)v32);
        if (v27 < sub_1001497D0(a1, a2, (__int16 *)&v40, v33, (__int16 *)&v31)) {
          break;
        }
        int v26 = v31;
        *(_DWORD *)(*(void *)(*(void *)(*a3 + i) + 24 * v21) + 4 * v22) = v31;
      }
      uint64_t v40 = (void **)v32;
      sub_100149DEC(&v40);
      ++v22;
      unsigned int v20 = (__int16 *)__p;
      uint64_t v8 = v35;
      unint64_t v29 = ((char *)v35 - (unsigned char *)__p) >> 1;
    }
    while (v29 > v22);
    ++v21;
  }
  while (v29 > v21);
  uint64_t v8 = v20;
  if (v20)
  {
LABEL_38:
    int v35 = v8;
    operator delete(v8);
  }
  __p = v37;
  sub_100149DEC((void ***)&__p);
  return sub_100149BDC(&v39, 0);
}

void sub_100149554(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,void **a21)
{
  if (__p) {
    operator delete(__p);
  }
  sub_100149BDC(&a21, 0);
  _Unwind_Resume(a1);
}

void sub_1001495F0(__int16 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v13 = 0;
  sub_10014A4B0(__p, 0x25uLL, &v13);
  sub_10014A534(a4, 0x25uLL, (uint64_t)__p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  for (uint64_t i = 0; i != 37; ++i)
  {
    int v9 = 0;
    for (uint64_t j = 0; j != 37; ++j)
    {
      LOWORD(__p[0]) = 5 * i;
      WORD1(__p[0]) = 5 * j;
      __int16 v11 = sub_1001C8204(a2, v9, 5 * (int)i);
      __int16 v12 = sub_1001C8204(a3, v9, 5 * (int)i);
      LOWORD(v13) = v11;
      HIWORD(v13) = v12;
      *(float *)(*(void *)(*a4 + 24 * i) + 4 * j) = sub_100149A34((__int16 *)__p, (unsigned __int16 *)&v13, a1);
      v9 += 5;
    }
  }
}

void sub_100149700(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100149730(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  if (*(void *)(a1 + 8) - *(void *)a1 != 888 || v1[1] - *v1 != 148) {
    sub_100410898();
  }
  uint64_t v2 = 0;
  int v3 = -1;
  float v4 = INFINITY;
  int v5 = -1;
  do
  {
    for (uint64_t i = 0; i != 37; ++i)
    {
      uint64_t v7 = v1[3 * v2];
      if (*(float *)(v7 + 4 * i) < v4)
      {
        float v4 = *(float *)(v7 + 4 * i);
        int v5 = i;
        int v3 = v2;
      }
    }
    ++v2;
  }
  while (v2 != 37);
  if (v3 < 0 || v5 < 0) {
    sub_10041086C();
  }
  return (unsigned __int16)(5 * v3) | ((unsigned __int16)(5 * v5) << 16);
}

float sub_1001497D0(uint64_t a1, uint64_t a2, __int16 *a3, __int16 *a4, __int16 *a5)
{
  int v5 = *a3;
  if (v5 <= 5) {
    int v6 = 5;
  }
  else {
    int v6 = *a3;
  }
  int v7 = v6 - 5;
  if (v5 >= 175) {
    int v5 = 175;
  }
  int v8 = v5 + 5;
  int v9 = a3[1];
  if (v9 <= 5) {
    int v10 = 5;
  }
  else {
    int v10 = a3[1];
  }
  if (v9 >= 175) {
    int v11 = 175;
  }
  else {
    int v11 = a3[1];
  }
  int v29 = v8;
  if (v7 <= v8)
  {
    int v18 = v11 + 5;
    int v27 = v10 - 6;
    int v28 = v10 - 5;
    __int16 v14 = -1;
    float v13 = INFINITY;
    __int16 v12 = -1;
    do
    {
      int v19 = v27;
      if (v28 <= v18)
      {
        do
        {
          int v20 = v19 + 1;
          v31[0] = v7;
          v31[1] = v19 + 1;
          unsigned __int16 v21 = sub_1001C8204(a1, v19 + 1, v7);
          unsigned __int16 v22 = sub_1001C8204(a2, v19 + 1, v7);
          v30[0] = v21;
          v30[1] = v22;
          float v23 = sub_100149A34(v31, v30, a4);
          if (v23 < v13)
          {
            float v13 = v23;
            __int16 v12 = v7;
            __int16 v14 = v19 + 1;
          }
          ++v19;
        }
        while (v20 < v18);
      }
    }
    while (v7++ < v29);
  }
  else
  {
    __int16 v12 = -1;
    float v13 = INFINITY;
    __int16 v14 = -1;
  }
  a5[1] = v14;
  *a5 = v12;
  return v13;
}

void sub_100149938(void *a1, int a2, int a3)
{
  if (a1[1] - *a1 != 888 || *(void *)(*a1 + 8) - *(void *)*a1 != 148) {
    sub_1004108C4();
  }
  uint64_t v4 = 0;
  double v5 = (double)a2;
  double v6 = (double)a3;
  do
  {
    int v7 = 0;
    for (uint64_t i = 0; i != 37; ++i)
    {
      if (sub_100149AC4(v5, v6, (double)(5 * (int)v4), (double)v7) <= 35.0) {
        *(_DWORD *)(*(void *)(*a1 + 24 * v4) + 4 * i) = 2139095040;
      }
      v7 += 5;
    }
    ++v4;
  }
  while (v4 != 37);
}

float sub_100149A34(__int16 *a1, unsigned __int16 *a2, __int16 *a3)
{
  int v3 = (__int16)a2[1];
  int v4 = *a2;
  if (v3 == 0x7FFF || v4 == 0x7FFF) {
    return INFINITY;
  }
  int v6 = (unsigned __int16)a1[1];
  if ((v6 - 178) < 0xFFFFFF51) {
    return INFINITY;
  }
  if ((v6 - 136) <= 0xFFFFFFA4 && *a1 < 13) {
    return INFINITY;
  }
  float v8 = fabsf((float)(*a3 - (__int16)v4));
  float v9 = fabsf((float)(a3[1] - v3));
  if ((float)(360.0 - v8) < v8) {
    float v8 = 360.0 - v8;
  }
  if ((float)(360.0 - v9) < v9) {
    float v9 = 360.0 - v9;
  }
  return hypotf(v8, v9);
}

double sub_100149AC4(double a1, double a2, double a3, double a4)
{
  double v8 = sub_100030414(a1);
  double v9 = sin(v8);
  double v10 = sub_100030414(a2);
  long double v11 = v9 * cos(v10);
  double v12 = sub_100030414(a3);
  long double v13 = v11 * sin(v12);
  double v14 = sub_100030414(a4);
  double v15 = cos(v14);
  double v16 = sub_100030414(a1);
  double v17 = sin(v16);
  double v18 = sub_100030414(a2);
  long double v19 = v17 * sin(v18);
  double v20 = sub_100030414(a3);
  long double v21 = v19 * sin(v20);
  double v22 = sub_100030414(a4);
  long double v23 = v21 * sin(v22) + v13 * v15;
  double v24 = sub_100030414(a1);
  double v25 = cos(v24);
  double v26 = sub_100030414(a3);
  double v27 = v23 + v25 * cos(v26);
  long double v28 = 1.0;
  if (v27 <= 1.0)
  {
    long double v28 = v27;
    if (v27 < -1.0) {
      long double v28 = -1.0;
    }
  }
  double v29 = acos(v28);

  return sub_100030430(v29);
}

void ***sub_100149BDC(void ***result, void **a2)
{
  uint64_t v2 = *result;
  *uint64_t result = a2;
  if (v2)
  {
    int v3 = v2;
    sub_100149E98(&v3);
    operator delete();
  }
  return result;
}

void *sub_100149C30(void *a1, unint64_t a2, _DWORD *a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_10003B600(a1, a2);
    int v6 = (_DWORD *)a1[1];
    int v7 = &v6[a2];
    uint64_t v8 = 4 * a2;
    do
    {
      *v6++ = *a3;
      v8 -= 4;
    }
    while (v8);
    a1[1] = v7;
  }
  return a1;
}

void sub_100149C98(_Unwind_Exception *exception_object)
{
  int v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100149CB4(void *a1, unint64_t a2, uint64_t a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_100026770(a1, a2);
    int v6 = (void *)a1[1];
    uint64_t v7 = 3 * a2;
    uint64_t v8 = &v6[3 * a2];
    uint64_t v9 = 8 * v7;
    do
    {
      *int v6 = 0;
      v6[1] = 0;
      v6[2] = 0;
      sub_100149D70(v6, *(const void **)a3, *(void *)(a3 + 8), (uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 2);
      v6 += 3;
      v9 -= 24;
    }
    while (v9);
    a1[1] = v8;
  }
  return a1;
}

void sub_100149D50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void *sub_100149D70(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    int v6 = result;
    uint64_t result = sub_10003B600(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_100149DD0(_Unwind_Exception *exception_object)
{
  int v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_100149DEC(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_100149E40((uint64_t *)v2);
    int v3 = **a1;
    operator delete(v3);
  }
}

void sub_100149E40(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  if (v2 != *a1)
  {
    uint64_t v4 = a1[1];
    do
    {
      int v6 = *(void **)(v4 - 24);
      v4 -= 24;
      double v5 = v6;
      if (v6)
      {
        *(void *)(v2 - 16) = v5;
        operator delete(v5);
      }
      uint64_t v2 = v4;
    }
    while (v4 != v3);
  }
  a1[1] = v3;
}

void sub_100149E98(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (void **)**a1;
  if (v2)
  {
    uint64_t v4 = (void **)v1[1];
    double v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 3;
        int v6 = v4;
        sub_100149DEC(&v6);
      }
      while (v4 != v2);
      double v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void *sub_100149F0C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *(void **)(a1 + 8);
  *uint64_t v3 = 0;
  v3[1] = 0;
  void v3[2] = 0;
  uint64_t result = sub_10014A090(v3, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 3));
  *(void *)(a1 + 8) = v3 + 3;
  return result;
}

void sub_100149F64(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_100149F6C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_1000267C4();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x555555555555555) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  double v17 = a1 + 2;
  if (v9) {
    double v10 = (char *)sub_1000267DC(v7, v9);
  }
  else {
    double v10 = 0;
  }
  long double v11 = &v10[24 * v4];
  v14[0] = v10;
  v14[1] = v11;
  double v15 = v11;
  double v16 = &v10[24 * v9];
  *(void *)long double v11 = 0;
  *((void *)v11 + 1) = 0;
  *((void *)v11 + 2) = 0;
  sub_10014A090(v11, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 3));
  v15 += 24;
  sub_10014A254(a1, v14);
  uint64_t v12 = a1[1];
  sub_10014A3F4(v14);
  return v12;
}

void sub_10014A07C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10014A3F4((void **)va);
  _Unwind_Resume(a1);
}

void *sub_10014A090(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    int v6 = result;
    sub_100026770(result, a4);
    uint64_t result = sub_10014A118((uint64_t)(v6 + 2), a2, a3, (void *)v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_10014A0F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_100149DEC(&a9);
  _Unwind_Resume(a1);
}

void *sub_10014A118(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  unint64_t v4 = a4;
  uint64_t v10 = a4;
  long double v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      *unint64_t v4 = 0;
      v4[1] = 0;
      v4[2] = 0;
      sub_100149D70(v4, *(const void **)v6, *(void *)(v6 + 8), (uint64_t)(*(void *)(v6 + 8) - *(void *)v6) >> 2);
      unint64_t v4 = v11 + 3;
      v11 += 3;
      v6 += 24;
    }
    while (v6 != a3);
  }
  char v9 = 1;
  sub_10014A1CC((uint64_t)v8);
  return v4;
}

void sub_10014A1B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10014A1CC(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_10014A204(a1);
  }
  return a1;
}

void sub_10014A204(uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 16);
  uint64_t v2 = **(void **)(a1 + 8);
  if (v1 != v2)
  {
    uint64_t v3 = **(void **)(a1 + 16);
    do
    {
      unint64_t v5 = *(void **)(v3 - 24);
      v3 -= 24;
      unint64_t v4 = v5;
      if (v5)
      {
        *(void *)(v1 - 16) = v4;
        operator delete(v4);
      }
      uint64_t v1 = v3;
    }
    while (v3 != v2);
  }
}

uint64_t sub_10014A254(uint64_t *a1, void *a2)
{
  uint64_t result = sub_10014A2CC((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_10014A2CC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v14 = a6;
  *((void *)&v14 + 1) = a7;
  long long v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  v11[2] = &v14;
  if (a3 == a5)
  {
    uint64_t v9 = a6;
  }
  else
  {
    do
    {
      *(void *)(v7 - 24) = 0;
      *(void *)(v7 - 16) = 0;
      *(void *)(v7 - 8) = 0;
      long long v8 = *(_OWORD *)(a3 - 3);
      a3 -= 3;
      *(_OWORD *)(v7 - 24) = v8;
      *(void *)(v7 - 8) = a3[2];
      *a3 = 0;
      a3[1] = 0;
      a3[2] = 0;
      uint64_t v7 = *((void *)&v14 + 1) - 24;
      *((void *)&v14 + 1) -= 24;
    }
    while (a3 != a5);
    uint64_t v9 = v14;
  }
  char v12 = 1;
  sub_10014A370((uint64_t)v11);
  return v9;
}

uint64_t sub_10014A370(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_10014A3A8(a1);
  }
  return a1;
}

void sub_10014A3A8(uint64_t a1)
{
  uint64_t v1 = *(void ***)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void ***)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    uint64_t v3 = v1;
    sub_100149DEC(&v3);
    v1 += 3;
  }
}

void **sub_10014A3F4(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void sub_10014A428(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v2; uint64_t i = *(void *)(a1 + 16))
  {
    unint64_t v4 = (void **)(i - 24);
    *(void *)(a1 + 16) = v4;
    uint64_t v5 = v4;
    sub_100149DEC(&v5);
  }
}

void *sub_10014A47C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0) {
    sub_1000257D8();
  }
  return operator new(2 * a2);
}

void *sub_10014A4B0(void *a1, unint64_t a2, _DWORD *a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_10003B600(a1, a2);
    uint64_t v6 = (_DWORD *)a1[1];
    uint64_t v7 = &v6[a2];
    uint64_t v8 = 4 * a2;
    do
    {
      *v6++ = *a3;
      v8 -= 4;
    }
    while (v8);
    a1[1] = v7;
  }
  return a1;
}

void sub_10014A518(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10014A534(void *a1, unint64_t a2, uint64_t a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_100026770(a1, a2);
    uint64_t v6 = (void *)a1[1];
    uint64_t v7 = 3 * a2;
    uint64_t v8 = &v6[3 * a2];
    uint64_t v9 = 8 * v7;
    do
    {
      *uint64_t v6 = 0;
      v6[1] = 0;
      v6[2] = 0;
      sub_10003B584(v6, *(const void **)a3, *(void *)(a3 + 8), (uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 2);
      v6 += 3;
      v9 -= 24;
    }
    while (v9);
    a1[1] = v8;
  }
  return a1;
}

void sub_10014A5D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

uint64_t sub_10014A5F0()
{
  sub_10039D144();
  uint64_t v0 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v1 = *(_OWORD *)&v0->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v0->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v1;
  v0->__r_.__value_.__l.__size_ = 0;
  v0->__r_.__value_.__r.__words[2] = 0;
  v0->__r_.__value_.__r.__words[0] = 0;
  uint64_t v2 = std::string::append(&v38, ".bin");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  qword_1008A1710 = v2->__r_.__value_.__r.__words[2];
  xmmword_1008A1700 = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1700, (void *)&_mh_execute_header);
  sub_10039D144();
  unint64_t v4 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  uint64_t v6 = std::string::append(&v38, ".bin");
  long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  qword_1008A1728 = v6->__r_.__value_.__r.__words[2];
  xmmword_1008A1718 = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1718, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v8 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  uint64_t v10 = std::string::append(&v38, ".bin");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  qword_1008A1740 = v10->__r_.__value_.__r.__words[2];
  xmmword_1008A1730 = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1730, (void *)&_mh_execute_header);
  sub_10039D144();
  char v12 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  long long v14 = std::string::append(&v38, ".bin");
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  qword_1008A1758 = v14->__r_.__value_.__r.__words[2];
  xmmword_1008A1748 = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1748, (void *)&_mh_execute_header);
  sub_10039D144();
  double v16 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  double v18 = std::string::append(&v38, ".bin");
  long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  qword_1008A1770 = v18->__r_.__value_.__r.__words[2];
  xmmword_1008A1760 = v19;
  v18->__r_.__value_.__l.__size_ = 0;
  v18->__r_.__value_.__r.__words[2] = 0;
  v18->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1760, (void *)&_mh_execute_header);
  sub_10039D144();
  double v20 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v21;
  v20->__r_.__value_.__l.__size_ = 0;
  v20->__r_.__value_.__r.__words[2] = 0;
  v20->__r_.__value_.__r.__words[0] = 0;
  double v22 = std::string::append(&v38, ".bin");
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  qword_1008A1788 = v22->__r_.__value_.__r.__words[2];
  xmmword_1008A1778 = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1778, (void *)&_mh_execute_header);
  sub_10039D144();
  double v24 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v25;
  v24->__r_.__value_.__l.__size_ = 0;
  v24->__r_.__value_.__r.__words[2] = 0;
  v24->__r_.__value_.__r.__words[0] = 0;
  double v26 = std::string::append(&v38, ".bin");
  long long v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
  qword_1008A17A0 = v26->__r_.__value_.__r.__words[2];
  xmmword_1008A1790 = v27;
  v26->__r_.__value_.__l.__size_ = 0;
  v26->__r_.__value_.__r.__words[2] = 0;
  v26->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1790, (void *)&_mh_execute_header);
  sub_10039D144();
  long double v28 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v29;
  v28->__r_.__value_.__l.__size_ = 0;
  v28->__r_.__value_.__r.__words[2] = 0;
  v28->__r_.__value_.__r.__words[0] = 0;
  uint64_t v30 = std::string::append(&v38, ".bin");
  long long v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
  qword_1008A17B8 = v30->__r_.__value_.__r.__words[2];
  xmmword_1008A17A8 = v31;
  v30->__r_.__value_.__l.__size_ = 0;
  v30->__r_.__value_.__r.__words[2] = 0;
  v30->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A17A8, (void *)&_mh_execute_header);
  sub_10039D144();
  unsigned int v32 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v32->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v33;
  v32->__r_.__value_.__l.__size_ = 0;
  v32->__r_.__value_.__r.__words[2] = 0;
  v32->__r_.__value_.__r.__words[0] = 0;
  signed int v34 = std::string::append(&v38, ".bin");
  long long v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
  qword_1008A17D0 = v34->__r_.__value_.__r.__words[2];
  xmmword_1008A17C0 = v35;
  v34->__r_.__value_.__l.__size_ = 0;
  v34->__r_.__value_.__r.__words[2] = 0;
  v34->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  return __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A17C0, (void *)&_mh_execute_header);
}

void sub_10014AC20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10014AC94@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100852810[a1]);
}

void *sub_10014ACA8@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100852868[a1]);
}

void *sub_10014ACBC@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_1008528B0[a1]);
}

void *sub_10014ACD0@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_1008528D0[a1]);
}

uint64_t sub_10014ACE4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  *(_DWORD *)a1 = *((_DWORD *)sub_100007D00() + 144);
  *(unsigned char *)(a1 + 4) = 0;
  *(void *)(a1 + 8) = 850045863;
  *(void *)(a1 + 64) = 0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 72) = 1018212795;
  *(void *)(a1 + 112) = 0;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  sub_10014C6A0(a1 + 120, a2);
  *(void *)(a1 + 152) = dispatch_queue_create("com.apple.nearbyd.AoaCalculation", 0);
  *(void *)(a1 + 160) = dispatch_queue_create("com.apple.nearbyd.AoAFileOperation", 0);
  *(void *)(a1 + 168) = 0;
  uint64_t v6 = operator new(0x20uLL);
  *uint64_t v6 = off_1008526B8;
  v6[1] = sub_10014AF74;
  v6[2] = 0;
  v6[3] = a1;
  v17[3] = v6;
  long long v7 = (std::__shared_weak_count *)a3[1];
  uint64_t v13 = *a3;
  long long v14 = v7;
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_100156138(a1 + 176, v17, &v13);
  if (v14) {
    sub_10001A970(v14);
  }
  sub_10014C8B4(v17);
  uint64_t v8 = a3[1];
  *(void *)(a1 + 280) = *a3;
  *(void *)(a1 + 288) = v8;
  if (v8) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
  }
  long long v9 = sub_100007D00();
  if (sub_1003D2E5C((uint64_t)v9))
  {
    sub_10014B0FC(a1);
    uint64_t v10 = sub_100007D00();
    double v16 = 0;
    long long v11 = operator new(0x20uLL);
    void *v11 = off_100852760;
    v11[1] = sub_10014B1BC;
    v11[2] = 0;
    void v11[3] = a1;
    double v16 = v11;
    sub_1003D2C58((uint64_t)v10, (uint64_t)v15);
    sub_10000AF74(v15);
  }
  return a1;
}

void sub_10014AEE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_10000AF74(va);
  uint64_t v10 = *(std::__shared_weak_count **)(v5 + 288);
  if (v10) {
    sub_10001A970(v10);
  }
  sub_10014B274(v8);

  sub_10014C938(v7);
  std::condition_variable::~condition_variable(v6);
  std::mutex::~mutex(v4);
  _Unwind_Resume(a1);
}

void sub_10014AF74(uint64_t a1, int a2, uint64_t *a3)
{
  uint64_t v6 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    sub_10039D144();
    long long v7 = v15 >= 0 ? &__p : (void **)__p;
    *(_DWORD *)buf = 136315138;
    long long v17 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#lut,scheduleAccessoryTask, accessory %s", buf, 0xCu);
    if (v15 < 0) {
      operator delete(__p);
    }
  }

  uint64_t v8 = *(NSObject **)(a1 + 152);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  block[2] = sub_10014BF70;
  block[3] = &unk_100852648;
  uint64_t v10 = *a3;
  long long v9 = (std::__shared_weak_count *)a3[1];
  block[4] = a1;
  block[5] = v10;
  char v12 = v9;
  if (v9) {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  int v13 = a2;
  dispatch_async(v8, block);
  if (v12) {
    sub_10001A970(v12);
  }
}

void sub_10014B0E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10014B0FC(uint64_t a1)
{
  uint64_t v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#lut,blockLUTCalculation()", buf, 2u);
  }
  long long v3 = *(NSObject **)(a1 + 152);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10014C630;
  block[3] = &unk_1008466D8;
  block[4] = a1;
  dispatch_async(v3, block);
}

void sub_10014B1BC(uint64_t a1, int a2)
{
  unint64_t v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#lut,unblockLUTCalculation", v6, 2u);
  }
  uint64_t v5 = sub_100007D00();
  if (a2)
  {
    if (v5[568])
    {
      *(void *)(a1 + 168) = v5 + 272;
      std::mutex::lock((std::mutex *)(a1 + 8));
      atomic_store(1u, (unsigned __int8 *)(a1 + 4));
      std::condition_variable::notify_one((std::condition_variable *)(a1 + 72));
      std::mutex::unlock((std::mutex *)(a1 + 8));
    }
  }
}

uint64_t sub_10014B274(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 96);
  if (v2) {
    sub_10001A970(v2);
  }
  sub_10014C938((void *)(a1 + 56));
  sub_10014C8B4((void *)(a1 + 24));

  return a1;
}

uint64_t sub_10014B2C8(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 288);
  if (v2) {
    sub_10001A970(v2);
  }
  long long v3 = *(std::__shared_weak_count **)(a1 + 272);
  if (v3) {
    sub_10001A970(v3);
  }
  sub_10014C938((void *)(a1 + 232));
  sub_10014C8B4((void *)(a1 + 200));

  sub_10014C938((void *)(a1 + 120));
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 72));
  std::mutex::~mutex((std::mutex *)(a1 + 8));
  return a1;
}

void sub_10014B350(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v6 = sub_100007D00();
  if (sub_1003D2E5C((uint64_t)v6))
  {
    sub_100165018(a2, (uint64_t)v19);
    long long v7 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      sub_10039D144();
      if (v18 >= 0) {
        p_p = &__p;
      }
      else {
        p_p = __p;
      }
      long long v9 = v19;
      if (v20 < 0) {
        long long v9 = *(uint8_t **)v19;
      }
      *(_DWORD *)buf = 136315394;
      double v22 = p_p;
      __int16 v23 = 2080;
      double v24 = v9;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#lut,load lut file for accessory %s,lut file %s", buf, 0x16u);
      if (v18 < 0) {
        operator delete(__p);
      }
    }

    uint64_t v10 = *(NSObject **)(a1 + 160);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3321888768;
    block[2] = sub_10014B5AC;
    block[3] = &unk_100852618;
    block[4] = a1;
    if (SHIBYTE(v20) < 0)
    {
      sub_100002DE4(&v13, *(void **)v19, *(unint64_t *)&v19[8]);
    }
    else
    {
      long long v13 = *(_OWORD *)v19;
      uint64_t v14 = v20;
    }
    uint64_t v15 = a3;
    int v16 = a2;
    dispatch_async(v10, block);
    if (SHIBYTE(v14) < 0) {
      operator delete((void *)v13);
    }
    if (SHIBYTE(v20) < 0) {
      operator delete(*(void **)v19);
    }
  }
  else
  {
    long long v11 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "#lut,skip loading lut file", v19, 2u);
    }
  }
}

void sub_10014B57C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10014B5AC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  unsigned __int8 v24 = 0;
  long long v22 = 0uLL;
  uint64_t v23 = 0;
  long long v20 = 0uLL;
  uint64_t v21 = 0;
  long long v3 = (void *)(a1 + 40);
  if (sub_100163DB0((uint64_t)&unk_10089D770, a1 + 40, (uint64_t *)&v22, (uint64_t *)&v20, &v24))
  {
    *(void *)long long v27 = 0;
    long long v19 = 0;
    if ((void)v22 != *((void *)&v22 + 1))
    {
      unsigned int v4 = v24;
      if ((v4 >> sub_1003A8E98(5, 1))) {
        operator new();
      }
    }
    if ((void)v20 != *((void *)&v20 + 1))
    {
      unsigned int v5 = v24;
      if ((v5 >> sub_1003A8E98(9, 1))) {
        operator new();
      }
    }
    uint64_t v6 = *(void *)(a1 + 64);
    long long v7 = *(void ***)v27;
    *(void *)long long v27 = 0;
    uint64_t v8 = v19;
    char v18 = v7;
    long long v19 = 0;
    long long v17 = v8;
    int v9 = sub_100160FF4(v6, &v18, &v17);
    sub_100149BDC(&v17, 0);
    sub_100149BDC(&v18, 0);
    uint64_t v10 = qword_1008ABDE0;
    if (v9)
    {
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        if (*(char *)(a1 + 63) < 0) {
          long long v3 = (void *)*v3;
        }
        *(_DWORD *)buf = 136315138;
        *(void *)&uint8_t buf[4] = v3;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#lut,setting AoACalculator LUT using file %s is done", buf, 0xCu);
      }
      atomic_store(*(_DWORD *)(a1 + 72), (unsigned int *)(*(void *)(a1 + 64) + 780));
      uint64_t v11 = *(void *)(v2 + 280);
      if (v11)
      {
        sub_10029A474(v11, (unsigned int *)(*(void *)(a1 + 64) + 776));
        char v12 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          int v13 = *(_DWORD *)(a1 + 72);
          *(_DWORD *)buf = 67109120;
          *(_DWORD *)&uint8_t buf[4] = v13;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "#lut,logCalReverseLUTs for accessory: %d is done", buf, 8u);
        }
      }
    }
    else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
    {
      sub_1004108F0(a1, v3, v10);
    }
    sub_100149BDC(&v19, 0);
    sub_100149BDC((void ***)v27, 0);
  }
  else
  {
    uint64_t v14 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      sub_10039D144();
      uint64_t v15 = v26 >= 0 ? buf : *(unsigned char **)buf;
      *(_DWORD *)long long v27 = 136315138;
      *(void *)&v27[4] = v15;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "#lut,setting LUT for accessory %s failed, lut file may not exist or be corrupted", v27, 0xCu);
      if (v26 < 0) {
        operator delete(*(void **)buf);
      }
    }

    unsigned int v16 = *(_DWORD *)(a1 + 72);
    if (v16) {
      sub_100158720(v2 + 176, v16);
    }
    else {
      sub_10014B9CC(v2);
    }
  }
  *(void *)buf = &v20;
  sub_100149E98((void ***)buf);
  *(void *)&long long v20 = &v22;
  sub_100149E98((void ***)&v20);
}

void sub_10014B944(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12, void **a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,void ***a21)
{
  sub_100149BDC(&a12, 0);
  sub_100149BDC((void ***)(v21 - 80), 0);
  a21 = &a13;
  sub_100149E98((void ***)&a21);
  a13 = (void **)&a17;
  sub_100149E98(&a13);
  _Unwind_Resume(a1);
}

void sub_10014B9CC(uint64_t a1)
{
  uint64_t v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#lut,scheduleNoneAccessoryTask", buf, 2u);
  }
  long long v3 = *(NSObject **)(a1 + 152);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10014BAD0;
  block[3] = &unk_1008466D8;
  block[4] = a1;
  dispatch_async(v3, block);
}

void *sub_10014BA8C(uint64_t a1, uint64_t a2)
{
  uint64_t result = (void *)(a1 + 40);
  if (*(char *)(a2 + 63) < 0) {
    return sub_100002DE4(result, *(void **)(a2 + 40), *(void *)(a2 + 48));
  }
  long long v3 = *(_OWORD *)(a2 + 40);
  result[2] = *(void *)(a2 + 56);
  *(_OWORD *)uint64_t result = v3;
  return result;
}

void sub_10014BABC(uint64_t a1)
{
  if (*(char *)(a1 + 63) < 0) {
    operator delete(*(void **)(a1 + 40));
  }
}

uint64_t sub_10014BAD0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_100004950(&__p, "calculating lut");
  sub_100007A48(__dst);
  if (v11 < 0) {
    operator delete(__p);
  }
  sub_10014BB70(v1, *(unsigned __int8 **)(v1 + 168), 0);
  return sub_100007980((uint64_t)__dst, v2, v3, v4, v5, v6, v7, v8);
}

void sub_10014BB44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
}

void sub_10014BB70(uint64_t a1, unsigned __int8 *a2, int a3)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 152));
  if (a2)
  {
    if (sub_1001C8E0C(a2))
    {
      if ((sub_1001C8DD8(a2) & 1) == 0) {
        sub_1004109A0();
      }
      if (!a2[192] || !a2[256]) {
        sub_10000AE44();
      }
      sub_10014924C((uint64_t)(a2 + 136), (uint64_t)(a2 + 200), (uint64_t *)&v37);
      long long v35 = 0uLL;
      uint64_t v36 = 0;
      if (sub_1001C8DA4(a2))
      {
        if (!a2[64]) {
          sub_10000AE44();
        }
        if (!a2[128]) {
          sub_10000AE44();
        }
        sub_10014924C((uint64_t)(a2 + 8), (uint64_t)(a2 + 72), (uint64_t *)__p);
        sub_10014CAD8((void ***)&v35);
        long long v35 = *(_OWORD *)__p;
        uint64_t v36 = v34;
        __p[1] = 0;
        uint64_t v34 = 0;
        __p[0] = 0;
        *(void *)buf = __p;
        sub_100149E98((void ***)buf);
      }
      uint64_t v6 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        sub_10039D144();
        uint64_t v7 = v34 >= 0 ? __p : (void **)__p[0];
        *(_DWORD *)buf = 136315138;
        *(void *)&uint8_t buf[4] = v7;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#lut,reverse LUT is generated for accessory %s", buf, 0xCu);
        if (SHIBYTE(v34) < 0) {
          operator delete(__p[0]);
        }
      }

      sub_100165018(a3, (uint64_t)__p);
      char v8 = sub_1001C8D9C(a2);
      int v9 = *(NSObject **)(a1 + 160);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3321888768;
      block[2] = sub_10014C25C;
      block[3] = &unk_100852678;
      block[4] = a1;
      if (SHIBYTE(v34) < 0)
      {
        sub_100002DE4(&v27, __p[0], (unint64_t)__p[1]);
      }
      else
      {
        long long v27 = *(_OWORD *)__p;
        uint64_t v28 = v34;
      }
      memset(v29, 0, sizeof(v29));
      sub_10014CB4C(v29, (uint64_t *)v35, *((uint64_t **)&v35 + 1), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)&v35 + 1) - v35) >> 3));
      memset(v30, 0, sizeof(v30));
      sub_10014CB4C(v30, v37, v38, 0xAAAAAAAAAAAAAAABLL * (v38 - v37));
      char v32 = v8;
      int v31 = a3;
      dispatch_async(v9, block);
      *(void *)buf = v30;
      sub_100149E98((void ***)buf);
      *(void *)buf = v29;
      sub_100149E98((void ***)buf);
      if (SHIBYTE(v28) < 0) {
        operator delete((void *)v27);
      }
      if (SHIBYTE(v34) < 0) {
        operator delete(__p[0]);
      }
      __p[0] = &v35;
      sub_100149E98((void ***)__p);
      *(void *)&long long v35 = &v37;
      sub_100149E98((void ***)&v35);
    }
    else
    {
      char v18 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
        sub_1004109CC(v18, v19, v20, v21, v22, v23, v24, v25);
      }
    }
  }
  else
  {
    uint64_t v10 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_100410968(v10, v11, v12, v13, v14, v15, v16, v17);
    }
  }
}

void sub_10014BEDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  a28 = (void *)(v33 - 144);
  sub_100149E98((void ***)&a28);
  *(void *)(v33 - 144) = v33 - 120;
  sub_100149E98((void ***)(v33 - 144));
  _Unwind_Resume(a1);
}

void sub_10014BF70(uint64_t a1)
{
  uint64_t v1 = *(unsigned int **)(a1 + 32);
  if (*((void *)v1 + 21) && (uint64_t v3 = *(unsigned __int8 **)(a1 + 40)) != 0)
  {
    if (sub_1001C8E0C(v3) && sub_1001C8E0C(*((unsigned __int8 **)v1 + 21)))
    {
      sub_100004950(&__p, "calculating accessory lut");
      sub_100007A48(__dst);
      if (v21 < 0) {
        operator delete(__p);
      }
      sub_1001C8EEC(*(unsigned __int8 **)(a1 + 40), *((unsigned __int8 **)v1 + 21));
      if (!sub_1001C8E0C(*(unsigned __int8 **)(a1 + 40))) {
        __assert_rtn("scheduleAccessoryTask_block_invoke", "AoALUTManager.mm", 117, "deltaCalBlobPtr->checkCalBlobIntegrity()");
      }
      sub_10014BB70((uint64_t)v1, *(unsigned __int8 **)(a1 + 40), *(_DWORD *)(a1 + 56));
      uint64_t v11 = *((void *)v1 + 35);
      if (v11) {
        sub_10029AA1C(v11, *v1, *(unsigned int *)(a1 + 56), *(unsigned __int8 **)(a1 + 40));
      }
      sub_100007980((uint64_t)__dst, v4, v5, v6, v7, v8, v9, v10);
    }
  }
  else
  {
    uint64_t v12 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_100410A04(v12, v13, v14, v15, v16, v17, v18, v19);
    }
  }
}

void sub_10014C08C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10014C0B8(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 48);
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(result + 48) = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_10014C0D4(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 48);
  if (v1) {
    sub_10001A970(v1);
  }
}

void *sub_10014C0E4(uint64_t a1, uint64_t a2)
{
  sub_10014C6A0((uint64_t)v4, a2);
  sub_1001586A4(a1 + 176, (uint64_t)v4);
  return sub_10014C938(v4);
}

void sub_10014C154(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10014C938((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_10014C170(uint64_t a1, unsigned int a2, uint64_t *a3)
{
  uint64_t v6 = sub_100007D00();
  if (sub_1003D2E5C((uint64_t)v6))
  {
    if (!*a3) {
      sub_100410A3C();
    }
    uint64_t v7 = (std::__shared_weak_count *)a3[1];
    uint64_t v9 = *a3;
    uint64_t v10 = v7;
    if (v7) {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    sub_1001581CC(a1 + 176, a2, &v9);
    if (v10) {
      sub_10001A970(v10);
    }
  }
  else
  {
    uint64_t v8 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#lut,skip loading nn file", buf, 2u);
    }
  }
}

void sub_10014C23C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_10001A970(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_10014C254(uint64_t a1)
{
}

void sub_10014C25C(uint64_t a1)
{
  if (*(void *)(a1 + 64) != *(void *)(a1 + 72)) {
    operator new();
  }
  *(void *)buf = 0;
  operator new();
}

void sub_10014C428()
{
}

uint64_t sub_10014C49C(uint64_t a1, int a2)
{
  int v4 = a2;
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2) {
    sub_100027894();
  }
  return (*(uint64_t (**)(uint64_t, int *))(*(void *)v2 + 48))(v2, &v4);
}

void *sub_10014C4F0(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 63) < 0)
  {
    sub_100002DE4((unsigned char *)(a1 + 40), *(void **)(a2 + 40), *(void *)(a2 + 48));
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 40);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = v4;
  }
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  sub_10014CB4C((void *)(a1 + 64), *(uint64_t **)(a2 + 64), *(uint64_t **)(a2 + 72), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 72) - *(void *)(a2 + 64)) >> 3));
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  return sub_10014CB4C((void *)(a1 + 88), *(uint64_t **)(a2 + 88), *(uint64_t **)(a2 + 96), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 96) - *(void *)(a2 + 88)) >> 3));
}

void sub_10014C5A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100149E98((void ***)va);
  if (*(char *)(v3 + 63) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(a1);
}

void sub_10014C5D8(uint64_t a1)
{
  uint64_t v2 = (void **)(a1 + 64);
  uint64_t v3 = (void **)(a1 + 88);
  sub_100149E98(&v3);
  uint64_t v3 = v2;
  sub_100149E98(&v3);
  if (*(char *)(a1 + 63) < 0) {
    operator delete(*(void **)(a1 + 40));
  }
}

void sub_10014C630(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v6.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(v1 + 8);
  v6.__owns_ = 1;
  std::mutex::lock((std::mutex *)(v1 + 8));
  uint64_t v2 = (unsigned __int8 *)(v1 + 4);
  unsigned __int8 v3 = atomic_load((unsigned __int8 *)(v1 + 4));
  if ((v3 & 1) == 0)
  {
    long long v4 = (std::condition_variable *)(v1 + 72);
    do
    {
      std::condition_variable::wait(v4, &v6);
      unsigned __int8 v5 = atomic_load(v2);
    }
    while ((v5 & 1) == 0);
  }
  if (v6.__owns_) {
    std::mutex::unlock(v6.__m_);
  }
}

uint64_t sub_10014C6A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_10014C73C()
{
}

__n128 sub_10014C750(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x20uLL);
  *(void *)uint64_t v2 = off_1008526B8;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((void *)v2 + 3) = *(void *)(a1 + 24);
  return result;
}

__n128 sub_10014C7A4(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_1008526B8;
  __n128 result = *(__n128 *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_10014C7DC(uint64_t a1, unsigned int *a2, long long *a3)
{
}

uint64_t sub_10014C7E4(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_10014C824()
{
}

void sub_10014C830(uint64_t a1, unsigned int *a2, long long *a3)
{
  uint64_t v3 = *(void *)(a1 + 8);
  long long v4 = *(void (**)(void *, uint64_t, long long *))a1;
  unsigned __int8 v5 = (void *)(*(void *)(a1 + 16) + (v3 >> 1));
  if (v3) {
    long long v4 = *(void (**)(void *, uint64_t, long long *))(*v5 + v4);
  }
  uint64_t v6 = *a2;
  long long v7 = *a3;
  *(void *)a3 = 0;
  *((void *)a3 + 1) = 0;
  v4(v5, v6, &v7);
  if (*((void *)&v7 + 1)) {
    sub_10001A970(*((std::__shared_weak_count **)&v7 + 1));
  }
}

void sub_10014C89C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_10001A970(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10014C8B4(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_10014C938(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_10014C9C0()
{
}

__n128 sub_10014C9D4(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x20uLL);
  *(void *)uint64_t v2 = off_100852760;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((void *)v2 + 3) = *(void *)(a1 + 24);
  return result;
}

__n128 sub_10014CA28(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_100852760;
  __n128 result = *(__n128 *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_10014CA60(void *a1, unsigned __int8 *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = (uint64_t (*)(void *, void))a1[1];
  long long v4 = (void *)(a1[3] + (v2 >> 1));
  if (v2) {
    uint64_t v3 = *(uint64_t (**)(void *, void))(*v4 + v3);
  }
  return v3(v4, *a2);
}

uint64_t sub_10014CA8C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_10014CACC()
{
}

void sub_10014CAD8(void ***a1)
{
  uint64_t v1 = *a1;
  if (*a1)
  {
    uint64_t v3 = a1[1];
    long long v4 = *a1;
    if (v3 != v1)
    {
      do
      {
        v3 -= 3;
        unsigned __int8 v5 = v3;
        sub_100149DEC(&v5);
      }
      while (v3 != v1);
      long long v4 = *a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

void *sub_10014CB4C(void *result, uint64_t *a2, uint64_t *a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    sub_100026770(result, a4);
    __n128 result = sub_10014CBD4((uint64_t)(v6 + 2), a2, a3, (void *)v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_10014CBB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_100149E98(&a9);
  _Unwind_Resume(a1);
}

void *sub_10014CBD4(uint64_t a1, uint64_t *a2, uint64_t *a3, void *a4)
{
  long long v4 = a4;
  uint64_t v10 = a4;
  uint64_t v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      *long long v4 = 0;
      v4[1] = 0;
      v4[2] = 0;
      sub_10014A090(v4, *v6, v6[1], 0xAAAAAAAAAAAAAAABLL * ((v6[1] - *v6) >> 3));
      long long v4 = v11 + 3;
      v11 += 3;
      v6 += 3;
    }
    while (v6 != a3);
  }
  char v9 = 1;
  sub_10014CC94((uint64_t)v8);
  return v4;
}

void sub_10014CC80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10014CC94(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_10014CCCC(a1);
  }
  return a1;
}

void sub_10014CCCC(uint64_t a1)
{
  uint64_t v1 = **(void ****)(a1 + 16);
  uint64_t v2 = **(void ****)(a1 + 8);
  while (v1 != v2)
  {
    v1 -= 3;
    uint64_t v3 = v1;
    sub_100149DEC(&v3);
  }
}

void sub_10014CD18(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0xCu);
}

void sub_10014CD38()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8A8))
  {
    sub_100004950(&qword_10089C890, "com.apple.nearbyd.accessory.download");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C890, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8A8);
  }
}

void sub_10014CDD0(_Unwind_Exception *a1)
{
}

void sub_10014CDE8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8C8))
  {
    sub_100004950(&qword_10089C8B0, "com.apple.nearbyd.accessory.files");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C8B0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8C8);
  }
}

void sub_10014CE80(_Unwind_Exception *a1)
{
}

void sub_10014CE98()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8E8))
  {
    sub_100004950(qword_10089C8D0, "MA_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8D0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8E8);
  }
}

void sub_10014CF30(_Unwind_Exception *a1)
{
}

void sub_10014CF48()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C908, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C908))
  {
    sub_100004950(qword_10089C8F0, "MB_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8F0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C908);
  }
}

void sub_10014CFE0(_Unwind_Exception *a1)
{
}

void sub_10014CFF8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C928, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C928))
  {
    sub_100004950(qword_10089C910, "D");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C910, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C928);
  }
}

void sub_10014D090(_Unwind_Exception *a1)
{
}

void sub_10014D0A8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C948, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C948))
  {
    sub_100004950(&qword_10089C930, "A");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C930, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C948);
  }
}

void sub_10014D140(_Unwind_Exception *a1)
{
}

void sub_10014D158()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C968, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C968))
  {
    sub_100004950(qword_10089C950, "FAS.bin");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C950, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C968);
  }
}

void sub_10014D1F0(_Unwind_Exception *a1)
{
}

void sub_10014D208()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089D768, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089D768))
  {
    sub_100004950(&xmmword_10089D750, "");
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089D750, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089D768);
  }
}

void sub_10014D2A0(_Unwind_Exception *a1)
{
}

void sub_10014D2B8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C988, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C988))
  {
    qword_10089C970 = 0;
    qword_10089C978 = 0;
    qword_10089C980 = 0;
    uint64_t v0 = operator new(0x30uLL);
    qword_10089C978 = (uint64_t)(v0 + 3);
    qword_10089C980 = (uint64_t)(v0 + 3);
    *uint64_t v0 = xmmword_1004B50E0;
    v0[1] = *(_OWORD *)algn_1004B50F0;
    v0[2] = xmmword_1004B5100;
    qword_10089C970 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_100008CAC, &qword_10089C970, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C988);
  }
}

void sub_10014D374(_Unwind_Exception *a1)
{
}

void sub_10014D38C()
{
  sub_10039D144();
  uint64_t v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  uint64_t v3 = std::string::append(&v38, ".bin");
  long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1008A17E8 = v3->__r_.__value_.__r.__words[2];
  xmmword_1008A17D8 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A17D8, (void *)&_mh_execute_header);
  sub_10039D144();
  unsigned __int8 v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  long long v7 = std::string::append(&v38, ".bin");
  long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1008A1800 = v7->__r_.__value_.__r.__words[2];
  xmmword_1008A17F0 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A17F0, (void *)&_mh_execute_header);
  sub_10039D144();
  char v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  uint64_t v11 = std::string::append(&v38, ".bin");
  long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1008A1818 = v11->__r_.__value_.__r.__words[2];
  xmmword_1008A1808 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1808, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  uint64_t v15 = std::string::append(&v38, ".bin");
  long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1008A1830 = v15->__r_.__value_.__r.__words[2];
  xmmword_1008A1820 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1820, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  uint64_t v19 = std::string::append(&v38, ".bin");
  long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1008A1848 = v19->__r_.__value_.__r.__words[2];
  xmmword_1008A1838 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1838, (void *)&_mh_execute_header);
  sub_10039D144();
  char v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  uint64_t v23 = std::string::append(&v38, ".bin");
  long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1008A1860 = v23->__r_.__value_.__r.__words[2];
  xmmword_1008A1850 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1850, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  long long v27 = std::string::append(&v38, ".bin");
  long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1008A1878 = v27->__r_.__value_.__r.__words[2];
  xmmword_1008A1868 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1868, (void *)&_mh_execute_header);
  sub_10039D144();
  long long v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  int v31 = std::string::append(&v38, ".bin");
  long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1008A1890 = v31->__r_.__value_.__r.__words[2];
  xmmword_1008A1880 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1880, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  long long v35 = std::string::append(&v38, ".bin");
  long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1008A18A8 = v35->__r_.__value_.__r.__words[2];
  xmmword_1008A1898 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1898, (void *)&_mh_execute_header);
}

void sub_10014D9CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10014DA40@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_1008528F0[a1]);
}

void *sub_10014DA54@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100852948[a1]);
}

void *sub_10014DA68@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100852990[a1]);
}

void *sub_10014DA7C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_1008529B0[a1]);
}

uint64_t sub_10014DA90(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v6 = *(_OWORD *)(a2 + 16);
  long long v7 = *(_OWORD *)(a2 + 32);
  long long v8 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v7;
  *(_OWORD *)(a1 + 48) = v8;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  sub_10015036C((void *)(a1 + 72), *(const void **)(a2 + 72), *(void *)(a2 + 80), (uint64_t)(*(void *)(a2 + 80) - *(void *)(a2 + 72)) >> 3);
  long long v9 = *(_OWORD *)(a2 + 96);
  long long v10 = *(_OWORD *)(a2 + 112);
  uint64_t v11 = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 128) = v11;
  *(_OWORD *)(a1 + 112) = v10;
  *(_OWORD *)(a1 + 96) = v9;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  sub_10015042C((void *)(a1 + 136), *(const void **)(a2 + 136), *(void *)(a2 + 144), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(void *)(a2 + 144) - *(void *)(a2 + 136)) >> 3));
  memcpy((void *)(a1 + 160), (const void *)(a2 + 160), 0x181uLL);
  memcpy((void *)(a1 + 552), (const void *)(a2 + 552), 0x259uLL);
  sub_1001500F0((unsigned char *)(a1 + 1160), a2 + 1160);
  *(_WORD *)(a1 + 1776) = *(_WORD *)(a2 + 1776);
  __asm { FMOV            V0.4S, #1.0 }
  *(_OWORD *)(a1 + 1784) = _Q0;
  *(unsigned char *)(a1 + 1800) = 0;
  *(unsigned char *)(a1 + 2408) = 0;
  *(_OWORD *)(a1 + 2416) = *a3;
  return a1;
}

void sub_10014DBA8(_Unwind_Exception *exception_object)
{
  unsigned __int8 v5 = *v3;
  if (*v3)
  {
    *(void *)(v1 + 144) = v5;
    operator delete(v5);
  }
  long long v6 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 80) = v6;
    operator delete(v6);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10014DBE0(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 2416)) {
    return 1;
  }
  if (*(_WORD *)(a1 + 96))
  {
    if (*(unsigned char *)(a1 + 264) && *(unsigned char *)(a1 + 280))
    {
      double v1 = *(double *)(a1 + 256);
      double v2 = *(double *)(a1 + 272);
      uint64_t v3 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        int v15 = 134218240;
        double v16 = v1;
        __int16 v17 = 2048;
        double v18 = v2;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#me,checkFPSNRsOkForSensorFusion: rose measurement errorcode is not success, the PDOAs are %f and %f", (uint8_t *)&v15, 0x16u);
      }
      return 2;
    }
    unsigned __int8 v5 = qword_1008ABDE0;
    if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT)) {
      return 2;
    }
    LOWORD(v15) = 0;
    uint64_t v4 = 2;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#me,checkFPSNRsOkForSensorFusion: rose measurement errorcode is not success, the PDOAs are invalid", (uint8_t *)&v15, 2u);
  }
  else if (*(unsigned char *)(a1 + 200) && *(unsigned char *)(a1 + 232) && *(unsigned char *)(a1 + 216))
  {
    double v6 = *(double *)(a1 + 192);
    double v7 = *(double *)(a1 + 224);
    double v8 = *(double *)(a1 + 208);
    long long v9 = qword_1008ABDE0;
    BOOL v10 = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT);
    if (v6 < 15.0 || v7 < 15.0 || v8 < 15.0)
    {
      if (v10)
      {
        int v15 = 134218496;
        double v16 = v6;
        __int16 v17 = 2048;
        double v18 = v7;
        __int16 v19 = 2048;
        double v20 = v8;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#me,checkFPSNRsOkForSensorFusion: FP_SNR is below threshold - center %f dB, horizontal %f dB, vertical %f dB", (uint8_t *)&v15, 0x20u);
      }
      return 4;
    }
    else
    {
      if (v10)
      {
        LOWORD(v15) = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#me,checkFPSNRsOkForSensorFusion: PDOA FP_SNR check passes", (uint8_t *)&v15, 2u);
      }
      return 5;
    }
  }
  else
  {
    uint64_t v13 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v15) = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "#me,checkFPSNRsOkForSensorFusion: first path SNRs invalid", (uint8_t *)&v15, 2u);
    }
    return 3;
  }
  return v4;
}

uint64_t sub_10014DE5C(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 2417)) {
    return 1;
  }
  if (*(unsigned char *)(a1 + 264) && *(unsigned char *)(a1 + 280))
  {
    double v2 = *(double *)(a1 + 256);
    double v3 = *(double *)(a1 + 272);
    uint64_t v4 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__p = 134218240;
      *(double *)&__p[4] = v2;
      __int16 v16 = 2048;
      double v17 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#me,MeasEngMetricsCalculator::checkPDOA: azPDOA %.3f elPDOA %.3f", __p, 0x16u);
    }
    if (v2 >= -180.0 && v2 <= 180.0 && v3 >= -180.0 && v3 <= 180.0)
    {
      if (v2 >= -90.0)
      {
        double v6 = 1.0;
        if (v2 <= 90.0) {
          goto LABEL_24;
        }
        double v5 = (v2 + -90.0) / -90.0;
      }
      else
      {
        double v5 = (-90.0 - v2) / -90.0;
        double v6 = 1.0;
      }
      double v6 = v5 + v6;
LABEL_24:
      float v9 = v6 * *(float *)(a1 + 1784);
      *(float *)(a1 + 1784) = v9;
      float v10 = v6 * *(float *)(a1 + 1792);
      *(float *)(a1 + 1792) = v10;
      if (v3 >= -90.0)
      {
        double v12 = 1.0;
        if (v3 <= 90.0)
        {
LABEL_29:
          float v13 = v12 * v9;
          *(float *)(a1 + 1784) = v13;
          float v14 = v12 * *(float *)(a1 + 1796);
          *(float *)(a1 + 1796) = v14;
          sub_100004950(__p, "MeasEngMetricsCalculator::checkPDOA");
          sub_1001508D8((float *)(a1 + 1784), (uint64_t *)__p);
          if (v18 < 0) {
            operator delete(*(void **)__p);
          }
          return 4;
        }
        double v11 = v3 + -90.0;
      }
      else
      {
        double v11 = -90.0 - v3;
      }
      double v12 = v11 / -90.0 + 1.0;
      goto LABEL_29;
    }
    *(_DWORD *)(a1 + 1784) = 0;
    *(void *)(a1 + 1792) = 0;
    sub_100004950(__p, "MeasEngMetricsCalculator::checkPDOA");
    sub_1001508D8((float *)(a1 + 1784), (uint64_t *)__p);
    if (v18 < 0) {
      operator delete(*(void **)__p);
    }
    return 3;
  }
  else
  {
    double v7 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__p = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#me,checkPDOA: invalid PDOA", __p, 2u);
    }
    *(_DWORD *)(a1 + 1784) = 0;
    *(void *)(a1 + 1792) = 0;
    sub_100004950(__p, "MeasEngMetricsCalculator::checkPDOA");
    sub_1001508D8((float *)(a1 + 1784), (uint64_t *)__p);
    if (v18 < 0) {
      operator delete(*(void **)__p);
    }
    return 2;
  }
}

void sub_10014E124(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10014E150(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 2418)) {
    return 1;
  }
  if (!*(unsigned char *)(a1 + 200) || !*(unsigned char *)(a1 + 216) || !*(unsigned char *)(a1 + 232)) {
    return 2;
  }
  double v1 = *(double *)(a1 + 192);
  double v2 = *(double *)(a1 + 208);
  double v3 = *(double *)(a1 + 224);
  v11[0] = v1;
  v11[1] = v2;
  v11[2] = v3;
  uint64_t v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134218496;
    double v14 = v1;
    __int16 v15 = 2048;
    uint64_t v16 = *(void *)&v2;
    __int16 v17 = 2048;
    double v18 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#me,MeasEngMetricsCalculator::checkFPSNRs: %5.1f, %5.1f, %5.1f", buf, 0x20u);
  }
  HIBYTE(v12) = 0;
  double v5 = sub_100150298(v11, &v12);
  double v7 = *v6 - *v5;
  double v8 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134218240;
    double v14 = v7;
    __int16 v15 = 2048;
    uint64_t v16 = 0x4062200000000000;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#me,MeasEngMetricsCalculator::checkFPSNRs: FPSNR_DIFF_CHECK fpsnrDiff(%5.1f) >= kFpsnrDiffMaxDb(%5.3f)", buf, 0x16u);
  }
  if (v7 < 145.0) {
    return 4;
  }
  float v10 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134218240;
    double v14 = v7;
    __int16 v15 = 2048;
    uint64_t v16 = 0x4062200000000000;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#me,MeasEngMetricsCalculator::checkFPSNRs: TRIGGERED FPSNR_DIFF_CHECK fpsnrDiff(%5.1f) >= kFpsnrDiffMaxDb(%5.3f)", buf, 0x16u);
  }
  return 3;
}

uint64_t sub_10014E354(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 2419)) {
    return 1;
  }
  if (!*(unsigned char *)(a1 + 328) || !*(unsigned char *)(a1 + 344) || !*(unsigned char *)(a1 + 360)) {
    return 2;
  }
  double v1 = *(double *)(a1 + 320);
  double v2 = *(double *)(a1 + 336);
  double v3 = *(double *)(a1 + 352);
  v11[0] = v1;
  v11[1] = v2;
  v11[2] = v3;
  uint64_t v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134218496;
    double v14 = v1;
    __int16 v15 = 2048;
    uint64_t v16 = *(void *)&v2;
    __int16 v17 = 2048;
    double v18 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#me,MeasEngMetricsCalculator::checkFPIndices: C %5.2f V %5.2f H %5.2f", buf, 0x20u);
  }
  HIBYTE(v12) = 0;
  double v5 = sub_100150298(v11, &v12);
  double v7 = *v6 - *v5;
  double v8 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134218240;
    double v14 = v7;
    __int16 v15 = 2048;
    uint64_t v16 = 0x4060E00000000000;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#me,MeasEngMetricsCalculator::checkFPIndices: FPI_DIFF_CHECK fpIndicesDiff(%5.2f) >= %5.2f", buf, 0x16u);
  }
  if (v7 < 135.0) {
    return 4;
  }
  float v10 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134218240;
    double v14 = v7;
    __int16 v15 = 2048;
    uint64_t v16 = 0x4060E00000000000;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#me,MeasEngMetricsCalculator::checkFPIndices: TRIGGERED FPI_DIFF_CHECK fpIndicesDiff(%5.2f) >= %5.2f", buf, 0x16u);
  }
  return 3;
}

uint64_t sub_10014E558(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 2420)) {
    return 1;
  }
  if (!*(unsigned char *)(a1 + 680)) {
    return 2;
  }
  uint64_t v1 = 0;
  double v2 = (__int16 *)(a1 + 650);
  do
  {
    *(long double *)&v43[v1] = hypot((double)*(v2 - 33), (double)*(v2 - 32));
    *(long double *)&v37[v1] = hypot((double)*(v2 - 17), (double)*(v2 - 16));
    *(long double *)&v31[v1++] = hypot((double)*(v2 - 1), (double)*v2);
    v2 += 2;
  }
  while (v1 != 8);
  uint64_t v3 = v43[0];
  uint64_t v4 = 1;
  double v5 = *(double *)v43;
  double v6 = (char *)v43;
  do
  {
    if (v5 < *(double *)&v43[v4])
    {
      double v5 = *(double *)&v43[v4];
      double v6 = (char *)&v43[v4];
    }
    ++v4;
  }
  while (v4 != 8);
  uint64_t v7 = v6 - (char *)v43;
  double v8 = *(double *)v37;
  uint64_t v9 = 1;
  float v10 = (char *)v37;
  do
  {
    if (v8 < *(double *)&v37[v9])
    {
      double v8 = *(double *)&v37[v9];
      float v10 = (char *)&v37[v9];
    }
    ++v9;
  }
  while (v9 != 8);
  uint64_t v11 = v10 - (char *)v37;
  double v12 = *(double *)v31;
  uint64_t v13 = 1;
  double v14 = v31;
  do
  {
    if (v12 < *(double *)&v31[v13])
    {
      double v12 = *(double *)&v31[v13];
      double v14 = &v31[v13];
    }
    ++v13;
  }
  while (v13 != 8);
  __int16 v15 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134220032;
    uint64_t v50 = v7 >> 3;
    __int16 v51 = 2048;
    uint64_t v52 = v3;
    __int16 v53 = 2048;
    double v54 = *(double *)&v43[1];
    __int16 v55 = 2048;
    double v56 = *(double *)&v43[2];
    __int16 v57 = 2048;
    double v58 = v44;
    __int16 v59 = 2048;
    double v60 = v45;
    __int16 v61 = 2048;
    double v62 = v46;
    __int16 v63 = 2048;
    double v64 = v47;
    __int16 v65 = 2048;
    uint64_t v66 = v48;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "#me,MeasEngMetricsCalculator::checkAoaCirDataEvent: argmax_c, %zu, cirMag_c, %5.1f, %5.1f, %5.1f, %5.1f, %5.1f, %5.1f, %5.1ff, %5.1f", buf, 0x5Cu);
    __int16 v15 = qword_1008ABDE0;
  }
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134220032;
    uint64_t v50 = v11 >> 3;
    __int16 v51 = 2048;
    uint64_t v52 = v37[0];
    __int16 v53 = 2048;
    double v54 = *(double *)&v37[1];
    __int16 v55 = 2048;
    double v56 = *(double *)&v37[2];
    __int16 v57 = 2048;
    double v58 = v38;
    __int16 v59 = 2048;
    double v60 = v39;
    __int16 v61 = 2048;
    double v62 = v40;
    __int16 v63 = 2048;
    double v64 = v41;
    __int16 v65 = 2048;
    uint64_t v66 = v42;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "#me,MeasEngMetricsCalculator::checkAoaCirDataEvent: argmax_v, %zu, cirMag_v, %5.1f, %5.1f, %5.1f, %5.1f, %5.1f, %5.1f, %5.1ff, %5.1f", buf, 0x5Cu);
    __int16 v15 = qword_1008ABDE0;
  }
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134220032;
    uint64_t v50 = v14 - v31;
    __int16 v51 = 2048;
    uint64_t v52 = v31[0];
    __int16 v53 = 2048;
    double v54 = *(double *)&v31[1];
    __int16 v55 = 2048;
    double v56 = *(double *)&v31[2];
    __int16 v57 = 2048;
    double v58 = v32;
    __int16 v59 = 2048;
    double v60 = v33;
    __int16 v61 = 2048;
    double v62 = v34;
    __int16 v63 = 2048;
    double v64 = v35;
    __int16 v65 = 2048;
    uint64_t v66 = v36;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "#me,MeasEngMetricsCalculator::checkAoaCirDataEvent: argmax_h, %zu, cirMag_h, %5.1f, %5.1f, %5.1f, %5.1f, %5.1f, %5.1f, %5.1ff, %5.1f", buf, 0x5Cu);
    __int16 v15 = qword_1008ABDE0;
  }
  if (v44 >= v45) {
    double v16 = v44;
  }
  else {
    double v16 = v45;
  }
  if (v38 >= v39) {
    double v17 = v38;
  }
  else {
    double v17 = v39;
  }
  if (v32 >= v33) {
    double v18 = v32;
  }
  else {
    double v18 = v33;
  }
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134218496;
    uint64_t v50 = *(void *)&v16;
    __int16 v51 = 2048;
    uint64_t v52 = *(void *)&v17;
    __int16 v53 = 2048;
    double v54 = v18;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "#me,MeasEngMetricsCalculator::checkAoaCirDataEvent: fpamp C %.3f V %.3f H %.3f", buf, 0x20u);
    __int16 v15 = qword_1008ABDE0;
  }
  if (v46 >= v47) {
    double v19 = v46;
  }
  else {
    double v19 = v47;
  }
  if (v40 >= v41) {
    double v20 = v40;
  }
  else {
    double v20 = v41;
  }
  if (v34 >= v35) {
    double v21 = v34;
  }
  else {
    double v21 = v35;
  }
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134218496;
    uint64_t v50 = *(void *)&v19;
    __int16 v51 = 2048;
    uint64_t v52 = *(void *)&v20;
    __int16 v53 = 2048;
    double v54 = v21;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "#me,MeasEngMetricsCalculator::checkAoaCirDataEvent: trailingAmp C %.3f V %.3f H %.3f", buf, 0x20u);
  }
  if (v16 <= 0.0 || v17 <= 0.0 || v18 <= 0.0)
  {
    long long v30 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 134218496;
      uint64_t v50 = *(void *)&v16;
      __int16 v51 = 2048;
      uint64_t v52 = *(void *)&v17;
      __int16 v53 = 2048;
      double v54 = v18;
      _os_log_error_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_ERROR, "#me,MeasEngMetricsCalculator::checkAoaCirDataEvent: firstPathAmplitude <= 0: C %.3f V %.3f H %.3f", buf, 0x20u);
    }
    return 3;
  }
  else
  {
    double v22 = v19 / v16;
    double v23 = v20 / v17;
    double v24 = v21 / v18;
    if (v22 >= v23) {
      double v25 = v22;
    }
    else {
      double v25 = v23;
    }
    if (v25 >= v24) {
      double v26 = v25;
    }
    else {
      double v26 = v21 / v18;
    }
    long long v27 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134219008;
      uint64_t v50 = *(void *)&v26;
      __int16 v51 = 2048;
      uint64_t v52 = 0x405E000000000000;
      __int16 v53 = 2048;
      double v54 = v22;
      __int16 v55 = 2048;
      double v56 = v23;
      __int16 v57 = 2048;
      double v58 = v24;
      _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "#me,MeasEngMetricsCalculator::checkAoaCirDataEvent: AOA_TRAILING_RATIO_CHECK maxTrailingRatio(%.3f) > %.3f trailingRatio C %.3f V %.3f H %3f", buf, 0x34u);
    }
    if (v26 <= 120.0)
    {
      return 5;
    }
    else
    {
      long long v28 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 134219008;
        uint64_t v50 = *(void *)&v26;
        __int16 v51 = 2048;
        uint64_t v52 = 0x405E000000000000;
        __int16 v53 = 2048;
        double v54 = v22;
        __int16 v55 = 2048;
        double v56 = v23;
        __int16 v57 = 2048;
        double v58 = v24;
        _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "#me,MeasEngMetricsCalculator::checkAoaCirDataEvent: TRIGGERED AOA_TRAILING_RATIO_CHECK maxTrailingRatio(%.3f) > %.3f trailingRatio_c %.3f trailingRatio_v %.3f trailingRatio_h %3f", buf, 0x34u);
      }
      return 4;
    }
  }
}

uint64_t sub_10014EB8C(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 2421)) {
    return 1;
  }
  if (!*(unsigned char *)(a1 + 768)) {
    return 2;
  }
  uint64_t v1 = 0;
  double v2 = (__int16 *)(a1 + 738);
  do
  {
    *(long double *)&v16[v1] = hypot((double)*(v2 - 1), (double)*v2);
    v2 += 2;
    ++v1;
  }
  while (v1 != 8);
  uint64_t v3 = v16[0];
  uint64_t v4 = 1;
  double v5 = *(double *)v16;
  double v6 = v16;
  do
  {
    if (v5 < *(double *)&v16[v4])
    {
      double v5 = *(double *)&v16[v4];
      double v6 = &v16[v4];
    }
    ++v4;
  }
  while (v4 != 8);
  uint64_t v7 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *v6;
    *(_DWORD *)buf = 134220288;
    uint64_t v23 = v6 - v16;
    __int16 v24 = 2048;
    uint64_t v25 = v8;
    __int16 v26 = 2048;
    uint64_t v27 = v3;
    __int16 v28 = 2048;
    uint64_t v29 = v16[1];
    __int16 v30 = 2048;
    uint64_t v31 = v16[2];
    __int16 v32 = 2048;
    double v33 = v17;
    __int16 v34 = 2048;
    double v35 = v18;
    __int16 v36 = 2048;
    double v37 = v19;
    __int16 v38 = 2048;
    double v39 = v20;
    __int16 v40 = 2048;
    uint64_t v41 = v21;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#me,MeasEngMetricsCalculator::checkTOACIRDataEvent: argmax, %ld, max_val, %5.1f, vals, %5.1f, %5.1f, %5.1f, %5.1f, %5.1f, %5.1f, %5.1f, %5.1f", buf, 0x66u);
  }
  if (v17 >= v18) {
    double v9 = v17;
  }
  else {
    double v9 = v18;
  }
  if (v9 <= 0.0)
  {
    double v14 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_100410AE0(v14, v9);
    }
    return 3;
  }
  else
  {
    double v10 = v19;
    if (v19 < v20) {
      double v10 = v20;
    }
    double v11 = v10 / v9;
    double v12 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134218240;
      uint64_t v23 = *(void *)&v11;
      __int16 v24 = 2048;
      uint64_t v25 = 0x405E000000000000;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "#me,MeasEngMetricsCalculator::checkTOACIRDataEvent: TOA_TRAILING_RATIO_CHECK trailingRatio(%.3f) >= %.3f", buf, 0x16u);
    }
    if (v11 >= 120.0)
    {
      __int16 v15 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 134218240;
        uint64_t v23 = *(void *)&v11;
        __int16 v24 = 2048;
        uint64_t v25 = 0x405E000000000000;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "#me,MeasEngMetricsCalculator::checkTOACIRDataEvent: TRIGGERED TOA_TRAILING_RATIO_CHECK trailingRatio(%.3f) >= %.3f", buf, 0x16u);
      }
      return 4;
    }
    else
    {
      return 5;
    }
  }
}

uint64_t sub_10014EE50(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 2424)) {
    return 1;
  }
  int v2 = *(unsigned __int16 *)(a1 + 376);
  if (*(_WORD *)(a1 + 376) && *(_WORD *)(a1 + 378)) {
    return 4;
  }
  uint64_t v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = *(unsigned __int16 *)(a1 + 378);
    v6[0] = 67109376;
    v6[1] = v2;
    __int16 v7 = 1024;
    int v8 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#me,MeasEngMetricsCalculator::checkCirMetrics: toaNoiseRms %d or toaPpwinRms %d are zero.", (uint8_t *)v6, 0xEu);
  }
  return 3;
}

double sub_10014EF38(uint64_t a1)
{
  double v1 = (double)*(unsigned __int16 *)(a1 + 376);
  unsigned int v2 = *(unsigned __int16 *)(a1 + 378);
  double v3 = (double)v2;
  if (*(_WORD *)(a1 + 376)) {
    BOOL v4 = v2 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (v4)
  {
    uint64_t v5 = qword_1008ABDE0;
    double v6 = 0.2;
    if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT)) {
      return v6;
    }
    *(_DWORD *)double v54 = 134218240;
    *(double *)&v54[4] = v1;
    *(_WORD *)&v54[12] = 2048;
    *(double *)&v54[14] = v3;
    __int16 v7 = "#me,MeasEngMetricsCalculator::computeRangeUncertaintyFromCirs: zero check fail toaNoiseRms %.2f toaPpwinRms %.2f";
    int v8 = v5;
    uint32_t v9 = 22;
    goto LABEL_59;
  }
  double v11 = log10(v3 / v1);
  int v12 = *(unsigned __int8 *)(a1 + 768);
  if (!*(unsigned char *)(a1 + 680))
  {
    if (!*(unsigned char *)(a1 + 768))
    {
      uint64_t v39 = qword_1008ABDE0;
      double v6 = 0.2;
      if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT)) {
        return v6;
      }
      *(void *)double v54 = 67109376;
      *(_WORD *)&v54[8] = 1024;
      *(_DWORD *)&v54[10] = 0;
      __int16 v7 = "#me,MeasEngMetricsCalculator::computeRangeUncertaintyFromCirs: fail CIR has_value %d AOACIR has_value %d";
      int v8 = v39;
      uint32_t v9 = 14;
      goto LABEL_59;
    }
    int v12 = 1;
  }
  double v13 = v11 * 20.0;
  int v14 = *(unsigned __int16 *)(a1 + 112);
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v15 = *(void *)(a1 + 8);
  }
  else {
    uint64_t v15 = 0;
  }
  uint64_t v16 = *(void *)(a1 + 304);
  if (v12)
  {
    double v17 = qword_1008ABDE0;
    if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT)
      || (*(_WORD *)double v54 = 0,
          _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "#me,MeasEngMetricsCalculator::computeRangeUncertaintyFromCirs: TOA CIR", v54, 2u), *(unsigned char *)(a1 + 768)))
    {
      double v18 = hypot((double)*(__int16 *)(a1 + 748), (double)*(__int16 *)(a1 + 750));
      double v19 = v18;
      if (v18 > 0.0)
      {
        double v20 = log10(v18 * 0.707 / v1);
        double v21 = hypot((double)*(__int16 *)(a1 + 740), (double)*(__int16 *)(a1 + 742));
        if (v21 > 0.0)
        {
          double v22 = v20 * 20.0;
          double v23 = log10(v19 / v21) * 20.0;
          double v24 = v13 - v20 * 20.0 - v23;
          double v6 = v24 * 0.02 + 1.25;
          uint64_t v25 = qword_1008ABDE0;
          if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT)) {
            goto LABEL_55;
          }
          *(_DWORD *)double v54 = 134218240;
          *(double *)&v54[4] = v24;
          *(_WORD *)&v54[12] = 2048;
          *(double *)&v54[14] = v24 * 0.02 + 1.25;
          __int16 v26 = "#me,MeasEngMetricsCalculator::computeRangeUncertaintyFromCirs: TOA cirMetric %.2f RangeUnc %.2f";
          uint64_t v27 = v54;
          goto LABEL_54;
        }
        uint64_t v40 = qword_1008ABDE0;
        double v6 = 0.2;
        if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT)) {
          return v6;
        }
        *(_WORD *)double v54 = 0;
        __int16 v7 = "#me,MeasEngMetricsCalculator::computeRangeUncertaintyFromCirs: leadingEdgeStartMag is not positive.";
        goto LABEL_45;
      }
      uint64_t v38 = qword_1008ABDE0;
      double v6 = 0.2;
      if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT)) {
        return v6;
      }
      *(_DWORD *)double v54 = 134217984;
      *(double *)&v54[4] = v19;
      __int16 v7 = "#me,MeasEngMetricsCalculator::computeRangeUncertaintyFromCirs: TOA fppk(%.2f) <= 0";
      int v8 = v38;
      uint32_t v9 = 12;
LABEL_59:
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, v7, v54, v9);
      return v6;
    }
LABEL_67:
    sub_10000AE44();
  }
  if (!*(unsigned char *)(a1 + 680))
  {
    double v22 = 0.0;
    double v6 = 0.2;
    double v23 = 0.0;
    goto LABEL_55;
  }
  __int16 v28 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)double v54 = 0;
    _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "#me,MeasEngMetricsCalculator::computeRangeUncertaintyFromCirs: AOA CIR Data Event", v54, 2u);
  }
  if (!*(unsigned char *)(a1 + 200) || !*(unsigned char *)(a1 + 216) || !*(unsigned char *)(a1 + 232))
  {
    uint64_t v40 = qword_1008ABDE0;
    double v6 = 0.2;
    if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT)) {
      return v6;
    }
    *(_WORD *)double v54 = 0;
    __int16 v7 = "#me,MeasEngMetricsCalculator::computeRangeUncertaintyFromCirs: AOA one or more FPSNRs not available";
LABEL_45:
    int v8 = v40;
    uint32_t v9 = 2;
    goto LABEL_59;
  }
  double v29 = *(double *)(a1 + 224);
  double v30 = *(double *)(a1 + 208);
  double v31 = *(double *)(a1 + 192);
  __int16 v32 = (double *)&v54[8];
  *(double *)double v54 = v31;
  *(double *)&v54[8] = v30;
  *(double *)&v54[16] = v29;
  if (v31 >= v30)
  {
    double v30 = v31;
    __int16 v32 = (double *)v54;
  }
  if (v30 < v29) {
    __int16 v32 = (double *)&v54[16];
  }
  double v22 = *v32;
  uint64_t v33 = (char *)v32 - v54;
  if (v32 == (double *)v54)
  {
    if (!*(unsigned char *)(a1 + 680)) {
      goto LABEL_67;
    }
    __int16 v34 = (__int16 *)(a1 + 588);
    double v35 = (__int16 *)(a1 + 590);
    __int16 v36 = (__int16 *)(a1 + 596);
    double v37 = (__int16 *)(a1 + 598);
  }
  else if (v33 == 16)
  {
    if (!*(unsigned char *)(a1 + 680)) {
      goto LABEL_67;
    }
    __int16 v34 = (__int16 *)(a1 + 652);
    double v35 = (__int16 *)(a1 + 654);
    __int16 v36 = (__int16 *)(a1 + 660);
    double v37 = (__int16 *)(a1 + 662);
  }
  else
  {
    if (v33 != 8)
    {
      uint64_t v53 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 134217984;
        *(void *)&double v64 = v33 >> 3;
        uint64_t v50 = "#me,MeasEngMetricsCalculator::computeRangeUncertaintyFromCirs: AOA fpsnrIndex %ld";
        __int16 v51 = v53;
        uint32_t v52 = 12;
        goto LABEL_65;
      }
      return 0.2;
    }
    if (!*(unsigned char *)(a1 + 680)) {
      goto LABEL_67;
    }
    __int16 v34 = (__int16 *)(a1 + 620);
    double v35 = (__int16 *)(a1 + 622);
    __int16 v36 = (__int16 *)(a1 + 628);
    double v37 = (__int16 *)(a1 + 630);
  }
  int v41 = *v35;
  int v42 = *v34;
  double v43 = hypot((double)*v36, (double)*v37);
  double v44 = hypot((double)v42, (double)v41);
  double v45 = v44;
  if (v43 <= 0.0 || v44 <= 0.0)
  {
    uint64_t v49 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134218240;
      double v64 = v43;
      __int16 v65 = 2048;
      double v66 = v45;
      uint64_t v50 = "#me,MeasEngMetricsCalculator::computeRangeUncertaintyFromCirs: firstPathPeak(%.2f) or leadingEdgeStartMag(%.2f) are zero";
      __int16 v51 = v49;
      uint32_t v52 = 22;
LABEL_65:
      _os_log_impl((void *)&_mh_execute_header, v51, OS_LOG_TYPE_DEFAULT, v50, buf, v52);
      return 0.2;
    }
    return 0.2;
  }
  double v23 = log10(v43 / v44) * 20.0;
  double v46 = v13 - v22 - v23;
  double v6 = v46 * 0.03 + 1.75;
  uint64_t v25 = qword_1008ABDE0;
  if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT)) {
    goto LABEL_55;
  }
  *(_DWORD *)buf = 134218240;
  double v64 = v13 - v22 - v23;
  __int16 v65 = 2048;
  double v66 = v46 * 0.03 + 1.75;
  __int16 v26 = "#me,MeasEngMetricsCalculator::computeRangeUncertaintyFromCirs: AOA cirMetric %.2f RangeUnc %.2f";
  uint64_t v27 = buf;
LABEL_54:
  _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, v26, v27, 0x16u);
LABEL_55:
  if (v6 < 0.01) {
    double v6 = 0.01;
  }
  uint64_t v47 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)double v54 = 67110656;
    *(_DWORD *)&v54[4] = v14;
    *(_WORD *)&v54[8] = 2048;
    *(void *)&v54[10] = v15;
    *(_WORD *)&v54[18] = 2048;
    *(void *)&v54[20] = v16;
    __int16 v55 = 2048;
    double v56 = v13;
    __int16 v57 = 2048;
    double v58 = v22;
    __int16 v59 = 2048;
    double v60 = v23;
    __int16 v61 = 2048;
    double v62 = v6;
    __int16 v7 = "#me,MeasEngMetricsCalculator::computeRangeUncertaintyFromCirs: cycleIndex %d machContTime %.3f rm %.3f ppnr %.2"
         "f fpsnr %.2f ler %.2f ru %.2f";
    int v8 = v47;
    uint32_t v9 = 68;
    goto LABEL_59;
  }
  return v6;
}

void sub_10014F5CC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  BOOL v4 = (_OWORD *)(a1 + 1800);
  if (*(unsigned char *)(a1 + 2408))
  {
    long long v5 = *(_OWORD *)(a1 + 1848);
    *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 1832);
    *(_OWORD *)(a2 + 48) = v5;
    *(void *)(a2 + 64) = *(void *)(a1 + 1864);
    long long v6 = *(_OWORD *)(a1 + 1816);
    *(_OWORD *)a2 = *v4;
    *(_OWORD *)(a2 + 16) = v6;
    *(void *)(a2 + 72) = 0;
    __int16 v7 = *(const void **)(a1 + 1872);
    uint64_t v8 = *(void *)(a1 + 1880);
    *(void *)(a2 + 80) = 0;
    *(void *)(a2 + 88) = 0;
    sub_10015036C((void *)(a2 + 72), v7, v8, (v8 - (uint64_t)v7) >> 3);
    *(void *)(a2 + 136) = 0;
    long long v9 = v4[7];
    *(_OWORD *)(a2 + 96) = v4[6];
    *(_OWORD *)(a2 + 112) = v9;
    *(void *)(a2 + 128) = *(void *)(a1 + 1928);
    *(void *)(a2 + 144) = 0;
    *(void *)(a2 + 152) = 0;
    sub_10015042C((void *)(a2 + 136), *(const void **)(a1 + 1936), *(void *)(a1 + 1944), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(void *)(a1 + 1944) - *(void *)(a1 + 1936)) >> 3));
    memcpy((void *)(a2 + 160), (const void *)(a1 + 1960), 0x181uLL);
    long long v10 = *(_OWORD *)(a1 + 2368);
    *(_OWORD *)(a2 + 552) = *(_OWORD *)(a1 + 2352);
    *(_OWORD *)(a2 + 568) = v10;
    *(_OWORD *)(a2 + 584) = *(_OWORD *)(a1 + 2384);
    *(void *)(a2 + 597) = *(void *)(a1 + 2397);
  }
  else
  {
    unsigned int v11 = sub_10014DE5C(a1);
    unsigned int v12 = sub_10014E150(a1);
    unsigned int v13 = sub_10014E354(a1);
    unsigned int v14 = sub_10014E558(a1);
    unsigned int v15 = sub_10014EB8C(a1);
    unsigned int v16 = sub_10014DBE0(a1);
    BOOL v59 = *(unsigned char *)(a1 + 2423) == 0;
    BOOL v60 = *(unsigned char *)(a1 + 2422) == 0;
    unsigned int v17 = sub_10014EE50(a1);
    unsigned int v58 = v16;
    BOOL v61 = sub_10015146C(v11)
       && sub_10015146C(v12)
       && sub_10015146C(v13)
       && sub_100151458(v14)
       && sub_100151458(v15)
       && sub_100151458(v16)
       && sub_100151480(v60)
       && sub_100151480(v59)
       && sub_10015146C(v17);
    double v18 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = v61;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "#me,MeasEngMetricsCalculator::getMetrics: okForSensorFusion %d", buf, 8u);
      double v18 = qword_1008ABDE0;
    }
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      sub_10015148C(v17, buf);
      double v19 = buf[23] >= 0 ? buf : *(unsigned char **)buf;
      *(_DWORD *)uint64_t v88 = 136315138;
      *(void *)&v88[4] = v19;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "#me,MeasEngMetricsCalculator::getMetrics: checkCirMetricResult %s", v88, 0xCu);
      if ((buf[23] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
    }
    long long v20 = *(_OWORD *)(a1 + 48);
    long long v90 = *(_OWORD *)(a1 + 32);
    long long v91 = v20;
    long long v21 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)uint64_t v88 = *(_OWORD *)a1;
    long long v89 = v21;
    double v22 = *(const void **)(a1 + 72);
    uint64_t v92 = *(void *)(a1 + 64);
    uint64_t v93 = 0;
    uint64_t v23 = *(void *)(a1 + 80);
    uint64_t v95 = 0;
    v94 = 0;
    sub_10015036C(&v93, v22, v23, (v23 - (uint64_t)v22) >> 3);
    unsigned int v57 = v11;
    unsigned int v24 = v12;
    unsigned int v25 = v14;
    unsigned int v26 = v13;
    long long v27 = *(_OWORD *)(a1 + 112);
    long long v96 = *(_OWORD *)(a1 + 96);
    long long v97 = v27;
    __int16 v28 = *(const void **)(a1 + 136);
    uint64_t v98 = *(void *)(a1 + 128);
    v99 = 0;
    uint64_t v101 = 0;
    v100 = 0;
    sub_10015042C(&v99, v28, *(void *)(a1 + 144), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(void *)(a1 + 144) - (void)v28) >> 3));
    memcpy(v102, (const void *)(a1 + 160), 0x181uLL);
    double v29 = *(float *)(a1 + 1788);
    double v30 = qword_1008ABDE0;
    double v62 = (float *)(a1 + 1784);
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      double v31 = *(float *)(a1 + 1784);
      *(_DWORD *)buf = 134218240;
      *(double *)&uint8_t buf[4] = v29;
      *(_WORD *)&unsigned char buf[12] = 2048;
      *(double *)&buf[14] = v31;
      _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, "#me,MeasEngMetricsCalculator::getMetrics: confidence: range %f fov %f", buf, 0x16u);
      double v30 = qword_1008ABDE0;
    }
    if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134217984;
      *(double *)&uint8_t buf[4] = (1.0 - v29) * 4.8 + 0.2;
      _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, "#me,MeasEngMetricsCalculator::getMetrics: unc: range %f", buf, 0xCu);
    }
    v102[45] = (1.0 - v29) * 4.8 + 0.2;
    LOBYTE(v102[46]) = 1;
    v102[47] = *v62;
    LOBYTE(v102[48]) = 1;
    uint64_t v56 = (uint64_t)v4;
    unsigned int v55 = v24;
    if (sub_10015146C(v17))
    {
      double v32 = sub_10014EF38(a1);
      uint64_t v33 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v34 = *(void *)(a1 + 304);
        *(_DWORD *)buf = 134218240;
        *(void *)&uint8_t buf[4] = v34;
        *(_WORD *)&unsigned char buf[12] = 2048;
        *(double *)&buf[14] = v32;
        _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "#me,MeasEngMetricsCalculator::getMetrics:  rangeMsmt %.3f  rangeUncertaintyFromCirs:   %.2f", buf, 0x16u);
      }
      v102[45] = v32;
      LOBYTE(v102[46]) = 1;
    }
    else
    {
      *(unsigned char *)(a1 + 1777) = 0;
      double v35 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, "#me,MeasEngMetricsCalculator::getMetrics: checkCirMetrics is not ok. okToPublishToClient=false", buf, 2u);
      }
    }
    __int16 v36 = (double *)v99;
    double v37 = v100;
    if (v99 != v100)
    {
      uint64_t v38 = qword_1008ABDE0;
      int v39 = 1;
      do
      {
        double v40 = 1.0 - v36[2];
        float v41 = v40 * *(float *)(a1 + 1792);
        *(float *)&double v40 = v40 * *(float *)(a1 + 1796);
        double v42 = v41;
        double v43 = (1.0 - v41) * 350.0 + 10.0;
        double v44 = *(float *)&v40;
        double v45 = (1.0 - *(float *)&v40) * 350.0 + 10.0;
        double v46 = fabs(*v36);
        if (v46 >= 60.0) {
          double v47 = 90.0;
        }
        else {
          double v47 = v45;
        }
        if (v46 >= 60.0) {
          double v48 = 20.0;
        }
        else {
          double v48 = v43;
        }
        if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 67109632;
          *(_DWORD *)&uint8_t buf[4] = v39;
          *(_WORD *)&uint8_t buf[8] = 2048;
          *(double *)&buf[10] = v42;
          *(_WORD *)&buf[18] = 2048;
          *(double *)&buf[20] = v44;
          _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEFAULT, "#me,MeasEngMetricsCalculator::applyConfidenceMetrics: hypothesis %d confidence: az %f el %f", buf, 0x1Cu);
          uint64_t v38 = qword_1008ABDE0;
        }
        if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 67109632;
          *(_DWORD *)&uint8_t buf[4] = v39;
          *(_WORD *)&uint8_t buf[8] = 2048;
          *(double *)&buf[10] = v48;
          *(_WORD *)&buf[18] = 2048;
          *(double *)&buf[20] = v47;
          _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEFAULT, "#me,MeasEngMetricsCalculator::applyConfidenceMetrics: hypothesis %d unc: az %f el %f", buf, 0x1Cu);
          uint64_t v38 = qword_1008ABDE0;
        }
        v36[3] = v48;
        *((unsigned char *)v36 + 32) = 1;
        v36[5] = v47;
        *((unsigned char *)v36 + 48) = 1;
        v36 += 7;
        ++v39;
      }
      while (v36 != v37);
    }
    long long v64 = v90;
    long long v65 = v91;
    *(_OWORD *)buf = *(_OWORD *)v88;
    *(_OWORD *)&uint8_t buf[16] = v89;
    uint64_t v66 = v92;
    int v67 = 0;
    int v68 = 0;
    uint64_t v69 = 0;
    sub_10015036C(&v67, v93, (uint64_t)v94, (v94 - (unsigned char *)v93) >> 3);
    long long v70 = v96;
    long long v71 = v97;
    uint64_t v72 = v98;
    __p = 0;
    int v74 = 0;
    uint64_t v75 = 0;
    sub_10015042C(&__p, v99, (uint64_t)v100, 0x6DB6DB6DB6DB6DB7 * (((char *)v100 - (unsigned char *)v99) >> 3));
    memcpy(v76, v102, sizeof(v76));
    long long v77 = *(_OWORD *)v62;
    unsigned int v78 = v57;
    unsigned int v79 = v55;
    unsigned int v80 = v26;
    unsigned int v81 = v25;
    unsigned int v82 = v15;
    unsigned int v83 = v58;
    BOOL v84 = v60;
    BOOL v85 = v59;
    int v86 = 0;
    BOOL v87 = v61;
    sub_10014FF7C(v56, (uint64_t)buf);
    if (__p)
    {
      int v74 = __p;
      operator delete(__p);
    }
    if (v67)
    {
      int v68 = v67;
      operator delete(v67);
    }
    if (!*(unsigned char *)(a1 + 2408)) {
      sub_10000AE44();
    }
    long long v49 = *(_OWORD *)(v56 + 48);
    *(_OWORD *)(a2 + 32) = *(_OWORD *)(v56 + 32);
    *(_OWORD *)(a2 + 48) = v49;
    *(void *)(a2 + 64) = *(void *)(v56 + 64);
    long long v50 = *(_OWORD *)(v56 + 16);
    *(_OWORD *)a2 = *(_OWORD *)v56;
    *(_OWORD *)(a2 + 16) = v50;
    *(void *)(a2 + 72) = 0;
    __int16 v51 = *(const void **)(a1 + 1872);
    uint64_t v52 = *(void *)(a1 + 1880);
    *(void *)(a2 + 80) = 0;
    *(void *)(a2 + 88) = 0;
    sub_10015036C((void *)(a2 + 72), v51, v52, (v52 - (uint64_t)v51) >> 3);
    *(void *)(a2 + 136) = 0;
    long long v53 = *(_OWORD *)(a1 + 1912);
    *(_OWORD *)(a2 + 96) = *(_OWORD *)(a1 + 1896);
    *(void *)(a2 + 128) = *(void *)(a1 + 1928);
    *(_OWORD *)(a2 + 112) = v53;
    *(void *)(a2 + 144) = 0;
    *(void *)(a2 + 152) = 0;
    sub_10015042C((void *)(a2 + 136), *(const void **)(a1 + 1936), *(void *)(a1 + 1944), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(void *)(a1 + 1944) - *(void *)(a1 + 1936)) >> 3));
    memcpy((void *)(a2 + 160), (const void *)(a1 + 1960), 0x181uLL);
    long long v54 = *(_OWORD *)(a1 + 2368);
    *(_OWORD *)(a2 + 552) = *(_OWORD *)(a1 + 2352);
    *(_OWORD *)(a2 + 568) = v54;
    *(_OWORD *)(a2 + 584) = *(_OWORD *)(a1 + 2384);
    *(void *)(a2 + 597) = *(void *)(a1 + 2397);
    if (v99)
    {
      v100 = (double *)v99;
      operator delete(v99);
    }
    if (v93)
    {
      v94 = v93;
      operator delete(v93);
    }
  }
}

void sub_10014FEEC(_Unwind_Exception *a1)
{
}

uint64_t sub_10014FF7C(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 608);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v6 = *(_OWORD *)(a2 + 32);
  long long v5 = *(_OWORD *)(a2 + 48);
  long long v7 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 16) = v7;
  uint64_t v8 = (void *)(a1 + 72);
  long long v9 = (__n128 *)(a2 + 72);
  if (v4)
  {
    sub_100150500((uint64_t)v8, v9);
    long long v10 = *(_OWORD *)(a2 + 96);
    long long v11 = *(_OWORD *)(a2 + 112);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(_OWORD *)(a1 + 96) = v10;
    *(_OWORD *)(a1 + 112) = v11;
    sub_100150500(a1 + 136, (__n128 *)(a2 + 136));
    memcpy((void *)(a1 + 160), (const void *)(a2 + 160), 0x181uLL);
    long long v13 = *(_OWORD *)(a2 + 568);
    long long v12 = *(_OWORD *)(a2 + 584);
    long long v14 = *(_OWORD *)(a2 + 552);
    *(void *)(a1 + 597) = *(void *)(a2 + 597);
    *(_OWORD *)(a1 + 568) = v13;
    *(_OWORD *)(a1 + 584) = v12;
    *(_OWORD *)(a1 + 552) = v14;
  }
  else
  {
    void *v8 = 0;
    v8[1] = 0;
    v8[2] = 0;
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    v9->n128_u64[0] = 0;
    v9->n128_u64[1] = 0;
    v9[1].n128_u64[0] = 0;
    long long v15 = *(_OWORD *)(a2 + 112);
    uint64_t v16 = *(void *)(a2 + 128);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v15;
    *(void *)(a1 + 128) = v16;
    *(void *)(a1 + 136) = 0;
    *(void *)(a1 + 144) = 0;
    *(void *)(a1 + 152) = 0;
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a2 + 136) = 0;
    *(void *)(a2 + 144) = 0;
    *(void *)(a2 + 152) = 0;
    memcpy((void *)(a1 + 160), (const void *)(a2 + 160), 0x181uLL);
    long long v18 = *(_OWORD *)(a2 + 568);
    long long v17 = *(_OWORD *)(a2 + 584);
    long long v19 = *(_OWORD *)(a2 + 552);
    *(void *)(a1 + 597) = *(void *)(a2 + 597);
    *(_OWORD *)(a1 + 568) = v18;
    *(_OWORD *)(a1 + 584) = v17;
    *(_OWORD *)(a1 + 552) = v19;
    *(unsigned char *)(a1 + 608) = 1;
  }
  return a1;
}

void *sub_1001500AC(void *a1)
{
  unsigned int v2 = (void *)a1[17];
  if (v2)
  {
    a1[18] = v2;
    operator delete(v2);
  }
  double v3 = (void *)a1[9];
  if (v3)
  {
    a1[10] = v3;
    operator delete(v3);
  }
  return a1;
}

unsigned char *sub_1001500F0(unsigned char *a1, uint64_t a2)
{
  *a1 = 0;
  a1[608] = 0;
  if (*(unsigned char *)(a2 + 608))
  {
    sub_100150148((uint64_t)a1, a2);
    a1[608] = 1;
  }
  return a1;
}

void sub_100150134(_Unwind_Exception *a1)
{
  sub_10015024C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100150148(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v4 = *(_OWORD *)(a2 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  sub_10015036C((void *)(a1 + 72), *(const void **)(a2 + 72), *(void *)(a2 + 80), (uint64_t)(*(void *)(a2 + 80) - *(void *)(a2 + 72)) >> 3);
  long long v7 = *(_OWORD *)(a2 + 96);
  long long v8 = *(_OWORD *)(a2 + 112);
  uint64_t v9 = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 128) = v9;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 96) = v7;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  sub_10015042C((void *)(a1 + 136), *(const void **)(a2 + 136), *(void *)(a2 + 144), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(void *)(a2 + 144) - *(void *)(a2 + 136)) >> 3));
  memcpy((void *)(a1 + 160), (const void *)(a2 + 160), 0x181uLL);
  long long v11 = *(_OWORD *)(a2 + 568);
  long long v10 = *(_OWORD *)(a2 + 584);
  long long v12 = *(_OWORD *)(a2 + 552);
  *(void *)(a1 + 597) = *(void *)(a2 + 597);
  *(_OWORD *)(a1 + 568) = v11;
  *(_OWORD *)(a1 + 584) = v10;
  *(_OWORD *)(a1 + 552) = v12;
  return a1;
}

void sub_100150230(_Unwind_Exception *exception_object)
{
  long long v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 80) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10015024C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 608))
  {
    unsigned int v2 = *(void **)(a1 + 136);
    if (v2)
    {
      *(void *)(a1 + 144) = v2;
      operator delete(v2);
    }
    double v3 = *(void **)(a1 + 72);
    if (v3)
    {
      *(void *)(a1 + 80) = v3;
      operator delete(v3);
    }
  }
  return a1;
}

double *sub_100150298(double *result, double *a2)
{
  unsigned int v2 = result;
  if (result != a2 && result + 1 != a2)
  {
    double v5 = *result;
    double v4 = result[1];
    if (v4 < *result) {
      ++result;
    }
    long long v6 = v4 >= *v2 ? v2 + 1 : v2;
    long long v7 = v2 + 2;
    if (v7 != a2)
    {
      if (v4 >= v5) {
        double v4 = v5;
      }
      while (v7 + 1 != a2)
      {
        double v9 = *v7;
        double v8 = v7[1];
        if (v8 >= *v7)
        {
          if (v9 < v4)
          {
            double v4 = *v7;
            __n128 result = v7;
          }
          if (v8 >= *v6) {
            long long v6 = v7 + 1;
          }
        }
        else
        {
          double v4 = *result;
          if (v8 < *result)
          {
            double v4 = v7[1];
            __n128 result = v7 + 1;
          }
          if (v9 >= *v6) {
            long long v6 = v7;
          }
        }
        v7 += 2;
        if (v7 == a2) {
          return result;
        }
      }
      if (*v7 < *result) {
        return v7;
      }
    }
  }
  return result;
}

void *sub_10015036C(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    long long v6 = result;
    __n128 result = sub_1001503E8(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      __n128 result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1001503CC(_Unwind_Exception *exception_object)
{
  double v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1001503E8(void *a1, unint64_t a2)
{
  if (a2 >> 61) {
    sub_1000267C4();
  }
  __n128 result = (char *)sub_100056BF0((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[8 * v4];
  return result;
}

void *sub_10015042C(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    long long v6 = result;
    __n128 result = sub_1001504A8(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      __n128 result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_10015048C(_Unwind_Exception *exception_object)
{
  double v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1001504A8(void *a1, unint64_t a2)
{
  if (a2 >= 0x492492492492493) {
    sub_1000267C4();
  }
  __n128 result = (char *)sub_100028A48((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[56 * v4];
  return result;
}

__n128 sub_100150500(uint64_t a1, __n128 *a2)
{
  uint64_t v4 = *(void **)a1;
  if (v4)
  {
    *(void *)(a1 + 8) = v4;
    operator delete(v4);
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
  }
  __n128 result = *a2;
  *(__n128 *)a1 = *a2;
  *(void *)(a1 + 16) = a2[1].n128_u64[0];
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  return result;
}

void *sub_100150554@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_1008529D0[a1]);
}

void *sub_100150568@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100852A28[a1]);
}

void *sub_10015057C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100852A70[a1]);
}

void *sub_100150590@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100852A90[a1]);
}

uint64_t sub_1001505A4(uint64_t result, int a2)
{
  *(_DWORD *)__n128 result = a2;
  int64x2_t v2 = vdupq_n_s64(0xC069000000000000);
  *(int64x2_t *)(result + 8) = v2;
  *(int64x2_t *)(result + 24) = v2;
  if (a2 <= 99)
  {
    switch(a2)
    {
      case 0:
        long long v3 = xmmword_1004B55A0;
        goto LABEL_13;
      case 1:
      case 2:
        long long v3 = xmmword_1004B55B0;
LABEL_13:
        *(_OWORD *)(result + 16) = v3;
        break;
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 23:
        goto LABEL_6;
      default:
        return result;
    }
  }
  else
  {
    if (a2 <= 199)
    {
      if ((a2 - 100) >= 0x16) {
        return result;
      }
LABEL_6:
      *(void *)(result + 16) = 0xC069000000000000;
      *(void *)(result + 32) = 0xC069000000000000;
      return result;
    }
    if ((a2 - 200) < 2 || a2 == 997 || a2 == 999) {
      goto LABEL_6;
    }
  }
  return result;
}

BOOL sub_1001506B4(uint64_t a1, uint64_t a2, int a3)
{
  if (*(unsigned char *)(a2 + 1)) {
    BOOL v3 = *(unsigned char *)a2 == 11;
  }
  else {
    BOOL v3 = 0;
  }
  if (!v3) {
    return 0;
  }
  int v6 = *(unsigned __int8 *)(a2 + 368);
  if (v6 == 9)
  {
    BOOL v7 = a3 == 0;
    uint64_t v8 = 24;
    uint64_t v9 = 32;
    goto LABEL_10;
  }
  if (v6 == 5)
  {
    BOOL v7 = a3 == 0;
    uint64_t v8 = 8;
    uint64_t v9 = 16;
LABEL_10:
    if (!v7) {
      uint64_t v8 = v9;
    }
    double v10 = *(double *)(a1 + v8);
    goto LABEL_14;
  }
  double v10 = -200.0;
LABEL_14:
  double v11 = *(double *)(a2 + 304);
  double v12 = 0.0;
  if (v11 > 0.0)
  {
    double v12 = *(double *)(a2 + 168);
    if (v11 > 0.75) {
      double v12 = v12 + log10(*(long double *)(a2 + 304)) * 20.0;
    }
  }
  BOOL v14 = v11 > 0.0 && *(_WORD *)(a2 + 96) == 0;
  return v12 < v10 && v14;
}

void *sub_100150790@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  return sub_10015036C(a1, (const void *)qword_10089C970, qword_10089C978, (qword_10089C978 - qword_10089C970) >> 3);
}

void sub_1001507B4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C988, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C988))
  {
    qword_10089C970 = 0;
    qword_10089C978 = 0;
    qword_10089C980 = 0;
    uint64_t v0 = operator new(0x30uLL);
    qword_10089C978 = (uint64_t)(v0 + 3);
    qword_10089C980 = (uint64_t)(v0 + 3);
    *uint64_t v0 = xmmword_1004B55C0;
    v0[1] = *(_OWORD *)algn_1004B55D0;
    v0[2] = xmmword_1004B55E0;
    qword_10089C970 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_100008CAC, &qword_10089C970, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C988);
  }
}

void sub_100150870(_Unwind_Exception *a1)
{
}

void *sub_100150888@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100852AB0[a1]);
}

void *sub_10015089C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100852B08[a1]);
}

void *sub_1001508B0@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100852B50[a1]);
}

void *sub_1001508C4@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100852B70[a1]);
}

double sub_1001508D8(float *a1, uint64_t *a2)
{
  uint64_t v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    if (*((char *)a2 + 23) >= 0) {
      int v6 = a2;
    }
    else {
      int v6 = (uint64_t *)*a2;
    }
    double v7 = *a1;
    double v8 = a1[1];
    double v9 = a1[2];
    double v10 = a1[3];
    int v11 = 136316162;
    double v12 = v6;
    __int16 v13 = 2048;
    double v14 = v7;
    __int16 v15 = 2048;
    double v16 = v8;
    __int16 v17 = 2048;
    double v18 = v9;
    __int16 v19 = 2048;
    double v20 = v10;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#me,%s: ConfidenceMetrics: fieldOfView %.3f range %.3f azimuth %.3f elevation %.3f", (uint8_t *)&v11, 0x34u);
  }
  return result;
}

uint64_t sub_1001509D4(void *a1, __n128 *a2)
{
  uint64_t v4 = a1[5];
  if (!v4) {
    goto LABEL_18;
  }
  double v5 = (void **)a1[1];
  double v6 = (*(double **)((char *)v5 + (((unint64_t)(v4 + a1[4] - 1) >> 5) & 0x7FFFFFFFFFFFFF8)))[2 * (v4 + *((unsigned char *)a1 + 32) - 1)];
  double v7 = a2->n128_f64[0];
  if (a2->n128_f64[0] < v6)
  {
    double v8 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 134218240;
      double v23 = v7;
      __int16 v24 = 2048;
      double v25 = v6;
      _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "#me,RangeMeasurementHistory::add: timestamp %.6f is older than most recent %.6f, purging queue", buf, 0x16u);
      double v5 = (void **)a1[1];
    }
    uint64_t v9 = a1[2];
    a1[5] = 0;
    unint64_t v10 = v9 - (void)v5;
    if (v10 >= 0x11)
    {
      do
      {
        operator delete(*v5);
        uint64_t v11 = a1[2];
        double v5 = (void **)(a1[1] + 8);
        a1[1] = v5;
        unint64_t v10 = v11 - (void)v5;
      }
      while ((unint64_t)(v11 - (void)v5) > 0x10);
    }
    unint64_t v12 = v10 >> 3;
    if (v12 == 1)
    {
      uint64_t v13 = 128;
    }
    else
    {
      if (v12 != 2) {
        goto LABEL_12;
      }
      uint64_t v13 = 256;
    }
    a1[4] = v13;
  }
LABEL_12:
  for (uint64_t i = a1[5]; i; uint64_t i = a1[5])
  {
    unint64_t v15 = a1[4];
    double v16 = *(double *)(*(void *)(a1[1] + ((v15 >> 5) & 0x7FFFFFFFFFFFFF8)) + 16 * v15);
    if (v16 > a2->n128_f64[0]) {
      sub_100410B5C();
    }
    if (a2->n128_f64[0] - v16 <= 3.0) {
      break;
    }
    __int16 v17 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134217984;
      double v23 = v16;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "#me,RangeMeasurementHistory::addRangeMeasurement: removing old msmt witih timestamp %.3f", buf, 0xCu);
      unint64_t v15 = a1[4];
      uint64_t i = a1[5];
    }
    a1[5] = i - 1;
    a1[4] = v15 + 1;
    sub_1001514A0((uint64_t)a1, 1);
  }
LABEL_18:
  uint64_t v18 = sub_100150C7C(a1, (uint64_t)a2);
  unint64_t v19 = a1[5];
  if (v19 >= 9)
  {
    do
    {
      uint64_t v20 = a1[4];
      a1[5] = v19 - 1;
      a1[4] = v20 + 1;
      sub_1001514A0((uint64_t)a1, 1);
      unint64_t v19 = a1[5];
    }
    while (v19 > 8);
  }
  sub_100151370(a1, a2);
  return v18;
}

uint64_t sub_100150C7C(void *a1, uint64_t a2)
{
  unint64_t v2 = a1[5];
  if (v2 >= 0xA) {
    sub_100410B88();
  }
  if (v2 != 9) {
    return 0;
  }
  sub_100151C84((uint64_t)&v86, a1);
  unint64_t v4 = v89;
  uint64_t v5 = v87;
  double v6 = (uint64_t *)(v87 + 8 * (v89 >> 8));
  uint64_t v7 = *v6;
  double v8 = (double *)(*v6 + 16 * v89);
  if (v88 == v87) {
    double v8 = 0;
  }
  uint64_t v9 = (uint64_t)v8 - v7;
  uint64_t v10 = ((uint64_t)v8 - v7) >> 4;
  if (v9 < -63)
  {
    unint64_t v15 = 251 - v10;
    unint64_t v12 = (char *)&v6[-(v15 >> 8)];
    unint64_t v13 = *(void *)v12 + 16 * ~(_BYTE)v15;
  }
  else
  {
    unint64_t v11 = v10 + 4;
    unint64_t v12 = (char *)&v6[v11 >> 8];
    unint64_t v13 = *(void *)v12 + 16 * v11;
  }
  double v16 = (char *)(v87 + 8 * ((v90 + v89) >> 8));
  if (v88 == v87) {
    __int16 v17 = 0;
  }
  else {
    __int16 v17 = (double *)(*(void *)v16 + 16 * (v90 + v89));
  }
  if ((double *)v13 != v17)
  {
    long long v91 = (char *)(v87 + 8 * (v89 >> 8));
    uint64_t v92 = v8;
    while (1)
    {
      uint64_t v18 = v92;
      if (v17 == v92
        || (unint64_t v19 = v91,
            uint64_t v20 = *(double **)v16,
            long long v21 = *(double **)v91,
            uint64_t v22 = (((uint64_t)v17 - *(void *)v16) >> 4) + 32 * (v16 - v91) - (((uint64_t)v92 - *(void *)v91) >> 4),
            (unint64_t)v22 < 2))
      {
LABEL_133:
        unint64_t v4 = v89;
        uint64_t v5 = v87;
        goto LABEL_134;
      }
      if (v22 == 3)
      {
        int v73 = v92 + 2;
        int v74 = v91;
        if ((char *)(v92 + 2) - (char *)v21 == 4096)
        {
          int v74 = v91 + 8;
          int v73 = (double *)*((void *)v91 + 1);
        }
        if (v17 == v20)
        {
          uint64_t v75 = *((void *)v16 - 1);
          v16 -= 8;
          __int16 v17 = (double *)(v75 + 4096);
        }
        sub_1001524C0((uint64_t)v91, v92, (uint64_t)v74, v73, (uint64_t)v16, v17 - 2);
        goto LABEL_133;
      }
      if (v22 == 2)
      {
        if (v17 == v20) {
          __int16 v17 = (double *)(*((void *)v16 - 1) + 4096);
        }
        if (*(v17 - 1) < v92[1])
        {
          long long v93 = *(_OWORD *)v92;
          long long v76 = v93;
          *(_OWORD *)uint64_t v92 = *((_OWORD *)v17 - 1);
          *((_OWORD *)v17 - 1) = v76;
        }
        goto LABEL_133;
      }
      if (v22 <= 7)
      {
        uint64_t v77 = (uint64_t)v17;
        if (v20 == v17) {
          uint64_t v77 = *((void *)v16 - 1) + 4096;
        }
        unsigned int v78 = (double *)(v77 - 16);
        if ((double *)(v77 - 16) != v92)
        {
          do
          {
            unsigned int v79 = v17;
            if (v18 != v17)
            {
              unsigned int v80 = v21;
              unsigned int v79 = v18;
              unsigned int v81 = v18;
              unsigned int v82 = v19;
              while (1)
              {
                v81 += 2;
                if ((char *)v81 - (char *)v80 == 4096)
                {
                  unsigned int v83 = (double *)*((void *)v82 + 1);
                  v82 += 8;
                  unsigned int v80 = v83;
                  unsigned int v81 = v83;
                }
                if (v81 == v17) {
                  break;
                }
                if (v81[1] < v79[1]) {
                  unsigned int v79 = v81;
                }
              }
            }
            if (v79 != v18)
            {
              long long v93 = *(_OWORD *)v18;
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v79;
              *(_OWORD *)unsigned int v79 = v93;
              long long v21 = *(double **)v19;
            }
            v18 += 2;
            if ((char *)v18 - (char *)v21 == 4096)
            {
              BOOL v84 = (double *)*((void *)v19 + 1);
              v19 += 8;
              long long v21 = v84;
              uint64_t v18 = v84;
            }
          }
          while (v18 != v78);
        }
        goto LABEL_133;
      }
      __int16 v24 = sub_1001513FC((uint64_t)&v91, (unint64_t)v22 >> 1);
      double v25 = v23;
      unsigned int v26 = v16;
      uint64_t v27 = (uint64_t)v17;
      if (v17 == *(double **)v16)
      {
        unsigned int v26 = v16 - 8;
        uint64_t v27 = *((void *)v16 - 1) + 4096;
      }
      __int16 v28 = (double *)(v27 - 16);
      int v29 = sub_1001524C0((uint64_t)v91, v92, (uint64_t)v24, v23, (uint64_t)v26, (double *)(v27 - 16));
      double v30 = v91;
      double v31 = v92;
      double v32 = v92[1];
      double v33 = v25[1];
      if (v32 >= v33) {
        break;
      }
LABEL_29:
      uint64_t v38 = v31 + 2;
      int v39 = *(double **)v30;
      if ((double *)((char *)v38 - *(void *)v30) == (double *)4096)
      {
        double v40 = (double *)*((void *)v30 + 1);
        v30 += 8;
        int v39 = v40;
        uint64_t v38 = v40;
      }
      if (v30 < v26 || v30 == v26 && v38 < v28)
      {
        while (1)
        {
          double v41 = v25[1];
          while (v38[1] < v41)
          {
            v38 += 2;
            if ((char *)v38 - (char *)v39 == 4096)
            {
              double v42 = (double *)*((void *)v30 + 1);
              v30 += 8;
              int v39 = v42;
              uint64_t v38 = v42;
            }
          }
          double v43 = *(double **)v26;
          do
          {
            if (v28 == v43)
            {
              double v44 = (double *)*((void *)v26 - 1);
              v26 -= 8;
              double v43 = v44;
              __int16 v28 = v44 + 512;
            }
            double v45 = *(v28 - 1);
            v28 -= 2;
          }
          while (v45 >= v41);
          if (v30 >= v26 && (v30 != v26 || v38 >= v28)) {
            break;
          }
          long long v93 = *(_OWORD *)v38;
          *(_OWORD *)uint64_t v38 = *(_OWORD *)v28;
          *(_OWORD *)__int16 v28 = v93;
          ++v29;
          if (v25 == v38) {
            double v25 = v28;
          }
          v38 += 2;
          int v39 = *(double **)v30;
          if ((double *)((char *)v38 - *(void *)v30) == (double *)4096)
          {
            double v46 = (double *)*((void *)v30 + 1);
            v30 += 8;
            int v39 = v46;
            uint64_t v38 = v46;
          }
        }
      }
      if (v38 != v25 && v25[1] < v38[1])
      {
        long long v93 = *(_OWORD *)v38;
        *(_OWORD *)uint64_t v38 = *(_OWORD *)v25;
        *(_OWORD *)double v25 = v93;
        ++v29;
      }
      if (v38 == (double *)v13) {
        goto LABEL_133;
      }
      if (!v29)
      {
        if (v30 > v12 || (unint64_t)v38 > v13 && v30 == v12)
        {
          double v47 = v91;
          double v48 = v92;
          long long v49 = *(double **)v91;
          while (1)
          {
            long long v50 = v48 + 2;
            if ((char *)(v48 + 2) - (char *)v49 == 4096)
            {
              __int16 v51 = (double *)*((void *)v47 + 1);
              v47 += 8;
              long long v49 = v51;
              long long v50 = v51;
            }
            if (v50 == v38) {
              break;
            }
            double v52 = v48[1];
            double v48 = v50;
            if (v50[1] < v52) {
              goto LABEL_54;
            }
          }
        }
        else
        {
          uint64_t v66 = *(double **)v30;
          int v67 = v38;
          int v68 = v30;
          while (1)
          {
            uint64_t v69 = v67 + 2;
            if ((char *)(v67 + 2) - (char *)v66 == 4096)
            {
              long long v70 = (double *)*((void *)v68 + 1);
              v68 += 8;
              uint64_t v66 = v70;
              uint64_t v69 = v70;
            }
            if (v69 == v17) {
              break;
            }
            double v71 = v67[1];
            int v67 = v69;
            if (v69[1] < v71) {
              goto LABEL_54;
            }
          }
        }
        goto LABEL_133;
      }
LABEL_54:
      if (v30 <= v12)
      {
        if ((unint64_t)v38 <= v13 || v30 != v12)
        {
          long long v53 = v38 + 2;
          if ((double *)((char *)v53 - *(void *)v30) == (double *)4096)
          {
            long long v65 = (double *)*((void *)v30 + 1);
            v30 += 8;
            long long v53 = v65;
          }
LABEL_97:
          long long v91 = v30;
          uint64_t v92 = v53;
          goto LABEL_98;
        }
        __int16 v17 = v38;
        double v16 = v12;
      }
      else
      {
        __int16 v17 = v38;
        double v16 = v30;
      }
LABEL_98:
      if (v17 == (double *)v13) {
        goto LABEL_133;
      }
    }
    uint64_t v34 = *(double **)v26;
    while (1)
    {
      if (v28 == v34)
      {
        __int16 v36 = (double *)*((void *)v26 - 1);
        v26 -= 8;
        uint64_t v34 = v36;
        double v35 = v36 + 512;
      }
      else
      {
        double v35 = v28;
      }
      __int16 v28 = v35 - 2;
      if (v92 == v35 - 2) {
        break;
      }
      if (*(v35 - 1) < v33)
      {
        long long v93 = *(_OWORD *)v92;
        long long v37 = v93;
        *(_OWORD *)uint64_t v92 = *(_OWORD *)v28;
        *(_OWORD *)__int16 v28 = v37;
        ++v29;
        goto LABEL_29;
      }
    }
    long long v53 = v92 + 2;
    long long v54 = *(double **)v91;
    if ((double *)((char *)v92 - *(void *)v91 + 16) == (double *)4096)
    {
      double v30 = v91 + 8;
      long long v54 = (double *)*((void *)v91 + 1);
      long long v53 = v54;
    }
    unsigned int v55 = v16;
    uint64_t v56 = (uint64_t)v17;
    if (v17 == *(double **)v16)
    {
      unsigned int v55 = v16 - 8;
      uint64_t v56 = *((void *)v16 - 1) + 4096;
    }
    unsigned int v57 = (double *)(v56 - 16);
    if (v32 >= *(double *)(v56 - 8))
    {
      while (v53 != v57)
      {
        if (v32 < v53[1])
        {
          long long v93 = *(_OWORD *)v53;
          *(_OWORD *)long long v53 = *(_OWORD *)v57;
          v53 += 2;
          *(_OWORD *)unsigned int v57 = v93;
          long long v54 = *(double **)v30;
          if ((double *)((char *)v53 - *(void *)v30) == (double *)4096)
          {
            uint64_t v72 = (double *)*((void *)v30 + 1);
            v30 += 8;
            long long v54 = v72;
            long long v53 = v72;
          }
          goto LABEL_73;
        }
        v53 += 2;
        if ((char *)v53 - (char *)v54 == 4096)
        {
          long long v64 = (double *)*((void *)v30 + 1);
          v30 += 8;
          long long v54 = v64;
          long long v53 = v64;
        }
      }
      goto LABEL_133;
    }
LABEL_73:
    if (v53 == v57) {
      goto LABEL_133;
    }
    while (1)
    {
      double v58 = v92[1];
      while (v58 >= v53[1])
      {
        v53 += 2;
        if ((char *)v53 - (char *)v54 == 4096)
        {
          BOOL v59 = (double *)*((void *)v30 + 1);
          v30 += 8;
          long long v54 = v59;
          long long v53 = v59;
        }
      }
      BOOL v60 = *(double **)v55;
      do
      {
        if (v57 == v60)
        {
          BOOL v61 = (double *)*((void *)v55 - 1);
          v55 -= 8;
          BOOL v60 = v61;
          unsigned int v57 = v61 + 512;
        }
        double v62 = *(v57 - 1);
        v57 -= 2;
      }
      while (v58 < v62);
      if (v30 >= v55 && (v30 != v55 || v53 >= v57)) {
        break;
      }
      long long v93 = *(_OWORD *)v53;
      *(_OWORD *)long long v53 = *(_OWORD *)v57;
      v53 += 2;
      *(_OWORD *)unsigned int v57 = v93;
      long long v54 = *(double **)v30;
      if ((double *)((char *)v53 - *(void *)v30) == (double *)4096)
      {
        __int16 v63 = (double *)*((void *)v30 + 1);
        v30 += 8;
        long long v54 = v63;
        long long v53 = v63;
      }
    }
    if (v30 > v12 || (unint64_t)v53 > v13 && v30 == v12) {
      goto LABEL_133;
    }
    goto LABEL_97;
  }
LABEL_134:
  double v85 = *(double *)(a2 + 8)
      - *(double *)(*(void *)(v5 + (((v4 + 4) >> 5) & 0x7FFFFFFFFFFFFF8)) + 16 * (v4 + 4) + 8);
  sub_100152418(&v86);
  return *(void *)&v85 & 0x7FFFFFFFFFFFFFFFLL;
}

void sub_10015135C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

__n128 sub_100151370(void *a1, __n128 *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 32 * (v4 - v5) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_100151500(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }
  __n128 result = *a2;
  *(__n128 *)(*(void *)(v5 + ((v7 >> 5) & 0x7FFFFFFFFFFFFF8)) + 16 * v7) = *a2;
  ++a1[5];
  return result;
}

void *sub_1001513FC(uint64_t a1, uint64_t a2)
{
  __n128 result = *(void **)a1;
  if (a2)
  {
    uint64_t v4 = a2 + ((uint64_t)(*(void *)(a1 + 8) - *result) >> 4);
    if (v4 < 1) {
      result -= (unint64_t)(255 - v4) >> 8;
    }
    else {
      result += (unint64_t)v4 >> 8;
    }
  }
  return result;
}

BOOL sub_100151458(unsigned int a1)
{
  return a1 > 4 || (a1 & 0x1F) == 1;
}

BOOL sub_10015146C(unsigned int a1)
{
  return a1 > 3 || (a1 & 0xF) == 1;
}

BOOL sub_100151480(int a1)
{
  return a1 == 1;
}

void *sub_10015148C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100852B90[a1]);
}

uint64_t sub_1001514A0(uint64_t a1, int a2)
{
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 < 0x100) {
    a2 = 1;
  }
  if (v2 < 0x200) {
    int v4 = a2;
  }
  else {
    int v4 = 0;
  }
  if ((v4 & 1) == 0)
  {
    operator delete(**(void ***)(a1 + 8));
    *(void *)(a1 + 8) += 8;
    *(void *)(a1 + 32) -= 256;
  }
  return v4 ^ 1u;
}

void sub_100151500(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x100;
  unint64_t v4 = v2 - 256;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    double v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    uint64_t v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)double v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_100056BF0(v5, v33);
      double v35 = &v34[8 * (v33 >> 2)];
      long long v37 = &v34[8 * v36];
      uint64_t v38 = (uint64_t *)a1[1];
      double v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        double v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        double v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)double v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    unint64_t v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }
    double v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0x1000uLL);
      sub_100151818(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0x1000uLL);
    sub_100151930((uint64_t)a1, &v54);
    double v44 = (void *)a1[1];
    double v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_100056BF0((uint64_t)(a1 + 3), v46);
      double v35 = &v34[8 * (v46 >> 2)];
      long long v37 = &v34[8 * v47];
      double v48 = (uint64_t *)a1[1];
      double v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        double v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        __int16 v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)__int16 v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      double v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        double v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&long long v54 = sub_100056BF0((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  long long v53 = operator new(0x1000uLL);
  sub_100151A50(&v54, &v53);
  uint64_t v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    sub_100151B68((uint64_t)&v54, v27);
  }
  int v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_1001517CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_100151818(void *a1, void *a2)
{
  uint64_t v5 = (char *)a1[3];
  uint64_t v4 = (uint64_t)(a1 + 3);
  uint64_t v6 = *(char **)(v4 - 8);
  if (v6 == v5)
  {
    unint64_t v7 = (char *)a1[1];
    uint64_t v8 = (uint64_t)&v7[-*a1];
    if ((unint64_t)v7 <= *a1)
    {
      if (v6 == (char *)*a1) {
        unint64_t v18 = 1;
      }
      else {
        unint64_t v18 = (uint64_t)&v6[-*a1] >> 2;
      }
      unint64_t v19 = (char *)sub_100056BF0(v4, v18);
      uint64_t v21 = &v19[8 * (v18 >> 2)];
      unint64_t v22 = (uint64_t *)a1[1];
      uint64_t v6 = v21;
      uint64_t v23 = a1[2] - (void)v22;
      if (v23)
      {
        uint64_t v6 = &v21[v23 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v24 = 8 * (v23 >> 3);
        unint64_t v25 = &v19[8 * (v18 >> 2)];
        do
        {
          uint64_t v26 = *v22++;
          *(void *)unint64_t v25 = v26;
          v25 += 8;
          v24 -= 8;
        }
        while (v24);
      }
      uint64_t v27 = (char *)*a1;
      *a1 = v19;
      a1[1] = v21;
      a1[2] = v6;
      a1[3] = &v19[8 * v20];
      if (v27)
      {
        operator delete(v27);
        uint64_t v6 = (char *)a1[2];
      }
    }
    else
    {
      uint64_t v9 = v8 >> 3;
      BOOL v10 = v8 >> 3 < -1;
      uint64_t v11 = (v8 >> 3) + 2;
      if (v10) {
        uint64_t v12 = v11;
      }
      else {
        uint64_t v12 = v9 + 1;
      }
      uint64_t v13 = -(v12 >> 1);
      uint64_t v14 = v12 >> 1;
      uint64_t v15 = &v7[-8 * v14];
      int64_t v16 = v6 - v7;
      if (v6 != v7)
      {
        memmove(&v7[-8 * v14], v7, v6 - v7);
        uint64_t v6 = (char *)a1[1];
      }
      uint64_t v17 = &v6[8 * v13];
      uint64_t v6 = &v15[v16];
      a1[1] = v17;
      a1[2] = &v15[v16];
    }
  }
  *(void *)uint64_t v6 = *a2;
  a1[2] += 8;
}

void sub_100151930(uint64_t a1, void *a2)
{
  uint64_t v4 = *(char **)(a1 + 8);
  if (v4 == *(char **)a1)
  {
    uint64_t v6 = a1 + 24;
    unint64_t v7 = *(unsigned char **)(a1 + 24);
    uint64_t v8 = *(unsigned char **)(a1 + 16);
    if (v8 >= v7)
    {
      if (v7 == v4) {
        unint64_t v12 = 1;
      }
      else {
        unint64_t v12 = (v7 - v4) >> 2;
      }
      uint64_t v13 = 2 * v12;
      uint64_t v14 = (char *)sub_100056BF0(v6, v12);
      uint64_t v5 = &v14[(v13 + 6) & 0xFFFFFFFFFFFFFFF8];
      int64_t v16 = *(uint64_t **)(a1 + 8);
      uint64_t v17 = v5;
      uint64_t v18 = *(void *)(a1 + 16) - (void)v16;
      if (v18)
      {
        uint64_t v17 = &v5[v18 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v19 = 8 * (v18 >> 3);
        uint64_t v20 = v5;
        do
        {
          uint64_t v21 = *v16++;
          *(void *)uint64_t v20 = v21;
          v20 += 8;
          v19 -= 8;
        }
        while (v19);
      }
      unint64_t v22 = *(char **)a1;
      *(void *)a1 = v14;
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v17;
      *(void *)(a1 + 24) = &v14[8 * v15];
      if (v22)
      {
        operator delete(v22);
        uint64_t v5 = *(char **)(a1 + 8);
      }
    }
    else
    {
      uint64_t v9 = (v7 - v8) >> 3;
      if (v9 >= -1) {
        uint64_t v10 = v9 + 1;
      }
      else {
        uint64_t v10 = v9 + 2;
      }
      uint64_t v11 = v10 >> 1;
      uint64_t v5 = &v4[8 * (v10 >> 1)];
      if (v8 != v4)
      {
        memmove(&v4[8 * (v10 >> 1)], v4, v8 - v4);
        uint64_t v4 = *(char **)(a1 + 16);
      }
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = &v4[8 * v11];
    }
  }
  else
  {
    uint64_t v5 = *(char **)(a1 + 8);
  }
  *((void *)v5 - 1) = *a2;
  *(void *)(a1 + 8) -= 8;
}

void sub_100151A50(void *a1, void *a2)
{
  uint64_t v4 = (char *)a1[2];
  if (v4 == (char *)a1[3])
  {
    uint64_t v5 = (char *)a1[1];
    uint64_t v6 = (uint64_t)&v5[-*a1];
    if ((unint64_t)v5 <= *a1)
    {
      if (v4 == (char *)*a1) {
        unint64_t v16 = 1;
      }
      else {
        unint64_t v16 = (uint64_t)&v4[-*a1] >> 2;
      }
      uint64_t v17 = (char *)sub_100056BF0(a1[4], v16);
      uint64_t v19 = &v17[8 * (v16 >> 2)];
      uint64_t v20 = (uint64_t *)a1[1];
      uint64_t v4 = v19;
      uint64_t v21 = a1[2] - (void)v20;
      if (v21)
      {
        uint64_t v4 = &v19[v21 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v22 = 8 * (v21 >> 3);
        uint64_t v23 = &v17[8 * (v16 >> 2)];
        do
        {
          uint64_t v24 = *v20++;
          *(void *)uint64_t v23 = v24;
          v23 += 8;
          v22 -= 8;
        }
        while (v22);
      }
      unint64_t v25 = (char *)*a1;
      *a1 = v17;
      a1[1] = v19;
      a1[2] = v4;
      a1[3] = &v17[8 * v18];
      if (v25)
      {
        operator delete(v25);
        uint64_t v4 = (char *)a1[2];
      }
    }
    else
    {
      uint64_t v7 = v6 >> 3;
      BOOL v8 = v6 >> 3 < -1;
      uint64_t v9 = (v6 >> 3) + 2;
      if (v8) {
        uint64_t v10 = v9;
      }
      else {
        uint64_t v10 = v7 + 1;
      }
      uint64_t v11 = -(v10 >> 1);
      uint64_t v12 = v10 >> 1;
      uint64_t v13 = &v5[-8 * v12];
      int64_t v14 = v4 - v5;
      if (v4 != v5)
      {
        memmove(&v5[-8 * v12], v5, v4 - v5);
        uint64_t v4 = (char *)a1[1];
      }
      uint64_t v15 = &v4[8 * v11];
      uint64_t v4 = &v13[v14];
      a1[1] = v15;
      a1[2] = &v13[v14];
    }
  }
  *(void *)uint64_t v4 = *a2;
  a1[2] += 8;
}

void sub_100151B68(uint64_t a1, void *a2)
{
  uint64_t v4 = *(char **)(a1 + 8);
  if (v4 == *(char **)a1)
  {
    uint64_t v6 = *(unsigned char **)(a1 + 16);
    uint64_t v7 = *(unsigned char **)(a1 + 24);
    if (v6 >= v7)
    {
      if (v7 == v4) {
        unint64_t v11 = 1;
      }
      else {
        unint64_t v11 = (v7 - v4) >> 2;
      }
      uint64_t v12 = 2 * v11;
      uint64_t v13 = (char *)sub_100056BF0(*(void *)(a1 + 32), v11);
      uint64_t v5 = &v13[(v12 + 6) & 0xFFFFFFFFFFFFFFF8];
      uint64_t v15 = *(uint64_t **)(a1 + 8);
      unint64_t v16 = v5;
      uint64_t v17 = *(void *)(a1 + 16) - (void)v15;
      if (v17)
      {
        unint64_t v16 = &v5[v17 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v18 = 8 * (v17 >> 3);
        uint64_t v19 = v5;
        do
        {
          uint64_t v20 = *v15++;
          *(void *)uint64_t v19 = v20;
          v19 += 8;
          v18 -= 8;
        }
        while (v18);
      }
      uint64_t v21 = *(char **)a1;
      *(void *)a1 = v13;
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v16;
      *(void *)(a1 + 24) = &v13[8 * v14];
      if (v21)
      {
        operator delete(v21);
        uint64_t v5 = *(char **)(a1 + 8);
      }
    }
    else
    {
      uint64_t v8 = (v7 - v6) >> 3;
      if (v8 >= -1) {
        uint64_t v9 = v8 + 1;
      }
      else {
        uint64_t v9 = v8 + 2;
      }
      uint64_t v10 = v9 >> 1;
      uint64_t v5 = &v4[8 * (v9 >> 1)];
      if (v6 != v4)
      {
        memmove(&v4[8 * (v9 >> 1)], v4, v6 - v4);
        uint64_t v4 = *(char **)(a1 + 16);
      }
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = &v4[8 * v10];
    }
  }
  else
  {
    uint64_t v5 = *(char **)(a1 + 8);
  }
  *((void *)v5 - 1) = *a2;
  *(void *)(a1 + 8) -= 8;
}

uint64_t sub_100151C84(uint64_t a1, void *a2)
{
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  unint64_t v4 = a2[4];
  uint64_t v5 = a2[1];
  uint64_t v6 = a2[2];
  uint64_t v7 = (char *)(v5 + 8 * (v4 >> 8));
  if (v6 == v5)
  {
    uint64_t v8 = 0;
    unint64_t v11 = 0;
    uint64_t v10 = (char *)(v5 + 8 * ((a2[5] + v4) >> 8));
  }
  else
  {
    uint64_t v8 = (long long *)(*(void *)v7 + 16 * v4);
    unint64_t v9 = a2[5] + v4;
    uint64_t v10 = (char *)(v5 + 8 * (v9 >> 8));
    unint64_t v11 = (long long *)(*(void *)v10 + 16 * v9);
  }
  sub_100151D28((void *)a1, v7, v8, v10, v11);
  return a1;
}

void sub_100151D14(_Unwind_Exception *a1)
{
  sub_10003ACC4(v1);
  _Unwind_Resume(a1);
}

void *sub_100151D28(void *a1, char *a2, long long *a3, char *a4, long long *a5)
{
  if (a5 == a3) {
    unint64_t v5 = 0;
  }
  else {
    unint64_t v5 = (((uint64_t)a5 - *(void *)a4) >> 4) + 32 * (a4 - a2) - (((uint64_t)a3 - *(void *)a2) >> 4);
  }
  return sub_100151D5C(a1, a2, a3, v5);
}

void *sub_100151D5C(void *a1, void *a2, long long *a3, unint64_t a4)
{
  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  if (v9 == v8) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = 32 * (v9 - v8) - 1;
  }
  unint64_t v11 = a1[5] + a1[4];
  unint64_t v12 = v10 - v11;
  if (a4 > v12)
  {
    sub_100151E8C(a1, a4 - v12);
    uint64_t v8 = a1[1];
    uint64_t v9 = a1[2];
    unint64_t v11 = a1[4] + a1[5];
  }
  uint64_t v13 = (void *)(v8 + 8 * (v11 >> 8));
  if (v9 == v8) {
    uint64_t v14 = 0;
  }
  else {
    uint64_t v14 = *v13 + 16 * v11;
  }
  v22[0] = v8 + 8 * (v11 >> 8);
  v22[1] = v14;
  __n128 result = sub_1001513FC((uint64_t)v22, a4);
  while (v14 != v16)
  {
    uint64_t v17 = (_OWORD *)(v13 == result ? v16 : *v13 + 4096);
    if ((_OWORD *)v14 == v17)
    {
      uint64_t v17 = (_OWORD *)v14;
    }
    else
    {
      uint64_t v18 = (_OWORD *)v14;
      do
      {
        long long v19 = *a3++;
        *uint64_t v18 = v19;
        if ((long long *)((char *)a3 - *a2) == (long long *)4096)
        {
          uint64_t v20 = (long long *)a2[1];
          ++a2;
          a3 = v20;
        }
        ++v18;
      }
      while (v18 != v17);
    }
    a1[5] += ((uint64_t)v17 - v14) >> 4;
    if (v13 == result) {
      break;
    }
    uint64_t v21 = v13[1];
    ++v13;
    uint64_t v14 = v21;
  }
  return result;
}

void sub_100151E8C(void *a1, unint64_t a2)
{
  BOOL v3 = (char *)a1[2];
  uint64_t v4 = (uint64_t)&v3[-a1[1]];
  if (v4) {
    unint64_t v5 = a2;
  }
  else {
    unint64_t v5 = a2 + 1;
  }
  if ((_BYTE)v5) {
    unint64_t v6 = (v5 >> 8) + 1;
  }
  else {
    unint64_t v6 = v5 >> 8;
  }
  unint64_t v7 = a1[4];
  if (v6 >= v7 >> 8) {
    unint64_t v8 = v7 >> 8;
  }
  else {
    unint64_t v8 = v6;
  }
  if (v6 <= v7 >> 8)
  {
    for (a1[4] = v7 - (v8 << 8); v8; --v8)
    {
      uint64_t v16 = (void *)a1[1];
      uint64_t v19 = *v16;
      uint64_t v17 = (char *)(v16 + 1);
      uint64_t v18 = v19;
      a1[1] = v17;
      if (v3 == (char *)a1[3])
      {
        uint64_t v20 = (uint64_t)&v17[-*a1];
        if ((unint64_t)v17 <= *a1)
        {
          if (v3 == (char *)*a1) {
            unint64_t v28 = 1;
          }
          else {
            unint64_t v28 = (uint64_t)&v3[-*a1] >> 2;
          }
          int v29 = (char *)sub_100056BF0((uint64_t)(a1 + 3), v28);
          long long v31 = &v29[8 * (v28 >> 2)];
          long long v32 = (uint64_t *)a1[1];
          BOOL v3 = v31;
          uint64_t v33 = a1[2] - (void)v32;
          if (v33)
          {
            BOOL v3 = &v31[v33 & 0xFFFFFFFFFFFFFFF8];
            uint64_t v34 = 8 * (v33 >> 3);
            double v35 = &v29[8 * (v28 >> 2)];
            do
            {
              uint64_t v36 = *v32++;
              *(void *)double v35 = v36;
              v35 += 8;
              v34 -= 8;
            }
            while (v34);
          }
          long long v37 = (char *)*a1;
          *a1 = v29;
          a1[1] = v31;
          a1[2] = v3;
          a1[3] = &v29[8 * v30];
          if (v37)
          {
            operator delete(v37);
            BOOL v3 = (char *)a1[2];
          }
        }
        else
        {
          uint64_t v21 = v20 >> 3;
          BOOL v22 = v20 >> 3 < -1;
          uint64_t v23 = (v20 >> 3) + 2;
          if (v22) {
            uint64_t v24 = v23;
          }
          else {
            uint64_t v24 = v21 + 1;
          }
          unint64_t v25 = &v17[-8 * (v24 >> 1)];
          int64_t v26 = v3 - v17;
          if (v3 != v17)
          {
            memmove(&v17[-8 * (v24 >> 1)], v17, v3 - v17);
            BOOL v3 = (char *)a1[1];
          }
          uint64_t v27 = &v3[-8 * (v24 >> 1)];
          BOOL v3 = &v25[v26];
          a1[1] = v27;
          a1[2] = &v25[v26];
        }
      }
      *(void *)BOOL v3 = v18;
      BOOL v3 = (char *)(a1[2] + 8);
      a1[2] = v3;
    }
  }
  else
  {
    unint64_t v9 = v6 - v8;
    uint64_t v10 = a1[3] - *a1;
    if (v6 - v8 <= (v10 >> 3) - (v4 >> 3))
    {
      if (v9)
      {
        while (a1[3] != a1[2])
        {
          __p[0] = operator new(0x1000uLL);
          sub_100151818(a1, __p);
          --v6;
          if (!--v9) {
            goto LABEL_75;
          }
        }
        for (uint64_t i = 0; i != v9; ++i)
        {
          __p[0] = operator new(0x1000uLL);
          sub_100151930((uint64_t)a1, __p);
          if (a1[2] - a1[1] == 8) {
            uint64_t v64 = 255;
          }
          else {
            uint64_t v64 = 256;
          }
          uint64_t v65 = v64 + a1[4];
          a1[4] = v65;
        }
        unint64_t v8 = v6;
      }
      else
      {
LABEL_75:
        uint64_t v65 = a1[4];
      }
      a1[4] = v65 - (v8 << 8);
      if (v8)
      {
        uint64_t v66 = (char *)a1[2];
        do
        {
          int v67 = (void *)a1[1];
          uint64_t v70 = *v67;
          int v68 = (char *)(v67 + 1);
          uint64_t v69 = v70;
          a1[1] = v68;
          if (v66 == (char *)a1[3])
          {
            uint64_t v71 = (uint64_t)&v68[-*a1];
            if ((unint64_t)v68 <= *a1)
            {
              if (v66 == (char *)*a1) {
                unint64_t v78 = 1;
              }
              else {
                unint64_t v78 = (uint64_t)&v66[-*a1] >> 2;
              }
              unsigned int v79 = (char *)sub_100056BF0((uint64_t)(a1 + 3), v78);
              unsigned int v81 = &v79[8 * (v78 >> 2)];
              unsigned int v82 = (uint64_t *)a1[1];
              uint64_t v66 = v81;
              uint64_t v83 = a1[2] - (void)v82;
              if (v83)
              {
                uint64_t v66 = &v81[v83 & 0xFFFFFFFFFFFFFFF8];
                uint64_t v84 = 8 * (v83 >> 3);
                double v85 = &v79[8 * (v78 >> 2)];
                do
                {
                  uint64_t v86 = *v82++;
                  *(void *)double v85 = v86;
                  v85 += 8;
                  v84 -= 8;
                }
                while (v84);
              }
              uint64_t v87 = (char *)*a1;
              *a1 = v79;
              a1[1] = v81;
              a1[2] = v66;
              a1[3] = &v79[8 * v80];
              if (v87)
              {
                operator delete(v87);
                uint64_t v66 = (char *)a1[2];
              }
            }
            else
            {
              uint64_t v72 = v71 >> 3;
              BOOL v22 = v71 >> 3 < -1;
              uint64_t v73 = (v71 >> 3) + 2;
              if (v22) {
                uint64_t v74 = v73;
              }
              else {
                uint64_t v74 = v72 + 1;
              }
              uint64_t v75 = &v68[-8 * (v74 >> 1)];
              int64_t v76 = v66 - v68;
              if (v66 != v68)
              {
                memmove(&v68[-8 * (v74 >> 1)], v68, v66 - v68);
                uint64_t v66 = (char *)a1[1];
              }
              uint64_t v77 = &v66[-8 * (v74 >> 1)];
              uint64_t v66 = &v75[v76];
              a1[1] = v77;
              a1[2] = &v75[v76];
            }
          }
          *(void *)uint64_t v66 = v69;
          uint64_t v66 = (char *)(a1[2] + 8);
          a1[2] = v66;
          --v8;
        }
        while (v8);
      }
    }
    else
    {
      uint64_t v11 = v4 >> 3;
      unint64_t v12 = v10 >> 2;
      if (v12 <= v9 + v11) {
        unint64_t v13 = v9 + v11;
      }
      else {
        unint64_t v13 = v12;
      }
      unint64_t v14 = v11 - v8;
      long long v91 = a1 + 3;
      if (v13) {
        uint64_t v15 = (char *)sub_100056BF0((uint64_t)(a1 + 3), v13);
      }
      else {
        uint64_t v15 = 0;
      }
      uint64_t v38 = v8 << 8;
      __p[0] = v15;
      __p[1] = &v15[8 * v14];
      *(void **)&long long v90 = __p[1];
      *((void *)&v90 + 1) = &v15[8 * v13];
      do
      {
        uint64_t v88 = operator new(0x1000uLL);
        sub_100151A50(__p, &v88);
        --v9;
      }
      while (v9);
      if (v8)
      {
        uint64_t v39 = (void *)a1[1];
        uint64_t v40 = (char *)v90;
        do
        {
          if (v40 == *((char **)&v90 + 1))
          {
            int64_t v41 = (char *)__p[1] - (char *)__p[0];
            if (__p[1] <= __p[0])
            {
              if (v40 == __p[0]) {
                unint64_t v48 = 1;
              }
              else {
                unint64_t v48 = (v40 - (char *)__p[0]) >> 2;
              }
              uint64_t v49 = (char *)sub_100056BF0((uint64_t)v91, v48);
              __int16 v51 = (uint64_t *)__p[1];
              uint64_t v40 = &v49[8 * (v48 >> 2)];
              uint64_t v52 = v90 - (unint64_t)__p[1];
              if ((void *)v90 != __p[1])
              {
                uint64_t v40 = &v49[8 * (v48 >> 2) + (v52 & 0xFFFFFFFFFFFFFFF8)];
                uint64_t v53 = 8 * (v52 >> 3);
                long long v54 = &v49[8 * (v48 >> 2)];
                do
                {
                  uint64_t v55 = *v51++;
                  *(void *)long long v54 = v55;
                  v54 += 8;
                  v53 -= 8;
                }
                while (v53);
              }
              uint64_t v56 = __p[0];
              __p[0] = v49;
              __p[1] = &v49[8 * (v48 >> 2)];
              *(void *)&long long v90 = v40;
              *((void *)&v90 + 1) = &v49[8 * v50];
              if (v56)
              {
                operator delete(v56);
                uint64_t v40 = (char *)v90;
              }
            }
            else
            {
              uint64_t v42 = v41 >> 3;
              BOOL v22 = v41 >> 3 < -1;
              uint64_t v43 = (v41 >> 3) + 2;
              if (v22) {
                uint64_t v44 = v43;
              }
              else {
                uint64_t v44 = v42 + 1;
              }
              uint64_t v45 = (char *)__p[1] - 8 * (v44 >> 1);
              int64_t v46 = v40 - (char *)__p[1];
              if (v40 != __p[1])
              {
                memmove((char *)__p[1] - 8 * (v44 >> 1), __p[1], v40 - (char *)__p[1]);
                uint64_t v40 = (char *)__p[1];
              }
              uint64_t v47 = &v40[-8 * (v44 >> 1)];
              uint64_t v40 = &v45[v46];
              __p[1] = v47;
              *(void *)&long long v90 = &v45[v46];
            }
          }
          *(void *)uint64_t v40 = *v39;
          uint64_t v40 = (char *)(v90 + 8);
          *(void *)&long long v90 = v90 + 8;
          uint64_t v39 = (void *)(a1[1] + 8);
          a1[1] = v39;
          --v8;
        }
        while (v8);
      }
      unsigned int v57 = (void *)a1[2];
      uint64_t v58 = -7 - (void)v57;
      while (v57 != (void *)a1[1])
      {
        --v57;
        v58 += 8;
        sub_100151B68((uint64_t)__p, v57);
      }
      BOOL v59 = (char *)*a1;
      long long v60 = *(_OWORD *)__p;
      long long v61 = v90;
      __p[0] = *(void **)a1;
      __p[1] = v57;
      long long v62 = *((_OWORD *)a1 + 1);
      *(_OWORD *)a1 = v60;
      *((_OWORD *)a1 + 1) = v61;
      long long v90 = v62;
      a1[4] -= v38;
      if (v57 != (void *)v62) {
        *(void *)&long long v90 = v62 + (-(v62 + v58) & 0xFFFFFFFFFFFFFFF8);
      }
      if (v59) {
        operator delete(v59);
      }
    }
  }
}

void sub_1001523A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100152418(void *a1)
{
  unint64_t v2 = (void **)a1[1];
  BOOL v3 = (void **)a1[2];
  a1[5] = 0;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      BOOL v3 = (void **)a1[2];
      unint64_t v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 128;
  }
  else
  {
    if (v5 != 2) {
      goto LABEL_9;
    }
    uint64_t v6 = 256;
  }
  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    unint64_t v7 = *v2++;
    operator delete(v7);
  }

  return sub_10003ACC4((uint64_t)a1);
}

uint64_t sub_1001524C0(uint64_t a1, double *a2, uint64_t a3, double *a4, uint64_t a5, double *a6)
{
  double v6 = a4[1];
  double v7 = a6[1];
  if (v6 < a2[1])
  {
    if (v7 < v6)
    {
      long long v8 = *(_OWORD *)a2;
      *(_OWORD *)a2 = *(_OWORD *)a6;
      *(_OWORD *)a6 = v8;
      return 1;
    }
    long long v11 = *(_OWORD *)a2;
    *(_OWORD *)a2 = *(_OWORD *)a4;
    *(_OWORD *)a4 = v11;
    if (a6[1] >= a4[1]) {
      return 1;
    }
    long long v12 = *(_OWORD *)a4;
    *(_OWORD *)a4 = *(_OWORD *)a6;
    *(_OWORD *)a6 = v12;
    return 2;
  }
  if (v7 < v6)
  {
    long long v9 = *(_OWORD *)a4;
    *(_OWORD *)a4 = *(_OWORD *)a6;
    *(_OWORD *)a6 = v9;
    if (a4[1] >= a2[1]) {
      return 1;
    }
    long long v10 = *(_OWORD *)a2;
    *(_OWORD *)a2 = *(_OWORD *)a4;
    *(_OWORD *)a4 = v10;
    return 2;
  }
  return 0;
}

BOOL sub_10015257C(uint64_t a1, void ***a2)
{
  unint64_t v2 = *a2;
  if (*a2)
  {
    unint64_t v5 = (std::mutex *)(a1 + 16);
    std::mutex::lock((std::mutex *)(a1 + 16));
    double v6 = *a2;
    *a2 = 0;
    sub_100149BDC((void ***)(a1 + 8), v6);
    *(unsigned char *)a1 = 1;
    std::mutex::unlock(v5);
  }
  return v2 != 0;
}

void sub_1001525E4(uint64_t a1@<X0>, double *a2@<X1>, double **a3@<X8>)
{
  if (!*(void *)(a1 + 8)) {
    sub_100410BB4();
  }
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  double v4 = (*a2 + 180.0) / 10.0;
  int v5 = vcvtmd_s64_f64(v4);
  double v6 = (a2[1] + 180.0) / 10.0;
  int v7 = vcvtmd_s64_f64(v6);
  double v8 = v4 - (double)v5;
  double v9 = v6 - (double)v7;
  BOOL v10 = v8 >= 0.5;
  if (v8 < 0.5) {
    int v11 = 0;
  }
  else {
    int v11 = -1;
  }
  BOOL v12 = v9 >= 0.5;
  if (v9 < 0.5) {
    int v13 = 0;
  }
  else {
    int v13 = -1;
  }
  if (1.0 - v8 >= v8) {
    double v8 = 1.0 - v8;
  }
  double v116 = v8;
  if (1.0 - v9 >= v9) {
    double v14 = 1.0 - v9;
  }
  else {
    double v14 = v9;
  }
  v111 = (std::mutex *)(a1 + 16);
  std::mutex::lock((std::mutex *)(a1 + 16));
  if (*(void *)(*(void *)(a1 + 8) + 8) - **(void **)(a1 + 8) != 72) {
    __assert_rtn("getAoaHypotheses", "AoACalculator.cpp", 100, "num_LUT == kNumOfLUT");
  }
  uint64_t v15 = 0;
  int v16 = v10 + v5;
  uint64_t v123 = v12 + v7;
  int v124 = v10 + v5;
  int v17 = (v5 + v11 + 1) % 37;
  uint64_t v18 = (v12 + v7) % 37;
  int v119 = v16 % 37;
  uint64_t v19 = (v7 + v13 + 1) % 37;
  double v114 = v116 * v14 + (1.0 - v116) * v14;
  double v115 = (1.0 - v116) * v14;
  double v113 = v116 * (1.0 - v14);
  double v121 = 1.0 - v14;
  double v112 = (1.0 - v116) * (1.0 - v14);
  uint64_t v122 = v18;
  double v118 = v116 * v14;
  do
  {
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    v139 = 0;
    v140 = 0;
    v141 = 0;
    do
    {
      int v22 = (v21 + v15) % 3uLL;
      if (v20 >= v141)
      {
        uint64_t v24 = v139;
        uint64_t v25 = (v20 - v139) >> 2;
        unint64_t v26 = v25 + 1;
        if ((unint64_t)(v25 + 1) >> 62) {
          sub_1000267C4();
        }
        uint64_t v27 = v141 - v139;
        if ((v141 - v139) >> 1 > v26) {
          unint64_t v26 = v27 >> 1;
        }
        if ((unint64_t)v27 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v28 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v28 = v26;
        }
        if (v28)
        {
          int v29 = (char *)sub_10003B54C((uint64_t)&v141, v28);
          uint64_t v24 = v139;
          uint64_t v20 = v140;
        }
        else
        {
          int v29 = 0;
        }
        uint64_t v30 = &v29[4 * v25];
        *(_DWORD *)uint64_t v30 = v22;
        uint64_t v23 = v30 + 4;
        while (v20 != v24)
        {
          int v31 = *((_DWORD *)v20 - 1);
          v20 -= 4;
          *((_DWORD *)v30 - 1) = v31;
          v30 -= 4;
        }
        v139 = v30;
        v141 = &v29[4 * v28];
        if (v24) {
          operator delete(v24);
        }
      }
      else
      {
        *(_DWORD *)uint64_t v20 = v22;
        uint64_t v23 = v20 + 4;
      }
      v140 = v23;
      ++v21;
      uint64_t v20 = v23;
    }
    while (v21 != 3);
    long long v32 = (char *)operator new(0x10uLL);
    *(_DWORD *)long long v32 = v15;
    *(void *)(v32 + 4) = -1;
    *((_DWORD *)v32 + 3) = -1;
    uint64_t v33 = (unsigned __int16 *)(*(void *)(*(void *)(**(void **)(a1 + 8) + 24 * v15) + 24 * v124) + 4 * v123);
    int v34 = *v33;
    int v35 = v33[1];
    if (v34 == 0x7FFF || v35 == 0x7FFF) {
      goto LABEL_99;
    }
    uint64_t v37 = 0;
    double v38 = (double)(__int16)v34;
    double v39 = (double)(__int16)v35;
    while (1)
    {
      uint64_t v40 = (unsigned __int16 *)(*(void *)(*(void *)(**(void **)(a1 + 8) + 24 * *(int *)&v139[4 * v37])
                                           + 24 * v17)
                               + 4 * v122);
      int v41 = *v40;
      int v42 = v40[1];
      if (v41 != 0x7FFF && v42 != 0x7FFF) {
        break;
      }
      double v45 = NAN;
      double v44 = NAN;
LABEL_45:
      if (++v37 == 3) {
        goto LABEL_48;
      }
    }
    double v44 = (double)(__int16)v41;
    double v45 = (double)(__int16)v42;
    if (sub_100149AC4(v38, v39, (double)(__int16)v41, (double)(__int16)v42) > 30.0) {
      goto LABEL_45;
    }
    *((_DWORD *)v32 + 1) = *(_DWORD *)&v139[4 * v37];
LABEL_48:
    v132 = v32;
    uint64_t v46 = 0;
    while (2)
    {
      uint64_t v47 = (unsigned __int16 *)(*(void *)(*(void *)(**(void **)(a1 + 8) + 24 * *(int *)&v139[4 * v46])
                                           + 24 * v119)
                               + 4 * v19);
      int v48 = *v47;
      int v49 = v47[1];
      if (v48 == 0x7FFF || v49 == 0x7FFF)
      {
        double v52 = NAN;
        double v51 = NAN;
        goto LABEL_56;
      }
      double v51 = (double)(__int16)v48;
      double v52 = (double)(__int16)v49;
      if (sub_100149AC4(v38, v39, (double)(__int16)v48, (double)(__int16)v49) > 30.0)
      {
LABEL_56:
        if (++v46 == 3) {
          goto LABEL_59;
        }
        continue;
      }
      break;
    }
    *((_DWORD *)v132 + 2) = *(_DWORD *)&v139[4 * v46];
LABEL_59:
    uint64_t v53 = 0;
    while (2)
    {
      long long v54 = (unsigned __int16 *)(*(void *)(*(void *)(**(void **)(a1 + 8) + 24 * *(int *)&v139[4 * v53])
                                           + 24 * v17)
                               + 4 * v19);
      int v55 = *v54;
      int v56 = v54[1];
      if (v55 == 0x7FFF || v56 == 0x7FFF)
      {
        double v59 = NAN;
        double v58 = NAN;
        goto LABEL_67;
      }
      double v58 = (double)(__int16)v55;
      double v59 = (double)(__int16)v56;
      if (sub_100149AC4(v38, v39, (double)(__int16)v55, (double)(__int16)v56) > 30.0)
      {
LABEL_67:
        if (++v53 == 3) {
          goto LABEL_70;
        }
        continue;
      }
      break;
    }
    *((_DWORD *)v132 + 3) = *(_DWORD *)&v139[4 * v53];
LABEL_70:
    double __xa = sub_100030414(v38);
    double v133 = sub_100030414(v39);
    double v129 = sin(__xa);
    double v134 = cos(v133);
    double __xb = sub_100030414(v38);
    double v60 = sub_100030414(v39);
    double v125 = sin(__xb);
    double v61 = sin(v60);
    long long v32 = v132;
    double v62 = sub_100030414(v38);
    double v63 = v118;
    double v64 = v118 * v129 * v134;
    double v135 = v118 * v125 * v61;
    double __x = v64;
    double v65 = cos(v62);
    double v66 = v118 * v65;
    if (*((_DWORD *)v132 + 1) != -1)
    {
      double v130 = v118 * v65;
      double v67 = sub_100030414(v44);
      double v68 = sub_100030414(v45);
      double v126 = sin(v67);
      double v120 = cos(v68);
      double v69 = sub_100030414(v44);
      double v70 = sub_100030414(v45);
      double v71 = sub_100030414(v44);
      double __x = __x + v115 * v126 * v120;
      long double v72 = v115 * sin(v69);
      double v135 = v135 + v72 * sin(v70);
      double v66 = v130 + v115 * cos(v71);
      double v63 = v114;
    }
    if (*((_DWORD *)v132 + 2) == -1)
    {
      long double v81 = v135;
    }
    else
    {
      double v127 = v63;
      double v131 = v66;
      double v73 = sub_100030414(v51);
      double v74 = sub_100030414(v52);
      double v75 = sin(v73);
      double v76 = cos(v74);
      double v77 = sub_100030414(v51);
      double v78 = sub_100030414(v52);
      double v79 = sub_100030414(v51);
      double __x = __x + v113 * v75 * v76;
      long double v80 = v113 * sin(v77);
      long double v81 = v135 + v80 * sin(v78);
      double v66 = v131 + v113 * cos(v79);
      double v63 = v127 + v116 * v121;
    }
    if (*((_DWORD *)v132 + 3) == -1)
    {
      double v90 = __x;
    }
    else
    {
      double v128 = v63;
      double v82 = v66;
      double v83 = sub_100030414(v58);
      double v84 = sub_100030414(v59);
      double v85 = sin(v83);
      double v86 = cos(v84);
      double v87 = sub_100030414(v58);
      double v88 = sub_100030414(v59);
      double v89 = sub_100030414(v58);
      double v90 = __x + v112 * v85 * v86;
      long double v91 = v112 * sin(v87);
      long double v81 = v81 + v91 * sin(v88);
      double v66 = v82 + v112 * cos(v89);
      double v63 = v128 + (1.0 - v116) * v121;
    }
    if (v63 != 0.0)
    {
      double v92 = acos(v66 / v63);
      double v93 = sub_100030430(v92);
      double v94 = atan2(v81, v90);
      double v95 = sub_100030430(v94);
      if (v95 <= 180.0 && v93 >= 0.0 && v93 <= 140.0 && v95 >= 0.0)
      {
        long long v96 = a3;
        uint64_t v98 = a3[1];
        unint64_t v97 = (unint64_t)a3[2];
        if ((unint64_t)v98 >= v97)
        {
          uint64_t v100 = ((char *)v98 - (char *)*a3) >> 4;
          unint64_t v101 = v100 + 1;
          if ((unint64_t)(v100 + 1) >> 60) {
            sub_1000267C4();
          }
          uint64_t v102 = v97 - (void)*a3;
          if (v102 >> 3 > v101) {
            unint64_t v101 = v102 >> 3;
          }
          if ((unint64_t)v102 >= 0x7FFFFFFFFFFFFFF0) {
            unint64_t v103 = 0xFFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v103 = v101;
          }
          v104 = (char *)sub_10015344C((uint64_t)(a3 + 2), v103);
          v106 = (double *)&v104[16 * v100];
          double *v106 = v93;
          v106[1] = v95;
          v108 = (char *)*a3;
          v107 = (char *)a3[1];
          v109 = v106;
          if (v107 == (char *)*a3)
          {
            v110 = a3;
          }
          else
          {
            do
            {
              *((_OWORD *)v109 - 1) = *((_OWORD *)v107 - 1);
              v109 -= 2;
              v107 -= 16;
            }
            while (v107 != v108);
            v110 = a3;
            v107 = (char *)*a3;
          }
          v99 = v106 + 2;
          *v110 = v109;
          v110[1] = v106 + 2;
          v110[2] = (double *)&v104[16 * v105];
          if (v107)
          {
            operator delete(v107);
            long long v96 = a3;
          }
          else
          {
            long long v96 = v110;
          }
        }
        else
        {
          *uint64_t v98 = v93;
          v98[1] = v95;
          v99 = v98 + 2;
        }
        v96[1] = v99;
      }
    }
LABEL_99:
    operator delete(v32);
    if (v139) {
      operator delete(v139);
    }
    ++v15;
  }
  while (v15 != 3);
  std::mutex::unlock(v111);
}

void sub_100152F74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::mutex *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *__p)
{
  uint64_t v30 = *(void **)a19;
  if (*(void *)a19)
  {
    *(void *)(a19 + 8) = v30;
    operator delete(v30);
  }
  _Unwind_Resume(exception_object);
}

double sub_100153000(uint64_t a1, int a2)
{
  *(_DWORD *)a1 = a2;
  *(_DWORD *)(a1 + 4) = 998;
  *(unsigned char *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 850045863;
  double result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 73) = 0u;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 850045863;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(void *)(a1 + 160) = 0;
  return result;
}

void sub_10015303C(uint64_t a1@<X0>, int a2@<W1>, double *a3@<X2>, uint64_t a4@<X8>)
{
  if (a2 == 5)
  {
    int v7 = (std::mutex *)(a1 + 24);
    std::mutex::lock((std::mutex *)(a1 + 24));
    int v9 = *(unsigned __int8 *)(a1 + 8);
    uint64_t v8 = a1 + 8;
    std::mutex::unlock(v7);
    if (!v9)
    {
      BOOL v10 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        __int16 v16 = 0;
        int v11 = "#me,AoACalculator: reverse LUT of Channel 5 is not initialized.";
        BOOL v12 = (uint8_t *)&v16;
LABEL_11:
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, v11, v12, 2u);
        goto LABEL_12;
      }
      goto LABEL_12;
    }
  }
  else
  {
    int v13 = (std::mutex *)(a1 + 104);
    std::mutex::lock((std::mutex *)(a1 + 104));
    int v14 = *(unsigned __int8 *)(a1 + 88);
    uint64_t v8 = a1 + 88;
    std::mutex::unlock(v13);
    if (!v14)
    {
      BOOL v10 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        __int16 v15 = 0;
        int v11 = "#me,AoACalculator: reverse LUT of Channel 9 is not initialized.";
        BOOL v12 = (uint8_t *)&v15;
        goto LABEL_11;
      }
LABEL_12:
      *(void *)a4 = 0;
      *(void *)(a4 + 8) = 0;
      *(void *)(a4 + 16) = 0;
      return;
    }
  }

  sub_1001525E4(v8, a3, (double **)a4);
}

BOOL sub_100153174(uint64_t a1, int a2, void ***a3)
{
  if (a2 == 9)
  {
    int v7 = *a3;
    *a3 = 0;
    int v9 = v7;
    int v5 = &v9;
    BOOL v6 = sub_10015257C(a1 + 88, &v9);
    goto LABEL_5;
  }
  if (a2 == 5)
  {
    double v4 = *a3;
    *a3 = 0;
    BOOL v10 = v4;
    int v5 = &v10;
    BOOL v6 = sub_10015257C(a1 + 8, &v10);
LABEL_5:
    BOOL v3 = v6;
    sub_100149BDC(v5, 0);
  }
  return v3;
}

void sub_1001531F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

uint64_t sub_10015321C(uint64_t *a1, void *a2)
{
  uint64_t result = sub_100153294((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_100153294(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v14 = a6;
  *((void *)&v14 + 1) = a7;
  long long v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  v11[2] = &v14;
  if (a3 == a5)
  {
    uint64_t v9 = a6;
  }
  else
  {
    do
    {
      *(void *)(v7 - 24) = 0;
      *(void *)(v7 - 16) = 0;
      *(void *)(v7 - 8) = 0;
      long long v8 = *(_OWORD *)(a3 - 3);
      a3 -= 3;
      *(_OWORD *)(v7 - 24) = v8;
      *(void *)(v7 - 8) = a3[2];
      *a3 = 0;
      a3[1] = 0;
      a3[2] = 0;
      uint64_t v7 = *((void *)&v14 + 1) - 24;
      *((void *)&v14 + 1) -= 24;
    }
    while (a3 != a5);
    uint64_t v9 = v14;
  }
  char v12 = 1;
  sub_100153338((uint64_t)v11);
  return v9;
}

uint64_t sub_100153338(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_100153370(a1);
  }
  return a1;
}

void sub_100153370(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    BOOL v3 = *(void **)v1;
    if (*(void *)v1)
    {
      *(void *)(v1 + 8) = v3;
      operator delete(v3);
    }
    v1 += 24;
  }
}

uint64_t sub_1001533B8(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_1001533F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  while (v2 != a2)
  {
    uint64_t v5 = *(void **)(v2 - 24);
    *(void *)(a1 + 16) = v2 - 24;
    if (v5)
    {
      *(void *)(v2 - 16) = v5;
      operator delete(v5);
      uint64_t v2 = *(void *)(a1 + 16);
    }
    else
    {
      v2 -= 24;
    }
  }
}

void *sub_10015344C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60) {
    sub_1000257D8();
  }
  return operator new(16 * a2);
}

uint64_t sub_100153484()
{
  sub_10039D144();
  uint64_t v0 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v1 = *(_OWORD *)&v0->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v0->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v1;
  v0->__r_.__value_.__l.__size_ = 0;
  v0->__r_.__value_.__r.__words[2] = 0;
  v0->__r_.__value_.__r.__words[0] = 0;
  uint64_t v2 = std::string::append(&v38, ".bin");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  qword_1008A18C0 = v2->__r_.__value_.__r.__words[2];
  xmmword_1008A18B0 = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A18B0, (void *)&_mh_execute_header);
  sub_10039D144();
  double v4 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  uint64_t v6 = std::string::append(&v38, ".bin");
  long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  qword_1008A18D8 = v6->__r_.__value_.__r.__words[2];
  xmmword_1008A18C8 = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A18C8, (void *)&_mh_execute_header);
  sub_10039D144();
  long long v8 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  BOOL v10 = std::string::append(&v38, ".bin");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  qword_1008A18F0 = v10->__r_.__value_.__r.__words[2];
  xmmword_1008A18E0 = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A18E0, (void *)&_mh_execute_header);
  sub_10039D144();
  char v12 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  long long v14 = std::string::append(&v38, ".bin");
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  qword_1008A1908 = v14->__r_.__value_.__r.__words[2];
  xmmword_1008A18F8 = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A18F8, (void *)&_mh_execute_header);
  sub_10039D144();
  __int16 v16 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  uint64_t v18 = std::string::append(&v38, ".bin");
  long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  qword_1008A1920 = v18->__r_.__value_.__r.__words[2];
  xmmword_1008A1910 = v19;
  v18->__r_.__value_.__l.__size_ = 0;
  v18->__r_.__value_.__r.__words[2] = 0;
  v18->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1910, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v20 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v21;
  v20->__r_.__value_.__l.__size_ = 0;
  v20->__r_.__value_.__r.__words[2] = 0;
  v20->__r_.__value_.__r.__words[0] = 0;
  int v22 = std::string::append(&v38, ".bin");
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  qword_1008A1938 = v22->__r_.__value_.__r.__words[2];
  xmmword_1008A1928 = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1928, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v24 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v25;
  v24->__r_.__value_.__l.__size_ = 0;
  v24->__r_.__value_.__r.__words[2] = 0;
  v24->__r_.__value_.__r.__words[0] = 0;
  unint64_t v26 = std::string::append(&v38, ".bin");
  long long v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
  qword_1008A1950 = v26->__r_.__value_.__r.__words[2];
  xmmword_1008A1940 = v27;
  v26->__r_.__value_.__l.__size_ = 0;
  v26->__r_.__value_.__r.__words[2] = 0;
  v26->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1940, (void *)&_mh_execute_header);
  sub_10039D144();
  unint64_t v28 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v29;
  v28->__r_.__value_.__l.__size_ = 0;
  v28->__r_.__value_.__r.__words[2] = 0;
  v28->__r_.__value_.__r.__words[0] = 0;
  uint64_t v30 = std::string::append(&v38, ".bin");
  long long v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
  qword_1008A1968 = v30->__r_.__value_.__r.__words[2];
  xmmword_1008A1958 = v31;
  v30->__r_.__value_.__l.__size_ = 0;
  v30->__r_.__value_.__r.__words[2] = 0;
  v30->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1958, (void *)&_mh_execute_header);
  sub_10039D144();
  long long v32 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v32->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v33;
  v32->__r_.__value_.__l.__size_ = 0;
  v32->__r_.__value_.__r.__words[2] = 0;
  v32->__r_.__value_.__r.__words[0] = 0;
  int v34 = std::string::append(&v38, ".bin");
  long long v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
  qword_1008A1980 = v34->__r_.__value_.__r.__words[2];
  xmmword_1008A1970 = v35;
  v34->__r_.__value_.__l.__size_ = 0;
  v34->__r_.__value_.__r.__words[2] = 0;
  v34->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  return __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1970, (void *)&_mh_execute_header);
}

void sub_100153AB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_100153B28(uint64_t a1, uint64_t *a2)
{
  std::mutex::lock((std::mutex *)a1);
  uint64_t v4 = *a2;
  *a2 = 0;
  uint64_t v5 = *(void *)(a1 + 80);
  *(void *)(a1 + 8sub_100149BDC(&a9, 0) = v4;
  if (v5) {
    operator delete();
  }

  std::mutex::unlock((std::mutex *)a1);
}

void sub_100153B8C(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  std::mutex::lock((std::mutex *)a1);
  uint64_t v6 = *(void *)(a1 + 80);
  if (v6)
  {
    sub_100153C54(a1, a2, (uint64_t *)__p, *(float *)(v6 + 16680), *(float *)(v6 + 16684));
    sub_100154378(a1, (uint64_t *)__p, (double **)a3);
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
  }
  else
  {
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
  }
  std::mutex::unlock((std::mutex *)a1);
}

void sub_100153C28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  std::mutex::unlock(v11);
  _Unwind_Resume(a1);
}

void sub_100153C54(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  if (!*(void *)(a1 + 80)) {
    sub_100410BE0();
  }
  if (a2[1] - *a2 != 72 || *(void *)(*a2 + 8) - *(void *)*a2 != 80) {
    sub_100410C0C();
  }
  double v112 = 0;
  double v113 = 0;
  uint64_t v114 = 0;
  sub_100155700(v111, 3uLL, (uint64_t)&v112);
  for (unsigned int i = 0; i != 5; ++i)
  {
    if (i > 2) {
      int v11 = -3;
    }
    else {
      int v11 = 2;
    }
    uint64_t v12 = i + v11;
    long long v13 = v111[0];
    float64x2_t v14 = vmulq_n_f64(*(float64x2_t *)(*(void *)*a2 + 16 * v12), *(double *)(*(void *)(a1 + 88) + 8 * v12));
    long long v15 = v111[0][1];
    __int16 v16 = v111[0][2];
    if (v15 >= v16)
    {
      float64x2_t v93 = v14;
      uint64_t v18 = *v111[0];
      uint64_t v19 = ((char *)v15 - (char *)*v111[0]) >> 4;
      unint64_t v20 = v19 + 1;
      if ((unint64_t)(v19 + 1) >> 60) {
        sub_1000267C4();
      }
      uint64_t v21 = (char *)v16 - (char *)v18;
      if (v21 >> 3 > v20) {
        unint64_t v20 = v21 >> 3;
      }
      if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v22 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v22 = v20;
      }
      if (v22)
      {
        long long v23 = (char *)sub_10015344C((uint64_t)(v111[0] + 2), v22);
        uint64_t v18 = *v13;
        long long v15 = v13[1];
      }
      else
      {
        long long v23 = 0;
      }
      uint64_t v24 = (double *)&v23[16 * v19];
      *(float64x2_t *)uint64_t v24 = v93;
      long long v17 = v24 + 2;
      if (v15 != v18)
      {
        do
        {
          *((_OWORD *)v24 - 1) = *((_OWORD *)v15 - 1);
          v24 -= 2;
          v15 -= 2;
        }
        while (v15 != v18);
        uint64_t v18 = *v13;
      }
      *long long v13 = v24;
      v13[1] = v17;
      v13[2] = (double *)&v23[16 * v22];
      if (v18) {
        operator delete(v18);
      }
    }
    else
    {
      *(float64x2_t *)long long v15 = v14;
      long long v17 = v15 + 2;
    }
    v13[1] = v17;
    long long v25 = v111[0];
    float64x2_t v26 = vmulq_n_f64(*(float64x2_t *)(*(void *)(*a2 + 24) + 16 * v12), *(double *)(*(void *)(a1 + 88) + 8 * v12));
    long long v27 = v111[0][4];
    unint64_t v28 = v111[0][5];
    if (v27 >= v28)
    {
      float64x2_t v94 = v26;
      uint64_t v30 = v111[0] + 3;
      long long v31 = v111[0][3];
      uint64_t v32 = ((char *)v27 - (char *)v31) >> 4;
      unint64_t v33 = v32 + 1;
      if ((unint64_t)(v32 + 1) >> 60) {
        sub_1000267C4();
      }
      uint64_t v34 = (char *)v28 - (char *)v31;
      if (v34 >> 3 > v33) {
        unint64_t v33 = v34 >> 3;
      }
      if ((unint64_t)v34 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v35 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v35 = v33;
      }
      if (v35)
      {
        uint64_t v36 = (char *)sub_10015344C((uint64_t)(v111[0] + 5), v35);
        long long v31 = v25[3];
        long long v27 = v25[4];
      }
      else
      {
        uint64_t v36 = 0;
      }
      std::string v37 = (double *)&v36[16 * v32];
      *(float64x2_t *)std::string v37 = v94;
      long long v29 = v37 + 2;
      if (v27 != v31)
      {
        do
        {
          *((_OWORD *)v37 - 1) = *((_OWORD *)v27 - 1);
          v37 -= 2;
          v27 -= 2;
        }
        while (v27 != v31);
        long long v31 = *v30;
      }
      v25[3] = v37;
      v25[4] = v29;
      v25[5] = (double *)&v36[16 * v35];
      if (v31) {
        operator delete(v31);
      }
    }
    else
    {
      *(float64x2_t *)long long v27 = v26;
      long long v29 = v27 + 2;
    }
    v25[4] = v29;
    std::string v38 = v111[0];
    float64x2_t v39 = vmulq_n_f64(*(float64x2_t *)(*(void *)(*a2 + 48) + 16 * v12), *(double *)(*(void *)(a1 + 88) + 8 * v12));
    uint64_t v40 = v111[0][7];
    int v41 = v111[0][8];
    if (v40 >= v41)
    {
      float64x2_t v95 = v39;
      uint64_t v43 = v111[0] + 6;
      double v44 = v111[0][6];
      uint64_t v45 = ((char *)v40 - (char *)v44) >> 4;
      unint64_t v46 = v45 + 1;
      if ((unint64_t)(v45 + 1) >> 60) {
        sub_1000267C4();
      }
      uint64_t v47 = (char *)v41 - (char *)v44;
      if (v47 >> 3 > v46) {
        unint64_t v46 = v47 >> 3;
      }
      if ((unint64_t)v47 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v48 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v48 = v46;
      }
      if (v48)
      {
        int v49 = (char *)sub_10015344C((uint64_t)(v111[0] + 8), v48);
        double v44 = v38[6];
        uint64_t v40 = v38[7];
      }
      else
      {
        int v49 = 0;
      }
      uint64_t v50 = (double *)&v49[16 * v45];
      *(float64x2_t *)uint64_t v50 = v95;
      int v42 = v50 + 2;
      if (v40 != v44)
      {
        do
        {
          *((_OWORD *)v50 - 1) = *((_OWORD *)v40 - 1);
          v50 -= 2;
          v40 -= 2;
        }
        while (v40 != v44);
        double v44 = *v43;
      }
      v38[6] = v50;
      v38[7] = v42;
      v38[8] = (double *)&v49[16 * v48];
      if (v44) {
        operator delete(v44);
      }
    }
    else
    {
      *(float64x2_t *)uint64_t v40 = v39;
      int v42 = v40 + 2;
    }
    v38[7] = v42;
  }
  sub_1001547DC(v111[0], (double **)&__p);
  sub_1001547DC(v111[0] + 3, &v107);
  sub_1001547DC(v111[0] + 6, &v105);
  if (v110 - (unsigned char *)__p != 112 || (char *)v108 - (char *)v107 != 112 || (char *)v106 - (char *)v105 != 112) {
    __assert_rtn("nn_preprocess", "NeuralNetworkClassifier.cpp", 199, "fftout0.size() == kNumOfFrequencyBins && fftout1.size() == kNumOfFrequencyBins && fftout2.size() == kNumOfFrequencyBins");
  }
  double v103 = 0.0;
  sub_10015587C(a3, 0x2AuLL, &v103);
  double v96 = a5 * -0.0;
  double v51 = -a5;
  double v52 = a4 * -0.0;
  double v53 = -a4;
  long long v54 = v107;
  int v55 = (char *)__p;
  unint64_t v56 = 1;
  uint64_t v57 = 280;
  do
  {
    double v58 = -*(double *)&v55[v56 * 8];
    uint64_t v101 = *(void *)&v55[v56 * 8 - 8];
    double v102 = v58;
    double v103 = sub_100154A74(&v54[v56 - 1], (double *)&v101);
    uint64_t v104 = v59;
    double v97 = v96;
    double v98 = v51;
    sub_100154C40(&v97);
    uint64_t v99 = v60;
    uint64_t v100 = v61;
    double v62 = sub_100154A74(&v103, (double *)&v99);
    double v64 = v63;
    double v65 = hypot(v62, v63);
    if (v65 > 0.0)
    {
      double v62 = v62 / v65;
      double v64 = v64 / v65;
    }
    double v66 = (double *)(*a3 + v56 * 8);
    *(v66 - 1) = v62;
    double *v66 = v64;
    double v67 = -*(double *)((char *)__p + v56 * 8);
    uint64_t v101 = *(void *)((char *)__p + v56 * 8 - 8);
    double v102 = v67;
    double v103 = sub_100154A74(&v105[v56 - 1], (double *)&v101);
    uint64_t v104 = v68;
    double v97 = v52;
    double v98 = v53;
    sub_100154C40(&v97);
    uint64_t v99 = v69;
    uint64_t v100 = v70;
    double v71 = sub_100154A74(&v103, (double *)&v99);
    double v73 = v72;
    double v74 = hypot(v71, v72);
    if (v74 > 0.0)
    {
      double v71 = v71 / v74;
      double v73 = v73 / v74;
    }
    uint64_t v75 = *a3;
    unint64_t v76 = *a3 + v56 * 8;
    *(double *)(v76 + 104) = v71;
    *(double *)(v76 + 112) = v73;
    int v55 = (char *)__p;
    long double v77 = hypot(*(long double *)((char *)__p + v56 * 8 - 8), *(long double *)((char *)__p + v56 * 8));
    long double v78 = v77 * v77;
    long long v54 = v107;
    long double v79 = hypot(v107[v56 - 1], v107[v56]);
    long double v80 = v79 * v79;
    long double v81 = v105;
    long double v82 = hypot(v105[v56 - 1], v105[v56]);
    long double v83 = v82 * v82;
    long double v84 = v78 + 1.0e-12;
    long double v85 = log10(v80 / v84) * 10.0;
    long double v86 = log10(v83 / v84);
    double v87 = (double *)(v75 + v57);
    *(v87 - 7) = v85;
    double *v87 = v86 * 10.0;
    v56 += 2;
    v57 += 8;
  }
  while (v56 != 15);
  uint64_t v88 = 0;
  double v89 = 0.0;
  do
  {
    double v89 = v89 + *(double *)(v75 + v88) * *(double *)(v75 + v88);
    v88 += 8;
  }
  while (v88 != 224);
  uint64_t v90 = 0;
  double v91 = sqrt(v89 / 28.0);
  uint64_t v92 = *a3;
  do
  {
    if (v91 != 0.0) {
      *(double *)(v92 + v9sub_100149BDC(&a9, 0) = *(double *)(v92 + v90) / v91;
    }
    v90 += 8;
  }
  while (v90 != 224);
  if (v81)
  {
    v106 = v81;
    operator delete(v81);
    long long v54 = v107;
  }
  if (v54)
  {
    v108 = v54;
    operator delete(v54);
  }
  if (__p)
  {
    v110 = __p;
    operator delete(__p);
  }
  __p = v111;
  sub_100149DEC((void ***)&__p);
  if (v112)
  {
    double v113 = v112;
    operator delete(v112);
  }
}

void sub_1001542BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,char *a25,char *a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32)
{
  if (__p) {
    operator delete(__p);
  }
  if (a22) {
    operator delete(a22);
  }
  if (a25)
  {
    a26 = a25;
    operator delete(a25);
  }
  a25 = &a28;
  sub_100149DEC((void ***)&a25);
  if (a31)
  {
    a32 = (uint64_t)a31;
    operator delete(a31);
  }
  _Unwind_Resume(a1);
}

void sub_100154378(uint64_t a1@<X0>, uint64_t *a2@<X1>, double **a3@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 80);
  if (!v3) {
    sub_100410C38();
  }
  if (a2[1] - *a2 != 336) {
    sub_100410C64();
  }
  sub_100154D10(a2, v3, v34);
  sub_100154DA8((uint64_t *)v34, *(void *)(a1 + 80) + 15264, v33);
  sub_100154E48(v33, &v31);
  unint64_t v28 = 0;
  long long v29 = 0;
  uint64_t v30 = 0;
  sub_10015036C(&v28, v31, (uint64_t)v32, (v32 - (unsigned char *)v31) >> 3);
  if (v29 - v28 != 400) {
    __assert_rtn("nn_core", "NeuralNetworkClassifier.cpp", 262, "input_layer1.size() == kNNLayer1InputDimension");
  }
  sub_100154EC4((uint64_t *)&v28, *(void *)(a1 + 80) + 8600, v27);
  sub_100154F5C((uint64_t *)v27, *(void *)(a1 + 80) + 16072, v26);
  sub_100154E48((double **)v26, &v24);
  uint64_t v21 = 0;
  unint64_t v22 = 0;
  uint64_t v23 = 0;
  sub_10015036C(&v21, v24, (uint64_t)v25, (v25 - (unsigned char *)v24) >> 3);
  if (v22 - (unsigned char *)v21 != 200) {
    __assert_rtn("nn_core", "NeuralNetworkClassifier.cpp", 278, "input_layer2.size() == kNNLayer2InputDimension");
  }
  sub_100154FF8((uint64_t *)&v21, *(void *)(a1 + 80) + 13700, v20);
  sub_10015508C((uint64_t *)v20, *(void *)(a1 + 80) + 16480, v19);
  sub_100154E48((double **)v19, &v17);
  __p = 0;
  long long v15 = 0;
  uint64_t v16 = 0;
  sub_10015036C(&__p, v17, (uint64_t)v18, (v18 - (unsigned char *)v17) >> 3);
  if (v15 - (unsigned char *)__p != 96) {
    __assert_rtn("nn_core", "NeuralNetworkClassifier.cpp", 293, "input_layer3.size() == kNNLayer3InputDimension");
  }
  sub_100155128((float64x2_t **)&__p, *(void *)(a1 + 80) + 14948, a3);
  long long v8 = a3;
  uint64_t v6 = *a3;
  long long v7 = v8[1];
  if (v7 != v6)
  {
    uint64_t v9 = 0;
    uint64_t v10 = (unint64_t)(v7 - v6) <= 1 ? 1 : v7 - v6;
    double v11 = 0.0;
    do
    {
      long double v12 = exp(v6[v9]);
      v6[v9] = v12;
      double v11 = v11 + v12;
      ++v9;
    }
    while (v10 != v9);
    if (v11 > 0.0 && v7 != v6)
    {
      do
      {
        *uint64_t v6 = *v6 / v11;
        ++v6;
        --v10;
      }
      while (v10);
    }
  }
  if (__p)
  {
    long long v15 = __p;
    operator delete(__p);
  }
  if (v17)
  {
    uint64_t v18 = v17;
    operator delete(v17);
  }
  if (v19[0])
  {
    v19[1] = v19[0];
    operator delete(v19[0]);
  }
  if (v20[0])
  {
    v20[1] = v20[0];
    operator delete(v20[0]);
  }
  if (v21)
  {
    unint64_t v22 = v21;
    operator delete(v21);
  }
  if (v24)
  {
    long long v25 = v24;
    operator delete(v24);
  }
  if (v26[0])
  {
    v26[1] = v26[0];
    operator delete(v26[0]);
  }
  if (v27[0])
  {
    v27[1] = v27[0];
    operator delete(v27[0]);
  }
  if (v28)
  {
    long long v29 = v28;
    operator delete(v28);
  }
  if (v31)
  {
    uint64_t v32 = v31;
    operator delete(v31);
  }
  if (v33[0])
  {
    v33[1] = v33[0];
    operator delete(v33[0]);
  }
  if (v34[0])
  {
    v34[1] = v34[0];
    operator delete(v34[0]);
  }
}

void sub_1001546AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31)
{
  if (__p) {
    operator delete(__p);
  }
  if (a12) {
    operator delete(a12);
  }
  if (a15) {
    operator delete(a15);
  }
  if (a18) {
    operator delete(a18);
  }
  if (a21) {
    operator delete(a21);
  }
  if (a24) {
    operator delete(a24);
  }
  if (a27) {
    operator delete(a27);
  }
  if (a30) {
    operator delete(a30);
  }
  unint64_t v33 = *(void **)(v31 - 160);
  if (v33)
  {
    *(void *)(v31 - 152) = v33;
    operator delete(v33);
  }
  uint64_t v34 = *(void **)(v31 - 136);
  if (v34)
  {
    *(void *)(v31 - 128) = v34;
    operator delete(v34);
  }
  unint64_t v35 = *(void **)(v31 - 112);
  if (v35)
  {
    *(void *)(v31 - 104) = v35;
    operator delete(v35);
  }
  uint64_t v36 = *(void **)(v31 - 88);
  if (v36)
  {
    *(void *)(v31 - 8sub_100149BDC(&a9, 0) = v36;
    operator delete(v36);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001547DC(double **a1@<X0>, double **a2@<X8>)
{
  int v4 = 0;
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  uint64_t v5 = (uint64_t)(a2 + 2);
  int v6 = 13;
  do
  {
    long long v7 = *a1;
    double v8 = (double)v6 * -0.0;
    double v9 = (double)v6 * -0.392699082;
    v55[0] = v8;
    v55[1] = v9;
    sub_100154C40(v55);
    v56[0] = v10;
    v56[1] = v11;
    double v12 = sub_100154A74(v7 + 2, v56);
    double v47 = v13;
    double v48 = v12;
    double v14 = *v7;
    double v15 = v7[1];
    uint64_t v16 = *a1;
    v53[0] = v8 + v8;
    v53[1] = v9 + v9;
    sub_100154C40(v53);
    v54[0] = v17;
    v54[1] = v18;
    double v19 = sub_100154A74(v16 + 4, v54);
    double v21 = v20;
    unint64_t v22 = *a1;
    v51[0] = v8 * 14.0;
    v51[1] = v9 * 14.0;
    sub_100154C40(v51);
    v52[0] = v23;
    v52[1] = v24;
    double v25 = sub_100154A74(v22 + 6, v52);
    double v27 = v26;
    unint64_t v28 = *a1;
    v49[0] = v8 * 15.0;
    v49[1] = v9 * 15.0;
    sub_100154C40(v49);
    v50[0] = v29;
    v50[1] = v30;
    double v31 = sub_100154A74(v28 + 8, v50);
    double v32 = v47 + v15 + v21 + v27;
    double v33 = v48 + v14 + v19 + v25 + v31;
    double v35 = v32 + v34;
    std::string v37 = a2[1];
    unint64_t v36 = (unint64_t)a2[2];
    if ((unint64_t)v37 >= v36)
    {
      float64x2_t v39 = *a2;
      uint64_t v40 = ((char *)v37 - (char *)*a2) >> 4;
      unint64_t v41 = v40 + 1;
      if ((unint64_t)(v40 + 1) >> 60) {
        sub_1000267C4();
      }
      uint64_t v42 = v36 - (void)v39;
      if (v42 >> 3 > v41) {
        unint64_t v41 = v42 >> 3;
      }
      if ((unint64_t)v42 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v43 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v43 = v41;
      }
      if (v43)
      {
        double v44 = (char *)sub_10015344C(v5, v43);
        float64x2_t v39 = *a2;
        std::string v37 = a2[1];
      }
      else
      {
        double v44 = 0;
      }
      uint64_t v45 = (double *)&v44[16 * v40];
      *uint64_t v45 = v33;
      v45[1] = v35;
      unint64_t v46 = v45;
      if (v37 != v39)
      {
        do
        {
          *((_OWORD *)v46 - 1) = *((_OWORD *)v37 - 1);
          v46 -= 2;
          v37 -= 2;
        }
        while (v37 != v39);
        float64x2_t v39 = *a2;
      }
      std::string v38 = v45 + 2;
      *a2 = v46;
      a2[1] = v45 + 2;
      a2[2] = (double *)&v44[16 * v43];
      if (v39) {
        operator delete(v39);
      }
    }
    else
    {
      double *v37 = v33;
      v37[1] = v35;
      std::string v38 = v37 + 2;
    }
    a2[1] = v38;
    if (v6 + 1 <= 0) {
      int v6 = -(-(v6 + 1) & 0xF);
    }
    else {
      int v6 = (v6 + 1) & 0xF;
    }
    ++v4;
  }
  while (v4 != 7);
}

void sub_100154A44(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

double sub_100154A74(double *a1, double *a2)
{
  return *a1 * *a2 - a1[1] * a2[1];
}

void sub_100154C40(double *a1)
{
  long double v1 = *a1;
  double v2 = a1[1];
  if (v2 == 0.0)
  {
    exp(v1);
    return;
  }
  if (fabs(v1) == INFINITY)
  {
    if (v1 >= 0.0)
    {
      if ((*(void *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000) {
        return;
      }
    }
    else if ((*(void *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      double v2 = 1.0;
    }
  }
  double v3 = v2;
  exp(v1);
  __sincos_stret(v3);
}

double sub_100154D10@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v13 = 0;
  uint64_t v5 = sub_10015587C(a3, 0x32uLL, &v13);
  uint64_t v6 = 0;
  uint64_t v7 = *a1;
  uint64_t v8 = a2 + 8400;
  uint64_t v9 = *v5;
  do
  {
    uint64_t v10 = 0;
    double v11 = 0.0;
    do
    {
      double v11 = v11 + *(double *)(v7 + 8 * v10) * *(float *)(a2 + 4 * v10);
      ++v10;
    }
    while (v10 != 42);
    double result = v11 + *(float *)(v8 + 4 * v6);
    *(double *)(v9 + 8 * v6++) = result;
    a2 += 168;
  }
  while (v6 != 50);
  return result;
}

double sub_100154DA8@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v11 = 0;
  uint64_t v5 = sub_10015587C(a3, 0x32uLL, &v11);
  uint64_t v6 = 0;
  uint64_t v7 = *a1;
  uint64_t v8 = *v5;
  uint64_t v9 = (float *)a2;
  do
  {
    double result = v9[100] + (*(double *)(v7 + v6) - *v9) / sqrt(*(double *)(a2 + 800) + v9[50]) * v9[150];
    *(double *)(v8 + v6) = result;
    v6 += 8;
    ++v9;
  }
  while (v6 != 400);
  return result;
}

void sub_100154E48(double **a1@<X0>, void *a2@<X8>)
{
  int v4 = *a1;
  double v3 = a1[1];
  unint64_t v5 = v3 - *a1;
  uint64_t v10 = 0;
  uint64_t v6 = (long double **)sub_10015587C(a2, v5, &v10);
  if (v3 != v4)
  {
    uint64_t v7 = *a1;
    uint64_t v8 = *v6;
    if (v5 <= 1) {
      unint64_t v5 = 1;
    }
    do
    {
      long double v9 = *v7++;
      *v8++ = tanh(v9);
      --v5;
    }
    while (v5);
  }
}

double sub_100154EC4@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v13 = 0;
  unint64_t v5 = sub_10015587C(a3, 0x19uLL, &v13);
  uint64_t v6 = 0;
  uint64_t v7 = *a1;
  uint64_t v8 = a2 + 5000;
  uint64_t v9 = *v5;
  do
  {
    uint64_t v10 = 0;
    double v11 = 0.0;
    do
    {
      double v11 = v11 + *(double *)(v7 + 8 * v10) * *(float *)(a2 + 4 * v10);
      ++v10;
    }
    while (v10 != 50);
    double result = v11 + *(float *)(v8 + 4 * v6);
    *(double *)(v9 + 8 * v6++) = result;
    a2 += 200;
  }
  while (v6 != 25);
  return result;
}

double sub_100154F5C@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v14 = 0;
  unint64_t v5 = sub_10015587C(a3, 0x19uLL, &v14);
  uint64_t v6 = 0;
  uint64_t v7 = *a1;
  uint64_t v8 = (float *)(a2 + 200);
  uint64_t v9 = *v5;
  do
  {
    double v10 = (*(double *)(v7 + v6) - *(v8 - 50)) / sqrt(*(double *)(a2 + 400) + *(v8 - 25));
    double v11 = v8[25];
    float v12 = *v8++;
    double result = v12 + v10 * v11;
    *(double *)(v9 + v6) = result;
    v6 += 8;
  }
  while (v6 != 200);
  return result;
}

double sub_100154FF8@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v13 = 0;
  unint64_t v5 = sub_10015587C(a3, 0xCuLL, &v13);
  uint64_t v6 = 0;
  uint64_t v7 = *a1;
  uint64_t v8 = a2 + 1200;
  uint64_t v9 = *v5;
  do
  {
    uint64_t v10 = 0;
    double v11 = 0.0;
    do
    {
      double v11 = v11 + *(double *)(v7 + 8 * v10) * *(float *)(a2 + 4 * v10);
      ++v10;
    }
    while (v10 != 25);
    double result = v11 + *(float *)(v8 + 4 * v6);
    *(double *)(v9 + 8 * v6++) = result;
    a2 += 100;
  }
  while (v6 != 12);
  return result;
}

double sub_10015508C@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v14 = 0;
  unint64_t v5 = sub_10015587C(a3, 0xCuLL, &v14);
  uint64_t v6 = 0;
  uint64_t v7 = *a1;
  uint64_t v8 = (float *)(a2 + 96);
  uint64_t v9 = *v5;
  do
  {
    double v10 = (*(double *)(v7 + v6) - *(v8 - 24)) / sqrt(*(double *)(a2 + 192) + *(v8 - 12));
    double v11 = v8[12];
    float v12 = *v8++;
    double result = v12 + v10 * v11;
    *(double *)(v9 + v6) = result;
    v6 += 8;
  }
  while (v6 != 96);
  return result;
}

double sub_100155128@<D0>(float64x2_t **a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v19 = 0;
  unint64_t v5 = sub_10015587C(a3, 6uLL, &v19);
  uint64_t v6 = 0;
  uint64_t v7 = *a1;
  uint64_t v8 = a2 + 288;
  uint64_t v9 = *v5;
  do
  {
    uint64_t v10 = 0;
    double v11 = 0.0;
    float v12 = v7;
    do
    {
      float64x2_t v13 = *v12;
      float64x2_t v14 = v12[1];
      v12 += 2;
      float32x4_t v15 = *(float32x4_t *)(a2 + v10);
      float64x2_t v16 = vmulq_f64(v14, vcvt_hight_f64_f32(v15));
      float64x2_t v17 = vmulq_f64(v13, vcvtq_f64_f32(*(float32x2_t *)v15.f32));
      double v11 = v11 + v17.f64[0] + v17.f64[1] + v16.f64[0] + v16.f64[1];
      v10 += 16;
    }
    while (v10 != 48);
    double result = v11 + *(float *)(v8 + 4 * v6);
    *(double *)(v9 + 8 * v6++) = result;
    a2 += 48;
  }
  while (v6 != 6);
  return result;
}

uint64_t sub_1001551E0(uint64_t a1, int a2)
{
  *(_DWORD *)a1 = a2;
  *(_DWORD *)(a1 + 4) = 998;
  *(void *)(a1 + 8) = 0;
  sub_100155670(a1 + 16);
  sub_100155670(a1 + 128);
  int v3 = *(_DWORD *)a1;
  if (*(int *)a1 <= 99)
  {
    int v4 = &unk_1004B5608;
    switch(v3)
    {
      case 0:
      case 1:
      case 2:
        goto LABEL_7;
      case 3:
      case 4:
      case 5:
      case 6:
        int v4 = &unk_1004B5708;
        goto LABEL_7;
      case 7:
      case 8:
      case 9:
      case 10:
        int v4 = &unk_1004B5808;
        goto LABEL_7;
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 23:
        goto LABEL_6;
      default:
        return a1;
    }
  }
  else
  {
    if (v3 > 199)
    {
      if ((v3 - 200) >= 2 && v3 != 997 && v3 != 999) {
        return a1;
      }
    }
    else if ((v3 - 100) >= 0x16)
    {
      return a1;
    }
LABEL_6:
    int v4 = 0;
LABEL_7:
    *(void *)(a1 + 8) = v4;
  }
  return a1;
}

void sub_1001552B8(_Unwind_Exception *a1)
{
  sub_10015532C(v1);
  _Unwind_Resume(a1);
}

void sub_10015532C(std::mutex *this)
{
  double v2 = *(void **)&this[1].__m_.__opaque[16];
  if (v2)
  {
    *(void *)&this[1].__m_.__opaque[24] = v2;
    operator delete(v2);
  }
  uint64_t v3 = *(void *)&this[1].__m_.__opaque[8];
  *(void *)&this[1].__m_.__opaque[8] = 0;
  if (v3) {
    operator delete();
  }

  std::mutex::~mutex(this);
}

void sub_100155394(uint64_t a1@<X0>, void *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  if (a3 == 5) {
    uint64_t v4 = a1 + 16;
  }
  else {
    uint64_t v4 = a1 + 128;
  }
  sub_100153B8C(v4, a2, a4);
}

unint64_t sub_1001553A8(uint64_t a1, double a2, double a3)
{
  uint64_t v3 = *(const mach_header_64 **)(a1 + 8);
  if (v3)
  {
    if ((*(double *)&v3->magic > a3
       || *(double *)&v3->cpusubtype < a3
       || *(double *)&v3->ncmds > a2
       || *(double *)&v3->flags < a2)
      && (*(double *)&v3[1].magic > a3
       || *(double *)&v3[1].cpusubtype < a3
       || *(double *)&v3[1].ncmds > a2
       || *(double *)&v3[1].flags < a2)
      && (*(double *)&v3[2].magic > a3
       || *(double *)&v3[2].cpusubtype < a3
       || *(double *)&v3[2].ncmds > a2
       || *(double *)&v3[2].flags < a2))
    {
      if (*(double *)&v3[3].magic > a3
        || *(double *)&v3[3].cpusubtype < a3
        || *(double *)&v3[3].ncmds > a2
        || *(double *)&v3[3].flags < a2)
      {
        if (*(double *)&v3[4].magic > a3
          || *(double *)&v3[4].cpusubtype < a3
          || *(double *)&v3[4].ncmds > a2
          || *(double *)&v3[4].flags < a2)
        {
          if (*(double *)&v3[5].magic > a3
            || *(double *)&v3[5].cpusubtype < a3
            || *(double *)&v3[5].ncmds > a2
            || *(double *)&v3[5].flags < a2)
          {
            if (*(double *)&v3[6].magic > a3
              || *(double *)&v3[6].cpusubtype < a3
              || *(double *)&v3[6].ncmds > a2
              || *(double *)&v3[6].flags < a2)
            {
              if (*(double *)&v3[7].magic > a3
                || *(double *)&v3[7].cpusubtype < a3
                || *(double *)&v3[7].ncmds > a2
                || *(double *)&v3[7].flags < a2)
              {
                sub_100410C90();
              }
              uint64_t v3 = &_mh_execute_header;
              uint64_t v4 = 6;
            }
            else
            {
              uint64_t v3 = &_mh_execute_header;
              uint64_t v4 = 5;
            }
          }
          else
          {
            uint64_t v3 = &_mh_execute_header;
            uint64_t v4 = 4;
          }
        }
        else
        {
          uint64_t v3 = &_mh_execute_header;
          uint64_t v4 = 3;
        }
      }
      else
      {
        uint64_t v3 = &_mh_execute_header;
        uint64_t v4 = 2;
      }
    }
    else
    {
      uint64_t v3 = &_mh_execute_header;
      uint64_t v4 = 1;
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  return v4 | (unint64_t)v3;
}

uint64_t sub_100155580(uint64_t a1, uint64_t *a2, uint64_t *a3, unsigned int a4)
{
  atomic_store(a4, (unsigned int *)(a1 + 4));
  uint64_t v6 = *a2;
  *a2 = 0;
  uint64_t v10 = v6;
  sub_100153B28(a1 + 16, &v10);
  if (v10) {
    operator delete();
  }
  uint64_t v7 = *a3;
  *a3 = 0;
  uint64_t v9 = v7;
  sub_100153B28(a1 + 128, &v9);
  uint64_t result = v9;
  if (v9)
  {
    operator delete();
  }
  return result;
}

void sub_100155638(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a9) {
    operator delete();
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100155670(uint64_t a1)
{
  *(void *)a1 = 850045863;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 4sub_100149BDC(&a9, 0) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(void *)(a1 + 104) = 0;
  double v2 = operator new(0x28uLL);
  *(void *)(a1 + 96) = v2 + 5;
  *(void *)(a1 + 104) = v2 + 5;
  v2[4] = 0;
  *(_OWORD *)double v2 = xmmword_1004B5908;
  *((_OWORD *)v2 + 1) = unk_1004B5918;
  *(void *)(a1 + 88) = v2;
  return a1;
}

void sub_1001556E8(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8sub_100149BDC(&a9, 0) = 0;
  std::mutex::~mutex((std::mutex *)v1);
  _Unwind_Resume(a1);
}

void *sub_100155700(void *a1, unint64_t a2, uint64_t a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_100026770(a1, a2);
    uint64_t v6 = (void *)a1[1];
    uint64_t v7 = 3 * a2;
    uint64_t v8 = &v6[3 * a2];
    uint64_t v9 = 8 * v7;
    do
    {
      *uint64_t v6 = 0;
      v6[1] = 0;
      _DWORD v6[2] = 0;
      sub_1001557BC(v6, *(const void **)a3, *(void *)(a3 + 8), (uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 4);
      v6 += 3;
      v9 -= 24;
    }
    while (v9);
    a1[1] = v8;
  }
  return a1;
}

void sub_10015579C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void *sub_1001557BC(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    uint64_t result = sub_100155838(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_10015581C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_100155838(void *a1, unint64_t a2)
{
  if (a2 >> 60) {
    sub_1000267C4();
  }
  uint64_t result = (char *)sub_10015344C((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[16 * v4];
  return result;
}

void *sub_10015587C(void *a1, unint64_t a2, void *a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1001503E8(a1, a2);
    uint64_t v6 = (void *)a1[1];
    uint64_t v7 = &v6[a2];
    uint64_t v8 = 8 * a2;
    do
    {
      *v6++ = *a3;
      v8 -= 8;
    }
    while (v8);
    a1[1] = v7;
  }
  return a1;
}

void sub_1001558E4(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100155900()
{
  sub_10039D144();
  uint64_t v0 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v1 = *(_OWORD *)&v0->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v0->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v1;
  v0->__r_.__value_.__l.__size_ = 0;
  v0->__r_.__value_.__r.__words[2] = 0;
  v0->__r_.__value_.__r.__words[0] = 0;
  double v2 = std::string::append(&v38, ".bin");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  qword_1008A1998 = v2->__r_.__value_.__r.__words[2];
  xmmword_1008A1988 = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1988, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v4 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  uint64_t v6 = std::string::append(&v38, ".bin");
  long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  qword_1008A19B0 = v6->__r_.__value_.__r.__words[2];
  xmmword_1008A19A0 = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A19A0, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v8 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  uint64_t v10 = std::string::append(&v38, ".bin");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  qword_1008A19C8 = v10->__r_.__value_.__r.__words[2];
  xmmword_1008A19B8 = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A19B8, (void *)&_mh_execute_header);
  sub_10039D144();
  float v12 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  float64x2_t v14 = std::string::append(&v38, ".bin");
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  qword_1008A19E0 = v14->__r_.__value_.__r.__words[2];
  xmmword_1008A19D0 = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A19D0, (void *)&_mh_execute_header);
  sub_10039D144();
  float64x2_t v16 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  double v18 = std::string::append(&v38, ".bin");
  long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  qword_1008A19F8 = v18->__r_.__value_.__r.__words[2];
  xmmword_1008A19E8 = v19;
  v18->__r_.__value_.__l.__size_ = 0;
  v18->__r_.__value_.__r.__words[2] = 0;
  v18->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A19E8, (void *)&_mh_execute_header);
  sub_10039D144();
  double v20 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v21;
  v20->__r_.__value_.__l.__size_ = 0;
  v20->__r_.__value_.__r.__words[2] = 0;
  v20->__r_.__value_.__r.__words[0] = 0;
  unint64_t v22 = std::string::append(&v38, ".bin");
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  qword_1008A1A10 = v22->__r_.__value_.__r.__words[2];
  xmmword_1008A1A00 = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1A00, (void *)&_mh_execute_header);
  sub_10039D144();
  double v24 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v25;
  v24->__r_.__value_.__l.__size_ = 0;
  v24->__r_.__value_.__r.__words[2] = 0;
  v24->__r_.__value_.__r.__words[0] = 0;
  double v26 = std::string::append(&v38, ".bin");
  long long v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
  qword_1008A1A28 = v26->__r_.__value_.__r.__words[2];
  xmmword_1008A1A18 = v27;
  v26->__r_.__value_.__l.__size_ = 0;
  v26->__r_.__value_.__r.__words[2] = 0;
  v26->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1A18, (void *)&_mh_execute_header);
  sub_10039D144();
  unint64_t v28 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v29;
  v28->__r_.__value_.__l.__size_ = 0;
  v28->__r_.__value_.__r.__words[2] = 0;
  v28->__r_.__value_.__r.__words[0] = 0;
  double v30 = std::string::append(&v38, ".bin");
  long long v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
  qword_1008A1A40 = v30->__r_.__value_.__r.__words[2];
  xmmword_1008A1A30 = v31;
  v30->__r_.__value_.__l.__size_ = 0;
  v30->__r_.__value_.__r.__words[2] = 0;
  v30->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1A30, (void *)&_mh_execute_header);
  sub_10039D144();
  double v32 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v32->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v33;
  v32->__r_.__value_.__l.__size_ = 0;
  v32->__r_.__value_.__r.__words[2] = 0;
  v32->__r_.__value_.__r.__words[0] = 0;
  double v34 = std::string::append(&v38, ".bin");
  long long v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
  qword_1008A1A58 = v34->__r_.__value_.__r.__words[2];
  xmmword_1008A1A48 = v35;
  v34->__r_.__value_.__l.__size_ = 0;
  v34->__r_.__value_.__r.__words[2] = 0;
  v34->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  return __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1A48, (void *)&_mh_execute_header);
}

void sub_100155F30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100155FA4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  *(_DWORD *)a1 = *((_DWORD *)sub_100007D00() + 144);
  if (byte_10089C8A7 >= 0) {
    uint64_t v6 = (const char *)&qword_10089C890;
  }
  else {
    uint64_t v6 = (const char *)qword_10089C890;
  }
  *(void *)(a1 + 8) = dispatch_queue_create(v6, 0);
  if (byte_10089C8C7 >= 0) {
    long long v7 = (const char *)&qword_10089C8B0;
  }
  else {
    long long v7 = (const char *)qword_10089C8B0;
  }
  *(void *)(a1 + 16) = dispatch_queue_create(v7, 0);
  sub_100158AF8(a1 + 24, a2);
  uint64_t v9 = *a3;
  uint64_t v8 = a3[1];
  *(void *)(a1 + 8sub_100149BDC(&a9, 0) = 0;
  *(void *)(a1 + 88) = v9;
  *(void *)(a1 + 96) = v8;
  if (v8) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
  }
  sub_100156078(a1);
  return a1;
}

void sub_10015605C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100156078(uint64_t a1)
{
  double v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#accessory,download,startup or file access allowed", buf, 2u);
  }
  long long v3 = *(NSObject **)(a1 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10015613C;
  block[3] = &unk_1008466D8;
  block[4] = a1;
  dispatch_async(v3, block);
}

void sub_10015613C(uint64_t a1)
{
}

void sub_100156144(dispatch_queue_t *a1)
{
  dispatch_assert_queue_V2(a1[1]);
  sub_100156580((uint64_t)a1, (const char *)qword_10089C950);
  sub_1001566FC(*(_DWORD *)a1, 0, 1, &v18);
  double v2 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    sub_10039D144();
    if (v17 >= 0) {
      p_p = &__p;
    }
    else {
      p_p = __p;
    }
    uint64_t v4 = &v18;
    if ((v18.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      uint64_t v4 = (std::string *)v18.__r_.__value_.__r.__words[0];
    }
    LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)p_p;
    WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#accessory,to download,accessory %s,decompressed nn coef file %s", (uint8_t *)&buf, 0x16u);
    if (v17 < 0) {
      operator delete(__p);
    }
  }

  dispatch_assert_queue_V2(a1[1]);
  if ((sub_100156D78((uint64_t)a1, 0, 1) & 1) == 0) {
    sub_100156A5C((uint64_t)a1, 0, 1);
  }
  sub_10039D2E0((_DWORD *)*(unsigned int *)a1, &__p);
  long long v5 = (unsigned int *)__p;
  uint64_t v6 = v16;
  if (__p != v16)
  {
    do
    {
      unsigned int v7 = *v5;
      sub_1001566FC(*(_DWORD *)a1, *v5, 0, &buf);
      uint64_t v8 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        sub_10039D144();
        if ((v14.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          uint64_t v9 = &v14;
        }
        else {
          uint64_t v9 = (std::string *)v14.__r_.__value_.__r.__words[0];
        }
        p_std::string buf = &buf;
        if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          p_std::string buf = (std::string *)buf.__r_.__value_.__r.__words[0];
        }
        *(_DWORD *)long long v19 = 136315394;
        *(void *)&v19[4] = v9;
        __int16 v20 = 2080;
        long long v21 = p_buf;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#accessory,to download,accessory %s,decompressed pdoa correction file %s", v19, 0x16u);
        if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v14.__r_.__value_.__l.__data_);
        }
      }

      dispatch_assert_queue_V2(a1[1]);
      if ((sub_100156D78((uint64_t)a1, v7, 0) & 1) == 0) {
        sub_100156A5C((uint64_t)a1, v7, 0);
      }
      sub_1001566FC(*(_DWORD *)a1, v7, 1, &v14);
      long long v11 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        sub_10039D144();
        float v12 = v19;
        if (v22 < 0) {
          float v12 = *(unsigned char **)v19;
        }
        if ((v14.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          long long v13 = &v14;
        }
        else {
          long long v13 = (std::string *)v14.__r_.__value_.__r.__words[0];
        }
        *(_DWORD *)long long v23 = 136315394;
        double v24 = v12;
        __int16 v25 = 2080;
        double v26 = v13;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "#accessory,to download,accessory %s,decompressed nn coef file %s", v23, 0x16u);
        if (v22 < 0) {
          operator delete(*(void **)v19);
        }
      }

      dispatch_assert_queue_V2(a1[1]);
      if ((sub_100156D78((uint64_t)a1, v7, 1) & 1) == 0) {
        sub_100156A5C((uint64_t)a1, v7, 1);
      }
      if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v14.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(buf.__r_.__value_.__l.__data_);
      }
      ++v5;
    }
    while (v5 != v6);
    long long v5 = (unsigned int *)__p;
  }
  if (v5)
  {
    float64x2_t v16 = v5;
    operator delete(v5);
  }
  if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v18.__r_.__value_.__l.__data_);
  }
}

void sub_1001564E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_100156580(uint64_t a1, const char *a2)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 8));
  if (a2[23] >= 0) {
    long long v3 = (uint64_t *)a2;
  }
  else {
    long long v3 = *(uint64_t **)a2;
  }
  uint64_t v4 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v3, +[NSString defaultCStringEncoding]);
  CFDictionaryRef v5 = (const __CFDictionary *)CLCopyNearbyAssetSettingsOfAccessoryFile();
  CFDictionaryRef v6 = v5;
  if (v5)
  {
    CFTypeID v7 = CFGetTypeID(v5);
    if (v7 == CFDictionaryGetTypeID())
    {
      value = 0;
      if (a2[23] >= 0) {
        uint64_t v8 = a2;
      }
      else {
        uint64_t v8 = *(const char **)a2;
      }
      CFStringRef v9 = CFStringCreateWithCString(kCFAllocatorDefault, v8, 0x8000100u);
      if (CFDictionaryGetValueIfPresent(v6, v9, (const void **)&value)) {
        BOOL v10 = value == 0;
      }
      else {
        BOOL v10 = 1;
      }
      if (!v10)
      {
        CFTypeID v11 = CFGetTypeID(value);
        if (v11 == CFDataGetTypeID())
        {
          float v12 = value;
          if ((unint64_t)[v12 length] >= 0xC)
          {
            long long v13 = [v12 bytes];
            uint64_t v14 = *(void *)v13;
            int v15 = v13[2];
            sub_100156C2C((uint64_t)v13, &v14);
          }
        }
      }
      if (v9) {
        CFRelease(v9);
      }
    }
    CFRelease(v6);
  }
}

void sub_1001566D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001566FC(unsigned int a1@<W0>, unsigned int a2@<W1>, int a3@<W2>, std::string *a4@<X8>)
{
  if (a3)
  {
    sub_1001589F4((const void **)qword_10089C8F0, (const void **)qword_10089C910, (uint64_t)&v34);
    sub_100158AC0(a1, &v31);
    if ((v33 & 0x80u) == 0) {
      CFTypeID v7 = (const std::string::value_type *)&v31;
    }
    else {
      CFTypeID v7 = (const std::string::value_type *)v31;
    }
    if ((v33 & 0x80u) == 0) {
      std::string::size_type v8 = v33;
    }
    else {
      std::string::size_type v8 = v32;
    }
    CFStringRef v9 = std::string::append(&v34, v7, v8);
    long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
    v35.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v10;
    v9->__r_.__value_.__l.__size_ = 0;
    v9->__r_.__value_.__r.__words[2] = 0;
    v9->__r_.__value_.__r.__words[0] = 0;
    if (byte_10089C947 >= 0) {
      CFTypeID v11 = (const std::string::value_type *)&qword_10089C930;
    }
    else {
      CFTypeID v11 = (const std::string::value_type *)qword_10089C930;
    }
    if (byte_10089C947 >= 0) {
      std::string::size_type v12 = byte_10089C947;
    }
    else {
      std::string::size_type v12 = unk_10089C938;
    }
    long long v13 = std::string::append(&v35, v11, v12);
    long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
    v36.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v14;
    v13->__r_.__value_.__l.__size_ = 0;
    v13->__r_.__value_.__r.__words[2] = 0;
    v13->__r_.__value_.__r.__words[0] = 0;
    sub_100158ADC(a2, &__p);
    if ((v30 & 0x80u) == 0) {
      p_p = (const std::string::value_type *)&__p;
    }
    else {
      p_p = (const std::string::value_type *)__p;
    }
    if ((v30 & 0x80u) == 0) {
      std::string::size_type v16 = v30;
    }
    else {
      std::string::size_type v16 = v29;
    }
  }
  else
  {
    sub_1001589F4((const void **)qword_10089C8D0, (const void **)qword_10089C910, (uint64_t)&v34);
    sub_100158AC0(a1, &v31);
    if ((v33 & 0x80u) == 0) {
      char v17 = (const std::string::value_type *)&v31;
    }
    else {
      char v17 = (const std::string::value_type *)v31;
    }
    if ((v33 & 0x80u) == 0) {
      std::string::size_type v18 = v33;
    }
    else {
      std::string::size_type v18 = v32;
    }
    long long v19 = std::string::append(&v34, v17, v18);
    long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
    v35.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v20;
    v19->__r_.__value_.__l.__size_ = 0;
    v19->__r_.__value_.__r.__words[2] = 0;
    v19->__r_.__value_.__r.__words[0] = 0;
    if (byte_10089C947 >= 0) {
      long long v21 = (const std::string::value_type *)&qword_10089C930;
    }
    else {
      long long v21 = (const std::string::value_type *)qword_10089C930;
    }
    if (byte_10089C947 >= 0) {
      std::string::size_type v22 = byte_10089C947;
    }
    else {
      std::string::size_type v22 = unk_10089C938;
    }
    long long v23 = std::string::append(&v35, v21, v22);
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    v36.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v24;
    v23->__r_.__value_.__l.__size_ = 0;
    v23->__r_.__value_.__r.__words[2] = 0;
    v23->__r_.__value_.__r.__words[0] = 0;
    sub_100158ADC(a2, &__p);
    if ((v30 & 0x80u) == 0) {
      p_p = (const std::string::value_type *)&__p;
    }
    else {
      p_p = (const std::string::value_type *)__p;
    }
    if ((v30 & 0x80u) == 0) {
      std::string::size_type v16 = v30;
    }
    else {
      std::string::size_type v16 = v29;
    }
  }
  __int16 v25 = std::string::append(&v36, p_p, v16);
  long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v37.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  long long v27 = std::string::append(&v37, ".bin");
  *a4 = *v27;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  if ((char)v30 < 0) {
    operator delete(__p);
  }
  if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v36.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v35.__r_.__value_.__l.__data_);
  }
  if ((char)v33 < 0) {
    operator delete(v31);
  }
  if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v34.__r_.__value_.__l.__data_);
  }
}

void sub_1001569B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (*(char *)(v40 - 57) < 0) {
    operator delete(*(void **)(v40 - 80));
  }
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a40 < 0) {
    operator delete(a35);
  }
  if (a33 < 0) {
    operator delete(a28);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

void sub_100156A5C(uint64_t a1, int a2, int a3)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 8));
  CFDictionaryRef v6 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    sub_10039D144();
    if (v14 >= 0) {
      p_p = &__p;
    }
    else {
      p_p = __p;
    }
    *(_DWORD *)std::string buf = 136315138;
    std::string::size_type v16 = p_p;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#accessory,download,triggerUpdate,retry,accessory:%s", buf, 0xCu);
    if (v14 < 0) {
      operator delete(__p);
    }
  }

  dispatch_time_t v8 = dispatch_time(0, 60000000000);
  CFStringRef v9 = *(NSObject **)(a1 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100156BDC;
  block[3] = &unk_100852BB8;
  block[4] = a1;
  int v11 = a2;
  int v12 = a3;
  dispatch_after(v8, v9, block);
}

void sub_100156BC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100156BDC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  unsigned int v2 = *(_DWORD *)(a1 + 40);
  int v3 = *(_DWORD *)(a1 + 44);
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(v1 + 8));

  return sub_100156D78(v1, v2, v3);
}

void sub_100156C2C(uint64_t a1, _DWORD *a2)
{
  int v3 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#accessory,AccessoryFileManager::handleFeatureFlag is called", buf, 2u);
  }
  if (*a2)
  {
    if (a2[1] == 1)
    {
      int v4 = a2[2];
      CFDictionaryRef v5 = qword_1008ABDE0;
      BOOL v6 = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT);
      if (v4 == 1)
      {
        if (v6)
        {
          *(_WORD *)long long v10 = 0;
          _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#accessory,AccessoryFileManager::handleFeatureFlag DISABLE AOA", v10, 2u);
        }
        uint64_t v7 = 1;
      }
      else
      {
        if (v6)
        {
          *(_WORD *)CFStringRef v9 = 0;
          _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#accessory,AccessoryFileManager::handleFeatureFlag ENABLE AOA", v9, 2u);
        }
        uint64_t v7 = 0;
      }
      sub_100158134(v7);
    }
  }
  else
  {
    dispatch_time_t v8 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#accessory,AccessoryFileManager::handleFeatureFlag feature flag version is outdated, return", v11, 2u);
    }
  }
}

uint64_t sub_100156D78(uint64_t a1, unsigned int a2, int a3)
{
  sub_1001572C8(*(_DWORD *)a1, a2, a3, &v40);
  int v6 = SHIBYTE(v40.__r_.__value_.__r.__words[2]);
  std::string::size_type v7 = v40.__r_.__value_.__r.__words[0];
  NSStringEncoding v8 = +[NSString defaultCStringEncoding];
  if (v6 >= 0) {
    CFStringRef v9 = &v40;
  }
  else {
    CFStringRef v9 = (std::string *)v7;
  }
  long long v10 = +[NSString stringWithCString:v9 encoding:v8];
  CFDictionaryRef v11 = (const __CFDictionary *)CLCopyNearbyAssetSettingsOfAccessoryFile();
  CFDictionaryRef v12 = v11;
  if (v11)
  {
    CFTypeID v13 = CFGetTypeID(v11);
    if (v13 == CFDictionaryGetTypeID())
    {
      sub_100007D00();
      if ((v40.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        char v14 = &v40;
      }
      else {
        char v14 = (std::string *)v40.__r_.__value_.__r.__words[0];
      }
      sub_100003118((char *)v14, &v39);
      sub_100157628(*(_DWORD *)a1, a2, a3, &v38);
      sub_100007D00();
      if ((v38.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v15 = &v38;
      }
      else {
        int v15 = (std::string *)v38.__r_.__value_.__r.__words[0];
      }
      sub_100003118((char *)v15, &v37);
      sub_1001566FC(*(_DWORD *)a1, a2, a3, &v36);
      sub_100007D00();
      if ((v36.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v16 = &v36;
      }
      else {
        std::string::size_type v16 = (std::string *)v36.__r_.__value_.__r.__words[0];
      }
      sub_100003118((char *)v16, &__p);
      value = 0;
      if ((v40.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        char v17 = &v40;
      }
      else {
        char v17 = (std::string *)v40.__r_.__value_.__r.__words[0];
      }
      CFStringRef v18 = CFStringCreateWithCString(kCFAllocatorDefault, (const char *)v17, 0x8000100u);
      if (CFDictionaryGetValueIfPresent(v12, v18, (const void **)&value)
        && value
        && (CFTypeID v19 = CFGetTypeID(value), v19 == CFDataGetTypeID()))
      {
        long long v20 = value;
        if ((v39.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          long long v21 = &v39;
        }
        else {
          long long v21 = (std::string *)v39.__r_.__value_.__r.__words[0];
        }
        std::string::size_type v22 = +[NSString stringWithUTF8String:v21];
        if ([v20 writeToFile:v22 atomically:0]
          && sub_1002CCBC0((uint64_t)&v39)
          && sub_1002BB0D4((uint64_t)&v37))
        {
          long long v23 = *(NSObject **)(a1 + 16);
          block[0] = _NSConcreteStackBlock;
          block[1] = 3321888768;
          block[2] = sub_100157988;
          block[3] = &unk_100852BD8;
          block[4] = a1;
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            sub_100002DE4(&v29, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
          }
          else {
            std::string v29 = __p;
          }
          if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
            sub_100002DE4(&v30, v36.__r_.__value_.__l.__data_, v36.__r_.__value_.__l.__size_);
          }
          else {
            std::string v30 = v36;
          }
          if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
            sub_100002DE4(&v31, v37.__r_.__value_.__l.__data_, v37.__r_.__value_.__l.__size_);
          }
          else {
            std::string v31 = v37;
          }
          unsigned int v32 = a2;
          int v33 = a3;
          dispatch_sync(v23, block);
          if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v31.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v30.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v29.__r_.__value_.__l.__data_);
          }
          uint64_t v24 = 1;
        }
        else
        {
          uint64_t v24 = 0;
        }
      }
      else
      {
        long long v20 = (id)qword_1008ABDE0;
        if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
        {
          sub_10039D144();
          sub_100410CF0(v27, buf, v20);
        }
        uint64_t v24 = 0;
      }

      if (v18) {
        CFRelease(v18);
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v36.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v37.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v38.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v39.__r_.__value_.__l.__data_);
      }
LABEL_50:
      CFRelease(v12);
      uint64_t v25 = v24;
      goto LABEL_51;
    }
  }
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
    sub_100410CBC();
  }
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  if (v12) {
    goto LABEL_50;
  }
LABEL_51:

  if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v40.__r_.__value_.__l.__data_);
  }
  return v25;
}

void sub_1001571C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,void *a41,uint64_t a42,int a43,__int16 a44,char a45,char a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52)
{
  if (a29 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }

  if (a40 < 0) {
    operator delete(a35);
  }
  if (a46 < 0) {
    operator delete(a41);
  }
  if (a52 < 0) {
    operator delete(a47);
  }
  if (*(char *)(v55 - 177) < 0) {
    operator delete(*(void **)(v55 - 200));
  }
  if (*(char *)(v55 - 153) < 0) {
    operator delete(*(void **)(v55 - 176));
  }

  if (*(char *)(v55 - 129) < 0) {
    operator delete(*(void **)(v55 - 152));
  }
  _Unwind_Resume(a1);
}

void sub_1001572C8(unsigned int a1@<W0>, unsigned int a2@<W1>, int a3@<W2>, std::string *a4@<X8>)
{
  if (a3)
  {
    sub_1001589F4((const void **)qword_10089C8F0, (const void **)qword_10089C910, (uint64_t)&v34);
    sub_100158AC0(a1, &v31);
    if ((v33 & 0x80u) == 0) {
      std::string::size_type v7 = (const std::string::value_type *)&v31;
    }
    else {
      std::string::size_type v7 = (const std::string::value_type *)v31;
    }
    if ((v33 & 0x80u) == 0) {
      std::string::size_type v8 = v33;
    }
    else {
      std::string::size_type v8 = v32;
    }
    CFStringRef v9 = std::string::append(&v34, v7, v8);
    long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
    v35.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v10;
    v9->__r_.__value_.__l.__size_ = 0;
    v9->__r_.__value_.__r.__words[2] = 0;
    v9->__r_.__value_.__r.__words[0] = 0;
    if (byte_10089C947 >= 0) {
      CFDictionaryRef v11 = (const std::string::value_type *)&qword_10089C930;
    }
    else {
      CFDictionaryRef v11 = (const std::string::value_type *)qword_10089C930;
    }
    if (byte_10089C947 >= 0) {
      std::string::size_type v12 = byte_10089C947;
    }
    else {
      std::string::size_type v12 = unk_10089C938;
    }
    CFTypeID v13 = std::string::append(&v35, v11, v12);
    long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
    v36.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v14;
    v13->__r_.__value_.__l.__size_ = 0;
    v13->__r_.__value_.__r.__words[2] = 0;
    v13->__r_.__value_.__r.__words[0] = 0;
    sub_100158ADC(a2, &__p);
    if ((v30 & 0x80u) == 0) {
      p_p = (const std::string::value_type *)&__p;
    }
    else {
      p_p = (const std::string::value_type *)__p;
    }
    if ((v30 & 0x80u) == 0) {
      std::string::size_type v16 = v30;
    }
    else {
      std::string::size_type v16 = v29;
    }
  }
  else
  {
    sub_1001589F4((const void **)qword_10089C8D0, (const void **)qword_10089C910, (uint64_t)&v34);
    sub_100158AC0(a1, &v31);
    if ((v33 & 0x80u) == 0) {
      char v17 = (const std::string::value_type *)&v31;
    }
    else {
      char v17 = (const std::string::value_type *)v31;
    }
    if ((v33 & 0x80u) == 0) {
      std::string::size_type v18 = v33;
    }
    else {
      std::string::size_type v18 = v32;
    }
    CFTypeID v19 = std::string::append(&v34, v17, v18);
    long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
    v35.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v20;
    v19->__r_.__value_.__l.__size_ = 0;
    v19->__r_.__value_.__r.__words[2] = 0;
    v19->__r_.__value_.__r.__words[0] = 0;
    if (byte_10089C947 >= 0) {
      long long v21 = (const std::string::value_type *)&qword_10089C930;
    }
    else {
      long long v21 = (const std::string::value_type *)qword_10089C930;
    }
    if (byte_10089C947 >= 0) {
      std::string::size_type v22 = byte_10089C947;
    }
    else {
      std::string::size_type v22 = unk_10089C938;
    }
    long long v23 = std::string::append(&v35, v21, v22);
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    v36.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v24;
    v23->__r_.__value_.__l.__size_ = 0;
    v23->__r_.__value_.__r.__words[2] = 0;
    v23->__r_.__value_.__r.__words[0] = 0;
    sub_100158ADC(a2, &__p);
    if ((v30 & 0x80u) == 0) {
      p_p = (const std::string::value_type *)&__p;
    }
    else {
      p_p = (const std::string::value_type *)__p;
    }
    if ((v30 & 0x80u) == 0) {
      std::string::size_type v16 = v30;
    }
    else {
      std::string::size_type v16 = v29;
    }
  }
  uint64_t v25 = std::string::append(&v36, p_p, v16);
  long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v37.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  long long v27 = std::string::append(&v37, ".gz");
  *a4 = *v27;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  if ((char)v30 < 0) {
    operator delete(__p);
  }
  if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v36.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v35.__r_.__value_.__l.__data_);
  }
  if ((char)v33 < 0) {
    operator delete(v31);
  }
  if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v34.__r_.__value_.__l.__data_);
  }
}

void sub_10015757C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (*(char *)(v40 - 57) < 0) {
    operator delete(*(void **)(v40 - 80));
  }
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a40 < 0) {
    operator delete(a35);
  }
  if (a33 < 0) {
    operator delete(a28);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

void sub_100157628(unsigned int a1@<W0>, unsigned int a2@<W1>, int a3@<W2>, std::string *a4@<X8>)
{
  if (a3)
  {
    sub_1001589F4((const void **)qword_10089C8F0, (const void **)qword_10089C910, (uint64_t)&v34);
    sub_100158AC0(a1, &v31);
    if ((v33 & 0x80u) == 0) {
      std::string::size_type v7 = (const std::string::value_type *)&v31;
    }
    else {
      std::string::size_type v7 = (const std::string::value_type *)v31;
    }
    if ((v33 & 0x80u) == 0) {
      std::string::size_type v8 = v33;
    }
    else {
      std::string::size_type v8 = v32;
    }
    CFStringRef v9 = std::string::append(&v34, v7, v8);
    long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
    v35.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v10;
    v9->__r_.__value_.__l.__size_ = 0;
    v9->__r_.__value_.__r.__words[2] = 0;
    v9->__r_.__value_.__r.__words[0] = 0;
    if (byte_10089C947 >= 0) {
      CFDictionaryRef v11 = (const std::string::value_type *)&qword_10089C930;
    }
    else {
      CFDictionaryRef v11 = (const std::string::value_type *)qword_10089C930;
    }
    if (byte_10089C947 >= 0) {
      std::string::size_type v12 = byte_10089C947;
    }
    else {
      std::string::size_type v12 = unk_10089C938;
    }
    CFTypeID v13 = std::string::append(&v35, v11, v12);
    long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
    v36.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v14;
    v13->__r_.__value_.__l.__size_ = 0;
    v13->__r_.__value_.__r.__words[2] = 0;
    v13->__r_.__value_.__r.__words[0] = 0;
    sub_100158ADC(a2, &__p);
    if ((v30 & 0x80u) == 0) {
      p_p = (const std::string::value_type *)&__p;
    }
    else {
      p_p = (const std::string::value_type *)__p;
    }
    if ((v30 & 0x80u) == 0) {
      std::string::size_type v16 = v30;
    }
    else {
      std::string::size_type v16 = v29;
    }
  }
  else
  {
    sub_1001589F4((const void **)qword_10089C8D0, (const void **)qword_10089C910, (uint64_t)&v34);
    sub_100158AC0(a1, &v31);
    if ((v33 & 0x80u) == 0) {
      char v17 = (const std::string::value_type *)&v31;
    }
    else {
      char v17 = (const std::string::value_type *)v31;
    }
    if ((v33 & 0x80u) == 0) {
      std::string::size_type v18 = v33;
    }
    else {
      std::string::size_type v18 = v32;
    }
    CFTypeID v19 = std::string::append(&v34, v17, v18);
    long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
    v35.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v20;
    v19->__r_.__value_.__l.__size_ = 0;
    v19->__r_.__value_.__r.__words[2] = 0;
    v19->__r_.__value_.__r.__words[0] = 0;
    if (byte_10089C947 >= 0) {
      long long v21 = (const std::string::value_type *)&qword_10089C930;
    }
    else {
      long long v21 = (const std::string::value_type *)qword_10089C930;
    }
    if (byte_10089C947 >= 0) {
      std::string::size_type v22 = byte_10089C947;
    }
    else {
      std::string::size_type v22 = unk_10089C938;
    }
    long long v23 = std::string::append(&v35, v21, v22);
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    v36.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v24;
    v23->__r_.__value_.__l.__size_ = 0;
    v23->__r_.__value_.__r.__words[2] = 0;
    v23->__r_.__value_.__r.__words[0] = 0;
    sub_100158ADC(a2, &__p);
    if ((v30 & 0x80u) == 0) {
      p_p = (const std::string::value_type *)&__p;
    }
    else {
      p_p = (const std::string::value_type *)__p;
    }
    if ((v30 & 0x80u) == 0) {
      std::string::size_type v16 = v30;
    }
    else {
      std::string::size_type v16 = v29;
    }
  }
  uint64_t v25 = std::string::append(&v36, p_p, v16);
  long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v37.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  long long v27 = std::string::append(&v37, "_temp.bin");
  *a4 = *v27;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  if ((char)v30 < 0) {
    operator delete(__p);
  }
  if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v36.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v35.__r_.__value_.__l.__data_);
  }
  if ((char)v33 < 0) {
    operator delete(v31);
  }
  if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v34.__r_.__value_.__l.__data_);
  }
}

void sub_1001578DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (*(char *)(v40 - 57) < 0) {
    operator delete(*(void **)(v40 - 80));
  }
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a40 < 0) {
    operator delete(a35);
  }
  if (a33 < 0) {
    operator delete(a28);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

void sub_100157988(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = (uint64_t *)(a1 + 40);
  if (!sub_1002BA6A0((const char *)(a1 + 40)))
  {
    std::string::size_type v8 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      CFStringRef v9 = (void *)(a1 + 64);
      if (*(char *)(a1 + 87) < 0) {
        CFStringRef v9 = (void *)*v9;
      }
      LODWORD(v26) = 136315138;
      *(void *)((char *)&v26 + 4) = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#accessory,file queue,%s does not exist,moving forward", (uint8_t *)&v26, 0xCu);
    }
    goto LABEL_20;
  }
  LOWORD(v26) = 0;
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  unsigned __int8 v30 = 0;
  uint64_t v27 = 0;
  uint64_t v28 = 0;
  *((void *)&v26 + 1) = 0;
  unsigned __int16 v29 = 0;
  long long v33 = xmmword_1004B5930;
  __int16 v13 = 0;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  std::string __p = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  long long v14 = 0;
  unsigned __int16 v17 = 0;
  long long v21 = xmmword_1004B5930;
  if (sub_1002BAB98((const char *)(a1 + 88), (uint64_t)&v26) && sub_1002BAB98((const char *)v3, (uint64_t)&v13))
  {
    int v4 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::string buf = 67109376;
      int v23 = v29;
      __int16 v24 = 1024;
      int v25 = v17;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#accessory,file queue,temp file version %d,current file version %d", buf, 0xEu);
    }
    unsigned int v6 = v29;
    unsigned int v7 = v17;
    if (SHIBYTE(v20) < 0) {
      operator delete(__p);
    }
    if (SHIBYTE(v16) < 0) {
      operator delete(v14);
    }
    if (SHIBYTE(v32) < 0) {
      operator delete(v30);
    }
    if (SHIBYTE(v28) < 0) {
      operator delete(*((void **)&v26 + 1));
    }
    if (v6 <= v7) {
      return;
    }
LABEL_20:
    if (sub_100157D08(v2, v5, (uint64_t *)(a1 + 88), v3))
    {
      int v10 = *(_DWORD *)(a1 + 116);
      if (v10 == 1)
      {
        if (*(void *)(v2 + 80)) {
          sub_10014C49C(v2 + 56, *(_DWORD *)(a1 + 112));
        }
      }
      else if (!v10)
      {
        sub_100158B90(&v26);
        if ((void)v26 && *(void *)(v2 + 48))
        {
          int v11 = *(_DWORD *)(a1 + 112);
          std::string::size_type v12 = (std::__shared_weak_count *)*((void *)&v26 + 1);
          if (*((void *)&v26 + 1)) {
            atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v26 + 1) + 8), 1uLL, memory_order_relaxed);
          }
          sub_100157F8C(v2 + 24, v11);
          if (v12) {
            sub_10001A970(v12);
          }
        }
        else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
        {
          sub_100410D64();
        }
        if (*((void *)&v26 + 1)) {
          sub_10001A970(*((std::__shared_weak_count **)&v26 + 1));
        }
      }
    }
    return;
  }
  if (SHIBYTE(v20) < 0) {
    operator delete(__p);
  }
  if (SHIBYTE(v16) < 0) {
    operator delete(v14);
  }
  if (SHIBYTE(v32) < 0) {
    operator delete(v30);
  }
  if (SHIBYTE(v28) < 0) {
    operator delete(*((void **)&v26 + 1));
  }
}

void sub_100157C80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,std::__shared_weak_count *a24)
{
  if (a10) {
    sub_10001A970(a10);
  }
  if (a24) {
    sub_10001A970(a24);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100157CC4(uint64_t a1)
{
  if (*(char *)(a1 + 63) < 0) {
    operator delete(*(void **)(a1 + 40));
  }
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

id sub_100157D08(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 16));
  if (*((char *)a4 + 23) >= 0) {
    unsigned int v6 = a4;
  }
  else {
    unsigned int v6 = (uint64_t *)*a4;
  }
  unsigned int v7 = +[NSString stringWithUTF8String:v6];
  std::string::size_type v8 = +[NSURL fileURLWithPath:v7 isDirectory:0];

  if (v8)
  {
    if (*((char *)a3 + 23) >= 0) {
      CFStringRef v9 = a3;
    }
    else {
      CFStringRef v9 = (uint64_t *)*a3;
    }
    int v10 = +[NSString stringWithUTF8String:v9];
    int v11 = +[NSURL fileURLWithPath:v10 isDirectory:0];

    if (v11)
    {
      std::string::size_type v12 = +[NSFileManager defaultManager];
      id v19 = 0;
      id v20 = 0;
      id v13 = [v12 replaceItemAtURL:v8 withItemAtURL:v11 backupItemName:0 options:1 resultingItemURL:&v20 error:&v19];
      id v14 = v20;
      id v15 = v19;

      uint64_t v16 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        if (*((char *)a3 + 23) >= 0) {
          unsigned __int16 v17 = a3;
        }
        else {
          unsigned __int16 v17 = (uint64_t *)*a3;
        }
        *(_DWORD *)std::string buf = 136315394;
        std::string::size_type v22 = v17;
        __int16 v23 = 1024;
        int v24 = (int)v13;
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "#accessory,file queue,download,safeReplaceFileOnDiskWith,%s,replacementSucceeded,%d", buf, 0x12u);
      }
    }
    else
    {
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
        sub_100410DCC();
      }
      id v14 = 0;
      id v13 = 0;
    }
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_100410D98();
    }
    id v14 = 0;
    id v13 = 0;
  }

  return v13;
}

void sub_100157F44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100157F8C(uint64_t a1, int a2)
{
  int v4 = a2;
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2) {
    sub_100027894();
  }
  return (*(uint64_t (**)(uint64_t, int *))(*(void *)v2 + 48))(v2, &v4);
}

unsigned char *sub_100157FE0(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 63) < 0)
  {
    sub_100002DE4((unsigned char *)(a1 + 40), *(void **)(a2 + 40), *(void *)(a2 + 48));
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 40);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(_OWORD *)(a1 + 4sub_100149BDC(&a9, 0) = v4;
  }
  if (*(char *)(a2 + 87) < 0)
  {
    sub_100002DE4((unsigned char *)(a1 + 64), *(void **)(a2 + 64), *(void *)(a2 + 72));
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 64);
    *(void *)(a1 + 8sub_100149BDC(&a9, 0) = *(void *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = v5;
  }
  uint64_t result = (unsigned char *)(a1 + 88);
  if (*(char *)(a2 + 111) < 0) {
    return sub_100002DE4(result, *(void **)(a2 + 88), *(void *)(a2 + 96));
  }
  long long v7 = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(_OWORD *)uint64_t result = v7;
  return result;
}

void sub_100158098(_Unwind_Exception *exception_object)
{
  if (*(char *)(v2 + 87) < 0) {
    operator delete(*v3);
  }
  if (*(char *)(v2 + 63) < 0) {
    operator delete(*v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001580CC(uint64_t a1)
{
  if (*(char *)(a1 + 111) < 0) {
    operator delete(*(void **)(a1 + 88));
  }
  if (*(char *)(a1 + 87) < 0) {
    operator delete(*(void **)(a1 + 64));
  }
  if (*(char *)(a1 + 63) < 0)
  {
    uint64_t v2 = *(void **)(a1 + 40);
    operator delete(v2);
  }
}

void sub_100158134(uint64_t a1)
{
  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 setBool:a1 forKey:@"CompanionFeature1Disable"];
  uint64_t v2 = +[NSUserDefaults standardUserDefaults];
  [v2 synchronize];
}

void sub_1001581AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1001581CC(uint64_t a1, unsigned int a2, uint64_t *a3)
{
  if (!*a3) {
    sub_100410E00();
  }
  sub_1001566FC(*(_DWORD *)a1, a2, 1, &v15);
  sub_100007D00();
  if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    unsigned int v6 = &v15;
  }
  else {
    unsigned int v6 = (std::string *)v15.__r_.__value_.__r.__words[0];
  }
  sub_100003118((char *)v6, &v14);
  long long v7 = *(NSObject **)(a1 + 16);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  block[2] = sub_10015834C;
  block[3] = &unk_100852C08;
  block[4] = a1;
  if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
    sub_100002DE4(&__p, v14.__r_.__value_.__l.__data_, v14.__r_.__value_.__l.__size_);
  }
  else {
    std::string __p = v14;
  }
  std::string::size_type v8 = (std::__shared_weak_count *)a3[1];
  uint64_t v11 = *a3;
  std::string::size_type v12 = v8;
  if (v8) {
    atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  unsigned int v13 = a2;
  dispatch_async(v7, block);
  if (v12) {
    sub_10001A970(v12);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v14.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
}

void sub_100158318(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 - 57) < 0) {
    operator delete(*(void **)(v1 - 80));
  }
  if (*(char *)(v1 - 33) < 0) {
    operator delete(*(void **)(v1 - 56));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10015834C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    long long v4 = (void *)(a1 + 40);
    if (*(char *)(a1 + 63) < 0) {
      long long v4 = (void *)*v4;
    }
    *(_DWORD *)std::string buf = 136315138;
    *(void *)&uint8_t buf[4] = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#accessory,file queue,read %s for NN coefficients", buf, 0xCu);
  }
  sub_100165190(a1 + 40, &v16);
  uint64_t v5 = v16;
  if (v16)
  {
    uint64_t v6 = *(void *)(a1 + 64);
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v14 = v5;
    sub_100155580(v6, &v15, &v14, *(_DWORD *)(a1 + 80));
    uint64_t v7 = v14;
    uint64_t v14 = 0;
    if (v7) {
      operator delete();
    }
    uint64_t v8 = v15;
    uint64_t v15 = 0;
    if (v8) {
      operator delete();
    }
    CFStringRef v9 = (id)qword_1008ABDE0;
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      sub_10039D144();
      int v10 = v18 >= 0 ? buf : *(unsigned char **)buf;
      *(_DWORD *)id v19 = 136315138;
      id v20 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#accessory,file queue,nn parameters are successfully set for accessory %s", v19, 0xCu);
      if (v18 < 0) {
        operator delete(*(void **)buf);
      }
    }

    uint64_t v11 = *(void *)(v2 + 88);
    if (v11)
    {
      uint64_t v12 = *(void *)(*(void *)(a1 + 64) + 208);
      if (v12) {
        sub_10029B1C8(v11, *(unsigned int *)(a1 + 80), v12);
      }
    }
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_100410E2C();
  }
  uint64_t result = v16;
  uint64_t v16 = 0;
  if (result) {
    operator delete();
  }
  return result;
}

void sub_100158560(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (a12) {
    operator delete();
  }
  _Unwind_Resume(exception_object);
}

void *sub_1001585E8(void *a1, uint64_t a2)
{
  uint64_t result = a1 + 5;
  if (*(char *)(a2 + 63) < 0)
  {
    uint64_t result = sub_100002DE4(result, *(void **)(a2 + 40), *(void *)(a2 + 48));
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 40);
    result[2] = *(void *)(a2 + 56);
    *(_OWORD *)uint64_t result = v5;
  }
  uint64_t v6 = *(void *)(a2 + 72);
  a1[8] = *(void *)(a2 + 64);
  a1[9] = v6;
  if (v6) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_100158650(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 72);
  if (v2) {
    sub_10001A970(v2);
  }
  if (*(char *)(a1 + 63) < 0)
  {
    id v3 = *(void **)(a1 + 40);
    operator delete(v3);
  }
}

void *sub_1001586A4(uint64_t a1, uint64_t a2)
{
  return sub_1001586AC((void *)(a1 + 56), a2);
}

void *sub_1001586AC(void *a1, uint64_t a2)
{
  sub_10014C6A0((uint64_t)v4, a2);
  sub_100158D80(v4, a1);
  sub_10014C938(v4);
  return a1;
}

void sub_100158720(uint64_t a1, unsigned int a2)
{
  sub_1001566FC(*(_DWORD *)a1, a2, 0, &v14);
  sub_100007D00();
  if ((v14.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    long long v4 = &v14;
  }
  else {
    long long v4 = (std::string *)v14.__r_.__value_.__r.__words[0];
  }
  sub_100003118((char *)v4, &v13);
  long long v5 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    sub_10039D144();
    uint64_t v6 = v12 >= 0 ? &__p : (void **)__p;
    *(_DWORD *)std::string buf = 136315138;
    uint64_t v16 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#accessory,scheduleLUTCalculationForAccessory is called for accessory %s", buf, 0xCu);
    if (v12 < 0) {
      operator delete(__p);
    }
  }

  uint64_t v7 = *(NSObject **)(a1 + 16);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3321888768;
  v8[2] = sub_100158934;
  void v8[3] = &unk_100852C38;
  v8[4] = a1;
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    sub_100002DE4(&v9, v13.__r_.__value_.__l.__data_, v13.__r_.__value_.__l.__size_);
  }
  else {
    std::string v9 = v13;
  }
  unsigned int v10 = a2;
  dispatch_async(v7, v8);
  if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v9.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v14.__r_.__value_.__l.__data_);
  }
}

void sub_1001588EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v26 - 65) < 0) {
    operator delete(*(void **)(v26 - 88));
  }
  _Unwind_Resume(exception_object);
}

void sub_100158934(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  sub_100158B90(&v5);
  if (v5 && sub_1001C8E0C(v5) && *(void *)(v2 + 48))
  {
    int v3 = *(_DWORD *)(a1 + 64);
    long long v4 = v6;
    if (v6) {
      atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    sub_100157F8C(v2 + 24, v3);
    if (v4) {
      sub_10001A970(v4);
    }
  }
  if (v6) {
    sub_10001A970(v6);
  }
}

void sub_1001589C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, uint64_t a12, std::__shared_weak_count *a13)
{
  if (a11) {
    sub_10001A970(a11);
  }
  if (a13) {
    sub_10001A970(a13);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001589F4@<X0>(const void **a1@<X0>, const void **a2@<X1>, uint64_t a3@<X8>)
{
  if (*((char *)a1 + 23) >= 0) {
    size_t v5 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    size_t v5 = (size_t)a1[1];
  }
  if (*((char *)a2 + 23) >= 0) {
    size_t v6 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v6 = (size_t)a2[1];
  }
  uint64_t result = sub_100158FEC(a3, v6 + v5);
  if (*(char *)(result + 23) >= 0) {
    uint64_t v8 = (char *)result;
  }
  else {
    uint64_t v8 = *(char **)result;
  }
  if (v5)
  {
    if (*((char *)a1 + 23) >= 0) {
      std::string v9 = a1;
    }
    else {
      std::string v9 = *a1;
    }
    uint64_t result = (uint64_t)memmove(v8, v9, v5);
  }
  unsigned int v10 = &v8[v5];
  if (v6)
  {
    if (*((char *)a2 + 23) >= 0) {
      uint64_t v11 = a2;
    }
    else {
      uint64_t v11 = *a2;
    }
    uint64_t result = (uint64_t)memmove(v10, v11, v6);
  }
  v10[v6] = 0;
  return result;
}

void *sub_100158AC0@<X0>(unsigned int a1@<W0>, void *a2@<X8>)
{
  if (a1 > 0xA) {
    return sub_100004950(a2, "INVALID");
  }
  else {
    return (void *)sub_10039CCA0();
  }
}

void *sub_100158ADC@<X0>(unsigned int a1@<W0>, void *a2@<X8>)
{
  if (a1 > 0xD) {
    return sub_100004950(a2, "INVALID");
  }
  else {
    return (void *)sub_10039D144();
  }
}

uint64_t sub_100158AF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_100158B90@<X0>(void *a1@<X8>)
{
  uint64_t v2 = operator new(0x120uLL);
  uint64_t result = sub_100158BEC(v2);
  *a1 = v2 + 3;
  a1[1] = v2;
  return result;
}

void sub_100158BD8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_100158BEC(void *a1)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_100852C78;
  sub_1001C8D90(a1 + 3);
  return a1;
}

void sub_100158C34(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_100158C48(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100852C78;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100158C68(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100852C78;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_100158CBC(uint64_t a1)
{
  sub_100158CE8((uint64_t)&v1, a1 + 24);
}

void sub_100158CE8(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 256))
  {
    uint64_t v3 = *(void **)(a2 + 232);
    if (v3)
    {
      *(void *)(a2 + 24sub_100149BDC(&a9, 0) = v3;
      operator delete(v3);
    }
  }
  if (*(unsigned char *)(a2 + 192))
  {
    long long v4 = *(void **)(a2 + 168);
    if (v4)
    {
      *(void *)(a2 + 176) = v4;
      operator delete(v4);
    }
  }
  if (*(unsigned char *)(a2 + 128))
  {
    size_t v5 = *(void **)(a2 + 104);
    if (v5)
    {
      *(void *)(a2 + 112) = v5;
      operator delete(v5);
    }
  }
  if (*(unsigned char *)(a2 + 64))
  {
    size_t v6 = *(void **)(a2 + 40);
    if (v6)
    {
      *(void *)(a2 + 48) = v6;
      operator delete(v6);
    }
  }
}

void *sub_100158D80(void *result, void *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    long long v4 = (void *)result[3];
    size_t v5 = (void *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(void *, void *))(*result + 24))(result, v6);
        (*(void (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        v3[3] = 0;
        (*(void (**)(void, void *))(*(void *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(void))(*(void *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        v3[3] = v3;
        (*(void (**)(void *, void *))(v6[0] + 24))(v6, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(void *, void *))(*result + 24))(result, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(void *, void *))(*a2 + 24))(a2, result);
      uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_100158FE0(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100012C10(a1);
}

uint64_t sub_100158FEC(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x7FFFFFFFFFFFFFF8) {
    sub_10000B220();
  }
  if (a2 > 0x16)
  {
    uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a2 | 7) != 0x17) {
      uint64_t v4 = a2 | 7;
    }
    uint64_t v5 = v4 + 1;
    size_t v6 = operator new(v4 + 1);
    *(void *)(a1 + 8) = a2;
    *(void *)(a1 + 16) = v5 | 0x8000000000000000;
    *(void *)a1 = v6;
  }
  else
  {
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    *(unsigned char *)(a1 + 23) = a2;
  }
  return a1;
}

void sub_100159074()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8A8))
  {
    sub_100004950(&qword_10089C890, "com.apple.nearbyd.accessory.download");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C890, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8A8);
  }
}

void sub_10015910C(_Unwind_Exception *a1)
{
}

void sub_100159124()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8C8))
  {
    sub_100004950(&qword_10089C8B0, "com.apple.nearbyd.accessory.files");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C8B0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8C8);
  }
}

void sub_1001591BC(_Unwind_Exception *a1)
{
}

void sub_1001591D4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8E8))
  {
    sub_100004950(qword_10089C8D0, "MA_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8D0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8E8);
  }
}

void sub_10015926C(_Unwind_Exception *a1)
{
}

void sub_100159284()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C908, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C908))
  {
    sub_100004950(qword_10089C8F0, "MB_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8F0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C908);
  }
}

void sub_10015931C(_Unwind_Exception *a1)
{
}

void sub_100159334()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C928, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C928))
  {
    sub_100004950(qword_10089C910, "D");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C910, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C928);
  }
}

void sub_1001593CC(_Unwind_Exception *a1)
{
}

void sub_1001593E4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C948, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C948))
  {
    sub_100004950(&qword_10089C930, "A");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C930, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C948);
  }
}

void sub_10015947C(_Unwind_Exception *a1)
{
}

void sub_100159494()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C968, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C968))
  {
    sub_100004950(qword_10089C950, "FAS.bin");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C950, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C968);
  }
}

void sub_10015952C(_Unwind_Exception *a1)
{
}

void sub_100159544()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089D768, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089D768))
  {
    sub_100004950(&xmmword_10089D750, "");
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089D750, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089D768);
  }
}

void sub_1001595DC(_Unwind_Exception *a1)
{
}

void sub_1001595F4()
{
  sub_10039D144();
  char v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  uint64_t v3 = std::string::append(&v38, ".bin");
  long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1008A1A70 = v3->__r_.__value_.__r.__words[2];
  xmmword_1008A1A60 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1A60, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  uint64_t v7 = std::string::append(&v38, ".bin");
  long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1008A1A88 = v7->__r_.__value_.__r.__words[2];
  xmmword_1008A1A78 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1A78, (void *)&_mh_execute_header);
  sub_10039D144();
  std::string v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  uint64_t v11 = std::string::append(&v38, ".bin");
  long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1008A1AA0 = v11->__r_.__value_.__r.__words[2];
  xmmword_1008A1A90 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1A90, (void *)&_mh_execute_header);
  sub_10039D144();
  std::string v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  uint64_t v15 = std::string::append(&v38, ".bin");
  long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1008A1AB8 = v15->__r_.__value_.__r.__words[2];
  xmmword_1008A1AA8 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1AA8, (void *)&_mh_execute_header);
  sub_10039D144();
  unsigned __int16 v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  id v19 = std::string::append(&v38, ".bin");
  long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1008A1AD0 = v19->__r_.__value_.__r.__words[2];
  xmmword_1008A1AC0 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1AC0, (void *)&_mh_execute_header);
  sub_10039D144();
  long long v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  __int16 v23 = std::string::append(&v38, ".bin");
  long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1008A1AE8 = v23->__r_.__value_.__r.__words[2];
  xmmword_1008A1AD8 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1AD8, (void *)&_mh_execute_header);
  sub_10039D144();
  int v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  uint64_t v27 = std::string::append(&v38, ".bin");
  long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1008A1B00 = v27->__r_.__value_.__r.__words[2];
  xmmword_1008A1AF0 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1AF0, (void *)&_mh_execute_header);
  sub_10039D144();
  unsigned __int16 v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  uint64_t v31 = std::string::append(&v38, ".bin");
  long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1008A1B18 = v31->__r_.__value_.__r.__words[2];
  xmmword_1008A1B08 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1B08, (void *)&_mh_execute_header);
  sub_10039D144();
  long long v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  std::string v35 = std::string::append(&v38, ".bin");
  long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1008A1B30 = v35->__r_.__value_.__r.__words[2];
  xmmword_1008A1B20 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1B20, (void *)&_mh_execute_header);
}

void sub_100159C34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100159CA8@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100852CB8[a1]);
}

void *sub_100159CBC@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100852D10[a1]);
}

void *sub_100159CD0@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100852D58[a1]);
}

void *sub_100159CE4@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100852D78[a1]);
}

uint64_t sub_100159CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10015DCC0(a1, a2);
  *(unsigned char *)(v3 + 32) = 0;
  *(unsigned char *)(v3 + 16sub_100149BDC(&a9, 0) = 0;
  *(unsigned char *)(v3 + 168) = 0;
  *(unsigned char *)(v3 + 248) = 0;
  *(unsigned char *)(v3 + 256) = 0;
  *(unsigned char *)(v3 + 36sub_100149BDC(&a9, 0) = 0;
  *(unsigned char *)(v3 + 368) = 0;
  *(unsigned char *)(v3 + 44sub_100149BDC(&a9, 0) = 0;
  *(void *)(v3 + 448) = v3 + 456;
  *(void *)(v3 + 456) = 0;
  *(void *)(v3 + 48sub_100149BDC(&a9, 0) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 464) = 0;
  *(void *)(v3 + 472) = v3 + 480;
  *(void *)(v3 + 504) = 0;
  *(void *)(v3 + 512) = 0;
  *(void *)(v3 + 496) = v3 + 504;
  *(void *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 52sub_100149BDC(&a9, 0) = v3 + 528;
  *(void *)(v3 + 56sub_100149BDC(&a9, 0) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = v3 + 552;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 568) = v3 + 576;
  *(void *)(v3 + 60sub_100149BDC(&a9, 0) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 592) = v3 + 600;
  *(void *)(v3 + 624) = 0;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 616) = v3 + 624;
  *(void *)(v3 + 648) = 0;
  *(void *)(v3 + 656) = 0;
  *(void *)(v3 + 64sub_100149BDC(&a9, 0) = v3 + 648;
  *(void *)(v3 + 68sub_100149BDC(&a9, 0) = 0;
  *(void *)(v3 + 672) = 0;
  *(void *)(v3 + 664) = v3 + 672;
  *(void *)(v3 + 704) = 0;
  *(void *)(v3 + 696) = 0;
  *(void *)(v3 + 688) = v3 + 696;
  *(void *)(v3 + 72sub_100149BDC(&a9, 0) = 0;
  *(void *)(v3 + 728) = 0;
  *(void *)(v3 + 712) = v3 + 720;
  if (!*(void *)(v3 + 24)) {
    __assert_rtn("RoseMeasurementAggregator", "MeasurementAggregator.cpp", 23, "fHandleReceivedRoseMeasurementsCb != nullptr");
  }
  return a1;
}

void sub_100159E7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_10003E96C(v16, *(void **)(v12 + 720));
  sub_10003E96C(v15, *(void **)(v12 + 696));
  sub_10003E96C(v14, *(void **)(v12 + 672));
  sub_10003E96C(v13, *(void **)(v12 + 648));
  sub_10003E96C(v20, *(void **)(v12 + 624));
  sub_10015E1A0(v19, *(void **)(v12 + 600));
  sub_10015E09C(v18, *(void **)(v12 + 576));
  sub_10015DF98(v17, *(void **)(v12 + 552));
  sub_10015DF3C(a9, *(void **)(v12 + 528));
  sub_10015DE38(a10, *(void **)(v12 + 504));
  sub_10015DE38(a11, *(void **)(v12 + 480));
  sub_10015DDDC(a12, *(void **)(v12 + 456));
  sub_10015DD58((void *)v12);
  _Unwind_Resume(a1);
}

void sub_100159F24(uint64_t a1, uint64_t a2)
{
  unsigned __int16 v41 = *(_WORD *)(a2 + 56);
  uint64_t v39 = *(void *)(a2 + 64);
  unint64_t v40 = v39;
  LOWORD(v38) = v41;
  *(void *)std::string buf = &v41;
  long long v4 = sub_10015E200((uint64_t **)(a1 + 592), &v41, (uint64_t)&unk_1004BC2F8, (_WORD **)buf);
  sub_10015E2D0(v4 + 5, &v40, (uint64_t *)&v40);
  uint64_t v5 = qword_1008ABDE0;
  if (*(unsigned char *)(a2 + 16))
  {
    int v6 = *(unsigned __int16 *)(a2 + 112);
    uint64_t v7 = *(void *)(a2 + 8);
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::string buf = 134218752;
      *(void *)&uint8_t buf[4] = v7;
      __int16 v45 = 1024;
      int v46 = v41;
      __int16 v47 = 1024;
      int v48 = v6;
      __int16 v49 = 2048;
      uint64_t v50 = v40;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#aggr,addRangeResult: machCont %.6f ticketId %hu cycleIndex %hu targetMacAddress 0x%016llx", buf, 0x22u);
    }
    int v8 = *(unsigned __int16 *)(a2 + 96);
    if (*(_WORD *)(a2 + 96))
    {
      std::string v9 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        sub_1003A8354(v8, buf);
        if (v48 >= 0) {
          long long v10 = buf;
        }
        else {
          long long v10 = *(unsigned char **)buf;
        }
        *(_DWORD *)uint64_t v42 = 136315138;
        unint64_t v43 = v10;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#aggr,addRangeResult: ignoring due to status %s", v42, 0xCu);
        if (SHIBYTE(v48) < 0) {
          operator delete(*(void **)buf);
        }
      }
    }
    else
    {
      *(void *)std::string buf = &v38;
      uint64_t v11 = sub_10015E38C((uint64_t **)(a1 + 448), (unsigned __int16 *)&v38, (uint64_t)&unk_1004BC2F8, (_OWORD **)buf);
      uint64_t v12 = v11;
      uint64_t v13 = (uint64_t)(v11 + 6);
      if (*((unsigned char *)v11 + 600) || *((unsigned char *)v11 + 1746) && *((unsigned __int16 *)v11 + 872) != v6) {
        sub_10015A6E8((unsigned char *)v11 + 48);
      }
      sub_10015A750(v13, a2);
      *((_WORD *)v12 + 872) = v6;
      *((unsigned char *)v12 + 1746) = 1;
      uint64_t v14 = *(void *)(a2 + 16);
      v12[219] = *(void *)(a2 + 8);
      *((unsigned char *)v12 + 176sub_100149BDC(&a9, 0) = v14;
      if (*(unsigned char *)(a1 + 160))
      {
        if (*(unsigned __int16 *)(a2 + 56) == *(unsigned __int16 *)(a1 + 40)
          && *(unsigned __int16 *)(a2 + 112) == *(unsigned __int16 *)(a1 + 46)
          && *(_DWORD *)(a2 + 292) == *(_DWORD *)(a1 + 48))
        {
          sub_100004950(buf, "addRangeResult: found AOACIRDataEvent match");
          if (!*(unsigned char *)(a1 + 160)) {
            sub_10000AE44();
          }
          sub_10015A81C((uint64_t *)buf, a1 + 32);
          if (SHIBYTE(v48) < 0) {
            operator delete(*(void **)buf);
          }
          *((_OWORD *)v12 + 66) = *(_OWORD *)(a1 + 32);
          long long v15 = *(_OWORD *)(a1 + 48);
          long long v16 = *(_OWORD *)(a1 + 64);
          long long v17 = *(_OWORD *)(a1 + 80);
          *((_OWORD *)v12 + 7sub_100149BDC(&a9, 0) = *(_OWORD *)(a1 + 96);
          *((_OWORD *)v12 + 69) = v17;
          *((_OWORD *)v12 + 68) = v16;
          *((_OWORD *)v12 + 67) = v15;
          long long v18 = *(_OWORD *)(a1 + 112);
          long long v19 = *(_OWORD *)(a1 + 128);
          long long v20 = *(_OWORD *)(a1 + 144);
          *((unsigned char *)v12 + 1184) = *(unsigned char *)(a1 + 160);
          *((_OWORD *)v12 + 73) = v20;
          *((_OWORD *)v12 + 72) = v19;
          *((_OWORD *)v12 + 71) = v18;
        }
        else
        {
          sub_100004950(buf, "addRangeResult: purging mismatched AOACIRDataEvent");
          if (!*(unsigned char *)(a1 + 160)) {
            sub_10000AE44();
          }
          sub_10015A81C((uint64_t *)buf, a1 + 32);
          if (SHIBYTE(v48) < 0) {
            operator delete(*(void **)buf);
          }
        }
        if (*(unsigned char *)(a1 + 160)) {
          *(unsigned char *)(a1 + 16sub_100149BDC(&a9, 0) = 0;
        }
      }
      else
      {
        long long v21 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)std::string buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "#aggr,addRangeResult: no cached AOACIRDataEvent", buf, 2u);
        }
      }
      if (*(unsigned char *)(a1 + 248))
      {
        if (*(unsigned __int16 *)(a2 + 56) == *(unsigned __int16 *)(a1 + 176)
          && *(unsigned __int16 *)(a2 + 112) == *(unsigned __int16 *)(a1 + 182)
          && *(_DWORD *)(a2 + 292) == *(_DWORD *)(a1 + 200))
        {
          sub_100004950(buf, "addRangeResult: found TOACIRDataEvent match");
          if (!*(unsigned char *)(a1 + 248)) {
            sub_10000AE44();
          }
          sub_10015A904((uint64_t *)buf, a1 + 168);
          if (SHIBYTE(v48) < 0) {
            operator delete(*(void **)buf);
          }
          long long v22 = *(_OWORD *)(a1 + 184);
          *(_OWORD *)(v12 + 149) = *(_OWORD *)(a1 + 168);
          *(_OWORD *)(v12 + 151) = v22;
          long long v23 = *(_OWORD *)(a1 + 200);
          long long v24 = *(_OWORD *)(a1 + 216);
          long long v25 = *(_OWORD *)(a1 + 232);
          *((unsigned char *)v12 + 1272) = *(unsigned char *)(a1 + 248);
          *(_OWORD *)(v12 + 155) = v24;
          *(_OWORD *)(v12 + 157) = v25;
          *(_OWORD *)(v12 + 153) = v23;
        }
        else
        {
          sub_100004950(buf, "addRangeResult: purging mismatched TOACIRDataEvent");
          if (!*(unsigned char *)(a1 + 248)) {
            sub_10000AE44();
          }
          sub_10015A904((uint64_t *)buf, a1 + 168);
          if (SHIBYTE(v48) < 0) {
            operator delete(*(void **)buf);
          }
        }
        if (*(unsigned char *)(a1 + 248)) {
          *(unsigned char *)(a1 + 248) = 0;
        }
      }
      else
      {
        long long v26 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)std::string buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "#aggr,addRangeResult: no cached TOACIRDataEvent", buf, 2u);
        }
      }
      if (*(unsigned char *)(a1 + 360))
      {
        if (*(unsigned __int16 *)(a2 + 56) == *(unsigned __int16 *)(a1 + 264)
          && *(unsigned __int16 *)(a2 + 112) == *(unsigned __int16 *)(a1 + 270)
          && *(_DWORD *)(a2 + 292) == *(_DWORD *)(a1 + 324))
        {
          sub_100004950(buf, "addRangeResult: found TOACIRDataV2Event match");
          if (!*(unsigned char *)(a1 + 360)) {
            sub_10000AE44();
          }
          sub_10015A9EC((uint64_t *)buf, a1 + 256);
          if (SHIBYTE(v48) < 0) {
            operator delete(*(void **)buf);
          }
          long long v27 = *(_OWORD *)(a1 + 256);
          long long v28 = *(_OWORD *)(a1 + 272);
          *((_OWORD *)v12 + 82) = *(_OWORD *)(a1 + 288);
          *((_OWORD *)v12 + 81) = v28;
          *((_OWORD *)v12 + 8sub_100149BDC(&a9, 0) = v27;
          long long v29 = *(_OWORD *)(a1 + 304);
          long long v30 = *(_OWORD *)(a1 + 320);
          long long v31 = *(_OWORD *)(a1 + 336);
          *(_OWORD *)((char *)v12 + 1369) = *(_OWORD *)(a1 + 345);
          *((_OWORD *)v12 + 85) = v31;
          *((_OWORD *)v12 + 84) = v30;
          *((_OWORD *)v12 + 83) = v29;
        }
        else
        {
          sub_100004950(buf, "addRangeResult: purging mismatched TOACIRDataV2Event");
          if (!*(unsigned char *)(a1 + 360)) {
            sub_10000AE44();
          }
          sub_10015A9EC((uint64_t *)buf, a1 + 256);
          if (SHIBYTE(v48) < 0) {
            operator delete(*(void **)buf);
          }
        }
        if (*(unsigned char *)(a1 + 360)) {
          *(unsigned char *)(a1 + 36sub_100149BDC(&a9, 0) = 0;
        }
      }
      else
      {
        long long v32 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)std::string buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "#aggr,addRangeResult: no cached TOACIRDataV2Event", buf, 2u);
        }
      }
      if (*(unsigned char *)(a1 + 440))
      {
        if (*(unsigned __int16 *)(a2 + 56) == *(unsigned __int16 *)(a1 + 376)
          && *(unsigned __int16 *)(a2 + 112) == *(unsigned __int16 *)(a1 + 388)
          && *(_DWORD *)(a2 + 292) == *(_DWORD *)(a1 + 400))
        {
          sub_100004950(buf, "addRangeResult: found RangeResultDebugV2Event match");
          if (!*(unsigned char *)(a1 + 440)) {
            sub_10000AE44();
          }
          sub_10015AAD4((uint64_t *)buf, a1 + 368);
          if (SHIBYTE(v48) < 0) {
            operator delete(*(void **)buf);
          }
          *((_OWORD *)v12 + 104) = *(_OWORD *)(a1 + 368);
          long long v33 = *(_OWORD *)(a1 + 384);
          long long v34 = *(_OWORD *)(a1 + 400);
          long long v35 = *(_OWORD *)(a1 + 416);
          *(_OWORD *)((char *)v12 + 1721) = *(_OWORD *)(a1 + 425);
          *((_OWORD *)v12 + 107) = v35;
          *((_OWORD *)v12 + 106) = v34;
          *((_OWORD *)v12 + 105) = v33;
        }
        else
        {
          sub_100004950(buf, "addRangeResult: purging mismatched RangeResultDebugV2Event");
          if (!*(unsigned char *)(a1 + 440)) {
            sub_10000AE44();
          }
          sub_10015AAD4((uint64_t *)buf, a1 + 368);
          if (SHIBYTE(v48) < 0) {
            operator delete(*(void **)buf);
          }
        }
        if (*(unsigned char *)(a1 + 440)) {
          *(unsigned char *)(a1 + 44sub_100149BDC(&a9, 0) = 0;
        }
      }
      else
      {
        long long v36 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)std::string buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, "#aggr,addRangeResult: no cached RangeResultDebugV2Event", buf, 2u);
        }
      }
      if (*((unsigned char *)v12 + 1184) && *((unsigned char *)v12 + 1272))
      {
        std::string v37 = qword_1008ABDE0;
        if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)
          || !sub_100410EDC(v37, (unsigned char *)v12 + 1184))
        {
          *((unsigned char *)v12 + 1184) = 0;
        }
        if (*((unsigned char *)v12 + 1272)) {
          *((unsigned char *)v12 + 1272) = 0;
        }
      }
      if (sub_10015ABBC(a1, v38, v39)) {
        sub_10015ADA0(a1, v38, v39);
      }
    }
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_100410E60(a2, v5);
  }
}

void sub_10015A6A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10015A6E8(unsigned char *a1)
{
  long long v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100410F38(v2);
  }
  sub_10015DBB0(a1);
  if (a1[1698]) {
    a1[1698] = 0;
  }
  if (a1[1712]) {
    a1[1712] = 0;
  }
}

uint64_t sub_10015A750(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 552))
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    long long v4 = *(_OWORD *)(a2 + 16);
    long long v5 = *(_OWORD *)(a2 + 32);
    long long v6 = *(_OWORD *)(a2 + 48);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(_OWORD *)(a1 + 32) = v5;
    *(_OWORD *)(a1 + 48) = v6;
    *(_OWORD *)(a1 + 16) = v4;
    if (a1 != a2)
    {
      sub_10015E510((char *)(a1 + 72), *(char **)(a2 + 72), *(void *)(a2 + 80), (uint64_t)(*(void *)(a2 + 80) - *(void *)(a2 + 72)) >> 3);
      long long v7 = *(_OWORD *)(a2 + 96);
      long long v8 = *(_OWORD *)(a2 + 112);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(_OWORD *)(a1 + 96) = v7;
      *(_OWORD *)(a1 + 112) = v8;
      sub_10015E61C((char *)(a1 + 136), *(char **)(a2 + 136), *(void *)(a2 + 144), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(void *)(a2 + 144) - *(void *)(a2 + 136)) >> 3));
    }
    memcpy((void *)(a1 + 160), (const void *)(a2 + 160), 0x181uLL);
  }
  else
  {
    sub_10015E778(a1, a2);
    *(unsigned char *)(a1 + 552) = 1;
  }
  return a1;
}

void sub_10015A81C(uint64_t *a1, uint64_t a2)
{
  long long v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    if (*((char *)a1 + 23) >= 0) {
      long long v5 = a1;
    }
    else {
      long long v5 = (uint64_t *)*a1;
    }
    int v6 = *(unsigned __int16 *)(a2 + 8);
    int v7 = *(unsigned __int16 *)(a2 + 14);
    int v8 = *(_DWORD *)(a2 + 16);
    int v9 = 136315906;
    long long v10 = v5;
    __int16 v11 = 1024;
    int v12 = v6;
    __int16 v13 = 1024;
    int v14 = v7;
    __int16 v15 = 1024;
    int v16 = v8;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#aggr,%s: ticketId %hu cycleIdx %hu anchorTimeOffsetRoseTicks %u", (uint8_t *)&v9, 0x1Eu);
  }
}

void sub_10015A904(uint64_t *a1, uint64_t a2)
{
  long long v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    if (*((char *)a1 + 23) >= 0) {
      long long v5 = a1;
    }
    else {
      long long v5 = (uint64_t *)*a1;
    }
    int v6 = *(unsigned __int16 *)(a2 + 8);
    int v7 = *(unsigned __int16 *)(a2 + 14);
    int v8 = *(_DWORD *)(a2 + 32);
    int v9 = 136315906;
    long long v10 = v5;
    __int16 v11 = 1024;
    int v12 = v6;
    __int16 v13 = 1024;
    int v14 = v7;
    __int16 v15 = 1024;
    int v16 = v8;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#aggr,%s: ticketId %hu cycleIdx %hu anchorTimeOffsetRoseTicks %u", (uint8_t *)&v9, 0x1Eu);
  }
}

void sub_10015A9EC(uint64_t *a1, uint64_t a2)
{
  long long v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    if (*((char *)a1 + 23) >= 0) {
      long long v5 = a1;
    }
    else {
      long long v5 = (uint64_t *)*a1;
    }
    int v6 = *(unsigned __int16 *)(a2 + 8);
    int v7 = *(unsigned __int16 *)(a2 + 14);
    int v8 = *(_DWORD *)(a2 + 68);
    int v9 = 136315906;
    long long v10 = v5;
    __int16 v11 = 1024;
    int v12 = v6;
    __int16 v13 = 1024;
    int v14 = v7;
    __int16 v15 = 1024;
    int v16 = v8;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#aggr,%s: ticketId %hu cycleIdx %hu anchorTimeOffsetRoseTicks %u", (uint8_t *)&v9, 0x1Eu);
  }
}

void sub_10015AAD4(uint64_t *a1, uint64_t a2)
{
  long long v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    if (*((char *)a1 + 23) >= 0) {
      long long v5 = a1;
    }
    else {
      long long v5 = (uint64_t *)*a1;
    }
    int v6 = *(unsigned __int16 *)(a2 + 8);
    int v7 = *(unsigned __int16 *)(a2 + 20);
    int v8 = *(_DWORD *)(a2 + 32);
    int v9 = 136315906;
    long long v10 = v5;
    __int16 v11 = 1024;
    int v12 = v6;
    __int16 v13 = 1024;
    int v14 = v7;
    __int16 v15 = 1024;
    int v16 = v8;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#aggr,%s: ticketId %hu cycleIdx %hu anchorTimeOffsetRoseTicks %u", (uint8_t *)&v9, 0x1Eu);
  }
}

BOOL sub_10015ABBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v3 = a1 + 448;
  if (!sub_100160040(a1 + 448, (unsigned __int16 *)&v16))
  {
    BOOL result = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG);
    if (!result) {
      return result;
    }
    sub_100410F7C();
    return 0;
  }
  long long v4 = (unsigned __int8 *)sub_10015DB70(v3, (unsigned __int16 *)&v16);
  int v5 = v4[552];
  int v6 = v4[776];
  int v7 = v4[1000];
  if (v4[776]) {
    BOOL v8 = v7 == 0;
  }
  else {
    BOOL v8 = 1;
  }
  int v9 = !v8;
  long long v10 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG))
  {
    int v13 = v4[1136];
    int v14 = v4[1224];
    int v15 = v4[1608];
    *(_DWORD *)std::string buf = 67110912;
    int v19 = (unsigned __int16)v16;
    __int16 v20 = 2048;
    uint64_t v21 = v17;
    __int16 v22 = 1024;
    int v23 = v5;
    __int16 v24 = 1024;
    int v25 = v6;
    __int16 v26 = 1024;
    int v27 = v7;
    __int16 v28 = 1024;
    int v29 = v13;
    __int16 v30 = 1024;
    int v31 = v14;
    __int16 v32 = 1024;
    int v33 = v15;
    _os_log_debug_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "#aggr,haveReceivedRoseMeasurements ticketId %hu targetMac 0x%016llx rng %d loc_ts %d rem_ts %d aoacir %d toacir %d dbg %d", buf, 0x36u);
  }
  if (v5) {
    int v11 = 1;
  }
  else {
    int v11 = v9;
  }
  BOOL result = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG);
  if (v11 != 1)
  {
    if (!result) {
      return result;
    }
    sub_10041104C();
    return 0;
  }
  if (result) {
    sub_100410FE4();
  }
  return 1;
}

void sub_10015ADA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned __int16 v4 = a2;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  if (sub_10015ABBC(a1, a2, a3))
  {
    *(void *)std::string buf = &v19;
    int v6 = sub_10015E38C((uint64_t **)(a1 + 448), (unsigned __int16 *)&v19, (uint64_t)&unk_1004BC2F8, (_OWORD **)buf);
    int v7 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG))
    {
      int v12 = *((unsigned __int8 *)v6 + 600);
      int v13 = *((unsigned __int8 *)v6 + 824);
      int v14 = *((unsigned __int8 *)v6 + 1048);
      int v15 = *((unsigned __int8 *)v6 + 1184);
      int v16 = *((unsigned __int8 *)v6 + 1272);
      int v17 = *((unsigned __int8 *)v6 + 1384);
      int v18 = *((unsigned __int8 *)v6 + 1656);
      *(_DWORD *)std::string buf = 67111168;
      *(_DWORD *)&uint8_t buf[4] = (unsigned __int16)v19;
      __int16 v22 = 2048;
      uint64_t v23 = v20;
      __int16 v24 = 1024;
      int v25 = v12;
      __int16 v26 = 1024;
      int v27 = v13;
      __int16 v28 = 1024;
      int v29 = v14;
      __int16 v30 = 1024;
      int v31 = v15;
      __int16 v32 = 1024;
      int v33 = v16;
      __int16 v34 = 1024;
      int v35 = v17;
      __int16 v36 = 1024;
      int v37 = v18;
      _os_log_debug_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "#aggr,sendReceivedRoseMeasurements ticketId %hu targetMac 0x%016llx rng %d loc_ts %d rem_ts %d aoacir %d toacir %d toacirv2 %d dbg %d", buf, 0x3Cu);
    }
    int v8 = *((unsigned __int8 *)v6 + 824);
    if (*((unsigned char *)v6 + 824)) {
      int v8 = *((unsigned char *)v6 + 1048) != 0;
    }
    if (*((unsigned char *)v6 + 600)) {
      BOOL v9 = 0;
    }
    else {
      BOOL v9 = v8 == 0;
    }
    if (!v9)
    {
      uint64_t v10 = *(void *)(a1 + 24);
      if (!v10) {
        sub_100027894();
      }
      (*(void (**)(uint64_t, uint64_t *))(*(void *)v10 + 48))(v10, v6 + 6);
    }
    sub_10015A6E8((unsigned char *)v6 + 48);
  }
  else
  {
    int v11 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_1004110B4(v4, a3, v11);
    }
  }
}

void *sub_10015AF90(uint64_t a1, uint64_t a2)
{
  unsigned __int16 v4 = (long long *)(a1 + 32);
  if (*(unsigned char *)(a1 + 160))
  {
    sub_100004950(__p, "addAOACIRDataEvent: purging previous event");
    if (!*(unsigned char *)(a1 + 160)) {
      sub_10000AE44();
    }
    sub_10015A81C((uint64_t *)__p, (uint64_t)v4);
    if (v19 < 0) {
      operator delete(__p[0]);
    }
  }
  sub_100004950(__p, "addAOACIRDataEvent: adding event");
  sub_10015A81C((uint64_t *)__p, a2);
  if (v19 < 0) {
    operator delete(__p[0]);
  }
  int v5 = *(unsigned __int8 *)(a1 + 160);
  long long v6 = *(_OWORD *)(a2 + 48);
  long long v8 = *(_OWORD *)a2;
  long long v7 = *(_OWORD *)(a2 + 16);
  v4[2] = *(_OWORD *)(a2 + 32);
  v4[3] = v6;
  *unsigned __int16 v4 = v8;
  v4[1] = v7;
  long long v9 = *(_OWORD *)(a2 + 112);
  long long v11 = *(_OWORD *)(a2 + 64);
  long long v10 = *(_OWORD *)(a2 + 80);
  v4[6] = *(_OWORD *)(a2 + 96);
  v4[7] = v9;
  void v4[4] = v11;
  v4[5] = v10;
  if (!v5) {
    *(unsigned char *)(a1 + 16sub_100149BDC(&a9, 0) = 1;
  }
  unsigned __int16 v12 = *(_WORD *)(a2 + 8);
  BOOL result = (void *)sub_10015B17C(a1, v12);
  if (v14)
  {
    LOWORD(__p[0]) = v12;
    __p[1] = result;
    int v15 = (uint64_t **)(a1 + 520);
    uint64_t v20 = __p;
    int v16 = sub_10015E85C(v15, (unsigned __int16 *)__p, (uint64_t)&unk_1004BC2F8, (long long **)&v20);
    sub_10015E96C(v16 + 6, (long long *)a2);
    uint64_t v20 = __p;
    BOOL result = sub_10015E85C(v15, (unsigned __int16 *)__p, (uint64_t)&unk_1004BC2F8, (long long **)&v20);
    if (result[11] >= 0x33uLL)
    {
      do
      {
        uint64_t v20 = __p;
        int v17 = (int64x2_t *)sub_10015E85C(v15, (unsigned __int16 *)__p, (uint64_t)&unk_1004BC2F8, (long long **)&v20);
        v17[5] = vaddq_s64(v17[5], (int64x2_t)xmmword_1004B59B0);
        sub_10015ED2C((uint64_t)v17[3].i64, 1);
        uint64_t v20 = __p;
        BOOL result = sub_10015E85C(v15, (unsigned __int16 *)__p, (uint64_t)&unk_1004BC2F8, (long long **)&v20);
      }
      while (result[11] > 0x32uLL);
    }
  }
  return result;
}

void sub_10015B160(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

unint64_t sub_10015B17C(uint64_t a1, unsigned int a2)
{
  unsigned __int16 v13 = a2;
  unint64_t v2 = *(void *)(a1 + 600);
  if (v2)
  {
    unsigned __int16 v4 = (uint64_t **)(a1 + 592);
    unint64_t v5 = a1 + 600;
    unint64_t v6 = v5;
    do
    {
      unsigned int v7 = *(unsigned __int16 *)(v2 + 32);
      BOOL v8 = v7 >= a2;
      if (v7 >= a2) {
        long long v9 = (unint64_t *)v2;
      }
      else {
        long long v9 = (unint64_t *)(v2 + 8);
      }
      if (v8) {
        unint64_t v6 = v2;
      }
      unint64_t v2 = *v9;
    }
    while (*v9);
    if (v6 == v5
      || *(unsigned __int16 *)(v6 + 32) > a2
      || (v14 = &v13, long long v10 = sub_10015E200(v4, &v13, (uint64_t)&unk_1004BC2F8, &v14), v10[7] != (uint64_t *)1))
    {
      uint64_t v11 = 0;
      unint64_t v2 = 0;
    }
    else
    {
      unint64_t v2 = v10[5][4] & 0xFFFFFFFFFFFFFF00;
      uint64_t v11 = v10[5][4];
    }
  }
  else
  {
    uint64_t v11 = 0;
  }
  return v2 | v11;
}

void *sub_10015B244(uint64_t a1, uint64_t a2)
{
  unsigned __int16 v4 = (_OWORD *)(a1 + 168);
  if (*(unsigned char *)(a1 + 248))
  {
    sub_100004950(__p, "addTOACIRDataEvent: purging previous event");
    if (!*(unsigned char *)(a1 + 248)) {
      sub_10000AE44();
    }
    sub_10015A904((uint64_t *)__p, (uint64_t)v4);
    if (v16 < 0) {
      operator delete(__p[0]);
    }
  }
  sub_100004950(__p, "addTOACIRDataEvent: adding event");
  sub_10015A904((uint64_t *)__p, a2);
  if (v16 < 0) {
    operator delete(__p[0]);
  }
  int v5 = *(unsigned __int8 *)(a1 + 248);
  *unsigned __int16 v4 = *(_OWORD *)a2;
  long long v6 = *(_OWORD *)(a2 + 64);
  long long v8 = *(_OWORD *)(a2 + 16);
  long long v7 = *(_OWORD *)(a2 + 32);
  v4[3] = *(_OWORD *)(a2 + 48);
  void v4[4] = v6;
  v4[1] = v8;
  v4[2] = v7;
  if (!v5) {
    *(unsigned char *)(a1 + 248) = 1;
  }
  unsigned __int16 v9 = *(_WORD *)(a2 + 8);
  BOOL result = (void *)sub_10015B17C(a1, v9);
  if (v11)
  {
    LOWORD(__p[0]) = v9;
    __p[1] = result;
    unsigned __int16 v12 = (uint64_t **)(a1 + 544);
    int v17 = __p;
    unsigned __int16 v13 = sub_10015ED8C(v12, (unsigned __int16 *)__p, (uint64_t)&unk_1004BC2F8, (long long **)&v17);
    sub_10015EE9C(v13 + 6, a2);
    int v17 = __p;
    BOOL result = sub_10015ED8C(v12, (unsigned __int16 *)__p, (uint64_t)&unk_1004BC2F8, (long long **)&v17);
    if (result[11] >= 0x33uLL)
    {
      do
      {
        int v17 = __p;
        char v14 = (int64x2_t *)sub_10015ED8C(v12, (unsigned __int16 *)__p, (uint64_t)&unk_1004BC2F8, (long long **)&v17);
        v14[5] = vaddq_s64(v14[5], (int64x2_t)xmmword_1004B59B0);
        sub_10015F274((uint64_t)v14[3].i64, 1);
        int v17 = __p;
        BOOL result = sub_10015ED8C(v12, (unsigned __int16 *)__p, (uint64_t)&unk_1004BC2F8, (long long **)&v17);
      }
      while (result[11] > 0x32uLL);
    }
  }
  return result;
}

void sub_10015B40C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10015B428(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 256;
  if (*(unsigned char *)(a1 + 360))
  {
    sub_100004950(__p, "addTOACIRDataEvent: purging previous event");
    if (!*(unsigned char *)(a1 + 360)) {
      sub_10000AE44();
    }
    sub_10015A9EC((uint64_t *)__p, v4);
    if (v12 < 0) {
      operator delete(__p[0]);
    }
  }
  sub_100004950(__p, "addTOACIRDataV2Event: adding event");
  sub_10015A9EC((uint64_t *)__p, a2);
  if (v12 < 0) {
    operator delete(__p[0]);
  }
  int v5 = *(unsigned __int8 *)(a1 + 360);
  long long v7 = *(_OWORD *)(a2 + 16);
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 16) = v7;
  *(_OWORD *)(v4 + 32) = v6;
  long long v9 = *(_OWORD *)(a2 + 64);
  long long v8 = *(_OWORD *)(a2 + 80);
  long long v10 = *(_OWORD *)(a2 + 48);
  *(void *)(v4 + 96) = *(void *)(a2 + 96);
  *(_OWORD *)(v4 + 64) = v9;
  *(_OWORD *)(v4 + 8sub_100149BDC(&a9, 0) = v8;
  *(_OWORD *)(v4 + 48) = v10;
  if (!v5) {
    *(unsigned char *)(a1 + 36sub_100149BDC(&a9, 0) = 1;
  }
}

void sub_10015B508(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_10015B524(uint64_t **a1, uint64_t a2)
{
  int v4 = *(unsigned __int16 *)(a2 + 8);
  unsigned __int16 v18 = *(_WORD *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 32);
  unint64_t v17 = v5;
  long long v6 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string buf = 67109376;
    *(_DWORD *)&uint8_t buf[4] = v4;
    LOWORD(v21[0]) = 2048;
    *(void *)((char *)v21 + 2) = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#aggr,addRangeResultDebugEvent: ticketId %hu targetMacAddress 0x%016llx", buf, 0x12u);
  }
  *(void *)std::string buf = &v18;
  long long v7 = sub_10015E200(a1 + 74, &v18, (uint64_t)&unk_1004BC2F8, (_WORD **)buf);
  sub_10015E2D0(v7 + 5, &v17, (uint64_t *)&v17);
  *(_WORD *)std::string buf = v18;
  v21[0] = v17;
  char v19 = buf;
  long long v8 = sub_10015E38C(a1 + 56, (unsigned __int16 *)buf, (uint64_t)&unk_1004BC2F8, (_OWORD **)&v19);
  long long v9 = v8;
  int v10 = *(unsigned __int16 *)(a2 + 20);
  char v11 = v8 + 174;
  if (*((unsigned char *)v8 + 1656) || *((unsigned char *)v8 + 1746) && *((unsigned __int16 *)v8 + 872) != v10)
  {
    sub_10015A6E8((unsigned char *)v8 + 48);
    int v12 = *((unsigned __int8 *)v9 + 1656);
    memcpy(v11, (const void *)a2, 0x108uLL);
    if (v12) {
      goto LABEL_10;
    }
  }
  else
  {
    memcpy(v8 + 174, (const void *)a2, 0x108uLL);
  }
  *((unsigned char *)v9 + 1656) = 1;
LABEL_10:
  *((_WORD *)v9 + 872) = v10;
  *((unsigned char *)v9 + 1746) = 1;
  unsigned __int16 v13 = a1 + 71;
  char v19 = buf;
  char v14 = sub_10015F2D4(v13, (unsigned __int16 *)buf, (uint64_t)&unk_1004BC2F8, (long long **)&v19);
  sub_10015F3E4(v14 + 6, (void *)a2);
  char v19 = buf;
  BOOL result = sub_10015F2D4(v13, (unsigned __int16 *)buf, (uint64_t)&unk_1004BC2F8, (long long **)&v19);
  if ((unint64_t)result[11] >= 0x33)
  {
    do
    {
      char v19 = buf;
      char v16 = (int64x2_t *)sub_10015F2D4(v13, (unsigned __int16 *)buf, (uint64_t)&unk_1004BC2F8, (long long **)&v19);
      v16[5] = vaddq_s64(v16[5], (int64x2_t)xmmword_1004B59B0);
      sub_10015F794((uint64_t)v16[3].i64, 1);
      char v19 = buf;
      BOOL result = sub_10015F2D4(v13, (unsigned __int16 *)buf, (uint64_t)&unk_1004BC2F8, (long long **)&v19);
    }
    while ((unint64_t)result[11] > 0x32);
  }
  return result;
}

void sub_10015B7A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 368;
  if (*(unsigned char *)(a1 + 440))
  {
    sub_100004950(__p, "addRangeResultDebugV2Event: purging previous event");
    if (!*(unsigned char *)(a1 + 440)) {
      sub_10000AE44();
    }
    sub_10015AAD4((uint64_t *)__p, v4);
    if (v10 < 0) {
      operator delete(__p[0]);
    }
  }
  sub_100004950(__p, "addRangeResultDebugV2Event: adding event");
  sub_10015AAD4((uint64_t *)__p, a2);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  int v5 = *(unsigned __int8 *)(a1 + 440);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)a2;
  long long v7 = *(_OWORD *)(a2 + 32);
  long long v6 = *(_OWORD *)(a2 + 48);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(void *)(v4 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(v4 + 32) = v7;
  *(_OWORD *)(v4 + 48) = v6;
  *(_OWORD *)(v4 + 16) = v8;
  if (!v5) {
    *(unsigned char *)(a1 + 44sub_100149BDC(&a9, 0) = 1;
  }
}

void sub_10015B880(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10015B89C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4 == 1)
  {
    int v9 = *(unsigned __int16 *)(a2 + 48);
    if (*(_WORD *)(a2 + 48))
    {
      long long v6 = qword_1008ABDE0;
      if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT)) {
        return;
      }
      sub_1003A8354(v9, &__p);
      if (v31 >= 0) {
        p_p = &__p;
      }
      else {
        p_p = __p;
      }
      LODWORD(buf) = 136315138;
      *(void *)((char *)&buf + 4) = p_p;
      long long v8 = "#aggr,addRangeTimestampEvent(remote): ignoring due to status %s";
      goto LABEL_15;
    }
    unsigned int v14 = *(unsigned __int16 *)(a2 + 50);
    unint64_t v15 = sub_10015B17C(a1, v14);
    if (v16)
    {
      LOWORD(buf) = v14;
      *((void *)&buf + 1) = v15;
      std::string __p = (void *)buf;
      uint64_t v30 = v15;
      if ((uint64_t *)(a1 + 480) == sub_10015FD64(a1 + 472, (unsigned __int16 *)&__p)
        || !*(void *)(sub_10015DB70(a1 + 472, (unsigned __int16 *)&__p) + 40)
        || (unsigned int v17 = *(unsigned __int16 *)(a2 + 58),
            std::string __p = &buf,
            unsigned __int16 v18 = sub_10015F7F4((uint64_t **)(a1 + 472), (unsigned __int16 *)&buf, (uint64_t)&unk_1004BC2F8, (long long **)&__p), v19 = v18[11] + v18[10] - 1, v17 >= *(unsigned __int16 *)(*(void *)(v18[7] + 8 * (v19 / 0x12)) + 216 * (v19 % 0x12) + 58)))
      {
        std::string __p = &buf;
        __int16 v24 = sub_10015F7F4((uint64_t **)(a1 + 472), (unsigned __int16 *)&buf, (uint64_t)&unk_1004BC2F8, (long long **)&__p);
        sub_10015F904(v24 + 6, a2);
        std::string __p = &buf;
        if ((unint64_t)sub_10015F7F4((uint64_t **)(a1 + 472), (unsigned __int16 *)&buf, (uint64_t)&unk_1004BC2F8, (long long **)&__p)[11] >= 0x33)
        {
          do
          {
            std::string __p = &buf;
            int v25 = (int64x2_t *)sub_10015F7F4((uint64_t **)(a1 + 472), (unsigned __int16 *)&buf, (uint64_t)&unk_1004BC2F8, (long long **)&__p);
            v25[5] = vaddq_s64(v25[5], (int64x2_t)xmmword_1004B59B0);
            sub_10015FD04((uint64_t)v25[3].i64, 1);
            std::string __p = &buf;
          }
          while ((unint64_t)sub_10015F7F4((uint64_t **)(a1 + 472), (unsigned __int16 *)&buf, (uint64_t)&unk_1004BC2F8, (long long **)&__p)[11] > 0x32);
        }
        sub_10015BDE4(a1, v14);
      }
      else
      {
        uint64_t v20 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          int v21 = *(unsigned __int16 *)(a2 + 58);
          std::string __p = &buf;
          __int16 v22 = sub_10015F7F4((uint64_t **)(a1 + 472), (unsigned __int16 *)&buf, (uint64_t)&unk_1004BC2F8, (long long **)&__p);
          unint64_t v23 = v22[11] + v22[10] - 1;
          LODWORD(v23) = *(unsigned __int16 *)(*(void *)(v22[7] + 8 * (v23 / 0x12)) + 216 * (v23 % 0x12) + 58);
          LODWORD(__p) = 67109376;
          HIDWORD(__p) = v21;
          LOWORD(v3sub_100149BDC(&a9, 0) = 1024;
          *(_DWORD *)((char *)&v30 + 2) = v23;
          _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "#aggr,addRangeTimestampEvent(remote) received msmt cycleIdx(%hu) < queued cycleIdx(%hu). Resetting aggregator.", (uint8_t *)&__p, 0xEu);
        }
        sub_10015D740(a1, *(unsigned __int16 *)(a2 + 50));
      }
    }
  }
  else
  {
    if (v4) {
      return;
    }
    int v5 = *(unsigned __int16 *)(a2 + 48);
    if (*(_WORD *)(a2 + 48))
    {
      long long v6 = qword_1008ABDE0;
      if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT)) {
        return;
      }
      sub_1003A8354(v5, &__p);
      if (v31 >= 0) {
        long long v7 = &__p;
      }
      else {
        long long v7 = __p;
      }
      LODWORD(buf) = 136315138;
      *(void *)((char *)&buf + 4) = v7;
      long long v8 = "#aggr,addRangeTimestampEvent(local): ignoring due to status %s";
LABEL_15:
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, v8, (uint8_t *)&buf, 0xCu);
      if (v31 < 0) {
        operator delete(__p);
      }
      return;
    }
    unsigned __int16 v27 = *(_WORD *)(a2 + 50);
    if (!*(unsigned char *)(a2 + 208)) {
      sub_100411140();
    }
    unint64_t v26 = *(void *)(a2 + 116);
    std::string __p = &v27;
    char v11 = sub_10015E200((uint64_t **)(a1 + 592), &v27, (uint64_t)&unk_1004BC2F8, (_WORD **)&__p);
    sub_10015E2D0(v11 + 5, &v26, (uint64_t *)&v26);
    LOWORD(__p) = v27;
    uint64_t v30 = v26;
    *(void *)&long long buf = &__p;
    int v12 = sub_10015F7F4((uint64_t **)(a1 + 496), (unsigned __int16 *)&__p, (uint64_t)&unk_1004BC2F8, (long long **)&buf);
    sub_10015F904(v12 + 6, a2);
    *(void *)&long long buf = &__p;
    if ((unint64_t)sub_10015F7F4((uint64_t **)(a1 + 496), (unsigned __int16 *)&__p, (uint64_t)&unk_1004BC2F8, (long long **)&buf)[11] >= 0x33)
    {
      do
      {
        *(void *)&long long buf = &__p;
        unsigned __int16 v13 = (int64x2_t *)sub_10015F7F4((uint64_t **)(a1 + 496), (unsigned __int16 *)&__p, (uint64_t)&unk_1004BC2F8, (long long **)&buf);
        v13[5] = vaddq_s64(v13[5], (int64x2_t)xmmword_1004B59B0);
        sub_10015FD04((uint64_t)v13[3].i64, 1);
        *(void *)&long long buf = &__p;
      }
      while ((unint64_t)sub_10015F7F4((uint64_t **)(a1 + 496), (unsigned __int16 *)&__p, (uint64_t)&unk_1004BC2F8, (long long **)&buf)[11] > 0x32);
    }
    sub_10015BDE4(a1, v27);
  }
}

void sub_10015BDE4(uint64_t a1, unsigned int a2)
{
  uint64_t v3 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#aggr,sendIfHaveReceivedRoseMeasurementsFromTimestamps", buf, 2u);
  }
  unint64_t v4 = sub_10015B17C(a1, a2);
  if (v5)
  {
    LOWORD(v128) = a2;
    *((void *)&v128 + 1) = v4;
    long long v6 = (uint64_t **)(a1 + 496);
    *(void *)long long buf = v128;
    *(void *)&uint8_t buf[8] = v4;
    BOOL v7 = (uint64_t *)(a1 + 504) != sub_10015FD64(a1 + 496, (unsigned __int16 *)buf)
      && *(void *)(sub_10015DB70((uint64_t)v6, (unsigned __int16 *)buf) + 40) != 0;
    int v9 = (uint64_t **)(a1 + 472);
    *(_OWORD *)long long buf = v128;
    if ((uint64_t *)(a1 + 480) == sub_10015FD64(a1 + 472, (unsigned __int16 *)buf))
    {
      BOOL v11 = 0;
    }
    else
    {
      uint64_t v10 = *(void *)(sub_10015DB70((uint64_t)v9, (unsigned __int16 *)buf) + 40);
      BOOL v11 = v10 != 0;
      if (v10) {
        BOOL v12 = v7;
      }
      else {
        BOOL v12 = 0;
      }
      if (v12)
      {
        unsigned __int16 v13 = (uint64_t **)(a1 + 616);
        *(void *)long long buf = &v128;
        unsigned int v14 = sub_100160098((uint64_t **)(a1 + 616), (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (_OWORD **)buf);
        *(void *)long long buf = &v128;
        unint64_t v15 = sub_10015F7F4(v6, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf);
        uint64_t v16 = *(unsigned __int16 *)(*(void *)(v15[7] + 8 * (v15[10] / 0x12uLL)) + 216 * (v15[10] % 0x12uLL) + 58);
        *((void *)v14 + 6) = (*((void *)v14 + 6)
                              + ((unint64_t)(v16 < (unsigned __int16)*((void *)v14 + 6)) << 16)) & 0xFFFFFFFFFFFF0000 | v16;
        unsigned int v17 = (uint64_t **)(a1 + 640);
        *(void *)long long buf = &v128;
        unsigned __int16 v18 = sub_100160098((uint64_t **)(a1 + 640), (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (_OWORD **)buf);
        *(void *)long long buf = &v128;
        unint64_t v19 = sub_10015F7F4(v9, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf);
        uint64_t v20 = *(unsigned __int16 *)(*(void *)(v19[7] + 8 * (v19[10] / 0x12uLL)) + 216 * (v19[10] % 0x12uLL) + 58);
        *((void *)v18 + 6) = (*((void *)v18 + 6)
                              + ((unint64_t)(v20 < (unsigned __int16)*((void *)v18 + 6)) << 16)) & 0xFFFFFFFFFFFF0000 | v20;
        for (*(void *)long long buf = &v128;
              sub_10015F7F4(v9, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf)[11];
              *(void *)long long buf = &v128)
        {
          *(void *)long long buf = &v128;
          unint64_t v21 = *((void *)sub_100160098(v17, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (_OWORD **)buf) + 6);
          *(void *)long long buf = &v128;
          if (v21 >= *((void *)sub_100160098(v13, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (_OWORD **)buf)
                      + 6))
            break;
          *(void *)long long buf = &v128;
          __int16 v22 = (int64x2_t *)sub_10015F7F4(v9, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf);
          v22[5] = vaddq_s64(v22[5], (int64x2_t)xmmword_1004B59B0);
          sub_10015FD04((uint64_t)v22[3].i64, 1);
          *(void *)long long buf = &v128;
          if (sub_10015F7F4(v9, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf)[11])
          {
            *(void *)long long buf = &v128;
            unint64_t v23 = sub_100160098(v17, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (_OWORD **)buf);
            *(void *)long long buf = &v128;
            __int16 v24 = sub_10015F7F4(v9, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf);
            uint64_t v25 = *(unsigned __int16 *)(*(void *)(v24[7] + 8 * (v24[10] / 0x12uLL)) + 216 * (v24[10] % 0x12uLL) + 58);
            *((void *)v23 + 6) = (*((void *)v23 + 6)
                                  + ((unint64_t)(v25 < (unsigned __int16)*((void *)v23 + 6)) << 16)) & 0xFFFFFFFFFFFF0000 | v25;
          }
        }
        for (*(void *)long long buf = &v128;
              sub_10015F7F4(v6, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf)[11];
              *(void *)long long buf = &v128)
        {
          *(void *)long long buf = &v128;
          unint64_t v26 = *((void *)sub_100160098(v13, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (_OWORD **)buf) + 6);
          *(void *)long long buf = &v128;
          if (v26 >= *((void *)sub_100160098(v17, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (_OWORD **)buf)
                      + 6))
            break;
          *(void *)long long buf = &v128;
          unsigned __int16 v27 = (int64x2_t *)sub_10015F7F4(v6, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf);
          v27[5] = vaddq_s64(v27[5], (int64x2_t)xmmword_1004B59B0);
          sub_10015FD04((uint64_t)v27[3].i64, 1);
          *(void *)long long buf = &v128;
          if (sub_10015F7F4(v6, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf)[11])
          {
            *(void *)long long buf = &v128;
            __int16 v28 = sub_100160098(v13, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (_OWORD **)buf);
            *(void *)long long buf = &v128;
            int v29 = sub_10015F7F4(v6, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf);
            uint64_t v30 = *(unsigned __int16 *)(*(void *)(v29[7] + 8 * (v29[10] / 0x12uLL)) + 216 * (v29[10] % 0x12uLL) + 58);
            *((void *)v28 + 6) = (*((void *)v28 + 6)
                                  + ((unint64_t)(v30 < (unsigned __int16)*((void *)v28 + 6)) << 16)) & 0xFFFFFFFFFFFF0000 | v30;
          }
        }
        for (*(void *)long long buf = &v128;
              sub_10015F7F4(v9, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf)[11];
              *(void *)long long buf = &v128)
        {
          *(void *)long long buf = &v128;
          if (!sub_10015F7F4(v6, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf)[11]) {
            break;
          }
          *(void *)long long buf = &v128;
          unint64_t v31 = *((void *)sub_100160098(v17, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (_OWORD **)buf) + 6);
          *(void *)long long buf = &v128;
          if (v31 >= *((void *)sub_100160098(v13, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (_OWORD **)buf)
                      + 6))
            break;
          *(void *)long long buf = &v128;
          __int16 v32 = (int64x2_t *)sub_10015F7F4(v9, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf);
          v32[5] = vaddq_s64(v32[5], (int64x2_t)xmmword_1004B59B0);
          sub_10015FD04((uint64_t)v32[3].i64, 1);
          *(void *)long long buf = &v128;
          if (sub_10015F7F4(v9, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf)[11])
          {
            *(void *)long long buf = &v128;
            int v33 = sub_100160098(v17, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (_OWORD **)buf);
            *(void *)long long buf = &v128;
            __int16 v34 = sub_10015F7F4(v9, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf);
            uint64_t v35 = *(unsigned __int16 *)(*(void *)(v34[7] + 8 * (v34[10] / 0x12uLL)) + 216 * (v34[10] % 0x12uLL) + 58);
            *((void *)v33 + 6) = (*((void *)v33 + 6)
                                  + ((unint64_t)(v35 < (unsigned __int16)*((void *)v33 + 6)) << 16)) & 0xFFFFFFFFFFFF0000 | v35;
          }
        }
        *(void *)long long buf = &v128;
        if (sub_10015F7F4(v6, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf)[11])
        {
          *(void *)long long buf = &v128;
          if (sub_10015F7F4(v9, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf)[11])
          {
            *(void *)long long buf = &v128;
            uint64_t v36 = *((void *)sub_100160098(v17, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (_OWORD **)buf) + 6);
            *(void *)long long buf = &v128;
            if (v36 == *((void *)sub_100160098(v13, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (_OWORD **)buf)+ 6))
            {
              *(void *)long long buf = &v128;
              int v37 = sub_10015F7F4(v6, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf);
              unint64_t v38 = *(void *)(v37[7] + 8 * (v37[10] / 0x12uLL)) + 216 * (v37[10] % 0x12uLL);
              char v121 = *(unsigned char *)v38;
              long long v39 = *(_OWORD *)(v38 + 17);
              long long v236 = *(_OWORD *)(v38 + 1);
              long long v237 = v39;
              long long v238 = *(_OWORD *)(v38 + 33);
              char v239 = *(unsigned char *)(v38 + 49);
              int v40 = *(unsigned __int16 *)(v38 + 50);
              long long v41 = *(_OWORD *)(v38 + 52);
              long long v42 = *(_OWORD *)(v38 + 68);
              long long v43 = *(_OWORD *)(v38 + 100);
              long long v234 = *(_OWORD *)(v38 + 84);
              long long v235 = v43;
              long long v232 = v41;
              long long v233 = v42;
              uint64_t v123 = *(void *)(v38 + 116);
              int v231 = *(_DWORD *)(v38 + 204);
              long long v230 = *(_OWORD *)(v38 + 188);
              long long v44 = *(_OWORD *)(v38 + 156);
              long long v229 = *(_OWORD *)(v38 + 172);
              long long v228 = v44;
              long long v45 = *(_OWORD *)(v38 + 124);
              long long v227 = *(_OWORD *)(v38 + 140);
              long long v226 = v45;
              int v122 = *(unsigned __int8 *)(v38 + 208);
              *(_DWORD *)&v127[3] = *(_DWORD *)(v38 + 212);
              *(_DWORD *)double v127 = *(_DWORD *)(v38 + 209);
              *(void *)long long buf = &v128;
              int v46 = sub_10015F7F4(v9, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf);
              unint64_t v47 = *(void *)(v46[7] + 8 * (v46[10] / 0x12uLL)) + 216 * (v46[10] % 0x12uLL);
              char v48 = *(unsigned char *)v47;
              long long v49 = *(_OWORD *)(v47 + 17);
              long long v222 = *(_OWORD *)(v47 + 1);
              long long v223 = v49;
              long long v224 = *(_OWORD *)(v47 + 33);
              char v225 = *(unsigned char *)(v47 + 49);
              int v50 = *(unsigned __int16 *)(v47 + 50);
              int v125 = *(_DWORD *)(v47 + 52);
              __int16 v126 = *(_WORD *)(v47 + 56);
              char v119 = v48;
              int v120 = *(unsigned __int16 *)(v47 + 58);
              long long v51 = *(_OWORD *)(v47 + 60);
              long long v214 = *(_OWORD *)(v47 + 76);
              long long v213 = v51;
              long long v52 = *(_OWORD *)(v47 + 124);
              long long v218 = *(_OWORD *)(v47 + 140);
              long long v217 = v52;
              long long v53 = *(_OWORD *)(v47 + 92);
              long long v216 = *(_OWORD *)(v47 + 108);
              long long v215 = v53;
              *(_OWORD *)((char *)v221 + 12) = *(_OWORD *)(v47 + 200);
              v221[0] = *(_OWORD *)(v47 + 188);
              long long v54 = *(_OWORD *)(v47 + 156);
              long long v220 = *(_OWORD *)(v47 + 172);
              long long v219 = v54;
              *(void *)long long buf = &v128;
              uint64_t v55 = (int64x2_t *)sub_10015F7F4(v6, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf);
              v55[5] = vaddq_s64(v55[5], (int64x2_t)xmmword_1004B59B0);
              sub_10015FD04((uint64_t)v55[3].i64, 1);
              *(void *)long long buf = &v128;
              unint64_t v56 = (int64x2_t *)sub_10015F7F4(v9, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf);
              v56[5] = vaddq_s64(v56[5], (int64x2_t)xmmword_1004B59B0);
              sub_10015FD04((uint64_t)v56[3].i64, 1);
              if (v40 != v50) {
                sub_1004111E8();
              }
              uint64_t v57 = (uint64_t **)(a1 + 520);
              *(_OWORD *)long long buf = v128;
              if ((uint64_t *)(a1 + 528) == sub_10015FD64(a1 + 520, (unsigned __int16 *)buf)
                || !*(void *)(sub_10015DB70((uint64_t)v57, (unsigned __int16 *)buf) + 40))
              {
                goto LABEL_56;
              }
              double v58 = (uint64_t **)(a1 + 664);
              *(void *)long long buf = &v128;
              uint64_t v59 = sub_100160098((uint64_t **)(a1 + 664), (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (_OWORD **)buf);
              *(void *)long long buf = &v128;
              uint64_t v60 = sub_10015E85C(v57, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf);
              uint64_t v61 = *(unsigned __int16 *)(*(void *)(v60[7] + (((unint64_t)v60[10] >> 2) & 0x3FFFFFFFFFFFFFF8))
                                        + ((v60[10] & 0x1F) << 7)
                                        + 14);
              *((void *)v59 + 6) = (*((void *)v59 + 6)
                                    + ((unint64_t)(v61 < (unsigned __int16)*((void *)v59 + 6)) << 16)) & 0xFFFFFFFFFFFF0000 | v61;
              for (*(void *)long long buf = &v128;
                    sub_10015E85C(v57, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf)[11];
                    *(void *)long long buf = &v128)
              {
                *(void *)long long buf = &v128;
                unint64_t v62 = *((void *)sub_100160098(v58, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (_OWORD **)buf)
                      + 6);
                *(void *)long long buf = &v128;
                if (v62 >= *((void *)sub_100160098(v13, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (_OWORD **)buf)+ 6))break; {
                *(void *)long long buf = &v128;
                }
                long double v63 = (int64x2_t *)sub_10015E85C(v57, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf);
                v63[5] = vaddq_s64(v63[5], (int64x2_t)xmmword_1004B59B0);
                sub_10015ED2C((uint64_t)v63[3].i64, 1);
                *(void *)long long buf = &v128;
                if (sub_10015E85C(v57, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf)[11])
                {
                  *(void *)long long buf = &v128;
                  double v64 = sub_100160098(v58, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (_OWORD **)buf);
                  *(void *)long long buf = &v128;
                  double v65 = sub_10015E85C(v57, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf);
                  uint64_t v66 = *(unsigned __int16 *)(*(void *)(v65[7]
                                                        + (((unint64_t)v65[10] >> 2) & 0x3FFFFFFFFFFFFFF8))
                                            + ((v65[10] & 0x1F) << 7)
                                            + 14);
                  *((void *)v64 + 6) = (*((void *)v64 + 6)
                                        + ((unint64_t)(v66 < (unsigned __int16)*((void *)v64 + 6)) << 16)) & 0xFFFFFFFFFFFF0000 | v66;
                }
              }
              *(void *)long long buf = &v128;
              if (sub_10015E85C(v57, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf)[11]
                && (*(void *)long long buf = &v128,
                    uint64_t v67 = *((void *)sub_100160098(v58, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (_OWORD **)buf)+ 6), *(void *)buf = &v128, v67 == *((void *)sub_100160098(v13, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (_OWORD **)buf)+ 6)))
              {
                *(void *)long long buf = &v128;
                uint64_t v68 = sub_10015E85C(v57, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf);
                uint64_t v69 = *(void *)(v68[7] + (((unint64_t)v68[10] >> 2) & 0x3FFFFFFFFFFFFFF8))
                    + ((v68[10] & 0x1F) << 7);
                BYTE4(v118) = *(unsigned char *)v69;
                long long v70 = *(_OWORD *)(v69 + 81);
                long long v210 = *(_OWORD *)(v69 + 65);
                long long v211 = v70;
                v212[0] = *(_OWORD *)(v69 + 97);
                *(_OWORD *)((char *)v212 + 15) = *(_OWORD *)(v69 + 112);
                long long v71 = *(_OWORD *)(v69 + 17);
                long long v206 = *(_OWORD *)(v69 + 1);
                long long v207 = v71;
                long long v72 = *(_OWORD *)(v69 + 49);
                long long v208 = *(_OWORD *)(v69 + 33);
                long long v209 = v72;
                *(void *)long long buf = &v128;
                double v73 = (int64x2_t *)sub_10015E85C(v57, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf);
                v73[5] = vaddq_s64(v73[5], (int64x2_t)xmmword_1004B59B0);
                sub_10015ED2C((uint64_t)v73[3].i64, 1);
                LODWORD(v118) = 1;
              }
              else
              {
LABEL_56:
                uint64_t v118 = 0;
              }
              long double v81 = (uint64_t **)(a1 + 544);
              *(_OWORD *)long long buf = v128;
              if ((uint64_t *)(a1 + 552) == sub_10015FD64(a1 + 544, (unsigned __int16 *)buf)
                || !*(void *)(sub_10015DB70((uint64_t)v81, (unsigned __int16 *)buf) + 40))
              {
                goto LABEL_67;
              }
              long double v82 = (uint64_t **)(a1 + 688);
              *(void *)long long buf = &v128;
              long double v83 = sub_100160098((uint64_t **)(a1 + 688), (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (_OWORD **)buf);
              *(void *)long long buf = &v128;
              long double v84 = sub_10015ED8C(v81, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf);
              uint64_t v85 = *(unsigned __int16 *)(*(void *)(v84[7] + 8 * (v84[10] / 0x33uLL)) + 80 * (v84[10] % 0x33uLL) + 14);
              *((void *)v83 + 6) = (*((void *)v83 + 6)
                                    + ((unint64_t)(v85 < (unsigned __int16)*((void *)v83 + 6)) << 16)) & 0xFFFFFFFFFFFF0000 | v85;
              for (*(void *)long long buf = &v128;
                    sub_10015ED8C(v81, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf)[11];
                    *(void *)long long buf = &v128)
              {
                *(void *)long long buf = &v128;
                unint64_t v86 = *((void *)sub_100160098(v82, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (_OWORD **)buf)
                      + 6);
                *(void *)long long buf = &v128;
                if (v86 >= *((void *)sub_100160098(v13, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (_OWORD **)buf)+ 6))break; {
                *(void *)long long buf = &v128;
                }
                double v87 = (int64x2_t *)sub_10015ED8C(v81, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf);
                v87[5] = vaddq_s64(v87[5], (int64x2_t)xmmword_1004B59B0);
                sub_10015F274((uint64_t)v87[3].i64, 1);
                *(void *)long long buf = &v128;
                if (sub_10015ED8C(v81, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf)[11])
                {
                  *(void *)long long buf = &v128;
                  uint64_t v88 = sub_100160098(v82, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (_OWORD **)buf);
                  *(void *)long long buf = &v128;
                  double v89 = sub_10015ED8C(v81, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf);
                  uint64_t v90 = *(unsigned __int16 *)(*(void *)(v89[7] + 8 * (v89[10] / 0x33uLL))
                                            + 80 * (v89[10] % 0x33uLL)
                                            + 14);
                  *((void *)v88 + 6) = (*((void *)v88 + 6)
                                        + ((unint64_t)(v90 < (unsigned __int16)*((void *)v88 + 6)) << 16)) & 0xFFFFFFFFFFFF0000 | v90;
                }
              }
              *(void *)long long buf = &v128;
              if (sub_10015ED8C(v81, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf)[11]
                && (*(void *)long long buf = &v128,
                    uint64_t v91 = *((void *)sub_100160098(v82, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (_OWORD **)buf)+ 6), *(void *)buf = &v128, v91 == *((void *)sub_100160098(v13, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (_OWORD **)buf)+ 6)))
              {
                *(void *)long long buf = &v128;
                uint64_t v92 = sub_10015ED8C(v81, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf);
                unint64_t v93 = *(void *)(v92[7] + 8 * (v92[10] / 0x33uLL)) + 80 * (v92[10] % 0x33uLL);
                char v94 = *(unsigned char *)v93;
                long long v95 = *(_OWORD *)(v93 + 17);
                long long v96 = *(_OWORD *)(v93 + 49);
                long long v204 = *(_OWORD *)(v93 + 33);
                v205[0] = v96;
                *(_OWORD *)((char *)v205 + 15) = *(_OWORD *)(v93 + 64);
                long long v97 = *(_OWORD *)(v93 + 1);
                long long v203 = v95;
                long long v202 = v97;
                *(void *)long long buf = &v128;
                double v98 = (int64x2_t *)sub_10015ED8C(v81, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf);
                v98[5] = vaddq_s64(v98[5], (int64x2_t)xmmword_1004B59B0);
                sub_10015F274((uint64_t)v98[3].i64, 1);
                int v99 = 1;
              }
              else
              {
LABEL_67:
                int v99 = 0;
                char v94 = 0;
              }
              uint64_t v100 = (uint64_t **)(a1 + 568);
              *(_OWORD *)long long buf = v128;
              if ((uint64_t *)(a1 + 576) == sub_10015FD64(a1 + 568, (unsigned __int16 *)buf)
                || !*(void *)(sub_10015DB70((uint64_t)v100, (unsigned __int16 *)buf) + 40))
              {
                goto LABEL_78;
              }
              uint64_t v101 = (uint64_t **)(a1 + 712);
              *(void *)long long buf = &v128;
              double v102 = sub_100160098((uint64_t **)(a1 + 712), (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (_OWORD **)buf);
              *(void *)long long buf = &v128;
              double v103 = sub_10015F2D4(v100, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf);
              uint64_t v104 = *(unsigned __int16 *)(*(void *)(v103[7]
                                                     + (((unint64_t)v103[10] >> 1) & 0x7FFFFFFFFFFFFFF8))
                                         + 264 * (v103[10] & 0xF)
                                         + 20);
              *((void *)v102 + 6) = (*((void *)v102 + 6)
                                     + ((unint64_t)(v104 < (unsigned __int16)*((void *)v102 + 6)) << 16)) & 0xFFFFFFFFFFFF0000 | v104;
              while (*(void *)(a1 + 584))
              {
                *(void *)long long buf = &v128;
                unint64_t v105 = *((void *)sub_100160098(v101, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (_OWORD **)buf)+ 6);
                *(void *)long long buf = &v128;
                if (v105 >= *((void *)sub_100160098(v13, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (_OWORD **)buf)+ 6))break; {
                *(void *)long long buf = &v128;
                }
                v106 = (int64x2_t *)sub_10015F2D4(v100, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf);
                v106[5] = vaddq_s64(v106[5], (int64x2_t)xmmword_1004B59B0);
                sub_10015F794((uint64_t)v106[3].i64, 1);
                *(void *)long long buf = &v128;
                if (sub_10015F2D4(v100, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf)[11])
                {
                  *(void *)long long buf = &v128;
                  v107 = sub_100160098(v101, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (_OWORD **)buf);
                  *(void *)long long buf = &v128;
                  v108 = sub_10015F2D4(v100, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf);
                  uint64_t v109 = *(unsigned __int16 *)(*(void *)(v108[7]
                                                         + (((unint64_t)v108[10] >> 1) & 0x7FFFFFFFFFFFFFF8))
                                             + 264 * (v108[10] & 0xF)
                                             + 20);
                  *((void *)v107 + 6) = (*((void *)v107 + 6)
                                         + ((unint64_t)(v109 < (unsigned __int16)*((void *)v107 + 6)) << 16)) & 0xFFFFFFFFFFFF0000 | v109;
                }
              }
              *(void *)long long buf = &v128;
              if (sub_10015F2D4(v100, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf)[11]
                && (*(void *)long long buf = &v128,
                    v110 = *((void *)sub_100160098(v101, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (_OWORD **)buf)+ 6), *(void *)long long buf = &v128, v110 == *((void *)sub_100160098(v13, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (_OWORD **)buf)+ 6)))
              {
                *(void *)long long buf = &v128;
                v111 = sub_10015F2D4(v100, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf);
                double v112 = (char *)(*(void *)(v111[7] + (((unint64_t)v111[10] >> 1) & 0x7FFFFFFFFFFFFFF8))
                              + 264 * (v111[10] & 0xF));
                char v113 = *v112;
                memcpy(__dst, v112 + 1, sizeof(__dst));
                *(void *)long long buf = &v128;
                uint64_t v114 = (int64x2_t *)sub_10015F2D4(v100, (unsigned __int16 *)&v128, (uint64_t)&unk_1004BC2F8, (long long **)buf);
                v114[5] = vaddq_s64(v114[5], (int64x2_t)xmmword_1004B59B0);
                sub_10015F794((uint64_t)v114[3].i64, 1);
                int v115 = 1;
              }
              else
              {
LABEL_78:
                int v115 = 0;
                char v113 = 0;
              }
              buf[0] = 0;
              char v142 = 0;
              char v197 = 0;
              char v198 = 0;
              v200[271] = 0;
              v200[343] = 0;
              char v163 = v119;
              long long v164 = v222;
              long long v165 = v223;
              long long v166 = v224;
              char v167 = v225;
              __int16 v168 = v40;
              __int16 v170 = v126;
              int v169 = v125;
              __int16 v171 = v120;
              long long v178 = v219;
              long long v179 = v220;
              *(_OWORD *)v180 = v221[0];
              *(_OWORD *)&v180[12] = *(_OWORD *)((char *)v221 + 12);
              long long v174 = v215;
              long long v175 = v216;
              long long v176 = v217;
              long long v177 = v218;
              long long v172 = v213;
              long long v173 = v214;
              char v181 = 1;
              char v143 = v121;
              long long v144 = v236;
              long long v145 = v237;
              long long v146 = v238;
              char v147 = v239;
              __int16 v148 = v40;
              long long v149 = v232;
              long long v150 = v233;
              long long v151 = v234;
              long long v152 = v235;
              uint64_t v153 = v123;
              long long v156 = v228;
              long long v157 = v229;
              long long v158 = v230;
              long long v154 = v226;
              long long v155 = v227;
              int v159 = v231;
              char v160 = v122;
              *(_DWORD *)v161 = *(_DWORD *)v127;
              *(_DWORD *)&v161[3] = *(_DWORD *)&v127[3];
              char v162 = 1;
              char v182 = BYTE4(v118);
              long long v185 = v208;
              long long v186 = v209;
              long long v183 = v206;
              long long v184 = v207;
              long long v188 = v211;
              *(_OWORD *)v189 = v212[0];
              long long v187 = v210;
              *(_OWORD *)&v189[15] = *(_OWORD *)((char *)v212 + 15);
              char v190 = v118;
              char v191 = v94;
              *(_OWORD *)&v195[15] = *(_OWORD *)((char *)v205 + 15);
              long long v194 = v204;
              *(_OWORD *)v195 = v205[0];
              long long v192 = v202;
              long long v193 = v203;
              char v196 = v99;
              char v199 = v113;
              memcpy(v200, __dst, 0x107uLL);
              v200[263] = v115;
              double v116 = qword_1008ABDE0;
              if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
              {
                if (!v122) {
                  sub_10000AE44();
                }
                *(_DWORD *)double v129 = 67110400;
                int v130 = v40;
                __int16 v131 = 1024;
                int v132 = v120;
                __int16 v133 = 2048;
                uint64_t v134 = v123;
                __int16 v135 = 1024;
                int v136 = v118;
                __int16 v137 = 1024;
                int v138 = v99;
                __int16 v139 = 1024;
                int v140 = v115;
                _os_log_impl((void *)&_mh_execute_header, v116, OS_LOG_TYPE_DEFAULT, "#aggr,sendIfHaveReceivedRoseMeasurementsFromTimestamps sent ticketId %hu cycleIndex %hu targetMac 0x%016llx aoacir %d toacir %d dbg %d", v129, 0x2Au);
              }
              uint64_t v117 = *(void *)(a1 + 24);
              if (!v117) {
                sub_100027894();
              }
              (*(void (**)(uint64_t, unsigned char *))(*(void *)v117 + 48))(v117, buf);
              sub_10015DC28((uint64_t)buf);
              return;
            }
          }
        }
        uint64_t v80 = qword_1008ABDE0;
        if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT)) {
          return;
        }
        *(_WORD *)long long buf = 0;
        long double v77 = "#aggr,cannot find matching local range timestamp event or remote range timestamp event";
        long double v78 = v80;
        uint32_t v79 = 2;
LABEL_54:
        _os_log_impl((void *)&_mh_execute_header, v78, OS_LOG_TYPE_DEFAULT, v77, buf, v79);
        return;
      }
    }
    uint64_t v74 = qword_1008ABDE0;
    if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    uint64_t v75 = "True";
    if (v7) {
      unint64_t v76 = "False";
    }
    else {
      unint64_t v76 = "True";
    }
    if (v11) {
      uint64_t v75 = "False";
    }
    *(_DWORD *)long long buf = 136315394;
    *(void *)&uint8_t buf[4] = v76;
    *(_WORD *)&unsigned char buf[12] = 2080;
    *(void *)&buf[14] = v75;
    long double v77 = "#aggr,local timestamp queue empty? %s, remote timestamp queue empty? %s";
    long double v78 = v74;
    uint32_t v79 = 22;
    goto LABEL_54;
  }
  long long v8 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
    sub_10041116C(a2, v8);
  }
}

void sub_10015D720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_10015D740(uint64_t a1, int a2)
{
  unsigned __int16 v35 = a2;
  unint64_t v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    LODWORD(buf) = 67109120;
    DWORD1(buf) = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#aggr,clearState: ticketId %hu", (uint8_t *)&buf, 8u);
  }
  char v5 = *(uint64_t **)(a1 + 448);
  if (v5 != (uint64_t *)(a1 + 456))
  {
    do
    {
      if (*((unsigned __int16 *)v5 + 16) == v35)
      {
        long long v6 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v7 = v5[5];
          LODWORD(buf) = 134217984;
          *(void *)((char *)&buf + 4) = v7;
          _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#aggr,clearState: erasing slot with mac addr %016llx", (uint8_t *)&buf, 0xCu);
        }
        long long v8 = sub_100027218((uint64_t **)(a1 + 448), v5);
        sub_10015DC28((uint64_t)(v5 + 6));
        operator delete(v5);
      }
      else
      {
        int v9 = (uint64_t *)v5[1];
        if (v9)
        {
          do
          {
            long long v8 = v9;
            int v9 = (uint64_t *)*v9;
          }
          while (v9);
        }
        else
        {
          do
          {
            long long v8 = (uint64_t *)v5[2];
            BOOL v10 = *v8 == (void)v5;
            char v5 = v8;
          }
          while (!v10);
        }
      }
      char v5 = v8;
    }
    while (v8 != (uint64_t *)(a1 + 456));
  }
  if (*(unsigned char *)(a1 + 160))
  {
    if (*(unsigned __int16 *)(a1 + 40) == v35)
    {
      BOOL v11 = qword_1008ABDE0;
      if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT)
        || (LOWORD(buf) = 0,
            _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "#aggr,clearState: erasing most recent AOA CIR event", (uint8_t *)&buf, 2u), *(unsigned char *)(a1 + 160)))
      {
        *(unsigned char *)(a1 + 16sub_100149BDC(&a9, 0) = 0;
      }
    }
  }
  if (*(unsigned char *)(a1 + 248))
  {
    if (*(unsigned __int16 *)(a1 + 176) == v35)
    {
      BOOL v12 = qword_1008ABDE0;
      if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT)
        || (LOWORD(buf) = 0,
            _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "#aggr,clearState: erasing most recent TOA CIR event", (uint8_t *)&buf, 2u), *(unsigned char *)(a1 + 248)))
      {
        *(unsigned char *)(a1 + 248) = 0;
      }
    }
  }
  if (*(unsigned char *)(a1 + 360))
  {
    if (*(unsigned __int16 *)(a1 + 264) == v35)
    {
      unsigned __int16 v13 = qword_1008ABDE0;
      if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT)
        || (LOWORD(buf) = 0,
            _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "#aggr,clearState: erasing most recent TOA CIR V2 event", (uint8_t *)&buf, 2u), *(unsigned char *)(a1 + 360)))
      {
        *(unsigned char *)(a1 + 36sub_100149BDC(&a9, 0) = 0;
      }
    }
  }
  uint64_t v14 = *(void *)(a1 + 600);
  if (v14)
  {
    uint64_t v15 = a1 + 600;
    do
    {
      unsigned int v16 = *(unsigned __int16 *)(v14 + 32);
      BOOL v17 = v16 >= v35;
      if (v16 >= v35) {
        unsigned __int16 v18 = (uint64_t *)v14;
      }
      else {
        unsigned __int16 v18 = (uint64_t *)(v14 + 8);
      }
      if (v17) {
        uint64_t v15 = v14;
      }
      uint64_t v14 = *v18;
    }
    while (*v18);
    if (v15 != a1 + 600 && v35 >= *(unsigned __int16 *)(v15 + 32))
    {
      *(void *)&long long buf = &v35;
      unint64_t v19 = sub_10015E200((uint64_t **)(a1 + 592), &v35, (uint64_t)&unk_1004BC2F8, (_WORD **)&buf);
      uint64_t v20 = (uint64_t **)v19[5];
      unint64_t v21 = v19 + 6;
      if (v20 != v19 + 6)
      {
        int v33 = (uint64_t **)(a1 + 496);
        __int16 v34 = (uint64_t **)(a1 + 472);
        __int16 v22 = (uint64_t **)(a1 + 520);
        unint64_t v23 = (uint64_t **)(a1 + 544);
        __int16 v24 = (uint64_t **)(a1 + 568);
        uint64_t v25 = (uint64_t **)(a1 + 616);
        unint64_t v26 = (uint64_t **)(a1 + 640);
        unsigned __int16 v27 = (uint64_t **)(a1 + 664);
        __int16 v28 = (uint64_t **)(a1 + 688);
        int v29 = (uint64_t **)(a1 + 712);
        do
        {
          uint64_t v30 = v20[4];
          LOWORD(buf) = v35;
          *((void *)&buf + 1) = v30;
          sub_10015FE7C(v34, (unsigned __int16 *)&buf);
          sub_10015FE7C(v33, (unsigned __int16 *)&buf);
          sub_10015FED8(v22, (unsigned __int16 *)&buf);
          sub_10015FF34(v23, (unsigned __int16 *)&buf);
          sub_10015FF90(v24, (unsigned __int16 *)&buf);
          sub_10015FFEC(v25, (unsigned __int16 *)&buf);
          sub_10015FFEC(v26, (unsigned __int16 *)&buf);
          sub_10015FFEC(v27, (unsigned __int16 *)&buf);
          sub_10015FFEC(v28, (unsigned __int16 *)&buf);
          sub_10015FFEC(v29, (unsigned __int16 *)&buf);
          unint64_t v31 = v20[1];
          if (v31)
          {
            do
            {
              __int16 v32 = (uint64_t **)v31;
              unint64_t v31 = (uint64_t *)*v31;
            }
            while (v31);
          }
          else
          {
            do
            {
              __int16 v32 = (uint64_t **)v20[2];
              BOOL v10 = *v32 == (uint64_t *)v20;
              uint64_t v20 = v32;
            }
            while (!v10);
          }
          uint64_t v20 = v32;
        }
        while (v32 != v21);
      }
    }
  }
}

uint64_t sub_10015DB70(uint64_t a1, unsigned __int16 *a2)
{
  uint64_t v2 = *sub_10015E448(a1, &v4, a2);
  if (!v2) {
    sub_10015FDEC("map::at:  key not found");
  }
  return v2 + 48;
}

void sub_10015DBB0(unsigned char *a1)
{
  if (a1[776]) {
    a1[776] = 0;
  }
  if (a1[1000]) {
    a1[1000] = 0;
  }
  if (a1[1136]) {
    a1[1136] = 0;
  }
  if (a1[1224]) {
    a1[1224] = 0;
  }
  if (a1[1336]) {
    a1[1336] = 0;
  }
  if (a1[1608]) {
    a1[1608] = 0;
  }
  if (a1[1688]) {
    a1[1688] = 0;
  }
}

uint64_t sub_10015DC28(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 552))
  {
    uint64_t v2 = *(void **)(a1 + 136);
    if (v2)
    {
      *(void *)(a1 + 144) = v2;
      operator delete(v2);
    }
    uint64_t v3 = *(void **)(a1 + 72);
    if (v3)
    {
      *(void *)(a1 + 8sub_100149BDC(&a9, 0) = v3;
      operator delete(v3);
    }
  }
  return a1;
}

void sub_10015DC74(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 552))
  {
    uint64_t v2 = *(void **)(a1 + 136);
    if (v2)
    {
      *(void *)(a1 + 144) = v2;
      operator delete(v2);
    }
    uint64_t v3 = *(void **)(a1 + 72);
    if (v3)
    {
      *(void *)(a1 + 8sub_100149BDC(&a9, 0) = v3;
      operator delete(v3);
    }
    *(unsigned char *)(a1 + 552) = 0;
  }
}

uint64_t sub_10015DCC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_10015DD58(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_10015DDDC(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10015DDDC(a1, *a2);
    sub_10015DDDC(a1, a2[1]);
    sub_10015DC28((uint64_t)(a2 + 6));
    operator delete(a2);
  }
}

void sub_10015DE38(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10015DE38(a1, *a2);
    sub_10015DE38(a1, a2[1]);
    sub_10015DE94(a2 + 6);
    operator delete(a2);
  }
}

uint64_t sub_10015DE94(void *a1)
{
  uint64_t v2 = (void **)a1[1];
  uint64_t v3 = (void **)a1[2];
  a1[5] = 0;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v3 = (void **)a1[2];
      uint64_t v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 9;
  }
  else
  {
    if (v5 != 2) {
      goto LABEL_9;
    }
    uint64_t v6 = 18;
  }
  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    uint64_t v7 = *v2++;
    operator delete(v7);
  }

  return sub_10003ACC4((uint64_t)a1);
}

void sub_10015DF3C(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10015DF3C(a1, *a2);
    sub_10015DF3C(a1, a2[1]);
    sub_10003AC1C(a2 + 6);
    operator delete(a2);
  }
}

void sub_10015DF98(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10015DF98(a1, *a2);
    sub_10015DF98(a1, a2[1]);
    sub_10015DFF4(a2 + 6);
    operator delete(a2);
  }
}

uint64_t sub_10015DFF4(void *a1)
{
  uint64_t v2 = (void **)a1[1];
  uint64_t v3 = (void **)a1[2];
  a1[5] = 0;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v3 = (void **)a1[2];
      uint64_t v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 25;
  }
  else
  {
    if (v5 != 2) {
      goto LABEL_9;
    }
    uint64_t v6 = 51;
  }
  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    uint64_t v7 = *v2++;
    operator delete(v7);
  }

  return sub_10003ACC4((uint64_t)a1);
}

void sub_10015E09C(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10015E09C(a1, *a2);
    sub_10015E09C(a1, a2[1]);
    sub_10015E0F8(a2 + 6);
    operator delete(a2);
  }
}

uint64_t sub_10015E0F8(void *a1)
{
  uint64_t v2 = (void **)a1[1];
  uint64_t v3 = (void **)a1[2];
  a1[5] = 0;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v3 = (void **)a1[2];
      uint64_t v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 8;
  }
  else
  {
    if (v5 != 2) {
      goto LABEL_9;
    }
    uint64_t v6 = 16;
  }
  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    uint64_t v7 = *v2++;
    operator delete(v7);
  }

  return sub_10003ACC4((uint64_t)a1);
}

void sub_10015E1A0(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10015E1A0(a1, *a2);
    sub_10015E1A0(a1, a2[1]);
    sub_10003E96C((uint64_t)(a2 + 5), (void *)a2[6]);
    operator delete(a2);
  }
}

uint64_t **sub_10015E200(uint64_t **a1, unsigned __int16 *a2, uint64_t a3, _WORD **a4)
{
  uint64_t v7 = a1 + 1;
  uint64_t v6 = a1[1];
  if (v6)
  {
    unsigned int v8 = *a2;
    while (1)
    {
      while (1)
      {
        int v9 = (uint64_t **)v6;
        unsigned int v10 = *((unsigned __int16 *)v6 + 16);
        if (v8 >= v10) {
          break;
        }
        uint64_t v6 = *v9;
        uint64_t v7 = v9;
        if (!*v9) {
          goto LABEL_10;
        }
      }
      if (v10 >= v8) {
        break;
      }
      uint64_t v6 = v9[1];
      if (!v6)
      {
        uint64_t v7 = v9 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    int v9 = a1 + 1;
LABEL_10:
    BOOL v11 = operator new(0x40uLL);
    uint8_t v11[16] = **a4;
    *((void *)v11 + 7) = 0;
    *((void *)v11 + 6) = 0;
    *((void *)v11 + 5) = v11 + 24;
    sub_100026D98(a1, (uint64_t)v9, v7, (uint64_t *)v11);
    return (uint64_t **)v11;
  }
  return v9;
}

uint64_t *sub_10015E2D0(uint64_t **a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = a1 + 1;
  unint64_t v5 = a1[1];
  if (v5)
  {
    unint64_t v7 = *a2;
    while (1)
    {
      while (1)
      {
        unsigned int v8 = (uint64_t **)v5;
        unint64_t v9 = v5[4];
        if (v7 >= v9) {
          break;
        }
        unint64_t v5 = *v8;
        uint64_t v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (v9 >= v7) {
        break;
      }
      unint64_t v5 = v8[1];
      if (!v5)
      {
        uint64_t v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    unsigned int v8 = a1 + 1;
LABEL_10:
    unsigned int v10 = (uint64_t *)operator new(0x28uLL);
    v10[4] = *a3;
    sub_100026D98(a1, (uint64_t)v8, v6, v10);
    return v10;
  }
  return (uint64_t *)v8;
}

uint64_t *sub_10015E38C(uint64_t **a1, unsigned __int16 *a2, uint64_t a3, _OWORD **a4)
{
  uint64_t v6 = (void **)sub_10015E448((uint64_t)a1, &v12, a2);
  unint64_t v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    unsigned int v8 = (uint64_t **)v6;
    unint64_t v7 = (uint64_t *)operator new(0x6E8uLL);
    v10[1] = a1 + 1;
    *((_OWORD *)v7 + 2) = **a4;
    bzero(v7 + 6, 0x6B8uLL);
    char v11 = 1;
    sub_100026D98(a1, v12, v8, v7);
    v10[0] = 0;
    sub_10015E4B8((uint64_t)v10, 0);
  }
  return v7;
}

void *sub_10015E448(uint64_t a1, void *a2, unsigned __int16 *a3)
{
  uint64_t v5 = *(void *)(a1 + 8);
  BOOL result = (void *)(a1 + 8);
  uint64_t v4 = v5;
  if (v5)
  {
    unsigned int v6 = *a3;
    unint64_t v7 = *((void *)a3 + 1);
    while (1)
    {
      while (1)
      {
        unsigned int v8 = (void *)v4;
        unsigned int v9 = *(unsigned __int16 *)(v4 + 32);
        if (v6 >= v9) {
          break;
        }
LABEL_6:
        uint64_t v4 = *v8;
        BOOL result = v8;
        if (!*v8) {
          goto LABEL_14;
        }
      }
      if (v6 == v9)
      {
        unint64_t v10 = v8[5];
        if (v7 < v10) {
          goto LABEL_6;
        }
        if (v10 >= v7) {
          goto LABEL_14;
        }
      }
      else if (v9 >= v6)
      {
        goto LABEL_14;
      }
      BOOL result = v8 + 1;
      uint64_t v4 = v8[1];
      if (!v4) {
        goto LABEL_14;
      }
    }
  }
  unsigned int v8 = result;
LABEL_14:
  *a2 = v8;
  return result;
}

void sub_10015E4B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_10015DC28((uint64_t)v2 + 48);
    }
    operator delete(v2);
  }
}

char *sub_10015E510(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = *((void *)result + 2);
  unsigned int v9 = *(char **)result;
  if (a4 > (v8 - *(void *)result) >> 3)
  {
    if (v9)
    {
      *((void *)result + 1) = v9;
      operator delete(v9);
      uint64_t v8 = 0;
      void *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 >> 61) {
      sub_1000267C4();
    }
    uint64_t v10 = v8 >> 2;
    if (v8 >> 2 <= a4) {
      uint64_t v10 = a4;
    }
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v11 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v10;
    }
    BOOL result = sub_1001503E8(v7, v11);
    unsigned __int16 v13 = (char *)v7[1];
    uint64_t v12 = (void **)(v7 + 1);
    unsigned int v9 = v13;
LABEL_16:
    size_t v17 = a3 - (void)__src;
    if (v17)
    {
      unsigned __int16 v18 = v9;
      unint64_t v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  uint64_t v12 = (void **)(result + 8);
  uint64_t v14 = (unsigned char *)*((void *)result + 1);
  unint64_t v15 = (v14 - v9) >> 3;
  if (v15 >= a4) {
    goto LABEL_16;
  }
  unsigned int v16 = &__src[8 * v15];
  if (v14 != v9)
  {
    BOOL result = (char *)memmove(*(void **)result, __src, v14 - v9);
    unsigned int v9 = (char *)*v12;
  }
  size_t v17 = a3 - (void)v16;
  if (v17)
  {
    unsigned __int16 v18 = v9;
    unint64_t v19 = v16;
LABEL_18:
    BOOL result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  NSObject *v12 = &v9[v17];
  return result;
}

char *sub_10015E61C(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = *((void *)result + 2);
  unsigned int v9 = *(char **)result;
  if (0x6DB6DB6DB6DB6DB7 * ((v8 - *(void *)result) >> 3) < a4)
  {
    if (v9)
    {
      *((void *)result + 1) = v9;
      operator delete(v9);
      uint64_t v8 = 0;
      void *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 > 0x492492492492492) {
      sub_1000267C4();
    }
    unint64_t v10 = 0x6DB6DB6DB6DB6DB7 * (v8 >> 3);
    uint64_t v11 = 2 * v10;
    if (2 * v10 <= a4) {
      uint64_t v11 = a4;
    }
    if (v10 >= 0x249249249249249) {
      unint64_t v12 = 0x492492492492492;
    }
    else {
      unint64_t v12 = v11;
    }
    BOOL result = sub_1001504A8(v7, v12);
    uint64_t v14 = (char *)v7[1];
    unsigned __int16 v13 = (void **)(v7 + 1);
    unsigned int v9 = v14;
LABEL_16:
    size_t v17 = a3 - (void)__src;
    if (v17)
    {
      unsigned __int16 v18 = v9;
      unint64_t v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  unsigned __int16 v13 = (void **)(result + 8);
  unint64_t v15 = (unsigned char *)*((void *)result + 1);
  if (0x6DB6DB6DB6DB6DB7 * ((v15 - v9) >> 3) >= a4) {
    goto LABEL_16;
  }
  unsigned int v16 = &__src[8 * ((v15 - v9) >> 3)];
  if (v15 != v9)
  {
    BOOL result = (char *)memmove(*(void **)result, __src, v15 - v9);
    unsigned int v9 = (char *)*v13;
  }
  size_t v17 = a3 - (void)v16;
  if (v17)
  {
    unsigned __int16 v18 = v9;
    unint64_t v19 = v16;
LABEL_18:
    BOOL result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  *unsigned __int16 v13 = &v9[v17];
  return result;
}

uint64_t sub_10015E778(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v4 = *(_OWORD *)(a2 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 8sub_100149BDC(&a9, 0) = 0;
  *(void *)(a1 + 88) = 0;
  sub_10015036C((void *)(a1 + 72), *(const void **)(a2 + 72), *(void *)(a2 + 80), (uint64_t)(*(void *)(a2 + 80) - *(void *)(a2 + 72)) >> 3);
  long long v7 = *(_OWORD *)(a2 + 96);
  long long v8 = *(_OWORD *)(a2 + 112);
  uint64_t v9 = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 128) = v9;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 96) = v7;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  sub_10015042C((void *)(a1 + 136), *(const void **)(a2 + 136), *(void *)(a2 + 144), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(void *)(a2 + 144) - *(void *)(a2 + 136)) >> 3));
  memcpy((void *)(a1 + 160), (const void *)(a2 + 160), 0x181uLL);
  return a1;
}

void sub_10015E840(_Unwind_Exception *exception_object)
{
  long long v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 8sub_100149BDC(&a9, 0) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_10015E85C(uint64_t **a1, unsigned __int16 *a2, uint64_t a3, long long **a4)
{
  long long v6 = (void **)sub_10015E448((uint64_t)a1, &v13, a2);
  long long v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    long long v8 = (uint64_t **)v6;
    long long v7 = (uint64_t *)operator new(0x60uLL);
    v11[1] = a1 + 1;
    long long v9 = **a4;
    *((_OWORD *)v7 + 4) = 0u;
    *((_OWORD *)v7 + 5) = 0u;
    *((_OWORD *)v7 + 2) = v9;
    *((_OWORD *)v7 + 3) = 0u;
    char v12 = 1;
    sub_100026D98(a1, v13, v8, v7);
    v11[0] = 0;
    sub_10015E914((uint64_t)v11, 0);
  }
  return v7;
}

void sub_10015E914(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_10003AC1C(v2 + 6);
    }
    operator delete(v2);
  }
}

__n128 sub_10015E96C(void *a1, long long *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 4 * (v4 - v5) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_10015EA14(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }
  unint64_t v8 = *(void *)(v5 + ((v7 >> 2) & 0x3FFFFFFFFFFFFFF8)) + ((v7 & 0x1F) << 7);
  long long v9 = *a2;
  long long v10 = a2[1];
  long long v11 = a2[3];
  *(_OWORD *)(v8 + 32) = a2[2];
  *(_OWORD *)(v8 + 48) = v11;
  *(_OWORD *)unint64_t v8 = v9;
  *(_OWORD *)(v8 + 16) = v10;
  __n128 result = (__n128)a2[4];
  long long v13 = a2[5];
  long long v14 = a2[7];
  *(_OWORD *)(v8 + 96) = a2[6];
  *(_OWORD *)(v8 + 112) = v14;
  *(__n128 *)(v8 + 64) = result;
  *(_OWORD *)(v8 + 8sub_100149BDC(&a9, 0) = v13;
  ++a1[5];
  return result;
}

void sub_10015EA14(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x20;
  unint64_t v4 = v2 - 32;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    long long v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      __int16 v34 = (char *)sub_100056BF0(v5, v33);
      unsigned __int16 v35 = &v34[8 * (v33 >> 2)];
      int v37 = &v34[8 * v36];
      unint64_t v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        long long v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)long long v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    unint64_t v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      long long v9 = (char *)a1[1];
    }
    unint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0x1000uLL);
      sub_100151818(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0x1000uLL);
    sub_100151930((uint64_t)a1, &v54);
    long long v44 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    long long v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      __int16 v34 = (char *)sub_100056BF0((uint64_t)(a1 + 3), v46);
      unsigned __int16 v35 = &v34[8 * (v46 >> 2)];
      int v37 = &v34[8 * v47];
      char v48 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        unint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        long long v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)long long v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      long long v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        unint64_t v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  unint64_t v56 = a1 + 3;
  *(void *)&long long v54 = sub_100056BF0((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  long long v53 = operator new(0x1000uLL);
  sub_100151A50(&v54, &v53);
  unsigned __int16 v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    sub_100151B68((uint64_t)&v54, v27);
  }
  int v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_10015ECE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10015ED2C(uint64_t a1, int a2)
{
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 < 0x20) {
    a2 = 1;
  }
  if (v2 < 0x40) {
    int v4 = a2;
  }
  else {
    int v4 = 0;
  }
  if ((v4 & 1) == 0)
  {
    operator delete(**(void ***)(a1 + 8));
    *(void *)(a1 + 8) += 8;
    *(void *)(a1 + 32) -= 32;
  }
  return v4 ^ 1u;
}

uint64_t *sub_10015ED8C(uint64_t **a1, unsigned __int16 *a2, uint64_t a3, long long **a4)
{
  uint64_t v6 = (void **)sub_10015E448((uint64_t)a1, &v13, a2);
  unint64_t v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    unint64_t v8 = (uint64_t **)v6;
    unint64_t v7 = (uint64_t *)operator new(0x60uLL);
    v11[1] = a1 + 1;
    long long v9 = **a4;
    *((_OWORD *)v7 + 4) = 0u;
    *((_OWORD *)v7 + 5) = 0u;
    *((_OWORD *)v7 + 2) = v9;
    *((_OWORD *)v7 + 3) = 0u;
    char v12 = 1;
    sub_100026D98(a1, v13, v8, v7);
    v11[0] = 0;
    sub_10015EE44((uint64_t)v11, 0);
  }
  return v7;
}

void sub_10015EE44(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_10015DFF4(v2 + 6);
    }
    operator delete(v2);
  }
}

__n128 sub_10015EE9C(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 51 * ((v4 - v5) >> 3) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_10015EF5C(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }
  unint64_t v8 = *(void *)(v5 + 8 * (v7 / 0x33)) + 80 * (v7 % 0x33);
  *(_OWORD *)unint64_t v8 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v10 = *(_OWORD *)(a2 + 32);
  long long v11 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v8 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v8 + 64) = v11;
  *(__n128 *)(v8 + 16) = result;
  *(_OWORD *)(v8 + 32) = v10;
  ++a1[5];
  return result;
}

void sub_10015EF5C(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x33;
  unint64_t v4 = v2 - 51;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    long long v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      __int16 v34 = (char *)sub_100056BF0(v5, v33);
      unsigned __int16 v35 = &v34[8 * (v33 >> 2)];
      int v37 = &v34[8 * v36];
      unint64_t v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        long long v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)long long v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    unint64_t v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      long long v9 = (char *)a1[1];
    }
    unint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0xFF0uLL);
      sub_100151818(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0xFF0uLL);
    sub_100151930((uint64_t)a1, &v54);
    long long v44 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    long long v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      __int16 v34 = (char *)sub_100056BF0((uint64_t)(a1 + 3), v46);
      unsigned __int16 v35 = &v34[8 * (v46 >> 2)];
      int v37 = &v34[8 * v47];
      char v48 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        unint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        long long v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)long long v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      long long v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        unint64_t v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  unint64_t v56 = a1 + 3;
  *(void *)&long long v54 = sub_100056BF0((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  long long v53 = operator new(0xFF0uLL);
  sub_100151A50(&v54, &v53);
  unsigned __int16 v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    sub_100151B68((uint64_t)&v54, v27);
  }
  int v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_10015F228(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10015F274(uint64_t a1, int a2)
{
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 < 0x33) {
    a2 = 1;
  }
  if (v2 < 0x66) {
    int v4 = a2;
  }
  else {
    int v4 = 0;
  }
  if ((v4 & 1) == 0)
  {
    operator delete(**(void ***)(a1 + 8));
    *(void *)(a1 + 8) += 8;
    *(void *)(a1 + 32) -= 51;
  }
  return v4 ^ 1u;
}

uint64_t *sub_10015F2D4(uint64_t **a1, unsigned __int16 *a2, uint64_t a3, long long **a4)
{
  uint64_t v6 = (void **)sub_10015E448((uint64_t)a1, &v13, a2);
  unint64_t v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    unint64_t v8 = (uint64_t **)v6;
    unint64_t v7 = (uint64_t *)operator new(0x60uLL);
    v11[1] = a1 + 1;
    long long v9 = **a4;
    *((_OWORD *)v7 + 4) = 0u;
    *((_OWORD *)v7 + 5) = 0u;
    *((_OWORD *)v7 + 2) = v9;
    *((_OWORD *)v7 + 3) = 0u;
    char v12 = 1;
    sub_100026D98(a1, v13, v8, v7);
    v11[0] = 0;
    sub_10015F38C((uint64_t)v11, 0);
  }
  return v7;
}

void sub_10015F38C(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_10015E0F8(v2 + 6);
    }
    operator delete(v2);
  }
}

void *sub_10015F3E4(void *a1, void *__src)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 2 * (v4 - v5) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_10015F47C(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }
  __n128 result = memcpy((void *)(*(void *)(v5 + ((v7 >> 1) & 0x7FFFFFFFFFFFFFF8)) + 264 * (v7 & 0xF)), __src, 0x108uLL);
  ++a1[5];
  return result;
}

void sub_10015F47C(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x10;
  unint64_t v4 = v2 - 16;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    long long v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      __int16 v34 = (char *)sub_100056BF0(v5, v33);
      unsigned __int16 v35 = &v34[8 * (v33 >> 2)];
      int v37 = &v34[8 * v36];
      unint64_t v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        long long v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)long long v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    unint64_t v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      long long v9 = (char *)a1[1];
    }
    unint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0x1080uLL);
      sub_100151818(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0x1080uLL);
    sub_100151930((uint64_t)a1, &v54);
    long long v44 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    long long v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      __int16 v34 = (char *)sub_100056BF0((uint64_t)(a1 + 3), v46);
      unsigned __int16 v35 = &v34[8 * (v46 >> 2)];
      int v37 = &v34[8 * v47];
      char v48 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        unint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        long long v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)long long v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      long long v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        unint64_t v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  unint64_t v56 = a1 + 3;
  *(void *)&long long v54 = sub_100056BF0((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  long long v53 = operator new(0x1080uLL);
  sub_100151A50(&v54, &v53);
  unsigned __int16 v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    sub_100151B68((uint64_t)&v54, v27);
  }
  int v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_10015F748(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10015F794(uint64_t a1, int a2)
{
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 < 0x10) {
    a2 = 1;
  }
  if (v2 < 0x20) {
    int v4 = a2;
  }
  else {
    int v4 = 0;
  }
  if ((v4 & 1) == 0)
  {
    operator delete(**(void ***)(a1 + 8));
    *(void *)(a1 + 8) += 8;
    *(void *)(a1 + 32) -= 16;
  }
  return v4 ^ 1u;
}

uint64_t *sub_10015F7F4(uint64_t **a1, unsigned __int16 *a2, uint64_t a3, long long **a4)
{
  uint64_t v6 = (void **)sub_10015E448((uint64_t)a1, &v13, a2);
  unint64_t v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    unint64_t v8 = (uint64_t **)v6;
    unint64_t v7 = (uint64_t *)operator new(0x60uLL);
    v11[1] = a1 + 1;
    long long v9 = **a4;
    *((_OWORD *)v7 + 4) = 0u;
    *((_OWORD *)v7 + 5) = 0u;
    *((_OWORD *)v7 + 2) = v9;
    *((_OWORD *)v7 + 3) = 0u;
    char v12 = 1;
    sub_100026D98(a1, v13, v8, v7);
    v11[0] = 0;
    sub_10015F8AC((uint64_t)v11, 0);
  }
  return v7;
}

void sub_10015F8AC(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_10015DE94(v2 + 6);
    }
    operator delete(v2);
  }
}

__n128 sub_10015F904(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 18 * ((v4 - v5) >> 3) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_10015F9EC(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }
  unint64_t v8 = *(void *)(v5 + 8 * (v7 / 0x12)) + 216 * (v7 % 0x12);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)unint64_t v8 = *(_OWORD *)a2;
  *(_OWORD *)(v8 + 16) = v9;
  long long v10 = *(_OWORD *)(a2 + 32);
  long long v11 = *(_OWORD *)(a2 + 48);
  long long v12 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v8 + 8sub_100149BDC(&a9, 0) = v12;
  *(_OWORD *)(v8 + 32) = v10;
  *(_OWORD *)(v8 + 48) = v11;
  long long v13 = *(_OWORD *)(a2 + 96);
  long long v14 = *(_OWORD *)(a2 + 112);
  long long v15 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(v8 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(v8 + 144) = v15;
  *(_OWORD *)(v8 + 96) = v13;
  *(_OWORD *)(v8 + 112) = v14;
  __n128 result = *(__n128 *)(a2 + 160);
  long long v17 = *(_OWORD *)(a2 + 176);
  long long v18 = *(_OWORD *)(a2 + 192);
  *(void *)(v8 + 208) = *(void *)(a2 + 208);
  *(_OWORD *)(v8 + 176) = v17;
  *(_OWORD *)(v8 + 192) = v18;
  *(__n128 *)(v8 + 16sub_100149BDC(&a9, 0) = result;
  ++a1[5];
  return result;
}

void sub_10015F9EC(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x12;
  unint64_t v4 = v2 - 18;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    long long v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      __int16 v34 = (char *)sub_100056BF0(v5, v33);
      unsigned __int16 v35 = &v34[8 * (v33 >> 2)];
      int v37 = &v34[8 * v36];
      unint64_t v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        long long v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)long long v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    unint64_t v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      long long v9 = (char *)a1[1];
    }
    unint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0xF30uLL);
      sub_100151818(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0xF30uLL);
    sub_100151930((uint64_t)a1, &v54);
    long long v44 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    long long v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      __int16 v34 = (char *)sub_100056BF0((uint64_t)(a1 + 3), v46);
      unsigned __int16 v35 = &v34[8 * (v46 >> 2)];
      int v37 = &v34[8 * v47];
      char v48 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        unint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        long long v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)long long v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      long long v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        unint64_t v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  unint64_t v56 = a1 + 3;
  *(void *)&long long v54 = sub_100056BF0((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  long long v53 = operator new(0xF30uLL);
  sub_100151A50(&v54, &v53);
  unsigned __int16 v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    sub_100151B68((uint64_t)&v54, v27);
  }
  int v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_10015FCB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10015FD04(uint64_t a1, int a2)
{
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 < 0x12) {
    a2 = 1;
  }
  if (v2 < 0x24) {
    int v4 = a2;
  }
  else {
    int v4 = 0;
  }
  if ((v4 & 1) == 0)
  {
    operator delete(**(void ***)(a1 + 8));
    *(void *)(a1 + 8) += 8;
    *(void *)(a1 + 32) -= 18;
  }
  return v4 ^ 1u;
}

uint64_t *sub_10015FD64(uint64_t a1, unsigned __int16 *a2)
{
  int v4 = *(uint64_t **)(a1 + 8);
  unint64_t v2 = (uint64_t *)(a1 + 8);
  BOOL v3 = v4;
  if (!v4) {
    return v2;
  }
  unsigned int v5 = *a2;
  unint64_t v6 = *((void *)a2 + 1);
  unint64_t v7 = v2;
  do
  {
    unsigned int v8 = *((unsigned __int16 *)v3 + 16);
    if (v8 >= v5)
    {
      if (v8 == v5)
      {
        if (v3[5] < v6) {
          ++v3;
        }
        else {
          unint64_t v7 = v3;
        }
      }
      else
      {
        unint64_t v7 = v3;
      }
    }
    else
    {
      ++v3;
    }
    BOOL v3 = (uint64_t *)*v3;
  }
  while (v3);
  if (v7 == v2) {
    return v2;
  }
  unsigned int v9 = *((unsigned __int16 *)v7 + 16);
  if (v5 < v9 || v5 == v9 && v6 < v7[5]) {
    return v2;
  }
  return v7;
}

void sub_10015FDEC(const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_10015FE48(exception, a1);
}

void sub_10015FE34(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_10015FE48(std::logic_error *a1, const char *a2)
{
  __n128 result = std::logic_error::logic_error(a1, a2);
  return result;
}

uint64_t sub_10015FE7C(uint64_t **a1, unsigned __int16 *a2)
{
  BOOL v3 = sub_10015FD64((uint64_t)a1, a2);
  if (a1 + 1 == (uint64_t **)v3) {
    return 0;
  }
  int v4 = v3;
  sub_100027218(a1, v3);
  sub_10015DE94(v4 + 6);
  operator delete(v4);
  return 1;
}

uint64_t sub_10015FED8(uint64_t **a1, unsigned __int16 *a2)
{
  BOOL v3 = sub_10015FD64((uint64_t)a1, a2);
  if (a1 + 1 == (uint64_t **)v3) {
    return 0;
  }
  int v4 = v3;
  sub_100027218(a1, v3);
  sub_10003AC1C(v4 + 6);
  operator delete(v4);
  return 1;
}

uint64_t sub_10015FF34(uint64_t **a1, unsigned __int16 *a2)
{
  BOOL v3 = sub_10015FD64((uint64_t)a1, a2);
  if (a1 + 1 == (uint64_t **)v3) {
    return 0;
  }
  int v4 = v3;
  sub_100027218(a1, v3);
  sub_10015DFF4(v4 + 6);
  operator delete(v4);
  return 1;
}

uint64_t sub_10015FF90(uint64_t **a1, unsigned __int16 *a2)
{
  BOOL v3 = sub_10015FD64((uint64_t)a1, a2);
  if (a1 + 1 == (uint64_t **)v3) {
    return 0;
  }
  int v4 = v3;
  sub_100027218(a1, v3);
  sub_10015E0F8(v4 + 6);
  operator delete(v4);
  return 1;
}

uint64_t sub_10015FFEC(uint64_t **a1, unsigned __int16 *a2)
{
  BOOL v3 = sub_10015FD64((uint64_t)a1, a2);
  if (a1 + 1 == (uint64_t **)v3) {
    return 0;
  }
  int v4 = v3;
  sub_100027218(a1, v3);
  operator delete(v4);
  return 1;
}

uint64_t sub_100160040(uint64_t a1, unsigned __int16 *a2)
{
  unint64_t v2 = *(uint64_t ***)(a1 + 8);
  if (v2)
  {
    unsigned int v3 = *a2;
    unint64_t v4 = *((void *)a2 + 1);
    uint64_t result = 1;
    do
    {
      unsigned int v6 = *((unsigned __int16 *)v2 + 16);
      if (v3 >= v6)
      {
        if (v3 != v6)
        {
          if (v6 >= v3) {
            return result;
          }
          goto LABEL_9;
        }
        unint64_t v7 = (unint64_t)v2[5];
        if (v4 >= v7)
        {
          if (v7 >= v4) {
            return result;
          }
LABEL_9:
          ++v2;
        }
      }
      unint64_t v2 = (uint64_t **)*v2;
    }
    while (v2);
  }
  return 0;
}

_OWORD *sub_100160098(uint64_t **a1, unsigned __int16 *a2, uint64_t a3, _OWORD **a4)
{
  unsigned int v6 = (void **)sub_10015E448((uint64_t)a1, &v10, a2);
  unint64_t v7 = *v6;
  if (!*v6)
  {
    unsigned int v8 = (uint64_t **)v6;
    unint64_t v7 = operator new(0x38uLL);
    v7[2] = **a4;
    *((void *)v7 + 6) = 0;
    sub_100026D98(a1, v10, v8, (uint64_t *)v7);
  }
  return v7;
}

void sub_10016013C(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x12u);
}

void sub_10016015C(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

void *sub_10016016C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100852E58[a1]);
}

void *sub_100160180@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100852EB0[a1]);
}

void *sub_100160194@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100852EF8[a1]);
}

void *sub_1001601A8@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100852F18[a1]);
}

uint64_t sub_1001601BC(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  *(unsigned char *)a1 = 0;
  uint64_t v7 = a1 + 40;
  sub_100162B28(a1 + 8, a2);
  unsigned int v8 = operator new(0x20uLL);
  void *v8 = off_100852DA8;
  v8[1] = sub_1001603EC;
  v8[2] = 0;
  void v8[3] = a1;
  v13[3] = v8;
  sub_100159F20(v7, (uint64_t)v13);
  sub_10015DD58(v13);
  sub_100153000(a1 + 776, a3);
  uint64_t v9 = a4[1];
  *(void *)(a1 + 944) = *a4;
  *(void *)(a1 + 952) = v9;
  if (v9) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
  }
  sub_1001506B0(a1 + 960, a3);
  *(void *)(a1 + 1016) = 0;
  *(void *)(a1 + 1008) = 0;
  *(void *)(a1 + 100sub_100149BDC(&a9, 0) = a1 + 1008;
  *(void *)(a1 + 1024) = 850045863;
  *(void *)(a1 + 108sub_100149BDC(&a9, 0) = 0;
  *(_OWORD *)(a1 + 1032) = 0u;
  *(_OWORD *)(a1 + 1048) = 0u;
  *(_OWORD *)(a1 + 1064) = 0u;
  *(unsigned char *)(a1 + 1088) = 1;
  *(_DWORD *)(a1 + 1092) = 0;
  *(_DWORD *)(a1 + 1089) = 0;
  *(unsigned char *)(a1 + 1096) = 1;
  *(_DWORD *)(a1 + 110sub_100149BDC(&a9, 0) = 1;
  *(_DWORD *)(a1 + 1104) = a3;
  *(unsigned char *)(a1 + 1108) = sub_10039CE84(a3);
  if (!*(void *)(a1 + 32))
  {
    uint64_t v11 = "fRoseMeasurementSetCb";
    int v12 = 34;
    goto LABEL_8;
  }
  if (!*(void *)(a1 + 944))
  {
    uint64_t v11 = "fNNClassifierPtr";
    int v12 = 35;
LABEL_8:
    __assert_rtn("RoseMeasurementEngine", "MeasurementEngine.cpp", v12, v11);
  }
  return a1;
}

void sub_100160380(_Unwind_Exception *a1)
{
  unsigned int v6 = *(std::__shared_weak_count **)(v3 + 952);
  if (v6) {
    sub_10001A970(v6);
  }
  sub_100160F50(v4);
  sub_100162958(v2);
  sub_100162CD8(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1001603EC()
{
  uint64_t v0 = __chkstk_darwin();
  uint64_t v2 = v1;
  uint64_t v3 = (std::mutex *)v0;
  sub_1001614F8(v1, (uint64_t)v144);
  if (v153[392])
  {
    v108[1] = v144[1];
    v108[2] = v144[2];
    v108[3] = v144[3];
    v108[0] = v144[0];
    uint64_t v109 = v145;
    uint64_t v110 = 0;
    uint64_t v112 = 0;
    v111 = 0;
    sub_10015036C(&v110, v146, v147, (v147 - (uint64_t)v146) >> 3);
    long long v113 = v148;
    long long v114 = v149;
    uint64_t v115 = v150;
    double v116 = 0;
    uint64_t v118 = 0;
    uint64_t v117 = 0;
    sub_10015042C(&v116, v151, v152, 0x6DB6DB6DB6DB6DB7 * ((v152 - (uint64_t)v151) >> 3));
    memcpy(v119, v153, 0x181uLL);
    long long v4 = v2[68];
    long long v5 = v2[70];
    long long v126 = v2[69];
    long long v127 = v5;
    long long v6 = v2[66];
    long long v122 = v2[65];
    long long v123 = v6;
    long long v124 = v2[67];
    long long v125 = v4;
    long long v7 = v2[64];
    long long v120 = v2[63];
    long long v121 = v7;
    char v128 = *((unsigned char *)v2 + 1136);
    long long v8 = *(long long *)((char *)v2 + 1192);
    long long v131 = *(long long *)((char *)v2 + 1176);
    long long v132 = v8;
    long long v133 = *(long long *)((char *)v2 + 1208);
    char v134 = *((unsigned char *)v2 + 1224);
    long long v9 = *(long long *)((char *)v2 + 1160);
    long long v129 = *(long long *)((char *)v2 + 1144);
    long long v130 = v9;
    long long v10 = v2[80];
    long long v11 = v2[82];
    long long v139 = v2[81];
    v140[0] = v11;
    *(_OWORD *)((char *)v140 + 9) = *(long long *)((char *)v2 + 1321);
    long long v12 = v2[78];
    long long v135 = v2[77];
    long long v136 = v12;
    long long v137 = v2[79];
    long long v138 = v10;
    memcpy(v141, v2 + 84, sizeof(v141));
    v142[0] = 0;
    v142[608] = 0;
    __int16 v143 = 257;
    sub_100161A80((uint64_t)v3, (uint64_t)v108);
    std::mutex::lock(v3 + 16);
    uint64_t sig = v3[17].__m_.__sig;
    uint64_t v14 = *(void *)v3[17].__m_.__opaque;
    std::mutex::unlock(v3 + 16);
    *(void *)long long buf = sig;
    *(void *)&uint8_t buf[8] = v14;
    sub_10014DBDC((uint64_t)v101, (uint64_t)v108, buf);
    sub_10014F5CC((uint64_t)v101, (uint64_t)v88);
    double v15 = v99[18];
    if (v99[18] < -0.5)
    {
      uint64_t v16 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 134217984;
        *(double *)&uint8_t buf[4] = v15;
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "#me,measurementInRangeCheck failed - range %.2f m", buf, 0xCu);
      }
    }
    if (!LOBYTE(v99[46])) {
      __assert_rtn("handleReceivedRoseMeasurements", "MeasurementEngine.cpp", 196, "rangeResultWithUncertainties.rangeUncMeters().has_value()");
    }
    if (!LOBYTE(v99[48])) {
      __assert_rtn("handleReceivedRoseMeasurements", "MeasurementEngine.cpp", 197, "rangeResultWithUncertainties.fieldOfViewConfidence().has_value()");
    }
    if (v128)
    {
      sub_100161DE4((uint64_t)v3, &v120, LOBYTE(v119[104]), buf);
      uint64_t v17 = *(void **)buf;
      if (*(void *)buf != *(void *)&buf[8])
      {
        sub_10015E510((char *)&v92, *(char **)buf, *(uint64_t *)&buf[8], (uint64_t)(*(void *)&buf[8] - *(void *)buf) >> 3);
        uint64_t v17 = *(void **)buf;
      }
      if (v17)
      {
        *(void *)&uint8_t buf[8] = v17;
        operator delete(v17);
      }
    }
    if (sub_1001506B4((uint64_t)&v3[15], (uint64_t)v88, LOBYTE(v3->__m_.__sig)))
    {
      sub_100150790(buf);
      sub_10015E510((char *)&v92, *(char **)buf, *(uint64_t *)&buf[8], (uint64_t)(*(void *)&buf[8] - *(void *)buf) >> 3);
      if (*(void *)buf)
      {
        *(void *)&uint8_t buf[8] = *(void *)buf;
        operator delete(*(void **)buf);
      }
      uint64_t v18 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "#me,normalized SOI RSSI is below threshold, setting NN output to (0, 0, 0, 0, 0, 1)", buf, 2u);
      }
    }
    uint64_t v49 = v3;
    uint64_t v19 = *((void *)&v97 + 1);
    uint64_t v20 = v97;
    if ((void)v97 != *((void *)&v97 + 1))
    {
      int v21 = 1;
      while (*(unsigned char *)(v20 + 32))
      {
        if (!*(unsigned char *)(v20 + 48))
        {
          int v47 = 217;
          char v48 = "aoaHypothesis.measEngElevationUncertaintyDegrees.has_value()";
LABEL_83:
          __assert_rtn("handleReceivedRoseMeasurements", "MeasurementEngine.cpp", v47, v48);
        }
        unint64_t v22 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          if (!LOBYTE(v99[46])) {
            sub_10000AE44();
          }
          if (!LOBYTE(v99[48])) {
            sub_10000AE44();
          }
          uint64_t v23 = *(void *)(v20 + 40);
          uint64_t v24 = *(void *)(v20 + 24);
          *(_DWORD *)long long buf = 67110144;
          *(_DWORD *)&uint8_t buf[4] = v21;
          *(_WORD *)&uint8_t buf[8] = 2048;
          *(double *)&buf[10] = v99[45];
          *(_WORD *)&buf[18] = 2048;
          *(void *)&buf[20] = v24;
          *(_WORD *)&buf[28] = 2048;
          *(void *)&buf[30] = v23;
          *(_WORD *)&buf[38] = 2048;
          *(double *)&buf[40] = v99[47];
          _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "#me,RoseMeasurementEngine::handleReceivedRoseMeasurements: hypothesis %d uncertainties: rangeM %.3f azDeg %.3f elDeg %.3f fovConf %.3f", buf, 0x30u);
        }
        v20 += 56;
        ++v21;
        if (v20 == v19) {
          goto LABEL_26;
        }
      }
      int v47 = 216;
      char v48 = "aoaHypothesis.measEngAzimuthUncertaintyDegrees.has_value()";
      goto LABEL_83;
    }
LABEL_26:
    unint64_t v25 = qword_1008ABDE0;
    if (!BYTE4(v88[0]))
    {
      int v37 = 1;
      uint64_t v28 = v3;
LABEL_42:
      if (v15 >= -0.5) {
        int v38 = v37;
      }
      else {
        int v38 = 0;
      }
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 67109120;
        *(_DWORD *)&uint8_t buf[4] = v38;
        _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "#me,handleReceivedRoseMeasurements: okToPublishToClient %d", buf, 8u);
      }
      BOOL v39 = LOBYTE(v99[26]) != 5 || v28[17].__m_.__opaque[12] != 0;
      BOOL v50 = v39;
      if ((_BYTE)v89) {
        LOBYTE(v89) = 0;
      }
      unsigned __int8 v40 = v119[153];
      if (v119[153] >= 0x100u)
      {
        if ((BYTE4(v113) & 0xFE) == 0x1A)
        {
          if (*(_DWORD *)&v28[17].__m_.__opaque[4] > (int)LOBYTE(v119[153])) {
            int v38 = 0;
          }
          long long v41 = qword_1008ABDE0;
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v42 = "Y";
            if (!v38) {
              uint64_t v42 = "N";
            }
            *(_DWORD *)long long buf = 67109378;
            *(_DWORD *)&uint8_t buf[4] = v40;
            *(_WORD *)&uint8_t buf[8] = 2080;
            *(void *)&buf[10] = v42;
            _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, "#me,handleReceivedRoseMeasurements: mmsValStatus = %d, Used = %s", buf, 0x12u);
          }
        }
        LOBYTE(v38) = v38 != 0;
      }
      uint64_t v56 = v91;
      uint64_t v58 = v93;
      uint64_t v61 = v96;
      *(_OWORD *)&unsigned char buf[32] = v89;
      long long v55 = v90;
      *(_OWORD *)long long buf = v88[0];
      *(_OWORD *)&uint8_t buf[16] = v88[1];
      *(_OWORD *)uint64_t v57 = v92;
      long long v92 = 0uLL;
      uint64_t v93 = 0;
      long long v59 = v94;
      long long v60 = v95;
      long long v43 = v97;
      uint64_t v63 = v98;
      long long v97 = 0uLL;
      uint64_t v98 = 0;
      long long __p = v43;
      memcpy(v64, v99, sizeof(v64));
      long long v71 = v126;
      long long v72 = v127;
      long long v67 = v122;
      long long v68 = v123;
      long long v69 = v124;
      long long v70 = v125;
      long long v65 = v120;
      long long v66 = v121;
      char v73 = v128;
      long long v76 = v131;
      long long v77 = v132;
      long long v78 = v133;
      char v79 = v134;
      long long v74 = v129;
      long long v75 = v130;
      long long v84 = v139;
      v85[0] = v140[0];
      *(_OWORD *)((char *)v85 + 9) = *(_OWORD *)((char *)v140 + 9);
      long long v80 = v135;
      long long v81 = v136;
      long long v82 = v137;
      long long v83 = v138;
      memcpy(v86, v141, sizeof(v86));
      sub_100162A1C((uint64_t)v87, (uint64_t)v88);
      BOOL v44 = v50;
      if (!v100) {
        BOOL v44 = 0;
      }
      v87[616] = v44;
      v87[617] = v38;
      uint64_t v45 = *(void *)&v28->__m_.__opaque[24];
      if (!v45) {
        sub_100027894();
      }
      (*(void (**)(uint64_t, unsigned char *))(*(void *)v45 + 48))(v45, buf);
      sub_10015024C((uint64_t)v87);
      if ((void)__p)
      {
        *((void *)&__p + 1) = __p;
        operator delete((void *)__p);
      }
      if (v57[0])
      {
        v57[1] = v57[0];
        operator delete(v57[0]);
      }
      if ((void)v97)
      {
        *((void *)&v97 + 1) = v97;
        operator delete((void *)v97);
      }
      if ((void)v92)
      {
        *((void *)&v92 + 1) = v92;
        operator delete((void *)v92);
      }
      sub_10015024C((uint64_t)&v107);
      sub_10015024C((uint64_t)&v106);
      if (v104)
      {
        unint64_t v105 = v104;
        operator delete(v104);
      }
      if (v102)
      {
        double v103 = v102;
        operator delete(v102);
      }
      sub_10015024C((uint64_t)v142);
      if (v116)
      {
        uint64_t v117 = v116;
        operator delete(v116);
      }
      if (v110)
      {
        v111 = v110;
        operator delete(v110);
      }
      return sub_10015DC28((uint64_t)v144);
    }
    int v26 = WORD4(v90);
    unsigned __int16 v52 = WORD4(v90);
    uint64_t v27 = v91;
    uint64_t v53 = v91;
    v51.n128_u64[0] = v90;
    v51.n128_f64[1] = v99[18];
    uint64_t v28 = v49;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 67109376;
      *(_DWORD *)&uint8_t buf[4] = v26;
      *(_WORD *)&uint8_t buf[8] = 2048;
      *(void *)&buf[10] = v27;
      _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "#me,handleReceivedRoseMeasurements: addRangeMeasurement for ticket %d mac 0x%016llx", buf, 0x12u);
    }
    *(void *)long long buf = &v52;
    int v29 = sub_100162DB8((uint64_t **)&v49[15].__m_.__opaque[32], &v52, (uint64_t)&unk_1004BC2F8, (long long **)buf);
    double v30 = COERCE_DOUBLE(sub_1001509D4(v29 + 6, &v51));
    uint64_t v32 = v31;
    unint64_t v33 = qword_1008ABDE0;
    BOOL v34 = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT);
    if (v32)
    {
      if (v34)
      {
        *(_DWORD *)long long buf = 134217984;
        *(double *)&uint8_t buf[4] = v30;
        _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "#me,handleReceivedRoseMeasurements: rangeOffsetFromMedian %.3f", buf, 0xCu);
      }
      if (v30 > 1.0)
      {
        unsigned __int16 v35 = qword_1008ABDE0;
        BOOL v36 = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT);
        int v37 = 0;
        if (v36)
        {
          *(_DWORD *)long long buf = 134218240;
          *(double *)&uint8_t buf[4] = v30;
          *(_WORD *)&unsigned char buf[12] = 2048;
          *(void *)&buf[14] = 0x3FF0000000000000;
          _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, "#me,handleReceivedRoseMeasurements: range offset %.3f exceeds max %.3f - not okToPublishToClient", buf, 0x16u);
          int v37 = 0;
        }
        goto LABEL_41;
      }
    }
    else if (v34)
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "#me,handleReceivedRoseMeasurements: no rangeOffsetFromMedian", buf, 2u);
    }
    int v37 = 1;
LABEL_41:
    unint64_t v25 = qword_1008ABDE0;
    goto LABEL_42;
  }
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
    sub_100411214();
  }
  return sub_10015DC28((uint64_t)v144);
}

void sub_100160E84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p)
{
  if (__p) {
    operator delete(__p);
  }
  sub_1001500AC(&STACK[0x750]);
  sub_100161E7C(&STACK[0x9B0]);
  sub_1001612D4(&STACK[0x1330]);
  sub_10015DC28((uint64_t)&STACK[0x1A28]);
  _Unwind_Resume(a1);
}

uint64_t sub_100160F50(uint64_t a1)
{
  return a1;
}

void sub_100160FA0(uint64_t a1, uint64_t a2)
{
  long long v4 = (std::mutex *)(a1 + 1024);
  std::mutex::lock((std::mutex *)(a1 + 1024));
  *(_OWORD *)(a1 + 1088) = *(_OWORD *)(a2 + 4);

  std::mutex::unlock(v4);
}

uint64_t sub_100160FF4(uint64_t a1, void ***a2, void ***a3)
{
  long long v5 = *a2;
  if (!*a2)
  {
    long long v7 = *a3;
    if (!*a3) {
      return 1;
    }
    goto LABEL_9;
  }
  *a2 = 0;
  long long v11 = v5;
  BOOL v6 = sub_100153174(a1 + 776, 5, &v11);
  sub_100149BDC(&v11, 0);
  long long v7 = *a3;
  if (*a3) {
    uint64_t v8 = 0;
  }
  else {
    uint64_t v8 = v6;
  }
  if (v7 && v6)
  {
LABEL_9:
    *a3 = 0;
    long long v10 = v7;
    uint64_t v8 = sub_100153174(a1 + 776, 9, &v10);
    sub_100149BDC(&v10, 0);
  }
  return v8;
}

void sub_1001610B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void sub_1001610D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2 + 96;
  if (*(_WORD *)(a2 + 96))
  {
    long long v5 = *(_OWORD *)(a2 + 48);
    v12[2] = *(_OWORD *)(a2 + 32);
    v12[3] = v5;
    long long v6 = *(_OWORD *)(a2 + 16);
    v12[0] = *(_OWORD *)a2;
    v12[1] = v6;
    long long v7 = *(const void **)(a2 + 72);
    uint64_t v13 = *(void *)(a2 + 64);
    uint64_t v14 = 0;
    uint64_t v8 = *(void *)(a2 + 80);
    double v15 = 0;
    uint64_t v16 = 0;
    sub_10015036C(&v14, v7, v8, (v8 - (uint64_t)v7) >> 3);
    long long v9 = *(_OWORD *)(v4 + 16);
    long long v17 = *(_OWORD *)v4;
    long long v18 = v9;
    uint64_t v19 = *(void *)(v4 + 32);
    long long __p = 0;
    int v21 = 0;
    uint64_t v22 = 0;
    sub_10015042C(&__p, *(const void **)(a2 + 136), *(void *)(a2 + 144), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(void *)(a2 + 144) - *(void *)(a2 + 136)) >> 3));
    memcpy(v23, (const void *)(a2 + 160), 0x181uLL);
    v23[392] = 0;
    v23[520] = 0;
    v23[528] = 0;
    v23[608] = 0;
    v23[616] = 0;
    v23[720] = 0;
    v23[728] = 0;
    v23[992] = 0;
    v24[0] = 0;
    v24[608] = 0;
    __int16 v25 = 0;
    uint64_t v10 = *(void *)(a1 + 32);
    if (!v10) {
      sub_100027894();
    }
    (*(void (**)(uint64_t, _OWORD *))(*(void *)v10 + 48))(v10, v12);
    sub_10015024C((uint64_t)v24);
    if (__p)
    {
      int v21 = __p;
      operator delete(__p);
    }
    if (v14)
    {
      double v15 = v14;
      operator delete(v14);
    }
  }
  else
  {
    uint64_t v11 = a1 + 40;
    sub_100159F24(v11, a2);
  }
}

void sub_1001612A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1001612D4(void *a1)
{
  sub_10015024C((uint64_t)(a1 + 145));
  uint64_t v2 = (void *)a1[17];
  if (v2)
  {
    a1[18] = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)a1[9];
  if (v3)
  {
    a1[10] = v3;
    operator delete(v3);
  }
  return a1;
}

void *sub_100161320(uint64_t a1, uint64_t a2)
{
  return sub_10015AF90(a1 + 40, a2);
}

void *sub_100161328(uint64_t a1, uint64_t a2)
{
  return sub_10015B244(a1 + 40, a2);
}

void sub_100161330(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_100161338(uint64_t a1, uint64_t a2)
{
  return sub_10015B524((uint64_t **)(a1 + 40), a2);
}

void sub_100161340(uint64_t a1, uint64_t a2)
{
}

void sub_100161348(uint64_t a1, uint64_t a2)
{
}

void sub_100161350(uint64_t a1, int a2)
{
  uint64_t v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 67109120;
    LODWORD(v14) = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#me,RoseMeasurementEngine::clearState: ticketId %hu", buf, 8u);
  }
  sub_10015D740(a1 + 40, a2);
  long long v5 = *(uint64_t **)(a1 + 1000);
  long long v6 = (uint64_t *)(a1 + 1008);
  if (v5 != (uint64_t *)(a1 + 1008))
  {
    long long v7 = (uint64_t **)(a1 + 1000);
    do
    {
      if (*((unsigned __int16 *)v5 + 16) == a2)
      {
        uint64_t v8 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v9 = v5[5];
          *(_DWORD *)long long buf = 134217984;
          uint64_t v14 = v9;
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#me,RoseMeasurementEngine::clearState: erasing slot with mac addr %016llx", buf, 0xCu);
        }
        uint64_t v10 = sub_100027218(v7, v5);
        sub_100152418(v5 + 6);
        operator delete(v5);
      }
      else
      {
        uint64_t v11 = (uint64_t *)v5[1];
        if (v11)
        {
          do
          {
            uint64_t v10 = v11;
            uint64_t v11 = (uint64_t *)*v11;
          }
          while (v11);
        }
        else
        {
          do
          {
            uint64_t v10 = (uint64_t *)v5[2];
            BOOL v12 = *v10 == (void)v5;
            long long v5 = v10;
          }
          while (!v12);
        }
      }
      long long v5 = v10;
    }
    while (v10 != v6);
  }
}

void sub_1001614F8(long long *a1@<X0>, uint64_t a2@<X8>)
{
  int v4 = *((unsigned __int8 *)a1 + 1000);
  if (*((unsigned char *)a1 + 552))
  {
    if (v4 | *((unsigned __int8 *)a1 + 776))
    {
      long long v5 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(buf) = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#me,RoseMeasurementEngine::getRangeResult: warning: have range result AND range timestamps; ignoring range timestamps",
          (uint8_t *)&buf,
          2u);
        if (!*((unsigned char *)a1 + 552)) {
          sub_10000AE44();
        }
      }
    }
    long long v6 = a1[3];
    long long v54 = a1[2];
    long long v55 = v6;
    long long v7 = a1[1];
    long long buf = *a1;
    long long v53 = v7;
    uint64_t v8 = (const void *)*((void *)a1 + 9);
    uint64_t v56 = *((void *)a1 + 8);
    long long v57 = 0uLL;
    uint64_t v9 = *((void *)a1 + 10);
    uint64_t v58 = 0;
    sub_10015036C(&v57, v8, v9, (v9 - (uint64_t)v8) >> 3);
    long long v10 = a1[7];
    long long v59 = a1[6];
    long long v60 = v10;
    uint64_t v11 = (const void *)*((void *)a1 + 17);
    uint64_t v61 = *((void *)a1 + 16);
    long long v62 = 0uLL;
    uint64_t v63 = 0;
    sub_10015042C(&v62, v11, *((void *)a1 + 18), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*((void *)a1 + 18) - (void)v11) >> 3));
    memcpy(v64, a1 + 10, 0x181uLL);
    if (*((unsigned char *)a1 + 1688))
    {
      v64[28] = *((void *)a1 + 207);
      LOBYTE(v64[29]) = 1;
      v64[30] = *((void *)a1 + 208);
      LOBYTE(v64[31]) = 1;
      v64[32] = *((void *)a1 + 209);
      LOBYTE(v64[33]) = 1;
      v64[34] = *((void *)a1 + 210);
      LOBYTE(v64[35]) = 1;
    }
    uint64_t v12 = v58;
    *(void *)(a2 + 64) = v56;
    long long v13 = v55;
    *(_OWORD *)(a2 + 32) = v54;
    *(_OWORD *)(a2 + 48) = v13;
    long long v14 = v53;
    *(_OWORD *)a2 = buf;
    *(_OWORD *)(a2 + 16) = v14;
    *(_OWORD *)(a2 + 72) = v57;
    *(void *)(a2 + 88) = v12;
    long long v15 = v59;
    long long v16 = v60;
    *(void *)(a2 + 128) = v61;
    *(_OWORD *)(a2 + 96) = v15;
    *(_OWORD *)(a2 + 112) = v16;
    *(_OWORD *)(a2 + 136) = v62;
    *(void *)(a2 + 152) = v63;
    memcpy((void *)(a2 + 160), v64, 0x181uLL);
    *(unsigned char *)(a2 + 552) = 1;
    return;
  }
  if (*((unsigned char *)a1 + 776)) {
    BOOL v17 = v4 == 0;
  }
  else {
    BOOL v17 = 1;
  }
  if (v17)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_100411394();
    }
    goto LABEL_44;
  }
  if (!*((unsigned char *)a1 + 768))
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_100411248();
    }
    goto LABEL_44;
  }
  if (!*((unsigned char *)a1 + 600))
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10041127C();
    }
    goto LABEL_44;
  }
  if (!*((unsigned char *)a1 + 561))
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_1004112B0();
    }
    goto LABEL_44;
  }
  if (!*((unsigned char *)a1 + 785))
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_1004112E4();
    }
    goto LABEL_44;
  }
  int v18 = *((unsigned __int8 *)a1 + 560);
  int v19 = *((unsigned __int8 *)a1 + 784);
  if (v18 != v19)
  {
    int v37 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
    {
      sub_1003A8C44(v18, &buf);
      int v38 = SBYTE7(v53);
      BOOL v39 = (long long *)buf;
      sub_1003A8C44(v19, v43);
      p_long long buf = &buf;
      if (v38 < 0) {
        p_long long buf = v39;
      }
      if (v44 >= 0) {
        long long v41 = v43;
      }
      else {
        long long v41 = (void **)v43[0];
      }
      *(_DWORD *)char v48 = 136315394;
      uint64_t v49 = p_buf;
      __int16 v50 = 2080;
      __n128 v51 = v41;
      _os_log_error_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_ERROR, "#me,RoseMeasurementEngine::getRangeResult: error: local and remote timestamp events have inconsistent rfChannel, %s vs %s", v48, 0x16u);
      if (v44 < 0) {
        operator delete(v43[0]);
      }
      if (SBYTE7(v53) < 0) {
        operator delete((void *)buf);
      }
    }
    goto LABEL_44;
  }
  double v20 = sub_1000304B4((double)*(int *)((char *)a1 + 735));
  BOOL v21 = sub_100162314((uint64_t)(a1 + 35), (uint64_t)(a1 + 49), v20);
  sub_1001624D0((uint64_t)(a1 + 35), (uint64_t)(a1 + 49));
  double v30 = v29;
  if (!v21)
  {
    uint64_t v42 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_100411318(v42, v30);
    }
LABEL_44:
    *(unsigned char *)a2 = 0;
    *(unsigned char *)(a2 + 552) = 0;
    return;
  }
  sub_100162688((uint64_t)(a1 + 40), v22, v23, v24, v25, v26, v27, v28, (uint64_t)v43, v29, 1.0);
  char v47 = v18;
  if (!*((unsigned char *)a1 + 600)) {
    sub_10000AE44();
  }
  sub_100176E04(&buf, 1, *((unsigned __int16 *)a1 + 305), v43, *((double *)a1 + 74));
  uint64_t v31 = *((void *)a1 + 72);
  *((void *)&buf + 1) = *((void *)a1 + 71);
  LOBYTE(v53) = v31;
  long long v32 = v55;
  *(_OWORD *)(a2 + 32) = v54;
  *(_OWORD *)(a2 + 48) = v32;
  uint64_t v33 = v58;
  *(void *)(a2 + 64) = v56;
  long long v34 = v53;
  *(_OWORD *)a2 = buf;
  *(_OWORD *)(a2 + 16) = v34;
  *(_OWORD *)(a2 + 72) = v57;
  *(void *)(a2 + 88) = v33;
  long long v57 = 0uLL;
  long long v35 = v60;
  *(_OWORD *)(a2 + 96) = v59;
  *(_OWORD *)(a2 + 112) = v35;
  uint64_t v36 = v63;
  *(void *)(a2 + 128) = v61;
  *(_OWORD *)(a2 + 136) = v62;
  *(void *)(a2 + 152) = v36;
  uint64_t v58 = 0;
  long long v62 = 0uLL;
  uint64_t v63 = 0;
  memcpy((void *)(a2 + 160), v64, 0x181uLL);
  *(unsigned char *)(a2 + 552) = 1;
  sub_1001500AC(&buf);
  if (__p)
  {
    unint64_t v46 = __p;
    operator delete(__p);
  }
}

void sub_100161A34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (SLOBYTE(STACK[0x207]) < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_100161A80(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 280) && *(unsigned char *)(a2 + 264))
  {
    double v3 = *(double *)(a2 + 256);
    v33[0] = *(double *)(a2 + 272);
    v33[1] = v3;
    sub_10015303C(a1 + 776, *(unsigned __int8 *)(a2 + 368), v33, (uint64_t)&v31);
    int v4 = (char **)(a2 + 136);
    *(void *)(a2 + 144) = *(void *)(a2 + 136);
    long long v5 = v31;
    long long v6 = v32;
    if (v32 == v31)
    {
      uint64_t v28 = qword_1008ABDE0;
      if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_27;
      }
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "#me,No AoA hypotheses are generated because reverse LUTs are not available", buf, 2u);
    }
    else
    {
      int v7 = 0;
      do
      {
        uint64_t v29 = 0;
        uint64_t v30 = 0;
        sub_1000304D4((long double *)&v30, (double *)&v29, v5[1], *v5);
        unint64_t v8 = *(void *)(a2 + 144);
        unint64_t v9 = *(void *)(a2 + 152);
        if (v8 >= v9)
        {
          uint64_t v12 = 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(v8 - (void)*v4) >> 3);
          unint64_t v13 = v12 + 1;
          if ((unint64_t)(v12 + 1) > 0x492492492492492) {
            sub_1000267C4();
          }
          unint64_t v14 = 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(v9 - (void)*v4) >> 3);
          if (2 * v14 > v13) {
            unint64_t v13 = 2 * v14;
          }
          if (v14 >= 0x249249249249249) {
            unint64_t v15 = 0x492492492492492;
          }
          else {
            unint64_t v15 = v13;
          }
          long long v16 = (char *)sub_100028A48(a2 + 152, v15);
          int v18 = &v16[56 * v12];
          uint64_t v19 = v29;
          *(void *)int v18 = v30;
          *((void *)v18 + 1) = v19;
          *((void *)v18 + 2) = 0;
          v18[24] = 0;
          v18[32] = 0;
          v18[40] = 0;
          unsigned char v18[48] = 0;
          BOOL v21 = *(char **)(a2 + 136);
          double v20 = *(char **)(a2 + 144);
          uint64_t v22 = v18;
          if (v20 != v21)
          {
            do
            {
              long long v23 = *(_OWORD *)(v20 - 56);
              long long v24 = *(_OWORD *)(v20 - 40);
              long long v25 = *(_OWORD *)(v20 - 24);
              *((void *)v22 - 1) = *((void *)v20 - 1);
              *(_OWORD *)(v22 - 24) = v25;
              *(_OWORD *)(v22 - 4sub_100149BDC(&a9, 0) = v24;
              *(_OWORD *)(v22 - 56) = v23;
              v22 -= 56;
              v20 -= 56;
            }
            while (v20 != v21);
            double v20 = *v4;
          }
          uint64_t v11 = v18 + 56;
          *(void *)(a2 + 136) = v22;
          *(void *)(a2 + 144) = v18 + 56;
          *(void *)(a2 + 152) = &v16[56 * v17];
          if (v20) {
            operator delete(v20);
          }
        }
        else
        {
          uint64_t v10 = v29;
          *(void *)unint64_t v8 = v30;
          *(void *)(v8 + 8) = v10;
          *(void *)(v8 + 16) = 0;
          *(unsigned char *)(v8 + 24) = 0;
          *(unsigned char *)(v8 + 32) = 0;
          *(unsigned char *)(v8 + 4sub_100149BDC(&a9, 0) = 0;
          *(unsigned char *)(v8 + 48) = 0;
          uint64_t v11 = (char *)(v8 + 56);
        }
        *(void *)(a2 + 144) = v11;
        uint64_t v26 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)long long buf = 67109632;
          int v35 = v7;
          __int16 v36 = 2048;
          uint64_t v37 = v30;
          __int16 v38 = 2048;
          uint64_t v39 = v29;
          _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "#me,RoseMeasurementEngine::aoa hypothesis %d: azimuth = %.2f deg, elevation = %.2f deg", buf, 0x1Cu);
        }
        ++v7;
        v5 += 2;
      }
      while (v5 != v6);
    }
    long long v5 = v31;
LABEL_27:
    if (v5)
    {
      long long v32 = v5;
      operator delete(v5);
    }
    return;
  }
  uint64_t v27 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "#me,calculateAoAHypotheses: invalid PDOA", buf, 2u);
  }
}

void sub_100161DB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
}

void sub_100161DE4(uint64_t a1@<X0>, _OWORD *a2@<X1>, int a3@<W2>, void *a4@<X8>)
{
  sub_100161ED0(a2, v7);
  if (v7[0] == v7[1])
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
  }
  else
  {
    sub_100155394(*(void *)(a1 + 944), v7, a3, (uint64_t)a4);
  }
  unint64_t v8 = (void **)v7;
  sub_100149DEC(&v8);
}

void sub_100161E64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_100149DEC((void ***)va);
  _Unwind_Resume(a1);
}

void *sub_100161E7C(void *a1)
{
  sub_10015024C((uint64_t)(a1 + 225));
  sub_10015024C((uint64_t)(a1 + 145));
  uint64_t v2 = (void *)a1[17];
  if (v2)
  {
    a1[18] = v2;
    operator delete(v2);
  }
  double v3 = (void *)a1[9];
  if (v3)
  {
    a1[10] = v3;
    operator delete(v3);
  }
  return a1;
}

void sub_100161ED0(_OWORD *a1@<X1>, uint64_t *a2@<X8>)
{
  int v4 = 0;
  uint64_t v5 = 0;
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  long long __p = 0;
  uint64_t v56 = 0;
  long long v57 = 0;
  long long v6 = a1[3];
  v54[0] = a1[2];
  v54[1] = v6;
  do
  {
    ++v5;
    int v7 = (__int16 *)v54 + 2 * v5;
    double v8 = (double)*v7;
    double v9 = (double)v7[1];
    if (v4 >= (double *)v57)
    {
      uint64_t v10 = (double *)__p;
      uint64_t v11 = ((char *)v4 - (unsigned char *)__p) >> 4;
      unint64_t v12 = v11 + 1;
      if ((unint64_t)(v11 + 1) >> 60) {
        sub_1000267C4();
      }
      uint64_t v13 = v57 - (unsigned char *)__p;
      if ((v57 - (unsigned char *)__p) >> 3 > v12) {
        unint64_t v12 = v13 >> 3;
      }
      if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v14 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v14 = v12;
      }
      if (v14)
      {
        unint64_t v15 = (char *)sub_10015344C((uint64_t)&v57, v14);
        uint64_t v10 = (double *)__p;
        int v4 = v56;
      }
      else
      {
        unint64_t v15 = 0;
      }
      long long v16 = (double *)&v15[16 * v11];
      *long long v16 = v8;
      v16[1] = v9;
      uint64_t v17 = v16;
      if (v4 != v10)
      {
        do
        {
          *((_OWORD *)v17 - 1) = *((_OWORD *)v4 - 1);
          v17 -= 2;
          v4 -= 2;
        }
        while (v4 != v10);
        uint64_t v10 = (double *)__p;
      }
      int v4 = v16 + 2;
      long long __p = v17;
      uint64_t v56 = v16 + 2;
      long long v57 = &v15[16 * v14];
      if (v10) {
        operator delete(v10);
      }
    }
    else
    {
      *int v4 = v8;
      v4[1] = v9;
      v4 += 2;
    }
    uint64_t v56 = v4;
  }
  while (v5 != 5);
  unint64_t v18 = a2[1];
  if (v18 >= a2[2])
  {
    uint64_t v19 = sub_100162F1C(a2, (uint64_t)&__p);
  }
  else
  {
    sub_100162EC8((uint64_t)a2, (uint64_t)&__p);
    uint64_t v19 = v18 + 24;
  }
  uint64_t v20 = 0;
  a2[1] = v19;
  BOOL v21 = (double *)__p;
  uint64_t v56 = (double *)__p;
  long long v22 = a1[7];
  v53[0] = a1[6];
  v53[1] = v22;
  do
  {
    ++v20;
    long long v23 = (__int16 *)v53 + 2 * v20;
    double v24 = (double)*v23;
    double v25 = (double)v23[1];
    if (v21 >= (double *)v57)
    {
      uint64_t v26 = (double *)__p;
      uint64_t v27 = ((char *)v21 - (unsigned char *)__p) >> 4;
      unint64_t v28 = v27 + 1;
      if ((unint64_t)(v27 + 1) >> 60) {
        sub_1000267C4();
      }
      uint64_t v29 = v57 - (unsigned char *)__p;
      if ((v57 - (unsigned char *)__p) >> 3 > v28) {
        unint64_t v28 = v29 >> 3;
      }
      if ((unint64_t)v29 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v30 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v30 = v28;
      }
      if (v30)
      {
        uint64_t v31 = (char *)sub_10015344C((uint64_t)&v57, v30);
        uint64_t v26 = (double *)__p;
        BOOL v21 = v56;
      }
      else
      {
        uint64_t v31 = 0;
      }
      long long v32 = (double *)&v31[16 * v27];
      double *v32 = v24;
      v32[1] = v25;
      uint64_t v33 = v32;
      if (v21 != v26)
      {
        do
        {
          *((_OWORD *)v33 - 1) = *((_OWORD *)v21 - 1);
          v33 -= 2;
          v21 -= 2;
        }
        while (v21 != v26);
        uint64_t v26 = (double *)__p;
      }
      BOOL v21 = v32 + 2;
      long long __p = v33;
      uint64_t v56 = v32 + 2;
      long long v57 = &v31[16 * v30];
      if (v26) {
        operator delete(v26);
      }
    }
    else
    {
      double *v21 = v24;
      v21[1] = v25;
      v21 += 2;
    }
    uint64_t v56 = v21;
  }
  while (v20 != 5);
  unint64_t v34 = a2[1];
  if (v34 >= a2[2])
  {
    uint64_t v35 = sub_100162F1C(a2, (uint64_t)&__p);
  }
  else
  {
    sub_100162EC8((uint64_t)a2, (uint64_t)&__p);
    uint64_t v35 = v34 + 24;
  }
  uint64_t v36 = 0;
  a2[1] = v35;
  uint64_t v37 = (double *)__p;
  uint64_t v56 = (double *)__p;
  long long v38 = a1[5];
  v52[0] = a1[4];
  v52[1] = v38;
  do
  {
    ++v36;
    uint64_t v39 = (__int16 *)v52 + 2 * v36;
    double v40 = (double)*v39;
    double v41 = (double)v39[1];
    if (v37 >= (double *)v57)
    {
      uint64_t v42 = (double *)__p;
      uint64_t v43 = ((char *)v37 - (unsigned char *)__p) >> 4;
      unint64_t v44 = v43 + 1;
      if ((unint64_t)(v43 + 1) >> 60) {
        sub_1000267C4();
      }
      uint64_t v45 = v57 - (unsigned char *)__p;
      if ((v57 - (unsigned char *)__p) >> 3 > v44) {
        unint64_t v44 = v45 >> 3;
      }
      if ((unint64_t)v45 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v46 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v46 = v44;
      }
      if (v46)
      {
        char v47 = (char *)sub_10015344C((uint64_t)&v57, v46);
        uint64_t v42 = (double *)__p;
        uint64_t v37 = v56;
      }
      else
      {
        char v47 = 0;
      }
      char v48 = (double *)&v47[16 * v43];
      double *v48 = v40;
      v48[1] = v41;
      uint64_t v49 = v48;
      if (v37 != v42)
      {
        do
        {
          *((_OWORD *)v49 - 1) = *((_OWORD *)v37 - 1);
          v49 -= 2;
          v37 -= 2;
        }
        while (v37 != v42);
        uint64_t v42 = (double *)__p;
      }
      uint64_t v37 = v48 + 2;
      long long __p = v49;
      uint64_t v56 = v48 + 2;
      long long v57 = &v47[16 * v46];
      if (v42) {
        operator delete(v42);
      }
    }
    else
    {
      double *v37 = v40;
      v37[1] = v41;
      v37 += 2;
    }
    uint64_t v56 = v37;
  }
  while (v36 != 5);
  unint64_t v50 = a2[1];
  if (v50 >= a2[2])
  {
    uint64_t v51 = sub_100162F1C(a2, (uint64_t)&__p);
  }
  else
  {
    sub_100162EC8((uint64_t)a2, (uint64_t)&__p);
    uint64_t v51 = v50 + 24;
  }
  a2[1] = v51;
  if (__p)
  {
    uint64_t v56 = (double *)__p;
    operator delete(__p);
  }
}

void sub_1001622CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  if (__p)
  {
    a23 = (uint64_t)__p;
    operator delete(__p);
  }
  sub_100149DEC((void ***)&a17);
  _Unwind_Resume(a1);
}

BOOL sub_100162314(uint64_t a1, uint64_t a2, double a3)
{
  double v5 = *(double *)(a2 + 64);
  double v4 = *(double *)(a2 + 72);
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v6 = *(void *)(a1 + 72);
  uint64_t v8 = *(void *)&v4 + *(void *)&v5;
  uint64_t v9 = v6 + v7;
  uint64_t v10 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    int v14 = 134219264;
    double v15 = v5;
    __int16 v16 = 2048;
    double v17 = v4;
    __int16 v18 = 2048;
    uint64_t v19 = v7;
    __int16 v20 = 2048;
    uint64_t v21 = v6;
    __int16 v22 = 2048;
    uint64_t v23 = *(void *)&v4 + *(void *)&v5;
    __int16 v24 = 2048;
    uint64_t v25 = v6 + v7;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#me,RoseMeasurementEngine::checkTimestampAndFrequencyConsistency: rtt_i %lld tat_i %lld rtt_r %lld tat_r %lld num %lld den %lld", (uint8_t *)&v14, 0x3Eu);
  }
  if (v9)
  {
    double v11 = sub_1000304C4(500.0);
    unint64_t v12 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      int v14 = 134218240;
      double v15 = a3;
      __int16 v16 = 2048;
      double v17 = (double)v8 / (double)v9 + -1.0;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "#me,RoseMeasurementEngine::checkTimestampAndFrequencyConsistency: cfo_ppu %E  timestamp_derived_frequency_deviation_ppu %E", (uint8_t *)&v14, 0x16u);
    }
    return fabs(a3 - ((double)v8 / (double)v9 + -1.0)) <= v11;
  }
  else
  {
    BOOL result = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_1004113C8();
      return 0;
    }
  }
  return result;
}

void sub_1001624D0(uint64_t a1, uint64_t a2)
{
  double v3 = *(double *)(a2 + 64);
  double v2 = *(double *)(a2 + 72);
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v4 = *(void *)(a1 + 72);
  uint64_t v6 = *(void *)&v2 + *(void *)&v3 + v5 + v4;
  uint64_t v7 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = 134219264;
    double v12 = v3;
    __int16 v13 = 2048;
    double v14 = v2;
    __int16 v15 = 2048;
    uint64_t v16 = v5;
    __int16 v17 = 2048;
    uint64_t v18 = v4;
    __int16 v19 = 2048;
    uint64_t v20 = v5 * *(void *)&v3 - v4 * *(void *)&v2;
    __int16 v21 = 2048;
    uint64_t v22 = *(void *)&v2 + *(void *)&v3 + v5 + v4;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#me,RoseMeasurementEngine::computeRange: rtt_i %lld tat_i %lld rtt_r %lld tat_r %lld num %lld den %lld", (uint8_t *)&v11, 0x3Eu);
  }
  if (v6)
  {
    double v8 = sub_10039CC88(llround((double)(v5 * *(void *)&v3 - v4 * *(void *)&v2) / (double)v6));
    uint64_t v9 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      double v10 = sub_100030484(v8);
      int v11 = 134218240;
      double v12 = v8;
      __int16 v13 = 2048;
      double v14 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#me,RoseMeasurementEngine::computeRange: tofSec = %.6e rangeM = %.6e", (uint8_t *)&v11, 0x16u);
    }
    sub_100030484(v8);
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_1004113FC();
  }
}

void sub_100162688(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>)
{
  __int16 v14 = sub_1003A82F0(*(unsigned __int16 *)(a1 + 20), a2, a3, a4, a5, a6, a7, a8);
  __int16 v54 = *(_WORD *)(a1 + 22);
  __int16 v55 = v14;
  char v53 = sub_1003A7FD8(*(unsigned __int8 *)(a1 + 24), v15, v16, v17, v18, v19, v20, v21);
  double v25 = sub_10039CC60(*(void *)(a1 + 28));
  __int16 v52 = *(_WORD *)(a1 + 26);
  uint64_t v59 = *(void *)(a1 + 36);
  double v26 = (double)*(__int16 *)(a1 + 86) * 0.25;
  double v27 = (double)*(__int16 *)(a1 + 88) * 0.25;
  int v48 = *(_DWORD *)(a1 + 95);
  if (*(unsigned __int8 *)(a1 + 68) != 0xFF)
  {
    LOWORD(v22) = *(_WORD *)(a1 + 100);
    LOWORD(v23) = *(_WORD *)(a1 + 102);
    LOWORD(v24) = *(_WORD *)(a1 + 104);
    double v50 = (double)*(char *)(a1 + 79);
    double v51 = (double)*(char *)(a1 + 78);
    double v49 = (double)*(char *)(a1 + 80);
    double v30 = (double)*(__int16 *)(a1 + 70);
    double v28 = (double)*(__int16 *)(a1 + 72);
    double v33 = (double)v22 * 0.01;
    double v32 = (double)v23 * 0.01;
    double v31 = (double)v24 * 0.01;
    uint64_t v29 = 1;
  }
  else
  {
    double v28 = 0.0;
    uint64_t v29 = 0;
    double v30 = 0.0;
    double v31 = 0.0;
    double v32 = 0.0;
    double v33 = 0.0;
    double v49 = 0.0;
    double v50 = 0.0;
    double v51 = 0.0;
  }
  unsigned int v34 = *(_DWORD *)(a1 + 74);
  double v35 = sub_10039CC60(v34);
  char v36 = *(unsigned char *)(a1 + 99);
  uint64_t v58 = 0;
  long long v57 = 0u;
  int v37 = *(_DWORD *)(a1 + 106);
  __int16 v38 = *(_WORD *)(a1 + 110);
  double v39 = sub_100030468(a10);
  double v40 = sub_100030468(a11);
  *(double *)&long long v45 = v28;
  *((void *)&v45 + 1) = v29;
  *(double *)&long long v44 = v30;
  *((void *)&v44 + 1) = v29;
  *((void *)&v43 + 1) = v29;
  *((void *)&v42 + 1) = v29;
  *(double *)&long long v43 = v49;
  *((void *)&v41 + 1) = v29;
  *(double *)&long long v42 = v50;
  *(double *)&long long v41 = v51;
  sub_10039E8D8(a9, v55, v54, v53, v52, 0, &v59, 0, v25, v39, v26, v27, (double)v48, v40, v35, (uint64_t)&v57, v41, v42, v43,
    v44,
    v45,
    0,
    v34,
    v36,
    *(uint64_t *)&v33,
    v29,
    *(uint64_t *)&v32,
    v29,
    *(uint64_t *)&v31,
    v29,
    9,
    v46,
    0,
    0,
    0,
    0,
    v37,
    SHIWORD(v37),
    v38,
    v47,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0);
  if ((void)v57)
  {
    *((void *)&v57 + 1) = v57;
    operator delete((void *)v57);
  }
}

void sub_10016293C(_Unwind_Exception *exception_object)
{
  double v3 = *(void **)(v1 - 176);
  if (v3)
  {
    *(void *)(v1 - 168) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100162958(uint64_t a1)
{
  sub_10003E96C(a1 + 712, *(void **)(a1 + 720));
  sub_10003E96C(a1 + 688, *(void **)(a1 + 696));
  sub_10003E96C(a1 + 664, *(void **)(a1 + 672));
  sub_10003E96C(a1 + 640, *(void **)(a1 + 648));
  sub_10003E96C(a1 + 616, *(void **)(a1 + 624));
  sub_10015E1A0(a1 + 592, *(void **)(a1 + 600));
  sub_10015E09C(a1 + 568, *(void **)(a1 + 576));
  sub_10015DF98(a1 + 544, *(void **)(a1 + 552));
  sub_10015DF3C(a1 + 520, *(void **)(a1 + 528));
  sub_10015DE38(a1 + 496, *(void **)(a1 + 504));
  sub_10015DE38(a1 + 472, *(void **)(a1 + 480));
  sub_10015DDDC(a1 + 448, *(void **)(a1 + 456));

  return sub_10015DD58((void *)a1);
}

uint64_t sub_100162A1C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v4 = *(_OWORD *)(a2 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 8sub_100149BDC(&a9, 0) = 0;
  *(void *)(a1 + 88) = 0;
  sub_10015036C((void *)(a1 + 72), *(const void **)(a2 + 72), *(void *)(a2 + 80), (uint64_t)(*(void *)(a2 + 80) - *(void *)(a2 + 72)) >> 3);
  long long v7 = *(_OWORD *)(a2 + 96);
  long long v8 = *(_OWORD *)(a2 + 112);
  uint64_t v9 = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 128) = v9;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 96) = v7;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  sub_10015042C((void *)(a1 + 136), *(const void **)(a2 + 136), *(void *)(a2 + 144), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(void *)(a2 + 144) - *(void *)(a2 + 136)) >> 3));
  memcpy((void *)(a1 + 160), (const void *)(a2 + 160), 0x181uLL);
  long long v11 = *(_OWORD *)(a2 + 568);
  long long v10 = *(_OWORD *)(a2 + 584);
  long long v12 = *(_OWORD *)(a2 + 552);
  *(void *)(a1 + 597) = *(void *)(a2 + 597);
  *(_OWORD *)(a1 + 568) = v11;
  *(_OWORD *)(a1 + 584) = v10;
  *(_OWORD *)(a1 + 552) = v12;
  *(unsigned char *)(a1 + 608) = 1;
  return a1;
}

void sub_100162B0C(_Unwind_Exception *exception_object)
{
  long long v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 8sub_100149BDC(&a9, 0) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100162B28(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_100162BC4()
{
}

__n128 sub_100162BD8(uint64_t a1)
{
  double v2 = (char *)operator new(0x20uLL);
  *(void *)double v2 = off_100852DA8;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((void *)v2 + 3) = *(void *)(a1 + 24);
  return result;
}

__n128 sub_100162C2C(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_100852DA8;
  __n128 result = *(__n128 *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_100162C64(void *a1)
{
  uint64_t v1 = a1[2];
  double v2 = (uint64_t (*)(void *))a1[1];
  uint64_t v3 = (void *)(a1[3] + (v1 >> 1));
  if (v1) {
    return (*(uint64_t (**)(void))(*v3 + v2))();
  }
  else {
    return v2(v3);
  }
}

uint64_t sub_100162C8C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100162CCC()
{
}

void *sub_100162CD8(void *a1)
{
  double v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_100162D5C(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100162D5C(a1, *a2);
    sub_100162D5C(a1, a2[1]);
    sub_100152418(a2 + 6);
    operator delete(a2);
  }
}

uint64_t *sub_100162DB8(uint64_t **a1, unsigned __int16 *a2, uint64_t a3, long long **a4)
{
  long long v6 = (void **)sub_10015E448((uint64_t)a1, &v13, a2);
  long long v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    long long v8 = (uint64_t **)v6;
    long long v7 = (uint64_t *)operator new(0x60uLL);
    v11[1] = a1 + 1;
    long long v9 = **a4;
    *((_OWORD *)v7 + 4) = 0u;
    *((_OWORD *)v7 + 5) = 0u;
    *((_OWORD *)v7 + 2) = v9;
    *((_OWORD *)v7 + 3) = 0u;
    char v12 = 1;
    sub_100026D98(a1, v13, v8, v7);
    v11[0] = 0;
    sub_100162E70((uint64_t)v11, 0);
  }
  return v7;
}

void sub_100162E70(uint64_t a1, uint64_t a2)
{
  double v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_100152418(v2 + 6);
    }
    operator delete(v2);
  }
}

void *sub_100162EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a1 + 8);
  *uint64_t v3 = 0;
  v3[1] = 0;
  void v3[2] = 0;
  __n128 result = sub_1001557BC(v3, *(const void **)a2, *(void *)(a2 + 8), (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 4);
  *(void *)(a1 + 8) = v3 + 3;
  return result;
}

void sub_100162F14(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_100162F1C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_1000267C4();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x555555555555555) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  uint64_t v17 = a1 + 2;
  if (v9) {
    long long v10 = (char *)sub_1000267DC(v7, v9);
  }
  else {
    long long v10 = 0;
  }
  long long v11 = &v10[24 * v4];
  v14[0] = v10;
  v14[1] = v11;
  uint64_t v15 = v11;
  uint64_t v16 = &v10[24 * v9];
  *(void *)long long v11 = 0;
  *((void *)v11 + 1) = 0;
  *((void *)v11 + 2) = 0;
  sub_1001557BC(v11, *(const void **)a2, *(void *)(a2 + 8), (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 4);
  v15 += 24;
  sub_100163034(a1, v14);
  uint64_t v12 = a1[1];
  sub_1001533B8((uint64_t)v14);
  return v12;
}

void sub_100163020(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1001533B8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100163034(uint64_t *a1, void *a2)
{
  uint64_t result = sub_1001630AC((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_1001630AC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v14 = a6;
  *((void *)&v14 + 1) = a7;
  long long v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  void v11[2] = &v14;
  if (a3 == a5)
  {
    uint64_t v9 = a6;
  }
  else
  {
    do
    {
      *(void *)(v7 - 24) = 0;
      *(void *)(v7 - 16) = 0;
      *(void *)(v7 - 8) = 0;
      long long v8 = *(_OWORD *)(a3 - 3);
      a3 -= 3;
      *(_OWORD *)(v7 - 24) = v8;
      *(void *)(v7 - 8) = a3[2];
      *a3 = 0;
      a3[1] = 0;
      a3[2] = 0;
      uint64_t v7 = *((void *)&v14 + 1) - 24;
      *((void *)&v14 + 1) -= 24;
    }
    while (a3 != a5);
    uint64_t v9 = v14;
  }
  char v12 = 1;
  sub_100163150((uint64_t)v11);
  return v9;
}

uint64_t sub_100163150(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_100153370(a1);
  }
  return a1;
}

void sub_100163188()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C988, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C988))
  {
    qword_10089C970 = 0;
    qword_10089C978 = 0;
    qword_10089C980 = 0;
    uint64_t v0 = operator new(0x30uLL);
    qword_10089C978 = (uint64_t)(v0 + 3);
    qword_10089C980 = (uint64_t)(v0 + 3);
    *uint64_t v0 = xmmword_1004B59D0;
    v0[1] = unk_1004B59E0;
    v0[2] = xmmword_1004B59F0;
    qword_10089C970 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_100008CAC, &qword_10089C970, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C988);
  }
}

void sub_100163244(_Unwind_Exception *a1)
{
}

uint64_t sub_10016325C()
{
  sub_10039D144();
  uint64_t v0 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v1 = *(_OWORD *)&v0->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v0->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v1;
  v0->__r_.__value_.__l.__size_ = 0;
  v0->__r_.__value_.__r.__words[2] = 0;
  v0->__r_.__value_.__r.__words[0] = 0;
  uint64_t v2 = std::string::append(&v38, ".bin");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  qword_1008A1B48 = v2->__r_.__value_.__r.__words[2];
  xmmword_1008A1B38 = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1B38, (void *)&_mh_execute_header);
  sub_10039D144();
  unint64_t v4 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  uint64_t v6 = std::string::append(&v38, ".bin");
  long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  qword_1008A1B60 = v6->__r_.__value_.__r.__words[2];
  xmmword_1008A1B50 = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1B50, (void *)&_mh_execute_header);
  sub_10039D144();
  long long v8 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  long long v10 = std::string::append(&v38, ".bin");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  qword_1008A1B78 = v10->__r_.__value_.__r.__words[2];
  xmmword_1008A1B68 = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1B68, (void *)&_mh_execute_header);
  sub_10039D144();
  char v12 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  long long v14 = std::string::append(&v38, ".bin");
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  qword_1008A1B90 = v14->__r_.__value_.__r.__words[2];
  xmmword_1008A1B80 = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1B80, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v16 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  uint64_t v18 = std::string::append(&v38, ".bin");
  long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  qword_1008A1BA8 = v18->__r_.__value_.__r.__words[2];
  xmmword_1008A1B98 = v19;
  v18->__r_.__value_.__l.__size_ = 0;
  v18->__r_.__value_.__r.__words[2] = 0;
  v18->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1B98, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v20 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v21;
  v20->__r_.__value_.__l.__size_ = 0;
  v20->__r_.__value_.__r.__words[2] = 0;
  v20->__r_.__value_.__r.__words[0] = 0;
  unint64_t v22 = std::string::append(&v38, ".bin");
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  qword_1008A1BC0 = v22->__r_.__value_.__r.__words[2];
  xmmword_1008A1BB0 = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1BB0, (void *)&_mh_execute_header);
  sub_10039D144();
  unint64_t v24 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v25;
  v24->__r_.__value_.__l.__size_ = 0;
  v24->__r_.__value_.__r.__words[2] = 0;
  v24->__r_.__value_.__r.__words[0] = 0;
  double v26 = std::string::append(&v38, ".bin");
  long long v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
  qword_1008A1BD8 = v26->__r_.__value_.__r.__words[2];
  xmmword_1008A1BC8 = v27;
  v26->__r_.__value_.__l.__size_ = 0;
  v26->__r_.__value_.__r.__words[2] = 0;
  v26->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1BC8, (void *)&_mh_execute_header);
  sub_10039D144();
  double v28 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v29;
  v28->__r_.__value_.__l.__size_ = 0;
  v28->__r_.__value_.__r.__words[2] = 0;
  v28->__r_.__value_.__r.__words[0] = 0;
  double v30 = std::string::append(&v38, ".bin");
  long long v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
  qword_1008A1BF0 = v30->__r_.__value_.__r.__words[2];
  xmmword_1008A1BE0 = v31;
  v30->__r_.__value_.__l.__size_ = 0;
  v30->__r_.__value_.__r.__words[2] = 0;
  v30->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1BE0, (void *)&_mh_execute_header);
  sub_10039D144();
  double v32 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v32->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v33;
  v32->__r_.__value_.__l.__size_ = 0;
  v32->__r_.__value_.__r.__words[2] = 0;
  v32->__r_.__value_.__r.__words[0] = 0;
  unsigned int v34 = std::string::append(&v38, ".bin");
  long long v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
  qword_1008A1C08 = v34->__r_.__value_.__r.__words[2];
  xmmword_1008A1BF8 = v35;
  v34->__r_.__value_.__l.__size_ = 0;
  v34->__r_.__value_.__r.__words[2] = 0;
  v34->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  return __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1BF8, (void *)&_mh_execute_header);
}

void sub_10016388C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100163900(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  std::ofstream::open();
  memset(&v15, 0, sizeof(v15));
  memset(&v13, 0, sizeof(v13));
  __int16 v14 = 0;
  long long v16 = xmmword_1004B5930;
  __int16 v12 = 257;
  uint64_t v6 = operator new(0x20uLL);
  __str.__r_.__value_.__r.__words[0] = (std::string::size_type)v6;
  *(_OWORD *)&__str.__r_.__value_.__r.__words[1] = xmmword_1004B5CA0;
  v6[1] = 0;
  _DWORD v6[2] = 0;
  *uint64_t v6 = 0;
  *(void *)((char *)v6 + 23) = 0;
  std::string::operator=(&v13, &__str);
  __int16 v14 = 3;
  long long v7 = operator new(0x88uLL);
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v7;
  *(_OWORD *)&__p.__r_.__value_.__r.__words[1] = xmmword_1004B5CB0;
  _OWORD *v7 = 0u;
  v7[1] = 0u;
  v7[2] = 0u;
  uint64_t v7[3] = 0u;
  v7[4] = 0u;
  v7[5] = 0u;
  v7[6] = 0u;
  v7[7] = 0u;
  *((unsigned char *)v7 + 128) = 0;
  std::string::operator=(&v15, &__p);
  *(void *)&long long v16 = 0xFFFFFFFF00000000;
  DWORD2(v16) = (16428 * a3) | 1;
  uint64_t v8 = sub_1002BA758(a4, (uint64_t)&v12);
  if ((v8 & 1) == 0 && os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
    sub_100411430();
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_100163A80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  sub_100157CC4((uint64_t)&a21);
  _Unwind_Resume(a1);
}

uint64_t sub_100163AC8(uint64_t a1, void *a2, uint64_t a3)
{
  if (!a2[16]) {
    return 0;
  }
  std::ostream::flush();
  int v8 = 0;
  if (!sub_1002BB054(a3, &v8))
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_1004114CC();
    }
    if (!std::filebuf::close()) {
      std::ios_base::clear((std::ios_base *)((char *)a2 + *(void *)(*a2 - 24)), *(_DWORD *)((char *)a2 + *(void *)(*a2 - 24) + 32) | 4);
    }
    return 0;
  }
  std::ostream::sentry::sentry();
  long long v5 = (char *)a2 + *(void *)(*a2 - 24);
  if ((v5[32] & 5) == 0)
  {
    uint64_t v6 = *((void *)v5 + 5);
    long long v17 = 0u;
    long long v16 = 0u;
    long long v15 = 0u;
    long long v14 = 0u;
    long long v13 = 0u;
    long long v12 = 0u;
    long long v11 = 0u;
    long long v10 = 0u;
    uint64_t v18 = 174;
    (*(void (**)(void *__return_ptr))(*(void *)v6 + 40))(v9);
    if (v9[16] == -1) {
      std::ios_base::clear((std::ios_base *)((char *)a2 + *(void *)(*a2 - 24)), *(_DWORD *)((char *)a2 + *(void *)(*a2 - 24) + 32) | 4);
    }
  }
  std::ostream::sentry::~sentry();
  std::ostream::write();
  if (!std::filebuf::close()) {
    std::ios_base::clear((std::ios_base *)((char *)a2 + *(void *)(*a2 - 24)), *(_DWORD *)((char *)a2 + *(void *)(*a2 - 24) + 32) | 4);
  }
  return 1;
}

void sub_100163CC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2)
  {
    std::ostream::sentry::~sentry();
    __cxa_begin_catch(exception_object);
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_100411464();
    }
    sub_100163D48(v10);
    __cxa_end_catch();
    JUMPOUT(0x100163C8CLL);
  }
  _Unwind_Resume(exception_object);
}

void sub_100163D48(void *a1)
{
  if (!std::filebuf::close())
  {
    uint64_t v2 = (std::ios_base *)((char *)a1 + *(void *)(*a1 - 24));
    std::ios_base::iostate v3 = v2->__rdstate_ | 4;
    std::ios_base::clear(v2, v3);
  }
}

uint64_t sub_100163DB0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, unsigned __int8 *a5)
{
  *a5 = 0;
  uint64_t v9 = *a3;
  long long v10 = (void **)a3[1];
  while (v10 != (void **)v9)
  {
    v10 -= 3;
    v29[0] = v10;
    sub_100149DEC(v29);
  }
  a3[1] = v9;
  uint64_t v11 = *a4;
  long long v12 = (void **)a4[1];
  while (v12 != (void **)v11)
  {
    v12 -= 3;
    v29[0] = v12;
    sub_100149DEC(v29);
  }
  a4[1] = v11;
  if (sub_100164150(a1, a2))
  {
    unint64_t v13 = sub_1002BA508();
    if (!v14) {
      sub_100411534();
    }
    unint64_t v15 = v13;
    sub_100164404((void (__cdecl ***)(std::ifstream *__hidden))v29);
    if (v29[17])
    {
      *(_DWORD *)((char *)&v29[1] + (unint64_t)*(v29[0] - 3)) &= ~0x1000u;
      std::istream::seekg();
      std::istream::read();
      long long v16 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        int v17 = *a5;
        v28[0] = 67109120;
        v28[1] = v17;
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "#lut,channelAvailabilityMask in reverse LUT file is 0x%02x", (uint8_t *)v28, 8u);
      }
      unsigned int v18 = *a5;
      if (*a5)
      {
        unsigned __int8 v19 = 0;
        unsigned __int8 v20 = *a5;
        do
        {
          unsigned int v21 = v20;
          v19 += v20 & 1;
          v20 >>= 1;
        }
        while (v21 > 1);
        uint64_t v22 = 16428 * v19 + 179;
      }
      else
      {
        uint64_t v22 = 179;
      }
      if (v15 == v22)
      {
        uint64_t v24 = sub_1003A8E98(5, 1);
        if (((v18 >> v24) & 1) != 0 && (sub_1001645D4(v24, v29, a3) & 1) == 0)
        {
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
            sub_1004115FC();
          }
        }
        else
        {
          unsigned int v25 = *a5;
          uint64_t v26 = sub_1003A8E98(9, 1);
          if ((v25 >> v26) & 1) == 0 || (sub_1001645D4(v26, v29, a4))
          {
            uint64_t v23 = 1;
LABEL_33:
            std::filebuf::~filebuf();
            std::istream::~istream();
            std::ios::~ios();
            return v23;
          }
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
            sub_1004115C8();
          }
        }
      }
      else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
      {
        sub_100411630();
      }
    }
    else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
    {
      sub_100411560();
    }
    uint64_t v23 = 0;
    goto LABEL_33;
  }
  return 0;
}

void sub_100164130(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100164910((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100164150(uint64_t a1, uint64_t a2)
{
  if (sub_1002BB2CC(a2))
  {
    *(_WORD *)long long buf = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    std::string __p = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    *(void *)&void v17[4] = 0;
    unsigned __int16 v20 = 0;
    long long v24 = xmmword_1004B5930;
    if (sub_1002BAB98((const char *)a2, (uint64_t)buf))
    {
      if (v20 > 2u)
      {
        unint64_t v10 = sub_1002BA508();
        if (!v11) {
          __assert_rtn("checkLutFileIntegrity", "AoAFileUtils.cpp", 250, "optFileSize.has_value()");
        }
        if (DWORD2(v24) && v10 == DWORD2(v24) + 178)
        {
          uint64_t v4 = 1;
          goto LABEL_29;
        }
        std::ios_base::iostate v3 = qword_1008ABDE0;
        uint64_t v4 = 0;
        if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_29;
        }
        if (*(char *)(a2 + 23) >= 0) {
          uint64_t v12 = a2;
        }
        else {
          uint64_t v12 = *(void *)a2;
        }
        int v14 = 136315138;
        uint64_t v15 = v12;
        uint64_t v6 = "#lut,checking integrity of LUT file %s fails because file size is not correct";
        goto LABEL_19;
      }
      std::ios_base::iostate v3 = qword_1008ABDE0;
      uint64_t v4 = 0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        if (*(char *)(a2 + 23) >= 0) {
          uint64_t v5 = a2;
        }
        else {
          uint64_t v5 = *(void *)a2;
        }
        int v14 = 136315138;
        uint64_t v15 = v5;
        uint64_t v6 = "#lut,checking integrity of LUT file %s fails because file contents are not latest";
LABEL_19:
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, v6, (uint8_t *)&v14, 0xCu);
        uint64_t v4 = 0;
      }
    }
    else
    {
      std::ios_base::iostate v3 = qword_1008ABDE0;
      uint64_t v4 = 0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        if (*(char *)(a2 + 23) >= 0) {
          uint64_t v9 = a2;
        }
        else {
          uint64_t v9 = *(void *)a2;
        }
        int v14 = 136315138;
        uint64_t v15 = v9;
        uint64_t v6 = "#lut,checking integrity of LUT file %s fails because reading file header fails";
        goto LABEL_19;
      }
    }
LABEL_29:
    if (SHIBYTE(v23) < 0) {
      operator delete(__p);
    }
    if (SHIBYTE(v19) < 0) {
      operator delete(*(void **)&v17[4]);
    }
    return v4;
  }
  long long v7 = qword_1008ABDE0;
  uint64_t v4 = 0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    if (*(char *)(a2 + 23) >= 0) {
      uint64_t v8 = a2;
    }
    else {
      uint64_t v8 = *(void *)a2;
    }
    *(_DWORD *)long long buf = 136315138;
    *(void *)int v17 = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#lut,checking integrity of LUT file %s fails because either file does not exist or CRC fails", buf, 0xCu);
    return 0;
  }
  return v4;
}

void sub_1001643EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_100157CC4((uint64_t)va);
  _Unwind_Resume(a1);
}

void (__cdecl ***sub_100164404(void (__cdecl ***a1)(std::ifstream *__hidden this)))(std::ifstream *__hidden this)
{
  *a1 = v3;
  *(void *)((char *)*(v3 - 3) + (void)a1) = v2;
  a1[1] = 0;
  uint64_t v4 = (std::ios_base *)((char *)*(*a1 - 3) + (void)a1);
  std::ios_base::init(v4, a1 + 2);
  v4[1].__vftable = 0;
  v4[1].__fmtflags_ = -1;
  std::filebuf::basic_filebuf();
  if (!std::filebuf::open()) {
    std::ios_base::clear((std::ios_base *)((char *)*(*a1 - 3) + (void)a1), *(_DWORD *)((char *)*(*a1 - 3) + (void)a1 + 32) | 4);
  }
  return a1;
}

void sub_10016459C(_Unwind_Exception *a1)
{
}

uint64_t sub_1001645D4(uint64_t a1, void *a2, uint64_t *a3)
{
  std::string __p = 0;
  std::string v38 = 0;
  unint64_t v39 = 0;
  sub_1001649DC(&__p, 0x25uLL);
  unsigned int v34 = 0;
  long long v35 = 0;
  unint64_t v36 = 0;
  sub_1001649DC(&__p, 0x559uLL);
  BOOL v33 = 0;
  unsigned int v5 = 0;
  long long v31 = a3;
LABEL_2:
  unsigned int v32 = v5;
  uint64_t v7 = (uint64_t)v34;
  uint64_t v6 = v35;
  if (v35 != v34)
  {
    uint64_t v8 = v35;
    do
    {
      unint64_t v10 = (void *)*(v8 - 3);
      v8 -= 3;
      uint64_t v9 = v10;
      if (v10)
      {
        *(v6 - 2) = v9;
        operator delete(v9);
      }
      uint64_t v6 = v8;
    }
    while (v8 != (void *)v7);
  }
  int v11 = 0;
  long long v35 = (void *)v7;
LABEL_8:
  int v12 = 0;
  std::string v38 = __p;
  while (1)
  {
    LOWORD(v4sub_100149BDC(&a9, 0) = 0;
    std::istream::read();
    std::istream::read();
    if ((*((unsigned char *)a2 + *(void *)(*a2 - 24) + 32) & 5) != 0) {
      break;
    }
    int v13 = (unsigned __int16)v40;
    int v14 = v38;
    if ((unint64_t)v38 >= v39)
    {
      uint64_t v15 = ((char *)v38 - (unsigned char *)__p) >> 2;
      unint64_t v16 = v15 + 1;
      if ((unint64_t)(v15 + 1) >> 62) {
        sub_1000267C4();
      }
      uint64_t v17 = v39 - (void)__p;
      if ((uint64_t)(v39 - (void)__p) >> 1 > v16) {
        unint64_t v16 = v17 >> 1;
      }
      if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v18 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v18 = v16;
      }
      if (v18) {
        uint64_t v19 = (char *)sub_10003B54C((uint64_t)&v39, v18);
      }
      else {
        uint64_t v19 = 0;
      }
      unsigned __int16 v20 = &v19[4 * v15];
      *(_DWORD *)unsigned __int16 v20 = v13;
      unsigned int v21 = v20 + 4;
      uint64_t v23 = __p;
      uint64_t v22 = v38;
      if (v38 != __p)
      {
        do
        {
          int v24 = *--v22;
          *((_DWORD *)v20 - 1) = v24;
          v20 -= 4;
        }
        while (v22 != v23);
        uint64_t v22 = __p;
      }
      std::string __p = v20;
      std::string v38 = v21;
      unint64_t v39 = (unint64_t)&v19[4 * v18];
      if (v22) {
        operator delete(v22);
      }
      std::string v38 = v21;
    }
    else
    {
      _DWORD *v38 = (unsigned __int16)v40;
      std::string v38 = v14 + 1;
    }
    if (++v12 == 37)
    {
      unsigned int v25 = v35;
      if ((unint64_t)v35 >= v36)
      {
        uint64_t v26 = sub_1001658D0((uint64_t *)&v34, (uint64_t)&__p);
      }
      else
      {
        *long long v35 = 0;
        v25[1] = 0;
        v25[2] = 0;
        sub_100149D70(v25, __p, (uint64_t)v38, ((char *)v38 - (unsigned char *)__p) >> 2);
        uint64_t v26 = (uint64_t)(v25 + 3);
      }
      long long v35 = (void *)v26;
      if (++v11 != 37) {
        goto LABEL_8;
      }
      unint64_t v27 = v31[1];
      if (v27 >= v31[2])
      {
        uint64_t v28 = sub_100149F6C(v31, (uint64_t *)&v34);
      }
      else
      {
        sub_100149F0C((uint64_t)v31, (uint64_t *)&v34);
        uint64_t v28 = v27 + 24;
      }
      v31[1] = v28;
      BOOL v33 = v32 > 1;
      unsigned int v5 = v32 + 1;
      if (v32 == 2)
      {
        char v29 = 1;
        goto LABEL_40;
      }
      goto LABEL_2;
    }
  }
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
    sub_100411664();
  }
  char v29 = v33;
LABEL_40:
  double v40 = (void **)&v34;
  sub_100149DEC(&v40);
  if (__p)
  {
    std::string v38 = __p;
    operator delete(__p);
  }
  return v29 & 1;
}

void sub_1001648BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, uint64_t a17, char *a18)
{
  a18 = &a12;
  sub_100149DEC((void ***)&a18);
  if (__p)
  {
    a16 = (uint64_t)__p;
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void *sub_100164910(void *a1)
{
  std::filebuf::~filebuf();
  std::istream::~istream();
  std::ios::~ios();
  return a1;
}

void sub_1001649DC(void **a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (unsigned char *)*a1) >> 2)
  {
    if (a2 >> 62) {
      sub_1000267C4();
    }
    int64_t v5 = (unsigned char *)a1[1] - (unsigned char *)*a1;
    uint64_t v6 = (char *)sub_10003B54C(v3, a2);
    uint64_t v7 = &v6[v5 & 0xFFFFFFFFFFFFFFFCLL];
    uint64_t v9 = &v6[4 * v8];
    int v11 = (char *)*a1;
    unint64_t v10 = (char *)a1[1];
    int v12 = v7;
    if (v10 != *a1)
    {
      do
      {
        int v13 = *((_DWORD *)v10 - 1);
        v10 -= 4;
        *((_DWORD *)v12 - 1) = v13;
        v12 -= 4;
      }
      while (v10 != v11);
      unint64_t v10 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
    {
      operator delete(v10);
    }
  }
}

uint64_t sub_100164A84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)a3)
  {
    for (uint64_t i = 0; i != 3; ++i)
    {
      if (*(void *)(*(void *)a3 + 8) - **(void **)a3 != 72) {
        sub_100411698();
      }
      for (uint64_t j = 0; j != 37; ++j)
      {
        for (uint64_t k = 0; k != 148; k += 4)
        {
          std::ostream::write();
          uint64_t result = std::ostream::write();
        }
      }
    }
  }
  return result;
}

uint64_t sub_100164B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(void (__cdecl ***)(std::ofstream *__hidden))((char *)&v27 + (void)*(v27 - 3)) = v9;
  unint64_t v10 = (std::ios_base *)((char *)&v27 + (void)*(v27 - 3));
  std::ios_base::init(v10, &v28);
  v10[1].__vftable = 0;
  v10[1].__fmtflags_ = -1;
  uint64_t v11 = std::filebuf::basic_filebuf();
  unsigned __int8 v12 = 0;
  if (a5)
  {
    do
    {
      unsigned int v13 = a5;
      v12 += a5 & 1;
      LOBYTE(a5) = a5 >> 1;
    }
    while (v13 > 1);
  }
  if ((sub_100163900(v11, a2, v12, (uint64_t)&v27) & 1) == 0)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_1004116C4();
    }
    goto LABEL_19;
  }
  uint64_t v14 = std::ostream::write();
  uint64_t v15 = sub_100164A84(v14, (uint64_t)&v27, a3);
  uint64_t v16 = sub_100164A84(v15, (uint64_t)&v27, a4);
  uint64_t v17 = sub_100163AC8(v16, &v27, a2);
  if ((v17 & 1) == 0)
  {
    uint64_t v19 = qword_1008ABDE0;
    uint64_t v22 = 0;
    if (!os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_20;
    }
    *(_WORD *)long long buf = 0;
    uint64_t v23 = "#lut,closing LUT file fails";
    goto LABEL_18;
  }
  char v18 = sub_100164150(v17, a2);
  uint64_t v19 = qword_1008ABDE0;
  BOOL v20 = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT);
  if ((v18 & 1) == 0)
  {
    if (!v20)
    {
LABEL_19:
      uint64_t v22 = 0;
      goto LABEL_20;
    }
    *(_WORD *)long long buf = 0;
    uint64_t v23 = "#lut,checking lut file integrity fails";
LABEL_18:
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, v23, buf, 2u);
    goto LABEL_19;
  }
  if (v20)
  {
    if (*(char *)(a2 + 23) >= 0) {
      uint64_t v21 = a2;
    }
    else {
      uint64_t v21 = *(void *)a2;
    }
    *(_DWORD *)long long buf = 136315138;
    uint64_t v26 = v21;
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "#lut,writing reverse LUT file %s is complete", buf, 0xCu);
  }
  uint64_t v22 = 1;
LABEL_20:
  std::filebuf::~filebuf();
  std::ostream::~ostream();
  std::ios::~ios();
  return v22;
}

void sub_100164F0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
}

void *sub_100164F4C(void *a1)
{
  std::filebuf::~filebuf();
  std::ostream::~ostream();
  std::ios::~ios();
  return a1;
}

void sub_100165018(int a1@<W2>, uint64_t a2@<X8>)
{
  sub_100007D00();
  sub_100007C0C((uint64_t)__p);
  uint64_t v4 = &xmmword_1008A1C28;
  switch(a1)
  {
    case 0:
      uint64_t v4 = &xmmword_1008A1C10;
      goto LABEL_13;
    case 1:
      goto LABEL_13;
    case 2:
      uint64_t v4 = &xmmword_1008A1C40;
      goto LABEL_13;
    case 3:
      uint64_t v4 = &xmmword_1008A1C58;
      goto LABEL_13;
    case 4:
      uint64_t v4 = &xmmword_1008A1C70;
      goto LABEL_13;
    case 5:
      uint64_t v4 = &xmmword_1008A1C88;
      goto LABEL_13;
    case 6:
      uint64_t v4 = &xmmword_1008A1CA0;
      goto LABEL_13;
    case 7:
      uint64_t v4 = &xmmword_1008A1CB8;
      goto LABEL_13;
    case 8:
      uint64_t v4 = &xmmword_1008A1CD0;
LABEL_13:
      sub_1001589F4((const void **)__p, (const void **)v4, a2);
      break;
    default:
      if (byte_10089D767 < 0)
      {
        sub_100002DE4((unsigned char *)a2, (void *)xmmword_10089D750, *((unint64_t *)&xmmword_10089D750 + 1));
      }
      else
      {
        *(_OWORD *)a2 = xmmword_10089D750;
        *(void *)(a2 + 16) = unk_10089D760;
      }
      break;
  }
  if (v6 < 0) {
    operator delete(__p[0]);
  }
}

void sub_10016513C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100165190(uint64_t a1@<X1>, void *a2@<X8>)
{
  if (sub_1002BB3DC(a1, 16850))
  {
    sub_100164404(v4);
    uint64_t v3 = (std::ios_base *)((char *)v4 + (unint64_t)*(v4[0] - 3));
    v3->__exceptions_ = 5;
    std::ios_base::clear(v3, v3->__rdstate_);
    if (v4[17])
    {
      *(_DWORD *)((char *)&v4[1] + (unint64_t)*(v4[0] - 3)) &= ~0x1000u;
      std::istream::seekg();
      operator new();
    }
    *a2 = 0;
    std::filebuf::~filebuf();
    std::istream::~istream();
    std::ios::~ios();
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_1004116F8();
    }
    *a2 = 0;
  }
}

void sub_1001657C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_100164910((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_1001657E0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void (__cdecl **a9)(std::ios_base::failure *__hidden this), uint64_t a10, long long a11)
{
  if (a2 == 1)
  {
    exception_ptr = (const std::runtime_error *)__cxa_get_exception_ptr(a1);
    std::runtime_error::runtime_error((std::runtime_error *)&a9, exception_ptr);
    a11 = (__int128)exception_ptr[1];
    __cxa_begin_catch(a1);
    void *v11 = 0;
    std::ios_base::failure::~failure((std::ios_base::failure *)&a9);
    __cxa_end_catch();
    operator delete();
  }
  operator delete();
}

uint64_t sub_1001658D0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_1000267C4();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x555555555555555) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  uint64_t v17 = a1 + 2;
  if (v9) {
    unint64_t v10 = (char *)sub_1000267DC(v7, v9);
  }
  else {
    unint64_t v10 = 0;
  }
  uint64_t v11 = &v10[24 * v4];
  v14[0] = v10;
  v14[1] = v11;
  uint64_t v15 = v11;
  uint64_t v16 = &v10[24 * v9];
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  *((void *)v11 + 2) = 0;
  sub_100149D70(v11, *(const void **)a2, *(void *)(a2 + 8), (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 2);
  v15 += 24;
  sub_10015321C(a1, v14);
  uint64_t v12 = a1[1];
  sub_1001533B8((uint64_t)v14);
  return v12;
}

void sub_1001659D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1001533B8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001659E8(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

void sub_100165A00()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089D768, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089D768))
  {
    sub_100004950(&xmmword_10089D750, "");
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089D750, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089D768);
  }
}

void sub_100165A98(_Unwind_Exception *a1)
{
}

uint64_t sub_100165AB0()
{
  sub_10039D144();
  uint64_t v0 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v1 = *(_OWORD *)&v0->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v0->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v1;
  v0->__r_.__value_.__l.__size_ = 0;
  v0->__r_.__value_.__r.__words[2] = 0;
  v0->__r_.__value_.__r.__words[0] = 0;
  uint64_t v2 = std::string::append(&v38, ".bin");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  qword_1008A1C20 = v2->__r_.__value_.__r.__words[2];
  xmmword_1008A1C10 = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1C10, (void *)&_mh_execute_header);
  sub_10039D144();
  unint64_t v4 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  char v6 = std::string::append(&v38, ".bin");
  long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  qword_1008A1C38 = v6->__r_.__value_.__r.__words[2];
  xmmword_1008A1C28 = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1C28, (void *)&_mh_execute_header);
  sub_10039D144();
  unint64_t v8 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  unint64_t v10 = std::string::append(&v38, ".bin");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  qword_1008A1C50 = v10->__r_.__value_.__r.__words[2];
  xmmword_1008A1C40 = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1C40, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v12 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  uint64_t v14 = std::string::append(&v38, ".bin");
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  qword_1008A1C68 = v14->__r_.__value_.__r.__words[2];
  xmmword_1008A1C58 = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1C58, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v16 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  char v18 = std::string::append(&v38, ".bin");
  long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  qword_1008A1C80 = v18->__r_.__value_.__r.__words[2];
  xmmword_1008A1C70 = v19;
  v18->__r_.__value_.__l.__size_ = 0;
  v18->__r_.__value_.__r.__words[2] = 0;
  v18->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1C70, (void *)&_mh_execute_header);
  sub_10039D144();
  BOOL v20 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v21;
  v20->__r_.__value_.__l.__size_ = 0;
  v20->__r_.__value_.__r.__words[2] = 0;
  v20->__r_.__value_.__r.__words[0] = 0;
  uint64_t v22 = std::string::append(&v38, ".bin");
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  qword_1008A1C98 = v22->__r_.__value_.__r.__words[2];
  xmmword_1008A1C88 = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1C88, (void *)&_mh_execute_header);
  sub_10039D144();
  int v24 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v25;
  v24->__r_.__value_.__l.__size_ = 0;
  v24->__r_.__value_.__r.__words[2] = 0;
  v24->__r_.__value_.__r.__words[0] = 0;
  uint64_t v26 = std::string::append(&v38, ".bin");
  long long v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
  qword_1008A1CB0 = v26->__r_.__value_.__r.__words[2];
  xmmword_1008A1CA0 = v27;
  v26->__r_.__value_.__l.__size_ = 0;
  v26->__r_.__value_.__r.__words[2] = 0;
  v26->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1CA0, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v28 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v29;
  v28->__r_.__value_.__l.__size_ = 0;
  v28->__r_.__value_.__r.__words[2] = 0;
  v28->__r_.__value_.__r.__words[0] = 0;
  double v30 = std::string::append(&v38, ".bin");
  long long v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
  qword_1008A1CC8 = v30->__r_.__value_.__r.__words[2];
  xmmword_1008A1CB8 = v31;
  v30->__r_.__value_.__l.__size_ = 0;
  v30->__r_.__value_.__r.__words[2] = 0;
  v30->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1CB8, (void *)&_mh_execute_header);
  sub_10039D144();
  unsigned int v32 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v32->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v33;
  v32->__r_.__value_.__l.__size_ = 0;
  v32->__r_.__value_.__r.__words[2] = 0;
  v32->__r_.__value_.__r.__words[0] = 0;
  unsigned int v34 = std::string::append(&v38, ".bin");
  long long v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
  qword_1008A1CE0 = v34->__r_.__value_.__r.__words[2];
  xmmword_1008A1CD0 = v35;
  v34->__r_.__value_.__l.__size_ = 0;
  v34->__r_.__value_.__r.__words[2] = 0;
  v34->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  return __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1CD0, (void *)&_mh_execute_header);
}

void sub_1001660E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100166154@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100852FC8[a1]);
}

void *sub_100166168@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100853020[a1]);
}

void *sub_10016617C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100853068[a1]);
}

void *sub_100166190@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100853088[a1]);
}

uint64_t sub_1001661A4(int a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  if (a2 >= 0x15)
  {
    long long v17 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::string __p = 67109120;
      *(_DWORD *)&__p[4] = a2;
      _os_log_fault_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_FAULT, "pxgCount = %d", __p, 8u);
      long long v17 = qword_1008ABDE0;
    }
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::string __p = 136315650;
      *(void *)&__p[4] = "/Library/Caches/com.apple.xbs/Sources/Proximity/Libraries/RangingServiceLib/ServiceProvider/R"
                           "oseCycleIntervalPicker.cpp";
      *(_WORD *)&unsigned char __p[12] = 1024;
      *(_DWORD *)&__p[14] = 51;
      __int16 v23 = 2080;
      int v24 = "SymmetricalMultipeer";
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_INFO, "%s:%d: assertion failure in %s", __p, 0x1Cu);
    }
    abort();
  }
  if (a3 <= 2)
  {
    char v18 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::string __p = 134217984;
      *(void *)&__p[4] = a3;
      _os_log_fault_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_FAULT, "txSlotSize = %lld", __p, 0xCu);
      char v18 = qword_1008ABDE0;
    }
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::string __p = 136315650;
      *(void *)&__p[4] = "/Library/Caches/com.apple.xbs/Sources/Proximity/Libraries/RangingServiceLib/ServiceProvider/R"
                           "oseCycleIntervalPicker.cpp";
      *(_WORD *)&unsigned char __p[12] = 1024;
      *(_DWORD *)&__p[14] = 52;
      __int16 v23 = 2080;
      int v24 = "SymmetricalMultipeer";
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "%s:%d: assertion failure in %s", __p, 0x1Cu);
    }
    abort();
  }
  if (a4 <= 2)
  {
    long long v19 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::string __p = 134217984;
      *(void *)&__p[4] = a4;
      _os_log_fault_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_FAULT, "txSlotSize = %lld", __p, 0xCu);
      long long v19 = qword_1008ABDE0;
    }
    if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::string __p = 136315650;
      *(void *)&__p[4] = "/Library/Caches/com.apple.xbs/Sources/Proximity/Libraries/RangingServiceLib/ServiceProvider/R"
                           "oseCycleIntervalPicker.cpp";
      *(_WORD *)&unsigned char __p[12] = 1024;
      *(_DWORD *)&__p[14] = 53;
      __int16 v23 = 2080;
      int v24 = "SymmetricalMultipeer";
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "%s:%d: assertion failure in %s", __p, 0x1Cu);
    }
    abort();
  }
  switch(a1)
  {
    case 0:
      sub_100411790();
    case 1:
      int64_t v7 = 2000;
      uint64_t v8 = 1500;
      break;
    case 2:
      int64_t v7 = 1500;
      uint64_t v8 = 550;
      break;
    case 3:
      int64_t v7 = 200;
      uint64_t v8 = 90;
      break;
    default:
      int64_t v7 = 0x8000000000000000;
      uint64_t v8 = 0x7FFFFFFFFFFFFFFFLL;
      break;
  }
  long long v9 = operator new(0x20uLL);
  *long long v9 = off_100852F48;
  v9[1] = a3;
  v9[2] = a4;
  *((_DWORD *)v9 + 6) = a2;
  v21[3] = v9;
  while (1)
  {
    if (v7 < v8) {
      sub_100411760(v21);
    }
    if (sub_100166AB8((uint64_t)v21, v8)) {
      break;
    }
    v8 += 3;
  }
  sub_100166C1C(v21);
  sub_100166CA0(__p, 0xFuLL);
  uint64_t v10 = *(void *)__p;
  long long v11 = *(uint64_t **)&__p[8];
  if (*(void *)__p != *(void *)&__p[8])
  {
    uint64_t v12 = v8 + 3;
    long long v13 = *(uint64_t **)__p;
    do
    {
      *v13++ = v12;
      v12 += 3;
    }
    while (v13 != v11);
  }
  v20[0] = 0;
  v20[1] = (((uint64_t)v11 - v10) >> 3) - 1;
  uint64_t v14 = sub_1001665F4(v20);
  uint64_t v15 = *(void *)(*(void *)__p + 8 * v14);
  *(void *)&__p[8] = *(void *)__p;
  operator delete(*(void **)__p);
  return v15;
}

void sub_1001665B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001665F4(void *a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089E140, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089E140))
  {
    sub_100166764(&v6);
    std::random_device::result_type v4 = std::random_device::operator()(&v6);
    dword_10089D778[0] = v4;
    for (uint64_t i = 1; i != 624; ++i)
    {
      std::random_device::result_type v4 = i + 1812433253 * (v4 ^ (v4 >> 30));
      dword_10089D778[i] = v4;
    }
    qword_10089E138 = 0;
    std::random_device::~random_device(&v6);
    __cxa_guard_release(&qword_10089E140);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089E188, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089E188))
  {
    __cxa_atexit((void (*)(void *))&std::mutex::~mutex, &stru_10089E148, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089E188);
  }
  std::mutex::lock(&stru_10089E148);
  uint64_t v2 = sub_1001667D8((uint64_t)a1, (uint64_t)dword_10089D778, a1);
  std::mutex::unlock(&stru_10089E148);
  return v2;
}

void sub_100166728(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, std::random_device a11, std::random_device a12)
{
}

std::random_device *sub_100166764(std::random_device *a1)
{
  sub_100004950(&__token, "/dev/urandom");
  std::random_device::random_device(a1, &__token);
  if (SHIBYTE(__token.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__token.__r_.__value_.__l.__data_);
  }
  return a1;
}

void sub_1001667BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001667D8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t result = a3[1];
  uint64_t v4 = result - *a3;
  if (result != *a3)
  {
    unint64_t v5 = v4 + 1;
    if (v4 == -1)
    {
      sub_100166864((uint64_t)v10, a2, 0x40uLL);
      return sub_100166944((uint64_t)v10);
    }
    else
    {
      unint64_t v7 = __clz(v5);
      uint64_t v8 = 63;
      if (((v5 << v7) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        uint64_t v8 = 64;
      }
      sub_100166864((uint64_t)v10, a2, v8 - v7);
      do
        unint64_t v9 = sub_100166944((uint64_t)v10);
      while (v9 >= v5);
      return *a3 + v9;
    }
  }
  return result;
}

uint64_t sub_100166864(uint64_t result, uint64_t a2, unint64_t a3)
{
  *(void *)uint64_t result = a2;
  *(void *)(result + 8) = a3;
  if ((a3 & 0x1F) != 0) {
    unint64_t v3 = (a3 >> 5) + 1;
  }
  else {
    unint64_t v3 = a3 >> 5;
  }
  unint64_t v4 = a3 / v3;
  *(void *)(result + 16) = a3 / v3;
  *(void *)(result + 24) = v3;
  unint64_t v5 = (-1 << (a3 / v3)) & (unint64_t)&_mh_execute_header;
  if (a3 / v3 >= 0x40) {
    unint64_t v5 = 0;
  }
  *(void *)(result + 4sub_100149BDC(&a9, 0) = v5;
  if ((v5 ^ (unint64_t)&_mh_execute_header) > v5 / v3)
  {
    ++v3;
    unint64_t v4 = a3 / v3;
    *(void *)(result + 16) = a3 / v3;
    *(void *)(result + 24) = v3;
    if (a3 / v3 > 0x3F)
    {
      unint64_t v6 = 0;
      *(void *)(result + 32) = v3 + v4 * v3 - a3;
      *(void *)(result + 4sub_100149BDC(&a9, 0) = 0;
      goto LABEL_13;
    }
    *(void *)(result + 4sub_100149BDC(&a9, 0) = (-1 << v4) & (unint64_t)&_mh_execute_header;
  }
  *(void *)(result + 32) = v3 + a3 / v3 * v3 - a3;
  if (v4 > 0x3E) {
    unint64_t v6 = 0;
  }
  else {
    unint64_t v6 = 0x80000000uLL >> v4 << (v4 + 1);
  }
LABEL_13:
  *(void *)(result + 48) = v6;
  unsigned int v7 = 0xFFFFFFFF >> -(char)v4;
  if (!v4) {
    unsigned int v7 = 0;
  }
  if (v4 >= 0x1F) {
    unsigned int v8 = -1;
  }
  else {
    unsigned int v8 = 0xFFFFFFFF >> ~(_BYTE)v4;
  }
  *(_DWORD *)(result + 56) = v7;
  *(_DWORD *)(result + 6sub_100149BDC(&a9, 0) = v8;
  return result;
}

uint64_t sub_100166944(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    uint64_t v2 = 0;
    unint64_t v3 = 0;
    do
    {
      do
        unsigned int v4 = sub_100166A18(*(void *)a1);
      while (*(void *)(a1 + 40) <= (unint64_t)v4);
      unint64_t v5 = *(void *)(a1 + 16);
      if (v5 >= 0x40) {
        uint64_t v6 = 0;
      }
      else {
        uint64_t v6 = v2 << v5;
      }
      uint64_t v2 = v6 + (*(_DWORD *)(a1 + 56) & v4);
      ++v3;
      unint64_t v7 = *(void *)(a1 + 32);
    }
    while (v3 < v7);
  }
  else
  {
    uint64_t v2 = 0;
    unint64_t v7 = 0;
  }
  for (; v7 < *(void *)(a1 + 24); ++v7)
  {
    do
      unsigned int v8 = sub_100166A18(*(void *)a1);
    while (*(void *)(a1 + 48) <= (unint64_t)v8);
    unint64_t v9 = *(void *)(a1 + 16);
    if (v9 >= 0x3F) {
      uint64_t v10 = 0;
    }
    else {
      uint64_t v10 = v2 << (v9 + 1);
    }
    uint64_t v2 = v10 + (*(_DWORD *)(a1 + 60) & v8);
  }
  return v2;
}

uint64_t sub_100166A18(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 2496);
  unint64_t v2 = (v1 + 1) % 0x270uLL;
  unsigned int v3 = *(_DWORD *)(a1 + 4 * ((v1 + 397) % 0x270uLL)) ^ ((*(_DWORD *)(a1 + 4 * v2) & 0x7FFFFFFE | *(_DWORD *)(a1 + 4 * v1) & 0x80000000) >> 1) ^ ((int)(*(_DWORD *)(a1 + 4 * v2) << 31) >> 31) & 0x9908B0DF;
  *(_DWORD *)(a1 + 4 * v1) = v3;
  *(void *)(a1 + 2496) = v2;
  LODWORD(v1) = ((v3 ^ (v3 >> 11)) << 7) & 0x9D2C5680 ^ v3 ^ (v3 >> 11);
  return (v1 << 15) & 0xEFC60000 ^ v1 ^ (((v1 << 15) & 0xEFC60000 ^ v1) >> 18);
}

uint64_t sub_100166AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2;
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2) {
    sub_100027894();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t *))(*(void *)v2 + 48))(v2, &v4);
}

void sub_100166B10()
{
}

__n128 sub_100166B24(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x20uLL);
  *(void *)uint64_t v2 = off_100852F48;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((void *)v2 + 3) = *(void *)(a1 + 24);
  return result;
}

__n128 sub_100166B78(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_100852F48;
  __n128 result = *(__n128 *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

BOOL sub_100166BB0(uint64_t a1, void *a2)
{
  return *(void *)(a1 + 8) + (*(void *)(a1 + 8) + 2 * *(void *)(a1 + 16)) * *(int *)(a1 + 24) <= *a2;
}

uint64_t sub_100166BD0(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100166C10()
{
}

void *sub_100166C1C(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_100166CA0(void *a1, unint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1001503E8(a1, a2);
    uint64_t v4 = (char *)a1[1];
    bzero(v4, 8 * a2);
    a1[1] = &v4[8 * a2];
  }
  return a1;
}

void sub_100166CFC(_Unwind_Exception *exception_object)
{
  unsigned int v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100166D18@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100853120[a1]);
}

void *sub_100166D2C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100853178[a1]);
}

void *sub_100166D40@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_1008531C0[a1]);
}

void *sub_100166D54@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_1008531E0[a1]);
}

double sub_100166D68(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = a2;
  *(void *)(a1 + 24) = 850045863;
  double result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(void *)(a1 + 8sub_100149BDC(&a9, 0) = 0;
  *(void *)a1 = off_1008530B8;
  return result;
}

uint64_t sub_100166DA8(uint64_t a1)
{
  *(void *)a1 = off_100853108;
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  return a1;
}

void sub_100166DEC(uint64_t a1)
{
  *(void *)a1 = off_100853108;
  std::mutex::~mutex((std::mutex *)(a1 + 24));

  operator delete();
}

uint64_t sub_100166E50(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 16)) {
    sub_1004117BC();
  }
  uint64_t v4 = (std::mutex *)(a1 + 24);
  std::mutex::lock((std::mutex *)(a1 + 24));
  uint64_t v5 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 16) + 48))(*(void *)(a1 + 16), a2);
  std::mutex::unlock(v4);
  return v5;
}

void sub_100166ED0(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_100166EE4(uint64_t a1, _OWORD *a2)
{
  if (*(void *)(a1 + 8))
  {
    long long v3 = a2[1];
    v6[0] = *a2;
    v6[1] = v3;
    uint64_t v4 = (std::mutex *)(a1 + 24);
    std::mutex::lock((std::mutex *)(a1 + 24));
    (*(void (**)(void, _OWORD *))(**(void **)(a1 + 8) + 32))(*(void *)(a1 + 8), v6);
    std::mutex::unlock(v4);
  }
  else
  {
    uint64_t v5 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_1004117E8(v5);
    }
  }
}

void sub_100166F88(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100166F9C(uint64_t a1)
{
  uint64_t v2 = (std::mutex *)(a1 + 24);
  std::mutex::lock((std::mutex *)(a1 + 24));
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3) {
    uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
  }
  else {
    uint64_t v4 = 0;
  }
  std::mutex::unlock(v2);
  return v4;
}

void sub_10016700C(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100167020(uint64_t a1)
{
  *(void *)a1 = off_100853108;
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  return a1;
}

void sub_100167064(uint64_t a1)
{
  *(void *)a1 = off_100853108;
  std::mutex::~mutex((std::mutex *)(a1 + 24));

  operator delete();
}

uint64_t sub_1001670C8(uint64_t result)
{
  *(void *)(result + 4) = 0;
  *(_DWORD *)double result = 196808;
  return result;
}

_WORD *sub_1001670DC(_WORD *result, __int16 a2, __int16 a3, __int16 a4, __int16 a5, int a6)
{
  result[2] += a3 * a2;
  result[3] |= a4;
  result[4] |= a5;
  if ((*(void *)&a6 & 0xFF0000) != 0)
  {
    uint64_t v6 = result;
    double result = (_WORD *)sub_1003A8F28((unsigned __int16)a6);
    if (v7)
    {
      return sub_1003A8CD0(v6 + 5, result);
    }
  }
  return result;
}

uint64_t sub_100167160(uint64_t a1)
{
  return *(void *)a1;
}

void *sub_100167170@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100853788[a1]);
}

void *sub_100167184@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_1008537E0[a1]);
}

void *sub_100167198@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100853828[a1]);
}

void *sub_1001671AC@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100853848[a1]);
}

uint64_t sub_1001671C0(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  *(void *)a1 = off_100853210;
  *(_DWORD *)(a1 + 8) = *((_DWORD *)sub_100007D00() + 144);
  *(_DWORD *)(a1 + 12) = 0;
  *(void *)(a1 + 16) = a2;
  sub_10016E47C((unsigned int *)(a1 + 8), (void *)(a1 + 24));
  unsigned int v8 = operator new(0x20uLL);
  void *v8 = off_100853618;
  v8[1] = sub_1001676D8;
  v8[2] = 0;
  void v8[3] = a1;
  v38[3] = v8;
  int v9 = *(_DWORD *)(a1 + 8);
  uint64_t v10 = *(std::__shared_weak_count **)(a1 + 32);
  uint64_t v32 = *(void *)(a1 + 24);
  long long v33 = v10;
  if (v10) {
    atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_100160F9C(a1 + 40, (uint64_t)v38, v9, &v32);
  if (v33) {
    sub_10001A970(v33);
  }
  sub_100162CD8(v38);
  uint64_t v11 = *(unsigned int *)(a1 + 8);
  uint64_t v12 = *(std::__shared_weak_count **)(a1 + 32);
  uint64_t v30 = *(void *)(a1 + 24);
  long long v31 = v12;
  if (v12) {
    atomic_fetch_add_explicit(&v12->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  __n128 v13 = sub_10040A690((uint64_t)v29, &xmmword_1004B5EF8, &xmmword_1004B5F10, &xmmword_1004B5F28);
  sub_1003ED708(a1 + 1152, v11, &v30, v29, v13);
  if (v31) {
    sub_10001A970(v31);
  }
  sub_1002B5E80(a1 + 1632, v14);
  *(void *)(a1 + 168sub_100149BDC(&a9, 0) = 850045863;
  *(_OWORD *)(a1 + 1688) = 0u;
  *(_OWORD *)(a1 + 1704) = 0u;
  *(_OWORD *)(a1 + 172sub_100149BDC(&a9, 0) = 0u;
  *(_OWORD *)(a1 + 1736) = 0u;
  *(_OWORD *)(a1 + 1752) = 0u;
  *(_OWORD *)(a1 + 1768) = 0u;
  *(_DWORD *)(a1 + 1784) = 1065353216;
  *(void *)(a1 + 1792) = *a4;
  uint64_t v15 = a4[1];
  *(void *)(a1 + 180sub_100149BDC(&a9, 0) = v15;
  if (v15) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v15 + 8), 1uLL, memory_order_relaxed);
  }
  *(void *)(a1 + 1808) = *a3;
  uint64_t v16 = a3[1];
  *(void *)(a1 + 1816) = v16;
  if (v16) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v16 + 8), 1uLL, memory_order_relaxed);
  }
  *(_DWORD *)(a1 + 1824) = 1;
  *(void *)(a1 + 1832) = 0;
  std::string v37 = 0;
  long long v17 = operator new(0x20uLL);
  void *v17 = off_1008536D8;
  v17[1] = sub_100167B00;
  unsigned int v17[2] = 0;
  v17[3] = a1;
  std::string v37 = v17;
  char v18 = (std::__shared_weak_count *)a4[1];
  uint64_t v27 = *a4;
  uint64_t v28 = v18;
  if (v18) {
    atomic_fetch_add_explicit(&v18->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_10014B2C4(a1 + 1840, (uint64_t)v36, &v27);
  if (v28) {
    sub_10001A970(v28);
  }
  sub_10014C938(v36);
  long long v19 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_USER_INITIATED, 0);
  *(void *)(a1 + 1744) = dispatch_queue_create("com.apple.nearbyd.Rose.SolutionEngine", v19);
  if (!*(void *)(a1 + 1808)) {
    __assert_rtn("RoseSolutionProvider", "RoseSolutionProvider.cpp", 50, "fDatabase != nullptr");
  }
  if (!a2)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "[Solution Provider] Client is nullptr. Normal operation is not possible.");
  }
  BOOL v20 = (unsigned int *)sub_100007D00();
  if (*(void *)(a1 + 1792)) {
    sub_100299E38(*(void *)(a1 + 1792), v20[144]);
  }
  sub_10018838C((uint64_t)v29);
  sub_100160FA0(a1 + 40, (uint64_t)v29);
  uint64_t v21 = *(void *)(a1 + 1792);
  if (v21) {
    sub_10029A294(v21, (uint64_t)v29);
  }
  long long v35 = 0;
  uint64_t v22 = operator new(0x20uLL);
  void *v22 = off_1008536D8;
  v22[1] = sub_100167C08;
  void v22[2] = 0;
  v22[3] = a1;
  long long v35 = v22;
  sub_10014C0E4(a1 + 1840, (uint64_t)v34);
  sub_10014C938(v34);
  __int16 v23 = *(NSObject **)(a1 + 1744);
  block[0] = _NSConcreteStackBlock;
  block[1] = 0x40000000;
  block[2] = sub_100167D10;
  block[3] = &unk_100853250;
  block[4] = a1;
  dispatch_async(v23, block);
  return a1;
}

void sub_1001675E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  __cxa_free_exception(v35);
  sub_10014B34C(v34);
  std::string v37 = (std::__shared_weak_count *)v30[227];
  if (v37) {
    sub_10001A970(v37);
  }
  std::string v38 = (std::__shared_weak_count *)v30[225];
  if (v38) {
    sub_10001A970(v38);
  }
  sub_10002AC70((uint64_t)(v30 + 219));
  std::mutex::~mutex(v33);
  sub_100167D98(v32);
  sub_100167E0C(v31);
  unint64_t v39 = (std::__shared_weak_count *)v30[4];
  if (v39) {
    sub_10001A970(v39);
  }
  _Unwind_Resume(a1);
}

void sub_1001676D8(uint64_t a1, long long *a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_1004118B4();
  }
  long long v4 = a2[3];
  long long v37 = a2[2];
  long long v38 = v4;
  long long v5 = *a2;
  long long v36 = a2[1];
  long long v35 = v5;
  uint64_t v6 = (const void *)*((void *)a2 + 9);
  uint64_t v39 = *((void *)a2 + 8);
  double v40 = 0;
  uint64_t v7 = *((void *)a2 + 10);
  uint64_t v42 = 0;
  long long v41 = 0;
  sub_10015036C(&v40, v6, v7, (v7 - (uint64_t)v6) >> 3);
  long long v8 = a2[7];
  long long v43 = a2[6];
  long long v44 = v8;
  int v9 = (const void *)*((void *)a2 + 17);
  uint64_t v45 = *((void *)a2 + 16);
  int v46 = 0;
  uint64_t v48 = 0;
  __int16 v47 = 0;
  sub_10015042C(&v46, v9, *((void *)a2 + 18), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*((void *)a2 + 18) - (void)v9) >> 3));
  memcpy(v49, a2 + 10, 0x181uLL);
  memcpy(v50, (char *)a2 + 552, sizeof(v50));
  sub_1001500F0(v51, (uint64_t)a2 + 1160);
  __int16 v52 = *((_WORD *)a2 + 888);
  unsigned __int8 v10 = v49[144];
  if (v49[144] >= 0x100u && v49[145] >= 0x100u)
  {
    uint64_t v12 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 67109120;
      int v34 = v10;
      _os_log_debug_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "#sp,nb_rx_status = %d", buf, 8u);
      uint64_t v12 = qword_1008ABDE0;
    }
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
    {
      if (v49[145] <= 0xFFu) {
        sub_10000AE44();
      }
      sub_100411868(v49[145], buf, v12);
    }
  }
  else
  {
    uint64_t v11 = sub_100007D00();
    if (sub_1003D2ECC((uint64_t)v11) && os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
      sub_100411834();
    }
  }
  __n128 v13 = *(NSObject **)(a1 + 1744);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1174405120;
  long long v16 = v36;
  long long v17 = v37;
  long long v18 = v38;
  void v14[2] = sub_10016BA54;
  v14[3] = &unk_100853520;
  v14[4] = a1;
  long long v15 = v35;
  uint64_t v19 = v39;
  BOOL v20 = 0;
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  sub_10015036C(&v20, v40, (uint64_t)v41, (v41 - (unsigned char *)v40) >> 3);
  long long v23 = v43;
  long long v24 = v44;
  uint64_t v25 = v45;
  std::string __p = 0;
  uint64_t v27 = 0;
  uint64_t v28 = 0;
  sub_10015042C(&__p, v46, (uint64_t)v47, 0x6DB6DB6DB6DB6DB7 * ((v47 - (unsigned char *)v46) >> 3));
  memcpy(v29, v49, sizeof(v29));
  memcpy(v30, v50, sizeof(v30));
  sub_1001500F0(v31, (uint64_t)v51);
  __int16 v32 = v52;
  dispatch_async(v13, v14);
  sub_10015024C((uint64_t)v31);
  if (__p)
  {
    uint64_t v27 = __p;
    operator delete(__p);
  }
  if (v20)
  {
    uint64_t v21 = v20;
    operator delete(v20);
  }
  sub_10015024C((uint64_t)v51);
  if (v46)
  {
    __int16 v47 = v46;
    operator delete(v46);
  }
  if (v40)
  {
    long long v41 = v40;
    operator delete(v40);
  }
}

void sub_100167A80(_Unwind_Exception *a1)
{
}

void sub_100167B00(uint64_t a1, int a2)
{
  long long v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 67109120;
    int v9 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#sp,notifyLutFileReady: received new lut file ready notice for accessory type: %d", buf, 8u);
  }
  long long v5 = *(NSObject **)(a1 + 1744);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 0x40000000;
  _OWORD v6[2] = sub_10016860C;
  void v6[3] = &unk_1008532D0;
  v6[4] = a1;
  int v7 = a2;
  dispatch_async(v5, v6);
}

void sub_100167C08(uint64_t a1, int a2)
{
  long long v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 67109120;
    int v9 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#sp,notifyNNFileReady: received new NN file ready notice for accessory type: %d", buf, 8u);
  }
  long long v5 = *(NSObject **)(a1 + 1744);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 0x40000000;
  _OWORD v6[2] = sub_100168630;
  void v6[3] = &unk_1008532F0;
  v6[4] = a1;
  int v7 = a2;
  dispatch_async(v5, v6);
}

void sub_100167D10(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_10014B350(v1 + 1840, 0, v1 + 40);
  uint64_t v2 = *(std::__shared_weak_count **)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 24);
  long long v4 = v2;
  if (v2) {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_10014C170(v1 + 1840, 0, &v3);
  if (v4) {
    sub_10001A970(v4);
  }
}

void sub_100167D80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_10001A970(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100167D98(void *a1)
{
  sub_10016CC78(a1 + 50);
  sub_10016CC78(a1 + 40);
  sub_10016CC78(a1 + 30);
  sub_10016CD20((uint64_t)(a1 + 25));
  sub_10016CDA4((uint64_t)(a1 + 20));
  sub_10002AC70((uint64_t)(a1 + 15));
  sub_10016CC78(a1 + 9);
  sub_10016CFA4(a1 + 3);
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (v2) {
    sub_10001A970(v2);
  }
  return a1;
}

uint64_t sub_100167E0C(uint64_t a1)
{
  std::mutex::~mutex((std::mutex *)(a1 + 1024));
  sub_100162D5C(a1 + 1000, *(void **)(a1 + 1008));
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 952);
  if (v2) {
    sub_10001A970(v2);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 880));
  sub_100149BDC((void ***)(a1 + 872), 0);
  std::mutex::~mutex((std::mutex *)(a1 + 800));
  sub_100149BDC((void ***)(a1 + 792), 0);
  sub_100162958(a1 + 40);
  sub_100162CD8((void *)(a1 + 8));
  return a1;
}

uint64_t sub_100167E8C(uint64_t a1)
{
  *(void *)a1 = off_100853210;
  uint64_t v2 = *(NSObject **)(a1 + 1744);
  if (v2) {
    dispatch_release(v2);
  }
  sub_10014B34C(a1 + 1840);
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 1816);
  if (v3) {
    sub_10001A970(v3);
  }
  long long v4 = *(std::__shared_weak_count **)(a1 + 1800);
  if (v4) {
    sub_10001A970(v4);
  }
  sub_10002AC70(a1 + 1752);
  std::mutex::~mutex((std::mutex *)(a1 + 1680));
  sub_10016CC78((void *)(a1 + 1552));
  sub_10016CC78((void *)(a1 + 1472));
  sub_10016CC78((void *)(a1 + 1392));
  sub_10016CD20(a1 + 1352);
  sub_10016CDA4(a1 + 1312);
  sub_10002AC70(a1 + 1272);
  sub_10016CC78((void *)(a1 + 1224));
  sub_10016CFA4((void *)(a1 + 1176));
  long long v5 = *(std::__shared_weak_count **)(a1 + 1168);
  if (v5) {
    sub_10001A970(v5);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 1064));
  sub_100162D5C(a1 + 1040, *(void **)(a1 + 1048));
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 992);
  if (v6) {
    sub_10001A970(v6);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 920));
  sub_100149BDC((void ***)(a1 + 912), 0);
  std::mutex::~mutex((std::mutex *)(a1 + 840));
  sub_100149BDC((void ***)(a1 + 832), 0);
  sub_100162958(a1 + 80);
  sub_100162CD8((void *)(a1 + 48));
  int v7 = *(std::__shared_weak_count **)(a1 + 32);
  if (v7) {
    sub_10001A970(v7);
  }
  return a1;
}

void sub_100167FC0(uint64_t a1)
{
  sub_100167E8C(a1);

  operator delete();
}

uint64_t sub_100167FF8(uint64_t a1, unsigned __int16 a2, int a3)
{
  if (!a3) {
    sub_1004118E8();
  }
  sub_10016801C(a1, a2, a3);
  return 1;
}

uint64_t sub_10016801C(uint64_t a1, unsigned __int16 a2, int a3)
{
  unsigned __int16 v7 = a2;
  long long v5 = (std::mutex *)(a1 + 1680);
  std::mutex::lock((std::mutex *)(a1 + 1680));
  long long v8 = &v7;
  *((_DWORD *)sub_10016EDFC(a1 + 1752, &v7, (uint64_t)&unk_1004BC2F8, &v8) + 5) = a3;
  std::mutex::unlock(v5);
  return 1;
}

void sub_100168094(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1001680A8(uint64_t a1, int a2)
{
  long long v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 67109120;
    int v9 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#sp,RoseSolutionProvider::notifyServiceCancel: ticketId %hu", buf, 8u);
  }
  long long v5 = *(NSObject **)(a1 + 1744);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 0x40000000;
  _OWORD v6[2] = sub_1001681B0;
  void v6[3] = &unk_100853270;
  v6[4] = a1;
  __int16 v7 = a2;
  dispatch_async(v5, v6);
}

void sub_1001681B0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = v2[224];
  if (v3)
  {
    int v4 = *(unsigned __int16 *)(a1 + 40);
    double v5 = sub_10039CC9C();
    sub_1002941C0(v3, v4, v5);
  }
  sub_100168228((uint64_t)v2, *(_WORD *)(a1 + 40));
  sub_1003EE2A0(v2 + 144, *(_WORD *)(a1 + 40));
  sub_100161350((uint64_t)(v2 + 5), *(unsigned __int16 *)(a1 + 40));
  if (!v2[132]) {
    v2[229] = 0;
  }
}

BOOL sub_100168228(uint64_t a1, unsigned __int16 a2)
{
  unsigned __int16 v7 = a2;
  uint64_t v3 = (std::mutex *)(a1 + 1680);
  std::mutex::lock((std::mutex *)(a1 + 1680));
  int v4 = (void *)(a1 + 1752);
  double v5 = (uint64_t *)sub_10016F024((void *)(a1 + 1752), &v7);
  if (v5)
  {
    sub_10002A67C(v4, v5);
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_100411914();
  }
  std::mutex::unlock(v3);
  return v5 != 0;
}

void sub_1001682D0(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1001682E4(uint64_t a1, int a2)
{
  int v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 67109120;
    int v9 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#sp,RoseSolutionProvider::notifyServiceStop: ticketId %hu", buf, 8u);
  }
  double v5 = *(NSObject **)(a1 + 1744);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 0x40000000;
  _OWORD v6[2] = sub_1001683EC;
  void v6[3] = &unk_100853290;
  v6[4] = a1;
  __int16 v7 = a2;
  dispatch_async(v5, v6);
}

void sub_1001683EC(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = v2[224];
  if (v3)
  {
    int v4 = *(unsigned __int16 *)(a1 + 40);
    double v5 = sub_10039CC9C();
    sub_100294458(v3, v4, v5);
  }
  sub_1003EE2A0(v2 + 144, *(_WORD *)(a1 + 40));
  sub_100161350((uint64_t)(v2 + 5), *(unsigned __int16 *)(a1 + 40));
  if (!v2[132]) {
    v2[229] = 0;
  }
}

void sub_100168458(uint64_t a1)
{
  uint64_t v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#sp,RoseSolutionProvider::notifyFileSystemAccessAllowed called", buf, 2u);
  }
  uint64_t v3 = *(NSObject **)(a1 + 1744);
  block[0] = _NSConcreteStackBlock;
  block[1] = 0x40000000;
  block[2] = sub_100168518;
  block[3] = &unk_1008532B0;
  block[4] = a1;
  dispatch_async(v3, block);
}

void sub_100168518(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_10014C254(v1 + 1840);
  sub_10014B350(v1 + 1840, 0, v1 + 40);
  uint64_t v2 = *(std::__shared_weak_count **)(v1 + 32);
  uint64_t v8 = *(void *)(v1 + 24);
  int v9 = v2;
  if (v2) {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_10014C170(v1 + 1840, 0, &v8);
  if (v9) {
    sub_10001A970(v9);
  }
  int v3 = *(_DWORD *)(v1 + 12);
  if (v3)
  {
    sub_10014B350(v1 + 1840, v3, v1 + 40);
    unsigned int v4 = *(_DWORD *)(v1 + 12);
    double v5 = *(std::__shared_weak_count **)(v1 + 32);
    uint64_t v6 = *(void *)(v1 + 24);
    __int16 v7 = v5;
    if (v5) {
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    sub_10014C170(v1 + 1840, v4, &v6);
    if (v7) {
      sub_10001A970(v7);
    }
  }
}

void sub_1001685E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, uint64_t a12)
{
  if (a10) {
    sub_10001A970(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_10016860C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  int v2 = *(_DWORD *)(a1 + 40);
  if (v2 == *(_DWORD *)(v1 + 12)) {
    sub_10014B350(v1 + 1840, v2, v1 + 40);
  }
}

void sub_100168630(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  unsigned int v2 = *(_DWORD *)(a1 + 40);
  if (v2 == *(_DWORD *)(v1 + 12))
  {
    uint64_t v3 = v1 + 1840;
    uint64_t v5 = *(void *)(v1 + 24);
    unsigned int v4 = *(std::__shared_weak_count **)(v1 + 32);
    uint64_t v6 = v5;
    __int16 v7 = v4;
    if (v4) {
      atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    sub_10014C170(v3, v2, &v6);
    if (v7) {
      sub_10001A970(v7);
    }
  }
}

void sub_100168698(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_10001A970(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001686B0(uint64_t a1, uint64_t a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100411980();
  }
  double v4 = *(double *)a2;
  long long v5 = *(_OWORD *)(a2 + 129);
  long long v29 = *(_OWORD *)(a2 + 113);
  long long v30 = v5;
  v31[0] = *(_OWORD *)(a2 + 145);
  *(_OWORD *)((char *)v31 + 15) = *(_OWORD *)(a2 + 160);
  long long v6 = *(_OWORD *)(a2 + 65);
  long long v25 = *(_OWORD *)(a2 + 49);
  long long v26 = v6;
  long long v7 = *(_OWORD *)(a2 + 97);
  long long v27 = *(_OWORD *)(a2 + 81);
  long long v28 = v7;
  long long v8 = *(_OWORD *)(a2 + 33);
  long long v23 = *(_OWORD *)(a2 + 17);
  long long v24 = v8;
  uint64_t v9 = sub_1002B5E84(a1 + 1632, v4);
  unsigned __int8 v10 = *(NSObject **)(a1 + 1744);
  block[0] = _NSConcreteStackBlock;
  block[1] = 0x40000000;
  block[2] = sub_100168840;
  block[3] = &unk_100853310;
  block[4] = a1;
  *(double *)&void block[5] = v4;
  void block[6] = v9;
  char v13 = v11;
  long long v20 = v29;
  long long v21 = v30;
  *(_OWORD *)uint64_t v22 = v31[0];
  *(_OWORD *)&v22[15] = *(_OWORD *)((char *)v31 + 15);
  long long v16 = v25;
  long long v17 = v26;
  long long v18 = v27;
  long long v19 = v28;
  long long v14 = v23;
  long long v15 = v24;
  dispatch_async(v10, block);
}

uint64_t sub_100168840(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  unsigned int v2 = (double *)(a1 + 40);
  (*(void (**)(void, uint64_t))(**(void **)(v1 + 16) + 24))(*(void *)(v1 + 16), a1 + 40);

  return sub_1001688A8(v1, v2);
}

uint64_t sub_1001688A8(uint64_t a1, double *a2)
{
  kdebug_trace();
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 1744));
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100411AB4();
  }
  uint64_t v3 = sub_1002B5E84(a1 + 1632, *a2);
  if (v5)
  {
    v4.n128_u64[0] = v3;
    sub_100409828(a2, (uint64_t)v39, v4);
    uint64_t v6 = *(void *)(a1 + 1792);
    if (v6) {
      sub_1002985BC(v6, v39);
    }
    if (sub_1003ED70C(a1 + 1152, v39))
    {
      sub_1003EE904(a1 + 1152, &v37);
      kdebug_trace();
      long long v7 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
        sub_100411A2C(&v37, v7);
      }
      kdebug_trace();
      uint64_t v8 = v37;
      uint64_t v31 = v38;
      if (v37 == v38)
      {
        char v9 = 0;
LABEL_42:
        kdebug_trace();
      }
      else
      {
        char v9 = 0;
        int v10 = 0;
        while (1)
        {
          int v11 = v10 + 1;
          uint64_t v12 = qword_1008ABDE0;
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)long long buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = v11;
            _os_log_debug_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "#sp,computeAndEmitSensorFusionSolution(imu_data): processing solution %d", buf, 8u);
          }
          int v32 = v11;
          uint64_t v13 = *(void *)(v8 + 8);
          sub_10016EAE8((uint64_t *)&v34, v8 + 16);
          uint64_t v14 = v36;
          long long v15 = qword_1008ABDE0;
          if (!v36) {
            break;
          }
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)long long buf = 67109376;
            *(_DWORD *)&uint8_t buf[4] = v32;
            *(_WORD *)&uint8_t buf[8] = 2048;
            *(void *)&buf[10] = v14;
            _os_log_debug_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "#sp,computeAndEmitSensorFusionSolution(imu_data): solution %d: processing %zu tickets", buf, 0x12u);
          }
          long long v16 = v34;
          if (v34 != &v35)
          {
            do
            {
              int v17 = *((unsigned __int16 *)v16 + 13);
              long long v18 = qword_1008ABDE0;
              if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG))
              {
                *(_DWORD *)long long buf = 67109120;
                *(_DWORD *)&uint8_t buf[4] = v17;
                _os_log_debug_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEBUG, "#sp,computeAndEmitSensorFusionSolution(imu_data): emitting solution for ticketId %hu", buf, 8u);
              }
              uint64_t v19 = sub_1002B609C(a1 + 1632, *(double *)v8);
              if (v20)
              {
                sub_10016E394((uint64_t)buf, v17, v13, (uint64_t *)v8, (long long *)a2, 1, *(double *)&v19);
                (*(void (**)(void, unsigned char *))(**(void **)(a1 + 16) + 16))(*(void *)(a1 + 16), buf);
                if (v60 && __p)
                {
                  uint64_t v59 = __p;
                  operator delete(__p);
                }
                if (v57) {
                  sub_10003E96C((uint64_t)v56, v56[1]);
                }
                sub_10015DC28((uint64_t)&v55);
                char v9 = 1;
              }
              else
              {
                long long v21 = qword_1008ABDE0;
                if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
                {
                  double v25 = *(double *)v8;
                  uint64_t v26 = *(void *)(v8 + 8);
                  *(_DWORD *)long long buf = 134218496;
                  *(double *)&uint8_t buf[4] = v25;
                  *(_WORD *)&unsigned char buf[12] = 1024;
                  *(_DWORD *)&buf[14] = v17;
                  __int16 v53 = 2048;
                  uint64_t v54 = v26;
                  _os_log_error_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "#sp,computeAndEmitSensorFusionSolution(imu_data): could not convert mach cont time %.9f to mach abs time, NOT emitting solution for ticketId %hu, Peer: 0x%llx", buf, 0x1Cu);
                }
              }
              uint64_t v22 = v16[1];
              if (v22)
              {
                do
                {
                  long long v23 = (void **)v22;
                  uint64_t v22 = (void *)*v22;
                }
                while (v22);
              }
              else
              {
                do
                {
                  long long v23 = (void **)v16[2];
                  BOOL v24 = *v23 == v16;
                  long long v16 = v23;
                }
                while (!v24);
              }
              long long v16 = v23;
            }
            while (v23 != &v35);
          }
          uint64_t v27 = *(void *)(a1 + 1792);
          if (v27) {
            sub_100298A60(v27, v39, (uint64_t *)v8);
          }
          sub_10003E96C((uint64_t)&v34, v35);
          v8 += 144;
          int v10 = v32;
          if (v8 == v31) {
            goto LABEL_42;
          }
        }
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
          sub_1004119B4(v13, v15);
        }
        sub_10003E96C((uint64_t)&v34, v35);
      }
      *(void *)long long buf = &v37;
      sub_10016EA58((void ***)buf);
    }
    else
    {
      char v9 = 0;
    }
    if (v50)
    {
      double v51 = v50;
      operator delete(v50);
    }
    if (v48)
    {
      double v49 = v48;
      operator delete(v48);
    }
    if (v46)
    {
      __int16 v47 = v46;
      operator delete(v46);
    }
    if (v44)
    {
      uint64_t v45 = v44;
      operator delete(v44);
    }
    if (v42)
    {
      long long v43 = v42;
      operator delete(v42);
    }
    if (v40)
    {
      long long v41 = v40;
      operator delete(v40);
    }
  }
  else
  {
    long long v28 = qword_1008ABDE0;
    char v9 = 0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      double v29 = *a2;
      *(_DWORD *)long long buf = 134217984;
      *(double *)&uint8_t buf[4] = v29;
      _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "#sp,computeAndEmitSensorFusionSolution(imu_data): failed to convert mach abs time %.9f to mach continuous; ignoring",
        buf,
        0xCu);
      char v9 = 0;
    }
  }
  return v9 & 1;
}

void sub_100168E5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,void **a47)
{
  a47 = (void **)&a24;
  sub_10016EA58(&a47);
  sub_10016CBF4(&a27);
  _Unwind_Resume(a1);
}

uint64_t sub_100168EC8(uint64_t a1, uint64_t a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100411D64();
  }
  switch(*(_DWORD *)a2)
  {
    case 0:
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
        sub_100411D24();
      }
      return kdebug_trace();
    case 1:
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
        sub_100411AE8();
      }
      if (!*(unsigned char *)(a2 + 560))
      {
        char v5 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT))
        {
          LOWORD(v6) = 0;
          _os_log_fault_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "#sp,!range_result.has_value()", (uint8_t *)&v6, 2u);
          char v5 = qword_1008ABDE0;
        }
        if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
        {
          int v6 = 136315650;
          long long v7 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Libraries/RangingServiceLib/SolutionProvider/RoseSolutionProvider.cpp";
          __int16 v8 = 1024;
          int v9 = 185;
          __int16 v10 = 2080;
          int v11 = "ingestMeasurement";
LABEL_105:
          _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "#sp,%s:%d: assertion failure in %s", (uint8_t *)&v6, 0x1Cu);
        }
LABEL_106:
        abort();
      }
      kdebug_trace();
      if (!*(unsigned char *)(a2 + 560)) {
        goto LABEL_107;
      }
      sub_100169B18(a1, (long long *)(a2 + 8));
      return kdebug_trace();
    case 2:
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
        sub_100411C20();
      }
      if (*(unsigned char *)(a2 + 784))
      {
        kdebug_trace();
        if (*(unsigned char *)(a2 + 784))
        {
          (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 32))(a1, a2 + 568);
          return kdebug_trace();
        }
LABEL_107:
        sub_10000AE44();
      }
      char v5 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT))
      {
        LOWORD(v6) = 0;
        _os_log_fault_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "#sp,!timestamp_event.has_value()", (uint8_t *)&v6, 2u);
        char v5 = qword_1008ABDE0;
      }
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        int v6 = 136315650;
        long long v7 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Libraries/RangingServiceLib/SolutionProvider/RoseSolutionProvider.cpp";
        __int16 v8 = 1024;
        int v9 = 226;
        __int16 v10 = 2080;
        int v11 = "ingestMeasurement";
        goto LABEL_105;
      }
      goto LABEL_106;
    case 3:
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
        sub_100411B1C();
      }
      if (!*(unsigned char *)(a2 + 864))
      {
        char v5 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT))
        {
          LOWORD(v6) = 0;
          _os_log_fault_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "#sp,!cir_data.has_value()", (uint8_t *)&v6, 2u);
          char v5 = qword_1008ABDE0;
        }
        if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
        {
          int v6 = 136315650;
          long long v7 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Libraries/RangingServiceLib/SolutionProvider/RoseSolutionProvider.cpp";
          __int16 v8 = 1024;
          int v9 = 192;
          __int16 v10 = 2080;
          int v11 = "ingestMeasurement";
          goto LABEL_105;
        }
        goto LABEL_106;
      }
      kdebug_trace();
      if (*(unsigned char *)(a2 + 864))
      {
        sub_10016A094(a1, (long long *)(a2 + 792));
        return kdebug_trace();
      }
      goto LABEL_107;
    case 4:
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
        sub_100411B50();
      }
      if (!*(unsigned char *)(a2 + 1000))
      {
        char v5 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT))
        {
          LOWORD(v6) = 0;
          _os_log_fault_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "#sp,!aoa_cir_data_event.has_value()", (uint8_t *)&v6, 2u);
          char v5 = qword_1008ABDE0;
        }
        if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
        {
          int v6 = 136315650;
          long long v7 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Libraries/RangingServiceLib/SolutionProvider/RoseSolutionProvider.cpp";
          __int16 v8 = 1024;
          int v9 = 199;
          __int16 v10 = 2080;
          int v11 = "ingestMeasurement";
          goto LABEL_105;
        }
        goto LABEL_106;
      }
      kdebug_trace();
      if (*(unsigned char *)(a2 + 1000))
      {
        sub_10016A2B8(a1, (long long *)(a2 + 872));
        return kdebug_trace();
      }
      goto LABEL_107;
    case 5:
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
        sub_100411B84();
      }
      if (!*(unsigned char *)(a2 + 1088))
      {
        char v5 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT))
        {
          LOWORD(v6) = 0;
          _os_log_fault_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "#sp,!toa_cir_data_event.has_value()", (uint8_t *)&v6, 2u);
          char v5 = qword_1008ABDE0;
        }
        if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
        {
          int v6 = 136315650;
          long long v7 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Libraries/RangingServiceLib/SolutionProvider/RoseSolutionProvider.cpp";
          __int16 v8 = 1024;
          int v9 = 206;
          __int16 v10 = 2080;
          int v11 = "ingestMeasurement";
          goto LABEL_105;
        }
        goto LABEL_106;
      }
      kdebug_trace();
      if (*(unsigned char *)(a2 + 1088))
      {
        sub_10016A450(a1, (long long *)(a2 + 1008));
        return kdebug_trace();
      }
      goto LABEL_107;
    case 6:
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
        sub_100411BEC();
      }
      if (!*(unsigned char *)(a2 + 1320))
      {
        char v5 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT))
        {
          LOWORD(v6) = 0;
          _os_log_fault_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "#sp,!resp_sf_stats.has_value()", (uint8_t *)&v6, 2u);
          char v5 = qword_1008ABDE0;
        }
        if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
        {
          int v6 = 136315650;
          long long v7 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Libraries/RangingServiceLib/SolutionProvider/RoseSolutionProvider.cpp";
          __int16 v8 = 1024;
          int v9 = 219;
          __int16 v10 = 2080;
          int v11 = "ingestMeasurement";
          goto LABEL_105;
        }
        goto LABEL_106;
      }
      kdebug_trace();
      if (*(unsigned char *)(a2 + 1320))
      {
        sub_10016A738(a1, a2 + 1208);
        return kdebug_trace();
      }
      goto LABEL_107;
    case 7:
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
        sub_100411C54();
      }
      if (!*(unsigned char *)(a2 + 1592))
      {
        char v5 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT))
        {
          LOWORD(v6) = 0;
          _os_log_fault_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "#sp,!range_result_debug_event.has_value()", (uint8_t *)&v6, 2u);
          char v5 = qword_1008ABDE0;
        }
        if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
        {
          int v6 = 136315650;
          long long v7 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Libraries/RangingServiceLib/SolutionProvider/RoseSolutionProvider.cpp";
          __int16 v8 = 1024;
          int v9 = 233;
          __int16 v10 = 2080;
          int v11 = "ingestMeasurement";
          goto LABEL_105;
        }
        goto LABEL_106;
      }
      kdebug_trace();
      if (*(unsigned char *)(a2 + 1592))
      {
        (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 40))(a1, a2 + 1328);
        return kdebug_trace();
      }
      goto LABEL_107;
    case 8:
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
        sub_100411C88();
      }
      if (!*(unsigned char *)(a2 + 1672))
      {
        char v5 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT))
        {
          LOWORD(v6) = 0;
          _os_log_fault_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "#sp,!range_result_debug_v2_event.has_value()", (uint8_t *)&v6, 2u);
          char v5 = qword_1008ABDE0;
        }
        if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
        {
          int v6 = 136315650;
          long long v7 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Libraries/RangingServiceLib/SolutionProvider/RoseSolutionProvider.cpp";
          __int16 v8 = 1024;
          int v9 = 240;
          __int16 v10 = 2080;
          int v11 = "ingestMeasurement";
          goto LABEL_105;
        }
        goto LABEL_106;
      }
      kdebug_trace();
      if (*(unsigned char *)(a2 + 1672))
      {
        (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 48))(a1, a2 + 1600);
        return kdebug_trace();
      }
      goto LABEL_107;
    case 9:
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
        sub_100411CBC();
      }
      if (!*(unsigned char *)(a2 + 1728))
      {
        char v5 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT))
        {
          LOWORD(v6) = 0;
          _os_log_fault_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "#sp,!session_start_notification.has_value()", (uint8_t *)&v6, 2u);
          char v5 = qword_1008ABDE0;
        }
        if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
        {
          int v6 = 136315650;
          long long v7 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Libraries/RangingServiceLib/SolutionProvider/RoseSolutionProvider.cpp";
          __int16 v8 = 1024;
          int v9 = 247;
          __int16 v10 = 2080;
          int v11 = "ingestMeasurement";
          goto LABEL_105;
        }
        goto LABEL_106;
      }
      kdebug_trace();
      if (*(unsigned char *)(a2 + 1728))
      {
        sub_10016A9D0(a1, a2 + 1680);
        return kdebug_trace();
      }
      goto LABEL_107;
    case 0xA:
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
        sub_100411CF0();
      }
      if (!*(unsigned char *)(a2 + 1800))
      {
        char v5 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT))
        {
          LOWORD(v6) = 0;
          _os_log_fault_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "#sp,!ranging_rate_event.has_value()", (uint8_t *)&v6, 2u);
          char v5 = qword_1008ABDE0;
        }
        if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
        {
          int v6 = 136315650;
          long long v7 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Libraries/RangingServiceLib/SolutionProvider/RoseSolutionProvider.cpp";
          __int16 v8 = 1024;
          int v9 = 254;
          __int16 v10 = 2080;
          int v11 = "ingestMeasurement";
          goto LABEL_105;
        }
        goto LABEL_106;
      }
      kdebug_trace();
      if (*(unsigned char *)(a2 + 1800))
      {
        sub_10016AA64(a1, a2 + 1736);
        return kdebug_trace();
      }
      goto LABEL_107;
    case 0xB:
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
        sub_100411BB8();
      }
      if (*(unsigned char *)(a2 + 1200))
      {
        sub_10016A5B4(a1, (long long *)(a2 + 1096));
        return kdebug_trace();
      }
      char v5 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_FAULT))
      {
        LOWORD(v6) = 0;
        _os_log_fault_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "#sp,!toa_cir_data_v2_event.has_value()", (uint8_t *)&v6, 2u);
        char v5 = qword_1008ABDE0;
      }
      if (!os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
        goto LABEL_106;
      }
      int v6 = 136315650;
      long long v7 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Libraries/RangingServiceLib/SolutionProvider/RoseSolutionProvider.cpp";
      __int16 v8 = 1024;
      int v9 = 213;
      __int16 v10 = 2080;
      int v11 = "ingestMeasurement";
      goto LABEL_105;
    default:
      return kdebug_trace();
  }
}

void sub_100169B18(uint64_t a1, long long *a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100411F14();
  }
  if (*((_DWORD *)a2 + 10)) {
    sub_100411EE8();
  }
  unsigned __int16 v4 = sub_10016AAF8(a1, *((_WORD *)a2 + 28));
  char v5 = v4;
  if (v4 > 0xFFu)
  {
    (*(void (**)(long long *__return_ptr))(**(void **)(a1 + 1808) + 16))(&v50);
    if (v65) {
      int v6 = HIBYTE(WORD6(v58));
    }
    else {
      int v6 = 0;
    }
    if (v65) {
      unsigned __int8 v7 = BYTE12(v58);
    }
    else {
      unsigned __int8 v7 = 0;
    }
    (*(void (**)(long long *__return_ptr))(**(void **)(a1 + 1808) + 16))(&v50);
    if (v65) {
      int v8 = HIBYTE(WORD1(v64[36]));
    }
    else {
      int v8 = 0;
    }
    if (v65) {
      unsigned __int8 v9 = BYTE2(v64[36]);
    }
    else {
      unsigned __int8 v9 = 0;
    }
    if (v6)
    {
      if (!v8)
      {
        __int16 v10 = sub_100007D00();
        if (sub_1003D2ECC((uint64_t)v10) && os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
          sub_100411E70();
        }
      }
      long long v11 = a2[3];
      long long v52 = a2[2];
      long long v53 = v11;
      long long v12 = a2[1];
      long long v50 = *a2;
      long long v51 = v12;
      uint64_t v13 = (const void *)*((void *)a2 + 9);
      uint64_t v54 = *((void *)a2 + 8);
      uint64_t v55 = 0;
      uint64_t v14 = *((void *)a2 + 10);
      uint64_t v57 = 0;
      uint64_t v56 = 0;
      sub_10015036C(&v55, v13, v14, (v14 - (uint64_t)v13) >> 3);
      long long v15 = a2[7];
      long long v58 = a2[6];
      long long v59 = v15;
      long long v16 = (const void *)*((void *)a2 + 17);
      double v60 = *((double *)a2 + 16);
      uint64_t v61 = 0;
      uint64_t v63 = 0;
      long long v62 = 0;
      sub_10015042C(&v61, v16, *((void *)a2 + 18), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*((void *)a2 + 18) - (void)v16) >> 3));
      memcpy(v64, a2 + 10, 0x181uLL);
      double v17 = v60;
      double v60 = v17 - sub_10018891C();
      double v18 = v64[18];
      v64[18] = v18 - sub_1001887D8();
      LOWORD(v5sub_100149BDC(&a9, 0) = ((_WORD)v6 << 8) | v7;
      WORD1(v5sub_100149BDC(&a9, 0) = ((_WORD)v8 << 8) | v9;
      BYTE4(v5sub_100149BDC(&a9, 0) = v5;
      *((void *)&v50 + 1) = sub_1002B5E84(a1 + 1632, *(double *)&v53);
      LOBYTE(v51) = v19;
      if (!v19)
      {
        double v20 = sub_10039CC9C();
        *((double *)&v50 + 1) = v20;
        LOBYTE(v51) = 1;
        long long v21 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)long long buf = 134217984;
          *(double *)&uint8_t buf[4] = v20;
          _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_INFO, "#sp,RoseSolutionProvider::ingestRangeResult: did not successfully convert to mach continuous.  Using current time %lf", buf, 0xCu);
        }
      }
      if ((_WORD)v58)
      {
        unint64_t v22 = *(void *)(a1 + 1832) + 1;
        *(void *)(a1 + 1832) = v22;
        if (!(v22 % *(unsigned int *)(a1 + 1824)))
        {
          long long v23 = qword_1008ABDE0;
          if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
          {
            BOOL v24 = (unsigned __int16 *)(a2 + 6);
            int v25 = *((unsigned __int16 *)a2 + 28);
            sub_1003A8354(*v24, buf);
            uint64_t v26 = v45 >= 0 ? buf : *(unsigned char **)buf;
            *(_DWORD *)int v46 = 67109378;
            int v47 = v25;
            __int16 v48 = 2080;
            double v49 = v26;
            _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "#sp,[UNSUCCESSFUL RANGING CYCLE] Ticket: %d, ErrorCode: %s", v46, 0x12u);
            if (v45 < 0) {
              operator delete(*(void **)buf);
            }
          }
        }
      }
      uint64_t v27 = *(NSObject **)(a1 + 1744);
      block[0] = _NSConcreteStackBlock;
      block[1] = 1174405120;
      long long v30 = v51;
      long long v31 = v52;
      long long v32 = v53;
      block[2] = sub_10016AB30;
      block[3] = &unk_100853330;
      block[4] = a1;
      long long v29 = v50;
      uint64_t v33 = v54;
      int v34 = 0;
      long long v35 = 0;
      uint64_t v36 = 0;
      sub_10015036C(&v34, v55, (uint64_t)v56, (v56 - (unsigned char *)v55) >> 3);
      long long v37 = v58;
      long long v38 = v59;
      double v39 = v60;
      std::string __p = 0;
      long long v41 = 0;
      uint64_t v42 = 0;
      sub_10015042C(&__p, v61, (uint64_t)v62, 0x6DB6DB6DB6DB6DB7 * ((v62 - (unsigned char *)v61) >> 3));
      memcpy(v43, v64, sizeof(v43));
      dispatch_async(v27, block);
      if (__p)
      {
        long long v41 = __p;
        operator delete(__p);
      }
      if (v34)
      {
        long long v35 = v34;
        operator delete(v34);
      }
      if (v61)
      {
        long long v62 = v61;
        operator delete(v61);
      }
      if (v55)
      {
        uint64_t v56 = v55;
        operator delete(v55);
      }
    }
    else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
    {
      sub_100411E04();
    }
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_100411D98();
  }
}

void sub_10016A03C(_Unwind_Exception *a1)
{
}

void sub_10016A094(uint64_t a1, long long *a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100411F48();
  }
  if (*(void *)(a1 + 1792))
  {
    long long v12 = *a2;
    unsigned __int16 v4 = (__int16 *)*((void *)a2 + 3);
    uint64_t v13 = *((void *)a2 + 2);
    uint64_t v14 = 0;
    long long v15 = 0;
    uint64_t v16 = 0;
    sub_10016D19C(&v14, v4, *((__int16 **)a2 + 4), 0x86BCA1AF286BCA1BLL * ((uint64_t)(*((void *)a2 + 4) - (void)v4) >> 3));
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    sub_10016D82C(&v17, *((void *)a2 + 6), *((void *)a2 + 7), (uint64_t)(*((void *)a2 + 7) - *((void *)a2 + 6)) >> 5);
    char v5 = *(NSObject **)(a1 + 1744);
    block[0] = _NSConcreteStackBlock;
    block[1] = 1174405120;
    block[2] = sub_10016AD04;
    block[3] = &unk_100853360;
    block[4] = a1;
    long long v8 = v12;
    uint64_t v9 = v13;
    memset(v10, 0, sizeof(v10));
    sub_10016D19C(v10, v14, v15, 0x86BCA1AF286BCA1BLL * (((char *)v15 - (char *)v14) >> 3));
    memset(v11, 0, sizeof(v11));
    sub_10016D82C(v11, v17, v18, (v18 - v17) >> 5);
    dispatch_async(v5, block);
    int v6 = (void **)v11;
    sub_10016D6F0(&v6);
    int v6 = (void **)v10;
    sub_10016D794(&v6);
    int v6 = (void **)&v17;
    sub_10016D6F0(&v6);
    int v6 = (void **)&v14;
    sub_10016D794(&v6);
  }
}

void sub_10016A274(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void **);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  sub_10016D794((void ***)va);
  sub_10016AE10((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_10016A2B8(uint64_t a1, long long *a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100411F7C();
  }
  long long v4 = a2[5];
  long long v36 = a2[4];
  long long v37 = v4;
  long long v5 = a2[7];
  long long v38 = a2[6];
  long long v39 = v5;
  long long v6 = a2[1];
  long long v32 = *a2;
  long long v33 = v6;
  long long v7 = a2[3];
  long long v34 = a2[2];
  long long v35 = v7;
  if (*(void *)(a1 + 1792))
  {
    uint64_t v8 = *(NSObject **)(a1 + 1744);
    block[0] = _NSConcreteStackBlock;
    block[1] = 0x40000000;
    long long v9 = a2[5];
    long long v28 = a2[4];
    long long v29 = v9;
    long long v10 = a2[7];
    long long v30 = a2[6];
    long long v31 = v10;
    long long v11 = a2[1];
    long long v24 = *a2;
    long long v25 = v11;
    long long v12 = a2[3];
    long long v26 = a2[2];
    block[2] = sub_10016AE5C;
    block[3] = &unk_100853390;
    block[4] = a1;
    long long v27 = v12;
    dispatch_async(v8, block);
  }
  uint64_t v13 = *(NSObject **)(a1 + 1744);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 0x40000000;
  long long v19 = v36;
  long long v20 = v37;
  long long v21 = v38;
  long long v22 = v39;
  long long v15 = v32;
  long long v16 = v33;
  long long v17 = v34;
  void v14[2] = sub_10016AEB4;
  v14[3] = &unk_1008533B0;
  v14[4] = a1;
  long long v18 = v35;
  dispatch_async(v13, v14);
}

void sub_10016A450(uint64_t a1, long long *a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100411FB0();
  }
  long long v4 = a2[3];
  long long v24 = a2[2];
  long long v25 = v4;
  long long v26 = a2[4];
  long long v5 = a2[1];
  long long v22 = *a2;
  long long v23 = v5;
  if (*(void *)(a1 + 1792))
  {
    long long v6 = *(NSObject **)(a1 + 1744);
    block[0] = _NSConcreteStackBlock;
    block[1] = 0x40000000;
    long long v7 = *a2;
    long long v18 = a2[1];
    long long v8 = a2[3];
    long long v19 = a2[2];
    long long v20 = v8;
    long long v21 = a2[4];
    block[2] = sub_10016AEC8;
    block[3] = &unk_1008533D0;
    block[4] = a1;
    long long v17 = v7;
    dispatch_async(v6, block);
  }
  long long v9 = *(NSObject **)(a1 + 1744);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 0x40000000;
  long long v12 = v23;
  long long v13 = v24;
  long long v14 = v25;
  long long v15 = v26;
  void v10[2] = sub_10016AEDC;
  void v10[3] = &unk_1008533F0;
  v10[4] = a1;
  long long v11 = v22;
  dispatch_async(v9, v10);
}

void sub_10016A5B4(uint64_t a1, long long *a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100411FE4();
  }
  long long v4 = a2[5];
  long long v33 = a2[4];
  long long v34 = v4;
  uint64_t v35 = *((void *)a2 + 12);
  long long v5 = a2[1];
  long long v29 = *a2;
  long long v30 = v5;
  long long v6 = a2[3];
  long long v31 = a2[2];
  long long v32 = v6;
  if (*(void *)(a1 + 1792))
  {
    long long v7 = *(NSObject **)(a1 + 1744);
    block[0] = _NSConcreteStackBlock;
    block[1] = 0x40000000;
    long long v8 = a2[2];
    long long v25 = a2[3];
    long long v9 = a2[5];
    long long v26 = a2[4];
    long long v27 = v9;
    long long v10 = a2[1];
    long long v22 = *a2;
    long long v23 = v10;
    block[2] = sub_10016AEF0;
    block[3] = &unk_100853410;
    uint64_t v11 = *((void *)a2 + 12);
    block[4] = a1;
    uint64_t v28 = v11;
    long long v24 = v8;
    dispatch_async(v7, block);
  }
  long long v12 = *(NSObject **)(a1 + 1744);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 0x40000000;
  long long v17 = v32;
  long long v18 = v33;
  long long v19 = v34;
  long long v14 = v29;
  long long v15 = v30;
  v13[2] = sub_10016AF04;
  v13[3] = &unk_100853430;
  void v13[4] = a1;
  uint64_t v20 = v35;
  long long v16 = v31;
  dispatch_async(v12, v13);
}

void sub_10016A738(uint64_t a1, uint64_t a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100412018();
  }
  long long v4 = *(_OWORD *)(a2 + 32);
  long long v28 = *(_OWORD *)(a2 + 16);
  double v26 = *(double *)a2;
  __int16 v27 = *(_WORD *)(a2 + 8);
  long long v29 = v4;
  long long v30 = *(_OWORD *)(a2 + 48);
  int v31 = *(_DWORD *)(a2 + 64);
  long long v33 = 0;
  uint64_t v34 = 0;
  long long v5 = *(const void **)(a2 + 72);
  uint64_t v6 = *(void *)(a2 + 80);
  long long v32 = 0;
  sub_10016DA68(&v32, v5, v6, (v6 - (uint64_t)v5) >> 4);
  long long v35 = *(_OWORD *)(a2 + 96);
  *(void *)&long long v35 = sub_1002B5E84(a1 + 1632, v26);
  BYTE8(v35) = v7;
  long long v8 = *(NSObject **)(a1 + 1744);
  block[0] = _NSConcreteStackBlock;
  block[1] = 1174405120;
  long long v18 = v28;
  long long v20 = v30;
  block[2] = sub_10016B518;
  block[3] = &unk_1008534D0;
  block[4] = a1;
  *(double *)&void block[5] = v26;
  __int16 v17 = v27;
  int v21 = v31;
  long long v19 = v29;
  long long v23 = 0;
  long long v22 = 0;
  uint64_t v24 = 0;
  sub_10016DA68(&v22, v32, (uint64_t)v33, (v33 - (unsigned char *)v32) >> 4);
  long long v25 = v35;
  dispatch_async(v8, block);
  sub_10016DAE4((uint64_t)v9, (uint64_t *)&v26, 1);
  (*(void (**)(void, unsigned char *))(**(void **)(a1 + 16) + 16))(*(void *)(a1 + 16), v9);
  if (v15 && __p)
  {
    long long v14 = __p;
    operator delete(__p);
  }
  if (v12) {
    sub_10003E96C((uint64_t)v11, v11[1]);
  }
  sub_10015DC28((uint64_t)&v10);
  if (v22)
  {
    long long v23 = v22;
    operator delete(v22);
  }
  if (v32)
  {
    long long v33 = v32;
    operator delete(v32);
  }
}

void sub_10016A980(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_10016B718((uint64_t)&a9);
  uint64_t v11 = (void *)STACK[0x620];
  if (STACK[0x620])
  {
    STACK[0x628] = (unint64_t)v11;
    operator delete(v11);
  }
  char v12 = *(void **)(v9 - 96);
  if (v12)
  {
    *(void *)(v9 - 88) = v12;
    operator delete(v12);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10016A9D0(uint64_t a1, uint64_t a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_10041204C();
  }
  *(void *)(a2 + 32) = sub_1002B5E84(a1 + 1632, *(double *)(a2 + 24));
  *(unsigned char *)(a2 + 4sub_100149BDC(&a9, 0) = v4;
  return (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 16) + 32))(*(void *)(a1 + 16), a2);
}

uint64_t sub_10016AA64(uint64_t a1, uint64_t a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100412080();
  }
  *(void *)(a2 + 8) = sub_1002B5E84(a1 + 1632, *(double *)a2);
  *(unsigned char *)(a2 + 16) = v4;
  return (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 16) + 40))(*(void *)(a1 + 16), a2);
}

uint64_t sub_10016AAF8(uint64_t a1, unsigned __int16 a2)
{
  unint64_t v2 = sub_10016BF74(a1, a2);
  if ((v2 & 0xFF00000000) != 0)
  {
    int v3 = sub_10017E6C8(v2);
    int v4 = 1;
  }
  else
  {
    int v3 = 0;
    int v4 = 0;
  }
  return v3 | (v4 << 8);
}

void sub_10016AB30(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#sp,RoseSolutionProvider::ingestRangeResult: addRangeResult to MeasEngine", v4, 2u);
  }
  sub_1001610D4(v2 + 40, a1 + 40);
}

void *sub_10016ABB4(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 4sub_100149BDC(&a9, 0) = *(_OWORD *)(a2 + 40);
  long long v4 = *(_OWORD *)(a2 + 56);
  long long v5 = *(_OWORD *)(a2 + 72);
  long long v6 = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = v6;
  *(_OWORD *)(a1 + 72) = v5;
  *(_OWORD *)(a1 + 56) = v4;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 12sub_100149BDC(&a9, 0) = 0;
  *(void *)(a1 + 128) = 0;
  sub_10015036C((void *)(a1 + 112), *(const void **)(a2 + 112), *(void *)(a2 + 120), (uint64_t)(*(void *)(a2 + 120) - *(void *)(a2 + 112)) >> 3);
  long long v7 = *(_OWORD *)(a2 + 136);
  long long v8 = *(_OWORD *)(a2 + 152);
  uint64_t v9 = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 168) = v9;
  *(_OWORD *)(a1 + 152) = v8;
  *(_OWORD *)(a1 + 136) = v7;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = 0;
  sub_10015042C((void *)(a1 + 176), *(const void **)(a2 + 176), *(void *)(a2 + 184), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(void *)(a2 + 184) - *(void *)(a2 + 176)) >> 3));

  return memcpy((void *)(a1 + 200), (const void *)(a2 + 200), 0x181uLL);
}

void sub_10016AC90(_Unwind_Exception *exception_object)
{
  long long v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 12sub_100149BDC(&a9, 0) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

void sub_10016ACAC(void *a1)
{
  uint64_t v2 = (void *)a1[22];
  if (v2)
  {
    a1[23] = v2;
    operator delete(v2);
  }
  int v3 = (void *)a1[14];
  if (v3)
  {
    a1[15] = v3;
    operator delete(v3);
  }
}

uint64_t sub_10016AD04(uint64_t a1)
{
  return sub_100295EB0(*(void *)(*(void *)(a1 + 32) + 1792), (long long *)(a1 + 40));
}

void *sub_10016AD18(uint64_t a1, uint64_t a2)
{
  int v3 = (void *)a1;
  long long v4 = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 4sub_100149BDC(&a9, 0) = v4;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 8sub_100149BDC(&a9, 0) = 0;
  sub_10016D19C((void *)(a1 + 64), *(__int16 **)(a2 + 64), *(__int16 **)(a2 + 72), 0x86BCA1AF286BCA1BLL * ((uint64_t)(*(void *)(a2 + 72) - *(void *)(a2 + 64)) >> 3));
  v3[11] = 0;
  v3[12] = 0;
  v3 += 11;
  void v3[2] = 0;
  return sub_10016D82C(v3, *(void *)(a2 + 88), *(void *)(a2 + 96), (uint64_t)(*(void *)(a2 + 96) - *(void *)(a2 + 88)) >> 5);
}

void sub_10016ADB0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10016D794((void ***)va);
  _Unwind_Resume(a1);
}

void sub_10016ADC8(uint64_t a1)
{
  uint64_t v2 = (void **)(a1 + 88);
  sub_10016D6F0(&v2);
  uint64_t v2 = (void **)(a1 + 64);
  sub_10016D794(&v2);
}

uint64_t sub_10016AE10(uint64_t a1)
{
  int v3 = (void **)(a1 + 48);
  sub_10016D6F0(&v3);
  int v3 = (void **)(a1 + 24);
  sub_10016D794(&v3);
  return a1;
}

void sub_10016AE5C(uint64_t a1)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_1004120B4();
  }
}

void *sub_10016AEB4(uint64_t a1)
{
  return sub_100161320(*(void *)(a1 + 32) + 40, a1 + 40);
}

uint64_t sub_10016AEC8(uint64_t a1)
{
  return sub_100296D80(*(void *)(*(void *)(a1 + 32) + 1792), a1 + 40);
}

void *sub_10016AEDC(uint64_t a1)
{
  return sub_100161328(*(void *)(a1 + 32) + 40, a1 + 40);
}

uint64_t sub_10016AEF0(uint64_t a1)
{
  return sub_100297004(*(void *)(*(void *)(a1 + 32) + 1792), a1 + 40);
}

void sub_10016AF04(uint64_t a1)
{
}

void sub_10016AF18(uint64_t a1, uint64_t a2)
{
  long long v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    sub_10017C498(*(_DWORD *)(a2 + 24), __p);
    long long v5 = v61 >= 0 ? __p : (void **)__p[0];
    int v6 = *(unsigned __int16 *)(a2 + 58);
    *(_DWORD *)long long buf = 136315394;
    *(void *)&uint8_t buf[4] = v5;
    *(_WORD *)&unsigned char buf[12] = 1024;
    *(_DWORD *)&buf[14] = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#sp,=== P2P timestamp event, source %s, cycle_idx %d ===", buf, 0x12u);
    if (v61 < 0) {
      operator delete(__p[0]);
    }
  }
  int v27 = *(_DWORD *)(a2 + 2);
  __int16 v28 = *(_WORD *)(a2 + 6);
  uint64_t v7 = *(void *)(a2 + 8);
  char v8 = *(unsigned char *)(a2 + 16);
  v59[0] = *(void *)(a2 + 17);
  double v9 = *(double *)(a2 + 32);
  *(void *)((char *)v59 + 7) = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 40);
  __int16 v11 = *(_WORD *)(a2 + 48);
  __int16 v12 = *(_WORD *)(a2 + 50);
  long long v13 = *(_OWORD *)(a2 + 68);
  long long v14 = *(_OWORD *)(a2 + 84);
  *(_OWORD *)long long buf = *(_OWORD *)(a2 + 52);
  *(_OWORD *)&uint8_t buf[16] = v13;
  long long v15 = *(_OWORD *)(a2 + 100);
  long long v16 = *(_OWORD *)(a2 + 132);
  long long v17 = *(_OWORD *)(a2 + 148);
  long long v52 = *(_OWORD *)(a2 + 116);
  long long v53 = v16;
  long long v50 = v14;
  long long v51 = v15;
  long long v18 = *(_OWORD *)(a2 + 164);
  long long v19 = *(_OWORD *)(a2 + 180);
  long long v20 = *(_OWORD *)(a2 + 196);
  int v58 = *(_DWORD *)(a2 + 212);
  long long v56 = v19;
  long long v57 = v20;
  long long v54 = v17;
  long long v55 = v18;
  (*(void (**)(void **__return_ptr))(**(void **)(a1 + 1808) + 16))(__p);
  int v21 = v63;
  unsigned int v22 = v62;
  if ((_BYTE)v10)
  {
    uint64_t v7 = sub_1002B5E84(a1 + 1632, v9);
    char v8 = v23;
  }
  uint64_t v24 = *(NSObject **)(a1 + 1744);
  block[0] = _NSConcreteStackBlock;
  block[1] = 0x40000000;
  long long v45 = v55;
  long long v46 = v56;
  long long v47 = v57;
  long long v41 = v51;
  long long v42 = v52;
  long long v43 = v53;
  long long v44 = v54;
  long long v38 = *(_OWORD *)buf;
  long long v39 = *(_OWORD *)&buf[16];
  unsigned int v25 = v22 >> 8;
  if (v21)
  {
    unsigned __int8 v26 = v22;
  }
  else
  {
    LOBYTE(v25) = 0;
    unsigned __int8 v26 = 0;
  }
  block[2] = sub_10016B1DC;
  block[3] = &unk_100853450;
  block[4] = a1;
  __int16 v30 = v26 | (v25 << 8);
  int v31 = v27;
  __int16 v32 = v28;
  uint64_t v33 = v7;
  char v34 = v8;
  *(void *)long long v35 = v59[0];
  *(void *)&v35[7] = *(void *)((char *)v59 + 7);
  *(double *)&v35[15] = v9;
  *(void *)&v35[23] = v10;
  __int16 v36 = v11;
  __int16 v37 = v12;
  int v48 = v58;
  long long v40 = v50;
  dispatch_async(v24, block);
}

void sub_10016B1DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(v2 + 1792);
  if (v3)
  {
    long long v4 = (unsigned __int8 *)(a1 + 40);
    int v5 = *(_DWORD *)(a1 + 64);
    if (v5 == 1)
    {
      sub_100297D6C(v3, v4);
    }
    else if (!v5)
    {
      sub_1002978A8(v3, v4);
    }
  }
  sub_100177290((unsigned __int8 *)(a1 + 40));
  if (*(unsigned char *)(a1 + 41))
  {
    sub_100161348(v2 + 40, a1 + 40);
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_1004120E8();
  }
}

void sub_10016B298(uint64_t a1, const void *a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100412154();
  }
  memcpy(__dst, a2, sizeof(__dst));
  if (*(void *)(a1 + 1792))
  {
    long long v4 = *(NSObject **)(a1 + 1744);
    block[0] = _NSConcreteStackBlock;
    block[1] = 0x40000000;
    block[2] = sub_10016B40C;
    block[3] = &unk_100853470;
    block[4] = a1;
    memcpy(v9, a2, sizeof(v9));
    dispatch_async(v4, block);
  }
  int v5 = *(NSObject **)(a1 + 1744);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 0x40000000;
  _OWORD v6[2] = sub_10016B420;
  void v6[3] = &unk_100853490;
  v6[4] = a1;
  memcpy(v7, __dst, sizeof(v7));
  dispatch_async(v5, v6);
}

uint64_t sub_10016B40C(uint64_t a1)
{
  return sub_100297564(*(void *)(*(void *)(a1 + 32) + 1792), a1 + 40);
}

uint64_t *sub_10016B420(uint64_t a1)
{
  return sub_100161338(*(void *)(a1 + 32) + 40, a1 + 40);
}

void sub_10016B434(uint64_t a1, long long *a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_100412188();
  }
  long long v4 = *a2;
  long long v9 = a2[1];
  long long v5 = a2[3];
  long long v10 = a2[2];
  long long v11 = v5;
  uint64_t v12 = *((void *)a2 + 8);
  long long v8 = v4;
  int v6 = *(NSObject **)(a1 + 1744);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 0x40000000;
  v7[2] = sub_10016B504;
  uint64_t v7[3] = &unk_1008534B0;
  v7[4] = a1;
  dispatch_async(v6, v7);
}

void sub_10016B504(uint64_t a1)
{
}

void sub_10016B518(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = (uint64_t *)(a1 + 40);
  sub_10017BCA0(a1 + 40);
  uint64_t v4 = *(void *)(v2 + 1792);
  if (v4) {
    sub_100297FBC(v4, v3);
  }
  long long v5 = *(void ***)(a1 + 72);
  int v6 = *(unsigned __int16 *)(a1 + 56);
  uint64_t v7 = qword_1008ABDE0;
  BOOL v8 = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT);
  if (v6)
  {
    if (v8)
    {
      sub_1003A8354(v6, __p);
      if (v12 >= 0) {
        long long v9 = __p;
      }
      else {
        long long v9 = (void **)__p[0];
      }
      int v10 = *(unsigned __int8 *)(a1 + 91);
      *(_DWORD *)long long buf = 136315650;
      long long v14 = v9;
      __int16 v15 = 1024;
      int v16 = v10;
      __int16 v17 = 2048;
      long long v18 = v5;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#sp,[Solution Provider] P2S Responder: UNSUCCESSFUL CYCLE (%s). Poll Rx Status: (0x%x), Initiator address: 0x%llx", buf, 0x1Cu);
      if (v12 < 0) {
        operator delete(__p[0]);
      }
    }
  }
  else if (v8)
  {
    *(_DWORD *)long long buf = 134217984;
    long long v14 = v5;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#sp,[Solution Provider] P2S Responder: successful cycle. Initiator address: 0x%llx", buf, 0xCu);
  }
}

__n128 sub_10016B684(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(void *)(a1 + 4sub_100149BDC(&a9, 0) = v3;
  long long v4 = *(_OWORD *)(a2 + 56);
  long long v5 = *(_OWORD *)(a2 + 72);
  long long v6 = *(_OWORD *)(a2 + 88);
  LODWORD(v3) = *(_DWORD *)(a2 + 104);
  *(void *)(a1 + 112) = 0;
  uint64_t v7 = a1 + 112;
  *(_DWORD *)(a1 + 104) = v3;
  *(_OWORD *)(a1 + 88) = v6;
  *(_OWORD *)(a1 + 72) = v5;
  *(_OWORD *)(a1 + 56) = v4;
  *(void *)(a1 + 12sub_100149BDC(&a9, 0) = 0;
  *(void *)(a1 + 128) = 0;
  sub_10016DA68((void *)(a1 + 112), *(const void **)(a2 + 112), *(void *)(a2 + 120), (uint64_t)(*(void *)(a2 + 120) - *(void *)(a2 + 112)) >> 4);
  __n128 result = *(__n128 *)(a2 + 136);
  *(__n128 *)(v7 + 24) = result;
  return result;
}

void sub_10016B700(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 112);
  if (v2)
  {
    *(void *)(a1 + 12sub_100149BDC(&a9, 0) = v2;
    operator delete(v2);
  }
}

uint64_t sub_10016B718(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 872))
  {
    uint64_t v2 = *(void **)(a1 + 832);
    if (v2)
    {
      *(void *)(a1 + 84sub_100149BDC(&a9, 0) = v2;
      operator delete(v2);
    }
  }
  if (*(unsigned char *)(a1 + 752)) {
    sub_10003E96C(a1 + 624, *(void **)(a1 + 632));
  }
  sub_10015DC28(a1 + 48);
  return a1;
}

void sub_10016B770(uint64_t a1, long long *a2)
{
  long long v2 = a2[1];
  long long v5 = *a2;
  long long v6 = v2;
  uint64_t v3 = *(NSObject **)(a1 + 1744);
  block[0] = _NSConcreteStackBlock;
  block[1] = 0x40000000;
  block[2] = sub_10016B7EC;
  block[3] = &unk_100853500;
  block[4] = a1;
  dispatch_async(v3, block);
}

void sub_10016B7EC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(v2 + 1792);
  if (v3)
  {
    double v4 = sub_10039CC9C();
    sub_100293D98(v3, a1 + 40, v4);
  }
  if (*(_DWORD *)(a1 + 40) == 1)
  {
    if (!*(unsigned char *)(a1 + 52)) {
      sub_1004121BC();
    }
    unsigned int v5 = *(_DWORD *)(a1 + 44);
    int v6 = *(_DWORD *)(a1 + 48);
    uint64_t v7 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 67109376;
      *(_DWORD *)&uint8_t buf[4] = v5;
      LOWORD(v2sub_100149BDC(&a9, 0) = 1024;
      *(_DWORD *)((char *)&v20 + 2) = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#sp,ingestContextEvent,accessory %d,activity %d", buf, 0xEu);
    }
    sub_10039D2E0((_DWORD *)*(unsigned int *)(v2 + 8), buf);
    if (v5) {
      BOOL v8 = v6 != 0;
    }
    else {
      BOOL v8 = 1;
    }
    if (v8)
    {
      unsigned int v5 = 0;
    }
    else
    {
      long long v9 = *(_DWORD **)buf;
      if (*(_DWORD **)buf != v20)
      {
        while (*v9 != v5)
        {
          if (++v9 == v20)
          {
            long long v9 = v20;
            break;
          }
        }
      }
      if (v9 == v20) {
        goto LABEL_27;
      }
    }
    int v10 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      sub_10039D144();
      long long v11 = v16 >= 0 ? &__p : (void **)__p;
      *(_DWORD *)__int16 v17 = 136315138;
      long long v18 = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#sp,ingestContextEvent: load lut and nn files for accessory %s", v17, 0xCu);
      if (v16 < 0) {
        operator delete(__p);
      }
    }
    *(_DWORD *)(v2 + 12) = v5;
    sub_10014B350(v2 + 1840, v5, v2 + 40);
    char v12 = *(std::__shared_weak_count **)(v2 + 32);
    uint64_t v13 = *(void *)(v2 + 24);
    long long v14 = v12;
    if (v12) {
      atomic_fetch_add_explicit(&v12->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    sub_10014C170(v2 + 1840, v5, &v13);
    if (v14) {
      sub_10001A970(v14);
    }
LABEL_27:
    if (*(void *)buf)
    {
      long long v20 = *(_DWORD **)buf;
      operator delete(*(void **)buf);
    }
  }
}

void sub_10016BA18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10016BA54(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = (unsigned __int8 *)(a1 + 40);
  sub_10017BB98(a1 + 40);
  kdebug_trace();
  if (*(void *)(v2 + 1792))
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
      sub_1004122C8();
    }
    char v4 = *(unsigned char *)(a1 + 1808);
    uint64_t v5 = *(void *)(v2 + 1792);
    if (v4)
    {
      int v27 = *(_DWORD *)(a1 + 1800);
      long long v6 = *(_OWORD *)(a1 + 1784);
      v26[0] = *(_OWORD *)(a1 + 1768);
      v26[1] = v6;
      char v4 = 1;
      uint64_t v7 = (char *)v26;
    }
    else
    {
      char v25 = 0;
      uint64_t v7 = &v25;
    }
    v7[36] = v4;
    sub_100295200(v5, v3, (uint64_t)v7, *(unsigned char *)(a1 + 1816), *(unsigned char *)(a1 + 1817));
  }
  unint64_t v8 = sub_10016BF74(v2, *(_WORD *)(a1 + 96));
  if ((v8 & 0xFF00000000) != 0)
  {
    if ((v8 - 3) >= 4)
    {
      if ((v8 - 1) >= 2)
      {
        if (!v8 && os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
          sub_100412258();
        }
      }
      else
      {
        long long v9 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v10 = *(void *)(a1 + 104);
          if (*(unsigned char *)(a1 + 1817)) {
            long long v11 = "OK";
          }
          else {
            long long v11 = "not OK";
          }
          *(_DWORD *)long long buf = 136315394;
          long long v45 = v11;
          __int16 v46 = 2048;
          uint64_t v47 = v10;
          _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#sp,Raw solution %s to use by client, emitting! Peer: 0x%llx", buf, 0x16u);
        }
        sub_10016C8D4(v2, (uint64_t)v3, (uint64_t)v3);
      }
    }
    else
    {
      *(_DWORD *)long long buf = 1;
      BYTE4(v45) = 0;
      char v49 = 0;
      LOBYTE(v50[0]) = 0;
      char v51 = 0;
      if (*(unsigned char *)(a1 + 1816))
      {
        sub_10016C008(v2, (uint64_t)v3, v8, (uint64_t)v3, (uint64_t)v32);
        *(_DWORD *)long long buf = *(_DWORD *)v32;
        sub_10016DC08((uint64_t)&v45 + 4, (uint64_t)&v33);
        v50[0] = v40;
        v50[1] = v41;
        double v50[2] = v42;
        char v51 = v43;
        if (v39) {
          sub_10003E96C((uint64_t)&v37, *(void **)&v38[6]);
        }
      }
      else
      {
        char v12 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          int v13 = *(unsigned __int16 *)(a1 + 96);
          uint64_t v14 = *(void *)(a1 + 88);
          int v15 = *(unsigned __int16 *)(a1 + 152);
          uint64_t v16 = *(void *)(a1 + 104);
          *(_DWORD *)__int16 v32 = 67109888;
          *(_DWORD *)&v32[4] = v13;
          __int16 v33 = 2048;
          uint64_t v34 = v14;
          __int16 v35 = 1024;
          int v36 = v15;
          __int16 v37 = 2048;
          *(void *)long long v38 = v16;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "#sp,Got one rose measurement not ok for sensor fusion, ticket_id %d, measurement time stamp %f (mach_absolute_time), cycle index %d, Peer: 0x%llx", v32, 0x22u);
        }
      }
      int v17 = *(_DWORD *)buf;
      if (*(_DWORD *)buf)
      {
        int v18 = *(unsigned __int8 *)(a1 + 1817);
        long long v19 = qword_1008ABDE0;
        BOOL v20 = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT);
        if (v18)
        {
          if (v20)
          {
            sub_10016C738(v17, v32);
            if (v36 >= 0) {
              int v21 = v32;
            }
            else {
              int v21 = *(uint8_t **)v32;
            }
            uint64_t v22 = *(void *)(a1 + 104);
            *(_DWORD *)__int16 v28 = 136315394;
            long long v29 = v21;
            __int16 v30 = 2048;
            uint64_t v31 = v22;
            _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "#sp,Sensor fusion did not accept measurement, emitting raw solution instead. Reason: %s, Peer: 0x%llx", v28, 0x16u);
            if (SHIBYTE(v36) < 0) {
              operator delete(*(void **)v32);
            }
          }
          if (v51) {
            sub_10016C74C(v2, (uint64_t)v3, v50, (uint64_t)v3);
          }
          else {
            sub_10016C8D4(v2, (uint64_t)v3, (uint64_t)v3);
          }
        }
        else if (v20)
        {
          sub_10016C738(v17, v32);
          char v23 = v36 >= 0 ? v32 : *(uint8_t **)v32;
          uint64_t v24 = *(void *)(a1 + 104);
          *(_DWORD *)__int16 v28 = 136315394;
          long long v29 = v23;
          __int16 v30 = 2048;
          uint64_t v31 = v24;
          _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "#sp,Sensor fusion did not accept measurement (%s) and raw solution not OK to publish to client, not emitting! Peer: 0x%llx", v28, 0x16u);
          if (SHIBYTE(v36) < 0) {
            operator delete(*(void **)v32);
          }
        }
      }
      if (v49) {
        sub_10003E96C((uint64_t)v48, v48[1]);
      }
    }
    kdebug_trace();
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_1004121E8();
  }
}

void sub_10016BF1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a72) {
    sub_10003E96C((uint64_t)&a56, (void *)a57);
  }
  _Unwind_Resume(a1);
}

unint64_t sub_10016BF74(uint64_t a1, unsigned __int16 a2)
{
  unsigned __int16 v9 = a2;
  uint64_t v3 = (std::mutex *)(a1 + 1680);
  std::mutex::lock((std::mutex *)(a1 + 1680));
  char v4 = sub_10016F024((void *)(a1 + 1752), &v9);
  if (v4)
  {
    unsigned int v5 = *((_DWORD *)v4 + 5) & 0xFFFFFF00;
    int v6 = *((_DWORD *)v4 + 5);
    uint64_t v7 = &_mh_execute_header;
  }
  else
  {
    uint64_t v7 = 0;
    int v6 = 0;
    unsigned int v5 = 0;
  }
  std::mutex::unlock(v3);
  return (unint64_t)v7 | v5 | v6;
}

void sub_10016BFF4(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_10016C008(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 1744));
  uint64_t v10 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v11 = *(void *)(a2 + 64);
    int v12 = *(unsigned __int16 *)(a2 + 112);
    int v13 = *(unsigned __int16 *)(a2 + 56);
    *(_DWORD *)long long buf = 134218496;
    *(void *)&uint8_t buf[4] = v11;
    __int16 v66 = 1024;
    *(_DWORD *)long long v67 = v12;
    *(_WORD *)&v67[4] = 1024;
    *(_DWORD *)&v67[6] = v13;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#sp,computeAndEmitSensorFusionSolution(rose_data): mac_addr 0x%llx, cycle_index %d, ticket_id %d", buf, 0x18u);
  }
  if (*(unsigned char *)(a2 + 16))
  {
    sub_100409894(a2, (uint64_t *)v60, *(double *)(a2 + 8));
    if (v60[1] == v60[0])
    {
      __int16 v28 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
        sub_100412388(a2, v28);
      }
      v57[0] = 0;
      char v59 = 0;
      *(_DWORD *)a5 = 2;
      sub_10016E330((unsigned char *)(a5 + 8), (uint64_t)v57);
      *(unsigned char *)(a5 + 16sub_100149BDC(&a9, 0) = 0;
      *(unsigned char *)(a5 + 208) = 0;
      if (!v59) {
        goto LABEL_44;
      }
      long long v29 = v58;
      __int16 v30 = (void *)v58[1];
    }
    else if (sub_1003EE0BC(a1 + 1152, v60, *(_WORD *)(a2 + 56)))
    {
      unint64_t v14 = *(void *)(a2 + 64);
      sub_1003EE600(a1 + 1152, v14, (uint64_t)v47);
      if (v49)
      {
        if (!(_BYTE)v53) {
          __assert_rtn("computeAndEmitSensorFusionSolution", "RoseSolutionProvider.cpp", 675, "solutionAndInternals.internals.has_value()");
        }
        int v15 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)long long buf = 134219264;
          *(void *)&uint8_t buf[4] = v47[1];
          __int16 v66 = 2048;
          *(void *)long long v67 = v47[0];
          *(_WORD *)&v67[8] = 2048;
          uint64_t v68 = v48[3];
          __int16 v69 = 2048;
          uint64_t v70 = v48[4];
          __int16 v71 = 2048;
          uint64_t v72 = v48[5];
          __int16 v73 = 2048;
          unint64_t v74 = v14;
          _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "#sp,RoseSolutionProvider: got sensor fusion solution of ID: %llu Timestamp: %f Range: %f El: %f Az: %f, Peer: 0x%llx", buf, 0x3Eu);
        }
        if ((a3 - 5) >= 2) {
          int v16 = 3;
        }
        else {
          int v16 = 4;
        }
        sub_10016E1FC((uint64_t)buf, a2, (uint64_t)v47, v16, &v50, *(unsigned char *)(a4 + 1777));
        long long v17 = *(_OWORD *)(a4 + 664);
        v91[8] = *(_OWORD *)(a4 + 648);
        v91[9] = v17;
        long long v18 = *(_OWORD *)(a4 + 600);
        v91[4] = *(_OWORD *)(a4 + 584);
        v91[5] = v18;
        long long v19 = *(_OWORD *)(a4 + 632);
        v91[6] = *(_OWORD *)(a4 + 616);
        v91[7] = v19;
        long long v20 = *(_OWORD *)(a4 + 568);
        v91[2] = *(_OWORD *)(a4 + 552);
        v91[3] = v20;
        char v92 = *(unsigned char *)(a4 + 680);
        long long v21 = *(_OWORD *)(a4 + 736);
        long long v82 = *(_OWORD *)(a4 + 720);
        long long v83 = v21;
        long long v84 = *(_OWORD *)(a4 + 752);
        char v85 = *(unsigned char *)(a4 + 768);
        long long v22 = *(_OWORD *)(a4 + 704);
        long long v80 = *(_OWORD *)(a4 + 688);
        long long v81 = v22;
        *(_OWORD *)((char *)v91 + 9) = *(_OWORD *)(a4 + 865);
        long long v23 = *(_OWORD *)(a4 + 856);
        long long v90 = *(_OWORD *)(a4 + 840);
        v91[0] = v23;
        long long v24 = *(_OWORD *)(a4 + 792);
        long long v86 = *(_OWORD *)(a4 + 776);
        long long v87 = v24;
        long long v25 = *(_OWORD *)(a4 + 824);
        long long v88 = *(_OWORD *)(a4 + 808);
        long long v89 = v25;
        (*(void (**)(void, unsigned char *))(**(void **)(a1 + 16) + 16))(*(void *)(a1 + 16), buf);
        if (*(void *)(a1 + 1792))
        {
          sub_1003EE4E0(a1 + 1152, v14, v46);
          sub_100298F28(*(void *)(a1 + 1792), (uint64_t *)v60, (uint64_t)v47, (uint64_t *)v46, (uint64_t)&v50);
          double v64 = v46;
          sub_10016E9DC((void ***)&v64);
        }
        sub_10016E330(v43, (uint64_t)v47);
        long long v39 = v50;
        long long v40 = v51;
        long long v41 = v52;
        uint64_t v42 = v53;
        *(_DWORD *)a5 = 0;
        sub_10016E330((unsigned char *)(a5 + 8), (uint64_t)v43);
        long long v26 = v40;
        *(_OWORD *)(a5 + 16sub_100149BDC(&a9, 0) = v39;
        *(_OWORD *)(a5 + 176) = v26;
        *(_OWORD *)(a5 + 192) = v41;
        *(void *)(a5 + 208) = v42;
        if (v45) {
          sub_10003E96C((uint64_t)v44, v44[1]);
        }
        if (v79 && __p)
        {
          long long v78 = __p;
          operator delete(__p);
        }
        if (v76) {
          sub_10003E96C((uint64_t)v75, v75[1]);
        }
        sub_10015DC28((uint64_t)&v72 + 4);
      }
      else
      {
        uint64_t v31 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)long long buf = 134218240;
          *(void *)&uint8_t buf[4] = v14;
          __int16 v66 = 2048;
          *(void *)long long v67 = v14;
          _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "#sp,[Solution Provider] computeAndEmitSensorFusionSolution(rose_data): Failed to get filter solution for target ID %llu, Peer: 0x%llx", buf, 0x16u);
        }
        if (*(void *)(a1 + 1792))
        {
          sub_1003EE4E0(a1 + 1152, v14, buf);
          sub_100299B44(*(void *)(a1 + 1792), (uint64_t *)v60, (uint64_t *)buf);
          v46[0] = (void **)buf;
          sub_10016E9DC(v46);
        }
        v36[0] = 0;
        char v38 = 0;
        long long v32 = v50;
        long long v33 = v51;
        long long v34 = v52;
        uint64_t v35 = v53;
        *(_DWORD *)a5 = 5;
        sub_10016E330((unsigned char *)(a5 + 8), (uint64_t)v36);
        *(_OWORD *)(a5 + 16sub_100149BDC(&a9, 0) = v32;
        *(_OWORD *)(a5 + 176) = v33;
        *(_OWORD *)(a5 + 192) = v34;
        *(void *)(a5 + 208) = v35;
        if (v38) {
          sub_10003E96C((uint64_t)v37, v37[1]);
        }
      }
      if (!v49) {
        goto LABEL_44;
      }
      long long v29 = v48;
      __int16 v30 = (void *)v48[1];
    }
    else
    {
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
        sub_100412404();
      }
      v54[0] = 0;
      char v56 = 0;
      *(_DWORD *)a5 = 4;
      sub_10016E330((unsigned char *)(a5 + 8), (uint64_t)v54);
      *(unsigned char *)(a5 + 16sub_100149BDC(&a9, 0) = 0;
      *(unsigned char *)(a5 + 208) = 0;
      if (!v56) {
        goto LABEL_44;
      }
      long long v29 = v55;
      __int16 v30 = (void *)v55[1];
    }
    sub_10003E96C((uint64_t)v29, v30);
LABEL_44:
    *(void *)long long buf = v60;
    sub_10016E8EC((void ***)buf);
    return;
  }
  int v27 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
    sub_1004122FC(a2, v27);
  }
  v61[0] = 0;
  char v63 = 0;
  *(_DWORD *)a5 = 3;
  sub_10016E330((unsigned char *)(a5 + 8), (uint64_t)v61);
  *(unsigned char *)(a5 + 16sub_100149BDC(&a9, 0) = 0;
  *(unsigned char *)(a5 + 208) = 0;
  if (v63) {
    sub_10003E96C((uint64_t)v62, v62[1]);
  }
}

void sub_10016C614(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,void **a61,uint64_t a62,uint64_t a63)
{
  sub_10016E9DC(&a61);
  if (LOBYTE(STACK[0x248])) {
    sub_10003E96C((uint64_t)&a66, a67);
  }
  STACK[0x470] = (unint64_t)&STACK[0x3B8];
  sub_10016E8EC((void ***)&STACK[0x470]);
  _Unwind_Resume(a1);
}

void *sub_10016C738@<X0>(int a1@<W1>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100853868[a1]);
}

uint64_t sub_10016C74C(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4)
{
  sub_10016E154((uint64_t)v16, a2, a3, *(unsigned char *)(a4 + 1777));
  long long v6 = *(_OWORD *)(a4 + 664);
  v34[8] = *(_OWORD *)(a4 + 648);
  v34[9] = v6;
  long long v7 = *(_OWORD *)(a4 + 600);
  v34[4] = *(_OWORD *)(a4 + 584);
  v34[5] = v7;
  long long v8 = *(_OWORD *)(a4 + 632);
  v34[6] = *(_OWORD *)(a4 + 616);
  v34[7] = v8;
  long long v9 = *(_OWORD *)(a4 + 568);
  v34[2] = *(_OWORD *)(a4 + 552);
  void v34[3] = v9;
  char v35 = *(unsigned char *)(a4 + 680);
  long long v10 = *(_OWORD *)(a4 + 736);
  long long v25 = *(_OWORD *)(a4 + 720);
  long long v26 = v10;
  long long v27 = *(_OWORD *)(a4 + 752);
  char v28 = *(unsigned char *)(a4 + 768);
  long long v11 = *(_OWORD *)(a4 + 704);
  long long v23 = *(_OWORD *)(a4 + 688);
  long long v24 = v11;
  *(_OWORD *)((char *)v34 + 9) = *(_OWORD *)(a4 + 865);
  long long v12 = *(_OWORD *)(a4 + 856);
  long long v33 = *(_OWORD *)(a4 + 840);
  v34[0] = v12;
  long long v13 = *(_OWORD *)(a4 + 792);
  long long v29 = *(_OWORD *)(a4 + 776);
  long long v30 = v13;
  long long v14 = *(_OWORD *)(a4 + 824);
  long long v31 = *(_OWORD *)(a4 + 808);
  long long v32 = v14;
  (*(void (**)(void, unsigned char *))(**(void **)(a1 + 16) + 16))(*(void *)(a1 + 16), v16);
  if (v22 && __p)
  {
    long long v21 = __p;
    operator delete(__p);
  }
  if (v19) {
    sub_10003E96C((uint64_t)v18, v18[1]);
  }
  return sub_10015DC28((uint64_t)&v17);
}

void sub_10016C8B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10016B718((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10016C8D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10016DFD8((uint64_t)v16, a2, *(unsigned char *)(a3 + 1777));
  if (!*(_WORD *)(a2 + 96))
  {
    long long v6 = *(_OWORD *)(a3 + 664);
    v34[8] = *(_OWORD *)(a3 + 648);
    v34[9] = v6;
    long long v7 = *(_OWORD *)(a3 + 600);
    v34[4] = *(_OWORD *)(a3 + 584);
    v34[5] = v7;
    long long v8 = *(_OWORD *)(a3 + 632);
    v34[6] = *(_OWORD *)(a3 + 616);
    v34[7] = v8;
    long long v9 = *(_OWORD *)(a3 + 568);
    v34[2] = *(_OWORD *)(a3 + 552);
    void v34[3] = v9;
    char v35 = *(unsigned char *)(a3 + 680);
    long long v10 = *(_OWORD *)(a3 + 736);
    long long v25 = *(_OWORD *)(a3 + 720);
    long long v26 = v10;
    long long v27 = *(_OWORD *)(a3 + 752);
    char v28 = *(unsigned char *)(a3 + 768);
    long long v11 = *(_OWORD *)(a3 + 704);
    long long v23 = *(_OWORD *)(a3 + 688);
    long long v24 = v11;
    long long v12 = *(_OWORD *)(a3 + 856);
    long long v33 = *(_OWORD *)(a3 + 840);
    v34[0] = v12;
    *(_OWORD *)((char *)v34 + 9) = *(_OWORD *)(a3 + 865);
    long long v13 = *(_OWORD *)(a3 + 792);
    long long v29 = *(_OWORD *)(a3 + 776);
    long long v30 = v13;
    long long v14 = *(_OWORD *)(a3 + 824);
    long long v31 = *(_OWORD *)(a3 + 808);
    long long v32 = v14;
  }
  (*(void (**)(void, unsigned char *))(**(void **)(a1 + 16) + 16))(*(void *)(a1 + 16), v16);
  if (v22 && __p)
  {
    long long v21 = __p;
    operator delete(__p);
  }
  if (v19) {
    sub_10003E96C((uint64_t)v18, v18[1]);
  }
  return sub_10015DC28((uint64_t)&v17);
}

void sub_10016CA4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10016B718((uint64_t)va);
  _Unwind_Resume(a1);
}

unsigned char *sub_10016CA68(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 4sub_100149BDC(&a9, 0) = *(_OWORD *)(a2 + 40);
  long long v4 = *(_OWORD *)(a2 + 56);
  long long v5 = *(_OWORD *)(a2 + 72);
  long long v6 = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = v6;
  *(_OWORD *)(a1 + 72) = v5;
  *(_OWORD *)(a1 + 56) = v4;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 12sub_100149BDC(&a9, 0) = 0;
  *(void *)(a1 + 128) = 0;
  sub_10015036C((void *)(a1 + 112), *(const void **)(a2 + 112), *(void *)(a2 + 120), (uint64_t)(*(void *)(a2 + 120) - *(void *)(a2 + 112)) >> 3);
  long long v7 = *(_OWORD *)(a2 + 136);
  long long v8 = *(_OWORD *)(a2 + 152);
  uint64_t v9 = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 168) = v9;
  *(_OWORD *)(a1 + 152) = v8;
  *(_OWORD *)(a1 + 136) = v7;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = 0;
  sub_10015042C((void *)(a1 + 176), *(const void **)(a2 + 176), *(void *)(a2 + 184), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(void *)(a2 + 184) - *(void *)(a2 + 176)) >> 3));
  memcpy((void *)(a1 + 200), (const void *)(a2 + 200), 0x181uLL);
  memcpy((void *)(a1 + 592), (const void *)(a2 + 592), 0x259uLL);
  __n128 result = sub_1001500F0((unsigned char *)(a1 + 1200), a2 + 1200);
  *(_WORD *)(a1 + 1816) = *(_WORD *)(a2 + 1816);
  return result;
}

void sub_10016CB60(_Unwind_Exception *exception_object)
{
  long long v5 = *v3;
  if (*v3)
  {
    *(void *)(v1 + 184) = v5;
    operator delete(v5);
  }
  long long v6 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 12sub_100149BDC(&a9, 0) = v6;
    operator delete(v6);
  }
  _Unwind_Resume(exception_object);
}

void sub_10016CB94(void *a1)
{
  sub_10015024C((uint64_t)(a1 + 150));
  uint64_t v2 = (void *)a1[22];
  if (v2)
  {
    a1[23] = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)a1[14];
  if (v3)
  {
    a1[15] = v3;
    operator delete(v3);
  }
}

void *sub_10016CBF4(void *a1)
{
  uint64_t v2 = (void *)a1[17];
  if (v2)
  {
    a1[18] = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)a1[14];
  if (v3)
  {
    a1[15] = v3;
    operator delete(v3);
  }
  long long v4 = (void *)a1[11];
  if (v4)
  {
    a1[12] = v4;
    operator delete(v4);
  }
  long long v5 = (void *)a1[8];
  if (v5)
  {
    a1[9] = v5;
    operator delete(v5);
  }
  long long v6 = (void *)a1[5];
  if (v6)
  {
    a1[6] = v6;
    operator delete(v6);
  }
  long long v7 = (void *)a1[2];
  if (v7)
  {
    a1[3] = v7;
    operator delete(v7);
  }
  return a1;
}

uint64_t sub_10016CC78(void *a1)
{
  uint64_t v2 = (void **)a1[1];
  uint64_t v3 = (void **)a1[2];
  a1[5] = 0;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v3 = (void **)a1[2];
      uint64_t v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 256;
  }
  else
  {
    if (v5 != 2) {
      goto LABEL_9;
    }
    uint64_t v6 = 512;
  }
  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    long long v7 = *v2++;
    operator delete(v7);
  }

  return sub_10003ACC4((uint64_t)a1);
}

uint64_t sub_10016CD20(uint64_t a1)
{
  sub_10016CD5C(a1, *(void ***)(a1 + 16));
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_10016CD5C(uint64_t a1, void **a2)
{
  if (a2)
  {
    uint64_t v2 = a2;
    do
    {
      uint64_t v3 = *v2;
      sub_10003E96C((uint64_t)(v2 + 3), v2[4]);
      operator delete(v2);
      uint64_t v2 = (void **)v3;
    }
    while (v3);
  }
}

uint64_t sub_10016CDA4(uint64_t a1)
{
  sub_10016CDE0(a1, *(void **)(a1 + 16));
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_10016CDE0(uint64_t a1, void *a2)
{
  if (a2)
  {
    uint64_t v2 = a2;
    do
    {
      uint64_t v3 = (void *)*v2;
      sub_10016CE24((uint64_t)(v2 + 2));
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
}

void sub_10016CE24(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 576);
  if (v2) {
    sub_10001A970(v2);
  }
  *(void *)(a1 + 456) = off_100853598;
  sub_10016CC78((void *)(a1 + 400));
  sub_10016CC78((void *)(a1 + 336));
  uint64_t v3 = (void **)(a1 + 224);
  sub_10016CE98(&v3);
}

void sub_10016CE98(void ***a1)
{
  uint64_t v2 = (uint64_t *)*a1;
  if (*v2)
  {
    sub_10016CEEC((uint64_t)v2, *v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

uint64_t sub_10016CEEC(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 8);
  if (v2 != a2)
  {
    uint64_t v3 = v2 - 504;
    do
    {
      *(void *)(v2 - 504) = off_100853598;
      *(void *)(v2 - 592) = off_100853598;
      *(void *)(v2 - 928) = off_100853598;
      *(void *)(v2 - 1016) = off_100853598;
      v3 -= 1480;
      v2 -= 1480;
    }
    while (v2 != a2);
  }
  *(void *)(result + 8) = a2;
  return result;
}

uint64_t sub_10016CFA4(void *a1)
{
  uint64_t v2 = a1 + 5;
  uint64_t v3 = (void **)a1[1];
  unint64_t v4 = (void **)a1[2];
  if (v4 == v3)
  {
    unint64_t v4 = (void **)a1[1];
  }
  else
  {
    unint64_t v5 = a1[4];
    uint64_t v6 = &v3[v5 / 0x19];
    long long v7 = (char *)*v6 + 160 * (v5 % 0x19);
    unint64_t v8 = (unint64_t)v3[(a1[5] + v5) / 0x19] + 160 * ((a1[5] + v5) % 0x19);
    if (v7 != (char *)v8)
    {
      do
      {
        sub_10016D104((uint64_t)v2, v7);
        v7 += 160;
        if (v7 - (unsigned char *)*v6 == 4000)
        {
          uint64_t v9 = (char *)v6[1];
          ++v6;
          long long v7 = v9;
        }
      }
      while (v7 != (char *)v8);
      uint64_t v3 = (void **)a1[1];
      unint64_t v4 = (void **)a1[2];
    }
  }
  *uint64_t v2 = 0;
  unint64_t v10 = (char *)v4 - (char *)v3;
  if ((unint64_t)((char *)v4 - (char *)v3) >= 0x11)
  {
    do
    {
      operator delete(*v3);
      unint64_t v4 = (void **)a1[2];
      uint64_t v3 = (void **)(a1[1] + 8);
      a1[1] = v3;
      unint64_t v10 = (char *)v4 - (char *)v3;
    }
    while ((unint64_t)((char *)v4 - (char *)v3) > 0x10);
  }
  unint64_t v11 = v10 >> 3;
  if (v11 == 1)
  {
    uint64_t v12 = 12;
  }
  else
  {
    if (v11 != 2) {
      goto LABEL_16;
    }
    uint64_t v12 = 25;
  }
  a1[4] = v12;
LABEL_16:
  while (v3 != v4)
  {
    long long v13 = *v3++;
    operator delete(v13);
  }

  return sub_10003ACC4((uint64_t)a1);
}

void sub_10016D104(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)a2[17];
  if (v3)
  {
    a2[18] = v3;
    operator delete(v3);
  }
  unint64_t v4 = (void *)a2[14];
  if (v4)
  {
    a2[15] = v4;
    operator delete(v4);
  }
  unint64_t v5 = (void *)a2[11];
  if (v5)
  {
    a2[12] = v5;
    operator delete(v5);
  }
  uint64_t v6 = (void *)a2[8];
  if (v6)
  {
    a2[9] = v6;
    operator delete(v6);
  }
  long long v7 = (void *)a2[5];
  if (v7)
  {
    a2[6] = v7;
    operator delete(v7);
  }
  unint64_t v8 = (void *)a2[2];
  if (v8)
  {
    a2[3] = v8;
    operator delete(v8);
  }
}

void *sub_10016D19C(void *result, __int16 *a2, __int16 *a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    sub_10016D224(result, a4);
    __n128 result = (void *)sub_10016D2C8((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_10016D204(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_10016D794(&a9);
  _Unwind_Resume(a1);
}

char *sub_10016D224(void *a1, unint64_t a2)
{
  if (a2 >= 0x1AF286BCA1AF287) {
    sub_1000267C4();
  }
  __n128 result = (char *)sub_10016D27C((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[152 * v4];
  return result;
}

void *sub_10016D27C(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x1AF286BCA1AF287) {
    sub_1000257D8();
  }
  return operator new(152 * a2);
}

uint64_t sub_10016D2C8(uint64_t a1, __int16 *a2, __int16 *a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  uint64_t v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      sub_10016D36C(v4, v6);
      v6 += 76;
      uint64_t v4 = v11 + 152;
      v11 += 152;
    }
    while (v6 != a3);
  }
  char v9 = 1;
  sub_10016D5FC((uint64_t)v8);
  return v4;
}

void sub_10016D358(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10016D36C(uint64_t a1, __int16 *a2)
{
  __int16 v4 = *a2;
  *(unsigned char *)(a1 + 2) = *((unsigned char *)a2 + 2);
  *(void *)(a1 + 8) = 0;
  *(_WORD *)a1 = v4;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  sub_10016D488((void *)(a1 + 8), *((const void **)a2 + 1), *((void *)a2 + 2), *((void *)a2 + 2) - *((void *)a2 + 1));
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 4sub_100149BDC(&a9, 0) = 0;
  *(void *)(a1 + 48) = 0;
  sub_10016D488((void *)(a1 + 32), *((const void **)a2 + 4), *((void *)a2 + 5), *((void *)a2 + 5) - *((void *)a2 + 4));
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  sub_10016D504((void *)(a1 + 56), *((const void **)a2 + 7), *((void *)a2 + 8), (uint64_t)(*((void *)a2 + 8) - *((void *)a2 + 7)) >> 10);
  long long v5 = *((_OWORD *)a2 + 5);
  long long v6 = *((_OWORD *)a2 + 6);
  long long v7 = *(_OWORD *)((char *)a2 + 105);
  *(void *)(a1 + 128) = 0;
  *(_OWORD *)(a1 + 105) = v7;
  *(_OWORD *)(a1 + 8sub_100149BDC(&a9, 0) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  sub_10016D82C((void *)(a1 + 128), *((void *)a2 + 16), *((void *)a2 + 17), (uint64_t)(*((void *)a2 + 17) - *((void *)a2 + 16)) >> 5);
  return a1;
}

void sub_10016D43C(_Unwind_Exception *exception_object)
{
  long long v6 = *v4;
  if (*v4)
  {
    v1[8] = v6;
    operator delete(v6);
  }
  long long v7 = *v3;
  if (*v3)
  {
    v1[5] = v7;
    operator delete(v7);
  }
  unint64_t v8 = *v2;
  if (*v2)
  {
    v1[2] = v8;
    operator delete(v8);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10016D488(void *result, const void *a2, uint64_t a3, size_t __sz)
{
  if (__sz)
  {
    long long v6 = result;
    __n128 result = sub_10002DBC4(result, __sz);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      __n128 result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_10016D4E8(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10016D504(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    long long v6 = result;
    __n128 result = sub_10016D580(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      __n128 result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_10016D564(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_10016D580(void *a1, unint64_t a2)
{
  if (a2 >> 54) {
    sub_1000267C4();
  }
  __n128 result = (char *)sub_10016D5C4((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[1024 * v4];
  return result;
}

void *sub_10016D5C4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 54) {
    sub_1000257D8();
  }
  return operator new(a2 << 10);
}

uint64_t sub_10016D5FC(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_10016D634((uint64_t *)a1);
  }
  return a1;
}

void sub_10016D634(uint64_t *a1)
{
  uint64_t v2 = (uint64_t *)a1[1];
  uint64_t v1 = (uint64_t *)a1[2];
  uint64_t v3 = *v1;
  uint64_t v4 = *v2;
  if (*v1 != *v2)
  {
    uint64_t v5 = *a1;
    do
    {
      v3 -= 152;
      sub_10016D688(v5, v3);
    }
    while (v3 != v4);
  }
}

void sub_10016D688(uint64_t a1, uint64_t a2)
{
  long long v6 = (void **)(a2 + 128);
  sub_10016D6F0(&v6);
  uint64_t v3 = *(void **)(a2 + 56);
  if (v3)
  {
    *(void *)(a2 + 64) = v3;
    operator delete(v3);
  }
  uint64_t v4 = *(void **)(a2 + 32);
  if (v4)
  {
    *(void *)(a2 + 4sub_100149BDC(&a9, 0) = v4;
    operator delete(v4);
  }
  uint64_t v5 = *(void **)(a2 + 8);
  if (v5)
  {
    *(void *)(a2 + 16) = v5;
    operator delete(v5);
  }
}

void sub_10016D6F0(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_10016D744((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_10016D744(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 32)
  {
    uint64_t v4 = *(void **)(i - 24);
    if (v4)
    {
      *(void *)(i - 16) = v4;
      operator delete(v4);
    }
  }
  a1[1] = v2;
}

void sub_10016D794(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 152;
        sub_10016D688((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void *sub_10016D82C(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    long long v6 = result;
    sub_10016D8B4(result, a4);
    __n128 result = (void *)sub_10016D930((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_10016D894(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_10016D6F0(&a9);
  _Unwind_Resume(a1);
}

char *sub_10016D8B4(void *a1, unint64_t a2)
{
  if (a2 >> 59) {
    sub_1000267C4();
  }
  __n128 result = (char *)sub_10016D8F8((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[32 * v4];
  return result;
}

void *sub_10016D8F8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 59) {
    sub_1000257D8();
  }
  return operator new(32 * a2);
}

uint64_t sub_10016D930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  uint64_t v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      *(_DWORD *)uint64_t v4 = *(_DWORD *)v6;
      *(void *)(v4 + 16) = 0;
      *(void *)(v4 + 24) = 0;
      *(void *)(v4 + 8) = 0;
      sub_10016D488((void *)(v4 + 8), *(const void **)(v6 + 8), *(void *)(v6 + 16), *(void *)(v6 + 16) - *(void *)(v6 + 8));
      uint64_t v4 = v11 + 32;
      v11 += 32;
      v6 += 32;
    }
    while (v6 != a3);
  }
  char v9 = 1;
  sub_10016D9E8((uint64_t)v8);
  return v4;
}

void sub_10016D9D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10016D9E8(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_10016DA20(a1);
  }
  return a1;
}

void sub_10016DA20(uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 16);
  uint64_t v2 = **(void **)(a1 + 8);
  while (v1 != v2)
  {
    uint64_t v3 = *(void **)(v1 - 24);
    if (v3)
    {
      *(void *)(v1 - 16) = v3;
      operator delete(v3);
    }
    v1 -= 32;
  }
}

void *sub_10016DA68(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    __n128 result = sub_100155838(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      __n128 result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_10016DAC8(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10016DAE4(uint64_t a1, uint64_t *a2, char a3)
{
  *(void *)a1 = *a2;
  *(unsigned char *)(a1 + 8) = a3;
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 6);
  *(_DWORD *)(a1 + 32) = 5;
  *(_WORD *)(a1 + 36) = *((_WORD *)a2 + 4);
  uint64_t v5 = a2[4];
  *(unsigned char *)(a1 + 48) = 0;
  *(void *)(a1 + 4sub_100149BDC(&a9, 0) = v5;
  *(unsigned char *)(a1 + 60sub_100149BDC(&a9, 0) = 0;
  *(unsigned char *)(a1 + 608) = 0;
  *(unsigned char *)(a1 + 752) = 0;
  uint64_t v6 = *a2;
  *(_WORD *)(a1 + 768) = *((_WORD *)a2 + 4);
  *(void *)(a1 + 76sub_100149BDC(&a9, 0) = v6;
  long long v7 = *((_OWORD *)a2 + 1);
  long long v8 = *((_OWORD *)a2 + 2);
  long long v9 = *((_OWORD *)a2 + 3);
  *(_DWORD *)(a1 + 824) = *((_DWORD *)a2 + 16);
  *(_OWORD *)(a1 + 792) = v8;
  *(_OWORD *)(a1 + 808) = v9;
  *(_OWORD *)(a1 + 776) = v7;
  *(void *)(a1 + 832) = 0;
  *(void *)(a1 + 848) = 0;
  *(void *)(a1 + 84sub_100149BDC(&a9, 0) = 0;
  sub_10016DA68((void *)(a1 + 832), (const void *)a2[9], a2[10], (a2[10] - a2[9]) >> 4);
  *(_OWORD *)(a1 + 856) = *((_OWORD *)a2 + 6);
  *(unsigned char *)(a1 + 872) = 1;
  *(unsigned char *)(a1 + 88sub_100149BDC(&a9, 0) = 0;
  *(unsigned char *)(a1 + 928) = 0;
  *(unsigned char *)(a1 + 936) = 0;
  *(unsigned char *)(a1 + 1112) = 0;
  *(unsigned char *)(a1 + 112sub_100149BDC(&a9, 0) = 0;
  *(unsigned char *)(a1 + 120sub_100149BDC(&a9, 0) = 0;
  *(unsigned char *)(a1 + 1208) = 0;
  *(unsigned char *)(a1 + 1312) = 0;
  *(unsigned char *)(a1 + 132sub_100149BDC(&a9, 0) = 0;
  *(unsigned char *)(a1 + 1448) = 0;
  return a1;
}

void sub_10016DBE4(_Unwind_Exception *a1)
{
  if (*(unsigned char *)(v1 + 752)) {
    sub_100412474(v1);
  }
  sub_10015DC28(v2);
  _Unwind_Resume(a1);
}

void sub_10016DC08(uint64_t a1, uint64_t a2)
{
  if (*(unsigned __int8 *)(a1 + 144) == *(unsigned __int8 *)(a2 + 144))
  {
    if (*(unsigned char *)(a1 + 144))
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      if (a1 != a2) {
        sub_10016DCC8((uint64_t **)(a1 + 16), *(unsigned __int16 **)(a2 + 16), (unsigned __int16 *)(a2 + 24));
      }
      long long v4 = *(_OWORD *)(a2 + 40);
      long long v5 = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 56) = v5;
      *(_OWORD *)(a1 + 4sub_100149BDC(&a9, 0) = v4;
      long long v6 = *(_OWORD *)(a2 + 88);
      long long v7 = *(_OWORD *)(a2 + 104);
      long long v8 = *(_OWORD *)(a2 + 120);
      *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 12sub_100149BDC(&a9, 0) = v8;
      *(_OWORD *)(a1 + 104) = v7;
      *(_OWORD *)(a1 + 88) = v6;
    }
  }
  else if (*(unsigned char *)(a1 + 144))
  {
    sub_10003E96C(a1 + 16, *(void **)(a1 + 24));
    *(unsigned char *)(a1 + 144) = 0;
  }
  else
  {
    sub_10040AD00(a1);
    *(unsigned char *)(a1 + 144) = 1;
  }
}

uint64_t **sub_10016DCC8(uint64_t **result, unsigned __int16 *a2, unsigned __int16 *a3)
{
  long long v5 = result;
  if (result[2])
  {
    long long v6 = *result;
    long long v7 = result[1];
    *__n128 result = (uint64_t *)(result + 1);
    v7[2] = 0;
    result[1] = 0;
    result[2] = 0;
    if (v6[1]) {
      long long v8 = (uint64_t *)v6[1];
    }
    else {
      long long v8 = v6;
    }
    long long v14 = result;
    int v15 = v8;
    int v16 = v8;
    if (v8)
    {
      int v15 = sub_10016DE9C((uint64_t)v8);
      if (a2 != a3)
      {
        long long v9 = a2;
        do
        {
          *((_WORD *)v8 + 13) = v9[13];
          sub_10016DE2C(v5, (uint64_t)v8);
          long long v8 = v15;
          int v16 = v15;
          if (v15) {
            int v15 = sub_10016DE9C((uint64_t)v15);
          }
          uint64_t v10 = (unsigned __int16 *)*((void *)v9 + 1);
          if (v10)
          {
            do
            {
              a2 = v10;
              uint64_t v10 = *(unsigned __int16 **)v10;
            }
            while (v10);
          }
          else
          {
            do
            {
              a2 = (unsigned __int16 *)*((void *)v9 + 2);
              BOOL v11 = *(void *)a2 == (void)v9;
              long long v9 = a2;
            }
            while (!v11);
          }
          if (!v8) {
            break;
          }
          long long v9 = a2;
        }
        while (a2 != a3);
      }
    }
    __n128 result = (uint64_t **)sub_10016DEF0((uint64_t)&v14);
  }
  if (a2 != a3)
  {
    do
    {
      __n128 result = (uint64_t **)sub_10016DF48(v5, a2 + 13);
      uint64_t v12 = (unsigned __int16 *)*((void *)a2 + 1);
      if (v12)
      {
        do
        {
          long long v13 = v12;
          uint64_t v12 = *(unsigned __int16 **)v12;
        }
        while (v12);
      }
      else
      {
        do
        {
          long long v13 = (unsigned __int16 *)*((void *)a2 + 2);
          BOOL v11 = *(void *)v13 == (void)a2;
          a2 = v13;
        }
        while (!v11);
      }
      a2 = v13;
    }
    while (v13 != a3);
  }
  return result;
}

void sub_10016DE18(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10016DEF0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10016DE2C(uint64_t **a1, uint64_t a2)
{
  uint64_t v3 = a1 + 1;
  long long v4 = a1[1];
  if (v4)
  {
    do
    {
      while (1)
      {
        uint64_t v3 = (uint64_t **)v4;
        if (*(unsigned __int16 *)(a2 + 26) >= *((unsigned __int16 *)v4 + 13)) {
          break;
        }
        long long v4 = (uint64_t *)*v4;
        long long v5 = v3;
        if (!*v3) {
          goto LABEL_8;
        }
      }
      long long v4 = (uint64_t *)v4[1];
    }
    while (v4);
    long long v5 = v3 + 1;
  }
  else
  {
    long long v5 = a1 + 1;
  }
LABEL_8:
  sub_100026D98(a1, (uint64_t)v3, v5, (uint64_t *)a2);
  return a2;
}

void *sub_10016DE9C(uint64_t a1)
{
  __n128 result = *(void **)(a1 + 16);
  if (result)
  {
    uint64_t v3 = (void *)*result;
    if (*result == a1)
    {
      *__n128 result = 0;
      while (1)
      {
        long long v4 = (void *)result[1];
        if (!v4) {
          break;
        }
        do
        {
          __n128 result = v4;
          long long v4 = (void *)*v4;
        }
        while (v4);
      }
    }
    else
    {
      for (result[1] = 0; v3; uint64_t v3 = (void *)result[1])
      {
        do
        {
          __n128 result = v3;
          uint64_t v3 = (void *)*v3;
        }
        while (v3);
      }
    }
  }
  return result;
}

uint64_t sub_10016DEF0(uint64_t a1)
{
  sub_10003E96C(*(void *)a1, *(void **)(a1 + 16));
  uint64_t v2 = *(void **)(a1 + 8);
  if (v2)
  {
    uint64_t v3 = (void *)v2[2];
    if (v3)
    {
      do
      {
        uint64_t v2 = v3;
        uint64_t v3 = (void *)v3[2];
      }
      while (v3);
      *(void *)(a1 + 8) = v2;
    }
    sub_10003E96C(*(void *)a1, v2);
  }
  return a1;
}

uint64_t *sub_10016DF48(uint64_t **a1, unsigned __int16 *a2)
{
  long long v4 = (uint64_t *)operator new(0x20uLL);
  unsigned int v5 = *a2;
  *((_WORD *)v4 + 13) = v5;
  long long v6 = a1 + 1;
  long long v7 = a1[1];
  if (v7)
  {
    do
    {
      while (1)
      {
        long long v6 = (uint64_t **)v7;
        if (v5 >= *((unsigned __int16 *)v7 + 13)) {
          break;
        }
        long long v7 = (uint64_t *)*v7;
        long long v8 = v6;
        if (!*v6) {
          goto LABEL_8;
        }
      }
      long long v7 = (uint64_t *)v7[1];
    }
    while (v7);
    long long v8 = v6 + 1;
  }
  else
  {
    long long v8 = a1 + 1;
  }
LABEL_8:
  sub_100026D98(a1, (uint64_t)v6, v8, v4);
  return v4;
}

uint64_t sub_10016DFD8(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)a1 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 8) = a3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 32) = 1;
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 56);
  *(void *)(a1 + 4sub_100149BDC(&a9, 0) = *(void *)(a2 + 64);
  sub_10016E068(a1 + 48, a2);
  *(unsigned char *)(a1 + 608) = 0;
  *(unsigned char *)(a1 + 752) = 0;
  *(unsigned char *)(a1 + 76sub_100149BDC(&a9, 0) = 0;
  *(unsigned char *)(a1 + 872) = 0;
  *(unsigned char *)(a1 + 88sub_100149BDC(&a9, 0) = 0;
  *(unsigned char *)(a1 + 928) = 0;
  *(unsigned char *)(a1 + 936) = 0;
  *(unsigned char *)(a1 + 1112) = 0;
  *(unsigned char *)(a1 + 112sub_100149BDC(&a9, 0) = 0;
  *(unsigned char *)(a1 + 120sub_100149BDC(&a9, 0) = 0;
  *(unsigned char *)(a1 + 1208) = 0;
  *(unsigned char *)(a1 + 1312) = 0;
  *(unsigned char *)(a1 + 132sub_100149BDC(&a9, 0) = 0;
  *(unsigned char *)(a1 + 1448) = 0;
  return a1;
}

uint64_t sub_10016E068(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v4 = *(_OWORD *)(a2 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 8sub_100149BDC(&a9, 0) = 0;
  *(void *)(a1 + 88) = 0;
  sub_10015036C((void *)(a1 + 72), *(const void **)(a2 + 72), *(void *)(a2 + 80), (uint64_t)(*(void *)(a2 + 80) - *(void *)(a2 + 72)) >> 3);
  long long v7 = *(_OWORD *)(a2 + 96);
  long long v8 = *(_OWORD *)(a2 + 112);
  uint64_t v9 = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 128) = v9;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 96) = v7;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  sub_10015042C((void *)(a1 + 136), *(const void **)(a2 + 136), *(void *)(a2 + 144), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(void *)(a2 + 144) - *(void *)(a2 + 136)) >> 3));
  memcpy((void *)(a1 + 160), (const void *)(a2 + 160), 0x181uLL);
  *(unsigned char *)(a1 + 552) = 1;
  return a1;
}

void sub_10016E138(_Unwind_Exception *exception_object)
{
  long long v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 8sub_100149BDC(&a9, 0) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10016E154(uint64_t a1, uint64_t a2, long long *a3, char a4)
{
  *(void *)a1 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 8) = a4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 32) = 1;
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 56);
  *(void *)(a1 + 4sub_100149BDC(&a9, 0) = *(void *)(a2 + 64);
  sub_10016E068(a1 + 48, a2);
  *(unsigned char *)(a1 + 608) = 0;
  *(unsigned char *)(a1 + 752) = 0;
  *(unsigned char *)(a1 + 76sub_100149BDC(&a9, 0) = 0;
  *(unsigned char *)(a1 + 872) = 0;
  long long v6 = *a3;
  long long v7 = a3[2];
  *(_OWORD *)(a1 + 896) = a3[1];
  *(_OWORD *)(a1 + 912) = v7;
  *(_OWORD *)(a1 + 88sub_100149BDC(&a9, 0) = v6;
  *(unsigned char *)(a1 + 928) = 1;
  *(unsigned char *)(a1 + 936) = 0;
  *(unsigned char *)(a1 + 1112) = 0;
  *(unsigned char *)(a1 + 112sub_100149BDC(&a9, 0) = 0;
  *(unsigned char *)(a1 + 120sub_100149BDC(&a9, 0) = 0;
  *(unsigned char *)(a1 + 1208) = 0;
  *(unsigned char *)(a1 + 1312) = 0;
  *(unsigned char *)(a1 + 132sub_100149BDC(&a9, 0) = 0;
  *(unsigned char *)(a1 + 1448) = 0;
  return a1;
}

uint64_t sub_10016E1FC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, long long *a5, char a6)
{
  *(void *)a1 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 8) = a6;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 32) = a4;
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 56);
  *(void *)(a1 + 4sub_100149BDC(&a9, 0) = *(void *)(a2 + 64);
  sub_10016E068(a1 + 48, a2);
  sub_10040AD00(a1 + 608);
  *(unsigned char *)(a1 + 752) = 1;
  *(unsigned char *)(a1 + 76sub_100149BDC(&a9, 0) = 0;
  *(unsigned char *)(a1 + 872) = 0;
  long long v9 = *a5;
  long long v10 = a5[2];
  *(_OWORD *)(a1 + 896) = a5[1];
  *(_OWORD *)(a1 + 912) = v10;
  *(_OWORD *)(a1 + 88sub_100149BDC(&a9, 0) = v9;
  *(unsigned char *)(a1 + 928) = 1;
  *(unsigned char *)(a1 + 936) = 0;
  *(unsigned char *)(a1 + 1112) = 0;
  *(unsigned char *)(a1 + 112sub_100149BDC(&a9, 0) = 0;
  *(unsigned char *)(a1 + 120sub_100149BDC(&a9, 0) = 0;
  *(unsigned char *)(a1 + 1208) = 0;
  *(unsigned char *)(a1 + 1312) = 0;
  *(unsigned char *)(a1 + 132sub_100149BDC(&a9, 0) = 0;
  *(unsigned char *)(a1 + 1448) = 0;
  if ((a4 - 5) <= 0xFFFFFFFD) {
    __assert_rtn("RoseSolution", "RoseSolution.h", 115, "solution_type == RoseSolutionType::RoseRawAndSensorFusion || solution_type == RoseSolutionType::RoseRawRangeSensorFusionAngle");
  }
  return a1;
}

void sub_10016E2F0(_Unwind_Exception *a1)
{
  sub_10015DC28(v1);
  _Unwind_Resume(a1);
}

unsigned char *sub_10016E330(unsigned char *a1, uint64_t a2)
{
  *a1 = 0;
  a1[144] = 0;
  if (*(unsigned char *)(a2 + 144))
  {
    sub_10040AD00(a1);
    a1[144] = 1;
  }
  return a1;
}

void sub_10016E374(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 144)) {
    sub_10003E96C(v1 + 16, *(void **)(v1 + 24));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10016E394(uint64_t a1, __int16 a2, uint64_t a3, uint64_t *a4, long long *a5, char a6, double a7)
{
  *(double *)a1 = a7;
  uint64_t v9 = *a4;
  *(unsigned char *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 8) = a6;
  *(void *)(a1 + 16) = v9;
  *(unsigned char *)(a1 + 24) = 1;
  *(_DWORD *)(a1 + 32) = 2;
  *(_WORD *)(a1 + 36) = a2;
  *(void *)(a1 + 4sub_100149BDC(&a9, 0) = a3;
  *(unsigned char *)(a1 + 60sub_100149BDC(&a9, 0) = 0;
  sub_10040AD00(a1 + 608);
  *(unsigned char *)(a1 + 752) = 1;
  *(unsigned char *)(a1 + 76sub_100149BDC(&a9, 0) = 0;
  *(unsigned char *)(a1 + 872) = 0;
  *(unsigned char *)(a1 + 88sub_100149BDC(&a9, 0) = 0;
  *(unsigned char *)(a1 + 928) = 0;
  long long v10 = *a5;
  long long v11 = a5[2];
  *(_OWORD *)(a1 + 952) = a5[1];
  *(_OWORD *)(a1 + 968) = v11;
  *(_OWORD *)(a1 + 936) = v10;
  long long v12 = a5[3];
  long long v13 = a5[4];
  long long v14 = a5[6];
  *(_OWORD *)(a1 + 1016) = a5[5];
  *(_OWORD *)(a1 + 1032) = v14;
  *(_OWORD *)(a1 + 984) = v12;
  *(_OWORD *)(a1 + 100sub_100149BDC(&a9, 0) = v13;
  long long v15 = a5[7];
  long long v16 = a5[8];
  long long v17 = a5[10];
  *(_OWORD *)(a1 + 108sub_100149BDC(&a9, 0) = a5[9];
  *(_OWORD *)(a1 + 1096) = v17;
  *(_OWORD *)(a1 + 1048) = v15;
  *(_OWORD *)(a1 + 1064) = v16;
  *(unsigned char *)(a1 + 1112) = 1;
  *(unsigned char *)(a1 + 112sub_100149BDC(&a9, 0) = 0;
  *(unsigned char *)(a1 + 120sub_100149BDC(&a9, 0) = 0;
  *(unsigned char *)(a1 + 1208) = 0;
  *(unsigned char *)(a1 + 1312) = 0;
  *(unsigned char *)(a1 + 132sub_100149BDC(&a9, 0) = 0;
  *(unsigned char *)(a1 + 1448) = 0;
  return a1;
}

void sub_10016E468(_Unwind_Exception *a1)
{
  sub_10015DC28(v1);
  _Unwind_Resume(a1);
}

void *sub_10016E47C@<X0>(unsigned int *a1@<X1>, void *a2@<X8>)
{
  long long v4 = operator new(0x108uLL);
  __n128 result = sub_10016E4D8(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_10016E4C4(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_10016E4D8(void *a1, unsigned int *a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_1008535C8;
  sub_100155390(a1 + 3, *a2);
  return a1;
}

void sub_10016E524(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_10016E538(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1008535C8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10016E558(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1008535C8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_10016E5AC(uint64_t a1)
{
  sub_10016E5D8((uint64_t)&v1, a1 + 24);
}

void sub_10016E5D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (std::mutex *)(a2 + 128);
  long long v4 = *(void **)(a2 + 216);
  if (v4)
  {
    *(void *)(a2 + 224) = v4;
    operator delete(v4);
  }
  uint64_t v5 = *(void *)(a2 + 208);
  *(void *)(a2 + 208) = 0;
  if (v5) {
    operator delete();
  }
  std::mutex::~mutex(v3);
  long long v6 = *(void **)(a2 + 104);
  if (v6)
  {
    *(void *)(a2 + 112) = v6;
    operator delete(v6);
  }
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a2 + 96) = 0;
  if (v7) {
    operator delete();
  }

  std::mutex::~mutex((std::mutex *)(a2 + 16));
}

void sub_10016E67C()
{
}

__n128 sub_10016E690(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x20uLL);
  *(void *)uint64_t v2 = off_100853618;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((void *)v2 + 3) = *(void *)(a1 + 24);
  return result;
}

__n128 sub_10016E6E4(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_100853618;
  __n128 result = *(__n128 *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_10016E71C(void *a1)
{
  uint64_t v1 = a1[2];
  uint64_t v2 = (uint64_t (*)(void *))a1[1];
  uint64_t v3 = (void *)(a1[3] + (v1 >> 1));
  if (v1) {
    return (*(uint64_t (**)(void))(*v3 + v2))();
  }
  else {
    return v2(v3);
  }
}

uint64_t sub_10016E764(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_10016E7A4()
{
}

void sub_10016E7B4()
{
}

__n128 sub_10016E7C8(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x20uLL);
  *(void *)uint64_t v2 = off_1008536D8;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((void *)v2 + 3) = *(void *)(a1 + 24);
  return result;
}

__n128 sub_10016E81C(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_1008536D8;
  __n128 result = *(__n128 *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_10016E854(void *a1, unsigned int *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = (uint64_t (*)(void *, void))a1[1];
  long long v4 = (void *)(a1[3] + (v2 >> 1));
  if (v2) {
    uint64_t v3 = *(uint64_t (**)(void *, void))(*v4 + v3);
  }
  return v3(v4, *a2);
}

uint64_t sub_10016E8A0(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_10016E8E0()
{
}

void sub_10016E8EC(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    long long v4 = v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 19;
        sub_10016E984((uint64_t)(v1 + 2), v4);
      }
      while (v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_10016E984(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)a2[15];
  if (v3)
  {
    a2[16] = v3;
    operator delete(v3);
  }
  long long v4 = (void *)a2[2];
  if (v4)
  {
    a2[3] = v4;
    operator delete(v4);
  }
}

void sub_10016E9DC(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (char *)**a1;
  if (v2)
  {
    uint64_t v3 = (char *)v1[1];
    if (v3 != v2)
    {
      long long v4 = v3 - 576;
      uint64_t v5 = v4;
      do
      {
        *((void *)v5 + 11) = off_100853598;
        *(void *)uint64_t v5 = off_100853598;
        long long v6 = v5 - 8;
        v5 -= 584;
        v4 -= 584;
      }
      while (v6 != v2);
    }
    v1[1] = v2;
    operator delete(v2);
  }
}

void sub_10016EA58(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    long long v4 = v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      uint64_t v6 = (uint64_t)v4 - 128;
      do
      {
        sub_10003E96C(v6, *(void **)(v6 + 8));
        uint64_t v7 = v6 - 16;
        v6 -= 144;
      }
      while ((void *)v7 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t *sub_10016EAE8(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  sub_10016EB40(a1, *(unsigned __int16 **)a2, (unsigned __int16 *)(a2 + 8));
  return a1;
}

void sub_10016EB28(_Unwind_Exception *a1)
{
  sub_10003E96C(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_10016EB40(uint64_t *result, unsigned __int16 *a2, unsigned __int16 *a3)
{
  if (a2 != a3)
  {
    long long v4 = a2;
    uint64_t v5 = (uint64_t **)result;
    uint64_t v6 = result + 1;
    do
    {
      __n128 result = sub_10016EBCC(v5, v6, v4 + 13, v4 + 13);
      uint64_t v7 = (unsigned __int16 *)*((void *)v4 + 1);
      if (v7)
      {
        do
        {
          long long v8 = v7;
          uint64_t v7 = *(unsigned __int16 **)v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          long long v8 = (unsigned __int16 *)*((void *)v4 + 2);
          BOOL v9 = *(void *)v8 == (void)v4;
          long long v4 = v8;
        }
        while (!v9);
      }
      long long v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

uint64_t *sub_10016EBCC(uint64_t **a1, uint64_t *a2, unsigned __int16 *a3, _WORD *a4)
{
  uint64_t v6 = sub_10016EC54(a1, a2, &v11, &v10, a3);
  uint64_t v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    long long v8 = (uint64_t **)v6;
    uint64_t v7 = (uint64_t *)operator new(0x20uLL);
    *((_WORD *)v7 + 13) = *a4;
    sub_100026D98(a1, (uint64_t)v11, v8, v7);
  }
  return v7;
}

uint64_t *sub_10016EC54(void *a1, uint64_t *a2, uint64_t **a3, uint64_t *a4, unsigned __int16 *a5)
{
  uint64_t v5 = a1 + 1;
  if (a1 + 1 == a2 || (unsigned int v6 = *a5, v7 = *((unsigned __int16 *)a2 + 13), v6 < v7))
  {
    long long v8 = (uint64_t *)*a2;
    if ((uint64_t *)*a1 == a2)
    {
      uint64_t v10 = a2;
LABEL_17:
      if (v8)
      {
        *a3 = v10;
        return v10 + 1;
      }
      else
      {
        *a3 = a2;
        return a2;
      }
    }
    if (v8)
    {
      BOOL v9 = (uint64_t *)*a2;
      do
      {
        uint64_t v10 = v9;
        BOOL v9 = (uint64_t *)v9[1];
      }
      while (v9);
    }
    else
    {
      long long v13 = a2;
      do
      {
        uint64_t v10 = (uint64_t *)v13[2];
        BOOL v14 = *v10 == (void)v13;
        long long v13 = v10;
      }
      while (v14);
    }
    unsigned int v15 = *a5;
    if (*((unsigned __int16 *)v10 + 13) < v15) {
      goto LABEL_17;
    }
    uint64_t v16 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          long long v17 = (uint64_t *)v16;
          unsigned int v18 = *(unsigned __int16 *)(v16 + 26);
          if (v15 >= v18) {
            break;
          }
          uint64_t v16 = *v17;
          uint64_t v5 = v17;
          if (!*v17) {
            goto LABEL_29;
          }
        }
        if (v18 >= v15) {
          break;
        }
        uint64_t v5 = v17 + 1;
        uint64_t v16 = v17[1];
      }
      while (v16);
    }
    else
    {
      long long v17 = a1 + 1;
    }
LABEL_29:
    *a3 = v17;
    return v5;
  }
  if (v7 >= v6)
  {
    *a3 = a2;
    *a4 = (uint64_t)a2;
    return a4;
  }
  uint64_t v11 = a2[1];
  if (v11)
  {
    long long v12 = (uint64_t *)a2[1];
    do
    {
      a4 = v12;
      long long v12 = (uint64_t *)*v12;
    }
    while (v12);
  }
  else
  {
    char v19 = a2;
    do
    {
      a4 = (uint64_t *)v19[2];
      BOOL v14 = *a4 == (void)v19;
      char v19 = a4;
    }
    while (!v14);
  }
  if (a4 != v5 && v6 >= *((unsigned __int16 *)a4 + 13))
  {
    uint64_t v20 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          long long v21 = (uint64_t *)v20;
          unsigned int v22 = *(unsigned __int16 *)(v20 + 26);
          if (v6 >= v22) {
            break;
          }
          uint64_t v20 = *v21;
          uint64_t v5 = v21;
          if (!*v21) {
            goto LABEL_48;
          }
        }
        if (v22 >= v6) {
          break;
        }
        uint64_t v5 = v21 + 1;
        uint64_t v20 = v21[1];
      }
      while (v20);
    }
    else
    {
      long long v21 = a1 + 1;
    }
LABEL_48:
    *a3 = v21;
    return v5;
  }
  if (v11)
  {
    *a3 = a4;
  }
  else
  {
    *a3 = a2;
    return a2 + 1;
  }
  return a4;
}

void *sub_10016EDFC(uint64_t a1, unsigned __int16 *a2, uint64_t a3, _WORD **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
    uint64_t v10 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      uint64_t v11 = *v10;
      if (*v10)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v12 == v7)
          {
            if (*((unsigned __int16 *)v11 + 8) == v7) {
              return v11;
            }
          }
          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8) {
                v12 %= v8;
              }
            }
            else
            {
              v12 &= v8 - 1;
            }
            if (v12 != v4) {
              break;
            }
          }
          uint64_t v11 = (void *)*v11;
        }
        while (v11);
      }
    }
  }
  uint64_t v11 = operator new(0x18uLL);
  void *v11 = 0;
  v11[1] = v7;
  *((_WORD *)v11 + 8) = **a4;
  *((_DWORD *)v11 + 5) = 0;
  float v13 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    BOOL v15 = 1;
    if (v8 >= 3) {
      BOOL v15 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v16 = v15 | (2 * v8);
    unint64_t v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17) {
      size_t v18 = v17;
    }
    else {
      size_t v18 = v16;
    }
    sub_10002AA24(a1, v18);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
      else {
        unint64_t v4 = v7;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
  }
  uint64_t v19 = *(void *)a1;
  uint64_t v20 = *(void **)(*(void *)a1 + 8 * v4);
  if (v20)
  {
    void *v11 = *v20;
LABEL_38:
    void *v20 = v11;
    goto LABEL_39;
  }
  void *v11 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v11;
  *(void *)(v19 + 8 * v4) = a1 + 16;
  if (*v11)
  {
    unint64_t v21 = *(void *)(*v11 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v21 >= v8) {
        v21 %= v8;
      }
    }
    else
    {
      v21 &= v8 - 1;
    }
    uint64_t v20 = (void *)(*(void *)a1 + 8 * v21);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return v11;
}

void sub_10016F010(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t **sub_10016F024(void *a1, unsigned __int16 *a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0;
  }
  unint64_t v3 = *a2;
  uint8x8_t v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL)
  {
    unint64_t v5 = *a2;
    if (*(void *)&v2 <= v3) {
      unint64_t v5 = v3 % *(void *)&v2;
    }
  }
  else
  {
    unint64_t v5 = (v2.i32[0] - 1) & v3;
  }
  unsigned int v6 = *(uint64_t ****)(*a1 + 8 * v5);
  if (!v6) {
    return 0;
  }
  for (__n128 result = *v6; result; __n128 result = (uint64_t **)*result)
  {
    unint64_t v8 = (unint64_t)result[1];
    if (v8 == v3)
    {
      if (*((unsigned __int16 *)result + 8) == v3) {
        return result;
      }
    }
    else
    {
      if (v4.u32[0] > 1uLL)
      {
        if (v8 >= *(void *)&v2) {
          v8 %= *(void *)&v2;
        }
      }
      else
      {
        v8 &= *(void *)&v2 - 1;
      }
      if (v8 != v5) {
        return 0;
      }
    }
  }
  return result;
}

void sub_10016F0D8(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

void sub_10016F100()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8A8))
  {
    sub_100004950(&qword_10089C890, "com.apple.nearbyd.accessory.download");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C890, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8A8);
  }
}

void sub_10016F198(_Unwind_Exception *a1)
{
}

void sub_10016F1B0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8C8))
  {
    sub_100004950(&qword_10089C8B0, "com.apple.nearbyd.accessory.files");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C8B0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8C8);
  }
}

void sub_10016F248(_Unwind_Exception *a1)
{
}

void sub_10016F260()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8E8))
  {
    sub_100004950(qword_10089C8D0, "MA_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8D0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8E8);
  }
}

void sub_10016F2F8(_Unwind_Exception *a1)
{
}

void sub_10016F310()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C908, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C908))
  {
    sub_100004950(qword_10089C8F0, "MB_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8F0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C908);
  }
}

void sub_10016F3A8(_Unwind_Exception *a1)
{
}

void sub_10016F3C0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C928, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C928))
  {
    sub_100004950(qword_10089C910, "D");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C910, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C928);
  }
}

void sub_10016F458(_Unwind_Exception *a1)
{
}

void sub_10016F470()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C948, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C948))
  {
    sub_100004950(&qword_10089C930, "A");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C930, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C948);
  }
}

void sub_10016F508(_Unwind_Exception *a1)
{
}

void sub_10016F520()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C968, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C968))
  {
    sub_100004950(qword_10089C950, "FAS.bin");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C950, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C968);
  }
}

void sub_10016F5B8(_Unwind_Exception *a1)
{
}

void sub_10016F5D0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C988, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C988))
  {
    qword_10089C970 = 0;
    qword_10089C978 = 0;
    qword_10089C980 = 0;
    uint64_t v0 = operator new(0x30uLL);
    qword_10089C978 = (uint64_t)(v0 + 3);
    qword_10089C980 = (uint64_t)(v0 + 3);
    *uint64_t v0 = xmmword_1004B5EC8;
    v0[1] = unk_1004B5ED8;
    v0[2] = xmmword_1004B5EE8;
    qword_10089C970 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_100008CAC, &qword_10089C970, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C988);
  }
}

void sub_10016F68C(_Unwind_Exception *a1)
{
}

void sub_10016F6A4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089D768, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089D768))
  {
    sub_100004950(&xmmword_10089D750, "");
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10089D750, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089D768);
  }
}

void sub_10016F73C(_Unwind_Exception *a1)
{
}

uint64_t sub_10016F754()
{
  sub_10039D144();
  uint64_t v0 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v1 = *(_OWORD *)&v0->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v0->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v1;
  v0->__r_.__value_.__l.__size_ = 0;
  v0->__r_.__value_.__r.__words[2] = 0;
  v0->__r_.__value_.__r.__words[0] = 0;
  int8x8_t v2 = std::string::append(&v38, ".bin");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  qword_1008A1CF8 = v2->__r_.__value_.__r.__words[2];
  xmmword_1008A1CE8 = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1CE8, (void *)&_mh_execute_header);
  sub_10039D144();
  uint8x8_t v4 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  unsigned int v6 = std::string::append(&v38, ".bin");
  long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  qword_1008A1D10 = v6->__r_.__value_.__r.__words[2];
  xmmword_1008A1D00 = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1D00, (void *)&_mh_execute_header);
  sub_10039D144();
  unint64_t v8 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  uint64_t v10 = std::string::append(&v38, ".bin");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  qword_1008A1D28 = v10->__r_.__value_.__r.__words[2];
  xmmword_1008A1D18 = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1D18, (void *)&_mh_execute_header);
  sub_10039D144();
  unint64_t v12 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  float v14 = std::string::append(&v38, ".bin");
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  qword_1008A1D40 = v14->__r_.__value_.__r.__words[2];
  xmmword_1008A1D30 = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1D30, (void *)&_mh_execute_header);
  sub_10039D144();
  unint64_t v16 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  size_t v18 = std::string::append(&v38, ".bin");
  long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  qword_1008A1D58 = v18->__r_.__value_.__r.__words[2];
  xmmword_1008A1D48 = v19;
  v18->__r_.__value_.__l.__size_ = 0;
  v18->__r_.__value_.__r.__words[2] = 0;
  v18->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1D48, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v20 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v21;
  v20->__r_.__value_.__l.__size_ = 0;
  v20->__r_.__value_.__r.__words[2] = 0;
  v20->__r_.__value_.__r.__words[0] = 0;
  unsigned int v22 = std::string::append(&v38, ".bin");
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  qword_1008A1D70 = v22->__r_.__value_.__r.__words[2];
  xmmword_1008A1D60 = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1D60, (void *)&_mh_execute_header);
  sub_10039D144();
  long long v24 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v25;
  v24->__r_.__value_.__l.__size_ = 0;
  v24->__r_.__value_.__r.__words[2] = 0;
  v24->__r_.__value_.__r.__words[0] = 0;
  long long v26 = std::string::append(&v38, ".bin");
  long long v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
  qword_1008A1D88 = v26->__r_.__value_.__r.__words[2];
  xmmword_1008A1D78 = v27;
  v26->__r_.__value_.__l.__size_ = 0;
  v26->__r_.__value_.__r.__words[2] = 0;
  v26->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1D78, (void *)&_mh_execute_header);
  sub_10039D144();
  char v28 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v29;
  v28->__r_.__value_.__l.__size_ = 0;
  v28->__r_.__value_.__r.__words[2] = 0;
  v28->__r_.__value_.__r.__words[0] = 0;
  long long v30 = std::string::append(&v38, ".bin");
  long long v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
  qword_1008A1DA0 = v30->__r_.__value_.__r.__words[2];
  xmmword_1008A1D90 = v31;
  v30->__r_.__value_.__l.__size_ = 0;
  v30->__r_.__value_.__r.__words[2] = 0;
  v30->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1D90, (void *)&_mh_execute_header);
  sub_10039D144();
  long long v32 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v32->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v33;
  v32->__r_.__value_.__l.__size_ = 0;
  v32->__r_.__value_.__r.__words[2] = 0;
  v32->__r_.__value_.__r.__words[0] = 0;
  long long v34 = std::string::append(&v38, ".bin");
  long long v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
  qword_1008A1DB8 = v34->__r_.__value_.__r.__words[2];
  xmmword_1008A1DA8 = v35;
  v34->__r_.__value_.__l.__size_ = 0;
  v34->__r_.__value_.__r.__words[2] = 0;
  v34->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  return __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1DA8, (void *)&_mh_execute_header);
}

void sub_10016FD84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10016FDF8@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100853F70[a1]);
}

void *sub_10016FE0C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100853FC8[a1]);
}

void *sub_10016FE20@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100854010[a1]);
}

void *sub_10016FE34@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100854030[a1]);
}

uint64_t sub_10016FE48(uint64_t a1, long long *a2, long long *a3, uint64_t a4, void *a5, uint64_t *a6)
{
  id v11 = a5;
  *(void *)a1 = off_1008538A8;
  *(void *)(a1 + 8) = off_100853948;
  *(void *)(a1 + 16) = off_100853988;
  *(void *)(a1 + 24) = off_1008539B0;
  *(void *)(a1 + 32) = 850045863;
  *(_OWORD *)(a1 + 4sub_100149BDC(&a9, 0) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 1018212795;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 12sub_100149BDC(&a9, 0) = 0u;
  *(void *)(a1 + 136) = 0;
  unint64_t v12 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_USER_INITIATED, 0);
  *(void *)(a1 + 144) = dispatch_queue_create("com.apple.RoseServiceProviderQueue", v12);

  id v13 = v11;
  *(void *)(a1 + 152) = v13;
  sub_100175430((void *)(a1 + 160));
  *(void *)(a1 + 176) = a4;
  float v14 = *(std::__shared_weak_count **)(a1 + 168);
  uint64_t v31 = *(void *)(a1 + 160);
  long long v32 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  long long v15 = (std::__shared_weak_count *)a6[1];
  uint64_t v29 = *a6;
  long long v30 = v15;
  if (v15) {
    atomic_fetch_add_explicit(&v15->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_100181D08(a1 + 184, a1, &v31, &v29);
  if (v30) {
    sub_10001A970(v30);
  }
  if (v32) {
    sub_10001A970(v32);
  }
  unint64_t v16 = *(std::__shared_weak_count **)(a1 + 168);
  uint64_t v27 = *(void *)(a1 + 160);
  char v28 = v16;
  if (v16) {
    atomic_fetch_add_explicit(&v16->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  long long v17 = (std::__shared_weak_count *)a6[1];
  uint64_t v25 = *a6;
  long long v26 = v17;
  if (v17) {
    atomic_fetch_add_explicit(&v17->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_100167E88(a1 + 464, a1 + 8, &v27, &v25);
  if (v26) {
    sub_10001A970(v26);
  }
  if (v28) {
    sub_10001A970(v28);
  }
  long long v18 = *a2;
  long long v19 = a2[2];
  *(_OWORD *)(a1 + 2616) = a2[1];
  *(_OWORD *)(a1 + 2632) = v19;
  *(_OWORD *)(a1 + 260sub_100149BDC(&a9, 0) = v18;
  long long v20 = *a3;
  long long v21 = a3[1];
  *(void *)(a1 + 268sub_100149BDC(&a9, 0) = *((void *)a3 + 4);
  *(_OWORD *)(a1 + 2648) = v20;
  *(_OWORD *)(a1 + 2664) = v21;
  *(_OWORD *)(a1 + 2688) = xmmword_1004B6470;
  if (!v13)
  {
    long long v23 = "client_dispatch_queue";
    int v24 = 59;
    goto LABEL_22;
  }
  if (!a4)
  {
    long long v23 = "service_client";
    int v24 = 60;
LABEL_22:
    __assert_rtn("RoseServiceProvider", "RoseServiceProvider.mm", v24, v23);
  }
  sub_100170190(a1);

  return a1;
}

void sub_1001700F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::mutex *a9, uint64_t a10, std::__shared_weak_count *a11, uint64_t a12, std::__shared_weak_count *a13)
{
  if (a11) {
    sub_10001A970(a11);
  }
  if (a13) {
    sub_10001A970(a13);
  }
  sub_100181DAC(v16);
  long long v18 = *(std::__shared_weak_count **)(v13 + 168);
  if (v18) {
    sub_10001A970(v18);
  }

  std::condition_variable::~condition_variable(v14);
  std::mutex::~mutex(a9);

  _Unwind_Resume(a1);
}

void sub_100170190(uint64_t a1)
{
  int8x8_t v2 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)unsigned int v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "ConfigureProxyObjects called", v6, 2u);
  }
  if ((sub_100181DE8(a1 + 184, (uint64_t *)(a1 + 2600)) & 1) == 0)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "Failed to setup proxy objects");
  }
  uint64_t v3 = *(void *)(a1 + 2600);
  uint64_t v4 = *(void *)(a1 + 2608);
  std::mutex::lock((std::mutex *)(v3 + 24));
  *(void *)(v3 + 88) = a1 + 464;
  std::mutex::unlock((std::mutex *)(v3 + 24));
  std::mutex::lock((std::mutex *)(v4 + 24));
  *(void *)(v4 + 88) = a1 + 464;
  std::mutex::unlock((std::mutex *)(v4 + 24));
}

void sub_100170288(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1001702A0(uint64_t a1)
{
  *(void *)a1 = off_1008538A8;
  *(void *)(a1 + 8) = off_100853948;
  *(void *)(a1 + 16) = off_100853988;
  *(void *)(a1 + 24) = off_1008539B0;
  sub_100167FBC(a1 + 464);
  sub_100181DAC(a1 + 184);
  int8x8_t v2 = *(std::__shared_weak_count **)(a1 + 168);
  if (v2) {
    sub_10001A970(v2);
  }

  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 96));
  std::mutex::~mutex((std::mutex *)(a1 + 32));
  return a1;
}

uint64_t sub_100170380(uint64_t a1)
{
  return sub_1001702A0(a1 - 8);
}

uint64_t sub_100170388(uint64_t a1)
{
  return sub_1001702A0(a1 - 16);
}

uint64_t sub_100170390(uint64_t a1)
{
  return sub_1001702A0(a1 - 24);
}

void sub_100170398(uint64_t a1)
{
  sub_1001702A0(a1);

  operator delete();
}

void sub_1001703D0(uint64_t a1)
{
  sub_1001702A0(a1 - 8);

  operator delete();
}

void sub_10017040C(uint64_t a1)
{
  sub_1001702A0(a1 - 16);

  operator delete();
}

void sub_100170448(uint64_t a1)
{
  sub_1001702A0(a1 - 24);

  operator delete();
}

uint64_t sub_100170484(uint64_t a1)
{
  int8x8_t v2 = *(NSObject **)(a1 + 144);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1001705C8;
  v4[3] = &unk_100852BB8;
  void v4[4] = a1;
  v4[5] = a1;
  dispatch_async(v2, v4);
  (*(void (**)(void))(**(void **)(a1 + 2648) + 16))(*(void *)(a1 + 2648));
  (*(void (**)(void))(**(void **)(a1 + 2656) + 16))(*(void *)(a1 + 2656));
  (*(void (**)(void))(**(void **)(a1 + 2664) + 16))(*(void *)(a1 + 2664));
  (*(void (**)(void))(**(void **)(a1 + 2672) + 16))(*(void *)(a1 + 2672));
  return (*(uint64_t (**)(void))(**(void **)(a1 + 2680) + 16))(*(void *)(a1 + 2680));
}

void sub_1001705C8(uint64_t a1)
{
  if ((sub_100181ECC(*(void *)(a1 + 32) + 184) & 1) == 0)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10041249C();
    }
    uint64_t v2 = *(void *)(a1 + 40);
    atomic_store(3u, (unsigned int *)(v2 + 2692));
    uint64_t v3 = *(NSObject **)(v2 + 152);
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_1001750B8;
    v4[3] = &unk_100852BB8;
    void v4[4] = v2;
    v4[5] = 0x100000003;
    dispatch_async(v3, v4);
  }
}

uint64_t sub_100170694(void **a1)
{
  (*(void (**)(void *))(*a1[331] + 24))(a1[331]);
  (*(void (**)(void *))(*a1[332] + 24))(a1[332]);
  (*(void (**)(void *))(*a1[333] + 24))(a1[333]);
  (*(void (**)(void *))(*a1[334] + 24))(a1[334]);
  uint64_t v2 = *(uint64_t (**)(void))(*a1[335] + 24);

  return v2();
}

void sub_100170788(uint64_t a1@<X0>, const void *a2@<X1>, uint64_t a3@<X8>)
{
  unsigned int v4 = atomic_load((unsigned int *)(a1 + 2692));
  BOOL v5 = v4 > 4;
  int v6 = (1 << v4) & 0x19;
  if (!v5 && v6 != 0)
  {
    sub_100004950(__src, "Service is not ready.");
    *(void *)long long buf = 109;
    if (SHIBYTE(__src[2]) < 0)
    {
      sub_100002DE4(&v52, __src[0], (unint64_t)__src[1]);
      uint64_t v8 = *(void *)buf;
    }
    else
    {
      long long v52 = *(_OWORD *)__src;
      uint64_t v53 = __src[2];
      uint64_t v8 = 109;
    }
    uint64_t v46 = v8;
    *(_OWORD *)std::string __p = v52;
    int v48 = v53;
    long long v52 = 0uLL;
    uint64_t v53 = 0;
    char v49 = 1;
    *(unsigned char *)(a3 + 8) = 0;
    *(unsigned char *)(a3 + 64sub_100149BDC(&a9, 0) = 0;
    *(_DWORD *)(a3 + 648) = 1;
    sub_1001750EC((unsigned char *)(a3 + 656), (uint64_t)&v46);
    if (v49 && SHIBYTE(v48) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v53) < 0) {
      operator delete((void *)v52);
    }
    if ((SHIBYTE(__src[2]) & 0x80000000) == 0) {
      return;
    }
    long long v9 = __src[0];
    goto LABEL_15;
  }
  sub_100189A00(*(void *)(a1 + 160), a2, (uint64_t)__src);
  if (!LOBYTE(__src[79]))
  {
    sub_100004950(v35, "fServiceRequestsDatabase->insertServiceRequest failed.");
    *(void *)long long buf = 999;
    if (SHIBYTE(v36) < 0)
    {
      sub_100002DE4(&v52, v35[0], (unint64_t)v35[1]);
      uint64_t v23 = *(void *)buf;
    }
    else
    {
      long long v52 = *(_OWORD *)v35;
      uint64_t v53 = v36;
      uint64_t v23 = 999;
    }
    uint64_t v27 = v23;
    *(_OWORD *)char v28 = v52;
    uint64_t v29 = v53;
    long long v52 = 0uLL;
    uint64_t v53 = 0;
    char v30 = 1;
    *(unsigned char *)(a3 + 8) = 0;
    *(unsigned char *)(a3 + 64sub_100149BDC(&a9, 0) = 0;
    *(_DWORD *)(a3 + 648) = 1;
    sub_1001750EC((unsigned char *)(a3 + 656), (uint64_t)&v27);
    if (v30 && SHIBYTE(v29) < 0) {
      operator delete(v28[0]);
    }
    if (SHIBYTE(v53) < 0) {
      operator delete((void *)v52);
    }
    if ((SHIBYTE(v36) & 0x80000000) == 0) {
      return;
    }
    long long v9 = v35[0];
LABEL_15:
    operator delete(v9);
    return;
  }
  id v11 = (id)qword_1008ABDE0;
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    if (!LOBYTE(__src[79])) {
      sub_10000AE44();
    }
    *(_DWORD *)long long buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = LOWORD(__src[0]);
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "[RoseServiceProvider] will ignore any RequestInvalidated notifications for ticket ID: %d", buf, 8u);
  }

  if (!LOBYTE(__src[79])) {
    sub_10000AE44();
  }
  atomic_store(LOWORD(__src[0]), (unsigned int *)(a1 + 2700));
  atomic_store(0, (unsigned int *)(a1 + 2688));
  __lk.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 32);
  __lk.__owns_ = 1;
  std::mutex::lock((std::mutex *)(a1 + 32));
  if (!LOBYTE(__src[79])) {
    sub_10000AE44();
  }
  memcpy(v55, __src, sizeof(v55));
  unint64_t v12 = *(NSObject **)(a1 + 144);
  *(void *)long long buf = _NSConcreteStackBlock;
  *(void *)&long long v52 = 3221225472;
  *((void *)&v52 + 1) = sub_100171E10;
  uint64_t v53 = &unk_1008539F8;
  uint64_t v54 = a1;
  dispatch_async(v12, buf);
  v13.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_ + 5000000000;
  do
  {
    if (atomic_load((unsigned int *)(a1 + 2688))) {
      goto LABEL_40;
    }
    if (std::chrono::steady_clock::now().__d_.__rep_ >= v13.__d_.__rep_) {
      break;
    }
    v15.__d_.__rep_ = v13.__d_.__rep_ - std::chrono::steady_clock::now().__d_.__rep_;
    if (v15.__d_.__rep_ >= 1)
    {
      std::chrono::steady_clock::now();
      v16.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
      if (v16.__d_.__rep_)
      {
        if (v16.__d_.__rep_ < 1)
        {
          if ((unint64_t)v16.__d_.__rep_ < 0xFFDF3B645A1CAC09)
          {
            std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v17 = 0x8000000000000000;
            goto LABEL_36;
          }
        }
        else if ((unint64_t)v16.__d_.__rep_ > 0x20C49BA5E353F7)
        {
          std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v17 = 0x7FFFFFFFFFFFFFFFLL;
          goto LABEL_34;
        }
        std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v17 = 1000 * v16.__d_.__rep_;
      }
      else
      {
        std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v17 = 0;
      }
LABEL_34:
      if (v17 > (v15.__d_.__rep_ ^ 0x7FFFFFFFFFFFFFFFLL))
      {
        v18.__d_.__rep_ = 0x7FFFFFFFFFFFFFFFLL;
LABEL_37:
        std::condition_variable::__do_timed_wait((std::condition_variable *)(a1 + 96), &__lk, v18);
        std::chrono::steady_clock::now();
        continue;
      }
LABEL_36:
      v18.__d_.__rep_ = v17 + v15.__d_.__rep_;
      goto LABEL_37;
    }
  }
  while (std::chrono::steady_clock::now().__d_.__rep_ < v13.__d_.__rep_);
  if (atomic_load((unsigned int *)(a1 + 2688)))
  {
LABEL_40:
    unsigned int v20 = atomic_load((unsigned int *)(a1 + 2688));
    if (v20 == 1)
    {
      atomic_store(0xFFFFFFFF, (unsigned int *)(a1 + 2700));
      long long v21 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "registerForService: fNewRequestSuccess success is true.", buf, 2u);
      }
      memcpy((void *)(a3 + 8), __src, 0x280uLL);
      v41[0] = 0;
      char v44 = 0;
      *(_DWORD *)(a3 + 648) = 1;
      sub_1001750EC((unsigned char *)(a3 + 656), (uint64_t)v41);
      if (v44 && v43 < 0)
      {
        unsigned int v22 = v42;
LABEL_77:
        operator delete(v22);
        goto LABEL_78;
      }
      goto LABEL_78;
    }
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_100412504();
    }
    sub_100004950(v35, "ingestServiceRequest failed");
    *(void *)long long buf = 999;
    if (SHIBYTE(v36) < 0)
    {
      sub_100002DE4(&v52, v35[0], (unint64_t)v35[1]);
      uint64_t v24 = *(void *)buf;
    }
    else
    {
      long long v52 = *(_OWORD *)v35;
      uint64_t v53 = v36;
      uint64_t v24 = 999;
    }
    uint64_t v37 = v24;
    long long v38 = v52;
    long long v39 = v53;
    long long v52 = 0uLL;
    uint64_t v53 = 0;
    char v40 = 1;
    *(unsigned char *)(a3 + 8) = 0;
    *(unsigned char *)(a3 + 64sub_100149BDC(&a9, 0) = 0;
    *(_DWORD *)(a3 + 648) = 1;
    sub_1001750EC((unsigned char *)(a3 + 656), (uint64_t)&v37);
    if (v40 && SHIBYTE(v39) < 0)
    {
      long long v26 = (void *)v38;
      goto LABEL_72;
    }
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_1004124D0();
    }
    sub_100004950(v35, "Timed out while waiting for ingestServiceRequest to complete");
    *(void *)long long buf = 110;
    if (SHIBYTE(v36) < 0)
    {
      sub_100002DE4(&v52, v35[0], (unint64_t)v35[1]);
      uint64_t v25 = *(void *)buf;
    }
    else
    {
      long long v52 = *(_OWORD *)v35;
      uint64_t v53 = v36;
      uint64_t v25 = 110;
    }
    uint64_t v31 = v25;
    *(_OWORD *)long long v32 = v52;
    long long v33 = v53;
    long long v52 = 0uLL;
    uint64_t v53 = 0;
    char v34 = 1;
    *(unsigned char *)(a3 + 8) = 0;
    *(unsigned char *)(a3 + 64sub_100149BDC(&a9, 0) = 0;
    *(_DWORD *)(a3 + 648) = 1;
    sub_1001750EC((unsigned char *)(a3 + 656), (uint64_t)&v31);
    if (v34 && SHIBYTE(v33) < 0)
    {
      long long v26 = v32[0];
LABEL_72:
      operator delete(v26);
    }
  }
  if (SHIBYTE(v53) < 0) {
    operator delete((void *)v52);
  }
  if (SHIBYTE(v36) < 0)
  {
    unsigned int v22 = v35[0];
    goto LABEL_77;
  }
LABEL_78:
  if (__lk.__owns_) {
    std::mutex::unlock(__lk.__m_);
  }
}

void sub_100170E0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,std::mutex *a35,char a36)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  if (a36) {
    std::mutex::unlock(a35);
  }
  _Unwind_Resume(a1);
}

void sub_100170F54(uint64_t a1, uint64_t a2, int a3)
{
  sub_100189774(*(void *)(a1 + 160), a2, v17);
  if (v20)
  {
    if (v19) {
      BOOL v6 = a3 == 0;
    }
    else {
      BOOL v6 = 1;
    }
    if (v6)
    {
      if ((v18 - 1) > 9) {
        int v7 = 0;
      }
      else {
        int v7 = dword_1004B69C8[v18 - 1];
      }
      double Current = CFAbsoluteTimeGetCurrent();
      sub_1001BE748(v7, a2, a3, Current);
      if (!sub_100189E38(*(void *)(a1 + 160), a2))
      {
        uint64_t v10 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
          sub_100412608(a2, v10, v11, v12, v13, v14, v15, v16);
        }
      }
    }
    else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
    {
      sub_1004125A0();
    }
  }
  else if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_100412538();
  }
}

void sub_1001710B0(uint64_t a1@<X0>, __int16 a2@<W1>, long long *a3@<X2>, uint64_t a4@<X8>)
{
  unsigned int v5 = atomic_load((unsigned int *)(a1 + 2692));
  BOOL v6 = v5 > 4;
  int v7 = (1 << v5) & 0x19;
  if (!v6 && v7 != 0)
  {
    sub_100004950(buf, "Service is not ready.");
    uint64_t v41 = 109;
    if ((buf[23] & 0x80000000) != 0)
    {
      sub_100002DE4(&v42, *(void **)buf, *(unint64_t *)&buf[8]);
      uint64_t v9 = v41;
    }
    else
    {
      long long v42 = *(_OWORD *)buf;
      uint64_t v43 = *(void *)&buf[16];
      uint64_t v9 = 109;
    }
    long long __p = v42;
    uint64_t v36 = v9;
    uint64_t v38 = v43;
    long long v42 = 0uLL;
    uint64_t v43 = 0;
    char v39 = 1;
    *(unsigned char *)(a4 + 8) = 0;
    *(_DWORD *)(a4 + 648) = 0;
    sub_1001750EC((unsigned char *)(a4 + 656), (uint64_t)&v36);
    if (v39 && SHIBYTE(v38) < 0) {
      operator delete((void *)__p);
    }
    if (SHIBYTE(v43) < 0) {
      operator delete((void *)v42);
    }
    if ((buf[23] & 0x80000000) != 0)
    {
      uint64_t v10 = *(void **)buf;
LABEL_15:
      operator delete(v10);
      return;
    }
    return;
  }
  sub_100189774(*(void *)(a1 + 160), a2, &v41);
  if (!v44)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_100412674();
    }
    sub_100004950(&v28, "Could not find ticket id in fServiceRequestsDatabase.");
    *(void *)long long buf = 108;
    if (SHIBYTE(v29) < 0)
    {
      sub_100002DE4(&buf[8], (void *)v28, *((unint64_t *)&v28 + 1));
      uint64_t v17 = *(void *)buf;
    }
    else
    {
      *(_OWORD *)&uint8_t buf[8] = v28;
      uint64_t v31 = v29;
      uint64_t v17 = 108;
    }
    uint64_t v20 = v17;
    long long v21 = *(_OWORD *)&buf[8];
    uint64_t v22 = v31;
    *(void *)&uint8_t buf[8] = 0;
    *(void *)&uint8_t buf[16] = 0;
    uint64_t v31 = 0;
    char v23 = 1;
    *(unsigned char *)(a4 + 8) = 0;
    *(_DWORD *)(a4 + 648) = 0;
    sub_1001750EC((unsigned char *)(a4 + 656), (uint64_t)&v20);
    if (v23 && SHIBYTE(v22) < 0)
    {
      char v19 = (void *)v21;
LABEL_40:
      operator delete(v19);
    }
LABEL_41:
    if (SHIBYTE(v31) < 0) {
      operator delete(*(void **)&buf[8]);
    }
    if (SHIBYTE(v29) < 0)
    {
      uint64_t v10 = (void *)v28;
      goto LABEL_15;
    }
    return;
  }
  if (v41 == 1)
  {
    uint64_t v14 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "[Warning] Got trigger start, but state is ServiceRequestState::Active. Proceeding to restart.", buf, 2u);
    }
  }
  uint64_t v15 = *(void *)(a1 + 160);
  v40[0] = off_100853DE0;
  v40[1] = a3;
  v40[3] = v40;
  BOOL v16 = sub_10018989C(v15, a2, (uint64_t)v40);
  sub_10017568C(v40);
  if (!v16)
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_1004126DC();
    }
    sub_100004950(&v28, "Error updating fServiceRequestsDatabase entry.");
    *(void *)long long buf = 999;
    if (SHIBYTE(v29) < 0)
    {
      sub_100002DE4(&buf[8], (void *)v28, *((unint64_t *)&v28 + 1));
      uint64_t v18 = *(void *)buf;
    }
    else
    {
      *(_OWORD *)&uint8_t buf[8] = v28;
      uint64_t v31 = v29;
      uint64_t v18 = 999;
    }
    long long v33 = *(_OWORD *)&buf[8];
    uint64_t v32 = v18;
    uint64_t v34 = v31;
    *(void *)&uint8_t buf[8] = 0;
    *(void *)&uint8_t buf[16] = 0;
    uint64_t v31 = 0;
    char v35 = 1;
    *(unsigned char *)(a4 + 8) = 0;
    *(_DWORD *)(a4 + 648) = 0;
    sub_1001750EC((unsigned char *)(a4 + 656), (uint64_t)&v32);
    if (v35 && SHIBYTE(v34) < 0)
    {
      char v19 = (void *)v33;
      goto LABEL_40;
    }
    goto LABEL_41;
  }
  sub_100182684(a1 + 184, a2, a3);
  v24[0] = 0;
  char v27 = 0;
  *(unsigned char *)(a4 + 8) = 1;
  *(_DWORD *)(a4 + 648) = 0;
  sub_1001750EC((unsigned char *)(a4 + 656), (uint64_t)v24);
  if (v27 && v26 < 0)
  {
    uint64_t v10 = v25;
    goto LABEL_15;
  }
}

void sub_1001714B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a25 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_100171594(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X8>)
{
  sub_100189774(*(void *)(a1 + 160), a2, v27);
  if (v28)
  {
    if (v27[0])
    {
      sub_100182B88(a1 + 184, a2);
      v14[0] = 0;
      char v17 = 0;
      *(unsigned char *)(a3 + 8) = 1;
      *(_DWORD *)(a3 + 648) = 0;
      sub_1001750EC((unsigned char *)(a3 + 656), (uint64_t)v14);
      if (v17 && v16 < 0)
      {
        BOOL v6 = v15;
LABEL_27:
        operator delete(v6);
        return;
      }
      return;
    }
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_100412710();
    }
    sub_100004950(v18, "Got trigger stop, but state is ServiceRequestState::Inactive.");
    uint64_t v20 = 111;
    if (SHIBYTE(v19) < 0)
    {
      sub_100002DE4(&v21, v18[0], (unint64_t)v18[1]);
      uint64_t v8 = v20;
    }
    else
    {
      long long v21 = *(_OWORD *)v18;
      uint64_t v22 = v19;
      uint64_t v8 = 111;
    }
    uint64_t v23 = v8;
    *(_OWORD *)long long __p = v21;
    uint64_t v25 = v22;
    long long v21 = 0uLL;
    uint64_t v22 = 0;
    char v26 = 1;
    *(unsigned char *)(a3 + 8) = 0;
    *(_DWORD *)(a3 + 648) = 0;
    sub_1001750EC((unsigned char *)(a3 + 656), (uint64_t)&v23);
    if (v26 && SHIBYTE(v25) < 0)
    {
      uint64_t v9 = __p[0];
      goto LABEL_22;
    }
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_100412674();
    }
    sub_100004950(v18, "Could not find ticket id in fServiceRequestsDatabase.");
    uint64_t v20 = 108;
    if (SHIBYTE(v19) < 0)
    {
      sub_100002DE4(&v21, v18[0], (unint64_t)v18[1]);
      uint64_t v7 = v20;
    }
    else
    {
      long long v21 = *(_OWORD *)v18;
      uint64_t v22 = v19;
      uint64_t v7 = 108;
    }
    uint64_t v10 = v7;
    long long v11 = v21;
    uint64_t v12 = v22;
    long long v21 = 0uLL;
    uint64_t v22 = 0;
    char v13 = 1;
    *(unsigned char *)(a3 + 8) = 0;
    *(_DWORD *)(a3 + 648) = 0;
    sub_1001750EC((unsigned char *)(a3 + 656), (uint64_t)&v10);
    if (v13 && SHIBYTE(v12) < 0)
    {
      uint64_t v9 = (void *)v11;
LABEL_22:
      operator delete(v9);
    }
  }
  if (SHIBYTE(v22) < 0) {
    operator delete((void *)v21);
  }
  if (SHIBYTE(v19) < 0)
  {
    BOOL v6 = v18[0];
    goto LABEL_27;
  }
}

void sub_100171804(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,char a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,char a46)
{
  if (a31 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100171894(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  BOOL v6 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 67109120;
    int v23 = a2;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "RoseServiceProvider::unregisterForService ticket: %d", buf, 8u);
  }
  sub_100189774(*(void *)(a1 + 160), a2, buf);
  if (v24)
  {
    sub_100182FEC(a1 + 184, a2);
    v18[0] = 0;
    char v21 = 0;
    *(unsigned char *)(a3 + 8) = 1;
    *(_DWORD *)(a3 + 648) = 0;
    sub_1001750EC((unsigned char *)(a3 + 656), (uint64_t)v18);
    if (v21 && v20 < 0)
    {
      uint64_t v7 = v19;
LABEL_19:
      operator delete(v7);
    }
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_100412744();
    }
    sub_100004950(v9, "Ticket ID not found in requests database.");
    uint64_t v11 = 108;
    if (SHIBYTE(v10) < 0)
    {
      sub_100002DE4(&v12, v9[0], (unint64_t)v9[1]);
      uint64_t v8 = v11;
    }
    else
    {
      long long v12 = *(_OWORD *)v9;
      uint64_t v13 = v10;
      uint64_t v8 = 108;
    }
    uint64_t v14 = v8;
    *(_OWORD *)long long __p = v12;
    uint64_t v16 = v13;
    long long v12 = 0uLL;
    uint64_t v13 = 0;
    char v17 = 1;
    *(unsigned char *)(a3 + 8) = 0;
    *(_DWORD *)(a3 + 648) = 0;
    sub_1001750EC((unsigned char *)(a3 + 656), (uint64_t)&v14);
    if (v17 && SHIBYTE(v16) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v13) < 0) {
      operator delete((void *)v12);
    }
    if (SHIBYTE(v10) < 0)
    {
      uint64_t v7 = v9[0];
      goto LABEL_19;
    }
  }
}

void sub_100171A8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,char a38)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100171AFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 160);
  v4[0] = off_100853E70;
  v4[1] = a2;
  v4[3] = v4;
  sub_100189954(v2, (uint64_t)v4);
  return sub_100175840(v4);
}

void sub_100171B84(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100175840((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_100171B98(uint64_t a1, __int16 *a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_1004127AC();
  }
  __int16 v11 = *a2;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  long long v12 = 0;
  sub_10016D488(&v12, *((const void **)a2 + 1), *((void *)a2 + 2), *((void *)a2 + 2) - *((void *)a2 + 1));
  long long v15 = *((_OWORD *)a2 + 2);
  unsigned int v4 = *(NSObject **)(a1 + 152);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  block[2] = sub_100171CE0;
  block[3] = &unk_1008539C8;
  block[4] = a1;
  __int16 v6 = v11;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  long long __p = 0;
  sub_10016D488(&__p, v12, (uint64_t)v13, v13 - (unsigned char *)v12);
  long long v10 = v15;
  dispatch_async(v4, block);
  if (__p)
  {
    uint64_t v8 = __p;
    operator delete(__p);
  }
  if (v12)
  {
    uint64_t v13 = v12;
    operator delete(v12);
  }
}

void sub_100171CC4(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)(v1 - 72);
  if (v3)
  {
    *(void *)(v1 - 64) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100171CE0(uint64_t a1)
{
  return (*(uint64_t (**)(void, uint64_t))(**(void **)(*(void *)(a1 + 32) + 176) + 72))(*(void *)(*(void *)(a1 + 32) + 176), a1 + 40);
}

__n128 sub_100171D14(uint64_t a1, uint64_t a2)
{
  __int16 v3 = *(_WORD *)(a2 + 40);
  *(void *)(a1 + 48) = 0;
  uint64_t v4 = a1 + 48;
  *(_WORD *)(a1 + 4sub_100149BDC(&a9, 0) = v3;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  sub_10016D488((void *)(a1 + 48), *(const void **)(a2 + 48), *(void *)(a2 + 56), *(void *)(a2 + 56) - *(void *)(a2 + 48));
  __n128 result = *(__n128 *)(a2 + 72);
  *(__n128 *)(v4 + 24) = result;
  return result;
}

void sub_100171D64(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(void *)(a1 + 56) = v2;
    operator delete(v2);
  }
}

void sub_100171D7C(uint64_t a1, __int16 *a2)
{
}

uint64_t sub_100171D84(uint64_t a1, uint64_t a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEBUG)) {
    sub_1004127EC();
  }
  uint64_t result = *(void *)(a1 + 2680);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 32))(result, a2);
  }
  return result;
}

uint64_t sub_100171E08(uint64_t a1, uint64_t a2)
{
  return sub_100171D84(a1 - 24, a2);
}

void sub_100171E10(uint64_t a1)
{
}

void sub_100171E20(uint64_t a1, _WORD *a2)
{
  unsigned int v4 = atomic_load((unsigned int *)(a1 + 2692));
  BOOL v5 = v4 >= 4;
  BOOL v7 = v4 == 4;
  int v6 = (1 << v4) & 0x19;
  BOOL v7 = !v7 && v5 || v6 == 0;
  if (v7)
  {
    sub_100172CD4();
    uint64_t v8 = qword_1008ABDE0;
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "[RoseServiceProvider] Service request passed prelimenary checks, passing to the scheduler.", v9, 2u);
    }
    sub_1001821D0(a1 + 184, a2);
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
      sub_10041282C();
    }
    unsigned __int16 v10 = *a2;
    uint64_t v11 = 8;
    sub_100189B7C(*(void *)(a1 + 160), v10);
    sub_100172C40(a1, (uint64_t *)&v10);
  }
}

uint64_t sub_100171F20(uint64_t a1, long long *a2)
{
  long long v4 = a2[1];
  long long v20 = *a2;
  long long v21 = v4;
  long long v22 = a2[2];
  sub_1001751A0(v23, (uint64_t)(a2 + 3));
  sub_10016E330(v24, (uint64_t)(a2 + 38));
  sub_1001751F8(v27, (__n128 *)((char *)a2 + 760));
  memcpy(v31, a2 + 55, sizeof(v31));
  BOOL v5 = *(NSObject **)(a1 + 152);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  long long v8 = v20;
  long long v9 = v21;
  block[2] = sub_100172174;
  block[3] = &unk_100853A18;
  block[4] = a1;
  long long v10 = v22;
  sub_1001751A0(v11, (uint64_t)v23);
  sub_10016E330(v12, (uint64_t)v24);
  sub_1001751F8(v15, v27);
  memcpy(v19, v31, sizeof(v19));
  dispatch_async(v5, block);
  if (v18 && __p)
  {
    char v17 = __p;
    operator delete(__p);
  }
  if (v14) {
    sub_10003E96C((uint64_t)v13, v13[1]);
  }
  sub_10015DC28((uint64_t)v11);
  if (v30 && v28)
  {
    uint64_t v29 = v28;
    operator delete(v28);
  }
  if (v26) {
    sub_10003E96C((uint64_t)v25, v25[1]);
  }
  return sub_10015DC28((uint64_t)v23);
}

void sub_100172108(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  if (LOBYTE(STACK[0x320])) {
    sub_100412860((uint64_t)va);
  }
  sub_10015DC28(v2);
  sub_10016B718((uint64_t)&STACK[0x5E0]);
  _Unwind_Resume(a1);
}

uint64_t sub_100172174(uint64_t a1)
{
  return (*(uint64_t (**)(void, uint64_t))(**(void **)(*(void *)(a1 + 32) + 176) + 16))(*(void *)(*(void *)(a1 + 32) + 176), a1 + 40);
}

void *sub_1001721A8(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 40);
  long long v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = v5;
  *(_OWORD *)(a1 + 4sub_100149BDC(&a9, 0) = v4;
  sub_1001751A0((unsigned char *)(a1 + 88), a2 + 88);
  sub_10016E330((unsigned char *)(a1 + 648), a2 + 648);
  sub_1001751F8((__n128 *)(a1 + 800), (__n128 *)(a2 + 800));

  return memcpy((void *)(a1 + 920), (const void *)(a2 + 920), 0x239uLL);
}

void sub_100172230(_Unwind_Exception *a1)
{
  if (*(unsigned char *)(v2 + 792)) {
    sub_1004128A8(v2);
  }
  sub_10015DC28(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10017225C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 912))
  {
    uint64_t v2 = *(void **)(a1 + 872);
    if (v2)
    {
      *(void *)(a1 + 88sub_100149BDC(&a9, 0) = v2;
      operator delete(v2);
    }
  }
  if (*(unsigned char *)(a1 + 792)) {
    sub_10003E96C(a1 + 664, *(void **)(a1 + 672));
  }

  return sub_10015DC28(a1 + 88);
}

uint64_t sub_1001722BC(uint64_t a1, long long *a2)
{
  return sub_100171F20(a1 - 8, a2);
}

__n128 sub_1001722C4(uint64_t a1, long long *a2)
{
  long long v2 = a2[6];
  long long v18 = a2[7];
  long long v3 = a2[9];
  long long v19 = a2[8];
  long long v20 = v3;
  long long v21 = a2[10];
  long long v4 = a2[2];
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v14 = a2[3];
  long long v15 = v5;
  long long v16 = v6;
  long long v17 = v2;
  long long v7 = a2[1];
  long long v11 = *a2;
  long long v12 = v7;
  long long v13 = v4;
  long long v8 = *(NSObject **)(a1 + 152);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100172374;
  block[3] = &unk_100853A48;
  block[4] = a1;
  dispatch_async(v8, block);
  return result;
}

uint64_t sub_100172374(uint64_t a1)
{
  return (*(uint64_t (**)(void, uint64_t))(**(void **)(*(void *)(a1 + 32) + 176) + 24))(*(void *)(*(void *)(a1 + 32) + 176), a1 + 40);
}

void sub_1001723A8(uint64_t a1, long long *a2)
{
  long long v2 = a2[6];
  long long v18 = a2[7];
  long long v3 = a2[9];
  long long v19 = a2[8];
  long long v20 = v3;
  long long v21 = a2[10];
  long long v4 = a2[2];
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v14 = a2[3];
  long long v15 = v5;
  long long v16 = v6;
  long long v17 = v2;
  long long v7 = a2[1];
  long long v11 = *a2;
  long long v12 = v7;
  uint64_t v8 = a1 - 8;
  long long v13 = v4;
  long long v9 = *(NSObject **)(a1 + 144);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100172374;
  block[3] = &unk_100853A48;
  block[4] = v8;
  dispatch_async(v9, block);
}

void sub_100172458(uint64_t a1, long long *a2)
{
  long long v2 = a2[1];
  long long v5 = *a2;
  long long v6 = v2;
  long long v7 = a2[2];
  long long v3 = *(NSObject **)(a1 + 152);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001724DC;
  block[3] = &unk_100853A68;
  block[4] = a1;
  dispatch_async(v3, block);
}

uint64_t sub_1001724DC(uint64_t a1)
{
  return (*(uint64_t (**)(void, uint64_t))(**(void **)(*(void *)(a1 + 32) + 176) + 32))(*(void *)(*(void *)(a1 + 32) + 176), a1 + 40);
}

void sub_100172510(uint64_t a1, long long *a2)
{
  long long v2 = a2[1];
  long long v6 = *a2;
  long long v7 = v2;
  uint64_t v3 = a1 - 8;
  long long v8 = a2[2];
  long long v4 = *(NSObject **)(a1 + 144);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001724DC;
  block[3] = &unk_100853A68;
  block[4] = v3;
  dispatch_async(v4, block);
}

void sub_100172594(uint64_t a1, long long *a2)
{
  long long v2 = a2[1];
  long long v6 = *a2;
  long long v7 = v2;
  long long v3 = a2[3];
  long long v8 = a2[2];
  long long v9 = v3;
  long long v4 = *(NSObject **)(a1 + 152);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100172618;
  block[3] = &unk_100853A88;
  block[4] = a1;
  dispatch_async(v4, block);
}

uint64_t sub_100172618(uint64_t a1)
{
  return (*(uint64_t (**)(void, uint64_t))(**(void **)(*(void *)(a1 + 32) + 176) + 40))(*(void *)(*(void *)(a1 + 32) + 176), a1 + 40);
}

void sub_10017264C(uint64_t a1, long long *a2)
{
  long long v2 = a2[1];
  long long v7 = *a2;
  long long v8 = v2;
  long long v3 = a2[3];
  long long v9 = a2[2];
  long long v10 = v3;
  uint64_t v4 = a1 - 8;
  long long v5 = *(NSObject **)(a1 + 144);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100172618;
  block[3] = &unk_100853A88;
  block[4] = v4;
  dispatch_async(v5, block);
}

void sub_1001726D0(uint64_t a1, long long *a2)
{
  long long v17 = *a2;
  char v18 = *((unsigned char *)a2 + 16);
  sub_1001752CC((uint64_t)v19, (uint64_t)a2 + 24);
  long long v25 = *(long long *)((char *)a2 + 104);
  long long v26 = *(long long *)((char *)a2 + 120);
  v27[0] = *(long long *)((char *)a2 + 136);
  *(_OWORD *)((char *)v27 + 9) = *(long long *)((char *)a2 + 145);
  long long v24 = *(long long *)((char *)a2 + 88);
  uint64_t v4 = *(NSObject **)(a1 + 144);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3321888768;
  v5[2] = sub_100172854;
  v5[3] = &unk_100853AA8;
  v5[4] = a1;
  char v7 = v18;
  long long v6 = v17;
  sub_1001752CC((uint64_t)&v8, (uint64_t)v19);
  long long v15 = v26;
  v16[0] = v27[0];
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v27 + 9);
  long long v13 = v24;
  long long v14 = v25;
  dispatch_async(v4, v5);
  if (v12 && v11 && v10 < 0) {
    operator delete(__p);
  }
  if (v23 && v22 && v21 < 0) {
    operator delete(v20);
  }
}

void sub_100172828(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,void *__p,uint64_t a41,int a42,__int16 a43,char a44,char a45,char a46,uint64_t a47,char a48)
{
  if (a48 && a46 && a45 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100172854(uint64_t a1)
{
}

void sub_100172864(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v8[0]) = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "[RoseServiceProvider] _handleSchedulerUpdate", (uint8_t *)v8, 2u);
  }
  switch(*(_DWORD *)a2)
  {
    case 0:
      exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
      std::runtime_error::runtime_error(exception, "Unspecified scheduler update type");
    case 1:
      if (!*(unsigned char *)(a2 + 16)) {
        sub_1004128B8();
      }
      sub_1001738B0(a1, (unsigned __int16 *)(a2 + 4));
      break;
    case 2:
      if (!*(unsigned char *)(a2 + 80)) {
        sub_1004128E4();
      }
      sub_10017434C(a1, a2 + 24);
      break;
    case 3:
      if (!*(unsigned char *)(a2 + 112)) {
        sub_100412910();
      }
      sub_100173524(a1, a2 + 88);
      break;
    case 4:
      if (!*(unsigned char *)(a2 + 120)) {
        sub_10041293C();
      }
      int v5 = *(_DWORD *)(a2 + 116);
      long long v6 = *(NSObject **)(a1 + 152);
      v8[0] = _NSConcreteStackBlock;
      v8[1] = 3221225472;
      v8[2] = sub_1001734F0;
      void v8[3] = &unk_100853B08;
      v8[4] = a1;
      int v9 = v5;
      dispatch_async(v6, v8);
      break;
    case 5:
      if (!*(unsigned char *)(a2 + 160)) {
        sub_100412968();
      }
      sub_100173078(a1, (unsigned __int16 *)(a2 + 124));
      break;
    default:
      return;
  }
}

void sub_100172A18(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

__n128 sub_100172A44(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 4sub_100149BDC(&a9, 0) = v4;
  sub_1001752CC(a1 + 64, a2 + 64);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  __n128 result = *(__n128 *)(a2 + 144);
  long long v6 = *(_OWORD *)(a2 + 160);
  long long v7 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 185) = *(_OWORD *)(a2 + 185);
  *(_OWORD *)(a1 + 16sub_100149BDC(&a9, 0) = v6;
  *(_OWORD *)(a1 + 176) = v7;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t sub_100172AA4(uint64_t a1)
{
  return sub_1001753EC(a1 + 64);
}

void sub_100172AAC(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 176)) {
    sub_100412994();
  }
  *(_OWORD *)char v10 = *(_OWORD *)a2;
  *(void *)&v10[13] = *(void *)(a2 + 13);
  sub_1001750EC(v11, a2 + 24);
  long long v3 = *(NSObject **)(a1 + 152);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  block[2] = sub_100172BD4;
  block[3] = &unk_100853AD8;
  block[4] = a1;
  *(_OWORD *)int v5 = *(_OWORD *)v10;
  *(void *)&v5[13] = *(void *)&v10[13];
  sub_1001750EC(v6, (uint64_t)v11);
  dispatch_async(v3, block);
  if (v9 && v8 < 0) {
    operator delete(__p);
  }
  if (v14)
  {
    if (v13 < 0) {
      operator delete(v12);
    }
  }
}

void sub_100172BB0(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 - 40))
  {
    if (*(char *)(v1 - 41) < 0) {
      operator delete(*(void **)(v1 - 64));
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100172BD4(uint64_t a1)
{
  return (*(uint64_t (**)(void, uint64_t))(**(void **)(*(void *)(a1 + 32) + 176) + 48))(*(void *)(*(void *)(a1 + 32) + 176), a1 + 40);
}

unsigned char *sub_100172C08(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 53) = *(void *)(a2 + 53);
  *(_OWORD *)(a1 + 4sub_100149BDC(&a9, 0) = v2;
  return sub_1001750EC((unsigned char *)(a1 + 64), a2 + 64);
}

void sub_100172C24(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 96))
  {
    if (*(char *)(a1 + 95) < 0) {
      operator delete(*(void **)(a1 + 72));
    }
  }
}

void sub_100172C40(uint64_t a1, uint64_t *a2)
{
  v2[0] = *(_WORD *)a2;
  int v3 = 1;
  uint64_t v4 = *a2;
  int v5 = *((_DWORD *)a2 + 2);
  char v6 = 1;
  char v7 = 0;
  char v10 = 0;
  sub_100172AAC(a1, (uint64_t)v2);
  if (v10)
  {
    if (v9 < 0) {
      operator delete(__p);
    }
  }
}

void sub_100172CB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if (a19)
  {
    if (a18 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100172CD4()
{
  uint64_t v0 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)long long v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "RoseServiceProvider::validateServiceRequest", v2, 2u);
  }
  return 1;
}

uint64_t sub_100172D40(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 176);
  uint64_t v3 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t *))(*(void *)v1 + 56))(v1, &v3);
}

void sub_100172D98(uint64_t a1, uint64_t a2)
{
  if (!*(unsigned char *)(a2 + 52)) {
    sub_1004129C0();
  }
  int v2 = *(_DWORD *)(a2 + 48) - 1;
  if (v2 > 4) {
    unsigned int v3 = 0;
  }
  else {
    unsigned int v3 = dword_1004B69F0[v2];
  }
  atomic_store(2u, (unsigned int *)(a1 + 2692));
  atomic_store(v3, (unsigned int *)(a1 + 2696));
  uint64_t v4 = *(NSObject **)(a1 + 152);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100172E54;
  v5[3] = &unk_100853B08;
  v5[4] = a1;
  unsigned int v6 = v3;
  dispatch_async(v4, v5);
}

uint64_t sub_100172E54(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 176);
  int v2 = *(_DWORD *)(a1 + 40);
  v4[0] = 2;
  v4[1] = v2;
  return (*(uint64_t (**)(uint64_t, _DWORD *))(*(void *)v1 + 56))(v1, v4);
}

uint64_t sub_100172EB0(uint64_t a1)
{
  return (*(uint64_t (**)(void, uint64_t))(**(void **)(*(void *)(a1 + 32) + 176) + 56))(*(void *)(*(void *)(a1 + 32) + 176), a1 + 40);
}

uint64_t sub_100172EE4(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 176);
  int v3 = 1;
  return (*(uint64_t (**)(uint64_t, int *))(*(void *)v1 + 64))(v1, &v3);
}

uint64_t sub_100172F38(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 176);
  int v3 = 0;
  return (*(uint64_t (**)(uint64_t, int *))(*(void *)v1 + 64))(v1, &v3);
}

void sub_100172F88(uint64_t a1, uint64_t a2)
{
  if (!*(unsigned char *)(a2 + 52)) {
    sub_1004129EC();
  }
  unsigned int v2 = *(_DWORD *)(a2 + 48) - 1;
  if (v2 > 4) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = dword_1004B69F0[v2];
  }
  atomic_store(3u, (unsigned int *)(a1 + 2692));
  atomic_store(v3, (unsigned int *)(a1 + 2696));
  uint64_t v4 = *(NSObject **)(a1 + 152);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100173044;
  v5[3] = &unk_100852BB8;
  v5[4] = a1;
  void v5[5] = (v3 << 32) | 3;
  dispatch_async(v4, v5);
}

uint64_t sub_100173044(uint64_t a1)
{
  return (*(uint64_t (**)(void, uint64_t))(**(void **)(*(void *)(a1 + 32) + 176) + 56))(*(void *)(*(void *)(a1 + 32) + 176), a1 + 40);
}

void sub_100173078(uint64_t a1, unsigned __int16 *a2)
{
  if (!*((unsigned char *)a2 + 28)) {
    sub_100412A18();
  }
  unsigned int v4 = *a2 - 1;
  if (v4 > 0x19) {
    int v5 = "UNDEFINED";
  }
  else {
    int v5 = off_100854050[(__int16)v4];
  }
  __int16 v6 = *(unsigned __int16 *)((char *)a2 + 29);
  sub_100004950(&v31, v5);
  unsigned int v7 = a2[1] - 1;
  if (v7 > 0x13) {
    char v8 = "UNDEFINED";
  }
  else {
    char v8 = off_100854120[(__int16)v7];
  }
  sub_100004950(v29, v8);
  std::operator+<char>();
  char v9 = std::string::append(&v26, ", Subtype: ");
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v27.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v27.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  if ((v30 & 0x80u) == 0) {
    char v11 = (const std::string::value_type *)v29;
  }
  else {
    char v11 = (const std::string::value_type *)v29[0];
  }
  if ((v30 & 0x80u) == 0) {
    std::string::size_type v12 = v30;
  }
  else {
    std::string::size_type v12 = (std::string::size_type)v29[1];
  }
  char v13 = std::string::append(&v27, v11, v12);
  char v14 = (void *)v13->__r_.__value_.__r.__words[0];
  size = (void *)v13->__r_.__value_.__l.__size_;
  v28[0] = v13->__r_.__value_.__r.__words[2];
  *(_DWORD *)((char *)v28 + 3) = *(_DWORD *)((char *)&v13->__r_.__value_.__r.__words[2] + 3);
  int v16 = SHIBYTE(v13->__r_.__value_.__r.__words[2]);
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v27.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v26.__r_.__value_.__l.__data_);
  }
  if (*((unsigned char *)a2 + 31))
  {
    BOOL v17 = *((_DWORD *)a2 + 8) == 13;
    uint64_t v18 = 1000;
    uint64_t v19 = 110;
  }
  else
  {
    uint64_t v18 = 1000;
    if (a2[1] == 13) {
      uint64_t v18 = 2002;
    }
    BOOL v17 = v18 == 1000;
    uint64_t v19 = 999;
  }
  if (v17) {
    uint64_t v18 = v19;
  }
  long long v20 = *(NSObject **)(a1 + 152);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  block[2] = sub_10017335C;
  block[3] = &unk_100853B28;
  __int16 v25 = v6;
  block[4] = a1;
  void block[5] = v18;
  if (v16 < 0)
  {
    sub_100002DE4(__p, v14, (unint64_t)size);
  }
  else
  {
    __p[0] = v14;
    __p[1] = size;
    *(_DWORD *)char v23 = v28[0];
    *(_DWORD *)&v23[3] = *(_DWORD *)((char *)v28 + 3);
    char v24 = v16;
  }
  dispatch_async(v20, block);
  if (v24 < 0)
  {
    operator delete(__p[0]);
    if ((v16 & 0x80000000) == 0) {
      goto LABEL_30;
    }
  }
  else if ((v16 & 0x80000000) == 0)
  {
    goto LABEL_30;
  }
  operator delete(v14);
LABEL_30:
  if ((char)v30 < 0) {
    operator delete(v29[0]);
  }
  if (v32 < 0) {
    operator delete(v31);
  }
}

void sub_1001732EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  operator delete(v31);
  if (*(char *)(v32 - 89) < 0) {
    operator delete(*(void **)(v32 - 112));
  }
  if (*(char *)(v32 - 65) < 0) {
    operator delete(*(void **)(v32 - 88));
  }
  _Unwind_Resume(a1);
}

void sub_10017335C(uint64_t a1)
{
  __int16 v1 = *(_WORD *)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v4 = v2;
  if (*(char *)(a1 + 71) < 0)
  {
    sub_100002DE4(&__p, *(void **)(a1 + 48), *(void *)(a1 + 56));
    uint64_t v2 = v4;
  }
  else
  {
    long long __p = *(_OWORD *)(a1 + 48);
    uint64_t v6 = *(void *)(a1 + 64);
  }
  v7[0] = v1;
  int v8 = 2;
  char v9 = 0;
  char v10 = 0;
  uint64_t v11 = v2;
  if (SHIBYTE(v6) < 0)
  {
    sub_100002DE4(&v12, (void *)__p, *((unint64_t *)&__p + 1));
    char v14 = 1;
    if (SHIBYTE(v6) < 0) {
      operator delete((void *)__p);
    }
  }
  else
  {
    long long v12 = __p;
    uint64_t v13 = v6;
    char v14 = 1;
  }
  (*(void (**)(void, _WORD *))(**(void **)(v3 + 176) + 48))(*(void *)(v3 + 176), v7);
  if (v14)
  {
    if (SHIBYTE(v13) < 0) {
      operator delete((void *)v12);
    }
  }
}

void sub_100173474(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,char a26)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1001734AC(uint64_t a1, uint64_t a2)
{
  __n128 result = (void *)(a1 + 48);
  if (*(char *)(a2 + 71) < 0) {
    return sub_100002DE4(result, *(void **)(a2 + 48), *(void *)(a2 + 56));
  }
  long long v3 = *(_OWORD *)(a2 + 48);
  result[2] = *(void *)(a2 + 64);
  *(_OWORD *)__n128 result = v3;
  return result;
}

void sub_1001734DC(uint64_t a1)
{
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
}

uint64_t sub_1001734F0(uint64_t a1)
{
  return (*(uint64_t (**)(void, uint64_t))(**(void **)(*(void *)(a1 + 32) + 176) + 80))(*(void *)(*(void *)(a1 + 32) + 176), a1 + 40);
}

void sub_100173524(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v1sub_100149BDC(&a9, 0) = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "RoseServiceProvider::onRegulatoryConfigurationUpdate.", (uint8_t *)&v10, 2u);
  }
  (*(void (**)(void **__return_ptr))(**(void **)(a1 + 2672) + 48))(&v17);
  int v5 = *(NSObject **)(a1 + 144);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  block[2] = sub_100173738;
  block[3] = &unk_100853B58;
  block[4] = a1;
  long long __p = 0;
  long long v15 = 0;
  uint64_t v16 = 0;
  sub_100175B88(&__p, v17, (uint64_t)v18, v18 - (unsigned char *)v17);
  dispatch_async(v5, block);
  int v6 = *(_DWORD *)(a2 + 4);
  if (v6 != 4)
  {
    if (v6 != 5) {
      goto LABEL_9;
    }
    if (*(unsigned char *)(a2 + 16))
    {
      uint64_t v7 = *(unsigned int *)(a2 + 12);
      LODWORD(v1sub_100149BDC(&a9, 0) = 1;
      *(void *)((char *)&v10 + 4) = v7 | (unint64_t)&_mh_execute_header;
      BYTE12(v1sub_100149BDC(&a9, 0) = 1;
      char v11 = 0;
      char v12 = 0;
      sub_10016B770(a1 + 464, &v10);
      goto LABEL_9;
    }
    int v9 = 643;
LABEL_16:
    __assert_rtn("onRegulatoryConfigurationUpdate", "RoseServiceProvider.mm", v9, "event.accessory.has_value()");
  }
  if (!*(unsigned char *)(a2 + 16))
  {
    int v9 = 636;
    goto LABEL_16;
  }
  uint64_t v8 = *(unsigned int *)(a2 + 12);
  LODWORD(v1sub_100149BDC(&a9, 0) = 1;
  *(void *)((char *)&v10 + 4) = v8;
  BYTE12(v1sub_100149BDC(&a9, 0) = 1;
  char v11 = 0;
  char v12 = 0;
  sub_10016B770(a1 + 464, &v10);
LABEL_9:
  if (__p)
  {
    long long v15 = __p;
    operator delete(__p);
  }
  if (v17)
  {
    uint64_t v18 = v17;
    operator delete(v17);
  }
}

void sub_1001736FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20)
{
  if (__p) {
    operator delete(__p);
  }
  char v22 = *(void **)(v20 - 56);
  if (v22)
  {
    *(void *)(v20 - 48) = v22;
    operator delete(v22);
  }
  _Unwind_Resume(exception_object);
}

void sub_100173738(uint64_t a1)
{
  __int16 v1 = *(void **)(a1 + 32);
  int v5 = 0;
  int v6 = 0;
  uint64_t v7 = 0;
  uint64_t v2 = v1[20];
  v11[0] = off_100853F00;
  v11[1] = &v5;
  void v11[2] = a1 + 40;
  void v11[3] = v11;
  sub_100189954(v2, (uint64_t)v11);
  sub_100175840(v11);
  long long v3 = v5;
  uint64_t v4 = v6;
  if (v5 != v6)
  {
    do
    {
      (*(void (**)(void **__return_ptr, void *, void))(*v1 + 48))(v8, v1, *v3);
      if (v10 && v9 < 0) {
        operator delete(v8[83]);
      }
      ++v3;
    }
    while (v3 != v4);
    long long v3 = v5;
  }
  if (v3)
  {
    int v6 = v3;
    operator delete(v3);
  }
}

void sub_100173854(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  sub_100175840((void *)(v11 - 72));
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void *sub_100173880(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 4sub_100149BDC(&a9, 0) = 0;
  *(void *)(a1 + 48) = 0;
  uint64_t v2 = (void *)(a1 + 40);
  _WORD v2[2] = 0;
  return sub_100175B88(v2, *(const void **)(a2 + 40), *(void *)(a2 + 48), *(void *)(a2 + 48) - *(void *)(a2 + 40));
}

void sub_100173898(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 40);
  if (v2)
  {
    *(void *)(a1 + 48) = v2;
    operator delete(v2);
  }
}

void sub_1001738B0(uint64_t a1, unsigned __int16 *a2)
{
  switch(*((_DWORD *)a2 + 1))
  {
    case 0:
    case 0xC:
      uint64_t v8 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        sub_100173DC0(*((_DWORD *)a2 + 1), v24);
        sub_100412A44();
      }

      return;
    case 1:
      char v9 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(v24[0]) = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "[RoseServiceProvider] RangingDidStart", (uint8_t *)v24, 2u);
      }
      sub_100174114(a1, *a2);
      goto LABEL_38;
    case 2:
      char v10 = qword_1008ABDE0;
      BOOL v11 = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT);
      if (v11)
      {
        LOWORD(v24[0]) = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "[RoseServiceProvider] RangingFailedToStart", (uint8_t *)v24, 2u);
      }
      sub_1001741EC(v11, *a2);
      goto LABEL_38;
    case 3:
      char v12 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(v24[0]) = 0;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "[RoseServiceProvider] RangingStopped", (uint8_t *)v24, 2u);
      }
      sub_100174290(a1, *a2);
      goto LABEL_38;
    case 4:
      uint64_t v13 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(v24[0]) = 0;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "[RoseServiceProvider] RequestInvalidated", (uint8_t *)v24, 2u);
      }
      int v14 = *a2;
      unsigned int v15 = atomic_load((unsigned int *)(a1 + 2700));
      if (v15 == v14)
      {
        uint64_t v16 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          int v17 = *a2;
          LODWORD(v24[0]) = 67109120;
          HIDWORD(v24[0]) = v17;
          _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "Ignoring RequestInvalidated notification for ticket ID: %d", (uint8_t *)v24, 8u);
        }
        uint64_t v18 = qword_1008ABDE0;
        if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
        {
          LOWORD(v24[0]) = 0;
          _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "<rdar://problem/48775916> Ticket IDs should be generated by the AOP", (uint8_t *)v24, 2u);
        }
        atomic_store(0xFFFFFFFF, (unsigned int *)(a1 + 2700));
      }
      else
      {
        sub_100173DD4(a1, *a2);
LABEL_38:
        sub_100172C40(a1, (uint64_t *)a2);
      }
      break;
    case 5:
      uint64_t v19 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(v24[0]) = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "[RoseServiceProvider] JobStart", (uint8_t *)v24, 2u);
      }
      sub_100173FB0(a1, *a2);
      goto LABEL_38;
    case 6:
      uint64_t v20 = qword_1008ABDE0;
      BOOL v21 = os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT);
      if (v21)
      {
        LOWORD(v24[0]) = 0;
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "[RoseServiceProvider] JobStop", (uint8_t *)v24, 2u);
      }
      sub_100174070(v21, *a2);
      goto LABEL_38;
    case 7:
    case 8:
    case 9:
      uint64_t v4 = (id)qword_1008ABDE0;
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      {
        sub_100173DC0(*((_DWORD *)a2 + 1), v24);
        sub_100412A44();
      }

      int v5 = (std::mutex *)(a1 + 32);
      std::mutex::lock((std::mutex *)(a1 + 32));
      sub_100173DD4(a1, *a2);
      int v6 = (unsigned int *)(a1 + 2688);
      unsigned int v7 = 2;
      goto LABEL_34;
    case 0xA:
    case 0xB:
      goto LABEL_38;
    case 0xD:
      char v22 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(v24[0]) = 0;
        _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "[RoseServiceProvider] ServiceRequestReceived_Internal", (uint8_t *)v24, 2u);
      }
      int v5 = (std::mutex *)(a1 + 32);
      std::mutex::lock((std::mutex *)(a1 + 32));
      sub_100173EAC(a1, *a2);
      int v6 = (unsigned int *)(a1 + 2688);
      unsigned int v7 = 1;
LABEL_34:
      atomic_store(v7, v6);
      std::mutex::unlock(v5);
      std::condition_variable::notify_all((std::condition_variable *)(a1 + 96));
      break;
    case 0xE:
      char v23 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(v24[0]) = 0;
        _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "[RoseServiceProvider] TriggerCommandUpdated", (uint8_t *)v24, 2u);
      }
      break;
    default:
      return;
  }
}

void sub_100173D4C(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void *sub_100173DC0@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_1008541C0[a1]);
}

void sub_100173DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 67109120;
    v5[1] = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "[RoseServiceProvider] serviceCancelRoutine for ticket ID %d", (uint8_t *)v5, 8u);
  }
  sub_100170F54(a1, a2, 0);
  sub_100189B7C(*(void *)(a1 + 160), a2);
  sub_1001680A8(a1 + 464, a2);
}

void sub_100173EAC(uint64_t a1, int a2)
{
  uint64_t v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 67109120;
    v5[1] = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "[RoseServiceProvider] serviceAcceptedRoutine for ticket ID %d", (uint8_t *)v5, 8u);
  }
  sub_100189774(*(void *)(a1 + 160), a2, v5);
  if (v8
    && (sub_100167FF8(a1 + 464, v6, v7) & 1) == 0
    && os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR))
  {
    sub_100412AA8();
  }
}

void sub_100173FB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 67109120;
    v5[1] = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "[RoseServiceProvider] jobStartRoutine for ticket ID %d", (uint8_t *)v5, 8u);
  }
  sub_100170F54(a1, a2, 1);
}

void sub_100174070(uint64_t a1, int a2)
{
  long long v3 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    v4[0] = 67109120;
    v4[1] = a2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "[RoseServiceProvider] jobStopRoutine for ticket ID %d", (uint8_t *)v4, 8u);
  }
}

uint64_t sub_100174114(uint64_t a1, int a2)
{
  uint64_t v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    v6[0] = 67109120;
    v6[1] = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "[RoseServiceProvider] rangingStartRoutine for ticket ID %d", (uint8_t *)v6, 8u);
  }
  return (*(uint64_t (**)(void))(**(void **)(a1 + 2672) + 80))(*(void *)(a1 + 2672));
}

void sub_1001741EC(uint64_t a1, int a2)
{
  long long v3 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    v4[0] = 67109120;
    v4[1] = a2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "[RoseServiceProvider] rangingFailedToStartRoutine for ticket ID %d", (uint8_t *)v4, 8u);
  }
}

void sub_100174290(uint64_t a1, int a2)
{
  uint64_t v4 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 67109120;
    v5[1] = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "[RoseServiceProvider] rangingStopRoutine for ticket ID %d", (uint8_t *)v5, 8u);
  }
  sub_1001682E4(a1 + 464, a2);
}

void sub_10017434C(uint64_t a1, uint64_t a2)
{
  switch(*(_DWORD *)a2)
  {
    case 0:
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_ERROR)) {
        sub_100412B08();
      }
      exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
      std::runtime_error::runtime_error(exception, "[RoseServiceProvider] RoseInfrastructureEvent::Unspecified");
    case 1:
      uint64_t v4 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(__p) = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "[RoseServiceProvider] RoseInfrastructureEvent::Boot", (uint8_t *)&__p, 2u);
      }
      int v5 = *(NSObject **)(a1 + 152);
      long long __p = _NSConcreteStackBlock;
      uint64_t v15 = 3221225472;
      unsigned __int16 v6 = sub_100172EE4;
      goto LABEL_17;
    case 2:
      char v10 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(__p) = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "[RoseServiceProvider] RoseInfrastructureEvent::AOPJobsReset", (uint8_t *)&__p, 2u);
      }
      int v5 = *(NSObject **)(a1 + 152);
      long long __p = _NSConcreteStackBlock;
      uint64_t v15 = 3221225472;
      unsigned __int16 v6 = sub_100172F38;
      goto LABEL_17;
    case 3:
      char v9 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(__p) = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "[RoseServiceProvider] RoseInfrastructureEvent::Ready", (uint8_t *)&__p, 2u);
      }
      atomic_store(1u, (unsigned int *)(a1 + 2692));
      atomic_store(0, (unsigned int *)(a1 + 2696));
      int v5 = *(NSObject **)(a1 + 152);
      long long __p = _NSConcreteStackBlock;
      uint64_t v15 = 3221225472;
      unsigned __int16 v6 = sub_100172D40;
LABEL_17:
      uint64_t v16 = v6;
      int v17 = &unk_1008466D8;
      uint64_t v18 = a1;
      goto LABEL_18;
    case 4:
      char v8 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(__p) = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "[RoseServiceProvider] RoseInfrastructureEvent::Ready_UWB", (uint8_t *)&__p, 2u);
      }
      sub_100172D98(a1, a2);
      return;
    case 5:
      int v7 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(__p) = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "[RoseServiceProvider] RoseInfrastructureEvent::Error", (uint8_t *)&__p, 2u);
      }
      atomic_store(4u, (unsigned int *)(a1 + 2692));
      atomic_store(2u, (unsigned int *)(a1 + 2696));
      int v5 = *(NSObject **)(a1 + 152);
      long long __p = _NSConcreteStackBlock;
      uint64_t v15 = 3221225472;
      uint64_t v16 = sub_100172EB0;
      int v17 = &unk_100852BB8;
      uint64_t v18 = a1;
      uint64_t v19 = 0x200000004;
LABEL_18:
      dispatch_async(v5, &__p);
      break;
    case 6:
      if (!*(unsigned char *)(a2 + 52)) {
        sub_100412ADC();
      }
      sub_100004950(&__p, off_100854238[*(int *)(a2 + 48)]);
      BOOL v11 = qword_1008ABDE0;
      if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
      {
        p_p = &__p;
        if (SHIBYTE(v16) < 0) {
          p_p = __p;
        }
        *(_DWORD *)long long buf = 136315138;
        BOOL v21 = p_p;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "[RoseServiceProvider] RoseInfrastructureEvent::SystemOff with Reason: %s", buf, 0xCu);
      }
      sub_100172F88(a1, a2);
      if (SHIBYTE(v16) < 0) {
        operator delete(__p);
      }
      break;
    default:
      return;
  }
}

void sub_1001747A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_1001747F0(uint64_t a1)
{
}

void *sub_1001747F8(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  *a1 = off_100853B98;
  a1[1] = off_100853C38;
  a1[2] = off_100853C78;
  a1[3] = off_100853CA0;
  a1[4] = a2;
  id v6 = v5;
  a1[5] = v6;
  if (!a2)
  {
    char v8 = "service_client";
    int v9 = 991;
    goto LABEL_6;
  }
  if (!v6)
  {
    char v8 = "queue";
    int v9 = 992;
LABEL_6:
    __assert_rtn("RoseServiceProviderSurrogate", "RoseServiceProvider.mm", v9, v8);
  }

  return a1;
}

void sub_1001748F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100174910(uint64_t a1)
{
  uint64_t v1 = *(NSObject **)(a1 + 40);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100174984;
  block[3] = &unk_1008466D8;
  block[4] = a1;
  dispatch_async(v1, block);
}

uint64_t sub_100174984(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  uint64_t v2 = v1[4];
  uint64_t v4 = (*(uint64_t (**)(void *))(*v1 + 72))(v1);
  return (*(uint64_t (**)(uint64_t, uint64_t *))(*(void *)v2 + 56))(v2, &v4);
}

void sub_100174A08(uint64_t a1@<X8>)
{
  sub_100004950(v3, "Unsupported platform.");
  uint64_t v5 = 10;
  if (SHIBYTE(v4) < 0)
  {
    sub_100002DE4(&v6, v3[0], (unint64_t)v3[1]);
    uint64_t v2 = v5;
  }
  else
  {
    long long v6 = *(_OWORD *)v3;
    uint64_t v7 = v4;
    uint64_t v2 = 10;
  }
  uint64_t v8 = v2;
  *(_OWORD *)long long __p = v6;
  uint64_t v10 = v7;
  long long v6 = 0uLL;
  uint64_t v7 = 0;
  char v11 = 1;
  *(unsigned char *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 64sub_100149BDC(&a9, 0) = 0;
  *(_DWORD *)(a1 + 648) = 1;
  sub_1001750EC((unsigned char *)(a1 + 656), (uint64_t)&v8);
  if (v11 && SHIBYTE(v10) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v7) < 0) {
    operator delete((void *)v6);
  }
  if (SHIBYTE(v4) < 0) {
    operator delete(v3[0]);
  }
}

void sub_100174AF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,char a29)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100174B40(uint64_t a1@<X8>)
{
  sub_100004950(v3, "Unsupported platform.");
  uint64_t v5 = 10;
  if (SHIBYTE(v4) < 0)
  {
    sub_100002DE4(&v6, v3[0], (unint64_t)v3[1]);
    uint64_t v2 = v5;
  }
  else
  {
    long long v6 = *(_OWORD *)v3;
    uint64_t v7 = v4;
    uint64_t v2 = 10;
  }
  uint64_t v8 = v2;
  *(_OWORD *)long long __p = v6;
  uint64_t v10 = v7;
  long long v6 = 0uLL;
  uint64_t v7 = 0;
  char v11 = 1;
  *(unsigned char *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 648) = 0;
  sub_1001750EC((unsigned char *)(a1 + 656), (uint64_t)&v8);
  if (v11 && SHIBYTE(v10) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v7) < 0) {
    operator delete((void *)v6);
  }
  if (SHIBYTE(v4) < 0) {
    operator delete(v3[0]);
  }
}

void sub_100174C28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,char a29)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100174C74(uint64_t a1@<X8>)
{
  sub_100004950(v3, "Unsupported platform.");
  uint64_t v5 = 10;
  if (SHIBYTE(v4) < 0)
  {
    sub_100002DE4(&v6, v3[0], (unint64_t)v3[1]);
    uint64_t v2 = v5;
  }
  else
  {
    long long v6 = *(_OWORD *)v3;
    uint64_t v7 = v4;
    uint64_t v2 = 10;
  }
  uint64_t v8 = v2;
  *(_OWORD *)long long __p = v6;
  uint64_t v10 = v7;
  long long v6 = 0uLL;
  uint64_t v7 = 0;
  char v11 = 1;
  *(unsigned char *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 648) = 0;
  sub_1001750EC((unsigned char *)(a1 + 656), (uint64_t)&v8);
  if (v11 && SHIBYTE(v10) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v7) < 0) {
    operator delete((void *)v6);
  }
  if (SHIBYTE(v4) < 0) {
    operator delete(v3[0]);
  }
}

void sub_100174D5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,char a29)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100174DA8(uint64_t a1@<X8>)
{
  sub_100004950(v3, "Unsupported platform.");
  uint64_t v5 = 10;
  if (SHIBYTE(v4) < 0)
  {
    sub_100002DE4(&v6, v3[0], (unint64_t)v3[1]);
    uint64_t v2 = v5;
  }
  else
  {
    long long v6 = *(_OWORD *)v3;
    uint64_t v7 = v4;
    uint64_t v2 = 10;
  }
  uint64_t v8 = v2;
  *(_OWORD *)long long __p = v6;
  uint64_t v10 = v7;
  long long v6 = 0uLL;
  uint64_t v7 = 0;
  char v11 = 1;
  *(unsigned char *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 648) = 0;
  sub_1001750EC((unsigned char *)(a1 + 656), (uint64_t)&v8);
  if (v11 && SHIBYTE(v10) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v7) < 0) {
    operator delete((void *)v6);
  }
  if (SHIBYTE(v4) < 0) {
    operator delete(v3[0]);
  }
}

void sub_100174E90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,char a29)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100174EDC()
{
  return 0x600000003;
}

uint64_t sub_100174EE8(uint64_t a1)
{
  uint64_t v1 = atomic_load((unsigned int *)(a1 + 2692));
  uint64_t v2 = atomic_load((unsigned int *)(a1 + 2696));
  return v1 | (v2 << 32);
}

uint64_t sub_100174F00(uint64_t a1)
{
  return a1;
}

void sub_100174F2C(uint64_t a1)
{
  operator delete();
}

uint64_t sub_100174F98()
{
  return 0;
}

void sub_100174FA0(uint64_t a1)
{
}

void sub_100174FA8(uint64_t a1)
{
  operator delete();
}

void sub_100175004(uint64_t a1)
{
}

void sub_10017500C(uint64_t a1)
{
  operator delete();
}

void sub_10017505C(uint64_t a1)
{
}

void sub_100175064(uint64_t a1)
{
  operator delete();
}

uint64_t sub_1001750B0()
{
  return 0;
}

uint64_t sub_1001750B8(uint64_t a1)
{
  return (*(uint64_t (**)(void, uint64_t))(**(void **)(*(void *)(a1 + 32) + 176) + 56))(*(void *)(*(void *)(a1 + 32) + 176), a1 + 40);
}

unsigned char *sub_1001750EC(unsigned char *a1, uint64_t a2)
{
  *a1 = 0;
  a1[32] = 0;
  if (*(unsigned char *)(a2 + 32)) {
    sub_100175144((uint64_t)a1, a2);
  }
  return a1;
}

void sub_100175128(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 32)) {
    sub_100412B3C(v1);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100175144(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  __n128 result = (void *)(a1 + 8);
  if (*(char *)(a2 + 31) < 0)
  {
    __n128 result = sub_100002DE4(result, *(void **)(a2 + 8), *(void *)(a2 + 16));
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 8);
    result[2] = *(void *)(a2 + 24);
    *(_OWORD *)__n128 result = v4;
  }
  *(unsigned char *)(a1 + 32) = 1;
  return result;
}

unsigned char *sub_1001751A0(unsigned char *a1, uint64_t a2)
{
  *a1 = 0;
  a1[552] = 0;
  if (*(unsigned char *)(a2 + 552))
  {
    sub_10015E778((uint64_t)a1, a2);
    a1[552] = 1;
  }
  return a1;
}

void sub_1001751E4(_Unwind_Exception *a1)
{
  sub_10015DC28(v1);
  _Unwind_Resume(a1);
}

__n128 *sub_1001751F8(__n128 *a1, __n128 *a2)
{
  a1->n128_u8[0] = 0;
  a1[7].n128_u8[0] = 0;
  sub_100175244(a1, a2);
  return a1;
}

void sub_100175228(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 112)) {
    sub_100412B4C(v1);
  }
  _Unwind_Resume(exception_object);
}

__n128 sub_100175244(__n128 *a1, __n128 *a2)
{
  if (a2[7].n128_u8[0])
  {
    unint64_t v3 = a2->n128_u64[0];
    a1->n128_u16[4] = a2->n128_u16[4];
    a1->n128_u64[0] = v3;
    __n128 v4 = a2[1];
    __n128 v5 = a2[2];
    __n128 v6 = a2[3];
    LODWORD(v3) = a2[4].n128_u32[0];
    a1[4].n128_u64[1] = 0;
    uint64_t v7 = &a1[4].n128_i64[1];
    a1[4].n128_u32[0] = v3;
    a1[3] = v6;
    a1[2] = v5;
    a1[1] = v4;
    a1[5].n128_u64[0] = 0;
    a1[5].n128_u64[1] = 0;
    sub_10016DA68(&a1[4].n128_u64[1], (const void *)a2[4].n128_u64[1], a2[5].n128_i64[0], (uint64_t)(a2[5].n128_u64[0] - a2[4].n128_u64[1]) >> 4);
    __n128 result = a2[6];
    *(__n128 *)(v7 + 3) = result;
    *((unsigned char *)v7 + 4sub_100149BDC(&a9, 0) = 1;
  }
  return result;
}

uint64_t sub_1001752CC(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = 0;
  *(unsigned char *)(a1 + 56) = 0;
  if (*(unsigned char *)(a2 + 56))
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    sub_100175338((unsigned char *)(a1 + 8), a2 + 8);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(unsigned char *)(a1 + 56) = 1;
  }
  return a1;
}

void sub_100175324(_Unwind_Exception *a1)
{
  sub_1001753EC(v1);
  _Unwind_Resume(a1);
}

unsigned char *sub_100175338(unsigned char *a1, uint64_t a2)
{
  *a1 = 0;
  a1[32] = 0;
  if (*(unsigned char *)(a2 + 32)) {
    sub_100175390((uint64_t)a1, a2);
  }
  return a1;
}

void sub_100175374(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 32)) {
    sub_100412B3C(v1);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100175390(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  __n128 result = (void *)(a1 + 8);
  if (*(char *)(a2 + 31) < 0)
  {
    __n128 result = sub_100002DE4(result, *(void **)(a2 + 8), *(void *)(a2 + 16));
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 8);
    result[2] = *(void *)(a2 + 24);
    *(_OWORD *)__n128 result = v4;
  }
  *(unsigned char *)(a1 + 32) = 1;
  return result;
}

uint64_t sub_1001753EC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 56) && *(unsigned char *)(a1 + 40) && *(char *)(a1 + 39) < 0) {
    operator delete(*(void **)(a1 + 16));
  }
  return a1;
}

void *sub_100175430@<X0>(void *a1@<X8>)
{
  uint64_t v2 = operator new(0x90uLL);
  __n128 result = sub_10017547C(v2);
  *a1 = v2 + 3;
  a1[1] = v2;
  return result;
}

void sub_100175468(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_10017547C(void *a1)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_100853D90;
  sub_100189660((uint64_t)(a1 + 3));
  return a1;
}

void sub_1001754C4(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1001754D8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100853D90;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1001754F8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100853D90;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_10017554C(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_100175578()
{
}

void *sub_10017558C(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *__n128 result = off_100853DE0;
  result[1] = v3;
  return result;
}

uint64_t sub_1001755D4(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100853DE0;
  a2[1] = v2;
  return result;
}

__n128 sub_100175600(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(long long **)(a1 + 8);
  if (*(unsigned char *)(a2 + 632)) {
    *(unsigned char *)(a2 + 632) = 0;
  }
  long long v3 = *v2;
  long long v4 = v2[2];
  *(_OWORD *)(a2 + 536) = v2[1];
  *(_OWORD *)(a2 + 552) = v4;
  *(_OWORD *)(a2 + 52sub_100149BDC(&a9, 0) = v3;
  __n128 result = (__n128)v2[3];
  long long v6 = v2[4];
  long long v7 = v2[6];
  *(_OWORD *)(a2 + 60sub_100149BDC(&a9, 0) = v2[5];
  *(_OWORD *)(a2 + 616) = v7;
  *(__n128 *)(a2 + 568) = result;
  *(_OWORD *)(a2 + 584) = v6;
  *(unsigned char *)(a2 + 632) = 1;
  return result;
}

uint64_t sub_100175640(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100175680()
{
}

void *sub_10017568C(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_100175714()
{
}

void *sub_100175728(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *__n128 result = off_100853E70;
  result[1] = v3;
  return result;
}

uint64_t sub_100175770(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100853E70;
  a2[1] = v2;
  return result;
}

uint64_t sub_10017579C(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 8) + 24);
  if (!v1) {
    sub_100027894();
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);

  return v2();
}

uint64_t sub_1001757F4(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100175834()
{
}

void *sub_100175840(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_1001758C8()
{
}

__n128 sub_1001758DC(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x18uLL);
  *(void *)uint64_t v2 = off_100853F00;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_100175928(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_100853F00;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_100175958(uint64_t a1, uint64_t a2)
{
  __int16 v4 = sub_10017E1C8(a2 + 16);
  __n128 v5 = *(unsigned __int8 ***)(a1 + 16);
  long long v6 = *v5;
  long long v7 = v5[1];
  if (*v5 == v7)
  {
    char v9 = 0;
    LOBYTE(v8) = 0;
    if ((v4 & 1) == 0) {
      goto LABEL_14;
    }
  }
  else
  {
    int v8 = 0;
    char v9 = 0;
    do
    {
      int v11 = *v6++;
      int v10 = v11;
      if (v11 == 5) {
        int v12 = 1;
      }
      else {
        int v12 = v8;
      }
      if (v10 == 9) {
        char v9 = 1;
      }
      else {
        int v8 = v12;
      }
    }
    while (v6 != v7);
    if ((v4 & 1) == 0)
    {
LABEL_14:
      if (((v4 & 0x100) == 0) | v9 & 1) {
        return;
      }
      goto LABEL_15;
    }
  }
  if (v8) {
    goto LABEL_14;
  }
LABEL_15:
  uint64_t v13 = qword_1008ABDE0;
  if (os_log_type_enabled((os_log_t)qword_1008ABDE0, OS_LOG_TYPE_DEFAULT))
  {
    int v14 = *(unsigned __int16 *)(a2 + 8);
    v29[0] = 67109120;
    v29[1] = v14;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "RoseServiceProvider regulatory validation: ticket ID %d is canceled since channel configuration is no longer allowed.", (uint8_t *)v29, 8u);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  uint64_t v16 = *(_WORD **)(v15 + 8);
  unint64_t v17 = *(void *)(v15 + 16);
  if ((unint64_t)v16 >= v17)
  {
    uint64_t v19 = *(_WORD **)v15;
    uint64_t v20 = (uint64_t)v16 - *(void *)v15;
    if (v20 <= -3) {
      sub_1000267C4();
    }
    uint64_t v21 = v20 >> 1;
    unint64_t v22 = v17 - (void)v19;
    if (v22 <= (v20 >> 1) + 1) {
      unint64_t v23 = v21 + 1;
    }
    else {
      unint64_t v23 = v22;
    }
    if (v22 >= 0x7FFFFFFFFFFFFFFELL) {
      uint64_t v24 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v24 = v23;
    }
    if (v24)
    {
      __int16 v25 = (char *)sub_10014A47C(v15 + 16, v24);
      uint64_t v19 = *(_WORD **)v15;
      uint64_t v16 = *(_WORD **)(v15 + 8);
    }
    else
    {
      __int16 v25 = 0;
    }
    std::string v26 = &v25[2 * v21];
    std::string v27 = &v25[2 * v24];
    *(_WORD *)std::string v26 = *(_WORD *)(a2 + 8);
    uint64_t v18 = v26 + 2;
    while (v16 != v19)
    {
      __int16 v28 = *--v16;
      *((_WORD *)v26 - 1) = v28;
      v26 -= 2;
    }
    *(void *)uint64_t v15 = v26;
    *(void *)(v15 + 8) = v18;
    *(void *)(v15 + 16) = v27;
    if (v19) {
      operator delete(v19);
    }
  }
  else
  {
    *uint64_t v16 = *(_WORD *)(a2 + 8);
    uint64_t v18 = v16 + 1;
  }
  *(void *)(v15 + 8) = v18;
}

uint64_t sub_100175B3C(uint64_t a1, uint64_t a2)
{
  if (sub_10003E730(a2, (uint64_t)&off_100853F60)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_100175B7C()
{
  return &off_100853F60;
}

void *sub_100175B88(void *result, const void *a2, uint64_t a3, size_t __sz)
{
  if (__sz)
  {
    long long v6 = result;
    __n128 result = sub_10002DBC4(result, __sz);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      __n128 result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_100175BE8(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_100175C14(uint64_t a1)
{
}

void sub_100175C34()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8A8))
  {
    sub_100004950(&qword_10089C890, "com.apple.nearbyd.accessory.download");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C890, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8A8);
  }
}

void sub_100175CCC(_Unwind_Exception *a1)
{
}

void sub_100175CE4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8C8))
  {
    sub_100004950(&qword_10089C8B0, "com.apple.nearbyd.accessory.files");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C8B0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8C8);
  }
}

void sub_100175D7C(_Unwind_Exception *a1)
{
}

void sub_100175D94()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C8E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C8E8))
  {
    sub_100004950(qword_10089C8D0, "MA_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8D0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C8E8);
  }
}

void sub_100175E2C(_Unwind_Exception *a1)
{
}

void sub_100175E44()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C908, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C908))
  {
    sub_100004950(qword_10089C8F0, "MB_");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C8F0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C908);
  }
}

void sub_100175EDC(_Unwind_Exception *a1)
{
}

void sub_100175EF4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C928, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C928))
  {
    sub_100004950(qword_10089C910, "D");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C910, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C928);
  }
}

void sub_100175F8C(_Unwind_Exception *a1)
{
}

void sub_100175FA4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C948, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C948))
  {
    sub_100004950(&qword_10089C930, "A");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10089C930, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C948);
  }
}

void sub_10017603C(_Unwind_Exception *a1)
{
}

void sub_100176054()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C968, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C968))
  {
    sub_100004950(qword_10089C950, "FAS.bin");
    __cxa_atexit((void (*)(void *))&std::string::~string, qword_10089C950, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C968);
  }
}

void sub_1001760EC(_Unwind_Exception *a1)
{
}

void sub_100176104()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10089C988, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10089C988))
  {
    qword_10089C970 = 0;
    qword_10089C978 = 0;
    qword_10089C980 = 0;
    uint64_t v0 = operator new(0x30uLL);
    qword_10089C978 = (uint64_t)(v0 + 3);
    qword_10089C980 = (uint64_t)(v0 + 3);
    *uint64_t v0 = xmmword_1004B6488;
    v0[1] = unk_1004B6498;
    v0[2] = xmmword_1004B64A8;
    qword_10089C970 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_100008CAC, &qword_10089C970, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10089C988);
  }
}

void sub_1001761C0(_Unwind_Exception *a1)
{
}

void sub_1001761D8()
{
  sub_10039D144();
  uint64_t v1 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v1->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0;
  v1->__r_.__value_.__r.__words[2] = 0;
  v1->__r_.__value_.__r.__words[0] = 0;
  uint64_t v3 = std::string::append(&v38, ".bin");
  long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1008A1DD0 = v3->__r_.__value_.__r.__words[2];
  xmmword_1008A1DC0 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1DC0, (void *)&_mh_execute_header);
  sub_10039D144();
  __n128 v5 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  uint64_t v7 = std::string::append(&v38, ".bin");
  long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1008A1DE8 = v7->__r_.__value_.__r.__words[2];
  xmmword_1008A1DD8 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1DD8, (void *)&_mh_execute_header);
  sub_10039D144();
  char v9 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  int v11 = std::string::append(&v38, ".bin");
  long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1008A1E00 = v11->__r_.__value_.__r.__words[2];
  xmmword_1008A1DF0 = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1DF0, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v13 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  uint64_t v15 = std::string::append(&v38, ".bin");
  long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1008A1E18 = v15->__r_.__value_.__r.__words[2];
  xmmword_1008A1E08 = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1E08, (void *)&_mh_execute_header);
  sub_10039D144();
  unint64_t v17 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  uint64_t v19 = std::string::append(&v38, ".bin");
  long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1008A1E30 = v19->__r_.__value_.__r.__words[2];
  xmmword_1008A1E20 = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1E20, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v21 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  unint64_t v23 = std::string::append(&v38, ".bin");
  long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1008A1E48 = v23->__r_.__value_.__r.__words[2];
  xmmword_1008A1E38 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1E38, (void *)&_mh_execute_header);
  sub_10039D144();
  __int16 v25 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  std::string v27 = std::string::append(&v38, ".bin");
  long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1008A1E60 = v27->__r_.__value_.__r.__words[2];
  xmmword_1008A1E50 = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1E50, (void *)&_mh_execute_header);
  sub_10039D144();
  uint64_t v29 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  uint64_t v31 = std::string::append(&v38, ".bin");
  long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1008A1E78 = v31->__r_.__value_.__r.__words[2];
  xmmword_1008A1E68 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1E68, (void *)&_mh_execute_header);
  sub_10039D144();
  long long v33 = std::string::insert(&v37, 0, "reverseLUT_A");
  long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  char v35 = std::string::append(&v38, ".bin");
  long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1008A1E90 = v35->__r_.__value_.__r.__words[2];
  xmmword_1008A1E80 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1008A1E80, (void *)&_mh_execute_header);
}

void sub_100176818(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10017688C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_100004950(a2, off_100854268[a1]);
}