id *sub_100004888(id *a1, void *a2)
{
  id v4;
  NSObject *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  objc_super v12;
  uint8_t buf[4];
  const char *v14;
  __int16 v15;
  id *v16;
  __int16 v17;
  id v18;
  __int16 v19;
  void *v20;

  v4 = a2;
  if (a1)
  {
    v12.receiver = a1;
    v12.super_class = (Class)APPCControllerReceiver;
    a1 = (id *)[super init];
    if (a1)
    {
      v5 = APLogForCategory();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        v6 = [v4 bundleID];
        *(_DWORD *)buf = 136643587;
        v14 = "-[APPCControllerReceiver initWithConnection:]";
        v15 = 2048;
        v16 = a1;
        v17 = 2048;
        v18 = v4;
        v19 = 2114;
        v20 = v6;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "%{sensitive}s: controller %p connection %p bundleID is %{public}@.", buf, 0x2Au);
      }
      objc_storeStrong(a1 + 2, a2);
      v7 = [objc_alloc((Class)APUnfairLock) initWithOptions:1];
      v8 = a1[1];
      a1[1] = v7;

      v9 = +[NSMutableSet setWithCapacity:12];
      v10 = a1[3];
      a1[3] = (id)v9;
    }
  }

  return a1;
}

id metricPropertyValue(void *a1, void *a2)
{
  id v3 = a1;
  if (qword_1002899C0 != -1) {
    dispatch_once(&qword_1002899C0, &stru_1002357F8);
  }
  v4 = (void *)qword_1002899B8;
  v5 = +[NSNumber numberWithInteger:a2];
  v6 = [v4 objectForKeyedSubscript:v5];

  if (!v6)
  {
    v10 = APLogForCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      int v13 = 134217984;
      v14 = a2;
      v11 = "No key found for property %ld";
      goto LABEL_10;
    }
LABEL_11:

    v8 = 0;
    goto LABEL_12;
  }
  v7 = [v3 properties];
  v8 = [v7 objectForKeyedSubscript:v6];

  if (!v8)
  {
    v9 = [v3 internalProperties];
    v8 = [v9 objectForKeyedSubscript:v6];

    if (!v8)
    {
      v10 = APLogForCategory();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        int v13 = 138543362;
        v14 = v6;
        v11 = "Cannot find value for property %{public}@";
LABEL_10:
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, v11, (uint8_t *)&v13, 0xCu);
        goto LABEL_11;
      }
      goto LABEL_11;
    }
  }
LABEL_12:

  return v8;
}

id APPBAdsOptions()
{
  if (qword_1002898D0 != -1) {
    dispatch_once(&qword_1002898D0, &stru_100235580);
  }
  v0 = (void *)qword_1002898C8;

  return v0;
}

CFDataRef encryptStringForAdServing(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (qword_100289858)
  {
    if (v3) {
      goto LABEL_3;
    }
LABEL_9:
    v5 = APLogForCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138543362;
      CFIndex v14 = (CFIndex)v4;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Cannot encrypt a nil string of key: %{public}@", buf, 0xCu);
    }
    goto LABEL_14;
  }
  qword_100289858 = SecKeyCreateRSAPublicKey();
  if (!v3) {
    goto LABEL_9;
  }
LABEL_3:
  v5 = [v3 dataUsingEncoding:4];
  if (!v5)
  {
    v10 = APLogForCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138543362;
      CFIndex v14 = (CFIndex)v4;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "Failed to Base64 for %{public}@", buf, 0xCu);
    }

LABEL_14:
    CFDataRef v6 = 0;
    goto LABEL_15;
  }
  CFErrorRef error = 0;
  CFDataRef v6 = SecKeyCreateEncryptedData((SecKeyRef)qword_100289858, kSecKeyAlgorithmRSAEncryptionPKCS1, (CFDataRef)v5, &error);
  if (error)
  {
    v7 = APLogForCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      CFIndex Code = CFErrorGetCode(error);
      CFStringRef v9 = CFErrorCopyDescription(error);
      *(_DWORD *)buf = 134218242;
      CFIndex v14 = Code;
      __int16 v15 = 2114;
      CFStringRef v16 = v9;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Error %ld encrypting string: %{public}@.", buf, 0x16u);
    }
  }
LABEL_15:

  return v6;
}

uint64_t APPBAdBatchResponseReadFrom(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    unint64_t v13 = v6 >> 3;
    switch((v6 >> 3))
    {
      case 1u:
        char v14 = 0;
        unsigned int v15 = 0;
        uint64_t v16 = 0;
        *(unsigned char *)(a1 + 108) |= 4u;
        while (1)
        {
          uint64_t v17 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v18 = v17 + 1;
          if (v17 == -1 || v18 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v19 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v17);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v18;
          v16 |= (unint64_t)(v19 & 0x7F) << v14;
          if ((v19 & 0x80) == 0) {
            goto LABEL_83;
          }
          v14 += 7;
          BOOL v10 = v15++ >= 9;
          if (v10)
          {
            LODWORD(v16) = 0;
            goto LABEL_85;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_83:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v16) = 0;
        }
LABEL_85:
        uint64_t v50 = 64;
        goto LABEL_94;
      case 2u:
        uint64_t v27 = PBReaderReadString();
        uint64_t v28 = 48;
        goto LABEL_77;
      case 3u:
        v29 = objc_alloc_init(APPBAdData);
        [(id)a1 addAd:v29];
        if (!PBReaderPlaceMark() || (APPBAdDataReadFrom((uint64_t)v29, a2) & 1) == 0) {
          goto LABEL_111;
        }
        goto LABEL_80;
      case 4u:
        char v30 = 0;
        unsigned int v31 = 0;
        uint64_t v32 = 0;
        *(unsigned char *)(a1 + 108) |= 0x80u;
        while (2)
        {
          uint64_t v33 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v34 = v33 + 1;
          if (v33 == -1 || v34 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v35 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v33);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v34;
            v32 |= (unint64_t)(v35 & 0x7F) << v30;
            if (v35 < 0)
            {
              v30 += 7;
              BOOL v10 = v31++ >= 9;
              if (v10)
              {
                uint64_t v32 = 0;
                goto LABEL_89;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v32 = 0;
        }
LABEL_89:
        BOOL v51 = v32 != 0;
        uint64_t v52 = 105;
        goto LABEL_99;
      case 5u:
        *(unsigned char *)(a1 + 108) |= 0x10u;
        unint64_t v36 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v36 <= 0xFFFFFFFFFFFFFFFBLL && v36 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          int v37 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v36);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v36 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          int v37 = 0;
        }
        *(_DWORD *)(a1 + 72) = v37;
        goto LABEL_109;
      case 6u:
        *(unsigned char *)(a1 + 108) |= 8u;
        unint64_t v38 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v38 <= 0xFFFFFFFFFFFFFFFBLL
          && (unint64_t v39 = v38 + 4, v38 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)))
        {
          int v40 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v38);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v39;
        }
        else
        {
          int v40 = 0;
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
        }
        *(_DWORD *)(a1 + 68) = v40;
        goto LABEL_109;
      case 7u:
        goto LABEL_34;
      case 8u:
        *(unsigned char *)(a1 + 108) |= 1u;
        unint64_t v41 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v41 <= 0xFFFFFFFFFFFFFFF7 && v41 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v42 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v41);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v41 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v42 = 0;
        }
        uint64_t v53 = 8;
        goto LABEL_108;
      case 9u:
        PBReaderReadString();
        v29 = (APPBAdData *)objc_claimAutoreleasedReturnValue();
        if (v29) {
          [(id)a1 addAdsToEvict:v29];
        }
        goto LABEL_81;
      case 0xAu:
        PBReaderReadString();
        v29 = (APPBAdData *)objc_claimAutoreleasedReturnValue();
        if (v29) {
          [(id)a1 addURLsToEvict:v29];
        }
        goto LABEL_81;
      case 0xBu:
        v29 = objc_alloc_init(APPBAdDataUpdate);
        [(id)a1 addAdUpdates:v29];
        if (!PBReaderPlaceMark() || (APPBAdDataUpdateReadFrom((uint64_t)v29, a2) & 1) == 0) {
          goto LABEL_111;
        }
        goto LABEL_80;
      case 0xCu:
        v29 = objc_alloc_init(APPBTagTransformation);
        [(id)a1 addTagTransformations:v29];
        if (!PBReaderPlaceMark() || !APPBTagTransformationReadFrom(v29, a2)) {
          goto LABEL_111;
        }
        goto LABEL_80;
      case 0xDu:
        *(unsigned char *)(a1 + 108) |= 2u;
        unint64_t v43 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v43 <= 0xFFFFFFFFFFFFFFF7 && v43 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v42 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v43);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v43 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v42 = 0;
        }
        uint64_t v53 = 16;
LABEL_108:
        *(void *)(a1 + v53) = v42;
        goto LABEL_109;
      case 0xEu:
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v16 = 0;
        *(unsigned char *)(a1 + 108) |= 0x20u;
        while (2)
        {
          uint64_t v46 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v46);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v47;
            v16 |= (unint64_t)(v48 & 0x7F) << v44;
            if (v48 < 0)
            {
              v44 += 7;
              BOOL v10 = v45++ >= 9;
              if (v10)
              {
                LODWORD(v16) = 0;
                goto LABEL_93;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v16) = 0;
        }
LABEL_93:
        uint64_t v50 = 76;
LABEL_94:
        *(_DWORD *)(a1 + v50) = v16;
        goto LABEL_109;
      case 0xFu:
        uint64_t v27 = PBReaderReadString();
        uint64_t v28 = 56;
LABEL_77:
        v49 = *(void **)(a1 + v28);
        *(void *)(a1 + v28) = v27;

        goto LABEL_109;
      default:
        if (v13 != 100)
        {
          if (v13 == 200)
          {
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 108) |= 0x40u;
            while (1)
            {
              uint64_t v23 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
              unint64_t v24 = v23 + 1;
              if (v23 == -1 || v24 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
                break;
              }
              char v25 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v23);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v24;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if ((v25 & 0x80) == 0) {
                goto LABEL_96;
              }
              v20 += 7;
              BOOL v10 = v21++ >= 9;
              if (v10)
              {
                uint64_t v22 = 0;
                goto LABEL_98;
              }
            }
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_96:
            if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
              uint64_t v22 = 0;
            }
LABEL_98:
            BOOL v51 = v22 != 0;
            uint64_t v52 = 104;
LABEL_99:
            *(unsigned char *)(a1 + v52) = v51;
          }
          else
          {
LABEL_34:
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          goto LABEL_109;
        }
        v29 = objc_alloc_init(APPBAdSpecification);
        objc_storeStrong((id *)(a1 + 80), v29);
        if PBReaderPlaceMark() && (APPBAdSpecificationReadFrom((uint64_t)v29, a2))
        {
LABEL_80:
          PBReaderRecallMark();
LABEL_81:

LABEL_109:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_111:

        return 0;
    }
  }
}

uint64_t APPBAdSpecificationReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    if ((v6 >> 3) == 5)
    {
      char v14 = 0;
      unsigned int v15 = 0;
      uint64_t v16 = 0;
      *(unsigned char *)(a1 + 20) |= 1u;
      while (1)
      {
        unint64_t v17 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v17 == -1 || v17 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v18 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v17);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v17 + 1;
        v16 |= (unint64_t)(v18 & 0x7F) << v14;
        if ((v18 & 0x80) == 0) {
          goto LABEL_30;
        }
        v14 += 7;
        BOOL v9 = v15++ >= 9;
        if (v9)
        {
          LODWORD(v16) = 0;
          goto LABEL_32;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_30:
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        LODWORD(v16) = 0;
      }
LABEL_32:
      *(_DWORD *)(a1 + 16) = v16;
    }
    else if ((v6 >> 3) == 3)
    {
      uint64_t v12 = PBReaderReadString();
      unint64_t v13 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = v12;
    }
    else
    {
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t APPBAdDataReadFrom(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        unint64_t v8 = v7 + 1;
        if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
        v6 |= (unint64_t)(v9 & 0x7F) << v4;
        if ((v9 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        BOOL v10 = v5++ >= 9;
        if (v10)
        {
          unint64_t v6 = 0;
          int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v11 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      unint64_t v13 = v6 >> 3;
      if ((int)(v6 >> 3) <= 299) {
        break;
      }
      if ((int)v13 <= 729)
      {
        if ((int)v13 > 549)
        {
          switch((int)v13)
          {
            case 700:
              uint64_t v16 = objc_alloc_init(APPBParameter);
              [(id)a1 addITunesMetadata:v16];
              goto LABEL_48;
            case 701:
              uint64_t v16 = objc_alloc_init(APPBTransparencyDetails);
              objc_storeStrong((id *)(a1 + 448), v16);
              if (!PBReaderPlaceMark() || !APPBTransparencyDetailsReadFrom((uint64_t)v16, a2)) {
                goto LABEL_266;
              }
              break;
            case 702:
              uint64_t v16 = objc_alloc_init(APPBNativeMediaCreativeMetadata);
              objc_storeStrong((id *)(a1 + 352), v16);
              if (PBReaderPlaceMark()
                && (APPBNativeMediaCreativeMetadataReadFrom((uint64_t)v16, a2) & 1) != 0)
              {
                break;
              }
              goto LABEL_266;
            case 703:
            case 704:
            case 712:
            case 713:
            case 714:
              goto LABEL_71;
            case 705:
              uint64_t v14 = PBReaderReadString();
              uint64_t v15 = 120;
              goto LABEL_203;
            case 706:
              char v56 = 0;
              unsigned int v57 = 0;
              uint64_t v28 = 0;
              *(_WORD *)(a1 + 492) |= 0x400u;
              while (2)
              {
                uint64_t v58 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
                unint64_t v59 = v58 + 1;
                if (v58 == -1 || v59 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
                {
                  *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
                }
                else
                {
                  char v60 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v58);
                  *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v59;
                  v28 |= (unint64_t)(v60 & 0x7F) << v56;
                  if (v60 < 0)
                  {
                    v56 += 7;
                    BOOL v10 = v57++ >= 9;
                    if (v10)
                    {
                      LODWORD(v28) = 0;
                      goto LABEL_233;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
                LODWORD(v28) = 0;
              }
LABEL_233:
              uint64_t v79 = 328;
              goto LABEL_246;
            case 707:
              char v61 = 0;
              unsigned int v62 = 0;
              uint64_t v28 = 0;
              *(_WORD *)(a1 + 492) |= 0x20u;
              while (2)
              {
                uint64_t v63 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
                unint64_t v64 = v63 + 1;
                if (v63 == -1 || v64 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
                {
                  *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
                }
                else
                {
                  char v65 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v63);
                  *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v64;
                  v28 |= (unint64_t)(v65 & 0x7F) << v61;
                  if (v65 < 0)
                  {
                    v61 += 7;
                    BOOL v10 = v62++ >= 9;
                    if (v10)
                    {
                      LODWORD(v28) = 0;
                      goto LABEL_237;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
                LODWORD(v28) = 0;
              }
LABEL_237:
              uint64_t v79 = 112;
              goto LABEL_246;
            case 708:
              uint64_t v14 = PBReaderReadString();
              uint64_t v15 = 72;
              goto LABEL_203;
            case 709:
              char v66 = 0;
              unsigned int v67 = 0;
              uint64_t v28 = 0;
              *(_WORD *)(a1 + 492) |= 0x800u;
              while (2)
              {
                uint64_t v68 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
                unint64_t v69 = v68 + 1;
                if (v68 == -1 || v69 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
                {
                  *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
                }
                else
                {
                  char v70 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v68);
                  *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v69;
                  v28 |= (unint64_t)(v70 & 0x7F) << v66;
                  if (v70 < 0)
                  {
                    v66 += 7;
                    BOOL v10 = v67++ >= 9;
                    if (v10)
                    {
                      LODWORD(v28) = 0;
                      goto LABEL_241;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
                LODWORD(v28) = 0;
              }
LABEL_241:
              uint64_t v79 = 456;
              goto LABEL_246;
            case 710:
              uint64_t v14 = PBReaderReadString();
              uint64_t v15 = 464;
              goto LABEL_203;
            case 711:
              uint64_t v14 = PBReaderReadString();
              uint64_t v15 = 104;
              goto LABEL_203;
            case 715:
              uint64_t v14 = PBReaderReadString();
              uint64_t v15 = 216;
              goto LABEL_203;
            default:
              if (v13 == 550)
              {
                char v72 = 0;
                unsigned int v73 = 0;
                uint64_t v28 = 0;
                *(_WORD *)(a1 + 492) |= 0x100u;
                while (1)
                {
                  uint64_t v74 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
                  unint64_t v75 = v74 + 1;
                  if (v74 == -1 || v75 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
                    break;
                  }
                  char v76 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v74);
                  *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v75;
                  v28 |= (unint64_t)(v76 & 0x7F) << v72;
                  if ((v76 & 0x80) == 0) {
                    goto LABEL_243;
                  }
                  v72 += 7;
                  BOOL v10 = v73++ >= 9;
                  if (v10)
                  {
                    LODWORD(v28) = 0;
                    goto LABEL_245;
                  }
                }
                *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_243:
                if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
                  LODWORD(v28) = 0;
                }
LABEL_245:
                uint64_t v79 = 200;
LABEL_246:
                *(_DWORD *)(a1 + v79) = v28;
                goto LABEL_204;
              }
              if (v13 != 600) {
                goto LABEL_71;
              }
              uint64_t v16 = objc_alloc_init(APPBAdAction);
              [(id)a1 addActions:v16];
              if (!PBReaderPlaceMark() || (APPBAdActionReadFrom((uint64_t)v16, a2) & 1) == 0) {
                goto LABEL_266;
              }
              break;
          }
LABEL_175:
          PBReaderRecallMark();
LABEL_176:

          goto LABEL_204;
        }
        if ((int)v13 > 399)
        {
          if (v13 == 400)
          {
            uint64_t v16 = objc_alloc_init(APPBMerchant);
            objc_storeStrong((id *)(a1 + 344), v16);
            if (!PBReaderPlaceMark() || (APPBMerchantReadFrom((uint64_t)v16, a2) & 1) == 0) {
              goto LABEL_266;
            }
          }
          else
          {
            if (v13 != 500) {
              goto LABEL_71;
            }
            uint64_t v16 = objc_alloc_init(APPBParameter);
            [(id)a1 addNativeMetadata:v16];
LABEL_48:
            if (!PBReaderPlaceMark() || !APPBParameterReadFrom((uint64_t)v16, a2))
            {
LABEL_266:

              return 0;
            }
          }
          goto LABEL_175;
        }
        if (v13 == 300)
        {
          *(_WORD *)(a1 + 492) |= 2u;
          unint64_t v23 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v23 <= 0xFFFFFFFFFFFFFFF7 && v23 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            uint64_t v24 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v23);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v23 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            uint64_t v24 = 0;
          }
          uint64_t v80 = 16;
LABEL_260:
          *(void *)(a1 + v80) = v24;
          goto LABEL_204;
        }
        if (v13 != 301) {
          goto LABEL_71;
        }
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 492) |= 0x1000u;
        while (1)
        {
          uint64_t v20 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v20);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v21;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_214;
          }
          v17 += 7;
          BOOL v10 = v18++ >= 9;
          if (v10)
          {
            uint64_t v19 = 0;
            goto LABEL_216;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_214:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v19 = 0;
        }
LABEL_216:
        BOOL v77 = v19 != 0;
        uint64_t v78 = 488;
        goto LABEL_229;
      }
      if ((int)v13 <= 800)
      {
        if (v13 == 730)
        {
          uint64_t v16 = objc_alloc_init(APPBAdJourneyStartRelayValue);
          [(id)a1 addJourneyStartRelayValues:v16];
          if (!PBReaderPlaceMark() || (APPBAdJourneyStartRelayValueReadFrom((uint64_t)v16, a2) & 1) == 0) {
            goto LABEL_266;
          }
          goto LABEL_175;
        }
        if (v13 == 750)
        {
          uint64_t v16 = objc_alloc_init(APPBAdLayoutData);
          [(id)a1 addAdLayoutData:v16];
          if (!PBReaderPlaceMark() || !APPBAdLayoutDataReadFrom((uint64_t)v16, a2)) {
            goto LABEL_266;
          }
          goto LABEL_175;
        }
        if (v13 != 800) {
          goto LABEL_71;
        }
        uint64_t v14 = PBReaderReadString();
        uint64_t v15 = 128;
      }
      else
      {
        if ((int)v13 > 810)
        {
          if (v13 == 811)
          {
            uint64_t v16 = objc_alloc_init(APPBPolicyData);
            objc_storeStrong((id *)(a1 + 368), v16);
            if (!PBReaderPlaceMark() || !APPBPolicyDataReadFrom(v16, a2)) {
              goto LABEL_266;
            }
          }
          else
          {
            if (v13 != 812)
            {
LABEL_71:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
              goto LABEL_204;
            }
            uint64_t v16 = objc_alloc_init(APPBTargetingDimensions);
            objc_storeStrong((id *)(a1 + 424), v16);
            if (!PBReaderPlaceMark() || !APPBTargetingDimensionsReadFrom(v16, a2)) {
              goto LABEL_266;
            }
          }
          goto LABEL_175;
        }
        if (v13 != 801)
        {
          if (v13 != 810) {
            goto LABEL_71;
          }
          uint64_t v16 = objc_alloc_init(APPBAdFrequencyCapData);
          objc_storeStrong((id *)(a1 + 88), v16);
          if (!PBReaderPlaceMark() || (APPBAdFrequencyCapDataReadFrom((uint64_t)v16, a2) & 1) == 0) {
            goto LABEL_266;
          }
          goto LABEL_175;
        }
        uint64_t v14 = PBReaderReadString();
        uint64_t v15 = 80;
      }
LABEL_203:
      v71 = *(void **)(a1 + v15);
      *(void *)(a1 + v15) = v14;

LABEL_204:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }
    switch((int)v13)
    {
      case 1:
        uint64_t v14 = PBReaderReadString();
        uint64_t v15 = 160;
        goto LABEL_203;
      case 2:
        uint64_t v14 = PBReaderReadString();
        uint64_t v15 = 168;
        goto LABEL_203;
      case 3:
        uint64_t v14 = PBReaderReadString();
        uint64_t v15 = 472;
        goto LABEL_203;
      case 4:
        uint64_t v14 = PBReaderReadData();
        uint64_t v15 = 280;
        goto LABEL_203;
      case 5:
        uint64_t v14 = PBReaderReadString();
        uint64_t v15 = 240;
        goto LABEL_203;
      case 6:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v30 = v29 + 1;
          if (v29 == -1 || v30 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v29);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v30;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v10 = v27++ >= 9;
              if (v10)
              {
                LODWORD(v28) = 0;
                goto LABEL_220;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v28) = 0;
        }
LABEL_220:
        uint64_t v79 = 272;
        goto LABEL_246;
      case 7:
        *(_WORD *)(a1 + 492) |= 1u;
        unint64_t v32 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v32 <= 0xFFFFFFFFFFFFFFF7 && v32 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v24 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v32);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v32 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v24 = 0;
        }
        uint64_t v80 = 8;
        goto LABEL_260;
      case 8:
        PBReaderReadString();
        uint64_t v16 = (APPBParameter *)objc_claimAutoreleasedReturnValue();
        if (v16) {
          [(id)a1 addTrackingURL:v16];
        }
        goto LABEL_176;
      case 9:
        uint64_t v14 = PBReaderReadString();
        uint64_t v15 = 432;
        goto LABEL_203;
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 23:
      case 24:
      case 25:
      case 26:
      case 27:
      case 28:
      case 29:
      case 30:
      case 31:
      case 32:
      case 33:
      case 34:
      case 39:
      case 40:
      case 41:
      case 42:
      case 44:
      case 47:
      case 48:
      case 53:
      case 55:
      case 60:
      case 61:
      case 62:
      case 64:
      case 65:
      case 66:
      case 67:
      case 68:
      case 69:
      case 79:
        goto LABEL_71;
      case 15:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        *(_WORD *)(a1 + 492) |= 0x4000u;
        while (2)
        {
          uint64_t v36 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v37 = v36 + 1;
          if (v36 == -1 || v37 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v38 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v36);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v37;
            v35 |= (unint64_t)(v38 & 0x7F) << v33;
            if (v38 < 0)
            {
              v33 += 7;
              BOOL v10 = v34++ >= 9;
              if (v10)
              {
                uint64_t v35 = 0;
                goto LABEL_224;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v35 = 0;
        }
LABEL_224:
        BOOL v77 = v35 != 0;
        uint64_t v78 = 490;
        goto LABEL_229;
      case 16:
        uint64_t v14 = PBReaderReadString();
        uint64_t v15 = 56;
        goto LABEL_203;
      case 35:
        PBReaderReadString();
        uint64_t v16 = (APPBParameter *)objc_claimAutoreleasedReturnValue();
        if (v16) {
          [(id)a1 addConfirmedClickPixelURLs:v16];
        }
        goto LABEL_176;
      case 36:
        uint64_t v14 = PBReaderReadString();
        uint64_t v15 = 152;
        goto LABEL_203;
      case 37:
        uint64_t v16 = objc_alloc_init(APPBVideoAsset);
        [(id)a1 addVideoAsset:v16];
        if (!PBReaderPlaceMark() || !APPBVideoAssetReadFrom((uint64_t)v16, a2)) {
          goto LABEL_266;
        }
        goto LABEL_175;
      case 38:
        uint64_t v16 = objc_alloc_init(APPBMediaFiles);
        objc_storeStrong((id *)(a1 + 336), v16);
        if (!PBReaderPlaceMark() || (APPBMediaFilesReadFrom((uint64_t)v16, a2) & 1) == 0) {
          goto LABEL_266;
        }
        goto LABEL_175;
      case 43:
        uint64_t v14 = PBReaderReadString();
        uint64_t v15 = 136;
        goto LABEL_203;
      case 45:
        uint64_t v14 = PBReaderReadString();
        uint64_t v15 = 392;
        goto LABEL_203;
      case 46:
        uint64_t v14 = PBReaderReadString();
        uint64_t v15 = 48;
        goto LABEL_203;
      case 49:
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(_WORD *)(a1 + 492) |= 0x2000u;
        break;
      case 50:
        *(_WORD *)(a1 + 492) |= 0x40u;
        unint64_t v45 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v45 <= 0xFFFFFFFFFFFFFFFBLL && v45 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          int v46 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v45);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v45 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          int v46 = 0;
        }
        uint64_t v81 = 144;
        goto LABEL_255;
      case 51:
        *(_WORD *)(a1 + 492) |= 0x80u;
        unint64_t v47 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v47 <= 0xFFFFFFFFFFFFFFFBLL && v47 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          int v46 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v47);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v47 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          int v46 = 0;
        }
        uint64_t v81 = 148;
LABEL_255:
        *(_DWORD *)(a1 + v81) = v46;
        goto LABEL_204;
      case 52:
        PBReaderReadString();
        uint64_t v16 = (APPBParameter *)objc_claimAutoreleasedReturnValue();
        if (v16) {
          [(id)a1 addScreenSaverImageURL:v16];
        }
        goto LABEL_176;
      case 54:
        PBReaderReadString();
        uint64_t v16 = (APPBParameter *)objc_claimAutoreleasedReturnValue();
        if (v16) {
          [(id)a1 addExcludeTag:v16];
        }
        goto LABEL_176;
      case 56:
        uint64_t v14 = PBReaderReadString();
        uint64_t v15 = 256;
        goto LABEL_203;
      case 57:
        uint64_t v14 = PBReaderReadString();
        uint64_t v15 = 248;
        goto LABEL_203;
      case 58:
        PBReaderReadString();
        uint64_t v16 = (APPBParameter *)objc_claimAutoreleasedReturnValue();
        if (v16) {
          [(id)a1 addRewardTokens:v16];
        }
        goto LABEL_176;
      case 59:
        *(_WORD *)(a1 + 492) |= 8u;
        unint64_t v48 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v48 <= 0xFFFFFFFFFFFFFFF7 && v48 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v24 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v48);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v48 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v24 = 0;
        }
        uint64_t v80 = 32;
        goto LABEL_260;
      case 63:
        uint64_t v16 = objc_alloc_init(APPBTagSet);
        [(id)a1 addMatchTagClause:v16];
        if (!PBReaderPlaceMark() || (APPBTagSetReadFrom(v16, a2) & 1) == 0) {
          goto LABEL_266;
        }
        goto LABEL_175;
      case 70:
        *(_WORD *)(a1 + 492) |= 0x10u;
        unint64_t v49 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v49 <= 0xFFFFFFFFFFFFFFF7 && v49 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v24 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v49);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v49 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v24 = 0;
        }
        uint64_t v80 = 40;
        goto LABEL_260;
      case 71:
        uint64_t v14 = PBReaderReadString();
        uint64_t v15 = 312;
        goto LABEL_203;
      case 72:
        uint64_t v14 = PBReaderReadString();
        uint64_t v15 = 232;
        goto LABEL_203;
      case 73:
        uint64_t v14 = PBReaderReadString();
        uint64_t v15 = 192;
        goto LABEL_203;
      case 74:
        *(_WORD *)(a1 + 492) |= 4u;
        unint64_t v50 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v50 <= 0xFFFFFFFFFFFFFFF7
          && (unint64_t v51 = v50 + 8, v50 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)))
        {
          uint64_t v52 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v50);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v51;
        }
        else
        {
          uint64_t v52 = 0;
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
        }
        *(void *)(a1 + 24) = v52;
        goto LABEL_204;
      case 75:
        uint64_t v16 = objc_alloc_init(APPBGeofence);
        [(id)a1 addGeofences:v16];
        if (!PBReaderPlaceMark() || !APPBGeofenceReadFrom((uint64_t)v16, a2)) {
          goto LABEL_266;
        }
        goto LABEL_175;
      case 76:
        uint64_t v14 = PBReaderReadString();
        uint64_t v15 = 408;
        goto LABEL_203;
      case 77:
        uint64_t v14 = PBReaderReadString();
        uint64_t v15 = 416;
        goto LABEL_203;
      case 78:
        uint64_t v16 = objc_alloc_init(APPBAdSize);
        [(id)a1 addCreativeSizes:v16];
        if (!PBReaderPlaceMark() || (APPBAdSizeReadFrom((uint64_t)v16, a2) & 1) == 0) {
          goto LABEL_266;
        }
        goto LABEL_175;
      case 80:
        *(_WORD *)(a1 + 492) |= 0x200u;
        unint64_t v53 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v53 <= 0xFFFFFFFFFFFFFFFBLL
          && (unint64_t v54 = v53 + 4, v53 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)))
        {
          int v55 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v53);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v54;
        }
        else
        {
          int v55 = 0;
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
        }
        *(_DWORD *)(a1 + 304) = v55;
        goto LABEL_204;
      case 81:
        uint64_t v16 = objc_alloc_init(APPBInstallAttribution);
        objc_storeStrong((id *)(a1 + 288), v16);
        if (!PBReaderPlaceMark() || (APPBInstallAttributionReadFrom((uint64_t)v16, a2) & 1) == 0) {
          goto LABEL_266;
        }
        goto LABEL_175;
      default:
        if (v13 != 200) {
          goto LABEL_71;
        }
        uint64_t v16 = objc_alloc_init(APPBAdSpecification);
        objc_storeStrong((id *)(a1 + 400), v16);
        if (!PBReaderPlaceMark() || (APPBAdSpecificationReadFrom((uint64_t)v16, a2) & 1) == 0) {
          goto LABEL_266;
        }
        goto LABEL_175;
    }
    while (1)
    {
      uint64_t v42 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v43 = v42 + 1;
      if (v42 == -1 || v43 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v44 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v42);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v43;
      v41 |= (unint64_t)(v44 & 0x7F) << v39;
      if ((v44 & 0x80) == 0) {
        goto LABEL_226;
      }
      v39 += 7;
      BOOL v10 = v40++ >= 9;
      if (v10)
      {
        uint64_t v41 = 0;
        goto LABEL_228;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_226:
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      uint64_t v41 = 0;
    }
LABEL_228:
    BOOL v77 = v41 != 0;
    uint64_t v78 = 489;
LABEL_229:
    *(unsigned char *)(a1 + v78) = v77;
    goto LABEL_204;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_100007398(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1000073AC(uint64_t a1)
{
  v2 = APLogForCategory();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Starting Time Spent Report activity.", buf, 2u);
  }

  objc_copyWeak(&to, (id *)(a1 + 48));
  id v3 = [APTimeSpentStoreDatabase alloc];
  char v4 = +[APDatabaseManager mainDatabase];
  unsigned int v5 = [(APTimeSpentStoreDatabase *)v3 initWithDatabase:v4];

  [*(id *)(a1 + 32) retrieveTimeSpentTTLConfigValue];
  uint64_t v7 = +[NSDate dateWithTimeIntervalSinceNow:-v6];
  unint64_t v8 = [(APTimeSpentStoreDatabase *)v5 retrieveTimeSpentEntriesOlderThan:v7];
  id v9 = [v8 mutableCopy];

  id v11 = objc_loadWeakRetained(&to);
  [v11 makeTimeSpentRequests:v9 activity:*(void *)(a1 + 40)];

  objc_destroyWeak(&to);
}

void sub_1000074F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
}

void sub_100007AC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100007AF4(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if ((a2 & 1) == 0)
  {
    double v6 = APLogForCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v9 = 138543362;
      id v10 = v5;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "Time Spent Metric Request failed for some reason, keep content with identifier %{public}@ in database to retry later.", (uint8_t *)&v9, 0xCu);
    }
  }
  [*(id *)(a1 + 32) removeLastObject];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained makeTimeSpentRequests:*(void *)(a1 + 32) activity:*(void *)(a1 + 40)];
}

uint64_t sub_100007EAC(uint64_t a1)
{
  [*(id *)(a1 + 32) setTimeSpentLegacyInterface:0];
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

void sub_1000080C8(id a1)
{
  v2 = objc_alloc_init(PromotedContentDaemon);
  id v3 = (void *)qword_100288870;
  qword_100288870 = (uint64_t)v2;
}

void sub_1000092B0()
{
  bzero(v0, 0x400uLL);
  if ((!_set_user_dir_suffix() || !confstr(65537, v0, 0x400uLL))
    && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_10019A520();
  }
}

void start()
{
  signal(15, (void (__cdecl *)(int))1);
  v0 = dispatch_get_global_queue(21, 0);
  uint64_t v1 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_signal, 0xFuLL, 0, v0);
  dispatch_source_set_event_handler(v1, &stru_10022E418);
  dispatch_activate(v1);
  id v3 = APLogForCategory();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v8) = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Starting up the daemon.", (uint8_t *)&v8, 2u);
  }

  sub_1000092B0();
  char v4 = +[PromotedContentDaemon sharedInstance];
  id v5 = APLogForCategory();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    double v6 = [v4 status];
    int v8 = 138412290;
    int v9 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Daemon Status:\n%@", (uint8_t *)&v8, 0xCu);
  }
  uint64_t v7 = APLogForCategory();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v8) = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Initiating main queue.", (uint8_t *)&v8, 2u);
  }

  dispatch_main();
}

void sub_1000094D4(id a1)
{
}

void sub_1000095A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1000095BC(id a1, int64_t a2)
{
  id v3 = APLogForCategory();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    int v4 = 134217984;
    int64_t v5 = a2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Finished pcd_default pool manager setup with state %ld", (uint8_t *)&v4, 0xCu);
  }
}

void sub_1000098CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000098F0(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v7 = [WeakRetained configurationStorage];
    [v7 updateConfigurationSystemWithData:v5];
  }
  int v8 = APLogForCategory();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    CFStringRef v9 = @"Error";
    if (a2) {
      CFStringRef v9 = @"Success";
    }
    int v10 = 138412290;
    CFStringRef v11 = v9;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Config System Request after reset completed with: %@.", (uint8_t *)&v10, 0xCu);
  }

  [*(id *)(a1 + 32) finished];
}

void sub_10000A0D4(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = APLogForCategory();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Config System Background Task Started.", buf, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = objc_alloc((Class)APConfigurationRequester);
  uint64_t v7 = [WeakRetained _storefront];
  id v8 = [v6 initWithStorefront:v7];

  *(void *)buf = 0;
  char v22 = buf;
  uint64_t v23 = 0x2020000000;
  char v24 = 0;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_10000A334;
  v17[3] = &unk_10022E4B8;
  uint64_t v20 = buf;
  id v9 = v8;
  id v18 = v9;
  id v10 = WeakRetained;
  id v19 = v10;
  [v3 setExpirationHandler:v17];
  if (v22[24])
  {
    [v10 _expireTask:v3];
    CFStringRef v11 = APLogForCategory();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "Config System Background Task Expired before request.", v16, 2u);
    }
  }
  else
  {
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_10000A3D4;
    v12[3] = &unk_10022E4E0;
    uint64_t v15 = buf;
    unint64_t v13 = v10;
    id v14 = v3;
    [v9 requestConfigurationWithCompletionHandler:v12];

    CFStringRef v11 = v13;
  }

  _Block_object_dispose(buf, 8);
}

void sub_10000A318(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_10000A334(uint64_t a1)
{
  v2 = APLogForCategory();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Config System Background Task Asked to Expire.", v4, 2u);
  }

  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
  [*(id *)(a1 + 32) cancelRequest];
  id v3 = [*(id *)(a1 + 40) configurationStorage];
  [v3 cancelConfigurationUpdate];
}

void sub_10000A3D4(uint64_t a1, unsigned int a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
  if (v5 && (*(unsigned char *)(v6 + 24) & 1) == 0)
  {
    uint64_t v7 = [*(id *)(a1 + 32) configurationStorage];
    a2 = [v7 updateConfigurationSystemWithData:v5];

    uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
  }
  char v8 = *(unsigned char *)(v6 + 24);
  if (v8) {
    [*(id *)(a1 + 32) _expireTask:*(void *)(a1 + 40)];
  }
  else {
    [*(id *)(a1 + 40) setTaskCompleted];
  }
  id v9 = APLogForCategory();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    CFStringRef v10 = @"Expired";
    if ((v8 & 1) == 0) {
      CFStringRef v10 = @"Error";
    }
    if (a2) {
      CFStringRef v10 = @"Success";
    }
    int v11 = 138412290;
    CFStringRef v12 = v10;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Config System Background Task Completed With: %@.", (uint8_t *)&v11, 0xCu);
  }
}

void sub_10000AAD4(uint64_t a1, int a2)
{
  int v4 = APLogForCategory();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
  {
    CFStringRef v5 = @"completed";
    if (a2) {
      CFStringRef v5 = @"cancelled";
    }
    int v6 = 138543362;
    CFStringRef v7 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Cache GC activity %{public}@.", (uint8_t *)&v6, 0xCu);
  }

  if ((a2 & 1) == 0) {
    [*(id *)(a1 + 32) finished];
  }
}

id sub_10000AE10()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GlobalState();
  return [super dealloc];
}

uint64_t type metadata accessor for GlobalState()
{
  return self;
}

uint64_t sub_10000AE6C(void *a1, void *a2)
{
  type metadata accessor for ObservabilityManager();
  v7[3] = type metadata accessor for ObservabilityXPCTimerActivity();
  v7[4] = &off_10022E5D8;
  v7[0] = a1;
  id v4 = a1;
  uint64_t v5 = static ObservabilityManager.create(with:database:)((uint64_t)v7, a2);
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v7);
  qword_10028D2C0 = v5;
  swift_release();
  sub_10019AE70();
  qword_10028D2C8 = sub_10019AE40();
  return swift_release();
}

uint64_t _s7Metrics31ObservabilitySignalDeserializerVwxx_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_10000AF6C()
{
  uint64_t result = sub_10000AF90();
  qword_100282C70 = result;
  *(void *)algn_100282C78 = v1;
  return result;
}

uint64_t sub_10000AF90()
{
  v0 = self;
  sub_10000C6C8(0, (unint64_t *)&qword_100282D20);
  id v1 = [v0 configurationForClass:swift_getObjCClassFromMetadata()];
  self;
  objc_super v2 = (void *)swift_dynamicCastObjCClass();
  if (v2)
  {
    id v3 = v2;
    id v4 = [v2 xpcTimerGracePeriod];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = (uint64_t)[v4 longLongValue];
    }
    else
    {
      uint64_t v6 = 360;
    }
    id v7 = [v3 xpcTimerPriority];
    if (v7)
    {
      char v8 = v7;
      uint64_t v9 = sub_10019B0B0();
      uint64_t v11 = v10;

      BOOL v12 = v9 == 0x616E65746E69616DLL && v11 == 0xEB0000000065636ELL;
      if (v12 || (sub_10019B720() & 1) != 0 || v9 == 0x7974696C697475 && v11 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_10019B720();
        swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    uint64_t v6 = 360;
  }
  swift_unknownObjectRelease();
  return v6;
}

uint64_t sub_10000B1A4(uint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v3 = qword_100282C40;
  id v4 = v2;
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_100282C70;
  uint64_t v5 = *(void *)algn_100282C78;
  uint64_t result = sub_10019AB30();
  if ((~*(void *)&v8 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v8 < 9.22337204e18)
  {
    [v4 setDelay:(uint64_t)v8];
    [v4 setRequiresNetworkConnectivity:0];
    [v4 setIsRepeating:0];
    [v4 setIsCPUIntensive:0];
    [v4 setRequireBuddyComplete:1];
    [v4 setAllowBattery:1];
    [v4 setRequireSleep:0];
    [v4 setGracePeriod:v6];
    [v4 setPriority:v5];
    [v4 setRequireClassCData:1];
    [v4 setIsDiskIntensive:0];
    sub_10019AB50();
    [v4 setScheduledTime:];

    uint64_t v9 = sub_10019ABA0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
    return (uint64_t)v4;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t (*sub_10000B3A0(uint64_t *a1))(void *a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC16promotedcontentd29ObservabilityXPCTimerActivity_apXpcActivityDelegate);
  uint64_t v4 = OBJC_IVAR____TtC16promotedcontentd37ObservabilityXPCTimerActivityDelegate_delegate;
  a1[2] = v3;
  a1[3] = v4;
  uint64_t v5 = v3 + v4;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = *(void *)(v5 + 8);
  *a1 = Strong;
  a1[1] = v7;
  return sub_10000B408;
}

uint64_t sub_10000B408(void *a1)
{
  *(void *)(a1[2] + a1[3] + 8) = a1[1];
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

id sub_10000B54C(uint64_t a1)
{
  return sub_10000C258(a1, type metadata accessor for ObservabilityXPCTimerActivity);
}

uint64_t type metadata accessor for ObservabilityXPCTimerActivity()
{
  return self;
}

uint64_t sub_10000B5D4()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t sub_10000B618(uint64_t a1, uint64_t a2)
{
  *(void *)(*(void *)(*v2 + OBJC_IVAR____TtC16promotedcontentd29ObservabilityXPCTimerActivity_apXpcActivityDelegate)
            + OBJC_IVAR____TtC16promotedcontentd37ObservabilityXPCTimerActivityDelegate_delegate
            + 8) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

void (*sub_10000B674(uint64_t **a1))(void *a1)
{
  id v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_10000B3A0(v2);
  return sub_10000B6D0;
}

void sub_10000B6D0(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

id sub_10000B718(uint64_t a1)
{
  uint64_t v3 = sub_10000C440(&qword_100282D10);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v1;
  uint64_t v7 = *(void *)(*v1 + OBJC_IVAR____TtC16promotedcontentd29ObservabilityXPCTimerActivity_apXpcActivityDelegate);
  uint64_t v8 = sub_10019ABA0();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v5, a1, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
  uint64_t v10 = v7 + OBJC_IVAR____TtC16promotedcontentd37ObservabilityXPCTimerActivityDelegate_currentScheduledTime;
  swift_beginAccess();
  sub_10000C484((uint64_t)v5, v10);
  swift_endAccess();
  return [*(id *)(v6 + OBJC_IVAR____TtC16promotedcontentd29ObservabilityXPCTimerActivity_apXpcActivity) schedule];
}

uint64_t sub_10000B960()
{
  uint64_t v1 = sub_10000C440(&qword_100282D10);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10019ABA0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v14 - v9;
  uint64_t v11 = v0 + OBJC_IVAR____TtC16promotedcontentd37ObservabilityXPCTimerActivityDelegate_currentScheduledTime;
  swift_beginAccess();
  sub_10000C660(v11, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_10000C4EC((uint64_t)v3);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v3, v4);
    sub_10000C6C8(0, &qword_100282D18);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
    uint64_t v12 = sub_10000B1A4((uint64_t)v8);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  return v12;
}

uint64_t sub_10000BB5C(void *a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC16promotedcontentd37ObservabilityXPCTimerActivityDelegate_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v4 = *(void *)(v3 + 8);
    uint64_t v5 = swift_allocObject();
    *(unsigned char *)(v5 + 16) = 0;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a1;
    *(void *)(v7 + 24) = v5;
    uint64_t v8 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v4 + 8);
    id v9 = a1;
    swift_retain();
    v8(sub_10000C604, v7, ObjectType, v4);
    swift_release();
    swift_unknownObjectRelease();
    swift_beginAccess();
    char v10 = *(unsigned char *)(v5 + 16);
    swift_release();
    char v11 = v10 ^ 1;
  }
  else
  {
    char v11 = 0;
  }
  return v11 & 1;
}

uint64_t sub_10000BF40(uint64_t a1)
{
  uint64_t v3 = sub_10000C440(&qword_100282D10);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v9 = sub_10019ABA0();
  char v10 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
  v10(v8, 1, 1, v9);
  if (a1)
  {
    char v11 = (const char *)AP_XPC_ACTIVITY_SCHEDULED_TIME;
    uint64_t v12 = (void *)swift_unknownObjectRetain();
    double v13 = xpc_dictionary_get_double(v12, v11);
    BOOL v14 = (~*(void *)&v13 & 0x7FF0000000000000) != 0 || (*(void *)&v13 & 0xFFFFFFFFFFFFFLL) == 0;
    if (v14 && v13 > 0.0)
    {
      sub_10019AB40();
      swift_unknownObjectRelease();
      sub_10000C4EC((uint64_t)v8);
      v10(v6, 0, 1, v9);
      sub_10000C54C((uint64_t)v6, (uint64_t)v8);
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  uint64_t v15 = v1 + OBJC_IVAR____TtC16promotedcontentd37ObservabilityXPCTimerActivityDelegate_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v16 = *(void *)(v15 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v8, ObjectType, v16);
    swift_unknownObjectRelease();
  }
  sub_10000C4EC((uint64_t)v8);
  return 0;
}

id sub_10000C23C()
{
  return sub_10000C258(0, type metadata accessor for ObservabilityXPCTimerActivityDelegate);
}

id sub_10000C258(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t sub_10000C2F0()
{
  return type metadata accessor for ObservabilityXPCTimerActivityDelegate();
}

uint64_t type metadata accessor for ObservabilityXPCTimerActivityDelegate()
{
  uint64_t result = qword_100282CF8;
  if (!qword_100282CF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10000C344()
{
  sub_10000C3E8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10000C3E8()
{
  if (!qword_100282D08)
  {
    sub_10019ABA0();
    unint64_t v0 = sub_10019B480();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100282D08);
    }
  }
}

uint64_t sub_10000C440(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_10000C484(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000C440(&qword_100282D10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000C4EC(uint64_t a1)
{
  uint64_t v2 = sub_10000C440(&qword_100282D10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10000C54C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000C440(&qword_100282D10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000C5B4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10000C5C4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10000C604()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  [v1 finished];
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v2 + 16) = 1;
  return result;
}

uint64_t sub_10000C660(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000C440(&qword_100282D10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000C6C8(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_10000C704()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10000C73C(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

uint64_t sub_10000C754()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10000C78C()
{
  return (*(uint64_t (**)(uint64_t))(v0 + 16))(1);
}

uint64_t sub_10000C7B8(uint64_t a1)
{
  return a1;
}

void *sub_10000C7E0(void *result)
{
  *uint64_t result = ++qword_100288880;
  return result;
}

uint64_t sub_10000C7FC(mach_port_t a1, int a2, int *a3, uint64_t a4, int a5, _OWORD *a6, void *a7, _DWORD *a8, _DWORD *a9, _DWORD *a10, _DWORD *a11, _DWORD *a12)
{
  int v30 = 1;
  uint64_t v31 = a4;
  int v32 = 16777472;
  int v33 = a5;
  NDR_record_t v34 = NDR_record;
  int v17 = *a3;
  int v35 = a2;
  int v36 = v17;
  int v37 = a5;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B000000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v19 = mach_msg(&msg, 3, 0x40u, 0xDCu, reply_port, 0, 0);
  uint64_t v20 = v19;
  if ((v19 - 268435458) <= 0xE && ((1 << (v19 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!v19)
    {
      if (msg.msgh_id == 71)
      {
        uint64_t v20 = 4294966988;
      }
      else if (msg.msgh_id == 1300)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          uint64_t v20 = 4294966996;
          if (v30 == 2
            && msg.msgh_size == 212
            && !msg.msgh_remote_port
            && HIBYTE(v32) == 1
            && HIWORD(v35) << 16 == 1114112)
          {
            int v21 = v33;
            if (v33 == v47)
            {
              uint64_t v20 = 0;
              int v22 = *(_DWORD *)&v34.mig_vers;
              *a3 = v38;
              long long v23 = v46;
              a6[6] = v45;
              a6[7] = v23;
              long long v24 = v44;
              a6[4] = v43;
              a6[5] = v24;
              long long v25 = v40;
              *a6 = v39;
              a6[1] = v25;
              long long v26 = v42;
              a6[2] = v41;
              a6[3] = v26;
              *a7 = v31;
              *a8 = v21;
              int v27 = v49;
              *a9 = v48;
              *a10 = v27;
              *a11 = v50;
              *a12 = v22;
              return v20;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          uint64_t v20 = 4294966996;
          if (HIDWORD(v31))
          {
            if (msg.msgh_remote_port) {
              uint64_t v20 = 4294966996;
            }
            else {
              uint64_t v20 = HIDWORD(v31);
            }
          }
        }
        else
        {
          uint64_t v20 = 4294966996;
        }
      }
      else
      {
        uint64_t v20 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v20;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v20;
}

uint64_t sub_10000CA58(mach_port_t a1, unsigned int a2, long long *a3)
{
  long long v4 = a3[5];
  long long v19 = a3[4];
  long long v20 = v4;
  long long v5 = a3[7];
  long long v21 = a3[6];
  long long v22 = v5;
  long long v6 = a3[1];
  long long v15 = *a3;
  long long v16 = v6;
  long long v7 = a3[3];
  long long v17 = a3[2];
  NDR_record_t v13 = NDR_record;
  unsigned int v14 = a2;
  long long v18 = v7;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B100000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v9 = mach_msg(&msg, 3, 0xA4u, 0x2Cu, reply_port, 0, 0);
  uint64_t v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (v9)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (msg.msgh_id == 71)
  {
    uint64_t v10 = 4294966988;
LABEL_17:
    mach_msg_destroy(&msg);
    return v10;
  }
  if (msg.msgh_id != 1301)
  {
    uint64_t v10 = 4294966995;
    goto LABEL_17;
  }
  uint64_t v10 = 4294966996;
  if ((msg.msgh_bits & 0x80000000) != 0) {
    goto LABEL_17;
  }
  if (msg.msgh_size != 36) {
    goto LABEL_17;
  }
  if (msg.msgh_remote_port) {
    goto LABEL_17;
  }
  uint64_t v10 = v14;
  if (v14) {
    goto LABEL_17;
  }
  return v10;
}

uint64_t sub_10000CBE8(mach_port_t a1, int a2, int a3, int a4, _OWORD *a5, uint64_t a6, int a7, _OWORD *a8, void *a9, _DWORD *a10)
{
  int v18 = 1;
  uint64_t v19 = a6;
  int v20 = 16777472;
  int v21 = a7;
  NDR_record_t v22 = NDR_record;
  *(_DWORD *)long long v23 = a2;
  *(_DWORD *)&v23[4] = a3;
  *(_DWORD *)&v23[8] = a4;
  *(_OWORD *)&v23[12] = *a5;
  int v24 = a7;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B200000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v13 = mach_msg(&msg, 3, 0x54u, 0x50u, reply_port, 0, 0);
  uint64_t v14 = v13;
  if ((v13 - 268435458) <= 0xE && ((1 << (v13 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!v13)
    {
      if (msg.msgh_id == 71)
      {
        uint64_t v14 = 4294966988;
      }
      else if (msg.msgh_id == 1302)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          uint64_t v14 = 4294966996;
          if (v18 == 1 && msg.msgh_size == 72 && !msg.msgh_remote_port && HIBYTE(v20) == 1)
          {
            int v15 = v21;
            if (v21 == *(_DWORD *)&v23[16])
            {
              uint64_t v14 = 0;
              *a8 = *(_OWORD *)v23;
              *a9 = v19;
              *a10 = v15;
              return v14;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          uint64_t v14 = 4294966996;
          if (HIDWORD(v19))
          {
            if (msg.msgh_remote_port) {
              uint64_t v14 = 4294966996;
            }
            else {
              uint64_t v14 = HIDWORD(v19);
            }
          }
        }
        else
        {
          uint64_t v14 = 4294966996;
        }
      }
      else
      {
        uint64_t v14 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v14;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v14;
}

uint64_t sub_10000CDD8(mach_port_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5)
{
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B300000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v11 = mach_msg(&msg, 3, 0x18u, 0x3Cu, reply_port, 0, 0);
  uint64_t v12 = v11;
  if ((v11 - 268435458) > 0xE || ((1 << (v11 - 2)) & 0x4003) == 0)
  {
    if (v11)
    {
      mig_dealloc_reply_port(msg.msgh_local_port);
      return v12;
    }
    if (msg.msgh_id == 71)
    {
      uint64_t v12 = 4294966988;
    }
    else if (msg.msgh_id == 1303)
    {
      if ((msg.msgh_bits & 0x80000000) == 0)
      {
        if (msg.msgh_size == 52)
        {
          if (!msg.msgh_remote_port)
          {
            uint64_t v12 = v18;
            if (!v18)
            {
              int v15 = v20;
              *a2 = v19;
              *a3 = v15;
              int v16 = v22;
              *a4 = v21;
              *a5 = v16;
              return v12;
            }
            goto LABEL_23;
          }
        }
        else if (msg.msgh_size == 36)
        {
          if (msg.msgh_remote_port) {
            BOOL v13 = 1;
          }
          else {
            BOOL v13 = v18 == 0;
          }
          if (v13) {
            uint64_t v12 = 4294966996;
          }
          else {
            uint64_t v12 = v18;
          }
          goto LABEL_23;
        }
      }
      uint64_t v12 = 4294966996;
    }
    else
    {
      uint64_t v12 = 4294966995;
    }
LABEL_23:
    mach_msg_destroy(&msg);
    return v12;
  }
  mig_put_reply_port(msg.msgh_local_port);
  return v12;
}

uint64_t sub_10000CF54(uint64_t a1)
{
  uint64_t v1 = *(&off_100233720
       + ((-35 * ((qword_100282DD0 - dword_100283870) ^ 0xAE)) ^ byte_1001D6470[byte_1001D16A0[(-35 * ((qword_100282DD0 - dword_100283870) ^ 0xAE))] ^ 0x19])
       + 38);
  uint64_t v2 = (uint64_t)*(&off_100233720
                + (byte_1001CE738[(byte_1001CB460[(-35 * (*v1 ^ qword_100282DD0 ^ 0xAE))] ^ 0x28)
                                                 - 8] ^ (-35 * (*v1 ^ qword_100282DD0 ^ 0xAE)))
                - 41);
  uint64_t v3 = *v1 - (void)&v5 + *(void *)(v2 - 4);
  *uint64_t v1 = 2121524189 * v3 - 0x5BDF866B682B5252;
  *(void *)(v2 - 4) = 2121524189 * (v3 ^ 0xA420799497D4ADAELL);
  unsigned int v7 = 1755732067 * ((&v6 & 0x92BE7FA4 | ~(&v6 | 0x92BE7FA4)) ^ 0xB3873D80) + 151;
  uint64_t v6 = a1;
  LOBYTE(v1) = -35 * (*(_DWORD *)v1 ^ 0xAE ^ *(_DWORD *)(v2 - 4));
  return (*((uint64_t (**)(uint64_t *))*(&off_100233720
                                                + ((-35
                                                                                 * (dword_100283870 ^ 0xAE ^ qword_100282DD0)) ^ byte_1001CE730[byte_1001CB460[(-35 * (dword_100283870 ^ 0xAE ^ qword_100282DD0))] ^ 0x28])
                                                + 15)
          + (byte_1001CE83C[(byte_1001CB56C[v1 - 12] ^ 0xF3) - 12] ^ v1)
          + 2153))(&v6);
}

uint64_t sub_10000D14C(char a1, unsigned int a2)
{
  return byte_1001D6378[(byte_1001D15A0[a2] ^ a1) - 8] ^ a2;
}

uint64_t sub_10000D178(unsigned int a1)
{
  return byte_1001D6470[byte_1001D16AC[a1 - 12] ^ 0x19] ^ a1;
}

uint64_t sub_10000D1A4(char a1, unsigned int a2)
{
  return byte_1001CE83C[(byte_1001CB56C[a2 - 12] ^ a1) - 12] ^ a2;
}

uint64_t sub_10000D1D0(unsigned int a1)
{
  return byte_1001D17AC[(byte_1001CE93C[a1 - 12] ^ 0x1A) - 12] ^ a1;
}

uint64_t sub_10000D200(unsigned int a1)
{
  return byte_1001D6378[~byte_1001D15A0[a1] - 8] ^ a1;
}

uint64_t sub_10000D22C(unsigned int a1)
{
  return byte_1001CE738[(byte_1001CB460[a1] ^ 0x5B) - 8] ^ a1;
}

uint64_t sub_10000D25C(unsigned int a1)
{
  return byte_1001D6378[(byte_1001D15A0[a1] ^ 0x6E) - 8] ^ a1;
}

uint64_t sub_10000D28C(unsigned int a1)
{
  return byte_1001CE738[(byte_1001CB460[a1] ^ 0x5E) - 8] ^ a1;
}

uint64_t sub_10000D2BC(uint64_t a1)
{
  uint64_t v1 = (unint64_t *)*(&off_100233720
                           + ((-35 * ((qword_100282DD0 + dword_100283A00) ^ 0xAE)) ^ byte_1001D17A0[byte_1001CE930[(-35 * ((qword_100282DD0 + dword_100283A00) ^ 0xAE))] ^ 0x1A])
                           - 113);
  uint64_t v2 = (uint64_t)*(&off_100233720
                + (byte_1001CE738[(byte_1001CB460[(-35
                                                                                   * ((qword_100282DD0 + *v1) ^ 0xAE))] ^ 0x5E)
                                                 - 8] ^ (-35 * ((qword_100282DD0 + *v1) ^ 0xAE)))
                - 156);
  unint64_t v3 = (*(void *)(v2 - 4) + *v1) ^ (unint64_t)&v5;
  *uint64_t v1 = (2121524189 * v3) ^ 0xA420799497D4ADAELL;
  *(void *)(v2 - 4) = 2121524189 * (v3 ^ 0xA420799497D4ADAELL);
  unsigned int v7 = (3804331 * ((725251267 - (&v6 | 0x2B3A74C3) + (&v6 | 0xD4C58B3C)) ^ 0xAA10AECA)) ^ 0x364;
  uint64_t v6 = a1;
  LODWORD(v2) = 2121524189 * ((*(_DWORD *)(v2 - 4) + *(_DWORD *)v1) ^ 0x97D4ADAE);
  return (*((uint64_t (**)(uint64_t *))*(&off_100233720
                                                + ((-35
                                                                                 * ((qword_100282DD0 + dword_100283A00) ^ 0xAE)) ^ byte_1001D6370[byte_1001D15A0[(-35 * ((qword_100282DD0 + dword_100283A00) ^ 0xAE))] ^ 0x6E])
                                                + 67)
          + (byte_1001D17AC[(byte_1001CE93C[v2 - 12] ^ 0x1A) - 12] ^ v2)
          + 2043))(&v6);
}

uint64_t sub_10000D4C8(unsigned int a1)
{
  return byte_1001D6378[(byte_1001D15A0[a1] ^ 0x68) - 8] ^ a1;
}

uint64_t sub_10000D4F8(char a1, unsigned int a2)
{
  return byte_1001CE738[(byte_1001CB460[a2] ^ a1) - 8] ^ a2;
}

uint64_t sub_10000D524(unsigned int a1)
{
  return byte_1001CE83C[(byte_1001CB56C[a1 - 12] ^ 0xF3) - 12] ^ a1;
}

uint64_t sub_10000D554(char a1, unsigned int a2)
{
  return byte_1001CEA34[(byte_1001CB660[a2] ^ a1) - 4] ^ a2;
}

uint64_t sub_10000D580(unsigned int a1)
{
  return byte_1001CEA34[(byte_1001CB660[a1] ^ 0x4C) - 4] ^ a1;
}

uint64_t sub_10000D5B0(unsigned int a1)
{
  return byte_1001D17AC[(byte_1001CE93C[a1 - 12] ^ 0xF4) - 12] ^ a1;
}

uint64_t sub_10000D5E0(unsigned int a1)
{
  return byte_1001D6378[(byte_1001D15A0[a1] ^ 0x98) - 8] ^ a1;
}

uint64_t sub_10000D610(unsigned int a1)
{
  return byte_1001CE738[(byte_1001CB460[a1] ^ 0x28) - 8] ^ a1;
}

uint64_t sub_10000D640(uint64_t a1)
{
  uint64_t v1 = (uint64_t)*(&off_100233720
                + (byte_1001D6470[byte_1001D16AC[(-35
                                                                                                * ((qword_100282DD0
                                                                                                  + dword_100282E30) ^ 0xAE))
                                                                              - 12] ^ 0x19] ^ (-35
                                                                                             * ((qword_100282DD0
                                                                                               + dword_100282E30) ^ 0xAE)))
                + 58);
  uint64_t v2 = *(void *)(v1 - 4);
  uint64_t v3 = (uint64_t)*(&off_100233720
                + (byte_1001CE738[(byte_1001CB460[(-35
                                                                                                 * (v2 ^ qword_100282DD0 ^ 0xAE))] ^ 0x5B)
                                                               - 8] ^ (-35 * (v2 ^ qword_100282DD0 ^ 0xAE)))
                + 37);
  unint64_t v4 = (*(void *)(v3 - 4) + v2) ^ (unint64_t)&v6;
  *(void *)(v1 - 4) = 2121524189 * v4 + 0x5BDF866B682B5252;
  *(void *)(v3 - 4) = 2121524189 * (v4 ^ 0xA420799497D4ADAELL);
  uint64_t v7 = a1;
  unsigned int v8 = 1451 - 1759421093 * (((&v7 | 0xE3881E77) + (~&v7 | 0x1C77E188)) ^ 0x50F5AE22);
  LOBYTE(v3) = -35 * ((*(_DWORD *)(v3 - 4) + *(_DWORD *)(v1 - 4)) ^ 0xAE);
  (*((void (**)(uint64_t *))*(&off_100233720
                                      + ((-35 * (dword_100282E30 ^ 0xAE ^ qword_100282DD0)) ^ byte_1001CEA30[byte_1001CB660[(-35 * (dword_100282E30 ^ 0xAE ^ qword_100282DD0))] ^ 0x4C])
                                      + 145)
   + (byte_1001D6378[(byte_1001D15A0[v3] ^ 0x68) - 8] ^ v3)
   + 2057))(&v7);
  return v9;
}

uint64_t sub_10000D83C(char a1, unsigned int a2)
{
  return byte_1001D6470[(byte_1001D16AC[a2 - 12] ^ a1)] ^ a2;
}

uint64_t sub_10000D868(unsigned int a1)
{
  return byte_1001CE738[(byte_1001CB460[a1] ^ 0xFB) - 8] ^ a1;
}

uint64_t sub_10000D898(char a1, unsigned int a2)
{
  return byte_1001D17AC[(byte_1001CE93C[a2 - 12] ^ a1) - 12] ^ a2;
}

uint64_t sub_10000D8C4(unsigned int a1)
{
  return byte_1001CEA34[(byte_1001CB660[a1] ^ 0x13) - 4] ^ a1;
}

uint64_t sub_10000D8F4(unsigned int a1)
{
  return byte_1001D6378[(byte_1001D15A0[a1] ^ 0x7B) - 8] ^ a1;
}

uint64_t sub_10000D924(unsigned int a1)
{
  return byte_1001D6470[byte_1001D16AC[a1 - 12] ^ 0xA5] ^ a1;
}

uint64_t sub_10000D950(unsigned int a1)
{
  return byte_1001D6470[byte_1001D16AC[a1 - 12] ^ 0x74] ^ a1;
}

void sub_10000D97C(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 - 235795823 * ((a1 + 1658036232 - 2 * (a1 & 0x62D3A008)) ^ 0xF67EE951) + 1503;
  int v2 = v1 + *(_DWORD *)(*(void *)(a1 + 8) - 0x9F59A8236606BCLL);
  int v4 = v2 - 1477600977;
  BOOL v3 = v2 - 1477600977 < 0;
  int v5 = 1477600977 - v2;
  if (!v3) {
    int v5 = v4;
  }
  __asm { BRAA            X11, X17 }
}

uint64_t sub_10000DAC4()
{
  return sub_10002EA1C(-2124048112);
}

uint64_t sub_10000DAF4()
{
  *(void *)(v0 - 0x5248BA885C210B04) = (*v2 - 1533631348)
                                         + *(void *)(v3 - 0x6C0C7F2AED40EE91)
                                         + 8;
  return (*(uint64_t (**)(void))(v6 + 8 * ((2067 * (*v4 == v5)) ^ v1)))();
}

uint64_t sub_10000DB58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                        + 8
                                                                                        * (((((v5 - 1506) | 0x308) - 224)
                                                                                          * (v4 == v6)) ^ v5)))((v5 - 529), a2, a3, a4, 1023862908, 201323775);
}

uint64_t sub_10000DB98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  LODWORD(STACK[0x618]) = a16;
  return (*(uint64_t (**)(void))(v17 + 8 * ((58 * (STACK[0x5C8] != 0)) ^ (v16 - 670))))();
}

uint64_t sub_10000DBDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v28 = v20 + 1;
  int v29 = *(unsigned __int8 *)(a20 + v26 + v22);
  *(unsigned char *)(v25 + (v28 + a7)) = v29 - (((_BYTE)v29 << v23) & v24) + 91;
  int v30 = *(uint64_t (**)(uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8 * ((((a3 + v28 + 1) < 0x40) * (int)a1) ^ v21));
  return v30(a1, v30, (v29 << v23) & v24, a2, a3, a4, a5, a6, a8, a9, a10, a11, a12);
}

uint64_t sub_10000DBE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 != a3) * (((a5 - 391992151) & 0x175D4E8D) - 633)) ^ a5)))();
}

uint64_t sub_10000DC1C@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  uint64_t v7 = (unsigned __int8 *)(a1 + v2 + v5);
  int v8 = *v7 ^ 0x5B;
  LODWORD(v7) = v8 | ((v7[1] ^ 0x5B) << 8) | ((v7[2] ^ 0x5B) << ((a2 - 43) & 0x38)) | ((v7[3] ^ 0x5B) << 24);
  *(_DWORD *)(v3 + ((v2 + v5) & 0xFFFFFFFFFFFFFFFCLL)) = v7 + v6 - 2 * (v7 & 0x1659914 ^ v8 & 4);
  return (*(uint64_t (**)(void))(v4 + 8 * ((88 * ((unint64_t)(v2 + 4 + v5) < 0x40)) | a2)))();
}

uint64_t sub_10000DCC8()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((30 * (v3 + 1 == v2 + 24)) ^ v0)))();
}

void sub_10000DD98(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (1178560073 * ((2 * (a1 & 0x878F6F35) - a1 + 2020643018) ^ 0xC2E4E8A8));
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10000DE80(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 + 8 * (v8 - 1810)) - 8 + 8 * (int)((((a8 >> 1) & 1) * a2) ^ v8)))();
}

uint64_t sub_10000DEBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * ((39 * ((v19 ^ (v22 + 112)) + a19 - 1843745209 < 0x10)) | (v19 + v21))))();
}

uint64_t sub_10000DF04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v8
                                                             + 8
                                                             * ((((((a7 + 545) | 0x10) - 383) ^ ((a7 + 191) | 0x22))
                                                               * (v7 < 0x20)) ^ a7)))(a1, a2, 0);
}

uint64_t sub_10000DF44@<X0>(int a1@<W8>)
{
  int v4 = v2 + a1 + ((v1 - 1533524483) & 0x5B67BD3B);
  if (v4 >= 0) {
    unsigned int v5 = v2 + a1 + ((v1 - 1533524483) & 0x5B67BD3B);
  }
  else {
    unsigned int v5 = -v4;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((14 * (v5 <= ((v1 + 1040782869) & 0xC1F6EEDB ^ 0x643))) | v1)))();
}

uint64_t sub_10000DFA8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _DWORD *a6@<X8>)
{
  int v11 = v9 + v7 - 1678;
  uint64_t v12 = a1[6];
  uint64_t v14 = *a1;
  uint64_t v13 = a1[1];
  *a6 = v10;
  *(_DWORD *)(v14 - 0x76DC35A7F08F6A42) = v11;
  *(_DWORD *)(v12 - 0x216229CD9A8FA111) = a4;
  *(void *)(v13 - 0x17E594F5DE89E940) = v6 + ((v8 - 69) ^ 0xFDCF87C7) + a3;
  return sub_1000137E4((uint64_t)a1, a2, a3, a4, a5, -2124048112);
}

#error "10000E79C: call analysis failed (funcsize=328)"

uint64_t sub_10000E7A0(int a1)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((49
                                * ((((*(unsigned __int8 *)(v3 + 6) - 1) << (((a1 - 88) & 0xD3) - 18)) & v2)
                                 + ((*(unsigned __int8 *)(v3 + 6) - 1) ^ v1) == v1)) ^ a1)))();
}

void sub_10000E7F4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) - 1178560073 * (a1 ^ 0xBA947862);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_10000E8A4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v1 ^ 0x49D) + 269) ^ (2 * (v1 ^ 0x49D)) ^ 0x75F) * (*(_DWORD *)(v3 - 116) == a1)) ^ v1)))();
}

uint64_t sub_10000E8F0(double a1, double a2, double a3, double a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10)
{
  uint64_t v16 = (v13 + v14);
  int8x16_t v17 = vrev64q_s8(*(int8x16_t *)(v11 + v16 - 15));
  int8x16_t v18 = vextq_s8(v17, v17, 8uLL);
  int8x16_t v19 = vrev64q_s8(*(int8x16_t *)(v11 + v16 - 31));
  int8x16_t v20 = vextq_s8(v19, v19, 8uLL);
  uint64_t v21 = v10 + v16;
  int8x16_t v22 = vrev64q_s8(vaddq_s8(vsubq_s8(v18, vandq_s8(vaddq_s8(v18, v18), a5)), a6));
  *(int8x16_t *)(v21 - 15) = vextq_s8(v22, v22, 8uLL);
  int8x16_t v23 = vrev64q_s8(vaddq_s8(vsubq_s8(v20, vandq_s8(vaddq_s8(v20, v20), a5)), a6));
  *(int8x16_t *)(v21 - 31) = vextq_s8(v23, v23, 8uLL);
  return (*(uint64_t (**)(void))(v15
                              + 8 * ((924 * (((a10 - 1367) ^ 0x66A) - 1990 == (v12 & 0xFFFFFFE0))) ^ (a10 - 1367))))();
}

uint64_t sub_10000E98C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unint64_t *a21,unsigned int a22,unsigned int a23,int a24)
{
  unsigned int v25 = 1759421093 * ((302028066 - (&a21 | 0x12009522) + (&a21 | 0xEDFF6ADD)) ^ 0x5E82DA89);
  a22 = v25 + 1105;
  a24 = v25 ^ 0x6EB7863C;
  LODWORD(a21) = v25 ^ 0x6AF12351;
  HIDWORD(a21) = v25 ^ 0x10825B55;
  (*(void (**)(unint64_t **))(v24 + 18512))(&a21);
  a23 = 1441
      - 460628867
      * ((((&a21 | 0x22DC427A) ^ 0xFFFFFFFE) - (~&a21 | 0xDD23BD85)) ^ 0x91B53FF8);
  a21 = &STACK[0x7DDA1A649706FBD5];
  uint64_t v26 = (*(uint64_t (**)(unint64_t **))(v24 + 18056))(&a21);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * ((15 * (a22 == -2124048112)) ^ 0x165)))(v26);
}

uint64_t sub_10000EB10@<X0>(int a1@<W5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((((a2 - a1 - 502) ^ (a1 - 156)) + (a2 ^ 0x225)) * (v2 == v3)) ^ a2)))();
}

uint64_t sub_10000EB4C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  BOOL v10 = a8 < 0x383FC7BF;
  if (v10 == (v8 + 937828811) < 0x383FC7BF) {
    BOOL v10 = v8 + 937828811 < a8;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((v10 * ((a1 - 138) ^ 0x4C)) ^ a1)))();
}

uint64_t sub_10000EBB4@<X0>(int a1@<W4>, int a2@<W8>)
{
  uint64_t v9 = (void *)(v7 - 0x9F59A8236606B8);
  unsigned int v10 = ((2 * (*(_DWORD *)(*v9 + 4 * (a2 - 1475592695 + (v6 ^ 0x64B))) ^ v4)) << (v3 ^ 0x1F)) | ((*(_DWORD *)(*v9 + 4 * (a2 - 1475591863)) ^ v4) >> v3);
  *(_DWORD *)void *v9 = v10 + v4 - (v5 & (2 * v10));
  BOOL v11 = v2 + 1856540891 > 380949030;
  if (v2 + 1856540891 < a1 - 1766535452) {
    BOOL v11 = 1;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((228 * !v11) ^ (v6 - 139))))();
}

uint64_t sub_10000ECB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v7 = (((v5 - 248) | 0x1C1) ^ (v3 + 223)) + v4;
  *(unsigned char *)(v1 + v7) = *(unsigned char *)(a1 + v7);
  return (*(uint64_t (**)(void))(v6 + 8 * ((94 * (v4 - 1 == v2)) ^ v5)))();
}

void sub_10000ECF4()
{
}

uint64_t sub_10000ED04@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((*v1 == (a1 ^ 0x470) - 781) * (a1 ^ 0x790)) ^ a1)))();
}

uint64_t sub_10000ED40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = v2;
  uint64_t v6 = v2;
  uint64_t v7 = v1;
  unsigned int v8 = v3 + 1225351577 * (&v5 ^ 0x239AD816) + 180;
  return (*(uint64_t (**)(uint64_t *))(a1 + 8 * (v3 ^ 0x951)))(&v5);
}

uint64_t sub_10000EDB0(uint64_t a1)
{
  int v8 = -v4;
  *(void *)(a1 - 7 + (v3 - 712945366 + v2 + v8)) = *(void *)(v6
                                                                             - 7
                                                                             + (v3 - 712945366 + v2 + v8));
  return (*(uint64_t (**)(void))(v7
                              + 8 * (((v5 - 1072) | 0x420) ^ (16 * (((((v5 - 1072) | 0x420) - 1832) & v1) + v8 != 8)))))();
}

uint64_t sub_10000EE18(uint64_t a1, uint64_t a2)
{
  STACK[0x568] = *(void *)(v2 + 8 * (LODWORD(STACK[0x3F4]) - 1030));
  return sub_10001B804(a1, a2, 2037503917);
}

uint64_t sub_10000EE38(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
  if (a34 == 2) {
    return (*(uint64_t (**)(void))(v38
  }
                                + 8 * ((2745 * (LODWORD(STACK[0x33C]) != ((a2 + 677) ^ 0x586A8C81))) ^ (a2 + 677))))();
  if (a34 == 1) {
    return (*(uint64_t (**)(void))(v38
  }
                                + 8
                                * ((39 * (LODWORD(STACK[0x33C]) == ((a2 - 16) | 0x292) + 1483377570)) ^ (a2 + 642))))();
  uint64_t v40 = (a2 + 1368463215) & 0xAE6EEDD2;
  uint64_t v41 = ((unint64_t)&a38 ^ 0x777FECF5AFE4EE7DLL)
      + ((2 * (void)&a38) & 0xEEFFD9EB5FC9DCF0)
      - 0x304080E00D04A57ALL
      + v40;
  LOBYTE(STACK[0x33B]) = ((v41 - 85) ^ 0xBA) * (v41 + ((((a2 + 111) & 0xD2) - 66) ^ 0xAC));
  return (*(uint64_t (**)(void))(v38 + 8 * (int)v40))();
}

uint64_t sub_10000EFB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,int a30)
{
  BOOL v31 = a13 + ((a30 + 25) & (2 * LODWORD(STACK[0x31C])) ^ 0x58) + (STACK[0x31C] & 0x3F ^ 0x5FFD7793u) >= (((a30 + 962) | 0x16A) ^ 0xFFFFFAAB);
  return (*(uint64_t (**)(void))(v30 + 8 * ((v31 | (4 * v31)) ^ (a30 + 356))))();
}

uint64_t sub_10000F060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v6 = LODWORD(STACK[0x3F4]) - 1016;
  unint64_t v7 = STACK[0x578];
  STACK[0x520] = *(void *)(v5 + 8 * (LODWORD(STACK[0x3F4]) - 988));
  STACK[0x548] = v7;
  STACK[0x4F8] = STACK[0x3A0];
  uint64_t v8 = *(_DWORD *)(v7 - 0x35FF68D50C8F404FLL) & 0x3F;
  *(unsigned char *)(v7 - 0x35FF68D50C8F4093 + (v8 ^ 0x3F)) = -37;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                                                  + 8 * ((2154 * ((v8 ^ 0x3F) > 0x37)) | v6)))(a1, 4294967239, 880, a4, a5, 102797973, 2124071625);
}

uint64_t sub_10000F13C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(_DWORD *)(v29 - 144) = (v25 - 351) ^ (1225351577 * ((v29 + 175436116 - 2 * ((v29 - 144) & 0xA74F1E4)) ^ 0x29EE29F2));
  *(void *)(v29 - 136) = a24;
  *(void *)(v29 - 128) = v26;
  *(void *)(v29 - 120) = v26;
  *(void *)(v29 - 112) = a25;
  (*(void (**)(uint64_t))(v27 + 8 * (v25 ^ 0xF7)))(v29 - 144);
  *(void *)(v29 - 120) = v26;
  *(void *)(v29 - 112) = a25;
  *(_DWORD *)(v29 - 144) = (v25 - 351) ^ (1225351577 * ((v29 - 144) ^ 0x239AD816));
  *(void *)(v29 - 136) = a24;
  *(void *)(v29 - 128) = v26;
  (*(void (**)(uint64_t))(v27 + 8 * (v25 + 183)))(v29 - 144);
  *(_DWORD *)(v29 - 144) = (v25 - 351) ^ (1225351577
                                        * ((~((v29 - 144) | 0xB5FEAE07) + ((v29 - 144) & 0xB5FEAE07)) ^ 0x699B89EE));
  *(void *)(v29 - 120) = v26;
  *(void *)(v29 - 112) = a25;
  *(void *)(v29 - 136) = a24;
  *(void *)(v29 - 128) = v26;
  (*(void (**)(uint64_t))(v27 + 8 * (v25 ^ 0xF7)))(v29 - 144);
  int v30 = 1374699841 * ((v29 + 1172267476 - 2 * ((v29 - 144) & 0x45DF6264)) ^ 0x282B7A6D);
  *(void *)(v29 - 136) = a23;
  *(_DWORD *)(v29 - 128) = -559756924 - v30 + v28 + 1;
  *(_DWORD *)(v29 - 144) = (v25 - 1334) ^ v30;
  (*(void (**)(uint64_t))(v27 + 8 * (v25 ^ 0xEF)))(v29 - 144);
  BOOL v31 = *(_DWORD *)(v29 - 140) != (v25 ^ 0x7C6DC0FF);
  int v32 = 1374699841 * ((((v29 - 144) | 0x4996AB21) - (v29 - 144) + ((v29 - 144) & 0xB66954D8)) ^ 0x2462B328);
  *(_DWORD *)(v29 - 144) = (v25 - 1334) ^ v32;
  *(_DWORD *)(v29 - 128) = -559756924 - v32 + v28;
  *(void *)(v29 - 136) = a23;
  uint64_t v33 = (*(uint64_t (**)(uint64_t))(v27 + 8 * (v25 + 175)))(v29 - 144);
  return (*(uint64_t (**)(uint64_t))(v27 + 8 * ((v31 * ((v25 ^ 0xAA9) - 643)) | v25)))(v33);
}

uint64_t sub_10000F388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(a9 + v11) = v13;
  return (*(uint64_t (**)(void))(v12 + 8 * ((((v10 & 0xFFFFFFFFFFFFFFF8) == 8) * ((39 * (v9 ^ 0xE4)) ^ 0x59F)) ^ v9)))();
}

uint64_t sub_10000F3D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(unsigned char *)(a5 + (((v5 - 807) ^ v8) & (v6 + 4023680309))) = v9;
  return (*(uint64_t (**)(void))(v10 + 8 * ((((v6 - 271286986) < 0x40) * v7) ^ v5)))();
}

uint64_t sub_10000F3DC@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((((v1 + 959) ^ v3 ^ (a1 == 19)) & 1) == 0) * v2) ^ (v1 + 18))))();
}

uint64_t sub_10000F414(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v11 = v7 + 1;
  *(unsigned char *)(a5 + (a3 + v11 + 1233)) = *(unsigned char *)(v10 + a7 - 1404026828);
  return (*(uint64_t (**)(void))(v9 + 8 * ((27 * (v11 + ((v8 - 1999) ^ (a4 + 53)) < 0x40)) ^ v8)))();
}

uint64_t sub_10000F41C(uint64_t a1)
{
  unsigned int v8 = v4 + v3 + v5;
  uint64_t v9 = v1 + v8;
  long long v10 = *(_OWORD *)(v9 - 31);
  uint64_t v11 = a1 + v8;
  *(_OWORD *)(v11 - 15) = *(_OWORD *)(v9 - 15);
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)((((v2 & 0xFFFFFFE0) == 32) * ((v6 + 1190863677) & 0xB904DFB9 ^ 0x8C4)) ^ (v6 + 824))))();
}

uint64_t sub_10000F488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x630] = v69;
  STACK[0x638] = v67;
  unint64_t v71 = STACK[0x510];
  char v72 = (char *)&a9 + STACK[0x510] - 0x5A748F8B1FDC5B2ALL;
  STACK[0x640] = (unint64_t)v72;
  STACK[0x510] = v71 + 320;
  int v73 = *(_DWORD *)(v69 - 0x35FF68D50C8F404BLL);
  LODWORD(STACK[0x530]) = v73;
  int v74 = *(_DWORD *)(v69 - 0x35FF68D50C8F4047);
  LODWORD(STACK[0x5AC]) = v74;
  int v75 = *(_DWORD *)(v69 - 0x35FF68D50C8F4043);
  LODWORD(STACK[0x580]) = v75;
  int v76 = *(_DWORD *)(v69 - 0x35FF68D50C8F403FLL);
  LODWORD(STACK[0x564]) = v76;
  int v77 = *(unsigned __int8 *)(v69 - 0x35FF68D50C8F4033) ^ 0x22;
  if (v77 == 2)
  {
    LODWORD(STACK[0x46C]) = *(_DWORD *)(v69 - 0x35FF68D50C8F403BLL);
    LODWORD(STACK[0x540]) = 1135937061;
    return (*(uint64_t (**)(void))(v70
                                + 8
                                * (int)(((((2 * (a8 - 447)) ^ 0xBC4AFD47) + 1135937061 < 0x40)
                                       * ((a8 + 228346578) & 0xF263B13A ^ 0x2C)) ^ (a8 - 447))))();
  }
  else if (v77 == 1)
  {
    STACK[0x3C0] = v71 + 320;
    int v78 = a66 + 240;
    int v79 = 9 * a66;
    LODWORD(STACK[0x540]) = 1135937061;
    BOOL v81 = v67 >= a67 + v71 || (unint64_t)v72 >= v67 + 64;
    return (*(uint64_t (**)(void))(v70 + 8 * (((v78 + v79 - 166) * v81) ^ (a8 + 219))))();
  }
  else
  {
    int v83 = (*(_DWORD *)(v69 - 0x35FF68D50C8F404BLL) ^ a6) + (v73 ^ a6);
    *(_DWORD *)(v69 - 0x35FF68D50C8F404BLL) = v83 + a6 - (v68 & (2 * v83));
    int v84 = (*(_DWORD *)(v69 - 0x35FF68D50C8F4047) ^ a6) + (v74 ^ a6);
    *(_DWORD *)(v69 - 0x35FF68D50C8F4047) = v84 + a6 - (v68 & (2 * v84));
    int v85 = (*(_DWORD *)(v69 - 0x35FF68D50C8F4043) ^ a6) + (v75 ^ a6);
    *(_DWORD *)(v69 - 0x35FF68D50C8F4043) = v85 + a6 - (v68 & (2 * v85));
    int v86 = (*(_DWORD *)(v69 - 0x35FF68D50C8F403FLL) ^ a6) + (v76 ^ a6);
    *(_DWORD *)(v69 - 0x35FF68D50C8F403FLL) = v86 + a6 - (v68 & (2 * v86));
    STACK[0x510] = v71;
    return ((uint64_t (*)(void))STACK[0x5D0])();
  }
}

uint64_t sub_10000F744(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v19 = (a1 + 500) | 0x120;
  int v15 = 628203409 * ((((v14 - 120) | 0xB85D1B41) + (~(v14 - 120) | 0x47A2E4BE)) ^ 0x3AD51773);
  *(void *)(v14 - 120) = a10;
  *(_DWORD *)(v14 - 112) = v15 + a1 + 1520;
  *(_DWORD *)(v14 - 108) = a13 - v15 + 929546135;
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (a1 ^ 0x8E7)))(v14 - 120);
  uint64_t v17 = *(_DWORD *)(v14 - 152) & 0x3F;
  *(unsigned char *)(v14 - 220 + (v17 ^ 0x3F)) = -37;
  return (*(uint64_t (**)(uint64_t))(v13 + 8 * ((1531 * ((v17 ^ 0x3F) > (v19 ^ 0x307u))) ^ a1)))(v16);
}

uint64_t sub_10000F84C()
{
  STACK[0x510] = STACK[0x348];
  return ((uint64_t (*)(void))STACK[0x390])();
}

uint64_t sub_10000F860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a23 == 2) {
    return (*(uint64_t (**)(void))(v32
  }
                                + 8
                                * ((141 * (LODWORD(STACK[0x308]) == ((a7 + 1633101464) & 0xA8A41B5F) + 1483377941)) ^ ((int)a4 + a7 - 115))))();
  if (a23 == 1) {
    return (*(uint64_t (**)(uint64_t))(v32
  }
                                              + 8
                                              * ((2047 * (LODWORD(STACK[0x308]) != a7 + a4 + 1483377826)) ^ (a7 + (int)a4))))(a15);
  unint64_t v34 = ((unint64_t)&a32 ^ 0xC73FCF3FFFFBDFECLL)
      + 0x7CE67FFC1FFEF014
      + (((void)&a32 << ((8 * ((a7 + 38) ^ 0x27)) ^ 0x51u)) & 0x8E7F9E7FFFF7BFD0);
  LOBYTE(STACK[0x307]) = (v34 ^ (8 * ((a7 + 38) ^ 0x27) + 106)) * (v34 + 17);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32
                                                                                         + 8
                                                                                         * (int)(8
                                                                                               * ((a7 + 38) ^ 0xF604BF27))))(a15, a2, a3, a4, a5, 544568610);
}

uint64_t sub_10000FA08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  int v28 = v24 + 1;
  unsigned int v29 = (*v19 - 549460035) * (*(_DWORD *)(a19 + 4 * (v28 - 367828392)) ^ 0xB1E9C2C5);
  int v30 = 1755732067 * ((v23 + v26 - 2 * (v23 & v26)) ^ 0x2BFF4673);
  *(void *)(v27 - 104) = a15;
  *(_DWORD *)(v27 - 112) = (v28 + 1109770574) ^ v30;
  *(_DWORD *)(v27 - 108) = v20 + 626 - v30 + (v29 ^ 0xEDE5FEFD) + ((2 * v29) & 0xDBCBFDFA) + 1534848799;
  *(_DWORD *)(v27 - 128) = v20 - v30 + 635;
  *(void *)(v27 - 120) = a14;
  uint64_t v31 = (*(uint64_t (**)(uint64_t))(v21 + 8 * v25))(v27 - 128);
  BOOL v32 = v28 + 1653355274 < v22;
  if (a13 > 0x7872F4E != v28 + 1653355274 < -126299983) {
    BOOL v32 = a13 > 0x7872F4E;
  }
  return (*(uint64_t (**)(uint64_t))(v21 + 8 * ((49 * !v32) ^ v20)))(v31);
}

uint64_t sub_10000FA10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, uint64_t a14, unsigned int a15, unsigned int a16, unsigned int a17, int a18)
{
  unsigned int v21 = 460628867
      * (((&a13 | 0x6202A4E8) - &a13 + (&a13 & 0x9DFD5B10)) ^ 0x2E942695);
  a17 = 1590290646 - v21;
  a15 = v21 + 1732850198;
  a16 = v21 + v20 + 2138961731;
  a13 = &STACK[0x17594DE9181849FB];
  a14 = a12;
  uint64_t v22 = (*(uint64_t (**)(unint64_t **))(v19 + 8 * (v20 ^ 0xECF)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * (((a18 == ((v20 + 1423735182) & 0x863F ^ (v18 + 1579)))
                                              * ((v20 - 1622938467) & 0x40FD7 ^ 0xCC5)) ^ v20)))(v22);
}

uint64_t sub_10000FB10()
{
  STACK[0x290] = v0;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((17 * (v1 ^ 0x147)) ^ 0xDF8A86D0) + LODWORD(STACK[0x570]) < 0xFFFFF7FF) * (v1 - 124)) ^ v1)))();
}

uint64_t sub_10000FB58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v3
                                                                                         + 8
                                                                                         * ((11
                                                                                           * (v4 <= v5 + v6 + 873692140)) ^ (v5 + v6 - 1065))))(a1, a2, a3, 2538041562, 781115828, 3061059863);
}

void sub_10000FBAC(uint64_t a1@<X8>)
{
  *(void *)(*(void *)(v1 + 48) - 0x17594DE9181849F3) = a1;
  *(_DWORD *)(v1 + 68) = -2124048112;
}

uint64_t sub_10000FC0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,unsigned int a32)
{
  int v35 = 628203409 * ((((v34 - 168) | 0x6A40E8D) - (v34 - 168) + ((v34 - 168) & 0xF95BF170)) ^ 0x842C02BE);
  *(_DWORD *)(v34 - 160) = v35 + v33 + 1498;
  *(_DWORD *)(v34 - 156) = a15 - v35;
  *(void *)(v34 - 168) = a22;
  uint64_t v36 = (*(uint64_t (**)(uint64_t))(v32 + 8 * (v33 + 2249)))(v34 - 168);
  uint64_t v37 = STACK[0x324] & 0x3F;
  *((unsigned char *)&STACK[0x2E0] + (v37 ^ 0x3F)) = -37;
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(v32
                                                             + 8
                                                             * (((2 * ((v37 ^ 0x3F) > 0x37)) | (((v37 ^ 0x3F) > 0x37) << 11)) ^ v33)))(v36, a32, 4289092108);
}

uint64_t sub_10000FD04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void, uint64_t, void))(v6
                                                            + 8
                                                            * (((((a6 - 2142893460) | 0x700900A4) + 263254203)
                                                              * (v7 < 0x20)) ^ a6)))((a6 + 146), a2, 0);
}

uint64_t sub_10000FD54@<X0>(int a1@<W7>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((476 * (a2 != a1 - 1037)) ^ (a1 + 717))))();
}

uint64_t sub_10000FD80@<X0>(int a1@<W3>, uint64_t a2@<X8>)
{
  *((unsigned char *)&STACK[0x2AC] + a2 - 297100030) = 91;
  return (*(uint64_t (**)(void))(v3 + 8 * ((374 * ((unint64_t)(a2 - 297100029) < 0x38)) ^ (a1 + v2 - 149))))();
}

uint64_t sub_10000FDC8@<X0>(int a1@<W6>, int a2@<W8>)
{
  if (a2 == (v2 ^ (a1 - 492)) - 1956587031) {
    int v4 = 2124071630;
  }
  else {
    int v4 = a2;
  }
  return v4 ^ v3;
}

uint64_t sub_10000FE2C(uint64_t a1)
{
  int v1 = 1374699841 * ((((2 * a1) | 0x4FD35BAC) - a1 + 1477857834) ^ 0xCA1DB5DF);
  int v2 = *(_DWORD *)a1 ^ v1;
  int v3 = *(_DWORD *)(a1 + 16) + v1;
  if (v3 < 0) {
    int v3 = -v3;
  }
  int v4 = *(_DWORD *)(*(void *)(a1 + 8) - 0x9F59A8236606BCLL);
  unsigned int v6 = v4 - 1477598966;
  BOOL v5 = v4 - 1477598966 < 0;
  unsigned int v7 = 1477598966 - v4;
  if (!v5) {
    unsigned int v7 = v6;
  }
  return (*((uint64_t (**)(void))*(&off_100233720 + (v2 ^ 0x278)) + ((v3 >> 5 >= v7) ^ v2) - 1))();
}

uint64_t sub_10000FEDC@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W8>)
{
  uint64_t v11 = 4 * (v8 - 1105093910);
  unsigned int v12 = *(_DWORD *)(v7 + 4 * (v8 - 1105093911));
  int v13 = (((v12 >> 30) ^ 2) + v3 - ((2 * ((v12 >> 30) ^ 2)) & 4)) ^ v12;
  int v14 = ((v3 + 1566083941 * v13 - ((984684234 * v13) & a2)) ^ *(_DWORD *)(v7 + v11)) - v8;
  *(_DWORD *)(v7 + v11) = v14 - ((2 * v14 + 62704172) & a2) - 651831824;
  *(_DWORD *)(v10 - 124) = (a3 + 800363824) ^ v9;
  *(_DWORD *)(v10 - 120) = (a3 + 800363824) & 0x795C8CBE ^ v9;
  *(void *)(v4 + 152) = v9 + v5;
  *(void *)(v4 + 160) = (v8 + 11843353) ^ v9;
  *(_DWORD *)(v10 - 112) = (a3 + 800363739) ^ v9;
  *(_DWORD *)(v10 - 152) = v9 + a3 - 1738116733;
  *(_DWORD *)(v10 - 128) = -(int)v9;
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(v6 + 8 * (a3 + a1)))(v10 - 152);
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * *(int *)(v10 - 116)))(v15);
}

uint64_t sub_100010000()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((341 * ((((v0 + 933) | 0x49) ^ (v1 - 1959)) + v3 < 0x7FFFFFFE)) ^ v0)))();
}

void sub_10001003C(uint64_t a1, int a2)
{
  *(_DWORD *)(*(void *)(a1 + 24) - 0x3EEC7284B8A20CABLL) = a2;
  _DWORD *v2 = v3;
  sub_10002F490();
}

uint64_t sub_10001005C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8 * ((1990 * (a2 + 1 == v5 + 4)) ^ v3)))(a1, v2);
}

uint64_t sub_100010130(void *a1)
{
  return sub_10000DE80(3911000999, 102, (uint64_t)&off_100233720, 1528, 1492443105, 1674806666, 993, **(_DWORD **)(*a1 - 0x9F59A8236606B8));
}

uint64_t sub_1000102B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (int)((((a6 + ((v7 - 281036789) & 0xF5F9E7FD) + 550) ^ ((v7 - 436) | 0x2A)) * (v6 != v8)) ^ v7)))();
}

uint64_t sub_1000102FC(char a1, char a2, int8x16_t a3, int8x8_t a4, int8x8_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  int v70 = a8 - 8;
  uint64_t v71 = (v68 + v70);
  v73.val[0].i64[0] = ((_BYTE)v68 + (_BYTE)v70) & 0xF;
  v73.val[0].i64[1] = (v67 + (_BYTE)v70) & 0xF;
  v73.val[1].i64[0] = (v66 + (_BYTE)v70) & 0xF;
  v73.val[1].i64[1] = (v65 + (_BYTE)v70) & 0xF;
  v73.val[2].i64[0] = (v63 + (_BYTE)v70 + v69) & 0xF;
  v73.val[2].i64[1] = (v64 + (_BYTE)v70) & 0xF;
  v73.val[3].i64[0] = (a2 + (_BYTE)v70) & 0xF;
  v73.val[3].i64[1] = (a1 + (_BYTE)v70) & 0xF;
  *(int8x8_t *)(a7 + v71) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(a7 + v71), *(int8x8_t *)(v61 + (v71 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v62 + (v71 & 0xF) - 7), *(int8x8_t *)(v60 + (v71 & 0xF) - 7)))), a5), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v73, a3), a4)));
  return (*(uint64_t (**)(void))(a60 + 8 * ((122 * (a10 == v70)) ^ a11)))();
}

uint64_t sub_100010304@<X0>(int a1@<W7>, uint64_t a2@<X8>)
{
  uint64_t v10 = (v8 - 528 + v7 + a1);
  *(unsigned char *)(a2 + v10) = *(unsigned char *)(v2 + v10) ^ *(unsigned char *)(v5 + (v10 & 0xF)) ^ *(unsigned char *)(v4 + (v10 & 0xF)) ^ *(unsigned char *)(v3 + (v10 & 0xF)) ^ (97 * (v10 & 0xF)) ^ 0x5B;
  return (*(uint64_t (**)(void))(v9 + 8 * ((1970 * (a1 - 1 == v6)) ^ (v8 - 1815))))();
}

uint64_t sub_100010370@<X0>(int a1@<W3>, uint64_t a2@<X8>)
{
  uint64_t v6 = (a1 + 1252463343);
  int v7 = a1 - 495;
  BOOL v8 = v4 - 1261371709 < -1983665187;
  int v9 = (**(_DWORD **)(a2 - 0x9F59A8236606B8) ^ 0x4E163D3A) + 1;
  **(_DWORD **)(a2 - 0x9F59A8236606B8) = v9 + v2 - (v5 & (2 * v9));
  if (v4 - 1261371709 >= -1983665187) {
    BOOL v8 = v4 - 1261371709 > 163818462;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v3 + 8 * ((1700 * v8) ^ v7)))(v6, 3042504317, v6 & 0xB558EE7D);
}

uint64_t sub_100010444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18)
{
  return (*(uint64_t (**)(void))(v19
                              + 8
                              * ((39
                                * (((((v18 - 990492664) & 0x3B09B6E7 ^ 0xDF8A8C26) + v20) & 0xFFFFFFFC) - a18 == 347 * (v18 ^ 0x7D2) - 544570346)) ^ v18)))();
}

uint64_t sub_1000104B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27,int a28,uint64_t (*a29)(void))
{
  LODWORD(STACK[0x2F4]) = (v30 ^ v33) + (a25 ^ v33) + v33 - (v34 & (2 * ((v30 ^ v33) + (a25 ^ v33))));
  LODWORD(STACK[0x2F8]) = (v32 ^ v33) + (a26 ^ v33) + v33 - (v34 & (2 * ((v32 ^ v33) + (a26 ^ v33))));
  LODWORD(STACK[0x2FC]) = (v31 ^ v33) + (a27 ^ v33) + v33 - (v34 & (2 * ((v31 ^ v33) + (a27 ^ v33))));
  LODWORD(STACK[0x300]) = (v29 ^ v33) + (a28 ^ v33) + v33 - (v34 & (2 * ((v29 ^ v33) + (a28 ^ v33))));
  return a29();
}

uint64_t sub_1000104E0@<X0>(uint64_t a1@<X8>)
{
  unint64_t v8 = v3 - 1;
  STACK[0x4C0] = v8;
  *(unsigned char *)(a1 + v8) = (v2 + 1 + 17 * (v1 ^ v4)) * ((v2 - 3) ^ v5);
  return (*(uint64_t (**)(void))(v7 + 8 * (((STACK[0x4C0] == 0) * v6) ^ v1)))();
}

uint64_t sub_1000104E8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((201 * ((v1 ^ 0xCAD32C93) != ((v0 + 134) ^ 0x605))) ^ v0)))();
}

uint64_t sub_100010534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  return sub_100052B70(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

uint64_t sub_100010548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8 * (((((a6 - 67 * (a9 ^ 0x11) + 12) ^ (*(_DWORD *)(a8 + 72) == a4)) & 1) * ((189 * (a9 ^ 0x211)) ^ 0x32E)) ^ (189 * (a9 ^ 0x211)))))(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1000105B0()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1497
                                * ((((v3 - 1740166255) & 0x67B8D1FF ^ (v1 - 373)) & (2
                                                                                   * (*(unsigned __int8 *)(v2 + 6) - 1)))
                                 + ((*(unsigned __int8 *)(v2 + 6) - 1) ^ v0) == v0)) ^ v3)))();
}

void sub_100010610()
{
}

uint64_t sub_10001066C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  unsigned int v15 = v13 + a11 - 158 + a11 - 1036 - 2000;
  if (v15 <= 0x40) {
    int v16 = 64;
  }
  else {
    int v16 = v15;
  }
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * ((62 * ((-v11 - v12 + v16 + 62) < 0xF)) ^ a11)))(1478);
}

uint64_t sub_1000106DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  return (*(uint64_t (**)(void))(v14 + 8 * (((((v13 - 1428) | 0x401) - 981) * (a13 > 0)) ^ v13)))();
}

uint64_t sub_100010738(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, int a6)
{
  uint64_t v17 = (v10 + v12);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(v15 + v17) ^ *(unsigned char *)(v7 + (v17 & 0xF)) ^ *(unsigned char *)(v8 + (v17 & 0xF)) ^ *(unsigned char *)((v17 & 0xF) + v6 + 2) ^ ((v17 & 0xF) * a4) ^ v14;
  return (*(uint64_t (**)(void))(v16 + 8 * (((v10 - 1 == (v9 ^ v11) + a6) * v13) ^ v9)))();
}

uint64_t sub_100010798()
{
  int v4 = 628203409 * ((1883539509 - ((v3 - 200) | 0x70448835) + ((v3 - 200) | 0x8FBB77CA)) ^ 0xD337BF9);
  *(void *)(v3 - 200) = STACK[0x620];
  *(_DWORD *)(v3 - 192) = v4 + v1 - 287 + 511;
  *(_DWORD *)(v3 - 188) = v0 - v4 + 1317746483;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v2 + 8 * ((v1 - 287) ^ 0xCF6)))(v3 - 200);
  return ((uint64_t (*)(uint64_t))STACK[0x568])(v5);
}

uint64_t sub_100010838()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((498
                                * ((((LODWORD(STACK[0x3F4]) + 51) ^ (v0 < ((LODWORD(STACK[0x3F4]) + 93) ^ 0x9BB5B2BE))) & 1) == 0)) ^ (LODWORD(STACK[0x3F4]) - 792))))();
}

uint64_t sub_10001088C@<X0>(int a1@<W8>)
{
  int v6 = a1 - 87163029;
  int v7 = (v2 - 1900118161) & 0x71417F3D;
  if (*v3 + 669884682 < v7 - 1293) {
    int v6 = -1430946599 - a1;
  }
  *uint64_t v3 = *v3 - 1388428834 + v6;
  int v8 = v1 - 1024916782;
  BOOL v9 = v8 < -353024997;
  *(_DWORD *)(*(void *)(v4 - 0x9F59A8236606B8) + 4 * (int)(((v7 - 3) ^ 0xEA0E76A1) + 368151637)) = *(_DWORD *)(*(void *)(v4 - 0x9F59A8236606B8) + 4 * (a1 - 1475591863));
  if (v8 >= -353024997) {
    BOOL v9 = v8 > 1794458652;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((877 * v9) ^ v7)))();
}

uint64_t sub_100010994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16, uint64_t a17, unsigned int a18, uint64_t a19)
{
  int v25 = v23 ^ 0x1F6;
  unsigned int v26 = 1178560073 * ((&a15 & 0xFD3EDD5D | ~(&a15 | 0xFD3EDD5D)) ^ 0xB8555AC0);
  a18 = (v25 - 524) ^ v26;
  a17 = a14;
  a16 = (v21 ^ 0x737EE3B9) + ((2 * v21) & 0xE6FDC772) - 1076158464 + v26;
  (*(void (**)(int *))(v22 + 8 * (v25 ^ 0xBA0u)))(&a15);
  unsigned int v27 = 1178560073 * ((&a15 & 0xED487C29 | ~(&a15 | 0xED487C29)) ^ 0xA823FBB4);
  a17 = a14;
  a19 = v19;
  a18 = ((v20 ^ 0x5FFFEE7F) + ((2 * v20) & 0xBFFFDCFE) + v25 - 1368417645) ^ v27;
  a16 = v27 + v25 + 333;
  uint64_t v28 = (*(uint64_t (**)(int *))(v22 + 8 * (v25 ^ 0xB94u)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * ((1997 * (a15 == v24)) ^ v25)))(v28);
}

uint64_t sub_100010AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, unsigned int a16, uint64_t a17)
{
  unsigned int v22 = 1178560073 * ((((2 * &a13) | 0x9DACF07A) - &a13 + 824805315) ^ 0x7442005F);
  a16 = v22 ^ ((v18 ^ 0xEF6FAE7F) + 520084976 + ((2 * v18) & 0xDEDF5CFE));
  a17 = v17;
  a14 = v22 + v21 - 435;
  a15 = a12;
  uint64_t v23 = (*(uint64_t (**)(int *))(v20 + 8 * (v21 ^ 0xE94)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((54 * (a13 == (((v21 - 923) | 0x10) ^ (v19 + 690)))) ^ v21)))(v23);
}

void sub_100010BB4()
{
  LODWORD(STACK[0x530]) = v0;
  LODWORD(STACK[0x5AC]) = v3;
  LODWORD(STACK[0x580]) = v1;
  LODWORD(STACK[0x564]) = v4;
  LODWORD(STACK[0x540]) = 1135937141;
  unint64_t v8 = STACK[0x630];
  int v9 = *(_DWORD *)(STACK[0x630] - 0x35FF68D50C8F403BLL);
  LODWORD(STACK[0x46C]) = v2;
  int v10 = (v9 ^ (v7 + ((v5 - 1870192268) & 0x6F78DDAD) - 1037)) + (v2 ^ v7);
  *(_DWORD *)(v8 - 0x35FF68D50C8F403BLL) = v10 + v7 - (v6 & (2 * v10));
  JUMPOUT(0x10000F664);
}

uint64_t sub_100010C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, unsigned int a17)
{
  if (a17 < 0x5C4C7BB2 != (v18 + 1281594633) < 0x5C4C7BB2) {
    BOOL v19 = (v18 + 1281594633) < 0x5C4C7BB2;
  }
  else {
    BOOL v19 = v18 + 1281594633 > a17;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8 * ((126 * v19) ^ (a7 - 1073395374))))(a1, 4028045591);
}

uint64_t sub_100010CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _DWORD *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,_DWORD *a29)
{
  *a8 = 1948521603;
  uint64_t v34 = (*a29 + 964540326);
  unint64_t v35 = 235795823 * ((v33 - 0x6817BA5DA66F5593 - 2 * ((v33 - 152) & 0x97E845A25990AB05)) ^ 0x9F58FF5CCD3DE25CLL);
  *(void *)(v30 + 176) = v35 + 2878301082u;
  *(void *)(v30 + 160) = v34 ^ v35;
  *(_DWORD *)(v33 - 152) = (235795823 * ((v33 + 1502653037 - 2 * ((v33 - 152) & 0x5990AB05)) ^ 0xCD3DE25C)) ^ (v29 + 730023232) ^ 0x6A;
  *(_DWORD *)(v33 - 148) = v29
                         + 730023232
                         - 235795823 * ((v33 + 1502653037 - 2 * ((v33 - 152) & 0x5990AB05)) ^ 0xCD3DE25C);
  *(_DWORD *)(v33 - 144) = (v29 + 730023321) ^ (235795823
                                              * ((v33 + 1502653037 - 2 * ((v33 - 152) & 0x5990AB05)) ^ 0xCD3DE25C));
  *(_DWORD *)(v33 - 128) = 1559371749
                         - 235795823 * ((v33 + 1502653037 - 2 * ((v33 - 152) & 0x5990AB05)) ^ 0xCD3DE25C)
                         + v29;
  *(_DWORD *)(v33 - 124) = 235795823 * ((v33 + 1502653037 - 2 * ((v33 - 152) & 0x5990AB05)) ^ 0xCD3DE25C) + 1;
  uint64_t v36 = (*(uint64_t (**)(uint64_t))(v31 + 8 * (v29 ^ (v32 + 1951))))(v33 - 152);
  return (*(uint64_t (**)(uint64_t))(v31 + 8 * *(int *)(v33 - 112)))(v36);
}

uint64_t sub_100010E04()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 ^ 0xFA4)))(32, 0x101004023FF3BD5) != 0;
  return (*(uint64_t (**)(void))(v0 + 8 * ((v2 * ((((v1 - 577636493) & 0x226E05FF) - 281) ^ 0x3D7)) ^ v1)))();
}

uint64_t sub_100010E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  unsigned int v12 = *(_DWORD *)((char *)&STACK[0x2AC] + ((v10 + v8) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v10 + v8)) = v12 ^ 0xCE;
  *(unsigned char *)(a1 + (v10 + v8 + 1)) = ((a7 + v9 - 39) ^ BYTE1(v12))
                                                - ((2 * ((a7 + v9 - 39) ^ BYTE1(v12))) & 0xB6)
                                                + 91;
  *(unsigned char *)(a1 + (v10 + v8 + 2)) = (BYTE2(v12) ^ 0x20) + (~(v12 >> 15) | 0x49) + 92;
  *(unsigned char *)(a1 + (v10 + v8 + 3)) = (HIBYTE(v12) ^ 6) - ((2 * (HIBYTE(v12) ^ 6)) & 0xB6) + 91;
  unsigned int v13 = LODWORD(STACK[0x308]) + 1990813624;
  BOOL v14 = v10 + 2119289817 < v13;
  if (v10 + 2119289817 < v7 != v13 < v7) {
    BOOL v14 = v13 < v7;
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((2047 * v14) ^ v9)))();
}

uint64_t sub_100010F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned int a10, int a11, unint64_t *a12, uint64_t a13, unsigned int a14)
{
  unsigned int v17 = 3804331 * ((&a10 & 0x9FDC63B0 | ~(&a10 | 0x9FDC63B0)) ^ 0x1EF6B9B9);
  a14 = v17 - 1673405666;
  a12 = &STACK[0x5248BA885C210B04];
  a13 = v15;
  a10 = v17 + 1990337089;
  a11 = v17 + v14 - 229;
  uint64_t v18 = (*(uint64_t (**)(unsigned int *))(v16 + 8 * (v14 + 1828)))(&a10);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((1912
                                              * (*(_DWORD *)(v15 - 0x6C0C7F2AED40EE79) == (((v14 - 358) | 0x150) ^ 0x81659841))) ^ v14)))(v18);
}

uint64_t sub_100011040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  unsigned int v16 = v14 + ((3 * (a12 ^ 0x740)) ^ 0xE1054709);
  if (v16 <= 0x40) {
    unsigned int v16 = 64;
  }
  return (*(uint64_t (**)(void))(v15 + 8 * ((14 * (519748570 - v12 - v13 + v16 + 886 > 0xE)) ^ a12)))();
}

void sub_1000110D4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 1374699841 * ((a1 + 2125213654 - 2 * (a1 & 0x7EAC2FD6)) ^ 0x135837DF);
  BOOL v2 = *(unint64_t **)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  int v4 = *(unint64_t **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(v3 - 0x571561323F81230ALL);
  int v9 = &STACK[0x9F59A8236606F0];
  uint64_t v10 = v5;
  unsigned int v11 = v1
      + 1224239923 * ((-1033333514 - (&v7 | 0xC26894F6) + (&v7 | 0x3D976B09)) ^ 0xCF2496DE)
      + 323;
  uint64_t v7 = v3;
  int v8 = v4;
  int v6 = (char *)*(&off_100233720 + (v1 ^ 0x1B7)) - 8;
  (*(void (**)(uint64_t *))&v6[8 * v1 + 15280])(&v7);
  uint64_t v7 = *(void *)(v3 - 0x571561323F812312);
  int v8 = &STACK[0x9F59A8236606E0];
  LODWORD(v9) = v1
              + 1374699841 * ((2 * (&v7 & 0x66A5C608) - &v7 + 425343479) ^ 0x74AE21FE)
              + 1553;
  (*(void (**)(uint64_t *))&v6[8 * v1 + 15368])(&v7);
  int v8 = v2;
  LODWORD(v7) = v1
              + 235795823 * ((2 * (&v7 & 0x225918A0) - &v7 + 1571219295) ^ 0xC90BAE06)
              + 215;
  (*(void (**)(uint64_t *))&v6[8 * v1 + 16120])(&v7);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_100011350()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((95
                                * ((((v0 - 985514120) & 0x3ABDBEE4 ^ 0x485) & *(_DWORD *)(v1 - 0x6C0C7F2AED40EE7DLL)) == 0)) ^ v0)))();
}

uint64_t sub_1000113A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  unsigned int v14 = ((v11 - 790362709) & 0x2F1BFFDD) + (a11 ^ v13) - (((a11 ^ v13) << (v11 ^ 0x89)) & 0x850F8A2C) - 1031291643;
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (v11
                               + 16
                               * (((2 * v14) & 0xB7D36EFC ^ 0x85030A2C) + (v14 ^ 0x196E7268) + 805306094 != 199865964))))();
}

uint64_t sub_100011448(_DWORD *a1, uint64_t a2)
{
  return ((uint64_t (*)(void))*(&off_10022EDF0
                             + ((43 * ((*a1 + *(_DWORD *)(a2 + 4) - 1482862773) < 0xC9)) ^ 0x411u)))();
}

uint64_t sub_100011490(uint64_t a1, uint64_t a2)
{
  int v4 = v2 + 505;
  uint64_t v5 = (*(uint64_t (**)(void, uint64_t, void))(v3 + 8 * (v2 ^ 0xBDC)))(*(unsigned int *)STACK[0x2B0], a2, LODWORD(STACK[0x5BC]));
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * ((15
                                              * (((v4 + 104) ^ (LODWORD(STACK[0x50C]) == ((v4 - 1155) | 0x510) - 2124049540)) & 1)) ^ v4)))(v5);
}

uint64_t sub_10001150C(char a1, int a2, int a3, void *a4, int a5, int a6, int a7)
{
  int v13 = v10 - 1;
  unsigned int v14 = *(_DWORD *)(*a4 + 4 * (v11 + v13 + 200)) ^ v8;
  *(_DWORD *)(*a4 + 4 * (v7 + v9 + (a6 | 0x80) - 199)) = ((v14 >> a1) | a5 ^ v8)
                                                         + v8
                                                         - ((a2 + 2) & (2 * ((v14 >> a1) | a5 ^ v8)));
  return (*(uint64_t (**)(void))(v12 + 8 * (((v11 + v13 + 199 >= 0) * a7) ^ a3)))();
}

uint64_t sub_100011514@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((692 * (*(_DWORD *)(a1 + 532) - 1477598967 < (((v1 - 140) | 1) ^ 0x7FFFFBF2u))) ^ v1)))();
}

uint64_t sub_100011560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(_DWORD *)(*(void *)(v9 - 0x9F59A8236606B8) + 4 * (v7 + v5 + 1)) = a5;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v7 + v5 >= 0) * (((v6 + 952) | 0x131) - 1428)) ^ v6)))();
}

uint64_t sub_1000115B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, void))(v7
                                                    + 8
                                                    * ((2019
                                                      * ((((a5 ^ 0x21D) - 322 + 2 * (a5 ^ 0x21D) - 1037) & v5) == 0)) ^ a5)))(a1, (v6 - a1));
}

uint64_t sub_1000115EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v19 - 144) = (v17 - 401) ^ (1225351577
                                        * ((((v19 - 144) | 0x5A477C3F) - (v19 - 144) + ((v19 - 144) & 0xA5B883C0)) ^ 0x79DDA429));
  *(void *)(v19 - 120) = v14;
  *(void *)(v19 - 112) = v15;
  *(void *)(v19 - 136) = v16;
  *(void *)(v19 - 128) = v14;
  (*(void (**)(uint64_t))(v18 + 8 * (v17 + 133)))(v19 - 144);
  int v20 = 1374699841 * ((v19 - 144) ^ 0x6DF41809);
  *(_DWORD *)(v19 - 144) = (v17 - 1384) ^ v20;
  *(_DWORD *)(v19 - 128) = v13 - v20 + v12;
  *(void *)(v19 - 136) = a12;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v18 + 8 * (v17 + 125)))(v19 - 144);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * (((*(_DWORD *)(v19 - 140) == (v17 ^ 0x60) + 2087567533) * (v17 ^ 0x87A)) ^ v17)))(v21);
}

uint64_t sub_1000116D8(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned int a25)
{
  HIDWORD(a22) = HIDWORD(a21) + 540038171;
  v26.n128_u64[0] = 0xB6B6B6B6B6B6B6B6;
  v26.n128_u64[1] = 0xB6B6B6B6B6B6B6B6;
  v27.n128_u64[0] = 0x5B5B5B5B5B5B5B5BLL;
  v27.n128_u64[1] = 0x5B5B5B5B5B5B5B5BLL;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128, __n128, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8 * (int)((((a22 ^ 0x3D3) - 653) * (a18 < HIDWORD(a17))) ^ a22)))(1957521423, 1272907385, 551368475, a25, 2973289072, 2460205309, 953, 3743598821, a1, a2, a3, a4, v26, v27, a13, a14, a15, a16, a17,
           a18,
           a19,
           a20,
           a21,
           a22);
}

uint64_t sub_10001176C()
{
  int v6 = (v0 + 450) ^ 0x4E3;
  unint64_t v7 = STACK[0x590];
  int v8 = STACK[0x574];
  int v9 = (2 * LODWORD(STACK[0x574]) + 1067407338) & ((v0 + 450) ^ 0x3FA62C50);
  int v10 = 1374699841 * ((((v5 - 200) | 0xF03C7571) - ((v5 - 200) & 0xF03C7571)) ^ 0x9DC86D78);
  *(void *)(v5 - 152) = v3;
  *(_DWORD *)(v5 - 144) = v8 - v10 - v9 + 2141372515;
  *(_DWORD *)(v5 - 192) = (v0 + 368399463) ^ v10;
  *(void *)(v5 - 200) = v7;
  *(void *)(v5 - 168) = v2;
  *(void *)(v5 - 184) = STACK[0x338];
  *(_DWORD *)(v5 - 160) = (853897875 * v1 - 779853995) ^ v10;
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(v4 + 8 * (v0 + 1605)))(v5 - 200);
  int v12 = *(_DWORD *)(v5 - 176);
  LODWORD(STACK[0x534]) = v12;
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * (int)(((v6 + 926 + ((v6 + 760383592) & 0xD2AD77BD) + 776)
                                                   * (v12 == -2124048112)) ^ v6)))(v11);
}

uint64_t sub_100011894(uint64_t a1, int a2)
{
  *(void *)(v7 - 7 + (v3 + v5 - v6 + 1217)) = *(void *)(v2 - 7 + (v3 + v5 - v6 + 1217));
  return (*(uint64_t (**)(void))(v8
                                           + 8
                                           * ((46
                                             * (((216 * (a2 ^ 0x7BF) - 1622) ^ 0x14A) + v6 != (((216 * (a2 ^ 0x7BF)) ^ 0xFFFFF860) & v4))) ^ (216 * (a2 ^ 0x7BF)))))(v5 - (((216 * (a2 ^ 0x7BF)) ^ 0xFFFFF860) & v4));
}

uint64_t sub_100011900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  return (*(uint64_t (**)(void))(v13
                              + 8
                              * ((105
                                * (((v14 ^ (((2 * a13) & 0xF7C3CF5E)
                                          + ((v14 + 2078402061) ^ a13)
                                          - 10512261
                                          - 2067890220 < 0x7FFFFFFE)) & 1) == 0)) ^ v14)))();
}

uint64_t sub_100011980(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((a3 + 2069258655) & 0x84A99F76 ^ 0x550) * ((unint64_t)(v3 - a1) < 0x20)) | a3)))();
}

uint64_t sub_1000119C4(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a2 + v3 + v2 - 314) = ((v5 + 1) ^ v6) * (v5 + 18);
  int v9 = *(uint64_t (**)(void))(v8 + 8 * (((v3 + v2 == 314) * v7) ^ v4));
  return v9(v9);
}

uint64_t sub_1000119CC()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 - 990) ^ 0x69E ^ (v2 - 1252941015) & 0x4AAE5DBB) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_100011A1C(uint64_t a1, int a2, double a3)
{
  *(double *)(a1 + (v6 & (v4 + 8))) = a3;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 == 8) * a2) ^ v3)))();
}

uint64_t sub_100011A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, void))(v8
                                                                              + 8
                                                                              * ((2492
                                                                                * ((((a7 + 1506486823) & 0xA634D66A ^ 0x272) & v7) == 0)) ^ a7)))(a1, a2, a3, (a1 - a3), a7 + 619);
}

uint64_t sub_100011A70()
{
  uint64_t v3 = (*(uint64_t (**)(unint64_t))(v2 + 8 * (v0 + 1197)))(STACK[0x248]);
  LODWORD(STACK[0x50C]) = v1;
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((46 * ((v0 - 2131213838) & 0x7F07BF07 ^ 0x516) - 672)
                                              * (STACK[0x410] == 0)) ^ (v0 + 154))))(v3);
}

uint64_t sub_100011AF4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((**(void **)(v2 + 8 * (a1 - 759)) != 0) * (((a1 - 533) | 0x244) ^ 0x335)) ^ a1)))();
}

void sub_100011B34(_DWORD *a1)
{
  unsigned int v1 = *a1 + 108757529 * ((2 * (a1 & 0x5EAB9BD4) - a1 - 1588304853) ^ 0x41C80600);
  __asm { BRAA            X13, X17 }
}

uint64_t sub_100011BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v20 = 1759421093 * ((((v19 - 136) | 0xB4C305B1) - (v19 - 136) + ((v19 - 136) & 0x4B3CFA48)) ^ 0x7BEB5E5);
  *(_DWORD *)(v19 - 136) = v16 - v20 + 2574135;
  *(void *)(v19 - 128) = v14;
  *(_DWORD *)(v19 - 120) = v17 - v20 + 998;
  (*(void (**)(uint64_t))(v15 + 8 * (v17 ^ 0x907)))(v19 - 136);
  *(_DWORD *)(v19 - 120) = v17
                         + 1178560073 * ((2 * ((v19 - 136) & 0x25D80F90) - (v19 - 136) - 634916753) ^ 0x60B3880D)
                         + 1284;
  *(void *)(v19 - 128) = a14;
  *(void *)(v19 - 112) = v18;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v17 + 1847)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((14
                                              * (*(_DWORD *)(v19 - 136) == ((7 * (v17 ^ 0xAA)) ^ 0x5B5D9324)
                                                                         + (v17 ^ 0x57E))) | (v17 + 223))))(v21);
}

uint64_t sub_100011D20@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  int v17 = a1 + 904;
  int v18 = 1224239923 * ((((v16 - 144) | 0x5EDF9B83) + (~(v16 - 144) | 0xA120647C)) ^ 0xAC6C6655);
  *(_DWORD *)(v16 - 128) = v18 + v17 - 1089;
  *(void *)(v16 - 136) = &a13 + v13;
  *(_DWORD *)(v16 - 144) = v18 ^ 0x559F456E;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v17 ^ 0xD5A)))(v16 - 144);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8 * (((v17 ^ 0x6F2 ^ (307 * (v17 ^ 0x58A))) * (v15 != 0)) ^ (v17 + 729))))(v19);
}

uint64_t sub_100011DE4(int a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (a1 | (4
                                     * (((v4
                                        + a3
                                        - (((((a1 - 1671) | 0x200) + 1223) ^ ((a1 - 1483) | 0x608)) & v3)
                                        + 1671) & 0xFFFFFFFC) <= v4 + a3 + 1674)))))();
}

uint64_t sub_100011E38(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v3 - 911) ^ v3 ^ 0x396) * (a2 != 0)) ^ (v3 + 1003))))();
}

void sub_100011E68()
{
  uint64_t v0 = __chkstk_darwin();
  if (*(void *)(v0 + 24)) {
    BOOL v2 = *(void *)(v0 + 8) == 0x17594DE9181849F3;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = !v2;
  int v1 = *(_DWORD *)(v0 + 16) ^ (1755732067 * ((2 * (v0 & 0x47DE7202) - v0 - 1205760515) ^ 0x66E73026));
  __asm { BRAA            X8, X17 }
}

uint64_t sub_100011F9C()
{
  int v6 = (v3 - 1130) | 0xC0;
  int v7 = 535753261 * ((v5 + 1158497710 - 2 * ((v5 - 144) & 0x450D463E)) ^ 0x4FF94811);
  *(_DWORD *)(v5 - 128) = v6 - v7 - 9;
  *(_DWORD *)(v5 - 144) = (((21 * (v6 ^ 0xFB)) ^ 0xDA817CCE) + v1) ^ v7;
  *(void *)(v5 - 120) = v4;
  *(void *)(v5 - 136) = v9;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v6 ^ 0x85B)))(v5 - 144);
  _DWORD *v11 = v10;
  _DWORD *v0 = -2124048112;
  return result;
}

uint64_t sub_100012088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,int a32,int a33)
{
  return (*(uint64_t (**)(uint64_t))(v35
                                            + 8
                                            * ((((a31 & 0x293A63DB ^ 0x35E) + (a33 & 0x213A21BA)) * (v34 < v33)) ^ (v36 + v37 - 1814))))(3061059863);
}

void sub_1000120E0(_DWORD *a1@<X8>)
{
  uint64_t v4 = *(void *)(v3 + 16);
  *(void *)(*(void *)(v3 + 24) - 0x765012DCA7D4077ELL) = v1;
  *(_DWORD *)(v4 - 0x5412677448247A30) = v2;
  *(_DWORD *)uint64_t v3 = *a1;
}

uint64_t sub_10001214C@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  uint64_t v4 = a2;
  uint64_t v5 = a1 + a2;
  if ((unint64_t)(v5 + 1) > 0x38) {
    uint64_t v6 = v5 + 1;
  }
  else {
    uint64_t v6 = 56;
  }
  BOOL v7 = v6 - v4 + 615976035 >= (v2 ^ 0x7C3uLL);
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((16 * v7) | (32 * v7)) ^ v2)))();
}

uint64_t sub_1000121B8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((98
                                * (*(_DWORD *)(a8 + 72) == (((v8 + a6 + a1 - 184 - 809 - 212) | 0x306) ^ 0x20757653))) ^ (a1 - 184))))();
}

uint64_t sub_100012214@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((247 * (v1 != 544568610)) ^ 0x45Bu)))();
}

uint64_t sub_10001224C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23)
{
  int8x16x4_t v32 = vld4q_s8(a4);
  uint8x16_t v24 = (uint8x16_t)veorq_s8(v32.val[2], v23);
  _Q21 = vmovl_high_u8(v24);
  _Q20 = vmovl_u8(*(uint8x8_t *)v24.i8);
  __asm
  {
    SHLL2           V20.4S, V20.8H, #0x10
    SHLL2           V21.4S, V21.8H, #0x10
  }
  return sub_10002B804(a1, a2, a3, (uint64_t)a4, a23 ^ 0x212u, a6, a7, 602693077);
}

uint64_t sub_100012384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  unsigned int v18 = v13 + (((v16 ^ 0xB6) - 847) | 0x60) - 1593106667;
  if (v18 <= 0x40) {
    unsigned int v18 = 64;
  }
  uint64_t v19 = (a6 - v14 - v15);
  int v20 = *(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8 * ((13 * (v19 + v18 > 0xE)) ^ v16 ^ 0xB6));
  return v20(64, v19, v20, a4, 2707110555, a6, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t sub_100012400(int a1, int a2, int a3, uint64_t a4, int a5)
{
  uint64_t v10 = (a2 + a1 + a3);
  unint64_t v11 = v10 + v9 + 1;
  uint64_t v12 = (((a5 ^ 0xB8D) + 347) ^ 0x547) & v10;
  uint64_t v13 = v12 - v10;
  unint64_t v14 = v6 + v13;
  ++v12;
  unint64_t v15 = v6 + v12;
  unint64_t v16 = v7 + v13;
  unint64_t v17 = v7 + v12;
  unint64_t v18 = v5 + v13;
  unint64_t v19 = v5 + v12;
  BOOL v21 = v15 > v9 && v14 < v11;
  if (v17 > v9 && v16 < v11) {
    BOOL v21 = 1;
  }
  int v24 = v19 > v9 && v18 < v11 || v21;
  return (*(uint64_t (**)(void))(v8 + 8 * ((v24 ^ 1 | (4 * (v24 ^ 1))) ^ a5)))();
}

void sub_100012488()
{
  if (v0 == 803242036) {
    int v1 = -2124048112;
  }
  else {
    int v1 = 2124071624;
  }
  *(_DWORD *)(v2 + 32) = v1;
}

uint64_t sub_1000124EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,uint64_t a23,unsigned int a24,uint64_t a25)
{
  unsigned int v32 = v25 + 738;
  unsigned int v33 = 1178560073
      * (((&a21 ^ 0x6D335C6D) + 874547561 - 2 * ((&a21 ^ 0x6D335C6D) & 0x34208969)) ^ 0xE387AD66);
  a23 = a16;
  a22 = (v30 ^ 0xBBFFF3FD) + ((v32 - 63) | 0x46) + ((v30 << ((v32 ^ 0xCC) + 118)) & 0x77FFE7FA) + 2002389870 + v33;
  a24 = (v32 - 758) ^ v33;
  (*(void (**)(int *))(v31 + 8 * (v32 + 1206)))(&a21);
  a25 = v29;
  a24 = v32
      + 1224239923 * ((&a21 + 1000414565 - 2 * (&a21 & 0x3BA11D65)) ^ 0xC912E0B2)
      - 909;
  a23 = a16;
  (*(void (**)(int *))(v31 + 8 * (v32 ^ 0xC80)))(&a21);
  unsigned int v34 = 1178560073 * ((((2 * &a21) | 0xBE750D4E) - &a21 + 549812569) ^ 0x65AEFEC5);
  a22 = (v28 ^ 0x3F7E43F9) + ((2 * v28) & 0x7EFC87F2) - 203702336 + v34;
  a24 = (v32 - 758) ^ v34;
  a23 = a16;
  (*(void (**)(int *))(v31 + 8 * (v32 + 1206)))(&a21);
  unsigned int v35 = 1178560073 * ((2 * (&a21 & 0x155A7990) - &a21 + 1789232746) ^ 0xD031FE08);
  a25 = v26;
  a23 = a16;
  a24 = v35 ^ ((v27 ^ 0xBF6F8D6F) + 1325399808 + ((2 * v27) & 0x7EDF1ADE));
  a22 = v35 + v32 + 99;
  uint64_t v36 = (*(uint64_t (**)(int *))(v31 + 8 * (v32 ^ 0xC8E)))(&a21);
  return (*(uint64_t (**)(uint64_t))(v31 + 8 * (((a21 != -2124048112) | (8 * (a21 != -2124048112))) ^ v32)))(v36);
}

uint64_t sub_100012750(uint64_t a1, uint64_t a2, int a3)
{
  BOOL v6 = v5 - v3 + 4 >= (((461 * (a3 ^ 0xE2) + 522) | 1u) ^ 0x585uLL);
  return (*(uint64_t (**)(void))(v4 + 8 * ((2 * v6) | (4 * v6) | a3)))();
}

uint64_t sub_10001279C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * ((2029 * (a6 + 1 == v8 + 44)) ^ v6)))(a1);
}

uint64_t sub_100012874(int a1)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v2 & (2 * (*(unsigned __int8 *)(v3 + 2) - 72)))
                                 + ((*(unsigned __int8 *)(v3 + 2) - 72) ^ v1) == v1)
                                * ((a1 ^ 0xE61) + 1206)) ^ a1 ^ 0xCF0)))();
}

uint64_t sub_1000128C4@<X0>(int a1@<W8>)
{
  unint64_t v4 = (v3 - 160) & 0xDE8BE26CF99EC706;
  unint64_t v5 = 1178560073 * ((v3 - 160 - 2 * v4 - 0x21741D93066138FALL) ^ 0xC577B284430ABF64);
  *(void *)(v3 - 152) = v5 + 1902929356;
  *(void *)(v3 - 144) = v5 + v1;
  *(_DWORD *)(v3 - 128) = v5 + a1 + 2104632327;
  *(_DWORD *)(v3 - 124) = -1178560073 * ((v3 - 160 - 2 * v4 - 107034874) ^ 0x430ABF64);
  *(_DWORD *)(v3 - 156) = v5 + a1 - 2001782082 - 109;
  *(_DWORD *)(v3 - 136) = ((a1 - 2001782082) & 0xBAFF7BD8) + v5;
  *(_DWORD *)(v3 - 132) = (a1 - 2001782082) ^ v5;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0x8F7u)))(v3 - 160);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v3 - 160)))(v6);
}

uint64_t sub_100012994@<X0>(void *a1@<X0>, int a2@<W5>, uint64_t a3@<X8>)
{
  *(void *)(*a1 - 0x6A4735A87A2643E5) = 0;
  return (*(uint64_t (**)(void))(a3 + 8 * (((*v3 == v4) * (a2 + 305)) ^ (a2 - 1140))))();
}

uint64_t sub_1000129E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(a6 + ((v7 + v10) & (v6 + a5))) = v11;
  return (*(uint64_t (**)(void))(v9 + 8 * ((v7 + 68) | (2 * (((v8 + 1) & 0x1FFFFFFF8) == 8)))))();
}

uint64_t sub_100012A24(char a1, uint64_t a2, int a3, int8x16_t a4, int8x8_t a5, uint64_t a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  int v56 = a7 - 8;
  uint64_t v57 = (a3 + v56);
  v59.val[0].i64[0] = ((_BYTE)a3 + (_BYTE)v56) & 0xF;
  v59.val[0].i64[1] = (v53 + (_BYTE)v56) & 0xF;
  v59.val[1].i64[0] = (v52 + (_BYTE)v56) & 0xF;
  v59.val[1].i64[1] = (v51 + (_BYTE)v56) & 0xF;
  v59.val[2].i64[0] = (v50 + (_BYTE)v56) & 0xF;
  v59.val[2].i64[1] = (a10 + (_BYTE)v56) & 0xF;
  v59.val[3].i64[0] = (a1 + (_BYTE)v56) & 0xF;
  v59.val[3].i64[1] = (v49 + (_BYTE)v56) & 0xF;
  *(int8x8_t *)(a2 + v57) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v48 + (v57 & 0xF) - 7), *(int8x8_t *)(a2 + v57)), veor_s8(*(int8x8_t *)((v57 & 0xF) + v47 - 5), *(int8x8_t *)((v57 & 0xF) + v46 - 3))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v59, a4), a5)));
  return (*(uint64_t (**)(void))(a46 + 8 * (((v54 == v56) * v55) ^ a8)))();
}

uint64_t sub_100012A2C@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W5>, int a4@<W8>)
{
  uint64_t v9 = 4 * (v5 - 1655471129);
  unsigned int v10 = *(_DWORD *)(v7 + 4 * (v5 - 1655471130));
  unsigned int v11 = (a1 + ((v10 >> 30) ^ 2) + ((v10 >> 29) | 0xFFFFFFFB) + 1) ^ v10;
  int v12 = ((a1 + 1566083941 * v11 - ((984684234 * v11) & a2)) ^ *(_DWORD *)(v7 + v9)) - v5;
  *(_DWORD *)(v7 + v9) = v12 - ((2 * v12 + 89716786) & a2) - 101454605;
  uint64_t v13 = 1374699841
      * ((((v8 - 152) ^ 0x38AFDEA21D2C2661 | 0x4104592BF121FA86)
        - (((v8 - 152) ^ 0x38AFDEA21D2C2661) & 0x4104592BF121FA86)) ^ 0x77A7198581F9C4EELL);
  int v14 = (a4 - 224706813) ^ v13;
  *(_DWORD *)(v8 - 112) = v14 ^ 0x76;
  *(_DWORD *)(v8 - 124) = v14;
  *(_DWORD *)(v8 - 120) = v14 ^ 0x1F;
  *(_DWORD *)(v8 - 128) = -1374699841
                        * ((((v8 - 152) ^ 0x1D2C2661 | 0xF121FA86) - (((v8 - 152) ^ 0x1D2C2661) & 0xF121FA86)) ^ 0x81F9C4EE);
  *(_DWORD *)(v8 - 152) = v13 + a4 - 1738116733;
  *(void *)(v4 + 152) = v13 + 3153651648;
  *(void *)(v4 + 160) = (v5 + 1498180520) ^ (unint64_t)v13;
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(v6 + 8 * (a4 + a3)))(v8 - 152);
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * *(int *)(v8 - 116)))(v15);
}

uint64_t sub_100012B9C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((759 * (v1 + 1 == v3)) ^ v0)))();
}

uint64_t sub_100012BAC@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1597
                                * (*(_DWORD *)(*(void *)(a1 - 0x9F59A8236606B8)
                                             + 4 * (((v1 + 515) ^ (v2 - 621)) + v5)) == v3)) ^ (v1 - 38))))();
}

uint64_t sub_100012BFC@<X0>(int a1@<W8>)
{
  v7.i64[0] = 0xB6B6B6B6B6B6B6B6;
  v7.i64[1] = 0xB6B6B6B6B6B6B6B6;
  v8.i64[0] = 0x5B5B5B5B5B5B5B5BLL;
  v8.i64[1] = 0x5B5B5B5B5B5B5B5BLL;
  *(int8x16_t *)(v2 + (v1 + a1)) = vaddq_s8(vsubq_s8(*v6, vandq_s8(vaddq_s8(*v6, *v6), v7)), v8);
  return (*(uint64_t (**)(void))(v5 + 8 * ((54 * (((55 * (v4 ^ 0x184)) ^ 0x24DLL) == ((v3 + 1) & 0x1FFFFFFF0))) ^ v4)))();
}

uint64_t sub_100012C74@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(*a1 - 0x6A4735A87A2643E5) = v5 + v4 + 8;
  return (*(uint64_t (**)(void))(a2 + 8 * (((*v2 == v3) * (v6 + 1333)) ^ (v6 - 112))))();
}

uint64_t sub_100012CCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  int v10 = LOBYTE(STACK[0x340]) ^ 0x22;
  if (v10 == 1)
  {
    unsigned int v18 = STACK[0x324];
    unsigned int v19 = STACK[0x320];
    char v20 = ((LODWORD(STACK[0x324]) >> 13) ^ 0xB1)
        - 2 * (((LODWORD(STACK[0x324]) >> 13) ^ 0xB1) & 0xDF ^ (LODWORD(STACK[0x324]) >> 13) & 4);
    int v21 = ~LODWORD(STACK[0x324]);
    char v22 = 8 * v21;
    char v23 = 16 * v21;
    char v11 = a10 & 0xD7;
    char v24 = v22 - (v23 & 0xBF);
    unsigned int v25 = ((a10 & 0xBA1BCDD7) - 30) ^ (LODWORD(STACK[0x324]) >> 5);
    LOBYTE(STACK[0x318]) = v24 + 91;
    LOBYTE(STACK[0x319]) = v25 - (a6 & (2 * v25)) + 91;
    LOBYTE(STACK[0x31A]) = v20 + 91;
    LOBYTE(STACK[0x31B]) = ((v18 >> 21) ^ 0x29) - (a6 & (2 * ((v18 >> 21) ^ 0x29))) + 91;
    HIDWORD(v26) = v19 ^ 8;
    LODWORD(v26) = v18 ^ 0x20000000;
    LOBYTE(STACK[0x31C]) = (v26 >> 29) - (a6 & (2 * (v26 >> 29))) + 91;
    LOBYTE(STACK[0x31D]) = ((v19 >> 5) ^ 0x8F) - (a6 & (2 * ((v19 >> 5) ^ 0x8F))) + 91;
    LOBYTE(STACK[0x31E]) = ((v19 >> 13) ^ 0x5A) - (a6 & (2 * ((v19 >> 13) ^ 0x5A))) + 91;
    int v16 = (v19 >> 21) ^ 0x40;
    char v17 = (2 * v16) & 0xB6;
    goto LABEL_5;
  }
  if (v10 == 2)
  {
    char v11 = 77 * (a2 ^ 0x1F);
    unsigned int v12 = STACK[0x320];
    unsigned int v13 = STACK[0x324];
    HIDWORD(v14) = LODWORD(STACK[0x320]) ^ 8;
    LODWORD(v14) = LODWORD(STACK[0x324]) ^ 0x20000000;
    int v15 = (LODWORD(STACK[0x320]) >> 13) ^ 0x5A;
    LOBYTE(STACK[0x318]) = ((LODWORD(STACK[0x320]) >> (v11 - 110)) ^ 0x40)
                         - 2
                         * (((LODWORD(STACK[0x320]) >> (v11 - 110)) ^ 0x40) & 0xDF ^ (LODWORD(STACK[0x320]) >> (v11 - 110)) & 4)
                         + 91;
    LOBYTE(STACK[0x319]) = v15 - (a6 & (2 * v15)) + 91;
    LOBYTE(STACK[0x31A]) = ((v12 >> 5) ^ 0x8F) - (a6 & (2 * ((v12 >> 5) ^ 0x8F))) + 91;
    LOBYTE(STACK[0x31B]) = (v14 >> 29) - (a6 & (2 * (v14 >> 29))) + 91;
    LOBYTE(STACK[0x31C]) = ((v13 >> 21) ^ 0x29) - (a6 & (2 * ((v13 >> 21) ^ 0x29))) + 91;
    LOBYTE(STACK[0x31D]) = ((v13 >> 13) ^ 0xB1) - (a6 & (2 * ((v13 >> 13) ^ 0xB1))) + 91;
    LOBYTE(STACK[0x31E]) = ((v13 >> 5) ^ 0x65) - (a6 & (2 * ((v13 >> 5) ^ 0x65))) + 91;
    LOBYTE(v16) = 8 * ~(_BYTE)v13;
    char v17 = (16 * ~(_BYTE)v13) & 0xBF;
LABEL_5:
    LOBYTE(STACK[0x31F]) = v16 - v17 + (v11 ^ 0xD8);
  }
  return sub_10002DA38(a1, a2, a3);
}

uint64_t sub_100012ED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t *a12, int a13, int a14)
{
  a14 = v16
      - 460628867 * ((&a12 + 1482644329 - 2 * ((unint64_t)&a12 & 0x585F5B69)) ^ 0x14C9D914)
      + 171;
  a12 = &STACK[0x7DDA1A649706FBA5];
  uint64_t v17 = (*(uint64_t (**)(unint64_t **))(v15 + 8 * (v16 + 987)))(&a12);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * (((a13 == v14) * (((v16 + 133272295) & 0x8E6) + 299)) ^ v16)))(v17);
}

uint64_t sub_100012F80()
{
  return sub_10004B5D4();
}

uint64_t sub_100013030()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((2 * v2) ^ 0x8D0) + ((v2 - 1277947334) & 0x4C2BE7FA) + 2575) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_10001307C@<X0>(unsigned int a1@<W0>, unint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, void *a5@<X6>, int a6@<W7>, unsigned int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v36 = 4 * (v31 + 1 + a4);
  unint64_t v37 = (*(_DWORD *)(a23 + v36) ^ v23) + (a3 ^ HIDWORD(v24)) + a1 * (unint64_t)(*(_DWORD *)(*a5 + v36) ^ v23);
  unint64_t v38 = HIDWORD(v35)
      + a7 * (unint64_t)(*(_DWORD *)(*v33 + v36) ^ v23)
      + ((v37 + v27 - ((a6 + v30) & (2 * v37))) ^ a2);
  *(_DWORD *)(a23 + 4 * (v31 + a4)) = v38 + v23 - (v25 & (2 * v38));
  BOOL v40 = v31 + v26 < v28 && v31 + v26 >= v34;
  return (*(uint64_t (**)(void))(v29 + 8 * ((v40 | (2 * v40)) ^ v32)))();
}

uint64_t sub_100013114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  if (a16 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22
  }
                                                                         + 8
                                                                         * ((1162
                                                                           * (((*(_DWORD *)(v23 - 128) == 1483378228) ^ (a7 + 113)) & 1)) ^ (a7 - 1073396368))))(a1, a2, -3221572066, a9);
  if (a16 == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22
  }
                                                                + 8
                                                                * ((39
                                                                  * (*(_DWORD *)(v23 - 128) != ((a7 - 1073396368) ^ 0x586A8FF2))) ^ (a7 - 1073396368))))(a1, a9, -3221572066);
  unint64_t v25 = ((unint64_t)&a22 ^ 0x4D561C7F96DBFFDELL)
      + ((2 * (void)&a22) & 0x9AAC38FF2DB7FFB0)
      - 0x404400581002D20CLL;
  *(unsigned char *)(v23 - 129) = ((v25 + 46) ^ 0xBA) * (v25 + 63);
  return (*(uint64_t (**)(void, uint64_t, uint64_t))(v22 + 11456))(0, a9, -3221572066);
}

uint64_t sub_1000132C8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((110
                                * (((a1 - 544568610) ^ 0xB9C0F3FB3F8F2FE8)
                                 + ((2 * (a1 - 544568610)) & 0x7F1E5FD0)
                                 + 0x463F0C04FB363F1ALL == 986017538)) ^ 0x625u)))();
}

uint64_t sub_100013368(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, uint64_t a18, uint64_t a19, int a20,int a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  unint64_t v30 = (*(_DWORD *)(a25 + a12) ^ v25) + HIDWORD(v29) + ((v26 >> (((-93 * (a1 ^ 0xC2) + 112) | 0x56) ^ 0xFEu)) ^ a3);
  *(_DWORD *)(a25 + 4 * a13) = v30 + v25 - (v27 & (2 * v30));
  *(_DWORD *)(a25 + a12) = HIDWORD(v30) + v25 - (v27 & (2 * HIDWORD(v30)));
  BOOL v32 = a21 - 730391689 > 1869232505 || a21 - 730391689 < a17;
  return (*(uint64_t (**)(void))(v28 + 8 * (a1 ^ (2297 * v32))))();
}

uint64_t sub_100013418@<X0>(int a1@<W4>, int a2@<W6>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  *(_DWORD *)(v45 - 120) = a1 + 12;
  *(_DWORD *)(v45 - 128) = a1 + 3;
  v53.val[1].i64[0] = ((_BYTE)a1 + 11) & 0xF;
  v53.val[1].i64[1] = ((_BYTE)a1 + 10) & 0xF;
  v53.val[2].i64[0] = ((_BYTE)a1 + 9) & 0xF;
  v53.val[2].i64[1] = ((_BYTE)a1 + 8) & 0xF;
  v53.val[3].i64[0] = ((_BYTE)a1 + 7) & 0xF;
  v53.val[3].i64[1] = ((_BYTE)a1 + 6) & 0xF;
  v54.val[0].i64[0] = ((_BYTE)a1 + 5) & 0xF;
  v54.val[0].i64[1] = ((_BYTE)a1 + 4) & 0xF;
  v54.val[1].i64[0] = *(_DWORD *)(v45 - 128) & 0xF;
  v54.val[1].i64[1] = ((_BYTE)a1 + 2) & 0xF;
  v54.val[2].i64[0] = (a1 + 1) & 0xF;
  v54.val[2].i64[1] = a1 & 0xF;
  v54.val[3].i64[0] = ((_BYTE)a1 - 1) & 0xF;
  v54.val[3].i64[1] = ((_BYTE)a1 + 14) & 0xF;
  v46.i64[0] = 0x6161616161616161;
  v46.i64[1] = 0x6161616161616161;
  v47.i64[0] = 0x5B5B5B5B5B5B5B5BLL;
  v47.i64[1] = 0x5B5B5B5B5B5B5B5BLL;
  uint64_t v48 = a1 + ((a2 + 2043840345) & 0x862D77ED ^ (v43 + 1209));
  v53.val[0].i64[0] = ((_BYTE)a1 + (((_BYTE)a2 + 89) & 0xED ^ (v43 - 71))) & 0xF;
  v53.val[0].i64[1] = *(_DWORD *)(v45 - 120) & 0xF;
  v49.i64[0] = vqtbl4q_s8(v53, (int8x16_t)xmmword_1001D6580).u64[0];
  v49.i64[1] = vqtbl4q_s8(v54, (int8x16_t)xmmword_1001D6580).u64[0];
  int8x16_t v50 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v39 - 15 + v48), *(int8x16_t *)(v42 + (v48 & 0xF) - 15)), veorq_s8(*(int8x16_t *)(v41 + (v48 & 0xF) - 15), *(int8x16_t *)(v40 + (v48 & 0xF) - 15))));
  int8x16_t v51 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v50, v50, 8uLL), v47), vmulq_s8(v49, v46)));
  *(int8x16_t *)(a3 - 15 + v48) = vextq_s8(v51, v51, 8uLL);
  return (*(uint64_t (**)(void))(a39 + 8 * ((3018 * ((v44 & 0xFFFFFFF0) == 16)) ^ a2)))();
}

uint64_t sub_1000135A4()
{
  BOOL v4 = (*(uint64_t (**)(void, uint64_t))(v3 + 8 * (v1 + 1765)))((v2 + ((v1 - 408) | 0x400) - 1102) ^ v0, 1644418179) == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v4 * (v1 ^ 0x1F1)) ^ v1)))();
}

uint64_t sub_1000135FC@<X0>(int a1@<W3>, int a2@<W4>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + (a2 ^ 0xF4164B4F) + a1) = *(unsigned char *)(v5 + (a2 ^ 0xF4164B4F) + a1);
  return (*(uint64_t (**)(void))(v3 + 8 * ((2784 * (a1 - 1 == v4)) ^ a2)))(0);
}

uint64_t sub_100013640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  *(void *)(v24 - 120) = a18;
  *(_DWORD *)(v24 - 112) = v20 + ((v22 - ((v24 - 128) | v22) + ((v24 - 128) | 0x5C847533)) ^ 0xE6100D51) * v23 + 929;
  *(void *)(v24 - 104) = v18;
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(v19 + 8 * (v20 + 1492)))(v24 - 128);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * (((*(_DWORD *)(v24 - 128) == v20 - 474 + v21) * ((16 * v20) ^ 0x2FAD)) ^ v20)))(v25);
}

uint64_t sub_1000136D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>)
{
  uint64_t v13 = *(void *)(v11 + 72);
  *(_DWORD *)(v9 - 0x2EA5C8ED901E2B89) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8 * (((v13 != 0x9F59A8236606C0) | (32 * (v13 != 0x9F59A8236606C0))) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, v10);
}

uint64_t sub_1000137A4@<X0>(int a1@<W1>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((((v2 + 486088967) & 0xE306DF7F) - 1817) * (a2 == a1)) ^ v2)))();
}

uint64_t sub_1000137E4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(_DWORD *)(result + 32) = a6;
  return result;
}

uint64_t sub_1000137F4()
{
  int v5 = 1178560073 * ((((v4 - 120) | 0x3AFCCB75) - (v4 - 120) + ((v4 - 120) & 0xC5033488)) ^ 0x8068B317);
  *(void *)(v4 - 112) = v4 + 0x35FF68D50C8F3FB7;
  *(_DWORD *)(v4 - 104) = v3 - v5 + 1172344411;
  *(_DWORD *)(v4 - 120) = ((((v3 - 703) | 0x234) + 1382107835) ^ v0) - v5;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v3 ^ 0xCDD)))(v4 - 120);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1
                                                     + 8
                                                     * ((21
                                                       * (*v2
                                                        + 1196322410
                                                        + ((2 * (*(_DWORD *)(v4 - 152) & 0x3F)) ^ 0x7E)
                                                        + (*(_DWORD *)(v4 - 152) & 0x3F | v3 ^ 0x9F77DE80) < 0xFFFFFFC0)) ^ v3)))(v6, 4028045591);
}

uint64_t sub_100013974(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  int8x16x4_t v75 = vld4q_s8(a4);
  uint8x16_t v58 = (uint8x16_t)veorq_s8(v75.val[1], v57);
  _Q17 = vmovl_u8(*(uint8x8_t *)v58.i8);
  _Q16 = vmovl_high_u8(v58);
  __asm
  {
    SHLL2           V18.4S, V16.8H, #0x10
    SHLL2           V19.4S, V17.8H, #0x10
  }
  char v67 = (_DWORD *)(v53 + 4 * (v51 + 16 + v56));
  int v68 = *(v67 - 8) ^ *(v67 - 3);
  int v69 = v68 + v55 - ((v68 << (v52 ^ 0x3E)) & v50);
  int v70 = *(v67 - 16) ^ *(v67 - 14);
  HIDWORD(v72) = v70 ^ 0x1659910 ^ v69;
  LODWORD(v72) = v70 ^ ~v69;
  int v71 = v72 >> 31;
  uint64_t v73 = (v55 + v71);
  *char v67 = v73 - (v50 & (2 * v71));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 8 * ((49 * (v51 + 17 == v51 + 80)) ^ ((v52 ^ 0x400) + 923))))(a1, a2, a3, 49, v52 ^ 0x400u, v52 ^ 0x7D4u, v73, 1533701554, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_100013B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, void))(v8
                                                                              + 8
                                                                              * ((769
                                                                                * (((v5
                                                                                   + ((((a5 - 1673) | 0x11) - 1476427994) & 0xDEA6D7D9)
                                                                                   + 24) & v6) == 0)) ^ ((a5 - 1673) | 0x11))))(a1, a2, a3, (v7 - a3), ((a5 - 1673) | 0x11u) + 65);
}

uint64_t sub_100013B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v21 = 349 * ((v14 + 897) ^ 0x436);
  *(_DWORD *)(a14 + 4 * (v17 + v14 + v19)) = (HIDWORD(v16) ^ (v21 + 1387680674))
                                             + v15
                                             - ((2 * (HIDWORD(v16) ^ (v21 + 1387680674))) & 0x63D3858A);
  unsigned __int8 v22 = 93 * ((v14 - 127) ^ 0x36) + 70;
  BOOL v24 = a7 + 2131813949 > 1515516118 || a7 + 2131813949 < (int)a4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18
                                                                       + 8 * ((107 * (((v22 ^ v24) & 1) == 0)) ^ v21)))(a1, a2, a4, v20);
}

uint64_t sub_100013C40@<X0>(int a1@<W0>, int a2@<W8>)
{
  *(unsigned char *)(v6 + v4 + a1 + ((v2 + v5 - 703) | 0x20u) + 1052) = *(unsigned char *)(v3
                                                                         + v4
                                                                         + a1
                                                                         + ((v2 + v5 - 703) | 0x20u)
                                                                         + 1052);
  return (*(uint64_t (**)(void))(v7 + 8 * ((14 * (a1 - 1 != a2)) ^ (v2 + v5 - 356))))();
}

uint64_t sub_100013C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8 * (a35 - 310)))(1548155700, a2 ^ 0x787179A3C90D56E6);
}

uint64_t sub_100013D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, unsigned int a16, unsigned int a17, int a18)
{
  unsigned int v19 = 1759421093 * ((2 * (&a15 & 0x718879B0) - &a15 + 242714189) ^ 0xBD0A3619);
  a18 = v19 ^ 0x6EB7863C;
  LODWORD(a15) = v19 ^ 0x6AF12351;
  HIDWORD(a15) = v19 ^ 0x10825B55;
  a16 = v19 + 1105;
  (*(void (**)(unint64_t **))(v18 + 18512))(&a15);
  a15 = &STACK[0x7DDA1A649706FBC5];
  a17 = 1441 - 460628867 * (((&a15 | 0x1C00298D) - (&a15 & 0x1C00298D)) ^ 0x5096ABF0);
  uint64_t v20 = (*(uint64_t (**)(unint64_t **))(v18 + 18056))(&a15);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((7 * (a16 == -2124048112)) ^ 0x2ABu)))(v20);
}

uint64_t sub_100013E98()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (v1 ^ (8 * (v0 != 0)))))();
}

uint64_t sub_100013ED0@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 + (v5 + v4)) = *(unsigned char *)(v2 + (v5 + v4));
  return (*(uint64_t (**)(void))(v6 + 8 * ((468 * (((a1 + 951) ^ 0xFFFFFA44) + v5 == v3)) ^ (a1 + 1233))))();
}

uint64_t sub_100013F10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                       + 8
                                                                       * ((1007
                                                                         * ((((v4 & 0xFFFFFFFC) == ((v3 + 775) ^ 0x53AFBB37)) ^ (v3 + 1)) & 1)) ^ v3)))(17, a2, a3, 3689027270);
}

uint64_t sub_100013F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(_DWORD *)(v18 - 112) = v16
                         + 1224239923 * ((~((v18 - 144) | 0x2161387A) + ((v18 - 144) & 0x2161387A)) ^ 0x2C2D3A52)
                         - 1482;
  *(void *)(v18 - 104) = v13;
  *(void *)(v18 - 144) = v14;
  *(void *)(v18 - 136) = a11;
  *(void *)(v18 - 128) = v13;
  *(void *)(v18 - 120) = v15;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (v16 + 105)))(v18 - 144);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * ((133
                                              * ((((((v16 - 1810) | 5) + 1835) | 2) ^ (v12 - 1967)) + v11 > 0x7FFFFFFE)) ^ ((v16 - 1810) | 5))))(v19);
}

uint64_t sub_100014034@<X0>(int a1@<W0>, uint64_t a2@<X1>, unint64_t a3@<X2>, int a4@<W3>, void *a5@<X6>, int a6@<W7>, int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v38 = 4 * (a7 + 1 + a4);
  unint64_t v39 = (*(_DWORD *)(a23 + v38) ^ v23) + (a2 ^ HIDWORD(v25)) + v24 * (unint64_t)(*(_DWORD *)(*a5 + v38) ^ v23);
  unint64_t v40 = HIDWORD(v28)
      + v36 * (unint64_t)(*(_DWORD *)(*v33 + v38) ^ v23)
      + ((a1 + v29 + v39 - (v37 & (2 * v39)) - 630) ^ a3);
  *(_DWORD *)(a23 + 4 * (a7 + a4)) = v40 + v23 - (v26 & (2 * v40));
  if (v27 > v35 != a7 + v31 < v32) {
    BOOL v41 = v27 > v35;
  }
  else {
    BOOL v41 = a7 + v31 < v34;
  }
  return (*(uint64_t (**)(void))(v30 + 8 * (a6 ^ (2 * !v41))))();
}

uint64_t sub_1000140E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((994 * (((a7 + v7 - 145) ^ 0xC88D345B) + *(_DWORD *)(v10 + 48 * v9 + 36) < 0x80000003)) ^ v7)))();
}

uint64_t sub_100014140(uint64_t a1)
{
  *(_DWORD *)(v2 - 140) = v1;
  return sub_100047E10(a1);
}

uint64_t sub_100014158@<X0>(unsigned int a1@<W3>, int a2@<W8>)
{
  if (a2 == a1) {
    int v2 = 2124071630;
  }
  else {
    int v2 = a2;
  }
  return v2 ^ a1;
}

uint64_t sub_1000141A8(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(*(void *)(a1 + 96) + 1424) = ((v2 - 111) | 0x31) + *(_DWORD *)(a2 + 4) + 1380784351;
  *(void *)(*(void *)(a1 + 96) + 520) = *(void *)(a2 + 8) + 1;
  return 0;
}

uint64_t sub_1000141F0@<X0>(uint64_t a1@<X0>, int a2@<W4>, int a3@<W8>)
{
  int v7 = (v6 - 699) | 0x20;
  *(_DWORD *)(*(void *)(v5 - 0x9F59A8236606B8) + 4 * (v4 + a3)) = a2;
  int v8 = v4 + v7 - 1055;
  *(_DWORD *)(v5 - 0x9F59A8236606BCLL) = v8;
  int v10 = v8 + a3;
  if (v8 + a3 < 0) {
    int v10 = -v10;
  }
  unsigned int v9 = (v7 + 838290140) & 0xCE08B57F;
  return (*(uint64_t (**)(uint64_t, void))(v3
                                                    + 8
                                                    * (int)((303
                                                           * ((int)(v9
                                                                  + (v9 ^ v10 ^ 0x5B17FB83)
                                                                  + ((2 * v10) & 0xB62FFFFE)
                                                                  - 1528300668) > (int)(352 * (v9 ^ 0x47F) - 1057))) ^ v9)))(a1, v9 - 537);
}

uint64_t sub_1000142EC()
{
  return 0;
}

uint64_t sub_10001432C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((38 * (((v7 == v8) ^ (a7 + ((a1 - 103) & 0x79) + 117)) & 1)) ^ a1)))();
}

void sub_10001437C()
{
}

uint64_t sub_10001442C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v20 = 628203409 * ((((v19 - 152) | 0x3376FC5B) - (v19 - 152) + ((v19 - 152) & 0xCC8903A0)) ^ 0xB1FEF068);
  *(void *)(v19 - 112) = v18;
  *(void *)(v19 - 104) = a12;
  *(void *)(v19 - 152) = a13;
  *(void *)(v19 - 144) = a11;
  *(void *)(v19 - 128) = a14;
  *(_DWORD *)(v19 - 136) = v14 - v20 + 1041;
  *(_DWORD *)(v19 - 132) = v17 - v20 + ((((v14 + 70041478) | 0x20102C08) - v16 + 775) ^ 0x13437577);
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v14 + 2110)))(v19 - 152);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((800 * (*(_DWORD *)(v19 - 120) == -2124048112)) ^ v14)))(v21);
}

uint64_t sub_10001452C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6)
{
  a5 = v6;
  a6 = v7;
  a3 = v7;
  a4 = v8 - 535753261 * ((2 * (&a3 & 0x68E9D5C8) - &a3 - 1760155084) ^ 0x9DE2241B) + 1388;
  uint64_t v9 = (*(uint64_t (**)(uint64_t *))(a1 + 8 * (v8 + 2045)))(&a3);
  return sub_10003C2B4(v9);
}

uint64_t sub_100014580()
{
  int v3 = 65 - v0;
  if ((65 - v0) <= 0x40) {
    int v3 = 64;
  }
  BOOL v4 = v3 + v0 + ((v1 + 649) ^ 0xFFFFFB51) >= ((v1 + 552) ^ 0x48Au);
  return (*(uint64_t (**)(void))(v2 + 8 * (((4 * v4) | (16 * v4)) ^ v1)))();
}

uint64_t sub_1000145D8@<X0>(int a1@<W8>)
{
  *(unsigned char *)(v2 + (v5 + v6)) = *(unsigned char *)(v3 + (v5 + v6));
  return (*(uint64_t (**)(void))(v1 + 8 * (((32 * (v6 - 1 != a1)) | ((v6 - 1 != a1) << 6)) ^ v4)))();
}

uint64_t sub_100014608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  return sub_10002CD8C(a1, a2, a3, a8 + v20 + v21 + (v19 ^ 0x5FAu), a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
}

uint64_t sub_100014620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,_DWORD *a39)
{
  int v44 = v40 ^ (v41 - 292);
  uint64_t v45 = (*(uint64_t (**)(uint64_t, void))(v39 + 8 * (v40 ^ 0x9B8)))(a11, 0);
  int v46 = LODWORD(STACK[0x558]) - 1756925734 - ((v44 - 452793875) & (2 * LODWORD(STACK[0x558])));
  LODWORD(STACK[0x548]) = LODWORD(STACK[0x550]) - 1756925734 - ((2 * LODWORD(STACK[0x550])) & 0x2E8EE1B4);
  LODWORD(STACK[0x544]) = v46;
  int v47 = (*(uint64_t (**)(uint64_t))(v39 + 8 * (v40 ^ 0x9D3)))(v45);
  LODWORD(STACK[0x54C]) = v47 - 1756925734 - ((2 * v47) & 0x2E8EE1B4);
  int v48 = (*(uint64_t (**)(void))(v39 + 8 * (v40 + 1875)))();
  LODWORD(STACK[0x540]) = v48 - 1756925734 - ((2 * v48) & 0x2E8EE1B4);
  unsigned int v49 = (((*v42 >> 30) ^ 2) - 1756925734 + ((*v42 >> 29) | 0xFFFFFFFB) + 1) ^ *v42;
  unsigned int v50 = (*a39 ^ 0x974770DA) + ((1664525 * v49 - 1756925734 - ((3329050 * v49) & 0x2E8EE1B4)) ^ v42[1]);
  v42[1] = v50 - 1756925734 - ((2 * v50) & 0x2E8EE1B4);
  unint64_t v51 = 1374699841 * ((0x8D0CAE00BE507B8ELL - (a38 | 0x8D0CAE00BE507B8ELL) + a37) ^ 0x640140C937A88B27);
  *(_DWORD *)(v43 - 112) = (v44 - 1002787147) ^ v51;
  STACK[0x5B0] = v51 + 2501470153u;
  STACK[0x5B8] = v51 ^ 0x951967CB;
  *(_DWORD *)(v43 - 124) = (v44 - 1002787258) ^ v51;
  *(_DWORD *)(v43 - 120) = (v44 - 1002787255) ^ v51;
  *(_DWORD *)(v43 - 152) = v51 + v44 - 1738116733;
  *(_DWORD *)(v43 - 128) = -1374699841 * ((-1102021746 - (a38 | 0xBE507B8E) + a37) ^ 0x37A88B27);
  uint64_t v52 = (*(uint64_t (**)(uint64_t))(a36 + 8 * (v44 - 1233907433)))(v43 - 152);
  return (*(uint64_t (**)(uint64_t))(a36 + 8 * *(int *)(v43 - 116)))(v52);
}

uint64_t sub_10001488C@<X0>(int a1@<W8>, uint64_t a2, ...)
{
  va_start(va, a2);
  BOOL v5 = (*(uint64_t (**)(void, char *, void, uint64_t))(v3 + 8 * (v4 + 1082)))(**(unsigned int **)(v2 + 8 * (int)(v4 - 988)), va, ((a1 - 1283069568) & 0xFFFFF000 ^ 0x3FBEF387 ^ ((v4 ^ 0x5A1) + 835))+ ((2 * (a1 - 1283069568)) & 0x7F7DE000)+ ((2 * (v4 ^ 0x5A1)) ^ 0xC0410A5B), 1) != 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((21 * v5) ^ v4)))();
}

uint64_t sub_100014920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                         + 8
                                                                                         * (int)(((v5 == ((v7 + 64) ^ 0x18B7487C))
                                                                                                * (((v7 + 231811731) & 0xF22ECF5F)
                                                                                                 - 114)) ^ v7)))(a1, a2, a3, a4, a5, 1176788107);
}

uint64_t sub_100014974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return sub_10004C040(a6, 201323775);
}

uint64_t sub_10001499C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  return (*(uint64_t (**)(void))(v21 + 8 * (((a20 == 690734999) * ((v20 + 556) ^ 0x39C)) ^ v20)))();
}

void sub_1000149DC()
{
  if ((*(_DWORD *)(v2 - 0x9F59A8236606BCLL) - 1477598967) >= 0x7FFFFFFF) {
    int v3 = v1;
  }
  else {
    int v3 = v1 + 2;
  }
  _DWORD *v0 = v3;
}

uint64_t sub_100014A10@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X5>, uint64_t a4@<X7>, int a5@<W8>)
{
  *(unsigned char *)(a3 + (a5 + 1 + v7)) = *(unsigned char *)(a4 + (v6 + a1));
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((((((v5 - 319) ^ (unint64_t)(v10 + 221)) & (v6 + 1)) == v8) * a2) ^ v5)))();
}

uint64_t sub_100014A58(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int8x16_t a15, int32x4_t a16, int8x16_t a17, int8x16_t a18, int8x16_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v33 = v29 - a1 + 2149;
  *(_DWORD *)uint64_t v32 = 390557914;
  (*(void (**)(uint64_t))(v31 + 8 * (v29 ^ 0x8C3)))(a29);
  int8x16_t v34 = (int8x16_t)vld1q_dup_f32((const float *)v32);
  v35.i64[0] = 0x8000000080000000;
  v35.i64[1] = 0x8000000080000000;
  v36.i64[0] = *(void *)(v32 + 4);
  v36.i32[2] = *(_DWORD *)(v32 + 12);
  int8x16_t v37 = vextq_s8(v34, v36, 0xCuLL);
  int8x16_t v38 = v36;
  v38.i32[3] = *(_DWORD *)(v32 + 16);
  int32x4_t v39 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v38, a19), vandq_s8(v37, v35)), 1uLL), a18);
  v40.i32[0] = *(_DWORD *)(v30 + 4 * (*(_DWORD *)(v32 + 4) & 1));
  v40.i32[1] = *(_DWORD *)(v30 + 4 * (*(_DWORD *)(v32 + 8) & 1));
  v40.i32[2] = *(_DWORD *)(v30 + 4 * (*(_DWORD *)(v32 + 12) & 1));
  v40.i32[3] = *(_DWORD *)(v30 + 4 * (v38.i8[12] & 1));
  *(int8x16_t *)uint64_t v32 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v32 + 1588), v40), a15), (int8x16_t)vaddq_s32(vsubq_s32(v39, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v39, v39), a17)), a16));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8 * ((v33 - 1233908551) ^ 0x46)))(2538041562, 1269020781, 781115828, a24, 3841229329, 1860, 695, 1524);
}

uint64_t sub_100014BBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(uint64_t))(v12
                                            + 8
                                            * (int)((((v11 + 77767581) & 0xFB5D5E77 ^ ((v11 - 1003) | 0x810) ^ 0xD1A)
                                                   * (*(_DWORD *)(v13 - 152) == *(_DWORD *)(v13 - 160))) ^ (v11 + 320))))(a11);
}

uint64_t sub_100014C20(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((993
                                * (((*(unsigned __int8 *)(*(void *)(a1 + 40) + (v3 - 581300668))
                                   - ((2 * *(unsigned __int8 *)(*(void *)(a1 + 40) + (v3 - 581300668))) & 0x2E)
                                   + 690734903) & 0x1F) == 8)) ^ (v1 + 330))))();
}

uint64_t sub_100014C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  (*(void (**)(uint64_t, uint64_t))(v12 + 8 * (v13 ^ (v13 + 1861))))(a12, 2965982036);
  int v17 = (*(uint64_t (**)(void))(v12 + 8 * (v16 + v13 - 39)))();
  unsigned int v18 = v16 + v13 - 1756926719 + v17 - ((2 * v17) & 0x2E8EE1B4) - 1285;
  unsigned int *v14 = v18;
  int v19 = (((v18 >> (((v16 + v13 + 39) ^ 0x61) - 70)) ^ 2)
       - 1756925734
       - ((2 * ((v18 >> (((v16 + v13 + 39) ^ 0x61) - 70)) ^ 2)) & 4)) ^ v18;
  v14[1] = v15 + 1812433253 * v19 - ((2 - 670100790 * v19) & 0x2E8EE1B4);
  return (*(uint64_t (**)(uint64_t))(v12 + 8 * (v16 + v13 - 985)))(3624866506);
}

uint64_t sub_100014D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  return (*(uint64_t (**)(void))(v22
                              + 8
                              * ((38
                                * ((unint64_t)&STACK[0x2AC]
                                 + (v20 + v19 + 372)
                                 + (((v21 - 788) + (unint64_t)(15 * (v21 ^ 0x4B6u)) - 1319) ^ a19) < 0x10)) ^ v21)))();
}

uint64_t sub_100014DB8()
{
  return sub_100047E24();
}

uint64_t sub_100014DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(_DWORD *)(v18 - 120) = v15 + ((((v18 - 136) | 0xC9275412) - ((v18 - 136) & 0xC9275412)) ^ 0x73B32C70) * v17 + 682;
  *(void *)(v18 - 112) = v16;
  *(void *)(v18 - 128) = a13;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 + 1245)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * ((1935 * (*(_DWORD *)(v18 - 136) + v13 < 3 * (v15 ^ 0x3F5u) - 1363007364)) ^ v15)))(v19);
}

uint64_t sub_100014E70()
{
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * (v2 ^ (62 * ((unint64_t)(v0 - v3) < 0x20)))))(v1);
}

uint64_t sub_100014EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(_DWORD *)(v17 - 128) = v15
                         - 108757529 * ((((v17 - 128) | 0x2BA48E67) - ((v17 - 128) & 0x2BA48E67)) ^ 0xCB38EC4C)
                         - 195;
  *(void *)(v17 - 120) = a13;
  *(void *)(v17 - 112) = v16;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v15 ^ 0xC8E)))(v17 - 128);
  return (*(uint64_t (**)(uint64_t))(v13 + 8
                                                  * (((((v15 - 1051) | 0x242) ^ 0x2C2) * (v14 == 643217244)) | v15)))(v18);
}

uint64_t sub_100014F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v24 = ((((2 * (v23 - 144)) | 0x6D4E95B8) - (v23 - 144) + 1230550308) ^ 0xC3332BE) * v22;
  *(_DWORD *)(v23 - 116) = v24 + v18 + ((2 * v17) ^ 0x11770D3D);
  *(void *)(v23 - 136) = v21;
  *(void *)(v23 - 128) = v20;
  *(_DWORD *)(v23 - 144) = v24 + v17 - 600;
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(v19 + 8 * (v17 + 1315)))(v23 - 144);
  return sub_100016DB8(v25, v26, v27, v28, v29, v30, v31, v32, a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

uint64_t sub_100014FD8@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W4>, int a4@<W5>, int a5@<W8>)
{
  *(unsigned char *)(*(void *)(a1 + 8) + (a4 + a5)) = (a3 ^ v7) >> v8;
  return (*(uint64_t (**)(void))(v5 + 8 * ((((a2 - 1868644530) & 0x6F613EFB ^ 0x4E5) * (a4 - 1 == v6 + 151)) ^ a2)))();
}

uint64_t sub_100015038()
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((1793 * (*(_DWORD *)(v1 + 4 * v2) == v3)) ^ v0)))();
}

void sub_100015064()
{
}

uint64_t sub_10001506C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  unsigned int v15 = (a5 - 406864047) & 0xFD79E7BD;
  int v16 = 628203409 * ((((v14 - 120) | 0x7B53BC83) - (v14 - 120) + ((v14 - 120) & 0x84AC4378)) ^ 0xF9DBB0B0);
  *(_DWORD *)(v14 - 112) = v16 + a5 + 1502;
  *(_DWORD *)(v14 - 108) = a13 - v16 + 929546135;
  *(void *)(v14 - 120) = a10;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (a5 ^ 0x8D5)))(v14 - 120);
  uint64_t v18 = *(_DWORD *)(v14 - 152) & 0x3F;
  *(unsigned char *)(v14 - 220 + (v18 ^ 0x3F)) = -37;
  return (*(uint64_t (**)(uint64_t))(v13
                                            + 8
                                            * (int)((((v18 ^ 0x3F) > 0x37) * (v15 + 449208225)) ^ a5)))(v17);
}

uint64_t sub_100015188@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  _DWORD *v6 = v6[623];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                                + 8
                                                                                * (int)(((v7 - 1 != ((((a4 + 1386092223) & 0xAD61EEEF) + 1224871993) ^ 0x4B27D8CD))
                                                                                       * (((((a4 + 1386092223) & 0xAD61EEEF)
                                                                                          + 1224871993) | 0x89E145) ^ (v5 + 38))) ^ (a4 + 1386092223) & 0xAD61EEEF)))(a1, a2, a3, 2538041562, 781115828);
}

uint64_t sub_100015214()
{
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((((v0 - 271286987) < 0x38)
                                              * ((v2 - 2129750595) & 0x7EF16FFA ^ 0x4BC)) ^ (v2 + 1765))))(91);
}

uint64_t sub_10001526C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (v0 | (8
                                     * ((((*v1 - 42) << ((v0 - 111) ^ 0x76)) & (v0 - 95555048))
                                      + ((*v1 - 42) ^ 0xFD26FAFF) == -47777025)))))();
}

uint64_t sub_1000152D8@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3)
{
  int v11 = v4 ^ 0x24E;
  uint64_t v12 = 4 * (v8 + v5);
  int v13 = (*(_DWORD *)(*(void *)(v10 - 0x9F59A8236606B8) + v12) ^ v6)
      - (*(_DWORD *)(*(void *)(a3 - 0x9F59A8236606B8) + v12) ^ v6);
  *(_DWORD *)(*(void *)(a1 - 0x9F59A8236606B8) + v12) = v13 + v6 - ((v11 ^ 0x19D ^ (v9 + 257)) & (2 * v13));
  BOOL v14 = v8 - 1190231144 < (int)(v3 + 234959025);
  if (v3 > 0x71FECF4E != v8 - 1190231144 < -1912524623) {
    BOOL v14 = v3 > 0x71FECF4E;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((1957 * v14) ^ v11)))();
}

uint64_t sub_100015414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18)
{
  BOOL v21 = v18 + 1725738378 < (a18 - 1980961179);
  if ((a18 - 1980961179) < 0xAA626388 != (v18 + 1725738378) < 0xAA626388) {
    BOOL v21 = (a18 - 1980961179) < 0xAA626388;
  }
  return (*(uint64_t (**)(void))(v20 + 8 * ((50 * (((5 * (v19 ^ 0xD1) + 1) ^ v21) & 1)) ^ v19)))();
}

uint64_t sub_100015494(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,int a30)
{
  int8x16x4_t v41 = vld4q_s8(a4);
  uint8x16_t v31 = (uint8x16_t)veorq_s8(v41.val[1], v30);
  _Q17 = vmovl_u8(*(uint8x8_t *)v31.i8);
  _Q16 = vmovl_high_u8(v31);
  __asm
  {
    SHLL2           V18.4S, V16.8H, #0x10
    SHLL2           V19.4S, V17.8H, #0x10
  }
  return sub_10001B148(a1, a2, a3, (uint64_t)a4, a30 - 1334);
}

uint64_t sub_1000155C4(uint64_t a1, uint64_t a2)
{
  BOOL v10 = (v7 & (2 * (*(unsigned __int8 *)(a2 + 9) - 1))) + ((*(unsigned __int8 *)(a2 + 9) - 1) ^ v8) == v2 + v6 + 2113822880
     && (v4 + v3 + 4) < 0xC9;
  return (*(uint64_t (**)(void))(v5 + 8 * ((1136 * v10) ^ v6)))();
}

uint64_t sub_10001561C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  return sub_10003318C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_100015628@<X0>(int a1@<W8>, uint64_t a2, unsigned int a3, int a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  unsigned int v12 = (((&a3 | 0x782BF6AF) - (&a3 & 0x782BF6AF)) ^ 0x6FED359) * a1;
  a7 = v12 - 1125842226;
  a3 = v12 + 1990337097;
  a4 = v12 + v11 - 517;
  a5 = v7;
  a6 = v8;
  uint64_t v13 = (*(uint64_t (**)(unsigned int *))(v9 + 8 * (v11 ^ 0xA0C)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * (((*(_DWORD *)(v8 - 0x6C0C7F2AED40EE79) == v10 + 647)
                                              * ((v11 - 791755912) & 0x2F313EAA ^ 0xEA0)) ^ v11)))(v13);
}

uint64_t sub_1000156F4(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v6 & (2 * (*(unsigned __int8 *)(a2 + 3) - 137)))
                                 + ((*(unsigned __int8 *)(a2 + 3) - 137) ^ v7) == v7)
                                * (a3 + (v5 ^ (v3 - 49)) + 595)) ^ v5)))();
}

uint64_t sub_100015738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8 * ((v21 - 703) | (2 * (v20 < 2)))))(0x4D06EBA72A644B25, 1292299175, 711215909, 3145792361, a5, a6, v19 - 0x9F59A8236606B8, (v21 - 703), a9, a10, a11, a12, 4 * a19);
}

uint64_t sub_1000158D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v16 - 136) = a14;
  *(void *)(v16 - 128) = a13;
  *(_DWORD *)(v16 - 120) = v15 + 1374699841 * ((v16 - 136) ^ 0x6DF41809) + 1461;
  (*(void (**)(uint64_t))(v14 + 8 * (v15 ^ 0x927)))(v16 - 136);
  int v17 = 1759421093 * ((((v16 - 136) | 0xEC7A100B) - ((v16 - 136) & 0xEC7A100B)) ^ 0x5F07A05F);
  *(_DWORD *)(v16 - 136) = 1751559472 - v17;
  *(void *)(v16 - 128) = a11;
  *(_DWORD *)(v16 - 120) = v15 - v17 + 998;
  (*(void (**)(uint64_t))(v14 + 8 * (v15 + 1797)))(v16 - 136);
  *(void *)(v16 - 128) = a14;
  *(_DWORD *)(v16 - 120) = v15
                         + 1178560073 * (((~(v16 - 136) & 0xBE04A698) - (~(v16 - 136) | 0xBE04A699)) ^ 0x490DEFB)
                         + 1284;
  *(void *)(v16 - 112) = a11;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 ^ 0x939)))(v16 - 136);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * ((((*(_DWORD *)(v16 - 136) - 1532862473) >= 0xA743F4C5)
                                              * (((v15 + 602) ^ 0x279) - 296)) ^ (v15 + 563))))(v18);
}

void sub_1000158DC(uint64_t a1, int a2)
{
  _DWORD *v2 = a2;
  sub_10002EFB0();
}

uint64_t sub_1000158E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned int a21)
{
  a21 = (v21 + 1523) ^ (1225351577
                      * ((((2 * &a17) | 0xBACDF116) - &a17 + 580454261) ^ 0xFEFC209D));
  a18 = a11;
  a19 = v24;
  a20 = v25;
  (*(void (**)(unsigned int *))(v26 + 8 * (v21 + 1892)))(&a17);
  a18 = v22;
  a19 = a11;
  a17 = (v21 + 1803) ^ (((&a17 + 1792760181 - 2 * (&a17 & 0x6ADB5975)) ^ 0x72F417C) * v23);
  (*(void (**)(unsigned int *))(v26 + 8 * (v21 + 1831)))(&a17);
  a18 = a11;
  a17 = (v21 + 1229) ^ (1755732067
                      * ((2 * (&a17 & 0x1AB0380) - &a17 - 27984772) ^ 0x209241A7));
  uint64_t v27 = (*(uint64_t (**)(unsigned int *))(v26 + 8 * (v21 ^ 0x9B6)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v26 + 8 * ((833 * (a19 == v21 - 2124048466)) ^ v21)))(v27);
}

uint64_t sub_100015A3C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((133 * (((((v2 ^ 0x977) + 1835) | 2) ^ (v1 - 1967)) + v0 > 0x7FFFFFFE)) ^ v2 ^ 0x977)))();
}

void sub_100015A80(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a2 + v3) = v2;
  sub_10003FF7C();
}

uint64_t sub_100015A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v8
                              + 8 * ((50 * (((((a6 ^ (a6 + 491)) + 223) ^ (v6 == a5)) & 1) == 0)) ^ (v7 + a6 + 201))))();
}

uint64_t sub_100015AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unsigned int a22)
{
  return (*(uint64_t (**)(void, uint64_t))(v23
                                                    + 8
                                                    * ((((((v22 + 93) | 2) + 23) ^ 0x3E4) * (a22 > 1)) ^ ((v22 + 93) | 2))))((((v22 + 93) | 2) ^ 0xB5895E09) + a22, (int)a22 - 1);
}

uint64_t sub_100015BC4@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((423 * (*(unsigned __int8 *)(a1 + v2) == ((v1 + 24) ^ (v1 - 22)))) ^ v1)))();
}

uint64_t sub_100015BF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, void))(v5 + 8
                                                         * ((303 * (a5 + v6 - 1 > 352 * (a5 ^ 0x47F) - 1057)) ^ a5)))(a1, (a5 - 537));
}

uint64_t sub_100015C40(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v38 = LOBYTE(STACK[0x30C]) ^ 0x22;
  if (v38 == 1)
  {
    unsigned int v44 = STACK[0x2F0];
    unsigned int v45 = STACK[0x2EC];
    LOBYTE(STACK[0x2E4]) = (~LODWORD(STACK[0x2F0]) << ((a4 + a7 + 13) ^ 0x9C))
                         - ((16 * ~LOBYTE(STACK[0x2F0])) & 0xBF)
                         + 91;
    LOBYTE(STACK[0x2E5]) = ((v44 >> 5) ^ 0x65) - ((2 * ((v44 >> 5) ^ 0x65)) & 0xB6) + 91;
    LOBYTE(STACK[0x2E6]) = ((v44 >> 13) ^ 0xB1) - 2 * (((v44 >> 13) ^ 0xB1) & 0xDF ^ (v44 >> 13) & 4) + 91;
    LOBYTE(STACK[0x2E7]) = ((v44 >> 21) ^ 0x29) - 2 * (((v44 >> 21) ^ 0x29) & 0xDF ^ (v44 >> 21) & 4) + 91;
    HIDWORD(v46) = v45 ^ 8;
    LODWORD(v46) = v44 ^ 0x20000000;
    LOBYTE(STACK[0x2E8]) = (v46 >> 29) + (~(2 * (v46 >> 29)) | 0x49) + 92;
    LOBYTE(STACK[0x2E9]) = ((v45 >> 5) ^ 0x8F) - ((2 * ((v45 >> 5) ^ 0x8F)) & 0xB6) + 91;
    LOBYTE(STACK[0x2EA]) = ((v45 >> 13) ^ 0x5A) - 2 * (((v45 >> 13) ^ 0x5A) & 0xDF ^ (v45 >> 13) & 4) + 91;
    unsigned int v47 = v45 >> 21;
    int v48 = (v45 >> 21) ^ 0x40;
    char v49 = v48 & 0x5F;
    char v43 = v48 + 91;
    char v42 = 2 * (v49 ^ v47 & 4);
    goto LABEL_5;
  }
  if (v38 == 2)
  {
    unsigned int v39 = STACK[0x2EC];
    unsigned int v40 = STACK[0x2F0];
    LOBYTE(STACK[0x2E4]) = ((a4 + a7 + 13) ^ (LODWORD(STACK[0x2EC]) >> 21) ^ 0xDF)
                         - ((2 * ((a4 + a7 + 13) ^ (LODWORD(STACK[0x2EC]) >> 21) ^ 0xDF)) & 0xB6)
                         + 91;
    LOBYTE(STACK[0x2E5]) = ((v39 >> 13) ^ 0x5A) - 2 * (((v39 >> 13) ^ 0x5A) & 0xDF ^ (v39 >> 13) & 4) + 91;
    LOBYTE(STACK[0x2E6]) = ((v39 >> 5) ^ 0x8F) + (~(2 * ((v39 >> 5) ^ 0x8F)) | 0x49) + 92;
    HIDWORD(v41) = v39 ^ 8;
    LODWORD(v41) = v40 ^ 0x20000000;
    LOBYTE(STACK[0x2E7]) = (v41 >> 29) - ((2 * (v41 >> 29)) & 0xB6) + 91;
    LOBYTE(STACK[0x2E8]) = ((v40 >> 21) ^ 0x29) - 2 * (((v40 >> 21) ^ 0x29) & 0xDF ^ (v40 >> 21) & 4) + 91;
    LOBYTE(STACK[0x2E9]) = ((v40 >> 13) ^ 0xB1) - ((2 * ((v40 >> 13) ^ 0xB1)) & 0xB6) + 91;
    LOBYTE(STACK[0x2EA]) = ((v40 >> 5) ^ 0x65) + (~(2 * ((v40 >> 5) ^ 0x65)) | 0x49) + 92;
    char v42 = (16 * ~(_BYTE)v40) & 0xBF;
    char v43 = 8 * ~(_BYTE)v40 + 91;
LABEL_5:
    LOBYTE(STACK[0x2EB]) = v43 - v42;
  }
  return sub_100025C98(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_100015E9C(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * ((243 * (v6 + 1 != v5 + 60)) ^ a3)))(v3);
}

uint64_t sub_100015F54@<X0>(int a1@<W1>, int a2@<W2>, uint64_t a3@<X8>)
{
  BOOL v12 = v10 > 0xD616F89A;
  *(unsigned char *)(a3 + (a2 - 1532094841)) = *(unsigned char *)(v4 + (a2 - 1532094841)) ^ *(unsigned char *)(v7 + ((a2 - 1532094841) & 0xFLL)) ^ *(unsigned char *)(v6 + ((a2 - 1532094841) & 0xFLL)) ^ *(unsigned char *)(v5 + ((a2 - 1532094841) & 0xFLL)) ^ (97 * ((a2 - 121) & 0xF)) ^ 0x5B;
  unsigned int v13 = a2 - 828957203;
  int v14 = v12 ^ (v13 < v9);
  BOOL v15 = v13 < v3;
  if (!v14) {
    BOOL v12 = v15;
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((v12 * a1) ^ v8)))();
}

uint64_t sub_100015FF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 8 * ((798 * (v9 + 1 == v8 + 20)) ^ a6)))(v6, a2, a1);
}

uint64_t sub_1000160C8@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W4>, unsigned int a5@<W5>, int a6@<W6>, int a7@<W8>)
{
  int v12 = *(_DWORD *)(v11 + 4 * (v8 + 1));
  unsigned int v13 = a2 ^ ((v12 & 0x7FFFFFFE | v7 & 0x80000000) >> 1);
  *(_DWORD *)(v11 + 4 * v8) = *(_DWORD *)(v11 + 4 * ((a7 ^ a5) + v8) - 2268) ^ a4 ^ *(_DWORD *)(v9 + 4 * (v12 & 1)) ^ (v13 + a1 - (a3 & (2 * v13)));
  return (*(uint64_t (**)(void))(v10 + 8 * (((v8 == 226) * a6) ^ a7)))();
}

uint64_t sub_10001613C@<X0>(unsigned int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((a1 > 0x82) | (8 * (a1 > 0x82))) ^ (v1 + 843))))();
}

uint64_t sub_100016178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t *a12, int a13, unsigned int a14)
{
  a14 = 1441
      - 460628867
      * (((&a12 | 0xC4E6076) - &a12 + (&a12 & 0xF3B19F88)) ^ 0x40D8E20B);
  a12 = &STACK[0x7DDA1A649706FBAD];
  uint64_t v16 = (*(uint64_t (**)(unint64_t **))(v15 + 18056))(&a12);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((65 * (a13 != v14)) | 0x286u)))(v16);
}

uint64_t sub_10001623C(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((a1 + 1347 + (a1 ^ 0x27C) - 1763) * (v1 != v2)) ^ a1)))();
}

void sub_10001626C()
{
}

void sub_100016278()
{
}

uint64_t sub_100016280()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((283 * (((v1 == 0xDE403E4D) ^ (v0 + 67)) & 1)) ^ v0)))();
}

uint64_t sub_1000162CC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 + v4 + a1) = v3;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(v4 + 1 + a1) < 0x38) * v5) ^ v2)))();
}

uint64_t sub_1000162FC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, char a6, uint64_t a7, uint64_t a8)
{
  int v16 = (v10 ^ a4) * a5;
  unint64_t v17 = a1 - 0x1819CFCC1817BFAELL + ((v9 + v16 - 411 - 946) ^ *(_DWORD *)(v13 + 4 * v14));
  *(_DWORD *)(v13 + 4 * v14) = v17 + v9 - ((v17 << (((v10 ^ a4) * a5) ^ a6)) & 0x63D3858A);
  return (*(uint64_t (**)(void))(v8 + 8 * ((((a7 ^ HIDWORD(v17)) + (a8 & (v17 >> 31)) + v11 == v15) * v12) ^ v16)))();
}

uint64_t sub_10001630C()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((226 * ((((v2 + 1494) ^ ((v1 - 637343266) < 0xFFFFFFFE)) & 1) == 0)) ^ (v2 - 223))))();
}

uint64_t sub_100016350()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1302
                                * ((((*(unsigned __int8 *)(v3 + 2) - 72) << (((v2 - 110) | 0x40) + 28)) & v1)
                                 + ((*(unsigned __int8 *)(v3 + 2) - 72) ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_100016394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(void *)(v30 - 136) = v28;
  *(void *)(v30 - 128) = v26;
  *(_DWORD *)(v30 - 144) = (v27 - 1407) ^ (235795823
                                         * ((((v30 - 144) | 0xEC38560C) - ((v30 - 144) & 0xEC38560C)) ^ 0x78951F55));
  (*(void (**)(uint64_t))(v25 + 8 * (v27 + 693)))(v30 - 144);
  *(void *)(v30 - 128) = v28;
  *(void *)(v30 - 120) = v26;
  *(void *)(v30 - 104) = a25;
  *(void *)(v30 - 144) = v29;
  *(void *)(v30 - 136) = v28;
  *(_DWORD *)(v30 - 112) = v27
                         - 965
                         + 1224239923
                         * ((((v30 - 144) | 0xDD33A67B) - (v30 - 144) + ((v30 - 144) & 0x22CC5980)) ^ 0x2F805BAC);
  (*(void (**)(uint64_t))(v25 + 8 * (v27 ^ 0xEB6)))(v30 - 144);
  *(void *)(v30 - 128) = v28;
  *(void *)(v30 - 120) = v26;
  *(_DWORD *)(v30 - 112) = v27
                         - 965
                         + 1224239923 * ((2 * ((v30 - 144) & 0x7AD049E8) - (v30 - 144) + 87012882) ^ 0xF79C4BC5);
  *(void *)(v30 - 144) = v29;
  *(void *)(v30 - 136) = a15;
  *(void *)(v30 - 104) = v28;
  (*(void (**)(uint64_t))(v25 + 8 * (v27 ^ 0xEB6)))(v30 - 144);
  *(_DWORD *)(v30 - 144) = (v27 - 1882359045) ^ (235795823
                                               * ((((2 * (v30 - 144)) | 0xEE26DB44) - (v30 - 144) - 1997761954) ^ 0xE3BE24FB));
  *(void *)(v30 - 136) = v28;
  *(void *)(v30 - 128) = a17;
  (*(void (**)(uint64_t))(v25 + 8 * (v27 ^ 0xEDD)))(v30 - 144);
  *(_DWORD *)(v30 - 144) = (v27 - 1407) ^ (235795823
                                         * ((2 * (((v30 - 144) ^ 0xD6BD5388) & 0x400DFC48)
                                           - ((v30 - 144) ^ 0xD6BD5388)
                                           - 1074658382) ^ 0xFDE21963));
  *(void *)(v30 - 136) = v28;
  *(void *)(v30 - 128) = a21;
  (*(void (**)(uint64_t))(v25 + 8 * (v27 ^ 0xECF)))(v30 - 144);
  *(void *)(v30 - 144) = v28;
  *(void *)(v30 - 136) = a21;
  *(_DWORD *)(v30 - 128) = v27
                         + 1374699841 * ((2 * ((v30 - 144) & 0x37738180) - (v30 - 144) - 930316676) ^ 0xA5786675)
                         + 265;
  uint64_t v31 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v27 + 633)))(v30 - 144);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * ((((v27 - 1017) ^ 0x22F) * (a20 == 0)) ^ (v27 - 900))))(v31);
}

uint64_t sub_100016628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v18 - 128) = a14;
  *(void *)(v18 - 112) = v17;
  *(_DWORD *)(v18 - 120) = v14
                         + ((((v18 - 136) | 0x64467E2E) - (v18 - 136) + ((v18 - 136) & 0x9BB981D0)) ^ 0xDED2064C) * v15
                         + 1531;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v14 ^ 0x832)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (v14 | ((*(_DWORD *)(v18 - 136) > ((v14 + 984594229) & 0xC5504BF4)
                                                                              + 1532861525) << 9))))(v19);
}

uint64_t sub_1000166D0()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((((v2 ^ 0x14C) + 262 + 4 * (v2 ^ 0x14C) - 1365) * (v1 == 0)) ^ v2)))();
}

uint64_t sub_100016704(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)(((v3 >= (((a3 ^ 0x7CE) - 678234367) & 0x286D079Fu) - 999)
                                     * (((a3 ^ 0x7CE) - 1076004393) & 0xCDEFCFFF ^ v4)) ^ a3 ^ 0x7CE)))();
}

uint64_t sub_100016764(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22)
{
  BOOL v26 = a22 - v23 == 36732058 && a21 == a4 + 17;
  return (*(uint64_t (**)(void))(v24 + 8 * ((v26 * ((37 * (v22 ^ 0x114)) ^ 0x68E)) ^ v22)))();
}

uint64_t sub_1000167B4()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v1 >> v2) & 1) == 0) * v4) ^ v0)))();
}

uint64_t sub_1000167DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (a5 | (2 * (v7 + v6 + a5 + 720 + ((a5 - 1499278187) & 0x595D2FD7 ^ 0x9002F9FF) < 8)))))();
}

void sub_100016834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v22 = 535753261 * ((v21 - 409367163 - 2 * ((v21 - 144) & 0xE7998E15)) ^ 0xED6D803A);
  *(_DWORD *)(v21 - 120) = v22 + v17 + (((v20 | 0x90) + 1766984459) & 0x96ADF4BF ^ 0xE5A22B3D);
  *(_DWORD *)(v21 - 136) = ((v20 | 0x90) + 1713) ^ v22;
  *(void *)(v21 - 128) = v19;
  *(void *)(v21 - 144) = a17;
  (*(void (**)(uint64_t))(v18 + 8 * ((v20 | 0x90) ^ 0x816)))(v21 - 144);
  JUMPOUT(0x100012034);
}

uint64_t sub_1000168D8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  *(void *)(v4 - 7 + (v9 + v6 + v7 + 2205 - v10)) = *(void *)(a2
                                                                              - 7
                                                                              + (v9 + v6 + v7 + 2205 - v10));
  return (*(uint64_t (**)(void))(v11 + 8 * ((1661 * (a4 - (v5 & 0xFFFFFFF8) - 144 == -v10)) ^ a4)))(v8 - (v5 & 0xFFFFFFF8));
}

uint64_t sub_10001693C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result = (*(uint64_t (**)(void, void, void))(v5 + 8 * (((a4 + 28) | 8) ^ 0xCBA)))(*v7, *v10, ((a4 + 28) | 8u) + 98 + *(_DWORD *)(v4 - 0x6C0C7F2AED40EE89) - 120780949);
  void *v10 = v9;
  *(_DWORD *)(v4 - 0x6C0C7F2AED40EE89) = v8;
  _DWORD *v6 = v8;
  return result;
}

uint64_t sub_1000169C4()
{
  uint64_t v4 = *(uint64_t (**)(void))(v3 + 8 * ((3232 * (v1 + v0 < ((v2 + 111) ^ 0x7FFFFAF5u))) ^ v2));
  return v4(v4);
}

void sub_100016A30()
{
  uint64_t v3 = *(void *)(v0 + 8);
  *(_DWORD *)(*(void *)(v0 + 24) - 0x66F6FC5CA4207EE9) = *v1;
  *(_DWORD *)(v3 - 0x1171F84DB0CF5C20) = *v2;
  *(_DWORD *)(v0 + 20) = -2124048112;
}

uint64_t sub_100016AAC@<X0>(int a1@<W3>, int a2@<W5>, int a3@<W8>, int8x16_t a4@<Q0>, int8x16_t a5@<Q3>)
{
  int8x16_t *v6 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v7 + (a3 + a1)), vandq_s8(vaddq_s8(*(int8x16_t *)(v7 + (a3 + a1)), *(int8x16_t *)(v7 + (a3 + a1))), a5)), a4);
  return (*(uint64_t (**)(void))(v8 + 8 * (a2 + v5 - 634)))();
}

uint64_t sub_100016AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, unsigned int a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned int a18)
{
  a18 = v22
      - 108757529 * ((&a13 & 0x89026447 | ~(&a13 | 0x89026447)) ^ 0x9661F993)
      + v19
      + 232;
  a16 = a10;
  a17 = 0x234F4F45181D6CC9;
  a15 = v18;
  (*(void (**)(unsigned int *))(v20 + 8 * (v22 + v19 + 1558)))(&a13);
  a15 = a10;
  a13 = (v19 + v22 + 861) ^ (1755732067
                           * ((2 * (&a13 & 0x2DC15410) - &a13 + 1379838952) ^ 0x8CF81633));
  (*(void (**)(unsigned int *))(v20 + 8 * (v19 ^ v21)))(&a13);
  a15 = a10;
  a14 = v22
      + 535753261 * ((((2 * &a13) | 0xE7290E34) - &a13 + 208369894) ^ 0xF9608935)
      + v19
      - 409;
  uint64_t v23 = (*(uint64_t (**)(unsigned int *))(v20 + 8 * (v19 ^ (v21 + 178))))(&a13);
  return sub_100021CF4(v23);
}

uint64_t sub_100016B78@<X0>(uint64_t a1@<X8>)
{
  *(unint64_t *)((char *)&STACK[0x2AC] + (((v2 + 1596088990) & 0xA0DD99DF ^ 0xFFFFFEA5) & (v1 + a1))) = 0x5B5B5B5B5B5B5B5BLL;
  return (*(uint64_t (**)(void))(v4 + 8 * ((503 * (((v3 + 1) & 0x1FFFFFFF8) == 8)) ^ v2)))();
}

void sub_100016BE0()
{
}

uint64_t sub_100016BF8()
{
  return sub_100016C40(17);
}

uint64_t sub_100016C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8 * ((1207 * (((2 * (STACK[0x324] & 0x3F)) ^ 0x7E) + (STACK[0x324] & 0x3F) - 123 < 0xFFFFFFC0)) ^ ((int)a2 + 484))))(a1, a2, 3689026037, 3689027270, &STACK[0x2E0], a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, *(void *)(v30 + 8 * v29), a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_100016D4C@<X0>(int a1@<W8>)
{
  int v7 = ((v6 - 1206294341 - 2 * ((v6 - 144) & 0xB819694B)) ^ 0x28D1129) * v5;
  *(void *)(v6 - 128) = v3;
  *(void *)(v6 - 120) = v4;
  *(_DWORD *)(v6 - 140) = a1 - v7 + 1176;
  *(_DWORD *)(v6 - 136) = v1 + v7 - 435386676 + a1 + 259;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + 1331)))(v6 - 144);
  return sub_100016DB8(v8);
}

uint64_t sub_100016DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  *(void *)(v21 - 144) = v18;
  *(void *)(v21 - 136) = a14;
  *(_DWORD *)(v21 - 128) = (v19 - 795) ^ (628203409
                                        * ((((v21 - 144) ^ 0x7C4051F6 | 0xD1B85227)
                                          - ((v21 - 144) ^ 0x7C4051F6)
                                          + (((v21 - 144) ^ 0x7C4051F6) & 0x2E47ADD8)) ^ 0x2F700FE2));
  (*(void (**)(uint64_t))(v17 + 8 * (v19 ^ 0xC75)))(v21 - 144);
  *(_DWORD *)(v21 - 128) = v19 + 1374699841 * ((v21 - 144) ^ 0x6DF41809) - 887;
  *(void *)(v21 - 120) = a15;
  *(void *)(v21 - 112) = v20;
  *(void *)(v21 - 104) = v18;
  *(void *)(v21 - 144) = a13;
  *(void *)(v21 - 136) = a14;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (v19 + 1125)))(v21 - 144);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * ((78 * (((a17 == 0) ^ ((v19 - 58) ^ (v19 - 1))) & 1)) ^ v19)))(v22);
}

uint64_t sub_100016EC4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((a1 == 0x1819CFCC1817BFAELL) ^ (v2 - 106)) & 1) * (v2 ^ 0x2C9)) ^ v2)))();
}

uint64_t sub_100016F1C(int a1, uint64_t a2, uint64_t a3, int a4)
{
  BOOL v10 = v6 < v5;
  if (v10 == a1 + v9 < ((v4 - 1492) | v7) + a4) {
    BOOL v10 = v6 > a1 + v9;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * (((2 * v10) | (4 * v10)) ^ v4)))();
}

uint64_t sub_100016F68()
{
  if ((v0 - 690734851) > 0x18 || ((1 << (v0 - 3)) & 0x1000143) == 0) {
    JUMPOUT(0x100014168);
  }
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v3 + v4 - 15) | 0x500) ^ 0x5E6) * ((v1 & 0xFFFFFFFFFFFFFFFuLL) - 1 > 1)) ^ (v3 + v4 + 175))))();
}

uint64_t sub_100016FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((1992 * (a4 - a7 + (unint64_t)((v8 - 2038192059) & 0x797C57FB) - 2168 > 0x1F)) ^ v8)))();
}

_DWORD *sub_10001702C(_DWORD *result, int a2)
{
  *uint64_t result = ((a2 + 183) ^ 0xB6BB42B1) - v2;
  return result;
}

uint64_t sub_100017048@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v3 + 1087) ^ 0x871) * (a1 == v1)) ^ v3)))();
}

uint64_t sub_100017090@<X0>(int a1@<W1>, int a2@<W8>)
{
  BOOL v10 = v2 < v4;
  *(unsigned char *)(v9 - 220 + (v8 ^ 0xFCFEE3A7) + v3) = *(unsigned char *)(v7 + (a2 + a1))
                                                - ((2 * *(unsigned char *)(v7 + (a2 + a1))) & 0xB6)
                                                + 91;
  unsigned int v11 = a2 + 1 + v5;
  int v12 = v10 ^ (v11 < v4);
  BOOL v13 = v11 < v2;
  if (!v12) {
    BOOL v10 = v13;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((23 * v10) | v8)))();
}

uint64_t sub_100017114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  BOOL v10 = v6 > v9;
  if (v10 == (int)a3 - 170478471 < a6 - 1683079669) {
    BOOL v10 = (int)a3 - 170478471 < v8;
  }
  return (*(uint64_t (**)(uint64_t, void, uint64_t, void, uint64_t))(v7 + 8 * ((1908 * v10) ^ a6)))(a1, 0, a3, (a6 + 135), 2984886981);
}

uint64_t sub_10001717C@<X0>(int a1@<W3>, int a2@<W5>, int a3@<W8>)
{
  *(unsigned char *)(v5 + v4) = *(unsigned char *)(v7 + (a3 + a1))
                      - (v6 & (2 * *(unsigned char *)(v7 + (a3 + a1))))
                      + 91;
  return (*(uint64_t (**)(void))(v8 + 8 * ((a2 + v3 + 140) ^ (32 * (v4 == 63)))))();
}

uint64_t sub_1000171C0()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((((v0 + 1435446269) & 0x1F2) + 1353) * (v2 == 1973469984)) ^ v0)))();
}

uint64_t sub_10001724C@<X0>(uint64_t a1@<X0>, int a2@<W3>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((166 * ((unint64_t)(a3 - a1 - 1452) > 0x1F)) ^ a2)))();
}

void sub_10001729C(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  a5 = v7 + 1374699841 * (((&a3 | 0xF444FDE1) + (~&a3 | 0xBBB021E)) ^ 0x99B0E5E9) + 1614;
  a3 = v5;
  a4 = v6;
  (*(void (**)(uint64_t *))(a1 + 8 * (v7 ^ 0x84E)))(&a3);
  sub_10003C2B4();
}

uint64_t sub_1000172FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39)
{
  return (*(uint64_t (**)(void))(v40 + 8 * ((1658 * ((v39 - 90582815 + a39 - 144) < 0x10)) ^ v39)))();
}

uint64_t sub_100017340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v31 = (v26 ^ 0xE28) + 1101;
  *(void *)(v30 - 104) = v28;
  *(_DWORD *)(v30 - 112) = (v26 ^ 0xE28)
                         + (((v30 - 144) & 0x7DAE8C16 | ~((v30 - 144) | 0x7DAE8C16)) ^ 0x70E28E3E) * v27
                         - 420;
  *(void *)(v30 - 144) = a26;
  *(void *)(v30 - 136) = a15;
  *(void *)(v30 - 128) = v28;
  *(void *)(v30 - 120) = a25;
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(v29 + 8 * ((v26 ^ 0xE28) + 1167)))(v30 - 144);
  return (*(uint64_t (**)(uint64_t))(v29
                                            + 8
                                            * (((((((16 * v31) ^ 0x8790) + 401) | 0x44) ^ 0x307)
                                              * ((a23 - 559756922) < 0x7FFFFFFF)) ^ (v31 - 1033))))(v32);
}

uint64_t sub_1000173A4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((*v1 == 0) * (v0 ^ 0x33F)) ^ v0)))();
}

uint64_t sub_1000173D4()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((*(_DWORD *)(v1 + 48 * (((10 * (v0 ^ 0x49D)) ^ v2) + v4) + 36) == v4) * (v0 - 1171)) ^ v0)))();
}

uint64_t sub_100017424(uint64_t a1, unsigned int a2, int a3, uint64_t a4, int a5, uint64_t a6)
{
  *(void *)(a6 + a2) = *(void *)(v7 + a2);
  return (*(uint64_t (**)(uint64_t, void, void))(v8 + 8 * (((a3 == 0) * v6) ^ a5)))(a1, a2 - 8, (a3 + 8));
}

uint64_t sub_100017454()
{
  uint64_t v4 = *(void *)(v6 + 32);
  *(_DWORD *)(v3 - 112) = v0 + 1374699841 * ((v3 + 1551200776 - 2 * ((v3 - 128) & 0x5C757288)) ^ 0x31816A81) + 179;
  *(void *)(v3 - 128) = v2;
  *(void *)(v3 - 120) = v4;
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 547)))(v3 - 128);
}

uint64_t sub_100017510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  *(void *)(v23 - 120) = a18;
  *(void *)(v23 - 104) = v20;
  *(_DWORD *)(v23 - 112) = v18 + ((v21 - ((v23 - 128) | v21) + ((v23 - 128) | 0x2B002AB1)) ^ 0x919452D3) * v22 + 465;
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(v19 + 8 * (v18 + 1028)))(v23 - 128);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * ((3319 * (*(_DWORD *)(v23 - 128) - 1532862473 < (v18 ^ 0xE6B63859))) ^ v18)))(v24);
}

uint64_t sub_1000175B4(int a1)
{
  int v6 = v2 + v1 - 519750217;
  unsigned int v7 = v6 + ((v3 - 1401) | 0xB9);
  if (v7 <= 0x40) {
    unsigned int v7 = 64;
  }
  BOOL v8 = !__CFADD__(v6 + 760, v4 + 519748570 + a1 + ((v3 - 501070907) & 0x1DDDB7F7) + v7);
  return (*(uint64_t (**)(void))(v5 + 8 * ((86 * v8) ^ v3)))();
}

uint64_t sub_10001763C@<X0>(uint64_t a1@<X5>, _OWORD *a2@<X7>, int a3@<W8>)
{
  *(_OWORD *)(a1 + (a3 - 83539793)) = *a2;
  BOOL v7 = (v3 ^ 0x72Au) - 1475 == ((v4 + v5 - 885) & 0x1FFFFFFF0);
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * ((v7 | (2 * v7)) ^ v3)))(1834);
}

uint64_t sub_100017698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  int v29 = *(unsigned __int8 *)(v28 - 124) ^ 0x22;
  if (v29 == 1)
  {
    unsigned int v36 = *(_DWORD *)(v28 - 156);
    unsigned int v35 = *(_DWORD *)(v28 - 152);
    *(unsigned char *)(v28 - 164) = 8 * ~(_BYTE)v35 - ((~v35 << ((a7 - 47) ^ 0x23)) & 0xB0) + 91;
    *(unsigned char *)(v28 - 163) = ((v35 >> 5) ^ 0x65) - ((2 * ((v35 >> 5) ^ 0x65)) & 0xB6) + 91;
    *(unsigned char *)(v28 - 162) = ((v35 >> 13) ^ 0xB1) - 2 * (((v35 >> 13) ^ 0xB1) & 0xDF ^ (v35 >> 13) & 4) + 91;
    HIDWORD(v37) = v36 ^ 8;
    LODWORD(v37) = v35 ^ 0x20000000;
    *(unsigned char *)(v28 - 161) = ((v35 >> 21) ^ 0x29) - ((2 * ((v35 >> 21) ^ 0x29)) & 0xB6) + 91;
    *(unsigned char *)(v28 - 160) = (v37 >> 29) - ((2 * (v37 >> 29)) & 0xB6) + 91;
    *(unsigned char *)(v28 - 159) = ((v36 >> 5) ^ 0x8F) - ((2 * ((v36 >> 5) ^ 0x8F)) & 0xB6) + 91;
    *(unsigned char *)(v28 - 158) = ((v36 >> 13) ^ 0x5A) + ~(2 * (((v36 >> 13) ^ 0x5A) & 0xDF ^ (v36 >> 13) & 4)) + 92;
    unsigned int v38 = v36 >> 21;
    int v39 = (v36 >> 21) ^ 0x40;
    char v40 = v39 & 0x5F;
    char v34 = v39 + 91;
    char v33 = 2 * (v40 ^ v38 & 4);
    goto LABEL_5;
  }
  if (v29 == 2)
  {
    unsigned int v30 = *(_DWORD *)(v28 - 156);
    unsigned int v31 = *(_DWORD *)(v28 - 152);
    *(unsigned char *)(v28 - 164) = ((v30 >> 21) ^ 0x40) - ((2 * ((v30 >> 21) ^ 0x40)) & 0xB6) + 91;
    *(unsigned char *)(v28 - 163) = ((v30 >> ((a7 - 47) ^ 0x2A)) ^ 0x5A)
                          - ((2 * ((v30 >> ((a7 - 47) ^ 0x2A)) ^ 0x5A)) & 0xB6)
                          + 91;
    *(unsigned char *)(v28 - 162) = ((v30 >> 5) ^ 0x8F) - ((2 * ((v30 >> 5) ^ 0x8F)) & 0xB6) + 91;
    HIDWORD(v32) = v30 ^ 8;
    LODWORD(v32) = v31 ^ 0x20000000;
    *(unsigned char *)(v28 - 161) = (v32 >> 29) - ((2 * (v32 >> 29)) & 0xB6) + 91;
    *(unsigned char *)(v28 - 160) = ((v31 >> 21) ^ 0x29) - ((2 * ((v31 >> 21) ^ 0x29)) & 0xB6) + 91;
    *(unsigned char *)(v28 - 159) = ((v31 >> 13) ^ 0xB1) - 2 * (((v31 >> 13) ^ 0xB1) & 0xDF ^ (v31 >> 13) & 4) + 91;
    *(unsigned char *)(v28 - 158) = ((v31 >> 5) ^ 0x65) - ((2 * ((v31 >> 5) ^ 0x65)) & 0xB6) + 91;
    char v33 = (16 * ~(_BYTE)v31) & 0xBF;
    char v34 = 8 * ~(_BYTE)v31 + 91;
LABEL_5:
    *(unsigned char *)(v28 - 157) = v34 - v33;
  }
  return sub_100039E38(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_1000178D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v7
                                                                                        + 8
                                                                                        * ((((v5 & 8) == ((v6 + 1637751898) & 0x9E61E3ED) - 1005)
                                                                                          * ((v6 - 1398745398) & 0x535F27BE ^ 0x241)) ^ v6)))(a1, a2, a3, a4, a5, (a4 - a5));
}

uint64_t sub_100017930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  int v28 = 37 * (v23 ^ 0x12C);
  int v29 = 1759421093 * ((((2 * (v27 - 128)) | 0x9F43D04) - (v27 - 128) + 2063982974) ^ 0x3787AED6);
  *(_DWORD *)(v27 - 112) = v23 - v29 + 1117;
  *(_DWORD *)(v27 - 128) = v25 - v29 + (v28 ^ 0x41D81D7C);
  *(void *)(v27 - 120) = v22;
  (*(void (**)(uint64_t))(v24 + 8 * (v23 + 1916)))(v27 - 128);
  *(_DWORD *)(v27 - 112) = v28 + (((~(v27 - 128) & 0x98E6A2A) - (~(v27 - 128) | 0x98E6A2B)) ^ 0xB31A1249) * v26 + 263;
  *(void *)(v27 - 120) = a22;
  *(void *)(v27 - 104) = a20;
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v28 + 826)))(v27 - 128);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * ((251
                                              * (133 * (v28 ^ 0x573u) + *(_DWORD *)(v27 - 128) - 1532864202 < v28 - 1352798245)) ^ v28)))(v30);
}

uint64_t sub_100017A6C(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v13 = *(unsigned __int8 *)(v8 + (a3 + a8)) | ((v12 ^ 0x8A8AD876) + (a4 << 8));
  return (*(uint64_t (**)(uint64_t, uint64_t, void, void))(v9 + 8 * ((v10 - 1 == v11) | v12)))(a1, a2, (a3 + 1), (v13 ^ 0x3D7FF52E) - 487227404 + ((2 * v13) & 0x7AFFEA5C));
}

void sub_100017AD0()
{
}

uint64_t sub_100017ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22)
{
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8 * ((v23 + 1131) ^ (7 * ((a22 & 0x20000000) == 0)))))(a1, 8 * ((a22 & 0x20000000) == 0), a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

uint64_t sub_100017B0C@<X0>(int a1@<W8>)
{
  int v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + 928));
  return v3(v1);
}

uint64_t sub_100017B3C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((55
                                * (v3 - v4 - 4 >= ((131 * (a3 ^ 0x19C)) ^ (a3 - 1400843216) & 0x537F2E73u ^ 0x5EAuLL))) ^ a3)))();
}

uint64_t sub_100017B9C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 88) = (((**(unsigned char **)(a2 + 8) != 0) | (2 * (**(unsigned char **)(a2 + 8) != 0))) ^ 0x79) - 80;
  return 0;
}

uint64_t sub_100017BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  return (*(uint64_t (**)(void))(v21 + 8 * (((a20 == 690734887) * (v20 + 1181)) ^ v20)))();
}

uint64_t sub_100017C18@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((101 * (((v2 == 0) ^ (a1 - 6)) & 1)) ^ a1)))();
}

uint64_t sub_100017C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(void *)(v31 - 120) = v28;
  *(void *)(v31 - 112) = a25;
  *(_DWORD *)(v31 - 144) = (v26 + 748) ^ (((v31 - 144 + v30 - 2 * ((v31 - 144) & v30)) ^ 0x4164734B) * v25);
  *(void *)(v31 - 136) = a24;
  *(void *)(v31 - 128) = v28;
  (*(void (**)(uint64_t))(v27 + 8 * (v26 ^ 0xB02)))(v31 - 144);
  int v32 = 1374699841 * ((((v31 - 144) | 0x951DA954) - (v31 - 144) + ((v31 - 144) & 0x6AE256A8)) ^ 0xF8E9B15D);
  *(void *)(v31 - 136) = a23;
  *(_DWORD *)(v31 - 128) = -559756924 - v32 + v26 + 1156 + v29 - 2135;
  *(_DWORD *)(v31 - 144) = (v26 - 235) ^ v32;
  uint64_t v33 = (*(uint64_t (**)(uint64_t))(v27 + 8 * (v26 + 1274)))(v31 - 144);
  return (*(uint64_t (**)(uint64_t))(v27 + 8 * ((2009 * (*(_DWORD *)(v31 - 140) == 2087569631)) ^ v26)))(v33);
}

uint64_t sub_100017D6C(int a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v12 = a1 + v9 + ((619 * (a5 ^ 0x384)) ^ (a4 + 982)) + v11;
  uint64_t v13 = ((_BYTE)a1 + (_BYTE)v9 + ((107 * (a5 ^ 0x84)) ^ (a4 - 42))) & 0xF;
  unint64_t v14 = v13 + v8 - v12;
  uint64_t v15 = 3 - v12;
  BOOL v17 = (unint64_t)(v5 - v11) >= 0x10 && v14 >= 0x10 && v15 + (v13 | v7) >= ((a5 + 102) ^ 0x3FDuLL);
  unint64_t v18 = v15 + (v13 | v6);
  int v20 = !v17 || v18 < 0x10;
  return (*(uint64_t (**)(void))(v10 + 8 * ((41 * v20) ^ a5)))();
}

uint64_t sub_100017DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  int v20 = *(uint64_t (**)(void, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8 * (v18 ^ ((v19 < 2) | (2 * (v19 < 2)))));
  return v20(*(_DWORD *)(*a16 + 4 * (a8 - 452140548)) ^ v16, a2, a3, v20, a5, a6, a7, (v18 + 122), a9, a10, a11, a12);
}

uint64_t sub_100017E2C@<X0>(int a1@<W8>)
{
  unsigned int v6 = (v5 + 25141315) & 0xFE805EF3;
  int v7 = a1 + v2;
  int v8 = v2 + 1;
  *(_DWORD *)(*(void *)(v3 - 0x9F59A8236606B8) + 4 * (int)(v7 + v6 - 707)) = v4;
  unsigned int v9 = (v6 + 1924998268) & 0x8D42DFEC;
  *(_DWORD *)(v3 - 0x9F59A8236606BCLL) = v8;
  int v10 = v8 + a1;
  if (v8 + a1 < 0) {
    int v10 = -v10;
  }
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((123
                                     * ((int)(a1 + (v10 ^ 0x59F3FEFE) + ((2 * v10) & 0xB3E7FDFC) + (v9 ^ 0xFE1E58D4) - 1) > (int)((v9 ^ 0x638) - 277))) ^ v9)))();
}

uint64_t sub_100017F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10, uint64_t a11, int a12, int a13, uint64_t a14)
{
  int v17 = 1374699841 * ((((v16 - 128) | 0x889B87A4) - ((v16 - 128) & 0x889B87A4)) ^ 0xE56F9FAD);
  *(void *)(v16 - 120) = a14;
  *(_DWORD *)(v16 - 128) = v15 - v17 + 901;
  *(_DWORD *)(v16 - 124) = v17
                         + ((32 * a13) ^ 0x6AFFADAB)
                         + (((((v15 - 77) | 0x8E) - 704687203) ^ ((v15 - 772) | 0x222)) & (a13 << 6))
                         - 1755120673;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 + 1223)))(v16 - 128);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8 * ((195 * ((*a10 - 1477598967) > 0x7FFFFFFE)) ^ v15)))(v18);
}

uint64_t sub_100018008()
{
  BOOL v5 = v2 - 1793469624 <= ((v0 - 351) | 0x600) + 1779202391 && v2 - 1793469624 >= v3 - 368279454;
  return (*(uint64_t (**)(void))(v1 + 8 * (int)((v5 * ((v0 + 1656646005) & 0x9D4196FB ^ 0x264)) ^ v0)))();
}

uint64_t sub_100018074()
{
  int v5 = ((v2 - 752718620) & 0x2CDD97ED) + *(unsigned __int8 *)(v3 + 3) - 1643;
  return (*(uint64_t (**)(void))(v4 + 8 * ((1315 * ((v1 & (2 * v5)) + (v5 ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_1000180C4(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 16) = (**(unsigned __int8 **)(a2 + 8) ^ 0xFFEDD17C)
                       + 1776222168
                       + ((2 * **(unsigned __int8 **)(a2 + 8)) & 0xF8);
  return 0;
}

uint64_t sub_1000180FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8 * ((1079 * (v4 + 1 == v5 + 24)) ^ v2)))(a1, a2);
}

void sub_1000181C4()
{
}

uint64_t sub_1000181CC(int a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((51 * ((((v3 == a1) ^ a3) ^ (a3 - 77)) & 1)) ^ a3)))();
}

uint64_t sub_1000181FC()
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 + v1 + 1053 < ((v0 + 354) ^ v2)) * (v0 ^ 0x871)) ^ v0)))();
}

uint64_t sub_10001823C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(v5 - 0x6C0C7F2AED40EE91);
  int v8 = *(unsigned __int8 *)(v7 + (v4 - 1533631345)) ^ 0x5B;
  int v9 = ((*(unsigned __int8 *)(v7 + (v4 - 1533631348)) ^ 0x5B) << 24) | ((*(unsigned __int8 *)(v7 + (v4 - 1533631347)) ^ 0x5B) << 16) | (((((a2 | 0x78) ^ 0x1A) + 101) ^ *(unsigned char *)(v7 + (v4 - 1533631346)) ^ 0x9C) << 8) | v8;
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * ((255
                                * (((v9 + v3 - 2 * (v9 & 0x1659911 ^ v8 & 1)) & 0xFFFFFF ^ 0x659910)
                                 - (*(_DWORD *)(a1 + 32) ^ v6) != -1379586126)) ^ (a2 | 0x178))))();
}

uint64_t sub_10001831C@<X0>(int a1@<W1>, int a2@<W3>, int a3@<W6>, uint64_t a4@<X8>)
{
  unsigned int v10 = v8 + v7 + a1;
  uint64_t v11 = v5 + v10;
  long long v12 = *(_OWORD *)(v11 - 31);
  uint64_t v13 = a4 + v10;
  *(_OWORD *)(v13 - 15) = *(_OWORD *)(v11 - 15);
  *(_OWORD *)(v13 - 31) = v12;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v6 & 0xFFFFFFE0) == 32) * ((227 * (a2 ^ (v9 + 1554))) ^ 0x3A8)) ^ (a3 + a2 + 448))))();
}

uint64_t sub_100018384@<X0>(int a1@<W1>, int a2@<W3>, int a3@<W8>)
{
  *(unsigned char *)(v3 + (a1 + v5)) = *(unsigned char *)(v4 + (a1 + v5))
                                           - ((2 * *(unsigned char *)(v4 + (a1 + v5))) & 0xB6)
                                           + 91;
  return (*(uint64_t (**)(void))(v6 + 8 * (((a1 - 1 == a3) * ((a2 - 736) ^ 0x6CC)) ^ a2)))();
}

uint64_t sub_1000183CC@<X0>(int a1@<W8>)
{
  *(unsigned char *)(*(void *)(v3 - 0x6C0C7F2AED40EE91) + (v5 + 1696478911 + v2)) = *(unsigned char *)(*(void *)(v3 - 0x6C0C7F2AED40EE91) + (v2 - 1533631349));
  return (*(uint64_t (**)(void))(v4 + 8 * ((70 * (v2 - 1 == ((a1 + 906) ^ (v1 + 1402)))) ^ a1)))();
}

uint64_t sub_100018438(uint64_t a1, int a2)
{
  return sub_100018454(15 * (a2 ^ 0x20Cu));
}

uint64_t sub_100018454(int a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (v4 + v7 - v5 + a1 - 120);
  *(_DWORD *)(a4 + v9) = *(_DWORD *)(a3 + v9);
  return (*(uint64_t (**)(void))(v8 + 8 * (((4 * (v5 + 4 != v6)) | (8 * (v5 + 4 != v6))) ^ (a2 + 531))))();
}

uint64_t sub_100018494@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  *(void *)(a1 + v3 + ((v2 + 494809142) & 0xE281CFCD ^ 0xFFFFFFFFEFD478F9)) = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * ((82 * ((a2 & 0xFFFFFFFFFFFFFFF8) == 8)) ^ (v2 + 329))))();
}

void sub_1000184F0(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  int v9 = (v7 - 597968545) & 0x23A447EC;
  int v10 = v9 + 417;
  a5 = v9
     + 1374699841
     * (((&a3 | 0x729EA90D) - &a3 + (&a3 & 0x8D6156F0)) ^ 0x1F6AB104)
     + 1358;
  a3 = v5;
  a4 = v6;
  (*(void (**)(uint64_t *))(a1 + 8 * (v9 + 1726)))(&a3);
  _DWORD *v8 = (v10 ^ 0xB024BE65) - *v8;
  JUMPOUT(0x10000ED84);
}

uint64_t sub_100018584@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (((*(_DWORD *)(*(void *)(a1 + 8) + v4) != v3) * (((v2 - 873) | 0x689) - 1610)) ^ (v2 - 749))))();
}

uint64_t sub_1000185C0()
{
  return (*(uint64_t (**)(void))(v3
                                           + 8
                                           * (((((v0 == v1) ^ (v2 - 87)) & 1)
                                             * (((v2 - 232) | 0x542) - 1473)) ^ v2)))((v2 + 425) | 0xA0u);
}

uint64_t sub_100018604@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((((v1 ^ 0x74C) + 148) * (a1 == 0)) ^ v1)))(102);
}

uint64_t sub_100018634()
{
  int v5 = (v1 & (2 * (*(unsigned __int8 *)(v3 + 1) - 134)))
     + ((3 * (v2 ^ 0xE4)) ^ (v0 + 1051) ^ (*(unsigned __int8 *)(v3 + 1) - 134)) == v0;
  return (*(uint64_t (**)(void))(v4 + 8 * ((8 * v5) | (v5 << 6) | v2)))();
}

uint64_t sub_10001867C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (((((v8 ^ 0x514) - 251) ^ 0x24) * (v7 == a7)) ^ v8)))();
}

uint64_t sub_1000186B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X5>, char a4@<W6>, uint64_t a5@<X8>)
{
  int v10 = v5 + 651;
  *(unsigned char *)(a3 + ((v9 + (v10 - 1863) + 207) & (a5 + a1))) = *(unsigned char *)(v8 + v6 + a2)
                                                                         - (a4 & (2 * *(unsigned char *)(v8 + v6 + a2)))
                                                                         + 91;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((((a1 + a5 + 1) > 0x3F) | (2 * ((a1 + a5 + 1) > 0x3F))) ^ v10)))();
}

uint64_t sub_10001870C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v1 - v3 - 775) ^ (a1 == 0)) & 1) == 0)
                                * (((v1 + 540843121) | 0x4004C16) ^ (v4 + 43))) ^ v1)))();
}

uint64_t sub_10001875C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((((v5 + 1193) ^ 0x2E9 ^ (v4 == a4)) & 1) == 0) ^ v5)))();
}

uint64_t sub_10001878C(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t))*(&off_10022EDF0 + ((490 * (*(_DWORD *)(a2 + 4) != 544568623)) ^ 0x4F8u)))(4294925278);
}

uint64_t sub_1000187D0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  v69.val[1].i64[0] = ((_BYTE)a4 + 7) & 0xF;
  v69.val[1].i64[1] = ((_BYTE)a4 + 6) & 0xF;
  v69.val[2].i64[0] = ((_BYTE)a4 + 5) & 0xF;
  v69.val[2].i64[1] = ((_BYTE)a4 + 4) & 0xF;
  v69.val[3].i64[0] = ((_BYTE)a4 + 3) & 0xF;
  v69.val[3].i64[1] = ((_BYTE)a4 + 2) & 0xF;
  v70.val[0].i64[0] = ((_BYTE)a4 + 1) & 0xF;
  v70.val[0].i64[1] = a4 & 0xF;
  v70.val[1].i64[0] = (a4 - 1) & 0xF;
  v70.val[1].i64[1] = (a4 + 14) & 0xF;
  v70.val[2].i64[0] = (a4 + 13) & 0xF;
  v70.val[2].i64[1] = ((_BYTE)a4 + 12) & 0xF;
  v70.val[3].i64[0] = ((_BYTE)a4 + 11) & 0xF;
  v70.val[3].i64[1] = ((_BYTE)a4 + 10) & 0xF;
  v63.i64[0] = 0x505050505050505;
  v63.i64[1] = 0x505050505050505;
  v64.i64[0] = 0x5B5B5B5B5B5B5B5BLL;
  v64.i64[1] = 0x5B5B5B5B5B5B5B5BLL;
  v69.val[0].i64[0] = ((_BYTE)a4 + (_BYTE)v58) & 0xF;
  v69.val[0].i64[1] = ((_BYTE)a4 + 8) & 0xF;
  v65.i64[0] = vqtbl4q_s8(v69, (int8x16_t)xmmword_1001D6580).u64[0];
  v65.i64[1] = vqtbl4q_s8(v70, (int8x16_t)xmmword_1001D6580).u64[0];
  int8x16_t v66 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v62 - 15 + (a4 + v58)), *(int8x16_t *)(v60 + v69.val[0].i64[0] - 15)), veorq_s8(*(int8x16_t *)(v61 + v69.val[0].i64[0] - 15), *(int8x16_t *)(v59 + v69.val[0].i64[0] - 15))));
  int8x16_t v67 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v66, v66, 8uLL), v64), vmulq_s8(v65, v63)));
  *(int8x16_t *)(v62 - 15 + (a4 + v58)) = vextq_s8(v67, v67, 8uLL);
  return (*(uint64_t (**)(void))(a57 + 8 * ((517 * (((a6 - 1038) | 0x587) - 1399 == (v57 & 0xFFFFFFF0))) ^ a6)))();
}

uint64_t sub_100018938@<X0>(int a1@<W1>, int a2@<W8>)
{
  unint64_t v7 = STACK[0x3B0];
  *(_DWORD *)(v7 + 392) = a2;
  *(_DWORD *)(v7 + 396) = STACK[0x554];
  *(void *)(v7 + 400) = STACK[0x538];
  *(_DWORD *)(v7 + 408) = 423212695 - v3 + LODWORD(STACK[0x4CC]);
  *(void *)(v7 + 416) = STACK[0x3A0] + (v3 - 581300668);
  int v8 = (*(uint64_t (**)(unint64_t, unint64_t))(v5 + v4 * (uint64_t)a1 + 8))(STACK[0x350], STACK[0x250]);
  int v9 = v8 - 2124048112 - (((((v2 + 670) | 4) ^ 0x2CB2BA1) + v2 + 265) & (2 * v8)) == -2124048112;
  return (*(uint64_t (**)(void))(v6 + 8 * (((8 * v9) | (v9 << 7)) ^ v2)))();
}

uint64_t sub_100018A0C@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W8>)
{
  *(unsigned char *)(a1 + (a2 + 553 + v4 - 182240887)) = *(unsigned char *)(v3 + (a2 + 553 + v4 - 182240887));
  return (*(uint64_t (**)(void))(v5 + 8 * ((3333 * (v4 - 1 == a3)) ^ a2)))();
}

uint64_t sub_100018A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((((v6 - 464) ^ (v6 - 482)) * (v5 == a5)) ^ v6)))();
}

uint64_t sub_100018A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  return (*(uint64_t (**)(void))(v11 + 8 * ((45 * (a10 != v10 + (v12 & 0x4DBBC6FB) + 654 - 1183)) ^ v12 & 0x4DBBC6FBu)))();
}

uint64_t sub_100018ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21)
{
  unsigned int v24 = a7 + v22 + v21 + ((a21 - 1073659701) | 0x40130) - 516;
  if (v24 <= 0x40) {
    unsigned int v24 = 64;
  }
  return (*(uint64_t (**)(void))(v23 + 8 * ((233 * (-v21 - v22 + v24 + 62 > 0xE)) ^ a21)))();
}

uint64_t sub_100018B6C@<X0>(int a1@<W3>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned char *a10)
{
  uint64_t v11 = (unsigned char *)STACK[0x470];
  a10[12] = 91;
  a10[13] = 91;
  a10[14] = 91;
  a10[15] = 90;
  v11[16] ^= *a10 ^ 0x5B;
  v11[17] ^= a10[1] ^ 0x5B;
  v11[18] ^= a10[2] ^ 0x5B;
  v11[19] ^= a10[3] ^ 0x5B;
  v11[20] ^= a10[4] ^ 0x5B;
  v11[21] ^= a10[5] ^ 0x5B;
  v11[22] ^= a10[6] ^ 0x5B;
  v11[23] ^= a10[7] ^ 0x5B;
  v11[24] ^= a10[8] ^ 0x5B;
  v11[25] ^= a10[9] ^ 0x5B;
  v11[26] ^= a10[10] ^ 0x5B;
  v11[27] ^= a10[11] ^ 0x5B;
  v11[28] ^= a10[12] ^ 0x5B;
  v11[29] ^= a10[13] ^ 0x5B;
  v11[30] ^= a10[14] ^ 0x5B;
  v11[31] ^= a10[15] ^ 0x5B;
  return (*(uint64_t (**)(void))(v10 + 8 * (a1 ^ (a2 + 944))))();
}

uint64_t sub_100018D9C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 - 0x5C6940C6B1BC703ALL) = 1;
  uint64_t v4 = *v2;
  *(void *)(v2[5] - 0x102FB98998D77CDDLL) = result;
  *(_DWORD *)(v4 - 0x72E1645BEBB64013) = v3;
  *((_DWORD *)v2 + 13) = -2124048112;
  return result;
}

uint64_t sub_100018E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,int a42)
{
  *(_DWORD *)(v43 + 52) = ((((LODWORD(STACK[0x614]) ^ v45) + (v42 ^ v45)) % 0x2710) ^ a42)
                        + 1072606184
                        + ((2 * (((LODWORD(STACK[0x614]) ^ v45) + (v42 ^ v45)) % 0x2710)) & 0x6AF4);
  int v46 = STACK[0x61C];
  LODWORD(STACK[0x50C]) = STACK[0x61C];
  return (*(uint64_t (**)(void))(v44 + 8 * ((1396 * (v46 == v45)) ^ (a8 - 732))))();
}

uint64_t sub_100018EAC(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 + 1458375211 == ((v2 - 483) ^ 0xA2B32C04)) * a2) ^ v2)))();
}

void sub_100018EFC()
{
  LODWORD(STACK[0x530]) = v0;
  LODWORD(STACK[0x580]) = v1;
  LODWORD(STACK[0x5AC]) = v2;
  LODWORD(STACK[0x564]) = v3;
  LODWORD(STACK[0x540]) = 1135937125;
  JUMPOUT(0x10000F664);
}

uint64_t sub_100018F58(uint64_t a1, int a2, int8x8_t a3, int8x8_t a4)
{
  uint64_t v9 = v4 - 8 + ((a2 + 596) | 0x100u);
  int8x8_t v10 = vrev64_s8(*(int8x8_t *)(v6 + v9));
  *(int8x8_t *)(a1 + v9) = vrev64_s8(vadd_s8(vsub_s8(v10, vand_s8(vadd_s8(v10, v10), a3)), a4));
  return (*(uint64_t (**)(void))(v8 + 8 * (((v5 == -8) * v7) ^ a2)))();
}

uint64_t sub_100018F64()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v2 - 300) | 0x14) + ((v2 - 1451344186) & 0x5681C2BD) - 689) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_100018FB4()
{
  int v4 = (v0 ^ 0x46A) + 797;
  (*(void (**)(void, unint64_t, void))(v2 + 8 * ((v0 ^ 0x46A) + 2018)))(*(unsigned int *)STACK[0x2B0], STACK[0x480], LODWORD(STACK[0x418]));
  unint64_t v5 = 1755732067 * ((2 * (v1 & 0x4FB84E09DB840A10) - v1 + 0x3047B1F6247BF5EELL) ^ 0xEDEC16C9FABD4835);
  *(void *)(v3 - 168) = LODWORD(STACK[0x534]) + v5;
  *(void *)(v3 - 184) = 2124071626 - v5;
  *(_DWORD *)(v3 - 196) = v5;
  *(_DWORD *)(v3 - 192) = ((v4 + 1739640969) ^ 0x46) + v5;
  *(_DWORD *)(v3 - 160) = (v4 + 2021362740) ^ v5;
  *(_DWORD *)(v3 - 188) = (v4 + 1739640969) ^ v5;
  *(_DWORD *)(v3 - 176) = v5 + v4 + 1739640969 + 41;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v4 + 1249)))(v3 - 200);
  STACK[0x338] = 0;
  int v7 = *(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v3 - 200));
  LODWORD(STACK[0x2CC]) = 540038155;
  return v7(v6);
}

uint64_t sub_1000190D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  int v51 = STACK[0x418];
  unsigned int v52 = (2 * LODWORD(STACK[0x418])) & 0x85D74280;
  int v53 = 235795823 * ((-2 - ((~(v50 - 200) | 0x86E5163F) + ((v50 - 200) | 0x791AE9C0))) ^ 0x12485F66);
  *(void *)(v50 - 144) = STACK[0x480];
  *(void *)(v50 - 152) = a45;
  *(_DWORD *)(v50 - 200) = (((v48 + 886) ^ 0xBE3F36F2) + v45) ^ v53;
  *(void *)(v50 - 168) = v46;
  *(_DWORD *)(v50 - 136) = v53 + v51 - v52 + 1122738496;
  *(void *)(v50 - 192) = v47;
  *(void *)(v50 - 184) = a44;
  *(_DWORD *)(v50 - 160) = (v48 - 825) ^ v53;
  *(unsigned char *)(v50 - 176) = 111 * ((-2 - ((~(v50 + 56) | 0x3F) + ((v50 + 56) | 0xC0))) ^ 0x66) - 40;
  uint64_t v54 = (*(uint64_t (**)(uint64_t))(v49 + 8 * (v48 + 1258)))(v50 - 200);
  int v55 = *(_DWORD *)(v50 - 132);
  LODWORD(STACK[0x534]) = v55;
  return (*(uint64_t (**)(uint64_t))(v49 + 8 * ((7 * (v55 != -2124048112)) ^ v48)))(v54);
}

uint64_t sub_1000191CC()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1340
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 8) - 11)))
                                 + ((*(unsigned __int8 *)(v3 + 8) - 11) ^ v0) == ((503 * (v2 ^ 0x110)) ^ (v0 + 1051)))) ^ v2)))();
}

uint64_t sub_100019218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v21
                                                                                                  + 8 * ((462 * (*(_DWORD *)(a20 - 0x6C0C7F2AED40EE79) != ((v20 - 434) ^ 0x8165944E) + 23 * (v20 ^ 0x2C0))) ^ v20)))(a1, a2, a3, a4, a5, a6, a7);
}

void sub_10001927C(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1000192DC(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, int a6)
{
  unsigned int v8 = a4 + a3 + 1363164030;
  unsigned int v9 = v6 + 1076707752;
  int v10 = (v9 < ((a6 - 123) | 0xC0u) + 1944463444) ^ (v8 < 0x73E62D3A);
  BOOL v11 = v8 > v9;
  if (v10) {
    BOOL v11 = v8 < 0x73E62D3A;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((61 * v11) ^ (a6 + 58))))();
}

uint64_t sub_100019358(uint64_t a1, uint64_t a2, uint64_t a3, _DWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *uint64_t v16 = 1948521603;
  uint64_t v19 = (*a4 - 1942067837);
  unint64_t v20 = 235795823 * ((0x905CB3DC21C34473 - ((v18 - 152) | 0x905CB3DC21C34473) + a13) ^ 0x6713F6DD4A91F2D5);
  *(void *)(v14 + 176) = v20 + 4266660215u;
  *(void *)(v14 + 160) = v19 ^ v20;
  *(_DWORD *)(v18 - 148) = v13 + 1628122547 - v20;
  *(_DWORD *)(v18 - 144) = v20 ^ (v13 + 1628122547) ^ 0x5D;
  *(_DWORD *)(v18 - 128) = 1559371749 - v20 + v13;
  *(_DWORD *)(v18 - 124) = v20 + 1;
  *(_DWORD *)(v18 - 152) = (v13 + 1628122508) ^ v20;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v13 ^ (v17 + 1951))))(v18 - 152);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * *(int *)(v18 - 112)))(v21);
}

void sub_100019464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v13 = *(void *)(v10 - 0x9F59A8236606B8);
  unsigned int v14 = (*(_DWORD *)(v13 + 4 * (v12 - 1)) ^ v7) >> v6;
  uint64_t v15 = 4 * (v5 + 1475591862);
  *(_DWORD *)(v13 + v15) = v14 + v7 - (v8 & (2 * v14));
  if (((a5 + 898275916) & 0xCA75677F) + v11 + *v9 >= 0x7FFFFFFF) {
    int v16 = -1339769364 - (v17 - (*(_DWORD *)(*(void *)(v10 - 0x9F59A8236606B8) + v15) == v7));
  }
  else {
    int v16 = v17 - (*(_DWORD *)(*(void *)(v10 - 0x9F59A8236606B8) + v15) == v7);
  }
  int *v9 = v16;
}

void sub_100019540(uint64_t a1)
{
  int v1 = 1759421093 * (a1 ^ 0xB37DB054);
  if (*(void *)(a1 + 24)) {
    BOOL v2 = *(_DWORD *)(a1 + 20) - v1 == 120779723;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = v2;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000195F4(int16x8_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  *(_DWORD *)(a3 + (v7 - a4)) = vmovn_s16(a1).u32[0];
  return (*(uint64_t (**)(void))(v8 + 8 * (((a4 + 4 == v6) * a5) ^ v5)))();
}

void sub_100019620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 *a9)
{
  int v12 = a9[3] ^ 0x5B;
  int v13 = ((*a9 ^ 0x5B) << 24) | ((a9[1] ^ 0x5B) << 16) | ((((v9 + 10) | 0x6C) ^ a9[2] ^ 0x36) << 8) | v12;
  *(_DWORD *)(*(void *)(v10 + 8) - 0xC9996988DE5192) = v13 + v11 - 2 * (v13 & 0x1659911 ^ v12 & 1);
  sub_100050ED0();
}

uint64_t sub_1000196AC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((829 * (v0 == ((v1 - 612) ^ 0x2BA))) ^ v1)))();
}

void sub_1000196E0()
{
}

uint64_t sub_1000196F4(uint64_t a1)
{
  int v1 = 1759421093 * ((~a1 & 0xA201450D | a1 & 0x5DFEBAF2) ^ 0x117CF559);
  int v2 = *(_DWORD *)(a1 + 8) - v1;
  unsigned int v3 = *((_DWORD *)*(&off_100233720 + (v2 ^ 0x47F)) + 83);
  unsigned int v4 = (*(_DWORD *)(a1 + 16) ^ v1) + 1631867583;
  BOOL v5 = v3 - 805578555 > v4;
  if (v4 < 0xCFFBD8C5 != v3 > 0x3004273A) {
    BOOL v5 = v3 > 0x3004273A;
  }
  return (*((uint64_t (**)(void))*(&off_100233720 + (v2 ^ 0x4C3)) + ((v5 * ((v2 - 884) ^ 0x2C)) ^ v2) - 1))();
}

uint64_t sub_1000197DC()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((v2 > 0x82) | (8 * (v2 > 0x82))) ^ (v0 + 843))))();
}

uint64_t sub_1000197FC@<X0>(int a1@<W8>)
{
  *(void *)(v3 + (a1 - 1014260135)) = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * ((198 * (7 * (v1 ^ 0x277) - 293 == ((v2 + 1) & 0x1FFFFFFF8))) ^ v1)))();
}

uint64_t sub_100019858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((((v7 + 825) ^ 0x7C5 ^ (11 * (v7 ^ 0x2E7))) * (v6 != a6)) ^ v7)))();
}

void sub_100019898()
{
}

void sub_1000198E0(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_100019954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((2 * (((a7 + v8 - 64) ^ (v7 == (((v8 + 768) | 0xAA) ^ 0x5EA))) & 1)) & 0xEF | (16 * (((a7 + v8 - 64) ^ (v7 == (((v8 + 768) | 0xAA) ^ 0x5EA))) & 1)) | v8)))();
}

uint64_t sub_100019998()
{
  uint64_t v5 = v0 + ((v1 + v3) & 0x5184977) - 357;
  BOOL v7 = v2 == 63 || v5 == 0x58567493A9AD4B06;
  return (*(uint64_t (**)(void))(v4 + 8 * ((v7 * ((v1 - 854) ^ 0x2EA)) ^ v1)))();
}

uint64_t sub_1000199F0(int a1, unsigned int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v9 = a1 + ((v7 + 1899061996) & 0x8ECE9FF9) - 2095;
  if (v9 <= 0x40) {
    unsigned int v9 = a2;
  }
  return (*(uint64_t (**)(void))(v8
                              + 8 * (((62 - a1 >= a3 + v9 + 62) * (a7 + ((v7 + 2147482357) | 0x40054570) - 407)) ^ v7)))();
}

uint64_t sub_100019A64()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((((v2 ^ 0x14F) - 688) * (v1 != 0)) | v2)))();
}

void sub_100019A8C(uint64_t a1)
{
  uint64_t v2 = (uint64_t)*(&off_100233720
                + (byte_1001CE730[byte_1001CB460[(-35
                                                                                  * ((qword_100282DD0 + dword_100282DD8) ^ 0xAE))] ^ 0xFB] ^ (-35 * ((qword_100282DD0 + dword_100282DD8) ^ 0xAE)))
                - 72);
  uint64_t v3 = *(void *)(v2 - 4);
  uint64_t v4 = (uint64_t)*(&off_100233720
                + (byte_1001CE83C[(byte_1001CB56C[(-35 * (v3 ^ qword_100282DD0 ^ 0xAE))
                                                                 - 12] ^ 0xF3)
                                                 - 12] ^ (-35 * (v3 ^ qword_100282DD0 ^ 0xAE))));
  uint64_t v5 = v3 - (void)&v9 + *(void *)(v4 - 4);
  uint64_t v6 = 2121524189 * v5 + 0x5BDF866B682B5252;
  unint64_t v7 = 2121524189 * (v5 ^ 0xA420799497D4ADAELL);
  *(void *)(v2 - 4) = v6;
  *(void *)(v4 - 4) = v7;
  LODWORD(v4) = *(_DWORD *)(v2 - 4);
  uint64_t v8 = (char *)*(&off_100233720
               + ((-35 * ((qword_100282DD0 - dword_100282DD8) ^ 0xAE)) ^ byte_1001CE730[byte_1001CB460[(-35 * ((qword_100282DD0 - dword_100282DD8) ^ 0xAE))] ^ 0xFB])
               - 59)
     - 8;
  (*(void (**)(char *, uint64_t (*)()))&v8[8
                                                   * (byte_1001D6470[byte_1001D16AC[(-35 * ((v7 - v4) ^ 0xAE)) - 12] ^ 0x19] ^ (-35 * ((v7 - v4) ^ 0xAE)))
                                                   + 17536])((char *)*(&off_100233720+ ((-35 * ((v7 + v4) ^ 0xAE)) ^ byte_1001CE730[byte_1001CB460[(-35 * ((v7 + v4) ^ 0xAE))] ^ 0x28])- 21)- 12, sub_10001C2E4);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_100019C68()
{
  BOOL v4 = v2 - 955816641 < (int)(v1 + 90001621);
  if (v2 - 955816641 < -2057482027 != v1 > ((v0 - 982) | 0x404u) + 2057480406) {
    BOOL v4 = v1 > ((v0 - 982) | 0x404u) + 2057480406;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((30 * v4) ^ v0)))();
}

uint64_t sub_100019CE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W7>, int a7@<W8>)
{
  int v15 = v11 ^ a6;
  *(_DWORD *)(*v10 + 4 * ((v15 ^ (a7 + 262)) + v8)) = a5;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                + 8
                                                                                * (((v14 == ((v15 - 241) | v12) + v9)
                                                                                  * (((v11 ^ a6) - 515) ^ v13)) ^ v15)))(a1, a2, a3, a4, 2984886981);
}

uint64_t sub_100019D38(int a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((317 * ((v1 + 1135937082) < 0x28)) ^ a1 ^ 0x50)))();
}

uint64_t sub_100019E28()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v1 & (2 * (*(unsigned __int8 *)(v3 + 5) - 13)))
                                 + ((*(unsigned __int8 *)(v3 + 5) - 13) ^ v0) == v0)
                                * (v2 - 226)) ^ v2)))();
}

uint64_t sub_100019E5C(uint64_t a1)
{
  int v1 = 535753261 * (((a1 | 0xB4CC401E) - a1 + (a1 & 0x4B33BFE1)) ^ 0xBE384E31);
  int v2 = *(_DWORD *)(a1 + 8) ^ v1;
  int v3 = *(_DWORD *)(a1 + 24) - v1;
  int v4 = *(_DWORD *)(*(void *)(a1 + 16) - 0x9F59A8236606BCLL);
  unsigned int v6 = v4 - 1477598966;
  BOOL v5 = v4 - 1477598966 < 0;
  unsigned int v7 = 1477598966 - v4;
  if (!v5) {
    unsigned int v7 = v6;
  }
  return (*((uint64_t (**)(void))*(&off_100233720 + (v2 ^ 0x731))
          + ((((v3 - 414666719) < 4 * (unint64_t)v7) * ((61 * (v2 ^ 0x7BC)) ^ 0x8CD)) ^ v2)
          - 1))();
}

uint64_t sub_100019F3C(uint64_t a1, int a2)
{
  int v7 = v4 + v2;
  unsigned int v8 = v7 + (v3 ^ 0xA0028015);
  if (v8 <= 0x40) {
    unsigned int v8 = 64;
  }
  BOOL v9 = __CFADD__(v7 - 1610446764, a2 + 1610446739 + v5 + v8 + 24);
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((2 * (((v3 - 99) ^ v9) & 1)) & 0xFB | (4
                                                                                        * (((v3 - 99) ^ v9) & 1))) ^ v3)))();
}

uint64_t sub_100019FC0(_DWORD *a1)
{
  unsigned int v1 = *a1 ^ (535753261 * ((1711628207 - (a1 | 0x66055FAF) + (a1 | 0x99FAA050)) ^ 0x930EAE7F));
  uint64_t v3 = *(void *)*(&off_100233720 + (int)(v1 ^ 0x196C39E2));
  unsigned int v4 = (3804331 * (((&v3 | 0xC2EACB37) - (&v3 & 0xC2EACB37)) ^ 0xBC3FEEC1)) ^ (v1 - 426522149);
  return (*((uint64_t (**)(uint64_t *))*(&off_100233720 + (int)(v1 ^ 0x196C391B)) + (int)(v1 ^ 0x196C316A) - 1))(&v3);
}

uint64_t sub_10001A0E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * ((1551 * (a6 + 1 == v7 + 64)) ^ a5)))(v8);
}

uint64_t sub_10001A1C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                                + 8
                                                                                * ((1925
                                                                                  * (((v4 + 1128) ^ 0xC38B962C) + a4 < 0x38)) ^ (v4 - 601))))(a1, a2, a3, 84210482, 1621298222);
}

uint64_t sub_10001A210@<X0>(int a1@<W8>)
{
  int v3 = a1 - 1440;
  uint64_t v4 = (*(uint64_t (**)(void))(v2 + 8 * ((a1 - 1440) ^ 0x834)))();
  LODWORD(STACK[0x618]) = v1;
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((887 * (v1 == 61 * (v3 ^ 0x9F) - 2124048112 + 61 * (v3 ^ 0x9F) - 2074)) ^ v3)))(v4);
}

uint64_t sub_10001A270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                         + 8
                                                                                         * ((42 * (v5 < 0xBBF8E7C0)) ^ (v7 + v8 - 2116))))(a1, a2, a3, a4, a5, 3061059863);
}

uint64_t sub_10001A2B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  a13 = &STACK[0x7DDA1A649706FBB5];
  a15 = v17
      - 460628867 * ((((2 * &a13) | 0x66A73330) - &a13 + 1286366824) ^ 0xFFC51BE5)
      + 726;
  uint64_t v18 = (*(uint64_t (**)(unint64_t **))(v16 + 8 * (v17 ^ 0xA1A)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * (((a14 != v15) * ((3 * (v17 ^ 0xD4)) ^ 0x644)) ^ v17)))(v18);
}

uint64_t sub_10001A35C(uint64_t a1)
{
  int v2 = 460628867 * (((a1 | 0x167EA26) - a1 + (a1 & 0xFE9815D9)) ^ 0x4DF1685B);
  int v3 = *(_DWORD *)(a1 + 20) - v2;
  uint64_t v5 = *(void *)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  unsigned int v6 = -1496278029 * (*(_DWORD *)(a1 + 16) - v2)
     - ((1302411238 * (*(_DWORD *)(a1 + 16) - v2) - 1135863916) & 0xEE76DC84)
     - 715032052;
  unsigned int v7 = 1755732067
     * (((&v9 | 0x79A15B62) - &v9 + (&v9 & 0x865EA498)) ^ 0xA767E6B9);
  int v9 = v2 + *(_DWORD *)(a1 + 24) + v7 - 1281406773;
  uint64_t v12 = v4;
  int v13 = v6 ^ v7;
  int v11 = v7 ^ (v3 - 2138962323);
  uint64_t v10 = v5;
  uint64_t result = (*((uint64_t (**)(int *))*(&off_100233720 + v3 - 2138963214) + (v3 ^ 0x7F7DF4A5) - 1))(&v9);
  *(_DWORD *)(a1 + 28) = v14;
  return result;
}

uint64_t sub_10001A4E8(uint64_t a1)
{
  int v2 = 1374699841 * (a1 ^ 0x6DF41809);
  int v3 = *(_DWORD *)(a1 + 8) ^ v2;
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)a1;
  int v8 = *(_DWORD *)(a1 + 56) + v2;
  unsigned int v9 = 1224239923 * ((2 * (&v11 & 0x7CB74020) - &v11 - 2092384291) ^ 0x71FB420A);
  v3 -= 368400031;
  int v17 = v3 + v9 + 859;
  uint64_t v11 = v7;
  uint64_t v14 = v4;
  uint64_t v15 = v6;
  uint64_t v13 = v5;
  unsigned int v12 = (v8 ^ 0xA026CB8B) - v9 + ((2 * v8) & 0x7FEBBFCA ^ 0x3FA228C8) - 952110341;
  uint64_t result = (*((uint64_t (**)(uint64_t *))*(&off_100233720 + v3) + v3 + 2144))(&v11);
  *(_DWORD *)(a1 + 24) = v16;
  return result;
}

void sub_10001A678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  int v24 = 535753261 * ((((v23 - 144) | 0x172E8085) - (v23 - 144) + ((v23 - 144) & 0xE8D17F78)) ^ 0x1DDA8EAA);
  *(_DWORD *)(v23 - 128) = v20 - v24 - 331;
  *(void *)(v23 - 120) = v22;
  *(void *)(v23 - 136) = a9;
  *(_DWORD *)(v23 - 144) = (a20 - 1115665727 + v20 - 315) ^ v24;
  (*(void (**)(uint64_t))(v21 + 8 * (v20 + 1653)))(v23 - 144);
  sub_10001D8FC();
}

void sub_10001A704()
{
}

uint64_t sub_10001A710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  uint64_t v43 = *(void *)(a15 + 24);
  memset((void *)(v42 - 176), 91, 16);
  int v44 = 235795823 * ((24556229 - ((v42 - 160) | 0x176B2C5) + ((v42 - 160) | 0xFE894D3A)) ^ 0x6A240463);
  *(void *)(v42 - 160) = &a39;
  *(_DWORD *)(v42 - 124) = (v41 + 1960) ^ v44;
  *(void *)(v42 - 144) = v42 - 196;
  *(void *)(v42 - 136) = v43;
  *(void *)(v42 - 120) = v42 + 0xC6562B2033A2427;
  *(_DWORD *)(v42 - 152) = v44 + 365380227;
  uint64_t v45 = (*(uint64_t (**)(uint64_t))(v39 + 8 * (v41 ^ 0x894)))(v42 - 160);
  return (*(uint64_t (**)(uint64_t))(v39
                                            + 8
                                            * (((*(_DWORD *)(v42 - 128) == v40 + 9 * (v41 ^ 0x6A) - 63) * (v41 ^ 0x46E)) ^ v41)))(v45);
}

void sub_10001A840(int a1@<W6>, int a2@<W8>)
{
  STACK[0x510] = STACK[0x510] + (((a2 ^ 0x1F1) - 526982050) & 0x1F691E7D) - 2653;
  LODWORD(STACK[0x50C]) = a1 - 162;
  JUMPOUT(0x100011AA0);
}

uint64_t sub_10001A87C(unsigned int a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  int v9 = v6 ^ 0x58;
  BOOL v10 = a1 < a4;
  unsigned int v11 = v7 + v4 + 845;
  int v12 = v10 ^ (v11 < ((v9 - 473) | v5) + v7);
  BOOL v13 = v11 < a1;
  if (!v12) {
    BOOL v10 = v13;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((51 * v10) ^ v9)))();
}

uint64_t sub_10001ACBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,int a30)
{
  int v33 = v30 - 1750;
  int v34 = (v30 - 1882) | 0x91;
  BOOL v35 = a30 - 728850007 < (v32 - 692117949);
  if (a30 - 728850007 < ((v33 + 30) | 0x409u) - 147550534 != (v32 - 692117949) < 0xF7349365) {
    BOOL v35 = (v32 - 692117949) < 0xF7349365;
  }
  return (*(uint64_t (**)(void))(v31 + 8 * ((v35 * (v34 ^ 0xB6)) ^ v33)))();
}

void sub_10001ACD0(uint64_t a1)
{
  int v1 = 1759421093 * (a1 ^ 0xB37DB054);
  unsigned int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x6C0C7F2AED40EE85) - 1190748223;
  unsigned int v3 = *(_DWORD *)a1 + v1 + 1941925133;
  int v4 = (v3 < 0xC039938C) ^ (v2 < 0xC039938C);
  BOOL v5 = v2 < v3;
  if (v4) {
    BOOL v6 = v3 < 0xC039938C;
  }
  else {
    BOOL v6 = v5;
  }
  __asm { BRAA            X12, X17 }
}

void sub_10001ADD0()
{
  STACK[0x568] = *(void *)(v0 + 8 * (LODWORD(STACK[0x3F4]) - 1036));
  JUMPOUT(0x10001B7F8);
}

uint64_t sub_10001ADEC()
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((1597 * (*(_DWORD *)(v1 + 4 * (((v0 + 553) ^ v2) + v5)) == v3)) ^ v0)))();
}

uint64_t sub_10001AE20()
{
  *(void *)(v5 + (v0 + v2)) = *(void *)(v3 + (v0 + v2));
  return (*(uint64_t (**)(void))(v6 + 8 * (v1 ^ (16 * (v4 + v2 != 8)))))();
}

uint64_t sub_10001AE4C()
{
  unsigned int v3 = v1 - ((2 * v1 - 1089137222) & 0xBA32B08C) + ((23 * (v2 ^ 0x342)) ^ 0xBCA3E296);
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((41
                                * ((((27 * (v2 ^ 0x359)) ^ 0xDFF9FFE4) & (2 * v3) ^ 0x9A30B00C)
                                 + (v3 ^ 0xB2E5A7D8)
                                 - 537134750 != 1341716736)) ^ v2)))();
}

void sub_10001AEFC()
{
  _DWORD *v0 = v1 + 164;
}

void sub_10001AF04()
{
}

uint64_t sub_10001AF18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  if (a18 - 1477598966 >= 0) {
    int v20 = a18 - 1477598966;
  }
  else {
    int v20 = ~(a18 - 1477598967);
  }
  return (*(uint64_t (**)(void))(v19
                              + 8
                              * ((((int)(((v18 - 50) ^ 0xDE3FFDC7 ^ v20)
                                       + 2043830264
                                       + ((2 * v20) & 0xBC7FFDFC)
                                       - 1477598967) >= 0)
                                * ((v18 - 1355830420) & 0x50D057AB ^ 0x6DB)) ^ (v18 - 50))))();
}

void sub_10001AFB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(void *)(v28 - 104) = v25;
  *(_DWORD *)(v28 - 112) = v27
                         + 1224239923
                         * ((((v28 - 144) | 0x4ED7B0AB) - (v28 - 144) + ((v28 - 144) & 0xB1284F50)) ^ 0xBC644D7C)
                         - 420;
  *(void *)(v28 - 144) = a25;
  *(void *)(v28 - 136) = a17;
  *(void *)(v28 - 128) = v25;
  *(void *)(v28 - 120) = a24;
  (*(void (**)(uint64_t))(v26 + 8 * (v27 + 1167)))(v28 - 144);
  JUMPOUT(0x100039228);
}

uint64_t sub_10001B044()
{
  *(void *)(v5 - 128) = v3;
  *(void *)(v5 - 120) = v0;
  *(_DWORD *)(v5 - 136) = (v4 ^ 0x2B2)
                        - 108757529 * ((((v5 - 136) | 0x10280311) - ((v5 - 136) & 0x10280311)) ^ 0xF0B4613A)
                        + 597;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * ((v4 ^ 0x2B2) + 1934)))(v5 - 136);
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (v4 ^ 0x2B2 | (8 * (v2 == (v4 ^ 0x2B2) + 596645637)))))(v6);
}

uint64_t sub_10001B0DC@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12)
{
  a9 = (uint64_t)&a5 + a1 + 4;
  a10 = a4;
  a8 = (v12 + 495) ^ (((2 * (&a8 & 0x6D042B10) - &a8 + 318493935) ^ 0x7F0FCCE6) * v13);
  uint64_t v15 = (*(uint64_t (**)(unsigned int *))(v14 + 8 * (v12 ^ 0xEF7u)))(&a8);
  return sub_10001F3E4(v15, v16, v17, v18, v19, v20, v21, v22, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t sub_10001B148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v12 = (a5 + 1125);
  int v13 = (_DWORD *)(v7 + 4 * (v5 + v9));
  int v14 = *(v13 - 8) ^ *(v13 - 3);
  int v15 = v14 + v11 - (v6 & (2 * v14));
  int v16 = *(_DWORD *)(v7 + 4 * (v5 + v9 + v12) - 4628) ^ *(v13 - 14);
  HIDWORD(v17) = v16 ^ v15 ^ 0x1659910;
  LODWORD(v17) = v16 ^ ~v15;
  *int v13 = (v17 >> 31) + v11 - (v6 & (2 * (v17 >> 31)));
  return (*(uint64_t (**)(void))(v8 + 8 * (int)((14 * (v5 + 1 != v10 + 80)) ^ v12)))();
}

uint64_t sub_10001B1DC()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (((v2 + 1347 + (v2 ^ 0x3F8) - 2186) * (v1 == 0x4000000)) ^ v2)))();
}

uint64_t sub_10001B20C@<X0>(int a1@<W0>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((981
                                * (*(_DWORD *)(v3 + 4 * (((139 * (v4 ^ 0x6C5)) ^ (v4 - 323 + a2)) + a1)) != v2)) ^ (v4 - 1224))))();
}

uint64_t sub_10001B258()
{
  uint64_t v4 = (*(uint64_t (**)(void))(v3 + 8 * (v0 + 1197)))();
  LODWORD(STACK[0x50C]) = v1;
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * (((((v0 - 877) | 0x10C) + 1547) * v2) ^ (v0 - 30))))(v4);
}

uint64_t sub_10001B2A8@<X0>(int a1@<W0>, int a2@<W1>, unsigned int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W8>)
{
  BOOL v13 = v7 < a3;
  *(unsigned char *)(v12 - 220 + (v6 + a1)) = *(unsigned char *)(v10 + (a6 + a4))
                                                  - ((2 * *(unsigned char *)(v10 + (a6 + a4))) & 0xB6)
                                                  + 91;
  if (v13 == a5 + a2 + a6 < a3) {
    BOOL v13 = a5 + a2 + a6 < v7;
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((v13 * v8) ^ v9)))();
}

uint64_t sub_10001B314(uint64_t a1, int a2, double a3)
{
  *(double *)(a1 + (v6 & (v4 + 8))) = a3;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 == 8) * a2) ^ v3)))();
}

uint64_t sub_10001B320(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((((a4 - 1035) | 4) + 1107) * (v4 == v6)) ^ (a4 - 1001))))();
}

uint64_t sub_10001B34C@<X0>(int a1@<W7>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((((*(unsigned __int8 *)(v3 + v2) == *(unsigned __int8 *)(*(void *)(v4 + 8 * (a2 - 995))
                                                                                         - 12)) ^ (a2 - 80)) & 1)
                                * a1) ^ (a2 + 650))))();
}

uint64_t sub_10001B398()
{
  (*(void (**)(void))(v1 + 8 * (v0 + 1197)))();
  return (*(uint64_t (**)(void))(v1 + 8 * ((58 * (STACK[0x5C8] != 0)) ^ (v0 + 330))))();
}

uint64_t sub_10001B3EC()
{
  *(unint64_t *)((char *)&STACK[0x2AC] + v2 - 297100030) = 0x5B5B5B5B5B5B5B5BLL;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((231 * ((((v1 - 29) ^ 0xFFFFFFFFFFFFF98DLL) & v0) != 8)) ^ (v1 - 29))))();
}

uint64_t sub_10001B454()
{
  unint64_t v4 = v2 + v1 + ((v0 - 966) | 0xE0u) + 347;
  if (v4 <= 0x38) {
    unint64_t v4 = 56;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (((v4 - v1 + 271286987 < 8) * (v0 - 1476)) | v0)))();
}

uint64_t sub_10001B4A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20)
{
  return (*(uint64_t (**)(void))(v22 + 8 * ((1687 * (a20 == ((((v21 - 148) | 0x80) + 925) ^ (v20 + 1102)))) ^ v21)))();
}

uint64_t sub_10001B4E0()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((2256 * (v2 + 1 == v3 + 48)) ^ v0)))();
}

uint64_t sub_10001B5C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *uint64_t v25 = 0xEABB421473B3F2CBLL;
  uint64_t v29 = *(unsigned int *)*(&off_100233720 + ((v27 - 71) ^ 0x498BF7C7));
  uint64_t v30 = 1755732067 * ((0x7DB27F721CB00F00 - ((v28 - 152) | 0x7DB27F721CB00F00) + a25) ^ 0x5FE627B23D894D24);
  *(_DWORD *)(v28 - 112) = v30 ^ 0x787B9041;
  v25[22] = v29 + v30;
  v25[20] = 1913760756 - v30;
  *(_DWORD *)(v28 - 128) = v30 + 1779912157;
  *(_DWORD *)(v28 - 140) = v30 ^ 0x6A174DFC;
  *(_DWORD *)(v28 - 148) = v30;
  *(_DWORD *)(v28 - 144) = v30 + 1779912100;
  uint64_t v31 = (*(uint64_t (**)(uint64_t))(v26 + 8 * ((v27 + 1890) ^ 0x498BF7C7)))(v28 - 152);
  return (*(uint64_t (**)(uint64_t))(v26 + 8 * *(int *)(v28 - 152)))(v31);
}

uint64_t sub_10001B5D4@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unint64_t v8 = v4 - 1;
  STACK[0x498] = v8;
  *(unsigned char *)(a1 + v8) = ((v3 + 1) ^ v5) * (v2 + v3 + 1 - 125);
  return (*(uint64_t (**)(void))(v7 + 8 * (((STACK[0x498] == 0) * v6) ^ a2)))();
}

uint64_t sub_10001B5DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return sub_10002951C(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_10001B5EC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((158 * (v4 + 1 == v6 + 48)) ^ a4)))();
}

uint64_t sub_10001B6C8()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v2 + 8 * (v0 + 1197)))();
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((v1 == v0 - 2124049149) | (8 * (v1 == v0 - 2124049149))) ^ (v0 - 140))))(v3);
}

uint64_t sub_10001B714()
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((896
                                * ((v1 & (2 * (*(unsigned __int8 *)(v4 + 1) - 134)))
                                 + ((*(unsigned __int8 *)(v4 + 1) - 134) ^ v0) == (v2 ^ (v0 + 237)))) ^ v3)))();
}

uint64_t sub_10001B750()
{
  (*(void (**)(void))(v1 + 8 * (v0 ^ 0xCB7)))();
  return (*(uint64_t (**)(void))(v1 + 8 * ((54 * (STACK[0x598] == 0)) ^ (v0 + 271))))();
}

uint64_t sub_10001B794()
{
  STACK[0x440] = *(void *)(v1 + 8 * (v0 - 999));
  return sub_100049B5C();
}

void sub_10001B7D4()
{
  STACK[0x568] = *(void *)(v0 + 8 * (LODWORD(STACK[0x3F4]) - 1003));
  JUMPOUT(0x10001B7F0);
}

uint64_t sub_10001B804@<X0>(int a1@<W2>, unint64_t a2@<X8>)
{
  STACK[0x620] = v5;
  LODWORD(STACK[0x62C]) = v2;
  STACK[0x500] = a2;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (v4 ^ (32
                                     * (v2
                                      + (v3 & ~(2 * *(_DWORD *)(v5 - 0x35FF68D50C8F404FLL)))
                                      + (*(_DWORD *)(v5 - 0x35FF68D50C8F404FLL) & 0x3F ^ (a1 - 28))
                                      + ((v4 + 152444663) & 0xF6E9E2EE)
                                      - 2072516973 > 0xFFFFFFBF)))))();
}

void sub_10001B888(uint64_t a1)
{
  BOOL v3 = *(_DWORD *)(*(void *)(a1 + 8) - 0x9F59A8236606BCLL) == 1477598966
    || *(_DWORD *)(*(void *)(a1 + 16) - 0x9F59A8236606BCLL) == 1477598966;
  int v1 = *(_DWORD *)a1 - 1225351577 * ((-1557536513 - (a1 | 0xA329E0FF) + (a1 | 0x5CD61F00)) ^ 0x7F4CC716);
  __asm { BRAA            X13, X17 }
}

uint64_t sub_10001B9A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_DWORD **a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  uint64_t v49 = 285 * (v45 ^ (v44 + 23));
  uint64_t v50 = *a26;
  if (((unint64_t)*a26 & 3) != ((v49 + 53) ^ (v45 + 115765701) & 0x53DB7EF)
    || (int v51 = *(&off_100233720 + (v45 ^ v44)), *v51))
  {
    *a10 = 2124071599;
    return sub_100027128(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33);
  }
  else
  {
    *int v51 = v50;
    *(_DWORD *)*(&off_100233720 + (int)(v49 ^ 0x259)) = 255;
    *v50 |= ~v50[*v50 & 0x3ELL] << 16;
    int v52 = (v49 - 550) | 0x602;
    v50[4] |= (v50[v50[4] & 0x3ELL] ^ (v52 - 1559)) << 16;
    v50[8] |= ~v50[v50[8] & 0x3ELL] << 16;
    v50[12] |= ~v50[v50[12] & 0x3ELL] << 16;
    v50[16] |= ~v50[v50[16] & 0x3ELL] << 16;
    v50[20] |= ~v50[v50[20] & 0x3ELL] << 16;
    v50[24] |= ~v50[v50[24] & 0x3ELL] << 16;
    v50[28] |= ~v50[v50[28] & 0x3ELL] << 16;
    v50[32] |= ~v50[v50[32] & 0x3ELL] << 16;
    v50[36] |= ~v50[v50[36] & 0x3ELL] << 16;
    v50[40] |= ~v50[v50[40] & 0x3ELL] << 16;
    v50[44] |= ~v50[v50[44] & 0x3ELL] << 16;
    v50[48] |= ~v50[v50[48] & 0x3ELL] << 16;
    v50[52] |= ~v50[v50[52] & 0x3ELL] << 16;
    v50[56] |= ~v50[v50[56] & 0x3ELL] << 16;
    v50[60] |= ~v50[v50[60] & 0x3ELL] << 16;
    uint64_t v53 = (*(uint64_t (**)(char *, void, uint64_t))(v47 + 8 * ((int)v49 + 1720)))(&a44, 0, 1024);
    *(void *)(v46 + 128) = &a44;
    return (*(uint64_t (**)(uint64_t))(v47 + 8 * ((((v52 - 996) ^ (v48 - 466) ^ (v48 + 32)) == 32) | v52)))(v53);
  }
}

uint64_t sub_10001BCB8@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W4>, uint64_t a5@<X5>, uint64_t a6@<X6>, int a7@<W7>, uint64_t a8@<X8>)
{
  int v15 = v10 + 988;
  uint64_t v16 = (v11 + a4);
  *(unsigned char *)(a5 + v16 + 4) = *(unsigned char *)(a6 + v16) ^ *(unsigned char *)(a8 + ((v15 ^ a1) & v16)) ^ *(unsigned char *)(((v15 ^ a1) & v16) + v9 + 1) ^ *(unsigned char *)(v8 + ((v15 ^ a1) & v16)) ^ (((v15 ^ a1) & v16) * v13) ^ v12;
  return (*(uint64_t (**)(void))(v14 + 8 * ((63 * (v11 - 1 == a7 + ((v15 + a2) & a3) - 19)) ^ (v15 + 133))))();
}

uint64_t sub_10001BD38@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W8>)
{
  BOOL v10 = v6 > v7;
  if (v10 == v4 + v8 < (v9 ^ a3 ^ a1)) {
    BOOL v10 = v4 + v8 < v3;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((v10 * a2) ^ v9 ^ a3)))();
}

uint64_t sub_10001BD40@<X0>(char a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v5 = (unsigned char *)STACK[0x4F8];
  unsigned int v6 = *(_DWORD *)(a2 - 0x35FF68D50C8F404BLL);
  unsigned char *v5 = (HIBYTE(v6) ^ 6) + ((v2 - 27) ^ 0x56) - ((2 * (HIBYTE(v6) ^ 6)) & 0xB6);
  v5[1] = (BYTE2(v6) ^ 0x20) - ((v6 >> 15) & 0xB6) + 91;
  v5[2] = (BYTE1(v6) ^ 0x92) - 2 * ((BYTE1(v6) ^ 0x92) & 0xDF ^ BYTE1(v6) & 4) + 91;
  v5[3] = v6 ^ a1;
  unsigned int v7 = *v3 + 1004390764;
  BOOL v8 = v7 < 0x944857A0;
  BOOL v9 = v7 > 0x944857A4;
  if (v8) {
    BOOL v9 = v8;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((122 * !v9) ^ v2)))();
}

uint64_t sub_10001BE50()
{
  unsigned int v7 = (void *)STACK[0x3B0];
  unint64_t v8 = STACK[0x3B0] + 264;
  v7[31] = 0x58125EF63C69FC55;
  v7[32] = v8;
  BOOL v9 = v7 + 0x13EB35046CC0F7;
  v7[65] = 0x58125EF63C69FC55;
  v7[66] = v7 + 67;
  STACK[0x390] = (unint64_t)(v7 + 0x13EB35046CC119);
  v7[99] = 0x58125EF63C69FC55;
  v7[100] = v7 + 101;
  STACK[0x398] = (unint64_t)(v7 + 0x13EB35046CC13BLL);
  v7[133] = 0x58125EF63C69FC55;
  v7[134] = v7 + 135;
  STACK[0x3B8] = (unint64_t)(v7 + 0x13EB35046CC15DLL);
  v7[167] = 0x58125EF63C69FC55;
  v7[168] = v7 + 169;
  STACK[0x3C0] = (unint64_t)(v7 + 0x13EB35046CC17FLL);
  LODWORD(v7) = 1178560073 * ((2 * (v0 & 0x3BAB86F8) - v0 + 1146386692) ^ 0xFEC00166);
  unint64_t v10 = STACK[0x400] + 4;
  *(void *)(v6 - 184) = v10;
  *(void *)(v6 - 176) = v9;
  *(_DWORD *)(v6 - 196) = v4 + 1654 - v7;
  *(_DWORD *)(v6 - 192) = v7 + (v1 ^ 0x9C8626DF) - 79826952 + ((2 * v1) & 0x3BC77F9E ^ v4 ^ 0x2C333BB);
  uint64_t v11 = 8 * (v4 ^ 0x977);
  char v12 = *(void (**)(uint64_t))(v5 + v11);
  STACK[0x388] = v11;
  v12(v6 - 200);
  uint64_t v13 = v10 + v3;
  int v14 = 1178560073 * ((2 * ((v6 - 200) & 0x70F9AE78) - (v6 - 200) - 1895411323) ^ 0x359229E7);
  *(_DWORD *)(v6 - 196) = v4 + 1654 - v14;
  *(_DWORD *)(v6 - 192) = v14 + (v1 ^ 0xB88E66DF) - 550129672 + ((2 * v1) & 0x73D7FF9E ^ 0x2C33200);
  unint64_t v15 = STACK[0x390];
  *(void *)(v6 - 184) = v13;
  *(void *)(v6 - 176) = v15;
  (*(void (**)(uint64_t))(v5 + v11))(v6 - 200);
  uint64_t v16 = v13 + v3;
  LODWORD(STACK[0x380]) = 2 * v1;
  LODWORD(v11) = 1178560073 * ((v6 - 200) ^ 0xBA947862);
  LODWORD(STACK[0x390]) = v4 + 1654 - v11;
  *(_DWORD *)(v6 - 196) = v4 + 1654 - v11;
  *(_DWORD *)(v6 - 192) = v11 + (v1 ^ 0x9ADE66EF) - 43667512 + ((2 * v1) & 0x3777FFFE ^ 0x2433220);
  unint64_t v17 = STACK[0x398];
  *(void *)(v6 - 184) = v16;
  *(void *)(v6 - 176) = v17;
  (*(void (**)(uint64_t))(v5 + 8 * (v4 + 1809)))(v6 - 200);
  int v18 = 1178560073 * (((v6 - 200) & 0xCFF21772 | ~((v6 - 200) | 0xCFF21772)) ^ 0x8A9990EF);
  *(_DWORD *)(v6 - 196) = v4 + 1654 - v18;
  *(_DWORD *)(v6 - 192) = v18 + (v1 ^ 0x3E4C76EF) + 1509408712 + ((2 * v1) & 0x7E53DFFE ^ 0x2431220);
  unint64_t v19 = STACK[0x3B8];
  *(void *)(v6 - 184) = v16 + v3;
  *(void *)(v6 - 176) = v19;
  unint64_t v20 = STACK[0x388];
  (*(void (**)(uint64_t))(v5 + STACK[0x388]))(v6 - 200);
  int v21 = v11 + (v1 ^ 0x7E8C36C7) + 423100400 + (STACK[0x380] & 0xFFD35FAE ^ 0x2C31220);
  *(_DWORD *)(v6 - 196) = STACK[0x390];
  *(_DWORD *)(v6 - 192) = v21;
  unint64_t v22 = STACK[0x3C0];
  *(void *)(v6 - 184) = v16 + v3 + v3;
  *(void *)(v6 - 176) = v22;
  (*(void (**)(uint64_t))(v5 + v20))(v6 - 200);
  unint64_t v23 = STACK[0x400];
  STACK[0x5D8] = (v2 - 544568610);
  return (*(uint64_t (**)(unint64_t))(v5
                                                     + 8
                                                     * ((235
                                                       * (((v2 == 544568610) ^ ((v4 ^ 0xB6) - 14)) & 1)) ^ ((v4 ^ 0x5B6) + 594))))(v23);
}

uint64_t sub_10001C268(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((167
                                * ((v7 & 0xFFFFFFFFFFFFFFFuLL) - 1 >= (unint64_t)(5
                                                                                       * (((v8 - 704605064) | 0x20042A27) ^ (a7 - 492) ^ 0x201u))
                                                                    - 143)) ^ (a4
                                                                             + ((v8 - 704605064) | 0x20042A27)
                                                                             + 1709))))();
}

uint64_t sub_10001C288(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((((a6 + 621) ^ 0x30C) * (v7 == a4)) ^ a6)))();
}

void sub_10001C2B8()
{
}

uint64_t sub_10001C2D0()
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((((v1 + v3) & v4 ^ 0x402) + v0 != v2) * v5) ^ v1)))();
}

void sub_10001C2D8()
{
}

uint64_t sub_10001C2E4()
{
  uint64_t v0 = (uint64_t)*(&off_100233720
                + ((-35 * ((qword_100282DD0 + dword_100283878) ^ 0xAE)) ^ byte_1001CE730[byte_1001CB460[(-35 * ((qword_100282DD0 + dword_100283878) ^ 0xAE))] ^ 0xFB])
                - 176);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = (uint64_t)*(&off_100233720
                + (byte_1001CEA30[byte_1001CB660[(-35 * ((qword_100282DD0 - v1) ^ 0xAE))] ^ 0x13] ^ (-35 * ((qword_100282DD0 - v1) ^ 0xAE)))
                - 26);
  unint64_t v3 = (unint64_t)&v7[*(void *)(v2 - 4) ^ v1];
  uint64_t v4 = 2121524189 * v3 + 0x5BDF866B682B5252;
  unint64_t v5 = 2121524189 * (v3 ^ 0xA420799497D4ADAELL);
  *(void *)(v0 - 4) = v4;
  *(void *)(v2 - 4) = v5;
  LOBYTE(v5) = -35 * ((v5 - *(_DWORD *)(v0 - 4)) ^ 0xAE);
  uint64_t v8 = (uint64_t)*(&off_100233720
                + (byte_1001D6378[~byte_1001D15A0[v5] - 8] ^ v5)
                - 80);
  unsigned int v9 = 1451 - 1759421093 * ((&v8 & 0xEE36C9AC | ~(&v8 | 0xEE36C9AC)) ^ 0xA2B48607);
  LOBYTE(v0) = -35 * ((*(_DWORD *)(v2 - 4) - *(_DWORD *)(v0 - 4)) ^ 0xAE);
  return (*((uint64_t (**)(uint64_t *))*(&off_100233720
                                                + ((-35
                                                                                 * ((qword_100282DD0 + dword_100283878) ^ 0xAE)) ^ byte_1001CE730[byte_1001CB460[(-35 * ((qword_100282DD0 + dword_100283878) ^ 0xAE))] ^ 0x28])
                                                + 15)
          + (v0 ^ byte_1001CEA30[byte_1001CB660[v0] ^ 0x13])
          + 2120))(&v8);
}

uint64_t sub_10001C500(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v7 = ((v4 - 637542969) & 0xFFFDBDEF ^ (a3 - 235)) + *(unsigned __int8 *)(a2 + 6);
  return (*(uint64_t (**)(void))(v3 + 8 * ((1405 * ((v5 & (2 * v7)) + (v7 ^ v6) == v6)) ^ v4)))();
}

void sub_10001C558(uint64_t a1)
{
  int v1 = 1178560073 * ((-2 - ((a1 | 0xAE85A791) + (~a1 | 0x517A586E))) ^ 0xEBEE200C);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10001C5F4@<X0>(unint64_t a1@<X1>, unsigned int a2@<W2>, int a3@<W4>, int a4@<W7>, unsigned int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  int v37 = v33 + a3;
  int v38 = v33 + v32;
  int v39 = v33 + 1;
  BOOL v41 = v28 > v25;
  int v40 = *(_DWORD *)(a21 + 4 * (v39 + a3)) ^ (v21 + (a4 ^ v26) * v24 - 202);
  unint64_t v42 = HIDWORD(v36)
      + a5 * (unint64_t)(*(_DWORD *)(*v34 + 4 * (v39 + a3)) ^ v21)
      + ((v40 + (a2 ^ HIDWORD(v22)) + v27 - (v29 & (2 * (v40 + (a2 ^ HIDWORD(v22)))))) ^ a1);
  *(_DWORD *)(a21 + 4 * v37) = v42 + v21 - (v23 & (2 * v42));
  if (v41 != v38 < -1858469996) {
    BOOL v43 = v41;
  }
  else {
    BOOL v43 = v38 < v35;
  }
  return (*(uint64_t (**)(void))(v30 + 8 * ((!v43 * v31) ^ a4)))();
}

uint64_t sub_10001C6B0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, unint64_t *a4, int a5, uint64_t a6, unint64_t *a7, int a8, unint64_t *a9, char a10, int a11)
{
  uint64_t v14 = *(void *)(v11 + 8);
  unsigned int v15 = 1755732067 * (((&a4 | 0x444B705B) - (&a4 | 0xBBB48FA4) - 1145794652) ^ 0x9A8DCD80);
  a4 = &STACK[0x72E1645BEBB64013];
  a10 = (99 * (((&a4 | 0x5B) - (&a4 | 0xA4) - 92) ^ 0x80)) ^ 0x7F;
  a6 = v14;
  a7 = &STACK[0x5C6940C6B1BC7041];
  a9 = &STACK[0x102FB98998D77CE5];
  a5 = ((a1 ^ 0x7A6DCF2E) - 536871828 + ((2 * a1) & 0x7E6D6FEE ^ 0xA2461A2)) ^ v15;
  a8 = v15 + v13 + 526;
  uint64_t v16 = (*(uint64_t (**)(unint64_t **))(v12 + 8 * (v13 ^ 0xAE5)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v12 + 8 * ((454 * (a11 == ((30 * (v13 ^ 0x200)) ^ 0x81659968))) ^ v13)))(v16);
}

uint64_t sub_10001C7F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  return (*(uint64_t (**)(void))(v20 + 8 * ((178 * (a20 == 690734867)) ^ 0x215)))();
}

uint64_t sub_10001C834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  BOOL v17 = v13 - 2021721559 > v14 + 1046296188 || v13 - 2021721559 < a13 - 1101187191;
  return (*(uint64_t (**)(void))(v15 + 8 * ((44 * v17) ^ v14)))();
}

uint64_t sub_10001C8A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,int a40)
{
  return (*(uint64_t (**)(void))(v42
                              + 8
                              * ((((LODWORD(STACK[0x44C]) ^ (v40 + 1037) ^ (((v41 ^ 0x5EE) + 448) | 4)) == a40 - 308883872)
                                * ((((v41 ^ 0x5EE) + 448) ^ 0x644) - 585)) | v41 ^ 0x5EE)))();
}

uint64_t sub_10001C8F8@<X0>(int a1@<W8>)
{
  int v4 = v2 ^ 0x23A;
  unsigned int v5 = ((((v2 ^ 0x23A) + 451) | 0x80) ^ 0x8957BEFF) + v1;
  BOOL v6 = a1 + 644337125 < v5;
  if ((a1 + 644337125) < 0x8B6DF933 != v5 < 0x8B6DF933) {
    BOOL v6 = v5 < 0x8B6DF933;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((1851 * v6) ^ v4)))();
}

uint64_t sub_10001C978()
{
  LODWORD(STACK[0x614]) = v0;
  return sub_10001F298();
}

uint64_t sub_10001C994@<X0>(uint64_t a1@<X5>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  *(_DWORD *)(v52 + 360) = 1740498125;
  uint64_t v55 = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t *, unint64_t, void, uint64_t, unint64_t *, unint64_t *))(v53 + 8 * (((a2 - 428) | 0x40D) ^ 0xCFA)))(v51, 2, &STACK[0x41C], STACK[0x4B8], (v50 - 544568610), a1, &STACK[0x410], &STACK[0x5BC]);
  int v58 = ((2 * v55) & 0xFFDEB7FA) + (v55 ^ 0xFFEF5BFD);
  if (v58 == 267344896)
  {
    LODWORD(STACK[0x50C]) = 2124071464;
    goto LABEL_6;
  }
  uint64_t v59 = LODWORD(STACK[0x3F4]);
  if (v58 != -1090563)
  {
    int v60 = 1178560073 * (((v54 - 200) & 0xE6D2436E | ~((v54 - 200) | 0xE6D2436E)) ^ 0xA3B9C4F3);
    *(void *)(v54 - 192) = a49;
    *(_DWORD *)(v54 - 200) = v60 + v58 - 2 * (((_BYTE)v58 - 1) & 2 ^ (v58 + 1090563) & a48) - 2122957549;
    *(_DWORD *)(v54 - 196) = v59 - v60 + 486;
    (*(void (**)(uint64_t))(v53 + 8 * ((int)v59 + 1183)))(v54 - 200);
LABEL_6:
    JUMPOUT(0x100011AA8);
  }
  STACK[0x378] = STACK[0x410];
  LODWORD(STACK[0x350]) = STACK[0x5BC];
  STACK[0x288] = v49 + 2304;
  uint64_t v61 = (HIDWORD(a48) + 734412724) & 0xD439BEFB;
  LODWORD(STACK[0x42C]) = 603127476;
  uint64_t v62 = (char *)&STACK[0x660] + STACK[0x3C0] - 0x5A748F8B1FDC580ALL;
  unint64_t v63 = STACK[0x3C0] + v61 + 3901;
  STACK[0x380] = v63;
  STACK[0x510] = v63;
  *(void *)uint64_t v62 = 0x6370646600;
  v62[8] = 1;
  STACK[0x398] = (unint64_t)(v62 + 9);
  STACK[0x208] = (unint64_t)v62;
  STACK[0x388] = (unint64_t)&v62[((16 * ((_BYTE)v62 - 80) + 16) & 0x20) + 1728];
  LODWORD(STACK[0x3B0]) = 1349641998;
  int8x16_t v64 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, unint64_t *, unint64_t *, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 8 * (int)(((((v61 + 794) ^ 0x42D) == 32) * (3 * (v61 ^ 0x32) - 75)) ^ v61));
  STACK[0x3C0] = (unint64_t)*(&off_100233720 + (int)v61 - 144);
  STACK[0x3B8] = (unint64_t)*(&off_100233720 + (int)(v61 ^ 0xE8));
  return v64(v55, v56, v57, v59, 11, 91, 2124071625, 1270, &STACK[0x468], &STACK[0x4D4], &STACK[0x478], &STACK[0x5B8], a7, a8, a9, a10, a11, a12, a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           v49 + 2176,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

uint64_t sub_10001CB50()
{
  LODWORD(STACK[0x3A0]) = v0;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((v3 - 318) | 0x321) + 96)
                                * ((v1 - 1925353399 + ~(v2 + LODWORD(STACK[0x398]) - 1271275121)) > 2)) ^ v3)))();
}

uint64_t sub_10001CBD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  unsigned int v23 = (a20 ^ v21) - ((2 * (a20 ^ v21)) & 0x850F8A2C) - 1031289578;
  BOOL v24 = ((((v20 ^ 0x627) - 1488) ^ 0xB7D36F0D) & (2 * v23) ^ 0x85030A2C)
      + (v23 ^ ((v20 ^ 0x627) + 426666663))
      + 805306094 != 199865964;
  return (*(uint64_t (**)(void))(v22 + 8 * (((4 * v24) | (8 * v24)) ^ v20 ^ 0x627)))();
}

uint64_t sub_10001CC68@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((((v3 - 554) ^ 0xA6) * ((v2 - 1477598966) * (v1 - 1477598966) >= 0)) ^ v3)))();
}

uint64_t sub_10001CCA4()
{
  uint64_t v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * ((v0 ^ 0x7F2) + 1228)))(1576, 3012117910);
  STACK[0x558] = v2;
  return (*(uint64_t (**)(void))(v1 + 8 * (((v2 == 0) * (((v0 ^ 0x7F2) + 14) ^ 0x3F8)) ^ v0 ^ 0x7F2)))();
}

uint64_t sub_10001CCF8()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 ^ 0xD8C)))(200, 1616997413) == 0;
  return (*(uint64_t (**)(void))(v0 + 8 * (((((v1 + 100) ^ v2) & 1) * (v1 - 1333)) ^ v1)))();
}

uint64_t sub_10001CD4C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8 * ((25 * (v2 == 46 * (v1 ^ 0x330) + 1238158104)) | v1)))(a1, 1272907385);
}

uint64_t sub_10001CD98(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))*(&off_10022EDF8 + ((1383 * (*(_DWORD *)(a2 + 4) == 544568611)) ^ 0x1DDu) - 1))();
}

uint64_t sub_10001CDD4()
{
  int v4 = v1 - ((v2 + 1077469385) & (2 * v0 + 1058346428)) - 5833359;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((58
                                * (((2 * v4) & 0x54FD5DAA ^ 0x40384528) + (v4 ^ (267 * (v2 ^ 0x45C) + 174250272)) != 712945365)) ^ v2)))();
}

uint64_t sub_10001CE80@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(*v2 + 4 * (v6 + v5)) = *(_DWORD *)(*v3 + 4 * (v6 + v5));
  return (*(uint64_t (**)(void))(a1 + 8 * (v4 ^ (32 * (v4 + v6 - 912 != v1)))))();
}

uint64_t sub_10001CEBC()
{
  BOOL v4 = v1[5] != 0x5CF1D1600198EA10 && (*v1 | v1[3]) != 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v4 * ((v0 + 49) ^ (v0 + 31))) ^ v0)))();
}

uint64_t sub_10001CF10(uint64_t a1)
{
  int v3 = (*(uint64_t (**)(void))(v1 + 18400))();
  if (v3 == 16) {
    unsigned int v4 = -42029;
  }
  else {
    unsigned int v4 = -42030;
  }
  if (v3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  (*(void (**)(uint64_t))(v1 + 17872))(a1);
  return v5;
}

uint64_t sub_10001CF48(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  *(void *)(a2 + v4) = *(void *)(v7 + v4);
  return (*(uint64_t (**)(void))(v8 + 8 * (((v5 == 0) * a4) ^ v6)))();
}

uint64_t sub_10001CF78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51
                                                              + 8
                                                              * ((63 * ((a51 & 0x23262D83) == 19)) ^ (LODWORD(STACK[0x3F4]) + 133))))(a1, 1026, 3705261682);
}

uint64_t sub_10001CFE8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v10 = v6 + v5;
  int v11 = v10 + v7;
  if ((v10 + v7) <= 0x40) {
    int v11 = v8;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((502 * (a5 - v10 >= (a1 + v11))) ^ 0x2E6u)))();
}

uint64_t sub_10001D044()
{
  LODWORD(STACK[0x534]) = v0;
  return sub_10005059C();
}

uint64_t sub_10001D064@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((*(_DWORD *)(a1 + 4 * (v3 + v5 + 1054)) == ((211 * (v2 ^ 0x711)) ^ (v1 + 1045)))
                                * ((v2 ^ 0x711) + 754)) ^ (v2 - 354))))();
}

uint64_t sub_10001D0B4(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v16 = v9;
  HIDWORD(v17) = a4 ^ v11;
  LODWORD(v17) = a4;
  int v18 = (v17 >> 27)
      + (a8 ^ v11)
      + ((v16 ^ v11 | a3 ^ v11) & (a7 ^ (v11 + v8 + 222 - 400)) | (v16 ^ v11) & (a3 ^ v11))
      + (*(_DWORD *)(v10 + 4 * (a6 + v14)) ^ v12);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v13 + 8 * ((290 * (a6 + 1 == v15 + 44)) ^ v8)))(a1, a2, v16, v18 - 2 * ((v18 + 119258332) & (v11 + 2) ^ v18 & 2u) - 1791209615);
}

void sub_10001D184(_DWORD *a1)
{
  unsigned int v1 = *a1 ^ (1225351577
            * ((-1431559688 - (a1 ^ 0x637B64C4 | 0xAAAC21F8) + (a1 ^ 0x637B64C4 | 0x5553DE07)) ^ 0x15B262D5));
  __asm { BRAA            X14, X17 }
}

uint64_t sub_10001D2BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v8 = a1 + 1;
  unsigned char *v2 = ((v3 + v8) ^ v5) * (v4 + v8);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v8 == 91) * v6) ^ v1)))();
}

uint64_t sub_10001D2C4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  BOOL v11 = v7 < v6;
  if (v11 == v8 + (v5 ^ a5) > v9) {
    BOOL v11 = v6 + v8 + 1 < v7;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * ((!v11 * a2) ^ v5)))();
}

uint64_t sub_10001D338(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((999 * ((v3 << (((v2 + 112) | a2) ^ (v2 + 119))) - v4 == -309924831)) ^ v2)))();
}

uint64_t sub_10001D384()
{
  STACK[0x568] = *(void *)(v1 + 8 * (LODWORD(STACK[0x3F4]) - 1020));
  return sub_10001B804(2037503917, STACK[0x378]);
}

uint64_t sub_10001D3A8(uint64_t a1)
{
  unsigned int v5 = *(_DWORD *)(v3 + 336);
  unsigned int v6 = ((65 * (v4 ^ 0x3A8)) ^ 0x6B6F7627) + (*(_DWORD *)(a1 + 4) ^ v1);
  if (v5 > 0x840E327C != v6 < 0x7BF1CD83) {
    BOOL v7 = v5 > 0x840E327C;
  }
  else {
    BOOL v7 = v5 + 2079444355 > v6;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((109 * !v7) ^ v4)))();
}

uint64_t sub_10001D42C(uint64_t a1, uint64_t a2)
{
  int v6 = **(unsigned __int8 **)(a2 + 8) - 42;
  return (*(uint64_t (**)(void))(v5 + 8 * ((1969 * ((v3 & (2 * v6)) + (v6 ^ (v2 + v4 - 100 - 275)) == v2)) ^ v4)))();
}

uint64_t sub_10001D470(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((((a4 - 997) ^ 0x44E) * (v4 == v6)) ^ (a4 - 959))))();
}

uint64_t sub_10001D4A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  LODWORD(STACK[0x42C]) = 603127196;
  LODWORD(STACK[0x4E4]) = 128;
  int v60 = 1178560073 * ((v59 - 980126009 - 2 * ((v59 - 200) & 0xC594778F)) ^ 0x7F000FED);
  *(void *)(v59 - 136) = v56;
  *(void *)(v59 - 128) = v56 + 0x9F59A823660A60;
  *(_DWORD *)(v59 - 176) = 857023711 - v60;
  *(void *)(v59 - 152) = 0;
  *(void *)(v59 - 144) = a48;
  *(void *)(v59 - 184) = v56 + 0x9F59A823660950;
  *(void *)(v59 - 192) = a56;
  *(_DWORD *)(v59 - 160) = (v57 + 520) ^ v60;
  *(void *)(v59 - 168) = 0;
  uint64_t v61 = (*(uint64_t (**)(uint64_t))(v58 + 8 * (v57 + 1396)))(v59 - 200);
  return (*(uint64_t (**)(uint64_t))(v58
                                            + 8
                                            * ((1156 * (*(_DWORD *)(v59 - 200) == (((v57 + 132) | 8) ^ 0x81659D1D))) ^ v57)))(v61);
}

uint64_t sub_10001D5B0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((60 * (v1 + 1 == v3 + 4)) ^ v0)))();
}

uint64_t sub_10001D67C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((62 * (v0 - v1 + 246837751 != ((v3 - 116) ^ 0xA1FA3747))) ^ (v3 - 197))))();
}

uint64_t sub_10001D710()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v4 + ((v2 + 775) ^ (v5 + 875)) + 2042) * (v0 - v1 == 346463668)) ^ v2)))();
}

uint64_t sub_10001D760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((*(_DWORD *)(v10 + 48 * (v7 + a6) + 36) == v7)
                                * (((v6 - v9 - 945) ^ (v9 - 1115)) + (v6 ^ 0x4E))) | v6)))();
}

uint64_t sub_10001D7B0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((198 * (a2 + 1 == v4 + 64)) ^ v2)))();
}

uint64_t sub_10001D868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20,uint64_t a21)
{
  int v25 = 535753261 * ((-577453405 - ((v24 - 144) | 0xDD94C2A3) + ((v24 - 144) | 0x226B3D5C)) ^ 0x289F3373);
  *(_DWORD *)(v24 - 120) = a20 + v25 + ((v21 - 315) ^ 0xC8A0FA3E);
  *(void *)(v24 - 128) = v23;
  *(_DWORD *)(v24 - 136) = (v21 + 1391) ^ v25;
  *(void *)(v24 - 144) = a21;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v22 + 8 * (v21 ^ 0xAD0)))(v24 - 144);
  return sub_10001D8FC(v26);
}

void sub_10001D8FC()
{
  *(_DWORD *)(v2 - 0x5CF1D1600198EA10) = v1;
  *(_DWORD *)(v0 + 64) = -2124048112;
}

uint64_t sub_10001D95C@<X0>(int a1@<W1>, char a2@<W2>, int a3@<W4>, int a4@<W5>, int a5@<W7>, int a6@<W8>)
{
  uint64_t v13 = (v7 + a4);
  *(unsigned char *)(v6 + v13) = *(unsigned char *)(v10 + v13) ^ ((v13 & 0xF) * v8) ^ *(unsigned char *)(*(void *)(v11 + 8 * (a6 & a5))
                                                                               + (v13 & 0xF)
                                                                               - 8) ^ *(unsigned char *)(*(void *)(v11 + 8 * (a6 ^ a1))
                                                                                               + (v13 & 0xF)
                                                                                               - 10) ^ *(unsigned char *)((v13 & 0xF) + *(void *)(v11 + 8 * (a6 ^ 0xF0)) + 3) ^ a2;
  return (*(uint64_t (**)(void))(v12 + 8 * ((((a6 ^ 0x68) + v7 - 210 == a3) * v9) ^ a6)))();
}

uint64_t sub_10001D964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t *a12, uint64_t a13, unsigned int a14, unsigned int a15, unsigned int a16, int a17)
{
  unsigned int v21 = ((2 * (&a12 & 0x74EAE90) - &a12 - 122597013) ^ 0xB427D316) * v20;
  a12 = &STACK[0x17594DE9181849F3];
  a13 = a11;
  a14 = v21 + 865305353;
  a15 = v21 + v19 + 2138963021;
  a16 = 1590290646 - v21;
  uint64_t v22 = (*(uint64_t (**)(unint64_t **))(v18 + 8 * (v19 ^ 0x9C1)))(&a12);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * (((a17 == v17) * ((v19 ^ 0x394) + 1077)) ^ v19)))(v22);
}

uint64_t sub_10001DA2C(uint64_t a1, uint64_t a2)
{
  unsigned int v6 = (v2 + 1295326545) & 0xB2CADFEF;
  int v7 = (v6 + 702) | 1;
  (*(void (**)(void, uint64_t, void))(v4 + 8 * (int)(v6 ^ 0x99C)))(*v9, a2, (v7 ^ 0xDFCFAFF8) + v10);
  *(_DWORD *)(v5 - 200) = (v7 + 426521980) ^ (535753261
                                            * ((((v5 - 200) | 0x4329BB53) + (~(v5 - 200) | 0xBCD644AC)) ^ 0x49DDB57D));
  uint64_t result = (*(uint64_t (**)(uint64_t))(v4 + 8 * (v7 + 1225)))(v5 - 200);
  *(_DWORD *)(v3 + 36) = v11;
  return result;
}

uint64_t sub_10001DB2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t *a9, uint64_t a10, uint64_t a11, unsigned int a12, unint64_t *a13, unint64_t *a14)
{
  a12 = (v14 + 1389) ^ (1374699841
                      * (((&a12 | 0xE00B99D5) - &a12 + (&a12 & 0x1FF46628)) ^ 0x8DFF81DC));
  a13 = &STACK[0xC9996988DE51A2];
  a14 = a9;
  (*(void (**)(unsigned int *))(v15 + 8 * (v14 ^ 0xB89)))(&a12);
  a12 = (v14 + 1389) ^ (1374699841
                      * ((((2 * &a12) | 0x79F8E202) - &a12 + 1124306687) ^ 0xD1086908));
  a13 = &STACK[0xC9996988DE51A6];
  a14 = a9;
  (*(void (**)(unsigned int *))(v15 + 8 * (v14 ^ 0xB89)))(&a12);
  a13 = a9;
  a12 = (v14 + 815) ^ (1755732067
                     * ((&a12 - 1810180175 - 2 * (&a12 & 0x941AD7B1)) ^ 0x4ADC6A6A));
  uint64_t v16 = (*(uint64_t (**)(unsigned int *))(v15 + 8 * (v14 ^ 0xBD4)))(&a12);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((27 * (a14 == v14 - 2124048880)) ^ v14)))(v16);
}

void sub_10001DCA0()
{
}

uint64_t sub_10001DCAC()
{
  int v4 = *v3 + 450545239;
  BOOL v5 = v0 + 450545239 < (int)((v2 + 164) ^ 0xF2ED211B);
  int v6 = v5 ^ (v4 < -219339443);
  BOOL v7 = v0 + 450545239 > v4;
  if (!v6) {
    BOOL v5 = v7;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((88 * v5) ^ v2)))();
}

uint64_t sub_10001DD10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v5
                                                                      + 8
                                                                      * ((28 * (v3 < ((v4 - 925) ^ v4 ^ 0x631 ^ 0x2C4u))) ^ v4)))(a1, a2, a3, 0);
}

uint64_t sub_10001DD4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v5.n128_u64[0] = 0xB6B6B6B6B6B6B6B6;
  v5.n128_u64[1] = 0xB6B6B6B6B6B6B6B6;
  v6.n128_u64[0] = 0x5B5B5B5B5B5B5B5BLL;
  v6.n128_u64[1] = 0x5B5B5B5B5B5B5B5BLL;
  return sub_10001DD84(758, 11, a3, (((v4 - 1793) ^ 0x1FFFFFEF6) & (v3 + 1)) + a3, v5, v6);
}

uint64_t sub_10001DD84@<X0>(unint64_t a1@<X0>, int a2@<W1>, int a3@<W8>, int8x16_t a4@<Q0>, int8x16_t a5@<Q1>)
{
  *(int8x16_t *)(v7 + (v5 + a3 + v6)) = vaddq_s8(vsubq_s8(*(int8x16_t *)(v10 + v6), vandq_s8(vaddq_s8(*(int8x16_t *)(v10 + v6), *(int8x16_t *)(v10 + v6)), a4)), a5);
  return (*(uint64_t (**)(void))(v11 + 8 * ((((v8 ^ 0x3E0u ^ a1) + v6 != v9) * a2) ^ v8)))();
}

void sub_10001DDCC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 32) ^ (1225351577 * ((-2 - ((a1 | 0x21ABC784) + (~a1 | 0xDE54387B))) ^ 0xFDCEE06D));
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10001DEC0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((42 * (v1 - a1 < (unint64_t)((524 * (v2 ^ 0xD5)) ^ 0x229u) - 1005)) ^ v2)))();
}

uint64_t sub_10001DF04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v11 + 8 * (((((v8 ^ a8) + 452) ^ v10) * (v9 == 63)) ^ v8)))();
}

uint64_t sub_10001DF2C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (v0 ^ (79 * (v1 != 0x35E59282)))))();
}

uint64_t sub_10001DF74()
{
  return 4294925273;
}

void sub_10001DF80()
{
  int v0 = (uint64_t *)*(&off_100233720
                  + ((-35 * ((qword_100282DD0 + dword_100283868) ^ 0xAE)) ^ byte_1001CE730[byte_1001CB460[(-35 * ((qword_100282DD0 + dword_100283868) ^ 0xAE))] ^ 0x28])
                  + 46);
  uint64_t v1 = (uint64_t)*(&off_100233720
                + (byte_1001CE730[byte_1001CB460[(-35
                                                                                                * (*v0 ^ qword_100282DD0 ^ 0xAE))] ^ 0x5B] ^ (-35 * (*v0 ^ qword_100282DD0 ^ 0xAE)))
                + 37);
  unint64_t v2 = (*(void *)(v1 - 4) + *v0) ^ (unint64_t)&v8;
  uint64_t v3 = 2121524189 * (v2 + 0x5BDF866B682B5252);
  unint64_t v4 = 2121524189 * (v2 ^ 0xA420799497D4ADAELL);
  uint64_t *v0 = v3;
  *(void *)(v1 - 4) = v4;
  LOBYTE(v4) = -35 * ((v4 + *(_DWORD *)v0) ^ 0xAE);
  *(_DWORD *)*(&off_100233720
             + (byte_1001D6470[byte_1001D16AC[v4 - 12] ^ 0x74] ^ v4)
             + 21) = -2124048112;
  int v5 = (char *)*(&off_100233720
               + ((-35 * (dword_100283868 ^ 0xAE ^ qword_100282DD0)) ^ byte_1001CE730[byte_1001CB460[(-35 * (dword_100283868 ^ 0xAE ^ qword_100282DD0))] ^ 0x5B])
               + 93)
     - 8;
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))&v5[8
                                                      * ((-35
                                                                         * (*(_DWORD *)v0 ^ 0xAE ^ *(_DWORD *)(v1 - 4))) ^ byte_1001CE730[byte_1001CB460[(-35 * (*(_DWORD *)v0 ^ 0xAE ^ *(_DWORD *)(v1 - 4)))] ^ 0xFB])
                                                      + 16368])(512, 1509315540);
  unsigned __int8 v7 = -35 * (*(_DWORD *)v0 ^ 0xAE ^ *(_DWORD *)(v1 - 4));
  *(void *)*(&off_100233720 + (byte_1001D17AC[(byte_1001CE93C[v7 - 12] ^ 0xF4) - 12] ^ v7) - 158) = v6;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10001E1D8()
{
  return sub_10001E230();
}

void sub_10001E230(int a1@<W8>)
{
  uint64_t v4 = *(void *)(v2 - 0x6C0C7F2AED40EE91);
  unsigned int v5 = *v1 - 1533631348;
  *(unsigned char *)(v4 + v5) = (HIBYTE(a1) ^ 0x9C) - ((2 * (HIBYTE(a1) ^ 0x9C)) & 0xB6) + 91;
  *(unsigned char *)(v4 + v5 + 1) = (BYTE2(a1) ^ 0xBA) - ((2 * (BYTE2(a1) ^ 0xBA)) & 0xB6) + 91;
  *(unsigned char *)(v4 + v5 + 2) = (BYTE1(a1) ^ 0xC2) - 2 * ((BYTE1(a1) ^ 0xC2) & 0xDF ^ BYTE1(a1) & 4) + 91;
  *(unsigned char *)(v4 + v5 + 3) = a1 ^ 0x1D;
  uint64_t v6 = *(void *)(v2 - 0x6C0C7F2AED40EE91);
  int v7 = v3 - ((2 * v3 + 45857670) & 0xBC81BF6) - 1891505218;
  unsigned int v8 = ((2 * (*v1 - 1533631344)) & 0xFEB8FF3E) + ((*v1 - 1533631344) ^ 0xFF5C7F9F) + 10715233;
  *(unsigned char *)(v6 + v8) = (HIBYTE(v7) ^ 5) - ((2 * (HIBYTE(v7) ^ 5)) & 0xB6) + 91;
  *(unsigned char *)(v6 + v8 + 1) = (BYTE2(v7) ^ 0xE4) - ((2 * (BYTE2(v7) ^ 0xE4)) & 0xB6) + 91;
  *(unsigned char *)(v6 + v8 + 2) = (BYTE1(v7) ^ 0xD) - ((2 * (BYTE1(v7) ^ 0xD)) & 0xB6) + 91;
  *(unsigned char *)(v6 + v8 + 3) = (v3 - ((2 * v3 - 122) & 0xF6) - 66) ^ 0xA0;
  *uint64_t v1 = v9;
}

uint64_t sub_10001E3C4()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((4092
                                * ((((((v2 ^ 0x6E0) - 2021) | 0xA2) + 983965638) ^ (2
                                                                                  * (v1 - (v3 & 0x3AA7AC80) + 492033600)) & 0x3BFE62BC)
                                 + ((v1 - (v3 & 0x3AA7AC80) + 492033600) ^ 0x40ACE71E)
                                 + ((((v2 ^ 0x6E0) - 1740) | 0x82) ^ 0xEBB7FF4B) == 1236742230)) ^ v2 ^ 0x6E0)))();
}

void sub_10001E464()
{
}

uint64_t sub_10001E4E8()
{
  uint64_t v6 = *(void *)(v9 + 24);
  int v7 = 1224239923 * ((((2 * (v5 - 144)) | 0x2E7FBCC4) - (v5 - 144) + 1757421982) ^ 0x658C23B5);
  *(_DWORD *)(v5 - 128) = v7 + v3 + 35;
  *(_DWORD *)(v5 - 144) = v7 ^ 0x559E456E;
  *(void *)(v5 - 136) = v10;
  (*(void (**)(uint64_t))(v4 + 8 * (v3 ^ 0x9F6)))(v5 - 144);
  *(void *)(v5 - 104) = v0;
  *(void *)(v5 - 144) = v1;
  *(void *)(v5 - 136) = v10;
  *(_DWORD *)(v5 - 112) = v3 + 1224239923 * (((v5 - 144) & 0x45084053 | ~((v5 - 144) | 0x45084053)) ^ 0x4844427B) + 323;
  *(void *)(v5 - 128) = v0;
  *(void *)(v5 - 120) = v2;
  (*(void (**)(uint64_t))(v4 + 8 * (v3 ^ 0x9BE)))(v5 - 144);
  *(_DWORD *)(v5 - 128) = v3 + 1374699841 * ((v5 - 144) ^ 0x6DF41809) + 1553;
  *(void *)(v5 - 144) = v0;
  *(void *)(v5 - 136) = v6;
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * (v3 + 1921)))(v5 - 144);
}

uint64_t sub_10001E630@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((464
                                * (((((v2 + 2) ^ (2 * a1))
                                   + ((v5 - 1849686884) & 0x6E3FF7E5 ^ v4)
                                   - (v2 & (2 * ((v2 + 2) ^ (2 * a1))))) ^ (v4 + 129)) > v1)) ^ v5)))();
}

uint64_t sub_10001E688@<X0>(uint64_t a1@<X8>)
{
  int v8 = *(unsigned __int8 *)(v1 + (v3 + v5)) ^ 0x5B;
  int v9 = ((((v2 - 23) | 9) ^ 0x56 ^ *(unsigned char *)(v1 + (v3 + v5 + 2))) << 16) | ((*(unsigned __int8 *)(v1 + (v3 + v5 + 3)) ^ 0x5B) << 24) | v8 | ((*(unsigned __int8 *)(v1 + (v3 + v5 + 1)) ^ 0x5B) << 8);
  *(_DWORD *)(a1 + ((v3 + v5) & 0xFFFFFFFC)) = v9 + v7 - 2 * (v9 & (v4 + 4) ^ v8 & 4);
  return (*(uint64_t (**)(void))(v6 + 8 * ((152 * ((v3 + 4 + v5) > 0x3F)) ^ v2)))();
}

_DWORD *sub_10001E734(_DWORD *result)
{
  *uint64_t result = -772798391;
  return result;
}

uint64_t sub_10001E740@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  *(int8x16_t *)(a5 + (v29 + v31)) = vaddq_s8(vsubq_s8(*v33, vandq_s8(vaddq_s8(*v33, *v33), v35)), v34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 8 * ((1174 * (((a9 + 1209777117) & 0xB7E44373 ^ 0x202) == ((v30 + 1) & 0x1FFFFFFF0))) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_10001E7C4(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(v2
                                                    + 8
                                                    * (((*(_DWORD *)(v3 - 0x6C0C7F2AED40EE85) - 120779723 == (v1 ^ 0xBC) - 313)
                                                      * (v1 - 308)) ^ v1)))(a1, *(void *)(v3 - 0x6C0C7F2AED40EE91));
}

uint64_t sub_10001E830()
{
  int v4 = v3 ^ 0x385;
  BOOL v5 = v2 + 863980604 > (v0 + 577524324);
  if ((v0 + 577524324) < 0x56253DF6 != v2 + 863980604 < ((v4 - 789285498) & 0x2F0B8C7Bu) + 1445279110) {
    BOOL v5 = v2 + 863980604 < ((v4 - 789285498) & 0x2F0B8C7Bu) + 1445279110;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * (!v5 | v4)))();
}

uint64_t sub_10001E8C0()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((58 * (STACK[0x5C8] != 0)) ^ (v0 + 330))))();
}

uint64_t sub_10001E8FC@<X0>(unsigned int a1@<W8>)
{
  uint64_t v3 = a1;
  uint64_t v4 = a1 - 1575261667;
  if ((unint64_t)(v4 + 1) > 0x38) {
    uint64_t v5 = v4 + 1;
  }
  else {
    uint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((198
                                * (v5 - v3 + 1575261667 >= ((v1 - 470) | 0x400u)
                                                         - 3221572066
                                                         + (unint64_t)((v1 - 2147418384) | 0x40044430u))) ^ v1)))();
}

uint64_t sub_10001E980()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * (((v0 == 0x7DF6693392685679) * (((v1 - 1614660875) & 0x603DBEAD) - 63)) ^ v1)))();
}

uint64_t sub_10001E9D8(int8x16_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7, int a8, int a9)
{
  uint64_t v13 = a9 - 32 + (a5 ^ (v10 + 1249));
  int8x16_t v14 = *(int8x16_t *)(v9 + v13 - 15);
  int8x16_t v15 = *(int8x16_t *)(v9 + v13 - 31);
  uint64_t v16 = v11 + v13;
  *(int8x16_t *)(v16 - 15) = veorq_s8(v14, a1);
  *(int8x16_t *)(v16 - 31) = veorq_s8(v15, a1);
  return (*(uint64_t (**)(void))(v12 + 8 * (((a6 != 32) * a8) ^ a7)))();
}

uint64_t sub_10001E9E4()
{
  STACK[0x4D8] = v0;
  return sub_10004AA44();
}

uint64_t sub_10001E9F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  uint64_t v45 = (v43 + 1404329541) & 0xAC4BA59F;
  unint64_t v46 = STACK[0x598];
  unint64_t v47 = STACK[0x558];
  unint64_t v48 = STACK[0x348];
  STACK[0x3B8] = (unint64_t)&STACK[0x660] + STACK[0x348] + v45 - 0x5A748F8B1FDC6607;
  STACK[0x3B0] = a43 + v48 + v45;
  STACK[0x3C0] = v47;
  int v49 = v45 ^ 0x1E3;
  int v50 = v45 + 867;
  if (v46) {
    BOOL v51 = v47 == 0;
  }
  else {
    BOOL v51 = 1;
  }
  int v52 = v51;
  return (*(uint64_t (**)(void))(v44 + 8 * ((v52 * (v49 - 1506)) | v50)))();
}

uint64_t sub_10001EAA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((((a6 + 366840573) & 0x1E22814F ^ 0x520) * (v6 == a5)) ^ (a6 + v7))))();
}

uint64_t sub_10001EAE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((13 * ((v7 ^ ((v5 + a5) < 0x38)) & 1)) ^ (v7 + 214))))();
}

uint64_t sub_10001EB1C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((134 * (v1 == ((v0 - 1242555228) & 0x4A0FE5FD ^ (v3 + 1037)))) ^ v0)))();
}

uint64_t sub_10001EB64()
{
  BOOL v4 = (*(uint64_t (**)(void, uint64_t))(v2 + 8 * (v1 + 142)))((((v1 + 894004162) & 0xCAB68E88 ^ (v3 - 469)) + ((v1 - 643571936) & 0x265C1BFF)) ^ v0, 1523128792) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((174 * v4) ^ v1)))();
}

uint64_t sub_10001EBE4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(*(void *)(a2 + 96) + 468) = *(unsigned char *)(*(void *)(a1 + 8) + 12);
  return (*(uint64_t (**)(void))(v2 + 584))(0);
}

void sub_10001EC40(_DWORD *a1)
{
  uint64_t v9 = (char *)a1 + v3;
  unsigned int v10 = v4 + v2;
  v9[4] = v8;
  int v11 = v1 + v7 + 637690953 + v2;
  int v12 = v6 + v2;
  *a1 = v12 - 1143830261;
  uint64_t v13 = a1 + 1;
  *((unsigned char *)v13 + v10) = v5;
  *((unsigned char *)v13 + (v11 - 300603633)) = 110;
  *((unsigned char *)v13 + (v12 - 2082124426)) = 124;
  *((unsigned char *)v13 + (v12 - 2082124425)) = 63;
  JUMPOUT(0x10003C24CLL);
}

uint64_t sub_10001ECB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return sub_10002C814(v6 + a6 + 775);
}

uint64_t sub_10001ECD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * (int)(((a7 + ((v14 - 59258957) & 0xC38D777E) - 145)
                                     * ((unint64_t)(a13 + v13 - v15) > 0xF)) ^ v14)))();
}

void sub_10001ED30()
{
}

uint64_t sub_10001ED3C()
{
  int v4 = 628203409 * ((~((v3 - 200) | 0x4ECF7A27) + ((v3 - 200) & 0x4ECF7A27)) ^ 0x33B889EB);
  *(_DWORD *)(v3 - 184) = v0 - v4 + 822;
  *(_DWORD *)(v3 - 180) = v1 - v4 + 323188336;
  unint64_t v5 = STACK[0x358];
  *(void *)(v3 - 200) = STACK[0x368];
  *(void *)(v3 - 192) = v5;
  unint64_t v6 = STACK[0x360];
  *(void *)(v3 - 176) = STACK[0x370];
  *(void *)(v3 - 160) = STACK[0x3A0];
  *(void *)(v3 - 152) = v6;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 + 1891)))(v3 - 200);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 8 * (((*(_DWORD *)(v3 - 168) == -2124048112) * (((v0 ^ 0x566) - 743) ^ 0x848)) ^ v0)))(v7, 48, 3646422062, LODWORD(STACK[0x3F4]), 11, 1029, 2124071625, 1270);
}

void sub_10001EE2C()
{
}

uint64_t sub_10001EF9C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v1 - 1839) | 0x445) ^ 0x42F) * (v0 == 64)) ^ v1)))();
}

uint64_t sub_10001EFD4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((a1 - v4 + 1128468129) & 0xBCBCEDDF ^ (v5 + 809))
                                     * ((v1 ^ 0x292BC717) == v2 - 1991031269)) ^ a1)))();
}

uint64_t sub_10001F034@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v8 = (a1 - 1844463353) & 0x6DF046BD;
  uint64_t v9 = v4 - v6 + (v8 ^ 0x16B ^ (v3 + 718));
  *(void *)(v2 - 7 + v9) = *(void *)(a2 - 7 + v9);
  return (*(uint64_t (**)(void))(v7 + 8 * ((77 * (((v8 ^ 0xFFFFFB61) & v5) - v6 != 8)) ^ v8)))();
}

uint64_t sub_10001F0AC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v1 == 1990337085) ^ (v0 + 41)) & 1) * (((v0 - 1942) | 0x82) ^ 0xB1)) ^ v0)))();
}

uint64_t sub_10001F0F8()
{
  return 4294925278;
}

uint64_t sub_10001F100(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v5
                                                             + 8
                                                             * (((v4 + v6 - 1 < (v3 + 495 + v2))
                                                               * (v3 - 151)) ^ v3)))(a1, a2, (v3 + 860));
}

uint64_t sub_10001F134@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23
                                                              + 8
                                                              * ((2368
                                                                * ((((a1 - 319) ^ 0xFFFFFE50 ^ (13 * (a1 ^ 0x161))) & v22) == 355747424)) ^ a1)))(3939219872, 237, a22);
}

uint64_t sub_10001F1A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  STACK[0x338] = v7;
  LODWORD(STACK[0x534]) = a7 + 54;
  return sub_10005059C();
}

uint64_t sub_10001F1BC(double a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  unsigned int v25 = v20 - 16;
  uint64_t v26 = (v19 - 445) & v25;
  v28.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), v23).u64[0];
  v28.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)a5.n128_u64, v23).u64[0];
  int8x16_t v29 = vrev64q_s8(vmulq_s8(v28, v24));
  *(int8x16_t *)(a16 + v25) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v18 + v26 - 15), *(int8x16_t *)(a14 + v25)), veorq_s8(*(int8x16_t *)(v17 + v26 + 3 - 15), *(int8x16_t *)(v16 + v26 + 3 - 15))), vextq_s8(v29, v29, 8uLL));
  return (*(uint64_t (**)(void))(v22 + 8 * ((15 * (v21 == 16)) ^ a13)))();
}

uint64_t sub_10001F1C8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, int a7)
{
  *(void *)(a3 + (v7 + a7)) = *(void *)(v8 + (v7 + a7));
  return (*(uint64_t (**)(void))(v10 + 8 * (((v9 == a7) * a6) ^ a4)))();
}

uint64_t sub_10001F1F4(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((v4 - 961894067) & 0x395553DB ^ (v4 + 64840037) & 0xFC229BA2 ^ 0x5B)
                                     * (a3 == 1150037614)) ^ v4)))();
}

void sub_10001F270()
{
}

uint64_t sub_10001F278()
{
  return sub_10001F298();
}

uint64_t sub_10001F298()
{
  return (*(uint64_t (**)(void))(v1 + 8 * v0))();
}

uint64_t sub_10001F31C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v32 = v29 > 0x674D6AD8;
  unint64_t v33 = (*(_DWORD *)(a26 + a13) ^ v26) + HIDWORD(v30) + ((v27 >> (((a8 + 61) | 0xD0) ^ 0xF2u)) ^ a2);
  *(_DWORD *)(a26 + 4 * a14) = v33 + v26 - (v28 & (2 * v33));
  *(_DWORD *)(a26 + a13) = HIDWORD(v33) + v26 - ((v28 + 48) & (2 * HIDWORD(v33)));
  if (v32 == a23 - 1670279517 < -1733126873) {
    int v32 = a23 - 1670279517 < a18;
  }
  return (*(uint64_t (**)(void))(v31 + 8 * (a8 ^ ((v32 << 7) | (v32 << 10)))))();
}

uint64_t sub_10001F3E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned int a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned int a19)
{
  a17 = v23;
  a18 = v24;
  a16 = a11;
  a19 = (v19 + 500) ^ (1225351577 * ((&a15 & 0x80A09E46 | ~(&a15 | 0x80A09E46)) ^ 0x5CC5B9AF));
  (*(void (**)(unsigned int *))(v22 + 8 * (v19 ^ 0xDA7)))(&a15);
  a16 = v20;
  a17 = a11;
  a15 = (v19 + 780) ^ ((((&a15 | 0x351CB18C) - (&a15 & 0x351CB18C)) ^ 0x58E8A985) * v21);
  (*(void (**)(unsigned int *))(v22 + 8 * (v19 ^ 0xDE8)))(&a15);
  a16 = a11;
  a15 = (v19 + 206) ^ (1755732067
                     * (((&a15 | 0x1B4D8ED6) - &a15 + (&a15 & 0xE4B27128)) ^ 0xC58B330D));
  uint64_t v25 = (*(uint64_t (**)(unsigned int *))(v22 + 8 * (v19 ^ 0xDB5)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v22
                                            + 8 * ((250 * (a17 == ((v19 - 604) | 0x58) - 2124048973)) ^ v19)))(v25);
}

uint64_t sub_10001F548(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((26 * (v5 + 1 == v4 + 24)) | a3)))();
}

uint64_t sub_10001F60C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((39
                                * ((v6 & (2 * (*(unsigned __int8 *)(a2 + 7) - 100)))
                                 + ((*(unsigned __int8 *)(a2 + 7) - 100) ^ v7) == (a4 ^ 0x8E066177))) ^ v5)))();
}

uint64_t sub_10001F650(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)((((((unint64_t)(v3 - a1) < 0x20) ^ (a3 + 1)) & 1)
                                     * (v4 + ((a3 - 35664619) & 0x8FED7F7F) + 361)) ^ a3)))();
}

uint64_t sub_10001F6A0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1907
                                * ((((2 * (v0 ^ 0x5EE)) ^ 0x3C4) & v1) == (((v0 ^ 0x5EE) + 975545864) & 0xC5DA597F)
                                                                        - 363)) ^ v0 ^ 0x5EE)))();
}

uint64_t sub_10001F6FC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((1179 * ((a7 + 1 + v7) < 0x20)) ^ a2)))();
}

uint64_t sub_10001F7D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  return sub_100039E38(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, v28, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_10001F7DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                                           + 8
                                           * (((v5 < (((a5 ^ 0x5BA) + 108) ^ 0xABu)) * ((6 * (a5 ^ 0x5BA)) ^ 0xA6)) ^ a5)))(0);
}

uint64_t sub_10001F820()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((121 * (v2 == (((v1 - 611) | 2) ^ (v0 + 66)))) ^ v1)))();
}

uint64_t sub_10001F86C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2
                              + 8 * ((175 * (*(_DWORD *)(*(void *)(a1 + 8) + v4) != (v3 ^ 0x6CA) + 554 + v2)) ^ v3)))();
}

uint64_t sub_10001F8A4()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (v4 ^ (2
                                     * (((((v4 - 782269466) & 0x2EA07FFDu) - 1177 + v1) ^ *(_DWORD *)(*v2 + 4 * v5)) > (*(_DWORD *)(*v3 + 4 * v5) ^ (v1 + 492)))))))();
}

uint64_t sub_10001F900()
{
  return sub_10001F91C();
}

uint64_t sub_10001F91C@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)(v3 + (v1 + v6 + v2)) = *(_OWORD *)(a1 + v2);
  return (*(uint64_t (**)(void))(v7 + 8 * ((3064 * ((((v4 - 894) | 0x50u) ^ 0xC0) + v2 == v5)) ^ v4)))();
}

uint64_t sub_10001F960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v9 = v7 - ((2 * v7 - 1089137220) & (v6 - 2062580193)) - 1575858188;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                                  + 8 * ((95 * (((2 * v9) & 0xB7D36EFC ^ 0x85030A2C) + (v9 ^ 0x196E7268) + 805306094 == 199865964)) ^ (v6 + 31))))(a1, a2, a3, a4, 199865964, a6, 2124071625);
}

uint64_t sub_10001FA08@<X0>(int a1@<W1>, int a2@<W4>, int a3@<W5>, int a4@<W7>, uint64_t a5@<X8>)
{
  *(unsigned char *)(a5 + (a1 + a3)) = *(unsigned char *)(v5 + (a1 + a3));
  return (*(uint64_t (**)(void))(v7 + 8 * (((a1 - 1 == a2) * a4) ^ (v6 + 151))))();
}

uint64_t sub_10001FA3C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((((v2 - 1799) | 0x10) + 1706) ^ 0x980) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_10001FA70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v14 = *(_DWORD *)((char *)&STACK[0x2AC] + ((v12 + v8) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a8 + (v12 + v8 + 1)) = (BYTE2(v14) ^ 0x20) - ((v14 >> 15) & 0xB6) + 91;
  *(unsigned char *)(a8 + (v12 + v8)) = (HIBYTE(v14) ^ 6)
                                            - (((HIBYTE(v14) ^ 6) << (((v10 + 7) | 1) ^ 0x26)) & 0xB6)
                                            + 91;
  *(unsigned char *)(a8 + (v12 + v8 + 2)) = (BYTE1(v14) ^ 0x92)
                                                - 2 * ((BYTE1(v14) ^ 0x92) & 0xDF ^ BYTE1(v14) & 4)
                                                + 91;
  *(unsigned char *)(a8 + (v12 + v8 + 3)) = v14 ^ 0xCE;
  unsigned int v15 = LODWORD(STACK[0x308]) - 763035080;
  BOOL v16 = v15 < v9;
  BOOL v17 = v12 - 1323762677 < v15;
  if (v12 - 1323762677 < v9 != v16) {
    BOOL v17 = v16;
  }
  return (*(uint64_t (**)(void))(v13 + 8 * ((!v17 * v11) ^ v10)))();
}

uint64_t sub_10001FB74()
{
  return sub_10001FB7C();
}

uint64_t sub_10001FB7C(uint64_t a1, int8x16_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  unsigned int v47 = STACK[0x2F8];
  uint64_t v48 = LODWORD(STACK[0x2F8]);
  unsigned int v49 = STACK[0x2FC];
  int v50 = LOBYTE(STACK[0x30C]) ^ 0x22;
  HIDWORD(a23) = LOBYTE(STACK[0x30C]) ^ 0x22;
  if (v50 == 2)
  {
    HIDWORD(a25) = STACK[0x2F4];
    unint64_t v74 = __PAIR64__(v49, v47);
    LODWORD(a27) = STACK[0x300];
    uint64_t v75 = *(void *)(v44 + 8 * v39);
    int8x16x4_t v77 = vld4q_s8(v41);
    uint64_t v61 = LODWORD(STACK[0x304]);
    HIDWORD(a21) = STACK[0x304];
    uint8x16_t v62 = (uint8x16_t)veorq_s8(v77.val[1], a2);
    _Q22 = vmovl_u8(*(uint8x8_t *)v62.i8);
    _Q21 = vmovl_high_u8(v62);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    int8x16_t v67 = (_DWORD *)(v42 + 4 * (v45 + 108174694));
    int v68 = *(v67 - 8) ^ *(v67 - 3);
    int v69 = v68 + v43 - (v40 & (2 * v68));
    int v70 = *(v67 - 16) ^ *(_DWORD *)(v42 + 4 * ((a29 ^ 0x3D6) + 108174694));
    uint64_t v71 = v70 ^ v69 ^ 0x1659910u;
    HIDWORD(v72) = v70 ^ v69 ^ 0x1659910;
    LODWORD(v72) = v70 ^ ~v69;
    *int8x16_t v67 = (v72 >> 31) + v43 - (v40 & (2 * (v72 >> 31)));
    uint64_t v73 = *(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 8 * ((1974 * (v46 == 108174631)) ^ 0x306u));
    return v73(a1, v61, v73, v71, a6, v48, 774, 23435536, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             v74,
             a27,
             v75,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39);
  }
  else
  {
    if (v50 != 1) {
      JUMPOUT(0x100020030);
    }
    HIDWORD(a25) = STACK[0x2F4];
    LODWORD(a27) = STACK[0x300];
    int8x16x4_t v76 = vld4q_s8(v41);
    uint64_t v51 = (a5 + a8 - 325);
    uint8x16_t v52 = (uint8x16_t)veorq_s8(v76.val[2], a2);
    _Q26 = vmovl_high_u8(v52);
    _Q25 = vmovl_u8(*(uint8x8_t *)v52.i8);
    __asm
    {
      SHLL2           V25.4S, V25.8H, #0x10
      SHLL2           V26.4S, V26.8H, #0x10
    }
    uint64_t v59 = (char *)*(&off_100233720 + (int)(v51 ^ 0xF)) - 4;
    return (*(uint64_t (**)(uint64_t, char *, void, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 8 * (int)((1938 * (a1 + 1 == v46)) ^ v51)))(a1, v59, *(&off_100233720 + (int)v51 + 64), v51, a6, v48, a1 + 1, *(unsigned int *)&v59[4 * a1 + 4 * v45], a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             __PAIR64__(v49, v47),
             a27,
             *(void *)(v44 + 8 * v39),
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39);
  }
}

void sub_10001FFD0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21)
{
  LODWORD(STACK[0x304]) = (a3 ^ v22)
                        + (a21 ^ v22)
                        - (v23 & (2 * ((a3 ^ v22) + (a21 ^ v22))))
                        + ((v21 - 167461684) ^ 0xF0242DB2);
  JUMPOUT(0x10002002CLL);
}

uint64_t sub_1000200B8(uint64_t a1, uint64_t a2)
{
  *(void *)(v6 - 220 + v4 + a2) = 0x5B5B5B5B5B5B5B5BLL;
  return (*(uint64_t (**)(void))(v5 + 8 * ((93 * ((v2 ^ 0x88u) - 1836 == (v3 & 0xFFFFFFFFFFFFFFF8))) ^ v2)))();
}

uint64_t sub_100020104@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((30 * (*(_DWORD *)(a1 + 1424) == (((17 * (v1 ^ 0x5D3) + 507) | 0x60) ^ 0x72C289DF))) ^ v1)))();
}

uint64_t sub_100020148@<X0>(int a1@<W1>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((118
                                * (((((v2 - 919780125) ^ 0xC92D4146) + 806508008) ^ (v2 - 919780125) & 0xF6D7FDF7) + a2 >= a2 + a1)) ^ v2)))();
}

uint64_t sub_1000201A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  BOOL v9 = v5 < a5;
  unint64_t v10 = v7 - 0x64C68B1F422D5CELL + ((v6 + 672334697) & 0xD7ECFC96);
  int v11 = v9 ^ (v10 < a5);
  BOOL v12 = v10 < v5;
  if (!v11) {
    BOOL v9 = v12;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((!v9 * (v6 - 98)) | (v6 + 1265))))();
}

uint64_t sub_100020224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, int a13, unint64_t *a14, int a15)
{
  unsigned int v19 = 1755732067
      * ((-1379875697 - (&a11 | 0xADC0C48F) + (&a11 | 0x523F3B70)) ^ 0x8CF986AB);
  a14 = &STACK[0x3EEC7284B8A20CB7];
  a15 = v19 ^ 0x52C3C792;
  a11 = &STACK[0x6A4735A87A2643E5];
  a12 = v17;
  a13 = (v18 + 1108) ^ v19;
  uint64_t v20 = (*(uint64_t (**)(unint64_t **))(v16 + 8 * (v18 ^ 0x847)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((792
                                              * (*(_DWORD *)(v17 - 0x6C0C7F2AED40EE79) == (((v18 ^ 0x2E1) + 379) ^ (v15 + 410)))) ^ v18)))(v20);
}

uint64_t sub_100020320(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (int)((((a3 - 40766347) & 0xE6EEEE5F ^ (v4 + 822)) * (v3 == a2)) ^ a3)))();
}

uint64_t sub_100020360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7
                                                              + 8
                                                              * (((v6 + 990 + (v6 ^ 0x2CD) - 1503) * (v4 == v5)) | v6)))(a1, 3885300798, a4);
}

uint64_t sub_1000203A0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                                           + 8
                                           * ((2035 * (a1 + v3 + 864 < ((v2 - 2116581985) & 0x7E287EF5u) + v1)) ^ v2)))(((v2 + 850) ^ 0xFFFFFA81) + v3);
}

void sub_1000203F4(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0xC9996988DE5192) = v1 + 1;
  JUMPOUT(0x10000FBC4);
}

uint64_t sub_100020410()
{
  return (*(uint64_t (**)(void))(v1
                              + 8 * (((*(void *)(v0 - 0x6C0C7F2AED40EE91) != 0) * ((v2 ^ 0x2CA) - 1460)) ^ v2)))();
}

uint64_t sub_100020460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (a5 ^ ((32 * ((unint64_t)(v5 - a1) < 0x20)) | (((unint64_t)(v5 - a1) < 0x20) << 6)))))();
}

uint64_t sub_100020490@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)(((((((v2 - 2088505515) & 0x7C7C0BE9 ^ 0xA7EDA0E2) + v1) * (v3 - 1477598966)) >> 31)
                                     * ((244 * (v2 ^ 0x6AB)) ^ 0x74)) ^ v2)))();
}

void sub_1000204F4()
{
}

uint64_t sub_100020508(uint64_t a1, uint64_t a2, unsigned int a3, int a4, int a5, int a6)
{
  BOOL v16 = a3 > 0x54BBBE2F;
  unint64_t v17 = a1 - 0x1819CFCC1817BFAELL + (v9 ^ 0xB1E9C2C5) + v12 * (unint64_t)(*(_DWORD *)(*v11 + 4 * a4) ^ v9);
  *(_DWORD *)(v14 + 4 * v15) = v9
                             + 139 * (v13 ^ 0x1C4)
                             + v17
                             - ((v17 << ((v13 - 77) ^ 0x75)) & 0x63D3858A)
                             - 695;
  if (v16 == a4 + 725893585 < a5) {
    BOOL v16 = a4 + 725893585 < a6;
  }
  return (*(uint64_t (**)(unint64_t))(v7 + 8 * (v13 ^ ((2 * !v16) | (16 * !v16)))))((v6 ^ HIDWORD(v17)) + (v8 & (v17 >> 31)) + v10);
}

uint64_t sub_100020514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v19 - 128) = a14;
  *(_DWORD *)(v19 - 120) = v14
                         + ((((v19 - 136) | 0x2274F5C9) - (v19 - 136) + ((v19 - 136) & 0xDD8B0A30)) ^ 0x98E08DAB) * v18
                         - 148;
  *(void *)(v19 - 112) = v15;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (v14 ^ 0xFA1)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * ((3890
                                              * ((v16 + v14 - 1713 + *(_DWORD *)(v19 - 136) - 105) < 0xD6DE2CF4)) ^ v14)))(v20);
}

uint64_t sub_1000205B4()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((3 * (v0 ^ 0x10C)) ^ 0x492) + ((v0 - 249) | 0x299)) * (v1 == v2)) ^ v0)))();
}

uint64_t sub_1000205F4(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((11 * (((a2 - 1784) | 0x42C) ^ 0x48C)) ^ 0x7A3) * (v2 != v3)) ^ a2)))();
}

uint64_t sub_100020634(uint64_t a1, uint64_t a2)
{
  int v6 = **(unsigned __int8 **)(a2 + 8) - 42;
  return (*(uint64_t (**)(void))(v5
                              + 8 * ((611 * (((v3 + 503 * (v4 ^ 0x110) - 1509) & (2 * v6)) + (v6 ^ v2) == v2)) ^ v4)))();
}

uint64_t sub_100020684(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((504 * (v8 + ((a8 - 335) ^ a4) < (((a8 - 905) | 0x2A0) ^ 0xFFFFFC1D))) ^ a8)))();
}

uint64_t sub_1000206C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  uint64_t v15 = v9 + a7 + (a6 ^ 0x62Du) - 1472;
  *(unsigned char *)(v14 + v15) = *(unsigned char *)(v12 + (v15 & 0xF)) ^ *(unsigned char *)(v7 + v15) ^ *(unsigned char *)(v11 + (v15 & 0xF) + 3) ^ *(unsigned char *)(v10 + (v15 & 0xF) + 3) ^ (-45 * (v15 & 0xF));
  return (*(uint64_t (**)(void))(v13 + 8 * (((2 * (a7 - 1 != v8)) | (16 * (a7 - 1 != v8))) ^ (a6 + 698))))();
}

uint64_t sub_100020738(uint64_t result)
{
  unint64_t v1 = 235795823 * ((~result & 0x2A1D36B9A93A3D3 | result & 0xFD5E2C94656C5C2CLL) ^ 0xA1169950E3EEA8ALL);
  int v2 = *(_DWORD *)(result + 4) + v1;
  unint64_t v3 = *(void *)(result + 16) ^ v1;
  int v4 = *(_DWORD *)(result + 28) - v1;
  int v5 = *(_DWORD *)(result + 8) ^ v1;
  unint64_t v6 = *(void *)(result + 32) - v1;
  int v7 = *(_DWORD *)result ^ v1;
  BOOL v8 = v6 == v3;
  BOOL v9 = v6 > v3;
  if (v4) {
    BOOL v8 = v9;
  }
  if (v8) {
    int v7 = v2;
  }
  *(_DWORD *)(result + 40) = v5 ^ v7;
  return result;
}

uint64_t sub_1000207CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v29 = *(_DWORD *)(a1 + 44) - 1755732067 * (((a1 | 0xCC66703E) - (a1 | 0x33998FC1) + 865701825) ^ 0x12A0CDE5);
  unsigned int v30 = 1178560073 * ((1711956306 - (&v36 | 0x660A6152) + (&v36 | 0x99F59EAD)) ^ 0x2361E6CF);
  unsigned int v36 = -2035249205 - v30;
  int v37 = &STACK[0x35FF68D50C8F436B];
  int v38 = v29 - v30 + 1172345372;
  (*((void (**)(unsigned int *))*(&off_100233720 + v29 + 83) + (v29 ^ 0x8E2) - 1))(&v36);
  return sub_100033708(3939219872, 237, v31, 871, v32, (uint64_t)v35, 182, (uint64_t)&v34, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_100020A98@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  unsigned int v5 = ((*(_DWORD *)(*(void *)(v2 - 0x9F59A8236606B8) + 4 * v3) ^ 0xB1E9C2C5) >> a2) ^ (2
                                                                                            * (((v4 - 202) | 0xCB) ^ 0x39E)
                                                                                            - 780093814);
  unsigned int v6 = -2 - ((~(v5 & 0xF28B99A2) | 0x4B852ACF) + (v5 & 0x42810882 | 0xB47AD530));
  *(_DWORD *)(result + 4) = (((2 * (v5 & 0xF28B99A3 ^ 0x9B05B3EF ^ v6)) & 0x35BB30D6)
                           - (v5 & 0xF28B99A3 ^ 0x9B05B3EF ^ v6)
                           - 450730092) ^ 0x49CF366B;
  return result;
}

uint64_t sub_100020B5C()
{
  int v4 = 535753261
     * ((((2 * ((v3 - 200) ^ 0x7B5C7D10)) | 0x39AB4DA6) - ((v3 - 200) ^ 0x7B5C7D10) - 483763923) ^ 0x6D7DD5EC);
  *(_DWORD *)(v3 - 192) = v1 - v4 + 809;
  *(void *)(v3 - 184) = STACK[0x238];
  *(void *)(v3 - 160) = STACK[0x240];
  *(_DWORD *)(v3 - 176) = LODWORD(STACK[0x22C]) ^ v4;
  *(_DWORD *)(v3 - 168) = v0 - v4 + ((v1 + 926) ^ 0x199) - 1472917967;
  *(void *)(v3 - 200) = STACK[0x230];
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v1 ^ 0x977)))(v3 - 200);
  int v6 = *(_DWORD *)(v3 - 172);
  LODWORD(STACK[0x534]) = v6;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((390 * (v6 == -2124048112)) ^ v1)))(v5);
}

uint64_t sub_100020C44()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v2 - 518) | 0x23) ^ (v2 - 1133359636) & 0x438DB581 ^ 0x14B) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_100020C94(uint64_t a1, uint64_t a2, unsigned int a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  *(void *)(v10 + a3) = *(void *)(v9 + a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, void, void))(v7 + 8 * (((a4 == 0) * v8) ^ a7)))(a1, a2, a3 - 8, (a4 + 8));
}

uint64_t sub_100020CC4@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W5>, int a4@<W6>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,unsigned int a40)
{
  unsigned int v44 = a2 ^ ((*v42 & 0x7FFFFFFE | v42[623] & 0x80000000) >> 1);
  v42[623] = v42[396] ^ a4 ^ *(_DWORD *)(v43
                                       - 160
                                       + 4 * ((((a5 + 1082187408) | 0x90B15C0) ^ (v41 - 1)) & *v42)) ^ (v44 + a1 - ((v44 << ((a5 + 88) & 0xF7 ^ (v41 - 1))) & a3));
  return (*(uint64_t (**)(void))(v40 + 8 * ((209 * (a40 < 0x270)) ^ a5)))();
}

uint64_t sub_100020D6C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((78 * ((5 * v1) + 4 == v3 + v0 + ((v2 - 439) | 0x409) - 1037)) ^ v2)))();
}

uint64_t sub_100020DB4()
{
  unsigned int v3 = v0 & 0xE3F7E767;
  BOOL v4 = ((2 * v1) & 0xDFBEBF92 ^ 0x4B8A2500) + (v1 ^ 0xDA3ACD4B) + (((v3 ^ 0x2A7) + 317) ^ 0x7CEFE0FD) != 1825523145;
  return (*(uint64_t (**)(void))(v2 + 8 * (int)(((2 * v4) | (8 * v4)) ^ v3)))();
}

uint64_t sub_100020E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((87 * (v6 == a5 + ((a6 + 1866956543) & 0x4B88F7F) - 562 - 332)) ^ (v7 + a6 + 477))))();
}

uint64_t sub_100020E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(*(void *)(a8 + 96) + 1568) = 1;
  BOOL v10 = *(_DWORD *)(a8 + 72) == ((((v8 - 1409286733) & 0x5FFFF5FF) + 529173716) ^ v8 ^ (a6 + 180));
  return (*(uint64_t (**)(void))(v9 + 8 * (((4 * v10) | (32 * v10)) ^ v8)))();
}

uint64_t sub_100020EDC@<X0>(int a1@<W3>, int a2@<W8>)
{
  *((unsigned char *)&STACK[0x2AC] + (v2 + a2)) = 91;
  return (*(uint64_t (**)(void))(v4 + 8 * ((1415 * ((v2 - 297100029) < 0x40)) | (a1 + v3 + 174))))();
}

uint64_t sub_100020F2C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned int a23)
{
  return (*(uint64_t (**)(void))(v24
                              + 8
                              * ((243
                                * (((a23 - 351) ^ (a2 + 858)) + v23 < v23
                                                                    - 965375269
                                                                    + ((a23 - 1778087256) | 0x60002C03))) ^ a23)))();
}

uint64_t sub_100020F94()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((*(void *)(v0 + 8) == 0x5248BA885C210B04)
                                     * (((10 * (v1 ^ 0x6B1)) ^ 0xFFFFF83E) + ((v1 + 41089314) & 0xFD8D07B7))) ^ v1)))();
}

uint64_t sub_100021000@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W3>, int a4@<W4>, int a5@<W5>, int a6@<W6>, uint64_t a7@<X8>)
{
  unsigned int v9 = ((2 * (a6 + 563)) & 0xBDCE6B6A) + ((a6 + 563) ^ 0x5EE735B5) - 1592210869;
  int v10 = ((*(unsigned __int8 *)(v8 + v9) ^ a2) << 24) | ((*(unsigned __int8 *)(v8 + v9 + 1) ^ a2) << 16) | ((*(unsigned __int8 *)(v8 + v9 + 2) ^ a2) << 8);
  int v11 = *(unsigned __int8 *)(v8 + v9 + 3) ^ a2;
  return (*(uint64_t (**)(uint64_t, void))(a7
                                                    + 8
                                                    * (((((a3 ^ 0x40000562) & a4) == 0) * ((319 * (a3 ^ 0x567)) ^ 0x622)) | a3)))(a1, (v10 | v11) + v7 - 2 * ((v10 | v11) & a5 ^ v11 & 1u));
}

uint64_t sub_1000210BC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8 * ((245 * (v5 + 1 == v4 + 48)) ^ v2)))(a1, a2);
}

uint64_t sub_1000211AC()
{
  int v2 = (char *)&STACK[0x660] + v0 - 0x5A748F8B1FDC618ALL;
  *(_DWORD *)int v2 = 423212695;
  *((void *)v2 + 1) = 0;
  *((_DWORD *)v2 + 4) = 1775030612;
  *((_DWORD *)v2 + 6) = 544568610;
  *((void *)v2 + 4) = 0;
  *((_DWORD *)v2 + 10) = 544568610;
  STACK[0x4F0] = (unint64_t)(v2 + 40);
  *((void *)v2 + 6) = 0;
  *((_DWORD *)v2 + 14) = 544568610;
  STACK[0x5B0] = (unint64_t)(v2 + 48);
  STACK[0x488] = (unint64_t)(v2 + 56);
  *((void *)v2 + 8) = 0;
  STACK[0x588] = (unint64_t)(v2 + 64);
  *((_DWORD *)v2 + 18) = 544568610;
  *((void *)v2 + 10) = 0;
  STACK[0x5C0] = (unint64_t)(v2 + 72);
  STACK[0x450] = (unint64_t)(v2 + 80);
  v2[88] = 41;
  *(_DWORD *)uint64_t v1 = 423212695;
  *(_OWORD *)(v1 + 4) = 0u;
  *(_DWORD *)(v1 + 28) = 938294164;
  STACK[0x2C0] = v1 + 28;
  *(_DWORD *)(v1 + 232) = 938294164;
  STACK[0x2B8] = v1 + 232;
  *(_DWORD *)(v1 + 20) = 0;
  *(_DWORD *)(v1 + 24) = 544568610;
  *(_OWORD *)(v1 + 436) = 0u;
  *(_OWORD *)(v1 + 452) = 0u;
  *(void *)(v1 + 468) = 0;
  strcpy((char *)(v1 + 1128), "[[[[[[[[[[[[[[[[[[[[");
  *(unsigned char *)(v1 + 1149) = 0;
  *(_WORD *)(v1 + 1150) = 0;
  *(void *)(v1 + 1152) = 0;
  *(void *)(v1 + 1160) = 0;
  return sub_1000212D8();
}

uint64_t sub_1000212D8@<X0>(uint64_t a1@<X8>)
{
  int v7 = (_OWORD *)(v2 + a1);
  _OWORD *v7 = 0u;
  v7[1] = 0u;
  return (*(uint64_t (**)(__n128))(v6 + 8 * ((254 * (((v1 + v5) & v3 ^ v4) + a1 == 256)) ^ v1)))((__n128)0);
}

uint64_t sub_100021318(uint64_t a1, int a2, int a3, char a4, char a5)
{
  int v12 = v9 + 4;
  unsigned int v13 = *(_DWORD *)(v8 + ((v12 - 185082509) & 0xFFFFFFFC));
  *(unsigned char *)(v7 + (v12 - 185082509)) = v13 ^ v10;
  *(unsigned char *)(v7 + (v12 - 185082508)) = (BYTE1(v13) ^ 0x92)
                                                   - ((((v13 >> 8) ^ 0xFFFFFF92) << (((v6 + a4) & a5) - 12)) & 0xB6)
                                                   + 91;
  *(unsigned char *)(v7 + (v12 - 185082507)) = (BYTE2(v13) ^ 0x20) + (~(v13 >> 15) | 0x49) + 92;
  *(unsigned char *)(v7 + (v12 - 185082506)) = (HIBYTE(v13) ^ 6) - ((2 * (HIBYTE(v13) ^ 6)) & 0xB6) + 91;
  unsigned int v14 = *v5 + a3;
  BOOL v15 = v14 < 0xA8466DF8;
  BOOL v16 = v12 + a2 < v14;
  if ((v12 + a2) < 0xA8466DF8 != v15) {
    BOOL v16 = v15;
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((4 * v16) | (32 * v16) | v6)))();
}

void sub_100021320()
{
  _DWORD *v0 = *(_DWORD *)(v1 - 0x6C0C7F2AED40EE79);
}

uint64_t sub_100021374@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, uint64_t a19, uint64_t a20,int a21)
{
  unsigned int v30 = &a21 + 6 * v22;
  v30[2] = v23;
  v30[3] = v27;
  *((void *)v30 + 2) = v29;
  v30[6] = a18;
  a21 = v21 + 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8 * (((*(_DWORD *)(v28 + 48 * v24 + 32) + ((v26 + a9 - 144) ^ 0x5FDFBABFu) < a7) * (a9 + 1459)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11);
}

uint64_t sub_1000213E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  *(void *)(a4 + v6) = *(void *)(v5 + v6);
  return (*(uint64_t (**)(void))(v8 + 8 * (((v7 == 0) * v4) ^ a3)))();
}

uint64_t sub_100021414(int a1, __n128 a2)
{
  uint64_t v8 = v2 + 16;
  *(__n128 *)(v6 + v8) = a2;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v8 - 1436 == (((v3 - 785) | v4) ^ v5)) * a1) ^ v3)))();
}

uint64_t sub_10002141C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void, void))(v4 + 8 * ((((((8 * a3) ^ 0x1CB0) & v3) == 0) * (a3 + 443)) ^ a3)))((8 * a3) ^ 0x18E0u, (a3 + 35));
}

void sub_100021458()
{
  int v3 = 1178560073 * ((((v2 - 200) | 0x625A42C) - (v2 - 200) + ((v2 - 200) & 0xF9DA5BD0)) ^ 0xBCB1DC4E);
  *(void *)(v2 - 192) = STACK[0x578];
  *(_DWORD *)(v2 - 184) = 1172345424 - v3 + v0 + 8;
  *(_DWORD *)(v2 - 200) = -2035249205 - v3;
  (*(void (**)(uint64_t))(v1 + 8 * (v0 + 2266)))(v2 - 200);
  STACK[0x568] = *(void *)(v1 + 8 * v0);
  JUMPOUT(0x10001B7F8);
}

uint64_t sub_100021504(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  HIDWORD(v17) = a4 ^ v11;
  LODWORD(v17) = a4;
  int v18 = (v17 >> 27)
      + (v8 ^ v11)
      + (*(_DWORD *)(v10 + 4 * (a6 + v15)) ^ v12)
      + ((v9 ^ v11) & (a5 ^ (v11 + 43 * (a8 ^ 0x586) - 172)) | (a3 ^ v11) & (a5 ^ 0xF9DF6D6A));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t))(v14
                                                                               + 8 * ((50 * (a6 + 1 != v16 + 4)) ^ a8)))(a1, a2, v9, v18 - ((2 * v18 + 84210482) & v13) + 1621298222, a4);
}

uint64_t sub_1000215E0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  BOOL v16 = v13 > 0x3024FBE5;
  *(_DWORD *)(a11 + 4 * (v11 + a1)) = *(_DWORD *)(*(void *)(v14 - 0x9F59A8236606B8) + 4 * (v11 + a1));
  if (v16 == v11 + 419219131 < -807730150) {
    BOOL v16 = v11 + 419219131 < (int)(v13 + 1339753498);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8 * ((7 * !v16) ^ (v12 - 880))))(3082, 3335, 419219131, 3487237146);
}

uint64_t sub_100021690@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8 * ((2360 * (*(_DWORD *)STACK[0x3B0] - 1117964708 < (a1 - 347))) ^ a1)))();
}

uint64_t sub_1000216D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 + 249 + ((v6 - 388) | 0x102) + 389) * (v5 == a5)) ^ v6)))();
}

uint64_t sub_100021710@<X0>(int a1@<W1>, int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v8 = (a2 - v3);
  int8x16_t v9 = vrev64q_s8(*(int8x16_t *)(a3 + v8 - 15));
  int8x16_t v10 = vextq_s8(v9, v9, 8uLL);
  int8x16_t v11 = vrev64q_s8(*(int8x16_t *)(a3 + v8 - 31));
  int8x16_t v12 = vextq_s8(v11, v11, 8uLL);
  uint64_t v13 = v6 + v8;
  v14.i64[0] = 0xB6B6B6B6B6B6B6B6;
  v14.i64[1] = 0xB6B6B6B6B6B6B6B6;
  v15.i64[0] = 0x5B5B5B5B5B5B5B5BLL;
  v15.i64[1] = 0x5B5B5B5B5B5B5B5BLL;
  int8x16_t v16 = vrev64q_s8(vaddq_s8(vsubq_s8(v10, vandq_s8(vaddq_s8(v10, v10), v14)), v15));
  *(int8x16_t *)(v13 - 15) = vextq_s8(v16, v16, 8uLL);
  int8x16_t v17 = vrev64q_s8(vaddq_s8(vsubq_s8(v12, vandq_s8(vaddq_s8(v12, v12), v14)), v15));
  *(int8x16_t *)(v13 - 31) = vextq_s8(v17, v17, 8uLL);
  return (*(uint64_t (**)(void))(v7 + 8 * ((((v5 ^ a1) + v3 == 1325) * v4) ^ v5)))();
}

uint64_t sub_10002179C@<X0>(uint64_t a1@<X8>)
{
  unsigned int v5 = 1755732067
     * (((v7 | 0x39868463) - v7 + (v7 & 0xC6797B98)) ^ 0xE74039B8);
  v7[0] = (v3 - ((((v2 + 236502702) & 0xF1E747D3) - 1770405284) & (v4 - 80040724)) + 1222261645) ^ v5;
  v7[1] = (v2 + 954) ^ v5;
  uint64_t v8 = v1;
  return (*(uint64_t (**)(_DWORD *))(a1 + 8 * (v2 ^ 0x857)))(v7);
}

uint64_t sub_100021870@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  _DWORD *v2 = a2;
  *(_DWORD *)(result + 16) = 2124071461;
  return result;
}

uint64_t sub_100021884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  int v52 = 460628867 * ((v51 + 1125807436 - 2 * ((v51 - 200) & 0x431A7614)) ^ 0xF8CF469);
  *(void *)(v51 - 144) = 0;
  *(void *)(v51 - 200) = 0;
  *(void *)(v51 - 192) = a17;
  *(void *)(v51 - 168) = a49;
  *(void *)(v51 - 160) = a47;
  *(void *)(v51 - 176) = STACK[0x3B0];
  *(_DWORD *)(v51 - 152) = v52 + 1343640984;
  *(_DWORD *)(v51 - 184) = v52 + v49 + 1389;
  uint64_t v53 = (*(uint64_t (**)(uint64_t))(v50 + 8 * (v49 + 2024)))(v51 - 200);
  int v54 = *(_DWORD *)(v51 - 136);
  LODWORD(STACK[0x61C]) = v54;
  return (*(uint64_t (**)(uint64_t))(v50 + 8 * ((1594 * (v54 == (v49 ^ 0x81659DDD ^ v49 ^ 0x4CD))) ^ v49)))(v53);
}

uint64_t sub_10002197C@<X0>(int a1@<W8>)
{
  int v5 = 1374699841 * ((~((v4 - 144) | 0x16B4FC58) + ((v4 - 144) & 0x16B4FC58)) ^ 0x84BF1BAE);
  *(_DWORD *)(v4 - 128) = a1 - v5;
  *(_DWORD *)(v4 - 144) = (v2 - 1034) ^ v5;
  *(void *)(v4 - 136) = v3;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v2 + 475)))(v4 - 144);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (int)(((*(_DWORD *)(v4 - 140) != 2087569631)
                                                   * (((v2 + 268) | 0x20) + (v2 ^ 0xFFFFFF45))) ^ v2)))(v6);
}

uint64_t sub_100021A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  int v33 = v29 + v28;
  unsigned int v34 = v33 + ((v30 + 111) | 0x40) - 767;
  if (v34 <= 0x40) {
    unsigned int v34 = 64;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 8 * ((52 * (v31 + v34 + 62 <= (((v30 ^ 0x792) - 1409) ^ (v33 - 63)))) ^ v30)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_100021A88()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((123 * ((v0 & 0x1F ^ 0x17) == ((v1 + 1185) ^ (v1 + 732) ^ 0x2FB))) ^ v1)))();
}

uint64_t sub_100021ACC@<X0>(int a1@<W4>, int a2@<W7>, int a3@<W8>)
{
  int v6 = 3 * (a2 ^ 0x4F2);
  uint64_t v7 = (((v6 - 1189) | 0x173) ^ 0xB007070C) + a1;
  *(unsigned char *)(v4 + v7) = *(unsigned char *)(v5 + v7);
  return (*(uint64_t (**)(void))(v3 + 8 * (((32 * (a1 - 1 != a3)) | ((a1 - 1 != a3) << 6)) ^ v6)))();
}

uint64_t sub_100021B20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_10004C040(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_100021B4C@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + (v7 + v3)) = *(unsigned char *)(v2 + (v7 + v3));
  return (*(uint64_t (**)(void))(v1 + 8 * (((v7 - 1 == v4) * v5) ^ v6)))(0);
}

uint64_t sub_100021B7C@<X0>(uint64_t a1@<X8>)
{
  unsigned int v3 = *(_DWORD *)(v1 - 0x6C0C7F2AED40EE81) - 286872037;
  unsigned int v4 = (((v2 - 1530) | 0x1C7) ^ 0x431D147B) + *(_DWORD *)(v1 - 0x6C0C7F2AED40EE85);
  int v5 = (v3 < 0x4A500987) ^ (v4 < 0x4A500987);
  BOOL v6 = v3 > v4;
  if (v5) {
    BOOL v6 = v3 < 0x4A500987;
  }
  return (*(uint64_t (**)(void))(a1 + 8 * ((938 * !v6) ^ v2)))();
}

uint64_t sub_100021C18(int a1, int8x8_t a2, int8x8_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v12 = (v8 - 8 + a1);
  int8x8_t v13 = vrev64_s8(*(int8x8_t *)(v10 + v12));
  *(int8x8_t *)(a6 + v12) = vrev64_s8(vadd_s8(vsub_s8(v13, vand_s8(vadd_s8(v13, v13), a2)), a3));
  return (*(uint64_t (**)(void))(v11 + 8 * (((v9 == -8) * a8) ^ a5)))();
}

uint64_t sub_100021CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, unsigned int a14, uint64_t a15)
{
  a15 = a12;
  a14 = v16
      + 535753261 * ((((2 * &a13) | 0x64F0FE14) - &a13 + 1300726006) ^ 0xB88C7125)
      - 409;
  uint64_t v17 = (*(uint64_t (**)(char *))(v15 + 8 * (v16 + 1432)))(&a13);
  return sub_100021D50(v17);
}

uint64_t sub_100021D50()
{
  return v1 ^ v0;
}

uint64_t sub_100021D90@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61)
{
  unsigned int v69 = (((v65 | 0xFEC73C2B) - v65 + (v65 & 0x138C3D0)) ^ 0x6A6A7572) * v66;
  *(_DWORD *)(v68 - 200) = a1 ^ v69;
  *(_DWORD *)(v68 - 164) = v63 - v69 + 438;
  *(void *)(v68 - 184) = a60;
  *(void *)(v68 - 176) = a61;
  *(void *)(v68 - 192) = v61;
  uint64_t v70 = (*(uint64_t (**)(uint64_t))(v67 + 8 * (v63 + 2167)))(v68 - 200);
  int v71 = *(_DWORD *)(v68 - 168);
  STACK[0x4D8] = v62;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v67
                                                     + 8 * ((1992 * (v71 == v64 + ((v63 + 946) | 0xD) - 1037)) ^ v63)))(v70, 48);
}

uint64_t sub_100021E6C@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + (v7 + v3)) = *(unsigned char *)(v2 + (v7 + v3));
  return (*(uint64_t (**)(void))(v1 + 8 * (((v7 - 1 == v4) * v5) ^ v6)))(0);
}

uint64_t sub_100021E9C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((15 * ((v10 ^ a4 ^ a7 ^ v8 ^ (((v10 ^ a4) + 1443) | 0x80)) + v9 == 32)) ^ v10 ^ a4)))();
}

uint64_t sub_100021EFC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v3 + v0 - 895 - 15) | 0x500) ^ 0x5E6) * ((v1 & 0xFFFFFFFFFFFFFFFuLL) - 1 > 1)) ^ (v3 + v0 - 895 + 175))))();
}

uint64_t sub_100021F40(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)(((a3 + v3 + 63 < a3 + v3 + ((v4 + 633429376) & 0xDA3E9A9D) - 16)
                                     * (((v4 + 1226805752) & 0xB6E0679F) + 3671)) ^ v4)))();
}

uint64_t sub_100021FB4()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v2 + v1 + ((v0 + 604102902) & 0xDBFE1DCF) + 471071680 < 8)
                                * (((v0 - 1397) | 0x197) - 389)) ^ (v0 - 1072))))();
}

uint64_t sub_100022024@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((((a1 + 578) ^ 0x32E) - 269) ^ a1) * (v1 == 0)) ^ (a1 + 578))))();
}

uint64_t sub_100022060@<X0>(int a1@<W5>, int a2@<W8>)
{
  return sub_100048B9C(a1, a2);
}

uint64_t sub_100022098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v14 = (v11 + v7);
  unsigned int v15 = *(_DWORD *)(v13 - 220 + v14 + 72);
  *(unsigned char *)(a4 + (v14 + 1)) = (BYTE2(v15) ^ 0x20) - ((v15 >> 15) & 0xB6) + 91;
  *(unsigned char *)(a4 + v14) = (HIBYTE(v15) ^ 6) - (((HIBYTE(v15) ^ 6) << (v9 - a7 - 111)) & 0xB6) + 91;
  *(unsigned char *)(a4 + (v14 + 2)) = (BYTE1(v15) ^ 0x92)
                                           - 2 * ((BYTE1(v15) ^ 0x92) & 0xDF ^ BYTE1(v15) & 4)
                                           + 91;
  *(unsigned char *)(a4 + (v14 + 3)) = v15 ^ 0xCE;
  LODWORD(v14) = *(_DWORD *)(v13 - 128) - 776091731;
  BOOL v16 = v14 < v8;
  BOOL v17 = v11 - 1163310903 < v14;
  if (v11 - 1163310903 < v8 != v16) {
    BOOL v17 = v16;
  }
  return (*(uint64_t (**)(void))(v12 + 8 * ((v17 * v10) ^ v9)))();
}

uint64_t sub_10002217C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned int a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14)
{
  a11 = (uint64_t)&a8 + a1 + 4;
  a12 = a4;
  a10 = (v14 + 1275) ^ (((2 * (&a10 & 0x2EAC7FB8) - &a10 - 783056830) ^ 0xBCA7984B) * v15);
  uint64_t v17 = (*(uint64_t (**)(unsigned int *))(v16 + 8 * (v14 ^ 0xBFBu)))(&a10);
  return sub_1000158E4(v17, v18, v19, v20, v21, v22, v23, v24, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1000221EC@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  unsigned int v5 = v3 - 235671025;
  unsigned int v6 = (((v4 - 1255) | 0x401) ^ 0x8702CAEF) + v2;
  int v7 = v3 > 0xE0C0DF0;
  int v8 = v6 < 0xF1F3F20F;
  BOOL v9 = v5 < v6;
  if (v7 != v8) {
    BOOL v9 = v8;
  }
  if (v9) {
    int v10 = a2;
  }
  else {
    int v10 = a2 + 1;
  }
  *(_DWORD *)(result + 12) = v10;
  return result;
}

uint64_t sub_100022250@<X0>(uint64_t a1@<X3>, uint64_t a2@<X5>, int a3@<W8>)
{
  int v7 = (unsigned __int8 *)(a1 + a2 + v5);
  int v8 = (((a3 - 1252) ^ *v7) << 24) | ((v7[1] ^ 0x5B) << 16) | ((v7[2] ^ 0x5B) << 8);
  *(_DWORD *)(v3 + ((a2 + v5) & 0xFFFFFFFFFFFFFFFCLL)) = (v8 | v7[3] ^ 0x5B)
                                                       + v6
                                                       - 2 * ((v8 | v7[3] ^ 0x5B) & 0x1659911 ^ (v7[3] ^ 0x5B) & 1);
  return (*(uint64_t (**)(void))(v4 + 8 * ((121 * ((unint64_t)(a2 + 4 + v5) > 0x3F)) ^ a3)))();
}

uint64_t sub_1000222E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,unsigned int a56,uint64_t a57,int a58,int a59,int a60,int a61,int a62)
{
  *(_DWORD *)(v65 - 120) = a59 ^ 0xBF938254;
  *(_DWORD *)(v65 - 132) = a61 ^ 0x80C4D191;
  *(_DWORD *)(v65 - 124) = a62 ^ 0xE7D867C7;
  *(_DWORD *)(v65 - 128) = a60 ^ 0x5AA93050;
  int v66 = *(_DWORD *)(v65 - 116);
  uint64_t v67 = v62 & (v66 - 1019) ^ 0x45E632EDu;
  *(void *)(v65 - 168) = v67;
  LOBYTE(v67) = *(unsigned char *)(a48 + (*(unsigned __int8 *)(v64 + v67) ^ 0xF3));
  uint64_t v68 = v62 & 0xFFFFFFFE ^ 0x45E632E5;
  *(void *)(v65 - 144) = v68;
  uint64_t v69 = *(unsigned __int8 *)(v64 + v68) ^ 0x57;
  uint64_t v70 = v62 & 0xFFFFFFF5 ^ 0x45E632EF;
  *(void *)(v65 - 152) = v70;
  int v71 = ((*(unsigned char *)(a48 + v69) + 96) ^ 0xF6) << 16;
  int v72 = *(unsigned __int8 *)(a47 + (*(unsigned __int8 *)(v64 + v70) ^ 0xB6));
  uint64_t v73 = v62 & 0xFFFFFFFB ^ 0x45E632E5;
  *(void *)(v65 - 184) = v73;
  int v74 = (v72 ^ 0xD7) << 8;
  uint64_t v75 = *(unsigned __int8 *)(v64 + v73);
  int v76 = *(unsigned __int8 *)(a49 + (v75 ^ 0x9A));
  uint64_t v77 = v62 & 0xFFFFFFF8 ^ 0x45E632E7;
  *(void *)(v65 - 224) = v77;
  LODWORD(v75) = v76 ^ (v75 - ((2 * v75) & 0xB4) + 90);
  uint64_t v78 = *(unsigned __int8 *)(v64 + v77) ^ 0xD6;
  uint64_t v79 = v62 & 0xFFFFFFFD ^ 0x45E632E7;
  *(void *)(v65 - 216) = v79;
  LODWORD(v75) = *(unsigned __int8 *)(a46 + v78) ^ 0x8E | ((v75 ^ 0xFFFFFFCF) << 24);
  LODWORD(v78) = *(unsigned __int8 *)(a47 + *(unsigned __int8 *)(v64 + v79)) ^ 0xC5;
  uint64_t v80 = v62 & 0xFFFFFFFC ^ 0x45E632E7;
  *(void *)(v65 - 176) = v80;
  LODWORD(v78) = v71 | (v78 << 8);
  int v81 = *(unsigned __int8 *)(a46 + (*(unsigned __int8 *)(v64 + v80) ^ 0x74));
  uint64_t v82 = v62 & 0xFFFFFFF3 ^ 0x45E632ED;
  *(void *)(v65 - 160) = v82;
  int v83 = v78 | v81 ^ 0x4C;
  int v84 = *(unsigned __int8 *)(a49 + (*(unsigned __int8 *)(v64 + v82) ^ 0x6ELL)) ^ (*(unsigned __int8 *)(v64 + v82)
                                                                                - ((2 * *(unsigned __int8 *)(v64 + v82)) & 0xB4)
                                                                                + 90) ^ 0x51;
  uint64_t v85 = v62 ^ 0x45E632E5u;
  *(void *)(v65 - 200) = v85;
  int v86 = (((v67 ^ 2) + 96) << 16) | (v84 << 24);
  uint64_t v87 = *(unsigned __int8 *)(v64 + v85);
  int v88 = *(unsigned __int8 *)(a49 + (v87 ^ 0x15));
  uint64_t v89 = v62 & 0xFFFFFFF7 ^ 0x45E632ED;
  *(void *)(v65 - 256) = v89;
  *(_DWORD *)(v65 - 204) = 1172714221;
  int v90 = v83 | ((v88 ^ (v87 - ((2 * v87) & 0xB4) + 90) ^ 0xAE) << 24);
  unsigned int v91 = *(unsigned __int8 *)(a49 + (*(unsigned __int8 *)(v64 + v89) ^ 0x46)) ^ (*(unsigned __int8 *)(v64 + v89)
                                                                                - ((2 * *(unsigned __int8 *)(v64 + v89)) & 0xB4)
                                                                                + 90) ^ 0xFFFFFFE7;
  uint64_t v92 = v62 & 0xFFFFFFF1 ^ 0x45E632EF;
  *(void *)(v65 - 192) = v92;
  int v93 = v74 | (v91 << 24);
  uint64_t v94 = v62 & 0xFFFFFFFA ^ 0x45E632E5;
  int v95 = v86 | ((*(unsigned __int8 *)(a47 + (*(unsigned __int8 *)(v64 + v92) ^ 0xD5)) ^ 0x4D) << 8);
  uint64_t v96 = v62 & 0xFFFFFFF4 ^ 0x45E632EF;
  *(void *)(v65 - 248) = v96;
  *(void *)(v65 - 240) = v94;
  LODWORD(v75) = v75 & 0xFF00FFFF | (((*(unsigned char *)(a48 + (*(unsigned __int8 *)(v64 + v94) ^ 0x9DLL)) + 96) ^ 0xF7) << 16);
  LODWORD(v94) = *(unsigned __int8 *)(a46 + (*(unsigned __int8 *)(v64 + v96) ^ 0xC2)) ^ 0x69 | v93;
  uint64_t v205 = v62 & 0xFFFFFFF6 ^ 0x45E632ED;
  uint64_t v204 = v62 & 0xFFFFFFF9 ^ 0x45E632E7;
  unsigned __int8 v97 = *(unsigned char *)(a48 + (*(unsigned __int8 *)(v64 + v205) ^ 0x3ELL)) + 96;
  uint64_t v98 = *(unsigned __int8 *)(v64 + v204) ^ 0xA4;
  uint64_t v99 = v62 & 0xFFFFFFF0 ^ 0x45E632EF;
  *(void *)(v65 - 232) = v99;
  LODWORD(v94) = v94 & 0xFF00FFFF | ((v97 ^ 0xDF) << 16);
  int v203 = v75 | ((*(unsigned __int8 *)(a47 + v98) ^ 0x1D) << 8);
  uint64_t v100 = *(void *)(v63 + 8 * (int)a28) - 12;
  LODWORD(v67) = *(_DWORD *)(v100 + 4 * (((unsigned __int16)(v203 ^ a51) >> 8) ^ 0x21u)) ^ ((((unsigned __int16)(v203 ^ a51) >> 8) ^ 0x4C) + 75341168 - ((2 * (((v203 ^ a51) >> 8) ^ 0xB71C4C)) & 0xE0));
  LODWORD(v75) = v67 + 24759838 - ((2 * v67) & 0x2F39C3C);
  LODWORD(v98) = v90 ^ HIDWORD(a51) ^ 0x730032AA;
  uint64_t v101 = (uint64_t)*(&off_100233720 + HIDWORD(a28));
  LODWORD(v75) = v75 ^ *(_DWORD *)(v101 + 4 * ((v90 ^ BYTE4(a51)) ^ 0xAAu));
  int v202 = *(unsigned __int8 *)(a46 + (*(unsigned __int8 *)(v64 + v99) ^ 0x47)) ^ 0x4C | v95;
  unsigned int v102 = *(_DWORD *)(v100 + 4 * (((unsigned __int16)(a50 ^ v202) >> 8) ^ 0x3Au)) ^ ((((unsigned __int16)(a50 ^ v202) >> 8) ^ 0x57) + 75341169 + (~(2 * (((a50 ^ v202) >> 8) ^ 0xA4F257)) | 0xFFFFFF1F));
  unsigned int v103 = v102 - 52937263 - ((2 * v102) & 0xF9B07BA2);
  int v104 = v75 - 52937263 - ((2 * v75) & 0xF9B07BA2);
  v105 = (char *)*(&off_100233720 + v66 - 889) - 8;
  LODWORD(v75) = *(_DWORD *)&v105[4 * (((v94 ^ HIDWORD(a50)) >> 16) ^ 0x68)];
  HIDWORD(v106) = v75 ^ 0x850;
  LODWORD(v106) = v75 ^ 0x8B81000;
  LODWORD(v75) = v106 >> 12;
  int v107 = *(_DWORD *)&v105[4 * (BYTE2(v90) ^ BYTE6(a51))];
  HIDWORD(v106) = v107 ^ 0x850;
  LODWORD(v106) = v107 ^ 0x8B81000;
  v108 = (char *)*(&off_100233720 + SHIDWORD(a27)) - 12;
  int v109 = v103 ^ *(_DWORD *)&v108[4 * (((v203 ^ a51) >> 24) ^ 0xB7)] ^ (v106 >> 12);
  int v110 = *(_DWORD *)&v105[4 * (((a50 ^ v202) >> 16) ^ 0xF2)];
  HIDWORD(v106) = v110 ^ 0x850;
  LODWORD(v106) = v110 ^ 0x8B81000;
  int v111 = *(_DWORD *)(v101 + 4 * ((v203 ^ a51) ^ 0xFBu)) ^ (BYTE1(v94) ^ BYTE5(a50)) ^ *(_DWORD *)(v100 + 4 * ((BYTE1(v94) ^ BYTE5(a50)) ^ 0x23u)) ^ 0x5045320 ^ (v106 >> 12);
  int v112 = *(_DWORD *)&v105[4 * (((v203 ^ a51) >> 16) ^ 0x1C)];
  HIDWORD(v106) = v112 ^ 0x850;
  LODWORD(v106) = v112 ^ 0x8B81000;
  int v113 = *(_DWORD *)&v108[4 * (((v94 ^ HIDWORD(a50)) >> 24) ^ 0xF6)] ^ (BYTE1(v98)
                                                                                    + 75341168
                                                                                    - ((v98 >> 7) & 0xE0)) ^ *(_DWORD *)(v100 + 4 * (BYTE1(v98) ^ 0x6Du)) ^ ((v106 >> 12) - 52937263 - ((2 * (v106 >> 12)) & 0xF9B07BA2));
  unsigned int v114 = HIDWORD(a45) ^ *(_DWORD *)&v108[4 * (((a50 ^ v202) >> 24) ^ 0xA4)] ^ v75 ^ v104;
  unsigned int v115 = a45 ^ *(_DWORD *)(v101 + 4 * ((a50 ^ v202) ^ 0xE2u)) ^ (v113
                                                                                  + 24759838
                                                                                  - ((2 * v113) & 0x2F39C3C));
  unsigned int v116 = HIDWORD(a44) ^ *(_DWORD *)(v101 + 4 * ((v94 ^ BYTE4(a50)) ^ 0x5Fu)) ^ (v109
                                                                                                 + 24759838
                                                                                                 - ((2 * v109) & 0x2F39C3C));
  LODWORD(v87) = HIDWORD(a29) ^ *(_DWORD *)&v108[4 * BYTE3(v98)] ^ (v111 - 52937263 - ((2 * v111) & 0xF9B07BA2));
  LODWORD(v98) = v114 ^ 0xF9388C2F;
  int v117 = *(_DWORD *)&v105[4 * ((v114 ^ 0xF9388C2F) >> 16)];
  HIDWORD(v106) = v117 ^ 0x850;
  LODWORD(v106) = v117 ^ 0x8B81000;
  int v118 = v106 >> 12;
  int v119 = *(_DWORD *)&v105[4 * (BYTE2(v115) ^ 0xEC)];
  HIDWORD(v106) = v119 ^ 0x850;
  LODWORD(v106) = v119 ^ 0x8B81000;
  int v120 = v106 >> 12;
  int v121 = *(_DWORD *)&v105[4 * (BYTE2(v116) ^ 0x66)];
  HIDWORD(v106) = v121 ^ 0x850;
  LODWORD(v106) = v121 ^ 0x8B81000;
  LODWORD(v75) = (v106 >> 12) ^ *(_DWORD *)(v100 + 4 * (BYTE1(v87) ^ 5u)) ^ ((BYTE1(v87) ^ 0x68)
                                                                             + 75341168
                                                                             - 2
                                                                             * (((v87 >> 8) ^ 0x42BD68) & 0x72 ^ (v87 >> 8) & 2));
  int v122 = (v118 + 24759838 - ((2 * v118) & 0x2F39C3C)) ^ *(_DWORD *)(v101 + 4 * (v116 ^ 0xB6u));
  LODWORD(v75) = (v75 + 24759838 - ((2 * v75) & 0x2F39C3C)) ^ *(_DWORD *)(v101 + 4 * (v114 ^ 0x61u));
  LODWORD(v96) = (((unsigned __int16)(v114 ^ 0x8C2F) >> 8) + 75341168 - ((v114 >> 7) & 0xE0)) ^ 0xD678EAEF ^ *(_DWORD *)(v100 + 4 * (((unsigned __int16)(v114 ^ 0x8C2F) >> 8) ^ 0x6Du));
  int v123 = *(_DWORD *)&v108[4 * (HIBYTE(v116) ^ 0x43)] ^ 0x5EC2666F;
  LODWORD(v96) = v96 + v123 - 2 * (v96 & v123);
  int v124 = *(_DWORD *)&v105[4 * (BYTE2(v87) ^ 0xBD)];
  HIDWORD(v106) = v124 ^ 0x850;
  LODWORD(v106) = v124 ^ 0x8B81000;
  LODWORD(v98) = *(_DWORD *)&v108[4 * BYTE3(v98)] ^ (v120 - 52937263 - ((2 * v120) & 0xF9B07BA2));
  LODWORD(v98) = (v98 + 24759838 - ((2 * v98) & 0x2F39C3C)) ^ *(_DWORD *)(v101 + 4 * (v87 ^ 0xABu));
  LODWORD(v87) = *(_DWORD *)&v108[4 * (BYTE3(v87) ^ 0x42)] ^ HIDWORD(a54) ^ *(_DWORD *)(v100
                                                                                      + 4 * (BYTE1(v115) ^ 0xE1u)) ^ ((BYTE1(v115) ^ 0x8C) + 75341168 - ((v115 >> 7) & 0xE0)) ^ (v122 - 52937263 - ((2 * v122) & 0xF9B07BA2));
  LOBYTE(v110) = BYTE1(v116) ^ 0x54;
  unsigned int v125 = a44 ^ *(_DWORD *)(v100 + 4 * (BYTE1(v116) ^ 0x39u)) ^ (v98 + 75341168 - ((2 * v98) & 0x8FB3AE0));
  LODWORD(v98) = HIDWORD(a43) ^ *(_DWORD *)&v108[4 * (HIBYTE(v115) ^ 0xB2)] ^ (v75 - 52937263 - ((2 * v75) & 0xF9B07BA2));
  unsigned int v126 = a29 ^ *(_DWORD *)(v101 + 4 * (v115 ^ 0x6Bu)) ^ ((v96 ^ (v106 >> 12))
                                                                          + 24759838
                                                                          - ((2 * (v96 ^ (v106 >> 12))) & 0x2F39C3C));
  LODWORD(v75) = *(_DWORD *)&v105[4 * (BYTE2(v126) ^ 0x79)];
  HIDWORD(v106) = v75 ^ 0x850;
  LODWORD(v106) = v75 ^ 0x8B81000;
  BYTE1(v115) = BYTE1(v98) ^ 0x68;
  int v127 = ((v106 >> 12) - 52937263 - ((2 * (v106 >> 12)) & 0xF9B07BA2)) ^ *(_DWORD *)&v108[4
                                                                                        * ((v98 ^ 0x2261685E) >> 24)];
  LODWORD(v75) = ((BYTE1(v126) ^ 0xD0) + 75341168 - 2 * (((v126 >> 8) ^ 0x679D0) & 0x72 ^ (v126 >> 8) & 2)) ^ *(_DWORD *)(v100 + 4 * (BYTE1(v126) ^ 0xBDu));
  LODWORD(v75) = (v75 + 24759838 - ((2 * v75) & 0x2F39C3C)) ^ *(_DWORD *)(v101 + 4 * (v87 ^ 0x76u));
  LODWORD(v96) = ((BYTE1(v125) ^ 0xEC) + 75341168 - ((2 * ((v125 >> 8) ^ 0xE5FEC)) & 0xE0)) ^ *(_DWORD *)(v100 + 4 * (BYTE1(v125) ^ 0x81u));
  int v128 = *(_DWORD *)&v105[4 * (BYTE2(v125) ^ 0x5F)];
  HIDWORD(v106) = v128 ^ 0x850;
  LODWORD(v106) = v128 ^ 0x8B81000;
  int v129 = v106 >> 12;
  HIDWORD(v106) = *(_DWORD *)(v101 + 4 * (v98 ^ 0x5Eu)) ^ 0xE86EE996;
  LODWORD(v106) = HIDWORD(v106);
  LODWORD(v96) = (v106 >> 28) ^ __ROR4__(*(_DWORD *)&v108[4 * (HIBYTE(v126) ^ 6)] ^ 0x7462B151 ^ (v96- 52937263- ((2 * v96) & 0xF9B07BA2)), 28);
  unsigned int v130 = (v129 - 52937263 - ((2 * v129) & 0xF9B07BA2)) ^ *(_DWORD *)&v108[4 * (BYTE3(v87) ^ 0xD2)];
  LODWORD(v98) = *(_DWORD *)&v105[4 * (BYTE2(v98) ^ 0x1B)];
  HIDWORD(v106) = v98 ^ 0x850;
  LODWORD(v106) = v98 ^ 0x8B81000;
  LODWORD(v98) = v106 >> 12;
  int v131 = (v130 + 24759838 - ((2 * v130) & 0x2F39C3C)) ^ *(_DWORD *)(v101 + 4 * (v126 ^ 0x4Cu));
  int v132 = v127 + 24759838 - ((2 * v127) & 0x2F39C3C);
  int v133 = BYTE1(v87) ^ 0xC0;
  unsigned int v134 = v133 + 75341168 - 2 * (((v87 >> 8) ^ 0xD2CCC0) & 0x75 ^ (v87 >> 8) & 5);
  LODWORD(v87) = *(_DWORD *)&v105[4 * (BYTE2(v87) ^ 0xCC)];
  HIDWORD(v106) = v87 ^ 0x850;
  LODWORD(v106) = v87 ^ 0x8B81000;
  LOBYTE(v87) = v125 ^ v110;
  int v135 = a43 ^ (v106 >> 12) ^ __ROR4__(v96 ^ 0x78071371, 4);
  LODWORD(v98) = HIDWORD(a42) ^ *(_DWORD *)&v108[4 * (HIBYTE(v125) ^ 0xE)] ^ v98 ^ (v75
                                                                                  - 52937263
                                                                                  - ((2 * v75) & 0xF9B07BA2));
  unsigned int v136 = a42 ^ *(_DWORD *)(v100 + 4 * (BYTE1(v115) ^ 0x6Du)) ^ (v131 + 75341168 - ((2 * v131) & 0x8FB3AE0));
  unsigned int v137 = HIDWORD(a41) ^ v134 ^ *(_DWORD *)(v101 + 4 * (v87 ^ 0xCAu)) ^ *(_DWORD *)(v100 + 4 * (v133 ^ 0x6Du)) ^ v132;
  LODWORD(v96) = BYTE1(v115) ^ 0x4552953C ^ v136;
  int v138 = *(_DWORD *)&v105[4 * BYTE2(v96)];
  HIDWORD(v106) = v138 ^ 0x850;
  LODWORD(v106) = v138 ^ 0x8B81000;
  int v139 = v106 >> 12;
  BYTE1(v87) = BYTE1(v135) ^ 0xE7;
  int v140 = *(_DWORD *)&v105[4 * ((v135 ^ 0x99FEE750) >> 16)];
  HIDWORD(v106) = v140 ^ 0x850;
  LODWORD(v106) = v140 ^ 0x8B81000;
  LODWORD(v99) = (BYTE1(v96) + 75341168 - ((v96 >> 7) & 0xE0)) ^ *(_DWORD *)(v101
                                                                                         + 4
                                                                                         * (v98 ^ 0x72u)) ^ *(_DWORD *)(v100 + 4 * (BYTE1(v96) ^ 0x6Du)) ^ ((v106 >> 12) + 24759838 - ((2 * (v106 >> 12)) & 0x2F39C3C));
  int v141 = *(_DWORD *)&v105[4 * (BYTE2(v137) ^ 2)];
  HIDWORD(v106) = v141 ^ 0x850;
  LODWORD(v106) = v141 ^ 0x8B81000;
  int v142 = v106 >> 12;
  int v143 = *(_DWORD *)&v105[4 * (BYTE2(v98) ^ 0x3B)];
  HIDWORD(v106) = v143 ^ 0x850;
  LODWORD(v106) = v143 ^ 0x8B81000;
  LODWORD(v96) = *(_DWORD *)(v101 + 4 * (BYTE1(v115) ^ 0x3Cu ^ v136)) ^ *(_DWORD *)&v108[4 * (BYTE3(v98) ^ 0xA7)] ^ v142 ^ 0xFDA1F3CF;
  LODWORD(v75) = a41 ^ ((BYTE1(v137) ^ 0xD9) + 75341168 - ((2 * ((v137 >> 8) ^ 0x9802D9)) & 0xE0)) ^ *(_DWORD *)(v101 + 4 * (v135 ^ 0x1Eu)) ^ *(_DWORD *)(v100 + 4 * (BYTE1(v137) ^ 0xB4u)) ^ (v106 >> 12) ^ *(_DWORD *)&v108[4 * (HIBYTE(v136) ^ 0x61)];
  unsigned int v144 = HIDWORD(a40) ^ *(_DWORD *)&v108[4 * (HIBYTE(v137) ^ 0x98)] ^ (v99 - 52937263 - ((2 * v99) & 0xF9B07BA2));
  unsigned int v145 = a40 ^ *(_DWORD *)(v101 + 4 * (v137 ^ 0x3Du)) ^ ((BYTE1(v98) ^ 0x29)
                                                                          + 75341168
                                                                          - ((2 * ((v98 >> 8) ^ 0xA73B29)) & 0xE0)) ^ *(_DWORD *)&v108[4 * ((v135 ^ 0x99FEE750) >> 24)] ^ *(_DWORD *)(v100 + 4 * (BYTE1(v98) ^ 0x44u)) ^ v139;
  unsigned int v146 = HIDWORD(a39) ^ *(_DWORD *)(v100 + 4 * (((unsigned __int16)(v135 ^ 0xE750) >> 8) ^ 0x6Du)) ^ (v96 + 75341168 - ((2 * v96) & 0x8FB3AE0));
  LODWORD(v99) = *(_DWORD *)&v105[4 * (BYTE2(v75) ^ 0xD3)];
  HIDWORD(v106) = v99 ^ 0x850;
  LODWORD(v106) = v99 ^ 0x8B81000;
  LODWORD(v99) = v106 >> 12;
  LODWORD(v96) = *(_DWORD *)&v105[4 * (BYTE2(v145) ^ 0x49)];
  HIDWORD(v106) = v96 ^ 0x850;
  LODWORD(v106) = v96 ^ 0x8B81000;
  LODWORD(v98) = BYTE1(v145);
  int v147 = (BYTE1(v145) ^ 0xC) + 75341168 - ((v145 >> 7) & 0xE0);
  unsigned int v148 = v75 ^ 0xCA97C6C;
  LODWORD(v75) = *(_DWORD *)(v101 + 4 * ((v146 ^ BYTE1(v87)) ^ 0x41u)) ^ (((unsigned __int16)(v75 ^ 0x7C6C) >> 8)
                                                                                           + 75341168
                                                                                           - (((v75 ^ 0xCA97C6C) >> 7) & 0xE0)) ^ *(_DWORD *)(v100 + 4 * (((unsigned __int16)(v75 ^ 0x7C6C) >> 8) ^ 0x6Du)) ^ ((v106 >> 12) + 24759838 - ((2 * (v106 >> 12)) & 0x2F39C3C));
  LODWORD(v96) = *(_DWORD *)&v105[4 * (BYTE2(v146) ^ 0x81)];
  HIDWORD(v106) = v96 ^ 0x850;
  LODWORD(v106) = v96 ^ 0x8B81000;
  LODWORD(v96) = ((v106 >> 12) - 52937263 - ((2 * (v106 >> 12)) & 0xF9B07BA2)) ^ *(_DWORD *)&v108[4 * HIBYTE(v148)];
  LODWORD(v96) = (v96 + 24759838 - ((2 * v96) & 0x2F39C3C)) ^ *(_DWORD *)(v101 + 4 * (v145 ^ 0xCAu));
  LODWORD(v99) = ((BYTE1(v146) ^ 0xA0) + 75341168 - 2 * (((v146 >> 8) ^ 0x6881A0) & 0x76 ^ (v146 >> 8) & 6)) ^ (v99 + 24759838 - ((2 * v99) & 0x2F39C3C)) ^ *(_DWORD *)(v101 + 4 * (v144 ^ 0xFCu)) ^ *(_DWORD *)(v100 + 4 * (BYTE1(v146) ^ 0xCDu));
  unsigned int v149 = *(_DWORD *)&v105[4 * (BYTE2(v144) ^ 0xC6)];
  LODWORD(v106) = __ROR4__((v149 >> 12) ^ 0x26D56A3, 17) ^ 0xEE910136;
  HIDWORD(v106) = v106;
  LODWORD(v87) = a39 ^ *(_DWORD *)(v100 + 4 * (BYTE1(v144) ^ 0x75u)) ^ (v96 + 75341169 + ~((2 * v96) & 0x8FB3AE0));
  unsigned int v150 = HIDWORD(a38) ^ *(_DWORD *)&v108[4 * (HIBYTE(v145) ^ 0x28)] ^ (v99 - 52937263 - ((2 * v99) & 0xF9B07BA2));
  int v151 = a38 ^ *(_DWORD *)&v108[4 * (HIBYTE(v144) ^ 0x5A)] ^ (v75 - 52937263 - ((2 * v75) & 0xF9B07BA2));
  unsigned int v152 = HIDWORD(a37) ^ v147 ^ *(_DWORD *)(v101 + 4 * v148) ^ *(_DWORD *)(v100
                                                                                           + 4
                                                                                           * (v98 ^ 0x61)) ^ *(_DWORD *)&v108[4 * (HIBYTE(v146) ^ 0x68)] ^ ((v106 >> 15) + (v149 << 20));
  LODWORD(v99) = ((((unsigned __int16)(a39 ^ *(_WORD *)(v100 + 4 * (BYTE1(v144) ^ 0x75u)) ^ (v96 - 25231 + ~((2 * v96) & 0x3AE0))) >> 8) ^ 0x9D)
                + 75341168
                - ((2 * ((v87 >> 8) ^ 0xC2489D)) & 0xE0)) ^ *(_DWORD *)(v100
                                                                                    + 4
                                                                                    * (((unsigned __int16)(a39 ^ *(_WORD *)(v100 + 4 * (BYTE1(v144) ^ 0x75u)) ^ (v96 - 25231 + ~((2 * v96) & 0x3AE0))) >> 8) ^ 0xF0u));
  LODWORD(v96) = *(_DWORD *)&v105[4 * (BYTE2(v150) ^ 0x8F)];
  LODWORD(v99) = *(_DWORD *)(v101 + 4 * (v152 ^ 0x45u)) ^ (v96 << 20) ^ (v96 >> 12) ^ (v99 + 24759838 - ((2 * v99) & 0x2F39C3C));
  LODWORD(v98) = v151 ^ 0xCFB8D782;
  LODWORD(v75) = *(_DWORD *)&v105[4 * ((v151 ^ 0xCFB8D782) >> 16)];
  HIDWORD(v106) = v75 ^ 0x850;
  LODWORD(v106) = v75 ^ 0x8B81000;
  LODWORD(v75) = ((v106 >> 12) + 24759838 - ((2 * (v106 >> 12)) & 0x2F39C3C)) ^ *(_DWORD *)(v101
                                                                                          + 4
                                                                                          * ((v87 ^ BYTE1(v144)) ^ 0x3Fu));
  int v153 = (v99 ^ 0x85008B81) - 52937263 - 2 * ((v99 ^ 0x85008B81) & 0x7CD83DD3 ^ v99 & 2);
  int v154 = v75 - 52937263 - ((2 * v75) & 0xF9B07BA2);
  LODWORD(v99) = ((v150 >> 8) ^ 0xC78FD9) & 0x74 ^ (v150 >> 8) & 4;
  LODWORD(v96) = *(_DWORD *)&v105[4 * (BYTE2(v87) ^ 0x48)];
  HIDWORD(v106) = v96 ^ 0x850;
  LODWORD(v106) = v96 ^ 0x8B81000;
  LODWORD(v75) = BYTE1(v150) ^ 0xD9;
  LODWORD(v96) = ((BYTE1(v152) ^ 0x93) + 75341168 - ((2 * ((v152 >> 8) ^ 0x5E2A93)) & 0xE0)) ^ *(_DWORD *)(v101 + 4 * (v151 ^ 0xCCu)) ^ *(_DWORD *)(v100 + 4 * (BYTE1(v152) ^ 0xFEu)) ^ ((v106 >> 12) + 24759838 - ((2 * (v106 >> 12)) & 0x2F39C3C));
  int v155 = *(_DWORD *)&v105[4 * (BYTE2(v152) ^ 0x2A)];
  HIDWORD(v106) = v155 ^ 0x850;
  LODWORD(v106) = v155 ^ 0x8B81000;
  LODWORD(v87) = a37 ^ (((unsigned __int16)(v151 ^ 0xD782) >> 8)
                      + 75341168
                      - (((v151 ^ 0xCFB8D782) >> 7) & 0xE0)) ^ *(_DWORD *)(v101 + 4 * (v150 ^ 0x50u)) ^ *(_DWORD *)(v100 + 4 * (((unsigned __int16)(v151 ^ 0xD782) >> 8) ^ 0x6Du)) ^ (v106 >> 12) ^ *(_DWORD *)&v108[4 * (BYTE3(v87) ^ 0xC2)];
  unsigned int v156 = HIDWORD(a36) ^ *(_DWORD *)&v108[4 * (HIBYTE(v150) ^ 0xC7)] ^ (v96 - 52937263 - ((2 * v96) & 0xF9B07BA2));
  unsigned int v157 = a36 ^ *(_DWORD *)&v108[4 * BYTE3(v98)] ^ v153;
  LODWORD(v99) = HIDWORD(a35) ^ (v75 + 75341168 - 2 * v99) ^ *(_DWORD *)(v100 + 4 * (v75 ^ 0x6D)) ^ *(_DWORD *)&v108[4 * (HIBYTE(v152) ^ 0x5E)];
  LODWORD(v75) = *(_DWORD *)&v105[4 * (BYTE2(v156) ^ 0xE6)];
  HIDWORD(v106) = v75 ^ 0x850;
  LODWORD(v106) = v75 ^ 0x8B81000;
  LODWORD(v75) = v106 >> 12;
  LODWORD(v98) = v99 ^ v154;
  int v158 = *(_DWORD *)&v105[4 * (BYTE2(v157) ^ 0x1C)];
  HIDWORD(v106) = v158 ^ 0x850;
  LODWORD(v106) = v158 ^ 0x8B81000;
  unsigned int v159 = (((unsigned __int16)(v98 ^ 0xCCA2) >> 8)
        + 75341168
        - (((v98 ^ 0x33C8CCA2) >> 7) & 0xE0)) ^ *(_DWORD *)(v100
                                                                        + 4
                                                                        * (((unsigned __int16)(v98 ^ 0xCCA2) >> 8) ^ 0x6Du));
  LODWORD(v99) = (v106 >> 12) ^ *(_DWORD *)(v100 + 4 * (BYTE1(v156) ^ 0xD9u)) ^ ((BYTE1(v156) ^ 0xB4)
                                                                                 + 75341168
                                                                                 - ((2 * ((v156 >> 8) ^ 0x4FE6B4)) & 0xE0));
  LODWORD(v99) = (v99 + 24759838 - ((2 * v99) & 0x2F39C3C)) ^ *(_DWORD *)(v101 + 4 * (v87 ^ 0x25u));
  int v160 = (v159 + 24759838 - ((2 * v159) & 0x2F39C3C)) ^ *(_DWORD *)(v101 + 4 * (v157 ^ 0x3Au));
  HIDWORD(v106) = *(_DWORD *)(v101 + 4 * (v156 ^ 0x96u)) ^ 0x179CE1E;
  LODWORD(v106) = *(_DWORD *)(v101 + 4 * (v156 ^ 0x96u));
  HIDWORD(v106) = (v106 >> 29) ^ 0x6615DA09;
  LODWORD(v106) = HIDWORD(v106);
  LODWORD(v75) = *(_DWORD *)(v101 + 4 * (v98 ^ 0xA2u)) ^ (((unsigned __int16)(v87 ^ 0xE725) >> 8)
                                                                           + 75341168
                                                                           - (((v87 ^ 0xE492E725) >> 7) & 0xE0)) ^ *(_DWORD *)(v100 + 4 * (((unsigned __int16)(v87 ^ 0xE725) >> 8) ^ 0x6Du)) ^ (v75 + 24759838 - ((2 * v75) & 0x2F39C3C));
  int v161 = (v106 >> 3) + 75341168 - ((2 * (v106 >> 3)) & 0x8FB3AE0);
  LODWORD(v96) = *(_DWORD *)&v105[4 * ((v87 ^ 0xE492E725) >> 16)];
  HIDWORD(v106) = v96 ^ 0x850;
  LODWORD(v106) = v96 ^ 0x8B81000;
  LODWORD(v96) = v106 >> 12;
  int v162 = *(_DWORD *)&v105[4 * ((v98 ^ 0x33C8CCA2) >> 16)];
  HIDWORD(v106) = v162 ^ 0x850;
  LODWORD(v106) = v162 ^ 0x8B81000;
  unsigned int v163 = a35 ^ *(_DWORD *)&v108[4 * (BYTE3(v98) ^ 0x17)] ^ (v99 - 52937263 - ((2 * v99) & 0xF9B07BA2));
  LODWORD(v99) = v161 ^ *(_DWORD *)(v100 + 4 * (BYTE1(v157) ^ 0xD1u)) ^ (v106 >> 12);
  unsigned int v164 = *(_DWORD *)&v108[4 * (BYTE3(v87) ^ 0xC0)] ^ a54 ^ (v99 - 52937263 - ((2 * v99) & 0xF9B07BA2));
  unsigned int v165 = HIDWORD(a34) ^ *(_DWORD *)&v108[4 * (HIBYTE(v156) ^ 0x4F)] ^ v96 ^ (v160 - 52937263 - ((2 * v160) & 0xF9B07BA2));
  LODWORD(v87) = a34 ^ *(_DWORD *)&v108[4 * (HIBYTE(v157) ^ 0x1B)] ^ (v75 - 52937263 - ((2 * v75) & 0xF9B07BA2));
  LODWORD(v99) = *(_DWORD *)&v105[4 * (BYTE2(v87) ^ 0x7E)];
  HIDWORD(v106) = v99 ^ 0x850;
  LODWORD(v106) = v99 ^ 0x8B81000;
  LODWORD(v75) = v106 >> 12;
  LODWORD(v99) = *(_DWORD *)&v105[4 * (BYTE2(v165) ^ 1)];
  HIDWORD(v106) = v99 ^ 0x850;
  LODWORD(v106) = v99 ^ 0x8B81000;
  LODWORD(v99) = ((v106 >> 12) + 24759838 - ((2 * (v106 >> 12)) & 0x2F39C3C)) ^ *(_DWORD *)(v101
                                                                                          + 4
                                                                                          * (v163 ^ 0xC6u));
  LODWORD(v96) = ((BYTE1(v163) ^ 0x71) + 75341168 - ((2 * ((v163 >> 8) ^ 0xF25B71)) & 0xE0)) ^ *(_DWORD *)(v100 + 4 * (BYTE1(v163) ^ 0x1Cu));
  LODWORD(v96) = (v96 - 52937263 - ((2 * v96) & 0xF9B07BA2)) ^ *(_DWORD *)&v108[4 * (HIBYTE(v165) ^ 0x1F)];
  int v166 = *(_DWORD *)&v105[4 * (BYTE2(v163) ^ 0x5B)];
  HIDWORD(v106) = v166 ^ 0x850;
  LODWORD(v106) = v166 ^ 0x8B81000;
  int v167 = v106 >> 12;
  LODWORD(v98) = BYTE1(v157) ^ 0x73F4E0AF ^ v164;
  int v168 = *(_DWORD *)&v105[4 * BYTE2(v98)];
  HIDWORD(v106) = v168 ^ 0x850;
  LODWORD(v106) = v168 ^ 0x8B81000;
  int v169 = v106 >> 12;
  HIDWORD(v106) = v75 ^ ((BYTE1(v165) ^ 0x81) + 75341168 - ((v165 >> 7) & 0xE0)) ^ 0xD678EAEF ^ *(_DWORD *)(v100 + 4 * (BYTE1(v165) ^ 0xECu));
  LODWORD(v106) = HIDWORD(v106);
  LODWORD(v106) = (v106 >> 11) ^ __ROR4__(*(_DWORD *)&v108[4 * (HIBYTE(v163) ^ 0xF2)] ^ 0x5EC2666F, 11) ^ 0xD490839A;
  HIDWORD(v106) = v106;
  unsigned int v170 = HIDWORD(a33) ^ *(_DWORD *)(v101 + 4 * (v165 ^ 0xB8u)) ^ ((BYTE1(v87) ^ 0xAA)
                                                                                   + 75341168
                                                                                   - ((2
                                                                                     * ((v87 >> 8) ^ 0x967EAA)) & 0xE0)) ^ *(_DWORD *)&v108[4 * (HIBYTE(v164) ^ 0x57)] ^ *(_DWORD *)(v100 + 4 * (BYTE1(v87) ^ 0xC7u)) ^ v167;
  unsigned int v171 = a33 ^ (BYTE1(v98) + 75341168 - ((v98 >> 7) & 0xE0)) ^ *(_DWORD *)&v108[4 * (BYTE3(v87) ^ 0x96)] ^ *(_DWORD *)(v100 + 4 * (BYTE1(v98) ^ 0x6Du)) ^ (v99 - 52937263 - ((2 * v99) & 0xF9B07BA2));
  LODWORD(v99) = HIDWORD(a32) ^ *(_DWORD *)(v101 + 4 * (v87 ^ 0x88u)) ^ v169 ^ (v96
                                                                                                 + 24759838
                                                                                                 - ((2 * v96) & 0x2F39C3C));
  LODWORD(v87) = a32 ^ *(_DWORD *)(v101 + 4 * v98) ^ ((v106 >> 21)
                                                                       + 24759838
                                                                       - ((2 * (v106 >> 21)) & 0x2F39C3C));
  BYTE2(v98) = BYTE2(v99) ^ 0x4A;
  int v172 = *(_DWORD *)&v105[4 * (BYTE2(v170) ^ 0x4A)];
  HIDWORD(v106) = v172 ^ 0x850;
  LODWORD(v106) = v172 ^ 0x8B81000;
  int v173 = v106 >> 12;
  int v174 = *(_DWORD *)(v100 + 4 * (BYTE1(v171) ^ 0x96u)) ^ ((BYTE1(v171) ^ 0xFB)
                                                          + 75341168
                                                          - ((2 * ((v171 >> 8) ^ 0x3EA2FB)) & 0xE0));
  int v175 = *(_DWORD *)&v105[4 * (BYTE2(v171) ^ 0xA2)];
  HIDWORD(v106) = v175 ^ 0x850;
  LODWORD(v106) = v175 ^ 0x8B81000;
  int v176 = (v174 + 24759838 - ((2 * v174) & 0x2F39C3C)) ^ *(_DWORD *)(v101 + 4 * (v99 ^ 0x75u));
  LODWORD(v75) = (((unsigned __int16)(v99 ^ 0xF075) >> 8)
                + 75341168
                - (((v99 ^ 0xB54AF075) >> 7) & 0xE0)) ^ (v106 >> 12) ^ *(_DWORD *)(v100
                                                                                               + 4
                                                                                               * (((unsigned __int16)(v99 ^ 0xF075) >> 8) ^ 0x6Du));
  LODWORD(v75) = (v75 - 52937263 - ((2 * v75) & 0xF9B07BA2)) ^ *(_DWORD *)&v108[4 * (BYTE3(v87) ^ 0xED)];
  LODWORD(v99) = *(_DWORD *)&v108[4 * (BYTE3(v99) ^ 0x91)];
  LODWORD(v96) = *(_DWORD *)&v108[4 * (HIBYTE(v171) ^ 0x3E)];
  int v177 = *(_DWORD *)&v108[4 * (HIBYTE(v170) ^ 0x3A)];
  LODWORD(v87) = v87 ^ 0xC9AF1D8F;
  int v178 = *(_DWORD *)(v101 + 4 * v87);
  int v179 = *(_DWORD *)(v101 + 4 * (v171 ^ 0x9Au));
  LODWORD(v101) = *(_DWORD *)(v101 + 4 * (v170 ^ 0xA0u));
  LODWORD(v108) = *(_DWORD *)&v105[4 * BYTE2(v87)];
  LODWORD(v105) = *(_DWORD *)&v105[4 * BYTE2(v98)];
  HIDWORD(v106) = v105 ^ 0x850;
  LODWORD(v106) = v105 ^ 0x8B81000;
  LODWORD(v105) = (v170 >> 8) ^ 0x3A4A33;
  int v180 = BYTE1(v170) ^ 0x33;
  int v181 = *(_DWORD *)(v100 + 4 * (v180 ^ 0x6Du));
  int v182 = v180 + 75341168 - ((2 * v105) & 0xE0);
  LODWORD(v105) = HIDWORD(a31) ^ v179 ^ v173 ^ (BYTE1(v87) + 75341168 - ((v87 >> 7) & 0xE0)) ^ v99 ^ *(_DWORD *)(v100 + 4 * (BYTE1(v87) ^ 0x6Du));
  LODWORD(v87) = a31 ^ v182 ^ v96 ^ v181 ^ v178 ^ (v106 >> 12);
  unsigned int v183 = HIDWORD(a30) ^ v101 ^ (v75 + 24759838 - ((2 * v75) & 0x2F39C3C));
  unsigned int v184 = a30 ^ v177 ^ (v108 >> 12) ^ (v108 << 20) ^ (v176 - 52937263 - ((2 * v176) & 0xF9B07BA2));
  uint64_t v185 = *(unsigned int *)(v65 - 116);
  v186 = (char *)*(&off_100233720 + (int)v185 - 970) - 4;
  v187 = (char *)*(&off_100233720 + (int)a27) - 12;
  LODWORD(v101) = *(_DWORD *)&v187[4
                                 * (((unsigned __int16)(a30 ^ v177 ^ (v108 >> 12) ^ (v176 + 15825 - ((2 * v176) & 0x7BA2))) >> 8) ^ 0xA8)] ^ *(_DWORD *)&v186[4 * (v183 ^ 7)];
  LODWORD(v96) = (v101 ^ 0x1792F928) - 1562591335 - 2 * ((v101 ^ 0x1792F928) & 0x22DCBF9F ^ v101 & 6);
  LODWORD(v101) = *(_DWORD *)&v187[4 * (BYTE1(v105) ^ 0x82)];
  int v188 = *(_DWORD *)&v187[4 * ((unsigned __int16)(v183 ^ 0x6F07) >> 8)];
  LODWORD(v100) = *(_DWORD *)&v187[4 * (BYTE1(v87) ^ 0xA1)];
  v189 = (char *)*(&off_100233720 + SHIDWORD(a26)) - 8;
  uint64_t v190 = *(unsigned int *)&v189[4 * (HIBYTE(v183) ^ 0xEF)];
  LODWORD(v98) = *(_DWORD *)&v189[4 * (HIBYTE(v184) ^ 0x18)];
  int v191 = *(_DWORD *)&v189[4 * ((v105 >> 24) ^ 0xCC)];
  v192 = (char *)*(&off_100233720 + (int)v185 - 924) - 4;
  int v193 = *(_DWORD *)&v192[4 * (BYTE2(v184) ^ 0xBC)];
  LODWORD(v108) = *(_DWORD *)&v192[4 * (BYTE2(v183) ^ 0x2A)];
  int v194 = *(_DWORD *)&v192[4 * (BYTE2(v87) ^ 0xBF)];
  LODWORD(v189) = v96 ^ *(_DWORD *)&v189[4 * (BYTE3(v87) ^ 0x64)];
  LODWORD(v96) = v189 + 1230381318 - ((2 * v189) & 0x92AC420C);
  LODWORD(v189) = *(_DWORD *)&v186[4 * (v105 ^ 0x13)];
  LODWORD(v192) = *(_DWORD *)&v192[4 * (BYTE2(v105) ^ 0x2A)] ^ v96;
  LODWORD(v96) = *(_DWORD *)&v186[4 * (v87 ^ 0xEB)];
  LODWORD(v186) = *(_DWORD *)&v186[4 * (v184 ^ 0x5A)];
  uint64_t v195 = *(_DWORD *)(v65 - 132) ^ a52 ^ (v192 - ((2 * v192) & 0x773B607C) + 1000190014);
  v196 = (char *)*(&off_100233720 + (int)a26) - 8;
  *(unsigned char *)(a55 + *(void *)(v65 - 256)) = ~v196[BYTE3(v195) ^ 0xD7];
  LODWORD(v192) = ((v188 ^ v193 ^ 0x9B81CF7D)
                 - 1562591335
                 - 2 * ((v188 ^ v193 ^ 0x9B81CF7D) & 0x22DCBF9B ^ (v188 ^ v193) & 2)) ^ v191;
  LODWORD(v192) = (v192 - 985327789 - ((2 * v192) & 0x8A8A2EA6)) ^ v96;
  LODWORD(v192) = *(_DWORD *)(v65 - 128) ^ HIDWORD(a52) ^ (v192 - ((2 * v192) & 0x47EB5E98) - 1544179892);
  v197 = (char *)*(&off_100233720 + SHIDWORD(a25)) - 8;
  *(unsigned char *)(a55 + *(void *)(v65 - 224)) = (v197[v192 ^ 0xC7] - 90) ^ 0x5F;
  v198 = (char *)*(&off_100233720 + (int)a25) - 12;
  LODWORD(v96) = v198[BYTE1(v192) ^ 0x13];
  HIDWORD(v106) = v96 ^ 0x28;
  LODWORD(v106) = v96 << 24;
  *(unsigned char *)(a55 + v204) = (v106 >> 30) ^ 0x40;
  LODWORD(v189) = ((v108 ^ v189 ^ 0x8C133655)
                 - 1562591335
                 - 2
                 * ((v108 ^ v189 ^ 0x8C133655) & 0x22DCBF9B ^ (v108 ^ v189) & 2)) ^ v98;
  LODWORD(v189) = (v189 - ((2 * v189) & 0xA5AFDCF6) - 757600645) ^ v100;
  LODWORD(v98) = *(_DWORD *)(v65 - 124) ^ HIDWORD(a53) ^ (v189 - ((2 * v189) & 0x279D5C7E) - 1815171521);
  LODWORD(v189) = v198[BYTE1(v98)];
  HIDWORD(v106) = v189 ^ 0x28;
  LODWORD(v106) = v189 << 24;
  LODWORD(v96) = v190 ^ v101;
  *(unsigned char *)(a55 + *(void *)(v65 - 216)) = (v106 >> 30) ^ 0x7E;
  uint64_t v199 = (uint64_t)*(&off_100233720 + (int)v185 - 823);
  *(unsigned char *)(a55 + v205) = *(unsigned char *)(v199 + (BYTE2(v195) ^ 0xFBLL)) ^ 0x32;
  LODWORD(v189) = ((v96 ^ 0x700B51E2) + 1230381318 - 2 * ((v96 ^ 0x700B51E2) & 0x4956211F ^ v96 & 0x19)) ^ v194;
  LODWORD(v189) = (v189 - 985327789 - ((2 * v189) & 0x8A8A2EA6)) ^ v186;
  LODWORD(v189) = *(_DWORD *)(v65 - 120) ^ a53 ^ (v189 - ((2 * v189) & 0xC943B2F0) + 1688328568);
  *(unsigned char *)(a55 + *(void *)(v65 - 168)) = *(unsigned char *)(v199 + (BYTE2(v189) ^ 0xB8)) ^ 0xE1;
  *(unsigned char *)(a55 + *(void *)(v65 - 248)) = (v197[v195 ^ 0x1BLL] - 90) ^ 0x7D;
  *(unsigned char *)(a55 + *(void *)(v65 - 240)) = *(unsigned char *)(v199 + (BYTE2(v192) ^ 3)) ^ 0x9F;
  *(unsigned char *)(a55 + *(void *)(v65 - 184)) = v196[(v192 >> 24) ^ 0x6DLL] ^ 7;
  LODWORD(v192) = v198[BYTE1(v195) ^ 0x92];
  HIDWORD(v106) = v192 ^ 0x28;
  LODWORD(v106) = v192 << 24;
  *(unsigned char *)(a55 + *(void *)(v65 - 152)) = (v106 >> 30) ^ 0xD2;
  uint64_t v200 = *(void *)(v65 - 200);
  *(unsigned char *)(a55 + v200) = v196[BYTE3(v98) ^ 0x53] ^ 0xEB;
  *(unsigned char *)(a55 + *(void *)(v65 - 176)) = (v197[v98 ^ 0x95] - 90) ^ 0xAF;
  *(unsigned char *)(a55 + *(void *)(v65 - 232)) = (v197[v189 ^ 0x64] - 90) ^ 0x27;
  *(unsigned char *)(a55 + *(void *)(v65 - 160)) = v196[(v189 >> 24) ^ 0x6ELL] ^ 0x7D;
  LODWORD(v192) = v198[BYTE1(v189) ^ 0x1FLL];
  HIDWORD(v106) = v192 ^ 0x28;
  LODWORD(v106) = v192 << 24;
  *(unsigned char *)(a55 + *(void *)(v65 - 192)) = (v106 >> 30) ^ 0x58;
  *(unsigned char *)(a55 + *(void *)(v65 - 144)) = *(unsigned char *)(v199 + (BYTE2(v98) ^ 0xC8)) ^ 0xB0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a57 + 8 * ((3515 * (((v200 + 1172714229 - 2 * ((v200 + 16) & *(_DWORD *)(v65 - 204) ^ v62 & 8)) ^ 0x45E632E5u) < a56)) ^ ((int)v185 + 482))))(v195, 25, 584892315, v198, v185, v197, v190, 3309639507, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

uint64_t sub_10002233C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((((a7 - 46) | 0xE2) - 392) * (v7 != a3)) ^ a7)))();
}

uint64_t sub_100022368@<X0>(int a1@<W0>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((a1 - 247) | 0x200) ^ 0x2FC) * (a2 - v3 - 406698353 == (v2 ^ 0xF48AC95D))) ^ a1)))();
}

uint64_t sub_1000223C0@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W4>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,unsigned int a38)
{
  unsigned int v42 = a2 ^ (((((a5 + 1225506768) | 0x803202) + v39) & *v41 | (v39 + ((a5 + 1224748172) | 0x8BC546u) + 2) & v41[623]) >> 1);
  v41[623] = v41[396] ^ a4 ^ *(_DWORD *)(v38 + 4 * (*v41 & 1)) ^ (v42 + a1 - (a3 & (2 * v42)));
  return (*(uint64_t (**)(void))(v40 + 8 * ((997 * (a38 < 0x270)) ^ a5)))();
}

uint64_t sub_100022464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(void *)(v17 - 128) = a13;
  *(void *)(v17 - 112) = v15;
  *(_DWORD *)(v17 - 120) = v16 + ((v17 - 136) ^ 0xBA947862) * v13 + 767;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v16 + 1330)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * (((*(_DWORD *)(v17 - 136) == (v16 ^ 0x5B5DA38E)) * (v16 ^ 0x3CD)) ^ v16)))(v18);
}

uint64_t sub_1000224FC()
{
  *(void *)(v3 + v2 - 0x35FF68D54903A23ALL) = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * ((((v1 & 0xFFFFFFFFFFFFFFF8) == 8) * (v0 - 1467)) ^ v0)))();
}

void sub_100022548()
{
}

uint64_t sub_1000225D8()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (((v4 == ((v5 - 241) | v2) + v1) * ((v5 - 515) ^ v3)) ^ v5)))();
}

uint64_t sub_100022608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v8
                                                                                      + 8
                                                                                      * ((((((v5 + 535) ^ (v7 < 0x10)) & 1) == 0)
                                                                                        * (((v5 + 424) | 4) + 63)) ^ v5));
  *(_DWORD *)(v9 - 144) = v6;
  return v10(a1, a2, a3, a4, a5, 0);
}

uint64_t sub_100022690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t))(v68 + 1280))(a1, a2, a3, a4, a5, 4225980065, 2147483652, 1930293332, &a68, a10);
}

uint64_t sub_1000227B8()
{
  *int v1 = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 == 0) * v2) ^ v0)))();
}

uint64_t sub_1000227DC@<X0>(int a1@<W2>, int a2@<W6>, int a3@<W7>, int a4@<W8>)
{
  *(_DWORD *)(*v6 + 4 * (v5 + a4)) = v8;
  return (*(uint64_t (**)(void))(v4
                              + 8 * (((((((a1 - 1412) | a2) + 868) ^ a3) + 1842) * (v7 == 0)) ^ ((a1 - 1412) | a2))))();
}

uint64_t sub_100022830(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v10 + 8 * ((((v8 + a2) < 8) * ((v9 + a6) & a7 ^ a8)) | v9)))();
}

uint64_t sub_10002283C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v45 = (v37 - 812649572) & 0x79FBFFEF;
  *unsigned int v42 = v42[623];
  int v46 = (v45 - 245006387) ^ v40;
  *(_DWORD *)(v44 - 112) = v46 ^ 0x3D;
  *(void *)(v39 + 160) = (v43 - 925405206) ^ v40;
  *(void *)(v39 + 152) = a37;
  *(_DWORD *)(v44 - 124) = v46;
  *(_DWORD *)(v44 - 120) = (v45 - 245006325) ^ v40;
  *(_DWORD *)(v44 - 152) = v40 + v45 - 1738116733;
  *(_DWORD *)(v44 - 128) = -(int)v40;
  uint64_t v47 = (*(uint64_t (**)(uint64_t))(v41 + 8 * (v45 + v38)))(v44 - 152);
  return (*(uint64_t (**)(uint64_t))(v41 + 8 * *(int *)(v44 - 116)))(v47);
}

void sub_1000228F0()
{
  *(_DWORD *)(v0 - 0x6C0C7F2AED40EE79) = 2124071620;
  JUMPOUT(0x1000169A4);
}

uint64_t sub_100022910(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v7 = 65 - v4;
  if ((65 - v4) <= 0x40) {
    int v7 = 64;
  }
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((23 * (v7 + v4 + (((v5 ^ 0x136) - a4 - 842) ^ (a4 - 467)) < 7)) ^ v5)))();
}

uint64_t sub_10002296C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((2 * v1) & 0xDABEF4CE ^ 0x9880748A) + (v1 ^ 0x331F442A) + ((v0 + 1061) ^ 0x13FEEA44) == 22964838)
                                * (((v0 + 202) | 0x414) - 1592)) ^ v0)))();
}

uint64_t sub_1000229DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                + 8
                                                                                * (((v5 ^ 0x6F2 ^ (307 * (v5 ^ 0x58A)))
                                                                                  * (v7 != 0)) ^ (v5 + 729))))(a1, a2, a3, a4, a5);
}

uint64_t sub_100022A24()
{
  STACK[0x278] = v0;
  STACK[0x518] = 0;
  int v4 = 235795823 * ((((2 * (v3 - 200)) | 0xDFD9FE) - (v3 - 200) - 7335167) ^ 0x94C2A5A6);
  unint64_t v5 = STACK[0x270];
  *(_DWORD *)(v3 - 200) = v4 ^ 0x445B78DF;
  *(_DWORD *)(v3 - 164) = v1 - v4 - 1275;
  *(void *)(v3 - 192) = 0x41C0C6A038046E59;
  *(void *)(v3 - 184) = STACK[0x268];
  *(void *)(v3 - 176) = v5;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v1 ^ 0xE3A)))(v3 - 200);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((472
                                              * (*(_DWORD *)(v3 - 168) != v1 - 2124049525 + 61 * (v1 ^ 0x6EE) - 1415)) ^ v1)))(v6);
}

void sub_100022B0C()
{
  unint64_t v2 = STACK[0x578];
  int v3 = 1178560073 * ((((2 * (v1 - 200)) | 0xC93A5848) - (v1 - 200) + 459461596) ^ 0x5E095446);
  *(_DWORD *)(v1 - 184) = 1172345424 - v3 + v0;
  *(_DWORD *)(v1 - 200) = -2035249205 - v3;
  *(void *)(v1 - 192) = v2;
  JUMPOUT(0x1000214D0);
}

uint64_t sub_100022B8C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  HIDWORD(a28) = 581300668;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t *, uint64_t, uint64_t, void))(v39 + 8 * (int)((a2 + ((((a7 + 92) ^ 0x33D) - 162742426) & 0xFFB7FF2F) + 39) ^ (a7 + 92) ^ 0x33D)))(1098282115, 90582814, a1, a2, a3, a4, a5, a6, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           &STACK[0x278],
           &a39,
           a27,
           a28,
           0);
}

uint64_t sub_100022C40()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((28
                                * ((*(_DWORD *)(v2 - 0x6C0C7F2AED40EE7DLL) & 1) != (((((v0 ^ 0x3F1) + 1894646573) & 0x8F11FB8F)
                                                                                   + 1142) ^ 0x5FB))) ^ v0 ^ 0x3F1)))();
}

uint64_t sub_100022CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  int v31 = ((((2 * (v30 - 144)) | 0xEAD22C22) - (v30 - 144) + 177662447) ^ 0x4FFD6E73) * v24;
  int v32 = v22 - 214;
  *(_DWORD *)(v30 - 140) = v22 - v31 + 511;
  *(_DWORD *)(v30 - 136) = v31 + v23 - 922004141 + v22 - 214;
  *(void *)(v30 - 128) = v21;
  *(void *)(v30 - 120) = v26;
  (*(void (**)(uint64_t))(v25 + 8 * (v22 ^ 0xEFEu)))(v30 - 144);
  *(_DWORD *)(v30 - 128) = (v32 - 987) ^ (628203409 * ((v30 - 144) ^ 0x82880C33));
  *(void *)(v30 - 144) = v28;
  *(void *)(v30 - 136) = v29;
  (*(void (**)(uint64_t))(v25 + 8 * (v32 ^ 0xDB5)))(v30 - 144);
  *(_DWORD *)(v30 - 128) = (v32 + 295) ^ (1178560073
                                        * ((1924547291 - ((v30 - 144) | 0x72B642DB) + ((v30 - 144) | 0x8D49BD24)) ^ 0x37DDC546));
  *(void *)(v30 - 120) = v28;
  *(void *)(v30 - 112) = a21;
  *(void *)(v30 - 144) = v29;
  *(void *)(v30 - 136) = v26;
  (*(void (**)(uint64_t))(v25 + 8 * (v32 + 868)))(v30 - 144);
  *(void *)(v30 - 128) = a21;
  *(void *)(v30 - 120) = v28;
  *(void *)(v30 - 104) = a12;
  *(void *)(v30 - 144) = v29;
  *(void *)(v30 - 136) = a21;
  *(_DWORD *)(v30 - 112) = v32
                         - 756
                         + 1224239923 * ((((v30 - 144) | 0x13E1F0B9) - ((v30 - 144) & 0x13E1F0B9)) ^ 0xE1520D6E);
  (*(void (**)(uint64_t))(v25 + 8 * (v32 + 831)))(v30 - 144);
  *(void *)(v30 - 128) = a21;
  *(void *)(v30 - 144) = v29;
  *(void *)(v30 - 136) = a21;
  *(_DWORD *)(v30 - 120) = v32
                         + 765
                         + 1225351577 * ((2 * ((v30 - 144) & 0x13F3B890) - (v30 - 144) - 334739601) ^ 0xCF969F79);
  *(void *)(v30 - 112) = a13;
  *(void *)(v30 - 104) = v28;
  (*(void (**)(uint64_t))(v25 + 8 * (v32 + 881)))(v30 - 144);
  *(_DWORD *)(v30 - 128) = (v32 - 987) ^ (628203409
                                        * ((((2 * (v30 - 144)) | 0x8F046CF0) - (v30 - 144) - 1199715960) ^ 0xC50A3A4B));
  *(void *)(v30 - 144) = a16;
  *(void *)(v30 - 136) = v29;
  (*(void (**)(uint64_t))(v25 + 8 * (v32 + 909)))(v30 - 144);
  *(void *)(v30 - 144) = v29;
  *(void *)(v30 - 136) = v26;
  *(_DWORD *)(v30 - 128) = (v32 + 295) ^ (1178560073
                                        * (((v30 - 144) & 0x9C6FEFFB | ~((v30 - 144) | 0x9C6FEFFB)) ^ 0xD9046866));
  *(void *)(v30 - 120) = a16;
  *(void *)(v30 - 112) = v27;
  (*(void (**)(uint64_t))(v25 + 8 * (v32 + 868)))(v30 - 144);
  *(void *)(v30 - 144) = v29;
  *(void *)(v30 - 136) = v27;
  *(void *)(v30 - 104) = a12;
  *(_DWORD *)(v30 - 112) = v32
                         - 756
                         + 1224239923 * ((((v30 - 144) | 0xC33BF16D) + (~(v30 - 144) | 0x3CC40E92)) ^ 0x31880CBB);
  *(void *)(v30 - 128) = v27;
  *(void *)(v30 - 120) = a16;
  (*(void (**)(uint64_t))(v25 + 8 * (v32 ^ 0xDC7)))(v30 - 144);
  *(void *)(v30 - 136) = v27;
  *(void *)(v30 - 128) = v27;
  *(void *)(v30 - 112) = a14;
  *(void *)(v30 - 104) = a16;
  *(void *)(v30 - 144) = v29;
  *(_DWORD *)(v30 - 120) = v32
                         + 765
                         + 1225351577
                         * ((805332467 - ((v30 - 144) | 0x300065F3) + ((v30 - 144) | 0xCFFF9A0C)) ^ 0xEC65421A);
  (*(void (**)(uint64_t))(v25 + 8 * (v32 + 881)))(v30 - 144);
  *(_DWORD *)(v30 - 144) = v32
                         - 108757529
                         * ((((v30 - 144) | 0x7ADA7F) - (v30 - 144) + ((v30 - 144) & 0xFF852580)) ^ 0xE0E6B854)
                         - 467;
  *(void *)(v30 - 136) = v27;
  *(void *)(v30 - 128) = a21;
  (*(void (**)(uint64_t))(v25 + 8 * (v32 ^ 0xD9E)))(v30 - 144);
  *(_DWORD *)(v30 - 140) = (v32 - 407) ^ (460628867
                                        * ((((v30 - 144) | 0xBD793154) - (v30 - 144) + ((v30 - 144) & 0x4286CEA8)) ^ 0xF1EFB329));
  *(void *)(v30 - 136) = v27;
  uint64_t v33 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v32 + 818)))(v30 - 144);
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * (int)(((*(_DWORD *)(v30 - 144) < 0x26135F9Eu)
                                                   * (((v32 + 760445201) & 0xD2AC87BF) - 1441)) ^ v32)))(v33);
}

uint64_t sub_100023148@<X0>(uint64_t a1@<X8>)
{
  uint64_t v7 = (v3 + v2);
  long long v8 = *(_OWORD *)(a1 + v7 - 15);
  long long v9 = *(_OWORD *)(a1 + v7 - 31);
  uint64_t v10 = v1 + v7;
  *(_OWORD *)(v10 - 15) = v8;
  *(_OWORD *)(v10 - 31) = v9;
  return (*(uint64_t (**)(void))(v6 + 8 * ((414 * (((v5 + 1332504290) & 0xB09395F9) - 376 == (v4 & 0xFFFFFFE0))) ^ v5)))();
}

uint64_t sub_1000231B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                         + 8
                                                                                         * ((42
                                                                                           * (v5 > ((77 * (v8 ^ (v8 - 2)) + 750808501) & 0xD33F97F9)
                                                                                                 - 1141316634)) ^ (v7 + v8 - 2116))))(a1, a2, a3, a4, a5, 3061059863);
}

uint64_t sub_100023214()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((4056 * (v0 < v1 + v2 - 202 - 2845)) ^ v2)))();
}

uint64_t sub_100023244@<X0>(int a1@<W3>, unsigned __int8 *a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  int v62 = v56 ^ 0x153;
  uint64_t v63 = *(void *)(v60 + 8 * (v62 ^ 0x717)) - 12;
  uint64_t v64 = *(void *)(v60 + 8 * (v62 ^ 0x7ED)) - 12;
  uint64_t v65 = *(void *)(v60 + 8 * (v62 - 1865)) - 12;
  int v66 = *(unsigned __int8 *)(v65 + (a2[14] ^ 0x86));
  uint64_t v67 = a2[8];
  int v68 = v67 ^ 0x34;
  int v69 = *(unsigned __int8 *)(v64 + (v67 ^ 0x65));
  LODWORD(v67) = (v66 ^ 0xBE ^ (v66 << (v62 - 102))) << 8;
  LOBYTE(v66) = *(unsigned char *)(v65 + (a2[10] ^ 0xCBLL));
  uint64_t v70 = *(void *)(v60 + 8 * (v62 - 1750)) - 8;
  unsigned int v71 = *(unsigned __int8 *)(v70 + (a2[1] ^ 0x1ALL));
  int v72 = (v71 >> 1) ^ (((((v71 ^ 0xFE) + (v71 & 0xD5 ^ 0x2B) + 1) ^ v71 & 0xDF) & 0xF0) >> 4) ^ 0x15;
  int v73 = ((a2[3] ^ 0xB8) + *(unsigned char *)(v63 + (a2[3] ^ 0x54)) - 72) | ((v71 ^ v59 ^ (v72 - ((2 * v72) & 0x9C) + 78)) << 16);
  int v74 = (((v69 + v68 - 90) ^ 0xF5) << 24) | (((v66 ^ (16 * v66)) ^ 0x72) << 8) | ((a2[11] ^ 0x3E) + *(unsigned char *)(v63 + (a2[11] ^ 0xD2)) - 72);
  LOBYTE(v71) = *(unsigned char *)(v65 + (a2[6] ^ 0x2ELL));
  unsigned int v75 = *(unsigned char *)(v70 + (a2[13] ^ v58)) ^ 0x2B;
  int v76 = ((a2[7] ^ 0x90) + *(unsigned char *)(v63 + (a2[7] ^ 0x7CLL)) - 72) | ((((a2[4] ^ 0x13)
                                                                                       + *(unsigned __int8 *)(v64 + (a2[4] ^ 0x42))
                                                                                       - 90) ^ 0xE6) << 24) | (((v71 ^ (16 * v71)) ^ 0x6E) << 8);
  int v77 = *(unsigned __int8 *)(v70 + (a2[13] ^ v58)) ^ 0x2B ^ (v75 >> 4) ^ (v75 >> 1);
  LODWORD(v67) = v67 & 0xFF00FFFF | ((v77 - ((2 * v77) & 0x2E) + 23) << 16);
  int v78 = v73 | (((*(unsigned __int8 *)(v64 + (*a2 ^ 0x81)) + (*a2 ^ v57) - 90) ^ 0x3C) << 24);
  LOBYTE(v73) = *(unsigned char *)(v70 + (a2[5] ^ 0xEDLL));
  int v79 = ((v73 ^ 0x2B) >> 4) ^ ((v73 ^ 0x2B) >> 1);
  uint64_t v330 = v70;
  uint64_t v332 = v64;
  uint64_t v333 = v63;
  int v80 = v62 - 615;
  unsigned int v81 = v74 & 0xFF00FFFF | (((*(unsigned char *)(v70 + (a2[9] ^ 0x38)) ^ ((*(unsigned char *)(v70 + (a2[9] ^ 0x38)) ^ 0x2B) >> 4) ^ ((*(unsigned char *)(v70 + (a2[9] ^ 0x38)) ^ 0x2B) >> 1)) ^ 0x80) << 16);
  uint64_t v331 = v65;
  unsigned int v82 = v78 & 0xFFFF00FF | (((*(unsigned char *)(v65 + (a2[2] ^ 0x22)) ^ (16
                                                                                   * *(unsigned char *)(v65 + (a2[2] ^ 0x22)))) ^ 0x40) << 8);
  LODWORD(STACK[0x390]) = (v67 & 0xFFFFFF00 | ((((a2[12] ^ 0x13) + *(unsigned __int8 *)(v64 + (a2[12] ^ 0x42)) - 90) ^ 0xE6) << 24) | (*(unsigned char *)(v63 + (a2[15] ^ 0x38)) + (a2[15] ^ 0xD4) - 72)) ^ 0xDE7AF988;
  LODWORD(STACK[0x348]) = v82 ^ 0x847FEC1F;
  unint64_t v83 = STACK[0x600];
  LODWORD(STACK[0x208]) = (v76 & 0xFF00FFFF | ((v73 ^ 0x6C ^ (v79
                                                                                              + (~(2 * v79) | 0x2F)
                                                                                              + 105)) << 16)) ^ 0x94B8486E;
  LODWORD(STACK[0x380]) = v81 ^ 0x1945931A;
  v328 = (unsigned char *)STACK[0x608];
  unint64_t v329 = v83;
  LODWORD(STACK[0x3C0]) = v80;
  LODWORD(v339) = (v80 + 29) | 0x24A;
  unint64_t v84 = (v339 ^ 0xFFFFF89B) & 0x1BA4D873 ^ 0x1BA4D87F;
  STACK[0x388] = v84;
  uint64_t v85 = (unsigned __int8 *)v83;
  LODWORD(v84) = *(unsigned __int8 *)(v65 + (*(unsigned __int8 *)(v83 + v84) ^ 0xD9));
  STACK[0x2B8] = 4;
  uint64_t v86 = *(unsigned __int8 *)(v83 + 4);
  LODWORD(STACK[0x3B8]) = (((16 * v84) ^ 0xFFFFFFD0) + (~(2 * ((16 * v84) ^ 0xFFFFFFD0)) | 0xFFFFFFDF) + 30) ^ v84;
  LOBYTE(v81) = *(unsigned char *)(v64 + (v86 ^ 0xE6));
  STACK[0x398] = 15;
  int v87 = v85[15];
  unsigned __int8 v88 = (v81 + (v86 ^ 0xB7) - 90) ^ 0xE5;
  if ((v87 & 0x20) != 0) {
    int v89 = -32;
  }
  else {
    int v89 = 32;
  }
  int v343 = *(unsigned __int8 *)(v63 + ((v89 + v87) ^ 0xDDLL)) + ((v89 + v87) ^ a1);
  STACK[0x378] = 6;
  int v90 = *(unsigned __int8 *)(v65 + (v85[6] ^ 0x51));
  STACK[0x250] = 12;
  LODWORD(STACK[0x2C0]) = 463788159;
  HIDWORD(v91) = v90 ^ (((16 * v90) ^ 0xFFFFFFD0) - ((2 * ((16 * v90) ^ 0xFFFFFFD0)) & 0x20) + 29) ^ 0x3F;
  LODWORD(v91) = BYTE4(v91) & 0xF8;
  unint64_t v92 = ((v91 >> 3) | ((unint64_t)v88 << 13)) ^ 0x58F620A6;
  int v93 = (v92 >> 21) | (v92 << 11);
  uint64_t v94 = *v85;
  int v342 = *(unsigned __int8 *)(v64 + (v85[12] ^ 0xF7) - 2 * ((v85[12] ^ 0xF7) & 0xAEu) + 174) - (v85[12] ^ 0xF7);
  LODWORD(v92) = v94 ^ 0x76;
  int v95 = *(unsigned __int8 *)(v64 + (v94 ^ 0xD8));
  STACK[0x340] = 3;
  uint64_t v96 = v85[3];
  int v97 = v95 + v92 - 2 * v92;
  STACK[0x350] = 8;
  int v340 = (v96 ^ 0xFFFFFFBB) + *(unsigned __int8 *)(v63 + (v96 ^ 0x57));
  char v98 = (v85[8] ^ 0xA7) + *(unsigned char *)(v64 + (v85[8] ^ 0xF6));
  STACK[0x248] = 7;
  int v99 = *(unsigned __int8 *)(v330 + (v85[13] ^ 0x12));
  unsigned int v100 = v99 ^ ((((v99 ^ 0x2Bu) >> 3) & 4 ^ v99 & 0xA4 | ((v99 ^ 0x2Bu) >> 3) & 0xFFFFFFFB ^ (v99 ^ 0x2B) & 0x5A) >> 1);
  unsigned __int8 v101 = *(unsigned char *)(v330 + (v85[5] ^ 0x9CLL));
  int v102 = ((v101 ^ 0x2B) >> 4) ^ ((v101 ^ 0x2B) >> 1);
  int v103 = ((v85[7] ^ 0xE9) + *(unsigned char *)(v63 + (v85[7] ^ 5)) - 72) | ((v101 ^ 0xE6 ^ (v102 - (v57 & (2 * v102)) + 104)) << 16);
  int v104 = *(unsigned __int8 *)(v330 + (v85[9] ^ 0x76));
  int v105 = (2 * (v104 & 8)) ^ 0x10 | v104 & 8;
  unsigned int v106 = (v104 ^ 0x2Bu) >> 3;
  BOOL v107 = ((v105 + 56) & v106) == 0;
  char v108 = v105 | 0x26;
  char v109 = 54 - v105;
  if (v107) {
    char v109 = v108;
  }
  int v110 = v104 ^ ((((v106 + v109 - 46) ^ (v104 ^ 0x2B) & 0xF7) & 0xFE) >> 1);
  LODWORD(a31) = 463788147;
  int v111 = *(unsigned __int8 *)(v330 + (v85[1] ^ 0xCFLL));
  unsigned int v112 = v111 & 0xFFFFFFBF ^ 0x28 ^ ((v111 | 0xFFFFFFBF) + 68);
  char v113 = *(unsigned char *)(v65 + (v85[10] ^ 0xFBLL));
  uint64_t v114 = *(void *)(v60 + 8 * (LODWORD(STACK[0x3C0]) - 1103)) - 8;
  LODWORD(v338) = (v113 ^ (16 * v113)) ^ 0x74;
  int v115 = *(_DWORD *)(v114 + 4 * ((v113 ^ (16 * v113)) ^ 0xFBu));
  int v116 = v112 ^ (v112 >> 4) ^ (v112 >> 1);
  HIDWORD(v117) = v115 ^ 0xB80D;
  LODWORD(v117) = v115 ^ 0x51870000;
  LODWORD(v337) = v97 - 91;
  uint64_t v118 = *(void *)(v60 + 8 * (LODWORD(STACK[0x3C0]) - 1216)) - 12;
  int v119 = *(_DWORD *)(v118 + 4 * ((v97 - 91) ^ 0xF9u));
  uint64_t v120 = *(void *)(v60 + 8 * (LODWORD(STACK[0x3C0]) - 1109)) - 8;
  HIDWORD(v338) = v100;
  int v121 = *(_DWORD *)(v120 + 4 * (v100 ^ 0x4E));
  int v122 = (v117 >> 16) ^ v119 ^ (16 * (v121 ^ 0xFD02FF64) - 891067965 - ((32 * (v121 ^ 0xFD02FF64)) & 0x95C6C380));
  HIDWORD(v336) = v103 ^ v93;
  unsigned int v123 = v103 ^ v93 ^ 0xDD03A24B;
  uint64_t v124 = *(void *)(v60 + 8 * (LODWORD(STACK[0x3C0]) ^ 0x5B1)) - 4;
  unsigned int v125 = *(_DWORD *)(v124 + 4 * (v123 ^ 0x33u)) ^ v121 ^ (v122 - 772137489 - ((2 * v122) & 0xA3F43BDE));
  int v126 = *(_DWORD *)(v114 + 4 * (LODWORD(STACK[0x3B8]) ^ 0x71u));
  HIDWORD(v117) = v126 ^ 0xB80D;
  LODWORD(v117) = v126 ^ 0x51870000;
  HIDWORD(v337) = v116;
  unsigned int v127 = *(_DWORD *)(v120 + 4 * (v116 ^ 0xBFu)) ^ 0xFD02FF64;
  int v128 = (v117 >> 16) ^ (16 * v127 - 891067965 - ((32 * v127) & 0x95C6C380)) ^ *(_DWORD *)(v118 + 4 * HIBYTE(v123));
  LODWORD(v336) = (*(unsigned char *)(v333 + (v85[11] ^ 0x12)) + (v85[11] ^ 0xFE) - 72);
  unsigned int v129 = *(_DWORD *)(v124 + 4 * (v336 ^ 0xB9)) ^ v127 ^ (v128 - 772137488 + ~((2 * v128) & 0xA3F43BDE));
  unsigned int v130 = *(_DWORD *)(v120 + 4 * BYTE2(v123)) ^ 0xFD02FF64;
  unsigned int v131 = *(unsigned __int8 *)(v65 + (v85[2] ^ 0x26)) ^ 0xFFFFFFA5;
  LODWORD(v335) = v131 ^ (16 * v131);
  int v132 = *(_DWORD *)(v114 + 4 * (v335 ^ 0xFBu));
  HIDWORD(v117) = v132 ^ 0xB80D;
  LODWORD(v117) = v132 ^ 0x51870000;
  HIDWORD(v334) = (v98 - ((2 * v98 + 76) & 0x4E) - 51);
  int v133 = (v117 >> 16) ^ *(_DWORD *)(v118 + 4 * (HIDWORD(v334) ^ 0x40u)) ^ (16 * v130
                                                                           - 891067965
                                                                           - ((32 * v130) & 0x95C6C380));
  HIDWORD(v335) = v343 - 72;
  unsigned int v134 = *(_DWORD *)(v124 + 4 * ((v343 - 72) ^ 0xEBu)) ^ v130 ^ (v133
                                                                                  - 772137489
                                                                                  - ((2 * v133) & 0xA3F43BDE));
  HIDWORD(v339) = v110;
  unsigned int v135 = *(_DWORD *)(v120 + 4 * (v110 ^ 0x57u)) ^ 0xFD02FF64;
  int v136 = *(_DWORD *)(v114 + 4 * (BYTE1(v93) ^ 0x31u));
  HIDWORD(v117) = v136 ^ 0xB80D;
  LODWORD(v117) = v136 ^ 0x51870000;
  int v137 = (v117 >> 16) ^ *(_DWORD *)(v118 + 4 * ((v342 - 91) ^ 0xF7u)) ^ (16 * v135
                                                                                          - 891067965
                                                                                          - ((32 * v135) & 0x95C6C380));
  HIDWORD(a18) = v340 - 72;
  LODWORD(v334) = v342 - 91;
  unsigned int v138 = *(_DWORD *)(v124 + 4 * ((v340 - 72) ^ 0x33u)) ^ v135 ^ (v137
                                                                                  - 772137489
                                                                                  - ((2 * v137) & 0xA3F43BDE));
  unsigned int v139 = *(_DWORD *)(v120 + 4 * (BYTE2(v138) ^ 0xBBu)) ^ 0xFD02FF64;
  int v140 = *(_DWORD *)(v114 + 4 * (BYTE1(v134) ^ 0xF4u));
  HIDWORD(v117) = v140 ^ 0xB80D;
  LODWORD(v117) = v140 ^ 0x51870000;
  BYTE1(v140) = BYTE1(v129) ^ 0xAD;
  unsigned int v141 = v139 ^ *(_DWORD *)(v118 + 4 * (HIBYTE(v125) ^ 0xAA)) ^ *(_DWORD *)(v124
                                                                            + 4 * (v129 ^ 0xDBu)) ^ (16 * v139 - 891067965 - ((32 * v139) & 0x95C6C380)) ^ (v117 >> 16);
  int v142 = *(_DWORD *)(v120 + 4 * (BYTE2(v125) ^ 0xEEu));
  int v143 = *(_DWORD *)(v114 + 4 * ((unsigned __int16)(v138 ^ 0x22E) >> 8));
  HIDWORD(v117) = v143 ^ 0xB80D;
  LODWORD(v117) = v143 ^ 0x51870000;
  int v144 = (16 * (v142 ^ 0xFD02FF64) - 891067965 - ((32 * (v142 ^ 0xFD02FF64)) & 0x95C6C380)) ^ *(_DWORD *)(v118 + 4 * ((v129 ^ 0xF15ADDB) >> 24)) ^ (v117 >> 16);
  unsigned int v145 = *(_DWORD *)(v124 + 4 * (v134 ^ 0x80u)) ^ v142 ^ (v144 - 772137489 - ((2 * v144) & 0xA3F43BDE));
  unsigned int v146 = *(_DWORD *)(v120 + 4 * (BYTE2(v129) ^ 0xD6u)) ^ 0xFD02FF64;
  unsigned int v147 = (16 * v146 - 891067965 - ((32 * v146) & 0x95C6C380)) ^ *(_DWORD *)(v118 + 4 * (HIBYTE(v134) ^ 0x19));
  int v148 = *(_DWORD *)(v114 + 4 * (BYTE1(v125) ^ 0x19u));
  HIDWORD(v117) = v148 ^ 0xB80D;
  LODWORD(v117) = v148 ^ 0x51870000;
  unsigned int v149 = *(_DWORD *)(v124 + 4 * (v138 ^ 0x2Eu)) ^ v146 ^ (v117 >> 16) ^ (v147
                                                                                          - 772137489
                                                                                          - ((2 * v147) & 0xA3F43BDE));
  int v150 = *(_DWORD *)(v120 + 4 * (BYTE2(v134) ^ 0x32u));
  int v151 = *(_DWORD *)(v114 + 4 * BYTE1(v140));
  HIDWORD(v117) = v151 ^ 0xB80D;
  LODWORD(v117) = v151 ^ 0x51870000;
  int v152 = (v117 >> 16) ^ *(_DWORD *)(v118 + 4 * (HIBYTE(v138) ^ 0xBD)) ^ (16 * (v150 ^ 0xFD02FF64)
                                                                         - 891067965
                                                                         - ((32 * (v150 ^ 0xFD02FF64)) & 0x95C6C380));
  unsigned int v153 = v150 ^ *(_DWORD *)(v124 + 4 * (v125 ^ 0xC4u)) ^ 0x8CCB29A0 ^ (v152
                                                                                        - 772137489
                                                                                        - ((2 * v152) & 0xA3F43BDE));
  unsigned int v154 = v153
       - ((2 * v153) & 0x5F186BF6)
       + 797718011
       - ((2 * (v153 - ((2 * v153) & 0x5F186BF6) + 797718011)) & 0x299DA836)
       - 1798384613;
  int v155 = *(_DWORD *)(v120 + 4 * (BYTE2(v154) ^ 0xDu));
  BYTE2(v152) = BYTE2(v149) ^ 0xEB;
  int v156 = *(_DWORD *)(v114 + 4 * ((unsigned __int16)(v149 ^ 0xDFF9) >> 8));
  unsigned int v157 = (16 * (v155 ^ 0xFD02FF64) - 891067965 - ((32 * (v155 ^ 0xFD02FF64)) & 0x95C6C380)) ^ *(_DWORD *)(v118 + 4 * (HIBYTE(v141) ^ 0x47)) ^ (((v156 ^ 0x5187B80Du) >> (v141 & 0x10) >> (v141 & 0x10 ^ 0x10)) + ((v156 << 16) ^ 0xB80D0000));
  unsigned int v158 = v157 - 772137489 - ((2 * v157) & 0xA3F43BDE);
  LOWORD(v157) = v141 ^ 0xC9CF;
  unsigned int v159 = *(_DWORD *)(v124 + 4 * (v145 ^ 0xBDu)) ^ v155 ^ v158;
  unsigned int v160 = *(_DWORD *)(v120 + 4 * ((v141 ^ 0xAEA0C9CF) >> 16)) ^ 0xFD02FF64;
  int v161 = *(_DWORD *)(v114 + 4 * (BYTE1(v154) ^ 0x47u));
  HIDWORD(v117) = v161 ^ 0xB80D;
  LODWORD(v117) = v161 ^ 0x51870000;
  int v162 = (16 * v160 - 891067965 - ((32 * v160) & 0x95C6C380)) ^ *(_DWORD *)(v118 + 4 * (HIBYTE(v145) ^ 0xB6)) ^ (v117 >> 16);
  unsigned int v163 = *(_DWORD *)(v124 + 4 * (v149 ^ 0xF9u)) ^ v160 ^ (v162 - 772137489 - ((2 * v162) & 0xA3F43BDE));
  int v164 = *(_DWORD *)(v118 + 4 * (HIBYTE(v149) ^ 5));
  HIDWORD(v117) = v164 ^ 0x1C3;
  LODWORD(v117) = v164 ^ 0xCAE36000;
  unsigned int v165 = *(_DWORD *)(v120 + 4 * (BYTE2(v145) ^ 0x37u)) ^ 0xFD02FF64;
  unsigned int v166 = (((v117 >> 10) ^ 0x25EB099C) << 10) ^ (16 * v165) ^ (((v117 >> 10) ^ 0x25EB099C) >> 22);
  int v167 = *(_DWORD *)(v114 + 4 * BYTE1(v157));
  HIDWORD(v117) = v167 ^ 0xB80D;
  LODWORD(v117) = v167 ^ 0x51870000;
  int v168 = *(_DWORD *)(v124 + 4 * (v154 ^ 0x28u)) ^ v165 ^ (v117 >> 16) ^ (v166
                                                                                          - 772137489
                                                                                          - ((2 * v166) & 0xA3F43BDE));
  int v169 = *(_DWORD *)(v114 + 4 * (BYTE1(v145) ^ 0x32u));
  HIDWORD(v117) = v169 ^ 0xB80D;
  LODWORD(v117) = v169 ^ 0x51870000;
  unsigned int v170 = *(_DWORD *)(v120 + 4 * BYTE2(v152)) ^ 0xFD02FF64;
  int v171 = (v117 >> 16) ^ (16 * v170 - 891067965 - ((32 * v170) & 0x95C6C380)) ^ *(_DWORD *)(v118
                                                                                         + 4 * (HIBYTE(v154) ^ 0x7D));
  unsigned int v172 = *(_DWORD *)(v124 + 4 * (v157 ^ 0x33u)) ^ v170 ^ (v171 - 772137489 - ((2 * v171) & 0xA3F43BDE));
  unsigned int v173 = *(_DWORD *)(v120 + 4 * (BYTE2(v172) ^ 0x62u)) ^ 0xFD02FF64;
  unsigned int v174 = (16 * v173 - 891067965 - ((32 * v173) & 0x95C6C380)) ^ *(_DWORD *)(v118 + 4 * (HIBYTE(v159) ^ 0x20));
  unsigned int v175 = v168 ^ 0xF1F7E4A6;
  int v176 = *(_DWORD *)(v114 + 4 * ((unsigned __int16)(v168 ^ 0xE4A6) >> 8));
  HIDWORD(v117) = v176 ^ 0xB80D;
  LODWORD(v117) = v176 ^ 0x51870000;
  unsigned int v177 = *(_DWORD *)(v124 + 4 * (v163 ^ 0x68u)) ^ v173 ^ (v117 >> 16) ^ (v174
                                                                                          - 772137489
                                                                                          - ((2 * v174) & 0xA3F43BDE));
  int v178 = *(_DWORD *)(v114 + 4 * ((unsigned __int16)(v172 ^ 0x2957) >> 8));
  HIDWORD(v117) = v178 ^ 0xB80D;
  LODWORD(v117) = v178 ^ 0x51870000;
  unsigned int v179 = *(_DWORD *)(v120 + 4 * (BYTE2(v159) ^ 0x59u)) ^ 0xFD02FF64;
  int v180 = (16 * v179 - 891067965 - ((32 * v179) & 0x95C6C380)) ^ *(_DWORD *)(v118 + 4 * (HIBYTE(v163) ^ 0xCE)) ^ (v117 >> 16);
  unsigned int v181 = *(_DWORD *)(v124 + 4 * (v168 ^ 0x15u)) ^ v179 ^ (v180 - 772137489 - ((2 * v180) & 0xA3F43BDE));
  unsigned int v182 = *(_DWORD *)(v120 + 4 * (BYTE2(v163) ^ 0x60u)) ^ 0xFD02FF64;
  int v183 = *(_DWORD *)(v114 + 4 * (BYTE1(v159) ^ 0x64u));
  HIDWORD(v117) = v183 ^ 0xB80D;
  LODWORD(v117) = v183 ^ 0x51870000;
  int v184 = (16 * v182 - 891067965 - ((32 * v182) & 0x95C6C380)) ^ *(_DWORD *)(v118 + 4 * HIBYTE(v175)) ^ (v117 >> 16);
  unsigned int v185 = *(_DWORD *)(v124 + 4 * (v172 ^ 0x57u)) ^ v182 ^ (v184 - 772137489 - ((2 * v184) & 0xA3F43BDE));
  int v186 = *(_DWORD *)(v120 + 4 * BYTE2(v175));
  if ((v163 & 0x1000) != 0) {
    int v187 = -16;
  }
  else {
    int v187 = 16;
  }
  unsigned int v188 = v186 ^ 0xFD02FF64;
  unsigned int v189 = *(_DWORD *)(v114 + 4 * (((BYTE1(v163) ^ 0xC) + v187) ^ 0x83u));
  unsigned int v190 = *(_DWORD *)(v118 + 4 * (HIBYTE(v172) ^ 0xA1)) ^ HIWORD(v189) ^ (v189 << 16) ^ (16 * v188
                                                                                        - 891067965
                                                                                        - ((32 * v188) & 0x95C6C380)) ^ 0xB80D5187;
  unsigned int v191 = *(_DWORD *)(v124 + 4 * (v159 ^ 7u)) ^ v188 ^ (v190 - 772137489 - ((2 * v190) & 0xA3F43BDE));
  int v192 = *(_DWORD *)(v114 + 4 * ((unsigned __int16)(v185 ^ 0x8D48) >> 8));
  HIDWORD(v193) = v192 ^ 0xB80D;
  LODWORD(v193) = v192 ^ 0x51870000;
  unsigned int v194 = *(_DWORD *)(v120 + 4 * ((v191 ^ 0xEFBC3B44) >> 16)) ^ 0xFD02FF64;
  int v195 = (v193 >> 16) ^ *(_DWORD *)(v118 + 4 * (HIBYTE(v177) ^ 0xCC)) ^ (16 * v194
                                                                         - 891067965
                                                                         - ((32 * v194) & 0x95C6C380));
  int v196 = *(_DWORD *)(v124 + 4 * (v181 ^ 0xA9u)) ^ v194;
  int v197 = *(_DWORD *)(v114 + 4 * ((unsigned __int16)(v191 ^ 0x3B44) >> 8));
  HIDWORD(v193) = v197 ^ 0xB80D;
  LODWORD(v193) = v197 ^ 0x51870000;
  unsigned int v198 = v196 ^ (v195 - 772137489 - ((2 * v195) & 0xA3F43BDE));
  LOWORD(v195) = v177 ^ 0xD583;
  unsigned int v199 = *(_DWORD *)(v120 + 4 * (((v177 ^ 0x255FD583) >> 16) ^ 0xC3u)) ^ 0xFD02FF64;
  int v200 = (v193 >> 16) ^ *(_DWORD *)(v118 + 4 * HIBYTE(v181)) ^ (16 * v199 - 891067965 - ((32 * v199) & 0x95C6C380));
  unsigned int v201 = *(_DWORD *)(v124 + 4 * (v185 ^ 0x48u)) ^ v199 ^ (v200 - 772137489 - ((2 * v200) & 0xA3F43BDE));
  int v202 = *(_DWORD *)(v114 + 4 * BYTE1(v195));
  HIDWORD(v193) = v202 ^ 0xB80D;
  LODWORD(v193) = v202 ^ 0x51870000;
  unsigned int v203 = *(_DWORD *)(v120 + 4 * ((v181 ^ 0xE93411A9) >> 16)) ^ 0xFD02FF64;
  int v204 = (16 * v203 - 891067965 - ((32 * v203) & 0x95C6C380)) ^ *(_DWORD *)(v118 + 4 * ((v185 ^ 0x807D8D48) >> 24)) ^ (v193 >> 16);
  int v205 = *(_DWORD *)(v114 + 4 * (BYTE1(v181) ^ 0x82u));
  unsigned int v206 = *(_DWORD *)(v124 + 4 * (v191 ^ 0x77u)) ^ v203 ^ (v204 - 772137489 - ((2 * v204) & 0xA3F43BDE));
  HIDWORD(v193) = v205 ^ 0xB80D;
  LODWORD(v193) = v205 ^ 0x51870000;
  unsigned int v207 = *(_DWORD *)(v120 + 4 * (BYTE2(v185) ^ 0xBEu)) ^ 0xFD02FF64;
  int v208 = (v193 >> 16) ^ *(_DWORD *)(v118 + 4 * ((v191 ^ 0xEFBC3B44) >> 24)) ^ (16 * v207
                                                                               - 891067965
                                                                               - ((32 * v207) & 0x95C6C380));
  unsigned int v209 = *(_DWORD *)(v124 + 4 * v195) ^ v207 ^ (v208 - 772137489 - ((2 * v208) & 0xA3F43BDE));
  unsigned int v210 = *(_DWORD *)(v120 + 4 * ((v209 ^ 0x950DA39D) >> 16)) ^ 0xFD02FF64;
  int v211 = *(_DWORD *)(v114 + 4 * (BYTE1(v206) ^ 0x89u));
  unsigned int v212 = (16 * v210 - 891067965 - ((32 * v210) & 0x95C6C380)) ^ *(_DWORD *)(v118 + 4 * ((v198 ^ 0x11521BCA) >> 24));
  HIDWORD(v193) = v211 ^ 0xB80D;
  LODWORD(v193) = v211 ^ 0x51870000;
  unsigned int v213 = v212 - 772137489 - ((2 * v212) & 0xA3F43BDE);
  BYTE1(v212) = BYTE1(v201) ^ 0xD1;
  int v214 = v210 ^ *(_DWORD *)(v124 + 4 * (v201 ^ 0x88u)) ^ (v193 >> 16) ^ v213;
  int v215 = *(_DWORD *)(v120 + 4 * ((v198 ^ 0x11521BCA) >> 16));
  int v216 = *(_DWORD *)(v114 + 4 * (BYTE1(v209) ^ 0x30u));
  HIDWORD(v193) = v216 ^ 0xB80D;
  LODWORD(v193) = v216 ^ 0x51870000;
  int v217 = (16 * (v215 ^ 0xFD02FF64) - 891067965 - ((32 * (v215 ^ 0xFD02FF64)) & 0x95C6C380)) ^ *(_DWORD *)(v118 + 4 * (HIBYTE(v201) ^ 0xDF)) ^ (v193 >> 16);
  unsigned int v218 = v206 ^ 0x7A851A70;
  unsigned int v219 = *(_DWORD *)(v124 + 4 * (v206 ^ 0x43u)) ^ v215 ^ (v217 - 772137489 - ((2 * v217) & 0xA3F43BDE));
  unsigned int v220 = *(_DWORD *)(v120 + 4 * (BYTE2(v201) ^ 0xA7u)) ^ 0xFD02FF64;
  int v221 = *(_DWORD *)(v114 + 4 * (BYTE1(v198) ^ 0x88u));
  HIDWORD(v193) = v221 ^ 0xB80D;
  LODWORD(v193) = v221 ^ 0x51870000;
  int v222 = (16 * v220 - 891067965 - ((32 * v220) & 0x95C6C380)) ^ *(_DWORD *)(v118
                                                                          + 4
                                                                          * ((HIBYTE(v218) ^ -HIBYTE(v218) ^ ((HIBYTE(v218) ^ 0xFFFFFF16) + 234))
                                                                           + 233)) ^ (v193 >> 16);
  unsigned int v223 = *(_DWORD *)(v124 + 4 * (v209 ^ 0x9Du)) ^ v220 ^ (v222 - 772137489 - ((2 * v222) & 0xA3F43BDE));
  int v224 = *(_DWORD *)(v114 + 4 * BYTE1(v212));
  HIDWORD(v193) = v224 ^ 0xB80D;
  LODWORD(v193) = v224 ^ 0x51870000;
  int v225 = *(_DWORD *)(v120 + 4 * BYTE2(v218));
  int v226 = (v193 >> 16) ^ *(_DWORD *)(v118 + 4 * (HIBYTE(v209) ^ 0x7C)) ^ (16 * (v225 ^ 0xFD02FF64)
                                                                         - 891067965
                                                                         - ((32 * (v225 ^ 0xFD02FF64)) & 0x95C6C380));
  unsigned int v227 = *(_DWORD *)(v124 + 4 * (v198 ^ 0xF9u)) ^ v225 ^ (v226 - 772137489 - ((2 * v226) & 0xA3F43BDE));
  int v228 = *(_DWORD *)(v120 + 4 * (BYTE2(v227) ^ 0x85u));
  int v229 = *(_DWORD *)(v114 + 4 * ((unsigned __int16)(v223 ^ 0xDE69) >> 8));
  HIDWORD(v193) = v229 ^ 0xB80D;
  LODWORD(v193) = v229 ^ 0x51870000;
  unsigned int v230 = (v214 ^ 0x71C9D6C4) - 2 * ((v214 ^ 0x71C9D6C4) & 0x5B89B5B6 ^ v214 & 2) - 611732044;
  int v231 = (v193 >> 16) ^ (16 * (v228 ^ 0xFD02FF64) - 891067965 - ((32 * (v228 ^ 0xFD02FF64)) & 0x95C6C380)) ^ *(_DWORD *)(v118 + 4 * (HIBYTE(v230) ^ 0xB2));
  unsigned int v232 = *(_DWORD *)(v124 + 4 * (v219 ^ 0xB7u)) ^ v228 ^ (v231
                                                                           - 772137488
                                                                           + ~((2 * v231) & 0xA3F43BDE));
  int v233 = *(_DWORD *)(v114 + 4 * (BYTE1(v227) ^ 0xC0u));
  HIDWORD(v193) = v233 ^ 0xB80D;
  LODWORD(v193) = v233 ^ 0x51870000;
  unsigned int v234 = *(_DWORD *)(v120 + 4 * (BYTE2(v230) ^ 0xE3u)) ^ 0xFD02FF64;
  unsigned int v235 = v234 ^ *(_DWORD *)(v118 + 4 * (HIBYTE(v219) ^ 0x20)) ^ *(_DWORD *)(v124
                                                                            + 4 * (v223 ^ 0x69u)) ^ ((v193 >> 16) - 772137489 - ((2 * (v193 >> 16)) & 0xA3F43BDE)) ^ (16 * v234 - 891067965 - ((32 * v234) & 0x95C6C380));
  unsigned int v236 = *(_DWORD *)(v120 + 4 * (BYTE2(v219) ^ 0xF8u)) ^ 0xFD02FF64;
  int v237 = *(_DWORD *)(v114 + 4 * (BYTE1(v230) ^ 0xDEu));
  HIDWORD(v193) = v237 ^ 0xB80D;
  LODWORD(v193) = v237 ^ 0x51870000;
  int v238 = (16 * v236 - 891067965 - ((32 * v236) & 0x95C6C380)) ^ *(_DWORD *)(v118 + 4 * ((v223 ^ 0x5FEEDE69) >> 24)) ^ (v193 >> 16);
  unsigned int v239 = *(_DWORD *)(v124
                   + 4
                   * ((((v227 ^ 0x2B) + (v227 ^ 0xFFFFFFE7) + 1) ^ 0xFFFFFFFE)
                    + (v227 ^ 0x2B))) ^ v236 ^ (v238 - 772137489 - ((2 * v238) & 0xA3F43BDE));
  unsigned int v240 = *(_DWORD *)(v120 + 4 * (BYTE2(v223) ^ 0x2Du)) ^ 0xFD02FF64;
  int v241 = *(_DWORD *)(v114 + 4 * (BYTE1(v219) ^ 0x20u));
  HIDWORD(v193) = v241 ^ 0xB80D;
  LODWORD(v193) = v241 ^ 0x51870000;
  int v242 = (v193 >> 16) ^ (16 * v240 - 891067965 - ((32 * v240) & 0x95C6C380)) ^ *(_DWORD *)(v118
                                                                                         + 4
                                                                                         * ((HIBYTE(v227) ^ 0xE8) & 0x90 ^ 0x86u ^ (~(2 * (HIBYTE(v227) ^ 0xE8 | 0x90)) + (HIBYTE(v227) ^ 0xE8 | 0x90))));
  unsigned int v243 = *(_DWORD *)(v124 + 4 * (v230 ^ 0xEFu)) ^ v240 ^ (v242 - 772137489 - ((2 * v242) & 0xA3F43BDE));
  unsigned int v244 = *(_DWORD *)(v120 + 4 * ((v243 ^ 0x59A5F4B7) >> 16)) ^ 0xFD02FF64;
  int v245 = *(_DWORD *)(v114 + 4 * ((unsigned __int16)(v239 ^ 0x872B) >> 8));
  HIDWORD(v193) = v245 ^ 0xB80D;
  LODWORD(v193) = v245 ^ 0x51870000;
  int v246 = (16 * v244 - 891067965 - ((32 * v244) & 0x95C6C380)) ^ *(_DWORD *)(v118 + 4 * (HIBYTE(v232) ^ 0x2F)) ^ (v193 >> 16);
  unsigned int v247 = *(_DWORD *)(v124 + 4 * (v235 ^ 0xEEu)) ^ v244 ^ (v246 - 772137489 - ((2 * v246) & 0xA3F43BDE));
  unsigned int v248 = *(_DWORD *)(v120 + 4 * (BYTE2(v232) ^ 0x27u)) ^ 0xFD02FF64;
  int v249 = *(_DWORD *)(v114 + 4 * (BYTE1(v243) ^ 0x67u));
  HIDWORD(v193) = v249 ^ 0xB80D;
  LODWORD(v193) = v249 ^ 0x51870000;
  int v250 = *(_DWORD *)(v114 + 4 * (BYTE1(v232) ^ 0x44u));
  int v251 = v248 ^ *(_DWORD *)(v118 + 4 * (HIBYTE(v235) ^ 0xD6)) ^ *(_DWORD *)(v124
                                                                            + 4 * (v239 ^ 0x18u)) ^ (16 * v248 - 891067965 - ((32 * v248) & 0x95C6C380)) ^ ((v193 >> 16) - 772137488 + ~((2 * (v193 >> 16)) & 0xA3F43BDE));
  HIDWORD(v193) = v250 ^ 0xB80D;
  LODWORD(v193) = v250 ^ 0x51870000;
  unsigned int v252 = *(_DWORD *)(v120 + 4 * (BYTE2(v235) ^ 0x56u)) ^ 0xFD02FF64;
  int v253 = *(_DWORD *)(v118 + 4 * ((v239 ^ 0x911B872B) >> 24)) ^ v252 ^ 0x6D41727E ^ (16 * v252
                                                                                    - 891067965
                                                                                    - ((32 * v252) & 0x95C6C380)) ^ (v193 >> 16);
  unsigned int v254 = *(_DWORD *)(v120 + 4 * (BYTE2(v239) ^ 0xD8u)) ^ 0xFD02FF64;
  int v255 = *(_DWORD *)(v114 + 4 * (BYTE1(v235) ^ 0xE4u));
  HIDWORD(v193) = v255 ^ 0xB80D;
  LODWORD(v193) = v255 ^ 0x51870000;
  int v256 = (v193 >> 16) ^ *(_DWORD *)(v118 + 4 * (HIBYTE(v243) ^ 0xB0)) ^ (16 * v254
                                                                         - 891067965
                                                                         - ((32 * v254) & 0x95C6C380));
  unsigned int v257 = *(_DWORD *)(v124 + 4 * (v232 ^ 0xC2u)) ^ v254 ^ (v256 - 772137489 - ((2 * v256) & 0xA3F43BDE));
  HIDWORD(v193) = *(_DWORD *)(v124 + 4 * (v243 ^ 0xB7u)) ^ 0xCD72B955;
  LODWORD(v193) = HIDWORD(v193);
  int v258 = *(_DWORD *)(v114
                   + 4
                   * (((unsigned __int16)(*(_WORD *)(v124 + 4 * (v232 ^ 0xC2u)) ^ v254 ^ (v256 + 7663 - ((2 * v256) & 0x3BDE))) >> 8) ^ 0x66u));
  int v259 = (v193 >> 21) ^ __ROR4__(v253, 21);
  HIDWORD(v193) = v258 ^ 0xB80D;
  LODWORD(v193) = v258 ^ 0x51870000;
  unsigned int v260 = *(_DWORD *)(v120 + 4 * (BYTE2(v247) ^ 0x74u)) ^ 0xFD02FF64;
  int v261 = v251 ^ 0x177CD9D9;
  int v262 = *(_DWORD *)(v118 + 4 * ((v251 ^ 0x177CD9D9u) >> 24)) ^ 0x6D41727E ^ v260 ^ (16 * v260
                                                                                     - 891067965
                                                                                     - ((32 * v260) & 0x95C6C380)) ^ (v193 >> 16);
  HIDWORD(v193) = v259 ^ 0x549BF9D9;
  LODWORD(v193) = v259 ^ 0x549BF9D9;
  int v263 = v193 >> 11;
  int v264 = *(_DWORD *)(v124 + 4 * ((v193 >> 11) ^ 0xEFu));
  int v265 = (v262 & 0x200 ^ 0x7BCFFFE9) + 2 * (v262 & 0x200);
  BOOL v107 = ((v265 - 2077229033) & (v264 ^ 0xD1FA1DEF)) == 0;
  unsigned int v266 = *(_DWORD *)(v120 + 4 * (BYTE2(v257) ^ 0x72u)) ^ 0xFD02FF64;
  int v267 = *(_DWORD *)(v114 + 4 * (BYTE1(v263) ^ 0xA0u));
  HIDWORD(v193) = v267 ^ 0xB80D;
  LODWORD(v193) = v267 ^ 0x51870000;
  int v268 = (v193 >> 16) ^ *(_DWORD *)(v118 + 4 * ((v247 ^ 0xD4B73D47) >> 24)) ^ (16 * v266
                                                                               - 891067965
                                                                               - ((32 * v266) & 0x95C6C380));
  unsigned int v269 = *(_DWORD *)(v124 + 4 * (v251 ^ 0xEAu)) ^ v266 ^ (v268 - 772137489 - ((2 * v268) & 0xA3F43BDE));
  int v270 = v265 - 692832;
  int v271 = -141202062 - v265;
  if (!v107) {
    int v270 = v271;
  }
  unsigned int v272 = ((v264 ^ 0xCD72B955) - 2076536201 + v270) ^ v262 & 0xFFFFFDFF;
  unsigned int v273 = *(_DWORD *)(v120 + 4 * BYTE2(v261)) ^ 0xFD02FF64;
  unsigned int v274 = (16 * v273 - 891067965 - ((32 * v273) & 0x95C6C380)) ^ *(_DWORD *)(v118 + 4 * ((v263 ^ 0x1EA133EFu) >> 24));
  int v275 = *(_DWORD *)(v114 + 4 * (BYTE1(v247) ^ 0xAEu));
  HIDWORD(v276) = v275 ^ 0xB80D;
  LODWORD(v276) = v275 ^ 0x51870000;
  int v277 = *(_DWORD *)(v120 + 4 * (BYTE2(v263) ^ 0x62u));
  unsigned int v278 = *(_DWORD *)(v124 + 4 * (v257 ^ 0xDu)) ^ v273 ^ (v276 >> 16) ^ (v274
                                                                                         - 772137489
                                                                                         - ((2 * v274) & 0xA3F43BDE));
  v277 ^= 0xFD02FF64;
  int v279 = *(_DWORD *)(v114 + 4 * BYTE1(v261));
  HIDWORD(v276) = v279 ^ 0xB80D;
  LODWORD(v276) = v279 ^ 0x51870000;
  int v280 = (16 * v277 - 891067965 - ((32 * v277) & 0x95C6C380)) ^ *(_DWORD *)(v118 + 4 * (HIBYTE(v257) ^ 0x32)) ^ (v276 >> 16);
  unsigned int v281 = *(_DWORD *)(v124 + 4 * (v247 ^ 0x74u)) ^ v277 ^ (v280 - 772137489 - ((2 * v280) & 0xA3F43BDE));
  v282 = (char *)*(&off_100233720 + (LODWORD(STACK[0x3C0]) ^ 0x5A9)) - 12;
  v283 = (char *)*(&off_100233720 + LODWORD(STACK[0x3C0]) - 1182) - 8;
  v284 = (char *)*(&off_100233720 + (LODWORD(STACK[0x3C0]) ^ 0x531)) - 8;
  unsigned int v285 = *(_DWORD *)&v283[4 * (BYTE2(v269) ^ 0x99)] ^ 0xC6B3AD94;
  unsigned int v286 = (*(_DWORD *)&v282[4 * (((v272 ^ 0xF137909F) >> 24) ^ 0xB4)]
        + (((v272 ^ 0xF137909F) >> 24) ^ 0x9FD52929)
        - 403400530) ^ (~((2 * (v278 ^ 0x7B) + 2044928224) & 0x59A103B4)
                      + (v278 ^ 0x7B)
                      - 1413081013) ^ v285 ^ (v285 >> 2) ^ *(_DWORD *)&v284[4 * (v278 ^ 0x79)] ^ (v285 >> 4);
  v287 = (char *)*(&off_100233720 + (LODWORD(STACK[0x3C0]) ^ 0x537)) - 8;
  unsigned int v288 = *(_DWORD *)&v287[4 * ((unsigned __int16)(v281 ^ 0x7C9C) >> 8)] ^ 0x9BDE2A9A;
  int v289 = v288 ^ (1515496080 * v288);
  unsigned int v290 = v269 ^ 0x6792B6A6;
  int v291 = *(_DWORD *)&v282[4 * (((v269 ^ 0x6792B6A6) >> 24) ^ 0xB4)];
  HIDWORD(v341) = *(_DWORD *)&v282[4 * (HIBYTE(v278) ^ 0xB4)];
  unsigned int v292 = (v281 ^ 0x250E7C9C) >> 24;
  HIDWORD(v344) = *(_DWORD *)&v282[4 * (v292 ^ 0xB4)];
  int v293 = *(_DWORD *)&v283[4 * (BYTE2(v281) ^ 5)];
  int v294 = *(_DWORD *)&v283[4 * ((v272 ^ 0xF137909F) >> 16)];
  LODWORD(v344) = *(_DWORD *)&v283[4 * ((v278 ^ 0xBC37B) >> 16)];
  int v295 = *(_DWORD *)&v287[4 * ((unsigned __int16)(v278 ^ 0xC37B) >> 8)];
  int v296 = *(_DWORD *)&v287[4 * ((unsigned __int16)(v269 ^ 0xB6A6) >> 8)];
  uint64_t v297 = *(unsigned int *)&v287[4 * (BYTE1(v272) ^ 0x5E)];
  LODWORD(v282) = *(_DWORD *)&v284[4 * (v272 ^ 0x9D)];
  int v298 = *(_DWORD *)&v284[4 * (v281 ^ 0x9E)];
  LODWORD(v341) = *(_DWORD *)&v284[4 * (v269 ^ 0xA4)];
  unsigned int v299 = ((v286 ^ v289) - 1799862202 - ((2 * (v286 ^ v289)) & 0x2970908C)) ^ LODWORD(STACK[0x208]);
  uint64_t v300 = (uint64_t)*(&off_100233720 + (LODWORD(STACK[0x3C0]) ^ 0x532));
  v328[5] = *(unsigned char *)(v300 + (((v299 ^ 0x5244C6B3) >> 16) ^ 0x5ELL)) ^ ((v299 ^ 0x5244C6B3) >> 16) ^ 0x8A ^ ((((v299 ^ 0x5244C6B3) >> 16) ^ 0x8A) - ((2 * (((v299 ^ 0x5244C6B3) >> 16) ^ 0x8A) + 46) & 0x2A) + 12) ^ 0xB9;
  unsigned int v301 = v293 ^ 0xC6B3AD94 ^ ((HIBYTE(v290) ^ 0x9FD52929) - 403400530 + v291) ^ ((v293 ^ 0xC6B3AD94) >> 2) ^ ((v293 ^ 0xC6B3AD94) >> 4) ^ v295 ^ 0x9BDE2A9A ^ v282 ^ (1515496080 * (v295 ^ 0x9BDE2A9A)) ^ ((v272 ^ 0x9F) - 1413081013 + ((2 * (((v272 ^ 0x9F) + 112) & 0xFFFFFFDF ^ (v272 ^ 0xF137909F | 0x7FFFFFFA))) ^ 0x59A1000B));
  unsigned int v302 = (v301 - 2071991265 - ((2 * v301) & 0x8FFD948) + 133) ^ LODWORD(STACK[0x348]);
  unsigned int v303 = v302 ^ 0x22A932A6;
  uint64_t v304 = (BYTE1(v303) | 0x88) ^ (v303 >> 8) & 0x88;
  v305 = (char *)*(&off_100233720 + LODWORD(STACK[0x3C0]) - 1139) - 8;
  v328[2] = (((unsigned __int16)(v302 ^ 0x32A6) >> 8) | 0x88) ^ ((unsigned __int16)(v302 ^ 0x32A6) >> 8) & 0x88 ^ 0x35 ^ ((v305[v304 ^ 0x14] ^ 0x2C) - ((2 * v305[v304 ^ 0x14]) & 0x20) - 112);
  unsigned int v306 = v294 ^ 0xC6B3AD94 ^ ((HIBYTE(v278) ^ 0x9FD52929) - 403400530 + HIDWORD(v341)) ^ ((v294 ^ 0xC6B3AD94) >> 2) ^ ((v294 ^ 0xC6B3AD94) >> 4);
  unsigned int v307 = (v306 & 0x1000000 ^ 0xDFDE7F2D) + 2 * (v306 & 0x1000000);
  v308 = (char *)*(&off_100233720 + LODWORD(STACK[0x3C0]) - 1227) - 8;
  BOOL v107 = ((v307 + 539066579) & (v298 ^ 0x2E000000)) == 0;
  HIDWORD(v276) = v308[HIBYTE(v299) ^ 0xEFLL];
  LODWORD(v276) = (HIDWORD(v276) ^ 0xFFFFFFBF) << 24;
  v328[STACK[0x2B8]] = (v276 >> 29) ^ 0x83;
  unsigned int v309 = v307 + 738183928;
  unsigned int v310 = -339949230 - v307;
  if (v107) {
    unsigned int v310 = v309;
  }
  unsigned int v311 = v306 & 0xFEFFFFFF ^ (1515496080 * (v296 ^ 0x9BDE2A9A)) ^ ((((v281 ^ 0x9C)
                                                                   - 1413081013
                                                                   + ((2
                                                                     * (((v281 ^ 0x9C) + 112) & 0x1DE ^ (v281 ^ 0x250E7C9C | 0x7FFFFFFB))) ^ 0x59A10009)) ^ v298)
                                                                 - 199117349
                                                                 + v310);
  unsigned int v312 = v296 ^ 0x9BDE2A9A ^ LODWORD(STACK[0x380]) ^ (v311 + 423990042 - ((2 * v311) & 0x328B26B8) + 66);
  v313 = (char *)*(&off_100233720 + (LODWORD(STACK[0x3C0]) ^ 0x528)) - 4;
  v328[11] = v313[v312 ^ 0x28] ^ 0xF;
  HIDWORD(v314) = v308[HIBYTE(v302) ^ 0xF9];
  LODWORD(v314) = (HIDWORD(v314) ^ 0xFFFFFFBF) << 24;
  unsigned char *v328 = (v314 >> 29) ^ 0xFB;
  v328[1] = BYTE2(v303) ^ 0x61 ^ ((BYTE2(v303) ^ 0x61) - ((2 * (BYTE2(v303) ^ 0x61) + 46) & 0x2A) + 12) ^ 0xB8 ^ *(unsigned char *)(v300 + (BYTE2(v303) ^ 0xB5));
  unsigned int v315 = (v292 ^ 0x9FD52929) - 403400530 + HIDWORD(v344);
  int v316 = v344 ^ 0xC6B3AD94 ^ ((v344 ^ 0xC6B3AD94) >> 4) ^ ((v344 ^ 0xC6B3AD94) >> 2);
  int v317 = (v316 & 0x80000 ^ 0x7EFFCF7E) + 2 * (v316 & 0x80000);
  BOOL v107 = ((v317 - 2130694014) & v315) == 0;
  int v318 = v317 - 1612809576;
  int v319 = -1646388844 - v317;
  if (v107) {
    int v319 = v318;
  }
  int v320 = v316 & 0xFFF7FFFF ^ (v315 - 517884438 + v319) ^ (1515496080 * (v297 ^ 0x9BDE2A9A));
  int v321 = v341 ^ (v290 + 2096205936) ^ (v320 - ((2 * v320) & 0x5DA90FB4) + 785680346);
  unsigned int v322 = v297 ^ LODWORD(STACK[0x390]) ^ (v321 - 562366072 - ((2 * v321) & 0xBCF5F370) + 48);
  v328[13] = *(unsigned char *)(v300 + (BYTE2(v322) ^ 0x45) + ((v322 >> 15) & 0x1A8 ^ 0xFFFFFF77) + 213) ^ BYTE2(v322) ^ ((BYTE2(v322) ^ 0x45) - ((2 * (BYTE2(v322) ^ 0x45) + 46) & 0x2A) + 12) ^ 0xC3;
  HIDWORD(v323) = v308[HIBYTE(v322) ^ 0x61];
  LODWORD(v323) = (HIDWORD(v323) ^ 0xFFFFFFBF) << 24;
  v328[STACK[0x250]] = (v323 >> 29) ^ 0x50;
  v328[9] = ((v312 ^ 0xCFDDD967) >> 16) ^ 0x94 ^ ((((v312 ^ 0xCFDDD967) >> 16) ^ 0x94)
                                                - ((2 * (((v312 ^ 0xCFDDD967) >> 16) ^ 0x94) + 46) & 0x2A)
                                                + 12) ^ *(unsigned char *)(v300
                                                                 + (((v312 ^ 0xCFDDD967) >> 16) ^ 0x40)) ^ 0xC;
  unsigned int v324 = (((v322 ^ 0xC4EBB8B5) >> 4) & 0xF0 | ((unsigned __int16)(v322 ^ 0xB8B5) >> 12)) ^ 0xE6;
  v328[STACK[0x388]] = v305[((v324 >> 4) & 0xFFFFFF0F | (16 * (v324 & 0xF))) ^ 0xAELL] ^ (((v324 >> 4) & 0xF | (16 * (v324 & 0xF)))
                                                                                        - ((2
                                                                                          * ((v324 >> 4) & 0xF | (16 * (v324 & 0xF)))) & 0x58)
                                                                                        + 44) ^ 0x2B;
  v328[10] = (((unsigned __int16)(v312 ^ 0xD967) >> 8) - (((v312 ^ 0xCFDDD967) >> 7) & 0x58) + 44) ^ 0xDB ^ v305[((unsigned __int16)(v312 ^ 0xD967) >> 8) ^ 0xA0];
  v328[STACK[0x378]] = (((unsigned __int16)(v299 ^ 0xC6B3) >> 8) - (((v299 ^ 0x5244C6B3) >> 7) & 0x58) + 44) ^ v305[((unsigned __int16)(v299 ^ 0xC6B3) >> 8) ^ 0x75] ^ 0x80;
  v328[STACK[0x340]] = v313[v302 ^ 0x95] ^ 0xA2;
  v328[STACK[0x248]] = v313[v299 ^ 0x7FLL] ^ 0x33;
  int v325 = STACK[0x3C0];
  v328[STACK[0x398]] = v313[v322 ^ 0x1ALL] ^ 0x9C;
  int v326 = 463788163 - 2 * (STACK[0x2C0] & 0x10);
  HIDWORD(v323) = v308[HIBYTE(v312) ^ 0x49];
  LODWORD(v323) = (HIDWORD(v323) ^ 0xFFFFFFBF) << 24;
  v328[STACK[0x350]] = (v323 >> 29) ^ 0x2E;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned char *, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 8 * ((7 * ((v326 ^ 0x1BA4D870u) < 0x150)) ^ v325)))(v313, 3891566766, 42, 88, v305, v297, 97, v308, a3, a4, a5, a6, a7, a8, a9, a10, a11, v328, v329,
           v330,
           v331,
           v332,
           v333,
           a18,
           v334,
           v335,
           v336,
           v337,
           v338,
           v339,
           v341,
           v344,
           2,
           5,
           11,
           1,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           10,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           9);
}

uint64_t sub_100025520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v3
                                                                                         + 8
                                                                                         * ((((((v4 < 0x341384C7) ^ 0xFA) & 1) == 0)
                                                                                           * (v5 + 1233907444)) ^ (v5 + 1233908638))))(a1, a2, a3, 2538041562, 781115828, 3061059863);
}

uint64_t sub_10002558C@<X0>(int a1@<W8>)
{
  uint64_t v5 = 4 * (v1 - 126673897);
  unsigned int v6 = *(_DWORD *)(v2 + 4 * (v1 - 126673898));
  int v7 = (((v6 >> 30) ^ 2) - 1756925734 - ((2 * ((v6 >> 30) ^ 2)) & 4)) ^ v6;
  int v8 = ((1566083941 * v7 - 1756925734 - ((984684234 * v7) & 0x2E8EE1B4)) ^ *(_DWORD *)(v2 + v5)) - v1;
  *(_DWORD *)(v2 + v5) = v8 - ((2 * v8 + 253347794) & 0x2E8EE1B4) - 1630251837;
  unint64_t v9 = STACK[0x3D0];
  LODWORD(v5) = (a1 + 1473596752) ^ STACK[0x3D0];
  *(_DWORD *)(v4 - 160) = (a1 + 1473596669) ^ STACK[0x3D0];
  *(_DWORD *)(v4 - 172) = v5;
  *(_DWORD *)(v4 - 168) = v5 ^ 0x15;
  *(_DWORD *)(v4 - 200) = v9 + a1 - 504208067;
  *(_DWORD *)(v4 - 176) = -(int)v9;
  *(void *)(v4 - 192) = STACK[0x3C8];
  *(void *)(v4 - 184) = (v1 + 906691539) ^ v9;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (a1 ^ 0xCD3)))(v4 - 200);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v4 - 164)))(v10);
}

uint64_t sub_1000256B8@<X0>(int a1@<W8>, int a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  BOOL v9 = ((v7 + ((a1 + 1330594206) ^ 0x4F4F48B8) + ((a1 + 1330594206) & 0xB0B0B6A7) - 490) ^ a7) > a3;
  return (*(uint64_t (**)(void))(v8 + 8 * ((v9 | (32 * v9)) ^ a1)))();
}

uint64_t sub_100025714@<X0>(int a1@<W5>, int a2@<W8>)
{
  return sub_10004C040(a1, a2);
}

uint64_t sub_100025744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * ((((v13 ^ ((a11 ^ v11) > 0x14)) & 1) * (((v13 - 519) | 0x382) - 839)) ^ v13)))();
}

uint64_t sub_100025780(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25)
{
  unsigned int v28 = (a25 ^ v27) - ((2 * (a25 ^ v27)) & 0xCD1168A8) - 427248556;
  return (*(uint64_t (**)(void))(v25
                              + 8
                              * ((v26 + 522) ^ (23
                                              * (((2 * v28) & 0xFD5ED27E ^ 0xCD104028) + (v28 ^ 0x1827DD6B) + 1979580112 != a1)))))();
}

uint64_t sub_100025828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18)
{
  *(void *)(*(void *)(a17 + 96) + 504) = v18 + 1;
  *(_DWORD *)(*(void *)(a17 + 96) + 496) = a18 - 1;
  int v22 = 1178560073 * ((((v21 - 160) | 0x28AA4C52) - (v21 - 160) + ((v21 - 160) & 0xD755B3A8)) ^ 0x923E3430);
  STACK[0x318] = (unint64_t)&STACK[0x35FF68D50C8F433F];
  *(_DWORD *)(v21 - 144) = v19 - v22 + 1172343717;
  *(_DWORD *)(v21 - 160) = -2035249205 - v22;
  uint64_t v23 = (*(uint64_t (**)(uint64_t))(v20 + 8 * (v19 + 551)))(v21 - 160);
  int v24 = ((v19 - 484) ^ 0x8095AFF4)
      + a18
      + (~(2 * LODWORD(STACK[0x2F0])) & 0x6E)
      + (STACK[0x2F0] & (((v19 - 484) | 5) ^ 0x4E8) ^ 0x5EF4DF48) > 0xFFFFFFBF;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8 * (((32 * v24) | (v24 << 6)) ^ v19)))(v23, 3162130946);
}

uint64_t sub_100025A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, int a13, unint64_t *a14, int a15)
{
  unsigned int v19 = 1755732067
      * (((&a11 | 0x496E45B9) - &a11 + (&a11 & 0xB691BA40)) ^ 0x97A8F862);
  a14 = &STACK[0x3EEC7284B8A20CAF];
  a13 = (v18 + 236) ^ v19;
  a15 = v19 ^ 0x529A90D6;
  a11 = &STACK[0x6A4735A87A2643ED];
  a12 = v17;
  uint64_t v20 = (*(uint64_t (**)(unint64_t **))(v16 + 8 * (v18 ^ 0xCDFu)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (int)(((((v18 - 49) ^ (*(_DWORD *)(v17
                                                                                                - 0x6C0C7F2AED40EE79) == v15)) & 1)
                                                   * (((v18 + 655080335) & 0xD8F4477F) - 1660)) ^ v18)))(v20);
}

uint64_t sub_100025B28@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((a2 - 161016031) & 0x998EAFD) - 76) * (*(unsigned __int8 *)(v2 + a1) == 219)) ^ a2)))();
}

uint64_t sub_100025B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  *(void *)(v19 - 112) = a12;
  *(void *)(v19 - 104) = a11;
  *(void *)(v19 - 128) = a15;
  *(void *)(v19 - 120) = a12;
  *(_DWORD *)(v19 - 136) = (v15 + 1625) ^ (1225351577
                                         * ((-1454202288
                                           - ((v19 - 136) ^ 0xBAD3B48F | 0xA952A250)
                                           + ((v19 - 136) ^ 0xBAD3B48F | 0x56AD5DAF)) ^ 0xCFE43136));
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (v15 ^ 0x8BF)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * ((251
                                              * (((v16
                                                 + ((((((v15 + 280) | 0x22) ^ 0x84BE7E74) + v18) >> 1) ^ 0xFFDDA8BF)
                                                 + (((((v15 + 280) | 0x22) ^ 0x84BE7E74) + v18) & 0xFFBB517E)
                                                 + 2) & a10) != 0)) ^ v15)))(v20);
}

uint64_t sub_100025C5C()
{
  int v5 = v1 + 637;
  int v6 = 1374699841 * ((((v4 - 144) | 0xB228E577) + (~(v4 - 144) | 0x4DD71A88)) ^ 0xDFDCFD7F);
  *(_DWORD *)(v4 - 128) = (v5 ^ 0xDEA2C1AF) + v3 - v6;
  *(void *)(v4 - 136) = v2;
  *(_DWORD *)(v4 - 144) = (v5 - 1344) ^ v6;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v5 + 165)))(v4 - 144);
  return (*(uint64_t (**)(uint64_t))(v0
                                            + 8
                                            * (((((v5 + 85) ^ (*(_DWORD *)(v4 - 140) == 2087569631)) & 1)
                                              * (17 * (v5 ^ 0x82D) - 12)) ^ v5)))(v7);
}

uint64_t sub_100025C7C()
{
  return sub_100047E24();
}

uint64_t sub_100025C98(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  LODWORD(a24) = -2036680980;
  v40.i64[0] = 0x5B5B5B5B5B5B5B5BLL;
  v40.i64[1] = 0x5B5B5B5B5B5B5B5BLL;
  LODWORD(v42) = (a7 + 77708885) & 0x5598AFF;
  HIDWORD(v42) = v42 ^ 0x881;
  HIDWORD(a18) = a18 + 1713717705;
  return sub_10001FB7C(v39 - 16, v40, a2, 1260, a4, 182, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18,
           a19,
           a20,
           a21,
           a22,
           v42,
           a24,
           a25,
           a26,
           a27,
           v38 - 352,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_100025D30(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((((3 * (v4 ^ 0x682)) ^ (v4 - 679)) * (v3 == a3)) ^ v4)))((v4 - 708));
}

uint64_t sub_100025D64@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((116 * (v1 == 544568610)) ^ 0x133u)))();
}

uint64_t sub_100025DA0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  *(unsigned char *)(v8 + (a4 + v7)) = *(unsigned char *)(v6 + (a4 + v7)) ^ 0x5B;
  return (*(uint64_t (**)(void))(v9 + 8 * ((284 * (a4 - 1 == ((a5 - 515) | 0x108) + v5)) | a5)))();
}

void sub_100025DE8(uint64_t a1, uint64_t a2)
{
  if (a1) {
    BOOL v2 = a2 == 0;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = v2;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_100025E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, uint64_t a18, unsigned int a19, unsigned int a20,int a21,int a22)
{
  unsigned int v27 = ((((2 * &a17) | 0xB5E40458) - &a17 + 621673940) ^ 0x96648051) * v22;
  a19 = v27 - 689653773;
  a20 = v27 + v23 + 2138963195;
  a21 = 2 * (v25 & 1) - v27 + (v25 ^ ((v23 ^ 0x3D7) - 186) ^ 0x5ECFEC6D) - 394752;
  a17 = &STACK[0x17594DE918184A03];
  a18 = a12;
  uint64_t v28 = (*(uint64_t (**)(unint64_t **))(v26 + 8 * (v23 + 2029)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v26 + 8 * ((1245 * (a22 == v24)) ^ v23)))(v28);
}

uint64_t sub_100025F40@<X0>(int a1@<W0>, int a2@<W8>)
{
  *(unsigned char *)(v2 + (v3 - 2023405430)) = *(unsigned char *)(v4 + (v3 - 2023405430))
                                                   - ((((a1 - 38) | 0x88) + 12) & (2
                                                                                 * *(unsigned char *)(v4
                                                                                            + (v3 - 2023405430))))
                                                   + 91;
  return (*(uint64_t (**)(void))(v5 + 8 * ((914 * (v3 - 1 == a2)) | a1)))();
}

void sub_100025F90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(void *)(v28 - 128) = v27;
  *(void *)(v28 - 120) = a24;
  *(void *)(v28 - 144) = a25;
  *(void *)(v28 - 136) = a21;
  *(_DWORD *)(v28 - 112) = v25
                         + 1224239923 * ((~((v28 - 144) | 0x9AC9BE2E) + ((v28 - 144) & 0x9AC9BE2E)) ^ 0x9785BC06)
                         + 497;
  *(void *)(v28 - 104) = v27;
  (*(void (**)(uint64_t))(v26 + 8 * (v25 + 2084)))(v28 - 144);
  JUMPOUT(0x10003922CLL);
}

void sub_100026028()
{
}

uint64_t sub_100026030@<X0>(int a1@<W6>, int a2@<W8>)
{
  *(unsigned char *)(v5 - 220 + (a2 + v2)) = 91;
  return (*(uint64_t (**)(void))(v4 + 8 * ((988 * ((a2 - 1575261666) < 0x40)) ^ (a1 + v3 + 41))))();
}

uint64_t sub_100026078@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v39 = *(void *)(a1 + 24);
  *(int8x16_t *)(v38 - 112) = veorq_s8(*(int8x16_t *)(*(void *)(a1 + 40) - 0xC6562B2033A24D7), (int8x16_t)xmmword_1001D65A0);
  if (a9) {
    BOOL v40 = v39 == 0x76D4F6DCACF2CD9ELL;
  }
  else {
    BOOL v40 = 1;
  }
  int v41 = v40;
  LODWORD(a13) = 2 * v36;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * (int)((28 * v41) ^ a7)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_1000260F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  (*(void (**)(uint64_t, uint64_t))(v30 + 8 * (v31 - 1233907452)))(a30, 2965982036);
  int v34 = (*(uint64_t (**)(void))(v30 + 8 * (v31 - 1233907472)))();
  unsigned int v35 = v34 - 1756925734 - ((v34 << ((v31 ^ (v31 + 100)) + 21)) & 0x2E8EE1B4);
  *int v32 = v35;
  int v36 = (((v35 >> 30) ^ 2) - 1756925734 - ((((v35 >> 30) ^ 2) << (((v31 ^ (v31 + 100)) - 126) ^ 0x6F)) & 4)) ^ v35;
  v32[1] = v33 + 1812433253 * v36 - ((2 - 670100790 * v36) & 0x2E8EE1B4);
  return (*(uint64_t (**)(uint64_t))(v30 + 8 * (v31 ^ (v31 - 156))))(3624866506);
}

uint64_t sub_1000261EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unint64_t *a11, char a12, unsigned int a13, uint64_t a14, int a15)
{
  char v22 = ((*(unsigned char *)(v15 + 24) - v20) ^ 0xA7) + ((2 * (*(unsigned char *)(v15 + 24) - v20)) & 0xFC ^ 0xB0) - 4;
  unsigned int v23 = 1759421093 * ((-2 - ((~&a10 | 0xBD3D3E07) + (&a10 | 0x42C2C1F8))) ^ 0xE408E53);
  a11 = &STACK[0x3DC5316605FC20BA];
  a14 = v19;
  a15 = v18 - v23 + 721;
  a12 = v22 ^ (-91 * ((-2 - ((~&a10 | 7) + (&a10 | 0xF8))) ^ 0x53));
  a13 = v23 + (v21 ^ 0x951852BF) + 792657868 + ((v18 - 1343756538) & (2 * v21) ^ 0x85C74280);
  uint64_t v24 = (*(uint64_t (**)(int *))(v17 + 8 * (v18 + 2018)))(&a10);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((2234 * (a10 == v16)) ^ v18)))(v24);
}

void sub_100026300(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) ^ (460628867 * (((a1 | 0x4A5B5FFB) - (a1 & 0x4A5B5FFB)) ^ 0x6CDDD86));
  uint64_t v2 = *(void *)(a1 + 8);
  v4[0] = v1
        + 628203409
        * (((v4 | 0x585F3E1) - v4 + (v4 & 0xFA7A0C18)) ^ 0x870DFFD2)
        + 10;
  uint64_t v5 = v2;
  int v3 = (char *)*(&off_100233720 + (v1 ^ 0x357)) - 8;
  (*(void (**)(_DWORD *))&v3[8 * (v1 ^ 0xAC7)])(v4);
  __asm { BRAA            X8, X17 }
}

void sub_10002641C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 3804331 * ((a1 - 2 * (a1 & 0xF3A65B02) - 207201534) ^ 0x8D737EF4);
  int v2 = (*(unsigned char *)a1 ^ (-85 * ((a1 - 2 * (a1 & 2) + 2) ^ 0xF4)));
  int v3 = (char *)*(&off_100233720 + v1 - 1692) - 8;
  (*(void (**)(void, uint64_t (*)()))&v3[8 * (v1 ^ 0xFFE)])(*(&off_100233720 + v1 - 1797), sub_100040670);
  uint64_t v4 = *(void *)*(&off_100233720 + (v1 ^ 0x745));
  unsigned int v5 = v1 + 1755732067 * ((((2 * &v4) | 0x2D8384C8) - &v4 - 381796964) ^ 0xC8077FBF) - 1687;
  (*(void (**)(uint64_t *))&v3[8 * v1 + 3248])(&v4);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_100026574@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((a1 + 154) ^ (617 * LODWORD(STACK[0x390])))))();
}

uint64_t sub_1000265AC()
{
  STACK[0x510] = STACK[0x510] + ((v0 - 209) | 0x40Du) - 1053;
  return (*(uint64_t (**)(void))(v1 + 8 * ((((v0 - 200) | 0x404) - 123) ^ v0)))();
}

uint64_t sub_1000265EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unint64_t v9 = STACK[0x548];
  int v10 = *(unsigned __int8 *)(STACK[0x548] - 0x35FF68D50C8F4033) ^ 0x22;
  if (v10 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8 * ((13 * ((((a8 + 795) ^ (*(_DWORD *)(v9 - 0x35FF68D50C8F4037) == 1483378228)) & 1) == 0)) ^ (a8 + 837))))(a1, a2, 206, a4, a5, 1733769874, a7, 2561196415);
  }
  if (v10 != 1) {
    JUMPOUT(0x10002675CLL);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8 * ((4053 * (*(_DWORD *)(v9 - 0x35FF68D50C8F4037) == ((LODWORD(STACK[0x3F4]) - 1037) | 0x4F0) + 1483376964)) ^ (LODWORD(STACK[0x3F4]) + 979))))(a1, 2638105455, 1339809732, 2146586715, 2148379743, 1733769874, a7, 2561196415);
}

uint64_t sub_1000267A4()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((708
                                * ((((*(unsigned __int8 *)(v3 + 8) - 5) << ((v2 + 118) & 0xF7 ^ 0xE4)) & v1)
                                 + ((*(unsigned __int8 *)(v3 + 8) - 5) ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_100026800(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((119 * (*(_DWORD *)(v4 + v3 * (uint64_t)a2 + 36) == ((121 * (v2 ^ 0x83A)) ^ (v5 - 279)))) ^ v2)))();
}

void sub_100026840()
{
}

uint64_t sub_100026868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v74 = 235795823 * ((1707451106 - ((v73 - 200) | 0x65C5A2E2) + ((v73 - 200) | 0x9A3A5D1D)) ^ 0xE971444);
  *(void *)(v73 - 192) = v70;
  *(void *)(v73 - 184) = a69;
  *(_DWORD *)(v73 - 164) = v71 - v74 - 171;
  *(_DWORD *)(v73 - 200) = v74 ^ 0x445B78D8;
  *(void *)(v73 - 176) = a70;
  uint64_t v75 = (*(uint64_t (**)(uint64_t))(v72 + 8 * (v71 ^ 0xA6A)))(v73 - 200);
  return (*(uint64_t (**)(uint64_t))(v72
                                            + 8
                                            * ((1268
                                              * (*(_DWORD *)(v73 - 168) == v71 - 2124048721 + 13 * (v71 ^ 0x2A9) - 156)) ^ v71)))(v75);
}

void sub_100026968(uint64_t a1)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1000269A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  uint64_t v12 = a3 + v10 + v9 + 1254 + ((a5 + 1499731436) & 0x60533DFCu);
  long long v13 = *(_OWORD *)(v7 + v12 - 15);
  long long v14 = *(_OWORD *)(v7 + v12 - 31);
  uint64_t v15 = v6 + v12;
  *(_OWORD *)(v15 - 15) = v13;
  *(_OWORD *)(v15 - 31) = v14;
  return (*(uint64_t (**)(void))(v5
                              + 8 * ((((v8 & 0xFFFFFFE0) == 32) | (2 * ((v8 & 0xFFFFFFE0) == 32))) ^ (v11 + a5 + 624))))();
}

uint64_t sub_100026A10(_DWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v29 = *a1 ^ (3804331 * (((a1 | 0xD29CC998) - (a1 | 0x2D633667) + 761476711) ^ 0xAC49EC6E));
  unsigned int v30 = 1178560073 * ((&v36 - 1353327316 - 2 * (&v36 & 0xAF55DD2C)) ^ 0x15C1A54E);
  unsigned int v36 = -2035249205 - v30;
  int v38 = v29 - v30 + 1172345419;
  uint64_t v37 = &STACK[0x35FF68D50C8F4373];
  (*((void (**)(unsigned int *))*(&off_100233720 + (int)(v29 ^ 0x82)) + (int)(v29 ^ 0x8CD) - 1))(&v36);
  return sub_100016C40(17, v29, v31, v32, v33, 182, (uint64_t)&v35, 2138121171, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

void sub_100026CEC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned char *a23,uint64_t a24,uint64_t a25,uint64_t a26,unsigned char *a27,unsigned char *a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  a27[3] = (((a30 ^ 0xA8) - 89) ^ HIBYTE(v37)) - ((2 * (((a30 ^ 0xA8) - 89) ^ HIBYTE(v37))) & 0x3A) + 29;
  a23[9] = BYTE5(v35) ^ 0x86;
  a23[15] = BYTE1(v37) ^ 0x9E;
  a28[8] = v37 ^ 0x58;
  a27[9] = (BYTE2(v37) ^ 0x82) - ((2 * BYTE2(v37)) & 0x3A) + 29;
  a28[26] = BYTE4(v35) ^ 0x20;
  char v40 = (a1 ^ 0x34) - ((2 * (a1 ^ 0x34) + 58) & 0x32) + 22;
  if ((a1 ^ 0x3224094F14D40934uLL) < 0x8134422366A90F03) {
    char v40 = v38;
  }
  char v41 = v40 ^ 0x19;
  if ((a1 ^ 0x3224094F14D40934uLL) >= 0x8134422366A90F03) {
    char v42 = 3;
  }
  else {
    char v42 = 0;
  }
  char v43 = *(unsigned char *)(a34 + 531 + (BYTE6(v35) ^ 0xDLL));
  a23[7] = HIBYTE(v35) ^ 0x5C;
  a28[27] = BYTE1(a1) ^ 9;
  a27[10] = (~(14 * (v43 ^ 0x9C)) | 0xC5) - (v43 ^ 0x9C) + 8 * (v43 ^ 0x9C) + 30;
  a23[10] = v41 + v42;
  HIDWORD(v44) = *(unsigned __int8 *)(a34 + (((BYTE2(a1) ^ 0xD4) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  LODWORD(v44) = (HIDWORD(v44) << 26) ^ (HIDWORD(v44) << 24);
  a28[10] = BYTE4(a1) ^ 0x4F;
  a27[14] = (BYTE3(a1) ^ 0x14) - 2 * ((BYTE3(a1) ^ 0x14) & 0x1F ^ BYTE3(a1) & 2) + 29;
  a27[20] = (v44 >> 25) ^ 1;
  a27[4] = (BYTE6(a1) ^ 0x24) - ((2 * (BYTE6(a1) ^ 0x24)) & 0x3A) + 29;
  a27[16] = (BYTE5(a1) ^ 9) - 2 * ((BYTE5(a1) ^ 9) & 0x1F ^ BYTE5(a1) & 2) + 29;
  unsigned int v45 = *(unsigned __int8 *)(a34 + (((HIBYTE(a1) ^ 0x32) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  a28[20] = a2 ^ 0x42;
  HIDWORD(v44) = v45;
  LODWORD(v44) = (v45 << 26) ^ (v45 << 24);
  a27[15] = (v44 >> 25) ^ 1;
  unsigned int v46 = *(unsigned __int8 *)(a21 + (((a2 >> 1) & 0x80 | ((unsigned __int16)a2 >> 9)) ^ 0xE1));
  a28[17] = BYTE3(a2) ^ 0x48;
  a23[14] = BYTE4(a2) ^ 0xCC;
  *a27 = BYTE5(a2) - ((2 * BYTE5(a2)) & 0x3A) - 99;
  a28[21] = HIBYTE(a2) ^ 0x1F;
  a28[13] = BYTE2(a2) ^ 0x50;
  a28[3] = (v46 ^ 0x8A ^ (v46 >> 2) & 0x17) + 32;
  a23[12] = BYTE6(a2) ^ 6;
  char v47 = *(unsigned char *)(a34 + 531 + (v39 ^ 0x35) + 2 * (v39 & 0xD5 ^ 0x15) - 4 * (v39 & 0xD5 ^ 0x15) + 213);
  a28[11] = BYTE2(v39) ^ 0xB6;
  a27[5] = 7 * (v47 ^ 0x9C) - ((16 * v47 - 2 * (v47 ^ 0x9C)) & 0x3A) + 29;
  a27[2] = (BYTE3(v39) ^ 0xE4) - ((2 * (BYTE3(v39) ^ 0xE4)) & 0x3A) + 29;
  a28[25] = BYTE1(v39) ^ 0x76;
  unsigned int v48 = *(unsigned __int8 *)(a21 + (((v39 >> 25) & 0x80 | (v39 >> 33) & 0x7F) ^ 0xB1));
  a28[22] = BYTE5(v39) ^ 0xD3;
  a28[18] = HIBYTE(v39) ^ 0x50;
  a28[2] = BYTE1(v36) ^ 0x56;
  a27[1] = v36 ^ 0x4D;
  a28[30] = BYTE3(v34) ^ 0x5F;
  a28[9] = BYTE2(v36) ^ 0xBE;
  a28[19] = (v48 ^ 0x8A ^ (v48 >> 2) & 0x17) + 32;
  a27[7] = (BYTE6(v39) ^ 0x2B) - ((2 * (BYTE6(v39) ^ 0x2B)) & 0x3A) + 29;
  unsigned int v49 = *(unsigned __int8 *)(a34 + (((BYTE4(v34) ^ 0xF6) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  a28[24] = BYTE6(v34) ^ 0x81;
  a28[12] = BYTE5(v34) ^ 0xFD;
  HIDWORD(v44) = v49;
  LODWORD(v44) = (v49 << 26) ^ (v49 << 24);
  a28[1] = HIBYTE(v34) ^ 0x9D;
  a28[23] = (v44 >> 25) ^ 0x1C;
  JUMPOUT(0x100027124);
}

uint64_t sub_100027164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,int a37)
{
  uint64_t v42 = ((a37 - 1126) ^ (unint64_t)(v41 + 35)) + v37;
  int v43 = *(unsigned __int8 *)(a4 + v42) ^ 0x5B;
  int v44 = ((*(unsigned __int8 *)(v41 + v37 + a4 + 2) ^ 0x5B) << 16) | ((*(unsigned __int8 *)(v41 + v37 + a4 + 3) ^ 0x5B) << 24) | v43 | ((*(unsigned __int8 *)(v41 + v37 + a4 + 1) ^ 0x5B) << 8);
  *(_DWORD *)(v38 + (v42 & 0xFFFFFFFFFFFFFFFCLL)) = v44 + v40 - 2 * (v44 & 0x1659914 ^ v43 & 4);
  return (*(uint64_t (**)(void))(v39
                              + 8
                              * ((8 * ((unint64_t)(v37 + 4 + v41) < 0x40)) | (((unint64_t)(v37 + 4 + v41) < 0x40) << 9) | a37)))();
}

uint64_t sub_100027210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((((v6 ^ 0x489) + v6 - 153 - 133) * (v5 == a5)) ^ v6)))();
}

uint64_t sub_100027240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(_DWORD *)(v27 - 112) = v23 + ((((v27 - 128) | 0x5D71B4EB) + (~(v27 - 128) | 0xA28E4B14)) ^ 0xE7E5CC88) * v26 + 1403;
  *(void *)(v27 - 104) = v22;
  *(void *)(v27 - 120) = a22;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v23 ^ 0x9B2)))(v27 - 128);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * ((1331
                                              * (*(_DWORD *)(v27 - 128) > ((v23 + 1140) ^ (v25 + 1657)))) ^ v23)))(v28);
}

uint64_t sub_1000272D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned int a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v34 = (v25 - 535963668) & 0x1FF2237E;
  char v35 = (v25 + 54) & v31;
  unint64_t v36 = (*(_DWORD *)(a6 + v32) ^ v24) + HIDWORD(v27);
  *(_DWORD *)(a6 + 4 * a5) = v36 + v24 - (v26 & (2 * v36));
  int v37 = v25 - 1315;
  *(_DWORD *)(a24 + v32) = (v36 >> (v35 + 63)) + (v34 ^ (v24 - 476)) - 2 * (v36 >> (v35 + 63));
  BOOL v38 = v29 - 1977249923 < v28;
  if (a19 > 0x799969FE != v29 - 1977249923 < -2040097279) {
    BOOL v38 = a19 > 0x799969FE;
  }
  return (*(uint64_t (**)(void))(v30 + 8 * (v37 ^ (!v38 * v33))))();
}

uint64_t sub_10002739C(unsigned int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v11 = v6 + 515;
  int v12 = v8 + v7;
  unsigned int v13 = v12 + v9 + ((27 * (v11 ^ 0x64C)) ^ 0x5FC);
  if (v13 <= 0x40) {
    unsigned int v13 = a1;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * ((251 * (a6 - v12 < a2 + v13)) ^ v11)))();
}

uint64_t sub_1000273F4@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unsigned int v6 = *(_DWORD *)((char *)&STACK[0x2D8] + ((v4 + a2) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v4 + a2)) = v6 ^ 0xCE;
  *(unsigned char *)(a1 + (v4 + a2 + 2)) = (BYTE2(v6) ^ 0x20) + (~(v6 >> 15) | 0x49) + 92;
  *(unsigned char *)(a1 + (v4 + a2 + 1)) = ((v6 >> ((v3 - 124) ^ 0x37)) ^ 0x92)
                                               - ((2 * ((v6 >> ((v3 - 124) ^ 0x37)) ^ 0x92)) & 0xB6)
                                               + 91;
  *(unsigned char *)(a1 + (v4 + a2 + 3)) = (HIBYTE(v6) ^ 6) - ((2 * (HIBYTE(v6) ^ 6)) & 0xB6) + 91;
  unsigned int v7 = LODWORD(STACK[0x334]) + 792079845;
  BOOL v8 = v7 < v2;
  BOOL v9 = v4 + 1063935612 < v7;
  if (v4 + 1063935612 < v2 != v8) {
    BOOL v9 = v8;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * (((2 * v9) | (4 * v9)) ^ v3)))();
}

uint64_t sub_1000274F0()
{
  STACK[0x568] = *(void *)(v1 + 8 * (LODWORD(STACK[0x3F4]) - 1013));
  return sub_10001B804(2037503917, STACK[0x388]);
}

uint64_t sub_10002751C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int *a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,void *a34,_DWORD *a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  if (v45 <= 0xAB8F7799) {
    int v47 = *a29 + 1;
  }
  else {
    int v47 = 1913760756;
  }
  *a29 = v47;
  int v48 = (((v44 >> 11) ^ 0x12E8EE) - 1756925734 - ((2 * ((v44 >> 11) ^ 0x12E8EE)) & 0xEE1B4)) ^ v44;
  unsigned int v49 = (((v48 << 7) & 0x9D2C5680 ^ v48) << 15) & 0xEFC60000 ^ (v48 << 7) & 0x9D2C5680 ^ v48;
  unsigned int v50 = v49 ^ 0x8815B26E ^ (v49 >> 18);
  uint64_t v51 = &a44 + (a33 - 1145886374);
  unsigned int v52 = -57620215 * ((*(_DWORD *)(*a34 + (*a35 & 0x6B0C8F98)) ^ v51) & 0x7FFFFFFF);
  unint64_t v53 = -57620215 * (v52 ^ HIWORD(v52));
  char v54 = byte_1001CE510[v53 >> 24];
  char v55 = byte_1001D4510[v53 >> 24] ^ byte_1001CE3E0[(v53 >> 24) + 4];
  LOBYTE(v53) = v53 ^ (-71 * BYTE3(v53));
  *uint64_t v51 = v54 ^ v50 ^ 0x6E ^ v55 ^ v53;
  return (*(uint64_t (**)(void))(v46
                              + 8
                              * ((8
                                * (a33 - (((v54 ^ v50 ^ 0x6E ^ v55) ^ v53) != 0) != 1145886373)) | 0x232)))();
}

uint64_t sub_1000276CC(int a1, unsigned int a2, int a3, uint64_t a4, uint64_t a5)
{
  *(void *)(a5 + a2) = *(void *)(v7 + a2);
  return (*(uint64_t (**)(void))(v5 + 8 * (((a3 == 0) * v6) ^ a1)))();
}

void sub_1000276FC()
{
}

uint64_t sub_100027708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002CD8C(a1, 71663627, a3, &STACK[0x2D8]);
}

uint64_t sub_100027718()
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 8 * (v0 ^ 0x980)))();
  *uint64_t v1 = 2006439667;
  return result;
}

uint64_t sub_100027750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  return (*(uint64_t (**)(uint64_t, void, void))(v8
                                                            + 8 * ((121 * ((((a6 + 1190) ^ 0x6FB) & v6) == 0)) ^ a6)))(a1, (a6 + 1190) ^ 0x721, (v7 - a1));
}

uint64_t sub_100027788@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + (v7 - 2088492810)) = *(unsigned char *)(v1 + (v7 - 2088492810));
  BOOL v9 = v5 > 0xC394D2D6;
  if (v9 == v7 - 1074835936 < v3) {
    BOOL v9 = v7 - 1074835936 < v6;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((v9 * (v4 ^ 0x4A0)) ^ v2)))();
}

uint64_t sub_1000277F4()
{
  *(_DWORD *)(*(void *)(v0 + 96) + 1428) = 1271275153;
  return sub_1000137F4();
}

void sub_100027824()
{
  STACK[0x568] = *(void *)(v0 + 8 * (LODWORD(STACK[0x3F4]) - 1032));
  JUMPOUT(0x10001B7F8);
}

uint64_t sub_10002783C()
{
  (*(void (**)(void))(v1 + 8 * (v0 + 1197)))();
  return (*(uint64_t (**)(void))(v1 + 8 * ((44 * (STACK[0x558] != 0)) | (v0 - 124))))();
}

uint64_t sub_100027874(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (int)(((*(_DWORD *)(v3 + v2 * (uint64_t)a2 + 32) != v4
                                                                                 + ((v5 + 248043399) & 0xF137276F)
                                                                                 - 363)
                                     * (((v5 + 1252740343) & 0xB554B1FF) - 119)) ^ v5)))();
}

uint64_t sub_1000278D4@<X0>(unsigned int a1@<W1>, uint64_t a2@<X4>, int a3@<W8>, int8x16_t a4@<Q0>, int8x16_t a5@<Q1>, int8x16_t a6@<Q4>, int8x16_t a7@<Q5>, int8x16_t a8@<Q6>, int8x16_t a9@<Q7>)
{
  uint64_t v15 = v9 + 4;
  int v16 = v10 + 1;
  a5.i64[0] = v16[57].i64[0];
  a5.i32[2] = v16[57].i32[2];
  int8x16_t v17 = vextq_s8(a4, a5, 0xCuLL);
  int8x16_t v18 = a5;
  v18.i32[3] = v16[57].i32[3];
  int32x4_t v19 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v18, a6), vandq_s8(v17, a7)), 1uLL), a8);
  v20.i32[0] = *(_DWORD *)(a2 + 4 * (v16[57].i32[0] & 1));
  v20.i32[1] = *(_DWORD *)(a2 + 4 * (v16[57].i32[1] & 1));
  v20.i32[2] = *(_DWORD *)(a2 + 4 * (v16[57].i32[2] & 1));
  v20.i32[3] = *(_DWORD *)(a2 + 4 * (v18.i8[12] & 1));
  *(int8x16_t *)(v11 + 4 * (v15 + (a3 ^ a1))) = veorq_s8(veorq_s8(veorq_s8(*v16, v20), v14), (int8x16_t)vaddq_s32(vsubq_s32(v19, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v19, v19), a9)), v13));
  return (*(uint64_t (**)(void))(v12 + 8 * (a3 ^ (16 * (v15 == -228)))))();
}

uint64_t sub_1000278E0(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(v6 + 8 * (v7 + 888)))(a1, 0);
  if (result == 16)
  {
    v3 += 3;
    goto LABEL_7;
  }
  if (result == 12)
  {
LABEL_7:
    uint64_t result = (*(uint64_t (**)(uint64_t))(v6 + 8 * (v4 ^ 0xD11)))(a1);
    int v10 = v3;
    goto LABEL_8;
  }
  if (result)
  {
    v3 += 2;
    goto LABEL_7;
  }
  void *v5 = a1;
  int v10 = -114727250;
LABEL_8:
  *(_DWORD *)(v1 + 12) = v10 ^ v2;
  return result;
}

uint64_t sub_100027968@<X0>(int a1@<W1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24)
{
  BOOL v28 = a2 == a1 || a24 - v26 != (v24 ^ 0xF434C57A ^ ((v24 + 268441946) | 0xE6049F06));
  return (*(uint64_t (**)(void))(v25 + 8 * ((53 * v28) ^ v24)))();
}

uint64_t sub_1000279CC()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((((((16 * v3) ^ 0x8790) + 401) | 0x44) ^ 0x307)
                                * ((v1 + v2 + 2) < 0x7FFFFFFF)) ^ (v3 - 1033))))();
}

uint64_t sub_100027A24(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * (int)((((((v2 + 723432298) & 0xD4E14DEF) - 198) ^ (v2 + 346)) * (v1 == a1)) ^ v2)))();
}

uint64_t sub_100027A68(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (int)(((((268 * (a8 ^ 0x238)) ^ 0xFFFFF4EE) + 201 * (a8 ^ 0x235))
                                     * ((a3 + v8 - 16) > 0xFFFFFFEF)) ^ a8)))();
}

uint64_t sub_100027ABC@<X0>(int a1@<W8>)
{
  int v3 = a1 ^ 0x534;
  int v4 = (a1 ^ 0x534) + 324;
  BOOL v6 = v1[1] != 0x2EA5C8ED901E2B89 && (v1[7] | v1[4]) != 0;
  return (*(uint64_t (**)(void))(v2 + 8 * (int)((v6 * ((v4 ^ 0xFFFFF8E1) + 13 * (v3 ^ 0xD0))) ^ v3)))();
}

uint64_t sub_100027B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  return (*(uint64_t (**)(void))(v16
                              + 8 * ((((((v15 - 353) | 0x85E) - 375) ^ ((v15 - 222) | 0x21)) * (a14 == v14)) ^ v15)))();
}

uint64_t sub_100027B68()
{
  BOOL v5 = v1 < v0;
  if (v5 == v2 - 0x2D70574B09AC15D7 < v0) {
    BOOL v5 = v2 - 0x2D70574B09AC15D7 < v1;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * (v3 ^ (110 * !v5))))();
}

uint64_t sub_100027BD0()
{
  *unint64_t v1 = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 == 0) * v2) ^ v0)))();
}

uint64_t sub_100027BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  unsigned int v21 = v17 & 0xFE3FEF3F;
  unsigned int v22 = v21 - 607972238;
  int v23 = v19 + v21 + 686;
  unsigned int v24 = ((v21 - 2119382101) & 0x5A164C77) + v20 + 1385723777;
  BOOL v25 = a17 + 1348992808 < v24;
  if (a17 + 1348992808 < v22 + a8 != v24 < a8 + 144) {
    BOOL v25 = v24 < a8 + 144;
  }
  return (*(uint64_t (**)(void))(v18 + 8 * ((115 * !v25) ^ v23)))();
}

uint64_t sub_100027C10@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  int v8 = v4 - 1654;
  *(unsigned char *)(v5 + (((v8 - 152) + a1) & (v3 + v6))) = *(unsigned char *)(v2 + a2 - 1694903118);
  return (*(uint64_t (**)(void))(v7 + 8 * ((2187 * ((v6 + v3 + 1) < 0x40)) ^ v8)))();
}

uint64_t sub_100027C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  BOOL v26 = v20 != 68987230 || a19 != v24;
  return (*(uint64_t (**)(void))(v21 + 8 * ((v26 * (((v19 - v22) ^ (v23 + 561)) - 545)) ^ v19)))();
}

uint64_t sub_100027CA8@<X0>(unsigned int a1@<W8>)
{
  uint64_t v6 = 4 * (v4 - 1934108922);
  unsigned int v7 = -57620215
     * ((*(_DWORD *)(*(void *)STACK[0x3B8] + (*(unsigned int *)STACK[0x3C0] & (a1 ^ 0x7731286))) ^ (v3 + v6)) & 0x7FFFFFFF);
  int v8 = v7 ^ HIWORD(v7);
  uint64_t v9 = 4 * ((-57620215 * v8) >> 24);
  *(_DWORD *)(v1 + v6) ^= *(_DWORD *)(v3 + v6) ^ *(_DWORD *)((char *)*(&off_100233720 + (int)(a1 - 1002)) + v9 - 12) ^ *(_DWORD *)((char *)*(&off_100233720 + (int)(a1 ^ 0x4CC)) + v9 - 4) ^ *(_DWORD *)((char *)*(&off_100233720 + (int)(a1 - 1018)) + v9) ^ (-922157056 * v8) ^ (-57620215 * v8) ^ (-2081955537 * ((-57620215 * v8) >> 24));
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)(((v2 - 1 == (((a1 ^ 0x5F1) - 983139036) & 0x3A99854D ^ 0x7F006207))
                                     * ((17 * (a1 ^ 0x457)) ^ 0x433)) ^ a1 ^ 0x5F1)))();
}

uint64_t sub_100027DF0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  HIDWORD(a8) = ((v15 - 1321293112) & 0x4EC154F7) - 248;
  LODWORD(v19) = a3 + *(_DWORD *)(a11 + 32) - 267581586;
  if (v19 >= HIDWORD(a8)) {
    uint64_t v17 = 260723963;
  }
  else {
    uint64_t v17 = 260723975;
  }
  HIDWORD(v19) = *(_DWORD *)(a15 - 0x6C0C7F2AED40EE81);
  return sub_10003A5CC(v17, 1272907385, a1, a2, 2973289072, 2460205309, 953, 3743598821, a4, a15 - 0x6C0C7F2AED40EE81, a6, a7, a8, v19, a10, a11, a12, a13, v16 ^ 0x399u,
           HIDWORD(v19) - 257347982);
}

uint64_t sub_100027F34@<X0>(int a1@<W3>, int a2@<W5>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v3 - a2 - 2854356) & 0x1AF1EFFF ^ 0x781) * (a3 + a1 + 63 < (a3 + a1))) ^ v3)))();
}

void sub_100027F84()
{
}

uint64_t sub_100027FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v10 + 8 * (int)(((((v9 + 335581697) | 0xE2042B27) ^ (a7 - 585)) * (v7 != v8)) ^ v9)))();
}

uint64_t sub_100027FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(void))(v17
                              + 8
                              * (((*(_DWORD *)(a14 + 4 * (v16 + v18 + 1054)) == ((211
                                                                                                * ((v15 + 354) ^ 0x711)) ^ (v14 + 1045)))
                                * (((v15 + 354) ^ 0x711) + 754)) ^ v15)))();
}

uint64_t sub_10002803C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v10 = (v7 + v6 + v5 - v8 + 1338);
  *(void *)(a1 - 7 + v10) = *(void *)(v3 - 7 + v10);
  return (*(uint64_t (**)(void))(v9 + 8 * (((v8 - (v4 & 0xFFFFFFF8) == -8) * ((a3 ^ 0x495) + 305)) ^ a3)))();
}

uint64_t sub_100028098()
{
  uint64_t v6 = v3 + v2;
  *(unsigned char *)(v6 + v0 + 702) = v4;
  return (*(uint64_t (**)(void))(v5 + 8 * (v1 | (8 * ((unint64_t)(v6 + 703) < 0x38)))))();
}

uint64_t sub_1000280CC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v1 + 1 != v3 + 32) | (2 * (v1 + 1 != v3 + 32))) ^ v0)))();
}

uint64_t sub_100028188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11)
{
  *(unsigned char *)(v11 + (v14 + v13)) = *(unsigned char *)(a11 + (v14 + v13)) ^ 0x5B;
  return (*(uint64_t (**)(void))(v16 + 8 * (((v14 + 1 + v13 < (a10 ^ v15)) * (((v12 - 389) | 0x413) ^ 0x4B2)) ^ v12)))();
}

void sub_1000281E0()
{
}

uint64_t sub_1000281F8()
{
  unsigned int v5 = *(unsigned __int8 *)(v3 + 4) + ((v2 + 1234) ^ 0xFFFFFAEC);
  return (*(uint64_t (**)(void))(v4 + 8 * ((536 * ((v1 & (2 * v5)) + (v5 ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_10002823C@<X0>(int a1@<W6>, int a2@<W8>)
{
  int v5 = a2 ^ v3;
  uint64_t v6 = v2;
  uint64_t v7 = v2 - 297100030;
  if ((unint64_t)(v7 + 1) > 0x38) {
    uint64_t v8 = v7 + 1;
  }
  else {
    uint64_t v8 = 56;
  }
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (a2 | ((v8 - v6 + ((2 * (v5 ^ (a1 - 697))) ^ 0x11B5646CuLL) > 7) << 6))))();
}

uint64_t sub_10002829C(int8x16_t a1, int8x16_t a2, double a3, double a4, int8x16_t a5, int8x16_t a6, int8x16_t a7, int32x4_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, int a15, unint64_t a16)
{
  a2.i64[0] = *(void *)(v18 + 4);
  a2.i32[2] = *(_DWORD *)(v18 + 12);
  int8x16_t v24 = vextq_s8(a1, a2, 0xCuLL);
  int8x16_t v25 = a2;
  v25.i32[3] = *(_DWORD *)(v18 + 16);
  int32x4_t v26 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v25, a5), vandq_s8(v24, v22)), 1uLL), a6);
  v27.i32[0] = *(_DWORD *)(v19 + 4 * (*(_DWORD *)(v18 + 4) & 1));
  v27.i32[1] = *(_DWORD *)(v19 + 4 * (*(unsigned int *)(v18 + 8) & (((v16 ^ a14) * a15) ^ a16)));
  v27.i32[2] = *(_DWORD *)(v19 + 4 * (*(_DWORD *)(v18 + 12) & 1));
  v27.i32[3] = *(_DWORD *)(v19 + 4 * (v25.i8[12] & 1));
  *(int8x16_t *)uint64_t v18 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v18 - 908), v27), v23), (int8x16_t)vaddq_s32(vsubq_s32(v26, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v26, v26), a7)), a8));
  return (*(uint64_t (**)(void))(v21 + 8 * (((v17 == 4) * v20) ^ v16)))();
}

uint64_t sub_1000282A8()
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((v1 > v0 + (v4 ^ (v4 - 218)) + 325) * (v3 + v4 - 1310)) ^ (v3 + v4 - 1814))))(3061059863);
}

uint64_t sub_1000282E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  int v38 = 71 * (a7 ^ 0x612);
  uint64_t v39 = (((v38 ^ 0xBD5A7C61) + v35) & a12) + (v36 ^ 0xDEAD3FEF);
  BOOL v41 = (((((v38 ^ 0x61) + v35) & a12) + (v36 ^ 0xEF) + 1) & 0xF) == 0
     && v39 != (((v38 ^ 0x267) + 472) ^ 0xDEAD3A31);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * ((v41 | (4 * v41)) ^ v38)))(v39, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_100028360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  return sub_100039E38(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_10002836C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v0 - 484453067) & 0x1CE02C8C) - 687) * ((v1 & 0xFFFFFFFE) != 1740498124)) ^ v0)))();
}

uint64_t sub_1000283B4()
{
  STACK[0x648] = 0x5EA7CC05C7AF7CDALL;
  int v5 = *(_DWORD **)(v2 + 8 * (v0 - 854));
  STACK[0x390] = (unint64_t)v5;
  LODWORD(STACK[0x4AC]) = *v5 - 1948521602;
  uint64_t v6 = *(unsigned int **)(v2 + 8 * (v0 ^ 0x44A));
  STACK[0x3A0] = (unint64_t)v6;
  uint64_t v7 = *v6;
  unint64_t v8 = 1755732067 * ((v1 + 0x46E7E25FCDDF0095 - 2 * (v1 & 0x46E7E25FCDDF0095)) ^ 0x9B4C45601319BD4ELL);
  int v9 = 1755732067 * ((v1 - 841023339 - 2 * (v1 & 0xCDDF0095)) ^ 0x1319BD4E) + v0 + 519880201;
  *(_DWORD *)(v4 - 176) = v9 + 205;
  *(_DWORD *)(v4 - 160) = (v0 + 2021362740) ^ (1755732067 * ((v1 - 841023339 - 2 * (v1 & 0xCDDF0095)) ^ 0x1319BD4E));
  *(void *)(v4 - 184) = 1913760756 - v8;
  *(_DWORD *)(v4 - 196) = 1755732067 * ((v1 - 841023339 - 2 * (v1 & 0xCDDF0095)) ^ 0x1319BD4E);
  *(_DWORD *)(v4 - 192) = v9 + 80;
  *(void *)(v4 - 168) = v7 + v8;
  *(_DWORD *)(v4 - 188) = (v0 + 519880201) ^ (1755732067 * ((v1 - 841023339 - 2 * (v1 & 0xCDDF0095)) ^ 0x1319BD4E));
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v0 + 1249)))(v4 - 200);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v4 - 200)))(v10);
}

uint64_t sub_1000284C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v20 = 1759421093 * ((2 * ((v19 - 136) & 0x50283B30) - (v19 - 136) - 1344813874) ^ 0x1CAA749A);
  *(void *)(v19 - 128) = v18;
  *(_DWORD *)(v19 - 136) = 1751559472 - v20;
  *(_DWORD *)(v19 - 120) = v14 - v20 + 1279;
  (*(void (**)(uint64_t))(v16 + 8 * (v14 ^ 0x8EE)))(v19 - 136);
  *(_DWORD *)(v19 - 120) = v14
                         + 1374699841
                         * ((1834202156
                           - ((v19 - 136) ^ 0xF8ADEB70 | 0x6D53B42C)
                           + ((v19 - 136) ^ 0xF8ADEB70 | 0x92AC4BD3)) ^ 0x7F5B8AA)
                         + 1742;
  *(void *)(v19 - 136) = a14;
  *(void *)(v19 - 128) = a13;
  (*(void (**)(uint64_t))(v16 + 8 * (v14 + 2110)))(v19 - 136);
  *(void *)(v19 - 128) = a14;
  *(void *)(v19 - 112) = v18;
  *(_DWORD *)(v19 - 120) = v14 + ((v19 - 43717535 - 2 * ((v19 - 136) & 0xFD64ECE9)) ^ 0x47F0948B) * v15 + 1565;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v14 + 2128)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((953
                                              * (*(_DWORD *)(v19 - 136)
                                               + ((v14 - 697175257) & 0x298E0FF6 ^ (v17 - 902)) < ((v14 + 314) ^ 0xFE2C26FE))) ^ v14)))(v21);
}

uint64_t sub_100028658@<X0>(int a1@<W3>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,int a32,uint64_t a33)
{
  if (v35 == 1271275141)
  {
    int v38 = a1 - 895;
    LODWORD(STACK[0x398]) = 15;
    uint64_t v39 = 8;
  }
  else
  {
    if (v35 != 1271275137)
    {
      STACK[0x388] = 0;
      LODWORD(STACK[0x390]) = 0;
      LODWORD(STACK[0x398]) = 0;
      goto LABEL_7;
    }
    int v38 = a1 ^ 0x469;
    LODWORD(STACK[0x398]) = 18;
    uint64_t v39 = 4;
  }
  STACK[0x388] = (unint64_t)*(&off_100233720 + v38) - v39;
  LODWORD(STACK[0x390]) = 1;
LABEL_7:
  int v40 = 195 * (a1 ^ 0x40F);
  LODWORD(STACK[0x3A0]) = a1 + 139;
  int v41 = 1178560073 * ((-771561298 - ((v37 - 200) | 0xD202E8AE) + ((v37 - 200) | 0x2DFD1751)) ^ 0x97696F33);
  *(void *)(v37 - 168) = STACK[0x3B8];
  *(void *)(v37 - 152) = 0;
  *(void *)(v37 - 144) = 0;
  *(_DWORD *)(v37 - 176) = v34 - v41 - 1068329816;
  *(void *)(v37 - 136) = v33 + 1168;
  *(void *)(v37 - 128) = a2 + 0x9F59A8236609E0;
  *(_DWORD *)(v37 - 160) = (a1 + 380) ^ v41;
  *(void *)(v37 - 192) = a33;
  *(void *)(v37 - 184) = a2 + 0x9F59A8236608D0;
  uint64_t v42 = (*(uint64_t (**)(uint64_t))(v36 + 8 * a32))(v37 - 200);
  return (*(uint64_t (**)(uint64_t))(v36
                                            + 8
                                            * (((*(_DWORD *)(v37 - 200) == -2124048112) * (v40 ^ 0x1CB)) ^ LODWORD(STACK[0x3A0]))))(v42);
}

uint64_t sub_1000287EC@<X0>(int a1@<W0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,int a34,int a35,int a36,int a37,int a38,int a39,int a40,int a41,uint64_t a42)
{
  return sub_10003D68C(a1 ^ 0x79C6D54Du, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_100028820@<X0>(int a1@<W8>)
{
  int v4 = a1 + 1029;
  unsigned __int8 v5 = a1 + 82;
  int v6 = a1 + 678;
  *(_DWORD *)(v3 - 200) = a1
                        + 1029
                        + 628203409 * (((v1 | 0xECA74806) - v1 + (v1 & 0x1358B7F8)) ^ 0x6E2F4435)
                        - 231790856;
  (*(void (**)(uint64_t))(v2 + 8 * ((a1 + 1029) ^ 0x7A)))(v3 - 200);
  BOOL v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (v4 + 185)))(336, 1777295586) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v5 ^ v7) & 1) * (v6 ^ 0x6BE)) ^ v4)))();
}

uint64_t sub_1000288FC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int *a4)
{
  v5[17] = 0x52B38C97CBBB3C48;
  unint64_t v9 = 1755732067
     * (((~(v8 - 152) | 0xE37AC892F3081DB0) + ((v8 - 152) | 0x1C85376D0CF7E24FLL)) ^ 0xC12E9052D2315F95);
  v5[20] = *a4 - v9;
  *(_DWORD *)(v8 - 148) = v9;
  *(_DWORD *)(v8 - 144) = ((v4 + 1388329325) ^ 0x6E) + v9;
  *(_DWORD *)(v8 - 112) = (v4 + 787454074) ^ v9;
  v5[22] = v9 + 1913760756;
  *(_DWORD *)(v8 - 128) = ((v4 + 1388329325) ^ 0x79) + v9;
  *(_DWORD *)(v8 - 140) = (v4 + 1388329325) ^ v9;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(v6 + 8 * (v4 ^ (v7 + 1890))))(v8 - 152);
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * *(int *)(v8 - 152)))(v10);
}

uint64_t sub_100028A08(uint64_t a1, int a2, uint64_t a3, unsigned int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (int)(((((a2 + 1718882503) & 0x998BEFEF) + 1353) * (v5 < a4)) ^ a2)))();
}

uint64_t sub_100028A40(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v11 = v9 ^ ((*v8 & ((v5 + 190) ^ 0x7FFFFBF3) | ((v5 + 190) ^ 0x8000040D) & v8[623]) >> 1);
  v8[623] = v8[396] ^ a1 ^ *(_DWORD *)(a5 + 4 * (*v8 & 1)) ^ (v6 + v11 - (v7 & (2 * v11)));
  return (*(uint64_t (**)(void))(v10 + 8 * ((203 * (LODWORD(STACK[0x4AC]) < 0x270)) ^ v5)))();
}

uint64_t sub_100028AC0@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x4AC]) = 0;
  uint64_t v3 = (_DWORD *)STACK[0x390];
  int v4 = LODWORD(STACK[0x4AC])++;
  *uint64_t v3 = v4 + 1948521603;
  unint64_t v5 = STACK[0x2D8];
  int v6 = (a1 + 148703829) ^ STACK[0x2D8];
  *(void *)(v2 - 184) = (*(_DWORD *)STACK[0x3A0] + 796007502) ^ STACK[0x2D8];
  *(void *)(v2 - 192) = STACK[0x2D0];
  *(_DWORD *)(v2 - 200) = v5 + a1 - 504208067;
  *(_DWORD *)(v2 - 176) = -(int)v5;
  *(_DWORD *)(v2 - 172) = v6;
  *(_DWORD *)(v2 - 168) = v6 ^ 0x2A;
  *(_DWORD *)(v2 - 160) = (a1 + 148703781) ^ v5;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (a1 + 1233)))(v2 - 200);
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * *(int *)(v2 - 164)))(v7);
}

uint64_t sub_100028B80()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((121
                                * ((((v1 + v3 + 1) < 0x7FFFFFFF) ^ (((v0 - 107) | 0x2A)
                                                                                                 + 77)) & 1)) ^ (v0 + 322))))();
}

uint64_t sub_100028BCC(int a1, uint64_t a2)
{
  *(_DWORD *)(*(void *)(v4 + 96) + 1428) = 1271275141;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((*(_DWORD *)(a2 + 4) == v2) * (((a1 + 1837545810) & 0x927941DB) + 351)) ^ a1)))();
}

uint64_t sub_100028C28()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((v3 + 1) & 0x7FFFFFFC) == ((v6 - 151 + v0) & v1 ^ (unint64_t)(v5 + 1042)))
                                * v2) ^ (v6 - 151))))();
}

uint64_t sub_100028C64@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  BOOL v8 = a1 + 1305061068 < (a6 + 1148770078);
  if ((a6 + 1148770078) < 0x5DB28DB5 != (a1 + 1305061068) < 0x5DB28DB5) {
    BOOL v8 = (a6 + 1148770078) < 0x5DB28DB5;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((v8 * ((7 * (v7 ^ 0x6E4)) ^ 0xB)) ^ v7)))();
}

uint64_t sub_100028CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (int)(((((v10 + 1610911319) | 0x96003025) ^ (a7 + 158) ^ ((v10 - 43) | 8))
                                     * (*(_DWORD *)(a3 + 48 * (v7 + v9 + 540)) != 191081846)) ^ v10)))();
}

uint64_t sub_100028D48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (int)((((v8 + 1826528033) & 0x932165F7 ^ ((v8 + 811) | 0x140) ^ 0x1F5) * (v7 == a6)) ^ v8)))();
}

void sub_100028D94()
{
}

uint64_t sub_100028DDC(uint64_t a1, int a2, int a3)
{
  int v8 = v3 ^ 0x1A4;
  int v9 = (_DWORD *)STACK[0x3B0];
  _DWORD *v9 = v4 - 1;
  int v10 = &v9[6 * (v4 - 1117964709)];
  int v11 = v10[2];
  STACK[0x3A0] = *((void *)v10 + 2);
  LODWORD(STACK[0x4CC]) = v10[6];
  BOOL v12 = *(_DWORD *)(v5 + (v11 + (v8 ^ (a3 - 591))) * (uint64_t)a2 + 36) == v6 + ((v8 - 1453) | 0x192) - 470;
  return (*(uint64_t (**)(void))(v7 + 8 * ((v12 | (4 * v12)) ^ v8)))();
}

uint64_t sub_100028E9C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (((*(_DWORD *)(a8 + 72) == a4 + 7) * (v8 + a6 + 3190)) ^ (v8 + a6 + 1111))))();
}

uint64_t sub_100028EDC@<X0>(uint64_t a1@<X0>, int a2@<W3>, int a3@<W8>)
{
  uint64_t v7 = (a3 + a2);
  long long v8 = *(_OWORD *)(v5 + v7 - 15);
  long long v9 = *(_OWORD *)(v5 + v7 - 31);
  uint64_t v10 = a1 + v7;
  *(_OWORD *)(v10 - 15) = v8;
  *(_OWORD *)(v10 - 31) = v9;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((v4 - 187) | (8 * (((v4 - 1963484175) & 0x75086343 ^ 0x362) == (v3 & 0xFFFFFFE0))))))();
}

uint64_t sub_100028F44()
{
  unsigned int v3 = v1 - ((((v2 + 972) ^ 0xE320E171) + 2 * v1) & 0xF6B3A150) + 1827292217;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((71 * (((2 * v3) & 0xF97FEEEA ^ 0xF033A040) + (v3 ^ 0x7E627DD) - 69550080 != 2023405429)) ^ v2)))();
}

uint64_t sub_100028FD0()
{
  int v5 = *(unsigned __int8 *)(v0 + v2 - 0xC0068C551B1E41ALL)
     - (*(unsigned char *)(v1 + v2 - 0xC0068C551B1E41ALL) - 7);
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1622
                                * (((v5 << ((v3 + 32) & 0xF3)) & 0xFEB7FAFE) + (v5 ^ 0x7F5BFD7F) == ((v3 - 909178872) & 0x3630F7F7 ^ 0x7F5BF89E))) ^ (v3 - 1142))))();
}

void sub_100028FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a4) {
    BOOL v5 = a5 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  int v6 = !v5;
  __asm { BRAA            X9, X17 }
}

void sub_100029058()
{
}

uint64_t sub_100029074()
{
  int v3 = ((((v0 - 1101) | 0x514) ^ 0xFFFFFAE9) & v1)
     - ((((((v0 - 1101) | 0x514u) ^ 0xFFFFFAE9) & v1) << ((((v0 - 77) | 0x14) + 114) ^ 0x89u)) & 0x850F8A2C)
     - 1031289578;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v0 - 1101) | 0x514) ^ (32
                                                        * (((2 * v3) & 0xB7D36EFC ^ 0x85030A2C)
                                                         + (v3 ^ (((v0 - 1101) | 0x514) + 426667346))
                                                         + 805306094 != 199865964)))))();
}

uint64_t sub_100029120(int a1)
{
  return (*(uint64_t (**)(void))(v4 + 8
                                   * (((v3 + v2 - 1668 + a1 >= 0) * ((v1 - 1355830370) & 0x50D057AB ^ 0x6DB)) ^ v1)))();
}

uint64_t sub_10002916C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  *((unsigned char *)&STACK[0x2E0] + v9) = *(unsigned char *)(v12 + (v8 + a3))
                                 - ((*(unsigned char *)(v12 + (v8 + a3)) << (((v10 + a8) & v13) - 28)) & a6)
                                 + 91;
  return (*(uint64_t (**)(void))(v11 + 8 * ((30 * (v9 == 63)) ^ v10)))();
}

uint64_t sub_1000291C4()
{
  return sub_100047E04();
}

void sub_1000292C4(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x9F59A8236606BCLL) = (((v3 + v2) * (v1 - 638803870)) ^ 0xFCBEDFFE)
                                       + 1532198648
                                       + ((2 * (v3 + v2) * (v1 - 638803870)) & 0xF97DBFFC);
}

uint64_t sub_100029350@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  return sub_1000293B4((a1 - 801) | 0x201u, v2 - 0x9F59A8236606B8, a2 - 0x9F59A8236606B8, 360, 0x7DFFEDBFF2FB7F7FLL, 0x1E5F6FEFELL, 0xFFF67B739F6CD6FALL);
}

uint64_t sub_1000293B4(int a1, void *a2, void *a3, int a4)
{
  uint64_t v15 = 4 * (v13 + v10);
  int v16 = v4 + v7 + (*(_DWORD *)(*a2 + v15) ^ v11);
  *(_DWORD *)(*a3 + v15) = v11 + (a1 ^ a4) + v16 - (v14 & (2 * v16)) - 617;
  int v17 = v5 + v13 + 602;
  BOOL v19 = v17 > v6 || v17 < v9;
  return (*(uint64_t (**)(void))(v12 + 8 * ((v19 * v8) ^ a1)))();
}

void sub_10002942C()
{
}

uint64_t sub_10002950C()
{
  return sub_10002951C();
}

uint64_t sub_10002951C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v15 = *(uint64_t (**)(void))(v12 + 8 * v7);
  uint64_t v16 = *v13;
  unsigned int v17 = v8 + a6;
  *(unsigned char *)(*v13 + v17 + 1) = (v9 ^ BYTE2(v6)) - (v14 & (2 * (v9 ^ BYTE2(v6)))) + 91;
  *(unsigned char *)(v16 + v17) = (HIBYTE(v6) ^ 5) - (v14 & (2 * (HIBYTE(v6) ^ 5))) + 91;
  *(unsigned char *)(v16 + v17 + 2) = (v11 ^ BYTE1(v6)) - (v14 & (2 * (v11 ^ BYTE1(v6)))) + 91;
  *(unsigned char *)(v16 + v17 + 3) = v6 ^ v10;
  return v15();
}

uint64_t sub_100029590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  return sub_100029614(a10 - 0x571561323F812302, a22 - 0x9F59A8236606B8, (a8 - 1732915163), (v22 + 1347) ^ 0x6E0u, a8 - 1);
}

uint64_t sub_100029614@<X0>(unsigned int a1@<W3>, unsigned int a2@<W7>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (a3 ^ (497 * (a2 <= a1)))))();
}

uint64_t sub_100029678()
{
  int v6 = *(unsigned __int8 *)(*(void *)(v1 + 8) + v0 - 0xBC6C72E59F967D6)
     - *(unsigned __int8 *)(v5 + v0 - 0xBC6C72E59F967D6);
  uint64_t v7 = v0 + 1;
  BOOL v9 = (v6 ^ 0x7DFDF5EC) + ((v3 - 1885901963) & 0x7068937F ^ 0xF36E6FDF) + ((2 * v6) & 0xFBFBEBD8) == 1902929356
    && v7 != v2 + 16;
  return (*(uint64_t (**)(void))(v4 + 8 * ((215 * v9) ^ v3)))();
}

uint64_t sub_100029714(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((3228 * (v6 + 1 == v5 + 44)) ^ a4)))();
}

uint64_t sub_1000297D8()
{
  unsigned int v3 = v1 - ((v1 << ((v0 ^ 0xCE) + 118)) & 0xBA32B08C) - 585541562;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((39
                                * (((2 * v3) & 0xDFF9FF3C ^ 0x9A30B00C) + (v3 ^ 0xB2E5A7D8) - 537134750 == 1341716736)) ^ v0)))();
}

uint64_t sub_10002986C@<X0>(int a1@<W3>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((v2 + 662472113) ^ 0x277C82BD ^ (v2 + 662472113) & 0xD8837EFF ^ 0x3BF)
                                     * (a2 == a1)) ^ v2)))();
}

uint64_t sub_1000298B8()
{
  int v3 = v1 + v0 - 1277865704;
  BOOL v5 = v3 > 598 * (v0 ^ 0x168) + 1518161746 || v3 < SLODWORD(STACK[0x3C0]);
  return (*(uint64_t (**)(void))(v2 + 8 * ((1416 * v5) ^ v0)))();
}

uint64_t sub_100029910()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((53 * (qword_10028D2F8 == 0)) ^ v0)))();
}

void sub_10002993C()
{
}

uint64_t sub_100029954()
{
  int v5 = v1 + v0;
  int v6 = v5 - 62;
  if ((v5 - 62) <= 0x40) {
    int v6 = 64;
  }
  BOOL v7 = !__CFADD__(v5 - 63, v3 + v6 + 62);
  return (*(uint64_t (**)(void))(v4 + 8 * ((172 * v7) ^ v2)))();
}

uint64_t sub_1000299B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51)
{
  int v56 = STACK[0x2AC];
  if (LODWORD(STACK[0x2AC]) == 1909026955) {
    return (*(uint64_t (**)(void))(v54
  }
                                + 8
                                * (((LODWORD(STACK[0x2A8]) - 221124109 >= (LODWORD(STACK[0x21C]) - 711))
                                  * (((v53 - 999) | 0x49) ^ 0x3BB)) ^ (v53 + 495))))();
  if (v56 == 1640591496)
  {
    (*(void (**)(void, unint64_t, void))(v54 + 8 * (v53 ^ 0xCDF)))(*(unsigned int *)STACK[0x2B0], STACK[0x338], ((16 * v53) ^ 0xDFCFEB25) + LODWORD(STACK[0x2CC]));
    STACK[0x290] = v52;
    int v59 = *(_DWORD *)(v52 + 52);
    unint64_t v60 = STACK[0x480];
    int v61 = LODWORD(STACK[0x418]) ^ 0x7FEDFD7F;
    unsigned int v62 = (2 * LODWORD(STACK[0x418])) & 0xFFDBFAFE;
    int v63 = 1755732067 * ((2 * ((v55 - 200) & 0x5213F380) - (v55 - 200) + 770444413) ^ 0xF32AB1A6);
    *(_DWORD *)(v55 - 184) = (a51 & 0x7FFFFFFF ^ 0x40DD51FD) - v63 + (a50 & 0x6FCC7F7E ^ 0x6E445C04) + 1820196853;
    *(void *)(v55 - 200) = v60;
    *(void *)(v55 - 192) = &STACK[0x1940];
    *(_DWORD *)(v55 - 156) = v63 + v53 - 974;
    *(_DWORD *)(v55 - 164) = v61 - v63 + v62 - 1090570499;
    *(_DWORD *)(v55 - 160) = v59 - v63 - 451568046;
    *(void *)(v55 - 176) = v51;
    uint64_t v64 = (*(uint64_t (**)(uint64_t))(v54 + 8 * (v53 + 1230)))(v55 - 200);
    int v65 = *(_DWORD *)(v55 - 168);
    LODWORD(STACK[0x534]) = v65;
    return (*(uint64_t (**)(uint64_t))(v54 + 8 * ((124 * (v65 != -2124048112)) ^ (v53 - 897))))(v64);
  }
  else
  {
    int v57 = 1178560073 * ((~((v55 - 200) | 0x4ABC1A0D) + ((v55 - 200) & 0x4ABC1A0D)) ^ 0xFD79D90);
    *(void *)(v55 - 192) = STACK[0x220];
    LODWORD(STACK[0x2AC]) = v56;
    *(_DWORD *)(v55 - 200) = v57 + v56 - ((((v53 - 1030) | 0x68) + 46870961) & (2 * v56 + 7151344)) + 530327688;
    *(_DWORD *)(v55 - 196) = v53 - v57 + 486;
    (*(void (**)(uint64_t))(v54 + 8 * (v53 ^ 0xCA1)))(v55 - 200);
    return sub_10002E1D8();
  }
}

uint64_t sub_1000299C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  if (a16 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22
  }
                                                                + 8
                                                                * (((*(_DWORD *)(v23 - 128) != 1483378228)
                                                                  * (a7 + a6 - 650)) ^ (a7 + a6))))(a1, 3845760829, a9);
  if (a16 == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22
  }
                                                                + 8
                                                                * ((1440
                                                                  * (((*(_DWORD *)(v23 - 128) == 1483378228) ^ (a7 + a6)) & 1)) ^ (a7 + a6))))(a1, 3845760829, a9);
  unint64_t v25 = ((unint64_t)&a22 ^ 0x56F71DFB8F7F7753)
      - 0x50B21C2001030053
      + (((void)&a22 << (62 - a7)) & 0xADEE3BF71EFEEEA0);
  *(unsigned char *)(v23 - 129) = (v25 ^ 0xBA) * (v25 + 17);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 8 * (-449204746 - a7)))(a1, 3845760829, a9);
}

uint64_t sub_100029B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v15 - 120) = v14
                         + 1374699841 * ((((v15 - 136) | 0x312B6D0F) - ((v15 - 136) & 0x312B6D0F)) ^ 0x5CDF7506)
                         + 567;
  *(void *)(v15 - 136) = v13;
  *(void *)(v15 - 128) = a12;
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(v12 + 8 * (v14 + 935)))(v15 - 136);
  return (*(uint64_t (**)(uint64_t))(v12 + 8 * ((3255 * (a10 < ((v14 - 894) ^ 0x180))) ^ v14)))(v16);
}

uint64_t sub_100029BCC()
{
  BOOL v3 = *(_DWORD *)(v1 + 1424) == (((61 * (v0 ^ 0x679) - 523) | 0x440) ^ 0x72C289F5);
  return (*(uint64_t (**)(void))(v2 + 8 * (v3 | (16 * v3) | v0)))();
}

uint64_t sub_100029C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  return (*(uint64_t (**)(void))(v13
                              + 8
                              * ((1994 * (a12 - 2045572967 < ((v12 + 1206320313) & 0xB81907DB ^ 0x7FFFF93E))) ^ v12)))();
}

uint64_t sub_100029C78()
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (v0 ^ 0xF93)))(1576, 2940923044);
  STACK[0x598] = v3;
  STACK[0x248] = v3;
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v0 - 75) ^ (v3 == 0)) & 1) * v1) ^ v0)))();
}

void sub_100029CE4()
{
  int v1 = (const float *)(v0 + 908);
  vld1q_dup_f32(v1);
  JUMPOUT(0x100029CF8);
}

void sub_100029DA8(uint64_t a1)
{
  int v1 = 235795823 * (((a1 | 0x1A7DF74B) - (a1 | 0xE58208B4) - 444462924) ^ 0x8ED0BE12);
  int v2 = *(_DWORD *)(a1 + 40) ^ v1;
  int v3 = *(_DWORD *)a1 ^ v1;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 32);
  unsigned int v6 = (*(_DWORD *)(a1 + 64) - v1) ^ 0xDD38B52E;
  unsigned int v7 = 1374699841 * ((((2 * &v9) | 0x676008F2) - &v9 + 1280310151) ^ 0xDE441C70);
  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v15 = v4;
  int v14 = v7 ^ (853897875 * v3 - 1271254650);
  uint64_t v13 = v5;
  uint64_t v11 = v9;
  unsigned int v16 = v6 - v7;
  int v10 = v7 ^ (v2 + 368399929);
  int v8 = (char *)*(&off_100233720 + v2 - 102) - 8;
  (*(void (**)(uint64_t *))&v8[8 * v2 + 16568])(&v9);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_100029F34()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((*(void *)(v1 + 24) != 0x6270735DB71EF9AFLL)
                                     * (((v0 & 0x5CD90755) + 1705321529) & 0x9A5AD775 ^ 0x20F)) ^ v0 & 0x5CD90755)))();
}

void sub_100029F98()
{
  _DWORD *v0 = *(_DWORD *)(v1 - 0x6C0C7F2AED40EE79);
}

uint64_t sub_100029FE8@<X0>(int a1@<W8>)
{
  int v7 = STACK[0x4CC];
  int v8 = (_DWORD *)STACK[0x3B0];
  unint64_t v9 = STACK[0x3B0] + 24 * v2;
  *(_DWORD *)(v9 + 8) = v4;
  *(_DWORD *)(v9 + 12) = v5;
  *(void *)(v9 + 16) = STACK[0x3A0];
  *(_DWORD *)(v9 + 24) = v7;
  _DWORD *v8 = v1 + 1;
  int v10 = (((a1 + 169) | 0x141) ^ 0xA127294B) + v3;
  BOOL v12 = v10 > 1204760047 || v10 < SLODWORD(STACK[0x378]);
  return (*(uint64_t (**)(void))(v6 + 8 * ((v12 * (((a1 - 137001838) & 0x82A7E0F) + 586)) ^ a1)))();
}

uint64_t sub_10002A074(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v11 = v9 + ((a4 - v7) ^ (v5 + 1327));
  long long v12 = *(_OWORD *)(v4 + v11 - 15);
  long long v13 = *(_OWORD *)(v4 + v11 - 31);
  uint64_t v14 = a1 + v11;
  *(_OWORD *)(v14 - 15) = v12;
  *(_OWORD *)(v14 - 31) = v13;
  return (*(uint64_t (**)(void))(v10 + 8 * ((216 * ((v8 & 0xFFFFFFE0) == 32)) ^ (v6 + a4 + 383))))();
}

uint64_t sub_10002A0D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002CD8C(a1, a2, a3, &STACK[0x2D8]);
}

uint64_t sub_10002A0E0@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unint64_t v7 = v3 - 1;
  STACK[0x5D8] = v7;
  *(unsigned char *)(a1 + v7) = ((v2 - 65) ^ v5) * (v2 - 48);
  return (*(uint64_t (**)(void))(v6 + 8 * (((STACK[0x5D8] != 0) * v4) ^ a2)))();
}

uint64_t sub_10002A128(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t))*(&off_10022EDF0 + ((1591 * (*(_DWORD *)(a2 + 4) == 544568623)) ^ 0x9Fu)))(4294925278);
}

uint64_t sub_10002A16C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((((v2 + 192823300) & 0xF481BFFB) - 277) ^ 0x3B9) * (v0 != v1)) ^ (v2 + 606))))();
}

uint64_t sub_10002A1B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned int a21)
{
  return sub_10002951C(1957521423, 1272907385, 551368475, a21, a5, a6);
}

uint64_t sub_10002A348(unsigned int a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((v2 - v3 - (unint64_t)(4 * (a1 ^ 0x512)) + 1168 > 0x1F)
                                * ((a1 + 2025080518) & 0x7DE ^ 0x284)) ^ a1)))();
}

uint64_t sub_10002A3A0(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((*(void *)(v3 + 24) == 0x5C6940C6B1BC703ALL) * (a3 - 1056 + a3 - 1555 - 1237)) ^ a3)))();
}

void sub_10002A3E0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) - 535753261 * (a1 ^ 0xAF40E2F);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_10002A464@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((a1 + 1 == v3 + 16) ^ v1)))();
}

uint64_t sub_10002A534(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((v2 + v1 - 1577005406 < ((a1 - 211) ^ 0xE8u))
                                     * ((a1 + 1355689544) & 0xAF31D39E ^ 0x26)) ^ a1)))();
}

void sub_10002A5A0(int a1@<W8>)
{
  *(void *)(v5 - 0xC7F991DE6408E1DLL) = *v2;
  *(_DWORD *)(v6 - 0x1E6EF7153090DC2) = a1;
  void *v2 = 0;
  *(void *)(v9 - 0x6C0C7F2AED40EE89) = 0x732F3CB0732F3CBLL;
  _DWORD *v4 = 1533631348;
  unsigned int v3 = (((10 * (v1 ^ 0x39D) - 1842282546) | (2 * (*(_DWORD *)(v9 - 0x6C0C7F2AED40EE7DLL) & 0xFFFFFFFE ^ 0xF6BDE21D)))
      - (*(_DWORD *)(v9 - 0x6C0C7F2AED40EE7DLL) & 0xFFFFFFFE ^ 0xF6BDE21D)
      - 1226342835) ^ 0xFC46621;
  *(_DWORD *)(v9 - 0x6C0C7F2AED40EE7DLL) = ((v3 | 0xE7EA7D84) - (v3 | 0x1815827B) + 404062843) ^ 0x578B780B;
  *(_DWORD *)(v8 + 28) = *v7;
}

uint64_t sub_10002A6EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v23 = *((_DWORD *)&a21 + 6 * ((v21 + 1694493231) & 0xBF3CFC5F ^ 0xB62642C8) + 6 * a9) + (int)a6;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8 * ((((((v21 + 173203600) & 0xF5AD1DEF ^ 0xFFFFFFFFFFFFBF1) & v23) != 2) | (16 * ((((v21 + 173203600) & 0xF5AD1DEF ^ 0xFFFFFFFFFFFFBF1) & v23) != 2))) ^ v21)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11);
}

uint64_t sub_10002A7CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,_DWORD *a39)
{
  *a39 ^= a38;
  return (*(uint64_t (**)(void))(v40
                              + 8
                              * (((((((v39 + 360) | 0x10C) + 1216552853) | 0x108D4C4) ^ 0x498BF233) * (v41 == 1318728282)) ^ ((v39 + 360) | 0x10C))))();
}

uint64_t sub_10002A7F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10002A838(a1, a2 - 0x9F59A8236606B8, 1070, (v2 - 46), 0x745EEF6B4CB2FEDELL, 0x9FA5B9F6BF7FF7FCLL);
}

uint64_t sub_10002A838(unsigned int a1, void *a2, int a3, int a4)
{
  int v17 = v12 > a1;
  uint64_t v18 = 4 * (v14 + v10);
  int v19 = v4 + v13 + (*(_DWORD *)(*v8 + v18) ^ (v11 + (v7 ^ a3) - 634));
  *(_DWORD *)(*a2 + v18) = v19 + v11 - (v15 & (2 * v19));
  int v20 = v14 + 1 + v5;
  LODWORD(v18) = v17 ^ (v20 < v6);
  BOOL v21 = v20 < v9;
  if (!v18) {
    int v17 = v21;
  }
  return (*(uint64_t (**)(void))(v16 + 8 * (((4 * v17) | (v17 << 6)) ^ a4)))();
}

uint64_t sub_10002A8C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,unsigned __int8 a30)
{
  return (*(uint64_t (**)(void))(v32 + 8 * ((1015 * (((v33 > v31 + 623) ^ a30) & 1)) ^ (v34 + v30 - 1760))))();
}

uint64_t sub_10002A918@<X0>(uint64_t a1@<X2>, unsigned int a2@<W8>)
{
  unsigned int v7 = *(_DWORD *)(v6 - 220 + ((v4 + v2) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v4 + v2 + 1)) = ((v7 >> (v3 - 111)) ^ 0x20) - ((2 * (v7 >> (v3 - 111))) & 0xB6) + 91;
  *(unsigned char *)(a1 + (v4 + v2)) = (HIBYTE(v7) ^ 6) - ((2 * (HIBYTE(v7) ^ 6)) & 0xB6) + 91;
  *(unsigned char *)(a1 + (v4 + v2 + 2)) = (BYTE1(v7) ^ 0x92)
                                               - 2 * ((BYTE1(v7) ^ 0x92) & 0xDF ^ BYTE1(v7) & 4)
                                               + 91;
  *(unsigned char *)(a1 + (v4 + v2 + 3)) = v7 ^ 0xCE;
  unsigned int v8 = *(_DWORD *)(v6 - 128) - 1540074886;
  BOOL v9 = v8 < a2;
  BOOL v10 = v4 - 274700511 < v8;
  if (v4 - 274700511 < a2 != v9) {
    BOOL v10 = v9;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((245 * v10) ^ v3)))();
}

void sub_10002AA00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(_DWORD *)(v7 - 120) = v8;
  *(_DWORD *)(v7 - 128) = v6;
  *(_DWORD *)(v7 - 136) = v6 & 0xFFFFFFF8;
  *(_DWORD *)(v7 - 144) = a6 - 1639;
  JUMPOUT(0x10002AA8CLL);
}

uint64_t sub_10002AB54@<X0>(unsigned int a1@<W2>, uint64_t a2@<X4>, unsigned int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,arg32_10002AB54 a32)
{
  *(_OWORD *)(a2 + v32 + ((a3 + 79) ^ a1)) = *(_OWORD *)&a32.arr[4];
  return (*(uint64_t (**)(void))(v34 + 8 * ((266 * (((v33 + 1) & 0x1FFFFFFF0) == 16)) | a3)))();
}

void sub_10002ABA0()
{
}

void sub_10002AC14()
{
}

uint64_t sub_10002AC20()
{
  BOOL v6 = (*(_DWORD *)(v2 + 16) ^ v0) - 242191536 < 0xFFFFFFBF
    && (*(_DWORD *)(v3 - 0x6C0C7F2AED40EE7DLL) & 1) != ((v1 - 827) ^ 0x287);
  return (*(uint64_t (**)(void))(v4 + 8 * ((v6 * ((v1 ^ 0x4C1) - 251)) | v1)))();
}

uint64_t sub_10002ACA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v11 = a8 - 977444868 + ((v10 + 339430286) ^ 0x143B4E28);
  BOOL v13 = v11 > 1622179651 || v11 < v8 - 525303996;
  return (*(uint64_t (**)(void))(v9 + 8 * (int)((v13 * ((v10 + 339430286) & 0xEBC4B3FB ^ 0x341)) ^ v10)))();
}

uint64_t sub_10002AD18()
{
  BOOL v4 = v1 + v0 - 2092955509 >= ((548 * (v2 ^ 0x651) + 907586453) & 0xC9E7572C) - 1796;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v4 | (8 * v4)) ^ v2)))();
}

uint64_t sub_10002AD7C(unint64_t a1)
{
  STACK[0x510] = v2 - 176;
  STACK[0x4E8] = a1;
  return (*(uint64_t (**)(void))(v4 + 8 * ((v1 | 0x208) ^ (2 * (v3 > a1)))))();
}

uint64_t sub_10002AE10(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))*(&off_10022EDF8 + ((1623 * (*(_DWORD *)(a2 + 4) == 544568611)) ^ 0x3DCu) - 1))();
}

void sub_10002AE4C()
{
  STACK[0x5F8] -= 32;
  JUMPOUT(0x10002AEA0);
}

uint64_t sub_10002AF24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10)
{
  unint64_t v11 = STACK[0x348];
  unsigned int v12 = (char *)&STACK[0x660] + STACK[0x348] - 0x5A748F8B1FDC618ALL;
  STACK[0x5E8] = (unint64_t)(v12 - 1824);
  STACK[0x3A0] = (unint64_t)(v12 - 1596);
  LODWORD(STACK[0x4E0]) = 1343640984;
  STACK[0x510] = v11 + ((a9 - 432116238) & 0x19C18EA9) - 361;
  STACK[0x400] = 0;
  LODWORD(STACK[0x43C]) = 544568610;
  STACK[0x3B0] = (unint64_t)(v12 - 1824);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8 * ((a9 + 811) | (2 * (v12 == (char *)1576)) | (4 * (v12 == (char *)1576)))))(a1, a2, a3, a4, a5, a6, a7, a8, a10);
}

uint64_t sub_10002AF30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((334 * ((v5 & 0x18) == (((a5 ^ 0x281) + 1278) ^ 0x596))) ^ a5)))((v6 - v7));
}

uint64_t sub_10002AF6C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((*(unsigned __int8 *)(v1 + 1 + v3) == *(unsigned __int8 *)(a1 + 1))
                                * (((v2 - 1041) | 3) + 518)) ^ v2)))();
}

uint64_t sub_10002AFA4(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 64) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_10002AFBC@<X0>(int a1@<W0>, int a2@<W3>, int a3@<W4>, int a4@<W5>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  unint64_t v29 = (*(_DWORD *)(a21 + 4 * (v28 + 1 + a5)) ^ (v21 + v26 + 615 - 967))
      + HIDWORD(v25)
      + v27 * (unint64_t)(*(_DWORD *)(*v23 + 4 * (v28 + 1 + a5)) ^ v21);
  *(_DWORD *)(a21 + 4 * (v28 + a5)) = v29 + v21 - (v22 & (2 * v29));
  BOOL v31 = v28 + a2 < a3 && v28 + a2 >= a1;
  return (*(uint64_t (**)(void))(v24 + 8 * ((v31 * a4) ^ v26)))();
}

void sub_10002B02C(_DWORD *a1)
{
  unsigned int v1 = *a1 ^ (1374699841 * ((((2 * a1) | 0x97E9331C) - a1 + 873162354) ^ 0xA6008187));
  __asm { BRAA            X10, X17 }
}

uint64_t sub_10002B100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, unint64_t a12, unint64_t a13, unint64_t a14)
{
  int v20 = 628203409 * (((((v19 - 160) | 0x6181B536) ^ 0xFFFFFFFE) - (~(v19 - 160) | 0x9E7E4AC9)) ^ 0x1CF646FA);
  STACK[0x318] = a11;
  *(_DWORD *)(v19 - 144) = v16 - v20 + 1040;
  *(_DWORD *)(v19 - 140) = v18 - v20 + 323188336;
  STACK[0x340] = a12;
  STACK[0x310] = a13;
  STACK[0x338] = v15;
  STACK[0x328] = a14;
  uint64_t v22 = v14;
  (*(void (**)(uint64_t))(v17 + 8 * (v16 + 2109)))(v19 - 160);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17
                                                                       + 8
                                                                       * (((*(_DWORD *)(v19 - 128) == (((v16 + 1376007570) | 0xA4008904) ^ 0x77612637))
                                                                         * ((v16 - 844575458) & 0x325732FB ^ 0x86B)) ^ v16)))(1098282115, 90582814, v22, 167461483);
}

void sub_10002B228(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_10002B290(uint64_t result, uint64_t a2, uint64_t a3, int a4)
{
  *(_DWORD *)(result + 32) = a4;
  return result;
}

uint64_t sub_10002B298(int a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  *(_DWORD *)(v65 - 116) = v62;
  unsigned int v66 = a4 - (v62 & 0xFFFFFFF8) + 8;
  int v67 = a1 + a2 + v63;
  char v68 = v67 - a4;
  char v69 = v67 - a4 - 122;
  unsigned int v70 = v67 + v58 - a4;
  v72.val[0].i64[0] = v70 & 0xF;
  v72.val[0].i64[1] = (v68 + 5) & 0xF;
  v72.val[1].i64[0] = (v68 + 4) & 0xF;
  v72.val[1].i64[1] = (v69 + 11 * (a8 ^ 0xE7)) & 0xF;
  v72.val[2].i64[0] = (v68 + 2) & 0xF;
  v72.val[2].i64[1] = (v68 + 1) & 0xF;
  v72.val[3].i64[0] = v68 & 0xF;
  v72.val[3].i64[1] = (v68 - 1) & 0xF;
  *(int8x8_t *)(v64 - 7 + v70) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v61 + v72.val[0].i64[0] - 7), *(int8x8_t *)(v57 - 7 + v70)), veor_s8(*(int8x8_t *)(v60 + v72.val[0].i64[0] + 3 - 7), *(int8x8_t *)(v59 + v72.val[0].i64[0] + 3 - 7))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v72, (int8x16_t)xmmword_1001D6590), (int8x8_t)0xD3D3D3D3D3D3D3D3)));
  return (*(uint64_t (**)(__n128))(a57 + 8 * ((1281 * (v66 == 0)) ^ a8)))((__n128)xmmword_1001D6590);
}

void sub_10002B3C4()
{
}

uint64_t sub_10002B3CC(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((15
                                * (((v1 + 31) ^ (a1 + v2 - 1811347327 < ((v1 - 479) | 0x810) - 2061)) & 1)) ^ v1)))();
}

uint64_t sub_10002B454@<X0>(unsigned int a1@<W8>)
{
  uint64_t v4 = a1;
  unint64_t v5 = ((v1 - 1962) ^ 0x50Au ^ v2) + a1;
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((240 * (v5 - v4 + 1014260135 > 7)) ^ v1)))();
}

void sub_10002B4C8()
{
}

uint64_t sub_10002B4D0()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((44 * (STACK[0x558] != 0)) | (v0 - 124))))();
}

uint64_t sub_10002B4F8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((106 * (v0 != ((v1 + 1564267707) & 0xA2C32D7D) - 1397)) ^ v1)))();
}

uint64_t sub_10002B53C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v6 ^ v5 ^ (v5 + v6 - 362 + 336)) * (v4 == a3)) | v6)))(0);
}

uint64_t sub_10002B570@<X0>(int a1@<W1>, int a2@<W3>, int a3@<W6>, int a4@<W8>)
{
  *(unsigned char *)(v6 + v5) = *(unsigned char *)(v8 + (a4 + a1))
                      - (v9 & (2 * *(unsigned char *)(v8 + (a4 + a1))))
                      + 91;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 != 63) * a2) ^ (a3 + v4 + 335))))();
}

uint64_t sub_10002B5B8(int *a1)
{
  unsigned int v2 = a1[1] - 108757529 * (a1 ^ 0xE09C622B);
  signed int v3 = v2 - 1695027326;
  uint64_t result = (*((uint64_t (**)(char *, void (*)()))*(&off_100233720 + (int)(v2 ^ 0x6508106E))
            + (int)(v2 ^ 0x6508182C)
            - 1))((char *)*(&off_100233720 + (int)(v2 - 1695027271)) - 4, sub_10001DF80);
  int v5 = *(_DWORD *)*(&off_100233720 + v3);
  if (result) {
    int v5 = 2124071854;
  }
  *a1 = v5;
  return result;
}

uint64_t sub_10002B670()
{
  return sub_10002B678();
}

uint64_t sub_10002B678@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W8>)
{
  int8x16_t v11 = *(int8x16_t *)(v8 + v4 + v3 + ((a3 + v5) & v6 ^ (a2 + 57)));
  *(int8x16_t *)((char *)&STACK[0x2D8] + v4) = vaddq_s8(vsubq_s8(v11, vandq_s8(vaddq_s8(v11, v11), v9)), v10);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v4 == 48) * a1) ^ a3)))();
}

uint64_t sub_10002B6CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(uint64_t))(v8 + 8 * ((1240 * (v6 == a5)) ^ (v7 + a6 + 201))))(a1);
}

void sub_10002B708(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X12, X17 }
}

uint64_t sub_10002B74C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, char a10)
{
  int v12 = (a1 - 671) | 0x41;
  unsigned int v13 = 1225351577 * (&a9 ^ 0x239AD816);
  a10 = v13 ^ 0x7B;
  a9 = v13 + a1 - 1716;
  uint64_t v14 = (*(uint64_t (**)(int *))(v10 + 8 * (a1 ^ 0xF82u)))(&a9);
  return (*(uint64_t (**)(uint64_t))(v10
                                            + 8
                                            * ((424
                                              * (**(_DWORD **)(v11 + 8 * (v12 ^ 0x4D6)) == (((v12 + 589) | 8) ^ 0xFFFFF993)
                                                                                           + ((v12 - 1175) | 0x101))) ^ v12)))(v14);
}

uint64_t sub_10002B804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t))(v9 + 8 * ((1831 * (a8 + 1 == v10 + 16)) ^ (a5 + 704))))(v8);
}

uint64_t sub_10002B914(double a1)
{
  *(double *)(v5 + v4 + v6) = a1;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v6 + v2 - 1836 == v3) * v7) ^ v1)))();
}

void sub_10002B940()
{
}

void sub_10002B94C()
{
}

uint64_t sub_10002B954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,char a33)
{
  if (a33 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33
  }
                                                                + 8
                                                                * ((69 * (LODWORD(STACK[0x334]) != v34 + 1483378165)) ^ (v34 + 636))))(a1, a2, a17);
  if (a33 != 1) {
    JUMPOUT(0x10002BA84);
  }
  return (*(uint64_t (**)(uint64_t))(v33
                                            + 8
                                            * (((2
                                               * (((LODWORD(STACK[0x334]) == 1483378228) ^ (v34 + 124)) & 1)) & 0xFB | (4 * (((LODWORD(STACK[0x334]) == 1483378228) ^ (v34 + 124)) & 1))) ^ (v34 + 636))))(a17);
}

uint64_t sub_10002BAB4@<X0>(int a1@<W5>, int a2@<W8>)
{
  *(unsigned char *)(v5 - 220 + (a2 + v2)) = 91;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1132 * (a2 + 1 + ((((v3 - 1588) | 0x220) - a1 + 67) ^ 0x3E7154A0u) < 0x40)) ^ ((v3 - 1588) | 0x220))))();
}

uint64_t sub_10002BB0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57)
{
  int v59 = a25 + 533 * (v57 ^ 0x60B) - ((a57 << (67 * v57 + 20)) & 0x681AE0E2) - 1395157699;
  BOOL v60 = ((2 * v59) & 0xBD5EFF4E ^ 0x281AE042) + (v59 ^ 0xEAA20FD6) - 135005246 == 1453554537;
  return (*(uint64_t (**)(void))(v58 + 8 * (((2 * v60) | (16 * v60)) ^ v57)))();
}

uint64_t sub_10002BBE4@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v10 = (v8 + v7 + a2 - a3);
  *(void *)(a4 - 7 + v10) = *(void *)(v5 - 7 + v10);
  return (*(uint64_t (**)(uint64_t, void, void, void))(v4
                                                                    + 8
                                                                    * (int)(((a3 - (v6 & 0xFFFFFFF8) == -8)
                                                                           * (((a1 - 1246) | 0x290) ^ 0xDF)) ^ a1)))(a1, (v10 - 8), a3 - (v6 & 0xFFFFFFF8) + 16, v9 - (v6 & 0xFFFFFFF8));
}

void sub_10002BC48(_DWORD *a1)
{
  unsigned int v1 = *a1 + 1755732067 * (((a1 | 0xFD508F6) - a1 + (a1 & 0xF02AF709)) ^ 0xD113B52D);
  __asm { BRAA            X14, X17 }
}

void sub_10002BD4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned char *a9)
{
  int v12 = v10 - ((((v11 - 509) | 0x420) + 197662540) & (2 * v10 + 52487970)) - 143359604;
  *a9 = (HIBYTE(v12) ^ 5) - ((2 * (HIBYTE(v12) ^ 5)) & 0xB6) + 91;
  a9[1] = (BYTE2(v12) ^ 0xE4) - ((2 * (BYTE2(v12) ^ 0xE4)) & 0xB6) + 91;
  a9[2] = (BYTE1(v12) ^ 0xD) - ((2 * (BYTE1(v12) ^ 0xD)) & 0xB6) + 91;
  a9[3] = (v10 - ((((v11 + 3) | 0x20) + 76) & (2 * v10 + 34)) - 116) ^ 0xA0;
  unint64_t v13 = v9 - ((2 * v9) & 0xBA1BC8328CBC6B14) - 0x22F21BE6B9A1CA76;
  a9[4] = (HIBYTE(v13) ^ 0xDD) - ((2 * (HIBYTE(v13) ^ 0xDD)) & 0xB6) + 91;
  a9[5] = (BYTE6(v13) ^ 0xD) - ((2 * (BYTE6(v13) ^ 0xD)) & 0xB6) + 91;
  a9[6] = (BYTE5(v13) ^ 0xE4) - ((2 * (BYTE5(v13) ^ 0xE4)) & 0xB6) + 91;
  a9[7] = (BYTE4(v13) ^ 0x19) - 2 * ((BYTE4(v13) ^ 0x19) & 0xDF ^ BYTE4(v13) & 4) + 91;
  a9[8] = (((v9 - ((2 * v9) & 0x8CBC6B14) + 1180579210) >> 24) ^ 0x46)
        - ((2 * (((v9 - ((2 * v9) & 0x8CBC6B14) + 1180579210) >> 24) ^ 0x46)) & 0xB6)
        + 91;
  a9[9] = (BYTE2(v13) ^ 0x5E) - ((2 * (BYTE2(v13) ^ 0x5E)) & 0xB6) + 91;
  a9[10] = (BYTE1(v13) ^ 0x35) - ((2 * (BYTE1(v13) ^ 0x35)) & 0xB6) + 91;
  a9[11] = (v9 - ((2 * v9) & 0x14) - 118) ^ 0xD1;
  sub_100021320();
}

uint64_t sub_10002BEE8()
{
  int v4 = (v2 - 512) | 0x859;
  int v5 = 1224239923 * ((((v3 - 144) | 0xC9897073) + (~(v3 - 144) | 0x36768F8C)) ^ 0x3B3A8DA5);
  *(_DWORD *)(v3 - 144) = v5 ^ 0x559E456E;
  *(void *)(v3 - 136) = v8;
  *(_DWORD *)(v3 - 128) = v5 + v2 - 184;
  (*(void (**)(uint64_t))(v0 + 8 * (v2 ^ 0xAD3)))(v3 - 144);
  *(void *)(v3 - 128) = v1;
  *(void *)(v3 - 120) = v9;
  *(void *)(v3 - 144) = v10;
  *(void *)(v3 - 136) = v8;
  *(_DWORD *)(v3 - 112) = v2 + 1224239923 * ((v3 - 144) ^ 0xF2B3FDD7) + 104;
  *(void *)(v3 - 104) = v1;
  (*(void (**)(uint64_t))(v0 + 8 * (v2 + 1691)))(v3 - 144);
  *(_DWORD *)(v3 - 128) = v4 + 1374699841 * ((v3 - 144) ^ 0x6DF41809) - 291;
  *(void *)(v3 - 144) = v1;
  *(void *)(v3 - 136) = v7;
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * (v4 ^ 0xFF)))(v3 - 144);
}

uint64_t sub_10002C028@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  HIDWORD(a11) = a8;
  return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8 * (int)((((v15 ^ 0xFFFFFCB0) + v15 + 911) * (a9 == 0)) ^ v15)))(a1, a2, a3, a4, a5, a6, a7, 452140548, *a1, a11, a12, a13, a14, a15);
}

uint64_t sub_10002C080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  return (*(uint64_t (**)(void))(v13
                              + 8
                              * (((*(unsigned __int8 *)(v11 + v9) != *(unsigned __int8 *)(*(void *)(v12 + 8 * ((v7 ^ 0x5CE) - 848))
                                                                                        - 4))
                                * ((((v7 ^ 0x5CE) + v8) & v10 ^ a7) + (((v7 ^ 0x5CE) + 313) | a6))) ^ ((v7 ^ 0x5CE) + 874))))();
}

uint64_t sub_10002C0CC()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v1 == v2) ^ ((v0 ^ 0xC7) + 1)) & 1) * ((v0 ^ 0x88) + 642)) ^ v0)))();
}

uint64_t sub_10002C10C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, uint64_t a13, unsigned int a14, uint64_t a15)
{
  a15 = v15;
  a14 = v18 + 1224239923 * (((~&a12 & 0x82819B8) - (~&a12 | 0x82819B9)) ^ 0xFA9BE46E) - 10;
  a13 = a10;
  uint64_t v19 = (*(uint64_t (**)(int *))(v17 + 8 * (v18 | 0x803)))(&a12);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * (((a12 == v16) * (((v18 + 584126804) | 0x80045) ^ 0x22D91514)) ^ v18)))(v19);
}

uint64_t sub_10002C1C0()
{
  STACK[0x568] = *(void *)(v1 + 8 * (LODWORD(STACK[0x3F4]) - 1000));
  return sub_10001B804(2037503917, STACK[0x380]);
}

uint64_t sub_10002C1EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((59 * (v5 < ((a5 + 169) | 0x261u) - 1731)) ^ a5)))(0);
}

uint64_t sub_10002C220()
{
  return sub_10002C228();
}

uint64_t sub_10002C228(int a1, uint64_t a2, int a3)
{
  int8x16_t v12 = *(int8x16_t *)(v9 + v5 + v4 + ((v3 + v6) & v7 ^ (a3 + 5)));
  *(int8x16_t *)((char *)&STACK[0x2E0] + v5) = vaddq_s8(vsubq_s8(v12, vandq_s8(vaddq_s8(v12, v12), v11)), v10);
  return (*(uint64_t (**)(void))(v8 + 8 * (((v5 == 48) * a1) ^ (v3 + 101))))();
}

uint64_t sub_10002C280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  unsigned int v20 = (v16 + 1790708299) & 0x9543F7CF;
  int v21 = 1759421093 * ((((2 * (v19 - 128)) | 0xBE58B94) - (v19 - 128) - 99796426) ^ 0xB68F759E);
  *(_DWORD *)(v19 - 128) = v15 - v21 + (v20 ^ 0x420FF15A);
  *(void *)(v19 - 120) = v18;
  *(_DWORD *)(v19 - 112) = v16 - v21 + 756;
  (*(void (**)(uint64_t))(v14 + 8 * (v16 ^ 0xAF5)))(v19 - 128);
  *(void *)(v19 - 120) = a14;
  *(void *)(v19 - 104) = a13;
  *(_DWORD *)(v19 - 112) = v20
                         + 1178560073 * ((2 * ((v19 - 128) & 0x571A4B78) - (v19 - 128) - 1461341051) ^ 0x1271CCE7)
                         + 503;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (int)(v20 ^ 0xC36)))(v19 - 128);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * (int)(((v17 + *(_DWORD *)(v19 - 128) + 122 * (v20 ^ 0x487) + 69 < 0xD97036ED)
                                                   * (((v20 ^ 0x487) + 866) ^ 0x352)) ^ v20)))(v22);
}

uint64_t sub_10002C3D0()
{
  LODWORD(STACK[0x50C]) = v0;
  return sub_10003A634();
}

void sub_10002C3E0()
{
}

void sub_10002C3EC()
{
}

void sub_10002C4D8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16)
     - 460628867 * (((a1 ^ 0x68759CF4 | 0x87CE5E15) - ((a1 ^ 0x68759CF4) & 0x87CE5E15)) ^ 0xA32D409C);
  __asm { BRAA            X10, X17 }
}

void sub_10002C60C()
{
}

uint64_t sub_10002C618(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((v5 & (2 * (*(unsigned __int8 *)(a2 + 5) - 242)))
                                      + ((*(unsigned __int8 *)(a2 + 5) - 242) ^ v6) == v6)
                                     * ((v4 - 604111624) & 0xFDFF9EBE ^ (v2 + 637))) ^ v4)))();
}

uint64_t sub_10002C66C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24)
{
  return (*(uint64_t (**)(void))(v26
                              + 8
                              * (((3 * (a24 ^ 0x742) + ((a24 - 212) | 0x94) - 2330)
                                * ((v25 + v24 + 22058689) > 7)) ^ a24)))();
}

uint64_t sub_10002C6E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_DWORD *)(*(void *)(a1 + 96) + 800) = 1013578837;
  *(_DWORD *)(*(void *)(a1 + 96) + 804) = 1477598966;
  *(void *)(*(void *)(a1 + 96) + 808) = *(void *)(a1 + 96) + 816;
  uint64_t v4 = *(void *)(a1 + 96) + 0x9F59A8236609E0;
  uint64_t v5 = *(void *)(a2 + 8) + (*(_DWORD *)(a2 + 4) - v3);
  unsigned int v6 = 1178560073
     * (((&v8 | 0xEE2C1A5C) - &v8 + (&v8 & 0x11D3E5A0)) ^ 0x54B8623E);
  unsigned int v8 = v6 + 321;
  uint64_t v9 = v5;
  uint64_t v10 = v4;
  unsigned int v12 = v3 + 605469004 + v6;
  (*(void (**)(unsigned int *))(a3 + 17888))(&v8);
  return (v11 - 1723469489);
}

void sub_10002C808()
{
}

uint64_t sub_10002C814@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (a1 | (4 * ((a1 ^ ((v1 | v2) == (((a1 - 331) | 0x21) ^ 0x329))) & 1)))))();
}

void sub_10002C850(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 1224239923 * ((a1 & 0x9A8552A9 | ~(a1 | 0x9A8552A9)) ^ 0x97C95081);
  __asm { BRAA            X9, X17 }
}

void sub_10002C918()
{
  *(_DWORD *)(v0 + 32) = -2124048112;
}

void sub_10002C964()
{
}

uint64_t sub_10002C96C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  STACK[0x510] = v8 - 16;
  return (*(uint64_t (**)(void))(v9 + 8 * ((((5 * (((v7 - 41) | 0x40) ^ 0xFD)) ^ 0x158) * (a7 != v10)) ^ v7)))();
}

void sub_10002C9B4()
{
}

uint64_t sub_10002C9BC()
{
  return sub_100047E04();
}

void sub_10002C9D4()
{
}

uint64_t sub_10002CA58()
{
  int v6 = v4 + v0;
  *(_DWORD *)(*v2 + 4 * v6) = v1;
  return (*(uint64_t (**)(void))(v5 + 8 * ((29 * (v6 > 0)) ^ v3)))();
}

uint64_t sub_10002CAA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((v8 == 24) * a7) ^ v9)))();
}

uint64_t sub_10002CB08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  return (*(uint64_t (**)(void))(v11 + 8 * ((75 * (a10 + 4 >= a10)) | v10)))();
}

uint64_t sub_10002CB80()
{
  *(void *)(v4 - 220 + v2 - 1575261667) = 0x5B5B5B5B5B5B5B5BLL;
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v1 & 0xFFFFFFFFFFFFFFF8) == 8) * ((v0 - 820) ^ 0xE0)) ^ v0)))();
}

uint64_t sub_10002CC80@<X0>(int a1@<W8>, int8x16_t a2@<Q7>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v29 = a1 - 689;
  int v30 = (const float *)(v28 + 908);
  int8x16_t v31 = (int8x16_t)vld1q_dup_f32(v30);
  v32.i64[0] = 0x8000000080000000;
  v32.i64[1] = 0x8000000080000000;
  a2.i64[0] = *(void *)(a26 + 4);
  a2.i32[2] = *(_DWORD *)(a26 + 12);
  int8x16_t v33 = vextq_s8(v31, a2, 0xCuLL);
  int8x16_t v34 = a2;
  v34.i32[3] = *(_DWORD *)(v28 + 4 * ((v29 ^ 0x1ACu) - 656));
  int32x4_t v35 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v34, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), vandq_s8(v33, v32)), 1uLL), (int8x16_t)vdupq_n_s32(0x4BA3B86Du));
  v36.i32[0] = *(_DWORD *)(v26 + 4 * (*(_DWORD *)(a26 + 4) & 1));
  v36.i32[1] = *(_DWORD *)(v26 + 4 * (*(_DWORD *)(a26 + 8) & 1));
  v36.i32[2] = *(_DWORD *)(v26 + 4 * (*(_DWORD *)(a26 + 12) & 1));
  v36.i32[3] = *(_DWORD *)(v26 + 4 * (v34.i8[12] & 1));
  *(int8x16_t *)a26 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(a26 - 908), v36), (int8x16_t)vdupq_n_s32(0x5CFC4C92u)), (int8x16_t)vaddq_s32(vsubq_s32(v35, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v35, v35), (int8x16_t)vdupq_n_s32(0x2E8EE1B4u))), vdupq_n_s32(0x974770DA)));
  return (*(uint64_t (**)(void))(v27 + 8 * v29))();
}

uint64_t sub_10002CD8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  return sub_10002CD94(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
}

uint64_t sub_10002CD94(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,uint64_t a29,unint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,unsigned __int8 a37)
{
  int v43 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 8 * v37);
  int v44 = STACK[0x324];
  int v45 = STACK[0x324];
  int v46 = STACK[0x328];
  int v47 = STACK[0x32C];
  int v48 = STACK[0x328];
  uint64_t v49 = LODWORD(STACK[0x32C]);
  int v50 = LOBYTE(STACK[0x338]) ^ 0x22;
  if (v50 == 2)
  {
    BOOL v55 = a4 < a30 && v38 < a4 + 64;
    return (*(uint64_t (**)(uint64_t, void, void))(v39
                                                              + 8
                                                              * (((((v42 - 14) | 0x40E) + ((v42 + 1010) | 0xE) - 2162)
                                                                * v55) | (v42 + 1601))))(v49, LODWORD(STACK[0x330]), LODWORD(STACK[0x330]));
  }
  else if (v50 == 1)
  {
    BOOL v52 = a4 < a30 && v38 < a4 + 64;
    return (*(uint64_t (**)(uint64_t))(v39 + 8
                                                    * ((((v52 ^ a37) & 1) * ((a28 + 1148) ^ 0x4A1)) ^ (v42 + 1867))))(v49);
  }
  else
  {
    LODWORD(STACK[0x320]) = 2 * (LODWORD(STACK[0x320]) ^ v40) + v40 - (v41 & (4 * (LODWORD(STACK[0x320]) ^ v40)));
    LODWORD(STACK[0x324]) = (v45 ^ v40) + (v44 ^ v40) + v40 - (v41 & (2 * ((v45 ^ v40) + (v44 ^ v40))));
    LODWORD(STACK[0x328]) = (v48 ^ v40) + (v46 ^ v40) + v40 - (v41 & (2 * ((v48 ^ v40) + (v46 ^ v40))));
    LODWORD(STACK[0x32C]) = (v49 ^ v40) + (v47 ^ v40) + v40 - (v41 & (2 * ((v49 ^ v40) + (v47 ^ v40))));
    return v43(v49, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24);
  }
}

void sub_10002CEB4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  LODWORD(STACK[0x330]) = (a5 ^ v6) + (a2 ^ v6) + v6 - ((v7 + a6 - 890) & (2 * ((a5 ^ v6) + (a2 ^ v6))));
  JUMPOUT(0x10002CF08);
}

uint64_t sub_10002CF90(int a1)
{
  if ((v1 - 1610446763) > 0x40) {
    int v6 = v1 - 1610446763;
  }
  else {
    int v6 = 64;
  }
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * (((-v2 - v3 + ((a1 + 1323034203) & 0xB1241C79 ^ 0x5FFD7FEB) + v6 < 0xF)
                                              * v5) ^ a1)))(3105087448);
}

uint64_t sub_10002D02C()
{
  int v5 = 1374699841 * (((((v4 - 144) | 0x58FAFE1E) ^ 0xFFFFFFFE) - (~(v4 - 144) | 0xA70501E1)) ^ 0xCAF119E8);
  *(_DWORD *)(v4 - 144) = ((v1 ^ 0xEAD) - 1391) ^ v5;
  *(_DWORD *)(v4 - 128) = v3 - 559756924 - v5;
  *(void *)(v4 - 136) = v2;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v0 + 8 * ((v1 ^ 0xEAD) + 118)))(v4 - 144);
  return (*(uint64_t (**)(uint64_t))(v0
                                            + 8
                                            * (((*(_DWORD *)(v4 - 140) == 2087569631)
                                              * ((((v1 ^ 0xEAD) - 1281) | 3) ^ 0x33F)) ^ ((v1 ^ 0xEAD) - 1068))))(v6);
}

uint64_t sub_10002D100()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((4 * (((v1 == 544568610) ^ (v0 - 81)) & 1)) & 0xDF | (32 * (((v1 == 544568610) ^ (v0 - 1105)) & 1))) ^ v0)))();
}

uint64_t sub_10002D13C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  LODWORD(STACK[0x494]) = v63;
  STACK[0x5D0] = *(void *)(v65 + 8 * v64);
  return sub_10000F488(a1, a2, 880, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

uint64_t sub_10002D150@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((a1 + ((v2 - 656) | 0x100u) + 168098369 < v1)
                                     * (((v2 + 1019831887) & 0xC33697FF) + 2507)) ^ v2)))();
}

void sub_10002D1AC()
{
  *v0 ^= v1;
  JUMPOUT(0x100027D8CLL);
}

uint64_t sub_10002D1D4@<X0>(int a1@<W7>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((a1 ^ (a2 + 2099) ^ v3 ^ 0x63D) >= 0) * (((v3 ^ 0x63D) + 638) ^ 0x7D8)) ^ v3 ^ 0x63D)))();
}

uint64_t sub_10002D220(char a1, char a2, char a3, char a4, int8x16_t a5, int8x8_t a6, int8x8_t a7, uint64_t a8, int a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  int v56 = a10 - 8;
  uint64_t v57 = (a9 + v56);
  v59.val[0].i64[0] = ((_BYTE)a9 + (_BYTE)v56) & 0xF;
  v59.val[0].i64[1] = (v54 + (_BYTE)v56) & 0xF;
  v59.val[1].i64[0] = (a4 + (_BYTE)v56) & 0xF;
  v59.val[1].i64[1] = (v53 + (_BYTE)v56) & 0xF;
  v59.val[2].i64[0] = (v52 + (_BYTE)v56) & 0xF;
  v59.val[2].i64[1] = (a3 + (_BYTE)v56) & 0xF;
  v59.val[3].i64[0] = (a2 + (_BYTE)v56) & 0xF;
  v59.val[3].i64[1] = (a1 + (_BYTE)v56) & 0xF;
  *(int8x8_t *)(*(void *)(v55 - 128) + v57) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(v51 + v57), *(int8x8_t *)(v49 + (v57 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v48 + (v57 & 0xF) - 7), *(int8x8_t *)(v47 + (v57 & 0xF) - 7)))), a7), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v59, a5), a6)));
  return (*(uint64_t (**)(void))(a47 + 8 * (v50 | (4 * (*(_DWORD *)(v55 - 136) == v56)))))();
}

uint64_t sub_10002D228@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W3>, int a4@<W8>)
{
  *(unsigned char *)(a1 + (a2 - 199865965)) = *(unsigned char *)(v4 + (a2 - 199865965));
  return (*(uint64_t (**)(void))(v7 + 8 * (((a2 - 1 != a4) * ((a3 - v6 + 1939) ^ 0x74E)) ^ (v5 + a3 + 2251))))();
}

uint64_t sub_10002D274(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 8);
  __int16 v2 = *(_DWORD *)result + 26185 * ((2 * (result & 0x1A68) - result - 6761) ^ 0x9DF5);
  unsigned int v3 = (((2 * (v2 & 0x1FF ^ 0x7C)) | 0xFBD86476) - (v2 & 0x1FF ^ 0x7C) + 34852293) ^ 0xFBC9962F;
  *(_DWORD *)(v1 - 0x35FF68D50C8F4033) = (v3 - ((2 * v3) & 0x6F2AF8C2) - 141198239) ^ 0x323C68E2;
  *(void *)(v1 - 0x35FF68D50C8F4053) = 0x25362CBFE80B51E8;
  *(_DWORD *)(v1 - 0x35FF68D50C8F4037) = 1483378228;
  int v4 = v2 ^ 0xC9;
  if (v4 == 1)
  {
    int v5 = 1483378244;
    goto LABEL_5;
  }
  if (v4 == 2)
  {
    *(_DWORD *)(v1 - 0x35FF68D50C8F403BLL) = -973966491;
    int v5 = 1483378248;
LABEL_5:
    *(void *)(v1 - 0x35FF68D50C8F404BLL) = 0xE9ED391C6165B194;
    *(void *)(v1 - 0x35FF68D50C8F4043) = 0x1612C6E39E9A4E6BLL;
    *(_DWORD *)(v1 - 0x35FF68D50C8F4037) = v5;
  }
  *(_DWORD *)(result + 4) = 1482178028;
  return result;
}

void sub_10002D404()
{
}

uint64_t sub_10002D410@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5
                                                              + 8
                                                              * ((7
                                                                * ((((v3 - 544568675) < 0xFFFFFFBF) ^ ((((a3 ^ 0xB0) + 115) | 0x28) - 47)) & 1)) ^ a3 ^ 0x3B0)))(a1, a2, v4);
}

uint64_t sub_10002D46C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                + 8
                                                                                * ((62 * (v5 != (v6 ^ 0x614))) ^ v6)))(a1, a2, a3, a4, a5);
}

uint64_t sub_10002D4A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  *(void *)(v24 - 120) = a20;
  *(void *)(v24 - 112) = v20;
  *(_DWORD *)(v24 - 128) = (v22 ^ 0x2F70)
                         - 108757529
                         * ((2 * (((v24 - 128) ^ 0x14BA10D1) & 0x6A3FC9C1) - ((v24 - 128) ^ 0x14BA10D1) - 1782565320) ^ 0x61E644C2)
                         + 601;
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(v21 + 8 * ((v22 ^ 0x2F70) + 1938)))(v24 - 128);
  return (*(uint64_t (**)(uint64_t))(v21 + 8 * ((v22 ^ 0x2F70) + 13 * (v23 == (v22 ^ 0x2F70) + 646878206))))(v25);
}

uint64_t sub_10002D550()
{
  unint64_t v0 = STACK[0x3B0];
  unint64_t v1 = STACK[0x278];
  STACK[0x398] = STACK[0x278] + 2353;
  STACK[0x390] = v0 + 49;
  STACK[0x388] = v1 + 2333;
  STACK[0x380] = v0 + 29;
  STACK[0x378] = v1 + 2313;
  STACK[0x350] = v0 + 9;
  return sub_10001F298();
}

void sub_10002D5B4(uint64_t a1)
{
  __asm { BRAA            X14, X17 }
}

uint64_t sub_10002D6DC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((15
                                * (((a1 + 104) ^ (LODWORD(STACK[0x50C]) == v2
                                                                                          + ((a1 - 1155) | 0x510)
                                                                                          - 1428)) & 1)) ^ a1)))();
}

uint64_t sub_10002D720(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((a3 ^ 0x695) - 569) ^ (16 * (v3 >= v4 + (a3 ^ 0x695u))))))();
}

uint64_t sub_10002D764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v6
                                                                               + 8
                                                                               * (((v4 < ((v5 + 1392077047) & 0xAD0693EE ^ 0x23E))
                                                                                 * (((v5 - 1342) | 0x404) ^ 0x428)) | v5)))(a1, a2, a3, a4, 0);
}

void sub_10002D7B8()
{
}

uint64_t sub_10002D80C@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  if ((v2 + 48475 + (v4 ^ 0x471u)) >> 1 < 0xF9F) {
    int v3 = a2;
  }
  *(_DWORD *)(*(void *)(result + 8) - 0xCBDE157C0FFD3D0) = v3;
  return result;
}

uint64_t sub_10002D848@<X0>(uint64_t a1@<X2>, int a2@<W6>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,unint64_t a26,uint64_t a27,int a28)
{
  unsigned int v34 = ((v30 - 8078005) & 0xF67FFFBF) - a2 + 145;
  LODWORD(STACK[0x278]) = a3;
  LODWORD(STACK[0x27C]) = a28;
  STACK[0x280] = a26;
  LODWORD(STACK[0x288]) = a25 - v33 + 423212695;
  STACK[0x290] = v28 + (v33 - 581300668);
  int v35 = (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 48 * v32 + 8))(a12, a21);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v31
                                                     + 8
                                                     * ((1145 * (v35 + v29 - ((v34 ^ 0x2CB32B1) & (2 * v35)) == v29)) ^ v30)))(1098282115, 90582814);
}

uint64_t sub_10002D92C@<X0>(int a1@<W1>, int a2@<W3>, char a3@<W4>, uint64_t a4@<X8>)
{
  *(unsigned char *)(v6 + a4) = *(unsigned char *)(v7 + (v5 + a1))
                      - (a3 & (2 * *(unsigned char *)(v7 + (v5 + a1))))
                      + 91;
  return (*(uint64_t (**)(void))(v8 + 8 * ((7 * (a4 != 63)) ^ (a2 + v4 - 111))))();
}

uint64_t sub_10002D978()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((1449 * (*(_DWORD *)(v2 - 0x6C0C7F2AED40EE79) == ((v0 - 20) | 0x40E) - 2124049695)) ^ v0)))();
}

uint64_t sub_10002D9C8@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((*(_DWORD *)(v2 - 0x6C0C7F2AED40EE79) == -2124048112)
                                * (((v1 ^ 0x4F5) + 1075) ^ 0x308 ^ (((v1 ^ 0x4F5) - 421) | 0x510))) ^ v1 ^ 0x4F5)))();
}

uint64_t sub_10002DA28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_10002DA38(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_10002DA38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002DA40(a1, a2, a3, &STACK[0x2E0]);
}

uint64_t sub_10002DA40@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,char a30,unint64_t a31)
{
  int v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 8 * a8);
  int v36 = STACK[0x32C];
  int v37 = STACK[0x32C];
  int v38 = STACK[0x330];
  int v39 = STACK[0x334];
  int v40 = STACK[0x330];
  uint64_t v41 = LODWORD(STACK[0x334]);
  int v42 = LOBYTE(STACK[0x340]) ^ 0x22;
  if (v42 == 2)
  {
    BOOL v47 = a3 < a31 && v31 < a3 + 64;
    return (*(uint64_t (**)(uint64_t, void, void))(v32
                                                              + 8
                                                              * ((13 * ((v47 ^ (a30 - 13)) & 1)) ^ ((int)a1 + 627))))(v41, LODWORD(STACK[0x338]), LODWORD(STACK[0x338]));
  }
  else if (v42 == 1)
  {
    BOOL v44 = a3 >= a31 || v31 >= a3 + 64;
    return (*(uint64_t (**)(uint64_t))(v32 + 8 * ((((257 * a29) ^ 0x215) * v44) ^ ((int)a1 + 981))))(v41);
  }
  else
  {
    LODWORD(STACK[0x328]) = 2 * (LODWORD(STACK[0x328]) ^ v33) + v33 - (v34 & (4 * (LODWORD(STACK[0x328]) ^ v33)));
    LODWORD(STACK[0x32C]) = (v37 ^ v33) + (v36 ^ v33) + v33 - (v34 & (2 * ((v37 ^ v33) + (v36 ^ v33))));
    LODWORD(STACK[0x330]) = (v40 ^ v33) + (v38 ^ v33) + v33 - (v34 & (2 * ((v40 ^ v33) + (v38 ^ v33))));
    LODWORD(STACK[0x334]) = (v41 ^ v33) + (v39 ^ v33) + v33 - (v34 & (2 * ((v41 ^ v33) + (v39 ^ v33))));
    return v35(v41, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25);
  }
}

void sub_10002DB44(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  LODWORD(STACK[0x338]) = (a5 ^ v6) + (a2 ^ v6) - (v7 & (2 * ((a5 ^ v6) + (a2 ^ v6)))) + ((a6 - 1262) ^ (v6 - 16));
  JUMPOUT(0x10002DB9CLL);
}

uint64_t sub_10002DC20(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * (((**(unsigned char **)(a2 + 8) == 0) * (((v3 ^ 0x4648AC26) - 1179167298) ^ 0x190)) ^ v3)))();
}

uint64_t sub_10002DC6C@<X0>(uint64_t a1@<X8>)
{
  int v5 = v1 - (**(unsigned char **)(v4 + 8) == 0);
  int v6 = v2 + 260;
  *(_DWORD *)(*(void *)(v3 + 96) + 528) = 1013578837;
  *(_DWORD *)(*(void *)(v3 + 96) + 532) = 1477598966;
  *(void *)(*(void *)(v3 + 96) + 536) = *(void *)(v3 + 96) + 544;
  uint64_t v7 = *(void *)(v3 + 96) + 0x9F59A8236608D0;
  uint64_t v8 = *(void *)(v4 + 8) + (*(_DWORD *)(v4 + 4) - v5);
  unsigned int v9 = 1178560073
     * (((&v12 | 0xC87B6021) - &v12 + (&v12 & 0x37849FD8)) ^ 0x72EF1843);
  unsigned int v16 = v9 + v5 + 605469004;
  uint64_t v13 = v8;
  uint64_t v14 = v7;
  unsigned int v12 = v9 + 321;
  (*(void (**)(unsigned int *))(a1 + 17888))(&v12);
  int v10 = v15;
  *(void *)(*(void *)(v3 + 96) + 512) = *(void *)(v4 + 8) + (*(_DWORD *)(v4 + 4) - v5);
  return v10 + (v6 ^ 0x93B1DD7C);
}

uint64_t sub_10002DDB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12
                                                              + 8
                                                              * ((47
                                                                * (a12
                                                                 - 355748909
                                                                 + ((v13 + 1389343800) & 0xAD304BBF)
                                                                 + 327
                                                                 + 1162 < 0xFFFFFFFB)) ^ (v13 + 1688))))(a1, a2, a3);
}

uint64_t sub_10002DE24(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,uint64_t a25,uint64_t a26,int a27)
{
  int v28 = (a4 - 421) | 0x200;
  int v29 = (v28 ^ 0x3B9) + 364;
  int v30 = v28 - 101;
  BOOL v31 = a24 + 1460941046 < (a27 - 72690302);
  if ((a27 - 72690302) < 0xB352A7D != (a24 + 1460941046) < 0xB352A7D) {
    BOOL v31 = (a27 - 72690302) < 0xB352A7D;
  }
  return (*(uint64_t (**)(void))(v27 + 8 * ((v31 * (v29 ^ 0x1DD)) ^ v30)))();
}

uint64_t sub_10002DEF4(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)(((a3 + v4 + 5 * (v3 ^ 0x73Bu) + 312508174 < 0xC)
                                     * (((v3 + 64015307) & 0xFC2F2FC4) - 276)) ^ v3)))();
}

uint64_t sub_10002DF58(unsigned int a1)
{
  LODWORD(STACK[0x5E4]) = v2;
  return (*(uint64_t (**)(void))(v3 + 8 * (((a1 < 19 * (v1 ^ 0x46Cu) - 205) * (((v1 - 91) | 1) - 1021)) | v1)))();
}

uint64_t sub_10002DFA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8 * ((((a5 + 1 + v10) > 0x4F) * a8) ^ v9)))(v8, a4);
}

uint64_t sub_10002E05C@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  if (a2 + v2 + ((v5 - 166824781) & 0x9F18B79u) - 322 >= 0x7FFFFFFF) {
    int v6 = -1339769364 - v4;
  }
  else {
    int v6 = v4;
  }
  *uint64_t v3 = v6;
  *(_DWORD *)(result + 24) = 1723469489;
  return result;
}

uint64_t sub_10002E0B4()
{
  *(_DWORD *)(v2 - 200) = (v0 + 426522868) ^ (535753261
                                            * ((2 * ((v2 - 200) & 0x65A95898) - (v2 - 200) + 441886561) ^ 0x10A2A94E));
  (*(void (**)(uint64_t))(v1 + 8 * (v0 ^ 0x843)))(v2 - 200);
  LODWORD(STACK[0x2A8]) = LODWORD(STACK[0x2A8]) + ((v0 - 50) | 0xC) - 110;
  *(void *)(v2 - 176) = STACK[0x260];
  *(unsigned char *)(v2 - 200) = (-85 * ((~((v2 + 56) | 0xE3) + ((v2 + 56) & 0xE3)) ^ 0xEA)) ^ 0x2F;
  *(_DWORD *)(v2 - 184) = 3804331 * ((~((v2 - 200) | 0xD8CEF2E3) + ((v2 - 200) & 0xD8CEF2E3)) ^ 0x59E428EA) + v0 + 1689;
  *(void *)(v2 - 192) = STACK[0x258];
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 ^ 0x87E)))(v2 - 200);
  LODWORD(STACK[0x534]) = *(_DWORD *)(v2 - 180);
  LODWORD(STACK[0x2AC]) = 1909026955;
  return sub_10002E1D8(v3);
}

uint64_t sub_10002E1D8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((2126 * (v1 == (((v0 ^ 0x462) + 250) ^ (v3 + 775)))) ^ v0)))();
}

uint64_t sub_10002E20C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, int a6)
{
  *(void *)(a2 + (v6 + a6)) = *(void *)(v7 + (v6 + a6));
  return (*(uint64_t (**)(void))(v9 + 8 * (((v8 == a6) * a5) ^ a3)))();
}

void sub_10002E238(_DWORD *a1)
{
  unsigned int v1 = 235795823 * ((a1 - 1876425126 - 2 * (a1 & 0x9028065A)) ^ 0x4854F03);
  unsigned int v2 = a1[9] + v1;
  int v3 = *a1 ^ v1;
  BOOL v5 = (v3 & 0x30000000) == 0x20000000 || (v3 & 0x3F000000) == 0x4000000;
  __asm { BRAA            X10, X17 }
}

uint64_t sub_10002E310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12
                                                              + 8
                                                              * ((15
                                                                * ((((a2 ^ 0x1D) + 487) ^ 0xAC5041BC ^ (3 * (a2 ^ 0x1D)))
                                                                 + a12 > 0xFFFFFFFA)) ^ ((int)a2 + 1680))))(a1, a2, a3);
}

uint64_t sub_10002E374@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, unsigned int a4@<W3>, uint64_t a5@<X8>)
{
  unsigned int v13 = a4 + 1;
  int v14 = *(unsigned __int8 *)(*(void *)(a2 + 8) + a4);
  *(unsigned char *)(a1 + (v6 + v5 + 1007) + 4) = (((v14 << v9) & 0x7E) + (v14 ^ 0xBF)) ^ 0x80;
  unsigned int v15 = *(_DWORD *)(a2 + 4) + v10;
  BOOL v16 = v15 < v7;
  BOOL v17 = v13 + v7 < v15;
  if (v13 > v11 != v16) {
    BOOL v17 = v16;
  }
  return (*(uint64_t (**)(void))(a5 + 8 * ((v17 * a3) ^ v8)))();
}

uint64_t sub_10002E37C()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((((*(_DWORD *)(v1 - 128) + 419) | 0x28) - 905)
                                * (*(_DWORD *)(v1 - 120) == *(_DWORD *)(v1 - 124))) ^ *(_DWORD *)(v1 - 128))))();
}

void sub_10002E3B8()
{
  *uint64_t v1 = v0;
}

uint64_t sub_10002E3DC()
{
  return v0();
}

uint64_t sub_10002E3E4()
{
  unsigned int v4 = (v3 + 273527713) & 0xEFB2497C;
  BOOL v5 = v2 > v4 + 2143487313;
  if (v5 == v0 - 1473603004 < -2143487686) {
    BOOL v5 = v0 - 1473603004 < (int)(v2 + 3995962);
  }
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (int)((!v5 * (v4 ^ (v4 - 60964221) & 0x3A23D9D)) ^ v4)))(0x1819CFCC1817BFAELL);
}

uint64_t sub_10002E52C()
{
  int v3 = v0;
  uint64_t v4 = (*(uint64_t (**)(void))(v2 + 8 * (v1 ^ 0xCB7)))();
  STACK[0x510] -= 16;
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((((5 * ((((v1 ^ 0x4A4) - 41) | 0x40) ^ 0xFD)) ^ 0x158)
                                              * (v3 != -2124048112)) ^ v1 ^ 0x4A4)))(v4);
}

void sub_10002E5A4()
{
}

uint64_t sub_10002E5AC@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  unsigned int v7 = *(_DWORD *)((char *)&STACK[0x2E0] + ((v5 + a2) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v5 + a2 + 1)) = (BYTE2(v7) ^ 0x20) - ((v7 >> 15) & 0xB6) + 91;
  *(unsigned char *)(a1 + (v5 + a2)) = ((v3 + 81) ^ HIBYTE(v7)) - ((2 * ((v3 + 81) ^ HIBYTE(v7))) & 0xB6) + 91;
  *(unsigned char *)(a1 + (v5 + a2 + 2)) = (BYTE1(v7) ^ 0x92)
                                               - 2 * ((BYTE1(v7) ^ 0x92) & 0xDF ^ BYTE1(v7) & 4)
                                               + 91;
  *(unsigned char *)(a1 + (v5 + a2 + 3)) = v7 ^ 0xCE;
  unsigned int v8 = LODWORD(STACK[0x33C]) + 775301491;
  BOOL v9 = v8 < v2;
  BOOL v10 = v5 + 1971217044 < v8;
  if (v5 + 1971217044 < v2 != v9) {
    BOOL v10 = v9;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((v10 * v4) ^ v3)))();
}

void sub_10002E68C()
{
}

uint64_t sub_10002E698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(_DWORD *)(v25 - 112) = v23
                         + 1374699841 * ((((v25 - 128) | 0x24434647) + (~(v25 - 128) | 0xDBBCB9B8)) ^ 0x49B75E4F)
                         + 440;
  *(void *)(v25 - 128) = a22;
  *(void *)(v25 - 120) = v22;
  (*(void (**)(uint64_t))(v24 + 8 * (v23 ^ 0xDD8)))(v25 - 128);
  *(void *)(v25 - 104) = a20;
  *(_DWORD *)(v25 - 112) = v23
                         + 1178560073 * (((v25 - 128) & 0x43E88A0D | ~((v25 - 128) | 0x43E88A0D)) ^ 0x6830D90)
                         + 263;
  *(void *)(v25 - 120) = a22;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v23 ^ 0xDC6)))(v25 - 128);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * ((251 * ((*(_DWORD *)(v25 - 128) - 1532862473) < 0xAF5DF559)) ^ v23)))(v26);
}

uint64_t sub_10002E7E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v42 = v37 + a9 - 46;
  *(unsigned char *)(a5 + (v42 + v39)) = *(unsigned char *)(a37 + v41 - 5875188)
                                             - (a6 & (2 * *(unsigned char *)(a37 + v41 - 5875188)))
                                             + 91;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 8 * ((1002 * ((v39 + v42 + 1) < 0x40)) ^ v38)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_10002E7F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned int a10, int a11, unint64_t *a12, uint64_t a13, unsigned int a14)
{
  unsigned int v18 = 3804331 * ((((2 * &a10) | 0x8B5218CE) - &a10 - 1168706663) ^ 0x3B7C2991);
  a12 = &STACK[0x5248BA885C210B04];
  a13 = v14;
  a14 = v18 - 1674431230;
  a10 = v18 + (v16 ^ 0xFEBFB37D) + ((2 * v16) & 0x7D7F66FA) + 2011328192;
  a11 = v18 + v17 - 155;
  uint64_t v19 = (*(uint64_t (**)(unsigned int *))(v15 + 8 * (v17 + 1902)))(&a10);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((*(_DWORD *)(v14 - 0x6C0C7F2AED40EE79) == -2124048112)
                                              * ((62 * (v17 ^ 0x11E)) ^ 0x5F9)) ^ v17)))(v19);
}

uint64_t sub_10002E8F4()
{
  BOOL v4 = (*(uint64_t (**)(void, uint64_t))(v0 + 8 * (v3 ^ 0xCBB)))((v3 ^ 0x62u) - 544569652 + *(_DWORD *)(v2 + 24 * v1 + 16), 2970849626) != 0;
  return (*(uint64_t (**)(void))(v0 + 8 * ((250 * v4) ^ v3)))();
}

uint64_t sub_10002E958()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 ^ 0xFE) + v2 - 625 - 1148) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_10002E9A0@<X0>(int a1@<W0>, int a2@<W4>, uint64_t a3@<X5>, int a4@<W8>)
{
  *(unsigned char *)(a3 + (a4 + a2)) = v5;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((a4 + v4 - 634 - 62 + a2) > 0x3F) * a1) ^ v4)))();
}

uint64_t sub_10002E9D8@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W6>, int a4@<W8>)
{
  *(unsigned char *)(v4 + (a2 + v6)) = *(unsigned char *)(v5 + (a2 + v6))
                                           - ((*(unsigned char *)(v5 + (a2 + v6)) << ((a1 + 123) ^ 0x3C)) & v8)
                                           + 91;
  return (*(uint64_t (**)(void))(v7 + 8 * (((a2 - 1 == a4) * a3) ^ a1)))();
}

uint64_t sub_10002EA1C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((a1 == v1) * (v2 + 904)) ^ v2)))();
}

uint64_t sub_10002EA40()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (v0 ^ (234 * ((v2 + v1 - 2) < 0x7FFFFFFF)))))();
}

void sub_10002EA74(uint64_t a1)
{
  int v2 = 1755732067 * ((2 * ((a1 ^ 0xFDCA5AD1) & 0x4699B354) - (a1 ^ 0xFDCA5AD1) - 1184478037) ^ 0x9A6AABA1);
  int v3 = *(_DWORD *)(a1 + 32) - v2;
  unsigned int v5 = v3
     + 628203409
     * (((&v5 ^ 0x607C7E06) + 814069247 - 2 * ((&v5 ^ 0x607C7E06) & 0x3085B5FF)) ^ 0xD271C7CA)
     - 231789832;
  uint64_t v4 = (char *)*(&off_100233720 + (v3 ^ 0x480)) - 8;
  (*(void (**)(unsigned int *))&v4[8 * (v3 ^ 0xC7A)])(&v5);
  __asm { BRAA            X0, X17 }
}

void sub_10002EC40()
{
  _DWORD *v0 = 2124071625;
  JUMPOUT(0x10001E388);
}

uint64_t sub_10002EC68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8)
{
  *(void *)(*(void *)(a8 + 96) + 1544) = *(void *)(a2 + 8);
  *(_DWORD *)(*(void *)(a8 + 96) + 1536) = *(_DWORD *)(a2 + 4);
  return v8 ^ a7;
}

uint64_t sub_10002ECC0@<X0>(uint64_t a1@<X8>, int a2)
{
  *(_DWORD *)(a1 - 0x2E910FB81C0D97DFLL) = a2;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((*(void *)(v3 + 24) != 0x6270735DB71EF9AFLL)
                                     * ((v2 + 1705321683) & 0x9A5AD775 ^ 0x20F)) ^ (v2 + 154))))();
}

uint64_t sub_10002ED38(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((a1 - 208) | 0x38) ^ 7) * (v1 != v2)) ^ a1)))();
}

uint64_t sub_10002EDAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v77 = ((v73 & 0x502C1621 | ~(v73 | 0x502C1621)) ^ 0x3B7EA087) * v74;
  *(_DWORD *)(v76 - 200) = v77 ^ 0x445B78DA;
  *(void *)(v76 - 192) = v70;
  *(void *)(v76 - 184) = a69;
  *(void *)(v76 - 176) = a70;
  *(_DWORD *)(v76 - 164) = v71 - v77 - 171;
  uint64_t v78 = (*(uint64_t (**)(uint64_t))(v75 + 8 * (v71 + 1558)))(v76 - 200);
  return (*(uint64_t (**)(uint64_t))(v75
                                            + 8
                                            * (((*(_DWORD *)(v76 - 168) == v72 + v71 - 609 - 78) * ((v71 - 609) ^ 0x4BA)) ^ v71)))(v78);
}

uint64_t sub_10002EE64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(_DWORD *)(v14 - 116) = (v13 - 90) ^ (460628867
                                       * ((2 * ((v14 - 120) & 0x61099BE0) - (v14 - 120) - 1628019688) ^ 0xD260E665));
  *(void *)(v14 - 112) = a10;
  (*(void (**)(uint64_t))(v12 + 8 * (v13 + 1135)))(v14 - 120);
  *(void *)(v14 - 112) = a11;
  *(_DWORD *)(v14 - 116) = (v13 - 90) ^ (460628867
                                       * ((((2 * (v14 - 120)) | 0x2ED7C168) - (v14 - 120) + 1754537804) ^ 0xDBFD62C9));
  (*(void (**)(uint64_t))(v12 + 8 * (v13 + 1135)))(v14 - 120);
  *(_DWORD *)(v14 - 104) = v13
                         + 1374699841
                         * ((-1520606683 - ((v14 - 120) | 0xA55D6225) + ((v14 - 120) | 0x5AA29DDA)) ^ 0x375685D3)
                         + 791;
  *(void *)(v14 - 120) = v11;
  *(void *)(v14 - 112) = a11;
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(v12 + 8 * (v13 ^ 0xCB9)))(v14 - 120);
  return sub_10002EFB0(v15);
}

void sub_10002EFEC()
{
}

void sub_10002F020()
{
}

uint64_t sub_10002F0B0@<X0>(uint64_t a1@<X1>, int a2@<W6>, uint64_t a3@<X8>)
{
  *(unsigned char *)(v5 - 220 + a3 + a1) = 91;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((unint64_t)(a3 + 1 + a1) < 0x38)
                                     * ((v3 - 4458029) & 0xE57DA7BF ^ (a2 - 973))) ^ (v3 - 963))))();
}

uint64_t sub_10002F104@<X0>(void *a1@<X0>, int a2@<W2>, int a3@<W3>, int a4@<W8>)
{
  return sub_100033C84(a1, 0, a3, *(_DWORD *)(*v5 + 4 * (a2 - 634882999 + a3)), v4, a4);
}

uint64_t sub_10002F12C()
{
  return 4294925278;
}

void sub_10002F134(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 - 108757529 * ((-2 - ((a1 | 0x1E625E8E) + (~a1 | 0xE19DA171))) ^ 0x101C35A);
  int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x9F59A8236606BCLL);
  uint64_t v6 = *(void *)(a1 + 8);
  int v5 = (460628867 * ((v4 + 406003521 - 2 * ((unint64_t)v4 & 0x18331F41)) ^ 0x54A59D3C)) ^ (v1 - 525);
  int v3 = (char *)*(&off_100233720 + v1 - 1344) - 8;
  (*(void (**)(unsigned char *))&v3[8 * (v1 ^ 0xD5C)])(v4);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10002F290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10004B9CC(a1, a2, a3, LODWORD(STACK[0x3F4]), 11, a6, 2124071625, 1270);
}

uint64_t sub_10002F2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_10002F304(a1, 1029, 0xA7A98B6C5652B5C2, a4, 477, 1387, a7, 1470103229);
}

uint64_t sub_10002F304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((((((((v7 - 684) | 0x602) - 262) ^ (*(unsigned __int8 *)(v5 + v8 + a3) == *(unsigned __int8 *)(v6 + v8 + a3))) & 1) == 0)
                                * a5) ^ v7)))();
}

uint64_t sub_10002F348@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v17 = ((v12 - 461) | 0x19u) ^ 0xFFFFFE02;
  v18.i64[0] = 0xB6B6B6B6B6B6B6B6;
  v18.i64[1] = 0xB6B6B6B6B6B6B6B6;
  v19.i64[0] = 0x5B5B5B5B5B5B5B5BLL;
  v19.i64[1] = 0x5B5B5B5B5B5B5B5BLL;
  *(int8x16_t *)(v14 + (v17 & (v11 + a6))) = vaddq_s8(vsubq_s8(*v15, vandq_s8(vaddq_s8(*v15, *v15), v18)), v19);
  uint64_t v20 = *(uint64_t (**)(uint64_t, int8x16_t *, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8 * (v12 | (4 * (((v13 + 1) & 0x1FFFFFFF0) == 16))));
  return v20(v17, v15 + 1, v20, a1, a2, a3, a4, a5, a7, a8, a9, a10, a11);
}

uint64_t sub_10002F3C0()
{
  STACK[0x3A0] = STACK[0x538];
  LODWORD(STACK[0x4CC]) = 581300668;
  return sub_10001EB1C();
}

uint64_t sub_10002F3FC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((54 * ((((v0 - 395) | 0x401) ^ 0x98421F3E) + v1 >= v0 - 409)) ^ v0)))();
}

uint64_t sub_10002F440(int a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v1 + 1604) ^ 0x8D) - 1912) * (v3 == a1)) ^ v1)))();
}

uint64_t sub_10002F484()
{
  _DWORD *v0 = 2124071461;
  return sub_10002F490();
}

uint64_t sub_10002F498(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t v46 = 4 * (v40 - 1655471129);
  int v47 = (((*(_DWORD *)(v42 + 4 * (v40 - 1655471130)) >> 30) ^ 2)
       + a4
       - ((2 * ((*(_DWORD *)(v42 + 4 * (v40 - 1655471130)) >> 30) ^ 2)) & 4)) ^ *(_DWORD *)(v42 + 4 * (v40 - 1655471130));
  int v48 = (*(_DWORD *)(a39 + 4 * (v44 - 1799099614)) ^ a4)
      + v44
      - 1799099614
      + ((a4 + 1664525 * v47 - ((3329050 * v47) & a5)) ^ *(_DWORD *)(v42 + v46));
  *(_DWORD *)(v42 + v46) = v48 + a4 - (a5 & (2 * v48));
  uint64_t v49 = 235795823
      * ((((v45 - 152) | 0x68728E509914D92ELL) - ((v45 - 152) & 0x68728E509914D92ELL)) ^ 0x60C234AE0DB99077);
  *(_DWORD *)(v45 - 124) = v49 + 1;
  LODWORD(v46) = v49 ^ (v43 + 1073489660);
  *(void *)(v39 + 160) = (v40 + 1160993174) ^ (unint64_t)v49;
  *(_DWORD *)(v45 - 152) = v46 ^ 0xEB;
  *(_DWORD *)(v45 - 148) = v43 + 1073489660 - v49;
  *(_DWORD *)(v45 - 144) = v46 ^ 0x6B;
  *(_DWORD *)(v45 - 128) = 1559371749 - v49 + v43;
  *(void *)(v39 + 176) = v49 + 2816464302;
  uint64_t v50 = (*(uint64_t (**)(uint64_t))(v41 + 8 * (a6 + v43 - 61)))(v45 - 152);
  return (*(uint64_t (**)(uint64_t))(v41 + 8 * *(int *)(v45 - 112)))(v50);
}

uint64_t sub_10002F4A4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  BOOL v23 = ~a19 + v21 - (unint64_t)(v19 + a2) < (((v20 + 1946168293) | 0x82048C25) ^ 0xF604BF37uLL);
  return (*(uint64_t (**)(void))(v22 + 8 * ((2 * v23) | (32 * v23) | v20)))();
}

void sub_10002F500()
{
}

uint64_t sub_10002F540()
{
  return ((uint64_t (*)(void))STACK[0x520])();
}

uint64_t sub_10002F574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  *(_DWORD *)(v23 - 128) = v19
                         - 108757529 * ((((v23 - 128) | 0x22306975) + (~(v23 - 128) | 0xDDCF968A)) ^ 0xC2AC0B5F)
                         - 299;
  *(void *)(v23 - 120) = a19;
  *(void *)(v23 - 112) = v22;
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(v20 + 8 * (v19 ^ 0xC76)))(v23 - 128);
  return (*(uint64_t (**)(uint64_t))(v20
                                            + 8
                                            * (v19 ^ (2 * (v21 == ((v19 + 1393675009) & 0xACEE357F ^ 0x45CFFFD8))))))(v24);
}

void sub_10002F624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned char *a21,uint64_t a22,unsigned char *a23,uint64_t a24,uint64_t a25,unsigned char *a26,unsigned char *a27,uint64_t a28,uint64_t a29,uint64_t a30,unsigned char *a31,unsigned char *a32,unsigned char *a33,uint64_t a34,unsigned char *a35,uint64_t a36,unsigned char *a37,unsigned char *a38,unsigned char *a39)
{
  unint64_t v44 = ((a5 ^ 0xEB42B7F18DD065C8)
       - 0x54AC5FB5A9642C70
       - ((2 * (a5 ^ 0xEB42B7F18DD065C8)) & 0x56A74094AD37A720)
       + 20 * ((v39 + 1265) ^ 0x783u)
       - 1540) ^ v41;
  uint64_t v45 = v40 ^ (((a11 - 573605017) | (unint64_t)(a12 << 32))
             + 0x475DBA021522B0E9
             - 2
             * (((a11 - 573605017) | (unint64_t)(a12 << 32)) & 0x475DBA021522B0FBLL ^ (a11 - 573605017) & 0x12));
  unint64_t v46 = v45 ^ 0xA173397C065C8DEALL;
  uint64_t v47 = v45 ^ 0x5E8CC683F9A37215;
  unint64_t v48 = ((v45 ^ 0x5E8CC683F9A37215)
       + 0x6A115CBB5709FBB8
       - ((2 * (v45 ^ 0x5E8CC683F9A37215)) & 0xD422B976AE13F770)) ^ v42;
  uint64_t v49 = v48 ^ 0x629A61E2FE92CDE4;
  unint64_t v50 = v48 ^ 0x9D659E1D016D321BLL;
  unint64_t v51 = v44 ^ 0x8ABB7B075CE8A96ELL;
  unint64_t v52 = v44 ^ 0x8ABB7B075CE8A96ELL ^ v49 & v46;
  unint64_t v53 = v50 & (v43 ^ 0xDD56B68523E9D401) ^ v47 ^ v52;
  *((void *)&v55 + 1) = v53 ^ 0xABEF87C8808CCB5;
  *(void *)&long long v55 = v53 ^ 0x8000000000000000;
  uint64_t v54 = v55 >> 61;
  uint64_t v56 = v52 ^ 0xF38BFF733C051F6;
  unint64_t v57 = a5 ^ 0xEB42B7F18DD065C8 ^ v43 ^ 0xDD56B68523E9D401;
  unint64_t v58 = (v44 ^ 0x754484F8A3175691) & v47 ^ v57;
  unint64_t v59 = (v58 & 0x200000000 | ((((v58 & 0x200000000) >> 33) & 1) << 34)) ^ 0xFDDE7BD355579DDBLL;
  unint64_t v60 = v59 + 0x221842CAAA86225;
  unint64_t v61 = v59 + 0x76F78CFEEFABFC00;
  unint64_t v62 = 0x72B484A59A5B37B6 - v59;
  if ((v60 & v56) == 0) {
    unint64_t v62 = v61;
  }
  unint64_t v63 = ((v56 + v62 - 0x74D608D2450399DBLL) ^ (0x74D608D2450399DBLL - (v56 + v62)) ^ ((v58 & 0xFFFFFFFDFFFFFFFFLL)
                                                                                    - ((v56 + v62 - 0x74D608D2450399DBLL) ^ v58 & 0xFFFFFFFDFFFFFFFFLL)))
      + (v58 & 0xFFFFFFFDFFFFFFFFLL);
  unint64_t v64 = v63 - ((2 * v63) & 0x22F1FE6EBCAA9016) - 0x6E8700C8A1AAB7F5;
  *((void *)&v65 + 1) = (v63 - ((2 * v63) & 0xBCAA9016) + 1582647307) ^ 0x5480B;
  *(void *)&long long v65 = v64 ^ 0x9178FF375E500000;
  unint64_t v66 = v53 ^ __ROR8__(v53, 39) ^ v54;
  uint64_t v67 = ((v65 >> 19) - ((2 * (v65 >> 19)) & 0x22F1FE6EBCAA9016) - 0x6E8700C8A1AAB7F5) ^ v64;
  uint64_t v68 = (v58 << 23) ^ (v58 >> 7) ^ ((v58 >> 41) | (v58 << 57)) ^ 0x1EC655AF97FB0312;
  unint64_t v69 = (v68 - ((2 * v68) & 0xF5905424D203FF40) + 0x7AC82A126901FFA0) ^ v58;
  unint64_t v70 = v69 ^ 0xCDF10DE5394E3F52;
  unint64_t v71 = v69 ^ 0xCDF10DE5394E3F52 ^ (v64 << 36) ^ (v67 & 0x88A7E47BC54E7E29 ^ ((v64 >> 28) ^ 0x9178FF375) & 0xBC54E7E29 | v67 & 0x77581B843AB181D6 ^ ((v64 >> 28) ^ 0x9178FF375) & 0x43AB181D6);
  unint64_t v72 = v51 & ~v57;
  uint64_t v73 = v49 ^ v57 & (v43 ^ 0x22A9497ADC162BFELL);
  unint64_t v74 = v73 ^ v43 ^ 0xDD56B68523E9D401 ^ v72;
  unint64_t v75 = v74 ^ 0xB5D719717D1BEF24 ^ ((((v74 >> 10) ^ (v74 >> 17) | (v74 << 54)) ^ 0xF5EC3F377C10F093)
                                    - 2
                                    * ((((v74 >> 10) ^ (v74 >> 17) | (v74 << 54)) ^ 0xF5EC3F377C10F093) & 0x448FB45568E88FFLL ^ ((v74 >> 10) ^ (v74 >> 17)) & 0xC)
                                    + 0x448FB45568E88F3);
  unint64_t v76 = v75 & 0x4C1D4E44A4B3031DLL ^ ((v74 << 47) ^ 0xB3EB800000000000) & 0x4C1D000000000000 | v75 & 0xB3E2B1BB5B4CFCE2 ^ ((v74 << 47) ^ 0xB3EB800000000000) & 0xB3E2800000000000;
  uint64_t v77 = v76 - ((2 * v76) & 0x2A2E5D2323BE5D08) + 0x15172E9191DF2E84;
  unint64_t v78 = v77 ^ ((v69 ^ 0xCDF10DE5394E3F52)
             - 2 * ((v69 ^ 0xCDF10DE5394E3F52) & 0x15172E9191DF2EADLL ^ v69 & 0x29)
             + 0x15172E9191DF2E84);
  unint64_t v79 = v71 ^ 0xE55480B000000000;
  *((void *)&v65 + 1) = ~v73;
  *(void *)&long long v65 = v73 ^ 0x92CFC162FD513142;
  uint64_t v80 = v73 ^ 0xFFFB126EAD0EC8ALL ^ (((v73 << 58) ^ 0xC00000000000000)
                                   - ((2 * ((v73 << 58) ^ 0xC00000000000000)) & 0x3800000000000000)
                                   - 0x62CF8FBBE87E2237);
  uint64_t v81 = v66 ^ 0x374DD8B01D8DF42BLL;
  uint64_t v82 = (v80 - ((2 * v80) & 0x89C662ABFD208ADCLL) + 0x44E33155FE90456ELL) ^ (v65 >> 1) ^ ((v73 ^ 0x92CFC162FD513166) >> (v58 & 6 ^ 2) >> (v58 & 6 ^ 4)) ^ v66 ^ 0x374DD8B01D8DF42BLL;
  unint64_t v83 = (v77 ^ 0xEAE8D16E6E20D17BLL) & v70 ^ v82;
  unint64_t v84 = v83 ^ v77 ^ (((v71 ^ 0xE55480B000000000) & ~v78)
                   - ((2 * ((v71 ^ 0xE55480B000000000) & ~v78)) & 0x2A2E5D2323BE5D08)
                   + 0x15172E9191DF2E84);
  unint64_t v85 = ((v84 >> 10) & 0x2000000000000 ^ 0x9AB77BDF5FFF546BLL) + 2 * ((v84 >> 10) & 0x2000000000000);
  BOOL v86 = ((v85 + 0x65488420A000AB95) & (v84 ^ 0x28E000000000000)) == 0;
  unint64_t v87 = (v71 ^ 0x1AAB7F4FFFFFFFFFLL) & (v66 ^ 0x73AEE9E5E31DB145) ^ v78;
  unint64_t v88 = ((v87 >> 41) ^ (v87 >> 7) | (v87 << 57)) ^ (v87 << 23) ^ 0xF774B04353CE1CF4;
  uint64_t v89 = v88 - ((2 * v88) & 0x2F30163CC1E2A92CLL) - 0x6867F4E19F0EAB6ALL;
  unint64_t v90 = v85 + 0x675BA7AFF3FFBBF7;
  unint64_t v91 = 0x9CCA9F6EB3FE64CDLL - v85;
  if (!v86) {
    unint64_t v90 = v91;
  }
  unint64_t v92 = (v84 >> 10) & 0xFFFDFFFFFFFFFFFFLL ^ 0xA3E966F75234 ^ ((v84 ^ 0x28FA59BDD48D0B6) - 0x213238F53FF1062 + v90);
  uint64_t v93 = ((v92 >> 38) & 0x2A35FE4) + (v92 >> 39) - 2 * ((v92 >> 38) & 0x2A35FE4) + 0x61376A34D751AFF2;
  *((void *)&v94 + 1) = v84 ^ 0xD0B6;
  *(void *)&long long v94 = v84 ^ 0x28FA59BDD480000;
  uint64_t v95 = (((v93 << 39) ^ (v84 << 54)) & 0xFFFFFF8000000000 | ((v93 ^ (v92 << 25)) >> 25)) ^ (v94 >> 17);
  unint64_t v96 = v79 ^ v82 & (v66 ^ 0x8C51161A1CE24EBALL);
  unint64_t v97 = (((v77 ^ 0x15172E9191DF2E84) & ~v82)
       - ((2 * ((v77 ^ 0x15172E9191DF2E84) & ~v82)) & 0x89C662ABFD208ADCLL)
       + 0x44E33155FE90456ELL) ^ v81 ^ v96;
  unint64_t v98 = (8 * v97) ^ (v97 >> 39) ^ 0xBA3E0AB73A03F932 ^ ((*(unsigned char *)(a19
                                                                                     + (((v97 >> 57) ^ 0x2B) & 0x70 ^ 0xFE)) ^ ((((v97 >> 57) ^ 0x2B) & 0x70 ^ 0xDE) + (((v97 >> 57) ^ 0x2B) & 0x70 ^ 0x4B)) ^ 0xA1)
                                                                         - 122);
  unint64_t v99 = (v98 - ((2 * v98) & 0xC11C5251A3234888) + 0x608E2928D191A444) ^ v97;
  unint64_t v100 = (v99 ^ 0x37C9E87E36C40A92)
       + ((v97 << 25) ^ 0xADCEAB5DAC000000)
       - 2 * ((v99 ^ 0x37C9E87E36C40A92) & ((v97 << 25) ^ 0xADCEAB5DAC000000));
  unint64_t v101 = v100 - 2 * (v100 & 0x3F8E3F398453FA7FLL ^ v99 & 8);
  unint64_t v102 = v87 ^ v96;
  *(void *)&long long v94 = __ROR8__(__ROR8__(v102 ^ 0x787EEEF1A7EE72F1, 16) ^ 0x1712D402E105A6CBLL, 48);
  unint64_t v103 = v102 ^ 0xAC7C0FF4012565E3 ^ ((v102 ^ 0xAC7C0FF4012565E3) >> 19) ^ ((unint64_t)v94 >> 28) ^ ((void)v94 << 36) ^ ((void)v94 << 45) ^ v89 ^ v87;
  *((void *)&v94 + 1) = v103 ^ 0x1D3;
  *(void *)&long long v94 = v103 ^ 0xDA037E6E1712000;
  unint64_t v104 = v101 + 0x3F8E3F398453FA77;
  unint64_t v105 = v95 ^ 0x8557F9309BB51A6BLL;
  unint64_t v106 = v95 ^ 0x8557F9309BB51A6BLL ^ v89 ^ v87;
  unint64_t v107 = v106 ^ 0xDA037E6E17121D3 ^ ((v101 + 0x3F8E3F398453FA77) ^ 0x3F8E3F398453FA77) & ((((unint64_t)(v94 >> 9) ^ 0x284B28057C49B8D1) >> (v73 & 0x37 ^ 3) >> (v73 & 0x37 ^ 0x34)) ^ (((unint64_t)(v94 >> 9) ^ 0x284B28057C49B8D1) << 9) ^ 0x69AFF5076C8E5DAFLL);
  *((void *)&v94 + 1) = v107 ^ 0x118501E2B14;
  *(void *)&long long v94 = v107 ^ 0x26974A0000000000;
  uint64_t v108 = (v94 >> 41) ^ (v107 << 57) ^ 0x2800000000000000;
  unint64_t v109 = v107 ^ 0x8FDD68A3984AB459 ^ (v108 - ((2 * v108) & 0x5294477790A93E9ALL) - 0x56B5DC4437AB60B3);
  uint64_t v110 = v109 + ((v107 >> 7) ^ 0x4D2E9630A03C56) - 2 * (v109 & ((v107 >> 7) ^ 0x4D2E9630A03C56));
  unint64_t v111 = (v83 >> 1) ^ (v83 >> 6) ^ (v83 << 58) ^ 0xDE1FAE11AA0A9F1DLL;
  unint64_t v112 = v83 ^ 0x8BCA24FADB10DCAELL ^ (v111 - ((2 * v111) & 0xC91EA6CAE49E3928) - 0x1B70AC9A8DB0E36CLL);
  unint64_t v113 = v112 & 0xF47FF077890F9720 ^ (v83 << 63) | v112 & 0xB800F8876F068DFLL;
  unint64_t v114 = ((v112 & 0xF47FF077890F9720 ^ (v83 << 63)) & 0x3F8E3F398453FA7FLL | v112 & 0xB800F080450685FLL) ^ v112 & 8;
  uint64_t v115 = (v106 ^ 0xDA037E6E17121D3) & (v95 ^ 0x7AA806CF644AE594);
  uint64_t v116 = v104 ^ (v113 - 2 * v114 + 0x3F8E3F398453FA77);
  unint64_t v117 = v115 ^ v116;
  unint64_t v118 = v117 ^ v105 ^ (((v106 ^ 0xF25FC8191E8EDE2CLL) & (v103 ^ 0xDA037E6E17121D3))
                      - ((2 * ((v106 ^ 0xF25FC8191E8EDE2CLL) & (v103 ^ 0xDA037E6E17121D3))) & 0x34A28864F57397BALL)
                      - 0x65AEBBCD85463423);
  *((void *)&v94 + 1) = v117 ^ v105 ^ (((v106 ^ 0x1E8EDE2C) & (v103 ^ 0xE17121D3))
                                                                   - ((2
                                                                     * ((v106 ^ 0x1E8EDE2C) & (v103 ^ 0xE17121D3))) & 0xF57397BA)
                                                                   + 2058996701) ^ 0xEB;
  *(void *)&long long v94 = v118 ^ 0xE921E85A2A890000;
  uint64_t v119 = v118 ^ 0x9A5144327AB9CBDDLL ^ ((v118 ^ 0x9A5144327AB9CBDDLL) >> 17) ^ (v94 >> 10) ^ ((v118 ^ 0x9A5144327AB9CBDDLL) << 47);
  uint64_t v120 = (v119 ^ 0x16EB95D00604E32ELL) + v110 - 2 * ((v119 ^ 0x16EB95D00604E32ELL) & v110);
  unint64_t v121 = v105 & ~v116;
  unint64_t v122 = v103 ^ 0x2918B4B01A804A2BLL ^ (((v104 ^ 0xC071C0C67BAC0588) & v113)
                                      - ((2 * ((v104 ^ 0xC071C0C67BAC0588) & v113)) & 0x497106ADF7E2D7F0)
                                      + 0x24B88356FBF16BF8);
  unint64_t v123 = ((v122 ^ v121) - ((2 * (v122 ^ v121)) & 0x7F1C7E7308A7F4EELL) + 0x3F8E3F398453FA77) ^ v104;
  *((void *)&v94 + 1) = v123 ^ 0x38FE43D2BCLL;
  *(void *)&long long v94 = v123 ^ 0x3278F80000000000;
  unint64_t v124 = __ROR8__(v123, 61) ^ (v123 << 25) ^ __ROR8__((v94 >> 38) ^ (v123 >> 39 << 26) ^ 0xC258A8B62E885BC3, 26);
  *((void *)&v94 + 1) = v117 ^ 0x548B80C;
  *(void *)&long long v94 = v117 ^ 0x7955EAEC48000000;
  unint64_t v125 = ((v117 & 0x3F) << 31) ^ 0xE04699B10F1F629ALL ^ (v94 >> 27);
  unint64_t v126 = (v117 >> 6) ^ (v117 >> 1) ^ (((v125 << 27) ^ (v117 << 63)) & 0xFFFFFFFFF8000000 | (v125 >> 37));
  unint64_t v127 = v124 ^ v126;
  unint64_t v128 = v124 ^ v126 ^ 0xC51AEF5B5CC303B1;
  unint64_t v129 = v128 ^ v120 & (v119 ^ 0xE9146A2FF9FB1CD1);
  unint64_t v130 = ((v129 >> 1) ^ (v129 >> 6) | (v129 << 63)) ^ (v129 << 58) ^ 0x82A267617DDD3C0DLL;
  uint64_t v131 = (v130 - ((2 * v130) & 0x4237CB182D12DB3ELL) - 0x5EE41A73E9769261) ^ v129;
  unint64_t v132 = (v126 ^ 0x853759C940934A2BLL) + (v128 | v124 ^ 0xBFD2496DE3AFB665) + 1;
  unint64_t v133 = v122 ^ v107;
  uint64_t v134 = (v133 << 36) ^ (v133 << 45) ^ (v133 >> 19) ^ 0x2A792D60982B22B5;
  uint64_t v135 = (v133 >> 28) ^ 0x6E04C1591;
  unint64_t v136 = v133 ^ 0xD10FA0255A39FDFFLL ^ (v134
                                      - 2 * (v134 & 0x3F0B617C4F927BF7 ^ (v133 >> 19) & 2)
                                      - 0x40F49E83B06D840BLL);
  unint64_t v137 = (v136 & 0x26452CB7C950B7B6 ^ v135 & 0x7C950B7B6 | v136 & 0xD9BAD34836AF4849 ^ v135 & 0x836AF4849) ^ v110;
  if ((v132 & 1 & v137) != 0) {
    uint64_t v138 = v137 - (v132 & 1) - ((2 * (v137 - (v132 & 1))) & 0x1F371D4DC109873ALL) + 0xF9B8EA6E084C39DLL;
  }
  else {
    uint64_t v138 = v137 ^ 0xF9B8EA6E084C39DLL ^ v132 & 1;
  }
  unint64_t v139 = v138 ^ ((v132 & 0xFFFFFFFFFFFFFFFELL) - ((2 * v132) & 0x1F371D4DC1098738) + 0xF9B8EA6E084C39DLL);
  uint64_t v140 = v124 ^ 0x402DB6921C50499ALL;
  unint64_t v141 = (v127 ^ 0x3AE510A4A33CFC4ELL) & (v119 ^ 0x16EB95D00604E32ELL) ^ v124 ^ 0x402DB6921C50499ALL ^ v139;
  unint64_t v142 = ((8 * v141) ^ 0x12BB25DAC3BED128) & (v141 ^ 0x425764BB5877DA20) ^ __ROR8__(v141, 39) ^ (v141 ^ 0xB7487E6D747164ELL ^ (((v141 >> 61) ^ 2) + 0x4923E35D8F30CC6CLL + ((v141 >> 60) & 6 ^ 0xFFFFFFFFFFFFFFFBLL)) | (8 * v141) ^ 0x12BB25DAC3BED128);
  unint64_t v143 = (v142 ^ 0xCA1E7B7831C8D4ELL ^ ((v131 ^ 0x72C1FBBF7636E9A5)
                                      + 0x7A110803C9982387
                                      - 2 * ((v131 ^ 0x72C1FBBF7636E9A5) & 0x7A110803C9982397 ^ v131 & 0x10))) & 0xA9AD36174A77719DLL | (v142 ^ 0xCA1E7B7831C8D4ELL ^ ((v131 ^ 0x72C1FBBF7636E9A5) + 0x7A110803C9982387 - ((2 * (v131 ^ 0x72C1FBBF7636E9A5)) & 0x742210079330470ELL))) & 0x5652C9E8B5888E62;
  unint64_t v144 = v143 - ((2 * v143) & 0x9FD146D5B9B85FFELL);
  unint64_t v145 = v140 & ~v137 ^ v120;
  unint64_t v146 = ((v145 + (v145 ^ 0x8F38572C0C9BC202) + 1) ^ 0xFFFFFFFFFFFFFFFELL) + v145;
  unint64_t v147 = v146 - ((2 * v146) & 0x6AE77A72E9F16EA8);
  unint64_t v148 = v147 - 0x4A8C42C68B0748ACLL;
  unint64_t v149 = ((0x4A8C42C68B0748ABLL - v147) & 0x10000000000000 ^ 0xC3FEF93BB7FF17ADLL)
       + 2 * ((0x4A8C42C68B0748ABLL - v147) & 0x10000000000000);
  unint64_t v150 = v149 + 0x106C44800E853;
  unint64_t v151 = v149 + 0x7FDF9FFC687FFADCLL;
  unint64_t v152 = 0x7DD9273D87E2A36 - v149;
  uint64_t v153 = (v148 >> 7) ^ 0x16AE77A72E9F16ELL;
  if ((v150 & v153) == 0) {
    unint64_t v152 = v151;
  }
  unint64_t v154 = v148 & 0xFFEFFFFFFFFFFFFFLL ^ (v148 >> 41) ^ (v148 << 23) ^ (v148 << 57) ^ 0x81D9C162DEA20E8ALL ^ (v153 - 0x43DE9938207F1289 + v152);
  unint64_t v155 = v129 ^ v119 ^ ((v137 & ~v120) - ((2 * (v137 & ~v120)) & 0x54F334EA6D600930) - 0x5586658AC94FFB68);
  unint64_t v156 = (v155 & 0x1000000000 | (v155 << 47)) ^ v155 & 0xFFFFFFEFFFFFFFFFLL ^ ((v155 >> 10) ^ (v155 >> 17) | (v155 << 54));
  *((void *)&v157 + 1) = v156 ^ 0xFCD3F5402;
  *(void *)&long long v157 = v156 ^ 0x73B0B00000000000;
  unint64_t v158 = v144 - 0x30175C952323D001;
  unint64_t v159 = v156 ^ 0x8282E1358E1C1B6FLL;
  unint64_t v160 = (v154 - ((2 * v154) & 0xE264A27486469EDALL) - 0xECDAEC5BCDCB093) ^ v156 ^ 0x8282E1358E1C1B6FLL;
  uint64_t v161 = v160 & (__ROR8__((v157 >> 38) ^ 0xE2AAF8192B2B27F8, 26) ^ 0x353601C75541F9B5) ^ v158;
  uint64_t v162 = ((v161 ^ 0x5DD3A79EF7DC2F44) + 0x6DC4FB0BD4FFFF45) ^ ((v161 ^ 0x30175C952323D000) + 1);
  unint64_t v163 = v162 - ((2 * v162) & 0xBD35F0063B8FFE5ELL);
  uint64_t v164 = v161 ^ 0x11725B69C11BD0D0;
  uint64_t v165 = (v163 - 0x216507FCE23800D1) ^ v161 ^ 0x11725B69C11BD0D0;
  unint64_t v166 = v165 - ((2 * v165 + 0x5B89F617A9FFFE88) & 0x7F9534EDCFD1A1B8) - 0x52706A7D43172FE0;
  *((void *)&v157 + 1) = (v165 - ((2 * v165 - 1442840952) & 0xCFD1A1B8) - 1125593056) ^ 0x1C;
  *(void *)&long long v157 = v166 ^ 0x3FCA9A76E7E8D0C0;
  uint64_t v167 = ((v165 << 63) | 0x1FE54D3B73F4686ELL) ^ (v166 >> 1) ^ (v157 >> 6);
  uint64_t v168 = (v167 + 0x3FCA9A76E7E8D0C0 - ((2 * v167) & 0x7F9534EDCFD1A1B8) + 28) ^ v166;
  unint64_t v169 = (((2 * v158) ^ 0x602EB92A4647A001) + (v158 ^ 0xCFE8A36ADCDC2FFFLL)) & (v156 ^ 0x73B0B00FCD3F5402);
  unint64_t v170 = (v139 - ((2 * v139) & 0xFD7853033A581094) - 0x143D67E62D3F7B6) ^ v145;
  unint64_t v171 = ((v170 ^ 0xFEBC29819D2C084ALL) << 45) ^ ((v170 ^ 0xFEBC29819D2C084ALL) << 36) ^ v154 ^ __ROR8__((((v170 ^ 0xFEBC29819D2C084ALL) >> 30) & 0x3FFFFFFFFFFFFFFFLL | ((unint64_t)(v170 >> 28) << 62)) ^ __ROR8__(v170 ^ 0xDF7581FD57A4E4F1 ^ (((v170 >> 19) ^ 0xD2951CC8D78) - ((2 * ((v170 >> 19) ^ 0xD2951CC8D78)) & 0x1F3278C03262) - 0x49C0F066C39FE6CFLL), 2) ^ 0x26115EFD9A53B36ELL, 62);
  unint64_t v172 = (v158 ^ 0xCFE8A36ADCDC2FFFLL) & (v142 ^ 0x894F104BB57B5136) ^ v171 ^ 0xE87B635F1624B3E6;
  uint64_t v173 = v172 ^ v142 ^ 0xCA1E7B7831C8D4ELL ^ (v169 + 0x7A110803C9982387 + (~(2 * v169) | 0xBDDEFF86CCFB8F1) + 1);
  *((void *)&v157 + 1) = v173 ^ 0x5BE354A5BB0B2;
  *(void *)&long long v157 = v173 ^ 0x6000000000000000;
  uint64_t v174 = v173 ^ __ROR8__(v173, 39) ^ (v157 >> 61);
  unint64_t v175 = ((v171 ^ 0x3D9656FDEA6A2FLL ^ -(uint64_t)(v171 ^ 0x3D9656FDEA6A2FLL) ^ ((v171 ^ 0xE87B635F1624B3E6)
                                                                              + 0x17B90AF614312637))
        + 0x17B90AF614312636) & (v142 ^ 0x76B0EFB44A84AEC9) ^ v160;
  unint64_t v176 = v175 ^ 0x2DB5B6AF87F64351 ^ ((v175 ^ 0x2DB5B6AF87F64351) >> 7) ^ ((v175 ^ 0x2DB5B6AF87F64351) << 23) ^ (((v175 ^ 0x2DB5B6AF87F64351) >> 41) | ((v175 ^ 0x2DB5B6AF87F64351) << 57));
  unint64_t v177 = (((v171 ^ 0xE87B635F1624B3E6) & ~v160)
        - ((2 * ((v171 ^ 0xE87B635F1624B3E6) & ~v160)) & 0xE264A27486469EDALL)
        - 0xECDAEC5BCDCB093) ^ v159;
  unint64_t v178 = (v177 - ((2 * v177) & 0xBD35F0063B8FFE5ELL) - 0x216507FCE23800D1) ^ v164;
  unint64_t v179 = v178 ^ (v178 << 54) ^ (v178 << 47) ^ (v178 >> 10) ^ (v178 >> 17);
  unint64_t v180 = v175 ^ __ROR8__(__ROR8__(v172, 61) ^ 0x500CB82D79BEE91BLL, 3);
  uint64_t v181 = v180 ^ (v180 << 36) ^ v176 ^ ((((v180 >> 19) ^ (v180 >> 28) | (v180 << 45)) ^ 0x21278C61855392E3)
                                     - 2
                                     * ((((v180 >> 19) ^ (v180 >> 28) | (v180 << 45)) ^ 0x21278C61855392E3) & 0x7B22A21115CA1E37 ^ ((v180 >> 19) ^ (v180 >> 28)) & 0x10)
                                     + 0x7B22A21115CA1E27);
  uint64_t v182 = v181 ^ 0x5C0F8597A18B171BLL;
  uint64_t v183 = v179 ^ 0x6D3C0CAB5B395869 ^ (v176 - ((2 * v176) & 0x602A1071B19BD888) - 0x4FEAF7C7273213BCLL);
  unint64_t v184 = (v181 ^ 0xA3F07A685E74E8E4) & (v174 ^ 0xA9109542E9BBBCELL) ^ v183;
  unint64_t v185 = v168 & (v174 ^ 0xF56EF6ABD1644431) ^ v182;
  *((void *)&v157 + 1) = v185 ^ v184 ^ 0x62F93;
  *(void *)&long long v157 = v185 ^ v184 ^ 0x69309AC4CA80000;
  uint64_t v186 = (v157 >> 19) ^ ((v185 ^ v184) << 36) ^ 0xCAE2F93000000000;
  uint64_t v187 = v185 ^ v184 ^ 0xD180B879714FE4DLL ^ (v186 - ((2 * v186) & 0x17160457B775A3BCLL) + 0xB8B022BDBBAD1DELL);
  uint64_t v188 = (v187 ^ -v187 ^ ((((v185 ^ v184) >> 28) ^ 0x69309AC4) - (v187 ^ ((v185 ^ v184) >> 28) ^ 0x69309AC4)))
       + (((v185 ^ v184) >> 28) ^ 0x69309AC4);
  unint64_t v189 = v188 - 0x54AC5FB5A9642C70 - ((2 * v188) & 0x56A74094AD37A720);
  LOBYTE(v188) = *(unsigned char *)(a30 + ((v188 - 112 - ((2 * v188) & 0x20)) ^ 0xD6));
  *a35 = BYTE1(v189) ^ 0xD3;
  a26[5] = ((v188 ^ 0x94) >> 6) | (4 * (v188 ^ 0x94));
  uint64_t v190 = (v189 >> 12) & 0xF0 | (v189 >> 20) & 0xF;
  *a37 = (*(unsigned char *)(a19 + (v190 ^ 0x47)) ^ 0xA1)
       + (v190 ^ 0xF2)
       + (v190 ^ 0x67)
       - 2 * (((v190 ^ 0xF2) + (v190 ^ 0x67)) & (*(unsigned char *)(a19 + (v190 ^ 0x47)) ^ 0xA1))
       - 122;
  LOBYTE(v159) = *(unsigned char *)(a30 + (BYTE3(v189) ^ 0x10)) ^ 0x94;
  *a38 = (v159 >> 6) | (4 * v159);
  v174 ^= 0x59C5CD4CC8FBA8E4uLL;
  unint64_t v191 = (v168 - ((2 * v168) & 0xA6A98831CCC02654) + 0x5354C418E660132ALL) ^ v174;
  unint64_t v192 = (((v179 ^ 0xDD29049383F4B42DLL) & ~v191 ^ v185)
        - ((2 * ((v179 ^ 0xDD29049383F4B42DLL) & ~v191 ^ v185)) & 0xA6A98831CCC02654)
        + 0x5354C418E660132ALL) ^ v174;
  *(void *)&long long v157 = __ROR8__((v192 >> 13) & 0x7000000000000 ^ __ROR8__(v192 ^ 0x9C7203AFD0FA9AA6 ^ (((8 * v192) ^ (v192 << 25) ^ 0xBF0681A6CFCC6AD0)- ((2* ((8 * v192) ^ (v192 << 25) ^ 0xBF0681A6CFCC6AD0)) & 0xFCE21BF0BF062FF0)- 0x18EF207A07CE804), 16) ^ 0x59AF12027FFB7224, 48);
  uint64_t v193 = (v157 ^ -(uint64_t)v157 ^ (((v192 >> 39) ^ 0xC4061C) - (v157 ^ (v192 >> 39) ^ 0xC4061C)))
       + ((v192 >> 39) ^ 0xC4061C);
  unsigned int v194 = *(unsigned __int8 *)(a15 + ((((v189 >> 31) & 0xB8 ^ 0x90) + (BYTE4(v189) ^ 0x96)) ^ 0x77));
  DWORD1(v157) = (v194 >> 6) ^ 0x7F ^ -((v194 >> 6) ^ 0x7F) ^ (((v194 >> 6) | (8 * v194)) - 127);
  LODWORD(v157) = (DWORD1(v157) + 4 * v194) << 24;
  a26[1] = v193 ^ 0xAC;
  a27[6] = (BYTE6(v189) ^ 0x53) - ((2 * (BYTE6(v189) ^ 0x53)) & 0x3A) + 29;
  a26[4] = BYTE2(v193) ^ 0x24;
  *a23 = (unint64_t)v157 >> 26;
  unint64_t v195 = v191 ^ (v179 ^ 0x22D6FB6C7C0B4BD2) & v176;
  unint64_t v196 = (v195 >> 1) ^ (v195 >> 6) ^ ((v195 << 58) ^ 0xB800000000000000) & 0xE7FFFFFFFFFFFFFFLL ^ (((v195 << 58) ^ 0xB800000000000000) & 0x1800000000000000 ^ v195 & 0x183B3BDBC4516A26 | v195 & 0xE7C4C4243BAE95D9 ^ (v195 << 63));
  a27[12] = (BYTE3(v193) ^ 0x72) + (~(2 * (BYTE3(v193) ^ 0x72)) | 0xC5) + 30;
  *(unsigned char *)(a28 + 29) = HIBYTE(v189) ^ 0xAB;
  a27[13] = (BYTE5(v189) ^ 0xA0) - ((2 * BYTE5(v189)) & 0x3A) + 29;
  a21[6] = (v193 ^ 0x12027FFB722459ACuLL) >> ((v189 >> 20) & 8) >> (~(v189 >> 20) & 8);
  LODWORD(v189) = *(unsigned __int8 *)(a15 + (((BYTE4(v193) ^ 0xFB) - 36) ^ 0x77));
  a21[4] = BYTE6(v193) ^ 2;
  *a26 = HIBYTE(v193) ^ 0x12;
  a21[2] = ((unsigned __int16)((v195 >> 1) ^ (v195 >> 6) ^ v195) >> 8) ^ 5;
  *a39 = BYTE5(v193) ^ 0x7F;
  LODWORD(v164) = (((v195 >> 1) ^ (v195 >> 6) ^ v195) >> 16);
  a26[2] = (v195 >> 1) ^ (v195 >> 6) ^ v195 ^ 0xDB;
  *a21 = ((((v189 >> 6) | (4 * v189)) ^ 0x7F) >> 2) | ((((v189 >> 6) | (4 * v189)) ^ 0x7F) << 6);
  LOBYTE(v164) = *(unsigned char *)(a14
                          + (((v164 ^ 0x76) + (v164 ^ 0xFFFFFFAA) + 1) ^ 0xFFFFFFFE)
                          + (v164 ^ 0x76));
  *a31 = (((v195 >> 1) ^ (v195 >> 6) ^ v195) >> 24) ^ 0x87;
  uint64_t v197 = ((v195 ^ v182 & ~v183) - ((2 * (v195 ^ v182 & ~v183)) & 0x602A1071B19BD888) - 0x4FEAF7C7273213BCLL) ^ v179 ^ 0x6D3C0CAB5B395869;
  unint64_t v198 = v197
       - ((2 * v197) & 0x9E2B77E5823BC0A6)
       + 0x4F15BBF2C11DE053
       - ((2 * (v197 - ((2 * v197) & 0x9E2B77E5823BC0A6) + 0x4F15BBF2C11DE053)) & 0x11DE2617A7965976)
       + 0x8EF130BD3CB2CBBLL;
  unint64_t v199 = v184 ^ (v184 << 23) ^ ((v184 >> 7) ^ (v184 >> 41) | (v184 << 57));
  unint64_t v200 = v198 ^ (v198 << 47) ^ (v198 >> 10) ^ (v198 << 54);
  unint64_t v201 = v200 ^ (v198 >> 17);
  a26[3] = BYTE6(v196) ^ 0x5D;
  LOBYTE(v198) = (v164 ^ 0xF2 ^ (16 * v164) & 0x40) & 7 ^ 0x35 ^ ((unint64_t)((v164 ^ 0xF2 ^ (16 * v164) & 0x40) >> 3) << ((v193 ^ 0xAC) & (v193 ^ 0x50)) << ((v193 ^ 0xAC) & (v193 ^ 0x50) ^ 3));
  a26[11] = v201 ^ 0x95;
  *(unsigned char *)(a28 + 28) = BYTE5(v196) ^ 0x22;
  a26[13] = ((v198 >> 3) | (32 * v198)) ^ 0xA6;
  *a32 = BYTE2(v201) ^ 0xBA;
  uint64_t v202 = (v201 >> 20) & 0xF0 | (v201 >> 28);
  a27[8] = (HIBYTE(v196) ^ 0xA1) + (~(2 * (HIBYTE(v196) ^ 0xA1)) | 0xC5) + 30;
  a27[17] = (BYTE4(v196) ^ 0x3C) - ((2 * (BYTE4(v196) ^ 0x3C)) & 0x3A) + 29;
  a27[11] = (BYTE1(v201) ^ 0x37) - ((2 * (BYTE1(v201) ^ 0x37)) & 0x3A) + 29;
  char v203 = *(unsigned char *)(a19 + (v202 ^ 0x77));
  *(unsigned char *)a28 = BYTE6(v200) ^ 0x70;
  char v204 = v203 ^ ((v202 ^ 0x57) + (v202 ^ 0xC2)) ^ 0xA1;
  *a33 = BYTE5(v201) ^ 0xAC;
  *(unsigned char *)(a28 + 15) = BYTE3(v199) ^ 0x79;
  a27[19] = v199 ^ 0x8F;
  a21[5] = BYTE1(v199) ^ 0x3D;
  a26[8] = BYTE2(v199) ^ 3;
  a27[18] = v204 + (~(2 * v204 + 12) | 0xC5) - 92;
  a26[6] = BYTE4(v201) ^ 0xB8;
  a21[7] = HIBYTE(v200) ^ 0xB0;
  unsigned __int8 v205 = *(unsigned char *)(a30 + (BYTE4(v199) ^ 0x19)) ^ 0x94;
  *(unsigned char *)(a28 + 14) = BYTE5(v199) ^ 0x49;
  a21[3] = HIBYTE(v199) ^ 0xBE;
  a21[1] = BYTE6(v199) ^ 0x75;
  *(unsigned char *)(a28 + 16) = (v205 >> 6) | (4 * v205);
  *(_DWORD *)(a28 + 4) = a17 + 1148994;
  JUMPOUT(0x1000318B0);
}

uint64_t sub_100031914@<X0>(_DWORD *a1@<X8>)
{
  *a1 = v1;
  return sub_100040CEC();
}

void sub_10003191C(int a1@<W5>, uint64_t a2@<X8>)
{
  *(_DWORD *)(v4 - 152) = v3;
  *(void *)(v4 - 128) = a2 - 7;
  *(void *)(v4 - 120) = v2 - 7;
  *(_DWORD *)(v4 - 160) = v3 & 0xFFFFFFF8;
  *(_DWORD *)(v4 - 136) = a1 - (v3 & 0xFFFFFFF8) + 8;
  JUMPOUT(0x100031994);
}

void sub_100031A68()
{
}

uint64_t sub_100031AE0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  *(unsigned char *)(*v13 + (v11 + a8)) = *(unsigned char *)(*v13 + (v10 + a2));
  return (*(uint64_t (**)(void))(v12 + 8 * ((25 * (v9 == 1238159025)) | v8)))();
}

void sub_100031B3C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 36) ^ (235795823
                             * ((-2 - ((a1 ^ 0x29040430 | 0x96E8ABCB) + (a1 ^ 0x10C0A082 | 0x69175434))) ^ 0x52961214));
  __asm { BRAA            X9, X17 }
}

uint64_t sub_100031C8C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((223 * (v3 < ((a3 + 622) | 0x204u) - 1942)) ^ a3)))();
}

uint64_t sub_100031CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  uint64_t v14 = (a6 + v8);
  *(unsigned char *)(v13 + v14) ^= *(unsigned char *)(v10 + (v14 & 0xF)) ^ *(unsigned char *)(v11 + (v14 & 0xF)) ^ *(unsigned char *)(v9 + (v14 & 0xF)) ^ (5 * (v14 & 0xF)) ^ 0x5B;
  return (*(uint64_t (**)(void))(v12 + 8 * ((1943 * (a6 - 1 == v7)) ^ (a7 - 444))))();
}

void sub_100031D28()
{
}

uint64_t sub_100031D54()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((968
                                * (((*(void *)(v1 + 16) == 0x2E910FB81C0D97DFLL) ^ (v0 + 68)) & 1)) ^ v0)))();
}

uint64_t sub_100031D9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  BOOL v51 = ((((v48 - 324) | 0x14) ^ 0xBA) & HIDWORD(a24)) != 0 || HIDWORD(a24) == 120967904;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8 * ((1006 * v51) ^ v48)))(a1, a2, a3, a4, a5, a6, 186, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_100031DEC@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X4>, int a5@<W5>, int a6@<W7>, uint64_t a7@<X8>)
{
  int v15 = (v10 - 30) | a2;
  uint64_t v16 = (v11 + a1);
  *(unsigned char *)(v12 + v16 + 36) = *(unsigned char *)(a4 + v16) ^ ((v16 & 0xF) * v13) ^ *(unsigned char *)(a7 + (v16 & 0xF)) ^ *(unsigned char *)((v16 & 0xF) + v8 + 1) ^ *(unsigned char *)(v7 + (v16 & 0xF)) ^ (v15 + 78);
  return (*(uint64_t (**)(void))(v14 + 8 * (((v11 - 1 == ((v15 + a5) & a6 ^ v9)) * a3) ^ (v15 + 1159))))();
}

void sub_100031EF4()
{
}

uint64_t sub_100031F4C@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  LODWORD(STACK[0x534]) = v2 + 54;
  unint64_t v4 = STACK[0x480];
  BOOL v5 = LODWORD(STACK[0x418]) != 0;
  STACK[0x420] = LODWORD(STACK[0x418]);
  return (*(uint64_t (**)(uint64_t, unint64_t))(v3
                                                              + 8
                                                              * (int)((v5
                                                                     * (((((a2 - 435) | 0x524) - 1383) | 7)
                                                                      + ((((a2 - 435) | 0x524) - 1719) ^ 0xFFFFFD36))) ^ ((a2 - 435) | 0x524))))(a1, v4);
}

uint64_t sub_100031FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * (v15
                               + 2
                               * (a13
                                + v17
                                - 220
                                + (unint64_t)(v14 + v13 + ((v15 - 501101058) & 0x1DDE2B9Fu) - 462) >= (unint64_t)((v15 - 501101058) ^ 0x2224909Fu) - 3221570912u))))();
}

void sub_100032008(uint64_t a1@<X8>, uint64_t a2, char a3, unsigned int a4, uint64_t a5)
{
  int v7 = (v6 - 1647134676) & 0x622D41FD;
  a5 = a1;
  a4 = v7 + 535753261 * (((&a3 | 0xBBC73E87) + (~&a3 | 0x4438C178)) ^ 0xB13330A9) + 65;
  (*(void (**)(char *))(v5 + 8 * (v7 ^ 0x892u)))(&a3);
  JUMPOUT(0x10000FBCCLL);
}

void sub_100032080()
{
}

uint64_t sub_100032088@<X0>(int a1@<W1>, uint64_t a2@<X2>, int a3@<W8>)
{
  int v12 = v3 + 1;
  *(unsigned char *)(v7 + (v12 + a3)) = v8
                                            + *(unsigned char *)(a2 + v10 + v5)
                                            - (v6 & (2 * *(unsigned char *)(a2 + v10 + v5)))
                                            + 48;
  return (*(uint64_t (**)(void))(v11 + 8 * ((((a1 + v12 + 1) < 0x40) * v9) ^ v4)))();
}

uint64_t sub_1000320D0()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (((v2 + v3 - 2246) * (v1 >= 0xA7DFD5AE)) ^ (v2 + v3 - 1211))))();
}

uint64_t sub_100032114()
{
  uint64_t v3 = v0;
  unint64_t v4 = v0 - 1488611264;
  if (v4 <= 0x38) {
    unint64_t v4 = 56;
  }
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((58
                                * (v4
                                 - v3
                                 + (((v2 ^ 0x422) - 795) ^ 0x1FDu)
                                 + (unint64_t)(((v2 ^ 0x422) - 795) | 0x400u)
                                 + 1488609728 > 7)) ^ v2 ^ 0x422)))();
}

uint64_t sub_100032184()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((777
                                * ((((*(unsigned __int8 *)(v3 + 6) - 1) << (v2 - 18)) & v1)
                                 + ((*(unsigned __int8 *)(v3 + 6) - 1) ^ v0) == v0)) ^ v2)))();
}

void sub_1000321C4()
{
}

uint64_t sub_100032228()
{
  return sub_10001F298();
}

uint64_t sub_100032274(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((90 * ((v8 ^ (a7 - 1425)) + v7 - 297101743 > 0x37)) ^ (a4 + v8 - 235))))();
}

void sub_1000322B4(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,_DWORD *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t v33 = 4 * (v32 - 1799099613);
  unsigned int v34 = -57620215 * ((*(_DWORD *)(*a27 + (*a28 & 0x5A11C418)) ^ (a31 + v33)) & 0x7FFFFFFF);
  int v35 = (v34 >> (a1 + 22)) ^ v34;
  unsigned int v36 = -57620215 * v35;
  *(_DWORD *)(a32 + v33) ^= *(_DWORD *)(a31 + v33) ^ *((_DWORD *)*(&off_100233720 + (a1 ^ 0xA1)) + HIBYTE(v36) - 2) ^ *((_DWORD *)*(&off_100233720 + (a1 ^ 0x6F)) + HIBYTE(v36) + 1) ^ *((_DWORD *)*(&off_100233720 + (a1 ^ 0x70)) + HIBYTE(v36)) ^ (-922157056 * v35) ^ v36 ^ (-1109235783 * HIBYTE(v36));
  JUMPOUT(0x10003239CLL);
}

void sub_100032400()
{
}

uint64_t sub_100032588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((1279 * ((v8 ^ v10) < 61 * ((a8 - 594) ^ 0x1AAu) - 524)) ^ (a8 - 594))))();
}

uint64_t sub_1000325D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                                           + 8
                                           * ((95
                                             * (((LODWORD(STACK[0x554]) - 544568610) ^ 0x557EEFEFDBFFE7F7)
                                              - 0x557EEFEEE6AAB6DFLL
                                              + ((2 * (LODWORD(STACK[0x554]) - 544568610)) & 0x1B7FFCFEELL) == 4116001048)) ^ v5)))((v5 ^ 0x59Fu) * a5);
}

uint64_t sub_10003266C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((1023 * (((((2 * a4) ^ 0xF30) + (a4 ^ 0xFFFFFEB6)) & v4) != 0)) ^ a4)))();
}

uint64_t sub_1000326B0@<X0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W2>, unsigned int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, int a8@<W7>, int a9@<W8>)
{
  BOOL v14 = a4 < a1;
  unsigned int v15 = (a8 ^ (2 * v9) ^ (a2 + 51)) + v10;
  *(unsigned char *)(a6 + (a9 + v11)) = *(unsigned char *)(v13 + (v10 + a3))
                                            - (a7 & (2 * *(unsigned char *)(v13 + (v10 + a3))))
                                            + 91;
  int v16 = v14 ^ (v15 < a1);
  BOOL v17 = v15 < a4;
  if (!v16) {
    BOOL v14 = v17;
  }
  return (*(uint64_t (**)(void))(v12 + 8 * ((!v14 * a5) ^ v9)))();
}

uint64_t sub_100032720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((105 * (a8 + 1 != v9 + 40)) ^ a5)))();
}

uint64_t sub_1000327F0@<X0>(unsigned int a1@<W3>, uint64_t a2@<X5>, uint64_t a3@<X7>, int a4@<W8>)
{
  *(unsigned char *)(a2 + (a4 - 83539793)) = *(unsigned char *)(v7 + a3 + v5);
  return (*(uint64_t (**)(void))(v6
                              + 8 * ((25 * (a4 - 83539792 < (((v4 - 296) | 0x121) ^ a1) + 56)) ^ ((v4 - 296) | 0x121))))();
}

uint64_t sub_10003284C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((498 * (((v0 > 0x9BB5B6D7) ^ ((LOBYTE(STACK[0x3F4]) ^ 0x67) + 1)) & 1)) ^ (LODWORD(STACK[0x3F4]) - 792))))();
}

void sub_100032898(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_10003290C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t *a12, uint64_t a13, unsigned int a14, unsigned int a15, unsigned int a16, int a17)
{
  unsigned int v21 = ((((&a12 | 0x87461C9C) ^ 0xFFFFFFFE) - (~&a12 | 0x78B9E363)) ^ 0x342F611E) * v19;
  a12 = &STACK[0x17594DE9181849F3];
  a13 = a10;
  a15 = v21 + v20 + 2138963164;
  a16 = 1590290646 - v21;
  a14 = v21 - 2091828568;
  uint64_t v22 = (*(uint64_t (**)(unint64_t **))(v18 + 8 * (v20 ^ 0x856u)))(&a12);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8 * (((a17 == v17) * ((v20 + 261020365) & 0x276E ^ (v20 + 1299))) ^ v20)))(v22);
}

void sub_100032A00()
{
  LODWORD(STACK[0x350]) = 0;
  STACK[0x378] = 0;
  JUMPOUT(0x100032A20);
}

uint64_t sub_100032B68()
{
  return sub_1000335A4();
}

uint64_t sub_100032B78@<X0>(unsigned int a1@<W0>, int a2@<W3>, uint64_t a3@<X4>, uint64_t a4@<X6>, int a5@<W8>)
{
  *(unsigned char *)(a3 + v5 + (v7 ^ a1) + a2) = *(unsigned char *)(a4 + (v6 + v9));
  return (*(uint64_t (**)(void))(v10 + 8 * ((1336 * (((v6 + 1) & 0xFFFFFFFCLL) == v8)) ^ a5)))();
}

uint64_t sub_100032BC0()
{
  return sub_100032BD8();
}

uint64_t sub_100032BD8(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((41 * (*(_DWORD *)(v6 + (v5 + a3) * (uint64_t)a2) != (((v3 ^ v4) + 130) ^ 0x53F33FE5))) ^ v3)))();
}

uint64_t sub_100032C1C()
{
  unsigned int v3 = ((v1 - 1647455740) & 0x62322FD6 ^ 0x711) - v0;
  if (v3 <= 0x40) {
    unsigned int v3 = 64;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((173 * (v0 + v3 - 65 > 6)) ^ v1)))();
}

uint64_t sub_100032C7C()
{
  unsigned int v8 = v4 + v3 + v2 + 1804;
  v9.i64[0] = 0xB6B6B6B6B6B6B6B6;
  v9.i64[1] = 0xB6B6B6B6B6B6B6B6;
  v10.i64[0] = 0x5B5B5B5B5B5B5B5BLL;
  v10.i64[1] = 0x5B5B5B5B5B5B5B5BLL;
  uint64_t v11 = v6 + v8;
  int8x16_t v12 = vrev64q_s8(*(int8x16_t *)(v11 - 15));
  int8x16_t v13 = vextq_s8(v12, v12, 8uLL);
  int8x16_t v14 = vrev64q_s8(*(int8x16_t *)(v11 - 31));
  int8x16_t v15 = vextq_s8(v14, v14, 8uLL);
  uint64_t v16 = v0 + v8;
  int8x16_t v17 = vrev64q_s8(vaddq_s8(vsubq_s8(v13, vandq_s8(vaddq_s8(v13, v13), v9)), v10));
  *(int8x16_t *)(v16 - 15) = vextq_s8(v17, v17, 8uLL);
  int8x16_t v18 = vrev64q_s8(vaddq_s8(vsubq_s8(v15, vandq_s8(vaddq_s8(v15, v15), v9)), v10));
  *(int8x16_t *)(v16 - 31) = vextq_s8(v18, v18, 8uLL);
  return (*(uint64_t (**)(void))(v7 + 8 * ((((v1 & 0xFFFFFFE0) == 32) * (v5 + 377)) ^ (v5 - 222))))();
}

void sub_100032D18(uint64_t a1, uint64_t a2, int a3)
{
  *(_DWORD *)(v4 + 1424) = 1925353399;
  *(_DWORD *)(v4 + 1428) = 1271275121;
  *(void *)(v4 + 1432) = v3;
  *(void *)(v4 + 1440) = v3;
  *(_DWORD *)(v4 + 1448) = a3;
  JUMPOUT(0x100032D4CLL);
}

uint64_t sub_100032D7C@<X0>(unint64_t a1@<X5>, int a2@<W7>, uint64_t a3@<X8>)
{
  int v10 = (*(unsigned __int8 *)(a3 + 91 + (v3 ^ a1)) ^ v4) - *(unsigned __int8 *)(v5 + 111 + (v3 ^ a1));
  return (*(uint64_t (**)(void))(v9 + 8 * (int)((880 * ((v10 ^ a2) + v7 + (v6 & (2 * v10)) != v8)) ^ v3)))();
}

uint64_t sub_100032DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * (a5 ^ (39 * ((unint64_t)(a2 - (a4 + v7)) < 0x20)))))(v5);
}

void sub_100032E28(int a1@<W8>)
{
  **(_DWORD **)(v1 - 0x9F59A8236606B8) = (v2 - 1833947139) ^ 0x2359ED38;
  sub_10004B580(a1 + 1);
}

uint64_t sub_100032E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v42 = (v38 + 1225418281) | 0x819187;
  *(_DWORD *)uint64_t v40 = 390557914;
  (*(void (**)(uint64_t))(v39 + 8 * (v38 ^ 0x8AD)))(a38);
  int8x16_t v43 = (int8x16_t)vld1q_dup_f32((const float *)v40);
  uint64_t v44 = (v42 - 1233908415) | 0x84u;
  v45.i64[0] = 0x8000000080000000;
  v45.i64[1] = 0x8000000080000000;
  v46.i32[0] = *(_DWORD *)(v40 + 4);
  v46.i32[1] = *(_DWORD *)(v40 + 4 * (v44 - 1418));
  v46.i32[2] = *(_DWORD *)(v40 + 12);
  int8x16_t v47 = vextq_s8(v43, v46, 0xCuLL);
  int8x16_t v48 = v46;
  v48.i32[3] = *(_DWORD *)(v40 + 16);
  int32x4_t v49 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v48, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), vandq_s8(v47, v45)), 1uLL), (int8x16_t)vdupq_n_s32(0x4BA3B86Du));
  v50.i32[0] = *(_DWORD *)(v41 - 160 + 4 * (*(_DWORD *)(v40 + 4) & 1));
  v50.i32[1] = *(_DWORD *)(v41 - 160 + 4 * (*(_DWORD *)(v40 + 4 * (v44 - 1418)) & 1));
  v50.i32[2] = *(_DWORD *)(v41 - 160 + 4 * (*(_DWORD *)(v40 + 12) & 1));
  v50.i32[3] = *(_DWORD *)(v41 - 160 + 4 * (v48.i8[12] & 1));
  *(int8x16_t *)uint64_t v40 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v40 + 1588), v50), (int8x16_t)vdupq_n_s32(0x5CFC4C92u)), (int8x16_t)vaddq_s32(vsubq_s32(v49, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v49, v49), (int8x16_t)vdupq_n_s32(0x2E8EE1B4u))), vdupq_n_s32(0x974770DA)));
  return (*(uint64_t (**)(void))(v39 + 8 * ((v42 - 1233907866) ^ 0x4B)))();
}

uint64_t sub_100033004(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, unsigned int a19, uint64_t a20,uint64_t a21,int a22)
{
  return (*(uint64_t (**)(void))(v22
                              + 8
                              * (((a22 == ((a19 + 2031923252) & 0x5FF ^ (a4 + 72))) * ((a19 + 700696886) & 0x6B7 ^ 0x32D)) ^ a19)))();
}

uint64_t sub_100033068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v73 = 235795823 * ((((v72 - 200) | 0x8C5E8355) + (~(v72 - 200) | 0x73A17CAA)) ^ 0x18F3CA0D);
  *(void *)(v72 - 192) = 0x41C0C6A038046E59;
  *(void *)(v72 - 184) = a69;
  *(void *)(v72 - 176) = a70;
  *(_DWORD *)(v72 - 164) = v70 - v73 - 171;
  *(_DWORD *)(v72 - 200) = v73 ^ 0x445B78DA;
  uint64_t v74 = (*(uint64_t (**)(uint64_t))(v71 + 8 * (v70 ^ 0xA6A)))(v72 - 200);
  return (*(uint64_t (**)(uint64_t))(v71
                                            + 8
                                            * (((*(_DWORD *)(v72 - 168) == -2124048112) * (6 * (v70 ^ 0x2A2) + 1190)) ^ v70)))(v74);
}

uint64_t sub_100033148(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((((a4 - 409) ^ 0x298 ^ (a4 - 711536870) & 0x2A692DDC) * (v4 != a3)) | a4)))();
}

uint64_t sub_10003318C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  HIDWORD(v33) = HIDWORD(a12) + 1328597566;
  LODWORD(v33) = 1751810261;
  v31.i64[0] = 0x5B5B5B5B5B5B5B5BLL;
  v31.i64[1] = 0x5B5B5B5B5B5B5B5BLL;
  HIDWORD(a20) = 66;
  return sub_10003F904(v30 - 16, 453, v31, a3, a4, a5, a6, a7, 21, a9, a10, a11, a12, a13, a14, a15, v33, a17, a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

void sub_100033208()
{
  *(_DWORD *)(v0 - 0x6C0C7F2AED40EE79) = 2124071625;
  sub_100029F98();
}

uint64_t sub_100033228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,unint64_t *a24,unint64_t *a25,unsigned int a26)
{
  a24 = &STACK[0x5412677448247A84];
  a25 = &STACK[0x765012DCA7D407BE];
  a23 = a19;
  a26 = (v26 + 541) ^ (1225351577
                     * ((1978797034 - (&a22 | 0x75F20BEA) + (&a22 | 0x8A0DF415)) ^ 0xA9972C03));
  uint64_t v28 = (*(uint64_t (**)(char *))(v27 + 8 * (v26 ^ 0xDFE)))(&a22);
  return (*(uint64_t (**)(uint64_t))(v27
                                            + 8
                                            * (((((v26 + 227572925) & 0x126F7ECF) + 699) * (a11 < 0x1F8FCFD3)) ^ v26)))(v28);
}

uint64_t sub_100033338(unsigned int a1, int a2, int a3, int a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((a5 + 615 < ((a4 + v5) & a1) + a2) * a3) ^ a4)))();
}

uint64_t sub_10003336C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = v1 + 127 - a1;
  int8x16_t v5 = vrev64q_s8(*(int8x16_t *)(v4 - 15));
  int8x16_t v6 = vextq_s8(v5, v5, 8uLL);
  int8x16_t v7 = vrev64q_s8(*(int8x16_t *)(v4 - 31));
  int8x16_t v8 = vextq_s8(v7, v7, 8uLL);
  unint64_t v9 = STACK[0x288] + 127 - a1;
  v10.i64[0] = 0xB6B6B6B6B6B6B6B6;
  v10.i64[1] = 0xB6B6B6B6B6B6B6B6;
  v11.i64[0] = 0x5B5B5B5B5B5B5B5BLL;
  v11.i64[1] = 0x5B5B5B5B5B5B5B5BLL;
  int8x16_t v12 = vrev64q_s8(vaddq_s8(vsubq_s8(v6, vandq_s8(vaddq_s8(v6, v6), v10)), v11));
  *(int8x16_t *)(v9 - 15) = vextq_s8(v12, v12, 8uLL);
  int8x16_t v13 = vrev64q_s8(vaddq_s8(vsubq_s8(v8, vandq_s8(vaddq_s8(v8, v8), v10)), v11));
  *(int8x16_t *)(v9 - 31) = vextq_s8(v13, v13, 8uLL);
  return (*(uint64_t (**)(void))(v3 + 8 * ((212 * (((v2 + 81) ^ 0x697) + a1 != 128)) ^ v2)))();
}

uint64_t sub_100033408@<X0>(int a1@<W0>, uint64_t a2@<X1>, unint64_t a3@<X2>, int a4@<W3>, int a5@<W5>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v34 = 4 * (a6 + 1 + a4);
  unint64_t v35 = (*(_DWORD *)(a22 + v34) ^ v22) + ((v23 >> ((v26 + 79) ^ v28)) ^ a2);
  unint64_t v36 = HIDWORD(v25)
      + v32 * (unint64_t)(*(_DWORD *)(*v30 + v34) ^ v22)
      + ((v35 + a1 - (v29 & (2 * v35))) ^ a3);
  *(_DWORD *)(a22 + 4 * (a6 + a4)) = v36 + v22 - (v24 & (2 * v36));
  int v37 = a5 + a6 + 710;
  BOOL v39 = v37 > v33 || v37 < v31;
  return (*(uint64_t (**)(void))(v27 + 8 * (v39 | (8 * v39) | v26)))();
}

uint64_t sub_10003349C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,uint64_t a30,int a31,unsigned int a32,unsigned int a33)
{
  if (a33 < a32 != a29 + 173050368 < (v34 ^ 0x5B5u) + 493590411) {
    BOOL v35 = a29 + 173050368 < (v34 ^ 0x5B5u) + 493590411;
  }
  else {
    BOOL v35 = a29 + 173050368 > a33;
  }
  return (*(uint64_t (**)(void))(v33 + 8 * ((101 * v35) ^ (v34 + 1152))))();
}

uint64_t sub_1000334A8(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((((((17 * (((v8 + 1703) | 0x28) ^ 0x807)) ^ a6) & *(_DWORD *)(v10
                                                                                             + (v9 + a3) * (uint64_t)a2
                                                                                             + 40)) == 0)
                                * a8) ^ v8)))();
}

uint64_t sub_1000334F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  BOOL v18 = a13 + v17 - 220 + (unint64_t)(v14 + v13 - 1) < (((v15 - 2055) | 0x6C4u) ^ 0x6D4uLL);
  return (*(uint64_t (**)(void))(v16 + 8 * (((4 * v18) | (32 * v18)) ^ v15)))();
}

uint64_t sub_10003353C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 613) | 0x10) + 322) * (v0 == v1)) ^ v2)))();
}

void sub_100033574()
{
}

uint64_t sub_1000335A4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,int *a22)
{
  if (a1) {
    int v30 = 1913760756;
  }
  else {
    int v30 = *a22 + 1;
  }
  *a22 = v30;
  int v31 = (((v27 >> (v26 ^ (v24 + 16))) ^ 0x12E8EE) + v22 - ((2 * ((v27 >> (v26 ^ (v24 + 16))) ^ 0x12E8EE)) & 0xEE1B4)) ^ v27;
  unsigned int v32 = (((v31 << 7) & 0x9D2C5680 ^ v31) << 15) & 0xEFC60000 ^ (v31 << 7) & 0x9D2C5680 ^ v31;
  *(_DWORD *)(*a19 + v25) ^= v32 ^ (v32 >> 18);
  return (*(uint64_t (**)(void))(v28 + 8 * ((v23 + v29 - 626) ^ (30 * (v25 > 0x1FB)))))();
}

uint64_t sub_100033650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return sub_100033678((a5 + 425225700) & 0xE6A78CF7, a2, 0, (a5 - 228), 477);
}

uint64_t sub_100033678(int a1, uint64_t a2, int a3, int a4, int a5)
{
  uint64_t v10 = (v7 + v6 - a3);
  long long v11 = *(_OWORD *)(a2 + v10 - 15);
  long long v12 = *(_OWORD *)(a2 + v10 - 31);
  uint64_t v13 = v5 + v10;
  *(_OWORD *)(v13 - 15) = v11;
  *(_OWORD *)(v13 - 31) = v12;
  return (*(uint64_t (**)(void))(v9 + 8 * (((a3 + a1 - 82 == v8) * a5) ^ a4)))();
}

uint64_t sub_1000336C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,char a39)
{
  return sub_100033708(3939219872, 237, a3, 871, a5, &STACK[0x2D8], 182, &a39);
}

uint64_t sub_100033708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29
                                                                                + 8
                                                                                * ((23
                                                                                  * ((~(2 * LODWORD(STACK[0x31C])) & 0x22)
                                                                                   + (STACK[0x31C] & 0x3F ^ 0x1EFABF6Eu)
                                                                                   - 519749517 > 0xFFFFFFBF)) ^ (v30 + 1295))))(a1, a2, a29, a4, 2806356031);
}

uint64_t sub_100033830(uint64_t result)
{
  *(_DWORD *)(result + 4) = 2087569631;
  return result;
}

uint64_t sub_100033840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  BOOL v15 = v12 < v8;
  *(unsigned char *)(*v14 + (a8 + v9 + 1)) = 91;
  unsigned int v16 = v10 + v9 + 1;
  int v17 = v15 ^ (v16 < v8);
  BOOL v18 = v16 < v12;
  if (!v17) {
    BOOL v15 = v18;
  }
  return (*(uint64_t (**)(void))(v13 + 8 * ((16 * v15) | (32 * v15) | v11)))();
}

uint64_t sub_1000338AC()
{
  BOOL v4 = v1 <= ((v2 + v3 - 1187) ^ 0xA7DFDC26);
  return (*(uint64_t (**)(void))(v0 + 8 * (((8 * v4) | (16 * v4)) ^ (v2 + v3 - 1211))))();
}

uint64_t sub_1000338F8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v11 = v5 + a4;
  uint64_t v12 = v8 + v7 + v9 + ((v11 + 599) | 0x430u);
  long long v13 = *(_OWORD *)(v4 + v12 - 15);
  long long v14 = *(_OWORD *)(v4 + v12 - 31);
  uint64_t v15 = a1 + v12;
  *(_OWORD *)(v15 - 15) = v13;
  *(_OWORD *)(v15 - 31) = v14;
  return (*(uint64_t (**)(void))(v10 + 8 * ((1489 * ((v6 & 0xFFFFFFE0) == 32)) ^ (v11 + 1051))))();
}

uint64_t sub_100033958@<X0>(uint64_t a1@<X8>)
{
  return 0;
}

uint64_t sub_100033970(uint64_t a1, int a2, uint64_t a3, int a4)
{
  BOOL v7 = v4 > 0xFB54E47;
  if (v7 == a2 + 757140779 < -263540296) {
    BOOL v7 = a2 + 757140779 < v6;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * (((((a4 - 1162) | 0x16) ^ 0x21F) * v7) ^ a4)))();
}

uint64_t sub_1000339E8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((2024 * (a1 == ((((v1 + 68699183) | 0x2024A408) + 1235773576) ^ ((v1 + 286) | 0x8A)))) ^ v1)))();
}

uint64_t sub_100033A48(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((a1 - 539149340) & 0x2022BFFF ^ 0xBC) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_100033A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * ((46
                                * (((a19 - 544568610) ^ 0xFFEFFD77BBFEB99BLL)
                                 + 0x100288AB59DA74
                                 + (((unint64_t)(a19 - 544568610) << ((v19 ^ 0x11u) + 113)) & 0x177FD7336) == a5)) | v19)))();
}

uint64_t sub_100033B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v7 + 8
                                                                  * ((((v6 ^ 0xFC4) + v6 - 461) * (v5 == a5)) ^ v6)))(a1, a2, v6 ^ 0x387u);
}

uint64_t sub_100033B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,uint64_t a26,int a27,uint64_t a28,uint64_t a29)
{
  unsigned int v31 = 628203409
      * ((((&a22 | 0x6793723E) ^ 0xFFFFFFFE) - (~&a22 | 0x986C8DC1)) ^ 0x1AE481F2);
  int v32 = 323188336 - v31 + *(_DWORD *)(a2 + 4);
  a28 = *(void *)(a2 + 8);
  a29 = a14;
  a23 = a13;
  a22 = a15;
  a26 = a16;
  a24 = v29 - v31 + 927;
  a25 = v32;
  uint64_t v35 = (*(uint64_t (**)(uint64_t *))(v30 + 8 * (v29 ^ 0x9CC)))(&a22);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30
                                                                                         + 8
                                                                                         * ((1906
                                                                                           * (a27 == ((v29 + 42) | 0x202) - 2124048926)) ^ v29)))(v35, a2, a3, 544568613, 1023862908, 201323775);
}

uint64_t sub_100033C84@<X0>(void *a1@<X0>, char a2@<W1>, int a3@<W3>, int a4@<W4>, int a5@<W6>, int a6@<W8>)
{
  *(unsigned char *)(*a1 + (a5 + a6)) = ((a4 ^ v8) >> a2)
                                            + ~(((a3 - 107) & 0xB7 ^ 0x15) & (2 * ((a4 ^ v8) >> a2)))
                                            + 92;
  return (*(uint64_t (**)(void))(v6 + 8 * (a3 ^ ((4 * (a5 - 1 == v7 + 1891)) | (32 * (a5 - 1 == v7 + 1891))))))();
}

uint64_t sub_100033CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  int v38 = (_DWORD *)(a27 + 24 * v31);
  *int v38 = v36;
  v38[1] = v32;
  *(void *)(v34 + 24 * v31 + 16) = v33;
  v38[4] = HIDWORD(a29);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 8 * ((273 * ((*(_DWORD *)(a3 + 48 * v37 + 32) + 1049201532) < 0x80000003)) ^ v30)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_100033D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unsigned int a22)
{
  BOOL v27 = a22 > v22;
  int v28 = v25 + ((a8 - 1224) ^ 0xA7A46A94);
  int v29 = v27 ^ (v28 < -1858469996);
  BOOL v30 = v28 < v26;
  if (!v29) {
    BOOL v27 = v30;
  }
  return (*(uint64_t (**)(void))(v24 + 8 * ((!v27 * v23) ^ a8)))();
}

uint64_t sub_100033DF8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  unint64_t v7 = a2 - 1;
  STACK[0x420] = v7;
  *(unsigned char *)(a1 + v7) = ((v3 + 1) ^ v4) * (v3 + 18);
  return (*(uint64_t (**)(void))(v6 + 8 * (v2 | (2 * (STACK[0x420] != ((v2 + 597) ^ v5))))))();
}

void sub_100033E00(int a1@<W8>)
{
  if ((a1 - 690734851) <= 0x18 && ((1 << (a1 - 3)) & 0x1000143) != 0) {
    JUMPOUT(0x100033E34);
  }
  JUMPOUT(0x10000FDECLL);
}

void sub_100033E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v12 = *(void *)(v10 + 8 * (v9 - 72)) - 8;
  int v13 = v9;
  uint64_t v14 = *(void *)(v10 + 8 * (v9 - 28)) - 8;
  int v15 = *(unsigned __int8 *)(v14 + (*v8 ^ (v9 - 4)));
  uint64_t v16 = *(void *)(v10 + 8 * (v9 - 116)) - 8;
  int v17 = *(unsigned __int8 *)(v16 + (*(unsigned __int8 *)(v7 - 0x76D4F6DCACF2CD91) ^ 0x49));
  HIDWORD(v18) = v17 ^ 1;
  LODWORD(v18) = (v17 ^ 0xFFFFFFEF) << 24;
  LOBYTE(v17) = v18 >> 26;
  int v19 = ((*(unsigned __int8 *)(v12 + (*(unsigned __int8 *)(v7 - 0x76D4F6DCACF2CD9CLL) ^ 0xD7)) ^ 0xCE) << 8) | ((v15 ^ 0xD6) << 24);
  uint64_t v20 = *(void *)(v10 + 8 * (v13 ^ 0xE8)) - 4;
  int v21 = *(unsigned __int8 *)(v14 + (*(unsigned __int8 *)(v7 - 0x76D4F6DCACF2CD92) ^ 0xB8));
  int v22 = *(unsigned __int8 *)(v16 + (*(unsigned __int8 *)(v7 - 0x76D4F6DCACF2CD95) ^ 0x6BLL));
  HIDWORD(v18) = v22 ^ 1;
  LODWORD(v18) = (v22 ^ 0xFFFFFFEF) << 24;
  unsigned __int8 v23 = *(unsigned char *)(v12 + (*(unsigned __int8 *)(v7 - 0x76D4F6DCACF2CD90) ^ 0x2ELL));
  int v24 = *(unsigned __int8 *)(v16 + (*(unsigned __int8 *)(v7 - 0x76D4F6DCACF2CD9DLL) ^ 0x47));
  int v25 = ((v18 >> 26) ^ 0x53) << 16;
  HIDWORD(v18) = v24 ^ 1;
  LODWORD(v18) = (v24 ^ 0xFFFFFFEF) << 24;
  unsigned int v26 = v19 & 0xFF00FF00 | (*(unsigned char *)(v20 + (*(unsigned __int8 *)(v7 - 0x76D4F6DCACF2CD9BLL) ^ 0xECLL))
                                           + 91) ^ 9 | (((v18 >> 26) ^ 0x1E) << 16);
  int v27 = v25 | ((*(unsigned __int8 *)(v12 + (*(unsigned __int8 *)(v7 - 0x76D4F6DCACF2CD94) ^ 0x77)) ^ 1) << 8);
  LODWORD(v16) = *(unsigned __int8 *)(v16 + (*(unsigned __int8 *)(v7 - 0x76D4F6DCACF2CD99) ^ 0xCBLL));
  HIDWORD(v18) = v16 ^ 1;
  LODWORD(v18) = (v16 ^ 0xFFFFFFEF) << 24;
  int v28 = ((v17 ^ 0xFB) << 16) | ((v21 ^ 0x6E) << 24) | ((v23 ^ 0xB) << 8);
  LOBYTE(v25) = *(unsigned char *)(v20 + (*(unsigned __int8 *)(v7 - 0x76D4F6DCACF2CD93) ^ 0xB5));
  LODWORD(v12) = ((*(unsigned char *)(v20 + (*(unsigned __int8 *)(v7 - 0x76D4F6DCACF2CD97) ^ 0xA9)) + 91) | ((*(unsigned __int8 *)(v12 + (*(unsigned __int8 *)(v7 - 0x76D4F6DCACF2CD98) ^ 0x30)) ^ 0xFB) << 8)) & 0xFF00FFFF | (((v18 >> 26) ^ a7) << 16) | ((*(unsigned __int8 *)(v14 + (*(unsigned __int8 *)(v7 - 0x76D4F6DCACF2CD9ALL) ^ 0x35)) ^ 0x19) << 24);
  int v29 = v27 | (*(unsigned __int8 *)(v14 + (*(unsigned __int8 *)(v7 - 0x76D4F6DCACF2CD96) ^ 0xBFLL)) << 24);
  LOBYTE(v27) = *(unsigned char *)(v20 + (*(unsigned __int8 *)(v7 - 0x76D4F6DCACF2CD8FLL) ^ 0x36)) + 91;
  uint64_t v30 = *(void *)(v10 + 8 * (v13 + 7)) - 8;
  uint64_t v31 = *(void *)(v10 + 8 * (v13 - 78)) - 12;
  unsigned int v32 = *(_DWORD *)(v30 + 4 * (v27 ^ 0xFDu)) ^ 0xDD9D638D ^ *(_DWORD *)(v31
                                                                                         + 4
                                                                                         * (v17 ^ 0x61u));
  uint64_t v33 = v21 ^ 0xFBu;
  *(_DWORD *)(v11 - 144) = v13;
  uint64_t v34 = *(void *)(v10 + 8 * (v13 ^ 0xA4)) - 8;
  unsigned int v35 = (v32 - ((2 * v32) & 0xAF999DC0) - 674443552) ^ *(_DWORD *)(v34 + 4 * v33);
  unsigned int v36 = v35 - ((2 * v35) & 0xE843A10E);
  uint64_t v37 = v23 ^ 0x33u;
  uint64_t v38 = *(void *)(v10 + 8 * (v13 ^ 0xB3)) - 8;
  int v39 = *(_DWORD *)(v38 + 4 * v37);
  LOBYTE(v25) = (v25 + 91) ^ 0xA8;
  unsigned int v40 = v29 & 0xFFFFFF00 | v25;
  LODWORD(v37) = v39 ^ v26 ^ (v36 - 199110521) ^ v12;
  LODWORD(v16) = v39 ^ v26 ^ (v36 - 199110521);
  int v87 = v16;
  *(_DWORD *)(v11 - 176) = v37;
  *(_DWORD *)(v11 - 116) = v37 ^ 0x4D ^ v40;
  int v41 = v37 ^ 0x4D ^ v40 ^ ((v28 & 0xFFFFFF00 | v27 ^ 0x2A)
                          + 681732515
                          + ~(2
                            * ((v28 & 0x28A26900 | (v27 ^ 0x2A) & 0xBF) ^ (v27 ^ 0x2A) & 0x1D)));
  int v90 = BYTE1(v41);
  int v88 = BYTE2(v41);
  unsigned int v42 = *(_DWORD *)(v38 + 4 * (BYTE1(v41) ^ 0x93u)) ^ *(_DWORD *)(v31 + 4 * (BYTE2(v41) ^ 0x1Cu)) ^ 0xD6EAE699;
  int v97 = v41;
  unsigned int v43 = (v42 - ((2 * v42) & 0xFEACAB26) - 11119213) ^ *(_DWORD *)(v30 + 4 * (v41 ^ 0x8Bu));
  *(_DWORD *)(v11 - 204) = (v41 ^ 0x9255440B) >> 24;
  int v44 = v16 ^ *(_DWORD *)(v34 + 4 * (((v41 ^ 0x9255440B) >> 24) ^ 0x65)) ^ (v43 - ((2 * v43) & 0xAF999DC0) - 674443552);
  *(_DWORD *)(v11 - 152) = v44;
  unsigned int v45 = v44 ^ 0x9DB2BB14 ^ (v40 - 2 * (v40 & 0x1DB2BB16 ^ v25 & 2) - 1649231084);
  unsigned int v46 = v45 ^ v41 ^ 0x9255440B;
  *(_DWORD *)(v11 - 128) = v45;
  int v47 = *(_DWORD *)(v38 + 4 * (BYTE1(v46) ^ 0x9Bu)) ^ *(_DWORD *)(v31 + 4 * (BYTE2(v46) ^ 0x2Eu));
  unsigned int v48 = ((v47 ^ 0xD6EAE699) - 2 * ((v47 ^ 0xD6EAE699) & 0x7F565597 ^ v47 & 4) - 11119213) ^ *(_DWORD *)(v30 + 4 * ((v45 ^ v41 ^ 0xB) ^ 0xD2u));
  unsigned int v49 = v46 ^ 0x9EB98133;
  v46 >>= 24;
  *(_DWORD *)(v11 - 216) = v46;
  unsigned int v50 = (v48 - ((2 * v48) & 0xAF999DC0) - 674443552) ^ *(_DWORD *)(v34 + 4 * (v46 ^ 0x69));
  int v51 = v50 ^ v37 ^ 0x4D ^ 0x43575243;
  int v92 = v50 ^ v37 ^ 0x4D;
  int v93 = v51 ^ v45;
  unsigned int v52 = ((v93 ^ 0xD9D15FA9) - ((2 * (v93 ^ 0xD9D15FA9)) & 0xD43C40F4) - 367124358) ^ v49;
  LODWORD(v12) = *(_DWORD *)(v38
                           + 4
                           * (((unsigned __int16)(((v93 ^ 0x5FA9)
                                                                  - ((2 * (v93 ^ 0x5FA9)) & 0x40F4)
                                                                  + 8314) ^ v49 ^ 0x167F) >> 8) ^ 0x3Au)) ^ *(_DWORD *)(v31 + 4 * (((v52 ^ 0x9547167F) >> 16) ^ 0x89u));
  LODWORD(v12) = ((v12 ^ 0xD6EAE699) - 2 * ((v12 ^ 0xD6EAE699) & 0x7F565597 ^ v12 & 4) - 11119213) ^ *(_DWORD *)(v30 + 4 * ((((v93 ^ 0xA9) - ((2 * (v93 ^ 0xA9)) & 0xF4) + 122) ^ v49) ^ 0xE4u));
  LODWORD(v12) = (v12 - ((2 * v12) & 0xAF999DC0) - 674443552) ^ *(_DWORD *)(v34
                                                                          + 4 * (((v52 ^ 0x9547167F) >> 24) ^ 0x1D));
  int v98 = (v12 - ((2 * v12) & 0xAE0C3E6C) + 1460018998) ^ v50 ^ v44;
  *(_DWORD *)(v11 - 248) = v98 ^ 0x57061F36;
  int v99 = v98 ^ 0x57061F36 ^ v92;
  unsigned int v53 = ((v99 ^ 0xFE25CD6D) - ((2 * (v99 ^ 0xFE25CD6D)) & 0xD43C40F4) - 367124358) ^ v49;
  LODWORD(v12) = ((unsigned __int16)(((v99 ^ 0xCD6D) - ((2 * (v99 ^ 0xCD6D)) & 0x40F4) + 8314) ^ v49) >> 8);
  *(_DWORD *)(v11 - 224) = v12;
  LODWORD(v12) = *(_DWORD *)(v38 + 4 * (v12 ^ 0x6F));
  *(_DWORD *)(v11 - 232) = BYTE2(v53);
  LODWORD(v12) = v12 ^ *(_DWORD *)(v31 + 4 * (BYTE2(v53) ^ 0xA8u)) ^ 0xD6EAE699;
  LODWORD(v12) = (v12 - ((2 * v12) & 0xAF999DC0) - 674443552) ^ *(_DWORD *)(v34 + 4 * (HIBYTE(v53) ^ 0x85));
  LODWORD(v12) = (v12 - ((2 * v12) & 0xFEACAB26) - 11119213) ^ *(_DWORD *)(v30
                                                                         + 4
                                                                         * ((((v99 ^ 0x6D)
                                                                                             - ((2 * (v99 ^ 0x6D)) & 0xF4)
                                                                                             + 122) ^ v49) ^ 0x25u));
  int v54 = (v12 - ((2 * v12) & 0xF340FFD4) - 106922006) ^ v51;
  int v55 = v99 ^ v51 ^ v45 ^ v54;
  *(_DWORD *)(v11 - 120) = v55;
  unsigned int v56 = v53 ^ v55 ^ 0xBA965DFF;
  unsigned int v57 = v55 ^ 0xBA965DFF;
  unsigned int v58 = v53;
  *(_DWORD *)(v11 - 256) = v53;
  unsigned int v59 = *(_DWORD *)(v34 + 4 * (((v56 ^ 0x7433B555) >> 24) ^ 0x1D)) ^ *(_DWORD *)(v31
                                                                                 + 4
                                                                                 * (((v56 ^ 0x7433B555) >> 16) ^ 0x89u)) ^ 0xF507F8FE;
  unsigned int v60 = (v59 - ((2 * v59) & 0xE843A10E) - 199110521) ^ *(_DWORD *)(v38
                                                                 + 4
                                                                 * (((unsigned __int16)(v56 ^ 0xB555) >> 8) ^ 0x3Au));
  *(_DWORD *)(v11 - 168) = v98 ^ 0x57061F36 ^ v12;
  int v61 = (v60 - ((2 * v60) & 0xFEACAB26) - 11119213) ^ *(_DWORD *)(v30 + 4 * (v56 ^ 0xCEu)) ^ v98 ^ 0x57061F36 ^ v12;
  int v62 = v61 ^ v54 ^ 0x7C166C11;
  int v63 = v61;
  int v96 = v61;
  unsigned int v64 = (v58 ^ v62) >> 24;
  *(_DWORD *)(v11 - 240) = v64;
  LODWORD(v12) = *(_DWORD *)(v30
                           + 4
                           * ((((v99 ^ 0x6D) - ((2 * (v99 ^ 0x6D)) & 0xF4) + 122) ^ v49 ^ v62) ^ 0x31u)) ^ *(_DWORD *)(v34 + 4 * (v64 ^ 0x9B));
  LODWORD(v12) = ((v12 ^ 0x289A9B73) - 2 * ((v12 ^ 0x289A9B73) & 0x7421D08F ^ v12 & 8) - 199110521) ^ *(_DWORD *)(v38 + 4 * (((unsigned __int16)(((v99 ^ 0xCD6D) - ((2 * (v99 ^ 0xCD6D)) & 0x40F4) + 8314) ^ v49 ^ v62) >> 8) ^ 0xA0u));
  int v65 = v58 ^ v62 ^ 0x5B7661E8;
  LODWORD(v12) = (v12 - ((2 * v12) & 0x45966C3C) + 583743006) ^ *(_DWORD *)(v31
                                                                          + 4
                                                                          * (((v58 ^ v62) >> 16) ^ 0xAu));
  int v66 = (v12 - ((2 * v12) & 0x2B09F196) + 361035979) ^ v63;
  *(_DWORD *)(v11 - 124) = v66;
  unsigned int v67 = v66 ^ 0xE8076261 ^ v62;
  unsigned int v68 = v66 ^ 0xE8076261;
  unsigned __int8 v94 = BYTE2(v62) ^ BYTE2(v57);
  int v69 = v62;
  unsigned int v70 = v62 ^ v57 ^ 0xA31973ED;
  *(_DWORD *)(v11 - 132) = v70;
  int v71 = ((v67 ^ 0x5A137D54) - ((2 * (v67 ^ 0x5A137D54)) & 0x587AC00C) - 1405263866) ^ v70;
  *(_DWORD *)(v11 - 160) = v71;
  LODWORD(v12) = ((v71 ^ 0x38D97DA4) - 2 * ((v71 ^ 0x38D97DA4) & 0x5DF5FB53 ^ v71 & 0x11) - 571081918) ^ v65;
  unsigned int v72 = v12 ^ 0x479AB031;
  LODWORD(v12) = *(_DWORD *)(v30
                           + 4
                           * ((((v71 ^ 0xA4) - 2 * ((v71 ^ 0xA4) & 0x53 ^ v71 & 0x11) + 66) ^ v65) ^ 0xAAu)) ^ *(_DWORD *)(v38 + 4 * (((unsigned __int16)(v12 ^ 0xB031) >> 8) ^ 0x3Au));
  LODWORD(v12) = ((v12 ^ 0xB778514) - 2 * ((v12 ^ 0xB778514) & 0x22CB361F ^ v12 & 1) + 583743006) ^ *(_DWORD *)(v31 + 4 * (BYTE2(v72) ^ 0x89u));
  LODWORD(v12) = (v12 - ((2 * v12) & 0xAF999DC0) - 674443552) ^ *(_DWORD *)(v34 + 4 * (HIBYTE(v72) ^ 0x1D));
  LODWORD(v33) = ((v12 ^ v69 ^ 0xA6C48CD5) - ((2 * (v12 ^ v69 ^ 0xA6C48CD5)) & 0xBBEBF684) - 571081918) ^ v65;
  LODWORD(v16) = *(_DWORD *)(v34 + 4 * (BYTE3(v33) ^ 5)) ^ *(_DWORD *)(v38 + 4 * (BYTE1(v33) ^ 0x6Fu)) ^ 0x23ED1E67;
  LODWORD(v16) = (v16 - 11119212 + (~(2 * v16) | 0x15354D9)) ^ *(_DWORD *)(v30
                                                                         + 4
                                                                         * ((((v12 ^ v69 ^ 0xD5)
                                                                                             - ((2 * (v12 ^ v69 ^ 0xD5)) & 0x84)
                                                                                             + 66) ^ v65) ^ 0x25u));
  *(_DWORD *)(v11 - 184) = v71 ^ 0xBF46A5A4 ^ (v16 - ((2 * v16) & 0x45966C3C) + 583743006) ^ *(_DWORD *)(v31 + 4 * (BYTE2(v33) ^ 0xA8u)) ^ v68 ^ v12;
  LODWORD(v31) = *(_DWORD *)(v11 - 144);
  int v73 = (char *)*(&off_100233720 + (int)(v31 ^ 0xE)) - 4;
  uint64_t v74 = (char *)*(&off_100233720 + (int)v31 - 168) - 8;
  unint64_t v75 = (char *)*(&off_100233720 + (int)(v31 ^ 0x91)) - 4;
  uint64_t v76 = (uint64_t)*(&off_100233720 + (int)(v31 ^ 0xF9));
  int v77 = *(_DWORD *)(v76 + 4 * ((v12 ^ v69) ^ 0x74u));
  int v78 = (181304767 * v77 - ((362609534 * v77 + 1041030012) & 0x3FABD13E) - 19114403) ^ *(_DWORD *)&v74[4 * (((unsigned __int16)(v12 ^ v69) >> 8) ^ 0x5A)];
  unsigned int v95 = v78 - ((2 * v78) & 0xF083FF38);
  LODWORD(v16) = *(_DWORD *)(v11 - 128) ^ 0x31676F78;
  *(_DWORD *)(v11 - 192) = 135038636;
  *(_DWORD *)(v11 - 200) = -1963090558;
  LODWORD(v33) = *(_DWORD *)&v73[4 * (BYTE2(v16) ^ 0x7B)] ^ ((BYTE2(v16) ^ 0x56)
                                                           - 1963090558
                                                           - ((2 * (BYTE2(v16) ^ 0x56) + 160207960) & 0x80C86AC));
  LODWORD(v16) = (v33 - ((2 * v33) & 0xF083FF38) - 129892452) ^ *(_DWORD *)&v75[4 * BYTE3(v16)];
  int v91 = v16 - ((2 * v16) & 0x3FABD13E);
  unsigned int v79 = *(_DWORD *)&v73[4 * (((v87 ^ 0x2BEAE26Bu) >> 16) ^ 0xEC)] ^ ((((v87 ^ 0x2BEAE26Bu) >> 16) ^ 0xC1)
                                                                                    - 1963090557
                                                                                    + ((2
                                                                                      * (((v87 ^ 0x2BEAE26Bu) >> 16) ^ 0xC1)
                                                                                      + 88) & 0x2AC ^ 0xF7F37BFF)) ^ (181304767 * *(_DWORD *)(v76 + 4 * (v87 ^ 0x1Eu)) + 1594256830);
  unsigned int v80 = (v79 - 1613371233 + (~(2 * v79) | 0xC0542EC1) + 1) ^ *(_DWORD *)&v74[4 * (BYTE1(v87) ^ 8)];
  LODWORD(v16) = *(_DWORD *)&v73[4 * (v88 ^ 0x82)] ^ ((v88 ^ 0xAF)
                                                    - 1963090557
                                                    + ((2 * (v88 ^ 0xAF) + 88) & 0x2AC ^ 0xF7F37BFF));
  unsigned int v89 = v80 - ((2 * v80) & 0xF083FF38);
  int v81 = (v16 - ((2 * v16) & 0x3FABD13E) - 1613371233) ^ *(_DWORD *)&v74[4 * (v90 ^ 0xF9)] ^ (181304767
                                                                                           * *(_DWORD *)(v76 + 4 * (v97 ^ 0xF8u))
                                                                                           + 1594256830);
  *(_DWORD *)(v11 - 200) = v96 ^ 0x231B9DB5;
  *(_DWORD *)(v11 - 160) = (BYTE2(v96) ^ 0xDA) - 1963090557 + ((2 * (BYTE2(v96) ^ 0xDA) + 88) & 0x2AC ^ 0xF7F37BFF);
  *(_DWORD *)(v11 - 192) = (v94 ^ 0x77) - 1963090557 + ((2 * (v94 ^ 0x77) + 88) & 0x2AC ^ 0xF7F37BFF);
  LODWORD(v30) = *(_DWORD *)(v11 - 232);
  *(_DWORD *)(v11 - 232) = *(_DWORD *)&v73[4 * (v30 ^ 0x1A)];
  LODWORD(v31) = ((*(_DWORD *)(v11 - 256) >> 15) & 0x58 ^ 0x48) + (v30 ^ 0x4C64A1B);
  *(_DWORD *)(v11 - 256) = v31 - 2043194537 + ((2 * v31) & 0x2AC ^ 0xF7F37BFF);
  *(_DWORD *)(v11 - 176) = *(_DWORD *)&v74[4 * (BYTE1(*(_DWORD *)(v11 - 176)) ^ 0xD6)];
  *(_DWORD *)(v11 - 168) = *(_DWORD *)&v74[4 * (BYTE1(v92) ^ 0xB9)];
  *(_DWORD *)(v11 - 184) = *(_DWORD *)&v74[4 * (BYTE1(v93) ^ 0xC9)];
  *(_DWORD *)(v11 - 224) = *(_DWORD *)&v74[4 * (*(_DWORD *)(v11 - 224) ^ 0x84)];
  *(_DWORD *)(v11 - 152) = *(_DWORD *)&v75[4 * (((v12 ^ v69) >> 24) ^ 0xB2)];
  *(_DWORD *)(v11 - 216) = *(_DWORD *)&v75[4 * (*(_DWORD *)(v11 - 216) ^ 7)];
  *(_DWORD *)(v11 - 248) = v91 - 1613371233;
  *(_DWORD *)(v11 - 204) = *(_DWORD *)&v75[4 * (*(_DWORD *)(v11 - 204) ^ 0x4B)];
  *(_DWORD *)(v11 - 116) = v95 - 129892452;
  *(_DWORD *)(v11 - 200) = v89 - 129892452;
  *(_DWORD *)(v11 - 240) = v81 - ((2 * v81) & 0xF083FF38) - 129892452;
  LODWORD(v34) = *(_DWORD *)(v11 - 144);
  uint64_t v82 = (uint64_t)*(&off_100233720 + (int)v34 - 60);
  uint64_t v83 = (uint64_t)*(&off_100233720 + (int)(v34 ^ 0x3E));
  unint64_t v84 = (char *)*(&off_100233720 + (int)(v34 ^ 0x83)) - 12;
  unint64_t v85 = (char *)*(&off_100233720 + (int)v34 - 26) - 8;
  LODWORD(v12) = (v85[*(unsigned __int8 *)(v11 - 109) ^ 0x41] ^ 0xEB) & 0xFF00FFFF | (((*(unsigned char *)(v83 + (*(unsigned __int8 *)(v11 - 111) ^ 0x40)) + 96) ^ 0x5A) << 16) | ((v84[*(unsigned __int8 *)(v11 - 110) ^ 0xBBLL] ^ 0x58) << 8) | ((*(unsigned __int8 *)(v82 + (*(unsigned __int8 *)(v11 - 112) ^ 0x1ELL)) ^ (*(unsigned __int8 *)(v11 - 112) - ((2 * *(unsigned __int8 *)(v11 - 112)) & 0xB4) + 90) ^ 0x84) << 24);
  LODWORD(v31) = (v85[*(unsigned __int8 *)(v11 - 105) ^ 0xE4] ^ 0xDD) & 0xFF00FFFF | ((*(unsigned __int8 *)(v82 + (*(unsigned __int8 *)(v11 - 108) ^ 0x3ELL)) ^ (*(unsigned __int8 *)(v11 - 108) + (~(2 * *(unsigned __int8 *)(v11 - 108)) | 0x4B) + 91) ^ 0xFFFFFFE1) << 24) | (((*(unsigned char *)(v83 + (*(unsigned __int8 *)(v11 - 107) ^ 0x27)) + 96) ^ 0x96) << 16) | ((v84[*(unsigned __int8 *)(v11 - 106) ^ 9] ^ 0x5D) << 8);
  unsigned int v86 = (v85[*(unsigned __int8 *)(v11 - 101) ^ 0xF2] ^ 0x64) & 0xFF00FFFF | ((*(unsigned __int8 *)(v82 + (*(unsigned __int8 *)(v11 - 104) ^ 0xD3)) ^ (*(unsigned __int8 *)(v11 - 104) - ((2 * *(unsigned __int8 *)(v11 - 104)) & 0xB4) + 90) ^ 0xE0) << 24) | ((v84[*(unsigned __int8 *)(v11 - 102) ^ 0xBELL] ^ 0xFA) << 8) & 0xFF00FFFF | (((*(unsigned char *)(v83 + (*(unsigned __int8 *)(v11 - 103) ^ 0xE9)) + 96) ^ 0x8A) << 16);
  *(_DWORD *)(v11 - 120) = (v85[*(unsigned __int8 *)(v11 - 97) ^ 0x74] ^ 0x4C | (((*(unsigned char *)(v83 + (*(unsigned __int8 *)(v11 - 99) ^ 0xF3)) ^ 2) + 96) << 16) | ((v84[*(unsigned __int8 *)(v11 - 98) ^ 0x20] ^ 0xB2) << 8) | ((*(unsigned __int8 *)(v82 + (*(unsigned __int8 *)(v11 - 100) ^ 0xF3)) ^ (*(unsigned __int8 *)(v11 - 100) - ((2 * *(unsigned __int8 *)(v11 - 100)) & 0xB4) + 90) ^ 0x85) << 24)) ^ 0xE6235B59;
  *(_DWORD *)(v11 - 124) = v12 ^ 0x114C2CBD;
  *(_DWORD *)(v11 - 128) = v31 ^ 0x21772DCE;
  *(_DWORD *)(v11 - 132) = v86 ^ 0xB91F32BC;
  *(_DWORD *)(v11 - 116) = v34 + 824;
  JUMPOUT(0x1000369E8);
}

void sub_1000386AC()
{
}

uint64_t sub_1000386B4()
{
  return sub_10001EB1C();
}

uint64_t sub_1000386E0@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W3>, uint64_t a4@<X8>)
{
  uint64_t v12 = (2 * (v8 & 0x8000000)) ^ 0x10000000 | v8 & 0x8000000;
  unint64_t v13 = a2 ^ 0xDB15B7906A3B2014;
  BOOL v14 = ((v4 ^ 0x93A5B2D668000000) & (v12 - 0x8000000)) == 0;
  unint64_t v15 = v9 ^ 0xB27F2273FEF5574 ^ ((a2 ^ 0xDB15B7906A3B2014)
                                  + v7
                                  - 2 * ((a2 ^ 0xDB15B7906A3B2014) & (v7 + 34) ^ a2 & 0x22));
  uint64_t v16 = v12 + 0x2E3D6E66FF582FAFLL + (v11 ^ (2 * v6));
  uint64_t v17 = 0x2E3D6E670F5835B1 - v12;
  if (v14) {
    uint64_t v17 = v16;
  }
  unint64_t v18 = ((v13 ^ -(uint64_t)v13 ^ ((v9 ^ 0xFF749508DC9EE492) + v15 + 1)) + (v9 ^ 0xFF749508DC9EE492)) ^ (v10 ^ v8 ^ 0xACBE7116F468C04ELL) & (v10 ^ 0xF71AD99010F7231ALL);
  unint64_t v19 = v10 ^ 0xA8CE8330AA9B54FCLL ^ (((v4 ^ v5) - 0x2E3D6E67075835B1 + v17) ^ v8 & 0xFFFFFFFFF7FFFFFFLL ^ a4) & (v10 ^ v8 ^ 0x53418EE90B973FB1);
  uint64_t v20 = v19
      + v18
      - 2 * (v19 & v18)
      - ((2 * (v19 + v18 - 2 * (v19 & v18))) & 0x66523C13D4083C06)
      - 0x4CD6E1F615FBE1FDLL;
  *((void *)&v22 + 1) = v20 ^ 0x1E03;
  *(void *)&long long v22 = v20 ^ 0xB3291E09EA040000;
  uint64_t v21 = v22 >> 17;
  *((void *)&v22 + 1) = v18;
  *(void *)&long long v22 = v18 ^ 0x2E9545FC877E14A4;
  return sub_100016F1C(a1, v18 ^ __ROR8__(v18, 6) ^ 0xD958E984F43E7152 ^ (v22 >> 1), v21, a3);
}

uint64_t sub_100038A58()
{
  int v4 = *(_DWORD *)(v2 - 0x6C0C7F2AED40EE81)
     - ((2 * *(_DWORD *)(v2 - 0x6C0C7F2AED40EE81) + 1227704600) & ((v1 ^ 0x342) + 1077469000))
     - 994896096;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((105
                                * (((2 * v4) & 0x54FD5DAA ^ 0x40384528) + (v1 ^ v0 ^ 0xA62D829 ^ v4) - 164353 == 712781012)) ^ v1)))();
}

uint64_t sub_100038B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  *(_DWORD *)(v26 - 112) = v21
                         + ((-738313505 - ((v26 - 128) | 0xD3FE3ADF) + ((v26 - 128) | 0x2C01C520)) ^ 0x9695BD42) * v24
                         + 336;
  *(void *)(v26 - 120) = a21;
  *(void *)(v26 - 104) = v23;
  uint64_t v27 = (*(uint64_t (**)(uint64_t))(v22 + 8 * (v21 + 899)))(v26 - 128);
  return (*(uint64_t (**)(uint64_t))(v22
                                            + 8
                                            * ((883
                                              * (*(_DWORD *)(v26 - 128) > ((109 * (v21 ^ 0x532)) ^ (v25 + 746)))) ^ v21)))(v27);
}

uint64_t sub_100038BA8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((1015 * (((v3 < v1) ^ (v4 + v0 + 43)) & 1)) ^ (v4 + v0 - 1760))))();
}

uint64_t sub_100038BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  return (*(uint64_t (**)(void))(v13
                              + 8
                              * (((a12 == (((v12 - 1348) | 0x340) ^ (v14 + 317)))
                                * (((v12 - 353284034) & 0x150EAFFF) - 1421)) ^ v12)))();
}

uint64_t sub_100038C44@<X0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, unsigned int a5@<W8>)
{
  BOOL v11 = a5 < a1;
  *((unsigned char *)&STACK[0x2AC] + (v5 + a3)) = *(unsigned char *)(v8 + (v6 + a2))
                                                      + (~(2 * *(unsigned char *)(v8 + (v6 + a2))) | 0x49)
                                                      + 92;
  unsigned int v12 = a4 + v6 + 1;
  int v13 = v11 ^ (v12 < a1);
  BOOL v14 = v12 < a5;
  if (!v13) {
    BOOL v11 = v14;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * ((!v11 * v7) ^ v9)))();
}

uint64_t sub_100038CBC(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  uint64_t v9 = ((v5 - 828) ^ (a4 + 207)) + v6;
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(v7 + v9);
  return (*(uint64_t (**)(void))(v8 + 8 * (((v6 - 1 == a3) * a5) ^ (v5 - 106))))();
}

uint64_t sub_100038CF8(uint64_t a1, uint64_t a2, int a3)
{
  *(void *)(a1 - 7 + (v6 + v5 + v7 - v8)) = *(void *)(v3 - 7 + (v6 + v5 + v7 - v8));
  return (*(uint64_t (**)(void))(v9 + 8 * ((4079 * (a3 - (v4 & 0xFFFFFFF8) - 1924 == -v8)) ^ a3)))();
}

uint64_t sub_100038D58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  BOOL v14 = *v8 == 91 && LODWORD(STACK[0x610]) == -419305101 && v9 == v11 + a8 - 845 + a8 - 1035 - 193;
  return (*(uint64_t (**)(void))(v10 + 8 * ((29 * v14) ^ (a8 - 416))))();
}

uint64_t sub_100038DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16)
{
  BOOL v19 = a16 < 0x8AF56C11;
  if (v19 == (v17 + 2010798268) < 0x8AF56C11) {
    LOBYTE(v19) = v17 + 2010798268 < a16;
  }
  return (*(uint64_t (**)(void))(v18 + 8 * ((26 * ((((v16 - 52) ^ v19) & 1) == 0)) ^ v16)))();
}

uint64_t sub_100038E30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v6 = v3 + a1;
  *(unsigned char *)(v6 + v1 + 702) = v4;
  return (*(uint64_t (**)(void))(v5 + 8 * ((4 * (v2 ^ 0xA6)) | (8 * ((unint64_t)(v6 + 703) < 0x38)))))();
}

uint64_t sub_100038E70@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(*(void *)(a1 - 0x9F59A8236606B8) + 4 * (v3 + v1)) = v2 - 1;
  return sub_100038EA4();
}

void sub_100038EA4(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x9F59A8236606BCLL) = (((v3 + v2) * (v1 - 638803870)) ^ 0xD976FEF7)
                                       + 2124111871
                                       + ((2 * (v3 + v2) * (v1 - 638803870)) & 0xB2EDFDEE);
}

uint64_t sub_100038F34(int a1)
{
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((21
                                              * (((a1 + v1 - 1878851486 < ((v3 + 268) ^ 0x59Fu)) ^ (v3 + 108)) & 1)) ^ v3)))(v2);
}

uint64_t sub_100038FA8@<X0>(uint64_t a1@<X2>, char a2@<W6>, int a3@<W8>)
{
  uint64_t v9 = (v6 + a3);
  unsigned int v10 = *(_DWORD *)(v8 - 220 + v9 + 72);
  *(unsigned char *)(a1 + v9) = (a2 + v4 - 127) ^ v10 ^ 0xF3;
  *(unsigned char *)(a1 + (v9 + 2)) = (BYTE2(v10) ^ 0x20) + (~(v10 >> 15) | 0x49) + 92;
  *(unsigned char *)(a1 + (v9 + 1)) = (BYTE1(v10) ^ 0x92) - ((2 * (BYTE1(v10) ^ 0x92)) & 0xB6) + 91;
  *(unsigned char *)(a1 + (v9 + 3)) = (HIBYTE(v10) ^ 6) - ((2 * (HIBYTE(v10) ^ 6)) & 0xB6) + 91;
  LODWORD(v9) = *(_DWORD *)(v8 - 128) + 378105111;
  BOOL v11 = v9 < v3;
  BOOL v12 = v6 - 205923733 < v9;
  if (v6 - 205923733 < v3 != v11) {
    BOOL v12 = v11;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((v12 * v5) ^ v4)))();
}

void sub_100039080()
{
}

uint64_t sub_100039088(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((3254
                                * (((((a8 - 1063364062) & 0xF61A5B9 ^ 0x4A8) + a2) & 0x7F ^ 0x5FEBEFFE)
                                 + (((a8 + 1363694542) & 0xEB7AFED ^ 0x87D) & (2
                                                                             * (((a8 - 1063364062) & 0xF61A5B9 ^ 0x4A8)
                                                                              + a2)))
                                 - 1609297919 < 4)) ^ a8)))();
}

void sub_100039118()
{
}

uint64_t sub_100039130()
{
  return sub_100039138();
}

uint64_t sub_100039138@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>, int8x16_t a5@<Q0>, int8x16_t a6@<Q4>)
{
  int8x16_t v11 = *(int8x16_t *)(v9 + (v7 + a1 + a4));
  *(int8x16_t *)(v8 + a4) = vaddq_s8(vsubq_s8(v11, vandq_s8(vaddq_s8(v11, v11), a6)), a5);
  return (*(uint64_t (**)(void))(v10 + 8 * (((a4 == 48) * a2) ^ (a3 + v6 + 549))))();
}

uint64_t sub_100039180()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (v0 | (4
                                     * (((((v0 - 1826252077) & 0x6CDA67B2) - 1716) & (v1 - 544568607))
                                      - LODWORD(STACK[0x398]) != -544568610)))))();
}

void sub_1000391D0(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  *(_DWORD *)(v20 - 112) = a1 + ((v20 - 144) ^ 0xF2B3FDD7) * v18 - 420;
  *(void *)(v20 - 128) = v19;
  *(void *)(v20 - 120) = a17;
  *(void *)(v20 - 104) = v19;
  *(void *)(v20 - 144) = a18;
  *(void *)(v20 - 136) = a7;
  JUMPOUT(0x10003920CLL);
}

uint64_t sub_10003927C()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((667 * (*(unsigned char *)(v1 + 1) == 4)) ^ 0xD3u)))();
}

uint64_t sub_1000392B4()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((69 * (v1 != ((v2 + 117577346) & 0xF8FDE6E2 ^ 0x420))) ^ v2)))();
}

uint64_t sub_1000392F4()
{
  return (*(uint64_t (**)(void))(v3 + 8
                                   * ((115 * (v0 == v2 + 61 * (v1 ^ 0x49E) + 17 * (v1 ^ 0x4B2) - 1425228676)) ^ v1)))();
}

uint64_t sub_100039344@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12)
{
  BOOL v14 = v12 - 1977249924 < (int)(a12 + 107386369);
  if (a12 > 0x799969FE != v12 - 1977249924 < -2040097279) {
    BOOL v14 = a12 > 0x799969FE;
  }
  return (*(uint64_t (**)(void))(v13 + 8 * ((v14 * (((((2 * a1) ^ 0x188) - 410) | 0x10C) ^ 0x81C)) ^ a1)))();
}

void sub_1000393C4(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10003944C()
{
  return 4294925278;
}

uint64_t sub_100039490@<X0>(uint64_t a1@<X8>)
{
  int v5 = -1281125818 - v2 - ((v3 - 1770405231) & (-791848354 - v4));
  unsigned int v6 = 1755732067 * ((2 * (v8 & 0x67313C18) - v8 + 416203751) ^ 0xC6087E3C);
  uint64_t v9 = a1;
  v8[0] = v5 ^ v6;
  v8[1] = (v3 - 659) ^ v6;
  return (*(uint64_t (**)(_DWORD *))(v1 + 8 * (v3 + 362)))(v8);
}

uint64_t sub_100039548()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((109 * ((v0 + v1 + v1 - 1702 - 2574) < 0x9C)) ^ v1)))();
}

uint64_t sub_100039580@<X0>(int a1@<W5>, int a2@<W6>, unsigned int a3@<W7>, int a4@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((*(_DWORD *)(*v5 + 4 * a3) != 72 * (v7 & v6 ^ 0x1F0) + a4)
                                * ((((v7 & v6) + a1) & a2) - 1041)) ^ v7 & v6)))();
}

uint64_t sub_1000395C4()
{
  return sub_1000395D0();
}

uint64_t sub_1000395D0@<X0>(int a1@<W1>, int a2@<W6>, int a3@<W8>, int8x16_t a4@<Q0>, int8x16_t a5@<Q4>)
{
  int8x16_t v10 = *(int8x16_t *)(v9 + (a3 + a1 + v5));
  *(int8x16_t *)(v7 + v5) = vaddq_s8(vsubq_s8(v10, vandq_s8(vaddq_s8(v10, v10), a5)), a4);
  return (*(uint64_t (**)(void))(v8 + 8 * ((480 * (v5 == 48)) ^ (a2 + v6 - 229))))();
}

uint64_t sub_10003961C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  return (*(uint64_t (**)(void))(v23
                              + 8
                              * (int)((((30 * ((a4 + 422914117) & 0xE6CAD3FF ^ 0x3D6)) ^ 0x1F4)
                                     * ((unint64_t)(a22 - a1 - v22 - 0x42E48BBDD224DE3DLL) < 0x20)) ^ a4)))();
}

uint64_t sub_10003968C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v10 = v9 + a7 - 127974216;
  BOOL v11 = v10 < 0x7AF12670;
  BOOL v12 = v10 > v7 + 1194867422;
  if ((v7 + 1194867422) < 0x7AF12670 != v11) {
    BOOL v12 = v11;
  }
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (int)(((((395 * (a3 ^ 0x882)) ^ 0xFFFFFD88) + ((a3 - 1115662726) & 0x427FA7FD)) * v12) ^ a3)))();
}

uint64_t sub_100039724(uint64_t a1, int a2)
{
  unsigned int v6 = *(unsigned __int8 *)(v2 + (a2 + 1));
  uint64_t v7 = ((v6 << (((v5 - 115) & 0xC7) + 60)) & 0x1EE) + ((((v5 - 1999) | 0x400) - 1266814634) ^ v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, void, void))(v3 + 8 * ((11 * ((v6 >> 7) ^ 1)) ^ v5)))(a1, v7, (v4 - 544568608), (v7 + 1811382059));
}

void sub_1000397A8(int a1@<W1>, int a2@<W8>)
{
  if ((a2 + v2 - 1) >= 0x7FFFFFFF) {
    int v6 = (a1 ^ 0xA52) - v3;
  }
  else {
    int v6 = v5;
  }
  _DWORD *v4 = v6;
  JUMPOUT(0x1000397D4);
}

uint64_t sub_1000397EC@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 ^ 0x5DC) + 722) ^ 0x1DB) * (a1 == v1)) ^ v2)))();
}

uint64_t sub_100039828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((285 * (v8 + 1 == v6 + 32)) ^ a6)))();
}

uint64_t sub_100039918(uint64_t a1, int a2)
{
  if (a1) {
    BOOL v3 = a2 == 0;
  }
  else {
    BOOL v3 = 0;
  }
  int v4 = v3;
  return (*(uint64_t (**)(void))(v2 + 8 * ((114 * v4) ^ 0x2A0)))();
}

void sub_100039968()
{
}

uint64_t sub_100039974(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((7 * (a2 + 1 == v4 + 16)) ^ v3)))();
}

uint64_t sub_100039A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  return (*(uint64_t (**)(void))(v12 + 8 * ((a11 == (v13 ^ (v11 + 4) ^ (v13 + 1164117504) & 0xBA9CF9FF)) ^ (v13 + 233))))();
}

uint64_t sub_100039AA8@<X0>(int a1@<W0>, unsigned int a2@<W1>, int a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, int a6@<W8>)
{
  BOOL v12 = a2 < v9;
  *(unsigned char *)(a5 + (v6 + v8)) = ((a6 + 102) | 0x10)
                                           + *(unsigned char *)(v11 + (v7 + a3))
                                           + (a4 | ~(2 * *(unsigned char *)(v11 + (v7 + a3))))
                                           + 42;
  unsigned int v13 = v7 + 1 + a1;
  int v14 = v12 ^ (v13 < v9);
  BOOL v15 = v13 < a2;
  if (!v14) {
    BOOL v12 = v15;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * ((126 * v12) ^ a6)))();
}

uint64_t sub_100039B18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  uint64_t v34 = (_DWORD *)(a28 + 24 * (a9 - 90582815));
  HIDWORD(a30) = v34[4];
  uint64_t v35 = *v34 + (v31 ^ 0x7CA ^ (v32 + 664));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 8 * (((4 * ((v35 & 0xFFFFFFFFFFFFFFDLL) != 0)) | (16 * ((v35 & 0xFFFFFFFFFFFFFFDLL) != 0))) ^ v31)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

uint64_t sub_100039BCC@<X0>(int a1@<W4>, int a2@<W6>, int a3@<W8>)
{
  *(unsigned char *)(v8 - 220 + (v4 + a3)) = *(unsigned char *)(v3 + v7 - 266921705)
                                                 - ((a2 + v5 - 16) & (2 * *(unsigned char *)(v3 + v7 - 266921705)))
                                                 + 91;
  return (*(uint64_t (**)(void))(v6 + 8 * ((1425 * ((v4 + a1) < 0x40)) ^ (a2 + v5 + 151))))();
}

uint64_t sub_100039C34(int a1)
{
  int v5 = ((((a1 - 7) | 0x12) - 782) ^ (a1 - 1846507601) & 0x6E0F77F7) + *(unsigned __int8 *)(v3 + 3);
  return (*(uint64_t (**)(void))(v4 + 8 * ((27 * ((v2 & (2 * v5)) + (v5 ^ v1) != v1)) ^ a1)))();
}

uint64_t sub_100039C94()
{
  int v5 = 1759421093 * ((v4 - 128) ^ 0xB37DB054);
  *(void *)(v4 - 120) = v3;
  *(_DWORD *)(v4 - 112) = v2 - v5 + 50;
  *(_DWORD *)(v4 - 128) = v0 - v5 + 7 * (v2 ^ 0x558) + 580300616;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v2 ^ 0xDB3)))(v4 - 128);
  return sub_100039D04(v6);
}

uint64_t sub_100039D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  *(_DWORD *)(v25 - 112) = v22
                         + ((((v25 - 128) ^ 0xD80A7276 | 0x3A86F137)
                           - ((v25 - 128) ^ 0xD80A7276)
                           + (((v25 - 128) ^ 0xD80A7276) & 0xC5790EC8)) ^ 0x5818FB23)
                         * v23
                         + 906;
  *(void *)(v25 - 104) = a19;
  *(void *)(v25 - 120) = a21;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v21 + 8 * (v22 ^ 0xA43)))(v25 - 128);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * (((((v22 ^ 0x64F ^ (*(_DWORD *)(v25 - 128) == v24)) & 1) == 0)
                                              * ((v22 + 466) ^ 0x4C9)) | v22)))(v26);
}

uint64_t sub_100039DBC(uint64_t result)
{
  *(_DWORD *)(result + 4) = v1;
  return result;
}

uint64_t sub_100039DC4(uint64_t a1, unsigned int a2, int a3, int8x8_t a4, uint64_t a5, uint64_t a6, int a7)
{
  *(int8x8_t *)(a6 + a2) = veor_s8(*(int8x8_t *)(a1 + a2), a4);
  return (*(uint64_t (**)(void))(v8 + 8 * (((a3 == 0) * v7) ^ a7)))();
}

uint64_t sub_100039DF8@<X0>(int a1@<W1>, int a2@<W5>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(a3 + 8 * (((a1 == ((a2 + 1348383636) & 0xAFA147F7 ^ (v3 - 57))) * (a2 - 1588)) ^ a2)))();
}

uint64_t sub_100039E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  HIDWORD(a16) = HIDWORD(a12) + 1125303579;
  v30.i64[0] = 0x5B5B5B5B5B5B5B5BLL;
  v30.i64[1] = 0x5B5B5B5B5B5B5B5BLL;
  HIDWORD(a20) = 361;
  return sub_100051B18((uint64_t)&off_100233720, v30, a2, (v28 - 1), a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18,
           a19,
           a20,
           v29 - 16,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_100039ECC(uint64_t a1, int a2, int a3, int a4)
{
  uint64_t v11 = a4 - 32 + (v8 ^ v7 ^ v6);
  long long v12 = *(_OWORD *)(v5 + v11 - 15);
  long long v13 = *(_OWORD *)(v5 + v11 - 31);
  uint64_t v14 = v9 + v11;
  *(_OWORD *)(v14 - 15) = v12;
  *(_OWORD *)(v14 - 31) = v13;
  return (*(uint64_t (**)(void))(v10 + 8 * (((a2 != 32) * a3) ^ (v4 + v8 - 360))))();
}

uint64_t sub_100039ED8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * (a1 ^ 0x376)))();
}

uint64_t sub_100039F1C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((100 * (a4 + v7 + 992 >= ((2 * a7) ^ 0xFFFFFE80))) ^ a7)))();
}

uint64_t sub_100039F5C(uint64_t a1)
{
  BOOL v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (v1 + 1499)))(a1, 4182676990) == 0;
  return (*(uint64_t (**)(void))(v2
                              + 8 * (((((v1 + 111) ^ v3) & 1) * ((61 * (v1 ^ 0x2E1)) ^ 0x40B)) | v1)))();
}

void sub_100039FB8(uint64_t a1)
{
  int v1 = 1178560073 * ((-2 - ((a1 | 0x20C3A6CC) + (~a1 | 0xDF3C5933))) ^ 0x65A82151);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10003A064@<X0>(uint64_t a1@<X8>)
{
  uint64_t v7 = v4 + 605438858 + v3 + 474 + ((v5 - 768) | 0x210u);
  long long v8 = *(_OWORD *)(v1 + v7 - 15);
  long long v9 = *(_OWORD *)(v1 + v7 - 31);
  uint64_t v10 = a1 + v7;
  *(_OWORD *)(v10 - 15) = v8;
  *(_OWORD *)(v10 - 31) = v9;
  return (*(uint64_t (**)(void))(v6 + 8 * ((56 * ((v2 & 0xFFFFFFE0) == 32)) ^ (v5 - 368))))();
}

uint64_t sub_10003A0CC()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((1991 * ((v2 + v1 + 605440130) < 8)) ^ 0x3DF)))();
}

uint64_t sub_10003A128(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(v4 + (((v2 - 291) ^ (unint64_t)(a2 + 35)) & (v3 + 3280707161))) = v6;
  return (*(uint64_t (**)(void))(v7 + 8 * ((((v3 - 1014260134) < 0x40) * v5) ^ v2)))();
}

void sub_10003A130()
{
}

uint64_t sub_10003A2A4()
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (v0 + 1471));
  return v3(v1);
}

void sub_10003A2D4()
{
  *uint64_t v1 = v0 + 21;
  sub_100027128();
}

uint64_t sub_10003A2E0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned char *a20)
{
  int v23 = *(unsigned char **)(a8 + 96);
  v23[1167] = a20[19];
  v23[1166] = a20[18];
  v23[1165] = a20[17];
  v23[1164] = a20[16];
  v23[1163] = a20[15];
  v23[1162] = a20[14];
  v23[1161] = a20[13];
  v23[1160] = a20[12];
  v23[1159] = a20[11];
  v23[1158] = a20[10];
  v23[1157] = a20[9];
  v23[1156] = a20[8];
  v23[1155] = a20[7];
  v23[1154] = a20[6];
  v23[1153] = a20[5];
  v23[1152] = a20[4];
  v23[1151] = a20[3];
  v23[1150] = a20[2];
  v23[1149] = a20[1];
  v23[1148] = *a20;
  BOOL v24 = *(_DWORD *)(a8 + 72) != a4 + 7;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 8 * (((16 * v24) | (32 * v24)) ^ (v21 + 1169))))(v20, a2, a3);
}

uint64_t sub_10003A3E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19
                                                                                                  + 8 * ((819 * (a11 - 836617401 + ((v20 - 220) | 0x200u) < 0x7FFFFFFF)) ^ v20)))(a1, a2, a3, a4, a5, a6, a19);
}

uint64_t sub_10003A42C()
{
  int v5 = *(_DWORD *)(v2 + 52);
  int v6 = 3804331 * (v1 ^ 0x7ED525F6);
  *(_DWORD *)(v4 - 192) = LODWORD(STACK[0x284]) ^ v6;
  *(_DWORD *)(v4 - 176) = v6 + 221733209 + v5;
  *(void *)(v4 - 168) = STACK[0x338];
  *(void *)(v4 - 160) = v2 + 0x76D4F6DCACF2CDC2;
  int v7 = LODWORD(STACK[0x2CC]) - v6 + ((v0 + 926) ^ 0x59A);
  *(_DWORD *)(v4 - 200) = (v0 - 95) ^ v6;
  *(_DWORD *)(v4 - 196) = v7 + 1436553440;
  *(void *)(v4 - 184) = &STACK[0x650];
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v0 ^ 0x961)))(v4 - 200);
  int v9 = *(_DWORD *)(v4 - 188);
  LODWORD(STACK[0x534]) = v9;
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((1262 * (v9 == -2124048112)) ^ v0)))(v8);
}

uint64_t sub_10003A54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26)
{
  return sub_10003A5CC(((a26 + (v26 ^ v27)) ^ 0xCFEFDCFB) + 1067087872 + (((a26 + (v26 ^ v27)) << a19) & 0x9FDFB9F6), 1272907385);
}

uint64_t sub_10003A5CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, unsigned int a20)
{
  BOOL v23 = a20 < 0x4C1289E6;
  uint64_t v24 = (v20 + 715);
  if (v23 == v21 + 622126188 < (v24 ^ 0x4C128A27)) {
    BOOL v23 = v21 + 622126188 < a20;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8 * ((488 * v23) ^ v20)))(a1, a2, v24, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_10003A634()
{
  STACK[0x510] = STACK[0x3C0];
  LODWORD(STACK[0x534]) = v0;
  return sub_10002E1D8();
}

void sub_10003A65C()
{
  if (v0 == 543459595) {
    int v1 = -2124048112;
  }
  else {
    int v1 = 2124071624;
  }
  *(_DWORD *)(v2 + 40) = v1;
}

uint64_t sub_10003A6C0(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((((a2 - 794) | 0x2B0) + 388) ^ (a2 + 240)) * (v2 == v3)) ^ a2)))();
}

uint64_t sub_10003A6F4(uint64_t result)
{
  uint64_t v2 = *v1;
  *(void *)uint64_t result = 0;
  *(void *)(result + 8) = 0x732F3CB0732F3CBLL;
  *(void *)(result + 16) = 0x9C21DD2F5B695B74;
  *(_DWORD *)(result + 24) = -2124048112;
  *(void *)(v2 - 0x7DDA1A649706FB9DLL) = result + 0x6C0C7F2AED40EE91;
  *((_DWORD *)v1 + 2) = -2124048112;
  return result;
}

uint64_t sub_10003A758()
{
  STACK[0x338] = 0;
  int v3 = *(_DWORD *)(v1 + 56);
  *(_DWORD *)(v1 + 56) = v3 + 1;
  uint64_t v4 = *(uint64_t (**)(void))(v2 + 8 * ((1038 * (v3 - 943553891 < (((v0 - 1022) | 0x60) ^ 0xFFFFFF95))) ^ (v0 - 926)));
  LODWORD(STACK[0x2CC]) = 540038155;
  return v4();
}

uint64_t sub_10003A7B8()
{
  int v4 = STACK[0x3F4];
  int v5 = LODWORD(STACK[0x3F4]) + 566;
  (*(void (**)(unint64_t, uint64_t))(v3 + 8 * SLODWORD(STACK[0x29C])))(STACK[0x2A0], 2965982036);
  int v6 = (*(uint64_t (**)(void))(v3 + 8 * SLODWORD(STACK[0x298])))();
  unsigned int v7 = v6 + v0 - ((v6 << (v4 - 12)) & v1);
  unsigned int *v2 = v7;
  int v8 = ((((v5 ^ 0x7D8) - 409) ^ (v7 >> 30)) + v0 - ((2 * (((v5 ^ 0x7D8) - 409) ^ (v7 >> 30))) & 4)) ^ v7;
  v2[1] = 1812433253 * v8 - ((2 - 670100790 * v8) & v1) - 1756925733;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 8 * (v5 ^ 0xB)))(1812433253, 3624866506, 2538041563);
}

uint64_t sub_10003A894(_DWORD *a1)
{
  unsigned int v1 = 1224239923 * (((a1 | 0x8C9528F6) - a1 + (a1 & 0x736AD709)) ^ 0x7E26D521);
  unsigned int v2 = a1[4] - v1;
  int v3 = *a1 ^ v1;
  unsigned int v5 = v3 - 1436435821;
  BOOL v4 = v3 - 1436435821 < 0;
  LODWORD(v6) = 1436435821 - v3;
  if (v4) {
    uint64_t v6 = v6;
  }
  else {
    uint64_t v6 = v5;
  }
  return (*((uint64_t (**)(void))*(&off_100233720 + (int)(v2 ^ 0x1DA))
          + (int)((231 * (v6 != ((2 * v6) & 0x25605FFA))) ^ v2)
          - 1))();
}

void sub_10003A94C()
{
}

uint64_t sub_10003A964(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x9F59A8236606BCLL);
  int v4 = v2 - 1477598966;
  BOOL v3 = v2 - 1477598966 < 0;
  int v5 = 1477598966 - v2;
  if (!v3) {
    int v5 = v4;
  }
  int v1 = (*(_DWORD *)a1 - 628203409 * (a1 ^ 0x2880C33) - 2090811411) & 0x7C9F3DDF;
  return (*((uint64_t (**)(void))*(&off_100233720 + (v1 ^ 0x10Eu))
          + ((((v5 ^ 0x755FF876) + v1 + ((2 * v5) & 0xEABFF0EC) - 1969224211 < 0x7FFFFFFF) * ((v1 ^ 0x253) - 919)) ^ v1)
          - 1))();
}

uint64_t sub_10003AA5C(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v8 = v3 - 2037503918 + ((v6 + 870) | 0x342) - 1861;
  if (v8 <= 0x40) {
    unsigned int v8 = 64;
  }
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((a3 - v4 - v5 + v8 > 0xE) * ((263 * ((v6 + 928) ^ 0x43C)) ^ 0x272)) ^ (v6 + 928))))();
}

uint64_t sub_10003AB24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  *(unsigned char *)(*v22 + (v19 + a8)) = -37;
  BOOL v23 = v19 - 1261550061 < (a19 - 1250219742);
  if ((a19 - 1250219742) < 0xD5AB7D2D != (v19 - 1261550061) < 0xD5AB7D2D) {
    BOOL v23 = (a19 - 1250219742) < 0xD5AB7D2D;
  }
  return (*(uint64_t (**)(void))(v21 + 8 * (((v20 - 349) * v23) | v20)))();
}

void sub_10003AB98()
{
}

void sub_10003ABB8()
{
}

uint64_t sub_10003AC18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, unsigned int a17)
{
  if (a17 < a16 != v18 + 860141893 < ((a6 + a7 - 434) ^ 0x777u) + 1751808539) {
    BOOL v19 = v18 + 860141893 < ((a6 + a7 - 434) ^ 0x777u) + 1751808539;
  }
  else {
    BOOL v19 = v18 + 860141893 > a17;
  }
  return (*(uint64_t (**)(void))(v17 + 8 * ((50 * v19) ^ (a6 + a7 + 791))))();
}

uint64_t sub_10003AC98(_DWORD *a1)
{
  *((unsigned char *)a1 + (v3 ^ v2) + v1 + 4) = 63;
  *a1 = v1;
  return 0;
}

uint64_t sub_10003ACB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  int v10 = v8 - 562;
  *(unsigned char *)(*(void *)(a8 + 96) + 1568) = 0;
  BOOL v11 = *(_DWORD *)(a8 + 72) == ((((v8 - 1409287295) & 0x5FFFF5FF) + 529173716) ^ (v8 - 562) ^ (a6 + 180));
  return (*(uint64_t (**)(void))(v9 + 8 * (((4 * v11) | (32 * v11)) ^ v10)))();
}

uint64_t sub_10003AD18(int a1, uint64_t a2, uint64_t a3, int a4)
{
  int v12 = -a1;
  uint64_t v13 = (v8 + 22058688 + v7 + v12);
  int8x8_t v14 = vrev64_s8(*(int8x8_t *)(v5 - 7 + v13));
  *(int8x8_t *)(v4 - 7 + v13) = vrev64_s8(vadd_s8(vsub_s8(v14, vand_s8(vadd_s8(v14, v14), v10)), v11));
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (int)((((((a4 + 1066670012) & 0xC06BE7F9 ^ 0xFFFFF961) & v6) + v12 != 8)
                                     * ((((a4 + 1066670012) & 0xC06BE7F9) - 1109) ^ 0x23E)) ^ (a4 + 1066670012) & 0xC06BE7F9)))();
}

uint64_t sub_10003ADAC(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(uint64_t))(v5
                                            + 8
                                            * (v4 ^ ((((v4 + 651) ^ (a3 + 346)) + v3 < ((v4 + 128) ^ (a3 - 92)) + v3) << 7))))(493);
}

uint64_t sub_10003AE0C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((30 * (v0 < (LODWORD(STACK[0x3F4]) ^ 0x3D97E6C3u) + LODWORD(STACK[0x3F4]) + 224)) ^ (LODWORD(STACK[0x3F4]) + 224))))();
}

uint64_t sub_10003AE4C(int a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((a2 + a1 + (v2 ^ 0xBB9u) - 1588559784 - 1004 < 8)
                                     * ((v2 + 959100395) & 0xC6D543F0 ^ 0x2D4)) ^ v2)))();
}

uint64_t sub_10003AEDC(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1936 * (a3 + v4 - 1477599642 >= 0)) ^ a3)))();
}

uint64_t sub_10003AF20@<X0>(uint64_t (*a1)(void)@<X8>)
{
  STACK[0x348] = v1;
  STACK[0x380] = v1 - 112;
  STACK[0x510] = v1 - 112;
  return a1();
}

uint64_t sub_10003AF44()
{
  unint64_t v4 = STACK[0x5E8] + 0x35FF68D50C8F4113;
  STACK[0x578] = v4;
  int v5 = 1178560073
     * ((((v3 - 200) ^ 0x68F96EE4 | 0xC9B2DC24) - ((v3 - 200) ^ 0x68F96EE4) + (((v3 - 200) ^ 0x68F96EE4) & 0x364D23D8)) ^ 0x1BDFCAA2);
  *(void *)(v3 - 192) = v4;
  *(_DWORD *)(v3 - 200) = -2035249205 - v5;
  *(_DWORD *)(v3 - 184) = 1172345424 - v5 + v1 + 9;
  unint64_t v6 = v0;
  (*(void (**)(uint64_t))(v2 + 8 * (v1 ^ 0x8DF)))(v3 - 200);
  STACK[0x568] = *(void *)(v2 + 8 * v1);
  STACK[0x3B8] = v6;
  return sub_10001B804(2037503917, v6);
}

uint64_t sub_10003B038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  LODWORD(STACK[0x50C]) = v4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v6
                                                                      + 8
                                                                      * (((((v3 - 877) | 0x10C) + 1547) * v5) ^ (v3 - 30))))(a1, a2, a3, LODWORD(STACK[0x3F4]));
}

void sub_10003B070()
{
}

void sub_10003B07C(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X10, X17 }
}

uint64_t sub_10003B0C8()
{
  STACK[0x568] = *(void *)(v1 + 8 * (LODWORD(STACK[0x3F4]) - 1033));
  return sub_10001B804(2037503917, STACK[0x398]);
}

void sub_10003B0E8()
{
}

uint64_t sub_10003B100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v10 + 8 * (int)(((a7 + (v9 ^ 0xC0054436) - 435) * (v7 != v8)) ^ v9)))();
}

uint64_t sub_10003B134@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v12 = v5 - 3;
  BOOL v13 = v4 > 0x4399FDC5;
  uint64_t v14 = 4 * (v9 + v6);
  int v15 = v8
      + 204666586
      + (*(_DWORD *)(*(void *)(a3 - 0x9F59A8236606B8) + v14) ^ (v7 + (v12 ^ 0x750) - 1574))
      + (*(_DWORD *)(*(void *)(a4 - 0x9F59A8236606B8) + v14) ^ v7);
  *(_DWORD *)(*(void *)(a1 - 0x9F59A8236606B8) + v14) = v15 + v7 - (v10 & (2 * v15));
  if (v13 == v9 - 32500059 < -1134165446) {
    BOOL v13 = v9 - 32500059 < (int)(v4 + 1013318202);
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((15 * v13) ^ v12)))();
}

uint64_t sub_10003B248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32)
{
  return (*(uint64_t (**)(void))(v32
                              + 8
                              * ((((((a32 + 28) | 0x90) ^ (2 * (STACK[0x324] & 0x3F)) ^ 0xC2)
                                 + (STACK[0x324] & 0x3F)
                                 + a13 < 0xFFFFFFC0)
                                * a12) ^ (a32 + 639))))();
}

uint64_t sub_10003B2DC()
{
  int v7 = v2 + 626;
  LODWORD(STACK[0x4AC]) = v0 + 1;
  uint64_t v8 = (*(uint64_t (**)(unint64_t, void))(v5 + 8 * (v2 ^ 0x947)))(STACK[0x388], 0);
  int v9 = v2 - 1756925108 + v1[4] - (v3 & (2 * v1[4])) - 1037;
  v1[1] = v1[6] - 1756925734 - (v3 & (2 * v1[6]));
  v1[2] = v9;
  uint64_t v10 = 8 * (v2 ^ 0x92C);
  int v11 = (*(uint64_t (**)(uint64_t))(v5 + v10))(v8);
  v1[3] = v11 - 1756925734 - (v3 & (2 * v11));
  int v12 = (*(uint64_t (**)(void))(v5 + v10))();
  *uint64_t v1 = v12 - 1756925734 - (v3 & (2 * v12));
  int v13 = (((*v4 >> 30) ^ 2) - 1756925734 - ((2 * ((*v4 >> 30) ^ 2)) & 4)) ^ *v4;
  unsigned int v14 = (*v1 ^ 0x974770DA) + ((1664525 * v13 - 1756925734 - ((3329050 * v13) & 0x2E8EE1B4)) ^ v4[1]);
  v4[1] = v14 - 1756925734 - ((2 * v14) & 0x2E8EE1B4);
  unint64_t v15 = 1374699841
      * ((0xE55B1BF0F784EA18 - ((v6 - 200) | 0xE55B1BF0F784EA18) + STACK[0x3E8]) ^ 0x14A87A03658F0DEELL);
  int v16 = (v7 + 298736840) ^ v15;
  *(_DWORD *)(v6 - 176) = -1374699841 * ((-142284264 - ((v6 - 200) | 0xF784EA18) + LODWORD(STACK[0x3E8])) ^ 0x658F0DEE);
  *(_DWORD *)(v6 - 172) = v16;
  *(_DWORD *)(v6 - 168) = (v7 + 298736840) & 0x3FCEF196 ^ v15;
  *(_DWORD *)(v6 - 160) = v16 ^ 0x1B;
  *(void *)(v6 - 192) = v15 + 2897307713u;
  *(void *)(v6 - 184) = v15 ^ 0xACB16843;
  *(_DWORD *)(v6 - 200) = v15 + v7 - 504208067;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v7 ^ 0xCD3)))(v6 - 200);
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * *(int *)(v6 - 164)))(v17);
}

void sub_10003B50C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24) - 1225351577 * ((2 * (a1 & 0x2B9C6F1D) - a1 + 1415811298) ^ 0x77F948F4);
  uint64_t v3 = *(void *)(a1 + 8);
  if (*(_DWORD *)(v3 - 0x9F59A8236606BCLL) - 1477598966 >= 0) {
    unsigned int v4 = *(_DWORD *)(v3 - 0x9F59A8236606BCLL) - 1477598966;
  }
  else {
    unsigned int v4 = 1477598966 - *(_DWORD *)(v3 - 0x9F59A8236606BCLL);
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (*(_DWORD *)(v2 - 0x9F59A8236606BCLL) - 1477598966 >= 0) {
    unsigned int v5 = *(_DWORD *)(v2 - 0x9F59A8236606BCLL) - 1477598966;
  }
  else {
    unsigned int v5 = 1477598966 - *(_DWORD *)(v2 - 0x9F59A8236606BCLL);
  }
  v8[1] = (460628867 * ((((v8 | 0xB762958E) ^ 0xFFFFFFFE) - (~v8 | 0x489D6A71)) ^ 0x40BE80C)) ^ (v1 + 297);
  uint64_t v9 = v3;
  uint64_t v6 = (char *)*(&off_100233720 + v1 - 522) - 8;
  (*(void (**)(_DWORD *))&v6[8 * (v1 ^ 0xA12)])(v8);
  if (v4 >= v5) {
    unsigned int v7 = v5;
  }
  else {
    unsigned int v7 = v4;
  }
  __asm { BRAA            X12, X17 }
}

void sub_10003B6CC()
{
}

uint64_t sub_10003B6D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * ((103 * (a6 + 1 == v6 + 64)) ^ a5)))(v8);
}

uint64_t sub_10003B7B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  *int v39 = v39[623];
  STACK[0x5B8] = a35 ^ 3;
  STACK[0x5C8] = (v38 + 1) + a35;
  *(_DWORD *)(v40 - 148) = v35 - v36 - 799439268 - a35;
  *(_DWORD *)(v40 - 144) = a35 ^ (v35 - v36 - 799439268) ^ 0x7F;
  *(_DWORD *)(v40 - 128) = 1559371749 - a35 + v35 - v36 + 1749;
  *(_DWORD *)(v40 - 124) = a35 + 1;
  *(_DWORD *)(v40 - 152) = (v35 - v36 - 799439232) ^ a35;
  uint64_t v41 = (*(uint64_t (**)(uint64_t))(v37 + 8 * (v35 + 1688)))(v40 - 152);
  return (*(uint64_t (**)(uint64_t))(v37 + 8 * *(int *)(v40 - 112)))(v41);
}

uint64_t sub_10003B860()
{
  int v3 = (v1 + 149) | 0x22;
  if (v2 + 669884682 < 0) {
    int v4 = v2;
  }
  else {
    int v4 = v3 - v2 - 1339770039;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((1936 * (v3 - 1477599642 + v4 >= 0)) ^ v3)))();
}

uint64_t sub_10003B8FC@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W5>, uint64_t a5@<X8>)
{
  int v10 = a4 ^ 0x1DA;
  uint64_t v11 = ((a4 ^ 0x1DA) + 1882) | 0x11u;
  uint64_t v12 = ((a4 ^ 0x1DA) - 42) | 0x159u;
  uint64_t v13 = (a3 + a2 + a1 + 1008) + a5;
  uint64_t v14 = ((_BYTE)a3 + (_BYTE)a2 + (_BYTE)a1 - 16) & 0xF;
  unint64_t v15 = v14 + v8 - v13;
  unint64_t v16 = (v14 | v7) - v13;
  unint64_t v17 = (v14 | v6) - v13;
  int v21 = v15 < 0x10 || v5 - a5 < (unint64_t)(v11 - 2053) || v16 < 0x10 || v17 < (v12 ^ 0x1C9uLL);
  return (*(uint64_t (**)(void))(v9 + 8 * (((8 * v21) | (v21 << 6)) ^ v10)))();
}

uint64_t sub_10003B98C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,int a32,unsigned int a33,unsigned int a34)
{
  unsigned int v36 = v34 - 1585699198 + a32;
  BOOL v37 = v36 < ((a2 + 2018) ^ 0xA1D5CB00);
  BOOL v38 = v36 > a34;
  if (a34 < a33 != v37) {
    BOOL v39 = v37;
  }
  else {
    BOOL v39 = v38;
  }
  return (*(uint64_t (**)(uint64_t))(v35 + 8 * ((54 * v39) ^ (a2 + 1930))))(1951);
}

void sub_10003BA18()
{
}

uint64_t sub_10003BA20(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t))(v10 + 8 * ((58 * (a8 + 1 != v8 + 60)) ^ a3)))(v9);
}

uint64_t sub_10003BAE4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((523 * (v4 == ((a4 - 1001) ^ (v6 + 36)))) ^ (a4 - 1001))))();
}

uint64_t sub_10003BB10(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(uint64_t, void))(v5
                                                    + 8
                                                    * ((73 * (((((a4 + 883112784) & 0xCB5CC7FE) - 1908) & v4) != 0)) ^ a4)))(a1, (a4 + 309));
}

void sub_10003BB54()
{
}

void sub_10003BB5C()
{
  (*(void (**)(void, void, void, void, unint64_t *, unint64_t, void, unint64_t *))(v4 + 8 * ((v1 + 10) ^ 0x94D)))(*v3, (v2 + v0), LODWORD(STACK[0x228]), v3[13] - 1062117730, &STACK[0x650], STACK[0x338], LODWORD(STACK[0x2CC]) - 540039192 + 61 * ((v1 + 10) ^ 0x1B0u), &STACK[0x1940]);
  JUMPOUT(0x10003BC04);
}

uint64_t sub_10003BECC(int a1, int a2)
{
  unsigned int v9 = v6 + a2 + v2;
  *(_DWORD *)(*v5 + 4 * (v9 + 1)) = v3;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v9 < v7) * a1) ^ (v4 + 400))))();
}

uint64_t sub_10003BED4(uint64_t a1)
{
  int v1 = 535753261 * ((a1 - 1922189914 - 2 * (a1 & 0x8D6DB5A6)) ^ 0x8799BB89);
  int v2 = *(_DWORD *)(a1 + 16) + v1;
  int v3 = *(_DWORD *)a1 ^ v1;
  int v4 = *(_DWORD *)(*(void *)(a1 + 24) - 0x9F59A8236606BCLL);
  unsigned int v6 = v4 - 1477598966;
  BOOL v5 = v4 - 1477598966 < 0;
  unsigned int v7 = 1477598966 - v4;
  if (!v5) {
    unsigned int v7 = v6;
  }
  return (*((uint64_t (**)(void))*(&off_100233720 + v2 - 87)
          + ((((v3 - 227975378) < 4 * (unint64_t)v7) * (5 * (v2 ^ 0x2E) - 491)) ^ v2)
          - 1))();
}

uint64_t sub_10003BFA4()
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((v1 == (((v0 - 103) & 0xF1) - 25))
                                              * (((v0 - 1431126106) & 0x554D3E74) + 2472)) ^ v0)))(4294925278);
}

uint64_t sub_10003BFEC()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)((84
                                     * (((((v1 - 119) & 0xBB) - 84) ^ ((((((v1 + 1924885641) & 0x8D4492BB)
                                                                                         - 87) | 0x112) ^ 0x176) == 32)) & 1)) ^ (v1 + 1924885641) & 0x8D4492BB)))();
}

uint64_t sub_10003C098(uint64_t result)
{
  *(_DWORD *)(result + 4) = 559756921;
  return result;
}

uint64_t sub_10003C0A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = qword_100283A10 - (void)&v8 + qword_100282DD0;
  qword_100283A10 = 2121524189 * v2 + 0x3C5299EE51C53936;
  qword_100282DD0 = 2121524189 * (v2 ^ 0xA420799497D4ADAELL);
  int v3 = *(_DWORD *)(a2 + 4);
  unsigned __int8 v4 = -35 * ((qword_100282DD0 + -35 * v2 + 54) ^ 0xAE);
  BOOL v5 = (char *)*(&off_100233720
               + (v4 ^ byte_1001CEA30[byte_1001CB660[v4] ^ 0x13])
               + 30)
     - 8;
  if (v3 == 544568613) {
    __asm { BRAA            X15, X17 }
  }
  if (v3 == 544568620)
  {
    int v6 = **(unsigned __int8 **)(a2 + 8) - 9;
    __asm { BRAA            X3, X17 }
  }
  return 4294925278;
}

void sub_10003C258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13)
{
  a11 = v14;
  a12 = v13;
  a10 = v14;
  a13 = v15 + 1225351577 * (((&a10 | 0x3827ED15) - (&a10 & 0x3827ED15)) ^ 0x1BBD3503) + 436;
  JUMPOUT(0x10003C2A4);
}

uint64_t sub_10003C2DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v9 = v7 - 520049634;
  if (v9 <= 0x40) {
    unsigned int v9 = 64;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((69 * (a5 - v5 - v6 + v9 < 0xF)) ^ 0x5A7u)))();
}

uint64_t sub_10003C348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((*(void *)(v6 + 24) == 0x234F4F45181D6CC9) | a6)))();
}

void sub_10003C378()
{
}

void sub_10003C6AC()
{
}

uint64_t sub_10003C85C(int a1)
{
  *(_DWORD *)(v2 - 120) = (v1 + 1018) | 0x15;
  *(_DWORD *)(v2 - 128) = a1;
  int v3 = *((unsigned __int8 *)*(&off_100233720 + v1 - 945) + (*(unsigned __int8 *)(v2 - 109) ^ 0xA5));
  HIDWORD(v4) = v3 ^ 0x14;
  LODWORD(v4) = (v3 ^ 0x40) << 24;
  return sub_10003D68C((((((v4 >> 30) ^ 0xDB) >> 2) | (((v4 >> 30) ^ 0xDB) << 6)) | ((*((unsigned __int8 *)*(&off_100233720 + (v1 ^ 0x4A3)) + (*(unsigned __int8 *)(v2 - 111) ^ 0x7ALL) - 8) ^ 0x6F) << 16) | ((*((unsigned __int8 *)*(&off_100233720 + v1 - 955) + (*(unsigned __int8 *)(v2 - 112) ^ 0x78) - 4) ^ 0x8B) << 24) | (((*((unsigned char *)*(&off_100233720 + (v1 ^ 0x4B5)) + (*(unsigned __int8 *)(v2 - 110) ^ 0x5DLL) - 12) + (*(unsigned char *)(v2 - 110) ^ 0x52) - 84) ^ 0x5D) << 8)) ^ 0x50E1F67Du);
}

uint64_t sub_10003D68C@<X0>(int a1@<W0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,int a34,int a35,int a36,int a37,int a38,int a39,int a40,int a41,uint64_t a42)
{
  uint64_t v47 = v43 & 0xFFFFFFF8 ^ 0x44498017;
  *(void *)(v46 - 216) = v47;
  int v48 = v43;
  char v49 = *(unsigned char *)(a2 + v47);
  uint64_t v50 = v48 & 0xFFFFFFF3 ^ 0x4449801D;
  *(void *)(v46 - 144) = v50;
  int v51 = *(_DWORD *)(v46 - 120);
  int v52 = *(unsigned __int8 *)(a15 + (v49 ^ (v51 + 44)));
  uint64_t v53 = *(unsigned __int8 *)(a2 + v50) ^ 0x60;
  uint64_t v54 = v48 & 0xFFFFFFF7 ^ 0x4449801D;
  *(void *)(v46 - 152) = v54;
  uint64_t v55 = v48 & 0xFFFFFFFE ^ 0x44498015;
  *(void *)(v46 - 128) = v55;
  int v56 = *(unsigned __int8 *)(a13 + v53) ^ 0xA;
  int v57 = *(unsigned __int8 *)(a13 + (*(unsigned __int8 *)(a2 + v54) ^ 0xC1)) ^ 0xBE;
  LODWORD(v54) = *(unsigned __int8 *)(a14 + (*(unsigned __int8 *)(a2 + v55) ^ 0x66)) ^ 0x83;
  uint64_t v58 = v48 & 0xFFFFFFF0 ^ 0x4449801F;
  *(void *)(v46 - 136) = v58;
  uint64_t v59 = *(unsigned __int8 *)(a2 + v58) ^ 0xE9;
  uint64_t v60 = v48 & 0xFFFFFFF4 ^ 0x4449801F;
  *(void *)(v46 - 168) = v60;
  LODWORD(v59) = *(unsigned __int8 *)(a15 + v59) ^ 0x89;
  int v61 = *(unsigned __int8 *)(a15 + (*(unsigned __int8 *)(a2 + v60) ^ 0xC3));
  uint64_t v62 = v48 ^ 0x44498015u;
  *(void *)(v46 - 176) = v62;
  int v63 = v59 | (v56 << 24);
  LODWORD(v54) = (v54 << 16) | ((*(unsigned __int8 *)(a13 + (*(unsigned __int8 *)(a2 + v62) ^ 0x30)) ^ 0x3A) << 24);
  v61 ^= 0x43u;
  uint64_t v64 = v48 & 0xFFFFFFFD ^ 0x44498017;
  *(void *)(v46 - 160) = v64;
  LODWORD(v54) = v54 & 0xFFFF00FF | (((*(unsigned char *)(a16 + (*(unsigned __int8 *)(a2 + v64) ^ 0xC0))
                                                      + (*(unsigned char *)(a2 + v64) ^ 0xCF)
                                                      - 84) ^ 0xF9) << 8);
  uint64_t v65 = v48 & 0xFFFFFFFB ^ 0x44498015;
  *(void *)(v46 - 224) = v65;
  LODWORD(v59) = *(unsigned __int8 *)(a13 + (*(unsigned __int8 *)(a2 + v65) ^ 0xFCLL)) ^ 0x84;
  int v66 = v52 ^ 0x59;
  uint64_t v67 = v48 & 0xFFFFFFFA ^ 0x44498015;
  uint64_t v68 = v48 & 0xFFFFFFF6 ^ 0x4449801D;
  *(void *)(v46 - 248) = v67;
  *(void *)(v46 - 240) = v68;
  int v69 = (*(unsigned __int8 *)(a14 + (*(unsigned __int8 *)(a2 + v68) ^ 0x5DLL)) ^ 0x50) << 16;
  *(_DWORD *)(v46 - 180) = 1145667615;
  uint64_t v70 = v48 & 0xFFFFFFF5 ^ 0x4449801F;
  *(void *)(v46 - 208) = v70;
  unsigned int v71 = v69 & 0xFFFF00FF | (((*(unsigned char *)(a16 + (*(unsigned __int8 *)(a2 + v70) ^ 0xD5))
                                             + (*(unsigned char *)(a2 + v70) ^ 0xDA)
                                             - 84) ^ 0xCF) << 8) | v61 | (v57 << 24);
  uint64_t v72 = v48 & 0xFFFFFFF1 ^ 0x4449801F;
  *(void *)(v46 - 192) = v72;
  unsigned int v73 = v63 & 0xFFFF00FF | ((*(unsigned char *)(a16 + (*(unsigned __int8 *)(a2 + v72) ^ 0xE4))
                                            + (*(unsigned char *)(a2 + v72) ^ 0xEB)
                                            + 44) << 8);
  *(_DWORD *)(v46 - 196) = v48;
  uint64_t v74 = v48 & 0xFFFFFFFC ^ 0x44498017;
  *(void *)(v46 - 232) = v74;
  int v75 = *(unsigned __int8 *)(a15 + (*(unsigned __int8 *)(a2 + v74) ^ 0xDCLL)) ^ 0x9D;
  uint64_t v76 = v48 & 0xFFFFFFF2 ^ 0x4449801D;
  *(void *)(v46 - 256) = v76;
  LODWORD(v76) = v73 | ((*(unsigned __int8 *)(a14 + (*(unsigned __int8 *)(a2 + v76) ^ 0x92)) ^ 0x6D) << 16);
  uint64_t v204 = v48 & 0xFFFFFFF9 ^ 0x44498017;
  LODWORD(v59) = ((*(unsigned __int8 *)(a14 + (*(unsigned __int8 *)(a2 + v67) ^ 0xA9)) ^ 0xBE) << 16) | (((*(unsigned char *)(a16 + (*(unsigned __int8 *)(a2 + v204) ^ 0x4FLL)) + (*(unsigned char *)(a2 + v204) ^ 0x40) - 84) ^ 0xB7) << 8) | v66 | (v59 << 24);
  unsigned int v77 = a1 ^ a40 ^ ((v75 | v54) - 2 * ((v75 | v54) & 0x69584F4C ^ v75 & 8) - 380088508);
  unsigned int v78 = v45 ^ a41 ^ (v59 - 2 * (v59 & 0xFB9CCBA ^ v66 & 0xA) - 1883648848);
  LODWORD(v76) = v44 ^ a37 ^ (v76 - ((2 * v76) & 0x8A133E) + 4524447);
  unsigned int v79 = v42 ^ a36 ^ (v71 + 368992315 - 2 * (v71 & 0x15FE603F ^ v61 & 4));
  unsigned int v80 = (char *)*(&off_100233720 + v51 - 2039) - 12;
  int v81 = *(_DWORD *)&v80[4 * (HIBYTE(v79) ^ 0x3F)];
  HIDWORD(v82) = ~v81;
  LODWORD(v82) = v81 ^ 0x61CDA04E;
  uint64_t v83 = (char *)*(&off_100233720 + v51 - 2050) - 8;
  int v84 = (v82 >> 1) ^ *(_DWORD *)&v83[4 * (BYTE2(v76) ^ 0x34)] ^ ((BYTE2(v76) ^ 0x68)
                                                               - 257155530
                                                               - 2 * ((WORD1(v76) ^ 0xB768) & 0x37 ^ WORD1(v76) & 1));
  uint64_t v85 = (uint64_t)*(&off_100233720 + SHIDWORD(a11));
  LODWORD(v55) = *(_DWORD *)(v85 + 4 * (v79 ^ 0xC6u)) ^ ((BYTE2(v77) ^ 0xD5)
                                                                          - 257155530
                                                                          - ((2 * (HIWORD(v77) ^ 0x6CD5)) & 0x6C)) ^ ((v79 ^ 0xAB) + 1606927698 + ((2 * (v79 ^ 0xAB) + 254) & 0x1A4 ^ 0xFFEFFBFF)) ^ *(_DWORD *)&v83[4 * (BYTE2(v77) ^ 0x89)];
  int v86 = *(_DWORD *)&v80[4 * (HIBYTE(v78) ^ 0xC8)];
  HIDWORD(v82) = ~v86;
  LODWORD(v82) = v86 ^ 0x61CDA04E;
  LODWORD(v54) = *(_DWORD *)&v83[4 * (BYTE2(v78) ^ 0x8C)] ^ *(_DWORD *)(v85 + 4 * (v76 ^ 0xB6u)) ^ ((v76 ^ 0xDB) + 1606927698 + ((2 * (v76 ^ 0xDB) + 254) & 0x1A4 ^ 0xFFEFFBFF)) ^ ((BYTE2(v78) ^ 0xD0) - 257155530 - 2 * ((BYTE2(v78) ^ 0xD0) & 0x3E ^ HIWORD(v78) & 8));
  int v87 = v54 - 63494580 - ((2 * v54) & 0xF86E4C98);
  int v88 = ((BYTE2(v79) ^ 0xAD) - 257155530 - ((2 * (HIWORD(v79) ^ 0x3FAD)) & 0x6C)) ^ *(_DWORD *)(v85
                                                                                              + 4
                                                                                              * (v77 ^ 0x1Cu)) ^ ((v77 ^ 0x71) + 1606927698 + ((2 * (v77 ^ 0x71) + 254) & 0x1A4 ^ 0xFFEFFBFF)) ^ (v82 >> 1) ^ *(_DWORD *)&v83[4 * (BYTE2(v79) ^ 0xF1)];
  LODWORD(v54) = *(_DWORD *)&v80[4 * (HIBYTE(v77) ^ 0x6C)];
  HIDWORD(v82) = ~v54;
  LODWORD(v82) = v54 ^ 0x61CDA04E;
  LODWORD(v54) = v82 >> 1;
  LODWORD(v59) = *(_DWORD *)&v80[4 * (BYTE3(v76) ^ 0xB7)];
  HIDWORD(v82) = ~v59;
  LODWORD(v82) = v59 ^ 0x61CDA04E;
  int v89 = (v78 ^ 0x10) + 1606927697 - ((2 * (v78 ^ 0x10) + 1934590) & 0x1005A4);
  uint64_t v90 = (uint64_t)*(&off_100233720 + v51 - 2046);
  unsigned int v91 = *(_DWORD *)(v90 + 4 * (BYTE1(v77) ^ 0xDEu)) ^ a33 ^ *(_DWORD *)(v85 + 4 * (v78 ^ 0x7Du)) ^ (v84 - 63494580 - ((2 * v84) & 0xF86E4C98));
  LODWORD(v55) = (v55 - 63494580 - ((2 * v55) & 0xF86E4C98)) ^ *(_DWORD *)(v90 + 4 * (BYTE1(v78) ^ 0x2Fu)) ^ (v82 >> 1);
  int v92 = v55 - ((2 * v55) & 0xE008B64C);
  LODWORD(v55) = *(_DWORD *)(v90 + 4 * (BYTE1(v79) ^ 0x29u)) ^ a35 ^ v54;
  LODWORD(v54) = *(_DWORD *)(v90 + 4 * (BYTE1(v76) ^ 0x66u));
  LODWORD(v76) = v55 ^ v87;
  LODWORD(v59) = v91 ^ v89;
  unsigned int v93 = v54 ^ a34 ^ (v88 - 63494580 - ((2 * v88) & 0xF86E4C98));
  LODWORD(v55) = *(_DWORD *)&v80[4 * ((v91 ^ ~v89) >> 24)];
  HIDWORD(v82) = ~v55;
  LODWORD(v82) = v55 ^ 0x61CDA04E;
  int v94 = v82 >> 1;
  LODWORD(v54) = *(_DWORD *)&v80[4 * (BYTE3(v76) ^ 0x91)];
  HIDWORD(v82) = ~v54;
  LODWORD(v82) = v54 ^ 0x61CDA04E;
  int v95 = v82 >> 1;
  int v96 = *(_DWORD *)&v80[4 * (HIBYTE(v93) ^ 0xA3)];
  HIDWORD(v82) = ~v96;
  LODWORD(v82) = v96 ^ 0x61CDA04E;
  int v97 = v95 ^ ((BYTE2(v93) ^ 0xAC) - 257155530 - ((2 * (HIWORD(v93) ^ 0xA3AC)) & 0x6C)) ^ *(_DWORD *)&v83[4 * (BYTE2(v93) ^ 0xF0)];
  int v98 = (v82 >> 1) ^ *(_DWORD *)&v83[4 * (BYTE2(v59) ^ 0x15)] ^ *(_DWORD *)(v85 + 4 * (v76 ^ 0x7Bu)) ^ ((BYTE2(v59) ^ 0x49) - 257155530 - ((v59 >> 15) & 0x6C)) ^ ((v76 ^ 0x16) + 1606927698 + ((2 * (v76 ^ 0x16) + 254) & 0x1A4 ^ 0xFFEFFBFF));
  unsigned int v99 = v98 - 63494580 - ((2 * v98) & 0xF86E4C98);
  unsigned int v100 = (v92 + 1879333670) ^ HIDWORD(a32);
  unsigned int v101 = (v97 - 63494580 - ((2 * v97) & 0xF86E4C98)) ^ *(_DWORD *)(v90 + 4 * (BYTE1(v59) ^ 0x2Cu));
  LODWORD(v55) = v94 ^ *(_DWORD *)(v85 + 4 * (v93 ^ 3u)) ^ ((v93 ^ 0x6E)
                                                                             + 1606927698
                                                                             + ((2 * (v93 ^ 0x6E) + 254) & 0x1A4 ^ 0xFFEFFBFF)) ^ ((BYTE2(v100) ^ 0x3D) - 257155530 - ((2 * (HIWORD(v100) ^ 0x1E3D)) & 0x6C)) ^ *(_DWORD *)&v83[4 * (BYTE2(v100) ^ 0x61)];
  unsigned int v102 = *(_DWORD *)&v83[4 * (BYTE2(v76) ^ 0x2E)] ^ ((BYTE2(v76) ^ 0x72)
                                                   - 257155530
                                                   - 2 * ((BYTE2(v76) ^ 0x72) & 0x3E ^ WORD1(v76) & 8));
  int v103 = *(_DWORD *)&v80[4 * (HIBYTE(v100) ^ 0x1E)];
  HIDWORD(v82) = ~v103;
  LODWORD(v82) = v103 ^ 0x61CDA04E;
  int v104 = ((v59 ^ 0xFC) + 1606927698 + ((2 * (v59 ^ 0xFC) + 254) & 0x1A4 ^ 0xFFEFFBFF)) ^ *(_DWORD *)(v90 + 4 * (BYTE1(v93) ^ 0xBDu)) ^ *(_DWORD *)(v85 + 4 * (v59 ^ 0x91u)) ^ (v102 - 63494580 - ((2 * v102) & 0xF86E4C98)) ^ (v82 >> 1);
  unsigned int v105 = ((v100 ^ 0x6B) - 1726037377) ^ a32 ^ *(_DWORD *)(v85 + 4 * (v100 ^ 6u)) ^ (v101 - 962002222 - ((2 * v101) & 0x8D5205A4));
  LODWORD(v76) = *(_DWORD *)(v90 + 4 * (BYTE1(v76) ^ 0x57u)) ^ HIDWORD(a29) ^ (v55
                                                                               - 63494580
                                                                               - ((2 * v55) & 0xF86E4C98));
  LODWORD(v59) = (v104 - ((2 * v104) & 0x2D914452) - 1765236183) ^ a31;
  unsigned int v106 = *(_DWORD *)(v90 + 4 * (BYTE1(v100) ^ 0xC0u)) ^ HIDWORD(a31) ^ v99;
  int v107 = *(_DWORD *)&v80[4 * (BYTE3(v59) ^ 0x7B)];
  HIDWORD(v82) = ~v107;
  LODWORD(v82) = v107 ^ 0x61CDA04E;
  LODWORD(v55) = (*(unsigned char *)(v90 + 4 * (BYTE1(v100) ^ 0xC0u)) ^ BYTE4(a31) ^ v99);
  LODWORD(v55) = ((v55 ^ 0xA1) + 1606927698 + ((2 * (v55 ^ 0xA1) + 254) & 0x1A4 ^ 0xFFEFFBFF)) ^ *(_DWORD *)(v85 + 4 * (v55 ^ 0xCC));
  int v108 = *(_DWORD *)&v83[4 * (BYTE2(v105) ^ 0xDB)] ^ ((BYTE2(v105) ^ 0x87)
                                                    - 257155530
                                                    - ((2 * (HIWORD(v105) ^ 0x3A87)) & 0x6C)) ^ (v82 >> 1);
  LODWORD(v55) = (v55 - 63494580 - ((2 * v55) & 0xF86E4C98)) ^ *(_DWORD *)(v90 + 4 * (BYTE1(v105) ^ 0xDEu));
  unsigned int v109 = ((v105 ^ 0x9E) + 1606927698 + ((2 * (v105 ^ 0x9E) + 254) & 0x1A4 ^ 0xFFEFFBFF)) ^ *(_DWORD *)(v85 + 4 * (v105 ^ 0xF3u));
  unsigned int v110 = v109 - 63494580 - ((2 * v109) & 0xF86E4C98);
  unsigned int v111 = (v108 - 63494580 - ((2 * v108) & 0xF86E4C98)) ^ *(_DWORD *)(v90 + 4 * (BYTE1(v106) ^ 0x57u));
  int v112 = *(_DWORD *)&v80[4 * (BYTE3(v76) ^ 0x37)];
  int v113 = ((v76 ^ 0x740CBC3A) >> 16);
  unsigned int v114 = v113 - 257155530 - (((v76 ^ 0x740CBC3A) >> 15) & 0x6C);
  HIDWORD(v82) = ~v112;
  LODWORD(v82) = v112 ^ 0x61CDA04E;
  int v115 = v82 >> 1;
  int v116 = *(_DWORD *)&v80[4 * (HIBYTE(v105) ^ 0x3A)];
  HIDWORD(v82) = ~v116;
  LODWORD(v82) = v116 ^ 0x61CDA04E;
  int v117 = BYTE2(v106) ^ *(_DWORD *)&v83[4 * (BYTE2(v106) ^ 0xF6)] ^ *(_DWORD *)(v90
                                                                             + 4
                                                                             * ((unsigned __int16)(v76 ^ 0xBC3A) >> 8)) ^ 0xC9B38D0 ^ (v82 >> 1);
  unsigned int v118 = ((v59 ^ 0x39) - 1726037377) ^ HIDWORD(a30) ^ *(_DWORD *)(v85
                                                                                 + 4 * (v59 ^ 0x54u)) ^ (v117 - 962002222 - ((2 * v117) & 0x8D5205A4));
  LODWORD(v76) = ((v76 ^ 0x3A) - 1726037377) ^ HIDWORD(a28) ^ *(_DWORD *)(v85
                                                                                         + 4
                                                                                         * (v76 ^ 0x57u)) ^ (v111 - 962002222 - ((2 * v111) & 0x8D5205A4));
  int v119 = *(_DWORD *)&v80[4 * (HIBYTE(v106) ^ 0x7C)];
  HIDWORD(v82) = ~v119;
  LODWORD(v82) = v119 ^ 0x61CDA04E;
  LODWORD(v55) = *(_DWORD *)&v83[4 * (BYTE2(v59) ^ 0x4E)] ^ a29 ^ BYTE2(v59) ^ v115 ^ (v55
                                                                                     - 257155530
                                                                                     - ((2 * v55) & 0xE1583C6C));
  unsigned int v120 = *(_DWORD *)(v90 + 4 * (BYTE1(v59) ^ 0x42u)) ^ a30 ^ v114 ^ *(_DWORD *)&v83[4 * (v113 ^ 0x5C)] ^ (v82 >> 1) ^ v110;
  int v121 = ((v55 ^ 0xD1) + 1606927698 + ((2 * (v55 ^ 0xFA64A5D1) + 254) & 0x1A4 ^ 0xFFEFFBFF)) ^ *(_DWORD *)(v85 + 4 * (v55 ^ 0xBCu));
  unsigned int v122 = v121 - 63494580 - ((2 * v121) & 0xF86E4C98);
  int v123 = *(_DWORD *)&v80[4 * (HIBYTE(v118) ^ 0x5B)];
  HIDWORD(v82) = ~v123;
  LODWORD(v82) = v123 ^ 0x61CDA04E;
  int v124 = (v82 >> 1) ^ *(_DWORD *)(v85 + 4 * (v76 ^ 0x1Fu)) ^ ((v76 ^ 0x72)
                                                                               + 1606927698
                                                                               + ((2 * (v76 ^ 0x72)
                                                                                 + 254) & 0x1A4 ^ 0xFFEFFBFF));
  int v125 = *(_DWORD *)&v80[4 * (BYTE3(v76) ^ 0x28)];
  HIDWORD(v82) = ~v125;
  LODWORD(v82) = v125 ^ 0x61CDA04E;
  int v126 = v82 >> 1;
  unsigned int v127 = v124 - 63494580 - ((2 * v124) & 0xF86E4C98);
  int v128 = *(_DWORD *)&v80[4 * (BYTE3(v55) ^ 0xB9)];
  HIDWORD(v82) = ~v128;
  LODWORD(v82) = v128 ^ 0x61CDA04E;
  int v129 = v82 >> 1;
  LODWORD(v54) = *(_DWORD *)&v80[4 * (HIBYTE(v120) ^ 0xB4)];
  HIDWORD(v82) = ~v54;
  LODWORD(v82) = v54 ^ 0x61CDA04E;
  unsigned int v130 = v129 ^ *(_DWORD *)(v85 + 4 * (v120 ^ 0x8Bu)) ^ ((v120 ^ 0xE6)
                                                                          + 1606927698
                                                                          + ((2 * (v120 ^ 0xE6) + 254) & 0x1A4 ^ 0xFFEFFBFF));
  int v131 = BYTE2(v118) ^ 0x95;
  int v132 = v131 - 257155530 - ((2 * (HIWORD(v118) ^ 0x5B95)) & 0x6C);
  int v133 = v118;
  LODWORD(v74) = (v118 ^ 0xF4)
               + 1606927698
               + ((2 * (v118 ^ 0xF4) + 254) & 0x1A4 ^ 0xFFEFFBFF);
  unsigned int v134 = ((BYTE2(v76) ^ 0x14) - 257155530 - 2 * ((WORD1(v76) ^ 0x2814) & 0x37 ^ WORD1(v76) & 1)) ^ a27 ^ *(_DWORD *)(v90 + 4 * (BYTE1(v118) ^ 0x1Fu)) ^ (v130 - 63494580 - ((2 * v130) & 0xF86E4C98)) ^ *(_DWORD *)&v83[4 * (BYTE2(v76) ^ 0x48)];
  unsigned int v135 = *(_DWORD *)(v90 + 4 * ((unsigned __int16)(v55 ^ 0xA5D1) >> 8)) ^ a28 ^ ((BYTE2(v120) ^ 0x59)
                                                                                                  - 257155530
                                                                                                  - ((2 * (HIWORD(v120) ^ 0xB459)) & 0x6C)) ^ *(_DWORD *)&v83[4 * (BYTE2(v120) ^ 5)] ^ v127;
  LODWORD(v59) = (((v55 ^ 0xFA64A5D1) >> 16)
                - 257155530
                - (((v55 ^ 0xFA64A5D1) >> 15) & 0x6C)) ^ HIDWORD(a27) ^ *(_DWORD *)(v85
                                                                                                + 4 * (v133 ^ 0x99u)) ^ v74 ^ ((v82 >> 1) - 63494580 - ((2 * (v82 >> 1)) & 0xF86E4C98)) ^ *(_DWORD *)&v83[4 * (((v55 ^ 0xFA64A5D1) >> 16) ^ 0x5C)] ^ *(_DWORD *)(v90 + 4 * (BYTE1(v76) ^ 0x12u));
  LODWORD(v76) = *(_DWORD *)(v90 + 4 * (BYTE1(v120) ^ 0x34u)) ^ HIDWORD(a26) ^ v132 ^ *(_DWORD *)&v83[4 * (v131 ^ 0x5C)] ^ v122 ^ v126;
  int v136 = *(_DWORD *)&v80[4 * (BYTE3(v76) ^ 0xEB)];
  HIDWORD(v82) = ~v136;
  LODWORD(v82) = v136 ^ 0x61CDA04E;
  int v137 = (v82 >> 1) - 63494580 - ((2 * (v82 >> 1)) & 0xF86E4C98);
  unsigned int v138 = ((BYTE2(v59) ^ 0x81) - 257155530 - ((v59 >> 15) & 0x6C)) ^ *(_DWORD *)&v83[4
                                                                                                * (BYTE2(v59) ^ 0xDD)];
  unsigned int v139 = ((v59 ^ 0x51) + 1606927698 + ((2 * (v59 ^ 0x51) + 254) & 0x1A4 ^ 0xFFEFFBFF)) ^ *(_DWORD *)(v85 + 4 * (v59 ^ 0x3Cu));
  LODWORD(v67) = *(_DWORD *)&v83[4 * (BYTE2(v134) ^ 0xDB)] ^ ((BYTE2(v134) ^ 0x87)
                                                            - 257155530
                                                            - 2 * ((BYTE2(v134) ^ 0x87) & 0x3E ^ HIWORD(v134) & 8));
  LODWORD(v54) = *(_DWORD *)&v80[4 * (BYTE3(v59) ^ 0x14)];
  HIDWORD(v82) = ~v54;
  LODWORD(v82) = v54 ^ 0x61CDA04E;
  LODWORD(v54) = v82 >> 1;
  int v140 = *(_DWORD *)&v80[4 * (HIBYTE(v135) ^ 0x9A)];
  HIDWORD(v82) = ~v140;
  LODWORD(v82) = v140 ^ 0x61CDA04E;
  LODWORD(v74) = *(_DWORD *)&v83[4 * (((v76 ^ 0xA87CE98B) >> 16) ^ 0x5C)] ^ ((v76 ^ 0xA87CE98B) >> 16) ^ (v139 - 257155530 - ((2 * v139) & 0xE1583C6C));
  int v141 = ((v76 ^ 0x8B) + 1606927698 + ((2 * (v76 ^ 0xA87CE98B) + 254) & 0x1A4 ^ 0xFFEFFBFF)) ^ *(_DWORD *)(v90 + 4 * (BYTE1(v134) ^ 0xDEu)) ^ *(_DWORD *)(v85 + 4 * (v76 ^ 0xE6u)) ^ (v138 - 63494580 - ((2 * v138) & 0xF86E4C98)) ^ (v82 >> 1);
  int v142 = *(_DWORD *)&v80[4 * (HIBYTE(v134) ^ 0x77)];
  HIDWORD(v82) = ~v142;
  LODWORD(v82) = v142 ^ 0x61CDA04E;
  unsigned int v134 = v134;
  LODWORD(v59) = *(_DWORD *)(v90 + 4 * (BYTE1(v59) ^ 0x34u)) ^ a25 ^ ((BYTE2(v135) ^ 0xE9)
                                                                      - 257155530
                                                                      - ((2 * (HIWORD(v135) ^ 0x9AE9)) & 0x6C)) ^ *(_DWORD *)&v83[4 * (BYTE2(v135) ^ 0xB5)] ^ ((v134 ^ 0x9E) + 1606927698 + ((2 * (v134 ^ 0x9E) + 254) & 0x1A4 ^ 0xFFEFFBFF)) ^ v137;
  int v143 = *(_DWORD *)(v90 + 4 * (BYTE1(v76) ^ 0xBu));
  LODWORD(v76) = v59 ^ *(_DWORD *)(v85 + 4 * (v134 ^ 0xF3u));
  LODWORD(v55) = v143 ^ a24 ^ ((v135 ^ 0xA8)
                             + 1606927698
                             + ((2 * (v135 ^ 0xA8) + 254) & 0x1A4 ^ 0xFFEFFBFF)) ^ *(_DWORD *)(v85 + 4 * (v135 ^ 0xC5u)) ^ v54 ^ (v67 - 63494580 - ((2 * v67) & 0xF86E4C98));
  unsigned int v144 = *(_DWORD *)(v90 + 4 * (BYTE1(v135) ^ 0x2Du)) ^ HIDWORD(a25) ^ (v82 >> 1) ^ (v74
                                                                                     - 63494580
                                                                                     - ((2 * v74) & 0xF86E4C98));
  BYTE1(v134) = BYTE1(v55) ^ 0x65;
  LODWORD(v74) = *(_DWORD *)&v80[4 * (BYTE3(v55) ^ 0x6D)];
  HIDWORD(v82) = ~v74;
  LODWORD(v82) = v74 ^ 0x61CDA04E;
  LODWORD(v74) = v82 >> 1;
  int v145 = ((v55 ^ 0x2E0E654A) >> 16);
  LODWORD(v67) = v145 - 257155530 - (((v55 ^ 0x2E0E654A) >> 15) & 0x6C);
  LODWORD(v59) = (v141 + 456244938 - ((2 * v141) & 0x36637D94)) ^ a26;
  int v146 = *(_DWORD *)&v83[4 * (v145 ^ 0x5C)];
  unsigned int v147 = *(_DWORD *)&v80[4 * (BYTE3(v59) ^ 0xFD)];
  int v148 = v146 ^ (~v147 << 31) ^ (v147 >> 1) ^ v67 ^ 0x30E6D027;
  LODWORD(v55) = ((v55 ^ 0x4A) + 1606927697 - ((2 * (v55 ^ 0x4A) + 1934590) & 0x1005A4)) ^ *(_DWORD *)(v85 + 4 * (v55 ^ 0x27u));
  LODWORD(v67) = *(_DWORD *)&v80[4 * (HIBYTE(v144) ^ 0xAE)];
  unsigned int v149 = v148 - 63494580 - ((2 * v148) & 0xF86E4C98);
  HIDWORD(v82) = ~v67;
  LODWORD(v82) = v67 ^ 0x61CDA04E;
  int v150 = (v82 >> 1) ^ *(_DWORD *)(v90 + 4 * (BYTE1(v59) ^ 0xA4u)) ^ (v55 - 63494580 - ((2 * v55) & 0xF86E4C98));
  unsigned int v151 = v150 - 257155530 - ((2 * v150) & 0xE1583C6C);
  int v152 = *(_DWORD *)&v83[4 * (BYTE2(v144) ^ 0x3A)] ^ v74 ^ *(_DWORD *)(v85 + 4 * (v59 ^ 0x4Du)) ^ ((v59 ^ 0x20) + 1606927698 + ((2 * (v59 ^ 0x20) + 254) & 0x1A4 ^ 0xFFEFFBFF)) ^ ((BYTE2(v144) ^ 0x66) - 257155530 - 2 * ((BYTE2(v144) ^ 0x66) & 0x3E ^ HIWORD(v144) & 8));
  LODWORD(v67) = ((v144 ^ 0xB3)
                - ((2 * (v144 ^ 0xB3) + 842892542) & 0x302C0498)
                - 1789531957) ^ *(_DWORD *)(v90 + 4 * BYTE1(v134));
  int v153 = (v67 - 962002222 - ((2 * v67) & 0x8D5205A4)) ^ *(_DWORD *)(v85 + 4 * (v144 ^ 0xDEu));
  LODWORD(v67) = *(_DWORD *)&v83[4 * (BYTE2(v59) ^ 0x40)] ^ ((BYTE2(v59) ^ 0x1C)
                                                           - 257155530
                                                           - ((2 * (WORD1(v59) ^ 0xFD1C)) & 0x6C));
  int v154 = v67 ^ v153 ^ 0x431D28D3;
  v153 ^= 0x6500C283u;
  LODWORD(v67) = v67 ^ 0xD9E215AF ^ -(v67 ^ 0xD9E215AF) ^ (v154 + v153 + 1);
  int v155 = *(_DWORD *)&v80[4 * ((v76 ^ 0x3F162902) >> 24)];
  HIDWORD(v82) = ~v155;
  LODWORD(v82) = v155 ^ 0x61CDA04E;
  unsigned int v156 = ((v76 ^ 0x3F162902) >> 16) ^ a23 ^ *(_DWORD *)&v83[4 * (((v76 ^ 0x3F162902) >> 16) ^ 0x5C)] ^ v151;
  LODWORD(v59) = (v82 >> 1) ^ HIDWORD(a22) ^ (v67 + v153);
  unsigned int v157 = *(_DWORD *)(v90 + 4 * (BYTE1(v76) ^ 0xCBu)) ^ HIDWORD(a23) ^ (v152 - 63494580 - ((2 * v152) & 0xF86E4C98));
  unsigned int v158 = *(_DWORD *)(v90 + 4 * (BYTE1(v144) ^ 0x7Cu)) ^ HIDWORD(a24) ^ ((v76 ^ 2)
                                                                        + 1606927698
                                                                        + ((2 * (v76 ^ 0x3F162902) + 254) & 0x1A4 ^ 0xFFEFFBFF)) ^ *(_DWORD *)(v85 + 4 * (v76 ^ 0x6Fu)) ^ v149;
  int v159 = ((BYTE2(v158) ^ 0xE9) - 257155530 - ((2 * (HIWORD(v158) ^ 0xB8E9)) & 0x6C)) ^ *(_DWORD *)&v83[4 * (BYTE2(v158) ^ 0xB5)];
  unsigned int v160 = v159 - 63494580 - ((2 * v159) & 0xF86E4C98);
  LODWORD(v67) = *(_DWORD *)&v80[4 * (HIBYTE(v156) ^ 0x9D)];
  HIDWORD(v82) = ~v67;
  LODWORD(v82) = v67 ^ 0x61CDA04E;
  LODWORD(v67) = v82 >> 1;
  int v161 = *(_DWORD *)&v80[4 * (HIBYTE(v157) ^ 0x61)];
  HIDWORD(v82) = ~v161;
  LODWORD(v82) = v161 ^ 0x61CDA04E;
  int v162 = *(_DWORD *)(v85 + 4 * (v158 ^ 0xC5u)) ^ *(_DWORD *)&v83[4 * (BYTE2(v156) ^ 0x28)] ^ ((v158 ^ 0xA8) + 1606927698 + ((2 * (v158 ^ 0xA8) + 254) & 0x1A4 ^ 0xFFEFFBFF)) ^ (v82 >> 1) ^ ((BYTE2(v156) ^ 0x74) - 257155530 - 2 * ((BYTE2(v156) ^ 0x74) & 0x3E ^ HIWORD(v156) & 8));
  LODWORD(v74) = v67 ^ ((BYTE2(v59) ^ 0xE6) - 257155530 - 2 * ((WORD1(v59) ^ 0xB0E6) & 0x37 ^ WORD1(v59) & 1)) ^ *(_DWORD *)&v83[4 * (BYTE2(v59) ^ 0xBA)];
  int v163 = *(_DWORD *)&v80[4 * (HIBYTE(v158) ^ 0xB8)];
  HIDWORD(v82) = ~v163;
  LODWORD(v82) = v163 ^ 0x61CDA04E;
  int v164 = ((BYTE2(v157) ^ 8) - 257155530 - ((v157 >> 15) & 0x6C)) ^ *(_DWORD *)&v83[4 * (BYTE2(v157) ^ 0x54)] ^ ((v59 ^ 0x44) + 1606927697 - ((2 * (v59 ^ 0x44) + 1934590) & 0x1005A4)) ^ *(_DWORD *)(v85 + 4 * (v59 ^ 0x29u)) ^ (v82 >> 1);
  LODWORD(v76) = *(_DWORD *)(v90 + 4 * (BYTE1(v59) ^ 0xDDu)) ^ HIDWORD(a21) ^ (v162
                                                                               - 63494580
                                                                               - ((2 * v162) & 0xF86E4C98));
  int v165 = *(_DWORD *)&v80[4 * (BYTE3(v59) ^ 0xB0)];
  HIDWORD(v82) = ~v165;
  LODWORD(v82) = v165 ^ 0x61CDA04E;
  unsigned int v166 = *(_DWORD *)(v90 + 4 * (BYTE1(v156) ^ 0xBDu)) ^ a22 ^ (v164 - 63494580 - ((2 * v164) & 0xF86E4C98));
  unsigned int v167 = *(_DWORD *)(v90 + 4 * (BYTE1(v157) ^ 0x8Fu)) ^ HIDWORD(a20) ^ *(_DWORD *)(v85
                                                                                   + 4
                                                                                   * (v156 ^ 0xB4u)) ^ ((v156 ^ 0xD9) + 1606927698 + ((2 * (v156 ^ 0xD9) + 254) & 0x1A4 ^ 0xFFEFFBFF)) ^ (v82 >> 1) ^ v160;
  LODWORD(v59) = ((v157 ^ 0x85)
                + 1606927698
                + ((2 * (v157 ^ 0x85) + 254) & 0x1A4 ^ 0xFFEFFBFF)) ^ a21 ^ *(_DWORD *)(v85 + 4 * (v157 ^ 0xE8u)) ^ *(_DWORD *)(v90 + 4 * (BYTE1(v158) ^ 0x2Du)) ^ (v74 - 63494580 - ((2 * v74) & 0xF86E4C98));
  int v168 = *(_DWORD *)&v80[4 * (HIBYTE(v167) ^ 0x18)];
  HIDWORD(v82) = ~v168;
  LODWORD(v82) = v168 ^ 0x61CDA04E;
  LODWORD(v74) = ((BYTE2(v59) ^ 0x66) - 257155530 - 2 * ((BYTE2(v59) ^ 0x66) & 0x3E ^ WORD1(v59) & 8)) ^ *(_DWORD *)&v83[4 * (BYTE2(v59) ^ 0x3A)];
  int v169 = ((v82 >> 1) - 257155530 - ((2 * (v82 >> 1)) & 0xE1583C6C)) ^ *(_DWORD *)&v83[4 * (BYTE2(v166) ^ 0x40)];
  LODWORD(v67) = *(_DWORD *)&v80[4 * (HIBYTE(v166) ^ 0xEF)];
  HIDWORD(v82) = ~v67;
  LODWORD(v82) = v67 ^ 0x61CDA04E;
  int v170 = (v82 >> 1) ^ *(_DWORD *)(v85 + 4 * (v167 ^ 0x90u)) ^ ((v167 ^ 0xFD)
                                                                                + 1606927698
                                                                                + ((2 * (v167 ^ 0xFD)
                                                                                  + 254) & 0x1A4 ^ 0xFFEFFBFF));
  int v171 = v74 - 63494580 - ((2 * v74) & 0xF86E4C98);
  LODWORD(v74) = *(_DWORD *)(v85 + 4 * (v76 ^ 0x27u)) ^ ((v76 ^ 0x4A)
                                                                          + 1606927698
                                                                          + ((2 * (v76 ^ 0x4A) + 254) & 0x1A4 ^ 0xFFEFFBFF));
  LODWORD(v55) = *(_DWORD *)&v80[4 * (BYTE3(v59) ^ 0xAE)];
  HIDWORD(v82) = ~v55;
  LODWORD(v82) = v55 ^ 0x61CDA04E;
  LODWORD(v74) = (v82 >> 1) ^ *(_DWORD *)&v83[4 * (BYTE2(v167) ^ 0xF)] ^ (v74 - 257155530 - ((2 * v74) & 0xE1583C6C));
  LODWORD(v67) = *(_DWORD *)&v80[4 * (BYTE3(v76) ^ 0xDC)];
  HIDWORD(v82) = ~v67;
  LODWORD(v82) = v67 ^ 0x61CDA04E;
  LODWORD(v54) = v169 - 63494580 - ((2 * v169) & 0xF86E4C98);
  int v172 = ((BYTE2(v76) ^ 0xE) - 257155530 - ((2 * (WORD1(v76) ^ 0xDC0E)) & 0x6C)) ^ a20 ^ *(_DWORD *)(v90 + 4 * (BYTE1(v59) ^ 0x7Cu)) ^ *(_DWORD *)&v83[4 * (BYTE2(v76) ^ 0x52)] ^ (v170 - 63494580 - ((2 * v170) & 0xF86E4C98));
  int v173 = v59;
  LODWORD(v55) = (v59 ^ 0xB3)
               + 1606927698
               + ((2 * (v59 ^ 0xB3) + 254) & 0x1A4 ^ 0xFFEFFBFF);
  LODWORD(v59) = *(_DWORD *)(v90 + 4 * (BYTE1(v167) ^ 0x1Bu)) ^ HIDWORD(a19) ^ *(_DWORD *)(v85
                                                                                           + 4
                                                                                           * (v166 ^ 0x4Du)) ^ ((v166 ^ 0x20) + 1606927698 + ((2 * (v166 ^ 0x20) + 254) & 0x1A4 ^ 0xFFEFFBFF)) ^ (v82 >> 1) ^ v171;
  LODWORD(v76) = v55 ^ HIDWORD(a18) ^ *(_DWORD *)(v90 + 4 * (BYTE1(v76) ^ 0x65u)) ^ *(_DWORD *)(v85
                                                                                                + 4 * (v173 ^ 0xDEu)) ^ v54;
  int v174 = *(_DWORD *)(v90 + 4 * (BYTE1(v166) ^ 0xA4u));
  int v175 = v76 ^ BYTE2(v166);
  unsigned int v176 = v174 ^ a19 ^ (v74 - 63494580 - ((2 * v74) & 0xF86E4C98));
  int v177 = (v174 ^ a19 ^ (v74 + 76 - ((2 * v74) & 0x98)) ^ BYTE2(v167));
  int v178 = *(_DWORD *)&v80[4 * ((v175 ^ 0x7641388Bu) >> 24)];
  HIDWORD(v82) = ~v178;
  LODWORD(v82) = v178 ^ 0x61CDA04E;
  LODWORD(v55) = v82 >> 1;
  int v179 = *(_DWORD *)&v80[4 * ((v172 ^ 0xF7E9CFA8) >> 24)];
  HIDWORD(v82) = ~v179;
  LODWORD(v82) = v179 ^ 0x61CDA04E;
  int v180 = v82 >> 1;
  unsigned int v181 = (((v175 ^ 0x7641388Bu) >> 16) - 257155530 - ((v76 >> 15) & 0x6C)) ^ *(_DWORD *)&v83[4 * (((v175 ^ 0x7641388Bu) >> 16) ^ 0x5C)];
  int v182 = *(_DWORD *)&v80[4 * (HIBYTE(v176) ^ 0xE7)];
  HIDWORD(v82) = ~v182;
  LODWORD(v82) = v182 ^ 0x61CDA04E;
  int v183 = v82 >> 1;
  int v184 = v55 ^ *(_DWORD *)(v85 + 4 * (v177 ^ 0x18u)) ^ (((v172 ^ 0xF7E9CFA8) >> 16)
                                                        - 257155530
                                                        - (((v172 ^ 0xF7E9CFA8) >> 15) & 0x6C)) ^ *(_DWORD *)&v83[4 * (((v172 ^ 0xF7E9CFA8) >> 16) ^ 0x5C)] ^ ((v177 ^ 0x75) + 1606927698 + ((2 * (v177 ^ 0x75) + 254) & 0x1A4 ^ 0xFFEFFBFF));
  unsigned int v185 = (v184 - 63494580 - ((2 * v184) & 0xF86E4C98)) ^ *(_DWORD *)(v90 + 4 * (BYTE1(v59) ^ 0xECu));
  LODWORD(v74) = v180 ^ *(_DWORD *)&v83[4 * (BYTE2(v59) ^ 0xA7)] ^ ((BYTE2(v59) ^ 0xFB)
                                                                  - 257155530
                                                                  - ((2 * (WORD1(v59) ^ 0x57FB)) & 0x6C)) ^ ((v175 ^ 0x8B) + 1606927698 + ((2 * (v175 ^ 0x7641388B) + 254) & 0x1A4 ^ 0xFFEFFBFF)) ^ *(_DWORD *)(v85 + 4 * (v175 ^ 0xE6u));
  LODWORD(v80) = *(_DWORD *)&v80[4 * (BYTE3(v59) ^ 0x57)];
  HIDWORD(v82) = ~v80;
  LODWORD(v82) = v80 ^ 0x61CDA04E;
  LODWORD(v74) = (v74 - 63494580 - ((2 * v74) & 0xF86E4C98)) ^ *(_DWORD *)(v90 + 4 * (BYTE1(v176) ^ 0x6Du));
  LODWORD(v80) = ((v172 ^ 0xA8) + 1606927698 + ((2 * (v172 ^ 0xF7E9CFA8) + 254) & 0x1A4 ^ 0xFFEFFBFF)) ^ ((BYTE2(v176) ^ 0x31) - 257155530 - ((2 * (HIWORD(v176) ^ 0xE731)) & 0x6C)) ^ *(_DWORD *)(v85 + 4 * (v172 ^ 0xC5u)) ^ (v82 >> 1) ^ *(_DWORD *)&v83[4 * (BYTE2(v176) ^ 0x6D)];
  LODWORD(v80) = a11 ^ *(_DWORD *)(v90 + 4 * (BYTE1(v76) ^ 0xDAu)) ^ (v80
                                                                      - 63494580
                                                                      - ((2 * v80) & 0xF86E4C98));
  LODWORD(v76) = (v74 - 575431397 - ((2 * v74) & 0xBB673A36)) ^ a18;
  unsigned int v186 = (v185 + 554151377 - ((2 * v185) & 0x420F5BA2)) ^ HIDWORD(a17);
  unsigned int v187 = *(_DWORD *)(v90 + 4 * (BYTE1(v172) ^ 0x2Du)) ^ a17 ^ ((v59 ^ 0x2F)
                                                               + 1606927698
                                                               + ((2 * (v59 ^ 0x2F) + 254) & 0x1A4 ^ 0xFFEFFBFF)) ^ v183 ^ *(_DWORD *)(v85 + 4 * (v59 ^ 0x42u)) ^ (v181 - 63494580 - ((2 * v181) & 0xF86E4C98));
  BYTE2(v172) = BYTE2(v80) ^ 0x8C;
  uint64_t v188 = (uint64_t)*(&off_100233720 + (int)a10);
  unsigned int v189 = *(_DWORD *)(v46 - 120);
  uint64_t v190 = (char *)*(&off_100233720 + (int)(v189 - 2008)) - 4;
  uint64_t v191 = (uint64_t)*(&off_100233720 + SHIDWORD(a9));
  LODWORD(v74) = (*(_DWORD *)(v191 + 4 * (BYTE2(v76) ^ 0x9Eu)) - 1954298523) ^ (*(_DWORD *)(v188
                                                                                            + 4
                                                                                            * ((*(unsigned char *)(v90 + 4 * (BYTE1(v172) ^ 0x2Du)) ^ a17 ^ ((v59 ^ 0x2F) + 82 + ~((2 * (v59 ^ 0x2F) - 2) & 0xA4)) ^ v183 ^ *(unsigned char *)(v85 + 4 * (v59 ^ 0x42u)) ^ (v181 + 76 - ((2 * v181) & 0x98))) ^ 0xC9u))
                                                                                - 1300401199);
  LODWORD(v67) = *(_DWORD *)(v188 + 4 * (v80 ^ 0xC8u));
  int v192 = (*(_DWORD *)(v191 + 4 * (BYTE2(v187) ^ 0x38u)) - 1954298523) ^ (*(_DWORD *)&v190[4
                                                                                          * ((v80 ^ 0x898C5DC8) >> 24)]
                                                                         + 117600559) ^ (*(_DWORD *)(v188 + 4 * (v76 ^ 0xA2u))
                                                                                       - 1300401199);
  BYTE2(v179) = BYTE2(v186) ^ 0x1D;
  LODWORD(v85) = *(_DWORD *)(v188 + 4 * (v186 ^ 0xB9u));
  uint64_t v193 = *(unsigned int *)&v190[4 * (BYTE3(v76) ^ 0xE7)];
  LODWORD(v188) = *(_DWORD *)&v190[4 * (HIBYTE(v187) ^ 0xB8)];
  unsigned int v194 = (char *)*(&off_100233720 + SHIDWORD(a10)) - 12;
  LODWORD(v80) = (v74 - 1233542338 - ((2 * v74) & 0x6CF3467C)) ^ *(_DWORD *)&v194[4 * (BYTE1(v80) ^ 0x61)] ^ (*(_DWORD *)&v190[4 * (HIBYTE(v186) ^ 0x65)] + 117600559);
  uint64_t v195 = *(unsigned int *)&v194[4 * (BYTE1(v187) ^ 0xE9)];
  LODWORD(v74) = *(_DWORD *)&v194[4 * ((unsigned __int16)(v186 ^ 0x74B9) >> 8)];
  int v196 = *(_DWORD *)(v191 + 4 * BYTE2(v172));
  LODWORD(v90) = v74 ^ a12 ^ (v192 - 1233542338 - ((2 * v192) & 0x6CF3467C));
  LODWORD(v80) = HIDWORD(a6) ^ HIDWORD(a17) ^ (v80 + 554151377 - ((2 * v80) & 0x420F5BA2));
  LODWORD(v76) = *(_DWORD *)&v194[4 * (BYTE1(v76) ^ 0xA0)] ^ HIDWORD(a6) ^ (v67
                                                                          - ((2 * v67 + 1694164898) & 0x6CF3467C)
                                                                          + 1761023759) ^ (v188 + 117600559) ^ (*(_DWORD *)(v191 + 4 * BYTE2(v179)) - 1954298523);
  uint64_t v197 = (uint64_t)*(&off_100233720 + (int)(v189 - 1956));
  *(unsigned char *)(a7 + v204) = *(unsigned char *)(v197 + (BYTE1(v90) ^ 0x99)) ^ 0x83;
  unint64_t v198 = (char *)*(&off_100233720 + (int)(v189 - 1977)) - 8;
  *(unsigned char *)(a7 + *(void *)(v46 - 256)) = (v198[BYTE2(v80) ^ 0xADLL] + 55) ^ 0xC5;
  unint64_t v199 = (char *)*(&off_100233720 + (int)(v189 - 1954)) - 12;
  *(unsigned char *)(a7 + *(void *)(v46 - 216)) = v199[v90 ^ 0xFCLL] ^ 0xDC;
  *(unsigned char *)(a7 + *(void *)(v46 - 240)) = (v198[BYTE2(v76) ^ 0x8CLL] + 55) ^ 0x47;
  unint64_t v200 = (char *)*(&off_100233720 + SHIDWORD(a8)) - 12;
  *(unsigned char *)(a7 + *(void *)(v46 - 224)) = (v200[BYTE3(v90) ^ 0xDELL] - 88) ^ 0x1B;
  *(unsigned char *)(a7 + *(void *)(v46 - 248)) = ((v198[BYTE2(v90) ^ 0x15] + ((v198[BYTE2(v90) ^ 0x15] + 55) ^ 0xDA) + 56) ^ 0xFE)
                                          + v198[BYTE2(v90) ^ 0x15]
                                          + 55;
  uint64_t v201 = a9 ^ v195 ^ (v196 - 1954298523) ^ (v85 - 1300401199) ^ (v193 - ((2 * v193 + 235201118) & 0x6CF3467C) - 1115941779);
  *(unsigned char *)(a7 + *(void *)(v46 - 232)) = v199[v201 ^ 5] ^ 0x2E;
  *(unsigned char *)(a7 + *(void *)(v46 - 144)) = (v200[(v80 >> 24) ^ 0x4ELL] - 88) ^ 0xE6;
  *(unsigned char *)(a7 + *(void *)(v46 - 152)) = (v200[BYTE3(v76) ^ 0x9CLL] - 88) ^ 0xB8;
  uint64_t v202 = *(void *)(v46 - 176);
  *(unsigned char *)(a7 + v202) = (v200[BYTE3(v201) ^ 0x67] - 88) ^ 0x91;
  *(unsigned char *)(a7 + *(void *)(v46 - 168)) = v199[v76 ^ 0xF2] ^ 0x24;
  *(unsigned char *)(a7 + *(void *)(v46 - 208)) = *(unsigned char *)(v197 + (BYTE1(v76) ^ 0x1ELL)) ^ 0x20;
  *(unsigned char *)(a7 + *(void *)(v46 - 160)) = *(unsigned char *)(v197 + (BYTE1(v201) ^ 0x33)) ^ 0x39;
  *(unsigned char *)(a7 + *(void *)(v46 - 192)) = *(unsigned char *)(v197 + (BYTE1(v80) ^ 0xBCLL)) ^ 0xF7;
  *(unsigned char *)(a7 + *(void *)(v46 - 136)) = v199[v80 ^ 0x9FLL] ^ 0xDC;
  *(unsigned char *)(a7 + *(void *)(v46 - 128)) = (v198[BYTE2(v201) ^ 0xDLL] + 55) ^ 0x8E;
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a42 + 8 * (int)((241 * (((v202 + 1145667621 - 2 * ((v202 + 16) & *(_DWORD *)(v46 - 180) ^ *(_DWORD *)(v46 - 196) & 0xA)) ^ 0x44498015u) < HIDWORD(a12))) ^ (v189 - 665))))(v201, 220, v189, 554151377, HIDWORD(a17), v193, 117600559, v195, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32);
}

uint64_t sub_10003F890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34)
{
  LODWORD(STACK[0x540]) ^= a34;
  return sub_10004CACC(a1, 781115828);
}

uint64_t sub_10003F8B4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((224 * ((((v1 - 1293) ^ 0x178) & a1) != (v1 ^ 0x67D))) ^ v1)))();
}

uint64_t sub_10003F8FC()
{
  return sub_10003F904();
}

uint64_t sub_10003F904(uint64_t a1, uint64_t a2, int8x16_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  int v42 = *(uint64_t (**)(uint64_t, uint64_t, void, void, void, uint64_t, uint64_t))(v37 + 8 * v33);
  unsigned int v44 = *(_DWORD *)(v41 - 148);
  unsigned int v43 = *(_DWORD *)(v41 - 144);
  unsigned int v46 = *(_DWORD *)(v41 - 140);
  unsigned int v45 = *(_DWORD *)(v41 - 136);
  uint64_t v47 = v45;
  int v48 = *(unsigned char *)(v41 - 124) ^ 0x22;
  if (v48 == 2)
  {
    int8x16x4_t v78 = vld4q_s8(v32);
    int v65 = a7 + a8 - 691;
    uint8x16_t v66 = (uint8x16_t)veorq_s8(v78.val[1], a3);
    _Q22 = vmovl_u8(*(uint8x8_t *)v66.i8);
    _Q21 = vmovl_high_u8(v66);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    unsigned int v71 = (_DWORD *)(v31 + 4 * (v38 + 231123165));
    int v72 = *(v71 - 8) ^ *(v71 - 3);
    int v73 = v72 + v35 - ((v65 ^ 0x2CB32EC) & (2 * v72));
    int v74 = *(v71 - 16) ^ *(v71 - 14);
    HIDWORD(v75) = v74 ^ 0x1659910 ^ v73;
    LODWORD(v75) = v74 ^ ~v73;
    _DWORD *v71 = (v75 >> 31) + v35 - ((2 * (v75 >> 31)) & 0x2CB3220);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, void, uint64_t))(v37
                                                                                         + 8
                                                                                         * ((1373 * (v40 == 231123102)) ^ v65)))(a1, a2, v47, v44, v43, a1);
  }
  else if (v48 == 1)
  {
    unint64_t v76 = __PAIR64__(v45, v46);
    int8x16x4_t v77 = vld4q_s8(v32);
    uint8x16_t v49 = (uint8x16_t)veorq_s8(v77.val[2], a3);
    _Q26 = vmovl_high_u8(v49);
    _Q25 = vmovl_u8(*(uint8x8_t *)v49.i8);
    __asm
    {
      SHLL2           V25.4S, V25.8H, #0x10
      SHLL2           V26.4S, V26.8H, #0x10
    }
    int v56 = (char *)*(&off_100233720 + (int)a2 - 301) - 8;
    uint64_t v57 = *((unsigned int *)*(&off_100233720 + HIDWORD(a21)) + a1 + v38 - 1);
    int v58 = (v44 ^ v34)
        + v39
        + ((v46 ^ v34) & (v43 ^ v34) | (v45 ^ v34) & (a2 ^ 0x35B ^ v43 ^ 0xF9DF6FF4))
        + v57
        + (*(_DWORD *)(v31 + 4 * (v56[a1 + v38] - 55)) ^ v35);
    int v59 = v58 + v34 - (v36 & (2 * v58));
    uint64_t v60 = (uint64_t)*(&off_100233720 + (int)a2 - 312);
    unsigned int v61 = v59 ^ v34;
    unsigned int v62 = v61 << (*(unsigned char *)(v60 + a1 + v38) - 9);
    uint64_t v63 = v61 >> (9 - *(unsigned char *)(v60 + a1 + v38));
    HIDWORD(a16) = *(unsigned __int8 *)(v41 - 124) ^ 0x22;
    return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, void, uint64_t, _UNKNOWN **, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t, void, void, void, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * ((859 * (a1 + 1 == v40)) ^ a2)))(a1, a2, v45, v63, (v62 | v63) + (v43 ^ v34) + v34 - (v36 & (2 * ((v62 | v63) + (v43 ^ v34)))), v57, &off_100233720, v56, a10, a11, a12, a13, a14, a15, a16, a17, __PAIR64__(v43, v44), v76, v42,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31);
  }
  else
  {
    *(_DWORD *)(v41 - 148) = 2 * (v44 ^ v34) + v34 - (v36 & (4 * (v44 ^ v34)));
    *(_DWORD *)(v41 - 144) = 2 * (v43 ^ v34) + v34 - (v36 & (4 * (v43 ^ v34)));
    *(_DWORD *)(v41 - 140) = 2 * (v46 ^ v34) + v34 - (v36 & (4 * (v46 ^ v34)));
    *(_DWORD *)(v41 - 136) = 2 * (v45 ^ v34) + v34 - (v36 & (4 * (v45 ^ v34)));
    return v42(a1, a2, v45, v44, v43, a7, a8);
  }
}

void sub_10003FD3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15)
{
  *(_DWORD *)(v18 - 132) = (a6 ^ v16) + (a15 ^ v16) + v16 - ((((a6 ^ v16) + (a15 ^ v16)) << ((v15 - 76) ^ 0x3C)) & v17);
  JUMPOUT(0x10003FD90);
}

void sub_10003FE14()
{
}

void sub_10003FE20(uint64_t a1@<X8>, int a2, uint64_t a3, int a4)
{
  int v8 = 1641900571 - v5 - (((v7 ^ 0x682) - 1091207214) & (80040724 - v6));
  unsigned int v9 = 108757529 * ((((2 * &a2) | 0x329BD094) - &a2 - 424536138) ^ 0xF9D18A61);
  a3 = v4;
  a4 = v8 ^ v9;
  a2 = v9 + (v7 ^ 0x682) + 1154;
  (*(void (**)(int *))(a1 + 8 * (v7 ^ 0xF44)))(&a2);
  JUMPOUT(0x100021848);
}

uint64_t sub_10003FEC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  *(unsigned char *)(a1 + (v4 + v7) + 20) = *(unsigned char *)(a2 + (v4 + v7));
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((v4 + ((v3 + v5) & v6) - 1038 == ((((v3 + v5) & v6) - 966) ^ a3))
                                * (((((v3 + v5) & v6) - 1029) | 3) ^ 0xC)) ^ (((v3 + v5) & v6) - 235))))();
}

uint64_t sub_10003FF1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v15 - 112) = v14
                         + 1374699841 * ((((v15 - 128) | 0xC69197A2) - ((v15 - 128) & 0xC69197A2)) ^ 0xAB658FAB)
                         + 117;
  *(void *)(v15 - 128) = v12;
  *(void *)(v15 - 120) = a12;
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v14 ^ 0xE67)))(v15 - 128);
  return sub_10003FF7C(v16);
}

uint64_t sub_10003FFB8(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((((1025 * (a3 ^ 0x45E) - 247439461) & 0xEBF9FEE ^ 0xFFFFFC77)
                                      + ((1025 * (a3 ^ 0x45E) - 2048) | 0x410))
                                     * (v3 < 0x20)) ^ (1025 * (a3 ^ 0x45E)))))();
}

uint64_t sub_100040014@<X0>(int a1@<W0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * ((981
                                * (*(_DWORD *)(a18
                                             + 4 * (((139 * (v19 ^ 0x6C5)) ^ (v19 - 323 + a2)) + a1)) != v18)) ^ (v19 - 1224))))();
}

uint64_t sub_100040068@<X0>(int a1@<W8>)
{
  int v1 = (unint64_t *)STACK[0x588];
  STACK[0x350] = STACK[0x2B8];
  STACK[0x3A0] = *v1;
  return sub_100043524(a1);
}

uint64_t sub_1000400D4(_DWORD *a1)
{
  unsigned int v1 = 1178560073 * ((2 * (a1 & 0x7B1A53C3) - a1 - 2065322948) ^ 0x3E71D45E);
  unsigned int v2 = a1[1] + v1;
  return (*((uint64_t (**)(void))*(&off_100233720 + (int)(v2 - 1377))
          + (int)(((((*a1 - v1) ^ 0x81659910) - 1 < 0x63) * ((v2 + 565) ^ 0x9AF ^ (193 * (v2 ^ 0x5F1)))) ^ v2)
          - 1))();
}

void sub_100040178(uint64_t a1@<X8>)
{
  int v7 = ((-737582213 - ((v6 - 144) | 0xD409637B) + ((v6 - 144) | 0x2BF69C84)) ^ 0x9162E4E6) * v3;
  *(_DWORD *)(v6 - 144) = v7 + v1 - 1265;
  *(_DWORD *)(v6 - 116) = v7 + v2 - 193604614 + v1 - 214;
  *(void *)(v6 - 136) = a1;
  *(void *)(v6 - 128) = v5;
  (*(void (**)(uint64_t))(v4 + 8 * (v1 + 650)))(v6 - 144);
  JUMPOUT(0x100022D14);
}

uint64_t sub_1000401F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v18 - 120) = v17 + 1178560073 * ((v18 - 1915282224 - 2 * ((v18 - 136) & 0x8DD71D58)) ^ 0x3743653A) + 510;
  *(void *)(v18 - 112) = v15;
  *(void *)(v18 - 128) = a14;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v17 + 1073)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (((*(_DWORD *)(v18 - 136) > (v14 + 3301))
                                              * (((v17 - 1030) | 0x100) + 622)) ^ v17)))(v19);
}

uint64_t sub_10004028C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((v2 + 419936724) & 0xE6F840EF ^ (v2 + 602302385) & 0xDC1997CE ^ 0x758)
                                     * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1000402E8(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5
                                                     + 8
                                                     * ((234
                                                       * ((((v3 + v2 + 605440130) < 8) ^ (((v1 + 95) | 0x88) - 107)) & 1)) ^ (v1 - 1606))))(a1, v4);
}

uint64_t sub_100040354()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((22
                                * (v1 + v3 - 1 < ((v2 + 2004498430) & 0x8885C57F)
                                               + ((v2 + 728117266) & 0xD499CFF4)
                                               + 2147480734)) ^ v2)))();
}

void sub_1000403C4()
{
}

uint64_t sub_100040438()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((17 * (v2 ^ 0x3B3) - 824) ^ v2 ^ 0x345) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_100040478()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v1 + v0 - 1809645535 < ((v2 + 724978559) & 0xD4C9B55F) - 1108)
                                * ((v2 + 724978559) ^ 0x2B364E23)) ^ v2)))();
}

void sub_1000404E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  *(_DWORD *)(v9 - 120) = v8;
  *(_DWORD *)(v9 - 116) = v10;
  *(_DWORD *)(v9 - 124) = v8 & 0xFFFFFFF8;
  *(_DWORD *)(v9 - 128) = (a8 + 1381616708) & 0xADA633AF;
  JUMPOUT(0x100040554);
}

uint64_t sub_10004062C@<X0>(int a1@<W6>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((a2 - 1575261667) < 0x38) * (((a1 + v3 - 390) | 0x210) ^ 0x53F)) ^ (a1 + v3 - 128))))();
}

uint64_t sub_100040670()
{
  int v0 = *(&off_100233720
       + ((-35 * ((qword_100282DD0 - dword_100283880) ^ 0xAE)) ^ byte_1001CE730[byte_1001CB460[(-35 * ((qword_100282DD0 - dword_100283880) ^ 0xAE))] ^ 0x5E])
       - 62);
  unsigned __int8 v1 = -35 * ((qword_100282DD0 - *v0) ^ 0xAE);
  uint64_t v2 = (uint64_t)*(&off_100233720 + (byte_1001CE730[byte_1001CB460[v1] ^ 0xFB] ^ v1) - 115);
  uint64_t v3 = *v0 - (void)&v8 + *(void *)(v2 - 4);
  void *v0 = 2121524189 * v3 + 0x3C5299EE51C53936;
  *(void *)(v2 - 4) = 2121524189 * (v3 ^ 0xA420799497D4ADAELL);
  unsigned int v10 = 1451 - 1759421093 * ((2 * (&v9 & 0x65E3A2C8) - &v9 - 1709417168) ^ 0x2961ED64);
  uint64_t v9 = (uint64_t)*(&off_100233720
                + (byte_1001D6370[byte_1001D15A0[(-35 * ((*(_DWORD *)(v2 - 4) - *(_DWORD *)v0) ^ 0xAE))] ^ 0x6E] ^ (-35 * ((*(_DWORD *)(v2 - 4) - *(_DWORD *)v0) ^ 0xAE)))
                + 28);
  uint64_t v4 = (char *)*(&off_100233720
               + ((-35 * (dword_100283880 ^ 0xAE ^ qword_100282DD0)) ^ byte_1001CEA30[byte_1001CB660[(-35 * (dword_100283880 ^ 0xAE ^ qword_100282DD0))] ^ 0x13])
               + 30)
     - 8;
  (*(void (**)(uint64_t *))&v4[8
                                       * ((-35 * (*(_DWORD *)v0 ^ 0xAE ^ *(_DWORD *)(v2 - 4))) ^ byte_1001D6370[~byte_1001D15A0[(-35 * (*(_DWORD *)v0 ^ 0xAE ^ *(_DWORD *)(v2 - 4)))]])
                                       + 16760])(&v9);
  unsigned int v10 = 1451 - 1759421093 * ((2 * (&v9 & 0xC091CA8) - &v9 + 1945559892) ^ 0xC08B5300);
  uint64_t v9 = (uint64_t)*(&off_100233720
                + ((-35 * (*(_DWORD *)v0 ^ 0xAE ^ *(_DWORD *)(v2 - 4))) ^ byte_1001D6370[byte_1001D15A0[(-35 * (*(_DWORD *)v0 ^ 0xAE ^ *(_DWORD *)(v2 - 4)))] ^ 0x98])
                - 64);
  unsigned __int8 v5 = -35 * ((*(_DWORD *)(v2 - 4) + *(_DWORD *)v0) ^ 0xAE);
  (*(void (**)(uint64_t *))&v4[8
                                       * (byte_1001D17AC[(byte_1001CE93C[v5 - 12] ^ 0xF4) - 12] ^ v5)
                                       + 16552])(&v9);
  unsigned int v6 = 1225351577 * (&v9 ^ 0x239AD816);
  LODWORD(v9) = v6 + 131;
  BYTE4(v9) = v6 ^ 0x7A;
  return (*(uint64_t (**)(uint64_t *))&v4[8
                                                 * ((-35 * (*(_DWORD *)v0 ^ 0xAE ^ *(_DWORD *)(v2 - 4))) ^ byte_1001CE730[byte_1001CB460[(-35 * (*(_DWORD *)v0 ^ 0xAE ^ *(_DWORD *)(v2 - 4)))] ^ 0x5B])
                                                 + 17408])(&v9);
}

uint64_t sub_100040A18()
{
  *(_DWORD *)(v3 - 112) = v1 + 1374699841 * ((v3 - 128) ^ 0x6DF41809) + 617;
  *(void *)(v3 - 128) = v2;
  *(void *)(v3 - 120) = v5;
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 ^ 0xC6B)))(v3 - 128);
}

void sub_100040A98(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_100040B38()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((v2 == ((v0 + 212) ^ 0x3F78685A)) * (11 * (v0 ^ 0x4ED) - 509)) ^ v0)))();
}

uint64_t sub_100040B78()
{
  return sub_100040B94();
}

uint64_t sub_100040B94(uint64_t a1)
{
  void *v8 = a1;
  _DWORD *v4 = v2;
  int v6 = v1 + 410;
  uint64_t v13 = v10;
  unsigned int v12 = v1
      + 605
      + 535753261 * ((2 * (v11 & 0x523675F0) - v11 - 1379300850) ^ 0xA73D8421)
      - 789;
  (*(void (**)(unsigned char *))(v5 + 8 * ((v1 + 605) ^ 0xC24)))(v11);
  unsigned int v12 = v6
      + 535753261 * ((v11 + 1479933763 - 2 * ((unint64_t)v11 & 0x5835FF43)) ^ 0x52C1F16C)
      - 594;
  uint64_t v13 = v9;
  (*(void (**)(unsigned char *))(v5 + 8 * (v6 + 1247)))(v11);
  return v3 ^ 0x81659910;
}

uint64_t sub_100040CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  if (v6 == v8 + 2 * ((111 * (a6 ^ 0x34A)) ^ 0x103) - 954) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = v9;
  }
  *(void *)(v7 - 0x234F4F45181D6CC9) = v10;
  return sub_100040CEC();
}

uint64_t sub_100040D30()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((4041 * (STACK[0x518] != 0)) ^ (v0 + 964))))();
}

uint64_t sub_100040D68(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((v5 & (2 * (*(unsigned __int8 *)(a2 + 4) - 147)))
                                 + ((*(unsigned __int8 *)(a2 + 4) - 147) ^ v6) == v6)
                                * ((v2 + v4 - 211) ^ (v2 - 610))) ^ v4)))();
}

uint64_t sub_100040DAC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v1 == v0 + 1117962996) * ((39 * (v0 ^ 0x697)) ^ 0x583)) ^ v0)))();
}

uint64_t sub_100040DF8(uint64_t a1, int a2)
{
  unsigned int v10 = v8 + v7 + v6 + v4;
  v11.i64[0] = 0xB6B6B6B6B6B6B6B6;
  v11.i64[1] = 0xB6B6B6B6B6B6B6B6;
  v12.i64[0] = 0x5B5B5B5B5B5B5B5BLL;
  v12.i64[1] = 0x5B5B5B5B5B5B5B5BLL;
  uint64_t v13 = v3 + v10;
  int8x16_t v14 = vrev64q_s8(*(int8x16_t *)(v13 - 15));
  int8x16_t v15 = vextq_s8(v14, v14, 8uLL);
  int8x16_t v16 = vrev64q_s8(*(int8x16_t *)(v13 - 31));
  int8x16_t v17 = vextq_s8(v16, v16, 8uLL);
  uint64_t v18 = v2 + v10;
  int8x16_t v19 = vrev64q_s8(vaddq_s8(vsubq_s8(v15, vandq_s8(vaddq_s8(v15, v15), v11)), v12));
  *(int8x16_t *)(v18 - 15) = vextq_s8(v19, v19, 8uLL);
  int8x16_t v20 = vrev64q_s8(vaddq_s8(vsubq_s8(v17, vandq_s8(vaddq_s8(v17, v17), v11)), v12));
  *(int8x16_t *)(v18 - 31) = vextq_s8(v20, v20, 8uLL);
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((25 * ((a2 ^ 0xA7 ^ ((v5 & 0xFFFFFFE0) == 32)) & 1)) ^ (a2 + 1139))))();
}

void sub_100040EA4(unint64_t a1)
{
  STACK[0x400] = a1;
  LODWORD(STACK[0x43C]) = v1;
  JUMPOUT(0x100040EF4);
}

uint64_t sub_100040F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, unsigned int a19, uint64_t a20,unsigned int a21,uint64_t a22)
{
  unsigned int v26 = 1178560073 * ((2 * (&a18 & 0x1B8F79F8) - &a18 + 1685095939) ^ 0xDEE4FE61);
  a20 = a13;
  a21 = v26 ^ 0x151;
  a19 = (v24 ^ 0xF7DBB3BF) + ((2 * v24) & 0xEFB7677E) + 998133754 + v26;
  (*(void (**)(int *))(v25 + 18408))(&a18);
  unsigned int v27 = 1178560073
      * ((((&a18 | 0x611722B4) ^ 0xFFFFFFFE) - (~&a18 | 0x9EE8DD4B)) ^ 0x247CA529);
  a22 = v22;
  a21 = ((v23 ^ 0xCF6FAEEF) + 1056955776 + ((2 * v23) & 0x9EDF5DDE)) ^ v27;
  a20 = a13;
  a19 = v27 + 1194;
  (*(void (**)(int *))(v25 + 17992))(&a18);
  unsigned int v28 = 1178560073 * ((&a18 & 0x52B68846 | ~(&a18 | 0x52B68846)) ^ 0x17DD0FDB);
  a22 = a11;
  a21 = v28 ^ ((a10 ^ 0x2F6FDFEF) - 553669504 + ((2 * a10) & 0x5EDFBFDE));
  a20 = a13;
  a19 = v28 + 1194;
  uint64_t v29 = (*(uint64_t (**)(int *))(v25 + 17992))(&a18);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * ((1837 * (a18 == -2124048112)) ^ 0xA5u)))(v29);
}

uint64_t sub_100041128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v65 = *(unsigned __int8 *)(v63 - 0x35FF68D50C8F4033) ^ 0x22;
  if (v65 == 1)
  {
    unsigned int v74 = *(_DWORD *)(v63 - 0x35FF68D50C8F404FLL);
    *(unsigned char *)(v63 - 0x35FF68D50C8F405BLL) = (~v74 << (a8 - 10)) - ((16 * ~(_BYTE)v74) & 0xBF) + 91;
    *(unsigned char *)(v63 - 0x35FF68D50C8F405ALL) = ((v74 >> 5) ^ 0x65) - ((2 * ((v74 >> 5) ^ 0x65)) & 0xB6) + 91;
    *(unsigned char *)(v63 - 0x35FF68D50C8F4059) = ((v74 >> 13) ^ 0xB1)
                                           + ~(2 * (((v74 >> 13) ^ 0xB1) & 0xDF ^ (v74 >> 13) & 4))
                                           + 92;
    *(unsigned char *)(v63 - 0x35FF68D50C8F4058) = ((v74 >> 21) ^ 0x29)
                                           + ~(2 * (((v74 >> 21) ^ 0x29) & 0xDF ^ (v74 >> 21) & 4))
                                           + 92;
    unsigned int v75 = *(_DWORD *)(v63 - 0x35FF68D50C8F4053);
    HIDWORD(v76) = v75 ^ 8;
    LODWORD(v76) = v74 ^ 0x20000000;
    *(unsigned char *)(v63 - 0x35FF68D50C8F4057) = (v76 >> 29) - ((2 * (v76 >> 29)) & 0xB6) + 91;
    int v68 = a8 + 570;
    *(unsigned char *)(v63 - 0x35FF68D50C8F4056) = ((v75 >> 5) ^ 0x8F) - ((2 * ((v75 >> 5) ^ 0x8F)) & 0xB6) + 91;
    *(unsigned char *)(v63 - 0x35FF68D50C8F4055) = ((v75 >> 13) ^ 0x5A)
                                           - 2 * (((v75 >> 13) ^ 0x5A) & 0xDF ^ (v75 >> 13) & 4)
                                           + 91;
    v75 >>= 21;
    char v73 = (v75 ^ 0x40) + 91;
    char v72 = 2 * ((v75 ^ 0x40) & 0x5F ^ v75 & 4);
    goto LABEL_5;
  }
  int v66 = a8;
  if (v65 == 2)
  {
    unsigned int v67 = *(_DWORD *)(v63 - 0x35FF68D50C8F4053);
    int v68 = (a8 + 564) | 6;
    *(unsigned char *)(v63 - 0x35FF68D50C8F405BLL) = ((v67 >> 21) ^ 0x40)
                                           + (((a8 + 52) | 6) ^ 0x1C)
                                           - 2 * (((v67 >> 21) ^ 0x40) & 0xDF ^ (v67 >> 21) & 4);
    *(unsigned char *)(v63 - 0x35FF68D50C8F405ALL) = ((v67 >> 13) ^ 0x5A) - ((2 * ((v67 >> 13) ^ 0x5A)) & 0xB6) + 91;
    *(unsigned char *)(v63 - 0x35FF68D50C8F4059) = ((v67 >> 5) ^ 0x8F) - ((2 * ((v67 >> 5) ^ 0x8F)) & 0xB6) + 91;
    unsigned int v69 = *(_DWORD *)(v63 - 0x35FF68D50C8F404FLL);
    HIDWORD(v70) = v67 ^ 8;
    LODWORD(v70) = v69 ^ 0x20000000;
    *(unsigned char *)(v63 - 0x35FF68D50C8F4058) = (v70 >> 29) - ((2 * (v70 >> 29)) & 0xB6) + 91;
    int v71 = ((v69 >> 5) ^ 0x65) - ((2 * ((v69 >> 5) ^ 0x65)) & 0xB6);
    *(unsigned char *)(v63 - 0x35FF68D50C8F4057) = ((v69 >> 21) ^ 0x29)
                                           - 2 * (((v69 >> 21) ^ 0x29) & 0xDF ^ (v69 >> 21) & 4)
                                           + 91;
    *(unsigned char *)(v63 - 0x35FF68D50C8F4056) = ((v69 >> 13) ^ 0xB1) - ((2 * ((v69 >> 13) ^ 0xB1)) & 0xB6) + 91;
    char v72 = (16 * ~(_BYTE)v69) & 0xBF;
    char v73 = 8 * ~(_BYTE)v69 + 91;
    *(unsigned char *)(v63 - 0x35FF68D50C8F4055) = v71 + 91;
LABEL_5:
    int v66 = v68 - 570;
    *(unsigned char *)(v63 - 0x35FF68D50C8F4054) = v73 - v72;
  }
  STACK[0x5D0] = *(void *)(v64 + 8 * (v66 - 1025));
  return sub_10000F488(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

uint64_t sub_1000414BC(uint64_t a1, uint64_t a2)
{
  uint64_t v9 = (v6 + v2);
  unsigned int v10 = *(_DWORD *)(v8 - 220 + v9 + 72);
  *(unsigned char *)(a2 + v9) = v10 ^ 0xCE;
  *(unsigned char *)(a2 + (v9 + 2)) = (BYTE2(v10) ^ 0x20) + (~(v10 >> 15) | 0x49) + 92;
  *(unsigned char *)(a2 + (v9 + 1)) = (BYTE1(v10) ^ 0x92)
                                          - ((((v4 - 82) & 0xFB) + 70) & (2 * (BYTE1(v10) ^ 0x92)))
                                          + 91;
  *(unsigned char *)(a2 + (v9 + 3)) = (HIBYTE(v10) ^ 6) - ((2 * (HIBYTE(v10) ^ 6)) & 0xB6) + 91;
  unsigned int v11 = *(_DWORD *)(v8 - 128) + 601181977;
  BOOL v12 = v11 < v3;
  BOOL v13 = v6 + 3869077 < v11;
  if (v6 + 3869077 < v3 != v12) {
    BOOL v13 = v12;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((v13 * v5) ^ v4)))();
}

uint64_t sub_1000415A8@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((30
                                * ((((((a1 + 1303) | 0x104) - 840) ^ ((unint64_t)(v3
                                                                                       - a2
                                                                                       - 0x35FF68D50C8F4093
                                                                                       + v2) < 0x10)) & 1) == 0)) ^ a1)))();
}

void sub_100041608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,_DWORD *a39)
{
  uint64_t v42 = (*(uint64_t (**)(uint64_t, void))(v40 + 8 * (v39 + 1390)))(a27, 0);
  int v43 = a39[4] - 1756925734 - ((2 * a39[4]) & 0x2E8EE1B4);
  a39[1] = a39[6] - 1756925734 - (((v41 + v39 - 878) ^ 0x67051673) & (2 * a39[6]));
  a39[2] = v43;
  int v44 = (*(uint64_t (**)(uint64_t))(v40 + 8 * (v39 ^ 0xBD9)))(v42);
  a39[3] = v44 - 1756925734 - ((2 * v44) & 0x2E8EE1B4);
  int v45 = (*(uint64_t (**)(void))(v40 + 8 * (v39 + 1353)))();
  *a39 = v45 - 1756925734 - ((2 * v45) & 0x2E8EE1B4);
  JUMPOUT(0x100041758);
}

uint64_t sub_1000418C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  int v20 = LOBYTE(STACK[0x338]) ^ 0x22;
  if (v20 == 1)
  {
    unsigned int v27 = STACK[0x31C];
    unsigned int v28 = STACK[0x318];
    int v29 = (LODWORD(STACK[0x31C]) >> 5) ^ 0x65;
    LOBYTE(STACK[0x310]) = 8 * ~LOBYTE(STACK[0x31C]) - ((16 * ~LOBYTE(STACK[0x31C])) & 0xBF) + 91;
    LOBYTE(STACK[0x311]) = v29 - ((v29 << ((a11 & 0xA7) + 90)) & a7) + 91;
    LOBYTE(STACK[0x312]) = ((v27 >> 13) ^ 0xB1) - (a7 & (2 * ((v27 >> 13) ^ 0xB1))) + 91;
    LOBYTE(STACK[0x313]) = ((v27 >> 21) ^ 0x29) - (a7 & (2 * ((v27 >> 21) ^ 0x29))) + 91;
    HIDWORD(v30) = v28 ^ 8;
    LODWORD(v30) = v27 ^ 0x20000000;
    LOBYTE(STACK[0x314]) = (v30 >> 29) - (a7 & (2 * (v30 >> 29))) + 91;
    LOBYTE(STACK[0x315]) = ((v28 >> 5) ^ 0x8F) - (a7 & (2 * ((v28 >> 5) ^ 0x8F))) + 91;
    LOBYTE(STACK[0x316]) = ((v28 >> 13) ^ 0x5A) - (a7 & (2 * ((v28 >> 13) ^ 0x5A))) + 91;
    unsigned int v31 = v28 >> 21;
    int v32 = (v28 >> 21) ^ 0x40;
    char v33 = v32 & 0x5F;
    char v26 = v32 + 91;
    char v25 = 2 * (v33 ^ v31 & 4);
    goto LABEL_5;
  }
  if (v20 == 2)
  {
    unsigned int v21 = STACK[0x318];
    unsigned int v22 = STACK[0x31C];
    int v23 = LODWORD(STACK[0x318]) >> 13;
    LOBYTE(STACK[0x310]) = ((LODWORD(STACK[0x318]) >> 21) ^ 0x40)
                         - ((5 * BYTE4(a10) + 15) & (2 * ((LODWORD(STACK[0x318]) >> 21) ^ 0x40)))
                         + 91;
    LOBYTE(STACK[0x311]) = (v23 ^ 0x5A) - 2 * ((v23 ^ 0x5A) & 0xDF ^ v23 & 4) + 91;
    LOBYTE(STACK[0x312]) = ((v21 >> 5) ^ 0x8F) - (a7 & (2 * ((v21 >> 5) ^ 0x8F))) + 91;
    HIDWORD(v24) = v21 ^ 8;
    LODWORD(v24) = v22 ^ 0x20000000;
    LOBYTE(STACK[0x313]) = (v24 >> 29) - (a7 & (2 * (v24 >> 29))) + 91;
    LOBYTE(STACK[0x314]) = ((v22 >> 21) ^ 0x29) - 2 * (((v22 >> 21) ^ 0x29) & 0xDF ^ (v22 >> 21) & 4) + 91;
    LOBYTE(STACK[0x315]) = ((v22 >> 13) ^ 0xB1) - 2 * (((v22 >> 13) ^ 0xB1) & 0xDF ^ (v22 >> 13) & 4) + 91;
    LOBYTE(STACK[0x316]) = ((v22 >> 5) ^ 0x65) - (a7 & (2 * ((v22 >> 5) ^ 0x65))) + 91;
    char v25 = (16 * ~(_BYTE)v22) & 0xBF;
    char v26 = 8 * ~(_BYTE)v22 + 91;
LABEL_5:
    LOBYTE(STACK[0x317]) = v26 - v25;
  }
  return sub_10002CD8C(a1, a2, a3, (uint64_t)&STACK[0x2D8], a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
}

uint64_t sub_100041AF4@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  unsigned int v7 = *(_DWORD *)((char *)&STACK[0x2E0] + ((v5 + a2) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v5 + a2)) = v7 ^ 0xCE;
  *(unsigned char *)(a1 + (v5 + a2 + 2)) = (BYTE2(v7) ^ 0x20) + (~(v7 >> 15) | 0x49) + 92;
  *(unsigned char *)(a1 + (v5 + a2 + 1)) = ((v7 >> (v3 + 118)) ^ 0x92)
                                               - ((2 * ((v7 >> (v3 + 118)) ^ 0x92)) & 0xB6)
                                               + 91;
  *(unsigned char *)(a1 + (v5 + a2 + 3)) = (HIBYTE(v7) ^ 6) - ((2 * (HIBYTE(v7) ^ 6)) & 0xB6) + 91;
  unsigned int v8 = LODWORD(STACK[0x33C]) + 84419253;
  BOOL v9 = v8 < v2;
  BOOL v10 = v5 + 905190195 < v8;
  if (v5 + 905190195 < v2 != v9) {
    BOOL v10 = v9;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((!v10 * v4) ^ v3)))();
}

uint64_t sub_100041BD8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((*(_DWORD *)(*a4 + 4 * (a7 - 1531185818)) == ((62 * (v8 ^ 0x2AB) + v10) & 0x611986FF ^ v9))
                                * ((62 * (v8 ^ 0x2AB) - 1656662605) & 0x62BEA66F ^ 0x6B)) ^ (62 * (v8 ^ 0x2AB)))))();
}

void sub_100041BF4()
{
}

uint64_t sub_100041BFC()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((((8 * (v2 + 1996)) ^ 0x3D95) + 3390) * (v0 != 0)) ^ (v2 + 1996))))();
}

uint64_t sub_100041C38@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 - 1488611264 + a1 - 1) = v4;
  return (*(uint64_t (**)(void))(v5 + 8 * ((((unint64_t)(a2 - 1488611264) < 0x38) * v3) ^ v2 ^ v3)))();
}

uint64_t sub_100041C6C@<X0>(char a1@<W0>, uint64_t a2@<X4>, unsigned int a3@<W8>)
{
  *(unsigned char *)(v5 + v4 + a2 + 1084) = a1;
  return (*(uint64_t (**)(void))(v6 + 8 * ((60 * ((unint64_t)(v5 + v4 + v3 + 1069) < 0x38)) ^ a3)))();
}

void sub_100041CA4()
{
  LODWORD(STACK[0x534]) = v0 + 133;
  JUMPOUT(0x100018FE0);
}

uint64_t sub_100041CB8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,char a26,uint64_t a27,char a28,uint64_t a29,char a30,uint64_t a31,char a32,uint64_t a33,char a34,uint64_t a35,char a36)
{
  int v41 = &a30 + v36;
  int v58 = &a26 + v36;
  uint64_t v57 = &a28 + v36;
  int v56 = &a24 + v36;
  uint64_t v55 = &a20 + v36;
  uint64_t v54 = &a34 + v36;
  uint64_t v53 = &a32 + v36;
  uint64_t v42 = &a36 + v36;
  uint64_t v43 = a1[5];
  uint64_t v62 = a1[4];
  uint64_t v44 = *a1;
  unsigned int v45 = v39 - 488;
  *(void *)(v40 - 104) = *(void *)(*a1 - 0x571561323F81230ALL);
  *(_DWORD *)(v40 - 112) = v39
                         - 488
                         + 1224239923 * (((v40 - 144) & 0xBC65B992 | ~((v40 - 144) | 0xBC65B992)) ^ 0xB129BBBA);
  *(void *)(v40 - 128) = &a30 + v36;
  *(void *)(v40 - 120) = v43;
  unsigned int v46 = v39 - 592;
  *(void *)(v40 - 144) = v44;
  *(void *)(v40 - 136) = a2;
  uint64_t v47 = v44;
  uint64_t v60 = 8 * (int)(v39 + 1099);
  unsigned int v61 = &a30 + v36;
  (*(void (**)(uint64_t))(v37 + v60))(v40 - 144);
  *(void *)(v40 - 120) = v41;
  *(void *)(v40 - 112) = v47;
  *(_DWORD *)(v40 - 144) = (v39 + 625) ^ (1225351577 * ((v40 + 1955865214 - 2 * ((v40 - 144) & 0x7494230E)) ^ 0x570EFB18));
  *(void *)(v40 - 136) = v43;
  *(void *)(v40 - 128) = v42;
  unsigned int v59 = v39;
  (*(void (**)(uint64_t))(v37 + 8 * (int)(v39 + 1159)))(v40 - 144);
  *(_DWORD *)(v40 - 112) = v39
                         - 488
                         + 1224239923
                         * ((1881907805 - ((v40 - 144) | 0x702BA25D) + ((v40 - 144) | 0x8FD45DA2)) ^ 0x7D67A075);
  *(void *)(v40 - 128) = v58;
  *(void *)(v40 - 120) = v43;
  *(void *)(v40 - 144) = v47;
  *(void *)(v40 - 136) = v42;
  *(void *)(v40 - 104) = v61;
  int v48 = *(void (**)(uint64_t))(v37 + 8 * (v39 ^ 0xCCB));
  uint64_t v49 = 8 * (v39 ^ 0xCCB);
  v48(v40 - 144);
  *(void *)(v40 - 104) = v58;
  *(void *)(v40 - 144) = v47;
  *(void *)(v40 - 136) = v42;
  *(_DWORD *)(v40 - 112) = v45
                         + 1224239923
                         * (((((v40 - 144) | 0x72B87200) ^ 0xFFFFFFFE) - (~(v40 - 144) | 0x8D478DFF)) ^ 0x7FF47028);
  *(void *)(v40 - 128) = v57;
  *(void *)(v40 - 120) = v43;
  (*(void (**)(uint64_t))(v37 + v49))(v40 - 144);
  *(_DWORD *)(v40 - 112) = v45 + 1224239923 * ((v40 - 760164511 - 2 * ((v40 - 144) & 0xD2B0CFF1)) ^ 0x20033226);
  *(void *)(v40 - 144) = v47;
  *(void *)(v40 - 136) = v42;
  *(void *)(v40 - 104) = v57;
  *(void *)(v40 - 128) = v56;
  *(void *)(v40 - 120) = v43;
  (*(void (**)(uint64_t))(v37 + v49))(v40 - 144);
  *(void *)(v40 - 144) = v47;
  *(void *)(v40 - 136) = v42;
  *(_DWORD *)(v40 - 112) = v45
                         + 1224239923
                         * ((((v40 - 144) | 0xD9043B02) - (v40 - 144) + ((v40 - 144) & 0x26FBC4F8)) ^ 0x2BB7C6D5);
  *(void *)(v40 - 104) = v56;
  *(void *)(v40 - 128) = v55;
  *(void *)(v40 - 120) = v43;
  (*(void (**)(uint64_t))(v37 + v49))(v40 - 144);
  *(_DWORD *)(v40 - 112) = v45 + 1224239923 * ((2 * ((v40 - 144) & 0x58E81DB0) - (v40 - 144) + 655876683) ^ 0xD5A41F9C);
  *(void *)(v40 - 128) = v54;
  *(void *)(v40 - 120) = v43;
  *(void *)(v40 - 144) = v47;
  *(void *)(v40 - 136) = v42;
  *(void *)(v40 - 104) = v55;
  (*(void (**)(uint64_t))(v37 + v49))(v40 - 144);
  *(_DWORD *)(v40 - 112) = v45 + 1224239923 * ((v40 - 144) ^ 0xF2B3FDD7);
  *(void *)(v40 - 144) = v47;
  *(void *)(v40 - 136) = v42;
  *(void *)(v40 - 104) = v54;
  *(void *)(v40 - 128) = v53;
  *(void *)(v40 - 120) = v43;
  (*(void (**)(uint64_t))(v37 + v49))(v40 - 144);
  *(void *)(v40 - 104) = v53;
  *(_DWORD *)(v40 - 112) = v45
                         + 1224239923
                         * ((-1798936272 - ((v40 - 144) | 0x94C66930) + ((v40 - 144) | 0x6B3996CF)) ^ 0x998A6B18);
  *(void *)(v40 - 128) = v42;
  *(void *)(v40 - 120) = v43;
  *(void *)(v40 - 144) = v47;
  *(void *)(v40 - 136) = v42;
  (*(void (**)(uint64_t))(v37 + v60))(v40 - 144);
  uint64_t v50 = *(void *)(v47 - 0x571561323F812312);
  *(_DWORD *)(v40 - 128) = v59
                         + 1374699841 * (((~(v40 - 144) & 0x2D3D96EC) - (~(v40 - 144) | 0x2D3D96ED)) ^ 0x40C98EE4)
                         + 742;
  *(void *)(v40 - 144) = v50;
  *(void *)(v40 - 136) = v38;
  (*(void (**)(uint64_t))(v37 + 8 * (v59 ^ 0xCF6)))(v40 - 144);
  *(void *)(v40 - 136) = v62;
  *(_DWORD *)(v40 - 144) = v59
                         + 235795823 * ((((v40 - 144) | 0xA8DEE7AD) - ((v40 - 144) & 0xA8DEE7AD)) ^ 0x3C73AEF4)
                         - 596;
  uint64_t v51 = (*(uint64_t (**)(uint64_t))(v37 + 8 * (v59 ^ 0xD54)))(v40 - 144);
  return (*(uint64_t (**)(uint64_t))(v37
                                            + 8
                                            * ((210 * ((v46 ^ 0xDEA2C586) + v46 + *(_DWORD *)(v40 - 140) < 0x7FFFFFFF)) ^ v59)))(v51);
}

uint64_t sub_10004220C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 == ((a1 - 194) ^ (v1 - 607))) * ((a1 - 194) ^ 0x24A)) ^ a1)))();
}

uint64_t sub_10004224C@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  uint64_t v7 = (v5 + a2);
  unsigned int v8 = *(_DWORD *)((char *)&STACK[0x2D8] + v7 + 72);
  *(unsigned char *)(a1 + (v7 + 1)) = (BYTE2(v8) ^ 0x20) - ((v8 >> 15) & 0xB6) + 91;
  *(unsigned char *)(a1 + v7) = (HIBYTE(v8) ^ 6) + (v3 ^ 0xE0) - ((2 * (HIBYTE(v8) ^ 6)) & 0xB6);
  *(unsigned char *)(a1 + (v7 + 2)) = (BYTE1(v8) ^ 0x92) - 2 * ((BYTE1(v8) ^ 0x92) & 0xDF ^ BYTE1(v8) & 4) + 91;
  *(unsigned char *)(a1 + (v7 + 3)) = v8 ^ 0xCE;
  LODWORD(v7) = LODWORD(STACK[0x334]) - 717392345;
  BOOL v9 = v7 < v2;
  BOOL v10 = v5 - 30171721 < v7;
  if (v5 - 30171721 < v2 != v9) {
    BOOL v10 = v9;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((v10 * v4) ^ v3)))();
}

uint64_t sub_100042330(int a1)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v2 & (2 * (*(unsigned __int8 *)(v3 + 7) - 1)))
                                 + ((*(unsigned __int8 *)(v3 + 7) - 1) ^ v1) == v1)
                                * ((25 * ((a1 - 1568) ^ 0x17C)) ^ 0x330)) ^ (a1 - 1568))))();
}

uint64_t sub_100042380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                                  + 8 * (((v7 == v6 - 2124049149) | (8 * (v7 == v6 - 2124049149))) ^ (v6 - 140))))(a1, a2, a3, a4, a5, a6, 2124071625);
}

uint64_t sub_1000423BC(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((84
                                * (((a4 - 15) ^ (a4 - 187 + a2 - 147 == (((a4 - 274) | 0x112) ^ 0x176))) & 1)) ^ (a4 - 187))))();
}

uint64_t sub_100042414(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((v5 & (2 * (*(unsigned __int8 *)(a2 + 8) - 1)))
                                      + ((*(unsigned __int8 *)(a2 + 8) - 1) ^ v6) == v6)
                                     * (a3 + ((v4 + 1353514797) | 0x89509C8A) + 658)) ^ v4)))();
}

void sub_10004246C()
{
}

uint64_t sub_1000424DC(uint64_t a1)
{
  return sub_100042564(a1, (v1 - 441588228));
}

uint64_t sub_100042564(uint64_t a1, int a2, unsigned __int8 a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(_DWORD *)(a24 + 4 * v26) = v24;
  int v29 = v26 + 1 + v27;
  BOOL v31 = v29 < a4 && v29 > a2;
  return (*(uint64_t (**)(void))(v28 + 8 * ((((a3 ^ v31) & 1) * a5) ^ (v25 + 558))))();
}

uint64_t sub_1000425A0(_DWORD *a1)
{
  int v5 = v4 + 522;
  unsigned int v6 = *(_DWORD *)(v3 + 352);
  unsigned int v7 = (*a1 ^ v1) + 707208418;
  BOOL v8 = v6 > ((v5 - 230) ^ 0x6AE7B39Du);
  if (v8 == v7 < 0x95184833) {
    BOOL v8 = v6 - 1793570765 > v7;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((103 * !v8) ^ v5)))();
}

uint64_t sub_10004261C(char a1, char a2, char a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 == (17 * ((v4 + a1) & a2 ^ a3) + 50)) * a4) ^ v4)))();
}

uint64_t sub_10004264C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((125
                                * (((v1 - 127) ^ ((v0 & 0xFFFFFFFE) == ((v1 - 1969439418) & 0x7563443F)
                                                                                      + 1740497046)) & 1)) ^ v1)))();
}

uint64_t sub_1000426A0@<X0>(int a1@<W0>, int a2@<W8>)
{
  _DWORD *v4 = v4[623];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1097
                                * (((a1 + ((2 * (a2 ^ 0x15D)) ^ (v3 - 218)) - 2149) ^ 0xFFFFFF86) + v5 == 277926661)) ^ (2 * (a2 ^ 0x15D)))))();
}

uint64_t sub_100042710()
{
  int v4 = (((v0 ^ 0x720) - 440) ^ 0x74090898) + v2;
  BOOL v6 = v4 > 1224456202 || v4 < v3 - 923027445;
  return (*(uint64_t (**)(void))(v1 + 8 * (v0 | (4 * v6))))();
}

uint64_t sub_10004275C@<X0>(uint64_t a1@<X0>, int a2@<W5>, int a3@<W6>, int a4@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4
                                                     + 8
                                                     * ((61
                                                       * (a4 - 615976035 >= 95 * (v5 ^ (a3 - 21)) - 1939)) ^ (a2 + v5 - 421))))(a1, -615976035);
}

void sub_1000427AC(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  *(_DWORD *)(a1 + a2) = 1477598966;
  JUMPOUT(0x100040A5CLL);
}

uint64_t sub_1000427BC()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (v0 + 91)))();
}

uint64_t sub_100042890()
{
  int v3 = (unsigned int *)STACK[0x2B0];
  (*(void (**)(void, unint64_t *, uint64_t))(v2 + 8 * (v1 + 1880)))(*(unsigned int *)STACK[0x2B0], &STACK[0x4B8], 2048);
  uint64_t v4 = *(uint64_t (**)(void))(v2
                           + 8
                           * ((913
                             * ((*(unsigned int (**)(void, unint64_t *, void, uint64_t))(v2 + 8 * (v1 + 1860)))(*v3, &STACK[0x458], (LODWORD(STACK[0x570]) + v0), 1) == ((v1 + 659) ^ 0x40D))) ^ (v1 + 761)));
  return v4();
}

uint64_t sub_10004292C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  return (*(uint64_t (**)(void))(v11 + 8 * ((((v10 ^ 0x31F) + 2247) * (a10 == 1973469984)) ^ v10)))();
}

uint64_t sub_1000429B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return sub_10002951C(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1000429C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v12 = 287 * (a8 ^ 0x28B);
  void *v9 = a1;
  int *v8 = a8 ^ 0x73F ^ (v11 + 919) ^ v15;
  int v13 = (v12 - 700) | 0x20A;
  uint64_t v20 = v16;
  unsigned int v19 = v12 + 535753261 * (((v18 | 0x318B810F) + (~v18 | 0xCE747EF0)) ^ 0x3B7F8F21) - 548;
  (*(void (**)(unsigned char *))(v10 + 8 * (v12 + 1293)))(v18);
  unsigned int v19 = v13 + 535753261 * (v18 ^ 0xAF40E2F) - 370;
  uint64_t v20 = v17;
  (*(void (**)(unsigned char *))(v10 + 8 * (v13 + 1471)))(v18);
  return v11 ^ 0x81659910;
}

uint64_t sub_100042AE4@<X0>(int a1@<W0>, int a2@<W2>, unint64_t a3@<X8>)
{
  uint64_t v9 = (a1 + v7 + v6);
  unint64_t v10 = v9 + a3 + 1;
  uint64_t v11 = ((((a2 - 1185) | 0x1B0) + 1060) ^ 0x81A) & (a1 + v7);
  unint64_t v12 = v5 + v11 - v9;
  unint64_t v13 = v11 + v5 + 1;
  unint64_t v14 = v11 + v4 - v9 + 2;
  unint64_t v15 = v11 + v4 + 3;
  uint64_t v16 = v11 + v3;
  unint64_t v17 = v16 - v9 + 4;
  unint64_t v18 = v16 + 5;
  BOOL v20 = v13 > a3 && v12 < v10;
  if (v15 > a3 && v14 < v10) {
    BOOL v20 = 1;
  }
  int v23 = v18 > a3 && v17 < v10 || v20;
  return (*(uint64_t (**)(void))(v8 + 8 * ((486 * v23) ^ a2)))();
}

uint64_t sub_100042B84(int a1)
{
  return (*(uint64_t (**)(void))(v5
                                           + 8
                                           * ((((a1 + 757) ^ (v3 + 872) ^ ((a1 - 998220976) | 0x20008406))
                                             * ((v1 & 0x18) == 0)) ^ (a1 - 294))))((v2 - v4));
}

void sub_100042BD0()
{
}

void sub_100042BDC()
{
}

uint64_t sub_100042BF8()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v1 & (2 * (*(unsigned __int8 *)(v2 + 4) - 247)))
                                 + ((*(unsigned __int8 *)(v2 + 4) - 247) ^ v0) == v0)
                                * ((v3 - 623) ^ 0x416)) ^ v3)))();
}

uint64_t sub_100042C44()
{
  LODWORD(STACK[0x2CC]) = STACK[0x574];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((126 * (((((v0 - 1389) | 0x48) - 113) & v1) == ((v0 - 1317) ^ 0x67BDE4A3))) ^ (v0 + 160))))();
}

uint64_t sub_100042CA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                       + 8
                                                                       * (((v3 == ((v5 - 762) ^ 0xD96A03B)) * (v5 - 979)) | v5)))(a1, a2, a3, 3135057316);
}

void sub_100042CD8()
{
}

uint64_t sub_100042CE0()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((882 * (v1 + v0 + v2 + 605438035 + 1058 < 17 * ((v2 + 470) ^ 0x5DEu) - 1029)) ^ (v2 + 470))))();
}

uint64_t sub_100042D44(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((((v2 & 0x18) == (((a2 - 951) | 0x408) ^ 0x40D)) * ((a2 ^ 0x48C) - 1837)) ^ a2)))();
}

uint64_t sub_100042D88(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return sub_100050A00(a1, 337, a4 + 868, 675, 1674806666, 19);
}

void sub_100042DDC()
{
  STACK[0x4B8] = STACK[0x458];
  JUMPOUT(0x10001F978);
}

uint64_t sub_100042DF8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((54 * (((v1 + 255) ^ 0xFFFFFA65) + v2 + a1 >= 0x7FFFFF7D)) ^ v1)))();
}

void sub_100042E38()
{
}

uint64_t sub_100042EB0@<X0>(int a1@<W1>, int a2@<W8>)
{
  int v6 = *(_DWORD *)(v3 + v2 * (uint64_t)a1 + 36);
  BOOL v8 = v6 + 1427420452 > (int)((((a2 - 1776) | 0x21) + 490) ^ 0xFBBCBBA0) && v6 + 1427420452 < SLODWORD(STACK[0x3B8]);
  int v9 = !v8;
  if (v6 == v4) {
    int v9 = 1;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((85 * v9) ^ a2)))();
}

uint64_t sub_100042F18()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1272
                                * ((v1 & (2 * (*(unsigned __int8 *)(v2 + 7) - 1)))
                                 + ((*(unsigned __int8 *)(v2 + 7) - 1) ^ (v0 + (v3 ^ 0x291) - 375)) == v0)) ^ v3)))();
}

uint64_t sub_100042F68(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v1 = *(void *)(a1 + 16);
  int v3 = (*(_DWORD *)a1 ^ (235795823 * ((2 * (a1 & 0x5AD4AFC8) - a1 + 623595575) ^ 0xB186196E))) + 1882357610;
  unsigned int v5 = v3 + 1225351577 * ((2 * (&v5 & 0x53F62218) - &v5 + 738844130) ^ 0xF9305F4) + 1666;
  uint64_t v6 = v1;
  uint64_t v7 = v2;
  return (*((uint64_t (**)(unsigned int *))*(&off_100233720 + v3) + v3 + 2175))(&v5);
}

void sub_10004306C(uint64_t a1)
{
  BOOL v4 = *(void *)(a1 + 40) == 0x6C0C7F2AED40EE91
    || *(void *)(a1 + 16) == 0xC7F991DE6408E1DLL
    || *(void *)a1 == 0x1E6EF7153090DC2;
  int v1 = *(_DWORD *)(a1 + 8) + 535753261 * ((((2 * a1) | 0xD63BF148) - a1 - 1797126308) ^ 0x61E9F68B);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_10004318C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13, uint64_t a14, int a15)
{
  unsigned int v19 = 1178560073 * ((((2 * &a12) | 0x682168A4) - &a12 - 873509970) ^ 0x8E84CC30);
  a14 = a11;
  a13 = ((2 * v15) & 0x6EF4FFF6)
      + ((v18 + 1604026981) & 0x5DF)
      + (v15 ^ 0xB77A7D3C ^ (v18 + 1604026981) ^ 0x5F9B81B4)
      + 2078245483
      + v19;
  a15 = (v18 + 67) ^ v19;
  uint64_t v20 = (*(uint64_t (**)(int *))(v17 + 8 * (v18 ^ 0x9F3)))(&a12);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((93 * (a12 != v16)) ^ v18)))(v20);
}

uint64_t sub_100043270(uint64_t a1)
{
  return sub_10004329C(a1, 3770);
}

uint64_t sub_10004329C@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X5>, int a4@<W8>)
{
  *(int8x16_t *)(a3 + (a4 + a1 + v5)) = vaddq_s8(vsubq_s8(*(int8x16_t *)(v8 + v5), vandq_s8(vaddq_s8(*(int8x16_t *)(v8 + v5), *(int8x16_t *)(v8 + v5)), v10)), v11);
  return (*(uint64_t (**)(void))(v9 + 8 * (((v5 + ((v4 - 1751) | v7) - 1398 == v6) * a2) ^ v4)))();
}

uint64_t sub_1000432E8(uint64_t a1, uint64_t a2, char a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1301
                                * ((((*(unsigned __int8 *)(a2 + 2) - 38) << (a3 + ((v4 + 55) | 0x80) + 46)) & v5)
                                 + ((*(unsigned __int8 *)(a2 + 2) - 38) ^ v6) == v6)) ^ v4)))();
}

void sub_100043344()
{
}

uint64_t sub_10004334C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1801
                                * ((((*(unsigned __int8 *)(v2 + 8) - 4) << (75 * (v3 ^ 0xE3) - 118)) & ((3 * (v3 ^ 0x211)) ^ (v1 - 1507)))
                                 + ((*(unsigned __int8 *)(v2 + 8) - 4) ^ v0) == v0)) ^ v3)))();
}

uint64_t sub_1000433B8@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W8>)
{
  int v10 = v3 - 1;
  *(_DWORD *)(*v7 + 4 * (a3 + v6 + v10 + a2)) = *(_DWORD *)(*v7 + 4 * (v5 + v10 + 306));
  return (*(uint64_t (**)(void))(v9 + 8 * (((v5 + v10 + 305 < v4) * ((v8 | a1) - 1123)) ^ v6)))();
}

void sub_1000433C0()
{
}

uint64_t sub_1000433CC@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W8>)
{
  if ((a3 - 690734851) <= 0x18 && ((1 << (a3 - 3)) & 0x1000143) != 0) {
    return sub_100043444(a1, a2);
  }
  else {
    return sub_100043400(a1, a2);
  }
}

uint64_t sub_100043400(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1649 * (((5 * (v2 ^ 0x5A8) - 2097) & *(_DWORD *)(v4 + v3 * (uint64_t)a2 + 40)) == 0)) ^ (v2 - 674))))();
}

uint64_t sub_100043444(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((*(_DWORD *)(v4 + v3 * (uint64_t)a2 + 40) & 1) != ((15 * (v2 ^ 0x46F)) ^ 0x5BE))
                                * (v2 ^ 0x471)) ^ (v2 + 171))))();
}

uint64_t sub_100043490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(void *)(v67 + 1516) = v65;
  *(void *)(v67 + 1524) = v65;
  *(_DWORD *)(v67 + 1532) = a3;
  *(void *)(v66 + 96) = v67;
  STACK[0x248] = v67;
  *(_DWORD *)(v67 + 476) = 35001927;
  unint64_t v68 = STACK[0x510];
  unsigned int v69 = (char *)&a5 + STACK[0x510] - 0x5A748F8B1FDC5B2ALL;
  STACK[0x348] = STACK[0x510];
  STACK[0x340] = ((a4 + 291) | 0xA0u) + v68 - 61;
  STACK[0x3A0] = STACK[0x3F8];
  STACK[0x3B0] = (unint64_t)v69;
  STACK[0x250] = (unint64_t)(v69 + 392);
  a65 = v66;
  STACK[0x350] = v66;
  return sub_100043524(a1, a2, 3646422062);
}

uint64_t sub_100043524@<X0>(int a1@<W8>)
{
  int v5 = (v1 - 1264876158) & 0x4B6479FB;
  STACK[0x390] = *(void *)(v4 + 8 * a1);
  STACK[0x510] = STACK[0x340];
  LODWORD(STACK[0x40C]) = 690734871;
  LODWORD(STACK[0x554]) = 544568610;
  STACK[0x538] = 0;
  LODWORD(STACK[0x4CC]) = 581300668;
  *(_DWORD *)STACK[0x3B0] = 1117964708;
  LODWORD(STACK[0x388]) = v5 + v2 + 1428751026;
  LODWORD(STACK[0x3B8]) = v2 + 1475336548;
  LODWORD(STACK[0x3C0]) = v2 - 1229949245;
  LODWORD(STACK[0x378]) = v2 - 1543352738;
  LODWORD(STACK[0x380]) = v2 + 1466454014;
  int v6 = *(uint64_t (**)(void))(v4 + 8 * (v5 ^ 0x5FC));
  LODWORD(STACK[0x398]) = v3;
  return v6();
}

uint64_t sub_100043658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_100043690(91, 373, a3, a4, 412, 1918257250, a7, 959128625);
}

uint64_t sub_100043690@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 + 3 >= v1) | (4 * (v2 + 3 >= v1))) ^ a1)))();
}

uint64_t sub_1000436EC(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3
                                                                       + 8
                                                                       * ((282
                                                                         * (*(void *)(v2 + 8 * (v1 - 1581))
                                                                          - 4
                                                                          - ((unint64_t)(v1 ^ 0x627u)
                                                                           + a1)
                                                                          + 148 < 0x20)) ^ v1)))(1889, 702, 335, 1722);
}

uint64_t sub_10004376C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((1547 * (v0 < (LODWORD(STACK[0x3AC]) ^ 0xACB16A27))) ^ (LODWORD(STACK[0x3F4]) - 423))))();
}

uint64_t sub_1000437B0()
{
  int v3 = 6 * (v2 ^ 0x573);
  unsigned int v4 = v1 - ((2 * v1 - 1089137220) & 0xFE9CC11A) + 1591274347;
  int v5 = ((v3 + 393) ^ 0xD698C681 ^ (47 * (v3 ^ 0x601) - 675677119) & (2 * v4)) + (v4 ^ 0x14929F52) - 1627406596 == 182238939;
  return (*(uint64_t (**)(void))(v0 + 8 * (v3 ^ ((4 * v5) | (v5 << 6)))))();
}

void sub_100043860(uint64_t a1@<X8>, int a2, uint64_t a3, unsigned int a4)
{
  unsigned int v8 = 108757529
     * (((&a2 | 0xE1F8C6E3) - &a2 + (&a2 & 0x1E073918)) ^ 0x164A4C8);
  a2 = v8 + v5 - 459;
  a4 = (v6 - ((v7 + 791848354) & 0xBEF58122) + ((461 * (v5 ^ 0x79E)) ^ 0xF7141605)) ^ v8;
  a3 = a1;
  (*(void (**)(int *))(v4 + 8 * (v5 + 249)))(&a2);
  JUMPOUT(0x100039520);
}

void sub_100043908()
{
}

uint64_t sub_1000439D8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((503 * ((a6 + 1 + v6) > 0x2F)) ^ a2)))();
}

uint64_t sub_100043AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,unsigned int a24,int a25,uint64_t a26,int a27,uint64_t a28,uint64_t a29)
{
  int v30 = *(_DWORD *)(a2 + 4);
  unsigned int v31 = 628203409 * ((&a22 + 1767993406 - 2 * (&a22 & 0x6961703E)) ^ 0xEBE97C0D);
  a28 = *(void *)(a2 + 8);
  a29 = a14;
  a22 = a15;
  a23 = a13;
  a26 = a16;
  a24 = 1185 - v31;
  a25 = 323188336 - v31 + v30;
  (*(void (**)(uint64_t *))(v29 + 18032))(&a22);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8 * ((1061 * (a27 == -2124048112)) ^ 0x215u)))(0x64C68B1F422D462, a2);
}

uint64_t sub_100043BD8()
{
  unsigned int v3 = *(_DWORD *)(v2 - 0x6C0C7F2AED40EE81) - 1117226260;
  unsigned int v4 = *(_DWORD *)(v2 - 0x6C0C7F2AED40EE85) + 295625365;
  BOOL v5 = v4 < v0 + 416404523;
  BOOL v6 = v3 < v4;
  if (v3 < 0x18D1D660 != v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((1515 * v6) ^ v0)))();
}

void sub_100043C68()
{
}

uint64_t sub_100043C80@<X0>(int a1@<W1>, unsigned int a2@<W2>, int a3@<W8>)
{
  unsigned int v10 = v8 + 1;
  *(unsigned char *)(v7 + (v3 + 1)) = *(unsigned char *)(v6 + (a3 + 1));
  BOOL v11 = v5 < a2;
  if (v11 == v10 < a2) {
    BOOL v11 = v10 < v5;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((v11 * a1) ^ v4)))();
}

uint64_t sub_100043C90@<X0>(int a1@<W1>, int a2@<W6>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((*(unsigned char *)(v3 + (a1 + v4 - 1)) == 91) * a2) ^ a3)))();
}

void sub_100043CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,unsigned __int8 a25,int a26,int a27,unsigned __int8 a28,__int16 a29,unsigned __int8 a30,int a31,int a32,int a33,char a34,int a35,int a36,char a37,int a38)
{
  LODWORD(STACK[0x348]) = (a25 | ((a33 ^ 0xC) << 24) | ((a28 ^ 0xEF) << 8) | ((a34 ^ ((a37 - 106) | 3) ^ 0x91) << 16)) ^ 0x1CFF3FC4;
  LODWORD(STACK[0x208]) = a32 ^ 0x93393CC5;
  LODWORD(STACK[0x380]) = ((a35 << 8) | (a27 << 24) | ((a38 ^ v38) << 16) | a31) ^ 0x309BB9E3;
  LODWORD(STACK[0x390]) = ((((a36 ^ 0xE5) << 16) + ((a26 ^ v39) << 24)) | a30 | ((LODWORD(STACK[0x3B8]) ^ v40) << 8)) ^ 0xCDEB5029;
  JUMPOUT(0x100023594);
}

uint64_t sub_100043DB4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((2042 * (v0 == ((((v1 + 803807576) & 0xD016DEAD) + 595) ^ 0x1404A9620C32F08ELL))) ^ v1)))();
}

void sub_100043E08(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) + 1759421093 * ((a1 - 1364022623 - 2 * (a1 & 0xAEB2AAA1)) ^ 0x1DCF1AF5);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_100043EBC(uint64_t a1)
{
  int v2 = 628203409 * (((a1 | 0xBB8CAEEC) - (a1 & 0xBB8CAEEC)) ^ 0x3904A2DF);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 48);
  int v6 = *(_DWORD *)(a1 + 20) + v2;
  int v7 = *(_DWORD *)a1 + 2024873229 + v2;
  unsigned int v8 = 235795823 * ((((2 * &v10) | 0x2D62A18A) - &v10 - 380719301) ^ 0x821C199C);
  uint64_t v16 = *(void *)(a1 + 8);
  int v15 = v8 ^ (v7 + 1923);
  uint64_t v10 = v5;
  uint64_t v12 = v4;
  uint64_t v13 = v3;
  int v11 = v8 + (v6 ^ 0x2B523743) - 136321164 + ((2 * v6) & 0x3BCEB5FE ^ 0x294A9178);
  uint64_t result = (*((uint64_t (**)(uint64_t *))*(&off_100233720 + v7) + v7 + 2150))(&v10);
  *(_DWORD *)(a1 + 40) = v14;
  return result;
}

uint64_t sub_100044024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v20 = 1759421093 * ((((2 * (v19 - 136)) | 0xADBC4A38) - (v19 - 136) + 690084580) ^ 0x65A39548);
  *(_DWORD *)(v19 - 120) = v14 - v20 + 1245;
  *(void *)(v19 - 128) = v18;
  *(_DWORD *)(v19 - 136) = v17 - v20 + (v14 ^ 0x467FE78D);
  (*(void (**)(uint64_t))(v16 + 8 * (v14 ^ 0x80C)))(v19 - 136);
  *(_DWORD *)(v19 - 120) = (v14 ^ 0x33E) + 1178560073 * ((v19 - 136) ^ 0xBA947862) + 721;
  *(void *)(v19 - 112) = v15;
  *(void *)(v19 - 128) = a14;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v14 ^ 0x832)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (((*(_DWORD *)(v19 - 136) - 1532862473 >= (((v14 ^ 0x33E) + 499033675) & 0xE24157A2)
                                                                                      - 1488719069)
                                              * (((v14 ^ 0x33E) + 39) ^ 0x3A1)) ^ v14 ^ 0x33E)))(v21);
}

void sub_100044154()
{
}

uint64_t sub_100044164(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 48) = *(void *)(a2 + 8);
  return 0;
}

void sub_10004417C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) ^ (1755732067 * (((a1 | 0x83D72B3C) - (a1 & 0x83D72B3C)) ^ 0x5D1196E7));
  uint64_t v4 = *(void *)(a1 + 8);
  v3[0] = v1 + 628203409 * ((((2 * v3) | 0xD355565C) - v3 + 374691026) ^ 0x6B22A71D) - 315;
  int v2 = (char *)*(&off_100233720 + (v1 ^ 0x598)) - 8;
  (*(void (**)(_DWORD *))&v2[8 * v1 + 8128])(v3);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000442D8()
{
  BOOL v4 = v1 - 786643009 < (int)(v2 + 259175253);
  if (v2 > 0x708D4CAA != v1 - 786643009 < -1888308395) {
    BOOL v4 = v2 > 0x708D4CAA;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((220 * !v4) ^ v0)))();
}

uint64_t sub_100044344()
{
  unsigned int v4 = ((v3 - 977498400) & 0x3A4373FB ^ 0x29EBE5E8) + v1;
  BOOL v5 = v4 < 0x98A36C57;
  BOOL v6 = v2 - 1734120361 < v4;
  if (v2 > 0x675C93A8 != v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((v6 * ((v3 - 2037872876) & 0x79777C5F ^ 0x585)) ^ v3)))();
}

uint64_t sub_1000443E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t))(v7
                                                                      + 8
                                                                      * (int)((((a7 & 0xFFFFFFF0) == (((a6 - 498) | 0x804) ^ 0x6BF6FF95))
                                                                             * (((a6 + 1084347876) & 0xBF5E2EFA) + 246)) ^ a6)))(a1, a2, (a6 + 1084347876) & 0xBF5E2EFA, a2);
}

void sub_100044440()
{
}

void sub_100044448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned int a11, uint64_t a12, uint64_t a13)
{
  a12 = v13;
  a13 = v14;
  a10 = v14;
  a11 = v15 - 535753261 * (((&a10 | 0xDAC04087) + (~&a10 | 0x253FBF78)) ^ 0xD0344EA9) + 1132;
  JUMPOUT(0x10000ED78);
}

uint64_t sub_1000444A0@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W8>)
{
  uint64_t v7 = ((7 * (a3 ^ 0x50A)) ^ (v5 + 1092)) + a1;
  *(unsigned char *)(v4 + v7) = *(unsigned char *)(a2 + v7);
  return (*(uint64_t (**)(void))(v6 + 8 * ((15 * (a1 - 1 == a4)) ^ (a3 - 564))))();
}

uint64_t sub_1000444EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,unsigned int a31,uint64_t a32,unsigned int a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,unsigned int a39)
{
  unint64_t v46 = (((v41 + 808898303) & 0xCFC92ED5 ^ (unint64_t)(v40 + 1532))
       + (v43 ^ 0x2F848DFA41332D4FLL)
       - (((v43 ^ 0x2F848DFA41332D4FLL) << ((v41 ^ 0x40u) - 110)) & 0x274B65ACDFAE912ELL)) ^ v39;
  uint64_t v47 = __ROR8__(__ROR8__(v44 ^ a32, 12) ^ 0xA9F5355D327AAF0FLL, 52);
  uint64_t v48 = v47 ^ 0x322397601515A6F7;
  unint64_t v49 = ((v47 ^ 0x322397601515A6F7)
       + 0x6777F96F815D9DA4
       - ((2 * (v47 ^ 0x322397601515A6F7)) & 0xCEEFF2DF02BB3B48)) ^ a2;
  uint64_t v50 = v45 ^ v43 ^ 0x2F848DFA41332D4FLL;
  uint64_t v51 = v46 ^ 0x68040451F630332FLL;
  unint64_t v52 = v46 ^ 0x68040451F630332FLL ^ (v49 ^ 0xE4C1C31231B4037DLL) & (v47 ^ 0xCDDC689FEAEA5908);
  unint64_t v53 = v50 ^ 0x741051731D91EE90 ^ (((v46 ^ 0x97FBFBAE09CFCCD0) & (v47 ^ 0x322397601515A6F7))
                                    - ((2 * ((v46 ^ 0x97FBFBAE09CFCCD0) & (v47 ^ 0x322397601515A6F7))) & 0x4DAD36C67EA9BE3ELL)
                                    + 0x26D69B633F54DF1FLL);
  uint64_t v54 = v49 ^ 0x1B3E3CEDCE4BFC82;
  unint64_t v55 = v49 ^ 0xE4C1C31231B4037DLL ^ (v50 ^ 0x52C6CA1022C5318FLL) & (v45 ^ 0xAD3935EFDD3ACE70);
  *((void *)&v56 + 1) = v45 ^ 0x318F;
  *(void *)&long long v56 = v45 ^ 0x52C6CA1022C50000;
  unint64_t v57 = v54 & (v45 ^ 0x52C6CA1022C5318FLL) ^ v48 ^ v52;
  unint64_t v58 = v51 & (v50 ^ 0xAD3935EFDD3ACE70);
  unint64_t v59 = __ROR8__(__ROR8__(v52, 38) ^ __ROR8__(v53, 38) ^ 0xB8AB4977971512F1, 26);
  LOBYTE(v48) = *(unsigned char *)(a34 + ((((v57 >> 61) ^ 4) + 241) ^ 0x78));
  char v60 = 4 * (v48 ^ 0xDD) - ((8 * (v48 ^ 0xDD)) & 0xEF) - 10;
  char v61 = v48 ^ 0xE5;
  char v62 = (v48 ^ 0xE5) + (((v48 ^ 0xDD) - ((2 * (v48 ^ 0xDD)) & 0xEC) - 10) ^ v60 ^ 0xC7) + 1;
  char v63 = v62 & 0x40;
  unint64_t v64 = v55 ^ __ROR8__((v56 >> 16) ^ 0x4D81525DA35B383ALL, 48) ^ v58;
  unsigned __int8 v65 = (v60 ^ 9) + 1;
  if ((v62 & 0x40 & v65) != 0) {
    char v66 = v65 - v63 - ((2 * (v65 - v63)) & 0x8A);
  }
  else {
    char v66 = v63 + v65 - 2 * ((v63 + v65) & 0x4C ^ v65 & 8);
  }
  char v67 = (v66 + 69) ^ ((v62 & 0xBF) - ((2 * v62) & 0xA) + 69);
  unsigned __int8 v68 = ((v67 + (~(2 * v67) | 0x13) - 9) ^ v60) + v61;
  *((void *)&v69 + 1) = ~v55;
  *(void *)&long long v69 = v55 ^ 0x92CFC162FD513142;
  unint64_t v70 = __ROR8__(v55, 57) & 0xFFFFFFFFFFFFE07FLL;
  *((void *)&v69 + 1) = v55 ^ 0x8F3B36C20C2B9F87 ^ ((v69 >> 1)
                                                      - ((2 * (v69 >> 1)) & 0x3BE9EF41E2F55D88)
                                                      + 0x1DF4F7A0F17AAEC4);
  *(void *)&long long v69 = *((void *)&v69 + 1) ^ (v55 << 58) ^ 0xC00000000000000;
  uint64_t v71 = v69 >> 51;
  uint64_t v72 = v57 ^ (v57 >> 39) ^ (8 * v57) ^ (((v68 >> 1) | (v68 << 7)) | (v57 << 25));
  uint64_t v73 = v72 ^ 0x22A4C299C55AAC6ELL;
  uint64_t v219 = v71 + (v70 ^ 0x8F8AC7F1FBA51795);
  unint64_t v74 = (v53 << 23) ^ 0xFBA827E079000000;
  unint64_t v75 = (((v59 << 45) ^ (v59 << 36)) & 0xFFFFFFF000000000 | (v59 >> 28)) ^ (v59 >> 19) ^ 0xD0A2B87327B31AB3;
  unint64_t v76 = (v75 - ((2 * v75) & 0x8CC156CA25299ECALL) + 0x4660AB651294CF65) ^ v59;
  unint64_t v77 = v53 ^ (v53 >> 41) ^ (v53 >> 7) ^ (((v53 << 57) ^ 0xE400000000000000)
                                        + (((v53 << 57) ^ 0xE400000000000000) >> 62 << 63)
                                        + 0x4019A21BF4676349);
  uint64_t v78 = (v77 & 0x10000000000000 ^ 0x7BF4CFD75FE97FCDLL) + 2 * (v77 & 0x10000000000000);
  uint64_t v79 = v78 - 0x4150010204484040;
  unint64_t v80 = v77 & 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v81 = v78 - 0x7BF4CFD75FE97FCDLL;
  uint64_t v82 = __ROR8__(v219 - 2 * (v71 & (v70 ^ 0x8F8AC7F1FBA51795)), 13);
  unint64_t v83 = v64 ^ (v64 >> 10) ^ (v64 << 47) ^ ((v64 >> 17) | (v64 << 54));
  unint64_t v84 = 0xB6999EACBB8ABF5ALL - v78;
  if ((v81 & v74) == 0) {
    unint64_t v84 = v79;
  }
  uint64_t v85 = (v74 - 0x3AA4CED55BA13F8DLL + v84) ^ v80;
  unint64_t v86 = ((v85 ^ 0xF64EF7A34AD3A0A9)
       - 2 * ((v85 ^ 0xF64EF7A34AD3A0A9) & 0xDBBC50099C49492 ^ v85 & 0x12)
       - 0x72443AFF663B6B80) ^ v83;
  uint64_t v87 = __ROR8__(__ROR8__(v86 ^ 0xBAD3F73E2AAEFB39, 23) ^ 0x6C4FE5A873E441B7, 41);
  uint64_t v88 = v73 ^ (v82 + 0x4FDE89866017883 - ((2 * v82) & 0x9FBD130CC02F106));
  unint64_t v89 = v76 ^ v85;
  unint64_t v90 = v87 & (v83 ^ 0x1CAE3FE19723B7B4) ^ v88;
  uint64_t v91 = (v89 ^ 0x7A525F5F415563DFLL | ~v87)
      + ((v87 + 0x3440A184ADA5499 - ((2 * v87) & 0x688143095B4A932)) ^ v89 ^ 0x791655470B8F3746)
      + 1;
  unint64_t v92 = (((v88 ^ 0xBEE74353B47A99EDLL) & (v72 ^ 0xD9A6D5FE5CA42B12))
       + 0x3440A184ADA5499
       - ((2 * ((v88 ^ 0xBEE74353B47A99EDLL) & (v72 ^ 0xD9A6D5FE5CA42B12))) & 0x688143095B4A932)) ^ v89 ^ 0x791655470B8F3746;
  unint64_t v93 = v86 ^ (v89 ^ 0x85ADA0A0BEAA9C20) & (v72 ^ 0x26592A01A35BD4EDLL);
  unint64_t v94 = ((v92 ^ (v88 ^ 0x4118BCAC4B856612) & (v83 ^ 0xE351C01E68DC484BLL))
       + 0x4FDE89866017883
       - ((2 * (v92 ^ (v88 ^ 0x4118BCAC4B856612) & (v83 ^ 0xE351C01E68DC484BLL))) & 0x9FBD130CC02F106)) ^ v73;
  *((void *)&v96 + 1) = v93 ^ v92 ^ 0x3DB928;
  *(void *)&long long v96 = v93 ^ v92 ^ 0xC2960AEAF0000000;
  uint64_t v95 = v96 >> 28;
  unint64_t v97 = v91 ^ __ROR8__(((v90 ^ 0xBEE74353B47A99EDLL) >> 27) ^ __ROR8__(v83 ^ 0xE1DE6585B59498FDLL, 27) ^ (((v90 ^ 0xBEE74353B47A99EDLL) << 37)- (((v90 ^ 0xBEE74353B47A99EDLL) << 38) & 0x1379170000000000)- 0x7643747485F20715), 37);
  *(void *)&long long v96 = __ROR8__(v93 ^ v92, 19);
  unint64_t v98 = (v95 ^ v96 ^ 0xB7251852C15D5E07)
      - 2 * ((v95 ^ v96 ^ 0xB7251852C15D5E07) & 0x4677F5251DE9535FLL ^ (v95 ^ v96) & 0x10)
      - 0x39880ADAE216ACB1;
  unint64_t v99 = (v90 ^ 0xD1A234CC1D2559D7) << 58;
  unint64_t v100 = v99 & (v90 ^ 0xD000000000000000);
  unint64_t v101 = v99 | v90 ^ 0xD1A234CC1D2559D7;
  *((void *)&v96 + 1) = v94 ^ 0x1747C156E755AED6;
  *(void *)&long long v96 = v94 ^ 0x4000000000000000;
  uint64_t v102 = v94 ^ __ROR8__(v94, 39) ^ (v96 >> 61);
  uint64_t v103 = v102 ^ 0x32ACB3D14797824;
  uint64_t v104 = v102 & 0x7C09B5691D153F3ALL;
  unint64_t v105 = (v100 ^ ((v90 ^ 0xD1A234CC1D2559D7) << 63)) - 0x65C5EC9A07DA690 - (v100 >> 59 << 60);
  unint64_t v106 = ((v93 >> 7) ^ (v93 >> 41) | (v93 << 57)) ^ (v93 << 23) ^ 0xEED1E8270B9B584FLL;
  unint64_t v107 = v106 - ((2 * v106) & 0xE9AB72D9FA5629CELL) + 0x74D5B96CFD2B14E7;
  unint64_t v108 = v107 ^ v93;
  unint64_t v109 = v107 ^ v92 ^ v98;
  unint64_t v110 = v97 ^ (v97 << 47) ^ (v97 >> 10) ^ (v97 >> 17) ^ (v97 << 54);
  unint64_t v111 = (v108 & (unint64_t)&_mh_execute_header ^ 0x65E6FF1BDF6EDFB6)
       + 2 * (v108 & (unint64_t)&_mh_execute_header);
  unint64_t v112 = v111 - 0x4480C601C1620890;
  unint64_t v113 = v108 & 0xFFFFFFFEFFFFFFFFLL;
  unint64_t v114 = ((v90 ^ 0xD1A234CC1D2559D7) >> 6) ^ (v90 >> 1) ^ v101 ^ v105 ^ v102 ^ 0x32ACB3D14797824;
  uint64_t v115 = v114 ^ 0x68D11A660E92ACEBLL;
  unint64_t v116 = v111 - 0x65E6FF1BDF6EDFB6;
  unint64_t v117 = 0x874D3835FD7BB6DCLL - v111;
  if (((v110 ^ 0xBEE8B63400000000) & v116) == 0) {
    unint64_t v117 = v112;
  }
  unint64_t v118 = ((v110 ^ 0xBEE8B6349A795903) - 0x2166391A1E0CD726 + v117) ^ v113;
  *((void *)&v119 + 1) = v109 ^ 0x16067570ELL;
  *(void *)&long long v119 = v109 ^ 0x84E67F4400000000;
  uint64_t v120 = (v119 >> 33) ^ __ROR8__((v114 ^ 0x68D11A660E92ACEBLL) & (v102 ^ 0x57695F4B404DEABLL), 33) ^ 0xCF4F457632C10184;
  unint64_t v121 = (v118 ^ 0x7FF87F75724C4296) & (v109 ^ 0x84E67F456067570ELL);
  char v122 = v118 & 1;
  char v123 = !(v118 & 1);
  unint64_t v124 = (v109 ^ 0x7B1980BA9F98A8F1) & (v102 ^ 0xFA896A0B4BFB2154);
  *(void *)&long long v119 = __ROR8__(v120, 31);
  unint64_t v125 = (v118 ^ 0x8007808A8DB3BD69) & (v110 ^ 0x411749CB6586A6FCLL);
  unint64_t v126 = v118 ^ (v124 - ((2 * v124) & 0x2797D5225F7FFD22) + 0x13CBEA912FBFFE91);
  unint64_t v127 = v114 ^ 0x972EE599F16D5314;
  unint64_t v128 = v125 ^ v115;
  unint64_t v129 = (v110 ^ 0xBEE8B6349A795903) & v127;
  unint64_t v130 = v125 ^ v115 ^ v110 ^ (v121 - ((2 * v121) & 0xF0E047DDAEDFC82CLL) - 0x78FDC1128901BEALL);
  unint64_t v131 = v126 ^ v119;
  unint64_t v132 = v119 ^ v103 ^ (v129 - 0x65C5EC9A07DA690 - ((2 * v129) & 0xF347426CBF04B2E0));
  unint64_t v133 = ((v126 ^ (unint64_t)v119) << 36) ^ ((v126 ^ (unint64_t)v119) << 45);
  unint64_t v134 = (v128 ^ 0x7955EAEC4D48B80CLL) >> v123 >> v122;
  unint64_t v135 = v132 ^ 0xB98E167C76CEC8F2 ^ (((v132 >> 61) ^ (v132 >> 39) ^ 0xAFF5F4)
                                      - ((2 * ((v132 >> 61) ^ (v132 >> 39) ^ 0xAFF5F4)) & 0x272144)
                                      - 0x118B12B2E9EC6F5ELL);
  uint64_t v136 = (((v132 << 25) ^ 0x62C1BAB0A0000000 ^ -(uint64_t)((v132 << 25) ^ 0x62C1BAB0A0000000) ^ (v135
                                                                                                  - (v135 ^ (v132 << 25) ^ 0x62C1BAB0A0000000)))
        + v135) ^ (8 * v132);
  unint64_t v137 = ((v126 >> 41) | (v126 << 57)) ^ (v126 >> 7) ^ (((v126 << 23) ^ 0x81F9093476000000)
                                                      - ((2 * ((v126 << 23) ^ 0x81F9093476000000)) & 0xD13A367510000000)
                                                      - 0x1762E4C577DA48FALL);
  unint64_t v138 = (v130 >> 10) ^ (v130 << 47) ^ (v130 >> 17) ^ (v130 << 54) ^ 0xD647E0FA705E470ELL;
  unint64_t v139 = (v138 - ((2 * v138) & 0xFB0C70D05B1FDFBALL) - 0x279C797D2701023) ^ v130;
  unint64_t v140 = v139 ^ 0xADF501DA30A999FELL;
  unint64_t v141 = v137 ^ v126 ^ v139;
  unint64_t v142 = v137 ^ v119 ^ ((v133 ^ (v131 >> 19) ^ (v131 >> 28) ^ 0xBA7722E0D1A3E195)
                      - 2
                      * ((v133 ^ (v131 >> 19) ^ (v131 >> 28) ^ 0xBA7722E0D1A3E195) & 0x78035E768F2D18BLL ^ (v133 ^ (v131 >> 19) ^ (v131 >> 28)) & 2)
                      - 0x787FCA18970D2E77);
  unint64_t v143 = (((v128 << 58) ^ (v128 << 63)) & 0xFC00000000000000 | (v128 >> 6)) ^ v134;
  uint64_t v144 = ((v143 ^ 0x31E557ABB13522E0)
        + 0x5857A41CB2A5E834
        - 2 * ((v143 ^ 0x31E557ABB13522E0) & 0x5857A41CB2A5E836 ^ v143 & 2)) ^ v128;
  uint64_t v145 = v144 ^ 0x21024EF0FFED5038;
  uint64_t v146 = ((v144 ^ 0x21024EF0FFED5038)
        - 0x20108FEEFFA15EF7
        - 2 * ((v144 ^ 0x21024EF0FFED5038) & 0x5FEF7011005EA10BLL ^ v144 & 2)) ^ v136 ^ 0x6038A99A06B46389;
  uint64_t v147 = (v136 ^ 0x40282674F9153D7FLL) & v145;
  unint64_t v148 = ((v140 & ~v146) - 0x20108FEEFFA15EF7 - ((2 * (v140 & ~v146)) & 0xBFDEE02200BD4212)) ^ v136 ^ 0x6038A99A06B46389;
  unint64_t v149 = (v136 ^ 0xBFD7D98B06EAC280) & (v142 ^ 0x6499EE28C3BD37C3);
  unint64_t v150 = v146 ^ (v141 ^ 0x29598DA14D20CF55) & (v139 ^ 0x520AFE25CF566601);
  unint64_t v151 = (v147 - ((v147 - 0x381268C417E8F79CLL - ((2 * v147) & 0x8FDB2E77D02E10C8)) ^ v142 ^ 0x5C8B86ECD455C058)) ^ ((v142 ^ 0x6499EE28C3BD37C3) + 1);
  unint64_t v152 = ((v151 - 0x381268C417E8F79CLL - ((2 * v151) & 0x8FDB2E77D02E10C8)) ^ v142 ^ 0x5C8B86ECD455C058) + v147;
  unint64_t v153 = v148 ^ v152;
  unint64_t v154 = (((2 * v141) ^ 0xAD4CE4BD65BE6155) + (v141 ^ 0x29598DA14D20CF55)) & (v142 ^ 0x9B6611D73C42C83CLL);
  unint64_t v155 = (v149 - ((2 * v149) & 0x669D6888D04B52F4) + 0x334EB4446825A97ALL) ^ v141;
  unint64_t v156 = v152 ^ v155;
  *((void *)&v119 + 1) = v153 ^ 0x1877DA25;
  *(void *)&long long v119 = v153 ^ 0x425764BB40000000;
  uint64_t v157 = v119 >> 30;
  *((void *)&v119 + 1) = v152 ^ v155 ^ 0x593A5;
  *(void *)&long long v119 = v152 ^ v155 ^ 0x8DE19E00D3E80000;
  unint64_t v158 = v150 ^ v140 ^ v154;
  uint64_t v159 = (v153 << 25) ^ 0x76B0EFB44A000000;
  unint64_t v160 = v150 & 0xFDFEEACE34F5F11BLL ^ 0x3BDA1E3360BF843ALL ^ (v150 & 0x2011531CB0A0EE4 | (v150 << 58));
  unint64_t v161 = v157 ^ (v153 >> 61 << 34) ^ 0x84F57132E3442245;
  uint64_t v162 = (v155 >> 41) ^ 0x356848;
  uint64_t v163 = (v119 >> 19) ^ ((v152 ^ v155 ^ 0x1A1739E52505662FLL) << 36) ^ ((v152 ^ v155 ^ 0x1A1739E52505662FLL) >> 28) ^ 0x6E8F58A97F6A7E5FLL;
  unint64_t v164 = v156 ^ 0x6E867054DA3D226DLL ^ (v163 - ((2 * v163) & 0xC6CFDCA813A16390) - 0x1C9811ABF62F4E38);
  uint64_t v165 = ((v150 >> 1) ^ 0x5806198617727483) & 0x34D05CF017B0D157 ^ 0x17345B997CCFB24DLL ^ (((2
                                                                                               * (((v150 >> 1) ^ 0x5806198617727483) & 0x34D054F017B0D157)) | 0x4FE89E12F7DE44B6)
                                                                                             - (((v150 >> 1) ^ 0x5806198617727483) & 0x34D054F017B0D157)
                                                                                             - 0x27F44F097BEF225BLL);
  unint64_t v166 = v165 - ((2 * v165) & 0xC5183AD15FEE1394) - 0x1D73E2975008F636;
  uint64_t v167 = v166 ^ 0x22BB79C88645D93BLL;
  uint64_t v168 = __ROR8__(v161, 34);
  *((void *)&v119 + 1) = v155 ^ 0x52;
  *(void *)&long long v119 = v155 ^ 0x6AD09136D6615B80;
  uint64_t v169 = v155 ^ 0x77F96AA7474A7911 ^ ((v119 >> 7) - ((2 * (v119 >> 7)) & 0x3A53F72322564586) + 0x1D29FB91912B22C3);
  uint64_t v170 = (v168 ^ (v153 >> 39) ^ 0x84AEC9) + v159;
  uint64_t v171 = v168 & v159;
  uint64_t v172 = v169 & v162;
  uint64_t v173 = v169 + v162;
  unint64_t v174 = v160 ^ (v150 << 63);
  uint64_t v175 = v170 - 2 * v171;
  unint64_t v176 = v166 ^ 0x22BB79C88645D93BLL ^ (v174 - ((2 * v160) & 0xE1EEE0605D2481CELL) - 0xF088FCFD16DBF19);
  if (v104 != 0x7809200909112110) {
    uint64_t v167 = v176 ^ 0xF088FCFD16DBF18;
  }
  uint64_t v177 = v175 ^ (8 * v153);
  uint64_t v178 = v176 + 2 * ((v167 ^ 0x70F770302E9240E7) & v160) + 0x7234540E77F9B6B5;
  if (((v166 ^ 0xD24C09F8A8D799DCLL) & v174) != 0) {
    unint64_t v179 = ((v174 + (v166 ^ 0x2DB3F60757286623) + 1) ^ 0xF23657BFFFFDFEB5)
  }
         + 0x7FFDFC4E77FBB800
         + ((2 * (v174 + (v166 ^ 0x2DB3F60757286623) + 1)) & 0xE46CAF7FFFFBFD6ALL);
  else {
    unint64_t v179 = v178;
  }
  uint64_t v180 = (v173 - 2 * v172) ^ (v155 << 23);
  unint64_t v181 = v158 ^ (v158 >> 10) ^ (v158 >> 17) ^ (v158 << 47) ^ (v158 << 54);
  uint64_t v182 = v180 ^ v181;
  *((void *)&v183 + 1) = v179 + 0xDCBABF18806494BLL;
  *(void *)&long long v183 = v179 - 0x7234540E77F9B6B5;
  unint64_t v184 = v177 ^ 0xAA6A2D4BA2838D66;
  uint64_t v185 = __ROR8__(__ROR8__(v180, 57) ^ __ROR8__(v164, 57) ^ 0xCB6122BDE7C86746, 7);
  unint64_t v186 = v177 ^ 0xAA6A2D4BA2838D66 ^ (v150 >> 6) ^ __ROR8__(__ROR8__(v150, 62) & 0xFFFFBFFFFFFFFFFBLL ^ 0x4F1EC6363424B53DLL ^ (v183 >> 61), 3);
  unint64_t v187 = v186 ^ 0xC341B7A7BB59AAAALL;
  unint64_t v188 = (v186 ^ 0xC341B7A7BB59AAAALL) & (v177 ^ 0x5595D2B45D7C7299);
  unint64_t v189 = (v186 ^ 0x3CBE485844A65555) & (v181 ^ 0x5156C560131506D7) ^ v177 ^ 0xAA6A2D4BA2838D66;
  *((void *)&v183 + 1) = v185 ^ 0x16FDF2E892CF90CELL;
  *(void *)&long long v183 = v185;
  uint64_t v190 = v188 ^ v185 ^ 0x16FDF2E892CF90CELL;
  unint64_t v191 = v187 ^ (v180 ^ 0x9B6B30ADE9000000) & (v181 ^ 0xAEA93A9FECEAF928);
  uint64_t v192 = (v185 ^ 0x16FDF2E892CF90CELL) & (v182 ^ 0x35C20A3205EAF928);
  unint64_t v193 = (__ROR8__((v183 >> 38) ^ 0x2F851D43D911B5B3, 26) ^ 0xAD6F61F41EB8AF09) & v184 ^ v182;
  unint64_t v194 = v190 ^ v193;
  unint64_t v195 = v190 ^ v193 ^ 0xCA3DF5CDFA1506D7;
  unint64_t v196 = v189 ^ v190;
  unint64_t v197 = v191 ^ 0x6DC4FB0BD4FFFF44;
  uint64_t v198 = v191 ^ 0x616B258C5FF13C26;
  unint64_t v199 = ((v191 ^ v192) - ((2 * (v191 ^ v192)) & 0xC31E608AA964A2CLL) + 0x618F304554B2516) ^ v181;
  *((void *)&v183 + 1) = v194 ^ 0x3D2C8;
  *(void *)&long long v183 = v194 ^ 0xC301D68EE1600000;
  unint64_t v200 = __ROR8__(__ROR8__(v198, 27) ^ 0x61D86C4195FBD0F1, 37);
  uint64_t v201 = v196 ^ (v196 >> 39) ^ (8 * v196) ^ (v196 << 25) ^ (v196 >> 61);
  uint64_t v202 = (v183 >> 19) ^ (v195 << 36) ^ (v195 >> 28) ^ 0xB76D41F000000000;
  uint64_t v203 = (v202 - ((2 * v202) & 0xC2DEB71505D4EBALL) + 0x616F5B8A82EA75DLL) ^ v194;
  *((void *)&v183 + 1) = v193 ^ 0x3627DE34586;
  *(void *)&long long v183 = v193 ^ 0x889D200000000000 ^ (((v193 << 57) ^ 0xC00000000000000)
                                                  - ((2 * ((v193 << 57) ^ 0xC00000000000000)) & 0xDFFFFFFFFFFFFFFFLL)
                                                  + 0x6F1561B1D4B0E6B1);
  uint64_t v204 = ((v201 ^ 0xABCF8FE7C463E5DLL)
        + (v197 ^ (v197 >> 1) ^ (v200 << 58))
        - 2 * ((v201 ^ 0xABCF8FE7C463E5DLL) & (v197 ^ (v197 >> 1) ^ (v200 << 58)))) ^ ((v200 >> 6) | (v200 << 63));
  uint64_t v205 = __ROR8__(__ROR8__(v193, 49) & 0xFFFFFFFFFFC07FFFLL ^ 0xFB7FDB2F68E2ECF6 ^ (v183 >> 42), 22);
  unint64_t v206 = v199 ^ (v199 >> 10) ^ (((v199 << 54) ^ (v199 << 47)) & 0xFFFF800000000000 | (v199 >> 17));
  uint64_t v207 = v206 ^ 0x60DE06265FAEDE53;
  if (v219) {
    unint64_t v208 = v205 ^ 0xDD74CA3F78583B7ELL;
  }
  else {
    unint64_t v208 = 0x228B35C087A7C481;
  }
  unint64_t v209 = v205 & 0xDD74CA3F78583B7ELL ^ __ROR8__(v193, 41) ^ v208 & v205 ^ 0x3B423AC9F8E4BF09;
  unint64_t v210 = v203 ^ v209;
  int v211 = v203 ^ v209 ^ 0xDA8F41A4;
  uint64_t v212 = (v209 + 0xB0C4CFB1827FD18 - ((2 * v209) & 0x161899F6304FFA30)) ^ v207;
  unint64_t v213 = v209 & (v206 ^ 0x942DB522B876DCB4) ^ v204;
  unint64_t v214 = v212 ^ (v210 ^ 0x3AE8DCC92570BE5BLL) & (v201 ^ 0xABCF8FE7C463E5DLL);
  unint64_t v215 = ((v210 ^ 0xC5172336DA8F41A4 ^ v204 & (v201 ^ 0xF543070183B9C1A2) ^ (v206 ^ 0x6BD24ADD4789234BLL) & ~v204)
        - ((2
          * (v210 ^ 0xC5172336DA8F41A4 ^ v204 & (v201 ^ 0xF543070183B9C1A2) ^ (v206 ^ 0x6BD24ADD4789234BLL) & ~v204)) & 0xEA45D9AF4D3D61A4)
        + 0x7522ECD7A69EB0D2) ^ v201;
  int v216 = v213 ^ v207 ^ ((v211 & ~v212) + 405273880 - ((2 * (v211 & ~v212)) & 0x304FFA30));
  BOOL v217 = a39 + 963945494 < a31;
  if (a33 > 0x825F778E != a39 + 963945494 < 0x7DA08871) {
    BOOL v217 = a33 > 0x825F778E;
  }
  return (*(uint64_t (**)(unint64_t, unint64_t, void, void, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 8 * (v41 ^ (102 * !v217))))(v215 ^ (8 * v215) ^ (v215 << 25) ^ (v215 >> 39) ^ (v215 >> 61), v213 ^ (v213 << 58) ^ ((v213 >> 1) ^ (v213 >> 6) | ((unint64_t)~v213 << 63)), v216 ^ 0x149E7u, a39, (v214 ^ 0xA272BCDEE69F6862 ^ (((v214 << 57) ^ 0xAE00000000000000)- ((2 * ((v214 << 57) ^ 0xAE00000000000000)) & 0xC800000000000000)- 0x1AB9721B064BBFCBLL)) & ((v214 >> 41) ^ 0x239A18), a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_100045DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x5D0] = *(void *)(v64 + 8 * v63);
  return sub_10000F488(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

void sub_100045DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t)*(&off_100233720
                + ((-35 * ((qword_100282DD0 - dword_100283A08) ^ 0xAE)) ^ byte_1001CEA30[byte_1001CB660[(-35 * ((qword_100282DD0 - dword_100283A08) ^ 0xAE))] ^ 0x4C])
                + 54);
  uint64_t v4 = *(void *)(v3 - 4);
  uint64_t v5 = (uint64_t)*(&off_100233720
                + (byte_1001CEA30[byte_1001CB660[(-35 * ((qword_100282DD0 - v4) ^ 0xAE))] ^ 0x4C] ^ (-35 * ((qword_100282DD0 - v4) ^ 0xAE)))
                + 89);
  unint64_t v6 = (unint64_t)&v9[v4 + *(void *)(v5 - 4)];
  *(void *)(v3 - 4) = 2121524189 * v6 - 0x5BDF866B682B5252;
  *(void *)(v5 - 4) = 2121524189 * (v6 ^ 0xA420799497D4ADAELL);
  **(_DWORD **)(a1 + 96) = *(_DWORD *)(a2 + 16);
  LODWORD(v6) = 1178560073
              * ((-124051203 - (&v11 | 0xF89B20FD) + (&v11 | 0x764DF02)) ^ 0xBDF0A760);
  int v11 = -2035249205 - v6;
  int v13 = 1172345435 - v6;
  uint64_t v12 = &STACK[0x35FF68D50C8F42E7];
  LODWORD(v5) = 2121524189 * ((*(_DWORD *)(v5 - 4) - *(_DWORD *)(v3 - 4)) ^ 0x97D4ADAE);
  uint64_t v7 = (char *)*(&off_100233720
               + ((-35 * (dword_100283A08 ^ 0xAE ^ qword_100282DD0)) ^ byte_1001D17A0[byte_1001CE930[(-35 * (dword_100283A08 ^ 0xAE ^ qword_100282DD0))] ^ 0xF4])
               - 22)
     - 8;
  (*(void (**)(int *))&v7[8
                                   * (v5 ^ byte_1001CEA30[byte_1001CB660[v5] ^ 0x4C])
                                   + 18144])(&v11);
  BOOL v8 = *(_DWORD *)(a2 + 16) - 943262394 + (~(2 * v10) & 0x46) + (v10 & 0x3F ^ 0x1EFF53DCu) < 0xFFFFFFC0;
  __asm { BRAA            X10, X17 }
}

void sub_1000460E8()
{
}

uint64_t sub_100046100()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((((*(unsigned __int8 *)(v2 + 1) - 134) << ((2 * v3) ^ 0x17)) & v1)
                                 + ((*(unsigned __int8 *)(v2 + 1) - 134) ^ v0) == v0)
                                * ((v3 - 1556) ^ 0xE5E)) ^ v3)))();
}

uint64_t sub_100046158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((((43 * (a6 ^ (a6 - 6))) ^ 0x838) * (v6 == a5)) ^ (v7 + a6 - 74))))();
}

uint64_t sub_1000461A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t (*a18)(uint64_t), uint64_t a19, uint64_t a20,uint64_t a21)
{
  int v24 = 628203409 * ((((v23 - 168) | 0x8BD99C87) - ((v23 - 168) & 0x8BD99C87)) ^ 0x95190B4);
  *(_DWORD *)(v23 - 160) = v24 + v21 + 1532;
  *(_DWORD *)(v23 - 156) = 1352758834 - v24;
  *(void *)(v23 - 168) = a21;
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(v22 + 8 * (v21 + 2283)))(v23 - 168);
  return a18(v25);
}

uint64_t sub_100046218(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v14 = (a3 + v12 + v11 - a4 + 1634);
  *(void *)(v8 - 7 + v14) = *(void *)(v9 - 7 + v14);
  return (*(uint64_t (**)(uint64_t, uint64_t, void, void, void))(v7
                                                                             + 8
                                                                             * (((a4 - (v10 & 0xFFFFFFF8) == -8)
                                                                               * ((a7 - 572) ^ 0xBC5)) ^ a7)))(a1, a2, (a3 + v12 + v11 - a4 + 1626), a4 - (v10 & 0xFFFFFFF8) + 16, v13 - (v10 & 0xFFFFFFF8));
}

uint64_t sub_100046278()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1228
                                * ((v1 & (2 * (*(unsigned __int8 *)(v2 + 3) - 134)))
                                 + ((*(unsigned __int8 *)(v2 + 3) - 134) ^ v0) == ((v3 + 216557585) & 0xF317957F ^ (v0 + 137)))) ^ v3)))();
}

void sub_1000462D8()
{
}

uint64_t sub_1000462E4()
{
  BOOL v7 = v0 == v5 && v2 != v3;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v1 + 1966) * v7) ^ v1)))();
}

void sub_100046318()
{
}

uint64_t sub_100046328(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((427 * (v3 + 1 == v5 + 80)) ^ a3)))();
}

uint64_t sub_1000463E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((736 * (v7 + 1 == v5 + 40)) ^ a5)))();
}

uint64_t sub_1000464A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22)
{
  return (*(uint64_t (**)(void))(v24
                              + 8 * ((13 * ((v22 ^ 0x8FD57FBA) + a22 - *(_DWORD *)(a2 + 4) == -1845102290)) ^ v23)))();
}

uint64_t sub_1000464E4@<X0>(uint64_t a1@<X8>)
{
  int v4 = *(_DWORD *)(v2 - 0x9F59A8236606BCLL);
  int v5 = v4 - 1477598966;
  if (v4 - 1477598966 < 0) {
    int v5 = 1477598966 - v4;
  }
  *(_DWORD *)(v1 - 0x9F59A8236606BCLL) = v4;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((509
                                * (((((v3 - 750) | 0x532) - 101460811) ^ v5) + ((2 * v5) & 0xF3E7B7D6) + 1051506367 == 950047402)) ^ v3)))();
}

uint64_t sub_100046578@<X0>(int a1@<W8>)
{
  int v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0xCAD));
  return v3(v1);
}

void sub_1000465AC()
{
}

uint64_t sub_1000465B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                                + 8
                                                                                * ((135
                                                                                  * (v3 == (v4 ^ 0x669)
                                                                                         + v4
                                                                                         - 850
                                                                                         - 1315)) ^ v4)))(a1, a2, a3, 84210482, 1621298222);
}

void sub_1000465FC()
{
}

uint64_t sub_100046608(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15)
{
  BOOL v20 = a13 > v18;
  *(_DWORD *)(a15 + 4 * (a1 - 705324210)) = v15;
  int v21 = ((v16 - 1630897380) & 0x613585DF ^ 0x680433E6) + a1;
  uint64_t v22 = (a1 + 1);
  int v23 = v20 ^ (v21 < 302947241);
  BOOL v24 = v21 < v17;
  if (!v23) {
    BOOL v20 = v24;
  }
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((98 * v20) ^ v16)))(v22);
}

void sub_100046690()
{
}

uint64_t sub_100046698()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((v1 ^ 0x77C) + (((v1 ^ 0x1D8) + 2073115882) & 0x846EBFEF) - 1519)
                                     * (v0 != 1242104711)) ^ v1 ^ 0x1D8)))();
}

uint64_t sub_1000466FC(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)((((((v3 ^ 0x684) + 780) ^ 0xFFFFFEA1) + 51 * (v3 ^ 0x684))
                                     * ((a3 + v4 + 605440130) > 7)) ^ v3)))();
}

uint64_t sub_100046760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  unsigned int v15 = v13 - 62;
  if (v15 <= 0x40) {
    unsigned int v15 = 64;
  }
  return (*(uint64_t (**)(void))(v14
                              + 8
                              * ((115
                                * (((-v11 - v12 + v15 + 62 < 0xF) ^ (115 * (a11 ^ 0x31)) ^ 0x95) & 1)) ^ a11)))();
}

uint64_t sub_1000467D8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((a1 + 8 == ((v1 - 996) ^ v2 ^ (v4 + 32))) | v1)))();
}

uint64_t sub_100046804()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((30
                                * (v0 > ((((LODWORD(STACK[0x3F4]) - 616) ^ 0x548) + 1033365154) ^ (LODWORD(STACK[0x3F4]) - 616)))) ^ (LODWORD(STACK[0x3F4]) + 224))))();
}

uint64_t sub_10004684C(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, _DWORD *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  int v23 = 1759421093 * ((v22 + 1349676055 - 2 * ((v22 - 136) & 0x50726C9F)) ^ 0xE30FDCCB);
  *(_DWORD *)(v22 - 120) = a3 - v23 + 469;
  *(void *)(v22 - 128) = a21;
  *(_DWORD *)(v22 - 136) = ((((a3 - 886) ^ 0xF075AB4E) + a1) & 0xFFFFFFF0) - v23 + 1283073679;
  *(_DWORD *)(v22 - 132) = v23 + a1 - a15 - 1957202875;
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(v21 + 8 * (a3 ^ 0xB3B)))(v22 - 136);
  return (*(uint64_t (**)(uint64_t))(v21 + 8 * ((1239 * (*a16 == -2124048112)) ^ a3)))(v24);
}

uint64_t sub_100046938(uint64_t a1, uint64_t a2)
{
  return sub_10002DA38(a1, a2, 4289092108);
}

uint64_t sub_100046944()
{
  int v5 = (v0 + 418) | 5;
  *uint64_t v1 = v1[623];
  unint64_t v6 = STACK[0x3E0];
  int v7 = STACK[0x3E0] + 1;
  int v8 = (v5 - 1518279764) & 0xE5E6FF82 ^ STACK[0x3E0];
  *(_DWORD *)(v4 - 192) = (v5 - 1518279729) ^ STACK[0x3E0];
  *(void *)(v4 - 184) = (v2 + 678268378) ^ v6;
  *(_DWORD *)(v4 - 176) = v5 - v6 - 1501686881;
  *(_DWORD *)(v4 - 172) = v7;
  *(_DWORD *)(v4 - 200) = v8;
  *(_DWORD *)(v4 - 196) = v5 - 1518279764 - v6;
  *(void *)(v4 - 168) = STACK[0x3D8];
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v5 + 1172)))(v4 - 200);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v4 - 160)))(v9);
}

uint64_t sub_1000469F4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  BOOL v14 = a10 - v12 != 36732058 || a1 == ((v10 + 69237807) | 0x201C6C08) + 1235772683;
  return (*(uint64_t (**)(void))(v11 + 8 * (int)((v14 * (((v10 + 20378056) & 0xFEC90FDF) + 601)) ^ v10)))();
}

void sub_100046A70()
{
}

void sub_100046A78()
{
}

uint64_t sub_100046AAC(double a1)
{
  double *v2 = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 == 0) * v3) ^ v1)))();
}

uint64_t sub_100046AD0()
{
  int v5 = 1759421093 * ((((v4 - 136) | 0xED1AE6E0) - (v4 - 136) + ((v4 - 136) & 0x12E51918)) ^ 0x5E6756B4);
  *(_DWORD *)(v4 - 136) = v3 - v5 + 26 * (v0 ^ 0x71D) + 1154913423;
  *(_DWORD *)(v4 - 120) = v0 - v5 - 434;
  *(void *)(v4 - 128) = v1;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 + 365)))(v4 - 136);
  return sub_100046B5C(v6);
}

uint64_t sub_100046B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v17 - 112) = v16;
  *(_DWORD *)(v17 - 120) = v15
                         + 1178560073 * ((7350338 - ((v17 - 136) | 0x702842) + ((v17 - 136) | 0xFF8FD7BD)) ^ 0x451BAFDF)
                         + 1565;
  *(void *)(v17 - 128) = a14;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 ^ 0x8D0)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * ((953
                                              * (*(_DWORD *)(v17 - 136)
                                               - 1532862473
                                               + ((v15 - 1562663106) & 0x5D2459FBu)
                                               - 418 < 0xFE2C275C)) ^ v15)))(v18);
}

uint64_t sub_100046C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v8 = LODWORD(STACK[0x4CC]) - 1684978587;
  unsigned int v9 = v6 + (((v5 ^ 0x1F7) * a5) ^ 0x9DC1C194);
  int v10 = (v9 < 0xBE373621) ^ (v8 < v5 - 1103678389);
  BOOL v11 = v8 < v9;
  if (v10) {
    BOOL v11 = v9 < 0xBE373621;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((38 * v11) ^ v5)))();
}

uint64_t sub_100046CAC(uint64_t a1, uint64_t a2, int a3, unsigned int a4)
{
  return (*(uint64_t (**)(uint64_t, void))(v4
                                                    + 8
                                                    * ((92
                                                      * (*(_DWORD *)(*v6 + 4 * a4) != v5 + 574 * (a3 ^ 0x422) - 1148)) | a3)))(a1, a3 ^ 0x643u);
}

uint64_t sub_100046CF4()
{
  return (*(uint64_t (**)(void))(*(void *)(v2 + 8 * (v0 ^ 0x10Eu))
                              - 8
                              + 8 * ((((v1 - 1) < 0x7FFFFFFF) * ((v0 ^ 0x253) - 919)) ^ v0)))();
}

uint64_t sub_100046D38@<X0>(void *a1@<X1>, int a2@<W2>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  unint64_t v31 = (*(_DWORD *)(a19 + 4 * (a3 + 1 + v24)) ^ v19)
      + HIDWORD(v22)
      + v23 * (unint64_t)(*(_DWORD *)(*a1 + 4 * (a3 + 1 + v24)) ^ v19);
  *(_DWORD *)(a19 + 4 * (a3 + v24)) = v19 + (v20 ^ v26) * v27 + v31 - (v21 & (2 * v31)) - 1729;
  BOOL v33 = a3 + v28 < v29 && a3 + v28 >= a2;
  return (*(uint64_t (**)(void))(v25 + 8 * ((v33 * v30) ^ v20)))();
}

uint64_t sub_100046DAC@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((*(_DWORD *)(v5 + (a2 + v3 + v4 - 1005 - 363) * (uint64_t)a1 + 36) == a3)
                                * (((v4 - 1016) | 0x40C) ^ 0x558)) ^ v4)))();
}

uint64_t sub_100046E0C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5
                                                              + 8
                                                              * (((LODWORD(STACK[0x214]) + 1452) * (v4 == v6)) ^ (a4 - 959))))(3690937254, a2, 3086909270);
}

uint64_t sub_100046E50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100046E80(a1, a2, v3, a3);
}

uint64_t sub_100046E80@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W4>, void *a4@<X5>, uint64_t a5@<X7>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  unint64_t v25 = (a5 ^ HIDWORD(v16)) + v24 * (unint64_t)(*(_DWORD *)(*a4 + 4 * (v23 + ((v22 + a6) & v13))) ^ v12);
  int v26 = *(_DWORD *)(a12 + 4 * (v17 + v23 + 179));
  *(_DWORD *)(a12 + 4 * (v17 + v23 + 179)) = (v25 + (v26 ^ v12) + a1 - (v20 & (2 * (v25 + (v26 ^ v12))))) ^ v15;
  int v27 = a2 + v23 + 1234;
  int v28 = (v14 > v18) ^ (v27 < v21);
  BOOL v29 = v27 < a3;
  if (v28) {
    BOOL v29 = v14 > v18;
  }
  return (*(uint64_t (**)(void))(v19 + 8 * ((30 * v29) ^ v22)))();
}

uint64_t sub_100046F64()
{
  int v4 = (v0 - 1506549944) & 0x59CC243F;
  *(_DWORD *)uint64_t v2 = 390557914;
  (*(void (**)(uint64_t))(v3 + 8 * (v0 ^ 0x83F)))(v1);
  int v5 = (v4 - 779) | 0x44D;
  int8x16_t v6 = (int8x16_t)vld1q_dup_f32((const float *)v2);
  v7.i64[0] = 0x8000000080000000;
  v7.i64[1] = 0x8000000080000000;
  v8.i64[0] = *(void *)(v2 + 4);
  v8.i32[2] = *(_DWORD *)(v2 + 12);
  int8x16_t v9 = vextq_s8(v6, v8, 0xCuLL);
  int8x16_t v10 = v8;
  v10.i32[3] = *(_DWORD *)(v2 + 16);
  int32x4_t v11 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v10, *(int8x16_t *)&STACK[0x320]), vandq_s8(v9, v7)), 1uLL), *(int8x16_t *)&STACK[0x310]);
  v12.i32[0] = *((_DWORD *)&STACK[0x648] + (*(_DWORD *)(v2 + 4) & 1));
  v12.i32[1] = *((_DWORD *)&STACK[0x648] + (*(_DWORD *)(v2 + 8) & 1));
  v12.i32[2] = *((_DWORD *)&STACK[0x648] + (*(unsigned int *)(v2 + 12) & ((v5 + 1040558543) & 0xC1FA56FB ^ 0x61BLL)));
  v12.i32[3] = *((_DWORD *)&STACK[0x648] + (v10.i8[12] & 1));
  *(int8x16_t *)uint64_t v2 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v2 + 1588), v12), *(int8x16_t *)&STACK[0x2E0]), (int8x16_t)vaddq_s32(vsubq_s32(v11, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v11, v11), *(int8x16_t *)&STACK[0x300])), *(int32x4_t *)&STACK[0x2F0]));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(v3 + 8 * v5))(1357384704, 1040558543, 3254408955, 1563, &STACK[0x648]);
}

uint64_t sub_1000470F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v11 = *(unsigned __int8 *)(v8 + v9 - 0x2D70574B447184DALL) - *(unsigned __int8 *)(v7 + v9 - 0x2D70574B447184DALL);
  return (*(uint64_t (**)(uint64_t))(v10
                                            + 8
                                            * (((((((v5 - 1073399108) ^ 0xC0054645) + 1067242905) & (2 * v11))
                                               + (v11 ^ v6) == v6)
                                              * (a5 + ((v5 - 1073399108) | 0x510) + 240)) ^ v5)))(4294925278);
}

uint64_t sub_100047170(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)((((((a1 + 1602434827) & 0xA07CCCC6) - 555) ^ 0x216) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_1000471B0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = v7 + v5;
  *(unsigned char *)(v9 + a5 + 1084) = a1;
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((60 * (v9 + (unint64_t)(((v6 - 178291427) & 0xAA082DEu) - 718) + 1069 < 0x38)) ^ (v6 - 178291427) & 0xAA082DEu)))();
}

uint64_t sub_100047204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  *(_DWORD *)(v23 - 112) = v21 + 1374699841 * ((v23 - 128) ^ 0x6DF41809) + 1083;
  *(void *)(v23 - 128) = a21;
  *(void *)(v23 - 120) = a7;
  (*(void (**)(uint64_t))(v22 + 8 * (v21 + 1451)))(v23 - 128);
  *(void *)(v23 - 120) = a21;
  *(_DWORD *)(v23 - 112) = v21
                         + 1178560073
                         * ((((v23 - 128) ^ 0x5F497C76) & 0x2F4F9D48 | ~((v23 - 128) ^ 0x5F497C76 | 0x2F4F9D48)) ^ 0x356D66A3)
                         + 906;
  *(void *)(v23 - 104) = a19;
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(v22 + 8 * (v21 + 1469)))(v23 - 128);
  return (*(uint64_t (**)(uint64_t))(v22
                                            + 8
                                            * (v21 | (4
                                                    * ((v21 ^ (*(_DWORD *)(v23 - 128) == ((v21 + 441) ^ 0x5B5DA4BC))) & 1)))))(v24);
}

uint64_t sub_100047318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x5D0] = *(void *)(v64 + 8 * v63);
  return sub_10000F488(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

uint64_t sub_100047324(int a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((23 * (v1 < ((17 * (a1 ^ 0x619)) ^ 0x42Du))) ^ a1)))();
}

uint64_t sub_100047364()
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((*(_DWORD *)(*v1 + 4 * v2) == v4 - 1310081290) * v3) ^ v0)))();
}

uint64_t sub_10004739C()
{
  unsigned int v3 = (v1 ^ 0x501) - v0;
  if (v3 <= 0x40) {
    unsigned int v3 = 64;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((42 * (v0 + v3 - 65 > 6)) | v1)))();
}

void sub_1000473F4()
{
}

void sub_1000473FC()
{
  int v1 = (const float *)(v0 + 908);
  vld1q_dup_f32(v1);
  JUMPOUT(0x100047414);
}

uint64_t sub_1000474C8(uint64_t a1)
{
  STACK[0x460] = v1;
  uint64_t v2 = (uint64_t (*)(void))STACK[0x440];
  STACK[0x380] = a1 - 112;
  STACK[0x510] = a1 - 112;
  return v2();
}

uint64_t sub_1000474EC()
{
  int v4 = v3 ^ 0x77C;
  int v5 = (v3 ^ 0x77C) + 292;
  unsigned int v6 = v1 - 556897186;
  BOOL v7 = v6 < 0xEF50C76B;
  BOOL v8 = v2 - 279918741 < v6;
  if (v2 > 0x10AF3894 != v7) {
    BOOL v8 = v7;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((((v4 + 282) ^ v5) * v8) ^ v4)))();
}

uint64_t sub_100047560(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 ^ (1755732067 * ((a1 & 0xECFD530 | ~(a1 | 0xECFD530)) ^ 0x2FF69714));
  return (*((uint64_t (**)(void))*(&off_100233720 + v1 - 1437)
          + (((32 * (((*(void *)(a1 + 8) == 0x6C0C7F2AED40EE91) ^ (113 * (v1 ^ 0x2A))) & 1)) & 0xBF | ((((*(void *)(a1 + 8) == 0x6C0C7F2AED40EE91) ^ (113 * (v1 ^ 0x2A))) & 1) << 6)) ^ v1)
          - 1))();
}

uint64_t sub_100047608@<X0>(int a1@<W8>)
{
  if (*(void *)(v2 + 32) | *(void *)(v2 + 56)) {
    BOOL v4 = *(_DWORD *)(v2 + 48) - a1 == ((527 * (v1 ^ 0x62E) + 1343638761) ^ (775 * (v1 ^ 0x62F)));
  }
  else {
    BOOL v4 = 1;
  }
  int v5 = !v4;
  return (*(uint64_t (**)(void))(v3 + 8 * ((37 * v5) ^ v1 ^ 0x166)))();
}

void sub_10004767C()
{
  uint64_t v0 = (unint64_t *)*(&off_100233720
                           + ((-35 * (dword_100282DE0 ^ 0xAE ^ qword_100282DD0)) ^ byte_1001D17A0[byte_1001CE930[(-35 * (dword_100282DE0 ^ 0xAE ^ qword_100282DD0))] ^ 0x1A])
                           - 161);
  unsigned __int8 v1 = -35 * (*v0 ^ qword_100282DD0 ^ 0xAE);
  uint64_t v2 = (uint64_t)*(&off_100233720
                + (byte_1001D6470[byte_1001D16AC[v1 - 12] ^ 0x19] ^ v1)
                + 26);
  unint64_t v3 = *v0 ^ (unint64_t)&v5 ^ *(void *)(v2 - 4);
  unint64_t *v0 = (2121524189 * v3) ^ 0xA420799497D4ADAELL;
  *(void *)(v2 - 4) = 2121524189 * (v3 ^ 0xA420799497D4ADAELL);
  v6[1] = 108757529 * ((v6 + 70320331 - 2 * (v6 & 0x43100CB)) ^ 0xE4AD62E0) + 1695027452;
  LOBYTE(v2) = -35 * ((*(_DWORD *)(v2 - 4) + *(_DWORD *)v0) ^ 0xAE);
  BOOL v4 = (char *)*(&off_100233720
               + ((-35 * ((qword_100282DD0 - dword_100282DE0) ^ 0xAE)) ^ byte_1001CE730[byte_1001CB460[(-35 * ((qword_100282DD0 - dword_100282DE0) ^ 0xAE))] ^ 0x5B])
               + 93)
     - 8;
  (*(void (**)(_DWORD *))&v4[8
                                      * (byte_1001D6378[(byte_1001D15A0[v2] ^ 0x7B)
                                                                       - 8] ^ v2)
                                      + 18392])(v6);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000478AC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  unsigned int v10 = v2 - 120779724;
  int v11 = v2 - 1;
  int v12 = *(unsigned __int8 *)(v6 + v10);
  if (v12 == 91) {
    __asm { BRAA            X11, X17 }
  }
  if (v12 == 219)
  {
    int v13 = -2124048112;
    uint64_t v14 = *(void *)(v4 + 8);
    int v15 = *(unsigned __int8 *)(v4 + 16) ^ v5;
    *(void *)uint64_t result = v6;
    *(_DWORD *)(result + 8) = v7;
    *(_DWORD *)(result + 12) = v11;
    if (v15 == 122) {
      int v16 = -1675502292;
    }
    else {
      int v16 = -1675502291;
    }
    *(_DWORD *)(result + 16) = 1533631348;
    *(_DWORD *)(result + 20) = v16;
    *(_DWORD *)(result + 24) = -2124048112;
    *(void *)(v14 - 0x3DC5316605FC20BALL) = a2;
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(void))(v9 + 8 * (v8 + 1265)))();
    int v13 = 2124071625;
  }
  *(_DWORD *)uint64_t v4 = v13;
  return result;
}

uint64_t sub_100047990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))(v14 + 8 * (((((v12 == 0) ^ (v13 + 118)) & 1) * (((v13 - 501) | 0x102) - 418)) | v13)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, *(void *)(a1 + 32), a11, a12);
}

uint64_t sub_1000479E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((((v10 + 868) ^ a8) + 1842) * (v9 == 0)) ^ v10)))();
}

uint64_t sub_100047A14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14)
{
  a14 = v16
      + 108757529
      * (((&a13 | 0x7488BE6A) - &a13 + (&a13 & 0x8B774190)) ^ 0x9414DC41)
      + 1695026730;
  uint64_t v17 = (*(uint64_t (**)(int *))(v15 + 8 * (v16 + 1604)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((373 * (a13 == v14 + v16 + ((v16 + 1826036013) & 0x6CB) - 1437)) ^ v16)))(v17);
}

uint64_t sub_100047ABC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((((4 * v2) ^ 0xFFFFF1DD) + (v2 ^ 0x685)) * (a1 == v1)) ^ v2)))();
}

uint64_t sub_100047B08@<X0>(int a1@<W6>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v4 - 220 + a2 - 1575261667) = 91;
  return (*(uint64_t (**)(void))(v3 + 8 * ((1630 * ((unint64_t)(a2 - 1575261666) < 0x38)) ^ (a1 + v2 - 128))))();
}

void sub_100047B50()
{
}

uint64_t sub_100047B6C@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  return sub_100047BE0(a2 - 0x9F59A8236606B8, 0x820996CC6D97A987, 0xFFF77DB7FAEDD7F1, 0x1F5DBBDF6, 0x7DFEEB7B977A777ELL, (a1 + 1802), 13);
}

uint64_t sub_100047BE0(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  uint64_t v18 = 4 * (v16 + v13);
  int v19 = v7 + a2 + (*(_DWORD *)(*v12 + v18) ^ v10);
  *(_DWORD *)(*a1 + v18) = v19 + v14 - (v17 & (2 * v19));
  int v20 = v16 + 1 + v8;
  BOOL v22 = v20 > a6 || v20 < v9;
  return (*(uint64_t (**)(void))(v15 + 8 * ((v22 * a7) ^ v11)))();
}

uint64_t sub_100047C50()
{
  (*(void (**)(void))(v1 + 8 * (v0 + 1197)))();
  return (*(uint64_t (**)(void))(v1 + 8 * ((238 * (STACK[0x430] != 0)) ^ (v0 - 400))))();
}

uint64_t sub_100047C88@<X0>(int a1@<W8>)
{
  int v4 = ((v1 - 2098350991) & 0x7D124BDD) + a1 - 1212523309;
  BOOL v6 = v4 > 2084135981 || v4 < v3;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v6 | (8 * v6)) ^ v1)))();
}

uint64_t sub_100047CE8()
{
  int v5 = v0 < v1;
  if (v5 == v2 - 0xC0068C45C5CB302 < ((v3 + 1585153550) & 0xA184757B ^ 0xF5553073uLL)) {
    int v5 = v2 - 0xC0068C45C5CB302 < v0;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * (((v5 << 6) | (v5 << 9)) ^ v3)))();
}

uint64_t sub_100047D60()
{
  *(void *)(v5 - 128) = v3;
  *(void *)(v5 - 120) = v0;
  *(_DWORD *)(v5 - 136) = v4
                        - 108757529
                        * ((((v5 - 136) | 0x80490B75) - (v5 - 136) + ((v5 - 136) & 0x7FB6F488)) ^ 0x60D5695E)
                        - 387;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v4 + 950)))(v5 - 136);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8 * (int)((((v4 ^ 0xFFFFFEF8) + v4 - 133) * (v2 == 1748985337)) ^ v4)))(v6);
}

uint64_t sub_100047E04()
{
  return sub_100047E10();
}

uint64_t sub_100047E10(uint64_t a1)
{
  return sub_100047E24(a1, (v1 + 536869349) & *(_DWORD *)(v2 - 140));
}

uint64_t sub_100047E24()
{
  return (*(uint64_t (**)(void))(v1 + 8 * v0))();
}

void sub_100047E90()
{
}

uint64_t sub_100047EA4(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((488 * (a1 + v2 + (((v1 - 697) | 0x92) ^ 0x1020A4E1u) > 7)) ^ v1)))();
}

uint64_t sub_100047F2C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int8x16x4_t v17 = vld4q_s8(a4);
  uint8x16_t v9 = (uint8x16_t)veorq_s8(v17.val[2], v8);
  _Q21 = vmovl_high_u8(v9);
  _Q20 = vmovl_u8(*(uint8x8_t *)v9.i8);
  __asm
  {
    SHLL2           V20.4S, V20.8H, #0x10
    SHLL2           V21.4S, V21.8H, #0x10
  }
  return sub_1000511D4(a1, a2, a3, (uint64_t)a4, v7 - 1126, a6, a7, 1533701554);
}

uint64_t sub_10004805C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v1 ^ 0x427) + 596) ^ 0x424) * (v0 == v2)) | v1)))();
}

uint64_t sub_100048094@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_DWORD *)(*(void *)(a2 + 96) + 24) = v3;
  unsigned int v4 = *(_DWORD *)(a1 + 4) - ((2 * *(_DWORD *)(a1 + 4) - 1089137220) & 0x850F8A2C) - 1575858188;
  return (*(uint64_t (**)(void))(v2
                                           + 8
                                           * ((469
                                             * (((2 * v4) & 0xB7D36EFC ^ 0x85030A2C) + (v4 ^ 0x196E7268) + 805306094 == 199865964)) ^ 0x6FCu)))(0);
}

uint64_t sub_100048130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unint64_t *a22,uint64_t a23,unsigned int a24,unsigned int a25,unsigned int a26,int a27)
{
  unsigned int v29 = 460628867 * ((&a22 - 768152863 - 2 * (&a22 & 0xD236EAE1)) ^ 0x9EA0689C);
  a22 = &STACK[0x17594DE918184A3B];
  a23 = a17;
  a24 = v29 - 372243164;
  a25 = v29 + a10 + 2138962258;
  a26 = (a13 ^ 0xDFFFEADF) - v29 + (a13 << (a10 ^ 0x4F)) + 2127166966;
  uint64_t v30 = (*(uint64_t (**)(unint64_t **))(v28 + 8 * (a10 ^ 0xCDC)))(&a22);
  return (*(uint64_t (**)(uint64_t))(v28
                                            + 8
                                            * ((3194 * (a27 == v27 + ((a10 - 128519827) & 0x7A90F7C) - 1336)) ^ a10)))(v30);
}

void sub_100048244()
{
}

uint64_t sub_1000482C8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 1374699841 * ((((2 * a1) | 0x340440B2) - a1 + 1711136679) ^ 0xF7F63850);
  return (*((uint64_t (**)(void))*(&off_100233720 + v1 - 1700)
          + (int)(((*(void *)a1 == *(void *)(a1 + 8)) * (((v1 + 316356805) & 0xED24C4F6) - 1139)) ^ v1)
          - 1))();
}

uint64_t sub_100048350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1000483E0(a1, ((v5 - 1033) | 0x400) ^ 0x4E973C31u, 2976433870, a4, a5, &STACK[0x9F59A823660730], &STACK[0x9F59A823660740]);
}

uint64_t sub_1000483E0@<X0>(unsigned int a1@<W1>, int a2@<W2>, unsigned int a3@<W7>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  *(_DWORD *)(a20 + 4 * a4) = v20;
  int v25 = a4 + 1 + v21;
  BOOL v26 = v25 < a2;
  BOOL v27 = v25 > v23;
  if (a3 > a1 != v26) {
    BOOL v28 = v26;
  }
  else {
    BOOL v28 = v27;
  }
  return (*(uint64_t (**)(void))(v24 + 8 * (!v28 | (8 * !v28) | v22)))();
}

uint64_t sub_10004842C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t (*a18)(uint64_t), uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  int v25 = 628203409 * ((v24 - 160) ^ 0x82880C33);
  *(_DWORD *)(v24 - 152) = v25 + v22 + 1485;
  *(_DWORD *)(v24 - 148) = 1352758834 - v25;
  *(void *)(v24 - 160) = a22;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v22 + 2236)))(v24 - 160);
  return a18(v26);
}

uint64_t sub_100048498(uint64_t a1, int a2)
{
  int v6 = *(_DWORD *)(v4 + v3 * (uint64_t)a2 + 36) + 1418537918;
  BOOL v8 = v6 > ((v2 - 303875292) & 0x121CC77D) - 80401534 && v6 < SLODWORD(STACK[0x380]);
  return (*(uint64_t (**)(void))(v5 + 8 * ((1695 * v8) ^ v2)))();
}

uint64_t sub_10004850C()
{
  *(_DWORD *)(v5 - 136) = v3
                        - 108757529
                        * ((-2 - (((v5 - 136) ^ 0x220D1800 | 0xDDB086BB) + ((v5 - 136) ^ 0x4820828A | 0x224F7944))) ^ 0x754E075E)
                        - 82;
  *(void *)(v5 - 128) = v0;
  *(void *)(v5 - 120) = v4;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v3 + 1255)))(v5 - 136);
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * ((1027 * (v2 == (v3 ^ 0x351) + 568771999)) ^ v3)))(v6);
}

uint64_t sub_1000485C8(uint64_t result)
{
  unint64_t v1 = 1755732067 * ((2 * (result & 0x155053FA18C8728CLL) - result + 0x6AAFAC05E7378D73) ^ 0xB7040B3A39F130A8);
  unint64_t v2 = *(void *)(result + 16) + v1;
  unint64_t v3 = *(void *)(result + 32) - v1;
  BOOL v4 = v3 > v2;
  BOOL v5 = v3 == v2;
  int v6 = v4;
  if ((*(_DWORD *)(result + 4) ^ (1755732067 * ((2 * (result & 0x18C8728C) - result - 415789709) ^ 0x39F130A8)))) {
    BOOL v5 = v6;
  }
  if (v5) {
    int v7 = *(_DWORD *)(result + 12) ^ (1755732067 * ((2 * (result & 0x18C8728C) - result - 415789709) ^ 0x39F130A8));
  }
  else {
    int v7 = *(_DWORD *)(result + 24) - 1755732067 * ((2 * (result & 0x18C8728C) - result - 415789709) ^ 0x39F130A8);
  }
  *(_DWORD *)uint64_t result = v7 ^ (*(_DWORD *)(result + 8)
                          - 1755732067 * ((2 * (result & 0x18C8728C) - result - 415789709) ^ 0x39F130A8));
  return result;
}

uint64_t sub_10004866C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((8 * (a1 + 1 == v3 + 48)) | (16 * (a1 + 1 == v3 + 48))) ^ v1)))();
}

void sub_100048744(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) - 3804331 * (((a1 | 0x51A664) - (a1 & 0x51A664)) ^ 0x7E848392);
  __asm { BRAA            X8, X17 }
}

void sub_100048814(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x35FF68D50C8F4053) = (*(_DWORD *)(a1 - 0x35FF68D50C8F4053) ^ 0xE80B51E8)
                                         - 401911320
                                         - ((2 * (*(_DWORD *)(a1 - 0x35FF68D50C8F4053) ^ 0xE80B51E8) + 2) & 0xD016A3D0)
                                         + 1;
}

uint64_t sub_10004885C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v0 + 637336205) ^ (v1 == 68987230)) & 1) == 0) * (((v0 - 61) | 0x120) - 766)) ^ v0)))();
}

uint64_t sub_1000488C0()
{
  int v4 = (v3 - 1691932044) & 0x16FF;
  int v12 = &STACK[0xC9996988DE50FE];
  int v13 = v7;
  unsigned int v10 = (v3 + 1818) ^ (1374699841
                     * ((-2113025871 - (&v10 | 0x820DC8B1) + (&v10 | 0x7DF2374E)) ^ 0x10062F47));
  (*(void (**)(unsigned int *))(v1 + 8 * (v3 + 1846)))(&v10);
  unsigned int v10 = (v3 + 1244) ^ (1755732067 * (((&v10 | 0xF2D4296) - (&v10 & 0xF2D4296)) ^ 0xD1EBFF4D));
  int v12 = v7;
  (*(void (**)(unsigned int *))(v1 + 8 * (v3 + 1921)))(&v10);
  if (v13 == (v4 ^ (v0 + 711))) {
    int v5 = v8;
  }
  else {
    int v5 = (int)v13;
  }
  unsigned int v11 = v3 + ((&v10 - 1593088549 - 2 * (&v10 & 0xA10B65DB)) ^ 0xABFF6BF4) * v2 - 26;
  int v12 = v7;
  (*(void (**)(unsigned int *))(v1 + 8 * (v3 ^ 0x939u)))(&v10);
  int v12 = v9;
  unsigned int v11 = v4 + ((((2 * &v10) | 0xD7D9F760) - &v10 + 336790608) ^ 0xE118F59F) * v2 - 398;
  (*(void (**)(unsigned int *))(v1 + 8 * (v4 + 1443)))(&v10);
  return v5 ^ v0;
}

uint64_t sub_100048AB4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, _DWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, unsigned int a16)
{
  *a4 = 0;
  *a5 = 0;
  a16 = 108757529
      * (((&a15 | 0x51085D1D) - &a15 + (&a15 & 0xAEF7A2E0)) ^ 0xB1943F36)
      + 1695027452;
  uint64_t v19 = (*(uint64_t (**)(int *))(v16 + 18608))(&a15);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((205 * (a15 == v18)) ^ v17)))(v19);
}

uint64_t sub_100048B4C(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  *((unsigned char *)&STACK[0x2D8] + v8) = *(unsigned char *)(v13 + (v7 + a3))
                                 - (a7 & (2 * *(unsigned char *)(v13 + (v7 + a3))))
                                 + 91;
  return (*(uint64_t (**)(void))(v12 + 8 * (((v8 + 1 == ((v9 + a2) & v10) - 15) * v11) ^ v9)))();
}

uint64_t sub_100048B9C@<X0>(int a1@<W5>, int a2@<W8>)
{
  uint64_t v15 = ((a2 - a1 + 1380 + v4) | v5) - a1 + 348;
  uint64_t v16 = v3 - 0x64C68B25B7B694ELL + (v15 ^ 0x64C68B1F422D462);
  BOOL v18 = ((**v8 - (*v2 ^ v12)) ^ v11) + (v14 & (2 * (**v8 - (*v2 ^ v12)))) + v6 != ((v15 - v9 - 16) ^ v13)
     || v16 == 0;
  return (*(uint64_t (**)(uint64_t))(v10 + 8 * (int)((v18 * v7) ^ v15)))(0x64C68B1F422D462);
}

void sub_100048C38()
{
}

uint64_t sub_100048C50(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8 * ((2698 * (v6 + 1 == v5 + 16)) ^ v3)))(a1, a2, v2);
}

void sub_100048D28()
{
}

uint64_t sub_100048D30(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52
                                                              + 8
                                                              * ((((a52 & a8 ^ 0xEED0C7E) == 250416241) * a4) ^ (LODWORD(STACK[0x3F4]) + 1159))))(a1, 4044551070, 1036);
}

uint64_t sub_100048D8C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((v3 >= ((179 * (a3 ^ 0x595) - 1093409410) & 0x412C1DFEu) - 1398)
                                * (((179 * (a3 ^ 0x595) - 521) | 0x88) ^ 0x18)) | (179 * (a3 ^ 0x595)))))();
}

uint64_t sub_100048DE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  return sub_10003318C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a3, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

void sub_100048DF0(uint64_t a1)
{
  uint64_t v2 = (unint64_t *)*(&off_100233720
                           + ((-35 * (dword_100282DE8 ^ 0xAE ^ qword_100282DD0)) ^ byte_1001CEA30[byte_1001CB660[(-35 * (dword_100282DE8 ^ 0xAE ^ qword_100282DD0))] ^ 0x13])
                           + 20);
  uint64_t v3 = (uint64_t)*(&off_100233720
                + (byte_1001CEA34[(byte_1001CB660[(-35 * ((qword_100282DD0 + *v2) ^ 0xAE))] ^ 0x13)
                                                 - 4] ^ (-35 * ((qword_100282DD0 + *v2) ^ 0xAE)))
                - 26);
  unint64_t v4 = *(void *)(v3 - 4) - *v2 - (void)&v8;
  unint64_t v5 = (2121524189 * v4) ^ 0xA420799497D4ADAELL;
  unint64_t v6 = 2121524189 * (v4 ^ 0xA420799497D4ADAELL);
  unint64_t *v2 = v5;
  *(void *)(v3 - 4) = v6;
  LODWORD(v3) = *(_DWORD *)v2;
  int v7 = (char *)*(&off_100233720
               + ((-35 * ((qword_100282DD0 - dword_100282DE8) ^ 0xAE)) ^ byte_1001D6370[byte_1001D15A0[(-35 * ((qword_100282DD0 - dword_100282DE8) ^ 0xAE))] ^ 0x7B])
               + 119)
     - 8;
  (*(void (**)(char *, uint64_t (*)()))&v7[8
                                                   * (byte_1001D6470[byte_1001D16AC[(-35 * (v3 ^ 0xAE ^ v6)) - 12] ^ 0xA5] ^ (-35 * (v3 ^ 0xAE ^ v6)))
                                                   + 16496])((char *)*(&off_100233720+ (byte_1001CE738[(byte_1001CB460[(-35 * ((v6 + v3) ^ 0xAE))] ^ 0x5E) - 8] ^ (-35 * ((v6 + v3) ^ 0xAE)))- 136)- 12, sub_10001C2E4);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_100048FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000498F4(a1, a2, a3, STACK[0x4D0]);
}

void sub_100048FF4()
{
}

void sub_10004910C()
{
}

void sub_100049180(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000491C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((46 * ((a8 - 2131213838) & 0x7F07BF07 ^ 0x516) - 672) * (STACK[0x410] == 0)) ^ (a8 + 154))))();
}

uint64_t sub_100049214()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((238 * (STACK[0x430] != 0)) ^ (v0 - 400))))();
}

void sub_10004923C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000492BC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v6 = (*(uint64_t (**)(void, uint64_t, void))(v4 + 8 * (v3 ^ 0x9EB)))(**(unsigned int **)(a2 + 8 * (v3 - 145)), a1, ((v3 + 1571253442) & 0xA25897FF) + v2 + *(_DWORD *)(v5 - 0x6C0C7F2AED40EE89));
  return sub_100049310(v6);
}

uint64_t sub_100049310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  unint64_t v13 = ((unint64_t)&a10 ^ 0xFEF96FFAF57FFB2BLL)
      + 0x13EFFBFAFDBF0D5
      + ((2 * (void)&a10) & 0xFDF2DFF5EAFFF650);
  unint64_t v14 = (157 * (v12 ^ 0x5F9u)) ^ 0xFFFFFFFFFFFFFEC5;
  *(unsigned char *)(v11 - 0x6C0C7F2AED40EE91 + v14 + 32) = (v13 ^ 0xBA) * (v13 + 17);
  return (*(uint64_t (**)(void))(v10 + 8 * ((3569 * (v14 == -32)) ^ v12)))();
}

uint64_t sub_1000493B8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((((v0 & 8) == ((v1 - 473) | 0x815) - 2069) * (((v1 - 473) ^ 0x3F0) - 973)) ^ v1)))();
}

uint64_t sub_1000493F8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  unsigned int v8 = a6 + (v6 ^ 0x694) - 302125140;
  if (v8 < 0x737A671 != (a1 - 770580831) < 0x737A671) {
    BOOL v9 = v8 < 0x737A671;
  }
  else {
    BOOL v9 = a1 - 770580831 < v8;
  }
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * ((99 * v9) ^ v6)))(3885300798);
}

uint64_t sub_100049470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(void *)(v18 - 128) = a13;
  *(_DWORD *)(v18 - 120) = v15 + ((v18 - 136) ^ 0xBA947862) * v13 - 424;
  *(void *)(v18 - 112) = v17;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 ^ 0x95)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * (((*(_DWORD *)(v18 - 136) != v16 + 646 * (v15 ^ 0x82F) + 2008)
                                              * (((v15 - 1960) | 0x402) ^ 0x49D)) ^ v15)))(v19);
}

void sub_100049510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  STACK[0x3B8] = v8;
  *(_DWORD *)(STACK[0x640] + 4 * ((LODWORD(STACK[0x540]) + v10) >> (a8 - 11))) = v9;
  JUMPOUT(0x10000F5F8);
}

void sub_100049548(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) + 535753261 * ((2 * (a1 & 0x5E99CC2A) - a1 - 1587137579) ^ 0xAB923DFA);
  uint64_t v2 = *(void *)a1;
  if (*(_DWORD *)(*(void *)a1 - 0x9F59A8236606BCLL) - 1477598966 >= 0) {
    unsigned int v4 = *(_DWORD *)(*(void *)a1 - 0x9F59A8236606BCLL) - 1477598966;
  }
  else {
    unsigned int v4 = 1477598966 - *(_DWORD *)(*(void *)a1 - 0x9F59A8236606BCLL);
  }
  uint64_t v3 = *(void *)(a1 + 16);
  if (*(_DWORD *)(v3 - 0x9F59A8236606BCLL) - 1477598966 >= 0) {
    unsigned int v5 = *(_DWORD *)(v3 - 0x9F59A8236606BCLL) - 1477598966;
  }
  else {
    unsigned int v5 = 1477598966 - *(_DWORD *)(v3 - 0x9F59A8236606BCLL);
  }
  v8[1] = (460628867 * ((2 * (v8 & 0x6E3B39E8) - v8 - 1849375214) ^ 0xDD52446F)) ^ (v1 - 655);
  uint64_t v9 = v2;
  int v6 = (char *)*(&off_100233720 + (v1 ^ 0x6C6)) - 8;
  (*(void (**)(_DWORD *))&v6[8 * (v1 ^ 0xEDA)])(v8);
  if (v4 >= v5) {
    unsigned int v7 = v5;
  }
  else {
    unsigned int v7 = v4;
  }
  __asm { BRAA            X12, X17 }
}

uint64_t sub_100049704()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((29 * (*(_DWORD *)(v1 - 0x6C0C7F2AED40EE81) == ((v0 - 513) | 0x208) + 1533630824)) ^ v0)))();
}

uint64_t sub_100049750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v8 + 8 * ((785 * (a8 + 1 == v9 + 32)) ^ a7)))(a1, a2, a3, (a7 + 783));
}

uint64_t sub_10004981C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((113 * (v1 != 544568610)) ^ 0x28Du)))();
}

void sub_100049848()
{
}

uint64_t sub_10004988C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                                + 8
                                                                                * ((((v3 ^ 0x28B) - 728) * (v2 == v4)) ^ v3)))(a1, a2, 712781012, 3582186283, 1240);
}

uint64_t sub_1000498E0()
{
  return sub_1000498F4();
}

uint64_t sub_1000498F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  LODWORD(STACK[0x4D0]) = a4 + 64;
  unsigned int v6 = (v4 ^ 0x182) + a4 + 2084878131;
  unsigned int v7 = ((v4 - 262) | 0xE) + LODWORD(STACK[0x62C]) - 550198596;
  BOOL v8 = v6 < 0xE14AE275;
  BOOL v9 = v6 > v7;
  if (v8 != v7 < 0xE14AE275) {
    BOOL v9 = v8;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8 * ((124 * v9) ^ v4)))(a1, a2, a3, 84210482, 1621298222);
}

void sub_100049988()
{
}

uint64_t sub_1000499E0()
{
  int v4 = v0 + 646;
  int v5 = v0 - 10;
  int v6 = (v0 - 10) ^ 0x75;
  BOOL v8 = v1 == 1117964708 || LODWORD(STACK[0x4CC]) - v2 != ((v5 | 0x1D1) ^ 0x230796B);
  return (*(uint64_t (**)(void))(v3 + 8 * ((v8 * (v6 - 995)) ^ v4)))();
}

uint64_t sub_100049A3C()
{
  *int v1 = v0;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (v3 ^ 0x742 ^ (225
                                             * ((((((v3 ^ 0x742) - 1085) | 0x208) - 942146382) & (2
                                                                                                * (v0
                                                                                                 - ((2 * v0) & 0x1A6F33D6)
                                                                                                 - 851994133)) ^ 0x824733D2)
                                              + ((v0 - ((2 * v0) & 0x1A6F33D6) - 851994133) ^ 0x2EDC6616)
                                              + 498515952 != 27443181)))))();
}

uint64_t sub_100049AD8(uint64_t a1)
{
  STACK[0x5A0] = v1;
  STACK[0x4B0] = v3;
  STACK[0x440] = *(void *)(v4 + 8 * (v2 ^ 0x203));
  return sub_100049B5C(a1, 48);
}

uint64_t sub_100049B5C()
{
  STACK[0x510] = v2 + 17 * (v0 ^ 0x814u) - 925;
  STACK[0x3F8] = v1;
  if (v1) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  int v6 = !v5;
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * ((109 * v6) ^ v0)))(49);
}

uint64_t sub_100049BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v19 - 112) = v15
                         + ((((v19 - 128) | 0xECCF7CEC) - (v19 - 128) + ((v19 - 128) & 0x13308310)) ^ 0x565B048E) * v14
                         + 1042;
  *(void *)(v19 - 104) = v18;
  *(void *)(v19 - 120) = a14;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v15 ^ 0xACB)))(v19 - 128);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((2653
                                              * (((v15 + 403) | 0x88u) + v17 + *(_DWORD *)(v19 - 128) < 0xE391F0AE)) ^ v15)))(v20);
}

void sub_100049C48()
{
}

uint64_t sub_100049C58(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * (v2 ^ (95 * (a2 > 0)))))(705324210);
}

uint64_t sub_100049D48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v8 + 8
                                                                  * ((((a7 - 533) ^ a7 ^ 0x220) * (v7 > 0xF)) ^ a7)))(a1, a2, 0);
}

uint64_t sub_100049D7C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(*(void *)(a2 + 96) + 448) = *(unsigned char *)(*(void *)(a1 + 8) + 12);
  return (*(uint64_t (**)(void))(v2 + 7344))(0);
}

uint64_t sub_100049DD8(int a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39)
{
  BOOL v43 = v41 != a1 || a39 != a2 + ((v39 - 162742426) ^ 0xF64CBEE1) - 278;
  return (*(uint64_t (**)(void))(v40 + 8 * (int)((v43 * (a4 + ((v39 - 162742426) & 0xFFB7FF2F) + 39)) ^ v39)))();
}

uint64_t sub_100049E34(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((23 * (a3 + a2 + 1007520009 < (a6 ^ 0xD32) + (a6 ^ 0x59Fu) - 2245)) ^ a6)))();
}

uint64_t sub_100049E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, uint64_t a20,uint64_t a21,int a22,int a23)
{
  return (*(uint64_t (**)(void))(v24
                              + 8
                              * ((1500 * (a23 - *(_DWORD *)(a2 + 4) - 251623312 == v23 + 223 + a19 - 214892561)) ^ v23)))();
}

uint64_t sub_100049EE4(uint64_t result)
{
  unint64_t v1 = 1374699841 * ((result - 2 * (result & 0xA8F7ECC532399345) - 0x5708133ACDC66CBBLL) ^ 0xA6FB72C95FCD8B4CLL);
  unint64_t v2 = *(void *)(result + 16) ^ v1;
  unint64_t v3 = *(void *)(result + 8) - v1;
  BOOL v4 = v2 >= v3;
  BOOL v5 = (uint64_t)v2 < (uint64_t)v3;
  int v6 = !v4;
  if (((*(_DWORD *)(result + 24) + 1374699841 * ((result - 2 * (result & 0x32399345) + 842634053) ^ 0x5FCD8B4C)) & 1) == 0) {
    BOOL v5 = v6;
  }
  BOOL v7 = !v5;
  uint64_t v8 = 32;
  if (!v7) {
    uint64_t v8 = 28;
  }
  *(_DWORD *)(result + 36) = *(_DWORD *)(result + 40) ^ (1374699841
                                                       * ((result - 2 * (result & 0x32399345) + 842634053) ^ 0x5FCD8B4C)) ^ *(_DWORD *)(result + v8) ^ (1374699841 * ((result - 2 * (result & 0x32399345) + 842634053) ^ 0x5FCD8B4C));
  return result;
}

void sub_100049F74(uint64_t a1)
{
  int v1 = 1374699841 * ((a1 - 1542394297 - 2 * (a1 & 0xA410EE47)) ^ 0xC9E4F64E);
  __asm { BRAA            X14, X17 }
}

uint64_t sub_10004A030()
{
  return (*(uint64_t (**)(unint64_t, unint64_t))(v0
                                                                       + 8
                                                                       * (((((LODWORD(STACK[0x3F4]) - 966) ^ 0x2A7C2C93) == 712781028)
                                                                         * (((LODWORD(STACK[0x3F4]) - 1029) | 3) ^ 0xC)) ^ (LODWORD(STACK[0x3F4]) - 235))))(STACK[0x290], STACK[0x3A0]);
}

void sub_10004A09C()
{
}

uint64_t sub_10004A0CC()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((((*(_DWORD *)(v1 - 144) ^ 0x9F1) - 1158)
                                * (*(_DWORD *)(v1 - 128) == *(_DWORD *)(v1 - 136))) ^ *(_DWORD *)(v1 - 144))))();
}

uint64_t sub_10004A104(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v3
                                                             + 8
                                                             * ((3999
                                                               * (v4 + (((a3 - 157) | 0x511) ^ 0x71B) == (((a3 - 157) | 0x511) ^ 0x733))) ^ ((a3 - 157) | 0x511))))(a1, a2, ((a3 - 157) | 0x511) ^ 0x58Cu);
}

uint64_t sub_10004A150(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)(a1 + 24) - 0x9F59A8236606BCLL) + 435292624;
  int v3 = *(_DWORD *)(*(void *)(a1 + 8) - 0x9F59A8236606BCLL) + 435292624;
  int v4 = (v2 < -234592058) ^ (v3 < -234592058);
  BOOL v5 = v2 > v3;
  if (v4) {
    BOOL v5 = v2 < -234592058;
  }
  int v1 = *(_DWORD *)(a1 + 16) - 1178560073 * ((-2 - ((a1 | 0x5930FF1B) + (~a1 | 0xA6CF00E4))) ^ 0x1C5B7886);
  return (*((uint64_t (**)(void))*(&off_100233720 + v1 - 1523) + ((!v5 * (v1 - 1634)) ^ v1) - 1))();
}

uint64_t sub_10004A228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27
                                                              + 8
                                                              * ((47
                                                                * (a27 - 355748909 + (a10 & 0xAD304BBF) + 327 + 1162 < 0xFFFFFFFB)) ^ (v28 + 1688))))(a1, a2, a3);
}

uint64_t sub_10004A284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, unsigned int a18, unsigned int a19, int a20)
{
  unsigned int v22 = 1759421093 * ((((2 * &a17) | 0xD67609A2) - &a17 - 1799029969) ^ 0xD846B485);
  HIDWORD(a17) = v22 ^ 0x10825B55;
  a18 = v22 + 1105;
  a20 = v22 ^ 0x6EB7863C;
  LODWORD(a17) = v22 ^ 0x6AF12351;
  (*(void (**)(unint64_t **))(v21 + 18512))(&a17);
  a19 = 1441
      - 460628867 * ((1372156574 - (&a17 | 0x51C9729E) + (&a17 | 0xAE368D61)) ^ 0xE2A00F1C);
  a17 = &STACK[0x7DDA1A649706FBB5];
  uint64_t v23 = (*(uint64_t (**)(unint64_t **))(v21 + 18056))(&a17);
  return (*(uint64_t (**)(uint64_t))(v21 + 8 * ((124 * (a18 == -2124048112)) ^ v20)))(v23);
}

uint64_t sub_10004A3B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  uint64_t v52 = *(void *)(v48 + 24);
  *(int8x16_t *)(v51 - 112) = veorq_s8(*(int8x16_t *)(*(void *)(v48 + 16) - 0x58A7AA08624568E6), (int8x16_t)xmmword_1001D65B0);
  if (v50) {
    BOOL v53 = v52 == 0x76D4F6DCACF2CD9ELL;
  }
  else {
    BOOL v53 = 1;
  }
  int v54 = v53;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8 * (int)((v54 * ((((a5 - 1951315745) & 0x744EB76F) - 1066) ^ 0x1EA)) | a5)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_10004A440(uint64_t a1)
{
  unint64_t v3 = STACK[0x480];
  BOOL v4 = LODWORD(STACK[0x418]) != 0;
  STACK[0x420] = LODWORD(STACK[0x418]);
  return (*(uint64_t (**)(uint64_t, unint64_t))(v2
                                                              + 8
                                                              * (int)((v4
                                                                     * (((v1 - 1383) | 7) + ((v1 - 1719) ^ 0xFFFFFD36))) ^ v1)))(a1, v3);
}

uint64_t sub_10004A480(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v6 & (2 * (*(unsigned __int8 *)(a2 + 1) - 146)))
                                 + ((*(unsigned __int8 *)(a2 + 1) - 146) ^ v7) == v7)
                                * ((v5 - a3) ^ (v3 + 499))) ^ v5)))();
}

uint64_t sub_10004A4C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  unint64_t v43 = STACK[0x278] + 2048;
  LODWORD(STACK[0x41C]) = 2;
  STACK[0x410] = 0;
  STACK[0x5B8] = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 8 * (int)(((4 * ((v41 >> 1) & 1)) & 0xFFFFFFEF | (16 * ((v41 >> 1) & 1))) ^ a8)))(a1, a2, a3, a4, a5, v43, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_10004A4FC(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14)
{
  unsigned int v23 = a14 - 16;
  uint64_t v24 = v23 & 0xF;
  v26.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v26.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v19, a5).u64[0];
  int8x16_t v27 = vrev64q_s8(vmulq_s8(v26, a6));
  *(int8x16_t *)(a11 + v23) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v16 + v24 - 15), *(int8x16_t *)(a11 + v23)), veorq_s8(*(int8x16_t *)(v24 + v15 - 13), *(int8x16_t *)(v24 + v14 - 11))), vextq_s8(v27, v27, 8uLL));
  return (*(uint64_t (**)(void))(v18 + 8 * (((v17 == 16) * (a10 + 1336)) ^ a10)))();
}

uint64_t sub_10004A508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v9
                                                             + 8
                                                             * ((55
                                                               * (v8 >= ((v6
                                                                        + (((v6 + a6 + 208) | 9) ^ (v7 + 1656))
                                                                        + 282) ^ 0x13Au))) ^ ((v6 + a6 + 208) | 9))))(a1, a2, 0);
}

uint64_t sub_10004A554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13)
{
  a13 = 108757529 * (((&a12 | 0x956C4C34) - (&a12 & 0x956C4C34)) ^ 0x75F02E1F) + 1695027452;
  uint64_t v14 = (*(uint64_t (**)(int *))(v13 + 18608))(&a12);
  return (*(uint64_t (**)(uint64_t))(v13
                                            + 8 * (((a12 == -2124048112) << 8) | ((a12 == -2124048112) << 9) | 0x4F6u)))(v14);
}

uint64_t sub_10004A604()
{
  BOOL v10 = v3 > 0x39DBCF;
  uint64_t v11 = v6 - 754915084 + ((v1 - 1319) | 0x440u);
  *(unsigned char *)(v9 + v11) = *(unsigned char *)(*(void *)(v7 + 8 * (v1 - 1681)) + (v11 & 0xF) - 4) ^ *(unsigned char *)(v0 + v11) ^ *(unsigned char *)(*(void *)(v7 + 8 * (v1 - 1621)) + (v11 & 0xF)) ^ (23 * ((v6 - 12 + ((v1 - 39) | 0x40)) & 0xF)) ^ *(unsigned char *)(*(void *)(v7 + 8 * (v1 - 1542)) + (v11 & 0xF) - 7);
  if (v10 == v6 - 758705435 < (v2 + 1472)) {
    BOOL v10 = v6 - 758705435 < v4;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((v10 * v5) ^ v1)))();
}

uint64_t sub_10004A6C4()
{
  LODWORD(STACK[0x50C]) = v2;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((491
                                * (*(_DWORD *)(STACK[0x290] + 360) - 1740498125 >= (((v0 - 683) | 1) ^ 0xFFFFFFFC)
                                                                                 + v0
                                                                                 - 682)) ^ v0)))();
}

uint64_t sub_10004A788@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  *(void *)(a1 + (v3 - 271286987)) = v5;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((865 * (((a2 - 1327166855) & 0x4F1AF2FD) - 605 == ((v2 + 1) & 0x1FFFFFFF8))) ^ a2)))();
}

uint64_t sub_10004A7EC@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  int v7 = a3 ^ 0x2BB;
  unsigned int v8 = ((2 * (v5 + a2 + v7 - 1442 + (a1 ^ v4))) & 0xBFDFFFE8)
     + ((v5 + a2 + v7 - 1442 + (a1 ^ v4)) ^ 0x5FEFFFF4)
     + 1735288867;
  unsigned int v9 = v6 - 1070894459 + (a3 ^ 0x2BB) - 1554;
  int v10 = (v9 < 0xC75E6817) ^ (v8 < 0xC75E6817);
  BOOL v11 = v8 > v9;
  if (v10) {
    BOOL v11 = v8 < 0xC75E6817;
  }
  return (*(uint64_t (**)(void))(a4 + 8 * ((4057 * v11) ^ v7)))();
}

uint64_t sub_10004A888()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (((v2 == (v1 ^ 0x7C0) + 421638081) * ((176 * (v1 ^ 0x7C0)) ^ 0x411)) | v1)))();
}

void sub_10004A8E8()
{
}

uint64_t sub_10004A93C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * (int)(((((v13 - a6 - 1080) ^ 0xFFFFFE0B) + v13 - a6 - 1080)
                                     * ((unint64_t)(a13 + v14 - v15) > 0xF)) ^ v13)))();
}

uint64_t sub_10004A97C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((114 * ((a3 + 1 + v4) < 0x3C)) ^ v3)))();
}

uint64_t sub_10004AA44()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((457 * (STACK[0x4A0] == 0)) ^ (v0 - 327))))();
}

uint64_t sub_10004AA6C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (v0 ^ (1271 * (v1 == v3)))))();
}

uint64_t sub_10004AA90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  int v31 = *(unsigned __int8 *)(v30 - 124) ^ 0x22;
  if (v31 == 1)
  {
    unsigned int v38 = *(_DWORD *)(v30 - 156);
    unsigned int v37 = *(_DWORD *)(v30 - 152);
    *(unsigned char *)(v30 - 164) = 8 * ~(_BYTE)v37 - ((16 * ~(_BYTE)v37) & 0xBF) + 91;
    *(unsigned char *)(v30 - 163) = ((v37 >> 5) ^ 0x65) - ((((v37 >> 5) ^ 0x65) << ((a6 + a7 - 77) ^ 0x33)) & 0xB6) + 91;
    *(unsigned char *)(v30 - 162) = ((v37 >> 13) ^ 0xB1) - 2 * (((v37 >> 13) ^ 0xB1) & 0xDF ^ (v37 >> 13) & 4) + 91;
    *(unsigned char *)(v30 - 161) = ((v37 >> 21) ^ 0x29) - 2 * (((v37 >> 21) ^ 0x29) & 0xDF ^ (v37 >> 21) & 4) + 91;
    HIDWORD(v39) = v38 ^ 8;
    LODWORD(v39) = v37 ^ 0x20000000;
    *(unsigned char *)(v30 - 160) = (v39 >> 29) - ((2 * (v39 >> 29)) & 0xB6) + 91;
    *(unsigned char *)(v30 - 159) = ((v38 >> 5) ^ 0x8F) - ((2 * ((v38 >> 5) ^ 0x8F)) & 0xB6) + 91;
    *(unsigned char *)(v30 - 158) = ((v38 >> 13) ^ 0x5A) - 2 * (((v38 >> 13) ^ 0x5A) & 0xDF ^ (v38 >> 13) & 4) + 91;
    unsigned int v40 = v38 >> 21;
    int v41 = (v38 >> 21) ^ 0x40;
    char v42 = v41 & 0x5F;
    char v36 = v41 + 91;
    char v35 = 2 * (v42 ^ v40 & 4);
    goto LABEL_5;
  }
  if (v31 == 2)
  {
    unsigned int v32 = *(_DWORD *)(v30 - 156);
    unsigned int v33 = *(_DWORD *)(v30 - 152);
    *(unsigned char *)(v30 - 164) = ((v32 >> 21) ^ 0x40)
                          - 2 * (((v32 >> 21) ^ 0x40) & ((a7 ^ (a7 - 46)) + 45) ^ (v32 >> 21) & 4)
                          + 91;
    *(unsigned char *)(v30 - 163) = ((v32 >> 13) ^ 0x5A) - ((2 * ((v32 >> 13) ^ 0x5A)) & 0xB6) + 91;
    HIDWORD(v34) = v32 ^ 8;
    LODWORD(v34) = v33 ^ 0x20000000;
    *(unsigned char *)(v30 - 162) = ((v32 >> 5) ^ 0x8F) + (~(2 * ((v32 >> 5) ^ 0x8F)) | 0x49) + 92;
    *(unsigned char *)(v30 - 161) = (v34 >> 29) + (~(2 * (v34 >> 29)) | 0x49) + 92;
    *(unsigned char *)(v30 - 160) = ((v33 >> 21) ^ 0x29) - 2 * (((v33 >> 21) ^ 0x29) & 0xDF ^ (v33 >> 21) & 4) + 91;
    *(unsigned char *)(v30 - 159) = ((v33 >> 13) ^ 0xB1) + ~(2 * (((v33 >> 13) ^ 0xB1) & 0xDF ^ (v33 >> 13) & 4)) + 92;
    *(unsigned char *)(v30 - 158) = ((v33 >> 5) ^ 0x65) - ((2 * ((v33 >> 5) ^ 0x65)) & 0xB6) + 91;
    char v35 = (16 * ~(_BYTE)v33) & 0xBF;
    char v36 = 8 * ~(_BYTE)v33 + 91;
LABEL_5:
    *(unsigned char *)(v30 - 157) = v36 - v35;
  }
  return sub_10003318C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_10004ACE0@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int32x4_t *a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int32x4_t a55,int8x16_t a56)
{
  int8x16x4_t v82 = vld4q_s8(v56);
  v57.i64[0] = 0x5B5B5B5B5B5B5B5BLL;
  v57.i64[1] = 0x5B5B5B5B5B5B5B5BLL;
  uint8x16_t v58 = (uint8x16_t)veorq_s8(v82.val[0], v57);
  uint16x8_t v59 = vmovl_u8(*(uint8x8_t *)v58.i8);
  int8x16_t v60 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v59.i8);
  int8x16_t v61 = (int8x16_t)vmovl_high_u16(v59);
  uint16x8_t v62 = vmovl_high_u8(v58);
  int8x16_t v63 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v62.i8);
  int8x16_t v64 = (int8x16_t)vmovl_high_u16(v62);
  uint8x16_t v65 = (uint8x16_t)veorq_s8(v82.val[1], v57);
  uint16x8_t v66 = vmovl_high_u8(v65);
  uint16x8_t v67 = vmovl_u8(*(uint8x8_t *)v65.i8);
  uint8x16_t v68 = (uint8x16_t)veorq_s8(v82.val[2], v57);
  _Q21 = (int8x16_t)vmovl_high_u8(v68);
  _Q20 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v68.i8);
  int8x16_t v71 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL);
  __asm { SHLL2           V20.4S, V20.8H, #0x10 }
  int8x16_t v76 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
  __asm { SHLL2           V21.4S, V21.8H, #0x10 }
  v82.val[0] = veorq_s8(v82.val[3], v57);
  v82.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v82.val[0]);
  v82.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v82.val[1]);
  v82.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v82.val[0].i8);
  v82.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v82.val[0]);
  v82.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v82.val[0].i8), 0x18uLL), v71), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v67.i8, 8uLL), v60));
  v82.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v82.val[3], 0x18uLL), _Q20), vorrq_s8((int8x16_t)vshll_high_n_u16(v67, 8uLL), v61));
  v82.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v82.val[1].i8), 0x18uLL), v76), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v66.i8, 8uLL), v63));
  v82.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v82.val[2], 0x18uLL), _Q21), vorrq_s8((int8x16_t)vshll_high_n_u16(v66, 8uLL), v64));
  int32x4_t v77 = (int32x4_t)veorq_s8(vandq_s8(v82.val[0], a56), (int8x16_t)(*(_OWORD *)&v60 & __PAIR128__(0xFFFFFF04FFFFFF04, 0xFFFFFF04FFFFFF04)));
  int32x4_t v78 = (int32x4_t)veorq_s8(vandq_s8(v82.val[3], a56), (int8x16_t)(*(_OWORD *)&v61 & __PAIR128__(0xFFFFFF04FFFFFF04, 0xFFFFFF04FFFFFF04)));
  int32x4_t v79 = (int32x4_t)veorq_s8(vandq_s8(v82.val[1], a56), (int8x16_t)(*(_OWORD *)&v63 & __PAIR128__(0xFFFFFF04FFFFFF04, 0xFFFFFF04FFFFFF04)));
  int32x4_t v80 = (int32x4_t)veorq_s8(vandq_s8(v82.val[2], a56), (int8x16_t)(*(_OWORD *)&v64 & __PAIR128__(0xFFFFFF04FFFFFF04, 0xFFFFFF04FFFFFF04)));
  a6[2] = vaddq_s32(vsubq_s32((int32x4_t)v82.val[1], vaddq_s32(v79, v79)), a55);
  a6[3] = vaddq_s32(vsubq_s32((int32x4_t)v82.val[2], vaddq_s32(v80, v80)), a55);
  *a6 = vaddq_s32(vsubq_s32((int32x4_t)v82.val[0], vaddq_s32(v77, v77)), a55);
  a6[1] = vaddq_s32(vsubq_s32((int32x4_t)v82.val[3], vaddq_s32(v78, v78)), a55);
  return sub_10004C184(a1 ^ 0x58Eu, a2, a3, a4, a5, 1135937061);
}

void sub_10004AE1C(_DWORD *a1)
{
  unsigned int v1 = *a1 ^ (235795823 * ((-127693918 - (a1 | 0xF8638BA2) + (a1 | 0x79C745D)) ^ 0x93313D04));
  __asm { BRAA            X10, X17 }
}

uint64_t sub_10004AEE4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((2 * (v1 + 1 == v3 + 64)) | ((v1 + 1 == v3 + 64) << 9) | v0)))();
}

uint64_t sub_10004AFA0@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10004AFF8(a4 - 0x9F59A8236606B8, a1 - 0x9F59A8236606B8, 0x3D7FBDFEDF32F6DALL, 0xD684EB632D000000, 1802);
}

uint64_t sub_10004AFF8(void *a1, void *a2, uint64_t a3, uint64_t a4, int a5)
{
  BOOL v18 = v16 > v10;
  uint64_t v19 = 4 * (v14 + v11);
  int v20 = ((v6 + 341) ^ (v13 + 439)) + v5 + (*(_DWORD *)(*a1 + v19) ^ v12);
  *(_DWORD *)(*a2 + v19) = v20 + v12 - (v15 & (2 * v20));
  int v21 = v14 + 1 + v7;
  LODWORD(v19) = v18 ^ (v21 < v8);
  BOOL v22 = v21 < v9;
  if (!v19) {
    BOOL v18 = v22;
  }
  return (*(uint64_t (**)(void))(v17 + 8 * ((v18 * a5) ^ v6)))();
}

uint64_t sub_10004B07C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  uint64_t v61 = (*(uint64_t (**)(void, void, uint64_t))(v59 + 8 * (v56 + 1293)))(LODWORD(STACK[0x5B8]), (v57 + v58), a49);
  int v68 = ((2 * v61) & 0xBCD3A7FC) + (v61 ^ 0xDE69D3FE);
  int v69 = STACK[0x3F4];
  int v70 = STACK[0x3F4];
  unint64_t v71 = STACK[0x348];
  if (v68 != -563489794)
  {
    if (v68 == -295054335)
    {
      LODWORD(STACK[0x50C]) = 2124071464;
    }
    else
    {
      int v74 = 1178560073 * (((((v60 - 200) | 0x31AC6206) ^ 0xFFFFFFFE) - (~(v60 - 200) | 0xCE539DF9)) ^ 0x74C7E59B);
      *(void *)(v60 - 192) = a56;
      *(_DWORD *)(v60 - 200) = v74 + v68 - 2 * (((_BYTE)v68 + 2) & 0xE ^ (v68 + 26618882) & 0x165991E) - 1560558318;
      *(_DWORD *)(v60 - 196) = v69 - v74 + 486;
      (*(void (**)(uint64_t))(v59 + 8 * a47))(v60 - 200);
    }
    JUMPOUT(0x10001CA98);
  }
  uint64_t v72 = (char *)&STACK[0x660] + v71 - 0x5A748F8B1FDC618ALL;
  STACK[0x5E8] = (unint64_t)(v72 - 1824);
  STACK[0x3A0] = (unint64_t)(v72 - 1596);
  LODWORD(STACK[0x4E0]) = 1343640984;
  STACK[0x510] = v71 + ((v70 - 432116238) & 0x19C18EA9) - 361;
  STACK[0x400] = 0;
  LODWORD(STACK[0x43C]) = 544568610;
  STACK[0x3B0] = (unint64_t)(v72 - 1824);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 8 * ((v70 + 811) | (2 * (v72 == (char *)1576)) | (4 * (v72 == (char *)1576)))))(v61, v62, v63, v64, v65, v66, 2124071625, v67, a9);
}

uint64_t sub_10004B264(int a1)
{
  BOOL v3 = (v1 & 0x18) != ((((a1 - 682) | 0x404) + 234) ^ 0x4F7);
  return (*(uint64_t (**)(void))(v2 + 8 * ((4 * v3) | (8 * v3) | a1)))();
}

uint64_t sub_10004B2A4(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8
                                   * (((v3 < ((a3 - 993952434) & 0x3B3E7EFFu) - 1180) * ((a3 - 922) ^ 0x4C3)) ^ a3)))();
}

uint64_t sub_10004B2EC(uint64_t a1, int a2)
{
  int v6 = v3 + v2;
  int v7 = v3 + v2 - 2037503918;
  if ((v6 - 2037503917) > 0x40) {
    int v8 = v7 + 1;
  }
  else {
    int v8 = 64;
  }
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((76
                                * ((((v4 ^ 0xC) + 41) ^ (a2 + v8 > ((931 * (v4 ^ 0x20C) - 1863) ^ v7))) & 1)) ^ v4)))();
}

uint64_t sub_10004B35C()
{
  return sub_100025C90();
}

uint64_t sub_10004B368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, _DWORD *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,unsigned int a22)
{
  *a6 = 0;
  *a7 = 0;
  a22 = 108757529 * ((&a21 & 0xA7DA3C6 | ~(&a21 | 0xA7DA3C6)) ^ 0x151E3E12) + 1695027452;
  uint64_t v25 = (*(uint64_t (**)(int *))(v24 + 18608))(&a21);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * ((1164 * (a21 == v23)) ^ v22)))(v25);
}

void sub_10004B404()
{
  uint64_t v0 = __chkstk_darwin();
  int v1 = *(_DWORD *)(v0 + 24) - 1225351577 * ((-2 - ((v0 | 0x64CFEAB8) + (~v0 | 0x9B301547))) ^ 0xB8AACD51);
  __asm { BRAA            X13, X17 }
}

void sub_10004B580(int a1@<W8>)
{
  *(_DWORD *)(v1 - 0x9F59A8236606BCLL) = a1;
}

uint64_t sub_10004B598()
{
  return sub_10004B5D4();
}

uint64_t sub_10004B614()
{
  return sub_10004B61C();
}

uint64_t sub_10004B61C@<X0>(unsigned int a1@<W3>, uint64_t a2@<X8>)
{
  uint64_t v8 = ((v2 + 1000) ^ a1) - v4;
  int8x8_t v9 = vrev64_s8(*(int8x8_t *)(a2 + v8 - 7));
  *(int8x8_t *)(v3 + v8) = vrev64_s8(vadd_s8(vsub_s8(v9, vand_s8(vadd_s8(v9, v9), v7)), v6));
  return (*(uint64_t (**)(void))(v5 + 8 * ((121 * (v4 == 328)) ^ (v2 - 607))))();
}

void sub_10004B674(int a1@<W8>, uint64_t a2, unsigned int a3, int a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  unsigned int v10 = ((2 * (&a3 & 0x7C7D9E00) - &a3 + 58876408) ^ 0x7D57440E) * a1;
  a3 = v10 + 1990337085;
  a4 = v10 + v7 - 1064;
  a7 = v10 - 1662713138;
  a5 = 0x5248BA885C210B04;
  a6 = v8;
  (*(void (**)(unsigned int *))(v9 + 8 * (v7 ^ 0xC21)))(&a3);
  sub_100021320();
}

uint64_t sub_10004B700()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((126 * (((((v0 - 1549) | 0x48) - 113) & v1) == (v2 ^ 0x67BDE4A3))) ^ v0)))();
}

uint64_t sub_10004B74C@<X0>(int a1@<W8>)
{
  *(unsigned char *)(*v1 + (v2 + v5)) = *(unsigned char *)(*v1 + (v5 + v3));
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 - 1 == v4) * v6) ^ a1)))();
}

uint64_t sub_10004B780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, void))(v9
                                                    + 8
                                                    * (((a5 - 351 + v5 + ((a5 - 1924399690) | 0x814C21))
                                                      * ((v6 & 0x18) == 0)) ^ a5)))(a1, (v7 - v8));
}

uint64_t sub_10004B7C4()
{
  if (v2 >= 0) {
    unsigned int v4 = v2;
  }
  else {
    unsigned int v4 = -v2;
  }
  if (v1 >= 0) {
    unsigned int v5 = v1;
  }
  else {
    unsigned int v5 = -v1;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((v0 - 313 + ((v0 + 126665544) & 0xF8733B7E) - 1206) * (v4 > v5)) | v0)))();
}

void sub_10004B814()
{
}

uint64_t sub_10004B81C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v73 = 8 * (a4 ^ 0x4A0);
  unint64_t v74 = STACK[0x248];
  *(void *)(v74 + 1560) = *(void *)STACK[0x450];
  *(_DWORD *)(v74 + 1552) = *(_DWORD *)STACK[0x5C0];
  *(void *)(*(void *)(a71 + 96) + 488) = *(void *)(a71 + 8);
  *(_DWORD *)(*(void *)(a71 + 96) + 480) = *(_DWORD *)a71;
  *(unsigned char *)(a71 + (v73 ^ 0x602u) - 771) = (a72 ^ 0xBA) * (a72 + 17);
  return (*(uint64_t (**)(void))(v72 + 8 * ((208 * ((v73 ^ 0x602) != 771)) ^ v73)))();
}

uint64_t sub_10004B8C0@<X0>(int a1@<W4>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 == (a2 ^ 0x32)) * ((a2 + 843) ^ a1)) ^ (a2 + 636))))();
}

uint64_t sub_10004B8F4(uint64_t result)
{
  uint64_t v1 = 1178560073 * ((2 * (result & 0x64AC438940A5398ALL) - result + 0x1B53BC76BF5AC675) ^ 0xAFEC9E05CEBE17);
  int v2 = *(_DWORD *)(result + 28) ^ (1178560073 * ((2 * (result & 0x40A5398A) - result - 1084569995) ^ 0x5CEBE17));
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v4 = *(void *)(result + 16);
  unint64_t v5 = v3 - v1;
  BOOL v6 = v3 != v4;
  BOOL v7 = v5 >= v4 - v1;
  if ((*(_DWORD *)(result + 36) + 1178560073 * ((2 * (result & 0x40A5398A) - result - 1084569995) ^ 0x5CEBE17))) {
    BOOL v6 = v7;
  }
  if (!v6) {
    int v2 = *(_DWORD *)(result + 24) - 1178560073 * ((2 * (result & 0x40A5398A) - result - 1084569995) ^ 0x5CEBE17);
  }
  *(_DWORD *)uint64_t result = v2 ^ (*(_DWORD *)(result + 4)
                          - 1178560073 * ((2 * (result & 0x40A5398A) - result - 1084569995) ^ 0x5CEBE17));
  return result;
}

void sub_10004B998()
{
}

uint64_t sub_10004B9CC()
{
  if (v0) {
    int v1 = 1913760756;
  }
  else {
    int v1 = *(_DWORD *)STACK[0x3A0] + 1;
  }
  *(_DWORD *)STACK[0x3A0] = v1;
  return sub_10004BA5C();
}

uint64_t sub_10004BA5C@<X0>(char a1@<W8>)
{
  int v6 = STACK[0x3B0];
  unint64_t v7 = STACK[0x398] + (LODWORD(STACK[0x3B0]) - 1349641880);
  unsigned int v8 = ((*(_DWORD *)(*(void *)STACK[0x3B8] + (*(int *)STACK[0x3C0] & (v1 ^ 0xFFFFFFFFFE1E887BLL))) ^ v7) & 0x7FFFFFFF)
     * ((v1 - 336) ^ 0xFC90C9FA);
  unint64_t v9 = -57620215 * (v8 ^ HIWORD(v8));
  LOBYTE(v9) = *(unsigned char *)(*(void *)(v4 + 8 * (v1 - 568)) + (v9 >> 24) - 12) ^ ((v2 ^ v3) >> a1) ^ *(unsigned char *)(*(void *)(v4 + 8 * (v1 ^ 0x21C)) + (v9 >> 24) - 9) ^ *(unsigned char *)(*(void *)(v4 + 8 * (v1 ^ 0x2E0)) + (v9 >> 24) - 7) ^ v9 ^ (127 * BYTE3(v9));
  *(unsigned char *)unint64_t v7 = v9;
  return (*(uint64_t (**)(void))(v5 + 8 * ((373 * (v6 - (v9 != 0) == 1349641879)) ^ v1)))();
}

void sub_10004BBAC(uint64_t a1)
{
  int v1 = 1178560073 * ((-2 - ((a1 | 0x5A50E64C) + (~a1 | 0xA5AF19B3))) ^ 0x1F3B61D1);
  int v2 = *(_DWORD *)(a1 + 40) ^ v1;
  if (*(void *)(a1 + 48) | *(void *)(a1 + 64)) {
    BOOL v3 = *(_DWORD *)(a1 + 24) + v1 == 857023583;
  }
  else {
    BOOL v3 = 1;
  }
  char v4 = v3;
  __asm { BRAA            X9, X17 }
}

void sub_10004BD14(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a2 + v3) = v2;
  JUMPOUT(0x10002BFACLL);
}

uint64_t sub_10004BD28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  return (*(uint64_t (**)(void))(v17
                              + 8
                              * ((170
                                * (((v18 - 544568607) & 0xFFFFFFFC) - a16 == (((37 * (v16 ^ 0x32F) - 711) | 0x2C7) ^ 0xDF8A8939))) ^ v16)))();
}

uint64_t sub_10004BD84@<X0>(unsigned int a1@<W6>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  if (!a2) {
    return (*(uint64_t (**)(void))(v58
  }
                                + 8
                                * ((39 * ((v60 ^ (v60 + 112)) - 1843745209 + a13 < 0x10)) | (v60 + v59))))();
  if (a2 != 3) {
    return (*(uint64_t (**)(void))(v58
  }
                                + 8
                                * (((*(_DWORD *)(v61 + 48 * v57 + 36) + 2078496417 < a1)
                                  * (((v59 + 607972247) | 0x406) - 528)) ^ (v59 + 607972382))))();
  uint64_t v62 = (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 48 * v57 + 8))(a4, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 8 * ((1146 * (v62 - 2124048112 - ((2 * v62) & 0x2CB3220) == -2124048112)) ^ (v60 + v59))))(v62, v63, v64, 2170919184, v65, 4225980065, 2147483652, 1930293332, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57);
}

uint64_t sub_10004BEF4@<X0>(int a1@<W8>)
{
  int v4 = a1 ^ 0x348;
  unsigned int v5 = (v4 + 1856347032) & 0x915A633F;
  uint64_t v6 = (*(uint64_t (**)(void))(v2 + 8 * (v4 ^ 0xCCB)))(*v3);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (int)(((*v1 == 0) * (v5 ^ 0x33F)) ^ v5)))(v6);
}

uint64_t sub_10004BF5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, int a14, unint64_t *a15, uint64_t a16)
{
  a14 = (v16 + 578) ^ (1374699841
                     * ((&a14 - 5483389 - 2 * ((unint64_t)&a14 & 0xFFAC5483)) ^ 0x92584C8A));
  a15 = &STACK[0xC9996988DE51A6];
  a16 = a10;
  uint64_t v20 = (*(uint64_t (**)(int *))(v17 + 8 * (v16 + 606)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * (((a12 == (v16 ^ (v18 + 627)) - 434996610)
                                              * ((v16 - v19 - 857) ^ (v18 + 2227))) ^ v16)))(v20);
}

void sub_10004C018()
{
}

uint64_t sub_10004C040@<X0>(int a1@<W5>, int a2@<W8>)
{
  return sub_100048B9C(a1, a2);
}

void sub_10004C0A4(uint64_t a1)
{
  int v1 = 628203409 * (((a1 | 0x89B748DF) - a1 + (a1 & 0x7648B720)) ^ 0xB3F44EC);
  unsigned int v2 = *(_DWORD *)(*(void *)(a1 + 24) - 0x27681A84B35EB105) + 639080037;
  unsigned int v3 = *(_DWORD *)(a1 + 20) + v1 + 352623758;
  BOOL v4 = v2 < 0x48BD8820;
  BOOL v5 = v2 > v3;
  if (v3 < 0x48BD8820 != v4) {
    BOOL v5 = v4;
  }
  __asm { BRAA            X12, X17 }
}

uint64_t sub_10004C184(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((53 * ((a6 + 1 + v6) < 0x10)) ^ (a1 - 380))))();
}

uint64_t sub_10004C298(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  uint64_t v10 = (a2 + v8 + v7 - a3 + 1825);
  *(void *)(a1 - 7 + v10) = *(void *)(v5 - 7 + v10);
  return (*(uint64_t (**)(void))(v9 + 8 * (((a3 - (v6 & 0xFFFFFFF8) == -8) * ((2 * a5) ^ 0x7F3)) ^ a5)))();
}

void sub_10004C2FC(char *a1)
{
  unsigned int v2 = (char *)&STACK[0x1950] + v1;
  char *v2 = *a1;
  *(void *)(v2 + 1) = *(void *)(a1 + 1);
  *(_DWORD *)(v2 + 9) = *(_DWORD *)(a1 + 9);
  *(_WORD *)(v2 + 13) = *(_WORD *)(a1 + 13);
  v2[15] = a1[15];
  uint64_t v3 = *((void *)a1 + 1);
  *((void *)v2 + 2) = *(void *)a1;
  *((void *)v2 + 3) = v3;
  JUMPOUT(0x10002324CLL);
}

uint64_t sub_10004C348()
{
  int v3 = 24 * (v0 ^ 0xB8);
  uint64_t v9 = v5;
  unsigned int v8 = v0 + 535753261 * (v7 ^ 0xAF40E2F) + 148;
  (*(void (**)(unsigned char *))(v1 + 8 * (v0 + 1989)))(v7);
  unsigned int v8 = v3 + 535753261 * ((2 * (v7 & 0x65CA9380) - v7 + 439708797) ^ 0x10C16252) - 383;
  uint64_t v9 = v6;
  (*(void (**)(unsigned char *))(v1 + 8 * (v3 + 1458)))(v7);
  return v2 ^ 0x81659910;
}

uint64_t sub_10004C440()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v1 & (2 * (*(unsigned __int8 *)(v2 + 5) - 13)))
                                 + ((*(unsigned __int8 *)(v2 + 5) - 13) ^ v0) == v0)
                                * (v3 + 796)) ^ v3)))();
}

uint64_t sub_10004C480(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,uint64_t a22,int a23,int a24,unsigned int a25)
{
  if (v25 < a25 != (a21 + 1125450030) < 0x869AB6EC) {
    BOOL v27 = (a21 + 1125450030) < 0x869AB6EC;
  }
  else {
    BOOL v27 = a21 + 1125450030 > v25;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8 * ((v27 * a24) ^ (a4 + a7 + 1510))))(a1, 3162130946);
}

uint64_t sub_10004C48C(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  int v9 = (*(unsigned __int8 *)(STACK[0x598] + 1516) ^ a6) - (*(unsigned char *)STACK[0x4D8] - 68);
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((((a3 & (2 * v9)) + ((((LODWORD(STACK[0x214]) ^ 0xC8) - 77) | v6) ^ a1 ^ v9) == a1 + 1029)
                                * v7) ^ LODWORD(STACK[0x214]) ^ 0xC8)))();
}

void sub_10004C4F8()
{
}

uint64_t sub_10004C504(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((334 * (v4 + 1 == v3 + 80)) ^ a3)))();
}

uint64_t sub_10004C5B8()
{
  BOOL v5 = *(_DWORD *)STACK[0x3B0] != 39 * (((v0 - 359) | 0x409) ^ 0x42A) + 1117963187 || v1 != v2;
  return (*(uint64_t (**)(void))(v3 + 8 * ((1532 * v5) ^ v0)))();
}

void sub_10004C620()
{
}

uint64_t sub_10004C62C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((((((2 * a6) ^ 0xCB0) - 703344937) & 0x29EC2EDE ^ 0x302) * ((v7 & 0x18) == 0)) ^ a6)))();
}

uint64_t sub_10004C674()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((93
                                * ((v1 & 0x2DDF7FE6)
                                 + (v4 ^ 0x96EFBFF3)
                                 + (v2 ^ 0x7FD9482E)
                                 - 382275621
                                 + ((63 * (v0 ^ 0x6D1) + 354087385) & 0xEAE507F6) < 0x7FFFFFFF)) ^ v0 ^ 0x7E3)))();
}

void sub_10004C70C()
{
}

void sub_10004C714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a2) {
    BOOL v8 = a3 == 0;
  }
  else {
    BOOL v8 = 1;
  }
  int v12 = !v8 && a6 != 0 && a7 != 0 && a8 != 0;
  __asm { BRAA            X9, X17 }
}

uint64_t sub_10004C7A4@<X0>(int a1@<W8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v3 + 8 * (a1 + 2171)))(*v4);
  _DWORD *v2 = 0;
  *(_DWORD *)uint64_t v1 = 0;
  *(void *)(v1 + 344) = 0;
  *(void *)(v1 + 352) = 0;
  *(_DWORD *)(v1 + 360) = 1740498123;
  *(_DWORD *)(v1 + 56) = 943553886;
  return result;
}

void sub_10004C7F0()
{
}

void sub_10004C7F8()
{
}

void sub_10004C810()
{
}

void sub_10004C824()
{
}

void sub_10004C82C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(void *)(v28 - 120) = v26;
  *(void *)(v28 - 112) = a25;
  *(_DWORD *)(v28 - 144) = ((v27 & 0xF8805DF7) + 1610) ^ (1225351577
                                                        * ((-1289755589
                                                          - ((v28 - 144) | 0xB31FE43B)
                                                          + ((v28 - 144) | 0x4CE01BC4)) ^ 0x6F7AC3D2));
  *(void *)(v28 - 136) = a24;
  *(void *)(v28 - 128) = v26;
  (*(void (**)(uint64_t))(v25 + 8 * (int)(v27 & 0xF8805DF7 ^ 0x8A0)))(v28 - 144);
  *(_DWORD *)(v28 - 112) = (v27 & 0xF8805DF7)
                         + 1224239923 * ((((2 * (v28 - 144)) | 0x6B401166) - (v28 - 144) + 1247803213) ^ 0x4713F564)
                         + 497;
  *(void *)(v28 - 128) = v26;
  *(void *)(v28 - 120) = a24;
  *(void *)(v28 - 144) = a25;
  *(void *)(v28 - 136) = a18;
  *(void *)(v28 - 104) = v26;
  (*(void (**)(uint64_t))(v25 + 8 * (int)((v27 & 0xF8805DF7) + 2084)))(v28 - 144);
  JUMPOUT(0x10003922CLL);
}

void sub_10004C92C()
{
}

uint64_t sub_10004C938@<X0>(uint64_t a1@<X0>, int a2@<W2>, char a3@<W3>, int a4@<W4>, unsigned int a5@<W6>, unint64_t a6@<X7>, int a7@<W8>)
{
  uint64_t v14 = (v10 + a4);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(v12 + v14) ^ *(unsigned char *)(v8 + (v14 & (a7 ^ a5 ^ a6))) ^ *(unsigned char *)(v9 + (v14 & (a7 ^ a5 ^ a6))) ^ *(unsigned char *)((v14 & (a7 ^ a5 ^ a6)) + v7 + 2) ^ ((v14 & (a7 ^ a5 ^ a6)) * a3) ^ v11;
  return (*(uint64_t (**)(void))(v13 + 8 * ((((v10 + 1 + a4) > 0x14F) * a2) ^ a7)))();
}

uint64_t sub_10004C99C@<X0>(int a1@<W3>, uint64_t a2@<X8>)
{
  if ((*(_DWORD *)(v2 + 1428) | 4) == 0x4BC61E85) {
    return (*(uint64_t (**)(void))(v4 + 8 * ((283 * (*(_DWORD *)(a2 + 476) == (a1 ^ 0x216124A))) ^ (a1 + 139))))();
  }
  STACK[0x510] = STACK[0x380];
  return v3();
}

void sub_10004CA94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  *(_DWORD *)(a39 + 4 * v39) ^= a33;
  JUMPOUT(0x10004CABCLL);
}

uint64_t sub_10004CACC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v1 == 2094253219) ^ (v0 - 83)) & 1)
                                * (((v0 + 1225511068) | 0x802601) - 1233909625)) ^ v0)))();
}

void sub_10004CB4C()
{
}

void sub_10004CBEC()
{
}

uint64_t sub_10004CC00()
{
  LODWORD(STACK[0x534]) = v0 - 161;
  return sub_10005059C();
}

uint64_t sub_10004CC18(uint64_t a1, unsigned int a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((*(_DWORD *)(*v4 + 4 * a2) == v3) * (v5 - 1678)) ^ v5)))();
}

void sub_10004CCA4()
{
  LODWORD(STACK[0x3B0]) = v0;
  JUMPOUT(0x100032B10);
}

void sub_10004CCB0()
{
}

uint64_t sub_10004CCBC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (v0 ^ (29
                                     * ((((v0 - 1633) | 0x506) ^ 0x85A44C01 ^ ((v0 + 1294489509) & 0xB2D7A7DD ^ 0x87E4EBEA) & (2 * v1))
                                      + (v1 ^ 0x9215A64)
                                      + 2130705915 == 1123185906)))))();
}

uint64_t sub_10004CD44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8 * (((a4 == -2124048112) * (v10 + ((((a9 - 132) | 0x403) - 1023) | 0x80) + ((((a9 - 132) | 0x403) - 163645361) & 0x2DFDEFBF) + 2925)) ^ ((a9 - 132) | 0x403))))(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_10004CDBC(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((((a3 & 0xFA3137DF) + 646210086) & 0xD97B9EEE ^ 0xFFFFF82D)
                                      + (((a3 & 0xFA3137DF) - 13) | 0x30))
                                     * (v3 > 0x1F)) ^ a3 & 0xFA3137DF)))();
}

uint64_t sub_10004CE14(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((((((a5 - 1034385511) & 0x3DA773BD) - 267) ^ (a5 - 675744935) & 0x284706FD) * (v5 == a1)) ^ a5)))();
}

void sub_10004CE74(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 44) - 1224239923 * (((a1 | 0x1FD8AEE4) - a1 + (a1 & 0xE027511B)) ^ 0xED6B5333);
  __asm { BRAA            X13, X17 }
}

void sub_10004CF9C()
{
}

uint64_t sub_10004CFC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, void))(v6
                                                                                                + 8
                                                                                                * ((1231
                                                                                                  * ((((v9 + 348) ^ 0x55D) & v7) == (v9 ^ 0x3E9))) ^ v9)))(a1, a2, a3, a4, (v8 - a4), a6, v9 ^ 0xFFu);
}

uint64_t sub_10004D008(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v12 = (a2 + v10 + v9 - a3 + 1090);
  *(int8x8_t *)(v7 - 7 + v12) = veor_s8(*(int8x8_t *)(v6 - 7 + v12), (int8x8_t)0x5B5B5B5B5B5B5B5BLL);
  return (*(uint64_t (**)(void))(v11 + 8 * (((a3 - (v8 & 0xFFFFFFF8) == -8) * ((a6 - 275) ^ 0x571)) ^ a6)))();
}

void sub_10004D06C(_DWORD *a1@<X8>)
{
  int v4 = v1[1] - v2 - ((2 * (v1[1] - v2) + 155973774) & ((v3 - 22) ^ 0xBC81AA7)) - 762705342;
  unsigned char *v5 = (HIBYTE(v4) ^ 5) - ((2 * (HIBYTE(v4) ^ 5)) & 0xB6) + 91;
  v5[1] = (BYTE2(v4) ^ 0xE4) - ((2 * (BYTE2(v4) ^ 0xE4)) & 0xB6) + 91;
  v5[2] = (BYTE1(v4) ^ 0xD) - ((2 * (BYTE1(v4) ^ 0xD)) & 0xB6) + 91;
  v5[3] = v4 ^ 0xA0;
  *int v1 = *a1;
}

uint64_t sub_10004D13C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned char *a18, uint64_t a19, int a20,char a21,unsigned int a22,char *a23,unsigned char *a24)
{
  int v30 = (v25 + 1160535229) & 0xAD39ECF;
  a22 = (v25 + 821) ^ ((((&a22 ^ 0x7253DB1C)
                       - 818624752
                       - 2 * ((&a22 ^ 0x7253DB1C) & 0xCF34C710)) ^ 0xD0930405)
                     * v27);
  a23 = &a21 + v26;
  a24 = a18;
  (*(void (**)(unsigned int *))(v29 + 8 * (v25 + 849)))(&a22);
  a22 = (v30 + 1960) ^ ((&a22 ^ 0x6DF41809) * v27);
  a23 = v28;
  a24 = a18;
  (*(void (**)(unsigned int *))(v29 + 8 * (v30 ^ 0x84Cu)))(&a22);
  a22 = (v30 + 1960) ^ ((((&a22 | 0x9642B3CC) - (&a22 & 0x9642B3CC)) ^ 0xFBB6ABC5) * v27);
  a23 = v24;
  a24 = a18;
  (*(void (**)(unsigned int *))(v29 + 8 * (v30 ^ 0x84Cu)))(&a22);
  a22 = (v30 + 1386) ^ (1755732067
                      * ((104643172 - (&a22 | 0x63CBA64) + (&a22 | 0xF9C3459B)) ^ 0x2705F840));
  a23 = a18;
  uint64_t v31 = (*(uint64_t (**)(unsigned int *))(v29 + 8 * (v30 ^ 0x811u)))(&a22);
  return (*(uint64_t (**)(uint64_t))(v29
                                            + 8 * (((a24 == -2124048112) * (v30 + 772)) ^ v30)))(v31);
}

void sub_10004D2F0()
{
  _DWORD *v0 = STACK[0x5B8];
  v0[85] = STACK[0x42C];
  v0[86] = STACK[0x468];
  v0[87] = STACK[0x4D4];
  v0[88] = STACK[0x478];
  JUMPOUT(0x10001CA98);
}

uint64_t sub_10004D32C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(a6 + ((v7 + v11) & v8)) = v12;
  return (*(uint64_t (**)(void))(v10 + 8 * (v6 | (2 * (v9 == 0)))))();
}

uint64_t sub_10004D358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 8 * ((1727 * (a8 + 1 == v8 + 20)) ^ a6)))(v9, a2, a1);
}

uint64_t sub_10004D434(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  *(void *)(a5 + (v7 - v9 + 1217)) = *(void *)(a4 + (v7 - v9 + 1217));
  return (*(uint64_t (**)(void))(v10 + 8 * (((a6 + v9 != a2) * a7) ^ v8)))();
}

uint64_t sub_10004D464()
{
  unsigned int v5 = ((v2 + 529991296) & 0xE068F91B ^ 0xFFFFFE1A) + *(unsigned __int8 *)(v3 + 4);
  return (*(uint64_t (**)(void))(v4 + 8 * ((1736 * ((v1 & (2 * v5)) + (v5 ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_10004D4BC@<X0>(unsigned int a1@<W2>, uint64_t a2@<X8>, uint8x8_t a3@<D0>)
{
  a3.i32[0] = *(_DWORD *)(a2 + a1 + 1);
  *(_DWORD *)(a2 - 3 + (v6 + v3)) = vmovn_s16((int16x8_t)vmovl_u8(a3)).u32[0];
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 == 4) * (v4 + 2070)) ^ v4)))((v4 - 1616));
}

uint64_t sub_10004D508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v17 - 128) = a14;
  *(void *)(v17 - 120) = &STACK[0x9F59A8236606F0];
  *(_DWORD *)(v17 - 112) = v15
                         + 1374699841
                         * ((698811381 - ((v17 - 128) | 0x29A703F5) + ((v17 - 128) | 0xD658FC0A)) ^ 0xBBACE403)
                         + 680;
  (*(void (**)(uint64_t))(v14 + 8 * (v15 + 1048)))(v17 - 128);
  *(void *)(v17 - 104) = a13;
  *(void *)(v17 - 120) = a14;
  *(_DWORD *)(v17 - 112) = v15 + ((2 * ((v17 - 128) & 0x7E7CE238) - (v17 - 128) - 2122113599) ^ 0x3B1765A3) * v16 + 503;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 + 1066)))(v17 - 128);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * ((((*(_DWORD *)(v17 - 128) - 1532862473) < 0xD97036ED)
                                              * ((175 * (v15 ^ 0x48B) - 766936592) & 0x2DB686EE ^ 0x473)) ^ v15)))(v18);
}

void sub_10004D658()
{
}

uint64_t sub_10004D660(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)(((4
                                      * (((LODWORD(STACK[0x5E4]) == 544568610) ^ ((((v4 | a4) + 70) & 0xEB)
                                                                                                 - 81)) & 1)) & 0xDF | (32 * (((LODWORD(STACK[0x5E4]) == 544568610) ^ ((((v4 | a4) + 1375964486) & 0xADFC76EB) - 1105)) & 1))) ^ ((v4 | a4) + 1375964486) & 0xADFC76EB)))();
}

uint64_t sub_10004D6BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, uint64_t a16, unsigned int a17, unsigned int a18, unsigned int a19, int a20)
{
  unsigned int v23 = 460628867 * ((2 * (&a15 & 0x6E931898) - &a15 - 1855133854) ^ 0xDDFA651F);
  a17 = v23 + 931660539;
  a18 = v23 + v21 + 2138962499;
  a19 = (a10 ^ 0xFFC9FAF5) - v23 + (((v21 + 1098186894) & 0x6BF ^ 0x2A8) & (2 * a10)) + 1593830880;
  a15 = &STACK[0x17594DE918184A03];
  a16 = a14;
  uint64_t v24 = (*(uint64_t (**)(unint64_t **))(v20 + 8 * (v21 ^ 0xBCFu)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * (((a20 == v22) * ((v21 ^ 0x523) - 1603)) ^ v21)))(v24);
}

uint64_t sub_10004D7C4@<X0>(int a1@<W8>)
{
  int v3 = 65 - a1;
  if ((65 - a1) <= 0x40) {
    int v3 = 64;
  }
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((62 * (a1 + v3 - 65 >= ((v1 - 516316550) & 0x1EC65FFFu) - 690)) ^ (v1 + 218))))();
}

uint64_t sub_10004D89C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t))(v13 + 8 * (int)(((((v12 - 1287259864) ^ 0xB345F904) + ((v12 - 1287259864) & 0x4CBA06FB) - 2994) * (v11 == 0)) ^ (v12 - 1469))))(a1, a2, a3, a4, a5, a6, a7, a8, a1, a10, a11, &STACK[0x9F59A823660760], v14 - 0x3662C3FC5DD30B5ELL);
}

uint64_t sub_10004D9BC@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((58 * (a2 + 1 != v3 + 64)) ^ a1)))();
}

uint64_t sub_10004DA70@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v6 + (v3 + v4)) = *(unsigned char *)(a2 + (v3 + v4))
                                           - ((2 * *(unsigned char *)(a2 + (v3 + v4))) & 0xB6)
                                           + 91;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((((v2 ^ a1) ^ (v3 - 1 == v5)) & 1 | (8
                                                                                     * (((v2 ^ a1) ^ (v3 - 1 == v5)) & 1))) ^ v2)))();
}

uint64_t sub_10004DAB8@<X0>(unsigned int a1@<W2>, uint64_t a2@<X8>)
{
  int v11 = v8 + v4;
  int v12 = *(_DWORD *)(a2 + 4 * (v8 + v4 - 8)) ^ *(_DWORD *)(a2 + 4 * (v8 + v4 - 3));
  int v13 = v12 + v10 - (v7 & (2 * v12));
  int v14 = *(_DWORD *)(a2 + 4 * (v11 + ((v2 + 232) | a1) - 1924)) ^ *(_DWORD *)(a2 + 4 * (v11 - 14));
  HIDWORD(v15) = v14 ^ v6 ^ v13;
  LODWORD(v15) = v14 ^ ~v13;
  *(_DWORD *)(a2 + 4 * (v3 + v8)) = v10 + (v15 >> 31) - (v7 & (2 * (v15 >> 31)));
  return (*(uint64_t (**)(void))(v9 + 8 * ((((v3 + 1 + v8) > 0x4F) * v5) ^ v2)))();
}

uint64_t sub_10004DB48(int a1, uint64_t a2)
{
  *(_DWORD *)(*(void *)(v4 + 96) + 1428) = 1271275137;
  return (*(uint64_t (**)(void))(v3 + 8 * ((622 * (*(_DWORD *)(a2 + 4) == v2 + ((a1 - 1134) ^ 0x577) - 1024)) ^ a1)))();
}

uint64_t sub_10004DB98(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)(((v4 + v3 + ((a3 - 1039) | 0x320u) + 605438304 < 8)
                                     * ((a3 - 2035920952) ^ 0x86A657DF)) | a3)))();
}

void sub_10004DC04()
{
}

uint64_t sub_10004DC10()
{
  unsigned int v5 = (((v4 ^ v3) >> 4) & 0xFE77D6E ^ 0x4A34C40) + (((v4 ^ v3) >> 5) ^ 0x55AA599F);
  BOOL v6 = ((v0 - 448) | 0x3E) + v5 + (((v0 + 455) | 5) ^ 0x77C9A73A) < v2 - 809672019;
  if (v2 > 0x30429D52 != v5 < 0x57F3BEB7) {
    BOOL v6 = v2 > 0x30429D52;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((1410 * v6) ^ v0)))();
}

void sub_10004DCC0()
{
}

uint64_t sub_10004DE0C@<X0>(int a1@<W3>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((a2 ^ 0x292BC717) != v3 - 207859062)
                                     * (a1 + ((v2 - 153288969) & 0xFF27BFA7) - 377)) ^ v2)))();
}

void sub_10004DE68()
{
}

void sub_10004DEE4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 32) - 1224239923 * ((-2 - ((a1 | 0xAACC30C4) + (~a1 | 0x5533CF3B))) ^ 0xA78032EC);
  __asm { BRAA            X12, X17 }
}

void sub_10004E010()
{
}

uint64_t sub_10004E018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (int)((((v9 - 21563207) & 0x87EF57DD ^ (v7 + v9 - 1210 + 1059)) * (v8 == a7)) ^ v9)))();
}

uint64_t sub_10004E05C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned char *a7, int a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  *a7 = a9 ^ 0x10;
  return (*(uint64_t (**)(void))(v15
                              + 8 * ((116 * (a14 == (((a1 + 145) | 0xA4) ^ (v14 + 936) ^ ((a1 + 853) | 0x48)))) ^ a1)))();
}

uint64_t sub_10004E0C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (((((v7 + 1786) | 0x12) ^ (v5 + v8 + v7 - 135 + 2295)) * (v6 == a5)) ^ v7)))();
}

uint64_t sub_10004E0FC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int8x16_t *a14)
{
  int v16 = (int8x16_t *)((char *)&STACK[0x660] + STACK[0x348] + (a6 ^ 0xA58B7074E0239F9DLL));
  *int v16 = veorq_s8(*a14, (int8x16_t)xmmword_1001D6570);
  STACK[0x5F8] += 32;
  STACK[0x600] = a1;
  STACK[0x608] = a1;
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15
                                                                                                  + 8 * (((v14 ^ 0x85A) * (v16 == (int8x16_t *)a1)) ^ v14)))(a1, a2, a3, 49, a4, a5);
}

uint64_t sub_10004E180(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(_DWORD *)(result + 28) = a6;
  return result;
}

uint64_t sub_10004E188@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((((a1 - 1380672448) & 0x524B5FBD) + 11) ^ (a1 - 1026)) * (*v2 > 0x14u)) ^ (a1 + 808))))();
}

void sub_10004E1D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(void *)(v27 - 144) = a25;
  *(void *)(v27 - 136) = a16;
  *(_DWORD *)(v27 - 112) = v26
                         + 1224239923 * (((v27 - 144) & 0xB015E071 | ~((v27 - 144) | 0xB015E071)) ^ 0xBD59E259)
                         - 420;
  *(void *)(v27 - 104) = v25;
  *(void *)(v27 - 128) = v25;
  *(void *)(v27 - 120) = a24;
  JUMPOUT(0x10001B014);
}

void sub_10004E23C(int a1@<W8>, uint64_t a2, unsigned int a3, int a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  int v9 = (a1 - 1287) | 0xA2;
  unsigned int v10 = 3804331 * ((2 * (&a3 & 0x63393F90) - &a3 - 1664696213) ^ 0xE213E59D);
  a5 = 0x5248BA885C210B04;
  a6 = v7;
  a7 = v10 - 1674431230;
  a3 = v10 + 1990337085;
  a4 = v10 + v9 - 56;
  (*(void (**)(unsigned int *))(v8 + 8 * (v9 ^ 0x831)))(&a3);
  sub_100029F98();
}

uint64_t sub_10004E2DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((((a7 - 190226244) & 0xB569F6F) + ((a7 - 434) | 0x416) - 3217) * (v7 == v8)) ^ a7)))();
}

void sub_10004E324()
{
}

void sub_10004E330()
{
}

uint64_t sub_10004E354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(a10 - 0x571561323F812302) = 1020499417 - v14;
  int v20 = 1224239923 * ((((v18 - 136) | 0xAB3AC3) - (v18 - 136) + ((v18 - 136) & 0xFF54C538)) ^ 0xF218C714);
  *(void *)(v18 - 128) = v17;
  *(_DWORD *)(v18 - 136) = v20 ^ 0x559E456E;
  *(_DWORD *)(v18 - 120) = v20 + v16 - 280;
  (*(void (**)(uint64_t))(v15 + 8 * (v16 ^ 0xAB3)))(v18 - 136);
  int v21 = 1759421093 * (((v18 - 136) & 0x1107F363 | ~((v18 - 136) | 0x1107F363)) ^ 0x5D85BCC8);
  *(_DWORD *)(v18 - 136) = ((32 * v19) ^ 0x7E6EED6F) - v21 - 369639488 + (((v16 + 671) ^ 0xFCDDDE00) & (v19 << 6));
  *(_DWORD *)(v18 - 120) = v16 - v21 + 775;
  *(void *)(v18 - 128) = v17;
  (*(void (**)(uint64_t))(v15 + 8 * (v16 + 1574)))(v18 - 136);
  *(_DWORD *)(v18 - 120) = v16
                         + 1374699841 * ((2 * ((v18 - 136) & 0xB04ADC0) - (v18 - 136) + 1962627641) ^ 0x190F4A30)
                         + 1238;
  *(void *)(v18 - 136) = a14;
  *(void *)(v18 - 128) = &STACK[0x9F59A8236606F0];
  (*(void (**)(uint64_t))(v15 + 8 * (v16 + 1606)))(v18 - 136);
  *(void *)(v18 - 128) = a14;
  *(void *)(v18 - 112) = v17;
  *(_DWORD *)(v18 - 120) = v16 + 1178560073 * ((v18 + 1698837839 - 2 * ((v18 - 136) & 0x654235D7)) ^ 0xDFD64DB5) + 1061;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 + 1624)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((*(_DWORD *)(v18 - 136) == 1532862472) * (13 * (v16 ^ 0x2C1) - 2079)) | v16)))(v22);
}

uint64_t sub_10004E5A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v6
                                                                      + 8
                                                                      * ((19
                                                                        * (v7 >= ((v9 - v8 - 564) ^ (a6 + 639) ^ (v9 - 772077683) & 0x2E04F79F))) ^ v9)))(a1, a2, a3, 0);
}

uint64_t sub_10004E5F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28
                                                              + 8
                                                              * ((15
                                                                * (((a10 + 487) ^ 0xAC5041BC ^ (3 * a10)) + a28 > 0xFFFFFFFA)) ^ ((int)a2 + 1680))))(a1, a2, a3);
}

uint64_t sub_10004E648(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((1126 * (v4 == (LODWORD(STACK[0x218]) ^ (v6 - 83)))) ^ (a4 - 140))))();
}

uint64_t sub_10004E67C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v1 != v0 + ((v3 - 194037011) & 0xB90C3F9) - 969) * (51 * (v3 ^ 0x4F1) - 947)) ^ v3)))();
}

uint64_t sub_10004E6E4()
{
  int v6 = (unint64_t *)((char *)&STACK[0x660] + STACK[0x348] + (v2 ^ 0xA58B7074E02395B4));
  STACK[0x5C8] = v3;
  void *v6 = 0xA4A4A4A4A4A4A4A4;
  v6[1] = 0x5B5B5B5B5D5B5B49;
  int v7 = ((((2 * (v5 - 200)) | 0x989D4EA2) - (v5 - 200) + 867260591) ^ 0x58E3EE08) * v0;
  *(_DWORD *)(v5 - 196) = v7 + 1270387672;
  *(_DWORD *)(v5 - 192) = v1 - v7 + 1064654654;
  (*(void (**)(uint64_t))(v4 + 8 * (v1 ^ 0xF04)))(v5 - 200);
  LODWORD(STACK[0x5E4]) = 544568946;
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8 * (v1 ^ 0xF3E)))(336, 1925803308);
  STACK[0x470] = v8;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 8 * ((4091 * (((v1 + 44) ^ (v8 == 0)) & 1)) ^ v1)))(v8, v9, v10, v11, v12, v13, v14, v15);
}

void sub_10004E804()
{
}

uint64_t sub_10004E80C()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((v0 ^ 0x6D4) * (((v3 ^ v2) & 0x1F) != 0x11)) ^ v0)))();
}

void sub_10004E884()
{
}

uint64_t sub_10004E88C()
{
  *(_DWORD *)(v5 - 112) = v3
                        + ((((v5 - 128) ^ 0xFBA47593 | 0x3D05B776)
                          - ((v5 - 128) ^ 0xFBA47593)
                          + (((v5 - 128) ^ 0xFBA47593) & 0xC2FA4889)) ^ 0x7C35BA87)
                        * v2
                        + 571;
  *(void *)(v5 - 120) = v4;
  *(void *)(v5 - 104) = v1;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v3 ^ 0xCF2)))(v5 - 128);
  BOOL v7 = *(_DWORD *)(v5 - 128) == (v3 ^ 6) + 1532861372;
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * (((2 * v7) | (4 * v7)) ^ v3)))(v6);
}

uint64_t sub_10004E944()
{
  LODWORD(STACK[0x3F4]) = v0;
  *(unsigned char *)(v3 - 200) = (-85 * ((v3 + 56 - 2 * ((v3 + 56) & 0x31) + 49) ^ 0xC7)) ^ 0x2E;
  *(_DWORD *)(v3 - 184) = 3804331 * ((v3 - 200 - 2 * ((v3 - 200) & 0x579C8431) + 1469875249) ^ 0x2949A1C7) + v1 + 1504;
  STACK[0x258] = (unint64_t)&STACK[0x1171F84DB0CF6214];
  *(void *)(v3 - 192) = &STACK[0x1171F84DB0CF6214];
  STACK[0x260] = (unint64_t)&STACK[0x66F6FC5CA4208365];
  *(void *)(v3 - 176) = &STACK[0x66F6FC5CA4208365];
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v1 ^ 0x9A5)))(v3 - 200);
  int v5 = *(_DWORD *)(v3 - 180);
  LODWORD(STACK[0x534]) = v5;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (((v5 == (v1 ^ 0x8165985E)) * (v1 ^ 0x82C)) ^ v1)))(v4);
}

uint64_t sub_10004EA38()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((13
                                * (((17 * (v1 ^ 0x1C)) ^ (v0 + (((v1 + 229) | 0x280) ^ 0xD58157AD) < 8)) & 1)) ^ v1)))();
}

uint64_t sub_10004EA90@<X0>(int a1@<W3>, int a2@<W4>, uint64_t a3@<X8>)
{
  uint64_t v8 = (a1 - 1811329849);
  *(unsigned char *)(a3 + v8) ^= *(unsigned char *)(v6 + (v8 & 0xF)) ^ *(unsigned char *)((v8 & 0xF) + v5 + 2) ^ *(unsigned char *)((v8 & 0xF) + v4 + 4) ^ (119 * (v8 & 0xF));
  return (*(uint64_t (**)(void))(v7 + 8 * ((253 * (a1 - 1 != v3)) ^ (a2 - 1945))))();
}

void sub_10004EAFC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 32) + 108757529 * (((a1 | 0xFA9FB8B3) - (a1 & 0xFA9FB8B3)) ^ 0x1A03DA98);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10004EBF0@<X0>(int a1@<W8>)
{
  uint64_t v3 = *(void *)(v8 + 16);
  uint64_t v4 = *(void *)(v8 + 40);
  int v5 = 235795823 * ((((v2 - 168) | 0xD4D6179E) - (v2 - 168) + ((v2 - 168) & 0x2B29E860)) ^ 0x407B5EC7);
  uint64_t v6 = (void *)(v2 - 168);
  v6[5] = &STACK[0xC6562B2033A21B7];
  v6[2] = v2 - 188;
  v6[3] = v4;
  *(_DWORD *)(v2 - 160) = v5 + 365380227;
  *(_DWORD *)(v2 - 132) = (a1 + 2053) ^ v5;
  void *v6 = v3;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v1 + 8 * (a1 | 0x8E9)))(v2 - 168);
  *(_DWORD *)(v8 + 12) = *(_DWORD *)(v2 - 136);
  return result;
}

uint64_t sub_10004ECF8@<X0>(uint64_t a1@<X8>, uint64_t a2, unsigned int a3, int a4, uint64_t a5, uint64_t a6)
{
  a5 = a1;
  a6 = a2;
  a3 = (v9 + 415) ^ ((((&a3 | 0x396E0C50) - &a3 + (&a3 & 0xC691F3A8)) ^ 0x549A1459)
                   * v7);
  uint64_t v10 = (*(uint64_t (**)(unsigned int *))(v8 + 8 * (v9 + 443)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8
                                            * (v9 | (16 * (((v9 - 1) ^ (a4 == v6 + v9 - 1742)) & 1)))))(v10);
}

uint64_t sub_10004ED8C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (int)(((((v1 ^ 0xC00540D4) + 1073397366) ^ 0x4A) * (a1 == 544568619)) ^ v1)))(4294925278);
}

uint64_t sub_10004EDD4(double a1)
{
  *(double *)(v2 + v5) = a1;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v3 != v5) * v4) ^ v1)))();
}

uint64_t sub_10004EDF8(_DWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unsigned int a12, uint64_t a13, int a14)
{
  unsigned int v20 = *(_DWORD *)(v14 - 0x6C0C7F2AED40EE81) + *a1 - v18 + (((v19 - 126) | 0x6B8) ^ 0x895DDB77);
  unsigned int v21 = 1759421093 * (((&a11 | 0x77F9C2C3) - (&a11 & 0x77F9C2C3)) ^ 0xC4847297);
  a14 = v19 - v21 + 1300;
  a13 = v14;
  a11 = v20 - v21 - 250557685;
  a12 = v21 + 1064857036;
  uint64_t v22 = (*(uint64_t (**)(int *))(v17 + 8 * (v19 + 2168)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((732 * (*v15 == v16)) ^ v19)))(v22);
}

uint64_t sub_10004EEE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v26 = 628203409 * ((~((v25 - 160) | 0xE331EBA3) + ((v25 - 160) & 0xE331EBA3)) ^ 0x9E46186F);
  *(void *)(v25 - 160) = a23;
  *(_DWORD *)(v25 - 152) = v26 + v24 + 1466;
  *(_DWORD *)(v25 - 148) = a17 - v26;
  uint64_t v27 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v24 ^ 0x8A9)))(v25 - 160);
  uint64_t v28 = STACK[0x31C] & (v24 - 19);
  *((unsigned char *)&STACK[0x2D8] + (v28 ^ 0x3F)) = -37;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23
                                                              + 8
                                                              * ((1832 * ((v28 ^ 0x3F) > 0x37)) | v24)))(v27, 71663627, 3974425771);
}

uint64_t sub_10004EFF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  return (*(uint64_t (**)(void))(v14 + 8 * (((a12 == v13) * ((v12 + 584650589) ^ 0x22D916A2)) | v12)))();
}

void sub_10004F038()
{
}

uint64_t sub_10004F044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17, int a18)
{
  int v21 = 628203409 * ((((2 * (v20 - 160)) | 0xE0837094) - (v20 - 160) - 1883355210) ^ 0xF2C9B479);
  STACK[0x310] = a16;
  *(_DWORD *)(v20 - 152) = v21 + v18 + 1518;
  *(_DWORD *)(v20 - 148) = a18 - v21 + 808190219;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v19 + 8 * (v18 ^ 0x8E5)))(v20 - 160);
  uint64_t v23 = STACK[0x2F0] & ((v18 - 11534495) & 0xF6B4BFA7 ^ 0xF604BF18);
  *((unsigned char *)&STACK[0x2AC] + (v23 ^ 0x3F)) = -37;
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * ((((v23 ^ 0x3F) > 0x37) * ((v18 + 546) ^ 0x3E0)) ^ v18)))(v22);
}

uint64_t sub_10004F158(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8
                                   * (((v3 + 1458375211 == (((v2 ^ 0x278) - 483) ^ 0xA2B32C04)) * a2) ^ v2 ^ 0x278)))();
}

uint64_t sub_10004F1BC()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1039
                                * (((v1 + v2 - 100 - 275) & (2 * (*(unsigned __int8 *)(v3 + 5) - 13)))
                                 + ((*(unsigned __int8 *)(v3 + 5) - 13) ^ v0) == v0 + v2 + 1568 - 1943)) ^ v2)))();
}

uint64_t sub_10004F208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((95 * (*(_DWORD *)(v9 + 48 * (a6 + v6 + (v7 ^ 0x708) - 1039)) != v7 + 1974253278)) ^ v7)))();
}

uint64_t sub_10004F25C@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(_DWORD *)(a13 + 4 * (v13 + a3)) = a2;
  int v19 = v13 + 1 + v15;
  BOOL v21 = v19 > (v14 ^ 0x718 ^ (v16 + 40)) || v19 < v17;
  return (*(uint64_t (**)(void))(v18 + 8 * ((v21 * a1) ^ v14)))();
}

uint64_t sub_10004F2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13)
{
  a13 = 108757529
      * ((((&a12 | 0xC8548EC6) ^ 0xFFFFFFFE) - (~&a12 | 0x37AB7139)) ^ 0xD7371312)
      + 1695027452;
  uint64_t v15 = (*(uint64_t (**)(int *))(v14 + 18608))(&a12);
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * ((1787 * (a12 == v13)) ^ 0x2C7u)))(v15);
}

uint64_t sub_10004F328@<X0>(int a1@<W8>)
{
  _DWORD *v2 = v2[623];
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1385 * (v1 - 1 == ((((a1 - 1256) | 0x1A0) - 288) ^ 0x488) + 1500680230)) ^ ((a1 - 1256) | 0x1A0))))();
}

uint64_t sub_10004F380()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((54 * (STACK[0x598] == 0)) ^ (v0 + 271))))();
}

uint64_t sub_10004F3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = (unsigned __int8 *)(a4 + a6 + v10);
  int v12 = ((*v11 ^ 0x5B) << (v6 ^ 0x27)) | ((v11[1] ^ 0x5B) << 16) | ((v11[2] ^ 0x5B) << 8);
  *(_DWORD *)(v7 + ((a6 + v10) & 0xFFFFFFFFFFFFFFFCLL)) = (v12 | v11[3] ^ 0x5B)
                                                        + v9
                                                        - 2 * ((v12 | v11[3] ^ 0x5B) & 0x1659911 ^ (v11[3] ^ 0x5B) & 1);
  return (*(uint64_t (**)(void))(v8 + 8 * ((614 * ((unint64_t)(a6 + 4 + v10) < 0x40)) ^ v6)))();
}

void sub_10004F450()
{
}

void sub_10004F558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(void *)(v28 - 128) = v26;
  *(void *)(v28 - 120) = a24;
  *(void *)(v28 - 104) = v26;
  *(void *)(v28 - 144) = a25;
  *(void *)(v28 - 136) = a12;
  *(_DWORD *)(v28 - 112) = v27 + (((v28 - 144) & 0x92250D8D | ~((v28 - 144) | 0x92250D8D)) ^ 0x9F690FA5) * v25 - 1521;
  JUMPOUT(0x100039210);
}

void sub_10004F5B8(uint64_t a1)
{
  int v1 = 1759421093 * (((a1 | 0x9EBEB665) - a1 + (a1 & 0x6141499A)) ^ 0x2DC30631);
  int v2 = *(_DWORD *)(a1 + 16) + v1;
  __asm { BRAA            X14, X17 }
}

uint64_t sub_10004F6A8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  return sub_1000192DC(a1, a2, v5 + v6 + (int)a2 + 2141100770, a4, a5, v7 ^ 0x2D7u);
}

uint64_t sub_10004F6C8@<X0>(unsigned int a1@<W8>, uint64_t a2, int a3, int a4)
{
  BOOL v6 = a4 == (((7 * (a1 ^ 0x5E4) - 861) | 0x83D) ^ (v5 - 2019));
  return (*(uint64_t (**)(void))(v4 + 8 * (((8 * v6) | (32 * v6)) ^ a1)))();
}

void sub_10004F718()
{
}

uint64_t sub_10004F728(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 32) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_10004F740()
{
  int v6 = *(unsigned __int8 *)(v0 + v3 - 0x64C68B25B7B694ELL)
     - (*(unsigned __int8 *)(v1 + v3 - 0x64C68B25B7B694ELL) ^ 0x5B);
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((856
                                * ((v6 ^ 0xFD26FAFF) + ((v6 << (((v2 - 116) | 2) ^ (v5 + 1))) & 0xFA4DF5FE) == -47777025)) ^ v2)))();
}

void sub_10004F7D0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 12) + 460628867 * ((a1 & 0x73B15F3F | ~(a1 | 0x73B15F3F)) ^ 0xC0D822BD);
  int v2 = (char *)*(&off_100233720 + (v1 ^ 0x533)) - 8;
  uint64_t v3 = *(void *)&v2[8
                    * ((((*(uint64_t (**)(uint64_t, uint64_t))&v2[8 * v1 + 6480])(32, 0x101004023FF3BD5) != 0)
                      * (((v1 + 26456094) & 0xFE6C4F57) - 1275)) | v1)];
  __asm { BRAA            X8, X17 }
}

void sub_10004F894()
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v2 + 1573)))(16);
  uint64_t v4 = (uint64_t *)*(&off_100233720 + (v2 ^ 0x296));
  uint64_t *v4 = v3;
  (*(void (**)(void))(v0 + 8 * (v2 ^ 0xA1C)))();
  char v5 = (void *)(*(uint64_t (**)(uint64_t))(v0 + 8 * (v2 ^ 0xBFD)))(8);
  uint64_t v6 = (uint64_t)*(&off_100233720 + (v2 & 0xFD341BC));
  *(void *)(v6 - 4) = v5;
  void *v5 = 0xBDBDBDBDBDBDBDBDLL;
  uint64_t v7 = (uint64_t)*(&off_100233720 + (v2 ^ 0x2C9));
  *(_DWORD *)(v7 - 4) = 0;
  *(_DWORD *)*(&off_100233720 + v2 - 581) = 0;
  uint64_t v8 = (unsigned char *)*v4;
  int v9 = *(unsigned char **)(v6 - 4);
  v9[6] = 26;
  unsigned char *v8 = -77;
  v9[4] = -34;
  uint64_t v10 = *(&off_100233720 + (v2 & 0x71A8555F));
  *(v10 - 2) = 82;
  v10[5] = 125;
  *(unsigned char *)(v7 + 21) = 68;
  v10[10] = -91;
  v8[4] = 73;
  unsigned char *v10 = 12;
  *(unsigned char *)(v7 + 20) = 83;
  *(unsigned char *)*(&off_100233720 + v2 - 605) = -113;
  v8[1] = 80;
  *(unsigned char *)*(&off_100233720 + (v2 ^ 0x2D5)) = 88;
  v10[9] = v1;
  *(unsigned char *)*(&off_100233720 + v2 - 575) = 1;
  _DWORD v8[2] = -44;
  *(unsigned char *)*(&off_100233720 + v2 - 732) = 51;
  v9[2] = 80;
  v8[6] = -11;
  *(unsigned char *)*(&off_100233720 + v2 - 673) = 25;
  *(unsigned char *)*(&off_100233720 + (v2 ^ 0x292)) = 39;
  v8[5] = -22;
  v8[3] = -15;
  v10[4] = 123;
  *(unsigned char *)(v7 + 6) = -52;
  v10[11] = -40;
  *(unsigned char *)*(&off_100233720 + (v2 ^ 0x299)) = -109;
  v8[13] = 99;
  *(unsigned char *)*(&off_100233720 + (v2 ^ 0x2F2)) = 119;
  v9[7] = -80;
  unsigned char *v9 = -122;
  v8[8] = 34;
  v10[3] = -102;
  v8[11] = 54;
  *(unsigned char *)(v7 + 7) = 3;
  v9[1] = 73;
  v9[5] = -5;
  *(unsigned char *)(v7 - 8) = 23;
  *(unsigned char *)(v7 + 8) = -36;
  v9[3] = 59;
  uint64_t v11 = (unsigned char *)*v4;
  v11[10] = 45;
  v11[15] = -87;
  *(v10 - 4) = 57;
  v10[7] = -111;
  *(unsigned char *)(v7 + 17) = -92;
  v10[1] = -60;
  v10[6] = 61;
  *(unsigned char *)(v7 + 19) = 52;
  *(v10 - 8) = -20;
  *(_WORD *)(v7 + 2) = -3774;
  *(unsigned char *)(v7 + 14) = -121;
  *(unsigned char *)(v7 + 12) = 77;
  *(unsigned char *)(v7 + 18) = 113;
  v11[9] = 31;
  v10[12] = 18;
  v10[2] = -19;
  *(unsigned char *)uint64_t v7 = -85;
  *(v10 - 6) = 116;
  *(v10 - 3) = -60;
  *(unsigned char *)(v7 - 6) = 34;
  v10[8] = 16;
  v11[12] = -86;
  *(v10 - 5) = -17;
  v11[7] = -90;
  v11[14] = -33;
  *(unsigned char *)(v7 - 5) = -98;
  *(unsigned char *)(v7 + 13) = -105;
  *(v10 - 1) = 61;
  *(unsigned char *)(v7 + 16) = -119;
  *(unsigned char *)(v7 + 22) = 58;
  *(unsigned char *)(v7 + 4) = 73;
  *(unsigned char *)(v7 - 7) = -15;
  *(v10 - 7) = 85;
  *(unsigned char *)(v7 + 11) = 120;
  *(unsigned char *)(v7 + 5) = 69;
  *(_WORD *)(v7 + 9) = -4168;
  *(unsigned char *)(v7 + 1) = -105;
  *(unsigned char *)(v7 + 15) = 79;
  JUMPOUT(0x100050170);
}

uint64_t sub_1000501AC(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                                           + 8
                                           * (a2 ^ (16
                                                  * ((((unint64_t)(v3 - v2) < 0x20) ^ ((a2 - 64) ^ (a2 - 87))) & 1)))))((a2 - 1771695936) & 0x6999EC7B);
}

uint64_t sub_1000501FC(uint64_t a1)
{
  int v1 = 628203409 * (((a1 | 0xC21FEC2B) - (a1 & 0xC21FEC2B)) ^ 0x4097E018);
  int v2 = *(_DWORD *)(a1 + 8) - v1;
  unsigned int v3 = v1 + *(_DWORD *)(a1 + 12) - 1352758830;
  unsigned int v4 = (*(_DWORD *)(*(void *)a1 - 0x35FF68D50C8F404FLL) ^ 0x25362CBF) + v3;
  int v5 = v4 - ((2 * v4) & 0x4A6C597E) + 624307391;
  *(_DWORD *)(*(void *)a1 - 0x35FF68D50C8F404FLL) = v5;
  return (*((uint64_t (**)(void))*(&off_100233720 + v2 - 1402) + ((198 * ((v5 ^ 0x25362CBFu) < v3)) ^ v2) - 1))();
}

void sub_1000502C0()
{
}

uint64_t sub_100050334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,uint64_t a22,uint64_t a23,int a24,int a25,uint64_t a26,int a27,uint64_t a28,uint64_t a29)
{
  unsigned int v33 = 628203409 * ((&a22 & 0x6F1D15EB | ~(&a22 | 0x6F1D15EB)) ^ 0x126AE627);
  a22 = a15;
  a23 = a13;
  a26 = a16;
  a28 = a20;
  a24 = v29 - v33 + 927;
  a25 = (v29 ^ 0x13437772) - v33 + a21;
  a29 = a14;
  uint64_t v34 = (*(uint64_t (**)(uint64_t *))(v30 + 8 * (v29 + 1996)))(&a22);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30
                                                                                         + 8
                                                                                         * ((545 * (a27 == -2124048112)) ^ v29)))(v34, v31, v32, 544568613, 1023862908, 201323775);
}

uint64_t sub_100050440()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)(((**(void **)(v1 + 8 * (int)(((v2 + 2127352652) & 0x81332CBE) - 100)) == 0)
                                     * (((v2 + 2127352652) & 0x81332CBE ^ 0x35)
                                      + ((((v2 + 2127352652) & 0x81332CBE) + 880) | 0x60)
                                      - 57)) ^ (v2 + 2127352652) & 0x81332CBE)))();
}

uint64_t sub_100050498()
{
  *(_DWORD *)(v2 - 200) = (v0 + 426522906) ^ (535753261
                                            * ((((v2 - 200) ^ 0x3212692C)
                                              + 2038877446
                                              - 2 * (((v2 - 200) ^ 0x3212692C) & 0x7986CD06)) ^ 0x4160AA05));
  (*(void (**)(uint64_t))(v1 + 8 * (v0 ^ 0x8B9)))(v2 - 200);
  *(_DWORD *)(v2 - 184) = 3804331 * ((2 * ((v2 - 200) & 0x2AE7CB60) - (v2 - 200) + 1427649688) ^ 0x2BCD116E) + v0 + 1727;
  *(void *)(v2 - 192) = STACK[0x258];
  *(unsigned char *)(v2 - 200) = (-85 * ((2 * ((v2 + 56) & 0x60) - (v2 + 56) - 104) ^ 0x6E)) ^ 0x2F;
  *(void *)(v2 - 176) = STACK[0x260];
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 2172)))(v2 - 200);
  STACK[0x338] = 0;
  LODWORD(STACK[0x2CC]) = 540038155;
  return sub_10005059C(v3);
}

uint64_t sub_10005059C()
{
  return (*(uint64_t (**)(void))(v1 + 8
                                   * ((28 * (((STACK[0x338] == 0) ^ (v0 + 82)) & 1)) ^ (v0 - 703))))();
}

uint64_t sub_1000505DC(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 88) = 41;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 80) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_1000505FC()
{
  return sub_10005062C(402742891, 2147483031, 1548);
}

uint64_t sub_10005062C@<X0>(int a1@<W7>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((*(_DWORD *)(v2 + 4 * (a2 + a1 + 617)) != v3) * (((v4 ^ v5) * v6) ^ v7)) ^ (v4 - 342))))();
}

void sub_100050670(uint64_t a1)
{
  int v1 = 1225351577 * (((a1 | 0xD0007703) - a1 + (a1 & 0x2FFF88FC)) ^ 0xF39AAF15);
  __asm { BRAA            X11, X17 }
}

uint64_t sub_100050734()
{
  unint64_t v7 = STACK[0x590];
  unsigned int v8 = 628203409 * ((1155205280 - (v0 | 0x44DB08A0) + (v0 | 0xBB24F75F)) ^ 0x39ACFB6C);
  int v9 = LODWORD(STACK[0x574]) - v8 - ((2 * LODWORD(STACK[0x574]) + 1067407338) & 0x6D6ADB78) + 377821617;
  STACK[0x338] = v1;
  *(void *)(v6 - 152) = v1;
  *(void *)(v6 - 192) = v4 + 0xC6562B2033A24EBLL;
  *(_DWORD *)(v6 - 184) = v2 - v8 - ((2 * v2 + 813971050) & 0xAF192B36) + ((17 * (v3 ^ 0x52)) ^ 0x6FCEB4DD);
  *(_DWORD *)(v6 - 180) = v9;
  *(_DWORD *)(v6 - 200) = v3 - v8 - 2024873194;
  *(void *)(v6 - 176) = v7;
  *(void *)(v6 - 168) = v4 + 0x76D4F6DCACF2CDA2;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v3 + 2167)))(v6 - 200);
  int v11 = *(_DWORD *)(v6 - 160);
  LODWORD(STACK[0x534]) = v11;
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * ((578 * (v11 == -2124048112)) ^ v3)))(v10);
}

void sub_10005087C(uint64_t a1@<X8>)
{
  *(void *)(a1 - 0x6270735DB71EF9AFLL) = v2;
  *(_DWORD *)(v1 + 32) = -2124048112;
}

uint64_t sub_1000508D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  return (*(uint64_t (**)(void))(v13 + 8 * ((105 * (a13 + 2250559 >= 13 * (v14 ^ 0x1AAu) + 2147483542)) ^ v14)))();
}

uint64_t sub_10005092C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((1885 * ((a5 + 1 + v5) < 0x40)) ^ a1)))();
}

uint64_t sub_100050A00(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((v7 == 24) * a6) ^ a3)))();
}

uint64_t sub_100050A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, void))(v6
                                                                              + 8
                                                                              * (((((v8 ^ (v9 - 1) ^ (v7 == a6)) & 1) == 0)
                                                                                * (v8 - 274)) ^ v8)))(0, a2, a3, a4, (v8 + 4));
}

uint64_t sub_100050A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(_DWORD *)(v30 - 144) = (v25 + 870) ^ (1225351577
                                        * ((((2 * (v30 - 144)) | 0xE1AA7CCE) - (v30 - 144) + 254460313) ^ 0xD34FE671));
  *(void *)(v30 - 136) = a24;
  *(void *)(v30 - 128) = v26;
  *(void *)(v30 - 120) = v26;
  *(void *)(v30 - 112) = a25;
  (*(void (**)(uint64_t))(v27 + 8 * (v25 + 1404)))(v30 - 144);
  *(void *)(v30 - 120) = v26;
  *(void *)(v30 - 112) = a25;
  *(void *)(v30 - 136) = a24;
  *(void *)(v30 - 128) = v26;
  *(_DWORD *)(v30 - 144) = (v25 + 870) ^ (1225351577
                                        * ((~((v30 - 144) | 0x13EB60EF) + ((v30 - 144) & 0x13EB60EF)) ^ 0xCF8E4706));
  (*(void (**)(uint64_t))(v27 + 8 * (v25 + 1404)))(v30 - 144);
  int v31 = 1374699841 * ((((v30 - 144) ^ 0xC500DC09 | 0x2ACF2346) + ((v30 - 144) ^ 0x22050004 | 0xD530DCB9)) ^ 0x8AF1C405);
  *(_DWORD *)(v30 - 128) = v29 - v31 + ((v25 + 177) ^ 0xDEA2C175) + ((v25 + 165) | 0xC);
  *(_DWORD *)(v30 - 144) = (v25 - 113) ^ v31;
  *(void *)(v30 - 136) = v28;
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(v27 + 8 * (v25 + 1396)))(v30 - 144);
  return (*(uint64_t (**)(uint64_t))(v27 + 8 * ((216 * (*(_DWORD *)(v30 - 140) != 2087569631)) ^ v25)))(v32);
}

uint64_t sub_100050C2C()
{
  int v4 = ((41 * ((v2 + 415) ^ 0x828)) ^ (v2 + 1896772259)) + v3;
  int v5 = v1 + 1896773828;
  BOOL v6 = v5 < 1226889146;
  BOOL v7 = v4 < v5;
  if (v6 != v4 < 1226889146) {
    BOOL v7 = v6;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * (v7 | (v2 + 415))))();
}

uint64_t sub_100050CA0()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((1547 * (v0 > ((LODWORD(STACK[0x3F4]) - 429) | 6u) - 1397659574)) ^ (LODWORD(STACK[0x3F4]) - 423))))();
}

void sub_100050CE0()
{
}

uint64_t sub_100050D5C(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 24);
  return 0;
}

uint64_t sub_100050D78@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(*(void *)(v2 - 0x9F59A8236606B8) + 4 * (v5 - 950047403)) = *(_DWORD *)(*(void *)(v3 - 0x9F59A8236606B8)
                                                                                         + 4 * (v5 - 950047403));
  return (*(uint64_t (**)(void))(a1 + 8 * (((v4 - 1254) | 0x383) ^ (32 * (((v4 - 1254) | 0x383) + v5 - 912 != v1)))))();
}

uint64_t sub_100050DE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v8 = (v6 + 605438858 + v4 + v3 - v5);
  *(void *)(a1 - 7 + v8) = *(void *)(v1 - 7 + v8);
  return (*(uint64_t (**)(void))(v7 + 8 * ((783 * (v5 - (v2 & 0xFFFFFFF8) == -8)) ^ v6)))();
}

void sub_100050E40()
{
}

uint64_t sub_100050E50(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  uint64_t v18 = (unsigned int *)(v15 + 4 * v10);
  uint64_t v19 = v10 + 1;
  int v20 = *(_DWORD *)(v15 + 4 * v19);
  unsigned int v21 = v16 ^ ((v20 & 0x7FFFFFFE | v9 & 0x80000000) >> 1);
  *uint64_t v18 = v18[397] ^ a1 ^ *(_DWORD *)(a5 + 4 * (v20 & 1)) ^ (v21 + v12 - ((v21 << ((v8 + a7) & a8 ^ v11)) & v14));
  return (*(uint64_t (**)(void))(v17 + 8 * (((v19 == 227) * v13) ^ v8)))();
}

uint64_t sub_100050EC4@<X0>(_DWORD *a1@<X8>)
{
  *a1 = v1;
  return sub_100050ED0();
}

void sub_100050ED0()
{
  *(_DWORD *)(v1 + 4) = v0;
}

void sub_100050F08(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (1178560073 * ((((2 * a1) | 0xD7F3130A) - a1 + 335967867) ^ 0x516DF1E7));
  __asm { BRAA            X14, X17 }
}

void sub_100051040()
{
}

void sub_100051060()
{
}

uint64_t sub_100051068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v66 = STACK[0x218];
  int v67 = LODWORD(STACK[0x218]) ^ 0x47C;
  STACK[0x430] = 0;
  LODWORD(STACK[0x544]) = 544568610;
  STACK[0x4A0] = 0;
  LODWORD(STACK[0x584]) = 544568610;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 8 * (((*(unsigned __int8 *)(a64 - 0x6B4327F0248771FDLL) == *(unsigned __int8 *)(*(void *)(v64 + 8 * (v66 ^ 0x1C5u)) - 8)) * (((v67 - 1041) | 3) + 518)) ^ v67)))(1872953494, 2422012975, 1072, 170, 1756, 513, 4294966157, 1440);
}

uint64_t sub_100051120()
{
  unsigned int v3 = ((2 * (v1 ^ 0x420) + 148) ^ ((v1 - 621) | 0x10)) - v0;
  if (v3 <= 0x40) {
    unsigned int v3 = 64;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((85 * (v0 + v3 - 65 < 7)) ^ v1)))();
}

uint64_t sub_100051178@<X0>(uint64_t a1@<X0>, int a2@<W3>, int a3@<W5>, int a4@<W8>)
{
  *(unsigned char *)(a1 + (a2 + v5)) = *(unsigned char *)(v4 + (a2 + v5));
  return (*(uint64_t (**)(void))(v7 + 8 * ((27 * (a2 + ((a3 + v6) | 0x288) - 649 == a4)) ^ (a3 + v6 + 651))))();
}

void sub_1000511BC()
{
  LODWORD(STACK[0x5E4]) = 544568610;
  JUMPOUT(0x100040ECCLL);
}

uint64_t sub_1000511D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t))(v10 + 8 * ((19 * (a8 + 1 != v8 + 16)) ^ (a5 + 546))))(v9);
}

uint64_t sub_1000512EC@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W3>, int a4@<W8>)
{
  return sub_100014FD8(a1, a3 ^ 0x58Cu, *(_DWORD *)(*v5 + 4 * (int)((a3 ^ 0xBCD65C60) + a2)), v4, a4);
}

uint64_t sub_10005131C@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W5>, int a4@<W6>, int a5@<W8>)
{
  uint64_t v10 = (unsigned int *)(v8 + 4 * v5);
  uint64_t v11 = v5 + 1;
  int v12 = *(_DWORD *)(v8 + 4 * v11);
  unsigned int v13 = a2 ^ ((v12 & 0x7FFFFFFE | (a5 + 2147482228) & v6) >> 1);
  unsigned int *v10 = v10[397] ^ a4 ^ *(_DWORD *)(v9 - 160 + 4 * (v12 & 1)) ^ (v13 + a1 - (a3 & (2 * v13)));
  return (*(uint64_t (**)(void))(v7 + 8 * ((69 * (v11 == 227)) ^ a5)))();
}

uint64_t sub_100051394@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((123 * (a1 + v2 - 1 - 1 > (v3 ^ 0x638) - 277)) ^ v3)))();
}

void sub_1000513CC()
{
}

uint64_t sub_100051490()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((((v0 + 1073748938) | 0xB604A203) ^ 0xFFFFFE33) + ((v0 - 138478043) & 0xFE45BFA7))
                                     * (v1 == v2)) ^ v0)))();
}

uint64_t sub_1000514EC()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v1 & (2 * (*(unsigned __int8 *)(v3 + 7) - 1)))
                                 + ((*(unsigned __int8 *)(v3 + 7) - 1) ^ v0) == v0)
                                * (((v2 - 271) | 0x5E1) ^ 0x60B)) ^ v2)))();
}

uint64_t sub_100051530()
{
  LODWORD(STACK[0x610]) = v0;
  return sub_10001F298();
}

uint64_t sub_100051550@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((548 * (a2 + 1 == v3 + 32)) ^ a1)))();
}

uint64_t sub_100051630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  int v12 = *(unsigned __int8 *)(v7 + (v10 + v9 + 2));
  return (*(uint64_t (**)(uint64_t, uint64_t, void, void))(v8
                                                                     + 8
                                                                     * ((408
                                                                       * (a7 - 34121153 == ((v11 - 600) ^ 0x5DE34E9F))) ^ v11)))(a1, a2, (a5 + v9 + 1), (v12 ^ 0x26FDFF76) - 109611604 + ((((v11 - 422983427) & 0x1936367F) - 1418) & (2 * v12)));
}

uint64_t sub_1000516C8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, int a6, unint64_t *a7, int a8)
{
  int v11 = a1 - 1654;
  unsigned int v12 = 1755732067 * ((&a4 & 0x115CB541 | ~(&a4 | 0x115CB541)) ^ 0x3065F765);
  a7 = &STACK[0x3EEC7284B8A20CB7];
  a8 = v12 ^ 0x5335E9A6;
  a4 = &STACK[0x6A4735A87A2643E5];
  a5 = v10;
  a6 = (a1 - 827) ^ v12;
  uint64_t v13 = (*(uint64_t (**)(unint64_t **))(v9 + 8 * ((a1 - 1654) ^ 0x96E)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * (((*(_DWORD *)(v10 - 0x6C0C7F2AED40EE79) == v8 + v11 - 503) * (v11 + 498)) ^ v11)))(v13);
}

uint64_t sub_1000517B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((15 * ((v7 ^ a7 ^ v9 ^ ((v7 + 1443) | 0x80)) + v10 == 32)) ^ v7)))();
}

uint64_t sub_100051830()
{
  unsigned int v5 = *(unsigned __int8 *)(v3 + 2) + ((v2 - 11) ^ 0xFFFFFED4);
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1982 * ((v1 & (2 * v5)) + (v5 ^ v0) == v0 + ((v2 - 1747610136) & 0x682A69B3) - 275)) ^ v2)))();
}

uint64_t sub_100051890@<X0>(int a1@<W8>)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0xB76u));
  return v3(v1);
}

uint64_t sub_1000518C4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((((a1 - 1073398064) | 0x160) ^ 0xC00545EA) * (v1 == v2)) ^ a1)))();
}

void sub_100051904(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) - 1755732067 * ((a1 & 0xB853BF30 | ~(a1 | 0xB853BF30)) ^ 0x996AFD14);
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = (char *)*(&off_100233720 + (int)(v1 & 0x851448BA)) - 8;
  (*(void (**)(char *, uint64_t (*)()))&v3[8 * v1 + 16840])((char *)*(&off_100233720 + v1 - 41) - 12, sub_10001C2E4);
  __asm { BRAA            X9, X17 }
}

void sub_1000519CC()
{
}

uint64_t sub_1000519D4()
{
  int v5 = (v2 + 14159693) | 0x22010010;
  *int v1 = (v5 + v0) ^ v9;
  uint64_t v12 = v7;
  unsigned int v11 = v5
      - 584651044
      + 535753261
      * (((v10 ^ 0x7AB150AD | 0x810A0750) + (v10 ^ 0xFFFFFE3F | 0x7EF5F8AF)) ^ 0xF14F5893);
  (*(void (**)(unsigned char *))(v4 + 8 * (v5 - 584649203)))(v10);
  uint64_t v12 = v8;
  unsigned int v11 = v5
      - 584651044
      + 535753261 * (((v10 | 0xFD2C0060) - (v10 & 0xFD2C0060)) ^ 0xF7D80E4F);
  (*(void (**)(unsigned char *))(v4 + 8 * (v5 - 584649203)))(v10);
  return v3 ^ 0x81659910;
}

uint64_t sub_100051B10()
{
  return sub_100051B18();
}

uint64_t sub_100051B18(uint64_t a1, int8x16_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  unsigned int v40 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, void, void, uint64_t))(v34 + 8 * v30);
  uint64_t v41 = *(unsigned int *)(v39 - 148);
  unsigned int v42 = *(_DWORD *)(v39 - 144);
  unsigned int v44 = *(_DWORD *)(v39 - 140);
  unsigned int v43 = *(_DWORD *)(v39 - 136);
  uint64_t v45 = v43;
  int v46 = *(unsigned char *)(v39 - 124) ^ 0x22;
  LODWORD(a17) = *(unsigned __int8 *)(v39 - 124) ^ 0x22;
  if (v46 == 2)
  {
    unint64_t v65 = __PAIR64__(v43, v44);
    uint64_t v66 = *(void *)(v34 + 8 * v30);
    int8x16x4_t v68 = vld4q_s8(v31);
    HIDWORD(a16) = *(_DWORD *)(v39 - 132);
    uint8x16_t v54 = (uint8x16_t)veorq_s8(v68.val[1], a2);
    _Q22 = vmovl_u8(*(uint8x8_t *)v54.i8);
    _Q21 = vmovl_high_u8(v54);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    int v59 = (_DWORD *)(v29 + 4 * (v36 + 391437562));
    int v60 = *(v59 - 8) ^ *(v59 - 3);
    int v61 = v60 + v33 - ((v32 + 46870853) & (2 * v60));
    int v62 = *(v59 - 16) ^ *(v59 - 14);
    HIDWORD(v63) = v62 ^ 0x1659910 ^ v61;
    LODWORD(v63) = v62 ^ ~v61;
    *int v59 = (v63 >> 31) + v33 - ((2 * (v63 >> 31)) & 0x2CB3220);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8 * ((7 * (v37 != 391437499)) ^ HIDWORD(a21))))(a1, 46870853, a4, v45, v42, a7, a8, v41, a10, a11, a12, a13, a14, a15, a16, a17, __PAIR64__(v42, v41), v65, v66,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29);
  }
  else
  {
    if (v46 == 1)
    {
      int8x16x4_t v67 = vld4q_s8(v31);
      uint8x16_t v47 = (uint8x16_t)veorq_s8(v67.val[2], a2);
      _Q26 = vmovl_high_u8(v47);
      _Q25 = vmovl_u8(*(uint8x8_t *)v47.i8);
      __asm
      {
        SHLL2           V25.4S, V25.8H, #0x10
        SHLL2           V26.4S, V26.8H, #0x10
      }
      JUMPOUT(0x100051C94);
    }
    *(_DWORD *)(v39 - 148) = 2 * (v41 ^ v35) + v35 - (v38 & (4 * (v41 ^ v35)));
    *(_DWORD *)(v39 - 144) = 2 * (v42 ^ v35) + v35 - (v38 & (4 * (v42 ^ v35)));
    *(_DWORD *)(v39 - 140) = 2 * (v44 ^ v35) + v35 - (v38 & (4 * (v44 ^ v35)));
    *(_DWORD *)(v39 - 136) = 2 * (v43 ^ v35) + v35 - (v38 & (4 * (v43 ^ v35)));
    return v40(a1, v41, a4, v43, v42, v44, a8);
  }
}

void sub_100051F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  *(_DWORD *)(v20 - 132) = (v16 ^ v18)
                         + (a16 ^ v18)
                         - (v19 & (2 * ((v16 ^ v18) + (a16 ^ v18))))
                         + (v17 ^ 0xC0054D6D)
                         + 1176194341;
  JUMPOUT(0x100051FACLL);
}

void sub_100052030(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (1755732067 * ((a1 - 2 * (a1 & 0x7A08EF3) + 127962867) ^ 0xD9663328));
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1000520C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((37 * ((((unint64_t)(v2 - a1) < 0x20) ^ ((v1 ^ 0x7C) + 19)) & 1)) ^ v1)))();
}

uint64_t sub_100052104()
{
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((1009 * (v1 + v0 + v3 - 74 + ((v3 - 736) | 8) - 712947571 < 8)) ^ v3)))(v2);
}

uint64_t sub_100052164(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1124 * (**(unsigned char **)(a2 + 8) == 0)) | 0x91u)))();
}

uint64_t sub_1000521C8@<X0>(int a1@<W8>, uint64_t a2, unsigned int a3, int a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  unsigned int v13 = ((2 * (&a3 & 0x542DBB8) - &a3 + 2059215940) ^ 0x46801B2) * a1;
  a7 = v13 - 1662713138;
  a5 = v7;
  a6 = v8;
  a3 = v13 + v10 + 1748145614;
  a4 = v13 + v12 - 129;
  uint64_t v14 = (*(uint64_t (**)(unsigned int *))(v9 + 8 * (v12 ^ 0x988)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * (((*(_DWORD *)(v8 - 0x6C0C7F2AED40EE79) == ((v12 - 254) | 0x282) + v11)
                                              * (((v12 - 1757027412) & 0x68BA1FFA) - 1183)) ^ v12)))(v14);
}

uint64_t sub_1000522A0(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v1
                                                             + 8
                                                             * ((3999 * ((((v2 + 288) | 0x210) ^ 0x733) == 32)) ^ ((v2 + 288) | 0x210))))(a1, 1126802573, ((v2 + 288) | 0x210) ^ 0x58Cu);
}

void sub_100052324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(void *)(v28 - 104) = v26;
  *(void *)(v28 - 128) = v26;
  *(void *)(v28 - 120) = a24;
  *(void *)(v28 - 144) = a25;
  *(void *)(v28 - 136) = a13;
  *(_DWORD *)(v28 - 112) = (v27 ^ 0xC55)
                         + ((((v28 - 144) | 0xA859436E) - ((v28 - 144) & 0xA859436E)) ^ 0x5AEABEB9) * v25
                         - 420;
  JUMPOUT(0x100039210);
}

void sub_10005238C()
{
}

uint64_t sub_100052394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v9
                                                                      + 8
                                                                      * ((1009
                                                                        * ((v8 & 8) == ((a8 + 1625) ^ 0xFFFFFFA0)
                                                                                     + (a8 ^ 0x9E7))) ^ a8)))(a1, a2, a3, (a2 - a3));
}

void sub_1000523D4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) ^ (3804331 * ((2 * (a1 & 0x520CC9FF) - a1 - 1376569856) ^ 0xD32613F6));
  int v2 = (char *)*(&off_100233720 + v1 - 722) - 8;
  uint64_t v3 = *(void *)a1;
  (*(void (**)(char *, uint64_t (*)()))&v2[8 * (v1 ^ 0xBB4)])((char *)*(&off_100233720 + (v1 ^ 0x30A)) - 12, sub_10001C2E4);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1000524BC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((56
                                * ((int)((v3 ^ 0xFEF78FFF) + 2143286202 + (v0 & 0xFDEF1FFE) - 2125956226 + v1 - 1545) >= 0)) ^ v1)))();
}

uint64_t sub_100052550(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((456 * (a6 + 1 == v7 + 32)) ^ a4)))();
}

uint64_t sub_100052624()
{
  *(_DWORD *)(v2 + 52) = (v0 ^ 0x3A0) - 1477 + *(_DWORD *)(v2 + 52) - 110;
  STACK[0x3C0] = v1 - 2432;
  STACK[0x510] = v1 - 2432;
  LODWORD(STACK[0x534]) = v4;
  return (*(uint64_t (**)(void))(v3 + 8 * ((686 * (STACK[0x590] == 0)) ^ v0)))();
}

void sub_100052678(int a1@<W8>, int a2, __int16 a3, char a4, char a5, char a6, char a7, char a8, char a9, char a10, char a11, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,char a25,char a26,char a27,char a28,char a29,char a30,char a31,char a32,char a33,char a34,char a35,char a36,char a37,char a38,char a39,char a40,char a41,char a42,char a43,char a44,char a45,char a46,char a47,char a48,char a49,char a50,char a51,char a52,char a53)
{
  int v59 = *(unsigned int **)(v57 + 8 * (a1 ^ 0x73E));
  uint64_t v60 = *v59;
  int v61 = *(void **)(v57 + 8 * (a1 ^ 0x7BD));
  int v62 = (unsigned char *)*v61;
  a24 = *(unsigned char *)*v61 - 126;
  a25 = v62[1] - 126;
  a26 = v62[2] - 126;
  a27 = v62[3] - 126;
  a28 = v62[4] - 126;
  a29 = v62[5] - 126;
  a30 = v62[6] - 126;
  a31 = v62[7] - 126;
  a32 = v62[8] - 126;
  a33 = v62[9] - 126;
  a34 = v62[10] - 126;
  a35 = v62[11] - 126;
  a36 = v62[12] - 126;
  a37 = v62[13] - 126;
  a38 = v62[14] - 126;
  a39 = v62[15] - 126;
  a40 = v62[16] - 126;
  a41 = v62[17] - 126;
  a42 = v62[18] - 126;
  a43 = v62[19] - 126;
  a44 = v62[20] - 126;
  a45 = v62[21] - 126;
  unint64_t v63 = (unsigned char *)*v61;
  a46 = v63[22] - 126;
  a47 = v63[23] - 126;
  a48 = v63[24] - 126;
  a49 = v63[25] - 126;
  a50 = v63[26] - 126;
  a51 = v63[27] - 126;
  a52 = v63[28] - 126;
  a53 = v63[29] - 126;
  uint64_t v64 = (*(uint64_t (**)(uint64_t, char *, unsigned int *))(v55 + 8 * (a1 ^ 0xFF7)))(v60, &a24, v53);
  int v71 = ((2 * v64) & 0xAFDF1EEE) + (v64 ^ 0x57EF8F77);
  if (v71 == 1475317623)
  {
    *(_DWORD *)(v58 + 344) |= (v56 - 1515) ^ 0x149;
    *(_DWORD *)(v58 + 44) = 943553886;
    (*(void (**)(void, uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 8 * (v56 ^ 0xFC9)))(*v53, v58 + 332, v58 + 336, v58 + 340, v54);
    sub_100016A30();
  }
  else
  {
    if (v71 == 1475318725)
    {
      uint64_t v72 = *v59;
      int v73 = **(unsigned char ***)(v57 + 8 * (v56 - 1787));
      a4 = *v73 - 50;
      a5 = v73[1] - 50;
      a6 = v73[2] - 50;
      a7 = v73[3] - 50;
      a8 = v73[4] - 50;
      a9 = v73[5] - 50;
      a10 = v73[6] - 50;
      a11 = v73[7] - 50;
      a12 = v73[8] - 50;
      a13 = v73[9] - 50;
      a14 = v73[10] - 50;
      a15 = v73[11] - 50;
      a16 = v73[12] - 50;
      a17 = v73[13] - 50;
      a18 = v73[14] - 50;
      a19 = v73[15] - 50;
      a20 = v73[16] - 50;
      a21 = v73[17] - 50;
      a22 = v73[18] - 50;
      a23 = v73[19] - 50;
      uint64_t v64 = (*(uint64_t (**)(uint64_t, char *, unsigned int *))(v55 + 8 * (v56 ^ 0xFF7)))(v72, &a4, v53);
      int v74 = (2 * v64) & 0x3BDDDEFE;
      int v71 = (v64 ^ 0x1DEEEF7F) - 149184520;
    }
    else
    {
      int v74 = -1122304000;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v55
                                                                                          + 8
                                                                                          * (((v71 + v74 == 353013623)
                                                                                            * (((v56 - 1773) | 0x102)
                                                                                             + 1111)) ^ (v56 - 1515))))(v64, v65, v66, v67, v68, v69, v70);
  }
}

void sub_100052A2C(_DWORD *a1)
{
  *((unsigned char *)a1 + v1 + 4) = -108;
  sub_10001EC40(a1);
}

uint64_t sub_100052A5C()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((2907 * (qword_10028D2F8 == 0)) ^ v0)))();
}

uint64_t sub_100052A8C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1638 * (a1 + 1 == v2 + 48)) ^ v1)))();
}

uint64_t sub_100052B70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  unint64_t v35 = (*(_DWORD *)(v34 + v29) ^ v24) + HIDWORD(v32);
  *(_DWORD *)(v34 + 4 * a2) = v35 + v24 - ((v35 << ((v33 ^ v28) - 67)) & v25);
  *(_DWORD *)(a24 + v29) = HIDWORD(v35) + v24 - 2 * HIDWORD(v35);
  BOOL v37 = a8 - 977444543 > v31 || a8 - 977444543 < v27;
  return (*(uint64_t (**)(void))(v30 + 8 * (v33 ^ (v37 * v26))))();
}

uint64_t sub_100052BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, int a13)
{
  return (*(uint64_t (**)(void))(v14
                              + 8
                              * (v13 ^ (985
                                      * (((2 * (a11 - (a13 & 0xE3B2B508) + 1544689681)) & 0xD7EDEEFE ^ 0xC3A0A408)
                                       + ((a11 - (a13 & 0xE3B2B508) + 1544689681) ^ 0x1A2FADFB)
                                       - 17479 != 1811329848)))))();
}

unsigned char *sub_100052CA0(unsigned char *result, unsigned int a2, unint64_t a3)
{
  unint64_t v3 = -(int)result & 7;
  if (v3 > a3) {
    LODWORD(v3) = a3;
  }
  switch((int)v3)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *result++ = a2;
LABEL_5:
      *result++ = a2;
LABEL_6:
      *result++ = a2;
LABEL_7:
      *result++ = a2;
LABEL_8:
      *result++ = a2;
LABEL_9:
      *result++ = a2;
LABEL_10:
      *result++ = a2;
      break;
    default:
      break;
  }
  unint64_t v4 = a3 - v3;
  if (v4 >= 8)
  {
    uint64_t v5 = 0x101010101010101 * a2;
    unint64_t v6 = ((v4 >> 3) + 7) >> 3;
    switch((v4 >> 3) & 7)
    {
      case 1uLL:
        goto LABEL_20;
      case 2uLL:
        goto LABEL_19;
      case 3uLL:
        goto LABEL_18;
      case 4uLL:
        goto LABEL_17;
      case 5uLL:
        goto LABEL_16;
      case 6uLL:
        goto LABEL_15;
      case 7uLL:
        goto LABEL_14;
      default:
        do
        {
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_14:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_15:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_16:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_17:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_18:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_19:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_20:
          *(void *)uint64_t result = v5;
          result += 8;
          --v6;
        }
        while (v6);
        break;
    }
  }
  switch(v4 & 7)
  {
    case 1uLL:
      goto LABEL_28;
    case 2uLL:
      goto LABEL_27;
    case 3uLL:
      goto LABEL_26;
    case 4uLL:
      goto LABEL_25;
    case 5uLL:
      goto LABEL_24;
    case 6uLL:
      goto LABEL_23;
    case 7uLL:
      *result++ = a2;
LABEL_23:
      *result++ = a2;
LABEL_24:
      *result++ = a2;
LABEL_25:
      *result++ = a2;
LABEL_26:
      *result++ = a2;
LABEL_27:
      *result++ = a2;
LABEL_28:
      *uint64_t result = a2;
      break;
    default:
      return result;
  }
  return result;
}

void sub_100052D8C()
{
}

id IntegrityReportDatasources()
{
  unsigned int v0 = +[APConfigurationMediator configurationForClass:objc_opt_class()];
  int v1 = +[APDatabaseManager mainDatabase];
  uint64_t v2 = [v1 getTableForClass:objc_opt_class()];

  unint64_t v3 = [v0 reportingPurposes];

  if (v3)
  {
    unint64_t v4 = +[NSMutableArray array];
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    id obj = [v0 reportingPurposes];
    id v5 = [obj countByEnumeratingWithState:&v18 objects:v22 count:16];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = *(void *)v19;
      do
      {
        for (i = 0; i != v6; i = (char *)i + 1)
        {
          if (*(void *)v19 != v7) {
            objc_enumerationMutation(obj);
          }
          id v9 = [*(id *)(*((void *)&v18 + 1) + 8 * i) integerValue];
          int v10 = [APIntegrityDatasource alloc];
          int v11 = +[NSDate date];
          int v12 = [(APBaseReport *)v10 initWithReportDate:v11 purpose:v9 reportEventCount:v2];

          [(APIntegrityDatasource *)v4 addObject:v12];
        }
        id v6 = [obj countByEnumeratingWithState:&v18 objects:v22 count:16];
      }
      while (v6);
    }

    int v13 = +[NSArray arrayWithArray:v4];
  }
  else
  {
    uint64_t v14 = [APIntegrityDatasource alloc];
    uint64_t v15 = +[NSDate date];
    unint64_t v4 = [(APBaseReport *)v14 initWithReportDate:v15 purpose:100 reportEventCount:v2];

    uint64_t v23 = v4;
    int v13 = +[NSArray arrayWithObjects:&v23 count:1];
  }

  return v13;
}

id ReportDatasources()
{
  id v0 = objc_alloc_init((Class)NSMutableArray);
  int v1 = IntegrityReportDatasources();
  [v0 addObjectsFromArray:v1];

  uint64_t v2 = +[NSArray arrayWithArray:v0];

  return v2;
}

void CleanOldData()
{
  id v0 = +[APConfigurationMediator configurationForClass:objc_opt_class()];
  int v1 = [v0 removeDataAfterDays];

  if (v1)
  {
    uint64_t v2 = [v0 removeDataAfterDays];
    unint64_t v3 = (unint64_t)[v2 unsignedIntegerValue];
  }
  else
  {
    unint64_t v3 = 100;
  }
  if (v3 >= 0x16D) {
    uint64_t v4 = 365;
  }
  else {
    uint64_t v4 = v3;
  }
  id v5 = [APReportDate alloc];
  id v6 = +[NSDate date];
  uint64_t v7 = [(APReportDate *)v5 initWithDate:v6];

  char v8 = [(APReportDate *)v7 currentDateMinusDays:v4];
  if (v8)
  {
    id v9 = +[APDatabaseManager mainDatabase];
    int v10 = [v9 getTableForClass:objc_opt_class()];

    [v10 deleteCountsOlderThan:v8];
    int v11 = +[APDatabaseManager mainDatabase];
    int v12 = [v11 getTableForClass:objc_opt_class()];

    [v12 deleteReportsOlderThan:v8];
  }
  else
  {
    int v13 = APLogForCategory();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "Reports: Error creating remove date.", v14, 2u);
    }
  }
}

void LogReportDelivery(void *a1)
{
  id v1 = a1;
  uint64_t v2 = +[APDatabaseManager mainDatabase];
  unint64_t v3 = [v2 getTableForClass:objc_opt_class()];

  uint64_t v4 = [v1 reportType];
  id v5 = [v1 reportDate];
  id v6 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [v5 reportEndDay]);
  uint64_t v7 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [(id)objc_opt_class() reportFrequency]);
  char v8 = +[NSDate date];
  id v9 = [v3 storeDeliveryReportType:v4 dayOfYear:v6 frequency:v7 reportDate:v8];

  int v10 = APLogForCategory();
  int v11 = v10;
  if (v9)
  {
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      int v12 = [v1 reportType];
      int v13 = [v1 reportDate];
      uint64_t v14 = [v13 reportDayString];
      int v18 = 141558530;
      uint64_t v19 = 1752392040;
      __int16 v20 = 2112;
      long long v21 = v12;
      __int16 v22 = 2114;
      uint64_t v23 = v14;
      uint64_t v15 = "Reports: Report %{mask.hash}@ for day %{public}@ saved to DB.";
      int v16 = v11;
      os_log_type_t v17 = OS_LOG_TYPE_DEFAULT;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v16, v17, v15, (uint8_t *)&v18, 0x20u);
    }
  }
  else if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
  {
    int v12 = [v1 reportType];
    int v13 = [v1 reportDate];
    uint64_t v14 = [v13 reportDayString];
    int v18 = 141558530;
    uint64_t v19 = 1752392040;
    __int16 v20 = 2112;
    long long v21 = v12;
    __int16 v22 = 2114;
    uint64_t v23 = v14;
    uint64_t v15 = "Reports: Error saving report %{mask.hash}@ for day %{public}@ to DB.";
    int v16 = v11;
    os_log_type_t v17 = OS_LOG_TYPE_ERROR;
    goto LABEL_6;
  }
}

void PrepareReports()
{
  id v0 = ReportDatasources();
  id v1 = +[APDatabaseManager mainDatabase];
  uint64_t v2 = [v1 getTableForClass:objc_opt_class()];

  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  id v3 = v0;
  id v4 = [v3 countByEnumeratingWithState:&v23 objects:v33 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v24;
    uint64_t v7 = (char *)&unk_10027C000;
    char v8 = &swift_getForeignTypeMetadata_ptr;
    uint64_t v22 = *(void *)v24;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v24 != v6) {
          objc_enumerationMutation(v3);
        }
        int v10 = *(void **)(*((void *)&v23 + 1) + 8 * i);
        id v11 = objc_alloc((Class)(v7 + 880));
        int v12 = [v8[257] date];
        id v13 = [v11 initWithReportDatasource:v10 deliveredReport:v2 currentDate:v12];

        if ([v13 validateCurrent])
        {
          uint64_t v14 = [[APReportDelivery alloc] initWithDatasource:v10];
          [(APReportDelivery *)v14 prepareDelivery];
          LogReportDelivery(v10);
        }
        else
        {
          APLogForCategory();
          uint64_t v14 = (APReportDelivery *)objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(&v14->super, OS_LOG_TYPE_INFO))
          {
            [v10 reportType];
            uint64_t v15 = v2;
            int v16 = v7;
            v18 = id v17 = v3;
            uint64_t v19 = [v10 reportDate];
            [v19 reportDayString];
            v21 = id v20 = v5;
            *(_DWORD *)buf = 141558530;
            uint64_t v28 = 1752392040;
            __int16 v29 = 2112;
            uint64_t v30 = v18;
            __int16 v31 = 2114;
            unint64_t v32 = v21;
            _os_log_impl((void *)&_mh_execute_header, &v14->super, OS_LOG_TYPE_INFO, "Reports: Skipping report %{mask.hash}@ for day %{public}@, report is up to date.", buf, 0x20u);

            id v5 = v20;
            id v3 = v17;
            uint64_t v7 = v16;
            uint64_t v2 = v15;
            uint64_t v6 = v22;
            char v8 = &swift_getForeignTypeMetadata_ptr;
          }
        }
      }
      id v5 = [v3 countByEnumeratingWithState:&v23 objects:v33 count:16];
    }
    while (v5);
  }

  CleanOldData();
}

void PreparePastDueReports()
{
  id v0 = ReportDatasources();
  id v1 = +[APDatabaseManager mainDatabase];
  int v16 = [v1 getTableForClass:objc_opt_class()];

  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id obj = v0;
  id v17 = [obj countByEnumeratingWithState:&v22 objects:v27 count:16];
  if (v17)
  {
    uint64_t v15 = *(void *)v23;
    do
    {
      uint64_t v2 = 0;
      do
      {
        if (*(void *)v23 != v15) {
          objc_enumerationMutation(obj);
        }
        id v3 = *(void **)(*((void *)&v22 + 1) + 8 * (void)v2);
        id v4 = [APReportValidator alloc];
        id v5 = +[NSDate date];
        uint64_t v6 = [(APReportValidator *)v4 initWithReportDatasource:v3 deliveredReport:v16 currentDate:v5];

        uint64_t v7 = [(APReportValidator *)v6 pastDueReportDates];
        long long v18 = 0u;
        long long v19 = 0u;
        long long v20 = 0u;
        long long v21 = 0u;
        id v8 = [v7 countByEnumeratingWithState:&v18 objects:v26 count:16];
        if (v8)
        {
          id v9 = v8;
          uint64_t v10 = *(void *)v19;
          do
          {
            id v11 = 0;
            do
            {
              if (*(void *)v19 != v10) {
                objc_enumerationMutation(v7);
              }
              int v12 = [[APReportDate alloc] initWithDate:*(void *)(*((void *)&v18 + 1) + 8 * (void)v11)];
              [v3 setReportDate:v12];

              id v13 = [[APReportDelivery alloc] initWithDatasource:v3];
              [(APReportDelivery *)v13 prepareDelivery];
              LogReportDelivery(v3);

              id v11 = (char *)v11 + 1;
            }
            while (v9 != v11);
            id v9 = [v7 countByEnumeratingWithState:&v18 objects:v26 count:16];
          }
          while (v9);
        }

        uint64_t v2 = (char *)v2 + 1;
      }
      while (v2 != v17);
      id v17 = [obj countByEnumeratingWithState:&v22 objects:v27 count:16];
    }
    while (v17);
  }
}

void sub_100057B74(uint64_t a1)
{
  long long v18 = +[NSDate date];
  uint64_t v2 = [[APReportDate alloc] initWithDate:v18];
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  id obj = *(id *)(a1 + 32);
  id v3 = [obj countByEnumeratingWithState:&v22 objects:v26 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v23;
    uint64_t v19 = *(void *)v23;
    do
    {
      uint64_t v6 = 0;
      id v20 = v4;
      do
      {
        if (*(void *)v23 != v5) {
          objc_enumerationMutation(obj);
        }
        uint64_t v7 = *(void **)(*((void *)&v22 + 1) + 8 * (void)v6);
        id v8 = [(id)objc_opt_class() reportFrequency];
        id v9 = [v7 reportType];
        uint64_t v10 = [*(id *)(a1 + 40) deliveryReportsWithType:v9];
        id v11 = v10;
        if (v10)
        {
          int v12 = [v10 lastObject];
          if (v12 && v8 == (id)1901)
          {
            uint64_t v13 = 7;
            do
            {
              id v14 = [(APReportDate *)v2 reportDayMinus:v13];
              uint64_t v15 = *(void **)(a1 + 40);
              int v16 = +[NSNumber numberWithInteger:v14];
              id v17 = [v15 deliveryReportWithType:v9 dayOfYear:v16];

              if (!v17) {
                break;
              }
              --v13;
            }
            while (v13);
            uint64_t v5 = v19;
            id v4 = v20;
          }
        }
        uint64_t v6 = (char *)v6 + 1;
      }
      while (v6 != v4);
      id v4 = [obj countByEnumeratingWithState:&v22 objects:v26 count:16];
    }
    while (v4);
  }

  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

void sub_1000590B0()
{
  id v0 = APLogForCategory();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
  {
    int v1 = 138543362;
    uint64_t v2 = objc_opt_class();
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "Unexpected event type: %{public}@", (uint8_t *)&v1, 0xCu);
  }
}

void sub_100059D3C()
{
  id v0 = APLogForCategory();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
  {
    int v1 = 138543362;
    uint64_t v2 = objc_opt_class();
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "Unexpected event type: %{public}@", (uint8_t *)&v1, 0xCu);
  }
}

void sub_10005AE3C(id a1)
{
  id v3 = +[NSMutableDictionary dictionary];
  [v3 setObject:&off_100248E88 forKey:@"U18"];
  [v3 setObject:&off_100248EA0 forKey:@"18-24"];
  [v3 setObject:&off_100248EB8 forKey:@"25-34"];
  [v3 setObject:&off_100248ED0 forKey:@"35-44"];
  [v3 setObject:&off_100248EE8 forKey:@"45-54"];
  [v3 setObject:&off_100248F00 forKey:@"55-64"];
  [v3 setObject:&off_100248F18 forKey:@"O64"];
  id v1 = [v3 copy];
  uint64_t v2 = (void *)qword_100288898;
  qword_100288898 = (uint64_t)v1;
}

void sub_10005AF3C(id a1)
{
  id v3 = +[NSMutableDictionary dictionary];
  [v3 setObject:&off_100248F30 forKey:@"f"];
  [v3 setObject:&off_100248F48 forKey:@"m"];
  [v3 setObject:&off_100248F60 forKey:@"s"];
  [v3 setObject:&off_100248F78 forKey:@"d"];
  id v1 = [v3 copy];
  uint64_t v2 = (void *)qword_1002888A0;
  qword_1002888A0 = (uint64_t)v1;
}

void sub_10005B048(id a1)
{
}

void sub_10005B060(id a1, NSDictionary *a2)
{
  qword_1002888B8 = (uint64_t)[(NSDictionary *)a2 copy];

  _objc_release_x1();
}

void sub_10005BAC8(id a1)
{
  id v3 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v1 = dispatch_queue_create("com.apple.ap.datasource", v3);
  uint64_t v2 = (void *)qword_1002888C8;
  qword_1002888C8 = (uint64_t)v1;
}

void sub_10005BDB4(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v7 = *(NSObject **)(a1 + 32);
  id v8 = a4;
  id v9 = a3;
  id v10 = a2;
  dispatch_semaphore_signal(v7);
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

id sub_10005D0A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = +[NSString stringWithFormat:@"'%@' is not a valid date. Date must be in 'yyyy-MM-dd HH:mm:ss format.", a2];
  NSErrorUserInfoKey v6 = NSLocalizedDescriptionKey;
  uint64_t v7 = v2;
  id v3 = +[NSDictionary dictionaryWithObjects:&v7 forKeys:&v6 count:1];
  id v4 = +[NSError errorWithDomain:@"com.apple.ap.dataadaptors" code:5201 userInfo:v3];

  return v4;
}

void sub_10005D19C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 state])
  {
    id v4 = APLogForCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      uint64_t v5 = (objc_class *)objc_opt_class();
      NSErrorUserInfoKey v6 = NSStringFromClass(v5);
      uint64_t v7 = [v3 error];
      id v8 = [v7 code];
      id v9 = [v3 error];
      id v10 = [v9 localizedDescription];
      int v13 = 138543874;
      id v14 = v6;
      __int16 v15 = 2048;
      id v16 = v8;
      __int16 v17 = 2114;
      long long v18 = v10;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%{public}@ stream failed with error %ld: %{public}@", (uint8_t *)&v13, 0x20u);
    }
  }
  uint64_t v11 = *(void *)(a1 + 40);
  if (v11)
  {
    int v12 = [v3 error];
    (*(void (**)(uint64_t, void, void, void *))(v11 + 16))(v11, 0, 0, v12);
  }
}

void sub_10005D318(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (*(void *)(a1 + 32))
  {
    if (qword_1002888E0 != -1) {
      dispatch_once(&qword_1002888E0, &stru_100233E88);
    }
    id v4 = (void *)qword_1002888D8;
    [v3 timestamp];
    uint64_t v5 = +[NSDate dateWithTimeIntervalSinceReferenceDate:](NSDate, "dateWithTimeIntervalSinceReferenceDate:");
    NSErrorUserInfoKey v6 = [v4 stringFromDate:v5];

    uint64_t v7 = *(void *)(a1 + 32);
    id v8 = [v3 eventBody];
    v11[0] = @"timestamp";
    [v3 timestamp];
    id v9 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
    v11[1] = @"date";
    v12[0] = v9;
    v12[1] = v6;
    id v10 = +[NSDictionary dictionaryWithObjects:v12 forKeys:v11 count:2];
    (*(void (**)(uint64_t, void *, void *, void))(v7 + 16))(v7, v8, v10, 0);
  }
}

void sub_10005D494(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  uint64_t v2 = (void *)qword_1002888D8;
  qword_1002888D8 = (uint64_t)v1;

  id v3 = (void *)qword_1002888D8;

  [v3 setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
}

BOOL sub_10005D79C(id a1, NSObject *a2, NSDictionary *a3, BOOL *a4)
{
  return 1;
}

void sub_10005D930(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) stream];

  if (!v2)
  {
    id v3 = [*(id *)(a1 + 32) _biomeStream];
    [*(id *)(a1 + 32) setStream:v3];
  }
}

uint64_t sub_10005D9B0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = a2;
  NSErrorUserInfoKey v6 = [v5 eventBody];
  CFStringRef v13 = @"timestamp";
  [v5 timestamp];
  double v8 = v7;

  id v9 = +[NSNumber numberWithDouble:v8];
  id v14 = v9;
  id v10 = +[NSDictionary dictionaryWithObjects:&v14 forKeys:&v13 count:1];
  uint64_t v11 = (*(uint64_t (**)(uint64_t, void *, void *, uint64_t))(v4 + 16))(v4, v6, v10, a3);

  return v11;
}

void sub_10005DD1C(id a1)
{
  qword_1002888F0 = objc_alloc_init(APDataAdaptorRepository);

  _objc_release_x1();
}

void sub_10005E9B0()
{
  id v0 = APLogForCategory();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
  {
    int v1 = 138543362;
    uint64_t v2 = objc_opt_class();
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "Unexpected event type: %{public}@", (uint8_t *)&v1, 0xCu);
  }
}

void sub_10005EC88(id a1)
{
  v4[0] = @"IPHONE";
  v4[1] = @"IPAD";
  _DWORD v4[2] = @"IPOD";
  v4[3] = @"MAC";
  int v1 = +[NSArray arrayWithObjects:v4 count:4];
  uint64_t v2 = +[NSSet setWithArray:v1];
  id v3 = (void *)qword_100288908;
  qword_100288908 = v2;
}

void sub_100060AF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100060B14(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a2;
  id v7 = a4;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v6 BOOLValue];
  }
  else
  {
    double v8 = APLogForCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      id v9 = (objc_class *)objc_opt_class();
      id v10 = NSStringFromClass(v9);
      int v17 = 138412290;
      uint64_t v18 = (uint64_t)v10;
    }
    if (*(void *)(a1 + 48)) {
      **(void **)(a1 + 48) = v7;
    }
  }
  uint64_t v11 = APLogForCategory();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
  {
    uint64_t v12 = [*(id *)(a1 + 32) adaptorIdentifier];
    CFStringRef v13 = (void *)v12;
    id v14 = *(const __CFString ***)(a1 + 48);
    if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)) {
      CFStringRef v15 = @"1";
    }
    else {
      CFStringRef v15 = @"0";
    }
    if (v14) {
      CFStringRef v16 = *v14;
    }
    else {
      CFStringRef v16 = @"(unknown)";
    }
    int v17 = 138543874;
    uint64_t v18 = v12;
    __int16 v19 = 2114;
    CFStringRef v20 = v15;
    __int16 v21 = 2114;
    CFStringRef v22 = v16;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "%{public}@ returned %{public}@ with error %{public}@", (uint8_t *)&v17, 0x20u);
  }
}

id opTokens()
{
  if (qword_100288930 != -1) {
    dispatch_once(&qword_100288930, &stru_100233FD8);
  }
  id v0 = (void *)qword_100288928;

  return v0;
}

void sub_100061C20(id a1)
{
  int v1 = (void *)qword_100288928;
  qword_100288928 = (uint64_t)&off_10024ABE8;
}

void sub_100063C6C(id a1)
{
  uint64_t v2 = +[APPCPolicyFormatDaemon adPolicies];
  id v3 = (void *)qword_100288940;
  qword_100288940 = v2;
}

void sub_1000648B8(uint64_t a1)
{
  uint64_t v122 = a1;
  id v3 = [*(id *)(a1 + 32) policySettings];
  uint64_t v4 = [v3 alias];
  id v5 = [v3 expressions];
  id v6 = [v3 policy];
  unsigned int v7 = [v3 dataFetchedFromServer];
  if (+[APSystemInternal isAppleInternalInstall])
  {
    unsigned int obj = v7;
    id v8 = objc_alloc((Class)NSUserDefaults);
    id v9 = [v8 initWithSuiteName:APDefaultsBundleID];
    id v10 = [v9 dictionaryRepresentation];
    uint64_t v11 = [v10 allKeys];
    unsigned int v12 = [v11 containsObject:@"AdPolicyPayload"];

    if (v12)
    {
      unint64_t v116 = v6;
      CFStringRef v13 = APLogForCategory();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138477827;
        id v143 = (id)objc_opt_class();
        id v14 = v143;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "[%{private}@] Ad Policy Payload is being overridden via defaults.", buf, 0xCu);
      }
      unint64_t v118 = v5;

      CFStringRef v15 = [v9 stringForKey:@"AdPolicyPayload"];
      CFStringRef v16 = [v15 dataUsingEncoding:4];
      id v141 = 0;
      int v17 = +[NSJSONSerialization JSONObjectWithData:v16 options:0 error:&v141];
      id v18 = v141;
      if (v18)
      {
        uint64_t v19 = (uint64_t)v4;
        uint64_t v4 = APLogForCategory();
        if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
        {
          CFStringRef v20 = objc_opt_class();
          *(_DWORD *)buf = 138478083;
          id v143 = v20;
          __int16 v144 = 2114;
          id v145 = v18;
          unint64_t v112 = v2;
          __int16 v21 = v3;
          id v22 = v20;
          _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "[%{private}@] There was an error with the overridden policy payload: %{public}@.", buf, 0x16u);

          id v3 = v21;
          uint64_t v2 = v112;
        }
      }
      else
      {
        [v17 objectForKey:@"policy"];
        uint64_t v23 = v109 = v3;

        uint64_t v24 = [v17 objectForKey:@"expressions"];

        [v17 objectForKey:@"alias"];
        unint64_t v116 = (void *)v23;
        unint64_t v118 = (void *)v24;
        v19 = id v3 = v109;
      }

      uint64_t v4 = v19;
      id v6 = v116;
      id v5 = v118;
    }

    unsigned int v7 = obj;
  }
  else
  {
    unsigned int v12 = 0;
  }
  id v121 = objc_alloc_init((Class)NSDictionary);
  if (v6)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      if (v4)
      {
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          uint64_t v25 = [*(id *)(v122 + 32) aliasTransformedPolicies:v6 alias:v4];

          id v121 = (id)v25;
        }
      }
    }
  }
  long long v26 = APLogForCategory();
  if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
  {
    int v27 = objc_opt_class();
    *(_DWORD *)buf = 138478083;
    id v143 = v27;
    __int16 v144 = 2114;
    id v145 = v5;
    id v28 = v27;
    _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_INFO, "[%{private}@] Ad Policy expressions: %{public}@", buf, 0x16u);
  }
  __int16 v29 = APLogForCategory();
  if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
  {
    uint64_t v30 = objc_opt_class();
    *(_DWORD *)buf = 138478083;
    id v143 = v30;
    __int16 v144 = 2114;
    id v145 = v4;
    id v31 = v30;
    _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_INFO, "[%{private}@] Ad Policy aliases: %{public}@", buf, 0x16u);
  }
  unint64_t v32 = APLogForCategory();
  if (os_log_type_enabled(v32, OS_LOG_TYPE_INFO))
  {
    int v33 = objc_opt_class();
    *(_DWORD *)buf = 138478083;
    id v143 = v33;
    __int16 v144 = 2114;
    id v145 = v121;
    id v34 = v33;
    _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_INFO, "[%{private}@] Ad Policy policy: %{public}@", buf, 0x16u);
  }
  uint64_t v35 = +[APPCPolicyFormatDaemon adPolicies];
  uint64_t v36 = (void *)v35;
  if (((v7 | v12) & 1) != 0 || !v35)
  {
    uint64_t v41 = &swift_getForeignTypeMetadata_ptr;
    uint64_t v115 = +[NSMutableArray array];
    unint64_t v117 = v6;
    unsigned int v40 = v121;
    unint64_t v111 = v36;
    unint64_t v113 = v2;
    if (v121)
    {
      if (([*(id *)(v122 + 32) isValidPolicy:v121] & 1) == 0)
      {
        unint64_t v84 = APLogForCategory();
        if (os_log_type_enabled(v84, OS_LOG_TYPE_ERROR))
        {
          uint64_t v85 = objc_opt_class();
          *(_DWORD *)buf = 138477827;
          id v143 = v85;
          id v86 = v85;
          _os_log_impl((void *)&_mh_execute_header, v84, OS_LOG_TYPE_ERROR, "[%{private}@] FILE A RADAR. The policy is not valid", buf, 0xCu);

          unsigned int v40 = v121;
        }
        goto LABEL_80;
      }
      unsigned int v42 = [v121 objectForKey:@"adSessionBefore"];
      unint64_t v108 = [v121 objectForKey:@"adSessionAfter"];
      unint64_t v107 = [v121 objectForKey:@"adsAllowed"];
      unint64_t v106 = [v121 objectForKey:@"spacing"];
      unint64_t v105 = [v121 objectForKey:@"timer"];
      uint64_t v103 = [v121 objectForKey:@"timerOrSpacing"];
      uint64_t v104 = v42;
      unint64_t v110 = v3;
      unint64_t v101 = v4;
      if (v103 && [v5 count])
      {
        unsigned int v43 = [*(id *)(v122 + 32) flattenPolicy:v103 policyType:7];
        id v123 = [v43 mutableCopy];
        if ([v43 count])
        {
          uint64_t v44 = 0;
          CFStringRef v45 = @"identifier";
          long long v119 = v5;
          unint64_t v114 = v43;
          do
          {
            uint64_t v125 = v44;
            int v46 = [v43 objectAtIndexedSubscript:v44, v101];
            uint8x16_t v47 = [v46 objectForKey:@"expression"];

            long long v139 = 0u;
            long long v140 = 0u;
            long long v137 = 0u;
            long long v138 = 0u;
            id obja = v5;
            id v48 = [obja countByEnumeratingWithState:&v137 objects:v150 count:16];
            if (v48)
            {
              id v49 = v48;
              uint64_t v50 = *(void *)v138;
              unint64_t v124 = v47;
              do
              {
                for (i = 0; i != v49; i = (char *)i + 1)
                {
                  if (*(void *)v138 != v50) {
                    objc_enumerationMutation(obja);
                  }
                  uint64_t v52 = *(void **)(*((void *)&v137 + 1) + 8 * i);
                  BOOL v53 = [v52 objectForKey:v45];
                  if ([v47 isEqualToString:v53])
                  {
                    [v52 objectForKey:@"expression"];
                    v55 = CFStringRef v54 = v45;
                    int v56 = [v52 objectForKey:@"data"];
                    uint64_t v57 = [v123 objectAtIndexedSubscript:v125];
                    [v57 setObject:v55 forKey:@"targetingExpression"];

                    uint64_t v58 = [v123 objectAtIndexedSubscript:v125];
                    [v58 setObject:v56 forKey:@"dataAdapters"];

                    CFStringRef v45 = v54;
                    uint8x16_t v47 = v124;
                  }
                }
                id v49 = [obja countByEnumeratingWithState:&v137 objects:v150 count:16];
              }
              while (v49);
            }

            uint64_t v44 = v125 + 1;
            unsigned int v43 = v114;
            id v5 = v119;
          }
          while (v125 + 1 < (unint64_t)[v114 count]);
        }
        -[NSObject addObjectsFromArray:](v115, "addObjectsFromArray:", v43, v101);

        id v3 = v110;
        uint64_t v4 = v101;
        uint64_t v41 = &swift_getForeignTypeMetadata_ptr;
      }
      if (v42)
      {
        int v59 = [v42 objectForKey:@"timer"];
        uint64_t v60 = [*(id *)(v122 + 32) flattenPolicy:v59 policyType:3];
        [v115 addObjectsFromArray:v60];
        int v61 = [v42 objectForKey:@"spacing"];
        int v62 = [*(id *)(v122 + 32) flattenPolicy:v61 policyType:4];
        [v115 addObjectsFromArray:v62];
      }
      if (v108)
      {
        unint64_t v63 = [v108 objectForKey:@"timer"];
        uint64_t v64 = [*(id *)(v122 + 32) flattenPolicy:v63 policyType:5];
        [v115 addObjectsFromArray:v64];
        uint64_t v65 = [v108 objectForKey:@"spacing"];
        uint64_t v66 = [*(id *)(v122 + 32) flattenPolicy:v65 policyType:6];
        [v115 addObjectsFromArray:v66];
      }
      if (v107)
      {
        uint64_t v67 = [*(id *)(v122 + 32) flattenPolicy:v107 policyType:2];
        [v115 addObjectsFromArray:v67];
      }
      if (v106)
      {
        uint64_t v68 = [*(id *)(v122 + 32) flattenPolicy:v106 policyType:1];
        [v115 addObjectsFromArray:v68];
      }
      if (v105)
      {
        uint64_t v69 = [*(id *)(v122 + 32) flattenPolicy:v105 policyType:0];
        [v115 addObjectsFromArray:v69];
      }
      uint64_t v70 = +[NSMutableArray array];
      int v71 = [v4 objectForKey:@"adFormatType"];
      uint64_t v72 = [v71 objectForKey:@"XL-ad"];

      if (v72)
      {
        uint64_t v120 = v5;
        int v73 = [v4 objectForKey:@"adFormatType"];
        int v74 = [v73 objectForKey:@"XL-ad"];

        long long v135 = 0u;
        long long v136 = 0u;
        long long v133 = 0u;
        long long v134 = 0u;
        objb = v115;
        id v75 = [objb countByEnumeratingWithState:&v133 objects:v149 count:16];
        if (v75)
        {
          id v76 = v75;
          uint64_t v77 = *(void *)v134;
          do
          {
            for (j = 0; j != v76; j = (char *)j + 1)
            {
              if (*(void *)v134 != v77) {
                objc_enumerationMutation(objb);
              }
              int32x4_t v79 = *(void **)(*((void *)&v133 + 1) + 8 * (void)j);
              id v80 = [v79 mutableCopy];
              uint64_t v81 = [v79 objectForKey:@"adFormatType"];
              id v82 = [v74 containsObject:v81];

              unint64_t v83 = +[NSNumber numberWithBool:v82];
              [v80 setObject:v83 forKey:@"isXLFormat"];

              [v70 addObject:v80];
            }
            id v76 = [objb countByEnumeratingWithState:&v133 objects:v149 count:16];
          }
          while (v76);
        }

        id v3 = v110;
        uint64_t v4 = v102;
        id v5 = v120;
        uint64_t v41 = &swift_getForeignTypeMetadata_ptr;
      }
      else
      {
        int v74 = v70;
        uint64_t v70 = v115;
      }

      [*(id *)(v122 + 32) generatePolicyDataObjects:v70];
    }
    uint64_t v87 = v4;
    uint64_t v88 = v3;
    unint64_t v89 = [*(id *)(v122 + 32) adPolicies];
    unsigned int v90 = +[APPCPolicyFormatDaemon storeAdPolicies:v89];

    unint64_t v84 = [v41[280] array];
    long long v129 = 0u;
    long long v130 = 0u;
    long long v131 = 0u;
    long long v132 = 0u;
    uint64_t v91 = [*(id *)(v122 + 32) adPolicies];
    id v92 = [v91 countByEnumeratingWithState:&v129 objects:v148 count:16];
    if (v92)
    {
      id v93 = v92;
      uint64_t v94 = *(void *)v130;
      do
      {
        for (k = 0; k != v93; k = (char *)k + 1)
        {
          if (*(void *)v130 != v94) {
            objc_enumerationMutation(v91);
          }
          long long v96 = [*(id *)(*((void *)&v129 + 1) + 8 * (void)k) dictionaryRepresentation];
          [v84 addObject:v96];
        }
        id v93 = [v91 countByEnumeratingWithState:&v129 objects:v148 count:16];
      }
      while (v93);
    }

    unint64_t v97 = APLogForCategory();
    if (os_log_type_enabled(v97, OS_LOG_TYPE_INFO))
    {
      unint64_t v98 = objc_opt_class();
      CFStringRef v99 = @"NOT successfully";
      *(_DWORD *)buf = 138478339;
      id v143 = v98;
      __int16 v144 = 2114;
      if (v90) {
        CFStringRef v99 = @"successfully";
      }
      id v145 = (id)v99;
      __int16 v146 = 2114;
      uint64_t v147 = v84;
      id v100 = v98;
      _os_log_impl((void *)&_mh_execute_header, v97, OS_LOG_TYPE_INFO, "[%{private}@] Ad Policies were %{public}@ stored: %{public}@", buf, 0x20u);
    }
    id v3 = v88;
    uint64_t v4 = v87;
    id v6 = v117;
    unsigned int v40 = v121;
    uint64_t v36 = v111;
    uint64_t v2 = v113;
LABEL_80:

    BOOL v37 = v115;
    goto LABEL_81;
  }
  BOOL v37 = APLogForCategory();
  if (os_log_type_enabled(v37, OS_LOG_TYPE_INFO))
  {
    int v38 = objc_opt_class();
    *(_DWORD *)buf = 138477827;
    id v143 = v38;
    id v39 = v38;
    _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_INFO, "[%{private}@] We've already processed these policies. No need to reprocess.", buf, 0xCu);
  }
  unsigned int v40 = v121;
LABEL_81:
}

void sub_1000673EC(void *a1)
{
  uint64_t v2 = APPerfLogForCategory();
  id v3 = v2;
  os_signpost_id_t v4 = a1[9];
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_DWORD *)buf = 134349056;
    os_signpost_id_t v25 = v4;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v3, OS_SIGNPOST_INTERVAL_END, v4, "Server Delivery Queue overhead", "id=%{public, name=id}lld", buf, 0xCu);
  }

  uint64_t v5 = a1[4];
  id v6 = +[NSDate date];
  +[APAttributionAnalytics sendTimedAnalytic:@"attribution.timingQueuing" fieldName:@"tokenClientQueuingTime" startDate:v5 endDate:v6];

  unsigned int v7 = APLogForCategory();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Signing request for Attribution server", buf, 2u);
  }

  id v8 = +[NSDate date];
  id v9 = APPerfLogForCategory();
  id v10 = v9;
  os_signpost_id_t v11 = a1[9];
  if (v11 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v9))
  {
    *(_DWORD *)buf = 134349056;
    os_signpost_id_t v25 = v11;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v10, OS_SIGNPOST_INTERVAL_BEGIN, v11, "Payload Signing", "id=%{public, name=id}lld", buf, 0xCu);
  }

  unsigned int v12 = APPerfLogForCategory();
  CFStringRef v13 = v12;
  os_signpost_id_t v14 = a1[9];
  if (v14 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v12))
  {
    *(_DWORD *)buf = 134349056;
    os_signpost_id_t v25 = v14;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v13, OS_SIGNPOST_INTERVAL_BEGIN, v14, "Signing service selector", "id=%{public, name=id}lld", buf, 0xCu);
  }

  CFStringRef v15 = +[APAttributionPayloadSigningSelector selectorWithAttributionConfig];
  id v16 = [v15 selectRandomSigningService];
  int v17 = APPerfLogForCategory();
  id v18 = v17;
  os_signpost_id_t v19 = a1[9];
  unint64_t v20 = v19 - 1;
  if (v16 == (id)2)
  {
    if (v20 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v17))
    {
      *(_DWORD *)buf = 134349312;
      os_signpost_id_t v25 = v19;
      __int16 v26 = 2050;
      uint64_t v27 = 2;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v18, OS_SIGNPOST_INTERVAL_END, v19, "Signing service selector", "id=%{public, name=id}lld service=%{public, name=service}lu", buf, 0x16u);
    }

    __int16 v21 = APLogForCategory();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_INFO, "Using Mescal for Signing request for Attribution server", buf, 2u);
    }

    LOBYTE(v23) = 0;
    +[APAttributionServer signPayloadWithMescal:a1[5] requestTimestamp:a1[6] interval:a1[9] jsonBody:a1[7] startDate:v8 deliveryStartDate:a1[4] isFallback:v23 completionHandler:a1[8]];
  }
  else
  {
    if (v20 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v17))
    {
      *(_DWORD *)buf = 134349312;
      os_signpost_id_t v25 = v19;
      __int16 v26 = 2050;
      uint64_t v27 = 1;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v18, OS_SIGNPOST_INTERVAL_END, v19, "Signing service selector", "id=%{public, name=id}lld service=%{public, name=service}lu", buf, 0x16u);
    }

    id v22 = APLogForCategory();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_INFO, "Using FPDI for Signing request for Attribution server", buf, 2u);
    }

    +[APAttributionServer signPayloadWithFpdi:a1[5] requestTimestamp:a1[6] interval:a1[9] jsonBody:a1[7] startDate:v8 payloadDeliveryStartDate:a1[4] completionHandler:a1[8]];
  }
}

void sub_100068998(id a1)
{
  id v1 = [objc_alloc((Class)APSigningAuthorityPoolManager) initWithName:@"attribution_fpdi" poolSize:1 numberToStash:1];
  uint64_t v2 = (void *)qword_100288950;
  qword_100288950 = (uint64_t)v1;

  if (!qword_100288950)
  {
    id v3 = APLogForCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)id v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Signing: Using Mescal for Signing request for Attribution server since FPDI did not work", v8, 2u);
    }
  }
  id v4 = [objc_alloc((Class)APUnfairLock) initWithOptions:1];
  uint64_t v5 = (void *)qword_100288960;
  qword_100288960 = (uint64_t)v4;

  id v6 = objc_alloc_init(APSigningQueue);
  unsigned int v7 = (void *)qword_100288958;
  qword_100288958 = (uint64_t)v6;
}

void sub_100068A7C(id a1)
{
  CFStringRef v2 = @"fallbackReason";
  id v3 = &off_100249038;
  id v1 = +[NSDictionary dictionaryWithObjects:&v3 forKeys:&v2 count:1];
  AnalyticsSendEvent();
}

void sub_100068B14(id a1, int64_t a2, BOOL a3)
{
  BOOL v3 = a3;
  byte_100288970 = a2 != 18001;
  uint64_t v5 = APLogForCategory();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v6)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Signing: signingAuthorityPoolManager setup timed out.", buf, 2u);
    }

    CFStringRef v16 = @"fallbackReason";
    int v17 = &off_100249068;
    unsigned int v7 = &v17;
    id v8 = &v16;
  }
  else
  {
    if (v6)
    {
      *(_DWORD *)buf = 134217984;
      int64_t v15 = a2;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Signing: signingAuthorityPoolManager setup state: %ld. ", buf, 0xCu);
    }

    if (byte_100288970)
    {
      CFStringRef v12 = @"fallbackReason";
      CFStringRef v13 = &off_100249038;
      unsigned int v7 = &v13;
      id v8 = &v12;
    }
    else
    {
      CFStringRef v10 = @"fallbackReason";
      os_signpost_id_t v11 = &off_100249080;
      unsigned int v7 = &v11;
      id v8 = &v10;
    }
  }
  id v9 = +[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v7, v8, 1, v10, v11, v12, v13);
  AnalyticsSendEvent();

  +[APAttributionServer _processSigningQueue:qword_100288958 useFpdi:a2 == 18001 signingAuthorityPoolManager:qword_100288950];
}

void sub_100068E98(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_100068EBC(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  BOOL v6 = +[NSDate now];
  if (a3)
  {
    NSErrorUserInfoKey v29 = NSLocalizedDescriptionKey;
    CFStringRef v30 = @"Unable to sign Attribution Request to server";
    unsigned int v7 = +[NSDictionary dictionaryWithObjects:&v30 forKeys:&v29 count:1];
    id v8 = +[NSError errorWithDomain:@"com.apple.ap.adservices.attributionError" code:1002 userInfo:v7];

    (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
    id v9 = APPerfLogForCategory();
    CFStringRef v10 = v9;
    os_signpost_id_t v11 = *(void *)(a1 + 80);
    if (v11 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v9))
    {
      *(_DWORD *)buf = 134349056;
      __int16 v26 = (const char *)v11;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v10, OS_SIGNPOST_INTERVAL_END, v11, "Payload Signing", "id=%{public, name=id}lld", buf, 0xCu);
    }
  }
  else
  {
    [*(id *)(a1 + 32) timeIntervalSinceDate:_daemonStartTime];
    int64_t v12 = +[APAttributionAnalytics findBucketForDaemonRunningTime:](APAttributionAnalytics, "findBucketForDaemonRunningTime:");
    CFStringRef v13 = [*(id *)(a1 + 40) storefront];

    if (v13)
    {
      os_signpost_id_t v14 = [*(id *)(a1 + 40) storefront];
      id v8 = +[APAttributionAnalytics storefrontCountryOnly:v14];
    }
    else
    {
      int64_t v15 = APLogForCategory();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136642819;
        __int16 v26 = "+[APAttributionServer signPayloadWithMescal:requestTimestamp:interval:jsonBody:startDate:deliveryStartDate"
              ":isFallback:completionHandler:]_block_invoke";
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "%{sensitive}s, Storefront is nil", buf, 0xCu);
      }

      CreateDiagnosticReport();
      id v8 = @"NONE";
    }
    CFStringRef v16 = APPerfLogForCategory();
    int v17 = v16;
    os_signpost_id_t v18 = *(void *)(a1 + 80);
    if (v18 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v16))
    {
      *(_DWORD *)buf = 134349314;
      __int16 v26 = (const char *)v18;
      __int16 v27 = 2114;
      id v28 = v8;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v17, OS_SIGNPOST_INTERVAL_END, v18, "Payload Signing", "id=%{public, name=id}lld storefront=%{public, name=storefront}@", buf, 0x16u);
    }

    uint64_t v19 = 2 * *(unsigned __int8 *)(a1 + 88);
    unint64_t v20 = +[NSNumber numberWithInteger:v12, @"daemonRunningTime"];
    v24[0] = v20;
    v24[1] = v8;
    v23[1] = @"storeFront";
    v23[2] = @"signingType";
    __int16 v21 = +[NSNumber numberWithInteger:v19];
    v24[2] = v21;
    CFStringRef v10 = +[NSDictionary dictionaryWithObjects:v24 forKeys:v23 count:3];

    +[APAttributionAnalytics sendTimingAnalytics:@"payloadSigningTime" startDate:*(void *)(a1 + 48) endDate:v6 additionalFields:v10];
    [*(id *)(a1 + 40) setMescalSignature:v5];
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
    [WeakRetained _serverPost:*(void *)(a1 + 40) requestTimestamp:*(void *)(a1 + 32) payloadDeliveryStartDate:*(void *)(a1 + 56) interval:*(void *)(a1 + 80) completionHandler:*(void *)(a1 + 64)];
  }
}

id sub_100069368(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 48);
  BOOL v3 = APLogForCategory();
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG);
  if (v2)
  {
    if (v4)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Signing: processing the queue with FPDI.", buf, 2u);
    }

    return [*(id *)(a1 + 32) processWithFPDISigningAuthorityPoolManager:*(void *)(a1 + 40)];
  }
  else
  {
    if (v4)
    {
      *(_WORD *)BOOL v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Signing: processing the queue with Mescal.", v6, 2u);
    }

    return [*(id *)(a1 + 32) processWithMescal];
  }
}

void sub_10006B74C(id a1)
{
  qword_100288980 = (uint64_t)[objc_alloc((Class)APUnfairLock) initWithOptions:1];

  _objc_release_x1();
}

void sub_10006E144(uint64_t a1, void *a2)
{
  id v3 = a2;
  [*(id *)(a1 + 32) timeIntervalSinceDate:_daemonStartTime];
  [v3 setDaemonRunningTime:];
  BOOL v4 = [*(id *)(a1 + 40) storefront];
  [v3 setStoreFront:v4];

  id v5 = APPerfLogForCategory();
  BOOL v6 = (char *)[*(id *)(a1 + 48) intervalId];
  if ((unint64_t)(v6 - 1) <= 0xFFFFFFFFFFFFFFFDLL)
  {
    os_signpost_id_t v7 = (os_signpost_id_t)v6;
    if (os_signpost_enabled(v5))
    {
      id v8 = [*(id *)(a1 + 48) intervalId];
      id v9 = [*(id *)(a1 + 48) attemptId];
      int v10 = 134349312;
      id v11 = v8;
      __int16 v12 = 2050;
      id v13 = v9;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v5, OS_SIGNPOST_INTERVAL_END, v7, "Token Request", "id=%{public, name=id}lld attempt=%{public, name=attempt}lld", (uint8_t *)&v10, 0x16u);
    }
  }

  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
}

void sub_10006F02C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id location)
{
  objc_destroyWeak(v27);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10006F05C(void *a1, void *a2, uint64_t a3, void *a4)
{
  os_signpost_id_t v7 = (id *)(a1 + 7);
  id v8 = a4;
  id v9 = a2;
  id WeakRetained = objc_loadWeakRetained(v7);
  [WeakRetained _continueAttribution:a1[4] token:v9 cached:a3 requestTimestamp:a1[5] error:v8 constructionWithCompletionHandler:a1[6]];
}

void sub_10006FDAC(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  BOOL v6 = v5;
  if ((a2 & 1) == 0)
  {
    if (!v5)
    {
LABEL_11:
      [*(id *)(a1 + 32) sendTokenAnalytics:*(_OWORD *)v12];
      goto LABEL_12;
    }
    if ([v5 code] == (id)1002)
    {
      [*(id *)(a1 + 32) setStatus:@"ErrorServerPacketSigning"];
      os_signpost_id_t v7 = APPerfLogForCategory();
      id v8 = (char *)[*(id *)(a1 + 40) intervalId];
      if ((unint64_t)(v8 - 1) > 0xFFFFFFFFFFFFFFFDLL) {
        goto LABEL_10;
      }
      os_signpost_id_t v9 = (os_signpost_id_t)v8;
      if (!os_signpost_enabled(v7)) {
        goto LABEL_10;
      }
    }
    else
    {
      os_signpost_id_t v7 = APPerfLogForCategory();
      int v10 = (char *)[*(id *)(a1 + 40) intervalId];
      if ((unint64_t)(v10 - 1) > 0xFFFFFFFFFFFFFFFDLL) {
        goto LABEL_10;
      }
      os_signpost_id_t v9 = (os_signpost_id_t)v10;
      if (!os_signpost_enabled(v7)) {
        goto LABEL_10;
      }
    }
    id v11 = [*(id *)(a1 + 40) intervalId];
    *(_DWORD *)__int16 v12 = 134349056;
    *(void *)&void v12[4] = v11;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v7, OS_SIGNPOST_EVENT, v9, "HTTP Request Error", "HTTP Request Error id=%{public, name=id}lld", v12, 0xCu);
LABEL_10:

    goto LABEL_11;
  }
LABEL_12:
}

void sub_100070254(id a1)
{
  int v2 = objc_alloc_init(APAttributionTokenTracker);
  id v3 = (void *)qword_100288990;
  qword_100288990 = (uint64_t)v2;
}

id generateRandomBytes(size_t a1)
{
  int v2 = malloc_type_malloc(a1, 0x4E958EE1uLL);
  if (SecRandomCopyBytes(kSecRandomDefault, a1, v2))
  {
    free(v2);
    id v3 = 0;
  }
  else
  {
    id v3 = +[NSData dataWithBytesNoCopy:v2 length:a1 freeWhenDone:1];
  }

  return v3;
}

id generatePayload(uint64_t a1, int a2)
{
  if ((unint64_t)(a1 - 31) > 0xFFFFFFFFFFFFFFE2)
  {
    size_t v6 = (a1 - 1);
    __int16 v7 = 8 * (a1 - 1);
    uint32_t v8 = arc4random_uniform(8 * v6);
    unsigned __int8 v9 = v8;
    uint32_t v16 = v8;
    int v10 = (unsigned __int8 *)malloc_type_malloc(v6, 0xF3B8873EuLL);
    if (SecRandomCopyBytes(kSecRandomDefault, v6, v10))
    {
      id v11 = APLogForCategory();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 67109379;
        *(_DWORD *)os_signpost_id_t v18 = 0;
        *(_WORD *)&unsigned char v18[4] = 2085;
        *(void *)&v18[6] = "NSData *generatePayload(NSUInteger, BOOL)";
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "Error generating token %d %{sensitive}s", buf, 0x12u);
      }

      BOOL v4 = 0;
      goto LABEL_16;
    }
    unsigned int v12 = v7 & 0x7F8;
    if (a2)
    {
      if (v12 >= v9)
      {
        uint64_t v13 = v9 >> 3;
        int v14 = v10[v13] | (1 << (v9 & 7));
LABEL_14:
        v10[v13] = v14;
      }
    }
    else if (v12 >= v9)
    {
      uint64_t v13 = v9 >> 3;
      int v14 = v10[v13] & ~(1 << (v9 & 7));
      goto LABEL_14;
    }
    BOOL v4 = +[NSMutableData dataWithBytes:&v16 length:1];
    [v4 appendBytes:v10 length:v6];
LABEL_16:
    free(v10);
    goto LABEL_17;
  }
  id v3 = APLogForCategory();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 134218243;
    *(void *)os_signpost_id_t v18 = a1;
    *(_WORD *)&v18[8] = 2085;
    *(void *)&v18[10] = "NSData *generatePayload(NSUInteger, BOOL)";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Num of bytes out of range %lu %{sensitive}s", buf, 0x16u);
  }

  BOOL v4 = 0;
LABEL_17:

  return v4;
}

id createTokenFromKey(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  id v5 = [objc_alloc((Class)NSMutableData) initWithCapacity:[v4 length] + [v3 length]];
  [v5 appendData:v4];

  [v5 appendData:v3];

  return v5;
}

void sub_100071A78(id a1)
{
  qword_1002889A0 = (uint64_t)[objc_alloc((Class)APUnfairLock) initWithOptions:0];

  _objc_release_x1();
}

void sub_100071EB8(uint64_t a1)
{
  int v2 = APPerfLogForCategory();
  id v3 = v2;
  os_signpost_id_t v4 = *(void *)(a1 + 40);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    int v11 = 134349056;
    os_signpost_id_t v12 = v4;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v3, OS_SIGNPOST_INTERVAL_END, v4, "Cache GCD overhead", "id=%{public, name=id}lld", (uint8_t *)&v11, 0xCu);
  }

  id v5 = APPerfLogForCategory();
  size_t v6 = v5;
  os_signpost_id_t v7 = *(void *)(a1 + 40);
  if (v7 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v5))
  {
    int v11 = 134349056;
    os_signpost_id_t v12 = v7;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v6, OS_SIGNPOST_INTERVAL_BEGIN, v7, "Token Cache Refill", "id=%{public, name=id}lld", (uint8_t *)&v11, 0xCu);
  }

  +[APAttributionToken _refillCacheWithTokensDetail:*(unsigned __int8 *)(a1 + 48)];
  uint32_t v8 = APPerfLogForCategory();
  unsigned __int8 v9 = v8;
  os_signpost_id_t v10 = *(void *)(a1 + 40);
  if (v10 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v8))
  {
    int v11 = 134349056;
    os_signpost_id_t v12 = v10;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v9, OS_SIGNPOST_INTERVAL_END, v10, "Token Cache Refill", "id=%{public, name=id}lld", (uint8_t *)&v11, 0xCu);
  }
}

void sub_1000724BC(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (!v5 || a3)
  {
    (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
  }
  else
  {
    size_t v6 = [[APAttributionToken alloc] initWithKey:*(void *)(a1 + 32) payload:*(void *)(a1 + 40) token:*(void *)(a1 + 48) signature:v5];
    os_signpost_id_t v7 = +[APAttributionTokenTracker defaultTracker];
    uint32_t v8 = [(APAttributionToken *)v6 signedAttributionToken];
    unsigned int v9 = [v7 isTokenUsed:v8];

    if (v9)
    {
      +[APAttributionAnalytics sendTokenDuplicateAnalytics:@"TokenDupeOnDemand"];
      os_signpost_id_t v10 = APLogForCategory();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        int v11 = [(APAttributionToken *)v6 signedAttributionToken];
        *(_DWORD *)buf = 138543362;
        os_signpost_id_t v21 = (os_signpost_id_t)v11;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "generated token has already been used %{public}@", buf, 0xCu);
      }
    }
    (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
    os_signpost_id_t v12 = APPerfLogForCategory();
    uint64_t v13 = v12;
    os_signpost_id_t v14 = *(void *)(a1 + 72);
    if (v14 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v12))
    {
      *(_DWORD *)buf = 134349056;
      os_signpost_id_t v21 = v14;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v13, OS_SIGNPOST_INTERVAL_BEGIN, v14, "Cache Queue overhead", "id=%{public, name=id}lld", buf, 0xCu);
    }

    int64_t v15 = dispatch_get_global_queue(9, 0);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100072754;
    block[3] = &unk_100234220;
    uint64_t v18 = *(void *)(a1 + 72);
    char v19 = *(unsigned char *)(a1 + 80);
    id v17 = *(id *)(a1 + 56);
    dispatch_async(v15, block);
  }
}

void sub_100072754(uint64_t a1)
{
  int v2 = APPerfLogForCategory();
  id v3 = v2;
  os_signpost_id_t v4 = *(void *)(a1 + 40);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    int v11 = 134349056;
    os_signpost_id_t v12 = v4;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v3, OS_SIGNPOST_INTERVAL_END, v4, "Cache Queue overhead", "id=%{public, name=id}lld", (uint8_t *)&v11, 0xCu);
  }

  id v5 = APPerfLogForCategory();
  size_t v6 = v5;
  os_signpost_id_t v7 = *(void *)(a1 + 40);
  if (v7 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v5))
  {
    int v11 = 134349056;
    os_signpost_id_t v12 = v7;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v6, OS_SIGNPOST_INTERVAL_BEGIN, v7, "Token Cache Refill", "id=%{public, name=id}lld", (uint8_t *)&v11, 0xCu);
  }

  +[APAttributionToken _refillCacheWithTokensDetail:*(unsigned __int8 *)(a1 + 48)];
  uint32_t v8 = APPerfLogForCategory();
  unsigned int v9 = v8;
  os_signpost_id_t v10 = *(void *)(a1 + 40);
  if (v10 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v8))
  {
    int v11 = 134349056;
    os_signpost_id_t v12 = v10;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v9, OS_SIGNPOST_INTERVAL_END, v10, "Token Cache Refill", "id=%{public, name=id}lld", (uint8_t *)&v11, 0xCu);
  }
}

void sub_100072A50(void *a1, void *a2, uint64_t a3)
{
  id v6 = a2;
  if (!v6 || a3)
  {
    (*(void (**)(void))(a1[7] + 16))();
  }
  else
  {
    id v5 = [[APAttributionToken alloc] initWithKey:a1[4] payload:a1[5] token:a1[6] signature:v6];
    (*(void (**)(void))(a1[7] + 16))();
  }
}

void sub_10007426C(id a1)
{
  uint64_t v1 = +[NSMutableDictionary dictionary];
  int v2 = (void *)qword_1002889B8;
  qword_1002889B8 = v1;

  qword_1002889B0 = (uint64_t)[objc_alloc((Class)APUnfairLock) initWithOptions:1];

  _objc_release_x1();
}

BOOL sub_100075608(void *a1, void *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_10007561C()
{
  Swift::UInt v1 = *v0;
  sub_10019B7D0();
  sub_10019B7E0(v1);
  return sub_10019B7F0();
}

void sub_100075664()
{
  sub_10019B7E0(*v0);
}

Swift::Int sub_100075690()
{
  Swift::UInt v1 = *v0;
  sub_10019B7D0();
  sub_10019B7E0(v1);
  return sub_10019B7F0();
}

void *sub_1000756D4@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result != 1 && *result != 0;
  *(void *)a2 = *result == 1;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

void sub_100075704(void *a1@<X8>)
{
  *a1 = *v1;
}

id sub_10007575C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for A9nErrorBucketObjC();
  return [super dealloc];
}

uint64_t type metadata accessor for A9nErrorBucketObjC()
{
  return self;
}

void type metadata accessor for APHTTPMethod()
{
  if (!qword_100283D40)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_100283D40);
    }
  }
}

void *sub_10007580C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_10007581C(Swift::Int a1, uint64_t a2)
{
  if (a2 == 1)
  {
    type metadata accessor for AttributionErrorBucketConfigSystemJSONSource();
    *(unsigned char *)(swift_allocObject() + 16) = 0;
    sub_100075A7C(&qword_100283D48, (void (*)(uint64_t))type metadata accessor for AttributionErrorBucketConfigSystemJSONSource);
    type metadata accessor for DefaultAttributionClientErrorBucketConfigurationStore();
    swift_allocObject();
    id v3 = (unint64_t *)&unk_100283D50;
    os_signpost_id_t v4 = type metadata accessor for DefaultAttributionClientErrorBucketConfigurationStore;
LABEL_5:
    sub_100075A7C(v3, (void (*)(uint64_t))v4);
    sub_10019AF10();
    swift_allocObject();
    sub_10019AF00();
    sub_10019AF10();
    sub_10019AEF0();
    swift_allocObject();
    swift_retain();
    sub_10019AED0();
    Swift::Int v5 = sub_10019AEE0(a1);
    swift_release();
    swift_release();
    return v5;
  }
  if (!a2)
  {
    type metadata accessor for AttributionErrorBucketConfigSystemJSONSource();
    *(unsigned char *)(swift_allocObject() + 16) = 1;
    sub_100075A7C(&qword_100283D48, (void (*)(uint64_t))type metadata accessor for AttributionErrorBucketConfigSystemJSONSource);
    type metadata accessor for DefaultAttributionServerErrorBucketConfigurationStore();
    swift_allocObject();
    id v3 = (unint64_t *)&unk_100283D58;
    os_signpost_id_t v4 = type metadata accessor for DefaultAttributionServerErrorBucketConfigurationStore;
    goto LABEL_5;
  }
  uint64_t result = sub_10019B740();
  __break(1u);
  return result;
}

uint64_t sub_100075A7C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for A9nErrorType()
{
  return &type metadata for A9nErrorType;
}

unint64_t sub_100075AD8()
{
  unint64_t result = qword_100283D60;
  if (!qword_100283D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100283D60);
  }
  return result;
}

BOOL sub_100075B30(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int sub_100075B48()
{
  Swift::UInt v1 = *v0;
  sub_10019B7D0();
  sub_10019B7E0(v1);
  return sub_10019B7F0();
}

void sub_100075B90()
{
  sub_10019B7E0(*v0);
}

Swift::Int sub_100075BBC()
{
  Swift::UInt v1 = *v0;
  sub_10019B7D0();
  sub_10019B7E0(v1);
  return sub_10019B7F0();
}

uint64_t sub_100075C00()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AttributionErrorBucketConfigSystemJSONSource()
{
  return self;
}

unsigned char *initializeBufferWithCopyOfBuffer for AttributionErrorBucketConfigSystemJSONSource.Source(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for AttributionErrorBucketConfigSystemJSONSource.Source(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AttributionErrorBucketConfigSystemJSONSource.Source(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100075DA0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_100075DC8(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_100075DD0(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AttributionErrorBucketConfigSystemJSONSource.Source()
{
  return &type metadata for AttributionErrorBucketConfigSystemJSONSource.Source;
}

unint64_t sub_100075DF0()
{
  unint64_t result = qword_100283E08;
  if (!qword_100283E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100283E08);
  }
  return result;
}

unint64_t sub_100075E44()
{
  Swift::UInt v1 = self;
  sub_100076394();
  id v2 = [v1 configurationForClass:swift_getObjCClassFromMetadata()];
  self;
  int v3 = (void *)swift_dynamicCastObjCClass();
  if (!v3 || (unsigned int v4 = v3, (v5 = [v3 clientCodeBuckets]) == 0))
  {
    swift_unknownObjectRelease();
    return 0;
  }
  unsigned int v6 = v5;
  uint64_t v7 = sub_10019B040();

  id v8 = [v4 serverCodeBuckets];
  if (!v8)
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  unsigned int v9 = v8;
  uint64_t v10 = sub_10019B040();

  if (*(unsigned char *)(v0 + 16)) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = v7;
  }
  swift_bridgeObjectRelease();
  unint64_t v12 = sub_100075FAC(v11);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return v12;
}

unint64_t sub_100075FAC(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_10000C440(&qword_100283E18);
    id v2 = (void *)sub_10019B5D0();
  }
  else
  {
    id v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v23 = a1 + 64;
  uint64_t v3 = -1;
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1 << -(char)v4);
  }
  unint64_t v5 = v3 & *(void *)(a1 + 64);
  int64_t v22 = (unint64_t)(63 - v4) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v5)
    {
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = __clz(__rbit64(v5)) | (v7 << 6);
      int64_t v12 = v7;
    }
    else
    {
      int64_t v13 = v7 + 1;
      if (__OFADD__(v7, 1)) {
        goto LABEL_37;
      }
      if (v13 >= v22)
      {
LABEL_33:
        sub_1000764EC();
        return (unint64_t)v2;
      }
      unint64_t v14 = *(void *)(v23 + 8 * v13);
      int64_t v12 = v7 + 1;
      if (!v14)
      {
        int64_t v12 = v7 + 2;
        if (v7 + 2 >= v22) {
          goto LABEL_33;
        }
        unint64_t v14 = *(void *)(v23 + 8 * v12);
        if (!v14)
        {
          int64_t v12 = v7 + 3;
          if (v7 + 3 >= v22) {
            goto LABEL_33;
          }
          unint64_t v14 = *(void *)(v23 + 8 * v12);
          if (!v14)
          {
            int64_t v12 = v7 + 4;
            if (v7 + 4 >= v22) {
              goto LABEL_33;
            }
            unint64_t v14 = *(void *)(v23 + 8 * v12);
            if (!v14)
            {
              int64_t v15 = v7 + 5;
              if (v7 + 5 >= v22) {
                goto LABEL_33;
              }
              unint64_t v14 = *(void *)(v23 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  int64_t v12 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    goto LABEL_38;
                  }
                  if (v12 >= v22) {
                    goto LABEL_33;
                  }
                  unint64_t v14 = *(void *)(v23 + 8 * v12);
                  ++v15;
                  if (v14) {
                    goto LABEL_26;
                  }
                }
              }
              int64_t v12 = v7 + 5;
            }
          }
        }
      }
LABEL_26:
      uint64_t v10 = (v14 - 1) & v14;
      unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
    }
    sub_1000763D4(*(void *)(a1 + 48) + 40 * v11, (uint64_t)v33);
    sub_100076430(*(void *)(a1 + 56) + 32 * v11, (uint64_t)v34 + 8);
    v31[0] = v34[0];
    v31[1] = v34[1];
    uint64_t v32 = v35;
    v30[0] = v33[0];
    v30[1] = v33[1];
    sub_1000763D4((uint64_t)v30, (uint64_t)v25);
    if (!swift_dynamicCast())
    {
      sub_10007648C((uint64_t)v30);
      swift_bridgeObjectRelease();
      sub_1000764EC();
      swift_release();
      return 0;
    }
    sub_100076430((uint64_t)v31 + 8, (uint64_t)v25);
    sub_10007648C((uint64_t)v30);
    sub_1000764F4(v25, v26);
    long long v27 = v24;
    sub_1000764F4(v26, v28);
    long long v16 = v27;
    sub_1000764F4(v28, v29);
    sub_1000764F4(v29, &v27);
    unint64_t result = sub_100076504(v16, *((uint64_t *)&v16 + 1));
    unint64_t v17 = result;
    if (v18)
    {
      id v8 = (_OWORD *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      _OWORD *v8 = v16;
      unsigned int v9 = (_OWORD *)(v2[7] + 32 * v17);
      _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v9);
      unint64_t result = (unint64_t)sub_1000764F4(&v27, v9);
      goto LABEL_8;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_OWORD *)(v2[6] + 16 * result) = v16;
    unint64_t result = (unint64_t)sub_1000764F4(&v27, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v19 = v2[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_36;
    }
    v2[2] = v21;
LABEL_8:
    int64_t v7 = v12;
    unint64_t v5 = v10;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

unint64_t sub_100076370()
{
  return sub_100075E44();
}

unint64_t sub_100076394()
{
  unint64_t result = qword_100283E10;
  if (!qword_100283E10)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100283E10);
  }
  return result;
}

uint64_t sub_1000763D4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100076430(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_10007648C(uint64_t a1)
{
  uint64_t v2 = sub_10000C440(&qword_100283E20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000764EC()
{
  return swift_release();
}

_OWORD *sub_1000764F4(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_100076504(uint64_t a1, uint64_t a2)
{
  sub_10019B7D0();
  sub_10019B150();
  Swift::Int v4 = sub_10019B7F0();

  return sub_10007657C(a1, a2, v4);
}

unint64_t sub_10007657C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_10019B720() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        int64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_10019B720() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_100076660()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DefaultAttributionServerErrorBucketConfigurationStore()
{
  return self;
}

uint64_t sub_100076694()
{
  sub_10000C440(&qword_100283EC0);
  uint64_t v0 = sub_10019AE80();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = 2 * v2;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1001D6910;
  unint64_t v6 = (_OWORD *)(v5 + v3);
  _OWORD *v6 = xmmword_1001D6920;
  int64_t v7 = *(void (**)(void))(v1 + 104);
  ((void (*)(_OWORD *, void, uint64_t))v7)(v6, enum case for IntBucketContents.range(_:), v0);
  id v8 = (uint64_t *)((char *)v6 + v2);
  uint64_t *v8 = sub_100076838((uint64_t)&off_1002343A0);
  ((void (*)(uint64_t *, void, uint64_t))v7)(v8, enum case for IntBucketContents.individualValues(_:), v0);
  *(_OWORD *)((char *)v6 + v4) = xmmword_1001D6930;
  v7();

  return IntBucketConfiguration.init(unknownBucketName:discreteBuckets:classifiedBuckets:)(100000, v5, &_swiftEmptyArrayStorage);
}

uint64_t sub_100076820()
{
  return sub_100076694();
}

uint64_t sub_100076838(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10000C440(&qword_100286130);
    uint64_t v3 = sub_10019B520();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    uint64_t v7 = ~(-1 << *(unsigned char *)(v3 + 32));
    while (1)
    {
      uint64_t v8 = *(void *)(v6 + 8 * v4);
      uint64_t result = sub_10019B7C0();
      unint64_t v10 = result & v7;
      unint64_t v11 = (result & (unint64_t)v7) >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * v11);
      uint64_t v13 = 1 << (result & v7);
      uint64_t v14 = *(void *)(v3 + 48);
      if ((v13 & v12) != 0)
      {
        while (*(void *)(v14 + 8 * v10) != v8)
        {
          unint64_t v10 = (v10 + 1) & v7;
          unint64_t v11 = v10 >> 6;
          uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
          uint64_t v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        *(void *)(v5 + 8 * v11) = v13 | v12;
        *(void *)(v14 + 8 * v10) = v8;
        uint64_t v15 = *(void *)(v3 + 16);
        BOOL v16 = __OFADD__(v15, 1);
        uint64_t v17 = v15 + 1;
        if (v16)
        {
          __break(1u);
          return result;
        }
        *(void *)(v3 + 16) = v17;
      }
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (uint64_t)&_swiftEmptySetSingleton;
}

unsigned __int8 *sub_100076948(uint64_t a1, uint64_t a2, int64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_10019B210();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_100076CAC();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)sub_10019B560();
  }
LABEL_7:
  unint64_t v11 = sub_100076A30(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_100076A30(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            unint64_t v9 = 0;
            for (i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              if (!is_mul_ok(v9, a3)) {
                return 0;
              }
              unint64_t v13 = v9 * a3;
              unsigned __int8 v14 = v11 + v12;
              BOOL v15 = v13 >= v14;
              unint64_t v9 = v13 - v14;
              if (!v15) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v25 = a3 + 48;
      unsigned __int8 v26 = a3 + 55;
      unsigned __int8 v27 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v25 = 58;
      }
      else
      {
        unsigned __int8 v27 = 97;
        unsigned __int8 v26 = 65;
      }
      if (result)
      {
        unint64_t v28 = 0;
        do
        {
          unsigned int v29 = *result;
          if (v29 < 0x30 || v29 >= v25)
          {
            if (v29 < 0x41 || v29 >= v26)
            {
              if (v29 < 0x61 || v29 >= v27) {
                return 0;
              }
              char v30 = -87;
            }
            else
            {
              char v30 = -55;
            }
          }
          else
          {
            char v30 = -48;
          }
          if (!is_mul_ok(v28, a3)) {
            return 0;
          }
          unint64_t v31 = v28 * a3;
          unsigned __int8 v32 = v29 + v30;
          BOOL v15 = __CFADD__(v31, v32);
          unint64_t v28 = v31 + v32;
          if (v15) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v28;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v16 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v17 = a3 + 48;
  unsigned __int8 v18 = a3 + 55;
  unsigned __int8 v19 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v17 = 58;
  }
  else
  {
    unsigned __int8 v19 = 97;
    unsigned __int8 v18 = 65;
  }
  if (!result) {
    return 0;
  }
  unint64_t v9 = 0;
  BOOL v20 = result + 1;
  do
  {
    unsigned int v21 = *v20;
    if (v21 < 0x30 || v21 >= v17)
    {
      if (v21 < 0x41 || v21 >= v18)
      {
        if (v21 < 0x61 || v21 >= v19) {
          return 0;
        }
        char v22 = -87;
      }
      else
      {
        char v22 = -55;
      }
    }
    else
    {
      char v22 = -48;
    }
    if (!is_mul_ok(v9, a3)) {
      return 0;
    }
    unint64_t v23 = v9 * a3;
    unsigned __int8 v24 = v21 + v22;
    BOOL v15 = __CFADD__(v23, v24);
    unint64_t v9 = v23 + v24;
    if (v15) {
      return 0;
    }
    ++v20;
    --v16;
  }
  while (v16);
  return (unsigned __int8 *)v9;
}

uint64_t sub_100076CAC()
{
  unint64_t v0 = sub_10019B220();
  uint64_t v4 = sub_100076D2C(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_100076D2C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_100076E84(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unsigned int v11 = sub_10007C70C(v9, 0),
          unint64_t v12 = sub_100076F84((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = sub_10019B140();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return sub_10019B140();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  sub_10019B560();
LABEL_4:

  return sub_10019B140();
}

uint64_t sub_100076E84(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    uint64_t result = sub_10007C774(result, a3, a4);
    unint64_t v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    uint64_t result = sub_10007C774(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0) {
      return (a2 >> 16) - (v7 >> 16);
    }
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  unint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    unint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v10 < v7 >> 16)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v10 < a2 >> 16)
  {
LABEL_17:
    __break(1u);
    return result;
  }

  return sub_10019B1D0();
}

unint64_t sub_100076F84(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    void *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_10007C774(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_10019B1E0();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_10019B560();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_10007C774(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_10019B1B0();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_100077198(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000771B8(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1000771B8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000C440(&qword_100283EF0);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    unint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_10019B5E0();
  __break(1u);
  return result;
}

uint64_t sub_100077318(uint64_t result, unint64_t a2)
{
  if (a2)
  {
    unint64_t v2 = a2;
  }
  else
  {
    uint64_t result = 48;
    unint64_t v2 = 0xE100000000000000;
  }
  uint64_t v3 = HIBYTE(v2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((v2 & 0x2000000000000000) != 0) {
    uint64_t v5 = HIBYTE(v2) & 0xF;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((v2 & 0x1000000000000000) == 0)
  {
    if ((v2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        unint64_t v6 = (unsigned __int8 *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        unint64_t v6 = (unsigned __int8 *)sub_10019B560();
      }
      unint64_t v7 = (unint64_t)sub_100076A30(v6, v4, 10);
      char v9 = v8 & 1;
      goto LABEL_40;
    }
    v25[0] = result;
    v25[1] = v2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_66;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_36;
      }
      unint64_t v7 = (BYTE1(result) - 48);
      if (v3 != 2)
      {
        if ((BYTE2(result) - 48) > 9u) {
          goto LABEL_36;
        }
        unint64_t v7 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
        uint64_t v13 = v3 - 3;
        if (v13)
        {
          uint64_t v14 = (unsigned __int8 *)v25 + 3;
          while (1)
          {
            unsigned int v15 = *v14 - 48;
            if (v15 > 9) {
              goto LABEL_36;
            }
            if (!is_mul_ok(v7, 0xAuLL)) {
              goto LABEL_36;
            }
            BOOL v11 = __CFADD__(10 * v7, v15);
            unint64_t v7 = 10 * v7 + v15;
            if (v11) {
              goto LABEL_36;
            }
            char v9 = 0;
            ++v14;
            if (!--v13) {
              goto LABEL_40;
            }
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1)
          {
            unsigned __int8 v10 = BYTE1(result) - 48;
            if ((BYTE1(result) - 48) <= 9u)
            {
              unint64_t v7 = 0;
              BOOL v11 = v10 == 0;
              unint64_t v12 = -(uint64_t)v10;
              if (!v11) {
                goto LABEL_37;
              }
              if (v3 == 2)
              {
                char v9 = 0;
                unint64_t v7 = v12;
                goto LABEL_40;
              }
              unsigned __int8 v19 = BYTE2(result) - 48;
              if ((BYTE2(result) - 48) <= 9u && is_mul_ok(v12, 0xAuLL))
              {
                unint64_t v20 = 10 * v12;
                unint64_t v7 = v20 - v19;
                if (v20 >= v19)
                {
                  uint64_t v21 = v3 - 3;
                  if (v21)
                  {
                    uint64_t v22 = (unsigned __int8 *)v25 + 3;
                    while (1)
                    {
                      unsigned int v23 = *v22 - 48;
                      if (v23 > 9) {
                        goto LABEL_36;
                      }
                      if (!is_mul_ok(v7, 0xAuLL)) {
                        goto LABEL_36;
                      }
                      BOOL v11 = 10 * v7 >= v23;
                      unint64_t v7 = 10 * v7 - v23;
                      if (!v11) {
                        goto LABEL_36;
                      }
                      char v9 = 0;
                      ++v22;
                      if (!--v21) {
                        goto LABEL_40;
                      }
                    }
                  }
                  goto LABEL_39;
                }
              }
            }
          }
LABEL_36:
          unint64_t v7 = 0;
LABEL_37:
          char v9 = 1;
          goto LABEL_40;
        }
        __break(1u);
LABEL_66:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_36;
      }
      unint64_t v7 = (result - 48);
      if (v3 != 1)
      {
        if ((BYTE1(result) - 48) > 9u) {
          goto LABEL_36;
        }
        unint64_t v7 = 10 * (result - 48) + (BYTE1(result) - 48);
        uint64_t v16 = v3 - 2;
        if (v16)
        {
          unint64_t v17 = (unsigned __int8 *)v25 + 2;
          while (1)
          {
            unsigned int v18 = *v17 - 48;
            if (v18 > 9) {
              goto LABEL_36;
            }
            if (!is_mul_ok(v7, 0xAuLL)) {
              goto LABEL_36;
            }
            BOOL v11 = __CFADD__(10 * v7, v18);
            unint64_t v7 = 10 * v7 + v18;
            if (v11) {
              goto LABEL_36;
            }
            char v9 = 0;
            ++v17;
            if (!--v16) {
              goto LABEL_40;
            }
          }
        }
      }
    }
LABEL_39:
    char v9 = 0;
    goto LABEL_40;
  }
  unint64_t v7 = (unint64_t)sub_100076948(result, v2, 10);
  char v9 = v24;
LABEL_40:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

uint64_t sub_10007760C(void *a1, uint64_t a2, void *a3)
{
  if (!a1)
  {
    sub_10019B3B0();
    sub_10000C6C8(0, (unint64_t *)&qword_100284870);
    unsigned int v23 = (void *)sub_10019B470();
    sub_10019AF50();

    NSString v24 = sub_10019B0A0();
    NSString v25 = sub_10019B0A0();
    CreateDiagnosticReport();

    [a3 uploadFailedWithStatusCode:-1 retryCount:a2];
    return 0;
  }
  id v5 = a1;
  unint64_t v6 = (char *)[v5 responseStatusCode];
  id v7 = [v5 responseError];
  if (v7)
  {
    id v8 = v7;
    sub_10019B3D0();
    sub_10000C6C8(0, (unint64_t *)&qword_100284870);
    char v9 = (void *)sub_10019B470();
    uint64_t v10 = 2;
    sub_10019AF50();

    sub_10019B3B0();
    BOOL v11 = (void *)sub_10019B470();
    sub_10000C440((uint64_t *)&unk_100285520);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1001D69A0;
    swift_getErrorValue();
    uint64_t v13 = sub_10019B770();
    uint64_t v15 = v14;
    *(void *)(v12 + 56) = &type metadata for String;
    *(void *)(v12 + 64) = sub_100078904();
    *(void *)(v12 + 32) = v13;
    *(void *)(v12 + 40) = v15;
    sub_10019AF50();

    swift_bridgeObjectRelease();
    sub_10019B530(61);
    v48._countAndFlagsBits = 0xD00000000000003BLL;
    v48._object = (void *)0x800000010020C650;
    sub_10019B190(v48);
    uint64_t v16 = (void *)sub_10019A9D0();
    id v17 = [v16 debugDescription:0, 0xE000000000000000];

    uint64_t v18 = sub_10019B0B0();
    unint64_t v20 = v19;

    v49._countAndFlagsBits = v18;
    v49._object = v20;
    sub_10019B190(v49);
    swift_bridgeObjectRelease();
    NSString v21 = sub_10019B0A0();
    swift_bridgeObjectRelease();
    NSString v22 = sub_10019B0A0();
    CreateDiagnosticReport();

    return v10;
  }
  if (v6 == (char *)204)
  {
    sub_10019B3D0();
    sub_10000C6C8(0, (unint64_t *)&qword_100284870);
    uint64_t v26 = (void *)sub_10019B470();
    sub_10019AF50();

    sub_10019B390();
    unint64_t v27 = (void *)sub_10019B470();
    sub_10000C440((uint64_t *)&unk_100285520);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_1001D69A0;
    id v29 = [v5 responseStatusCode];
    *(void *)(v28 + 56) = &type metadata for Int;
    *(void *)(v28 + 64) = &protocol witness table for Int;
    *(void *)(v28 + 32) = v29;
    sub_10019AF50();

    swift_bridgeObjectRelease();
    [a3 uploadSucceededWithRetryCount:a2];

    return 1;
  }
  if ((unint64_t)(v6 - 400) <= 0x63)
  {
    sub_10019B3D0();
    sub_10000C6C8(0, (unint64_t *)&qword_100284870);
    unint64_t v31 = (void *)sub_10019B470();
    sub_10019AF50();

    NSString v32 = sub_10019B0A0();
    NSString v33 = sub_10019B0A0();
    CreateDiagnosticReport();

    sub_10019B3B0();
    id v34 = (void *)sub_10019B470();
    sub_10000C440((uint64_t *)&unk_100285520);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1001D69A0;
    id v36 = [v5 responseStatusCode];
    *(void *)(v35 + 56) = &type metadata for Int;
    *(void *)(v35 + 64) = &protocol witness table for Int;
    *(void *)(v35 + 32) = v36;
    sub_10019AF50();

    swift_bridgeObjectRelease();
    [a3 uploadFailedWithStatusCode:[v5 responseStatusCode] retryCount:a2];

    return 0;
  }
  sub_10019B3D0();
  sub_10000C6C8(0, (unint64_t *)&qword_100284870);
  BOOL v37 = (void *)sub_10019B470();
  uint64_t v10 = 2;
  sub_10019AF50();

  if ((unint64_t)(v6 - 500) > 0x63)
  {
    sub_10019B3B0();
    unsigned int v43 = (void *)sub_10019B470();
    sub_10000C440((uint64_t *)&unk_100285520);
    uint64_t v44 = swift_allocObject();
    *(_OWORD *)(v44 + 16) = xmmword_1001D69A0;
    id v45 = [v5 responseStatusCode];
    *(void *)(v44 + 56) = &type metadata for Int;
    *(void *)(v44 + 64) = &protocol witness table for Int;
    *(void *)(v44 + 32) = v45;
    sub_10019AF50();

    swift_bridgeObjectRelease();
    NSString v46 = sub_10019B0A0();
    NSString v47 = sub_10019B0A0();
    CreateDiagnosticReport();
  }
  else
  {
    NSString v38 = sub_10019B0A0();
    NSString v39 = sub_10019B0A0();
    CreateDiagnosticReport();

    sub_10019B3B0();
    unsigned int v40 = (void *)sub_10019B470();
    sub_10000C440((uint64_t *)&unk_100285520);
    uint64_t v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = xmmword_1001D69A0;
    id v42 = [v5 responseStatusCode];
    *(void *)(v41 + 56) = &type metadata for Int;
    *(void *)(v41 + 64) = &protocol witness table for Int;
    *(void *)(v41 + 32) = v42;
    sub_10019AF50();

    swift_bridgeObjectRelease();
  }
  return v10;
}

uint64_t sub_100078068(uint64_t a1)
{
  unint64_t v2 = self;
  sub_10000C6C8(0, &qword_100283EE8);
  [v2 configurationForClass:swift_getObjCClassFromMetadata()];
  self;
  uint64_t v3 = (void *)swift_dynamicCastObjCClass();
  if (!v3)
  {
    swift_unknownObjectRelease();
    BOOL v11 = &off_1002343C8;
    goto LABEL_24;
  }
  uint64_t v4 = v3;
  id v5 = [v3 uploadBackoffSchedule];
  if (v5)
  {
    unint64_t v6 = v5;
    sub_10000C6C8(0, (unint64_t *)&qword_1002860E0);
    unint64_t v7 = sub_10019B2B0();

    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_10019B5A0();
      swift_bridgeObjectRelease();
      if (v8) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v8)
      {
LABEL_5:
        uint64_t result = sub_100077198(0, v8 & ~(v8 >> 63), 0);
        if (v8 < 0) {
          goto LABEL_38;
        }
        uint64_t v10 = 0;
        BOOL v11 = (_UNKNOWN **)_swiftEmptyArrayStorage;
        do
        {
          if ((v7 & 0xC000000000000001) != 0) {
            id v12 = (id)sub_10019B550();
          }
          else {
            id v12 = *(id *)(v7 + 8 * v10 + 32);
          }
          uint64_t v13 = v12;
          [v12 doubleValue];
          uint64_t v15 = v14;

          unint64_t v17 = _swiftEmptyArrayStorage[2];
          unint64_t v16 = _swiftEmptyArrayStorage[3];
          if (v17 >= v16 >> 1) {
            sub_100077198(v16 > 1, v17 + 1, 1);
          }
          ++v10;
          _swiftEmptyArrayStorage[2] = v17 + 1;
          _swiftEmptyArrayStorage[v17 + 4] = v15;
        }
        while (v8 != v10);
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    swift_bridgeObjectRelease();
    BOOL v11 = (_UNKNOWN **)_swiftEmptyArrayStorage;
  }
  else
  {
    BOOL v11 = &off_1002343C8;
  }
LABEL_18:
  id v18 = [v4 holdTransactionLimit];
  if (v18)
  {
    unsigned __int8 v19 = v18;
    [v18 doubleValue];
    if (v20 > 0.0)
    {
      [v19 doubleValue];
      swift_unknownObjectRelease();

      NSString v21 = v11[2];
      if (!v21) {
        goto LABEL_28;
      }
      goto LABEL_25;
    }
  }
  swift_unknownObjectRelease();
LABEL_24:
  NSString v21 = v11[2];
  if (!v21)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_25:
  if ((unint64_t)v21 <= a1) {
    goto LABEL_28;
  }
  uint64_t v22 = a1 + 1;
  if ((unint64_t)(a1 + 1) >= 2)
  {
    unint64_t v23 = v22 & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v26 = (double *)(v11 + 5);
    double v24 = 0.0;
    unint64_t v27 = v22 & 0xFFFFFFFFFFFFFFFELL;
    do
    {
      double v24 = v24 + *(v26 - 1) + *v26;
      v26 += 2;
      v27 -= 2;
    }
    while (v27);
    if (v22 == v23) {
      goto LABEL_34;
    }
  }
  else
  {
    unint64_t v23 = 0;
    double v24 = 0.0;
  }
  uint64_t v28 = a1 - v23 + 1;
  id v29 = (double *)&v11[v23 + 4];
  do
  {
    double v30 = *v29++;
    double v24 = v24 + v30;
    --v28;
  }
  while (v28);
LABEL_34:
  uint64_t result = sub_10019B700();
  if ((uint64_t)v11[2] > a1)
  {
    uint64_t v25 = result;
    swift_bridgeObjectRelease();
    return v25;
  }
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_100078410(void *a1, void *a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5)
{
  id v42 = a4;
  uint64_t v9 = sub_10019ABA0();
  uint64_t v41 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  BOOL v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10019ACE0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  unint64_t v16 = (uint64_t *)((char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  id v18 = (uint64_t *)((char *)&v38 - v17);
  char v19 = sub_10007760C(a1, a3, a2);
  if (v19 == 2)
  {
    id v38 = a1;
    uint64_t v39 = v13;
    uint64_t v40 = a5;
    uint64_t v20 = sub_100078068(a3);
    if (v21)
    {
      uint64_t v23 = v20;
      uint64_t v24 = v21;
      char v25 = v22;
      uint64_t v26 = (char *)v16 + *(int *)(sub_10000C440(&qword_100283EC8) + 64);
      *unint64_t v16 = v23;
      v16[1] = v24;
      swift_bridgeObjectRetain();
      sub_10019AB90();
      sub_10019AB20();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v9);
      swift_bridgeObjectRelease();
      uint64_t v27 = sub_10019ADC0();
      if (v25)
      {
        unsigned int v43 = _swiftEmptyArrayStorage;
        sub_100078804();
        sub_10000C440(&qword_100283ED8);
        sub_10007885C();
        sub_10019B4E0();
        uint64_t v28 = 0;
      }
      else
      {
        uint64_t v28 = 1;
      }
      uint64_t v35 = v42;
      uint64_t v29 = v39;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, v28, 1, v27);
      (*(void (**)(uint64_t *, void, uint64_t))(v29 + 104))(v16, enum case for WorkResult.retry(_:), v12);
      v35(v16);
    }
    else
    {
      id v30 = v38;
      id v31 = [v38 responseError];
      uint64_t v29 = v39;
      if (v31)
      {
        NSString v32 = v31;
        NSString v33 = (void *)sub_10019A9D0();
        id v34 = [v33 code];
      }
      else
      {
        id v34 = [v30 responseStatusCode];
      }
      id v36 = v42;
      [a2 uploadFailedWithStatusCode:v34 retryCount:a3];
      *(unsigned char *)id v18 = 0;
      (*(void (**)(uint64_t *, void, uint64_t))(v29 + 104))(v18, enum case for WorkResult.done(_:), v12);
      unint64_t v16 = v18;
      v36(v18);
    }
  }
  else
  {
    *(unsigned char *)id v18 = v19 & 1;
    (*(void (**)(uint64_t *, void, uint64_t))(v13 + 104))(v18, enum case for WorkResult.done(_:), v12);
    unint64_t v16 = v18;
    uint64_t v29 = v13;
    v42(v18);
  }
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v29 + 8))(v16, v12);
}

unint64_t sub_100078804()
{
  unint64_t result = qword_100283ED0;
  if (!qword_100283ED0)
  {
    sub_10019ADC0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100283ED0);
  }
  return result;
}

unint64_t sub_10007885C()
{
  unint64_t result = qword_100283EE0;
  if (!qword_100283EE0)
  {
    sub_1000788B8(&qword_100283ED8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100283EE0);
  }
  return result;
}

uint64_t sub_1000788B8(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_100078904()
{
  unint64_t result = qword_100284890;
  if (!qword_100284890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100284890);
  }
  return result;
}

uint64_t type metadata accessor for DefaultAttributionClientErrorBucketConfigurationStore()
{
  return self;
}

uint64_t sub_10007897C()
{
  sub_10000C440(&qword_100283F90);
  sub_10019AEB0();
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1001D69D0;
  sub_10000C440(&qword_100283EC0);
  uint64_t v39 = sub_10019AE80();
  uint64_t v0 = *(void *)(v39 - 8);
  uint64_t v1 = *(void *)(v0 + 72);
  unint64_t v2 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1001D69A0;
  uint64_t v4 = (uint64_t *)(v3 + v2);
  uint64_t *v4 = sub_100076838((uint64_t)&off_100234460);
  unsigned int v40 = enum case for IntBucketContents.individualValues(_:);
  id v5 = *(void (**)(uint64_t *))(v0 + 104);
  v5(v4);
  sub_10019AEA0();
  uint64_t v6 = v1;
  uint64_t v36 = 3 * v1;
  uint64_t v38 = v1;
  uint64_t v7 = 2 * v1;
  uint64_t v35 = 2 * v1;
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1001D6910;
  unint64_t v9 = v8 + v2;
  *(_OWORD *)(v8 + v2) = xmmword_1001D69E0;
  ((void (*)(unint64_t, void, uint64_t))v5)(v8 + v2, enum case for IntBucketContents.range(_:), v39);
  *(_OWORD *)(v9 + v6) = xmmword_1001D69F0;
  ((void (*)(void))v5)();
  *(_OWORD *)(v9 + v7) = xmmword_1001D6A00;
  ((void (*)(void))v5)();
  sub_10019AEA0();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1001D69A0;
  BOOL v11 = (uint64_t *)(v10 + v2);
  uint64_t *v11 = sub_100076838((uint64_t)&off_100234490);
  ((void (*)(uint64_t *, void, uint64_t))v5)(v11, v40, v39);
  sub_10019AEA0();
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1001D69A0;
  uint64_t v13 = (uint64_t *)(v12 + v2);
  *uint64_t v13 = sub_100076838((uint64_t)&off_1002344C0);
  ((void (*)(uint64_t *, void, uint64_t))v5)(v13, v40, v39);
  sub_10019AEA0();
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1001D69A0;
  uint64_t v15 = (uint64_t *)(v14 + v2);
  *uint64_t v15 = sub_100076838((uint64_t)&off_1002344E8);
  ((void (*)(uint64_t *, void, uint64_t))v5)(v15, v40, v39);
  sub_10019AEA0();
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1001D69A0;
  uint64_t v17 = (uint64_t *)(v16 + v2);
  *uint64_t v17 = sub_100076838((uint64_t)&off_100234510);
  ((void (*)(uint64_t *, void, uint64_t))v5)(v17, v40, v39);
  sub_10019AEA0();
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1001D69A0;
  char v19 = (uint64_t *)(v18 + v2);
  *char v19 = sub_100076838((uint64_t)&off_100234540);
  ((void (*)(uint64_t *, void, uint64_t))v5)(v19, v40, v39);
  sub_10019AEA0();
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1001D69A0;
  uint64_t v21 = (uint64_t *)(v20 + v2);
  *uint64_t v21 = sub_100076838((uint64_t)&off_100234568);
  ((void (*)(uint64_t *, void, uint64_t))v5)(v21, v40, v39);
  sub_10019AEA0();
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1001D69A0;
  uint64_t v23 = (uint64_t *)(v22 + v2);
  *uint64_t v23 = sub_100076838((uint64_t)&off_1002345A8);
  ((void (*)(uint64_t *, void, uint64_t))v5)(v23, v40, v39);
  sub_10019AEA0();
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1001D6A10;
  char v25 = (uint64_t *)(v24 + v2);
  *char v25 = sub_100076838((uint64_t)&off_1002345D8);
  ((void (*)(uint64_t *, void, uint64_t))v5)(v25, v40, v39);
  *(_OWORD *)((char *)v25 + v38) = xmmword_1001D6A20;
  ((void (*)(void))v5)();
  *(_OWORD *)((char *)v25 + v35) = xmmword_1001D6A30;
  ((void (*)(void))v5)();
  *(_OWORD *)((char *)v25 + v36) = xmmword_1001D6A40;
  ((void (*)(void))v5)();
  uint64_t v26 = 4 * v38;
  *(_OWORD *)((char *)v25 + v26) = xmmword_1001D6A50;
  ((void (*)(void))v5)();
  *(_OWORD *)((char *)v25 + v26 + v38) = xmmword_1001D6A60;
  ((void (*)(void))v5)();
  *(_OWORD *)((char *)v25 + 6 * v38) = xmmword_1001D6A70;
  ((void (*)(void))v5)();
  sub_10019AEA0();
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1001D6A80;
  uint64_t v28 = (uint64_t *)(v27 + v2);
  *uint64_t v28 = sub_100076838((uint64_t)&off_100234608);
  ((void (*)(uint64_t *, void, uint64_t))v5)(v28, v40, v39);
  *(_OWORD *)((char *)v28 + v38) = xmmword_1001D6A90;
  ((void (*)(void))v5)();
  sub_10019AEA0();
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1001D69A0;
  *(_OWORD *)(v29 + v2) = xmmword_1001D6AA0;
  ((void (*)(void))v5)();
  sub_10019AEA0();
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1001D69A0;
  id v31 = (uint64_t *)(v30 + v2);
  *id v31 = sub_100076838((uint64_t)&off_100234630);
  ((void (*)(uint64_t *, void, uint64_t))v5)(v31, v40, v39);
  sub_10019AEA0();
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1001D6A80;
  NSString v33 = (uint64_t *)(v32 + v2);
  *NSString v33 = sub_100076838((uint64_t)&off_100234660);
  ((void (*)(uint64_t *, void, uint64_t))v5)(v33, v40, v39);
  *(_OWORD *)((char *)v33 + v38) = xmmword_1001D6AB0;
  ((void (*)(void))v5)();
  sub_10019AEA0();

  return IntBucketConfiguration.init(unknownBucketName:discreteBuckets:classifiedBuckets:)(100011, &_swiftEmptyArrayStorage, v37);
}

uint64_t sub_10007937C()
{
  return sub_10007897C();
}

uint64_t sub_100079394()
{
  return sub_10019B280();
}

uint64_t sub_100079424()
{
  return sub_10019B270();
}

unint64_t sub_1000794A4(char a1)
{
  unint64_t result = 0x6C61767265746E69;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x74536E6F6D656164;
      break;
    case 4:
      unint64_t result = 0xD000000000000019;
      break;
    case 5:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_100079590(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t sub_1000795AC()
{
  return sub_1000794A4(*v0);
}

uint64_t sub_1000795B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10007C940(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000795DC()
{
  return 0;
}

void sub_1000795E8(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1000795F4(uint64_t a1)
{
  unint64_t v2 = sub_10007FE24();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100079630(uint64_t a1)
{
  unint64_t v2 = sub_10007FE24();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10007966C(void *a1)
{
  uint64_t v3 = sub_10000C440(&qword_1002842A0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007FDE0(a1, a1[3]);
  sub_10007FE24();
  sub_10019B830();
  char v14 = 0;
  sub_10019B6F0();
  if (!v1)
  {
    char v13 = 1;
    sub_10019B6C0();
    type metadata accessor for AttributionPerfMetrics(0);
    char v12 = 2;
    sub_10019ABA0();
    sub_10007FE78(&qword_1002842A8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10019B6E0();
    char v11 = 3;
    sub_10019B6E0();
    char v10 = 4;
    sub_10019B6E0();
    char v9 = 5;
    sub_10019B6E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1000798F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v3 = sub_10019ABA0();
  uint64_t v44 = *(void *)(v3 - 8);
  uint64_t v45 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v38 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v33 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  char v11 = (char *)v33 - v10;
  __chkstk_darwin(v9);
  char v13 = (char *)v33 - v12;
  uint64_t v14 = sub_10000C440(&qword_100284288);
  uint64_t v39 = *(void *)(v14 - 8);
  uint64_t v40 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for AttributionPerfMetrics(0);
  __chkstk_darwin(v43);
  uint64_t v18 = (void *)((char *)v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = a1[3];
  uint64_t v41 = a1;
  sub_10007FDE0(a1, v19);
  sub_10007FE24();
  uint64_t v20 = v42;
  sub_10019B820();
  if (v20) {
    return _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v41);
  }
  id v42 = v11;
  uint64_t v36 = v8;
  uint64_t v21 = v39;
  uint64_t v22 = v40;
  char v51 = 0;
  *uint64_t v18 = sub_10019B670();
  char v50 = 1;
  v18[1] = sub_10019B640();
  v18[2] = v23;
  char v49 = 2;
  uint64_t v24 = sub_10007FE78(&qword_100284298, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v25 = v45;
  sub_10019B660();
  uint64_t v26 = (int *)v43;
  uint64_t v27 = (char *)v18 + *(int *)(v43 + 24);
  uint64_t v35 = v18;
  id v34 = *(void (**)(char *, char *, uint64_t))(v44 + 32);
  v34(v27, v13, v25);
  char v48 = 3;
  uint64_t v28 = v42;
  v33[1] = v24;
  sub_10019B660();
  v34((char *)v35 + v26[7], v28, v25);
  char v47 = 4;
  uint64_t v29 = v36;
  sub_10019B660();
  v34((char *)v35 + v26[8], v29, v25);
  char v46 = 5;
  uint64_t v30 = v38;
  sub_10019B660();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v16, v22);
  uint64_t v31 = (uint64_t)v35;
  v34((char *)v35 + v26[9], v30, v25);
  sub_10007FF7C(v31, v37, type metadata accessor for AttributionPerfMetrics);
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v41);
  return sub_10007FFE4(v31, type metadata accessor for AttributionPerfMetrics);
}

uint64_t sub_100079F10@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000798F4(a1, a2);
}

uint64_t sub_100079F28(void *a1)
{
  return sub_10007966C(a1);
}

uint64_t sub_100079F40(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000C440(&qword_1002842F0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007FDE0(a1, a1[3]);
  sub_10007FEC0();
  sub_10019B830();
  *(void *)&long long v11 = *(void *)v3;
  char v12 = 0;
  sub_10000C440(&qword_1002842C0);
  sub_100080044(&qword_1002842F8);
  sub_10019B6B0();
  if (!v2)
  {
    long long v11 = *(_OWORD *)(v3 + 8);
    char v12 = 1;
    sub_1000800A8();
    sub_10019B6B0();
    uint64_t v9 = type metadata accessor for AttributionNetworkRequestData(0);
    LOBYTE(v11) = 2;
    sub_10019AA70();
    sub_10007FE78(&qword_100284308, (void (*)(uint64_t))&type metadata accessor for URL);
    sub_10019B6E0();
    LOBYTE(v11) = 3;
    sub_10019B6C0();
    *(void *)&long long v11 = *(void *)(v3 + *(int *)(v9 + 32));
    char v12 = 4;
    type metadata accessor for APHTTPMethod();
    sub_10007FE78(&qword_100284310, (void (*)(uint64_t))type metadata accessor for APHTTPMethod);
    sub_10019B6E0();
    LOBYTE(v11) = 5;
    type metadata accessor for AttributionPerfMetrics(0);
    sub_10007FE78(&qword_100284318, (void (*)(uint64_t))type metadata accessor for AttributionPerfMetrics);
    sub_10019B6E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10007A2A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v27 = type metadata accessor for AttributionPerfMetrics(0);
  __chkstk_darwin(v27);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10019AA70();
  uint64_t v28 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000C440(&qword_1002842B0);
  uint64_t v29 = *(void *)(v8 - 8);
  uint64_t v30 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v11 = (int *)type metadata accessor for AttributionNetworkRequestData(0);
  __chkstk_darwin(v11);
  char v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v32 = a1;
  sub_10007FDE0(a1, v14);
  sub_10007FEC0();
  uint64_t v31 = v10;
  uint64_t v15 = v33;
  sub_10019B820();
  if (v15) {
    return _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v32);
  }
  uint64_t v16 = v7;
  NSString v33 = v4;
  uint64_t v17 = v29;
  sub_10000C440(&qword_1002842C0);
  char v35 = 0;
  sub_100080044(&qword_1002842C8);
  sub_10019B630();
  *(void *)char v13 = v34;
  char v35 = 1;
  sub_10007FF28();
  sub_10019B630();
  *(_OWORD *)(v13 + 8) = v34;
  LOBYTE(v34) = 2;
  sub_10007FE78(&qword_1002842D8, (void (*)(uint64_t))&type metadata accessor for URL);
  uint64_t v25 = v13;
  sub_10019B660();
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v25[v11[6]], v16, v5);
  LOBYTE(v34) = 3;
  uint64_t v24 = 0;
  uint64_t v18 = sub_10019B640();
  uint64_t v19 = (uint64_t)v25;
  uint64_t v20 = (uint64_t *)&v25[v11[7]];
  *uint64_t v20 = v18;
  v20[1] = v21;
  type metadata accessor for APHTTPMethod();
  char v35 = 4;
  sub_10007FE78(&qword_1002842E0, (void (*)(uint64_t))type metadata accessor for APHTTPMethod);
  sub_10019B660();
  *(void *)(v19 + v11[8]) = v34;
  LOBYTE(v34) = 5;
  sub_10007FE78(&qword_1002842E8, (void (*)(uint64_t))type metadata accessor for AttributionPerfMetrics);
  uint64_t v22 = (uint64_t)v33;
  sub_10019B660();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v31, v30);
  sub_1000801A0(v22, v19 + v11[9], type metadata accessor for AttributionPerfMetrics);
  sub_10007FF7C(v19, v26, type metadata accessor for AttributionNetworkRequestData);
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v32);
  return sub_10007FFE4(v19, type metadata accessor for AttributionNetworkRequestData);
}

uint64_t sub_10007A8FC()
{
  uint64_t result = 0x73726564616568;
  switch(*v0)
  {
    case 1:
      uint64_t result = 2036625250;
      break;
    case 2:
      uint64_t result = 6910581;
      break;
    case 3:
      uint64_t result = 0x6449656C646E7562;
      break;
    case 4:
      uint64_t result = 0x646F6874656DLL;
      break;
    case 5:
      uint64_t result = 0x7274654D66726570;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10007A9B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10007CBCC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10007A9E0(uint64_t a1)
{
  unint64_t v2 = sub_10007FEC0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10007AA1C(uint64_t a1)
{
  unint64_t v2 = sub_10007FEC0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10007AA58@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10007A2A8(a1, a2);
}

uint64_t sub_10007AA70(void *a1)
{
  return sub_100079F40(a1);
}

uint64_t static AttributionRetryWorkerBridge.start(session:request:requestorId:intervalId:reportingStorefront:requestTimestamp:daemonStartTime:tokenReturnedToClientDate:payloadDeliveryStartDate:)(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return sub_10007D224(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

id AttributionRetryWorkerBridge.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

id AttributionRetryWorkerBridge.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AttributionRetryWorkerBridge();
  return [super init];
}

id AttributionRetryWorkerBridge.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AttributionRetryWorkerBridge();
  return [super dealloc];
}

void sub_10007ADCC(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v8 = sub_10000C440(&qword_100284328);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  long long v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  char v13 = (NSString *)((char *)&v21 - v12);
  type metadata accessor for AttributionRetryWorker(0);
  uint64_t v14 = swift_dynamicCastClass();
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v16 = type metadata accessor for AttributionRetryWorker.OriginalRequest(0);
    sub_10007FF7C(a5, (uint64_t)v13 + *(int *)(v16 + 24), type metadata accessor for AttributionNetworkRequestData);
    *char v13 = a3;
    v13[1] = a4;
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v13, 0, 1, v16);
    sub_100080910((uint64_t)v13, (uint64_t)v11);
    uint64_t v17 = v15 + OBJC_IVAR____TtC11Attribution22AttributionRetryWorker_originalRequest;
    swift_beginAccess();
    swift_unknownObjectRetain();
    id v18 = a3;
    id v19 = a4;
    sub_100080978((uint64_t)v11, v17, &qword_100284328);
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  else
  {
    NSString v21 = sub_10019B0A0();
    APSimulateCrash();
    uint64_t v20 = v21;
  }
}

uint64_t sub_10007AFC8(uint64_t a1, unint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v108 = a6;
  uint64_t v106 = a4;
  uint64_t v107 = a5;
  unint64_t v105 = a3;
  uint64_t v100 = sub_10019AA70();
  uint64_t v99 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  unint64_t v101 = (char *)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AttributionNetworkRequestData(0);
  uint64_t v104 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  unint64_t v97 = (char *)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v102 = (uint64_t *)((char *)&v96 - v12);
  uint64_t v13 = sub_10000C440(&qword_100284320);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v96 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v18 = (char *)&v96 - v17;
  uint64_t v19 = sub_10000C440(&qword_100284328);
  __chkstk_darwin(v19 - 8);
  NSString v21 = (char *)&v96 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for AttributionRetryWorker.OriginalRequest(0);
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (id *)((char *)&v96 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v98 = mach_continuous_time();
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_100077318(a1, a2);
  uint64_t v27 = v109 + OBJC_IVAR____TtC11Attribution22AttributionRetryWorker_originalRequest;
  swift_beginAccess();
  sub_1000800FC(v27, (uint64_t)v21, &qword_100284328);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    sub_1000808B4((uint64_t)v21, &qword_100284328);
    uint64_t v28 = v104;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v104 + 56))(v18, 1, 1, v9);
    sub_10007BD78(v105, v106, (uint64_t)v18);
    sub_1000800FC((uint64_t)v18, (uint64_t)v16, &qword_100284320);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v16, 1, v9) == 1)
    {
      sub_1000808B4((uint64_t)v16, &qword_100284320);
      sub_10019B3B0();
      sub_100080160();
      uint64_t v30 = (void *)sub_10019B470();
      sub_10019AF50();

      uint64_t v31 = (uint64_t)v18;
      return sub_1000808B4(v31, &qword_100284320);
    }
    uint64_t v42 = v9;
    uint64_t v43 = v102;
    sub_1000801A0((uint64_t)v16, (uint64_t)v102, type metadata accessor for AttributionNetworkRequestData);
    uint64_t v44 = *v43;
    uint64_t v45 = (uint64_t *)v97;
    long long v96 = v18;
    if (v44 && *(void *)(v44 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v46 = sub_100076504(0xD000000000000018, 0x800000010020C7C0);
      if (v47)
      {
        char v48 = (uint64_t *)(*(void *)(v44 + 56) + 16 * v46);
        uint64_t v49 = *v48;
        unint64_t v50 = v48[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_10007FF7C((uint64_t)v43, (uint64_t)v45, type metadata accessor for AttributionNetworkRequestData);
        if (v50) {
          goto LABEL_20;
        }
        uint64_t v51 = *v45;
        if (!*v45) {
          goto LABEL_19;
        }
LABEL_16:
        if (!*(void *)(v51 + 16)) {
          goto LABEL_19;
        }
        unint64_t v62 = sub_100076504(0xD000000000000017, 0x800000010020C7A0);
        if ((v63 & 1) == 0) {
          goto LABEL_19;
        }
        uint64_t v64 = (uint64_t *)(*(void *)(v51 + 56) + 16 * v62);
        uint64_t v49 = *v64;
        unint64_t v50 = v64[1];
        swift_bridgeObjectRetain();
LABEL_20:
        sub_10007FFE4((uint64_t)v45, type metadata accessor for AttributionNetworkRequestData);
        os_log_type_t v65 = sub_10019B3A0();
        sub_100080160();
        uint64_t v66 = sub_10019B470();
        os_log_type_t v67 = v65;
        BOOL v68 = os_log_type_enabled(v66, v65);
        uint64_t v103 = v26;
        if (v68)
        {
          swift_bridgeObjectRetain();
          uint64_t v69 = swift_slowAlloc();
          aBlock[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v69 = 134218242;
          uint64_t v111 = v26;
          sub_10019B4A0();
          *(_WORD *)(v69 + 12) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v111 = sub_10007C26C(v49, v50, aBlock);
          sub_10019B4A0();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v66, v67, "Retry: attempt retry:%lu\nRetry: attempt sigID:%s", (uint8_t *)v69, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_bridgeObjectRelease();
        }

        uint64_t v70 = *(uint64_t *)((char *)v43 + *(int *)(v42 + 36));
        type metadata accessor for AttributionPerfMetrics(0);
        id v71 = objc_allocWithZone((Class)APAttributionUploadStatusListener);
        swift_bridgeObjectRetain();
        NSString v72 = sub_10019B0A0();
        swift_bridgeObjectRelease();
        Class isa = sub_10019AAF0().super.isa;
        Class v74 = sub_10019AAF0().super.isa;
        Class v75 = sub_10019AAF0().super.isa;
        Class v76 = sub_10019AAF0().super.isa;
        id v77 = [v71 initWithIntervalId:v70 reportingStorefront:v72 requestTimestamp:isa daemonStartTime:v74 tokenPayloadDeliveryStartTime:v75 tokenReturnedToClientDate:v76];

        [v77 requestBuildingStartedWithTimestamp:v98];
        int32x4_t v78 = (void *)swift_allocObject();
        uint64_t v79 = v103;
        v78[2] = v77;
        v78[3] = v79;
        uint64_t v80 = v108;
        v78[4] = v107;
        v78[5] = v80;
        uint64_t v81 = self;
        swift_retain();
        id v82 = v77;
        id v83 = [v81 sharedAPNetworkClient];
        swift_bridgeObjectRetain();
        NSString v84 = sub_10019B0A0();
        swift_bridgeObjectRelease();
        id v85 = [v83 temporarySessionForClient:v84];

        id v86 = (char *)v43 + *(int *)(v42 + 24);
        uint64_t v87 = v42;
        uint64_t v88 = (uint64_t)v101;
        (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v101, v86, v100);
        uint64_t v89 = *(uint64_t *)((char *)v43 + *(int *)(v87 + 32));
        uint64_t v90 = *v43;
        uint64_t v91 = v43[1];
        unint64_t v92 = v43[2];
        objc_allocWithZone((Class)APHTTPRequest);
        swift_bridgeObjectRetain();
        sub_1000802BC(v91, v92);
        swift_retain();
        id v94 = sub_10007C080(v88, v89, v90, v91, v92, 0, (uint64_t)sub_100080248, v93, (uint64_t)v78);
        sub_1000802D0(v94);
        [v82 requestIsAboutToBeSent];
        id v95 = [v85 sendRequest:v94];

        swift_release();
        sub_10007FFE4((uint64_t)v43, type metadata accessor for AttributionNetworkRequestData);
        uint64_t v31 = (uint64_t)v96;
        return sub_1000808B4(v31, &qword_100284320);
      }
      swift_bridgeObjectRelease();
    }
    sub_10007FF7C((uint64_t)v43, (uint64_t)v45, type metadata accessor for AttributionNetworkRequestData);
    uint64_t v51 = *v45;
    if (!*v45)
    {
LABEL_19:
      uint64_t v49 = 0;
      unint64_t v50 = 0xE000000000000000;
      goto LABEL_20;
    }
    goto LABEL_16;
  }
  uint64_t v103 = v26;
  sub_1000801A0((uint64_t)v21, (uint64_t)v25, type metadata accessor for AttributionRetryWorker.OriginalRequest);
  uint64_t v32 = *(uint64_t *)((char *)v25 + *(int *)(v22 + 24) + (uint64_t)*(int *)(v9 + 36));
  type metadata accessor for AttributionPerfMetrics(0);
  id v33 = objc_allocWithZone((Class)APAttributionUploadStatusListener);
  swift_bridgeObjectRetain();
  NSString v34 = sub_10019B0A0();
  swift_bridgeObjectRelease();
  Class v35 = sub_10019AAF0().super.isa;
  Class v36 = sub_10019AAF0().super.isa;
  Class v37 = sub_10019AAF0().super.isa;
  Class v38 = sub_10019AAF0().super.isa;
  id v39 = [v33 initWithIntervalId:v32 reportingStorefront:v34 requestTimestamp:v35 daemonStartTime:v36 tokenPayloadDeliveryStartTime:v37 tokenReturnedToClientDate:v38];

  uint64_t v40 = (uint64_t (*)())[v25[1] completionHandler];
  if (v40)
  {
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = v40;
    uint64_t v40 = sub_100080634;
  }
  else
  {
    uint64_t v41 = 0;
  }
  uint64_t v52 = v107;
  uint64_t v53 = v108;
  id v54 = v25[1];
  uint64_t v55 = (void *)swift_allocObject();
  uint64_t v56 = v103;
  v55[2] = v39;
  v55[3] = v56;
  v55[4] = v52;
  v55[5] = v53;
  v55[6] = v40;
  v55[7] = v41;
  aBlock[4] = (uint64_t)sub_1000805B4;
  aBlock[5] = (uint64_t)v55;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10007BD10;
  aBlock[3] = (uint64_t)&unk_1002347A8;
  uint64_t v57 = _Block_copy(aBlock);
  id v58 = v54;
  id v59 = v39;
  swift_retain();
  sub_1000805DC((uint64_t)v40);
  swift_release();
  [v58 setCompletionHandler:v57];
  _Block_release(v57);

  id v60 = v25[1];
  sub_1000802D0(v60);

  [v59 requestIsAboutToBeSent];
  sub_1000805EC((uint64_t)v40);

  return sub_10007FFE4((uint64_t)v25, type metadata accessor for AttributionRetryWorker.OriginalRequest);
}

uint64_t sub_10007BC48(void *a1, id a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, void (*a6)(void *))
{
  [a2 receivedResponse:a1 retryCount:a3];
  uint64_t result = sub_100078410(a1, a2, a3, a4, a5);
  if (a6)
  {
    swift_retain();
    a6(a1);
    return sub_1000805EC((uint64_t)a6);
  }
  return result;
}

void sub_10007BD10(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_10007BD78(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000C440(&qword_100284320);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a1(v7);
  if (v11 >> 60 == 15)
  {
    sub_10019B3B0();
    sub_100080160();
    uint64_t v12 = (void *)sub_10019B470();
    sub_10019AF50();
  }
  else
  {
    uint64_t v13 = v10;
    unint64_t v14 = v11;
    uint64_t v15 = type metadata accessor for AttributionNetworkRequestData(0);
    sub_10007FE78(&qword_100284338, (void (*)(uint64_t))type metadata accessor for AttributionNetworkRequestData);
    sub_10019AF40();
    if (v3)
    {
      swift_errorRelease();
      sub_10007FF14(v13, v14);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 1, 1, v15);
    }
    else
    {
      sub_10007FF14(v13, v14);
    }
    sub_100080978((uint64_t)v9, a3, &qword_100284320);
  }
}

uint64_t sub_10007BF80()
{
  sub_1000808B4(v0 + OBJC_IVAR____TtC11Attribution22AttributionRetryWorker_originalRequest, &qword_100284328);

  return swift_deallocClassInstance();
}

uint64_t sub_10007BFF0(uint64_t a1)
{
  type metadata accessor for AttributionRetryWorker(0);
  uint64_t v2 = swift_allocObject();
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0(a1);
  uint64_t v3 = v2 + OBJC_IVAR____TtC11Attribution22AttributionRetryWorker_originalRequest;
  uint64_t v4 = type metadata accessor for AttributionRetryWorker.OriginalRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  return v2;
}

id sub_10007C080@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X7>, NSURL *a8@<X8>, uint64_t a9)
{
  uint64_t v10 = v9;
  sub_10019AA00(a8);
  uint64_t v19 = v18;
  if (a3)
  {
    v20.super.Class isa = sub_10019B020().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v20.super.Class isa = 0;
  }
  if (a5 >> 60 == 15)
  {
    Class isa = 0;
    uint64_t v22 = v10;
    if (a6) {
      goto LABEL_6;
    }
LABEL_9:
    NSString v23 = 0;
    if (a7) {
      goto LABEL_7;
    }
LABEL_10:
    uint64_t v24 = 0;
    goto LABEL_11;
  }
  Class isa = sub_10019AA80().super.isa;
  sub_10007FF14(a4, a5);
  uint64_t v22 = v10;
  if (!a6) {
    goto LABEL_9;
  }
LABEL_6:
  NSString v23 = sub_10019B0A0();
  swift_bridgeObjectRelease();
  if (!a7) {
    goto LABEL_10;
  }
LABEL_7:
  aBlock[4] = a7;
  aBlock[5] = a9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007BD10;
  aBlock[3] = &unk_1002347F8;
  uint64_t v24 = _Block_copy(aBlock);
  swift_release();
LABEL_11:
  id v25 = [v22 initWithURL:v19 HTTPMethod:a2 HTTPHeaders:v20.super.isa HTTPBody:isa serviceName:v23 completionHandler:v24];
  _Block_release(v24);

  uint64_t v26 = sub_10019AA70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(a1, v26);
  return v25;
}

uint64_t sub_10007C26C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_10007C340(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_100076430((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_100076430((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v12);
  return v7;
}

uint64_t sub_10007C340(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_10019B4B0();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_10007C4FC(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_10019B560();
  if (!v8)
  {
    sub_10019B580();
    __break(1u);
LABEL_17:
    uint64_t result = sub_10019B5E0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_10007C4FC(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_10007C594(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_10007C7F0(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_10007C7F0(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_10007C594(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_10007C70C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_10019B540();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_10019B580();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_10019B1A0();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    sub_10019B5E0();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_10019B580();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_10007C70C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_10000C440(&qword_100284330);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  _DWORD v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_10007C774(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_10019B1F0();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = sub_10019B1C0();
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_10007C7F0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000C440(&qword_100284330);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_10019B5E0();
  __break(1u);
  return result;
}

uint64_t sub_10007C940(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C61767265746E69 && a2 == 0xEA00000000006449;
  if (v2 || (sub_10019B720() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000010020CB10 || (sub_10019B720() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010020CB30 || (sub_10019B720() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74536E6F6D656164 && a2 == 0xEF656D6954747261 || (sub_10019B720() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000010020CB50 || (sub_10019B720() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000010020CB70)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_10019B720();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_10007CBCC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73726564616568 && a2 == 0xE700000000000000;
  if (v2 || (sub_10019B720() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 2036625250 && a2 == 0xE400000000000000 || (sub_10019B720() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 6910581 && a2 == 0xE300000000000000 || (sub_10019B720() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6449656C646E7562 && a2 == 0xE800000000000000 || (sub_10019B720() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x646F6874656DLL && a2 == 0xE600000000000000 || (sub_10019B720() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7274654D66726570 && a2 == 0xEB00000000736369)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_10019B720();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_10007CE40(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v39 = a5;
  uint64_t v9 = type metadata accessor for AttributionNetworkRequestData(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = sub_10000C440(&qword_100284348);
  __chkstk_darwin(v12 - 8);
  unint64_t v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007FE78(&qword_100284350, (void (*)(uint64_t))type metadata accessor for AttributionNetworkRequestData);
  uint64_t v15 = sub_10019AF30();
  uint64_t v34 = (uint64_t)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = a3;
  Class v36 = v14;
  uint64_t v37 = v10;
  uint64_t v38 = a4;
  if (v16 >> 60 == 15)
  {
    sub_10019B3B0();
    sub_100080160();
    uint64_t v17 = (void *)sub_10019B470();
    sub_10019AF50();

    return 0;
  }
  unint64_t v20 = v16;
  uint64_t v21 = v15;
  sub_10019AE70();
  uint64_t result = sub_10019AE50();
  if (result)
  {
    uint64_t v22 = type metadata accessor for AttributionRetryWorker(0);
    v40[3] = sub_10000C440(&qword_100284358);
    v40[0] = v22;
    uint64_t v23 = sub_10019AF20();
    v33[1] = v24;
    void v33[2] = v23;
    _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v40);
    v33[0] = v20;
    sub_10007D990(v21, v20);
    uint64_t v25 = (uint64_t)v36;
    sub_10019ADB0();
    uint64_t v26 = sub_10019ADC0();
    uint64_t v18 = 1;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 0, 1, v26);
    uint64_t v27 = v34;
    sub_10007FF7C(v35, v34, type metadata accessor for AttributionNetworkRequestData);
    unint64_t v28 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = a1;
    *(void *)(v29 + 24) = a2;
    sub_1000801A0(v27, v29 + v28, type metadata accessor for AttributionNetworkRequestData);
    id v30 = a1;
    id v31 = a2;
    unint64_t v32 = v33[0];
    sub_10019AE30();
    swift_release();
    sub_10007FF14(v21, v32);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10007FF14(v21, v32);
    sub_1000808B4(v25, &qword_100284348);
    return v18;
  }
  __break(1u);
  return result;
}

uint64_t sub_10007D224(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v57 = a8;
  uint64_t v58 = a5;
  uint64_t v59 = a6;
  uint64_t v16 = type metadata accessor for AttributionNetworkRequestData(0);
  __chkstk_darwin(v16);
  uint64_t v18 = (uint64_t *)((char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = (int *)type metadata accessor for AttributionPerfMetrics(0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v22 = [a1 name];
  if (v22 || (id v22 = [a2 serviceName]) != 0)
  {
    uint64_t v53 = (int *)v16;
    id v54 = a1;
    uint64_t v55 = a3;
    uint64_t v56 = a4;
    uint64_t v49 = a10;
    uint64_t v50 = a11;
    uint64_t v51 = sub_10019B0B0();
    uint64_t v52 = v23;

    uint64_t v24 = &v21[v19[6]];
    uint64_t v25 = a7;
    uint64_t v26 = sub_10019ABA0();
    uint64_t v27 = a2;
    unint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16);
    v28(v24, v57, v26);
    v28(&v21[v19[7]], a9, v26);
    v28(&v21[v19[8]], v49, v26);
    v28(&v21[v19[9]], v50, v26);
    uint64_t v29 = v27;
    uint64_t v30 = v59;
    *(void *)uint64_t v21 = v58;
    *((void *)v21 + 1) = v30;
    *((void *)v21 + 2) = v25;
    swift_bridgeObjectRetain();
    id v31 = [v27 HTTPMethod];
    id v32 = [v29 allHTTPHeaderFields];
    if (v32)
    {
      id v33 = v32;
      uint64_t v34 = sub_10019B040();
    }
    else
    {
      uint64_t v34 = 0;
    }
    id v35 = [v29 HTTPBody];
    Class v36 = v54;
    if (v35)
    {
      uint64_t v37 = v35;
      uint64_t v38 = sub_10019AA90();
      unint64_t v40 = v39;
    }
    else
    {
      uint64_t v38 = 0;
      unint64_t v40 = 0xF000000000000000;
    }
    id v41 = [v29 URL];
    uint64_t v42 = v53;
    sub_10019AA20();

    sub_10007FF7C((uint64_t)v21, (uint64_t)v18 + v42[9], type metadata accessor for AttributionPerfMetrics);
    *(uint64_t *)((char *)v18 + v42[8]) = (uint64_t)v31;
    *uint64_t v18 = v34;
    v18[1] = v38;
    v18[2] = v40;
    uint64_t v43 = (uint64_t *)((char *)v18 + v42[7]);
    uint64_t v44 = v52;
    *uint64_t v43 = v51;
    v43[1] = v44;
    char v45 = sub_10007CE40(v36, v29, (uint64_t)v18, v55, v56);
    sub_10007FFE4((uint64_t)v18, type metadata accessor for AttributionNetworkRequestData);
    sub_10007FFE4((uint64_t)v21, type metadata accessor for AttributionPerfMetrics);
  }
  else
  {
    NSString v47 = sub_10019B0A0();
    APSimulateCrash();

    char v45 = 0;
  }
  return v45 & 1;
}

uint64_t type metadata accessor for AttributionRetryWorkerBridge()
{
  return self;
}

uint64_t sub_10007D610()
{
  return type metadata accessor for AttributionRetryWorker(0);
}

uint64_t type metadata accessor for AttributionRetryWorker(uint64_t a1)
{
  return sub_10007DA28(a1, (uint64_t *)&unk_100283FF0);
}

void sub_10007D638()
{
  sub_10007D6C8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10007D6C8()
{
  if (!qword_100284000)
  {
    type metadata accessor for AttributionRetryWorker.OriginalRequest(255);
    unint64_t v0 = sub_10019B480();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100284000);
    }
  }
}

uint64_t type metadata accessor for AttributionRetryWorker.OriginalRequest(uint64_t a1)
{
  return sub_10007DA28(a1, qword_100284108);
}

char *sub_10007D740(char *a1, char **a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    char v6 = a2[1];
    *((void *)a1 + 1) = v6;
    uint64_t v7 = *(int *)(a3 + 24);
    int64_t v8 = &a1[v7];
    uint64_t v9 = (uint64_t)a2 + v7;
    *(void *)&a1[v7] = *(char **)((char *)a2 + v7);
    uint64_t v10 = &a1[v7 + 8];
    uint64_t v11 = (uint64_t *)((char *)a2 + v7 + 8);
    unint64_t v12 = *(unint64_t *)((char *)a2 + v7 + 16);
    uint64_t v13 = v5;
    unint64_t v14 = v6;
    swift_bridgeObjectRetain();
    if (v12 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    }
    else
    {
      uint64_t v15 = *v11;
      sub_10007D990(*v11, v12);
      *((void *)v8 + 1) = v15;
      *((void *)v8 + 2) = v12;
    }
    uint64_t v16 = (int *)type metadata accessor for AttributionNetworkRequestData(0);
    uint64_t v17 = v16[6];
    uint64_t v18 = &v8[v17];
    uint64_t v19 = v9 + v17;
    uint64_t v20 = sub_10019AA70();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    uint64_t v21 = v16[7];
    id v22 = &v8[v21];
    uint64_t v23 = (void *)(v9 + v21);
    uint64_t v24 = v23[1];
    *(void *)id v22 = *v23;
    *((void *)v22 + 1) = v24;
    *(void *)&v8[v16[8]] = *(void *)(v9 + v16[8]);
    uint64_t v25 = v16[9];
    uint64_t v26 = &v8[v25];
    uint64_t v27 = v9 + v25;
    *(_OWORD *)uint64_t v26 = *(_OWORD *)(v9 + v25);
    *((void *)v26 + 2) = *(void *)(v9 + v25 + 16);
    unint64_t v28 = (int *)type metadata accessor for AttributionPerfMetrics(0);
    uint64_t v29 = v28[6];
    uint64_t v34 = &v26[v29];
    uint64_t v30 = v27 + v29;
    uint64_t v31 = sub_10019ABA0();
    id v32 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32(v34, v30, v31);
    v32(&v26[v28[7]], v27 + v28[7], v31);
    v32(&v26[v28[8]], v27 + v28[8], v31);
    v32(&v26[v28[9]], v27 + v28[9], v31);
  }
  return a1;
}

uint64_t sub_10007D990(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t type metadata accessor for AttributionNetworkRequestData(uint64_t a1)
{
  return sub_10007DA28(a1, qword_100284240);
}

uint64_t type metadata accessor for AttributionPerfMetrics(uint64_t a1)
{
  return sub_10007DA28(a1, qword_1002841A0);
}

uint64_t sub_10007DA28(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10007DA60(id *a1, uint64_t a2)
{
  int v4 = (char *)a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  unint64_t v5 = *((void *)v4 + 2);
  if (v5 >> 60 != 15) {
    sub_10007DBF0(*((void *)v4 + 1), v5);
  }
  uint64_t v6 = type metadata accessor for AttributionNetworkRequestData(0);
  uint64_t v7 = &v4[*(int *)(v6 + 24)];
  uint64_t v8 = sub_10019AA70();
  (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  uint64_t v9 = &v4[*(int *)(v6 + 36)];
  swift_bridgeObjectRelease();
  uint64_t v10 = (int *)type metadata accessor for AttributionPerfMetrics(0);
  uint64_t v11 = &v9[v10[6]];
  uint64_t v12 = sub_10019ABA0();
  uint64_t v15 = *(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8);
  ((void (*)(void *__return_ptr, char *, uint64_t))v15)((void *)(v12 - 8), v11, v12);
  v15(&v9[v10[7]], v12);
  v15(&v9[v10[8]], v12);
  uint64_t v13 = &v9[v10[9]];

  return ((uint64_t (*)(char *, uint64_t))v15)(v13, v12);
}

uint64_t sub_10007DBF0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

void *sub_10007DC48(void *a1, uint64_t a2, uint64_t a3)
{
  char v3 = *(void **)a2;
  int v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = a2 + v5;
  *(void *)((char *)a1 + v5) = *(void *)(a2 + v5);
  uint64_t v8 = (_OWORD *)((char *)a1 + v5 + 8);
  uint64_t v9 = (uint64_t *)(a2 + v5 + 8);
  unint64_t v10 = *(void *)(a2 + v5 + 16);
  id v11 = v3;
  id v12 = v4;
  swift_bridgeObjectRetain();
  if (v10 >> 60 == 15)
  {
    _OWORD *v8 = *(_OWORD *)v9;
  }
  else
  {
    uint64_t v13 = *v9;
    sub_10007D990(*v9, v10);
    *((void *)v6 + 1) = v13;
    *((void *)v6 + 2) = v10;
  }
  unint64_t v14 = (int *)type metadata accessor for AttributionNetworkRequestData(0);
  uint64_t v15 = v14[6];
  uint64_t v16 = &v6[v15];
  uint64_t v17 = v7 + v15;
  uint64_t v18 = sub_10019AA70();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = v14[7];
  uint64_t v20 = &v6[v19];
  uint64_t v21 = (void *)(v7 + v19);
  uint64_t v22 = v21[1];
  *(void *)uint64_t v20 = *v21;
  *((void *)v20 + 1) = v22;
  *(void *)&v6[v14[8]] = *(void *)(v7 + v14[8]);
  uint64_t v23 = v14[9];
  uint64_t v24 = &v6[v23];
  uint64_t v25 = v7 + v23;
  *(_OWORD *)uint64_t v24 = *(_OWORD *)(v7 + v23);
  *((void *)v24 + 2) = *(void *)(v7 + v23 + 16);
  uint64_t v26 = (int *)type metadata accessor for AttributionPerfMetrics(0);
  uint64_t v27 = v26[6];
  unint64_t v28 = &v24[v27];
  uint64_t v29 = v25 + v27;
  uint64_t v30 = sub_10019ABA0();
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v31(v28, v29, v30);
  v31(&v24[v26[7]], v25 + v26[7], v30);
  v31(&v24[v26[8]], v25 + v26[8], v30);
  v31(&v24[v26[9]], v25 + v26[9], v30);
  return a1;
}

uint64_t sub_10007DE44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  uint64_t v9 = *(void **)(a2 + 8);
  unint64_t v10 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v9;
  id v11 = v9;

  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = (uint64_t *)(v14 + 8);
  unint64_t v16 = *(void *)(v14 + 16);
  if (*(void *)(v13 + 16) >> 60 != 15)
  {
    if (v16 >> 60 != 15)
    {
      uint64_t v18 = *v15;
      sub_10007D990(*v15, *(void *)(v14 + 16));
      uint64_t v19 = *(void *)(v13 + 8);
      unint64_t v20 = *(void *)(v13 + 16);
      *(void *)(v13 + 8) = v18;
      *(void *)(v13 + 16) = v16;
      sub_10007DBF0(v19, v20);
      goto LABEL_8;
    }
    sub_10007E0C4(v13 + 8);
    goto LABEL_6;
  }
  if (v16 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(v13 + 8) = *(_OWORD *)v15;
    goto LABEL_8;
  }
  uint64_t v17 = *v15;
  sub_10007D990(*v15, *(void *)(v14 + 16));
  *(void *)(v13 + 8) = v17;
  *(void *)(v13 + 16) = v16;
LABEL_8:
  uint64_t v21 = (int *)type metadata accessor for AttributionNetworkRequestData(0);
  uint64_t v22 = v21[6];
  uint64_t v23 = v13 + v22;
  uint64_t v24 = v14 + v22;
  uint64_t v25 = sub_10019AA70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 24))(v23, v24, v25);
  uint64_t v26 = v21[7];
  uint64_t v27 = (void *)(v13 + v26);
  unint64_t v28 = (void *)(v14 + v26);
  *uint64_t v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v13 + v21[8]) = *(void *)(v14 + v21[8]);
  uint64_t v29 = v21[9];
  uint64_t v30 = (char *)(v13 + v29);
  uint64_t v31 = (char *)(v14 + v29);
  *(void *)uint64_t v30 = *(void *)v31;
  *((void *)v30 + 1) = *((void *)v31 + 1);
  *((void *)v30 + 2) = *((void *)v31 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v32 = (int *)type metadata accessor for AttributionPerfMetrics(0);
  uint64_t v33 = v32[6];
  uint64_t v34 = &v30[v33];
  id v35 = &v31[v33];
  uint64_t v36 = sub_10019ABA0();
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 24);
  v37(v34, v35, v36);
  v37(&v30[v32[7]], &v31[v32[7]], v36);
  v37(&v30[v32[8]], &v31[v32[8]], v36);
  v37(&v30[v32[9]], &v31[v32[9]], v36);
  return a1;
}

uint64_t sub_10007E0C4(uint64_t a1)
{
  return a1;
}

_OWORD *sub_10007E118(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  *(void *)uint64_t v5 = *(void *)((char *)a2 + v4);
  *(_OWORD *)(v5 + 8) = *(_OWORD *)((char *)a2 + v4 + 8);
  uint64_t v7 = (int *)type metadata accessor for AttributionNetworkRequestData(0);
  uint64_t v8 = v7[6];
  uint64_t v9 = &v5[v8];
  unint64_t v10 = &v6[v8];
  uint64_t v11 = sub_10019AA70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  *(_OWORD *)&v5[v7[7]] = *(_OWORD *)&v6[v7[7]];
  *(void *)&v5[v7[8]] = *(void *)&v6[v7[8]];
  uint64_t v12 = v7[9];
  uint64_t v13 = &v5[v12];
  uint64_t v14 = &v6[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *(_OWORD *)(v13 + 8) = *(_OWORD *)(v14 + 8);
  uint64_t v15 = (int *)type metadata accessor for AttributionPerfMetrics(0);
  uint64_t v16 = v15[6];
  uint64_t v17 = &v13[v16];
  uint64_t v18 = &v14[v16];
  uint64_t v19 = sub_10019ABA0();
  unint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32);
  v20(v17, v18, v19);
  v20(&v13[v15[7]], &v14[v15[7]], v19);
  v20(&v13[v15[8]], &v14[v15[8]], v19);
  v20(&v13[v15[9]], &v14[v15[9]], v19);
  return a1;
}

uint64_t sub_10007E2B4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = a2[1];

  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  unint64_t v10 = (char *)a2 + v8;
  *(void *)(a1 + v8) = *(void *)((char *)a2 + v8);
  swift_bridgeObjectRelease();
  uint64_t v11 = v10 + 8;
  unint64_t v12 = *(void *)(v9 + 16);
  if (v12 >> 60 != 15)
  {
    unint64_t v13 = *((void *)v10 + 2);
    if (v13 >> 60 != 15)
    {
      uint64_t v14 = *(void *)(v9 + 8);
      *(void *)(v9 + 8) = *v11;
      *(void *)(v9 + 16) = v13;
      sub_10007DBF0(v14, v12);
      goto LABEL_6;
    }
    sub_10007E0C4(v9 + 8);
  }
  *(_OWORD *)(v9 + 8) = *(_OWORD *)v11;
LABEL_6:
  uint64_t v15 = (int *)type metadata accessor for AttributionNetworkRequestData(0);
  uint64_t v16 = v15[6];
  uint64_t v17 = v9 + v16;
  uint64_t v18 = &v10[v16];
  uint64_t v19 = sub_10019AA70();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  uint64_t v20 = v15[7];
  uint64_t v21 = (void *)(v9 + v20);
  uint64_t v22 = &v10[v20];
  uint64_t v24 = *(void *)v22;
  uint64_t v23 = *((void *)v22 + 1);
  *uint64_t v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  *(void *)(v9 + v15[8]) = *(void *)&v10[v15[8]];
  uint64_t v25 = v15[9];
  uint64_t v26 = v9 + v25;
  uint64_t v27 = &v10[v25];
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *(void *)(v26 + 16) = *((void *)v27 + 2);
  swift_bridgeObjectRelease();
  unint64_t v28 = (int *)type metadata accessor for AttributionPerfMetrics(0);
  uint64_t v29 = v28[6];
  uint64_t v30 = v26 + v29;
  uint64_t v31 = &v27[v29];
  uint64_t v32 = sub_10019ABA0();
  uint64_t v33 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v32 - 8) + 40);
  v33(v30, v31, v32);
  v33(v26 + v28[7], &v27[v28[7]], v32);
  v33(v26 + v28[8], &v27[v28[8]], v32);
  v33(v26 + v28[9], &v27[v28[9]], v32);
  return a1;
}

uint64_t sub_10007E4D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007E4E8);
}

uint64_t sub_10007E4E8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for AttributionNetworkRequestData(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10007E598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007E5AC);
}

void *sub_10007E5AC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for AttributionNetworkRequestData(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10007E654()
{
  uint64_t result = type metadata accessor for AttributionNetworkRequestData(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10007E6F0(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    uint64_t v7 = a3[6];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_10019ABA0();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    v11((char *)v4 + a3[7], (char *)a2 + a3[7], v10);
    v11((char *)v4 + a3[8], (char *)a2 + a3[8], v10);
    v11((char *)v4 + a3[9], (char *)a2 + a3[9], v10);
  }
  return v4;
}

uint64_t sub_10007E844(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_10019ABA0();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  v8(a1 + a2[7], v5);
  v8(a1 + a2[8], v5);
  uint64_t v6 = a1 + a2[9];

  return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v5);
}

uint64_t sub_10007E92C(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_10019ABA0();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v10(a1 + a3[7], a2 + a3[7], v9);
  v10(a1 + a3[8], a2 + a3[8], v9);
  v10(a1 + a3[9], a2 + a3[9], v9);
  return a1;
}

char *sub_10007EA30(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_10019ABA0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  v10(&a1[a3[8]], &a2[a3[8]], v9);
  v10(&a1[a3[9]], &a2[a3[9]], v9);
  return a1;
}

uint64_t sub_10007EB3C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_10019ABA0();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(a1 + a3[7], a2 + a3[7], v9);
  v10(a1 + a3[8], a2 + a3[8], v9);
  v10(a1 + a3[9], a2 + a3[9], v9);
  return a1;
}

uint64_t sub_10007EC30(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_10019ABA0();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v10(a1 + a3[7], a2 + a3[7], v9);
  v10(a1 + a3[8], a2 + a3[8], v9);
  v10(a1 + a3[9], a2 + a3[9], v9);
  return a1;
}

uint64_t sub_10007ED2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007ED40);
}

uint64_t sub_10007ED40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10019ABA0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10007EDF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007EE04);
}

uint64_t sub_10007EE04(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10019ABA0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10007EEAC()
{
  uint64_t result = sub_10019ABA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10007EF54(uint64_t a1, void *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2 + 1;
    unint64_t v9 = a2[2];
    swift_bridgeObjectRetain();
    if (v9 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 8) = *v8;
    }
    else
    {
      uint64_t v10 = *(void *)v8;
      sub_10007D990(v10, v9);
      *(void *)(a1 + 8) = v10;
      *(void *)(a1 + 16) = v9;
    }
    uint64_t v11 = a3[6];
    uint64_t v12 = a1 + v11;
    unint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_10019AA70();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    uint64_t v15 = a3[7];
    uint64_t v16 = a3[8];
    uint64_t v17 = (void *)(a1 + v15);
    uint64_t v18 = (void *)((char *)a2 + v15);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    *(void *)(a1 + v16) = *(void *)((char *)a2 + v16);
    uint64_t v20 = a3[9];
    uint64_t v21 = a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    *(_OWORD *)uint64_t v21 = *(_OWORD *)((char *)a2 + v20);
    *(void *)(v21 + 16) = *(void *)((char *)a2 + v20 + 16);
    uint64_t v23 = (int *)type metadata accessor for AttributionPerfMetrics(0);
    uint64_t v24 = v23[6];
    uint64_t v29 = v21 + v24;
    uint64_t v25 = &v22[v24];
    uint64_t v26 = sub_10019ABA0();
    uint64_t v27 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v26 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v27(v29, v25, v26);
    v27(v21 + v23[7], &v22[v23[7]], v26);
    v27(v21 + v23[8], &v22[v23[8]], v26);
    v27(v21 + v23[9], &v22[v23[9]], v26);
  }
  return a1;
}

uint64_t sub_10007F174(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  unint64_t v4 = *(void *)(a1 + 16);
  if (v4 >> 60 != 15) {
    sub_10007DBF0(*(void *)(a1 + 8), v4);
  }
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = sub_10019AA70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 36);
  swift_bridgeObjectRelease();
  uint64_t v8 = (int *)type metadata accessor for AttributionPerfMetrics(0);
  uint64_t v9 = v7 + v8[6];
  uint64_t v10 = sub_10019ABA0();
  unint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v13)((void *)(v10 - 8), v9, v10);
  v13(v7 + v8[7], v10);
  v13(v7 + v8[8], v10);
  uint64_t v11 = v7 + v8[9];

  return ((uint64_t (*)(uint64_t, uint64_t))v13)(v11, v10);
}

uint64_t sub_10007F2E0(uint64_t a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  uint64_t v6 = a2 + 1;
  unint64_t v7 = a2[2];
  swift_bridgeObjectRetain();
  if (v7 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)v6;
  }
  else
  {
    uint64_t v8 = *v6;
    sub_10007D990(*v6, v7);
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v7;
  }
  uint64_t v9 = a3[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_10019AA70();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)(a1 + v13);
  uint64_t v16 = (void *)((char *)a2 + v13);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  *(void *)(a1 + v14) = *(void *)((char *)a2 + v14);
  uint64_t v18 = a3[9];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  *(_OWORD *)uint64_t v19 = *(_OWORD *)((char *)a2 + v18);
  *(void *)(v19 + 16) = *(void *)((char *)a2 + v18 + 16);
  uint64_t v21 = (int *)type metadata accessor for AttributionPerfMetrics(0);
  uint64_t v22 = v21[6];
  uint64_t v27 = v19 + v22;
  uint64_t v23 = &v20[v22];
  uint64_t v24 = sub_10019ABA0();
  uint64_t v25 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v25(v27, v23, v24);
  v25(v19 + v21[7], &v20[v21[7]], v24);
  v25(v19 + v21[8], &v20[v21[8]], v24);
  v25(v19 + v21[9], &v20[v21[9]], v24);
  return a1;
}

void *sub_10007F4B8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a2 + 1;
  unint64_t v7 = a2[2];
  if (a1[2] >> 60 != 15)
  {
    if (v7 >> 60 != 15)
    {
      uint64_t v9 = *v6;
      sub_10007D990(*v6, a2[2]);
      uint64_t v10 = a1[1];
      unint64_t v11 = a1[2];
      a1[1] = v9;
      a1[2] = v7;
      sub_10007DBF0(v10, v11);
      goto LABEL_8;
    }
    sub_10007E0C4((uint64_t)(a1 + 1));
    goto LABEL_6;
  }
  if (v7 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 1) = *(_OWORD *)v6;
    goto LABEL_8;
  }
  uint64_t v8 = *v6;
  sub_10007D990(*v6, a2[2]);
  a1[1] = v8;
  a1[2] = v7;
LABEL_8:
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_10019AA70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  uint64_t v19 = a3[9];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  *(void *)uint64_t v20 = *(void *)((char *)a2 + v19);
  *((void *)v20 + 1) = *(void *)((char *)a2 + v19 + 8);
  *((void *)v20 + 2) = *(void *)((char *)a2 + v19 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = (int *)type metadata accessor for AttributionPerfMetrics(0);
  uint64_t v23 = v22[6];
  uint64_t v24 = &v20[v23];
  uint64_t v25 = &v21[v23];
  uint64_t v26 = sub_10019ABA0();
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 24);
  v27(v24, v25, v26);
  v27(&v20[v22[7]], &v21[v22[7]], v26);
  v27(&v20[v22[8]], &v21[v22[8]], v26);
  v27(&v20[v22[9]], &v21[v22[9]], v26);
  return a1;
}

uint64_t sub_10007F6F8(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_10019AA70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(void *)(a1 + v10) = *(void *)(a2 + v10);
  uint64_t v11 = a3[9];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(_OWORD *)(v12 + 8) = *(_OWORD *)(a2 + v11 + 8);
  uint64_t v14 = (int *)type metadata accessor for AttributionPerfMetrics(0);
  uint64_t v15 = v14[6];
  uint64_t v16 = v12 + v15;
  uint64_t v17 = v13 + v15;
  uint64_t v18 = sub_10019ABA0();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32);
  v19(v16, v17, v18);
  v19(v12 + v14[7], v13 + v14[7], v18);
  v19(v12 + v14[8], v13 + v14[8], v18);
  v19(v12 + v14[9], v13 + v14[9], v18);
  return a1;
}

void *sub_10007F878(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2 + 1;
  unint64_t v7 = a1[2];
  if (v7 >> 60 != 15)
  {
    unint64_t v8 = a2[2];
    if (v8 >> 60 != 15)
    {
      uint64_t v9 = a1[1];
      a1[1] = *v6;
      a1[2] = v8;
      sub_10007DBF0(v9, v7);
      goto LABEL_6;
    }
    sub_10007E0C4((uint64_t)(a1 + 1));
  }
  *(_OWORD *)(a1 + 1) = *(_OWORD *)v6;
LABEL_6:
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_10019AA70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *uint64_t v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)((char *)a2 + v19);
  *((void *)v20 + 2) = *(void *)((char *)a2 + v19 + 16);
  swift_bridgeObjectRelease();
  uint64_t v22 = (int *)type metadata accessor for AttributionPerfMetrics(0);
  uint64_t v23 = v22[6];
  uint64_t v24 = &v20[v23];
  uint64_t v25 = &v21[v23];
  uint64_t v26 = sub_10019ABA0();
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 40);
  v27(v24, v25, v26);
  v27(&v20[v22[7]], &v21[v22[7]], v26);
  v27(&v20[v22[8]], &v21[v22[8]], v26);
  v27(&v20[v22[9]], &v21[v22[9]], v26);
  return a1;
}

uint64_t sub_10007FA5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007FA70);
}

uint64_t sub_10007FA70(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10019AA70();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + a3[6];
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v12 = *(void *)(a1 + a3[7] + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
  else
  {
    uint64_t v13 = type metadata accessor for AttributionPerfMetrics(0);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a3[9];
    return v14(v16, a2, v15);
  }
}

uint64_t sub_10007FBA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007FBB8);
}

uint64_t sub_10007FBB8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_10019AA70();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + a4[6];
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[7] + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v13 = type metadata accessor for AttributionPerfMetrics(0);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a4[9];
    return v14(v16, a2, a2, v15);
  }
  return result;
}

uint64_t sub_10007FCEC()
{
  uint64_t result = sub_10019AA70();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for AttributionPerfMetrics(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *sub_10007FDE0(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_10007FE24()
{
  unint64_t result = qword_100284290;
  if (!qword_100284290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100284290);
  }
  return result;
}

uint64_t sub_10007FE78(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10007FEC0()
{
  unint64_t result = qword_1002842B8;
  if (!qword_1002842B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002842B8);
  }
  return result;
}

uint64_t sub_10007FF14(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_10007DBF0(a1, a2);
  }
  return a1;
}

unint64_t sub_10007FF28()
{
  unint64_t result = qword_1002842D0;
  if (!qword_1002842D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002842D0);
  }
  return result;
}

uint64_t sub_10007FF7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10007FFE4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100080044(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000788B8(&qword_1002842C0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000800A8()
{
  unint64_t result = qword_100284300;
  if (!qword_100284300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100284300);
  }
  return result;
}

uint64_t sub_1000800FC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10000C440(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_100080160()
{
  unint64_t result = qword_100284870;
  if (!qword_100284870)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100284870);
  }
  return result;
}

uint64_t sub_1000801A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100080208()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100080248(void *a1)
{
  uint64_t v3 = (void *)v1[2];
  uint64_t v4 = v1[3];
  uint64_t v6 = (void (*)(uint64_t *))v1[4];
  uint64_t v5 = v1[5];
  [v3 receivedResponse:a1 retryCount:v4];

  return sub_100078410(a1, v3, v4, v6, v5);
}

uint64_t sub_1000802BC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_10007D990(a1, a2);
  }
  return a1;
}

void sub_1000802D0(void *a1)
{
  if ([self isAppleInternalInstall])
  {
    id v2 = objc_allocWithZone((Class)NSUserDefaults);
    NSString v3 = sub_10019B0A0();
    id v4 = [v2 initWithSuiteName:v3];

    if (v4)
    {
      id v5 = v4;
      NSString v6 = sub_10019B0A0();
      id v7 = [v5 stringForKey:v6];

      if (v7)
      {
        uint64_t v8 = sub_10019B0B0();
        unint64_t v10 = v9;

        uint64_t v11 = HIBYTE(v10) & 0xF;
        if ((v10 & 0x2000000000000000) == 0) {
          uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
        }
        if (v11)
        {
          NSString v12 = sub_10019B0A0();
          NSString v13 = sub_10019B0A0();
          swift_bridgeObjectRelease();
          [a1 setRequestHeader:v12 withValue:v13];
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      id v22 = v5;
      NSString v14 = sub_10019B0A0();
      id v15 = [v22 stringForKey:v14];

      if (v15)
      {
        uint64_t v16 = sub_10019B0B0();
        unint64_t v18 = v17;

        uint64_t v19 = HIBYTE(v18) & 0xF;
        if ((v18 & 0x2000000000000000) == 0) {
          uint64_t v19 = v16 & 0xFFFFFFFFFFFFLL;
        }
        if (v19)
        {
          NSString v20 = sub_10019B0A0();
          NSString v21 = sub_10019B0A0();
          swift_bridgeObjectRelease();
          [a1 setRequestHeader:v20 withValue:v21];
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
    }
  }
}

uint64_t sub_100080564()
{
  swift_release();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1000805B4(void *a1)
{
  return sub_10007BC48(a1, *(id *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(uint64_t *))(v1 + 32), *(void *)(v1 + 40), *(void (**)(void *))(v1 + 48));
}

uint64_t sub_1000805C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000805D4()
{
  return swift_release();
}

uint64_t sub_1000805DC(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1000805EC(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1000805FC()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100080634()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_100080648()
{
  uint64_t v1 = type metadata accessor for AttributionNetworkRequestData(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);

  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  unint64_t v6 = *(void *)(v0 + v3 + 16);
  if (v6 >> 60 != 15) {
    sub_10007DBF0(*(void *)(v5 + 8), v6);
  }
  uint64_t v7 = v3 + v4;
  uint64_t v8 = v5 + *(int *)(v1 + 24);
  uint64_t v9 = sub_10019AA70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  uint64_t v10 = v5 + *(int *)(v1 + 36);
  swift_bridgeObjectRelease();
  uint64_t v11 = (int *)type metadata accessor for AttributionPerfMetrics(0);
  uint64_t v12 = v10 + v11[6];
  uint64_t v13 = sub_10019ABA0();
  NSString v14 = *(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
  v14(v12, v13);
  v14(v10 + v11[7], v13);
  v14(v10 + v11[8], v13);
  v14(v10 + v11[9], v13);

  return _swift_deallocObject(v0, v7, v2 | 7);
}

void sub_100080830(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for AttributionNetworkRequestData(0) - 8);
  unint64_t v6 = *(void **)(v2 + 16);
  uint64_t v7 = *(void **)(v2 + 24);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_10007ADCC(a1, a2, v6, v7, v8);
}

uint64_t sub_1000808B4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10000C440(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100080910(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000C440(&qword_100284328);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100080978(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10000C440(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

ValueMetadata *type metadata accessor for AttributionNetworkRequestData.CodingKeys()
{
  return &type metadata for AttributionNetworkRequestData.CodingKeys;
}

uint64_t _s11Attribution29AttributionNetworkRequestDataV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s11Attribution29AttributionNetworkRequestDataV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100080B50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

unsigned char *sub_100080B78(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for AttributionPerfMetrics.CodingKeys()
{
  return &type metadata for AttributionPerfMetrics.CodingKeys;
}

unint64_t sub_100080B94()
{
  unint64_t result = qword_100284360;
  if (!qword_100284360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100284360);
  }
  return result;
}

unint64_t sub_100080BEC()
{
  unint64_t result = qword_100284368;
  if (!qword_100284368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100284368);
  }
  return result;
}

unint64_t sub_100080C44()
{
  unint64_t result = qword_100284370;
  if (!qword_100284370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100284370);
  }
  return result;
}

unint64_t sub_100080C9C()
{
  unint64_t result = qword_100284378;
  if (!qword_100284378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100284378);
  }
  return result;
}

unint64_t sub_100080CF4()
{
  unint64_t result = qword_100284380;
  if (!qword_100284380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100284380);
  }
  return result;
}

unint64_t sub_100080D4C()
{
  unint64_t result = qword_100284388;
  if (!qword_100284388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100284388);
  }
  return result;
}

void sub_100080E0C(id a1)
{
  uint64_t v1 = (void *)qword_1002896D8;
  qword_1002896D8 = @"adprivacyd";
}

void sub_100080E78(id a1)
{
  uint64_t v1 = (void *)qword_1002896E8;
  qword_1002896E8 = @"1";
}

void sub_100080EE4(id a1)
{
  id v4 = +[APAMSBagManager bagSubProfile];
  uint64_t v1 = +[APAMSBagManager bagSubProfileVersion];
  uint64_t v2 = +[AMSBag bagForProfile:v4 profileVersion:v1];
  int v3 = (void *)qword_1002896F8;
  qword_1002896F8 = v2;
}

void sub_10008122C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100081258(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  if (a2)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [a2 BOOLValue];
  }
  else
  {
    unsigned int v6 = APLogForCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138478083;
      id v9 = (id)objc_opt_class();
      __int16 v10 = 2114;
      id v11 = v5;
      id v7 = v9;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%{private}@: Unable to get the 'isSearchLandingAdsEnabled' status from the bag. Error: %{public}@", (uint8_t *)&v8, 0x16u);
    }
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100081570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10008159C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  if (a2)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [a2 BOOLValue];
  }
  else
  {
    unsigned int v6 = APLogForCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138478083;
      id v9 = (id)objc_opt_class();
      __int16 v10 = 2114;
      id v11 = v5;
      id v7 = v9;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%{private}@: Unable to get the 'isSponsoredAdsEnabledForAdTrackingd' status from the bag. Error: %{public}@", (uint8_t *)&v8, 0x16u);
    }
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1000818B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000818DC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  if (a2)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [a2 BOOLValue];
  }
  else
  {
    unsigned int v6 = APLogForCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = 138412546;
      id v9 = (id)objc_opt_class();
      __int16 v10 = 2112;
      id v11 = v5;
      id v7 = v9;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%@: Unable to get the 'useAMSMescal' key from the bag. Error: %@", (uint8_t *)&v8, 0x16u);
    }
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100081AAC(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a4;
  id v7 = v6;
  if (!a2 || v6)
  {
    id v9 = APLogForCategory();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = 138412546;
      id v12 = (id)objc_opt_class();
      __int16 v13 = 2112;
      NSString v14 = v7;
      id v10 = v12;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "%@: Unable to get the 'useAMSMescal' key from the bag. Error: %@", (uint8_t *)&v11, 0x16u);
    }
    uint64_t v8 = 1;
  }
  else
  {
    uint64_t v8 = (uint64_t)[a2 BOOLValue];
  }
  (*(void (**)(void, uint64_t, void *))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), v8, v7);
}

void sub_100081C88(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a4;
  id v7 = v6;
  if (a2 && !v6) {
    [a2 BOOLValue];
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100081DCC(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a4;
  id v7 = v6;
  if (a2 && !v6) {
    [a2 integerValue];
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100081F10(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a4;
  id v7 = v6;
  if (a2 && !v6) {
    [a2 integerValue];
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100082054(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a4;
  v7.n128_u64[0] = 0;
  id v8 = v6;
  if (a2 && !v6) {
    [a2 doubleValue];
  }
  (*(void (**)(__n128))(*(void *)(a1 + 32) + 16))(v7);
}

void sub_100082194(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a4;
  id v7 = v6;
  if (a2 && !v6) {
    [a2 integerValue];
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100082260(id a1)
{
  qword_100289700 = objc_alloc_init(APDeviceInfo);

  _objc_release_x1();
}

void sub_1000823E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100082408(uint64_t a1)
{
  uint64_t v2 = APLogForCategory();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Updating Personalized Ads value.", v4, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _retrievePersonalizedAdsValue];
}

uint64_t sub_1000829BC(uint64_t a1)
{
  *(void *)(*(void *)(a1 + 32) + 40) = objc_alloc_init((Class)APUnfairRecursiveLock);

  return _objc_release_x1();
}

id sub_100082C00(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) _updateNetwork:a2];
}

__CFString *_statusToString(uint64_t a1)
{
  if (!a1)
  {
    uint64_t v2 = @"None ";
    goto LABEL_11;
  }
  char v1 = a1;
  if ((a1 & 2) != 0)
  {
    uint64_t v2 = [&stru_1002392C0 stringByAppendingString:@"Wifi "];
    if ((v1 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = &stru_1002392C0;
  if ((a1 & 4) != 0)
  {
LABEL_7:
    uint64_t v3 = [(__CFString *)v2 stringByAppendingString:@"Cellular "];

    uint64_t v2 = (__CFString *)v3;
  }
LABEL_8:
  if ((v1 & 8) == 0)
  {
    if ((v1 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  uint64_t v6 = [(__CFString *)v2 stringByAppendingString:@"Expensive "];

  uint64_t v2 = (__CFString *)v6;
  if ((v1 & 0x10) != 0)
  {
LABEL_10:
    uint64_t v4 = [(__CFString *)v2 stringByAppendingString:@"Constrained"];

    uint64_t v2 = (__CFString *)v4;
  }
LABEL_11:

  return v2;
}

void sub_100083214(id a1)
{
  qword_100289718 = objc_alloc_init(APTelephony);

  _objc_release_x1();
}

id sub_100083484(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _deviceLockStateChanged];
}

void sub_1000836C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000836E4(id *a1)
{
  id v2 = objc_alloc((Class)CoreTelephonyClient);
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  uint64_t v4 = [WeakRetained queue];
  id v5 = [v2 initWithQueue:v4];
  id v6 = objc_loadWeakRetained(a1);
  [v6 setCtClient:v5];

  id v8 = objc_loadWeakRetained(a1);
  id v7 = [v8 ctClient];
  [v7 setDelegate:v8];
}

void sub_100083958(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_100083974(uint64_t a1)
{
  char v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained updateTelephonyProperties];

  id v3 = objc_loadWeakRetained(v1);
  [v3 setNetworkInfoUpdatingInProgress:0];
}

void sub_100083AC8(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_100083ADC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = [*(id *)(a1 + 32) maxDisplayBars];
  [v3 doubleValue];
  double v5 = v4;

  id v6 = [*(id *)(a1 + 32) bars];
  [v6 doubleValue];
  double v8 = v7;

  id v9 = [WeakRetained lock];
  [v9 lock];
  if (v5 <= 0.0)
  {
    int v11 = APLogForCategory();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      LOWORD(v13) = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "Unable to retrieve CT signal strength because maxBars is 0.", (uint8_t *)&v13, 2u);
    }
  }
  else
  {
    id v10 = +[NSNumber numberWithUnsignedInteger:vcvtad_u64_f64(v8 / v5 * 100.0)];
    [WeakRetained setLatestCellularSignalStrength:v10];

    int v11 = APLogForCategory();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      id v12 = [WeakRetained latestCellularSignalStrength];
      int v13 = 138543362;
      NSString v14 = v12;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "Update latest signal strength to %{public}@.", (uint8_t *)&v13, 0xCu);
    }
  }

  [v9 unlock];
}

void sub_100084090(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_1000840A4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = [WeakRetained lock];
  [WeakRetained setTelephonyError:0];
  id v3 = APLogForCategory();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Updating telephony info", buf, 2u);
  }

  [v2 lock];
  double v4 = [WeakRetained reachability];
  if (([v4 currentStatus] & 4) != 0)
  {
  }
  else
  {
    double v5 = [WeakRetained reachability];
    unsigned __int8 v6 = [v5 currentStatus];

    if ((v6 & 8) == 0)
    {
      double v7 = APLogForCategory();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "APNetworkStatusWWAN is false. We are on WiFi", buf, 2u);
      }
      id v8 = 0;
LABEL_24:

      id v10 = v8;
      goto LABEL_25;
    }
  }
  id v9 = [WeakRetained ctSubscriptionContext];

  if (v9)
  {
    id v10 = 0;
  }
  else
  {
    int v11 = [WeakRetained ctClient];
    id v21 = 0;
    id v12 = [v11 getPreferredDataSubscriptionContextSync:&v21];
    id v10 = v21;
    [WeakRetained setCtSubscriptionContext:v12];

    if (v10)
    {
      int v13 = APLogForCategory();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138543362;
        id v23 = v10;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "There was a problem getting SIM data with error: %{public}@", buf, 0xCu);
      }

      [WeakRetained setTelephonyError:v10];
    }
  }
  NSString v14 = [WeakRetained telephonyError];

  if (!v14)
  {
    id v15 = [WeakRetained ctClient];
    uint64_t v16 = [WeakRetained ctSubscriptionContext];
    id v20 = v10;
    double v7 = [v15 getDataStatus:v16 error:&v20];
    id v8 = v20;

    [WeakRetained setNetworkError:v8];
    if (!v7 || v8)
    {
      unint64_t v17 = APLogForCategory();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        id v23 = v8;
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "Unable to find cell network type due no data or error: %@", buf, 0xCu);
      }
    }
    [WeakRetained setNetworkType:[WeakRetained dataIndicatorToConnectionType:[NSObject indicator](v7, "indicator")]];
    unint64_t v18 = APLogForCategory();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      uint64_t v19 = +[APTelephony connectionTypeToString:](APTelephony, "connectionTypeToString:", [WeakRetained networkType]);
      *(_DWORD *)buf = 138412290;
      id v23 = v19;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "Changing network type to %@", buf, 0xCu);
    }
    goto LABEL_24;
  }
LABEL_25:
  [v2 unlock];
}

id sub_100084764(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _suspendTelephonyAndReachability];
}

id sub_100084C48(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  id v3 = *(void **)(a1 + 32);

  return [v3 invalidate];
}

void sub_10008511C(id a1)
{
  qword_100289730 = objc_alloc_init(APIDAccountProvider);

  _objc_release_x1();
}

void sub_100085324(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100085348(uint64_t a1)
{
  uint64_t v2 = APLogForCategory();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)double v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Reloading ID accounts.", v5, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _loadIDAccounts];

  return [NSClassFromString(@"MetricsModule") rotateIdentifiers];
}

void sub_100086A4C(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  id v3 = APLogForCategory();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    int v4 = 138543362;
    double v5 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Triggering a forceReconcile on adprivacyd. Keychain will be reloaded when notification is received that IDs in keychain have changed. Error: %{public}@.", (uint8_t *)&v4, 0xCu);
  }
}

void sub_100086CCC(id a1)
{
  uint64_t v1 = (void *)qword_100289740;
  qword_100289740 = (uint64_t)&off_10024AC10;
}

BOOL APPBLogAdEventResponseReadFrom(uint64_t a1, uint64_t a2)
{
  while (1)
  {
    int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
      return v3 == 0;
    }
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error))
    {
      int v3 = 1;
      return v3 == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    uint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        LOBYTE(v6) = 0;
        int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LOBYTE(v6) = 0;
    }
LABEL_13:
    if (v3) {
      BOOL v10 = 1;
    }
    else {
      BOOL v10 = (v6 & 7) == 4;
    }
    if (v10) {
      return v3 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

void sub_100087E90(id a1)
{
  uint64_t v1 = (void *)qword_100289750;
  qword_100289750 = (uint64_t)&off_10024AC38;
}

uint64_t APPBCachedAdReadFrom(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (2)
    {
      if (!*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error))
      {
        char v4 = 0;
        unsigned int v5 = 0;
        unint64_t v6 = 0;
        while (1)
        {
          uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v8 = v7 + 1;
          if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
          v6 |= (unint64_t)(v9 & 0x7F) << v4;
          if ((v9 & 0x80) == 0) {
            goto LABEL_11;
          }
          v4 += 7;
          if (v5++ >= 9)
          {
            unint64_t v6 = 0;
            int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
            goto LABEL_13;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          unint64_t v6 = 0;
        }
LABEL_13:
        if (v11) {
          BOOL v12 = 1;
        }
        else {
          BOOL v12 = (v6 & 7) == 4;
        }
        if (!v12)
        {
          switch((v6 >> 3))
          {
            case 1u:
              uint64_t v13 = PBReaderReadString();
              NSString v14 = *(void **)(a1 + 32);
              *(void *)(a1 + 32) = v13;

              goto LABEL_36;
            case 2u:
              *(unsigned char *)(a1 + 40) |= 1u;
              unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
              if (v15 <= 0xFFFFFFFFFFFFFFF7 && v15 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
              {
                uint64_t v16 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
                *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
                uint64_t v16 = 0;
              }
              *(void *)(a1 + 8) = v16;
              goto LABEL_36;
            case 4u:
              *(unsigned char *)(a1 + 40) |= 4u;
              unint64_t v17 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
              if (v17 <= 0xFFFFFFFFFFFFFFFBLL
                && (unint64_t v18 = v17 + 4, v17 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)))
              {
                int v19 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v17);
                *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v18;
              }
              else
              {
                int v19 = 0;
                *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
              }
              *(_DWORD *)(a1 + 24) = v19;
              goto LABEL_36;
            case 5u:
              *(unsigned char *)(a1 + 40) |= 2u;
              unint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
              if (v21 <= 0xFFFFFFFFFFFFFFF7
                && (unint64_t v22 = v21 + 8, v21 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)))
              {
                uint64_t v23 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
                *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v22;
              }
              else
              {
                uint64_t v23 = 0;
                *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
              }
              *(void *)(a1 + 16) = v23;
              goto LABEL_36;
            default:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
LABEL_36:
              if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
                return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
              }
              continue;
          }
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1000898A0(id a1)
{
  uint64_t v1 = (void *)qword_100289760;
  qword_100289760 = (uint64_t)&off_10024AC60;
}

uint64_t APPBConfigurationReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 24;
        goto LABEL_34;
      case 2u:
        char v15 = 0;
        unsigned int v16 = 0;
        uint64_t v17 = 0;
        *(unsigned char *)(a1 + 40) |= 2u;
        while (2)
        {
          uint64_t v18 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v20 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v19;
            v17 |= (unint64_t)(v20 & 0x7F) << v15;
            if (v20 < 0)
            {
              v15 += 7;
              BOOL v10 = v16++ >= 9;
              if (v10)
              {
                LODWORD(v17) = 0;
                goto LABEL_43;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_43:
        *(_DWORD *)(a1 + 32) = v17;
        continue;
      case 3u:
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v23 = 0;
        *(unsigned char *)(a1 + 40) |= 4u;
        break;
      case 4u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 16;
LABEL_34:
        uint64_t v27 = *(void **)(a1 + v14);
        *(void *)(a1 + v14) = v13;

        continue;
      case 7u:
        *(unsigned char *)(a1 + 40) |= 1u;
        unint64_t v29 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v29 <= 0xFFFFFFFFFFFFFFF7 && v29 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v30 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v29);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v29 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v30 = 0;
        }
        *(void *)(a1 + 8) = v30;
        continue;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        continue;
    }
    while (1)
    {
      uint64_t v24 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v24);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v25;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0) {
        goto LABEL_45;
      }
      v21 += 7;
      BOOL v10 = v22++ >= 9;
      if (v10)
      {
        uint64_t v23 = 0;
        goto LABEL_47;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_45:
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      uint64_t v23 = 0;
    }
LABEL_47:
    *(unsigned char *)(a1 + 36) = v23 != 0;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_10008B2B8(uint64_t a1)
{
  [*(id *)(a1 + 32) startTime];
  double v3 = v2;
  char v4 = APLogForCategory();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_INFO);
  if (v3 <= 0.0)
  {
    if (v5)
    {
      uint64_t v12 = *(void *)(a1 + 32);
      *(_DWORD *)char v21 = 134217984;
      *(void *)&v21[4] = v12;
      char v9 = "%p: accumulating first item.";
      BOOL v10 = v4;
      uint32_t v11 = 12;
      goto LABEL_6;
    }
  }
  else if (v5)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    double Current = CFAbsoluteTimeGetCurrent();
    [*(id *)(a1 + 32) startTime];
    *(_DWORD *)char v21 = 134218240;
    *(void *)&v21[4] = v6;
    *(_WORD *)&v21[12] = 2048;
    *(double *)&v21[14] = (Current - v8) * 1000.0;
    char v9 = "%p: accumulating one item after %.0f mS";
    BOOL v10 = v4;
    uint32_t v11 = 22;
LABEL_6:
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, v9, v21, v11);
  }

  uint64_t v13 = [*(id *)(a1 + 32) lock];
  [v13 lock];

  uint64_t v14 = [*(id *)(a1 + 32) items];
  id v15 = [v14 count];

  if (!v15 && [*(id *)(a1 + 32) accumulationTime]) {
    [*(id *)(a1 + 32) _startAccumulationSource];
  }
  unsigned int v16 = [*(id *)(a1 + 32) items:*(void *)&v21[16] count:*(void *)&v21[16]];
  [v16 addObject:*(void *)(a1 + 40)];

  if ([*(id *)(a1 + 32) inactivityTime]) {
    [*(id *)(a1 + 32) _startInactivitySource];
  }
  if ([*(id *)(a1 + 32) itemLimit])
  {
    uint64_t v17 = [*(id *)(a1 + 32) items];
    id v18 = [v17 count];
    id v19 = [*(id *)(a1 + 32) itemLimit];

    if (v18 == v19)
    {
      [*(id *)(a1 + 32) _stopInactivitySource];
      [*(id *)(a1 + 32) _stopAccumulationSource];
      [*(id *)(a1 + 32) _callAccumulationHandlerWithReason:1];
    }
  }
  char v20 = [*(id *)(a1 + 32) lock];
  [v20 unlock];
}

void sub_10008B570(_Unwind_Exception *a1)
{
}

void sub_10008B590(void *a1)
{
}

id sub_10008B888(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _accumulationEventHandler];
}

id sub_10008BB44(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _inactivityEventHandler];
}

void sub_10008C0A8(id a1)
{
  uint64_t v1 = (void *)qword_100289770;
  qword_100289770 = (uint64_t)&off_10024AC88;
}

uint64_t APPBLogSysEventRequestReadFrom(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v13 = objc_alloc_init(APPBLogMetaData);
        objc_storeStrong((id *)(a1 + 40), v13);
        if PBReaderPlaceMark() && (APPBLogMetaDataReadFrom((uint64_t)v13, a2)) {
          goto LABEL_32;
        }
        goto LABEL_57;
      case 2u:
        char v15 = 0;
        unsigned int v16 = 0;
        uint64_t v17 = 0;
        *(unsigned char *)(a1 + 52) |= 2u;
        while (2)
        {
          uint64_t v18 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v20 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v19;
            v17 |= (unint64_t)(v20 & 0x7F) << v15;
            if (v20 < 0)
            {
              v15 += 7;
              BOOL v10 = v16++ >= 9;
              if (v10)
              {
                LODWORD(v17) = 0;
                goto LABEL_47;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_47:
        uint64_t v30 = 32;
        goto LABEL_52;
      case 3u:
        uint64_t v13 = objc_alloc_init(APPBClickLocation);
        objc_storeStrong((id *)(a1 + 24), v13);
        if (PBReaderPlaceMark() && APPBClickLocationReadFrom((uint64_t)v13, a2))
        {
LABEL_32:
          PBReaderRecallMark();

LABEL_55:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_57:

        return 0;
      case 4u:
        *(unsigned char *)(a1 + 52) |= 1u;
        unint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v21 <= 0xFFFFFFFFFFFFFFFBLL && v21 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          int v22 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v21 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          int v22 = 0;
        }
        *(_DWORD *)(a1 + 8) = v22;
        goto LABEL_55;
      case 5u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v23;

        goto LABEL_55;
      case 6u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v17 = 0;
        *(unsigned char *)(a1 + 52) |= 4u;
        while (2)
        {
          uint64_t v27 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v28 = v27 + 1;
          if (v27 == -1 || v28 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v29 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v27);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v28;
            v17 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              BOOL v10 = v26++ >= 9;
              if (v10)
              {
                LODWORD(v17) = 0;
                goto LABEL_51;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_51:
        uint64_t v30 = 48;
LABEL_52:
        *(_DWORD *)(a1 + v30) = v17;
        goto LABEL_55;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_55;
    }
  }
}

uint64_t APPBAdJourneyStartRelayValueReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 0u:
        unsigned int v13 = 0;
        do
        {
          uint64_t v14 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            goto LABEL_58;
          }
          int v16 = *(char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v14);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15;
          if ((v16 & 0x80000000) == 0) {
            break;
          }
        }
        while (v13++ <= 8);
        continue;
      case 1u:
        uint64_t v19 = PBReaderReadString();
        uint64_t v20 = 24;
        goto LABEL_46;
      case 2u:
        [(id)a1 clearOneofValuesForValue];
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v23 = 0;
        *(unsigned char *)(a1 + 52) |= 4u;
        *(_DWORD *)(a1 + 32) = 1;
        *(unsigned char *)(a1 + 52) |= 8u;
        while (2)
        {
          uint64_t v24 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v24);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v25;
            v23 |= (unint64_t)(v26 & 0x7F) << v21;
            if (v26 < 0)
            {
              v21 += 7;
              BOOL v10 = v22++ >= 9;
              if (v10)
              {
                uint64_t v23 = 0;
                goto LABEL_51;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v23 = 0;
        }
LABEL_51:
        *(unsigned char *)(a1 + 48) = v23 != 0;
        continue;
      case 3u:
        [(id)a1 clearOneofValuesForValue];
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        *(unsigned char *)(a1 + 52) |= 4u;
        *(_DWORD *)(a1 + 32) = 2;
        *(unsigned char *)(a1 + 52) |= 2u;
        break;
      case 4u:
        [(id)a1 clearOneofValuesForValue];
        *(unsigned char *)(a1 + 52) |= 4u;
        *(_DWORD *)(a1 + 32) = 3;
        *(unsigned char *)(a1 + 52) |= 1u;
        unint64_t v33 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v33 <= 0xFFFFFFFFFFFFFFF7 && v33 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v34 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v33);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v33 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v34 = 0;
        }
        *(void *)(a1 + 8) = v34;
        continue;
      case 5u:
        [(id)a1 clearOneofValuesForValue];
        *(unsigned char *)(a1 + 52) |= 4u;
        *(_DWORD *)(a1 + 32) = 4;
        uint64_t v19 = PBReaderReadString();
        uint64_t v20 = 40;
LABEL_46:
        id v35 = *(void **)(a1 + v20);
        *(void *)(a1 + v20) = v19;

        continue;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        continue;
    }
    while (1)
    {
      uint64_t v30 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v31 = v30 + 1;
      if (v30 == -1 || v31 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v32 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v30);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v31;
      v29 |= (unint64_t)(v32 & 0x7F) << v27;
      if ((v32 & 0x80) == 0) {
        goto LABEL_53;
      }
      v27 += 7;
      BOOL v10 = v28++ >= 9;
      if (v10)
      {
        uint64_t v29 = 0;
        goto LABEL_55;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_53:
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      uint64_t v29 = 0;
    }
LABEL_55:
    *(void *)(a1 + 16) = v29;
LABEL_58:
    ;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

BOOL APPBPolicyDataReadFrom(void *a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      if ((v6 >> 3) == 2) {
        break;
      }
      if ((v6 >> 3) == 1)
      {
        uint64_t v12 = PBReaderReadString();
        unsigned int v13 = (APPBNumericParameter *)a1[1];
        a1[1] = v12;
LABEL_23:

        goto LABEL_25;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_25:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }
    unsigned int v13 = objc_alloc_init(APPBNumericParameter);
    [a1 addPolicyValues:v13];
    if (!PBReaderPlaceMark() || (APPBNumericParameterReadFrom((uint64_t)v13, a2) & 1) == 0)
    {

      return 0;
    }
    PBReaderRecallMark();
    goto LABEL_23;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t APPBConfigurationResponseReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = objc_alloc_init(APPBConfiguration);
        [(id)a1 addTheConfiguration:v12];
        if PBReaderPlaceMark() && (APPBConfigurationReadFrom((uint64_t)v12, a2))
        {
          PBReaderRecallMark();

          continue;
        }

        return 0;
      case 2u:
        uint64_t v14 = PBReaderReadString();
        uint64_t v15 = 40;
        goto LABEL_33;
      case 3u:
        uint64_t v14 = PBReaderReadString();
        uint64_t v15 = 32;
        goto LABEL_33;
      case 4u:
        char v16 = 0;
        unsigned int v17 = 0;
        uint64_t v18 = 0;
        *(unsigned char *)(a1 + 48) |= 1u;
        break;
      case 5u:
        uint64_t v14 = PBReaderReadString();
        uint64_t v15 = 16;
LABEL_33:
        char v21 = *(void **)(a1 + v15);
        *(void *)(a1 + v15) = v14;

        continue;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        continue;
    }
    while (1)
    {
      unint64_t v19 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v19 == -1 || v19 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v20 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v19);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v19 + 1;
      v18 |= (unint64_t)(v20 & 0x7F) << v16;
      if ((v20 & 0x80) == 0) {
        goto LABEL_35;
      }
      v16 += 7;
      BOOL v9 = v17++ >= 9;
      if (v9)
      {
        LODWORD(v18) = 0;
        goto LABEL_37;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_35:
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LODWORD(v18) = 0;
    }
LABEL_37:
    *(_DWORD *)(a1 + 8) = v18;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_100091614(id a1)
{
  uint64_t v1 = (void *)qword_100289780;
  qword_100289780 = (uint64_t)&off_10024ACB0;
}

BOOL APPBOptOutResponseReadFrom(uint64_t a1, uint64_t a2)
{
  while (1)
  {
    int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
      return v3 == 0;
    }
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error))
    {
      int v3 = 1;
      return v3 == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    uint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        LOBYTE(v6) = 0;
        int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LOBYTE(v6) = 0;
    }
LABEL_13:
    if (v3) {
      BOOL v10 = 1;
    }
    else {
      BOOL v10 = (v6 & 7) == 4;
    }
    if (v10) {
      return v3 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

uint64_t APPBShadowStyleReadFrom(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (2)
    {
      if (!*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error))
      {
        char v4 = 0;
        unsigned int v5 = 0;
        unint64_t v6 = 0;
        while (1)
        {
          uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v8 = v7 + 1;
          if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
          v6 |= (unint64_t)(v9 & 0x7F) << v4;
          if ((v9 & 0x80) == 0) {
            goto LABEL_11;
          }
          v4 += 7;
          BOOL v10 = v5++ >= 9;
          if (v10)
          {
            unint64_t v6 = 0;
            int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
            goto LABEL_13;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          unint64_t v6 = 0;
        }
LABEL_13:
        int v12 = v6 & 7;
        if (!v11 && v12 != 4)
        {
          switch((v6 >> 3))
          {
            case 1u:
              uint64_t v14 = objc_alloc_init(APPBColor);
              objc_storeStrong((id *)(a1 + 32), v14);
              if PBReaderPlaceMark() && (APPBColorReadFrom(v14, a2))
              {
                PBReaderRecallMark();

                goto LABEL_57;
              }

              return 0;
            case 2u:
              *(unsigned char *)(a1 + 48) |= 1u;
              unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
              if (v15 <= 0xFFFFFFFFFFFFFFFBLL && v15 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
              {
                int v16 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
                *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
                int v16 = 0;
              }
              uint64_t v31 = 40;
              goto LABEL_56;
            case 3u:
              *(unsigned char *)(a1 + 48) |= 2u;
              unint64_t v17 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
              if (v17 <= 0xFFFFFFFFFFFFFFFBLL && v17 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
              {
                int v16 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v17);
                *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v17 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
                int v16 = 0;
              }
              uint64_t v31 = 44;
LABEL_56:
              *(_DWORD *)(a1 + v31) = v16;
              goto LABEL_57;
            case 4u:
              if (v12 == 2)
              {
                uint64_t result = PBReaderPlaceMark();
                if (!result) {
                  return result;
                }
                while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2
                                                                                    + OBJC_IVAR___PBDataReader__length)
                     && !*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error))
                {
                  char v19 = 0;
                  unsigned int v20 = 0;
                  uint64_t v21 = 0;
                  while (1)
                  {
                    uint64_t v22 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
                    unint64_t v23 = v22 + 1;
                    if (v22 == -1 || v23 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
                      break;
                    }
                    char v24 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v22);
                    *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v23;
                    v21 |= (unint64_t)(v24 & 0x7F) << v19;
                    if (v24 < 0)
                    {
                      v19 += 7;
                      BOOL v10 = v20++ >= 9;
                      if (!v10) {
                        continue;
                      }
                    }
                    goto LABEL_41;
                  }
                  *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_41:
                  PBRepeatedInt32Add();
                }
                PBReaderRecallMark();
              }
              else
              {
                char v25 = 0;
                unsigned int v26 = 0;
                uint64_t v27 = 0;
                while (1)
                {
                  uint64_t v28 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
                  unint64_t v29 = v28 + 1;
                  if (v28 == -1 || v29 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
                    break;
                  }
                  char v30 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v28);
                  *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v29;
                  v27 |= (unint64_t)(v30 & 0x7F) << v25;
                  if (v30 < 0)
                  {
                    v25 += 7;
                    BOOL v10 = v26++ >= 9;
                    if (!v10) {
                      continue;
                    }
                  }
                  goto LABEL_51;
                }
                *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_51:
                PBRepeatedInt32Add();
              }
LABEL_57:
              if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
                return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
              }
              continue;
            default:
              if (PBReaderSkipValueWithTag()) {
                goto LABEL_57;
              }
              return 0;
          }
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t APPBColorReadFrom(_DWORD *a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    unint64_t v12 = v6 >> 3;
    if ((v6 >> 3) == 1)
    {
      uint64_t v18 = PBReaderReadString();
      if (v18) {
        [a1 addColors:v18];
      }
    }
    else
    {
      if (v12 != 2)
      {
        if (v12 == 3)
        {
          char v13 = 0;
          unsigned int v14 = 0;
          uint64_t v15 = 0;
          while (1)
          {
            unint64_t v16 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            if (v16 == -1 || v16 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              break;
            }
            char v17 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v16);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v16 + 1;
            v15 |= (unint64_t)(v17 & 0x7F) << v13;
            if ((v17 & 0x80) == 0) {
              goto LABEL_35;
            }
            v13 += 7;
            BOOL v9 = v14++ >= 9;
            if (v9)
            {
              LODWORD(v15) = 0;
              goto LABEL_37;
            }
          }
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_35:
          if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            LODWORD(v15) = 0;
          }
LABEL_37:
          a1[6] = v15;
        }
        else
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
        }
        continue;
      }
      uint64_t v18 = PBReaderReadString();
      if (v18) {
        [a1 addDarkModeColors:v18];
      }
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t APPBAdLayoutDetailsReadFrom(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 116) |= 2u;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1 || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            goto LABEL_56;
          }
          v12 += 7;
          BOOL v9 = v13++ >= 9;
          if (v9)
          {
            LODWORD(v14) = 0;
            goto LABEL_58;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_56:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_58:
        uint64_t v26 = 112;
        goto LABEL_63;
      case 2u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 64;
        goto LABEL_51;
      case 3u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 16;
        goto LABEL_51;
      case 4u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 32;
        goto LABEL_51;
      case 5u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 8;
        goto LABEL_51;
      case 6u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 80;
        goto LABEL_51;
      case 7u:
        unsigned int v20 = objc_alloc_init(APPBElement);
        [(id)a1 addElements:v20];
        if (!PBReaderPlaceMark() || (APPBElementReadFrom((uint64_t)v20, a2) & 1) == 0) {
          goto LABEL_66;
        }
        goto LABEL_54;
      case 8u:
        unsigned int v20 = objc_alloc_init(APPBStyle);
        objc_storeStrong((id *)(a1 + 104), v20);
        if (!PBReaderPlaceMark() || !APPBStyleReadFrom((id *)v20, a2)) {
          goto LABEL_66;
        }
        goto LABEL_54;
      case 9u:
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 116) |= 1u;
        while (2)
        {
          unint64_t v23 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v23 == -1 || v23 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v23);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v23 + 1;
            v14 |= (unint64_t)(v24 & 0x7F) << v21;
            if (v24 < 0)
            {
              v21 += 7;
              BOOL v9 = v22++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_62;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_62:
        uint64_t v26 = 40;
LABEL_63:
        *(_DWORD *)(a1 + v26) = v14;
        goto LABEL_64;
      case 0xAu:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 88;
        goto LABEL_51;
      case 0xBu:
        unsigned int v20 = objc_alloc_init(APPBButton);
        objc_storeStrong((id *)(a1 + 48), v20);
        if (!PBReaderPlaceMark() || (APPBButtonReadFrom((uint64_t)v20, a2) & 1) == 0) {
          goto LABEL_66;
        }
        goto LABEL_54;
      case 0xCu:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 24;
        goto LABEL_51;
      case 0xDu:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 96;
LABEL_51:
        char v25 = *(void **)(a1 + v19);
        *(void *)(a1 + v19) = v18;

        goto LABEL_64;
      case 0xEu:
        unsigned int v20 = objc_alloc_init(APPBLocalizedStringEntry);
        [(id)a1 addLocalizedHeadlines:v20];
        if (PBReaderPlaceMark() && APPBLocalizedStringEntryReadFrom((uint64_t)v20, a2))
        {
LABEL_54:
          PBReaderRecallMark();

LABEL_64:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_66:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_64;
    }
  }
}

void sub_1000959A0(id a1)
{
  uint64_t v1 = (void *)qword_100289790;
  qword_100289790 = (uint64_t)&off_10024ACD8;
}

uint64_t APPBAdSizeReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1 || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            goto LABEL_56;
          }
          v12 += 7;
          BOOL v9 = v13++ >= 9;
          if (v9)
          {
            LODWORD(v14) = 0;
            goto LABEL_58;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_56:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_58:
        uint64_t v35 = 16;
        goto LABEL_71;
      case 2u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v14 = 0;
        while (2)
        {
          unint64_t v20 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v20 == -1 || v20 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v21 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v20);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v20 + 1;
            v14 |= (unint64_t)(v21 & 0x7F) << v18;
            if (v21 < 0)
            {
              v18 += 7;
              BOOL v9 = v19++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_62;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_62:
        uint64_t v35 = 8;
        goto LABEL_71;
      case 3u:
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 28) |= 2u;
        while (2)
        {
          unint64_t v24 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v24 == -1 || v24 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v24);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v24 + 1;
            v14 |= (unint64_t)(v25 & 0x7F) << v22;
            if (v25 < 0)
            {
              v22 += 7;
              BOOL v9 = v23++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_66;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_66:
        uint64_t v35 = 20;
        goto LABEL_71;
      case 4u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 28) |= 1u;
        while (2)
        {
          unint64_t v28 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v28 == -1 || v28 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v29 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v28);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v28 + 1;
            v14 |= (unint64_t)(v29 & 0x7F) << v26;
            if (v29 < 0)
            {
              v26 += 7;
              BOOL v9 = v27++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_70;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_70:
        uint64_t v35 = 12;
LABEL_71:
        *(_DWORD *)(a1 + v35) = v14;
        continue;
      case 5u:
        char v30 = 0;
        unsigned int v31 = 0;
        uint64_t v32 = 0;
        *(unsigned char *)(a1 + 28) |= 4u;
        break;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        continue;
    }
    while (1)
    {
      unint64_t v33 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v33 == -1 || v33 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v34 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v33);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v33 + 1;
      v32 |= (unint64_t)(v34 & 0x7F) << v30;
      if ((v34 & 0x80) == 0) {
        goto LABEL_73;
      }
      v30 += 7;
      BOOL v9 = v31++ >= 9;
      if (v9)
      {
        uint64_t v32 = 0;
        goto LABEL_75;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_73:
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      uint64_t v32 = 0;
    }
LABEL_75:
    *(unsigned char *)(a1 + 24) = v32 != 0;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_100096C9C(id a1)
{
  uint64_t v1 = (void *)qword_1002897A0;
  qword_1002897A0 = (uint64_t)&off_10024AD00;
}

BOOL APPBLogAggregateMetricsResponseReadFrom(uint64_t a1, uint64_t a2)
{
  while (1)
  {
    int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
      return v3 == 0;
    }
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error))
    {
      int v3 = 1;
      return v3 == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    uint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        LOBYTE(v6) = 0;
        int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LOBYTE(v6) = 0;
    }
LABEL_13:
    if (v3) {
      BOOL v10 = 1;
    }
    else {
      BOOL v10 = (v6 & 7) == 4;
    }
    if (v10) {
      return v3 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

void sub_100096F90(id a1)
{
  uint64_t v1 = (void *)qword_1002897B0;
  qword_1002897B0 = (uint64_t)&off_10024AD28;
}

BOOL APPBClickLocationReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 24) |= 4u;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1 || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            char v18 = &OBJC_IVAR___APPBClickLocation__x;
            goto LABEL_52;
          }
          char v16 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            break;
          }
          v12 += 7;
          BOOL v17 = v13++ > 8;
          if (v17)
          {
            LODWORD(v14) = 0;
            char v18 = &OBJC_IVAR___APPBClickLocation__x;
            goto LABEL_55;
          }
        }
        char v18 = &OBJC_IVAR___APPBClickLocation__x;
        goto LABEL_53;
      case 2u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 24) |= 8u;
        while (2)
        {
          unint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v21 == -1 || v21 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            char v18 = &OBJC_IVAR___APPBClickLocation__y;
            goto LABEL_52;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v21 + 1;
          v14 |= (unint64_t)(v22 & 0x7F) << v19;
          if (v22 < 0)
          {
            v19 += 7;
            BOOL v17 = v20++ > 8;
            if (v17)
            {
              LODWORD(v14) = 0;
              char v18 = &OBJC_IVAR___APPBClickLocation__y;
              goto LABEL_55;
            }
            continue;
          }
          break;
        }
        char v18 = &OBJC_IVAR___APPBClickLocation__y;
        goto LABEL_53;
      case 3u:
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 24) |= 2u;
        while (2)
        {
          unint64_t v25 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v25 == -1 || v25 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            char v18 = &OBJC_IVAR___APPBClickLocation__w;
            goto LABEL_52;
          }
          char v26 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v25);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v25 + 1;
          v14 |= (unint64_t)(v26 & 0x7F) << v23;
          if (v26 < 0)
          {
            v23 += 7;
            BOOL v17 = v24++ > 8;
            if (v17)
            {
              LODWORD(v14) = 0;
              char v18 = &OBJC_IVAR___APPBClickLocation__w;
              goto LABEL_55;
            }
            continue;
          }
          break;
        }
        char v18 = &OBJC_IVAR___APPBClickLocation__w;
        goto LABEL_53;
      case 4u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 24) |= 1u;
        break;
      default:
        if (PBReaderSkipValueWithTag()) {
          continue;
        }
        return 0;
    }
    while (1)
    {
      unint64_t v29 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v29 == -1 || v29 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v29);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v29 + 1;
      v14 |= (unint64_t)(v30 & 0x7F) << v27;
      if ((v30 & 0x80) == 0)
      {
        char v18 = &OBJC_IVAR___APPBClickLocation__h;
        goto LABEL_53;
      }
      v27 += 7;
      BOOL v17 = v28++ > 8;
      if (v17)
      {
        LODWORD(v14) = 0;
        char v18 = &OBJC_IVAR___APPBClickLocation__h;
        goto LABEL_55;
      }
    }
    char v18 = &OBJC_IVAR___APPBClickLocation__h;
LABEL_52:
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_53:
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LODWORD(v14) = 0;
    }
LABEL_55:
    *(_DWORD *)(a1 + *v18) = v14;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_100097D0C(id a1)
{
  uint64_t v1 = (void *)qword_1002897C0;
  qword_1002897C0 = (uint64_t)&off_10024AD50;
}

BOOL APPBGeofenceReadFrom(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        unint64_t v8 = v7 + 1;
        if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
        v6 |= (unint64_t)(v9 & 0x7F) << v4;
        if ((v9 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          uint64_t v11 = OBJC_IVAR___PBDataReader__error;
          int v12 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      uint64_t v11 = OBJC_IVAR___PBDataReader__error;
      int v12 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v12 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      unint64_t v14 = v6 >> 3;
      if ((v6 >> 3) == 3)
      {
        unint64_t v17 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v17 <= 0xFFFFFFFFFFFFFFF7 && v17 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v16 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v17);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v17 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v11) = 1;
          uint64_t v16 = 0;
        }
        char v19 = &OBJC_IVAR___APPBGeofence__radius;
        goto LABEL_37;
      }
      if (v14 == 2) {
        break;
      }
      if (v14 == 1)
      {
        unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v15 <= 0xFFFFFFFFFFFFFFF7 && v15 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v16 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v11) = 1;
          uint64_t v16 = 0;
        }
        char v19 = &OBJC_IVAR___APPBGeofence__latitude;
LABEL_37:
        *(void *)(a1 + *v19) = v16;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_38:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }
    unint64_t v18 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
    if (v18 <= 0xFFFFFFFFFFFFFFF7 && v18 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
    {
      uint64_t v16 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v18 + 8;
    }
    else
    {
      *(unsigned char *)(a2 + v11) = 1;
      uint64_t v16 = 0;
    }
    char v19 = &OBJC_IVAR___APPBGeofence__longitude;
    goto LABEL_37;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

CFStringRef adPositionToString(unint64_t a1)
{
  if (a1 > 7) {
    return @"UNKNOWN";
  }
  else {
    return *(&off_100234F10 + a1);
  }
}

id *sub_10009851C(id *a1, double a2, float a3, float a4, float a5, float a6, float a7)
{
  uint64_t v7 = a1;
  if (a1)
  {
    v26[0] = &off_1002491D0;
    unsigned int v13 = +[NSNumber numberWithFloat:](NSNumber, "numberWithFloat:");
    v27[0] = v13;
    v26[1] = &off_1002491E8;
    *(float *)&double v14 = a3;
    unint64_t v15 = +[NSNumber numberWithFloat:v14];
    v27[1] = v15;
    _OWORD v26[2] = &off_100249200;
    *(float *)&double v16 = a4;
    unint64_t v17 = +[NSNumber numberWithFloat:v16];
    v27[2] = v17;
    v26[3] = &off_100249218;
    *(float *)&double v18 = a5;
    char v19 = +[NSNumber numberWithFloat:v18];
    v27[3] = v19;
    v26[4] = &off_100249230;
    *(float *)&double v20 = a6;
    unint64_t v21 = +[NSNumber numberWithFloat:v20];
    v27[4] = v21;
    v26[5] = &off_100249248;
    *(float *)&double v22 = a7;
    char v23 = +[NSNumber numberWithFloat:v22];
    v27[5] = v23;
    unsigned int v24 = +[NSDictionary dictionaryWithObjects:v27 forKeys:v26 count:6];
    uint64_t v7 = sub_1000986E8(v7, v24);
  }
  return v7;
}

id *sub_1000986E8(id *a1, void *a2)
{
  id v4 = a2;
  if (a1)
  {
    v7.receiver = a1;
    v7.super_class = (Class)APRateLimits;
    unsigned int v5 = (id *)[super init];
    a1 = v5;
    if (v5) {
      objc_storeStrong(v5 + 1, a2);
    }
  }

  return a1;
}

id sub_100098760(void *a1)
{
  if (a1)
  {
    a1 = [a1 rateLimits];
    uint64_t v1 = vars8;
  }
  return a1;
}

float sub_100098790(void *a1, uint64_t a2)
{
  if (!a1) {
    return 0.0;
  }
  int v3 = [a1 rateLimits];
  id v4 = +[NSNumber numberWithUnsignedInteger:a2];
  unsigned int v5 = [v3 objectForKey:v4];

  if (v5)
  {
    [v5 floatValue];
    float v7 = v6;
  }
  else
  {
    float v7 = 1.0;
  }

  return v7;
}

void sub_10009920C(id a1)
{
  uint64_t v1 = (void *)qword_1002897D0;
  qword_1002897D0 = (uint64_t)&off_10024AD78;
}

uint64_t APPBUserTransparencyRequestReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadData();
        uint64_t v13 = 16;
        goto LABEL_25;
      case 2u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 40;
        goto LABEL_25;
      case 3u:
        uint64_t v12 = PBReaderReadData();
        uint64_t v13 = 24;
        goto LABEL_25;
      case 4u:
        uint64_t v12 = PBReaderReadData();
        uint64_t v13 = 8;
        goto LABEL_25;
      case 5u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 32;
LABEL_25:
        unint64_t v15 = *(void **)(a1 + v13);
        *(void *)(a1 + v13) = v12;

        continue;
      case 6u:
        char v16 = 0;
        unsigned int v17 = 0;
        uint64_t v18 = 0;
        *(unsigned char *)(a1 + 52) |= 2u;
        while (2)
        {
          unint64_t v19 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v19 == -1 || v19 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v20 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v19);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v19 + 1;
            v18 |= (unint64_t)(v20 & 0x7F) << v16;
            if (v20 < 0)
            {
              v16 += 7;
              BOOL v9 = v17++ >= 9;
              if (v9)
              {
                uint64_t v18 = 0;
                goto LABEL_43;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v18 = 0;
        }
LABEL_43:
        BOOL v26 = v18 != 0;
        uint64_t v27 = 49;
        goto LABEL_48;
      case 7u:
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v23 = 0;
        *(unsigned char *)(a1 + 52) |= 1u;
        break;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        continue;
    }
    while (1)
    {
      unint64_t v24 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v24 == -1 || v24 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v24);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v24 + 1;
      v23 |= (unint64_t)(v25 & 0x7F) << v21;
      if ((v25 & 0x80) == 0) {
        goto LABEL_45;
      }
      v21 += 7;
      BOOL v9 = v22++ >= 9;
      if (v9)
      {
        uint64_t v23 = 0;
        goto LABEL_47;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_45:
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      uint64_t v23 = 0;
    }
LABEL_47:
    BOOL v26 = v23 != 0;
    uint64_t v27 = 48;
LABEL_48:
    *(unsigned char *)(a1 + v27) = v26;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_10009A1B8(id a1)
{
  uint64_t v1 = (void *)qword_1002897E0;
  qword_1002897E0 = (uint64_t)&off_10024ADA0;
}

BOOL APPBConfigurationRequestReadFrom(void *a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      if ((v6 >> 3) == 2) {
        break;
      }
      if ((v6 >> 3) == 1)
      {
        uint64_t v12 = objc_alloc_init(APPBConfiguration);
        [a1 addCurrentConfiguration:v12];
        if (!PBReaderPlaceMark() || (APPBConfigurationReadFrom((uint64_t)v12, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        goto LABEL_23;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_25:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }
    uint64_t v13 = PBReaderReadData();
    uint64_t v12 = (APPBConfiguration *)a1[2];
    a1[2] = v13;
LABEL_23:

    goto LABEL_25;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_10009AD44(id a1)
{
  uint64_t v1 = (void *)qword_1002897F0;
  qword_1002897F0 = (uint64_t)&off_10024ADC8;
}

uint64_t APPBMescalSignSAPSetupResponseReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    if ((v6 >> 3) == 1)
    {
      uint64_t v12 = PBReaderReadData();
      uint64_t v13 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = v12;
    }
    else
    {
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_10009B300(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    unint64_t v7 = +[NSMutableDictionary dictionaryWithCapacity:](NSMutableDictionary, "dictionaryWithCapacity:", [v6 count]);
    int v10 = _NSConcreteStackBlock;
    uint64_t v11 = 3221225472;
    uint64_t v12 = sub_10009B42C;
    uint64_t v13 = &unk_100234FB8;
    id v14 = *(id *)(a1 + 32);
    id v15 = v7;
    id v8 = v7;
    [v6 enumerateKeysAndObjectsUsingBlock:&v10];
    id v9 = [v8 copy:v10, v11, v12, v13];
    [*(id *)(a1 + 40) setObject:v9 forKeyedSubscript:v5];
  }
}

void sub_10009B42C(uint64_t a1, void *a2, void *a3)
{
  id v12 = a2;
  id v5 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v6 = *(void **)(a1 + 32);
    unint64_t v7 = [v5 absoluteString];
    id v8 = [v6 objectForKeyedSubscript:v7];

    id v9 = *(void **)(a1 + 40);
    if (v8)
    {
      [v9 setObject:v8 forKeyedSubscript:v12];
    }
    else
    {
      [v9 setObject:v5 forKeyedSubscript:v12];
      int v10 = *(void **)(a1 + 32);
      uint64_t v11 = [v5 absoluteString];
      [v10 setObject:v5 forKeyedSubscript:v11];
    }
  }
  else
  {
    [*(id *)(a1 + 40) setObject:v5 forKeyedSubscript:v12];
  }
}

void sub_10009B5DC(id a1)
{
  uint64_t v1 = (void *)qword_100289800;
  qword_100289800 = (uint64_t)&off_10024ADF0;
}

uint64_t APPBAdDataUpdateReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v13 = PBReaderReadString();
        id v14 = *(void **)(a1 + 32);
        *(void *)(a1 + 32) = v13;

        continue;
      case 2u:
        *(unsigned char *)(a1 + 40) |= 1u;
        unint64_t v16 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v16 <= 0xFFFFFFFFFFFFFFF7 && v16 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v17 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v16);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v16 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v17 = 0;
        }
        *(void *)(a1 + 8) = v17;
        continue;
      case 3u:
        *(unsigned char *)(a1 + 40) |= 2u;
        unint64_t v18 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v18 <= 0xFFFFFFFFFFFFFFF7
          && (unint64_t v19 = v18 + 8, v18 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)))
        {
          uint64_t v20 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v19;
        }
        else
        {
          uint64_t v20 = 0;
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
        }
        *(void *)(a1 + 16) = v20;
        continue;
      case 4u:
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v23 = 0;
        *(unsigned char *)(a1 + 40) |= 4u;
        break;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        continue;
    }
    while (1)
    {
      uint64_t v24 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v24);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v25;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0) {
        goto LABEL_35;
      }
      v21 += 7;
      BOOL v10 = v22++ >= 9;
      if (v10)
      {
        LODWORD(v23) = 0;
        goto LABEL_37;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_35:
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LODWORD(v23) = 0;
    }
LABEL_37:
    *(_DWORD *)(a1 + 24) = v23;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_10009C5E8(id a1)
{
  uint64_t v1 = (void *)qword_100289810;
  qword_100289810 = (uint64_t)&off_10024AE18;
}

uint64_t APPBAssetMetricReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    unint64_t v13 = v6 >> 3;
    if ((v6 >> 3) == 3)
    {
      *(unsigned char *)(a1 + 32) |= 1u;
      unint64_t v17 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v17 <= 0xFFFFFFFFFFFFFFF7 && v17 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
      {
        uint64_t v18 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v17);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v17 + 8;
      }
      else
      {
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
        uint64_t v18 = 0;
      }
      *(void *)(a1 + 8) = v18;
    }
    else
    {
      if (v13 == 2)
      {
        uint64_t v14 = PBReaderReadString();
        uint64_t v15 = 16;
      }
      else
      {
        if (v13 != 1)
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
        }
        uint64_t v14 = PBReaderReadString();
        uint64_t v15 = 24;
      }
      unint64_t v16 = *(void **)(a1 + v15);
      *(void *)(a1 + v15) = v14;
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_10009CF74(id a1)
{
  uint64_t v1 = (void *)qword_100289820;
  qword_100289820 = (uint64_t)&off_10024AE40;
}

uint64_t APPBMediaFilesReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      break;
    }
    if ((v6 >> 3) == 2)
    {
      uint64_t v15 = objc_alloc_init(APPBMediaAsset);
      [(id)a1 addMediaAssets:v15];
      if (!PBReaderPlaceMark() || (APPBMediaAssetReadFrom((uint64_t)v15, a2) & 1) == 0)
      {

        return 0;
      }
      PBReaderRecallMark();
    }
    else if ((v6 >> 3) == 1)
    {
      *(unsigned char *)(a1 + 24) |= 1u;
      unint64_t v13 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v13 <= 0xFFFFFFFFFFFFFFF7 && v13 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
      {
        uint64_t v14 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v13);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v13 + 8;
      }
      else
      {
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
        uint64_t v14 = 0;
      }
      *(void *)(a1 + 8) = v14;
    }
    else
    {
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_10009E3E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10009E40C(uint64_t a1)
{
  double v2 = APLogForCategory();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)unint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Reloading current URL configuration.", v6, 2u);
  }

  int v3 = +[APServerConfigurationSettings settings];
  char v4 = [v3 serverConfig];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setConfigurations:v4];
}

void sub_10009F7C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10009F7F0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  unsigned int v5 = +[NSDate date];
  [v5 timeIntervalSince1970];
  [WeakRetained setResponseTime:v6 - *(double *)(a1 + 48)];

  uint64_t v7 = [v3 responseError];

  if (v7)
  {
    uint64_t v8 = [v3 responseError];
LABEL_3:
    id v9 = (id)v8;
    BOOL v10 = 0;
    goto LABEL_4;
  }
  if ((uint64_t)[v3 responseStatusCode] >= 400 && (uint64_t)objc_msgSend(v3, "responseStatusCode") <= 599)
  {
    uint64_t v8 = +[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", @"com.apple.ap.HTTPError", [v3 responseStatusCode], 0);
    goto LABEL_3;
  }
  if ([v3 responseStatusCode] == (id)200)
  {
    int v11 = [v3 responseBody];
    id v13 = 0;
    BOOL v10 = [WeakRetained _deserializeResponse:v11 error:&v13];
    id v9 = v13;
  }
  else
  {
    id v12 = APLogForCategory();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 134217984;
      id v15 = [v3 responseStatusCode];
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "Unexpected server response with status code: %lu", buf, 0xCu);
    }

    BOOL v10 = 0;
    id v9 = 0;
  }
LABEL_4:
  [WeakRetained _logResponse:v3 responseProtobuf:v10 requestProtobufClass:*(void *)(a1 + 56) error:v9];
  [WeakRetained responseReceived:v3 responseProtobuf:v10 error:v9];
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10009FBE0(id a1)
{
  qword_100289830 = (uint64_t)dispatch_queue_create("com.apple.ap.legacyinterface.delayed_request_queue", 0);

  _objc_release_x1();
}

id sub_10009FC20(uint64_t a1)
{
  unsigned __int8 v2 = [*(id *)(a1 + 32) cancelled];
  id v3 = APLogForCategory();
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_INFO);
  if (v2)
  {
    if (v4)
    {
      unsigned int v5 = [*(id *)(a1 + 32) requestIdentifier];
      int v8 = 138543362;
      id v9 = v5;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "NOT sending delayed request with ID %{public}@, it was previously cancelled.", (uint8_t *)&v8, 0xCu);
    }
    return (id)(*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  else
  {
    if (v4)
    {
      uint64_t v7 = [*(id *)(a1 + 32) requestIdentifier];
      int v8 = 138543362;
      id v9 = v7;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Sending delayed request with ID %{public}@", (uint8_t *)&v8, 0xCu);
    }
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
    return [*(id *)(a1 + 32) makeRequest:*(void *)(a1 + 48)];
  }
}

void sub_1000A107C(id a1)
{
  uint64_t v1 = objc_alloc_init(APServerConfiguration);
  unsigned __int8 v2 = (void *)qword_100289840;
  qword_100289840 = (uint64_t)v1;

  id v3 = APLogForCategory();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)BOOL v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Initialized APServerConfiguration", v4, 2u);
  }
}

void sub_1000A16A0(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1000A16B4(id *a1)
{
  a1 += 5;
  id WeakRetained = objc_loadWeakRetained(a1);
  [WeakRetained _moveAllPendingRequestsToFailed];

  id v4 = objc_loadWeakRetained(a1);
  [v4 _loadFailedRequestsCache];

  id v5 = objc_loadWeakRetained(a1);
  [v5 _retryFailedIfAvailable];
}

void sub_1000A18F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_1000A190C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _registerMetricRequest:*(void *)(a1 + 32)];
}

void sub_1000A1B28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
}

void sub_1000A1B44(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _completeServerRequestId:*(void *)(a1 + 32) serverFailureCount:*(void *)(a1 + 56) result:*(void *)(a1 + 64)];
}

void sub_1000A2114(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000A212C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000A213C(uint64_t a1)
{
}

void sub_1000A2144(uint64_t a1, void *a2, void *a3, unsigned char *a4)
{
  id v8 = a2;
  if (![a3 longLongValue])
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
    *a4 = 1;
  }
}

void sub_1000A28FC(uint64_t a1, void *a2, unint64_t a3, unsigned char *a4)
{
  if (a3 < 0xA)
  {
    id v5 = a2;
    id v7 = +[NSNumber numberWithLong:0];
    double v6 = [*(id *)(a1 + 32) failedRequests];
    [v6 setObject:v7 forKeyedSubscript:v5];
  }
  else
  {
    *a4 = 1;
  }
}

void sub_1000A2F00(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1000A2F28(uint64_t a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  id v7 = sub_1000E8480(*(void *)(a1 + 32));
  id v8 = [v7 UUIDString];
  [WeakRetained completeServerRequestId:v8 serverFailureCount:*(void *)(a1 + 72) result:[*(id *)(a1 + 40) responseResult]];

  uint64_t v9 = *(void *)(a1 + 56);
  if (v9) {
    (*(void (**)(uint64_t, id, id))(v9 + 16))(v9, v10, v5);
  }
}

void sub_1000A4BEC(uint64_t a1)
{
  v7[0] = @"hasIAdID";
  uint64_t v2 = +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", [*(id *)(a1 + 32) hasIAdID]);
  v8[0] = v2;
  v7[1] = @"hasContentiAdID";
  id v3 = +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", [*(id *)(a1 + 32) hasContentiAdID]);
  v8[1] = v3;
  _DWORD v7[2] = @"hasAnonymousDemandiAdID";
  id v4 = +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", [*(id *)(a1 + 32) hasAnonymousDemandiAdID]);
  _DWORD v8[2] = v4;
  id v5 = +[NSDictionary dictionaryWithObjects:v8 forKeys:v7 count:3];

  double v6 = [v5 description];
  CreateDiagnosticReport();
}

uint64_t APPBAssetReadFrom(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 32;
        goto LABEL_39;
      case 2u:
        char v15 = 0;
        unsigned int v16 = 0;
        uint64_t v17 = 0;
        *(unsigned char *)(a1 + 48) |= 2u;
        while (2)
        {
          unint64_t v18 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v18 == -1 || v18 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v19 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v18 + 1;
            v17 |= (unint64_t)(v19 & 0x7F) << v15;
            if (v19 < 0)
            {
              v15 += 7;
              BOOL v9 = v16++ >= 9;
              if (v9)
              {
                LODWORD(v17) = 0;
                goto LABEL_43;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_43:
        *(_DWORD *)(a1 + 24) = v17;
        goto LABEL_48;
      case 3u:
        uint64_t v20 = objc_alloc_init(APPBAssetInfo);
        [(id)a1 addAssetInfo:v20];
        if PBReaderPlaceMark() && (APPBAssetInfoReadFrom((uint64_t)v20, a2))
        {
          PBReaderRecallMark();

LABEL_48:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0;
      case 4u:
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v23 = 0;
        *(unsigned char *)(a1 + 48) |= 1u;
        while (2)
        {
          unint64_t v24 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v24 == -1 || v24 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v24);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v24 + 1;
            v23 |= (unint64_t)(v25 & 0x7F) << v21;
            if (v25 < 0)
            {
              v21 += 7;
              BOOL v9 = v22++ >= 9;
              if (v9)
              {
                uint64_t v23 = 0;
                goto LABEL_47;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v23 = 0;
        }
LABEL_47:
        *(void *)(a1 + 8) = v23;
        goto LABEL_48;
      case 5u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 40;
LABEL_39:
        char v26 = *(void **)(a1 + v13);
        *(void *)(a1 + v13) = v12;

        goto LABEL_48;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_48;
    }
  }
}

void sub_1000A6BB0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  long long v60 = 0u;
  long long v61 = 0u;
  long long v62 = 0u;
  long long v63 = 0u;
  unint64_t v7 = [*(id *)(a1 + 32) requestParameters];
  id v8 = [v7 countByEnumeratingWithState:&v60 objects:v72 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v61;
    do
    {
      for (i = 0; i != v9; i = (char *)i + 1)
      {
        if (*(void *)v61 != v10) {
          objc_enumerationMutation(v7);
        }
        uint64_t v12 = *(void **)(a1 + 40);
        uint64_t v13 = [*(id *)(*((void *)&v60 + 1) + 8 * i) context];
        [v12 sendAnalyticsForGettingAdResponse:v13];
      }
      id v9 = [v7 countByEnumeratingWithState:&v60 objects:v72 count:16];
    }
    while (v9);
  }

  uint64_t v14 = [(APResponseDataTranslator *)[APAdBatchResponseTranslator alloc] initWithResponse:v5 forRequester:*(void *)(a1 + 32)];
  id v59 = v6;
  char v15 = [(APAdBatchResponseTranslator *)v14 translate:&v59];
  id v16 = v59;

  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v17 = [v15 sortedArrayUsingComparator:&stru_1002351E0];
    if ([v17 count])
    {
      uint64_t v53 = v15;
      id v54 = v16;
      uint64_t v55 = v14;
      id v56 = v5;
      unint64_t v18 = 1;
      uint64_t v57 = v17;
      do
      {
        char v19 = -[NSObject objectAtIndexedSubscript:](v17, "objectAtIndexedSubscript:", v18 - 1, v53, v54, v55, v56);
        if ((id)v18 == [v17 count])
        {
          uint64_t v20 = 1;
        }
        else if ((char *)(v18 - 1) >= (char *)[v17 count] - 1)
        {
          uint64_t v20 = 0;
        }
        else
        {
          char v21 = [v17 objectAtIndexedSubscript:v18 - 1];
          unsigned int v22 = [v21 adOriginalRequesterId];
          uint64_t v23 = [v17 objectAtIndexedSubscript:v18];
          unint64_t v24 = [v23 adOriginalRequesterId];
          uint64_t v20 = [v22 isEqual:v24] ^ 1;

          uint64_t v17 = v57;
        }
        char v25 = *(void **)(a1 + 32);
        char v26 = [v19 adOriginalRequesterId];
        uint64_t v27 = [v25 requestFromRequestID:v26];

        if (v27)
        {
          [*(id *)(a1 + 32) responseTime];
          double v29 = v28;
          char v30 = [v19 privateContent];
          [v30 setResponseTime:v29];

          unsigned int v31 = APLogForCategory();
          if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
          {
            id v32 = [v17 count];
            unint64_t v33 = [v19 content];
            [v33 identifier];
            char v34 = v58 = v20;
            uint64_t v35 = [v19 content];
            uint64_t v36 = [v35 contextIdentifier];
            *(_DWORD *)buf = 134218754;
            unint64_t v65 = v18;
            __int16 v66 = 2048;
            id v67 = v32;
            __int16 v68 = 2114;
            uint64_t v69 = v34;
            __int16 v70 = 2114;
            id v71 = v36;
            _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_INFO, "Sending %lu of %lu contents with identifier %{public}@ and context %{public}@", buf, 0x2Au);

            uint64_t v20 = v58;
            uint64_t v17 = v57;
          }

          uint64_t v37 = [v27 completionHandler];
          ((void (**)(void, void *, uint64_t))v37)[2](v37, v19, v20);

          uint64_t v38 = [APJourneyDaemonMetricHelper alloc];
          unint64_t v39 = [v19 content];
          unint64_t v40 = [(APJourneyDaemonMetricHelper *)v38 initWithContentData:v39];

          id v41 = [*(id *)(a1 + 40) bundleID];
          [*(id *)(a1 + 32) responseTime];
          double v43 = v42;
          uint64_t v44 = [v19 journeyStartRelayValues];
          [v40 receivedForBundleID:v41 elapsedTime:v44 relayValues:0 internalProperties:v43];

          char v45 = *(void **)(a1 + 32);
          unint64_t v46 = [v19 content];
          NSString v47 = [v46 identifier];
          uint64_t v48 = [v45 requestFromRequestID:v47];
          id v49 = [v48 placementType];

          [*(id *)(a1 + 40) checkForDiscards:v19 placementType:v49];
        }
        else
        {
          unint64_t v40 = APLogForCategory();
          if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR))
          {
            uint64_t v50 = [v19 adOriginalRequesterId];
            *(_DWORD *)buf = 138543362;
            unint64_t v65 = (unint64_t)v50;
            _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_ERROR, "Unable to find original request for ad response with identifier %{public}@", buf, 0xCu);
          }
        }
      }
      while (v18++ < (unint64_t)[v17 count]);
      uint64_t v14 = v55;
      id v5 = v56;
      char v15 = v53;
      id v16 = v54;
    }
  }
  else
  {
    uint64_t v17 = APLogForCategory();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
      uint64_t v52 = [*(id *)(a1 + 40) identifier];
      *(_DWORD *)buf = 138543362;
      unint64_t v65 = (unint64_t)v52;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "Translator returned invalid response type for request %{public}@", buf, 0xCu);
    }
  }
}

int64_t sub_1000A7174(id a1, APContentDataInternal *a2, APContentDataInternal *a3)
{
  char v4 = a3;
  id v5 = [(APContentDataInternal *)a2 adOriginalRequesterId];
  id v6 = [(APContentDataInternal *)v4 adOriginalRequesterId];

  id v7 = [v5 compare:v6];
  return (int64_t)v7;
}

void sub_1000A74F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000A7518(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (!WeakRetained)
  {
    id v8 = APLogForCategory();
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      goto LABEL_24;
    }
    LOWORD(v31) = 0;
    char v26 = "AdRequester has been freed.";
    uint64_t v27 = v8;
    os_log_type_t v28 = OS_LOG_TYPE_ERROR;
    uint32_t v29 = 2;
LABEL_20:
    _os_log_impl((void *)&_mh_execute_header, v27, v28, v26, (uint8_t *)&v31, v29);
    goto LABEL_24;
  }
  id v7 = [v5 count];
  id v8 = APLogForCategory();
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_INFO);
  if (!v7)
  {
    if (!v9) {
      goto LABEL_24;
    }
    int v31 = 134217984;
    id v32 = a3;
    char v26 = "Ad request accumulator fired with reason %ld, but did not accumulate any requests.";
    uint64_t v27 = v8;
    os_log_type_t v28 = OS_LOG_TYPE_INFO;
    uint32_t v29 = 12;
    goto LABEL_20;
  }
  if (v9)
  {
    id v10 = [v5 count];
    int v11 = +[NSDate date];
    uint64_t v12 = [v5 objectAtIndexedSubscript:0];
    uint64_t v13 = [v12 bundleID];
    int v31 = 134218498;
    id v32 = v10;
    __int16 v33 = 2114;
    char v34 = v11;
    __int16 v35 = 2114;
    uint64_t v36 = v13;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Ad request accumulator for %ld ads at %{public}@ for bundleID %{public}@.", (uint8_t *)&v31, 0x20u);
  }
  [WeakRetained requestAds:v5];
  uint64_t v14 = APPerfLogForCategory();
  char v15 = (char *)[WeakRetained signpostID];
  if ((unint64_t)(v15 - 1) <= 0xFFFFFFFFFFFFFFFDLL)
  {
    os_signpost_id_t v16 = (os_signpost_id_t)v15;
    if (os_signpost_enabled(v14))
    {
      LOWORD(v31) = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v14, OS_SIGNPOST_INTERVAL_END, v16, "AccumulationInterval", " enableTelemetry=YES ", (uint8_t *)&v31, 2u);
    }
  }

  id v8 = +[NSMutableDictionary dictionary];
  uint64_t v17 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v5 count]);
  [v8 setObject:v17 forKey:@"batchSize"];

  if ([v5 count] == (id)1)
  {
    unint64_t v18 = [v5 objectAtIndexedSubscript:0];
    char v19 = [v18 context];
    uint64_t v20 = [v19 supplementalContext];

    if (v20)
    {
      char v21 = [v5 objectAtIndexedSubscript:0];
      unsigned int v22 = [v21 context];
      uint64_t v23 = [v22 supplementalContext];
      unint64_t v24 = [v23 objectForKey:APSupplementalContextPlacementKey];

      if (v24 && [v24 length])
      {
        if (([v24 isEqualToString:APSupplementalContextInArticleKey] & 1) != 0
          || ([v24 isEqualToString:APSupplementalContextVideoInArticleKey] & 1) != 0
          || ([v24 isEqualToString:APSupplementalContextNativeInArticleKey] & 1) != 0)
        {
          uint64_t v25 = 1;
        }
        else if ([v24 isEqualToString:APSupplementalContextBetweenArticleKey])
        {
          uint64_t v25 = 2;
        }
        else
        {
          uint64_t v25 = 0;
        }
      }
      else
      {
        uint64_t v25 = 0;
      }
      char v30 = +[NSNumber numberWithUnsignedInteger:v25];
      [v8 setObject:v30 forKey:@"placement"];
    }
  }
  AnalyticsSendEvent();
LABEL_24:
}

void sub_1000A7FE0(id a1)
{
  qword_100289860 = objc_alloc_init(APEncryptedIDProvider);

  _objc_release_x1();
}

uint64_t APPBBorderStyleReadFrom(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        unint64_t v8 = v7 + 1;
        if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
        v6 |= (unint64_t)(v9 & 0x7F) << v4;
        if ((v9 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v11 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      unint64_t v13 = v6 >> 3;
      if ((v6 >> 3) == 3) {
        break;
      }
      if (v13 == 2)
      {
        *(unsigned char *)(a1 + 24) |= 2u;
        unint64_t v17 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v17 <= 0xFFFFFFFFFFFFFFFBLL && v17 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          int v16 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v17);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v17 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          int v16 = 0;
        }
        uint64_t v19 = 20;
LABEL_35:
        *(_DWORD *)(a1 + v19) = v16;
        goto LABEL_36;
      }
      if (v13 == 1)
      {
        uint64_t v14 = objc_alloc_init(APPBColor);
        objc_storeStrong((id *)(a1 + 8), v14);
        if (!PBReaderPlaceMark() || (APPBColorReadFrom(v14, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
LABEL_36:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }
    *(unsigned char *)(a1 + 24) |= 1u;
    unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
    if (v15 <= 0xFFFFFFFFFFFFFFFBLL && v15 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
    {
      int v16 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 4;
    }
    else
    {
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
      int v16 = 0;
    }
    uint64_t v19 = 16;
    goto LABEL_35;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t APPBElementReadFrom(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 72) |= 1u;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1 || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            goto LABEL_44;
          }
          v12 += 7;
          BOOL v9 = v13++ >= 9;
          if (v9)
          {
            LODWORD(v14) = 0;
            goto LABEL_46;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_44:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_46:
        *(_DWORD *)(a1 + 56) = v14;
        goto LABEL_47;
      case 2u:
        unint64_t v18 = objc_alloc_init(APPBAsset);
        objc_storeStrong((id *)(a1 + 32), v18);
        if (!PBReaderPlaceMark() || (APPBAssetReadFrom((uint64_t)v18, a2) & 1) == 0) {
          goto LABEL_49;
        }
        goto LABEL_42;
      case 3u:
        uint64_t v19 = PBReaderReadString();
        uint64_t v20 = 40;
        goto LABEL_36;
      case 4u:
        uint64_t v19 = PBReaderReadString();
        uint64_t v20 = 8;
        goto LABEL_36;
      case 5u:
        unint64_t v18 = objc_alloc_init(APPBButton);
        objc_storeStrong((id *)(a1 + 48), v18);
        if (!PBReaderPlaceMark() || (APPBButtonReadFrom((uint64_t)v18, a2) & 1) == 0) {
          goto LABEL_49;
        }
        goto LABEL_42;
      case 6u:
        uint64_t v19 = PBReaderReadString();
        uint64_t v20 = 24;
LABEL_36:
        char v21 = *(void **)(a1 + v20);
        *(void *)(a1 + v20) = v19;

        goto LABEL_47;
      case 7u:
        unint64_t v18 = objc_alloc_init(APPBStyle);
        objc_storeStrong((id *)(a1 + 64), v18);
        if (!PBReaderPlaceMark() || !APPBStyleReadFrom((id *)v18, a2)) {
          goto LABEL_49;
        }
        goto LABEL_42;
      case 8u:
        unint64_t v18 = objc_alloc_init(APPBAdAction);
        objc_storeStrong((id *)(a1 + 16), v18);
        if PBReaderPlaceMark() && (APPBAdActionReadFrom((uint64_t)v18, a2))
        {
LABEL_42:
          PBReaderRecallMark();

LABEL_47:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_49:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_47;
    }
  }
}

uint64_t APPBMediaAssetReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 72;
        goto LABEL_81;
      case 2u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 56;
        goto LABEL_81;
      case 3u:
        char v16 = 0;
        unsigned int v17 = 0;
        uint64_t v18 = 0;
        *(_WORD *)(a1 + 88) |= 0x10u;
        while (2)
        {
          uint64_t v19 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v21 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v19);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v20;
            v18 |= (unint64_t)(v21 & 0x7F) << v16;
            if (v21 < 0)
            {
              v16 += 7;
              BOOL v10 = v17++ >= 9;
              if (v10)
              {
                LODWORD(v18) = 0;
                goto LABEL_85;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v18) = 0;
        }
LABEL_85:
        uint64_t v59 = 44;
        goto LABEL_102;
      case 4u:
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v18 = 0;
        *(_WORD *)(a1 + 88) |= 0x40u;
        while (2)
        {
          uint64_t v24 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v24);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v25;
            v18 |= (unint64_t)(v26 & 0x7F) << v22;
            if (v26 < 0)
            {
              v22 += 7;
              BOOL v10 = v23++ >= 9;
              if (v10)
              {
                LODWORD(v18) = 0;
                goto LABEL_89;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v18) = 0;
        }
LABEL_89:
        uint64_t v59 = 64;
        goto LABEL_102;
      case 5u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v18 = 0;
        *(_WORD *)(a1 + 88) |= 8u;
        while (2)
        {
          uint64_t v29 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v30 = v29 + 1;
          if (v29 == -1 || v30 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v29);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v30;
            v18 |= (unint64_t)(v31 & 0x7F) << v27;
            if (v31 < 0)
            {
              v27 += 7;
              BOOL v10 = v28++ >= 9;
              if (v10)
              {
                LODWORD(v18) = 0;
                goto LABEL_93;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v18) = 0;
        }
LABEL_93:
        uint64_t v59 = 40;
        goto LABEL_102;
      case 6u:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v18 = 0;
        *(_WORD *)(a1 + 88) |= 0x80u;
        while (2)
        {
          uint64_t v34 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v35 = v34 + 1;
          if (v34 == -1 || v35 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v36 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v34);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v35;
            v18 |= (unint64_t)(v36 & 0x7F) << v32;
            if (v36 < 0)
            {
              v32 += 7;
              BOOL v10 = v33++ >= 9;
              if (v10)
              {
                LODWORD(v18) = 0;
                goto LABEL_97;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v18) = 0;
        }
LABEL_97:
        uint64_t v59 = 80;
        goto LABEL_102;
      case 7u:
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v18 = 0;
        *(_WORD *)(a1 + 88) |= 0x20u;
        while (2)
        {
          uint64_t v39 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v40 = v39 + 1;
          if (v39 == -1 || v40 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v41 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v39);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v40;
            v18 |= (unint64_t)(v41 & 0x7F) << v37;
            if (v41 < 0)
            {
              v37 += 7;
              BOOL v10 = v38++ >= 9;
              if (v10)
              {
                LODWORD(v18) = 0;
                goto LABEL_101;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v18) = 0;
        }
LABEL_101:
        uint64_t v59 = 48;
LABEL_102:
        *(_DWORD *)(a1 + v59) = v18;
        continue;
      case 8u:
        *(_WORD *)(a1 + 88) |= 1u;
        unint64_t v42 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v42 <= 0xFFFFFFFFFFFFFFF7 && v42 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v43 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v42);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v42 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v43 = 0;
        }
        uint64_t v62 = 8;
        goto LABEL_118;
      case 9u:
        *(_WORD *)(a1 + 88) |= 4u;
        unint64_t v44 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v44 <= 0xFFFFFFFFFFFFFFF7 && v44 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v43 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v44);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v44 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v43 = 0;
        }
        uint64_t v62 = 24;
        goto LABEL_118;
      case 0xAu:
        *(_WORD *)(a1 + 88) |= 2u;
        unint64_t v45 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v45 <= 0xFFFFFFFFFFFFFFF7 && v45 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v43 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v45);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v45 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v43 = 0;
        }
        uint64_t v62 = 16;
LABEL_118:
        *(void *)(a1 + v62) = v43;
        continue;
      case 0xBu:
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        *(_WORD *)(a1 + 88) |= 0x200u;
        while (2)
        {
          uint64_t v49 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v49);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v50;
            v48 |= (unint64_t)(v51 & 0x7F) << v46;
            if (v51 < 0)
            {
              v46 += 7;
              BOOL v10 = v47++ >= 9;
              if (v10)
              {
                uint64_t v48 = 0;
                goto LABEL_106;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v48 = 0;
        }
LABEL_106:
        BOOL v60 = v48 != 0;
        uint64_t v61 = 85;
        goto LABEL_111;
      case 0xCu:
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v54 = 0;
        *(_WORD *)(a1 + 88) |= 0x100u;
        break;
      case 0xDu:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 32;
LABEL_81:
        unsigned int v58 = *(void **)(a1 + v14);
        *(void *)(a1 + v14) = v13;

        continue;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        continue;
    }
    while (1)
    {
      uint64_t v55 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v56 = v55 + 1;
      if (v55 == -1 || v56 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v57 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v55);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v56;
      v54 |= (unint64_t)(v57 & 0x7F) << v52;
      if ((v57 & 0x80) == 0) {
        goto LABEL_108;
      }
      v52 += 7;
      BOOL v10 = v53++ >= 9;
      if (v10)
      {
        uint64_t v54 = 0;
        goto LABEL_110;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_108:
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      uint64_t v54 = 0;
    }
LABEL_110:
    BOOL v60 = v54 != 0;
    uint64_t v61 = 84;
LABEL_111:
    *(unsigned char *)(a1 + v61) = v60;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1000AC18C(id a1)
{
  uint64_t v1 = (void *)qword_100289870;
  qword_100289870 = (uint64_t)&off_10024AE68;
}

uint64_t APPBAttributionResponseReadFrom(void *a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    if ((v6 >> 3) == 1)
    {
      char v12 = objc_alloc_init(APPBKeyedParameterList);
      [a1 addVersionedAttributionDetails:v12];
      if (!PBReaderPlaceMark() || !APPBKeyedParameterListReadFrom(v12, a2))
      {

        return 0;
      }
      PBReaderRecallMark();
    }
    else
    {
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1000ACB64(id a1)
{
  qword_100289880 = objc_alloc_init(APPromotedContentLegacyInterface);

  _objc_release_x1();
}

uint64_t sub_1000AD520(uint64_t a1)
{
  uint64_t v2 = +[NSMutableDictionary dictionary];
  uint64_t v3 = *(void *)(a1 + 32);
  char v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  *(void *)(*(void *)(a1 + 32) + 48) = [objc_alloc((Class)APUnfairLock) initWithOptions:1];

  return _objc_release_x1();
}

void sub_1000AD628(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1000AD9EC(uint64_t a1, uint64_t a2, void *a3)
{
  unsigned int v5 = *(void **)(a1 + 40);
  id v6 = a3;
  id v7 = [v5 objectForKeyedSubscript:a2];
  [*(id *)(a1 + 32) setObject:v7 forKeyedSubscript:v6];
}

void sub_1000AE214(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) unsignedIntValue];
  uint64_t v3 = [APContentDataInternal alloc];
  char v4 = [*(id *)(a1 + 40) identifier];
  [*(id *)(a1 + 40) maxSize];
  id v5 = -[APContentDataInternal initRateLimitedForContextId:containerSize:placementType:](v3, "initRateLimitedForContextId:containerSize:placementType:", v4, v2);

  id v6 = APLogForCategory();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    id v7 = [v5 content];
    char v8 = [v7 identifier];
    uint64_t v9 = *(void *)(a1 + 48);
    int v10 = 138543874;
    int v11 = v8;
    __int16 v12 = 2160;
    uint64_t v13 = 1752392040;
    __int16 v14 = 2112;
    uint64_t v15 = v9;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Returning rate limited adOpID: %{public}@. Token: %{mask.hash}@", (uint8_t *)&v10, 0x20u);
  }
  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
}

void sub_1000AE494(id a1)
{
  uint64_t v1 = (void *)qword_100289898;
  qword_100289898 = (uint64_t)&off_10024AE90;
}

uint64_t APPBLogVideoAnalyticsEventRequestReadFrom(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    p_info = &OBJC_METACLASS___APPBAssetMetric.info;
    id v5 = &selRef_trackingURLType;
    id v6 = &selRef_trackingURLType;
    do
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        break;
      }
      char v7 = 0;
      unsigned int v8 = 0;
      unint64_t v9 = 0;
      while (1)
      {
        uint64_t v10 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v10);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v11;
        v9 |= (unint64_t)(v12 & 0x7F) << v7;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v7 += 7;
        BOOL v13 = v8++ >= 9;
        if (v13)
        {
          unint64_t v9 = 0;
          int v14 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_12:
      int v14 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v9 = 0;
      }
LABEL_14:
      if (v14 || (v9 & 7) == 4) {
        break;
      }
      switch((v9 >> 3))
      {
        case 1u:
          char v16 = v6;
          unsigned int v17 = v5;
          uint64_t v18 = p_info;
          id v19 = objc_alloc_init((Class)(p_info + 171));
          objc_storeStrong((id *)(a1 + 56), v19);
          if PBReaderPlaceMark() && (APPBLogMetaDataReadFrom((uint64_t)v19, a2))
          {
            PBReaderRecallMark();

            p_info = v18;
            id v5 = v17;
            id v6 = v16;
            continue;
          }

          return 0;
        case 2u:
          uint64_t v21 = PBReaderReadString();
          uint64_t v22 = *((int *)v5 + 999);
          unsigned int v23 = *(void **)(a1 + v22);
          *(void *)(a1 + v22) = v21;

          continue;
        case 3u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v26 = 0;
          *(unsigned char *)(a1 + *((int *)v6 + 1000)) |= 0x20u;
          while (2)
          {
            uint64_t v27 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            unint64_t v28 = v27 + 1;
            if (v27 == -1 || v28 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
            {
              *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            }
            else
            {
              char v29 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v27);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v28;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                BOOL v13 = v25++ >= 9;
                if (v13)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_57;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            LODWORD(v26) = 0;
          }
LABEL_57:
          uint64_t v42 = 64;
          goto LABEL_62;
        case 4u:
          *(unsigned char *)(a1 + *((int *)v6 + 1000)) |= 1u;
          unint64_t v30 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v30 <= 0xFFFFFFFFFFFFFFF7 && v30 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            uint64_t v31 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v30);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v30 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            uint64_t v31 = 0;
          }
          uint64_t v43 = 8;
          goto LABEL_71;
        case 5u:
          *(unsigned char *)(a1 + *((int *)v6 + 1000)) |= 4u;
          unint64_t v32 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v32 <= 0xFFFFFFFFFFFFFFF7 && v32 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            uint64_t v31 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v32);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v32 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            uint64_t v31 = 0;
          }
          uint64_t v43 = 24;
          goto LABEL_71;
        case 6u:
          *(unsigned char *)(a1 + *((int *)v6 + 1000)) |= 8u;
          unint64_t v33 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v33 <= 0xFFFFFFFFFFFFFFF7 && v33 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            uint64_t v31 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v33);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v33 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            uint64_t v31 = 0;
          }
          uint64_t v43 = 32;
          goto LABEL_71;
        case 7u:
          *(unsigned char *)(a1 + *((int *)v6 + 1000)) |= 2u;
          unint64_t v34 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v34 <= 0xFFFFFFFFFFFFFFF7 && v34 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            uint64_t v31 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v34);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v34 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            uint64_t v31 = 0;
          }
          uint64_t v43 = 16;
LABEL_71:
          *(void *)(a1 + v43) = v31;
          continue;
        case 8u:
          char v35 = 0;
          unsigned int v36 = 0;
          uint64_t v26 = 0;
          *(unsigned char *)(a1 + *((int *)v6 + 1000)) |= 0x10u;
          break;
        case 9u:
          *(unsigned char *)(a1 + *((int *)v6 + 1000)) |= 0x40u;
          unint64_t v40 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v40 <= 0xFFFFFFFFFFFFFFFBLL && v40 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            int v41 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v40);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v40 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            int v41 = 0;
          }
          *(_DWORD *)(a1 + 68) = v41;
          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v37 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        unint64_t v38 = v37 + 1;
        if (v37 == -1 || v38 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v39 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v37);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v38;
        v26 |= (unint64_t)(v39 & 0x7F) << v35;
        if ((v39 & 0x80) == 0) {
          goto LABEL_59;
        }
        v35 += 7;
        BOOL v13 = v36++ >= 9;
        if (v13)
        {
          LODWORD(v26) = 0;
          goto LABEL_61;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_59:
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        LODWORD(v26) = 0;
      }
LABEL_61:
      uint64_t v42 = 48;
LABEL_62:
      *(_DWORD *)(a1 + v42) = v26;
    }
    while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length));
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1000B12A8(id a1)
{
  uint64_t v1 = (void *)qword_1002898A8;
  qword_1002898A8 = (uint64_t)&off_10024AEB8;
}

uint64_t APPBAttributionRequestReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v13 = PBReaderReadData();
        uint64_t v14 = 88;
        goto LABEL_53;
      case 2u:
        uint64_t v13 = PBReaderReadData();
        uint64_t v14 = 104;
        goto LABEL_53;
      case 3u:
        uint64_t v13 = PBReaderReadData();
        uint64_t v14 = 56;
        goto LABEL_53;
      case 4u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 64;
        goto LABEL_53;
      case 5u:
        *(unsigned char *)(a1 + 124) |= 8u;
        unint64_t v16 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v16 <= 0xFFFFFFFFFFFFFFF7 && v16 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v17 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v16);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v16 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v17 = 0;
        }
        uint64_t v41 = 32;
        goto LABEL_87;
      case 6u:
        *(unsigned char *)(a1 + 124) |= 2u;
        unint64_t v18 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v18 <= 0xFFFFFFFFFFFFFFF7 && v18 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v17 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v18 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v17 = 0;
        }
        uint64_t v41 = 16;
        goto LABEL_87;
      case 7u:
        *(unsigned char *)(a1 + 124) |= 4u;
        unint64_t v19 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v17 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v19);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v19 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v17 = 0;
        }
        uint64_t v41 = 24;
        goto LABEL_87;
      case 8u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        *(unsigned char *)(a1 + 124) |= 0x80u;
        while (2)
        {
          uint64_t v23 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v23);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v24;
            v22 |= (unint64_t)(v25 & 0x7F) << v20;
            if (v25 < 0)
            {
              v20 += 7;
              BOOL v10 = v21++ >= 9;
              if (v10)
              {
                uint64_t v22 = 0;
                goto LABEL_67;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v22 = 0;
        }
LABEL_67:
        *(unsigned char *)(a1 + 120) = v22 != 0;
        continue;
      case 9u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        *(unsigned char *)(a1 + 124) |= 0x40u;
        while (2)
        {
          uint64_t v29 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v30 = v29 + 1;
          if (v29 == -1 || v30 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v29);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v30;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v10 = v27++ >= 9;
              if (v10)
              {
                LODWORD(v28) = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v28) = 0;
        }
LABEL_71:
        uint64_t v40 = 96;
        goto LABEL_76;
      case 0xAu:
        uint64_t v13 = PBReaderReadData();
        uint64_t v14 = 112;
        goto LABEL_53;
      case 0xBu:
        uint64_t v13 = PBReaderReadData();
        uint64_t v14 = 72;
        goto LABEL_53;
      case 0xCu:
        *(unsigned char *)(a1 + 124) |= 0x10u;
        unint64_t v32 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v32 <= 0xFFFFFFFFFFFFFFF7 && v32 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v17 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v32);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v32 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v17 = 0;
        }
        uint64_t v41 = 40;
        goto LABEL_87;
      case 0xDu:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 48;
LABEL_53:
        unint64_t v33 = *(void **)(a1 + v14);
        *(void *)(a1 + v14) = v13;

        continue;
      case 0xEu:
        *(unsigned char *)(a1 + 124) |= 1u;
        unint64_t v34 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v34 <= 0xFFFFFFFFFFFFFFF7 && v34 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v17 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v34);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v34 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v17 = 0;
        }
        uint64_t v41 = 8;
LABEL_87:
        *(void *)(a1 + v41) = v17;
        continue;
      case 0xFu:
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v28 = 0;
        *(unsigned char *)(a1 + 124) |= 0x20u;
        break;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        continue;
    }
    while (1)
    {
      uint64_t v37 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v38 = v37 + 1;
      if (v37 == -1 || v38 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v39 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v37);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v38;
      v28 |= (unint64_t)(v39 & 0x7F) << v35;
      if ((v39 & 0x80) == 0) {
        goto LABEL_73;
      }
      v35 += 7;
      BOOL v10 = v36++ >= 9;
      if (v10)
      {
        LODWORD(v28) = 0;
        goto LABEL_75;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_73:
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LODWORD(v28) = 0;
    }
LABEL_75:
    uint64_t v40 = 80;
LABEL_76:
    *(_DWORD *)(a1 + v40) = v28;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t APPBLogMetaDataReadFrom(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 64;
        goto LABEL_112;
      case 2u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        *(_WORD *)(a1 + 204) |= 0x400u;
        while (2)
        {
          uint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v22 = v21 + 1;
          if (v21 == -1 || v22 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v23 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v22;
            v20 |= (unint64_t)(v23 & 0x7F) << v18;
            if (v23 < 0)
            {
              v18 += 7;
              BOOL v10 = v19++ >= 9;
              if (v10)
              {
                LODWORD(v20) = 0;
                goto LABEL_130;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v20) = 0;
        }
LABEL_130:
        uint64_t v80 = 144;
        goto LABEL_171;
      case 3u:
        uint64_t v13 = PBReaderReadData();
        uint64_t v14 = 128;
        goto LABEL_112;
      case 4u:
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v20 = 0;
        *(_WORD *)(a1 + 204) |= 0x100u;
        while (2)
        {
          uint64_t v26 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v27 = v26 + 1;
          if (v26 == -1 || v27 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v28 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v26);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v27;
            v20 |= (unint64_t)(v28 & 0x7F) << v24;
            if (v28 < 0)
            {
              v24 += 7;
              BOOL v10 = v25++ >= 9;
              if (v10)
              {
                LODWORD(v20) = 0;
                goto LABEL_134;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v20) = 0;
        }
LABEL_134:
        uint64_t v80 = 136;
        goto LABEL_171;
      case 5u:
        char v29 = 0;
        unsigned int v30 = 0;
        uint64_t v20 = 0;
        *(_WORD *)(a1 + 204) |= 0x800u;
        while (2)
        {
          uint64_t v31 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v33 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v31);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v32;
            v20 |= (unint64_t)(v33 & 0x7F) << v29;
            if (v33 < 0)
            {
              v29 += 7;
              BOOL v10 = v30++ >= 9;
              if (v10)
              {
                LODWORD(v20) = 0;
                goto LABEL_138;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v20) = 0;
        }
LABEL_138:
        uint64_t v80 = 148;
        goto LABEL_171;
      case 6u:
      case 7u:
      case 0xCu:
LABEL_21:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_179;
      case 8u:
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v20 = 0;
        *(_WORD *)(a1 + 204) |= 0x40u;
        while (2)
        {
          uint64_t v36 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v37 = v36 + 1;
          if (v36 == -1 || v37 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v38 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v36);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v37;
            v20 |= (unint64_t)(v38 & 0x7F) << v34;
            if (v38 < 0)
            {
              v34 += 7;
              BOOL v10 = v35++ >= 9;
              if (v10)
              {
                LODWORD(v20) = 0;
                goto LABEL_142;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v20) = 0;
        }
LABEL_142:
        uint64_t v80 = 88;
        goto LABEL_171;
      case 9u:
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v20 = 0;
        *(_WORD *)(a1 + 204) |= 8u;
        while (2)
        {
          uint64_t v41 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v43 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v41);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v42;
            v20 |= (unint64_t)(v43 & 0x7F) << v39;
            if (v43 < 0)
            {
              v39 += 7;
              BOOL v10 = v40++ >= 9;
              if (v10)
              {
                LODWORD(v20) = 0;
                goto LABEL_146;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v20) = 0;
        }
LABEL_146:
        uint64_t v80 = 48;
        goto LABEL_171;
      case 0xAu:
        uint64_t v13 = PBReaderReadData();
        uint64_t v14 = 184;
        goto LABEL_112;
      case 0xBu:
        PBReaderReadData();
        uint64_t v15 = (APPBAdSize *)objc_claimAutoreleasedReturnValue();
        if (v15) {
          [(id)a1 addTiltTrackBlob:v15];
        }
        goto LABEL_109;
      case 0xDu:
        *(_WORD *)(a1 + 204) |= 4u;
        unint64_t v44 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v44 <= 0xFFFFFFFFFFFFFFF7 && v44 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v45 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v44);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v44 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v45 = 0;
        }
        uint64_t v81 = 24;
        goto LABEL_178;
      case 0xEu:
        *(_WORD *)(a1 + 204) |= 2u;
        unint64_t v46 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v46 <= 0xFFFFFFFFFFFFFFF7 && v46 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v45 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v46);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v46 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v45 = 0;
        }
        uint64_t v81 = 16;
LABEL_178:
        *(void *)(a1 + v81) = v45;
        goto LABEL_179;
      case 0xFu:
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v20 = 0;
        *(_WORD *)(a1 + 204) |= 0x200u;
        while (2)
        {
          uint64_t v49 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v49);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v50;
            v20 |= (unint64_t)(v51 & 0x7F) << v47;
            if (v51 < 0)
            {
              v47 += 7;
              BOOL v10 = v48++ >= 9;
              if (v10)
              {
                LODWORD(v20) = 0;
                goto LABEL_150;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v20) = 0;
        }
LABEL_150:
        uint64_t v80 = 140;
        goto LABEL_171;
      case 0x10u:
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v20 = 0;
        *(_WORD *)(a1 + 204) |= 0x20u;
        while (2)
        {
          uint64_t v54 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v55 = v54 + 1;
          if (v54 == -1 || v55 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v54);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v55;
            v20 |= (unint64_t)(v56 & 0x7F) << v52;
            if (v56 < 0)
            {
              v52 += 7;
              BOOL v10 = v53++ >= 9;
              if (v10)
              {
                LODWORD(v20) = 0;
                goto LABEL_154;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v20) = 0;
        }
LABEL_154:
        uint64_t v80 = 76;
        goto LABEL_171;
      case 0x11u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 168;
        goto LABEL_112;
      case 0x12u:
        char v57 = 0;
        unsigned int v58 = 0;
        uint64_t v20 = 0;
        *(_WORD *)(a1 + 204) |= 0x1000u;
        while (2)
        {
          uint64_t v59 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v60 = v59 + 1;
          if (v59 == -1 || v60 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v61 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v59);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v60;
            v20 |= (unint64_t)(v61 & 0x7F) << v57;
            if (v61 < 0)
            {
              v57 += 7;
              BOOL v10 = v58++ >= 9;
              if (v10)
              {
                LODWORD(v20) = 0;
                goto LABEL_158;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v20) = 0;
        }
LABEL_158:
        uint64_t v80 = 176;
        goto LABEL_171;
      case 0x13u:
        char v62 = 0;
        unsigned int v63 = 0;
        uint64_t v64 = 0;
        *(_WORD *)(a1 + 204) |= 0x2000u;
        while (2)
        {
          uint64_t v65 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v66 = v65 + 1;
          if (v65 == -1 || v66 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v67 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v65);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v66;
            v64 |= (unint64_t)(v67 & 0x7F) << v62;
            if (v67 < 0)
            {
              v62 += 7;
              BOOL v10 = v63++ >= 9;
              if (v10)
              {
                uint64_t v64 = 0;
                goto LABEL_162;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v64 = 0;
        }
LABEL_162:
        *(unsigned char *)(a1 + 200) = v64 != 0;
        goto LABEL_179;
      case 0x14u:
        uint64_t v13 = PBReaderReadData();
        uint64_t v14 = 120;
        goto LABEL_112;
      case 0x15u:
        uint64_t v13 = PBReaderReadData();
        uint64_t v14 = 56;
        goto LABEL_112;
      case 0x16u:
        uint64_t v13 = PBReaderReadData();
        uint64_t v14 = 96;
        goto LABEL_112;
      case 0x17u:
        uint64_t v13 = PBReaderReadData();
        uint64_t v14 = 104;
LABEL_112:
        uint64_t v69 = *(void **)(a1 + v14);
        *(void *)(a1 + v14) = v13;

        goto LABEL_179;
      default:
        switch((v6 >> 3))
        {
          case 'd':
            uint64_t v15 = objc_alloc_init(APPBAdSize);
            uint64_t v16 = 152;
            goto LABEL_106;
          case 'e':
            *(_WORD *)(a1 + 204) |= 1u;
            unint64_t v68 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            if (v68 <= 0xFFFFFFFFFFFFFFF7 && v68 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
            {
              uint64_t v45 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v68);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v68 + 8;
            }
            else
            {
              *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
              uint64_t v45 = 0;
            }
            uint64_t v81 = 8;
            goto LABEL_178;
          case 'f':
            uint64_t v15 = objc_alloc_init(APPBAdSize);
            uint64_t v16 = 80;
            goto LABEL_106;
          case 'g':
            uint64_t v15 = objc_alloc_init(APPBAdSize);
            uint64_t v16 = 160;
LABEL_106:
            objc_storeStrong((id *)(a1 + v16), v15);
            if PBReaderPlaceMark() && (APPBAdSizeReadFrom((uint64_t)v15, a2))
            {
              PBReaderRecallMark();
LABEL_109:

LABEL_179:
              if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
                return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
              }
              continue;
            }

            return 0;
          case 'h':
            uint64_t v13 = PBReaderReadString();
            uint64_t v14 = 32;
            goto LABEL_112;
          case 'i':
            uint64_t v13 = PBReaderReadString();
            uint64_t v14 = 40;
            goto LABEL_112;
          case 'j':
            char v70 = 0;
            unsigned int v71 = 0;
            uint64_t v20 = 0;
            *(_WORD *)(a1 + 204) |= 0x10u;
            while (2)
            {
              uint64_t v72 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
              unint64_t v73 = v72 + 1;
              if (v72 == -1 || v73 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
              {
                *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
              }
              else
              {
                char v74 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v72);
                *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v73;
                v20 |= (unint64_t)(v74 & 0x7F) << v70;
                if (v74 < 0)
                {
                  v70 += 7;
                  BOOL v10 = v71++ >= 9;
                  if (v10)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_166;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
              LODWORD(v20) = 0;
            }
LABEL_166:
            uint64_t v80 = 72;
            goto LABEL_171;
          case 'k':
            char v75 = 0;
            unsigned int v76 = 0;
            uint64_t v20 = 0;
            *(_WORD *)(a1 + 204) |= 0x80u;
            while (2)
            {
              uint64_t v77 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
              unint64_t v78 = v77 + 1;
              if (v77 == -1 || v78 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
              {
                *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
              }
              else
              {
                char v79 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v77);
                *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v78;
                v20 |= (unint64_t)(v79 & 0x7F) << v75;
                if (v79 < 0)
                {
                  v75 += 7;
                  BOOL v10 = v76++ >= 9;
                  if (v10)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_170;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
              LODWORD(v20) = 0;
            }
LABEL_170:
            uint64_t v80 = 112;
LABEL_171:
            *(_DWORD *)(a1 + v80) = v20;
            goto LABEL_179;
          default:
            goto LABEL_21;
        }
    }
  }
}

void sub_1000B7644(id a1)
{
  uint64_t v1 = (void *)qword_1002898B8;
  qword_1002898B8 = (uint64_t)&off_10024AEE0;
}

BOOL APPBVideoAssetReadFrom(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      unint64_t v12 = v6 >> 3;
      if ((v6 >> 3) == 3) {
        break;
      }
      if (v12 == 2)
      {
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 8;
        goto LABEL_23;
      }
      if (v12 == 1)
      {
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 16;
LABEL_23:
        uint64_t v15 = *(void **)(a1 + v14);
        *(void *)(a1 + v14) = v13;

        goto LABEL_25;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_25:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }
    uint64_t v13 = PBReaderReadData();
    uint64_t v14 = 24;
    goto LABEL_23;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1000B7E1C(id a1)
{
  uint64_t v1 = (void *)qword_1002898C8;
  qword_1002898C8 = (uint64_t)&off_10024AF08;
}

void sub_1000B821C(id a1)
{
  uint64_t v1 = (void *)qword_1002898D8;
  qword_1002898D8 = (uint64_t)&off_10024AF30;
}

BOOL APPBParameterReadFrom(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      if ((v6 >> 3) == 2) {
        break;
      }
      if ((v6 >> 3) == 1)
      {
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 8;
LABEL_21:
        uint64_t v14 = *(void **)(a1 + v13);
        *(void *)(a1 + v13) = v12;

        goto LABEL_23;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_23:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }
    uint64_t v12 = PBReaderReadString();
    uint64_t v13 = 16;
    goto LABEL_21;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1000B88D4(id a1)
{
  uint64_t v1 = (void *)qword_1002898E8;
  qword_1002898E8 = (uint64_t)&off_10024AF58;
}

BOOL APPBLogAnalyticsResponseReadFrom(uint64_t a1, uint64_t a2)
{
  while (1)
  {
    int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
      return v3 == 0;
    }
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error))
    {
      int v3 = 1;
      return v3 == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    uint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        LOBYTE(v6) = 0;
        int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LOBYTE(v6) = 0;
    }
LABEL_13:
    if (v3) {
      BOOL v10 = 1;
    }
    else {
      BOOL v10 = (v6 & 7) == 4;
    }
    if (v10) {
      return v3 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

uint64_t APPBUserTransparencyResponseReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    if ((v6 >> 3) == 1)
    {
      uint64_t v12 = objc_alloc_init(APPBTransparencyDetails);
      objc_storeStrong((id *)(a1 + 8), v12);
      if (!PBReaderPlaceMark() || !APPBTransparencyDetailsReadFrom((uint64_t)v12, a2))
      {

        return 0;
      }
      PBReaderRecallMark();
    }
    else
    {
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t APPBButtonStyleReadFrom(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v13 = objc_alloc_init(APPBColor);
        uint64_t v14 = 16;
        goto LABEL_24;
      case 2u:
        uint64_t v13 = objc_alloc_init(APPBColor);
        uint64_t v14 = 40;
        goto LABEL_24;
      case 3u:
        uint64_t v13 = objc_alloc_init(APPBColor);
        uint64_t v14 = 32;
        goto LABEL_24;
      case 4u:
        uint64_t v13 = objc_alloc_init(APPBColor);
        uint64_t v14 = 48;
LABEL_24:
        objc_storeStrong((id *)(a1 + v14), v13);
        if (!PBReaderPlaceMark() || (APPBColorReadFrom(v13, a2) & 1) == 0) {
          goto LABEL_38;
        }
        goto LABEL_32;
      case 5u:
        *(unsigned char *)(a1 + 56) |= 1u;
        unint64_t v16 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v16 <= 0xFFFFFFFFFFFFFFFBLL && v16 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          int v17 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v16);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v16 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          int v17 = 0;
        }
        *(_DWORD *)(a1 + 24) = v17;
        goto LABEL_33;
      case 6u:
        uint64_t v13 = objc_alloc_init(APPBBorderStyle);
        objc_storeStrong((id *)(a1 + 8), v13);
        if PBReaderPlaceMark() && (APPBBorderStyleReadFrom((uint64_t)v13, a2))
        {
LABEL_32:
          PBReaderRecallMark();

LABEL_33:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_38:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_33;
    }
  }
}

uint64_t APPBInstallAttributionReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 40;
        goto LABEL_29;
      case 2u:
        char v14 = 0;
        unsigned int v15 = 0;
        uint64_t v16 = 0;
        *(unsigned char *)(a1 + 72) |= 2u;
        while (2)
        {
          unint64_t v17 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v17 == -1 || v17 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v18 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v17);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v17 + 1;
            v16 |= (unint64_t)(v18 & 0x7F) << v14;
            if (v18 < 0)
            {
              v14 += 7;
              BOOL v9 = v15++ >= 9;
              if (v9)
              {
                uint64_t v16 = 0;
                goto LABEL_56;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v16 = 0;
        }
LABEL_56:
        uint64_t v33 = 16;
        goto LABEL_69;
      case 3u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 64;
        goto LABEL_29;
      case 4u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 48;
        goto LABEL_29;
      case 5u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 56;
LABEL_29:
        unsigned int v19 = *(void **)(a1 + v13);
        *(void *)(a1 + v13) = v12;

        continue;
      case 6u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v16 = 0;
        *(unsigned char *)(a1 + 72) |= 1u;
        while (2)
        {
          unint64_t v22 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v22 == -1 || v22 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v23 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v22);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v22 + 1;
            v16 |= (unint64_t)(v23 & 0x7F) << v20;
            if (v23 < 0)
            {
              v20 += 7;
              BOOL v9 = v21++ >= 9;
              if (v9)
              {
                uint64_t v16 = 0;
                goto LABEL_60;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v16 = 0;
        }
LABEL_60:
        uint64_t v33 = 8;
        goto LABEL_69;
      case 7u:
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v16 = 0;
        *(unsigned char *)(a1 + 72) |= 4u;
        while (2)
        {
          unint64_t v26 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v26 == -1 || v26 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v27 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v26);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v26 + 1;
            v16 |= (unint64_t)(v27 & 0x7F) << v24;
            if (v27 < 0)
            {
              v24 += 7;
              BOOL v9 = v25++ >= 9;
              if (v9)
              {
                uint64_t v16 = 0;
                goto LABEL_64;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v16 = 0;
        }
LABEL_64:
        uint64_t v33 = 24;
        goto LABEL_69;
      case 9u:
        char v29 = 0;
        unsigned int v30 = 0;
        uint64_t v16 = 0;
        *(unsigned char *)(a1 + 72) |= 8u;
        break;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        continue;
    }
    while (1)
    {
      unint64_t v31 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v31 == -1 || v31 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v32 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v31);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v31 + 1;
      v16 |= (unint64_t)(v32 & 0x7F) << v29;
      if ((v32 & 0x80) == 0) {
        goto LABEL_66;
      }
      v29 += 7;
      BOOL v9 = v30++ >= 9;
      if (v9)
      {
        uint64_t v16 = 0;
        goto LABEL_68;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_66:
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      uint64_t v16 = 0;
    }
LABEL_68:
    uint64_t v33 = 32;
LABEL_69:
    *(void *)(a1 + v33) = v16;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1000BBBB4(id a1)
{
  uint64_t v1 = (void *)qword_1002898F8;
  qword_1002898F8 = (uint64_t)&off_10024AF80;
}

uint64_t APPBMescalSignSAPSetupRequestReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    if ((v6 >> 3) == 1)
    {
      uint64_t v12 = PBReaderReadData();
      uint64_t v13 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = v12;
    }
    else
    {
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1000BC050(id a1)
{
  uint64_t v1 = (void *)qword_100289908;
  qword_100289908 = (uint64_t)&off_10024AFA8;
}

uint64_t APPBOptOutRequestReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v13 = PBReaderReadData();
        uint64_t v14 = 32;
        goto LABEL_38;
      case 2u:
        char v16 = 0;
        unsigned int v17 = 0;
        uint64_t v18 = 0;
        *(unsigned char *)(a1 + 48) |= 8u;
        break;
      case 3u:
        *(unsigned char *)(a1 + 48) |= 2u;
        unint64_t v22 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v23 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v22);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v22 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v23 = 0;
        }
        uint64_t v28 = 16;
        goto LABEL_47;
      case 4u:
        *(unsigned char *)(a1 + 48) |= 1u;
        unint64_t v24 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v24 <= 0xFFFFFFFFFFFFFFF7 && v24 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v23 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v24);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v24 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v23 = 0;
        }
        uint64_t v28 = 8;
LABEL_47:
        *(void *)(a1 + v28) = v23;
        continue;
      case 5u:
        *(unsigned char *)(a1 + 48) |= 4u;
        unint64_t v25 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v25 <= 0xFFFFFFFFFFFFFFFBLL && v25 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          int v26 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v25);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v25 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          int v26 = 0;
        }
        *(_DWORD *)(a1 + 40) = v26;
        continue;
      case 6u:
        uint64_t v13 = PBReaderReadData();
        uint64_t v14 = 24;
LABEL_38:
        char v27 = *(void **)(a1 + v14);
        *(void *)(a1 + v14) = v13;

        continue;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        continue;
    }
    while (1)
    {
      uint64_t v19 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v20 = v19 + 1;
      if (v19 == -1 || v20 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v21 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v19);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v20;
      v18 |= (unint64_t)(v21 & 0x7F) << v16;
      if ((v21 & 0x80) == 0) {
        goto LABEL_40;
      }
      v16 += 7;
      BOOL v10 = v17++ >= 9;
      if (v10)
      {
        uint64_t v18 = 0;
        goto LABEL_42;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_40:
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      uint64_t v18 = 0;
    }
LABEL_42:
    *(unsigned char *)(a1 + 44) = v18 != 0;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1000BD120(id a1)
{
  uint64_t v1 = (void *)qword_100289918;
  qword_100289918 = (uint64_t)&off_10024AFD0;
}

uint64_t APPBAggregateDistributionMetricReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    unint64_t v13 = v6 >> 3;
    if ((int)(v6 >> 3) <= 99)
    {
      if (v13 == 1)
      {
        uint64_t v16 = PBReaderReadString();
        uint64_t v17 = 32;
      }
      else
      {
        if (v13 != 2)
        {
LABEL_39:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
        }
        uint64_t v16 = PBReaderReadString();
        uint64_t v17 = 16;
      }
      unint64_t v25 = *(void **)(a1 + v17);
      *(void *)(a1 + v17) = v16;
    }
    else if (v13 == 100)
    {
      char v18 = 0;
      unsigned int v19 = 0;
      uint64_t v20 = 0;
      *(unsigned char *)(a1 + 44) |= 2u;
      while (1)
      {
        uint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        unint64_t v22 = v21 + 1;
        if (v21 == -1 || v22 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v23 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v22;
        v20 |= (unint64_t)(v23 & 0x7F) << v18;
        if ((v23 & 0x80) == 0) {
          goto LABEL_42;
        }
        v18 += 7;
        BOOL v10 = v19++ >= 9;
        if (v10)
        {
          LODWORD(v20) = 0;
          goto LABEL_44;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_42:
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        LODWORD(v20) = 0;
      }
LABEL_44:
      *(_DWORD *)(a1 + 24) = v20;
    }
    else
    {
      if (v13 == 101)
      {
        *(unsigned char *)(a1 + 44) |= 1u;
        unint64_t v24 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v24 <= 0xFFFFFFFFFFFFFFFBLL && v24 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          int v15 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v24);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v24 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          int v15 = 0;
        }
        uint64_t v27 = 8;
      }
      else
      {
        if (v13 != 102) {
          goto LABEL_39;
        }
        *(unsigned char *)(a1 + 44) |= 4u;
        unint64_t v14 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v14 <= 0xFFFFFFFFFFFFFFFBLL && v14 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          int v15 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v14);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v14 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          int v15 = 0;
        }
        uint64_t v27 = 40;
      }
      *(_DWORD *)(a1 + v27) = v15;
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1000BDF84(id a1)
{
  uint64_t v1 = (void *)qword_100289928;
  qword_100289928 = (uint64_t)&off_10024AFF8;
}

BOOL APPBAdSpaceStatusEventResponseReadFrom(uint64_t a1, uint64_t a2)
{
  while (1)
  {
    int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
      return v3 == 0;
    }
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error))
    {
      int v3 = 1;
      return v3 == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    uint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        LOBYTE(v6) = 0;
        int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LOBYTE(v6) = 0;
    }
LABEL_13:
    if (v3) {
      BOOL v10 = 1;
    }
    else {
      BOOL v10 = (v6 & 7) == 4;
    }
    if (v10) {
      return v3 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

void sub_1000BE278(id a1)
{
  uint64_t v1 = (void *)qword_100289938;
  qword_100289938 = (uint64_t)&off_10024B020;
}

BOOL APPBLogSubscriptionEventResponseReadFrom(uint64_t a1, uint64_t a2)
{
  while (1)
  {
    int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
      return v3 == 0;
    }
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error))
    {
      int v3 = 1;
      return v3 == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    uint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        LOBYTE(v6) = 0;
        int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LOBYTE(v6) = 0;
    }
LABEL_13:
    if (v3) {
      BOOL v10 = 1;
    }
    else {
      BOOL v10 = (v6 & 7) == 4;
    }
    if (v10) {
      return v3 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

void sub_1000BE56C(id a1)
{
  uint64_t v1 = (void *)qword_100289948;
  qword_100289948 = (uint64_t)&off_10024B048;
}

BOOL APPBLogAggregateMetricsRequestReadFrom(char *a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    unint64_t v12 = v6 >> 3;
    if ((int)(v6 >> 3) > 99)
    {
      if (v12 == 100)
      {
        int v15 = objc_alloc_init(APPBAggregateDistributionMetric);
        [a1 addDistributionMetrics:v15];
        if (!PBReaderPlaceMark() || (APPBAggregateDistributionMetricReadFrom((uint64_t)v15, a2) & 1) == 0)
        {
LABEL_37:

          return 0;
        }
LABEL_30:
        PBReaderRecallMark();
LABEL_31:

        continue;
      }
      if (v12 == 101)
      {
        int v15 = objc_alloc_init(APPBAggregateScalarMetric);
        [a1 addScalarMetrics:v15];
        if (!PBReaderPlaceMark() || (APPBAggregateScalarMetricReadFrom((uint64_t)v15, a2) & 1) == 0) {
          goto LABEL_37;
        }
        goto LABEL_30;
      }
    }
    else
    {
      if (v12 == 1)
      {
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 8;
        goto LABEL_27;
      }
      if (v12 == 2)
      {
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 24;
LABEL_27:
        int v15 = *(APPBAggregateDistributionMetric **)&a1[v14];
        *(void *)&a1[v14] = v13;
        goto LABEL_31;
      }
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1000BF6E0(id a1)
{
  uint64_t v1 = (void *)qword_100289958;
  qword_100289958 = (uint64_t)&off_10024B070;
}

BOOL APPBTagTransformationReadFrom(void *a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      if ((v6 >> 3) == 2) {
        break;
      }
      if ((v6 >> 3) == 1)
      {
        unint64_t v12 = PBReaderReadString();
        if (v12) {
          [a1 addRequiredTags:v12];
        }
LABEL_23:

        goto LABEL_25;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_25:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }
    unint64_t v12 = PBReaderReadString();
    if (v12) {
      [a1 addResultTags:v12];
    }
    goto LABEL_23;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1000C036C(id a1)
{
  uint64_t v1 = (void *)qword_100289968;
  qword_100289968 = (uint64_t)&off_10024B098;
}

uint64_t APPBAnalyticsEventReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0;
        uint64_t v11 = OBJC_IVAR___PBDataReader__error;
        int v12 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    uint64_t v11 = OBJC_IVAR___PBDataReader__error;
    int v12 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v12 || (v6 & 7) == 4) {
      break;
    }
    if ((v6 >> 3) == 3)
    {
      unint64_t v20 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
      {
        uint64_t v21 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v20);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v20 + 8;
      }
      else
      {
        *(unsigned char *)(a2 + v11) = 1;
        uint64_t v21 = 0;
      }
      *(void *)(a1 + 8) = v21;
    }
    else if ((v6 >> 3) == 2)
    {
      char v14 = 0;
      unsigned int v15 = 0;
      uint64_t v16 = 0;
      while (1)
      {
        uint64_t v17 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        unint64_t v18 = v17 + 1;
        if (v17 == -1 || v18 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v19 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v17);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v18;
        v16 |= (unint64_t)(v19 & 0x7F) << v14;
        if ((v19 & 0x80) == 0) {
          goto LABEL_32;
        }
        v14 += 7;
        BOOL v10 = v15++ >= 9;
        if (v10)
        {
          LODWORD(v16) = 0;
          goto LABEL_34;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_32:
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        LODWORD(v16) = 0;
      }
LABEL_34:
      *(_DWORD *)(a1 + 16) = v16;
    }
    else
    {
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1000C16AC(id a1)
{
  qword_100289978 = +[NSString stringWithFormat:@"%@%@%@", @"body", @".", @"creativeType"];

  _objc_release_x1();
}

void sub_1000C180C(id a1)
{
  uint64_t v1 = (void *)qword_100289988;
  qword_100289988 = (uint64_t)&off_10024B0C0;
}

BOOL APPBLogVideoAnalyticsEventResponseReadFrom(uint64_t a1, uint64_t a2)
{
  while (1)
  {
    int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
      return v3 == 0;
    }
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error))
    {
      int v3 = 1;
      return v3 == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    uint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        LOBYTE(v6) = 0;
        int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LOBYTE(v6) = 0;
    }
LABEL_13:
    if (v3) {
      BOOL v10 = 1;
    }
    else {
      BOOL v10 = (v6 & 7) == 4;
    }
    if (v10) {
      return v3 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

BOOL APPBTargetingDimensionsReadFrom(void *a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    if ((v6 >> 3) == 2)
    {
      int v12 = objc_alloc_init(APPBTargetingCriteria);
      [a1 addExclusionCriteria:v12];
    }
    else
    {
      if ((v6 >> 3) != 1)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        continue;
      }
      int v12 = objc_alloc_init(APPBTargetingCriteria);
      [a1 addInclusionCriteria:v12];
    }
    if (!PBReaderPlaceMark() || !APPBTargetingCriteriaReadFrom(v12, a2))
    {

      return 0;
    }
    PBReaderRecallMark();
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1000C2D98(id a1)
{
  uint64_t v1 = (void *)qword_100289998;
  qword_100289998 = (uint64_t)&off_10024B0E8;
}

BOOL APPBMescalSignSAPSetupCertificateRequestReadFrom(uint64_t a1, uint64_t a2)
{
  while (1)
  {
    int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
      return v3 == 0;
    }
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error))
    {
      int v3 = 1;
      return v3 == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    uint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        LOBYTE(v6) = 0;
        int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LOBYTE(v6) = 0;
    }
LABEL_13:
    if (v3) {
      BOOL v10 = 1;
    }
    else {
      BOOL v10 = (v6 & 7) == 4;
    }
    if (v10) {
      return v3 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

void sub_1000C3384(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000C339C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  unint64_t v7 = v6;
  if (v5) {
    BOOL v8 = 1;
  }
  else {
    BOOL v8 = v6 == 0;
  }
  char v9 = v8;
  BOOL v10 = APLogForCategory();
  uint64_t v11 = v10;
  if (v9)
  {
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      LOWORD(v14) = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "Time spent metric request succeeded.", (uint8_t *)&v14, 2u);
    }
  }
  else if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
  {
    int v12 = [v7 localizedDescription];
    int v14 = 138543362;
    unsigned int v15 = v12;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "Time spent metric request failed due to %{public}@.", (uint8_t *)&v14, 0xCu);
  }
  uint64_t v13 = *(void *)(*(void *)(a1 + 48) + 8);
  if (!*(unsigned char *)(v13 + 24))
  {
    *(unsigned char *)(v13 + 24) = 1;
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

uint64_t APPBResourceCacheEntryReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    unint64_t v13 = v6 >> 3;
    if ((v6 >> 3) == 3)
    {
      *(unsigned char *)(a1 + 32) |= 1u;
      unint64_t v17 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v17 <= 0xFFFFFFFFFFFFFFF7 && v17 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
      {
        uint64_t v18 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v17);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v17 + 8;
      }
      else
      {
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
        uint64_t v18 = 0;
      }
      *(void *)(a1 + 8) = v18;
    }
    else
    {
      if (v13 == 2)
      {
        uint64_t v14 = PBReaderReadString();
        uint64_t v15 = 16;
      }
      else
      {
        if (v13 != 1)
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
        }
        uint64_t v14 = PBReaderReadString();
        uint64_t v15 = 24;
      }
      uint64_t v16 = *(void **)(a1 + v15);
      *(void *)(a1 + v15) = v14;
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1000C3FE8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = a3;
  id v7 = a2;
  +[APAnalytics sendEvent:@"MescalSetup" statusDetail:&off_100249578 startDate:v5 error:v6];
  uint64_t v8 = *(void *)(a1 + 40);
  id v9 = [v7 buffer];

  (*(void (**)(uint64_t, id, id))(v8 + 16))(v8, v9, v6);
}

void sub_1000C41DC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = a3;
  id v7 = a2;
  +[APAnalytics sendEvent:@"MescalSetup" statusDetail:&off_100249590 startDate:v5 error:v6];
  uint64_t v8 = *(void *)(a1 + 40);
  id v9 = [v7 certificate];

  (*(void (**)(uint64_t, id, id))(v8 + 16))(v8, v9, v6);
}

void sub_1000C42F0(id a1)
{
  uint64_t v1 = (void *)qword_1002899A8;
  qword_1002899A8 = (uint64_t)&off_10024B110;
}

uint64_t APPBMescalSignSAPSetupCertificateResponseReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    if ((v6 >> 3) == 1)
    {
      uint64_t v12 = PBReaderReadData();
      unint64_t v13 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = v12;
    }
    else
    {
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1000C4868(id a1)
{
  uint64_t v1 = +[NSMutableDictionary dictionary];
  uint64_t v2 = (void *)qword_1002899B8;
  qword_1002899B8 = v1;

  [(id)qword_1002899B8 setObject:kAPMetricClientIdentifierKey forKey:&off_1002495C0];
  [(id)qword_1002899B8 setObject:@"capping_event" forKey:&off_1002495D8];
  [(id)qword_1002899B8 setObject:@"client_source" forKey:&off_1002495F0];
  [(id)qword_1002899B8 setObject:@"deletion_ids" forKey:&off_100249608];
  [(id)qword_1002899B8 setObject:@"element" forKey:&off_100249620];
  [(id)qword_1002899B8 setObject:@"elements_partially_shown" forKey:&off_100249638];
  [(id)qword_1002899B8 setObject:@"elements_shown" forKey:&off_100249650];
  [(id)qword_1002899B8 setObject:@"error_code" forKey:&off_100249668];
  [(id)qword_1002899B8 setObject:@"button_state" forKey:&off_100249680];
  [(id)qword_1002899B8 setObject:@"code" forKey:&off_100249698];
  [(id)qword_1002899B8 setObject:@"collapsed" forKey:&off_1002496B0];
  [(id)qword_1002899B8 setObject:@"dnu" forKey:&off_1002496C8];
  [(id)qword_1002899B8 setObject:@"duration" forKey:&off_1002496E0];
  [(id)qword_1002899B8 setObject:@"full_screen" forKey:&off_1002496F8];
  [(id)qword_1002899B8 setObject:@"height" forKey:&off_100249710];
  [(id)qword_1002899B8 setObject:@"impression_id" forKey:&off_100249728];
  [(id)qword_1002899B8 setObject:@"handle" forKey:&off_100249740];
  [(id)qword_1002899B8 setObject:@"news" forKey:&off_100249758];
  [(id)qword_1002899B8 setObject:@"percent" forKey:&off_100249770];
  [(id)qword_1002899B8 setObject:@"placeholder" forKey:&off_100249788];
  [(id)qword_1002899B8 setObject:@"placeholderIdentifier" forKey:&off_1002497A0];
  [(id)qword_1002899B8 setObject:@"placement" forKey:&off_1002497B8];
  [(id)qword_1002899B8 setObject:@"position" forKey:&off_1002497D0];
  [(id)qword_1002899B8 setObject:@"progress" forKey:&off_1002497E8];
  [(id)qword_1002899B8 setObject:@"quality" forKey:&off_100249800];
  [(id)qword_1002899B8 setObject:@"reason" forKey:&off_100249818];
  [(id)qword_1002899B8 setObject:@"representationIdentifier" forKey:&off_100249830];
  [(id)qword_1002899B8 setObject:@"return_time" forKey:&off_100249848];
  [(id)qword_1002899B8 setObject:@"scroll_velocity" forKey:&off_100249860];
  [(id)qword_1002899B8 setObject:@"search_term_id" forKey:&off_100249878];
  [(id)qword_1002899B8 setObject:@"start_date" forKey:&off_100249890];
  [(id)qword_1002899B8 setObject:kAPMetricSubscriptionCurrency forKey:&off_1002498A8];
  [(id)qword_1002899B8 setObject:kAPMetricSubscriptionIdentifier forKey:&off_1002498C0];
  [(id)qword_1002899B8 setObject:kAPMetricSubscriptionPrice forKey:&off_1002498D8];
  [(id)qword_1002899B8 setObject:kAPMetricSubscriptionPurchase forKey:&off_1002498F0];
  [(id)qword_1002899B8 setObject:kAPMetricSubscriptionSource forKey:&off_100249908];
  [(id)qword_1002899B8 setObject:kAPMetricSubscriptionToken forKey:&off_100249920];
  [(id)qword_1002899B8 setObject:kAPMetricSubscriptionType forKey:&off_100249938];
  [(id)qword_1002899B8 setObject:@"template_argument" forKey:&off_100249950];
  [(id)qword_1002899B8 setObject:@"template_metric_name" forKey:&off_100249968];
  [(id)qword_1002899B8 setObject:@"time_to_previous_install" forKey:&off_100249980];
  [(id)qword_1002899B8 setObject:@"type" forKey:&off_100249998];
  [(id)qword_1002899B8 setObject:@"url" forKey:&off_1002499B0];
  [(id)qword_1002899B8 setObject:@"voice_over_enabled" forKey:&off_1002499C8];
  [(id)qword_1002899B8 setObject:@"volume" forKey:&off_1002499E0];
  [(id)qword_1002899B8 setObject:@"was_native_slot" forKey:&off_1002499F8];
  [(id)qword_1002899B8 setObject:@"width" forKey:&off_100249A10];
  [(id)qword_1002899B8 setObject:@"x_position" forKey:&off_100249A28];
  [(id)qword_1002899B8 setObject:@"y_position" forKey:&off_100249A40];
  [(id)qword_1002899B8 setObject:kAPMetricClientInfoKey forKey:&off_100249A58];
  int v3 = (void *)qword_1002899B8;

  [v3 setObject:@"webview_terminated" forKey:&off_100249A70];
}

void sub_1000C5178(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1000C519C(uint64_t a1, void *a2, void *a3)
{
  unsigned int v5 = (id *)(a1 + 48);
  id v6 = a3;
  id v7 = a2;
  id WeakRetained = objc_loadWeakRetained(v5);
  [WeakRetained handleMetricResponse:v7 error:v6 forRequest:*(void *)(a1 + 32)];
}

void sub_1000C54CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000C54EC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000C54FC(uint64_t a1)
{
}

void sub_1000C5504(uint64_t a1, void *a2, int a3)
{
  id v10 = a2;
  if (a3)
  {
    unsigned int v5 = *(void **)(a1 + 32);
    id v6 = [*(id *)(a1 + 40) requestIdentifier];
    [v5 removeDelayedRequest:v6 cancel:0];
  }
  else
  {
    uint64_t v7 = os_transaction_create();
    uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8);
    id v9 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v7;

    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
}

void sub_1000C55AC(uint64_t a1, void *a2, void *a3)
{
  unsigned int v5 = *(void **)(a1 + 32);
  id v6 = *(void **)(a1 + 40);
  id v7 = a3;
  id v8 = a2;
  id v9 = [v6 requestIdentifier];
  [v5 removeDelayedRequest:v9 cancel:0];

  [*(id *)(a1 + 32) handleMetricResponse:v8 error:v7 forRequest:*(void *)(a1 + 40)];
  uint64_t v10 = *(void *)(*(void *)(a1 + 48) + 8);
  int v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = 0;
}

void sub_1000C58A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000C58C0(void *a1, uint64_t a2, void *a3)
{
  id v12 = a3;
  char v4 = [v12 internalContent];
  unsigned int v5 = [v4 content];
  id v6 = [v5 identifier];
  if ([v6 isEqualToString:a1[4]])
  {
    unsigned __int8 v7 = [v12 cancelled];

    if ((v7 & 1) == 0)
    {
      if (!*(void *)(*(void *)(a1[6] + 8) + 40))
      {
        uint64_t v8 = +[NSMutableArray array];
        uint64_t v9 = *(void *)(a1[6] + 8);
        uint64_t v10 = *(void **)(v9 + 40);
        *(void *)(v9 + 40) = v8;
      }
      if ((*(unsigned int (**)(void))(a1[5] + 16))()) {
        [*(id *)(*(void *)(a1[6] + 8) + 40) addObject:v12];
      }
    }
  }
  else
  {
  }

  return _objc_release_x2();
}

void sub_1000C7508(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) confirmedClickLock];
  [v2 lock];

  int v3 = [*(id *)(a1 + 40) internalContent];
  [v3 confirmClick];

  char v4 = [*(id *)(a1 + 40) internalContent];
  [v4 pendingConfirmedClick:0];

  id v5 = [*(id *)(a1 + 32) confirmedClickLock];
  [v5 unlock];
}

BOOL sub_1000C78F8(id a1, APLegacyMetricRequester *a2)
{
  return [(APLegacyMetricRequester *)a2 eventType] == 6;
}

void sub_1000C884C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL sub_1000C88F0(id a1, APLegacyMetricRequester *a2)
{
  return [(APLegacyMetricRequester *)a2 eventType] == 908;
}

void sub_1000C8A24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL sub_1000C8FFC(id a1, APLegacyMetricRequester *a2)
{
  return [(APLegacyMetricRequester *)a2 statusCode] == 3001;
}

void sub_1000C9D54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000C9D88(uint64_t a1, void *a2)
{
  unsigned __int8 v4 = [a2 charValue];
  return [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) appendBytes:&v4 length:1];
}

void sub_1000C9DD4(uint64_t a1)
{
  [*(id *)(a1 + 32) carouselFinishedSent];
  uint64_t v2 = APLogForCategory();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 40);
    int v4 = 134217984;
    uint64_t v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Sent delayed APPBLogSysEventRequest with type CarouselFinished after %.1f seconds.", (uint8_t *)&v4, 0xCu);
  }
}

void sub_1000CADD8(id a1, APServerRequester *a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = APLogForCategory();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    int v4 = [(APServerRequester *)v2 internalContent];
    uint64_t v5 = [v4 content];
    id v6 = [v5 identifier];
    int v7 = 138543618;
    uint64_t v8 = v6;
    __int16 v9 = 1024;
    int v10 = 2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Sending ASE AdNotAvailable for preroll video placeholder %{public}@ because it was not replaced in the allowed time (%d seconds)", (uint8_t *)&v7, 0x12u);
  }
}

void sub_1000CB018(id a1)
{
  uint64_t v1 = (void *)qword_1002899C8;
  qword_1002899C8 = (uint64_t)&off_10024B138;
}

uint64_t APPBAdSpaceStatusEventRequestReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 32;
        goto LABEL_63;
      case 2u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 24;
        goto LABEL_63;
      case 3u:
        uint64_t v13 = PBReaderReadData();
        uint64_t v14 = 40;
        goto LABEL_63;
      case 4u:
        uint64_t v13 = PBReaderReadData();
        uint64_t v14 = 56;
        goto LABEL_63;
      case 5u:
        uint64_t v13 = PBReaderReadData();
        uint64_t v14 = 80;
        goto LABEL_63;
      case 6u:
        *(unsigned char *)(a1 + 112) |= 2u;
        unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v15 <= 0xFFFFFFFFFFFFFFF7 && v15 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v16 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v16 = 0;
        }
        uint64_t v51 = 16;
        goto LABEL_97;
      case 7u:
        *(unsigned char *)(a1 + 112) |= 1u;
        unint64_t v17 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v17 <= 0xFFFFFFFFFFFFFFF7 && v17 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v16 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v17);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v17 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v16 = 0;
        }
        uint64_t v51 = 8;
LABEL_97:
        *(void *)(a1 + v51) = v16;
        continue;
      case 8u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        *(unsigned char *)(a1 + 112) |= 4u;
        while (2)
        {
          uint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v22 = v21 + 1;
          if (v21 == -1 || v22 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v23 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v22;
            v20 |= (unint64_t)(v23 & 0x7F) << v18;
            if (v23 < 0)
            {
              v18 += 7;
              BOOL v10 = v19++ >= 9;
              if (v10)
              {
                LODWORD(v20) = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v20) = 0;
        }
LABEL_74:
        uint64_t v48 = 96;
        goto LABEL_92;
      case 9u:
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        *(unsigned char *)(a1 + 112) |= 0x40u;
        while (2)
        {
          uint64_t v27 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v28 = v27 + 1;
          if (v27 == -1 || v28 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v29 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v27);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v28;
            v26 |= (unint64_t)(v29 & 0x7F) << v24;
            if (v29 < 0)
            {
              v24 += 7;
              BOOL v10 = v25++ >= 9;
              if (v10)
              {
                uint64_t v26 = 0;
                goto LABEL_78;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v26 = 0;
        }
LABEL_78:
        BOOL v49 = v26 != 0;
        uint64_t v50 = 109;
        goto LABEL_87;
      case 0xAu:
        char v30 = 0;
        unsigned int v31 = 0;
        uint64_t v20 = 0;
        *(unsigned char *)(a1 + 112) |= 0x10u;
        while (2)
        {
          uint64_t v32 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v33 = v32 + 1;
          if (v32 == -1 || v33 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v34 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v32);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v33;
            v20 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              BOOL v10 = v31++ >= 9;
              if (v10)
              {
                LODWORD(v20) = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v20) = 0;
        }
LABEL_82:
        uint64_t v48 = 104;
        goto LABEL_92;
      case 0xBu:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 88;
        goto LABEL_63;
      case 0xDu:
        uint64_t v13 = PBReaderReadData();
        uint64_t v14 = 72;
        goto LABEL_63;
      case 0xEu:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 48;
        goto LABEL_63;
      case 0xFu:
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(unsigned char *)(a1 + 112) |= 0x20u;
        while (2)
        {
          uint64_t v39 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v40 = v39 + 1;
          if (v39 == -1 || v40 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v41 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v39);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v40;
            v38 |= (unint64_t)(v41 & 0x7F) << v36;
            if (v41 < 0)
            {
              v36 += 7;
              BOOL v10 = v37++ >= 9;
              if (v10)
              {
                uint64_t v38 = 0;
                goto LABEL_86;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v38 = 0;
        }
LABEL_86:
        BOOL v49 = v38 != 0;
        uint64_t v50 = 108;
LABEL_87:
        *(unsigned char *)(a1 + v50) = v49;
        continue;
      case 0x10u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 64;
LABEL_63:
        unint64_t v42 = *(void **)(a1 + v14);
        *(void *)(a1 + v14) = v13;

        continue;
      case 0x11u:
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v20 = 0;
        *(unsigned char *)(a1 + 112) |= 8u;
        break;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        continue;
    }
    while (1)
    {
      uint64_t v45 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v46 = v45 + 1;
      if (v45 == -1 || v46 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v47 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v45);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v46;
      v20 |= (unint64_t)(v47 & 0x7F) << v43;
      if ((v47 & 0x80) == 0) {
        goto LABEL_89;
      }
      v43 += 7;
      BOOL v10 = v44++ >= 9;
      if (v10)
      {
        LODWORD(v20) = 0;
        goto LABEL_91;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_89:
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LODWORD(v20) = 0;
    }
LABEL_91:
    uint64_t v48 = 100;
LABEL_92:
    *(_DWORD *)(a1 + v48) = v20;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1000D0590(id a1)
{
  uint64_t v1 = (void *)qword_1002899D8;
  qword_1002899D8 = (uint64_t)&off_10024B160;
}

BOOL APPBLogSysEventResponseReadFrom(uint64_t a1, uint64_t a2)
{
  while (1)
  {
    int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
      return v3 == 0;
    }
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error))
    {
      int v3 = 1;
      return v3 == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    uint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        LOBYTE(v6) = 0;
        int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LOBYTE(v6) = 0;
    }
LABEL_13:
    if (v3) {
      BOOL v10 = 1;
    }
    else {
      BOOL v10 = (v6 & 7) == 4;
    }
    if (v10) {
      return v3 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

uint64_t APPBAdActionReadFrom(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (1)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    unint64_t v13 = v6 >> 3;
    if ((int)(v6 >> 3) > 199)
    {
      if ((int)v13 > 249)
      {
        switch((int)v13)
        {
          case 250:
            char v23 = 0;
            unsigned int v24 = 0;
            uint64_t v25 = 0;
            *(_WORD *)(a1 + 196) |= 0x200u;
            while (2)
            {
              uint64_t v26 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
              unint64_t v27 = v26 + 1;
              if (v26 == -1 || v27 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
              {
                *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
              }
              else
              {
                char v28 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v26);
                *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v27;
                v25 |= (unint64_t)(v28 & 0x7F) << v23;
                if (v28 < 0)
                {
                  v23 += 7;
                  BOOL v10 = v24++ >= 9;
                  if (v10)
                  {
                    uint64_t v25 = 0;
                    goto LABEL_151;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
              uint64_t v25 = 0;
            }
LABEL_151:
            BOOL v94 = v25 != 0;
            uint64_t v95 = 188;
            goto LABEL_189;
          case 251:
            uint64_t v78 = PBReaderReadString();
            uint64_t v79 = 176;
            goto LABEL_141;
          case 252:
            uint64_t v78 = PBReaderReadString();
            uint64_t v79 = 120;
            goto LABEL_141;
          case 253:
            uint64_t v78 = PBReaderReadString();
            uint64_t v79 = 64;
            goto LABEL_141;
          case 254:
            uint64_t v78 = PBReaderReadString();
            uint64_t v79 = 128;
            goto LABEL_141;
          default:
            if (v13 == 300)
            {
              *(_WORD *)(a1 + 196) |= 1u;
              unint64_t v88 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
              if (v88 <= 0xFFFFFFFFFFFFFFF7
                && (unint64_t v89 = v88 + 8, v88 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)))
              {
                uint64_t v90 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v88);
                *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v89;
              }
              else
              {
                uint64_t v90 = 0;
                *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
              }
              *(void *)(a1 + 8) = v90;
            }
            else
            {
              if (v13 != 301) {
                goto LABEL_142;
              }
              char v34 = 0;
              unsigned int v35 = 0;
              uint64_t v19 = 0;
              *(_WORD *)(a1 + 196) |= 4u;
              while (1)
              {
                uint64_t v36 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
                unint64_t v37 = v36 + 1;
                if (v36 == -1 || v37 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
                  break;
                }
                char v38 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v36);
                *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v37;
                v19 |= (unint64_t)(v38 & 0x7F) << v34;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_157;
                }
                v34 += 7;
                BOOL v10 = v35++ >= 9;
                if (v10)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_159;
                }
              }
              *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_157:
              if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
                LODWORD(v19) = 0;
              }
LABEL_159:
              uint64_t v93 = 56;
LABEL_172:
              *(_DWORD *)(a1 + v93) = v19;
            }
            break;
        }
        goto LABEL_201;
      }
      switch((int)v13)
      {
        case 200:
          *(_WORD *)(a1 + 196) |= 8u;
          unint64_t v14 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v14 <= 0xFFFFFFFFFFFFFFFBLL
            && (unint64_t v15 = v14 + 4, v14 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)))
          {
            int v16 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v14);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15;
          }
          else
          {
            int v16 = 0;
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          uint64_t v96 = 60;
          goto LABEL_194;
        case 201:
          char v46 = 0;
          unsigned int v47 = 0;
          uint64_t v48 = 0;
          *(_WORD *)(a1 + 196) |= 0x2000u;
          while (2)
          {
            uint64_t v49 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            unint64_t v50 = v49 + 1;
            if (v49 == -1 || v50 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
            {
              *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            }
            else
            {
              char v51 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v49);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v50;
              v48 |= (unint64_t)(v51 & 0x7F) << v46;
              if (v51 < 0)
              {
                v46 += 7;
                BOOL v10 = v47++ >= 9;
                if (v10)
                {
                  uint64_t v48 = 0;
                  goto LABEL_163;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            uint64_t v48 = 0;
          }
LABEL_163:
          BOOL v94 = v48 != 0;
          uint64_t v95 = 192;
          goto LABEL_189;
        case 202:
          uint64_t v39 = objc_alloc_init(APPBAdSize);
          [(id)a1 addStoryboardSizes:v39];
          if PBReaderPlaceMark() && (APPBAdSizeReadFrom((uint64_t)v39, a2)) {
            goto LABEL_79;
          }
          goto LABEL_203;
        case 203:
          *(_WORD *)(a1 + 196) |= 0x20u;
          unint64_t v52 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v52 <= 0xFFFFFFFFFFFFFFFBLL
            && (unint64_t v53 = v52 + 4, v52 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)))
          {
            int v16 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v52);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v53;
          }
          else
          {
            int v16 = 0;
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          uint64_t v96 = 104;
LABEL_194:
          *(_DWORD *)(a1 + v96) = v16;
          goto LABEL_201;
        case 204:
          char v54 = 0;
          unsigned int v55 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 196) |= 0x40u;
          while (2)
          {
            uint64_t v56 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            unint64_t v57 = v56 + 1;
            if (v56 == -1 || v57 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
            {
              *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            }
            else
            {
              char v58 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v56);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v57;
              v19 |= (unint64_t)(v58 & 0x7F) << v54;
              if (v58 < 0)
              {
                v54 += 7;
                BOOL v10 = v55++ >= 9;
                if (v10)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_167;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            LODWORD(v19) = 0;
          }
LABEL_167:
          uint64_t v93 = 144;
          goto LABEL_172;
        case 205:
          char v59 = 0;
          unsigned int v60 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 196) |= 0x80u;
          while (2)
          {
            uint64_t v61 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            unint64_t v62 = v61 + 1;
            if (v61 == -1 || v62 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
            {
              *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            }
            else
            {
              char v63 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v61);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v62;
              v19 |= (unint64_t)(v63 & 0x7F) << v59;
              if (v63 < 0)
              {
                v59 += 7;
                BOOL v10 = v60++ >= 9;
                if (v10)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_171;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            LODWORD(v19) = 0;
          }
LABEL_171:
          uint64_t v93 = 160;
          goto LABEL_172;
        case 210:
          char v64 = 0;
          unsigned int v65 = 0;
          uint64_t v66 = 0;
          *(_WORD *)(a1 + 196) |= 0x400u;
          break;
        case 211:
          *(_WORD *)(a1 + 196) |= 2u;
          unint64_t v70 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v70 <= 0xFFFFFFFFFFFFFFF7 && v70 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            uint64_t v71 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v70);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v70 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            uint64_t v71 = 0;
          }
          *(void *)(a1 + 16) = v71;
          goto LABEL_201;
        case 220:
          PBReaderReadString();
          uint64_t v39 = (APPBAdSize *)objc_claimAutoreleasedReturnValue();
          if (v39) {
            [(id)a1 addAllowedExternalDomains:v39];
          }
          goto LABEL_109;
        default:
          goto LABEL_142;
      }
      while (1)
      {
        uint64_t v67 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        unint64_t v68 = v67 + 1;
        if (v67 == -1 || v68 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v69 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v67);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v68;
        v66 |= (unint64_t)(v69 & 0x7F) << v64;
        if ((v69 & 0x80) == 0) {
          goto LABEL_174;
        }
        v64 += 7;
        BOOL v10 = v65++ >= 9;
        if (v10)
        {
          uint64_t v66 = 0;
          goto LABEL_176;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_174:
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        uint64_t v66 = 0;
      }
LABEL_176:
      BOOL v94 = v66 != 0;
      uint64_t v95 = 189;
      goto LABEL_189;
    }
    if ((int)v13 <= 99) {
      break;
    }
    switch((int)v13)
    {
      case 'd':
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 196) |= 0x100u;
        while (2)
        {
          uint64_t v20 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v22 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v20);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v21;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if (v22 < 0)
            {
              v17 += 7;
              BOOL v10 = v18++ >= 9;
              if (v10)
              {
                LODWORD(v19) = 0;
                goto LABEL_147;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v19) = 0;
        }
LABEL_147:
        uint64_t v93 = 184;
        goto LABEL_172;
      case 'e':
        char v72 = 0;
        unsigned int v73 = 0;
        uint64_t v74 = 0;
        *(_WORD *)(a1 + 196) |= 0x4000u;
        while (2)
        {
          uint64_t v75 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v76 = v75 + 1;
          if (v75 == -1 || v76 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v77 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v75);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v76;
            v74 |= (unint64_t)(v77 & 0x7F) << v72;
            if (v77 < 0)
            {
              v72 += 7;
              BOOL v10 = v73++ >= 9;
              if (v10)
              {
                uint64_t v74 = 0;
                goto LABEL_180;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v74 = 0;
        }
LABEL_180:
        BOOL v94 = v74 != 0;
        uint64_t v95 = 193;
        goto LABEL_189;
      case 'f':
        uint64_t v78 = PBReaderReadString();
        uint64_t v79 = 168;
        goto LABEL_141;
      case 'g':
        uint64_t v78 = PBReaderReadString();
        uint64_t v79 = 112;
        goto LABEL_141;
      case 'h':
        uint64_t v78 = PBReaderReadString();
        uint64_t v79 = 72;
        goto LABEL_141;
      case 'i':
        uint64_t v78 = PBReaderReadString();
        uint64_t v79 = 88;
        goto LABEL_141;
      case 'j':
      case 'k':
      case 'l':
      case 'm':
        goto LABEL_142;
      case 'n':
        *(_WORD *)(a1 + 196) |= 0x10u;
        unint64_t v80 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v80 <= 0xFFFFFFFFFFFFFFFBLL && v80 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          int v81 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v80);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v80 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          int v81 = 0;
        }
        *(_DWORD *)(a1 + 80) = v81;
        goto LABEL_201;
      default:
        if (v13 != 120) {
          goto LABEL_142;
        }
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(_WORD *)(a1 + 196) |= 0x800u;
        break;
    }
    while (1)
    {
      uint64_t v43 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v44 = v43 + 1;
      if (v43 == -1 || v44 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v45 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v43);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v44;
      v42 |= (unint64_t)(v45 & 0x7F) << v40;
      if ((v45 & 0x80) == 0) {
        goto LABEL_186;
      }
      v40 += 7;
      BOOL v10 = v41++ >= 9;
      if (v10)
      {
        uint64_t v42 = 0;
        goto LABEL_188;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_186:
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      uint64_t v42 = 0;
    }
LABEL_188:
    BOOL v94 = v42 != 0;
    uint64_t v95 = 190;
LABEL_189:
    *(unsigned char *)(a1 + v95) = v94;
LABEL_201:
    if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
  }
  switch((int)v13)
  {
    case 10:
      char v29 = 0;
      unsigned int v30 = 0;
      uint64_t v19 = 0;
      while (2)
      {
        uint64_t v31 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        unint64_t v32 = v31 + 1;
        if (v31 == -1 || v32 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
        }
        else
        {
          char v33 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v31);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v32;
          v19 |= (unint64_t)(v33 & 0x7F) << v29;
          if (v33 < 0)
          {
            v29 += 7;
            BOOL v10 = v30++ >= 9;
            if (v10)
            {
              LODWORD(v19) = 0;
              goto LABEL_155;
            }
            continue;
          }
        }
        break;
      }
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        LODWORD(v19) = 0;
      }
LABEL_155:
      uint64_t v93 = 24;
      goto LABEL_172;
    case 11:
      uint64_t v78 = PBReaderReadString();
      uint64_t v79 = 32;
      goto LABEL_141;
    case 12:
      uint64_t v78 = PBReaderReadString();
      uint64_t v79 = 40;
      goto LABEL_141;
    case 13:
      char v82 = 0;
      unsigned int v83 = 0;
      uint64_t v84 = 0;
      *(_WORD *)(a1 + 196) |= 0x1000u;
      while (2)
      {
        uint64_t v85 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        unint64_t v86 = v85 + 1;
        if (v85 == -1 || v86 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
        }
        else
        {
          char v87 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v85);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v86;
          v84 |= (unint64_t)(v87 & 0x7F) << v82;
          if (v87 < 0)
          {
            v82 += 7;
            BOOL v10 = v83++ >= 9;
            if (v10)
            {
              uint64_t v84 = 0;
              goto LABEL_184;
            }
            continue;
          }
        }
        break;
      }
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        uint64_t v84 = 0;
      }
LABEL_184:
      BOOL v94 = v84 != 0;
      uint64_t v95 = 191;
      goto LABEL_189;
    default:
      if (v13 == 1)
      {
        uint64_t v78 = PBReaderReadString();
        uint64_t v79 = 96;
LABEL_141:
        uint64_t v91 = *(void **)(a1 + v79);
        *(void *)(a1 + v79) = v78;

        goto LABEL_201;
      }
      if (v13 != 25)
      {
LABEL_142:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_201;
      }
      uint64_t v39 = objc_alloc_init(APPBParameter);
      [(id)a1 addParameters:v39];
      if (PBReaderPlaceMark() && APPBParameterReadFrom((uint64_t)v39, a2))
      {
LABEL_79:
        PBReaderRecallMark();
LABEL_109:

        goto LABEL_201;
      }
LABEL_203:

      return 0;
  }
}

void sub_1000D5374(id a1)
{
  uint64_t v1 = (void *)qword_1002899E8;
  qword_1002899E8 = (uint64_t)&off_10024B188;
}

BOOL APPBLogAdContentErrorResponseReadFrom(uint64_t a1, uint64_t a2)
{
  while (1)
  {
    int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
      return v3 == 0;
    }
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error))
    {
      int v3 = 1;
      return v3 == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    uint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        LOBYTE(v6) = 0;
        int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LOBYTE(v6) = 0;
    }
LABEL_13:
    if (v3) {
      BOOL v10 = 1;
    }
    else {
      BOOL v10 = (v6 & 7) == 4;
    }
    if (v10) {
      return v3 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

void sub_1000D5FB4(id a1)
{
  uint64_t v1 = (void *)qword_1002899F8;
  qword_1002899F8 = (uint64_t)&off_10024B1B0;
}

BOOL APPBLogAnalyticsRequestReadFrom(char *a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadData();
        uint64_t v13 = 40;
        goto LABEL_22;
      case 2u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 8;
        goto LABEL_22;
      case 3u:
        uint64_t v12 = PBReaderReadData();
        uint64_t v13 = 16;
        goto LABEL_22;
      case 4u:
        uint64_t v12 = PBReaderReadData();
        uint64_t v13 = 24;
LABEL_22:
        unint64_t v14 = *(APPBAnalyticsEvent **)&a1[v13];
        *(void *)&a1[v13] = v12;
        goto LABEL_23;
      case 0xAu:
        unint64_t v14 = objc_alloc_init(APPBAnalyticsEvent);
        [a1 addEvents:v14];
        if PBReaderPlaceMark() && (APPBAnalyticsEventReadFrom((uint64_t)v14, a2))
        {
          PBReaderRecallMark();
LABEL_23:

LABEL_24:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_24;
    }
  }
}

id sub_1000D7068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _[*(id *)(a1 + 32) setProperty:a3 forKey:a2 internal:0];
}

void sub_1000D7500(id a1)
{
  uint64_t v1 = (void *)qword_100289A08;
  qword_100289A08 = (uint64_t)&off_10024B1D8;
}

BOOL APPBThirdPartySegmentUpdateResponseReadFrom(uint64_t a1, uint64_t a2)
{
  while (1)
  {
    int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
      return v3 == 0;
    }
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error))
    {
      int v3 = 1;
      return v3 == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    uint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        LOBYTE(v6) = 0;
        int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LOBYTE(v6) = 0;
    }
LABEL_13:
    if (v3) {
      BOOL v10 = 1;
    }
    else {
      BOOL v10 = (v6 & 7) == 4;
    }
    if (v10) {
      return v3 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

uint64_t APPBAdFrequencyCapDataReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    unint64_t v12 = v6 >> 3;
    if ((v6 >> 3) == 3)
    {
      char v18 = 0;
      unsigned int v19 = 0;
      uint64_t v20 = 0;
      *(unsigned char *)(a1 + 24) |= 1u;
      while (1)
      {
        unint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v21 == -1 || v21 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v22 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v21 + 1;
        v20 |= (unint64_t)(v22 & 0x7F) << v18;
        if ((v22 & 0x80) == 0) {
          goto LABEL_48;
        }
        v18 += 7;
        BOOL v9 = v19++ >= 9;
        if (v9)
        {
          uint64_t v20 = 0;
          goto LABEL_50;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_48:
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        uint64_t v20 = 0;
      }
LABEL_50:
      *(void *)(a1 + 8) = v20;
    }
    else
    {
      if (v12 == 2)
      {
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v15 = 0;
        *(unsigned char *)(a1 + 24) |= 2u;
        while (1)
        {
          unint64_t v25 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v25 == -1 || v25 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v26 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v25);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v25 + 1;
          v15 |= (unint64_t)(v26 & 0x7F) << v23;
          if ((v26 & 0x80) == 0) {
            goto LABEL_52;
          }
          v23 += 7;
          BOOL v9 = v24++ >= 9;
          if (v9)
          {
            LODWORD(v15) = 0;
            goto LABEL_54;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_52:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_54:
        uint64_t v28 = 16;
      }
      else
      {
        if (v12 != 1)
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
        }
        char v13 = 0;
        unsigned int v14 = 0;
        uint64_t v15 = 0;
        *(unsigned char *)(a1 + 24) |= 4u;
        while (1)
        {
          unint64_t v16 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v16 == -1 || v16 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v17 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v16);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v16 + 1;
          v15 |= (unint64_t)(v17 & 0x7F) << v13;
          if ((v17 & 0x80) == 0) {
            goto LABEL_44;
          }
          v13 += 7;
          BOOL v9 = v14++ >= 9;
          if (v9)
          {
            LODWORD(v15) = 0;
            goto LABEL_46;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_44:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_46:
        uint64_t v28 = 20;
      }
      *(_DWORD *)(a1 + v28) = v15;
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

BOOL APPBLocalizedStringEntryReadFrom(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      if ((v6 >> 3) == 2) {
        break;
      }
      if ((v6 >> 3) == 1)
      {
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 8;
LABEL_21:
        unsigned int v14 = *(void **)(a1 + v13);
        *(void *)(a1 + v13) = v12;

        goto LABEL_23;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_23:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }
    uint64_t v12 = PBReaderReadString();
    uint64_t v13 = 16;
    goto LABEL_21;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1000D8AD4(id a1)
{
  uint64_t v1 = (void *)qword_100289A18;
  qword_100289A18 = (uint64_t)&off_10024B200;
}

uint64_t APPBSegmentUpdateRequestReadFrom(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (2)
    {
      if (!*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error))
      {
        char v4 = 0;
        unsigned int v5 = 0;
        unint64_t v6 = 0;
        while (1)
        {
          uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v8 = v7 + 1;
          if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
          v6 |= (unint64_t)(v9 & 0x7F) << v4;
          if ((v9 & 0x80) == 0) {
            goto LABEL_11;
          }
          v4 += 7;
          BOOL v10 = v5++ >= 9;
          if (v10)
          {
            unint64_t v6 = 0;
            int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
            goto LABEL_13;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          unint64_t v6 = 0;
        }
LABEL_13:
        int v12 = v6 & 7;
        if (!v11 && v12 != 4)
        {
          switch((v6 >> 3))
          {
            case 2u:
              uint64_t v14 = PBReaderReadData();
              uint64_t v15 = 120;
              goto LABEL_50;
            case 3u:
              uint64_t v14 = PBReaderReadString();
              uint64_t v15 = 144;
              goto LABEL_50;
            case 4u:
              char v16 = 0;
              unsigned int v17 = 0;
              uint64_t v18 = 0;
              *(unsigned char *)(a1 + 160) |= 0x10u;
              while (2)
              {
                uint64_t v19 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
                unint64_t v20 = v19 + 1;
                if (v19 == -1 || v20 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
                {
                  *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
                }
                else
                {
                  char v21 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v19);
                  *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v20;
                  v18 |= (unint64_t)(v21 & 0x7F) << v16;
                  if (v21 < 0)
                  {
                    v16 += 7;
                    BOOL v10 = v17++ >= 9;
                    if (v10)
                    {
                      uint64_t v18 = 0;
                      goto LABEL_94;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
                uint64_t v18 = 0;
              }
LABEL_94:
              *(unsigned char *)(a1 + 156) = v18 != 0;
              goto LABEL_129;
            case 5u:
              uint64_t v14 = PBReaderReadString();
              uint64_t v15 = 96;
LABEL_50:
              char v33 = *(void **)(a1 + v15);
              *(void *)(a1 + v15) = v14;

              goto LABEL_129;
            case 6u:
            case 7u:
LABEL_21:
              if (PBReaderSkipValueWithTag()) {
                goto LABEL_129;
              }
              return 0;
            case 8u:
              *(unsigned char *)(a1 + 160) |= 1u;
              unint64_t v22 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
              if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
              {
                uint64_t v23 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v22);
                *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v22 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
                uint64_t v23 = 0;
              }
              uint64_t v70 = 80;
              goto LABEL_126;
            case 9u:
              *(unsigned char *)(a1 + 160) |= 2u;
              unint64_t v24 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
              if (v24 <= 0xFFFFFFFFFFFFFFF7 && v24 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
              {
                uint64_t v23 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v24);
                *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v24 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
                uint64_t v23 = 0;
              }
              uint64_t v70 = 88;
LABEL_126:
              *(void *)(a1 + v70) = v23;
              goto LABEL_129;
            case 0xAu:
              *(unsigned char *)(a1 + 160) |= 8u;
              unint64_t v25 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
              if (v25 <= 0xFFFFFFFFFFFFFFFBLL && v25 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
              {
                int v26 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v25);
                *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v25 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
                int v26 = 0;
              }
              *(_DWORD *)(a1 + 152) = v26;
              goto LABEL_129;
            case 0xBu:
              char v27 = 0;
              unsigned int v28 = 0;
              uint64_t v29 = 0;
              *(unsigned char *)(a1 + 160) |= 4u;
              while (2)
              {
                uint64_t v30 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
                unint64_t v31 = v30 + 1;
                if (v30 == -1 || v31 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
                {
                  *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
                }
                else
                {
                  char v32 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v30);
                  *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v31;
                  v29 |= (unint64_t)(v32 & 0x7F) << v27;
                  if (v32 < 0)
                  {
                    v27 += 7;
                    BOOL v10 = v28++ >= 9;
                    if (v10)
                    {
                      LODWORD(v29) = 0;
                      goto LABEL_98;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
                LODWORD(v29) = 0;
              }
LABEL_98:
              *(_DWORD *)(a1 + 104) = v29;
              goto LABEL_129;
            default:
              switch((v6 >> 3))
              {
                case '\'':
                  uint64_t v14 = PBReaderReadString();
                  uint64_t v15 = 136;
                  goto LABEL_50;
                case '(':
                  uint64_t v14 = PBReaderReadString();
                  uint64_t v15 = 128;
                  goto LABEL_50;
                case ')':
                  uint64_t v14 = PBReaderReadData();
                  uint64_t v15 = 112;
                  goto LABEL_50;
                case '*':
                  if (v12 != 2)
                  {
                    char v52 = 0;
                    unsigned int v53 = 0;
                    uint64_t v54 = 0;
                    while (1)
                    {
                      uint64_t v55 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
                      unint64_t v56 = v55 + 1;
                      if (v55 == -1 || v56 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
                        goto LABEL_120;
                      }
                      char v57 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v55);
                      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v56;
                      v54 |= (unint64_t)(v57 & 0x7F) << v52;
                      if (v57 < 0)
                      {
                        v52 += 7;
                        BOOL v10 = v53++ >= 9;
                        if (!v10) {
                          continue;
                        }
                      }
                      goto LABEL_121;
                    }
                  }
                  uint64_t result = PBReaderPlaceMark();
                  if (!result) {
                    return result;
                  }
                  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2
                                                                                      + OBJC_IVAR___PBDataReader__length)
                       && !*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error))
                  {
                    char v34 = 0;
                    unsigned int v35 = 0;
                    uint64_t v36 = 0;
                    while (1)
                    {
                      uint64_t v37 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
                      unint64_t v38 = v37 + 1;
                      if (v37 == -1 || v38 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
                        break;
                      }
                      char v39 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v37);
                      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v38;
                      v36 |= (unint64_t)(v39 & 0x7F) << v34;
                      if (v39 < 0)
                      {
                        v34 += 7;
                        BOOL v10 = v35++ >= 9;
                        if (!v10) {
                          continue;
                        }
                      }
                      goto LABEL_63;
                    }
                    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_63:
                    PBRepeatedInt32Add();
                  }
                  goto LABEL_90;
                case '+':
                  if (v12 != 2)
                  {
                    char v58 = 0;
                    unsigned int v59 = 0;
                    uint64_t v60 = 0;
                    while (1)
                    {
                      uint64_t v61 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
                      unint64_t v62 = v61 + 1;
                      if (v61 == -1 || v62 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
                        goto LABEL_120;
                      }
                      char v63 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v61);
                      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v62;
                      v60 |= (unint64_t)(v63 & 0x7F) << v58;
                      if (v63 < 0)
                      {
                        v58 += 7;
                        BOOL v10 = v59++ >= 9;
                        if (!v10) {
                          continue;
                        }
                      }
                      goto LABEL_121;
                    }
                  }
                  uint64_t result = PBReaderPlaceMark();
                  if (!result) {
                    return result;
                  }
                  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2
                                                                                      + OBJC_IVAR___PBDataReader__length)
                       && !*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error))
                  {
                    char v40 = 0;
                    unsigned int v41 = 0;
                    uint64_t v42 = 0;
                    while (1)
                    {
                      uint64_t v43 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
                      unint64_t v44 = v43 + 1;
                      if (v43 == -1 || v44 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
                        break;
                      }
                      char v45 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v43);
                      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v44;
                      v42 |= (unint64_t)(v45 & 0x7F) << v40;
                      if (v45 < 0)
                      {
                        v40 += 7;
                        BOOL v10 = v41++ >= 9;
                        if (!v10) {
                          continue;
                        }
                      }
                      goto LABEL_76;
                    }
                    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_76:
                    PBRepeatedInt32Add();
                  }
                  goto LABEL_90;
                case ',':
                  if (v12 == 2)
                  {
                    uint64_t result = PBReaderPlaceMark();
                    if (!result) {
                      return result;
                    }
                    while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2
                                                                                        + OBJC_IVAR___PBDataReader__length)
                         && !*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error))
                    {
                      char v46 = 0;
                      unsigned int v47 = 0;
                      uint64_t v48 = 0;
                      while (1)
                      {
                        uint64_t v49 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
                        unint64_t v50 = v49 + 1;
                        if (v49 == -1 || v50 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
                          break;
                        }
                        char v51 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v49);
                        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v50;
                        v48 |= (unint64_t)(v51 & 0x7F) << v46;
                        if (v51 < 0)
                        {
                          v46 += 7;
                          BOOL v10 = v47++ >= 9;
                          if (!v10) {
                            continue;
                          }
                        }
                        goto LABEL_89;
                      }
                      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_89:
                      PBRepeatedInt32Add();
                    }
LABEL_90:
                    PBReaderRecallMark();
                  }
                  else
                  {
                    char v64 = 0;
                    unsigned int v65 = 0;
                    uint64_t v66 = 0;
                    while (1)
                    {
                      uint64_t v67 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
                      unint64_t v68 = v67 + 1;
                      if (v67 == -1 || v68 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
                        break;
                      }
                      char v69 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v67);
                      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v68;
                      v66 |= (unint64_t)(v69 & 0x7F) << v64;
                      if (v69 < 0)
                      {
                        v64 += 7;
                        BOOL v10 = v65++ >= 9;
                        if (!v10) {
                          continue;
                        }
                      }
                      goto LABEL_121;
                    }
LABEL_120:
                    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_121:
                    PBRepeatedInt32Add();
                  }
LABEL_129:
                  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2
                                                                                    + OBJC_IVAR___PBDataReader__length))
                    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
                  continue;
                default:
                  goto LABEL_21;
              }
          }
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1000DC3A0(id a1)
{
  uint64_t v1 = (void *)qword_100289A28;
  qword_100289A28 = (uint64_t)&off_10024B228;
}

BOOL APPBLogAdEventRequestReadFrom(id *a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      if ((v6 >> 3) == 2) {
        break;
      }
      if ((v6 >> 3) == 1)
      {
        int v12 = objc_alloc_init(APPBLogMetaData);
        objc_storeStrong(a1 + 2, v12);
        if (!PBReaderPlaceMark() || (APPBLogMetaDataReadFrom((uint64_t)v12, a2) & 1) == 0) {
          goto LABEL_28;
        }
LABEL_24:
        PBReaderRecallMark();

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }
    int v12 = objc_alloc_init(APPBAdEvent);
    [a1 addEvent:v12];
    if (!PBReaderPlaceMark() || (APPBAdEventReadFrom((uint64_t)v12, a2) & 1) == 0)
    {
LABEL_28:

      return 0;
    }
    goto LABEL_24;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1000DCF68(id a1)
{
  uint64_t v1 = (void *)qword_100289A38;
  qword_100289A38 = (uint64_t)&off_10024B250;
}

uint64_t APPBSegmentUpdateResponseReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    unint64_t v13 = v6 >> 3;
    if ((v6 >> 3) == 4)
    {
      *(unsigned char *)(a1 + 32) |= 1u;
      unint64_t v18 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v18 <= 0xFFFFFFFFFFFFFFF7 && v18 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
      {
        uint64_t v17 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v18 + 8;
      }
      else
      {
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
        uint64_t v17 = 0;
      }
      uint64_t v20 = 8;
    }
    else
    {
      if (v13 != 3)
      {
        if (v13 == 2)
        {
          uint64_t v14 = PBReaderReadString();
          uint64_t v15 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v14;
        }
        else
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
        }
        continue;
      }
      *(unsigned char *)(a1 + 32) |= 2u;
      unint64_t v16 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v16 <= 0xFFFFFFFFFFFFFFF7 && v16 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
      {
        uint64_t v17 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v16);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v16 + 8;
      }
      else
      {
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
        uint64_t v17 = 0;
      }
      uint64_t v20 = 16;
    }
    *(void *)(a1 + v20) = v17;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1000DD9E0(id a1)
{
  uint64_t v1 = (void *)qword_100289A48;
  qword_100289A48 = (uint64_t)&off_10024B278;
}

uint64_t APPBAggregateScalarMetricReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    unint64_t v12 = v6 >> 3;
    if ((v6 >> 3) == 100)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      uint64_t v17 = 0;
      *(unsigned char *)(a1 + 32) |= 1u;
      while (1)
      {
        unint64_t v18 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v18 == -1 || v18 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v19 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v18 + 1;
        v17 |= (unint64_t)(v19 & 0x7F) << v15;
        if ((v19 & 0x80) == 0) {
          goto LABEL_33;
        }
        v15 += 7;
        BOOL v9 = v16++ >= 9;
        if (v9)
        {
          LODWORD(v17) = 0;
          goto LABEL_35;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_33:
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        LODWORD(v17) = 0;
      }
LABEL_35:
      *(_DWORD *)(a1 + 16) = v17;
    }
    else
    {
      if (v12 == 2)
      {
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 8;
      }
      else
      {
        if (v12 != 1)
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
        }
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 24;
      }
      uint64_t v20 = *(void **)(a1 + v14);
      *(void *)(a1 + v14) = v13;
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t APPBRequestPropertiesReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 2u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 152;
        goto LABEL_186;
      case 3u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 48;
        goto LABEL_186;
      case 4u:
        char v15 = 0;
        unsigned int v16 = 0;
        uint64_t v17 = 0;
        *(_DWORD *)(a1 + 304) |= 0x4000u;
        while (2)
        {
          uint64_t v18 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v20 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v19;
            v17 |= (unint64_t)(v20 & 0x7F) << v15;
            if (v20 < 0)
            {
              v15 += 7;
              BOOL v10 = v16++ >= 9;
              if (v10)
              {
                LODWORD(v17) = 0;
                goto LABEL_218;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_218:
        uint64_t v141 = 248;
        goto LABEL_300;
      case 5u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 104;
        goto LABEL_186;
      case 6u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 96;
        goto LABEL_186;
      case 9u:
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v24 = 0;
        *(_DWORD *)(a1 + 304) |= 0x800000u;
        while (2)
        {
          uint64_t v25 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v26 = v25 + 1;
          if (v25 == -1 || v26 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v27 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v25);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v26;
            v24 |= (unint64_t)(v27 & 0x7F) << v22;
            if (v27 < 0)
            {
              v22 += 7;
              BOOL v10 = v23++ >= 9;
              if (v10)
              {
                uint64_t v24 = 0;
                goto LABEL_222;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v24 = 0;
        }
LABEL_222:
        BOOL v142 = v24 != 0;
        uint64_t v143 = 300;
        goto LABEL_295;
      case 0xAu:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v17 = 0;
        *(_DWORD *)(a1 + 304) |= 0x20u;
        while (2)
        {
          uint64_t v30 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v30);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v31;
            v17 |= (unint64_t)(v32 & 0x7F) << v28;
            if (v32 < 0)
            {
              v28 += 7;
              BOOL v10 = v29++ >= 9;
              if (v10)
              {
                LODWORD(v17) = 0;
                goto LABEL_226;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_226:
        uint64_t v141 = 112;
        goto LABEL_300;
      case 0xEu:
        *(_DWORD *)(a1 + 304) |= 0x8000u;
        unint64_t v33 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v33 <= 0xFFFFFFFFFFFFFFFBLL && v33 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          int v34 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v33);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v33 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          int v34 = 0;
        }
        uint64_t v144 = 272;
        goto LABEL_317;
      case 0xFu:
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v17 = 0;
        while (2)
        {
          uint64_t v37 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v39 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v37);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v38;
            v17 |= (unint64_t)(v39 & 0x7F) << v35;
            if (v39 < 0)
            {
              v35 += 7;
              BOOL v10 = v36++ >= 9;
              if (v10)
              {
                LODWORD(v17) = 0;
                goto LABEL_230;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_230:
        uint64_t v141 = 260;
        goto LABEL_300;
      case 0x10u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v17 = 0;
        while (2)
        {
          uint64_t v42 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v43 = v42 + 1;
          if (v42 == -1 || v43 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v44 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v42);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v43;
            v17 |= (unint64_t)(v44 & 0x7F) << v40;
            if (v44 < 0)
            {
              v40 += 7;
              BOOL v10 = v41++ >= 9;
              if (v10)
              {
                LODWORD(v17) = 0;
                goto LABEL_234;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_234:
        uint64_t v141 = 256;
        goto LABEL_300;
      case 0x11u:
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v17 = 0;
        while (2)
        {
          uint64_t v47 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v48 = v47 + 1;
          if (v47 == -1 || v48 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v47);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v48;
            v17 |= (unint64_t)(v49 & 0x7F) << v45;
            if (v49 < 0)
            {
              v45 += 7;
              BOOL v10 = v46++ >= 9;
              if (v10)
              {
                LODWORD(v17) = 0;
                goto LABEL_238;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_238:
        uint64_t v141 = 252;
        goto LABEL_300;
      case 0x13u:
        unint64_t v50 = PBReaderReadString();
        if (v50) {
          [(id)a1 addUserKeyboard:v50];
        }

        continue;
      case 0x15u:
        *(_DWORD *)(a1 + 304) |= 1u;
        unint64_t v51 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v51 <= 0xFFFFFFFFFFFFFFF7 && v51 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v52 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v51);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v51 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v52 = 0;
        }
        *(void *)(a1 + 8) = v52;
        continue;
      case 0x16u:
        *(_DWORD *)(a1 + 304) |= 0x400u;
        unint64_t v53 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v53 <= 0xFFFFFFFFFFFFFFFBLL && v53 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          int v34 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v53);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v53 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          int v34 = 0;
        }
        uint64_t v144 = 196;
        goto LABEL_317;
      case 0x17u:
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v17 = 0;
        *(_DWORD *)(a1 + 304) |= 0x800u;
        while (2)
        {
          uint64_t v56 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v57 = v56 + 1;
          if (v56 == -1 || v57 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v56);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v57;
            v17 |= (unint64_t)(v58 & 0x7F) << v54;
            if (v58 < 0)
            {
              v54 += 7;
              BOOL v10 = v55++ >= 9;
              if (v10)
              {
                LODWORD(v17) = 0;
                goto LABEL_242;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_242:
        uint64_t v141 = 200;
        goto LABEL_300;
      case 0x18u:
        *(_DWORD *)(a1 + 304) |= 0x1000u;
        unint64_t v59 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v59 <= 0xFFFFFFFFFFFFFFFBLL && v59 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          int v34 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v59);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v59 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          int v34 = 0;
        }
        uint64_t v144 = 204;
        goto LABEL_317;
      case 0x19u:
        *(_DWORD *)(a1 + 304) |= 0x80u;
        unint64_t v60 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v60 <= 0xFFFFFFFFFFFFFFFBLL && v60 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          int v34 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v60);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v60 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          int v34 = 0;
        }
        uint64_t v144 = 184;
        goto LABEL_317;
      case 0x1Au:
        *(_DWORD *)(a1 + 304) |= 0x100u;
        unint64_t v61 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v61 <= 0xFFFFFFFFFFFFFFFBLL && v61 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          int v34 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v61);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v61 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          int v34 = 0;
        }
        uint64_t v144 = 188;
        goto LABEL_317;
      case 0x1Bu:
        *(_DWORD *)(a1 + 304) |= 0x200u;
        unint64_t v62 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v62 <= 0xFFFFFFFFFFFFFFFBLL && v62 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          int v34 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v62);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v62 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          int v34 = 0;
        }
        uint64_t v144 = 192;
        goto LABEL_317;
      case 0x1Cu:
        uint64_t v13 = PBReaderReadData();
        uint64_t v14 = 160;
        goto LABEL_186;
      case 0x1Du:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 64;
        goto LABEL_186;
      case 0x1Eu:
        char v63 = 0;
        unsigned int v64 = 0;
        uint64_t v65 = 0;
        *(_DWORD *)(a1 + 304) |= 0x200000u;
        while (2)
        {
          uint64_t v66 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v67 = v66 + 1;
          if (v66 == -1 || v67 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v68 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v66);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v67;
            v65 |= (unint64_t)(v68 & 0x7F) << v63;
            if (v68 < 0)
            {
              v63 += 7;
              BOOL v10 = v64++ >= 9;
              if (v10)
              {
                uint64_t v65 = 0;
                goto LABEL_246;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v65 = 0;
        }
LABEL_246:
        BOOL v142 = v65 != 0;
        uint64_t v143 = 298;
        goto LABEL_295;
      case 0x1Fu:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 128;
        goto LABEL_186;
      case 0x20u:
        char v69 = 0;
        unsigned int v70 = 0;
        uint64_t v17 = 0;
        *(_DWORD *)(a1 + 304) |= 0x10u;
        while (2)
        {
          uint64_t v71 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v72 = v71 + 1;
          if (v71 == -1 || v72 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v73 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v71);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v72;
            v17 |= (unint64_t)(v73 & 0x7F) << v69;
            if (v73 < 0)
            {
              v69 += 7;
              BOOL v10 = v70++ >= 9;
              if (v10)
              {
                LODWORD(v17) = 0;
                goto LABEL_250;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_250:
        uint64_t v141 = 80;
        goto LABEL_300;
      case 0x21u:
        char v74 = 0;
        unsigned int v75 = 0;
        uint64_t v17 = 0;
        *(_DWORD *)(a1 + 304) |= 0x2000u;
        while (2)
        {
          uint64_t v76 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v77 = v76 + 1;
          if (v76 == -1 || v77 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v78 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v76);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v77;
            v17 |= (unint64_t)(v78 & 0x7F) << v74;
            if (v78 < 0)
            {
              v74 += 7;
              BOOL v10 = v75++ >= 9;
              if (v10)
              {
                LODWORD(v17) = 0;
                goto LABEL_254;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_254:
        uint64_t v141 = 224;
        goto LABEL_300;
      case 0x22u:
        char v79 = 0;
        unsigned int v80 = 0;
        uint64_t v17 = 0;
        *(_DWORD *)(a1 + 304) |= 0x10000u;
        while (2)
        {
          uint64_t v81 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v82 = v81 + 1;
          if (v81 == -1 || v82 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v83 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v81);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v82;
            v17 |= (unint64_t)(v83 & 0x7F) << v79;
            if (v83 < 0)
            {
              v79 += 7;
              BOOL v10 = v80++ >= 9;
              if (v10)
              {
                LODWORD(v17) = 0;
                goto LABEL_258;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_258:
        uint64_t v141 = 276;
        goto LABEL_300;
      case 0x23u:
        char v84 = 0;
        unsigned int v85 = 0;
        uint64_t v86 = 0;
        *(_DWORD *)(a1 + 304) |= 0x100000u;
        while (2)
        {
          uint64_t v87 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v88 = v87 + 1;
          if (v87 == -1 || v88 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v89 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v87);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v88;
            v86 |= (unint64_t)(v89 & 0x7F) << v84;
            if (v89 < 0)
            {
              v84 += 7;
              BOOL v10 = v85++ >= 9;
              if (v10)
              {
                uint64_t v86 = 0;
                goto LABEL_262;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v86 = 0;
        }
LABEL_262:
        BOOL v142 = v86 != 0;
        uint64_t v143 = 297;
        goto LABEL_295;
      case 0x24u:
        char v90 = 0;
        unsigned int v91 = 0;
        uint64_t v92 = 0;
        *(_DWORD *)(a1 + 304) |= 0x80000u;
        while (2)
        {
          uint64_t v93 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v94 = v93 + 1;
          if (v93 == -1 || v94 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v95 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v93);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v94;
            v92 |= (unint64_t)(v95 & 0x7F) << v90;
            if (v95 < 0)
            {
              v90 += 7;
              BOOL v10 = v91++ >= 9;
              if (v10)
              {
                uint64_t v92 = 0;
                goto LABEL_266;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v92 = 0;
        }
LABEL_266:
        BOOL v142 = v92 != 0;
        uint64_t v143 = 296;
        goto LABEL_295;
      case 0x27u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 232;
        goto LABEL_186;
      case 0x28u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 208;
        goto LABEL_186;
      case 0x29u:
        *(_DWORD *)(a1 + 304) |= 0x40000u;
        unint64_t v96 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v96 <= 0xFFFFFFFFFFFFFFFBLL && v96 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          int v34 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v96);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v96 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          int v34 = 0;
        }
        uint64_t v144 = 284;
LABEL_317:
        *(_DWORD *)(a1 + v144) = v34;
        continue;
      case 0x2Au:
        char v97 = 0;
        unsigned int v98 = 0;
        uint64_t v17 = 0;
        *(_DWORD *)(a1 + 304) |= 0x20000u;
        while (2)
        {
          uint64_t v99 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v100 = v99 + 1;
          if (v99 == -1 || v100 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v101 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v99);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v100;
            v17 |= (unint64_t)(v101 & 0x7F) << v97;
            if (v101 < 0)
            {
              v97 += 7;
              BOOL v10 = v98++ >= 9;
              if (v10)
              {
                LODWORD(v17) = 0;
                goto LABEL_270;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_270:
        uint64_t v141 = 280;
        goto LABEL_300;
      case 0x2Bu:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 168;
        goto LABEL_186;
      case 0x2Du:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 72;
        goto LABEL_186;
      case 0x30u:
        uint64_t v13 = PBReaderReadData();
        uint64_t v14 = 40;
        goto LABEL_186;
      case 0x31u:
        uint64_t v13 = PBReaderReadData();
        uint64_t v14 = 120;
        goto LABEL_186;
      case 0x32u:
        char v102 = 0;
        unsigned int v103 = 0;
        uint64_t v17 = 0;
        *(_DWORD *)(a1 + 304) |= 0x40u;
        while (2)
        {
          uint64_t v104 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v105 = v104 + 1;
          if (v104 == -1 || v105 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v106 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v104);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v105;
            v17 |= (unint64_t)(v106 & 0x7F) << v102;
            if (v106 < 0)
            {
              v102 += 7;
              BOOL v10 = v103++ >= 9;
              if (v10)
              {
                LODWORD(v17) = 0;
                goto LABEL_274;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_274:
        uint64_t v141 = 144;
        goto LABEL_300;
      case 0x33u:
        char v107 = 0;
        unsigned int v108 = 0;
        uint64_t v17 = 0;
        *(_DWORD *)(a1 + 304) |= 2u;
        while (2)
        {
          uint64_t v109 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v110 = v109 + 1;
          if (v109 == -1 || v110 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v111 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v109);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v110;
            v17 |= (unint64_t)(v111 & 0x7F) << v107;
            if (v111 < 0)
            {
              v107 += 7;
              BOOL v10 = v108++ >= 9;
              if (v10)
              {
                LODWORD(v17) = 0;
                goto LABEL_278;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_278:
        uint64_t v141 = 16;
        goto LABEL_300;
      case 0x34u:
        uint64_t v13 = PBReaderReadData();
        uint64_t v14 = 136;
        goto LABEL_186;
      case 0x35u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 216;
        goto LABEL_186;
      case 0x36u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 24;
        goto LABEL_186;
      case 0x37u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 264;
        goto LABEL_186;
      case 0x38u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 176;
        goto LABEL_186;
      case 0x39u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 240;
        goto LABEL_186;
      case 0x3Au:
        char v112 = 0;
        unsigned int v113 = 0;
        uint64_t v114 = 0;
        *(_DWORD *)(a1 + 304) |= 0x1000000u;
        while (2)
        {
          uint64_t v115 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v116 = v115 + 1;
          if (v115 == -1 || v116 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v117 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v115);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v116;
            v114 |= (unint64_t)(v117 & 0x7F) << v112;
            if (v117 < 0)
            {
              v112 += 7;
              BOOL v10 = v113++ >= 9;
              if (v10)
              {
                uint64_t v114 = 0;
                goto LABEL_282;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v114 = 0;
        }
LABEL_282:
        BOOL v142 = v114 != 0;
        uint64_t v143 = 301;
        goto LABEL_295;
      case 0x3Bu:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 88;
LABEL_186:
        unint64_t v118 = *(void **)(a1 + v14);
        *(void *)(a1 + v14) = v13;

        continue;
      case 0x3Cu:
        char v119 = 0;
        unsigned int v120 = 0;
        uint64_t v17 = 0;
        *(_DWORD *)(a1 + 304) |= 4u;
        while (2)
        {
          uint64_t v121 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v122 = v121 + 1;
          if (v121 == -1 || v122 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v123 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v121);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v122;
            v17 |= (unint64_t)(v123 & 0x7F) << v119;
            if (v123 < 0)
            {
              v119 += 7;
              BOOL v10 = v120++ >= 9;
              if (v10)
              {
                LODWORD(v17) = 0;
                goto LABEL_286;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_286:
        uint64_t v141 = 32;
        goto LABEL_300;
      case 0x3Du:
        char v124 = 0;
        unsigned int v125 = 0;
        uint64_t v126 = 0;
        *(_DWORD *)(a1 + 304) |= 0x2000000u;
        while (2)
        {
          uint64_t v127 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v128 = v127 + 1;
          if (v127 == -1 || v128 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v129 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v127);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v128;
            v126 |= (unint64_t)(v129 & 0x7F) << v124;
            if (v129 < 0)
            {
              v124 += 7;
              BOOL v10 = v125++ >= 9;
              if (v10)
              {
                uint64_t v126 = 0;
                goto LABEL_290;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v126 = 0;
        }
LABEL_290:
        BOOL v142 = v126 != 0;
        uint64_t v143 = 302;
        goto LABEL_295;
      case 0x3Eu:
        char v130 = 0;
        unsigned int v131 = 0;
        uint64_t v132 = 0;
        *(_DWORD *)(a1 + 304) |= 0x400000u;
        while (2)
        {
          uint64_t v133 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v134 = v133 + 1;
          if (v133 == -1 || v134 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v135 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v133);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v134;
            v132 |= (unint64_t)(v135 & 0x7F) << v130;
            if (v135 < 0)
            {
              v130 += 7;
              BOOL v10 = v131++ >= 9;
              if (v10)
              {
                uint64_t v132 = 0;
                goto LABEL_294;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v132 = 0;
        }
LABEL_294:
        BOOL v142 = v132 != 0;
        uint64_t v143 = 299;
LABEL_295:
        *(unsigned char *)(a1 + v143) = v142;
        continue;
      case 0x3Fu:
        char v136 = 0;
        unsigned int v137 = 0;
        uint64_t v17 = 0;
        *(_DWORD *)(a1 + 304) |= 8u;
        break;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        continue;
    }
    while (1)
    {
      uint64_t v138 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v139 = v138 + 1;
      if (v138 == -1 || v139 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v140 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v138);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v139;
      v17 |= (unint64_t)(v140 & 0x7F) << v136;
      if ((v140 & 0x80) == 0) {
        goto LABEL_297;
      }
      v136 += 7;
      BOOL v10 = v137++ >= 9;
      if (v10)
      {
        LODWORD(v17) = 0;
        goto LABEL_299;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_297:
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LODWORD(v17) = 0;
    }
LABEL_299:
    uint64_t v141 = 56;
LABEL_300:
    *(_DWORD *)(a1 + v141) = v17;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

BOOL APPBTargetingCriteriaReadFrom(void *a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      if ((v6 >> 3) == 2) {
        break;
      }
      if ((v6 >> 3) == 1)
      {
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = (void *)a1[1];
        a1[1] = v12;
LABEL_22:

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_24:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }
    uint64_t v13 = PBReaderReadString();
    if (v13) {
      [a1 addCriteriaValues:v13];
    }
    goto LABEL_22;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t APPBAssetInfoReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v13 = 0;
        unsigned int v14 = 0;
        uint64_t v15 = 0;
        *(unsigned char *)(a1 + 48) |= 2u;
        while (1)
        {
          uint64_t v16 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v17 = v16 + 1;
          if (v16 == -1 || v17 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v18 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v16);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v17;
          v15 |= (unint64_t)(v18 & 0x7F) << v13;
          if ((v18 & 0x80) == 0) {
            goto LABEL_56;
          }
          v13 += 7;
          BOOL v10 = v14++ >= 9;
          if (v10)
          {
            LODWORD(v15) = 0;
            goto LABEL_58;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_56:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_58:
        uint64_t v42 = 16;
        goto LABEL_67;
      case 2u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v15 = 0;
        *(unsigned char *)(a1 + 48) |= 0x10u;
        while (2)
        {
          uint64_t v22 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v22);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v23;
            v15 |= (unint64_t)(v24 & 0x7F) << v20;
            if (v24 < 0)
            {
              v20 += 7;
              BOOL v10 = v21++ >= 9;
              if (v10)
              {
                LODWORD(v15) = 0;
                goto LABEL_62;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_62:
        uint64_t v42 = 40;
        goto LABEL_67;
      case 3u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v15 = 0;
        *(unsigned char *)(a1 + 48) |= 4u;
        while (2)
        {
          uint64_t v27 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v28 = v27 + 1;
          if (v27 == -1 || v28 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v29 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v27);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v28;
            v15 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              BOOL v10 = v26++ >= 9;
              if (v10)
              {
                LODWORD(v15) = 0;
                goto LABEL_66;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_66:
        uint64_t v42 = 20;
LABEL_67:
        *(_DWORD *)(a1 + v42) = v15;
        continue;
      case 4u:
        uint64_t v30 = PBReaderReadString();
        unint64_t v31 = *(void **)(a1 + 32);
        *(void *)(a1 + 32) = v30;

        continue;
      case 5u:
        *(unsigned char *)(a1 + 48) |= 8u;
        unint64_t v32 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v32 <= 0xFFFFFFFFFFFFFFFBLL && v32 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          int v33 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v32);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v32 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          int v33 = 0;
        }
        *(_DWORD *)(a1 + 24) = v33;
        continue;
      case 6u:
        *(unsigned char *)(a1 + 48) |= 1u;
        unint64_t v34 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v34 <= 0xFFFFFFFFFFFFFFF7 && v34 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v35 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v34);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v34 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v35 = 0;
        }
        *(void *)(a1 + 8) = v35;
        continue;
      case 7u:
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(unsigned char *)(a1 + 48) |= 0x20u;
        break;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        continue;
    }
    while (1)
    {
      uint64_t v39 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v40 = v39 + 1;
      if (v39 == -1 || v40 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v41 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v39);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v40;
      v38 |= (unint64_t)(v41 & 0x7F) << v36;
      if ((v41 & 0x80) == 0) {
        goto LABEL_69;
      }
      v36 += 7;
      BOOL v10 = v37++ >= 9;
      if (v10)
      {
        uint64_t v38 = 0;
        goto LABEL_71;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_69:
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      uint64_t v38 = 0;
    }
LABEL_71:
    *(unsigned char *)(a1 + 44) = v38 != 0;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

id *sub_1000E8248(id *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7)
{
  id v20 = a2;
  id v13 = a3;
  id v14 = a4;
  id v15 = a5;
  id v16 = a6;
  if (a1)
  {
    unint64_t v17 = [a1 init];
    a1 = v17;
    if (v17)
    {
      objc_storeStrong(v17 + 1, a2);
      objc_storeStrong(a1 + 6, a3);
      objc_storeStrong(a1 + 2, a4);
      objc_storeStrong(a1 + 3, a5);
      objc_storeStrong(a1 + 4, a6);
      objc_storeStrong(a1 + 5, a7);
    }
  }

  return a1;
}

uint64_t sub_1000E8480(uint64_t result)
{
  if (result) {
    return *(void *)(result + 8);
  }
  return result;
}

uint64_t sub_1000E848C(uint64_t result)
{
  if (result) {
    return *(void *)(result + 48);
  }
  return result;
}

uint64_t sub_1000E8498(uint64_t result)
{
  if (result) {
    return *(void *)(result + 16);
  }
  return result;
}

uint64_t sub_1000E84A4(uint64_t result)
{
  if (result) {
    return *(void *)(result + 24);
  }
  return result;
}

uint64_t sub_1000E84B0(uint64_t result)
{
  if (result) {
    return *(void *)(result + 32);
  }
  return result;
}

uint64_t sub_1000E84BC(uint64_t result)
{
  if (result) {
    return *(void *)(result + 40);
  }
  return result;
}

void sub_1000EA3E8(id a1)
{
  uint64_t v1 = (void *)qword_100289A58;
  qword_100289A58 = (uint64_t)&off_10024B2A0;
}

uint64_t APPBNativeMediaCreativeMetadataReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 32;
        goto LABEL_51;
      case 2u:
        char v15 = 0;
        unsigned int v16 = 0;
        uint64_t v17 = 0;
        *(unsigned char *)(a1 + 52) |= 2u;
        while (2)
        {
          unint64_t v18 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v18 == -1 || v18 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v19 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v18 + 1;
            v17 |= (unint64_t)(v19 & 0x7F) << v15;
            if (v19 < 0)
            {
              v15 += 7;
              BOOL v9 = v16++ >= 9;
              if (v9)
              {
                LODWORD(v17) = 0;
                goto LABEL_55;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_55:
        uint64_t v33 = 40;
        goto LABEL_68;
      case 3u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v17 = 0;
        *(unsigned char *)(a1 + 52) |= 1u;
        while (2)
        {
          unint64_t v22 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v22 == -1 || v22 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v23 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v22);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v22 + 1;
            v17 |= (unint64_t)(v23 & 0x7F) << v20;
            if (v23 < 0)
            {
              v20 += 7;
              BOOL v9 = v21++ >= 9;
              if (v9)
              {
                LODWORD(v17) = 0;
                goto LABEL_59;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_59:
        uint64_t v33 = 24;
        goto LABEL_68;
      case 4u:
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v17 = 0;
        *(unsigned char *)(a1 + 52) |= 4u;
        while (2)
        {
          unint64_t v26 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v26 == -1 || v26 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v27 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v26);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v26 + 1;
            v17 |= (unint64_t)(v27 & 0x7F) << v24;
            if (v27 < 0)
            {
              v24 += 7;
              BOOL v9 = v25++ >= 9;
              if (v9)
              {
                LODWORD(v17) = 0;
                goto LABEL_63;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_63:
        uint64_t v33 = 44;
        goto LABEL_68;
      case 5u:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v17 = 0;
        *(unsigned char *)(a1 + 52) |= 8u;
        break;
      case 6u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 8;
        goto LABEL_51;
      case 7u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 16;
LABEL_51:
        unint64_t v32 = *(void **)(a1 + v13);
        *(void *)(a1 + v13) = v12;

        continue;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        continue;
    }
    while (1)
    {
      unint64_t v30 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v30 == -1 || v30 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v31 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v30);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v30 + 1;
      v17 |= (unint64_t)(v31 & 0x7F) << v28;
      if ((v31 & 0x80) == 0) {
        goto LABEL_65;
      }
      v28 += 7;
      BOOL v9 = v29++ >= 9;
      if (v9)
      {
        LODWORD(v17) = 0;
        goto LABEL_67;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_65:
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LODWORD(v17) = 0;
    }
LABEL_67:
    uint64_t v33 = 48;
LABEL_68:
    *(_DWORD *)(a1 + v33) = v17;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1000EB588(id a1)
{
  uint64_t v1 = (void *)qword_100289A68;
  qword_100289A68 = (uint64_t)&off_10024B2C8;
}

uint64_t APPBServerErrorRequestReadFrom(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = objc_alloc_init(APPBLogMetaData);
        objc_storeStrong((id *)(a1 + 40), v12);
        if PBReaderPlaceMark() && (APPBLogMetaDataReadFrom((uint64_t)v12, a2)) {
          goto LABEL_32;
        }
        goto LABEL_43;
      case 2u:
        char v14 = 0;
        unsigned int v15 = 0;
        uint64_t v16 = 0;
        *(unsigned char *)(a1 + 48) |= 1u;
        while (2)
        {
          unint64_t v17 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v17 == -1 || v17 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v18 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v17);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v17 + 1;
            v16 |= (unint64_t)(v18 & 0x7F) << v14;
            if (v18 < 0)
            {
              v14 += 7;
              BOOL v9 = v15++ >= 9;
              if (v9)
              {
                LODWORD(v16) = 0;
                goto LABEL_40;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v16) = 0;
        }
LABEL_40:
        *(_DWORD *)(a1 + 16) = v16;
        goto LABEL_41;
      case 3u:
        uint64_t v12 = objc_alloc_init(APPBAdData);
        objc_storeStrong((id *)(a1 + 8), v12);
        if PBReaderPlaceMark() && (APPBAdDataReadFrom((uint64_t)v12, a2))
        {
LABEL_32:
          PBReaderRecallMark();
LABEL_35:

LABEL_41:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_43:

        return 0;
      case 4u:
        PBReaderReadString();
        uint64_t v12 = (APPBLogMetaData *)objc_claimAutoreleasedReturnValue();
        if (v12) {
          [(id)a1 addFailingURLs:v12];
        }
        goto LABEL_35;
      case 5u:
        uint64_t v19 = PBReaderReadString();
        char v20 = *(void **)(a1 + 24);
        *(void *)(a1 + 24) = v19;

        goto LABEL_41;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_41;
    }
  }
}

void sub_1000EC7CC(id a1)
{
  uint64_t v1 = (void *)qword_100289A78;
  qword_100289A78 = (uint64_t)&off_10024B2F0;
}

uint64_t APPBLogImpressionRequestReadFrom(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v13 = objc_alloc_init(APPBLogMetaData);
        objc_storeStrong((id *)(a1 + 24), v13);
        if PBReaderPlaceMark() && (APPBLogMetaDataReadFrom((uint64_t)v13, a2)) {
          goto LABEL_25;
        }
        goto LABEL_81;
      case 2u:
        uint64_t v13 = objc_alloc_init(APPBAssetMetric);
        [(id)a1 addMetric:v13];
        if PBReaderPlaceMark() && (APPBAssetMetricReadFrom((uint64_t)v13, a2))
        {
LABEL_25:
          PBReaderRecallMark();

LABEL_79:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_81:

        return 0;
      case 3u:
        char v15 = 0;
        unsigned int v16 = 0;
        uint64_t v17 = 0;
        *(unsigned char *)(a1 + 52) |= 8u;
        while (2)
        {
          uint64_t v18 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v20 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v19;
            v17 |= (unint64_t)(v20 & 0x7F) << v15;
            if (v20 < 0)
            {
              v15 += 7;
              BOOL v10 = v16++ >= 9;
              if (v10)
              {
                uint64_t v17 = 0;
                goto LABEL_63;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v17 = 0;
        }
LABEL_63:
        BOOL v44 = v17 != 0;
        uint64_t v45 = 49;
        goto LABEL_72;
      case 4u:
        uint64_t v21 = PBReaderReadData();
        uint64_t v22 = 16;
        goto LABEL_59;
      case 5u:
        *(unsigned char *)(a1 + 52) |= 1u;
        unint64_t v23 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v23 <= 0xFFFFFFFFFFFFFFFBLL && v23 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          int v24 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v23);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v23 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          int v24 = 0;
        }
        *(_DWORD *)(a1 + 40) = v24;
        goto LABEL_79;
      case 6u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        *(unsigned char *)(a1 + 52) |= 4u;
        while (2)
        {
          uint64_t v28 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v29 = v28 + 1;
          if (v28 == -1 || v29 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v28);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v29;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              BOOL v10 = v26++ >= 9;
              if (v10)
              {
                uint64_t v27 = 0;
                goto LABEL_67;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v27 = 0;
        }
LABEL_67:
        BOOL v44 = v27 != 0;
        uint64_t v45 = 48;
        goto LABEL_72;
      case 7u:
        char v31 = 0;
        unsigned int v32 = 0;
        uint64_t v33 = 0;
        *(unsigned char *)(a1 + 52) |= 0x10u;
        while (2)
        {
          uint64_t v34 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v35 = v34 + 1;
          if (v34 == -1 || v35 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v36 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v34);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v35;
            v33 |= (unint64_t)(v36 & 0x7F) << v31;
            if (v36 < 0)
            {
              v31 += 7;
              BOOL v10 = v32++ >= 9;
              if (v10)
              {
                uint64_t v33 = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v33 = 0;
        }
LABEL_71:
        BOOL v44 = v33 != 0;
        uint64_t v45 = 50;
LABEL_72:
        *(unsigned char *)(a1 + v45) = v44;
        goto LABEL_79;
      case 8u:
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(unsigned char *)(a1 + 52) |= 2u;
        while (2)
        {
          uint64_t v40 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v42 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v40);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v41;
            v39 |= (unint64_t)(v42 & 0x7F) << v37;
            if (v42 < 0)
            {
              v37 += 7;
              BOOL v10 = v38++ >= 9;
              if (v10)
              {
                LODWORD(v39) = 0;
                goto LABEL_76;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v39) = 0;
        }
LABEL_76:
        *(_DWORD *)(a1 + 44) = v39;
        goto LABEL_79;
      case 9u:
        uint64_t v21 = PBReaderReadString();
        uint64_t v22 = 8;
LABEL_59:
        unint64_t v43 = *(void **)(a1 + v22);
        *(void *)(a1 + v22) = v21;

        goto LABEL_79;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_79;
    }
  }
}

void sub_1000EE848(id a1)
{
  uint64_t v1 = (void *)qword_100289A88;
  qword_100289A88 = (uint64_t)&off_10024B318;
}

uint64_t APPBThirdPartySegmentUpdateRequestReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadData();
        uint64_t v13 = 32;
        goto LABEL_49;
      case 2u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 8;
        goto LABEL_49;
      case 3u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 16;
        goto LABEL_49;
      case 4u:
        char v15 = 0;
        unsigned int v16 = 0;
        uint64_t v17 = 0;
        *(unsigned char *)(a1 + 68) |= 1u;
        while (2)
        {
          unint64_t v18 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v18 == -1 || v18 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v19 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v18 + 1;
            v17 |= (unint64_t)(v19 & 0x7F) << v15;
            if (v19 < 0)
            {
              v15 += 7;
              BOOL v9 = v16++ >= 9;
              if (v9)
              {
                LODWORD(v17) = 0;
                goto LABEL_53;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_53:
        *(_DWORD *)(a1 + 40) = v17;
        continue;
      case 5u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        *(unsigned char *)(a1 + 68) |= 4u;
        while (2)
        {
          unint64_t v23 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v23 == -1 || v23 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v23);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v23 + 1;
            v22 |= (unint64_t)(v24 & 0x7F) << v20;
            if (v24 < 0)
            {
              v20 += 7;
              BOOL v9 = v21++ >= 9;
              if (v9)
              {
                uint64_t v22 = 0;
                goto LABEL_57;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v22 = 0;
        }
LABEL_57:
        BOOL v32 = v22 != 0;
        uint64_t v33 = 65;
        goto LABEL_62;
      case 6u:
        char v25 = PBReaderReadString();
        if (v25) {
          [(id)a1 addSegmentIdentifiers:v25];
        }

        continue;
      case 7u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        *(unsigned char *)(a1 + 68) |= 2u;
        break;
      case 8u:
        uint64_t v12 = PBReaderReadData();
        uint64_t v13 = 56;
        goto LABEL_49;
      case 9u:
        uint64_t v12 = PBReaderReadData();
        uint64_t v13 = 24;
LABEL_49:
        char v31 = *(void **)(a1 + v13);
        *(void *)(a1 + v13) = v12;

        continue;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        continue;
    }
    while (1)
    {
      unint64_t v29 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v29 == -1 || v29 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v29);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v29 + 1;
      v28 |= (unint64_t)(v30 & 0x7F) << v26;
      if ((v30 & 0x80) == 0) {
        goto LABEL_59;
      }
      v26 += 7;
      BOOL v9 = v27++ >= 9;
      if (v9)
      {
        uint64_t v28 = 0;
        goto LABEL_61;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_59:
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      uint64_t v28 = 0;
    }
LABEL_61:
    BOOL v32 = v28 != 0;
    uint64_t v33 = 64;
LABEL_62:
    *(unsigned char *)(a1 + v33) = v32;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t APPBMerchantReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    int v11 = v6 & 7;
    if (v10 || v11 == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    unint64_t v13 = v6 >> 3;
    if ((int)(v6 >> 3) <= 99)
    {
      switch((int)v13)
      {
        case 1:
          uint64_t v14 = PBReaderReadString();
          uint64_t v15 = 64;
          goto LABEL_56;
        case 2:
          uint64_t v14 = PBReaderReadString();
          uint64_t v15 = 56;
          goto LABEL_56;
        case 3:
          if (v11 != 2)
          {
            char v28 = 0;
            unsigned int v29 = 0;
            uint64_t v30 = 0;
            while (1)
            {
              unint64_t v31 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
              if (v31 == -1 || v31 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
                goto LABEL_76;
              }
              char v32 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v31);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v31 + 1;
              v30 |= (unint64_t)(v32 & 0x7F) << v28;
              if (v32 < 0)
              {
                v28 += 7;
                BOOL v9 = v29++ >= 9;
                if (!v9) {
                  continue;
                }
              }
              goto LABEL_77;
            }
          }
          uint64_t result = PBReaderPlaceMark();
          if (!result) {
            return result;
          }
          while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length)
               && !*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error))
          {
            char v17 = 0;
            unsigned int v18 = 0;
            uint64_t v19 = 0;
            while (1)
            {
              unint64_t v20 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
              if (v20 == -1 || v20 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
                break;
              }
              char v21 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v20);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v20 + 1;
              v19 |= (unint64_t)(v21 & 0x7F) << v17;
              if (v21 < 0)
              {
                v17 += 7;
                BOOL v9 = v18++ >= 9;
                if (!v9) {
                  continue;
                }
              }
              goto LABEL_40;
            }
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_40:
            PBRepeatedInt32Add();
          }
          goto LABEL_61;
        case 4:
          if (v11 == 2)
          {
            uint64_t result = PBReaderPlaceMark();
            if (!result) {
              return result;
            }
            while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length)
                 && !*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error))
            {
              char v22 = 0;
              unsigned int v23 = 0;
              uint64_t v24 = 0;
              while (1)
              {
                unint64_t v25 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
                if (v25 == -1 || v25 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
                  break;
                }
                char v26 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v25);
                *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v25 + 1;
                v24 |= (unint64_t)(v26 & 0x7F) << v22;
                if (v26 < 0)
                {
                  v22 += 7;
                  BOOL v9 = v23++ >= 9;
                  if (!v9) {
                    continue;
                  }
                }
                goto LABEL_53;
              }
              *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_53:
              PBRepeatedInt32Add();
            }
LABEL_61:
            PBReaderRecallMark();
          }
          else
          {
            char v33 = 0;
            unsigned int v34 = 0;
            uint64_t v35 = 0;
            while (1)
            {
              unint64_t v36 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
              if (v36 == -1 || v36 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
                break;
              }
              char v37 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v36);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v36 + 1;
              v35 |= (unint64_t)(v37 & 0x7F) << v33;
              if (v37 < 0)
              {
                v33 += 7;
                BOOL v9 = v34++ >= 9;
                if (!v9) {
                  continue;
                }
              }
              goto LABEL_77;
            }
LABEL_76:
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_77:
            PBRepeatedInt32Add();
          }
          break;
        default:
          goto LABEL_59;
      }
      continue;
    }
    if ((int)v13 > 109)
    {
      if (v13 == 110)
      {
        uint64_t v14 = PBReaderReadString();
        uint64_t v15 = 96;
        goto LABEL_56;
      }
      if (v13 == 111)
      {
        uint64_t v14 = PBReaderReadData();
        uint64_t v15 = 88;
        goto LABEL_56;
      }
    }
    else
    {
      if (v13 == 100)
      {
        uint64_t v14 = PBReaderReadString();
        uint64_t v15 = 80;
        goto LABEL_56;
      }
      if (v13 == 101)
      {
        uint64_t v14 = PBReaderReadData();
        uint64_t v15 = 72;
LABEL_56:
        unsigned int v27 = *(void **)(a1 + v15);
        *(void *)(a1 + v15) = v14;

        continue;
      }
    }
LABEL_59:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1000F15F0(id a1)
{
  uint64_t v1 = (void *)qword_100289A98;
  qword_100289A98 = (uint64_t)&off_10024B340;
}

uint64_t APPBNumericParameterReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    if ((v6 >> 3) == 1)
    {
      uint64_t v17 = PBReaderReadString();
      unsigned int v18 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = v17;
    }
    else if ((v6 >> 3) == 2)
    {
      char v12 = 0;
      unsigned int v13 = 0;
      uint64_t v14 = 0;
      while (1)
      {
        unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v15 == -1 || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v16 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
        v14 |= (unint64_t)(v16 & 0x7F) << v12;
        if ((v16 & 0x80) == 0) {
          goto LABEL_30;
        }
        v12 += 7;
        BOOL v9 = v13++ >= 9;
        if (v9)
        {
          LODWORD(v14) = 0;
          goto LABEL_32;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_30:
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        LODWORD(v14) = 0;
      }
LABEL_32:
      *(_DWORD *)(a1 + 16) = v14;
    }
    else
    {
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1000F1CC4(id a1)
{
  uint64_t v1 = (void *)qword_100289AA8;
  qword_100289AA8 = (uint64_t)&off_10024B368;
}

uint64_t APPBAdEventReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 1u:
        *(unsigned char *)(a1 + 40) |= 1u;
        unint64_t v13 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v13 <= 0xFFFFFFFFFFFFFFF7 && v13 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v14 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v13);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v13 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v14 = 0;
        }
        *(void *)(a1 + 8) = v14;
        continue;
      case 3u:
        uint64_t v16 = PBReaderReadString();
        uint64_t v17 = *(void **)(a1 + 24);
        *(void *)(a1 + 24) = v16;

        continue;
      case 4u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        *(unsigned char *)(a1 + 40) |= 4u;
        while (2)
        {
          uint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v22 = v21 + 1;
          if (v21 == -1 || v22 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v23 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v22;
            v20 |= (unint64_t)(v23 & 0x7F) << v18;
            if (v23 < 0)
            {
              v18 += 7;
              BOOL v10 = v19++ >= 9;
              if (v10)
              {
                LODWORD(v20) = 0;
                goto LABEL_48;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v20) = 0;
        }
LABEL_48:
        uint64_t v34 = 32;
        goto LABEL_57;
      case 5u:
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v20 = 0;
        *(unsigned char *)(a1 + 40) |= 2u;
        while (2)
        {
          uint64_t v26 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v27 = v26 + 1;
          if (v26 == -1 || v27 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v28 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v26);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v27;
            v20 |= (unint64_t)(v28 & 0x7F) << v24;
            if (v28 < 0)
            {
              v24 += 7;
              BOOL v10 = v25++ >= 9;
              if (v10)
              {
                LODWORD(v20) = 0;
                goto LABEL_52;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v20) = 0;
        }
LABEL_52:
        uint64_t v34 = 16;
        goto LABEL_57;
      case 6u:
        char v29 = 0;
        unsigned int v30 = 0;
        uint64_t v20 = 0;
        *(unsigned char *)(a1 + 40) |= 8u;
        break;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        continue;
    }
    while (1)
    {
      uint64_t v31 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v32 = v31 + 1;
      if (v31 == -1 || v32 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v33 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v31);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v32;
      v20 |= (unint64_t)(v33 & 0x7F) << v29;
      if ((v33 & 0x80) == 0) {
        goto LABEL_54;
      }
      v29 += 7;
      BOOL v10 = v30++ >= 9;
      if (v10)
      {
        LODWORD(v20) = 0;
        goto LABEL_56;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_54:
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LODWORD(v20) = 0;
    }
LABEL_56:
    uint64_t v34 = 36;
LABEL_57:
    *(_DWORD *)(a1 + v34) = v20;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1000F3450(id a1)
{
  uint64_t v1 = (void *)qword_100289AB8;
  qword_100289AB8 = (uint64_t)&off_10024B390;
}

BOOL APPBKeyedParameterListReadFrom(void *a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      if ((v6 >> 3) == 2) {
        break;
      }
      if ((v6 >> 3) == 1)
      {
        uint64_t v12 = PBReaderReadString();
        unint64_t v13 = (APPBParameter *)a1[1];
        a1[1] = v12;
LABEL_23:

        goto LABEL_25;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_25:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }
    unint64_t v13 = objc_alloc_init(APPBParameter);
    [a1 addParameterList:v13];
    if (!PBReaderPlaceMark() || !APPBParameterReadFrom((uint64_t)v13, a2))
    {

      return 0;
    }
    PBReaderRecallMark();
    goto LABEL_23;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1000F3FA0(id a1)
{
  uint64_t v1 = (void *)qword_100289AC8;
  qword_100289AC8 = (uint64_t)&off_10024B3B8;
}

BOOL APPBLogImpressionResponseReadFrom(uint64_t a1, uint64_t a2)
{
  while (1)
  {
    int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
      return v3 == 0;
    }
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error))
    {
      int v3 = 1;
      return v3 == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    uint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        LOBYTE(v6) = 0;
        int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LOBYTE(v6) = 0;
    }
LABEL_13:
    if (v3) {
      BOOL v10 = 1;
    }
    else {
      BOOL v10 = (v6 & 7) == 4;
    }
    if (v10) {
      return v3 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

void sub_1000F4294(id a1)
{
  uint64_t v1 = (void *)qword_100289AD8;
  qword_100289AD8 = (uint64_t)&off_10024B3E0;
}

uint64_t APPBAdRequesterReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    unint64_t v12 = v6 >> 3;
    if ((int)(v6 >> 3) > 10)
    {
      if (v12 == 11)
      {
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v15 = 0;
        *(unsigned char *)(a1 + 36) |= 1u;
        while (1)
        {
          unint64_t v23 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v23 == -1 || v23 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v23);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v23 + 1;
          v15 |= (unint64_t)(v24 & 0x7F) << v21;
          if ((v24 & 0x80) == 0) {
            goto LABEL_46;
          }
          v21 += 7;
          BOOL v9 = v22++ >= 9;
          if (v9)
          {
            LODWORD(v15) = 0;
            goto LABEL_48;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_46:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_48:
        uint64_t v26 = 16;
LABEL_49:
        *(_DWORD *)(a1 + v26) = v15;
        continue;
      }
      if (v12 != 21)
      {
LABEL_39:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        continue;
      }
      uint64_t v18 = PBReaderReadString();
      uint64_t v19 = 8;
    }
    else
    {
      if (v12 != 1)
      {
        if (v12 != 10) {
          goto LABEL_39;
        }
        char v13 = 0;
        unsigned int v14 = 0;
        uint64_t v15 = 0;
        *(unsigned char *)(a1 + 36) |= 2u;
        while (1)
        {
          unint64_t v16 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v16 == -1 || v16 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v17 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v16);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v16 + 1;
          v15 |= (unint64_t)(v17 & 0x7F) << v13;
          if ((v17 & 0x80) == 0) {
            goto LABEL_42;
          }
          v13 += 7;
          BOOL v9 = v14++ >= 9;
          if (v9)
          {
            LODWORD(v15) = 0;
            goto LABEL_44;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_42:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_44:
        uint64_t v26 = 32;
        goto LABEL_49;
      }
      uint64_t v18 = PBReaderReadString();
      uint64_t v19 = 24;
    }
    uint64_t v20 = *(void **)(a1 + v19);
    *(void *)(a1 + v19) = v18;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1000F4EAC(id a1, PBCodable *a2, NSError *a3)
{
  char v4 = a3;
  unsigned int v5 = APLogForCategory();
  unint64_t v6 = v5;
  if (a2 || !v4)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      LOWORD(v8) = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Third party segment update succeeded.", (uint8_t *)&v8, 2u);
    }
  }
  else if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
  {
    unint64_t v7 = [(NSError *)v4 localizedDescription];
    int v8 = 138543362;
    BOOL v9 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "Third party segment update failed due to %{public}@.", (uint8_t *)&v8, 0xCu);
  }
}

void sub_1000F5018(id a1)
{
  uint64_t v1 = (void *)qword_100289AE8;
  qword_100289AE8 = (uint64_t)&off_10024B408;
}

uint64_t APPBTagSetReadFrom(void *a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    if ((v6 >> 3) == 1)
    {
      unint64_t v12 = PBReaderReadString();
      if (v12) {
        [a1 addTags:v12];
      }
    }
    else
    {
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

BOOL APPBTransparencyDetailsReadFrom(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      switch((v6 >> 3))
      {
        case 1u:
          uint64_t v12 = PBReaderReadString();
          uint64_t v13 = 16;
          goto LABEL_24;
        case 2u:
          uint64_t v12 = PBReaderReadString();
          uint64_t v13 = 24;
          goto LABEL_24;
        case 3u:
          uint64_t v12 = PBReaderReadString();
          uint64_t v13 = 32;
          goto LABEL_24;
        case 4u:
          uint64_t v12 = PBReaderReadString();
          uint64_t v13 = 8;
LABEL_24:
          unsigned int v14 = *(void **)(a1 + v13);
          *(void *)(a1 + v13) = v12;

          goto LABEL_25;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            return 0;
          }
LABEL_25:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          break;
      }
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

BOOL APPBAdLayoutDataReadFrom(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      if ((v6 >> 3) == 2) {
        break;
      }
      if ((v6 >> 3) == 1)
      {
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = *(APPBAdLayoutDetails **)(a1 + 16);
        *(void *)(a1 + 16) = v12;
LABEL_23:

        goto LABEL_25;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_25:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }
    uint64_t v13 = objc_alloc_init(APPBAdLayoutDetails);
    objc_storeStrong((id *)(a1 + 8), v13);
    if (!PBReaderPlaceMark() || (APPBAdLayoutDetailsReadFrom((uint64_t)v13, a2) & 1) == 0)
    {

      return 0;
    }
    PBReaderRecallMark();
    goto LABEL_23;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

BOOL APPBStyleReadFrom(id *a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = objc_alloc_init(APPBColor);
        uint64_t v13 = 1;
        goto LABEL_31;
      case 2u:
        uint64_t v12 = objc_alloc_init(APPBBorderStyle);
        objc_storeStrong(a1 + 2, v12);
        if (!PBReaderPlaceMark() || (APPBBorderStyleReadFrom((uint64_t)v12, a2) & 1) == 0) {
          goto LABEL_36;
        }
        goto LABEL_33;
      case 3u:
        uint64_t v12 = objc_alloc_init(APPBButtonStyle);
        objc_storeStrong(a1 + 3, v12);
        if (!PBReaderPlaceMark() || (APPBButtonStyleReadFrom((uint64_t)v12, a2) & 1) == 0) {
          goto LABEL_36;
        }
        goto LABEL_33;
      case 4u:
        uint64_t v12 = objc_alloc_init(APPBShadowStyle);
        objc_storeStrong(a1 + 4, v12);
        if (!PBReaderPlaceMark() || (APPBShadowStyleReadFrom((uint64_t)v12, a2) & 1) == 0) {
          goto LABEL_36;
        }
        goto LABEL_33;
      case 5u:
        uint64_t v12 = objc_alloc_init(APPBColor);
        uint64_t v13 = 5;
LABEL_31:
        objc_storeStrong(&a1[v13], v12);
        if PBReaderPlaceMark() && (APPBColorReadFrom(v12, a2))
        {
LABEL_33:
          PBReaderRecallMark();

LABEL_34:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_36:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_34;
    }
  }
}

void sub_100105028(id a1)
{
  uint64_t v1 = (void *)qword_100289AF8;
  qword_100289AF8 = (uint64_t)&off_10024B430;
}

uint64_t APPBLogAdContentErrorRequestReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = objc_alloc_init(APPBLogMetaData);
        objc_storeStrong((id *)(a1 + 48), v12);
        if PBReaderPlaceMark() && (APPBLogMetaDataReadFrom((uint64_t)v12, a2))
        {
          PBReaderRecallMark();
          goto LABEL_44;
        }

        return 0;
      case 2u:
        char v14 = 0;
        unsigned int v15 = 0;
        uint64_t v16 = 0;
        *(unsigned char *)(a1 + 64) |= 1u;
        while (1)
        {
          unint64_t v17 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v17 == -1 || v17 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v18 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v17);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v17 + 1;
          v16 |= (unint64_t)(v18 & 0x7F) << v14;
          if ((v18 & 0x80) == 0) {
            goto LABEL_46;
          }
          v14 += 7;
          BOOL v9 = v15++ >= 9;
          if (v9)
          {
            LODWORD(v16) = 0;
            goto LABEL_48;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_46:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v16) = 0;
        }
LABEL_48:
        uint64_t v26 = 16;
        goto LABEL_53;
      case 3u:
        uint64_t v19 = PBReaderReadString();
        uint64_t v20 = 8;
        goto LABEL_39;
      case 4u:
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v16 = 0;
        *(unsigned char *)(a1 + 64) |= 2u;
        break;
      case 5u:
        uint64_t v19 = PBReaderReadString();
        uint64_t v20 = 56;
LABEL_39:
        unsigned int v25 = *(void **)(a1 + v20);
        *(void *)(a1 + v20) = v19;

        continue;
      case 6u:
        PBReaderReadString();
        uint64_t v12 = (APPBLogMetaData *)objc_claimAutoreleasedReturnValue();
        if (v12) {
          [(id)a1 addLines:v12];
        }
        goto LABEL_44;
      case 7u:
        PBReaderReadString();
        uint64_t v12 = (APPBLogMetaData *)objc_claimAutoreleasedReturnValue();
        if (v12) {
          [(id)a1 addFunctionNames:v12];
        }
LABEL_44:

        continue;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        continue;
    }
    while (1)
    {
      unint64_t v23 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v23 == -1 || v23 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v24 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v23);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v23 + 1;
      v16 |= (unint64_t)(v24 & 0x7F) << v21;
      if ((v24 & 0x80) == 0) {
        goto LABEL_50;
      }
      v21 += 7;
      BOOL v9 = v22++ >= 9;
      if (v9)
      {
        LODWORD(v16) = 0;
        goto LABEL_52;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_50:
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LODWORD(v16) = 0;
    }
LABEL_52:
    uint64_t v26 = 32;
LABEL_53:
    *(_DWORD *)(a1 + v26) = v16;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1001066F0(id a1)
{
  uint64_t v1 = (void *)qword_100289B08;
  qword_100289B08 = (uint64_t)&off_10024B458;
}

BOOL APPBAdBatchRequestReadFrom(id *a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = objc_alloc_init(APPBRequestProperties);
        objc_storeStrong(a1 + 2, v12);
        if PBReaderPlaceMark() && (APPBRequestPropertiesReadFrom((uint64_t)v12, a2)) {
          goto LABEL_35;
        }
        goto LABEL_42;
      case 2u:
        uint64_t v12 = objc_alloc_init(APPBAdSpecification);
        objc_storeStrong(a1 + 5, v12);
        if (!PBReaderPlaceMark() || (APPBAdSpecificationReadFrom((uint64_t)v12, a2) & 1) == 0) {
          goto LABEL_42;
        }
        goto LABEL_35;
      case 3u:
      case 4u:
      case 6u:
        goto LABEL_25;
      case 5u:
        uint64_t v12 = objc_alloc_init(APPBResourceCacheEntry);
        [a1 addResourceCacheEntries:v12];
        if (!PBReaderPlaceMark() || (APPBResourceCacheEntryReadFrom((uint64_t)v12, a2) & 1) == 0) {
          goto LABEL_42;
        }
        goto LABEL_35;
      case 7u:
        uint64_t v12 = objc_alloc_init(APPBCachedAd);
        [a1 addCachedAds:v12];
        if PBReaderPlaceMark() && (APPBCachedAdReadFrom((uint64_t)v12, a2)) {
          goto LABEL_35;
        }
        goto LABEL_42;
      case 8u:
        PBReaderReadString();
        uint64_t v12 = (APPBRequestProperties *)objc_claimAutoreleasedReturnValue();
        if (v12) {
          [a1 addTags:v12];
        }
        goto LABEL_36;
      default:
        if ((v6 >> 3) != 20)
        {
LABEL_25:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            return 0;
          }
          goto LABEL_37;
        }
        uint64_t v12 = objc_alloc_init(APPBAdRequester);
        [a1 addRequesters:v12];
        if PBReaderPlaceMark() && (APPBAdRequesterReadFrom((uint64_t)v12, a2))
        {
LABEL_35:
          PBReaderRecallMark();
LABEL_36:

LABEL_37:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_42:

        return 0;
    }
  }
}

void sub_100108374(id a1)
{
  uint64_t v1 = (void *)qword_100289B18;
  qword_100289B18 = (uint64_t)&off_10024B480;
}

uint64_t APPBLogSubscriptionEventRequestReadFrom(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  char v4 = &OBJC_IVAR___APPBLogMetaData__batchId;
  unsigned int v5 = &OBJC_IVAR___APPBLogMetaData__batchId;
  unint64_t v6 = &OBJC_IVAR___APPBLogMetaData__batchId;
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    unint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v11 = v10 + 1;
      if (v10 == -1 || v11 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v10);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v11;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      BOOL v13 = v8++ >= 9;
      if (v13)
      {
        unint64_t v9 = 0;
        int v14 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_12:
    int v14 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v9 = 0;
    }
LABEL_14:
    if (v14 || (v9 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v9 >> 3))
    {
      case 1u:
        uint64_t v16 = PBReaderReadData();
        uint64_t v17 = v4[476];
        goto LABEL_26;
      case 2u:
        uint64_t v16 = PBReaderReadData();
        uint64_t v17 = v5[477];
        goto LABEL_26;
      case 3u:
        uint64_t v16 = PBReaderReadData();
        uint64_t v17 = v6[478];
        goto LABEL_26;
      case 4u:
        uint64_t v16 = PBReaderReadString();
        uint64_t v17 = 64;
        goto LABEL_26;
      case 5u:
        uint64_t v16 = PBReaderReadString();
        uint64_t v17 = 56;
LABEL_26:
        uint64_t v19 = *(void **)(a1 + v17);
        *(void *)(a1 + v17) = v16;

        goto LABEL_27;
      case 6u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        *(unsigned char *)(a1 + 72) |= 2u;
        while (2)
        {
          uint64_t v23 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v23);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v24;
            v22 |= (unint64_t)(v25 & 0x7F) << v20;
            if (v25 < 0)
            {
              v20 += 7;
              BOOL v13 = v21++ >= 9;
              if (v13)
              {
                LODWORD(v22) = 0;
                goto LABEL_45;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v22) = 0;
        }
LABEL_45:
        *(_DWORD *)(a1 + 32) = v22;
        goto LABEL_27;
      case 7u:
        *(unsigned char *)(a1 + 72) |= 1u;
        unint64_t v26 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v27 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v26);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v26 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v27 = 0;
        }
        *(void *)(a1 + 8) = v27;
        goto LABEL_27;
      case 8u:
        char v28 = v6;
        char v29 = v5;
        unsigned int v30 = v4;
        uint64_t v31 = objc_alloc_init(APPBParameter);
        [(id)a1 addInfo:v31];
        if (PBReaderPlaceMark() && APPBParameterReadFrom((uint64_t)v31, a2))
        {
          PBReaderRecallMark();

          char v4 = v30;
          unsigned int v5 = v29;
          unint64_t v6 = v28;
LABEL_27:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_27;
    }
  }
}

void sub_100109A28(id a1)
{
  uint64_t v1 = (void *)qword_100289B28;
  qword_100289B28 = (uint64_t)&off_10024B4A8;
}

BOOL APPBServerErrorResponseReadFrom(uint64_t a1, uint64_t a2)
{
  while (1)
  {
    int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
      return v3 == 0;
    }
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error))
    {
      int v3 = 1;
      return v3 == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    uint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        LOBYTE(v6) = 0;
        int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LOBYTE(v6) = 0;
    }
LABEL_13:
    if (v3) {
      BOOL v10 = 1;
    }
    else {
      BOOL v10 = (v6 & 7) == 4;
    }
    if (v10) {
      return v3 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

uint64_t APPBButtonReadFrom(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 40) |= 1u;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1 || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            goto LABEL_34;
          }
          v12 += 7;
          BOOL v9 = v13++ >= 9;
          if (v9)
          {
            LODWORD(v14) = 0;
            goto LABEL_36;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_34:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_36:
        *(_DWORD *)(a1 + 24) = v14;
        goto LABEL_37;
      case 2u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 32;
        goto LABEL_29;
      case 3u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 8;
LABEL_29:
        char v20 = *(void **)(a1 + v19);
        *(void *)(a1 + v19) = v18;

        goto LABEL_37;
      case 4u:
        unsigned int v21 = objc_alloc_init(APPBButtonStyle);
        objc_storeStrong((id *)(a1 + 16), v21);
        if PBReaderPlaceMark() && (APPBButtonStyleReadFrom((uint64_t)v21, a2))
        {
          PBReaderRecallMark();

LABEL_37:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_37;
    }
  }
}

id APTimeSpentStoreDatabase.init(database:)(void *a1)
{
  id v2 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithDatabase:a1];

  return v2;
}

{
  void *v1;
  char *v3;
  id v4;
  id v5;
  objc_super v7;

  sub_10000C6C8(0, (unint64_t *)&qword_100284870);
  int v3 = v1;
  char v4 = a1;
  sub_10019B470();
  sub_10019AE20();
  swift_allocObject();
  *(void *)&v3[OBJC_IVAR___APTimeSpentStoreDatabase_database] = sub_10019AE10();

  v7.receiver = v3;
  v7.super_class = (Class)APTimeSpentStoreDatabase;
  unsigned int v5 = [super init];

  return v5;
}

uint64_t APTimeSpentStoreDatabase.retrieveTimeSpentEntriesOlderThan(_:)(uint64_t a1)
{
  uint64_t v2 = sub_10019ABA0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v34 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000C440((uint64_t *)&unk_100284880);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1001D69A0;
  *(void *)(v5 + 56) = v2;
  *(void *)(v5 + 64) = &protocol witness table for Date;
  unint64_t v6 = sub_10010B318((uint64_t *)(v5 + 32));
  unint64_t v7 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v3 + 16);
  uint64_t v35 = v2;
  v7(v6, a1, v2);
  type metadata accessor for APTimeSpentEntry();
  sub_10019AE00();
  swift_bridgeObjectRelease();
  if (!v41)
  {
    long long v36 = v39;
    long long v37 = v40;
    uint64_t v38 = v42;
LABEL_14:
    unint64_t v8 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_15:
    if (!v41) {
      return v8;
    }
LABEL_16:
    _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)&v39);
    return v8;
  }
  sub_10010B568((uint64_t)&v39, (uint64_t)&v36);
  if (!*((void *)&v37 + 1)) {
    goto LABEL_14;
  }
  sub_10007FDE0(&v36, *((uint64_t *)&v37 + 1));
  unint64_t v8 = sub_10019B240();
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)&v36);
  if (![self isAppleInternalInstall]) {
    goto LABEL_15;
  }
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_10019B5A0();
    if (!v9) {
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v9) {
      goto LABEL_19;
    }
  }
  uint64_t result = sub_10000C6C8(0, (unint64_t *)&qword_100284870);
  uint64_t v33 = result;
  if (v9 >= 1)
  {
    uint64_t v11 = 0;
    unint64_t v30 = v8 & 0xC000000000000001;
    uint64_t v27 = (void (**)(char *, uint64_t))(v3 + 8);
    unint64_t v29 = 0x800000010020C420;
    long long v28 = xmmword_1001D6A80;
    uint64_t v31 = v9;
    unint64_t v32 = v8;
    do
    {
      if (v30) {
        id v12 = (id)sub_10019B550();
      }
      else {
        id v12 = *(id *)(v8 + 8 * v11 + 32);
      }
      unsigned int v13 = v12;
      ++v11;
      sub_10019B3A0();
      uint64_t v14 = (void *)sub_10019B470();
      sub_10000C440((uint64_t *)&unk_100285520);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = v28;
      id v16 = [v13 contentId];
      uint64_t v17 = sub_10019B0B0();
      uint64_t v19 = v18;

      *(void *)(v15 + 56) = &type metadata for String;
      unint64_t v20 = sub_100078904();
      *(void *)(v15 + 64) = v20;
      *(void *)(v15 + 32) = v17;
      *(void *)(v15 + 40) = v19;
      id v21 = [v13 timeStamp];
      uint64_t v22 = v34;
      sub_10019AB70();

      uint64_t v23 = sub_10019AAA0();
      uint64_t v25 = v24;
      (*v27)(v22, v35);
      *(void *)(v15 + 96) = &type metadata for String;
      *(void *)(v15 + 104) = v20;
      *(void *)(v15 + 72) = v23;
      *(void *)(v15 + 80) = v25;
      sub_10019AF50();

      swift_bridgeObjectRelease();
      unint64_t v8 = v32;
    }
    while (v31 != v11);
LABEL_19:
    swift_bridgeObjectRelease();
    if (!v41) {
      return v8;
    }
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t *sub_10010B318(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_10010B37C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_10019ABA0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007FDE0(a1, a1[3]);
  sub_10019AD60();
  if (v2)
  {
    uint64_t result = swift_errorRelease();
    id v10 = 0;
  }
  else
  {
    uint64_t v15 = v6;
    id v16 = a2;
    sub_10007FDE0(a1, a1[3]);
    sub_10019AD40();
    id v11 = objc_allocWithZone((Class)APTimeSpentEntry);
    NSString v12 = sub_10019B0A0();
    swift_bridgeObjectRelease();
    Class isa = sub_10019AAF0().super.isa;
    id v10 = [v11 initWithContentId:v12 timeStamp:isa];

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v8, v5);
    a2 = v16;
  }
  *a2 = v10;
  return result;
}

uint64_t sub_10010B568(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

id sub_10010B5CC@<X0>(void **a1@<X0>, void **a2@<X8>)
{
  uint64_t v2 = *a1;
  *a2 = *a1;
  return v2;
}

Swift::Void __swiftcall APTimeSpentStoreDatabase.removeEntries(forContentIds:)(Swift::OpaquePointer forContentIds)
{
  if ([self isAppleInternalInstall])
  {
    uint64_t v2 = *((void *)forContentIds._rawValue + 2);
    if (v2)
    {
      sub_10000C6C8(0, (unint64_t *)&qword_100284870);
      swift_bridgeObjectRetain();
      rawValue = forContentIds._rawValue;
      uint64_t v3 = (uint64_t *)((char *)forContentIds._rawValue + 40);
      do
      {
        uint64_t v4 = *(v3 - 1);
        uint64_t v5 = *v3;
        swift_bridgeObjectRetain();
        sub_10019B3A0();
        uint64_t v6 = (void *)sub_10019B470();
        sub_10000C440((uint64_t *)&unk_100285520);
        uint64_t v7 = swift_allocObject();
        *(_OWORD *)(v7 + 16) = xmmword_1001D69A0;
        *(void *)(v7 + 56) = &type metadata for String;
        *(void *)(v7 + 64) = sub_100078904();
        *(void *)(v7 + 32) = v4;
        *(void *)(v7 + 40) = v5;
        sub_10019AF50();

        swift_bridgeObjectRelease();
        v3 += 2;
        --v2;
      }
      while (v2);
      forContentIds._rawValue = rawValue;
      swift_bridgeObjectRelease();
    }
  }
  sub_10010B9B8((void *)0x3F, 0xE100000000000000, *((void *)forContentIds._rawValue + 2));
  sub_10000C440(&qword_100286390);
  sub_10010BA68();
  uint64_t v8 = sub_10019B070();
  id v10 = v9;
  swift_bridgeObjectRelease();
  sub_10019B530(45);
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = v8;
  v12._object = v10;
  sub_10019B190(v12);
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = 41;
  v13._object = (void *)0xE100000000000000;
  sub_10019B190(v13);
  sub_10010BAC4((uint64_t)forContentIds._rawValue);
  sub_10019ADD0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void *sub_10010B9B8(void *result, uint64_t a2, uint64_t a3)
{
  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    if (a3)
    {
      uint64_t v5 = result;
      uint64_t v6 = (void *)sub_10019B2F0();
      uint64_t v7 = v6;
      v6[2] = a3;
      v6[4] = v5;
      v6[5] = a2;
      if (a3 != 1)
      {
        v6[6] = v5;
        v6[7] = a2;
        uint64_t v8 = a3 - 2;
        if (v8)
        {
          uint64_t v9 = v6 + 9;
          do
          {
            *(v9 - 1) = v5;
            void *v9 = a2;
            swift_bridgeObjectRetain();
            v9 += 2;
            --v8;
          }
          while (v8);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return _swiftEmptyArrayStorage;
    }
    return v7;
  }
  return result;
}

unint64_t sub_10010BA68()
{
  unint64_t result = qword_1002848A0;
  if (!qword_1002848A0)
  {
    sub_1000788B8(&qword_100286390);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002848A0);
  }
  return result;
}

void *sub_10010BAC4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    sub_10010C2B4(0, v1, 0);
    uint64_t v2 = _swiftEmptyArrayStorage;
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_10000C440((uint64_t *)&unk_100287F00);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10010C2B4(0, v2[2] + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = v2[2];
      unint64_t v5 = v2[3];
      if (v6 >= v5 >> 1)
      {
        sub_10010C2B4((void *)(v5 > 1), v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v4 += 16;
      v2[2] = v6 + 1;
      sub_10010C2D4((uint64_t)v8, (uint64_t)&v2[5 * v6 + 4]);
      --v1;
    }
    while (v1);
  }
  return v2;
}

Swift::Void __swiftcall APTimeSpentStoreDatabase.storeEntry(forContentId:)(Swift::String forContentId)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_10019ABA0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v7 = sub_10019B0A0();
  sub_10019AB90();
  Class isa = sub_10019AAF0().super.isa;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  [v2 storeEntryForContentId:v7 timeStamp:isa];
}

uint64_t APTimeSpentStoreDatabase.storeEntry(forContentId:timeStamp:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ([self isAppleInternalInstall])
  {
    sub_10019B3A0();
    sub_10000C6C8(0, (unint64_t *)&qword_100284870);
    unint64_t v6 = (void *)sub_10019B470();
    sub_10000C440((uint64_t *)&unk_100285520);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1001D6A80;
    *(void *)(v7 + 56) = &type metadata for String;
    unint64_t v8 = sub_100078904();
    *(void *)(v7 + 64) = v8;
    *(void *)(v7 + 32) = a1;
    *(void *)(v7 + 40) = a2;
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_10019AAA0();
    *(void *)(v7 + 96) = &type metadata for String;
    *(void *)(v7 + 104) = v8;
    *(void *)(v7 + 72) = v9;
    *(void *)(v7 + 80) = v10;
    sub_10019AF50();

    swift_bridgeObjectRelease();
  }
  sub_10000C440((uint64_t *)&unk_100284880);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1001D6A80;
  *(void *)(v11 + 56) = &type metadata for String;
  *(void *)(v11 + 64) = &protocol witness table for String;
  *(void *)(v11 + 32) = a1;
  *(void *)(v11 + 40) = a2;
  uint64_t v12 = sub_10019ABA0();
  *(void *)(v11 + 96) = v12;
  *(void *)(v11 + 104) = &protocol witness table for Date;
  Swift::String v13 = sub_10010B318((uint64_t *)(v11 + 72));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v13, a3, v12);
  swift_bridgeObjectRetain();
  sub_10019ADD0();

  return swift_bridgeObjectRelease();
}

void __swiftcall APTimeSpentStoreDatabase.init()(APTimeSpentStoreDatabase *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  [v1 init];
}

void APTimeSpentStoreDatabase.init()()
{
}

uint64_t type metadata accessor for APTimeSpentStoreDatabase(uint64_t a1)
{
  return sub_10000C6C8(a1, &qword_100284930);
}

void *sub_10010C2B4(void *a1, int64_t a2, char a3)
{
  unint64_t result = sub_10010C33C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10010C2D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000C440((uint64_t *)&unk_100287F00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_10010C33C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000C440((uint64_t *)&unk_100284880);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_10000C440((uint64_t *)&unk_100287F00);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

id static APTapAction.makeTapAction(withLegacyAction:iTunesMetadata:)(void *a1, uint64_t a2)
{
  return sub_10010C564(a1, a2);
}

id sub_10010C564(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_10000C440(&qword_100284940);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10019AA70();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [objc_allocWithZone((Class)APTapAction) init];
  uint64_t v12 = self;
  id v13 = [a1 action];
  id v30 = v12;
  [v11 setActionType:[v12 clickActionTypeToTapActionType:v13]];
  id v14 = [a1 actionURL];
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v29 = a2;
    sub_10019B0B0();

    sub_10019AA40();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_10010C9DC((uint64_t)v6);
      id v16 = self;
      NSString v17 = sub_10019B0A0();
      [v16 validationErrorWithCode:4512 andReason:v17];

      swift_willThrow();
      return v11;
    }
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    sub_10019AA00(v18);
    unint64_t v20 = v19;
    [v11 setActionURL:v19];

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    a2 = v29;
  }
  [a1 confirmedClickTimeInterval];
  [v11 setConfirmedClickInterval:v21];
  [v11 setOpensInstalledApp:[a1 prefersToOpenInstalledApp]];
  [a1 adamIdentifier];
  Class isa = sub_10019B800().super.super.isa;
  [v11 setAdamIdentifier:isa];

  unsigned int v23 = [a1 hasAppStoreViewTemplate];
  id v24 = v30;
  if (v23) {
    [v11 setTemplateType:[v30 AppStoreViewTemplateTypeToTemplateType:[a1 appStoreViewTemplate]]];
  }
  if (a2)
  {
    sub_10010C99C();
    Class v25 = sub_10019B2A0().super.isa;
    id v26 = [v24 parameterArrayToDictionary:v25];

    sub_10019B040();
    Class v27 = sub_10019B020().super.isa;
    swift_bridgeObjectRelease();
    [v11 setITunesMetadata:v27];
  }
  return v11;
}

unint64_t sub_10010C99C()
{
  unint64_t result = qword_100284938;
  if (!qword_100284938)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100284938);
  }
  return result;
}

uint64_t sub_10010C9DC(uint64_t a1)
{
  uint64_t v2 = sub_10000C440(&qword_100284940);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t APTimeSpentEntry.contentId.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___APTimeSpentEntry_contentId);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t APTimeSpentEntry.timeStamp.getter()
{
  return sub_10019AB40();
}

id APTimeSpentEntry.init(contentId:timeStamp:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v5 = sub_10019B0A0();
  swift_bridgeObjectRelease();
  Class isa = sub_10019AAF0().super.isa;
  id v7 = [v4 initWithContentId:v5 timeStamp:isa];

  uint64_t v8 = sub_10019ABA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a3, v8);
  return v7;
}

{
  char *v3;
  char *v5;
  char *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  objc_super v11;

  NSString v5 = &v3[OBJC_IVAR___APTimeSpentEntry_contentId];
  *(void *)NSString v5 = a1;
  *((void *)v5 + 1) = a2;
  unint64_t v6 = v3;
  sub_10019AB50();
  *(void *)&v6[OBJC_IVAR___APTimeSpentEntry_timeInterval] = v7;

  v11.receiver = v6;
  v11.super_class = (Class)APTimeSpentEntry;
  uint64_t v8 = [super init];
  uint64_t v9 = sub_10019ABA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a3, v9);
  return v8;
}

void APTimeSpentEntry.init()()
{
}

unint64_t type metadata accessor for APTimeSpentEntry()
{
  unint64_t result = qword_100284980;
  if (!qword_100284980)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100284980);
  }
  return result;
}

void sub_10010DC88(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v7 = APPerfLogForCategory();
  uint64_t v8 = (char *)[*(id *)(a1 + 32) intervalId];
  if ((unint64_t)(v8 - 1) <= 0xFFFFFFFFFFFFFFFDLL)
  {
    os_signpost_id_t v9 = (os_signpost_id_t)v8;
    if (os_signpost_enabled(v7))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v7, OS_SIGNPOST_INTERVAL_END, v9, "Request Certificate", "", v10, 2u);
    }
  }

  [*(id *)(a1 + 32) certificateRetrievalDidFinish:v6 error:v5];
}

void sub_10010E214(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v7 = APPerfLogForCategory();
  uint64_t v8 = (char *)[*(id *)(a1 + 32) intervalId];
  if ((unint64_t)(v8 - 1) <= 0xFFFFFFFFFFFFFFFDLL)
  {
    os_signpost_id_t v9 = (os_signpost_id_t)v8;
    if (os_signpost_enabled(v7))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v7, OS_SIGNPOST_INTERVAL_END, v9, "SAP Negotiating", "", v10, 2u);
    }
  }

  [*(id *)(a1 + 32) setupNegotiationStepDidFinish:v6 certificateIsCached:*(unsigned __int8 *)(a1 + 40) error:v5];
}

uint64_t sub_10010EAE0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10010F974(uint64_t a1)
{
  if (![*(id *)(a1 + 32) state])
  {
    [*(id *)(a1 + 32) setState:1];
    id v2 = [*(id *)(a1 + 32) provider];
    [v2 setup];
  }
}

void sub_10010FA7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_10010FC44(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _handleStateChange:*(void *)(a1 + 40)];
}

void sub_10010FFB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10010FFF0(id a1)
{
  CFStringRef v2 = @"finalStatus";
  uint64_t v3 = &off_100249DD0;
  uint64_t v1 = +[NSDictionary dictionaryWithObjects:&v3 forKeys:&v2 count:1];
  AnalyticsSendEvent();
}

void sub_1001109A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001109CC(uint64_t a1)
{
  CFStringRef v2 = [*(id *)(a1 + 32) provider];
  uint64_t v3 = *(void *)(a1 + 40);
  id v6 = 0;
  id v4 = [v2 rawSignatureForData:v3 error:&v6];
  id v5 = v6;

  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

void sub_100110A54(uint64_t a1)
{
  CFStringRef v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v9 = [WeakRetained syncRequestsLock];

  [v9 lock];
  id v4 = objc_loadWeakRetained(v2);
  id v5 = [v4 requestsWhileInitializing];
  id v6 = [v5 objectForKeyedSubscript:*(void *)(a1 + 32)];

  if (v6)
  {
    id v7 = objc_loadWeakRetained(v2);
    uint64_t v8 = [v7 requestsWhileInitializing];
    [v8 removeObjectForKey:*(void *)(a1 + 32)];

    [v9 unlock];
    v6[2](v6);
  }
  else
  {
    [v9 unlock];
  }
}

void sub_100110C00(uint64_t a1, void *a2, void *a3)
{
  if (a2)
  {
    id v5 = a3;
    id v8 = [a2 base64EncodedStringWithOptions:32];
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    uint64_t v6 = *(void *)(a1 + 32);
    id v7 = *(void (**)(uint64_t, void))(v6 + 16);
    id v8 = a3;
    v7(v6, 0);
  }
}

void sub_100110E9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10011101C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) provider];
  [v1 retrySetup];
}

void sub_1001113D4(id a1)
{
  id v1 = [APEventChannel alloc];
  id v4 = +[APDestination ecRouter];
  CFStringRef v2 = [(APEventChannel *)v1 initWithDestination:v4 purpose:1234];
  uint64_t v3 = (void *)qword_100289B48;
  qword_100289B48 = (uint64_t)v2;
}

void sub_10011160C(id a1)
{
  id v1 = +[MetricsModuleClasses metricClass];
  uint64_t v2 = objc_opt_class();
  uint64_t v3 = objc_opt_class();
  +[NSSet setWithObjects:](NSSet, "setWithObjects:", v1, v2, v3, objc_opt_class(), 0);
  id v4 = (id)objc_claimAutoreleasedReturnValue();
  +[APSupportedSecureEncodedClass addClasses:v4];
}

APEventChannel *__cdecl sub_100111B9C(id a1, NSString *a2)
{
  uint64_t v2 = [(NSString *)a2 componentsSeparatedByString:@"/"];
  if ([v2 count] == (id)2)
  {
    uint64_t v3 = [APEventChannel alloc];
    id v4 = [APDestination alloc];
    id v5 = [v2 objectAtIndexedSubscript:0];
    uint64_t v6 = [(APDestination *)v4 initWithString:v5];
    id v7 = [v2 objectAtIndexedSubscript:1];
    id v8 = -[APEventChannel initWithDestination:purpose:](v3, "initWithDestination:purpose:", v6, (int)[v7 intValue]);
  }
  else
  {
    id v8 = 0;
  }

  return v8;
}

void sub_100111EC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id *sub_100113070(id *result)
{
  if (*((unsigned char *)result + 48)) {
    return (id *)_[result[4] flushMetricsToServerForChannel:result[5]];
  }
  if (*((unsigned char *)result + 49)) {
    return (id *)_[result[4] metricsReadyForDeliveryToChannel:result[5]];
  }
  return result;
}

uint64_t sub_10011367C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v5 = [v3 buildSignatureUsingSigningAuthority:*(void *)(a1 + 32) error:0];
  uint64_t v6 = [*(id *)(a1 + 40) destination];
  id v7 = [v6 protectedDestination];
  id v8 = [*(id *)(a1 + 40) purpose];
  id v9 = [v3 signature];
  uint64_t v10 = +[APMetricStorage_private preparedDataPathForDestination:purpose:containsSignature:](APMetricStorage_private, "preparedDataPathForDestination:purpose:containsSignature:", v7, v8, [v9 length] != 0);

  id v11 = +[NSDate now];
  uint64_t v12 = [v11 yearDayOfYearHourMinute];
  id v13 = +[NSUUID UUID];
  id v14 = [v13 UUIDString];
  uint64_t v15 = +[NSString stringWithFormat:@"%@.%@", v12, v14];

  id v16 = [v10 stringByAppendingPathComponent:v15];
  NSString v17 = *(void **)(a1 + 48);
  id v25 = 0;
  uint64_t v18 = [v17 fileForWritingAtKeyPath:v16 error:&v25];
  id v19 = v25;
  if (v19)
  {
    id v20 = v19;
    float v21 = APLogForCategory();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138543362;
      id v27 = v20;
LABEL_7:
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "Failed to save prepared data: %{public}@", buf, 0xCu);
    }
  }
  else
  {
    id v24 = 0;
    [v18 addObject:v3 error:&v24];
    id v20 = v24;
    [v18 close];
    if (!v20)
    {
      uint64_t v22 = 1;
      goto LABEL_9;
    }
    float v21 = APLogForCategory();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138543362;
      id v27 = v20;
      goto LABEL_7;
    }
  }

  uint64_t v22 = 0;
LABEL_9:

  return v22;
}

id *sub_100113D40(id *a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (a1)
  {
    v18.receiver = a1;
    v18.super_class = (Class)APMetricPreparedUnsignedDataProcessor;
    uint64_t v10 = (id *)[super init];
    a1 = v10;
    if (v10)
    {
      objc_storeStrong(v10 + 2, a3);
      objc_storeWeak(a1 + 3, v7);
      objc_storeStrong(a1 + 5, a4);
      objc_initWeak(&location, a1);
      id v11 = [APSequentialProcessor alloc];
      v15[0] = _NSConcreteStackBlock;
      v15[1] = 3221225472;
      v15[2] = sub_100113EB4;
      v15[3] = &unk_1002364C0;
      objc_copyWeak(&v16, &location);
      uint64_t v12 = sub_100124400(v11, v8, v15);
      id v13 = a1[4];
      a1[4] = v12;

      objc_destroyWeak(&v16);
      objc_destroyWeak(&location);
    }
  }

  return a1;
}

void sub_100113E90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100113EB4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v7 = (void *)os_transaction_create();
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_100113F8C;
  v10[3] = &unk_100236498;
  id v11 = v5;
  id v9 = v5;
  [WeakRetained _processNextFile:v6 completionHandler:v10];
}

uint64_t sub_100113F8C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

void sub_100113FA8(void *a1)
{
  if (a1)
  {
    uint64_t v2 = APLogForCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(buf[0]) = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Unsigned prepared data server delivery update.", (uint8_t *)buf, 2u);
    }

    objc_initWeak(buf, a1);
    id v3 = [a1 processor];
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    _DWORD v4[2] = sub_1001140D0;
    v4[3] = &unk_1002364E8;
    objc_copyWeak(&v5, buf);
    sub_1001244D8(v3, v4);

    objc_destroyWeak(&v5);
    objc_destroyWeak(buf);
  }
}

void sub_1001140AC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

id sub_1001140D0(uint64_t a1)
{
  uint64_t v2 = (void *)os_transaction_create();
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = [WeakRetained storage];
  id v5 = +[APDestination ecRouter];
  id v6 = [v4 preparedMetricDataForDestination:v5 purpose:1234 containsSignature:0];

  id v7 = [v6 objectEnumerator];

  return v7;
}

void sub_1001142C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001142EC(uint64_t a1, void *a2)
{
  id v3 = (id *)(a1 + 48);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained _signFile:*(void *)(a1 + 32) usingSigningAuthority:v4 completionHandler:*(void *)(a1 + 40)];
}

void sub_100114710(void *a1, char *newValue)
{
  if (a1) {
    objc_setProperty_nonatomic_copy(a1, newValue, newValue, 8);
  }
}

void sub_100114E18(id a1)
{
}

uint64_t sub_100114E28(uint64_t a1)
{
  return APSimulateCrashNoKillProcess();
}

void sub_100115644(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

uint64_t sub_100115670(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100115680(uint64_t a1)
{
}

void sub_100115688(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = [*(id *)(a1 + 40) data];
  id v4 = [*(id *)(a1 + 40) signature];
  id v5 = [v2 _hashAndSavePayloadForInternalTesting:v3 signature:v4];

  id v6 = [*(id *)(a1 + 40) headers];
  id v7 = +[NSMutableDictionary dictionaryWithDictionary:v6];

  if (+[APSystemInternal isAppleInternalInstall](APSystemInternal, "isAppleInternalInstall"))[v7 setObject:@"true" forKeyedSubscript:@"X-Apple-EventCollection-Internal"]; {
  id v8 = +[APDeviceInfo current];
  }
  id v9 = [v8 deviceModel];
  [v7 setObject:v9 forKeyedSubscript:@"X-Apple-EventCollection-Model"];

  uint64_t v10 = [v8 buildVersion];
  [v7 setObject:v10 forKeyedSubscript:@"X-Apple-EventCollection-Build"];

  id v11 = +[APSystemInfo osIdentifier];
  [v7 setObject:v11 forKeyedSubscript:@"X-Apple-EventCollection-OS"];

  uint64_t v12 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"EventCollection %d", [&off_10024A358 intValue]);
  [v7 setObject:v12 forKeyedSubscript:@"User-Agent"];

  id v13 = [*(id *)(a1 + 40) signature];
  [v7 setObject:v13 forKeyedSubscript:@"X-Apple-ActionSignature"];

  if (v5) {
    [v7 setObject:v5 forKeyedSubscript:@"apple-request-id"];
  }
  if (+[APSystemInternal isAppleInternalInstall])
  {
    id v14 = objc_alloc((Class)NSUserDefaults);
    id v15 = [v14 initWithSuiteName:APDefaultsBundleID];
    unsigned int v16 = [v15 BOOLForKey:kAPAutomationLoggingEnabled];

    if (v16)
    {
      NSString v17 = APLogForCategory();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        id v30 = v7;
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, "Headers (%@)", buf, 0xCu);
      }
    }
  }
  objc_super v18 = sub_100118560();
  sub_1001191D8(v18, *(void **)(a1 + 48));

  id v19 = *(void **)(a1 + 56);
  uint64_t v20 = *(void *)(a1 + 64);
  float v21 = [*(id *)(a1 + 40) data];
  v25[0] = _NSConcreteStackBlock;
  v25[1] = 3221225472;
  _OWORD v25[2] = sub_100115A38;
  void v25[3] = &unk_100236558;
  v25[4] = *(void *)(a1 + 32);
  id v26 = *(id *)(a1 + 64);
  id v27 = *(id *)(a1 + 72);
  long long v24 = *(_OWORD *)(a1 + 80);
  id v22 = (id)v24;
  long long v28 = v24;
  id v23 = [v19 POST:v20 headers:v7 body:v21 withCompletionHandler:v25];
}

void sub_100115A38(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 URLResponse];
  id v5 = [v4 statusCode];
  id v6 = APLogForCategory();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    id v7 = (objc_class *)objc_opt_class();
    id v8 = NSStringFromClass(v7);
    uint64_t v9 = *(void *)(a1 + 40);
    uint64_t v10 = *(void *)(a1 + 48);
    int v14 = 138478595;
    id v15 = v8;
    __int16 v16 = 2113;
    uint64_t v17 = v9;
    __int16 v18 = 2117;
    uint64_t v19 = v10;
    __int16 v20 = 2048;
    id v21 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "[%{private}@] Metric data sent to server (%{private}@) (%{sensitive}@) with result (%ld).", (uint8_t *)&v14, 0x2Au);
  }
  uint64_t v11 = *(void *)(*(void *)(a1 + 64) + 8);
  uint64_t v12 = *(void **)(v11 + 40);
  *(void *)(v11 + 40) = v3;
  id v13 = v3;

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 56));
}

void sub_1001161A0(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  uint64_t v2 = (void *)qword_100289B70;
  qword_100289B70 = (uint64_t)v1;

  [(id)qword_100289B70 setDateFormat:@"yyyyDDDHHmm"];
  id v3 = +[NSTimeZone timeZoneWithAbbreviation:@"UTC"];
  [(id)qword_100289B70 setTimeZone:v3];
}

void sub_100116290(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  uint64_t v2 = (void *)qword_100289B80;
  qword_100289B80 = (uint64_t)v1;

  [(id)qword_100289B80 setDateFormat:@"yyyyDDDHHmmSSSSSS"];
  id v3 = +[NSTimeZone timeZoneWithAbbreviation:@"UTC"];
  [(id)qword_100289B80 setTimeZone:v3];
}

void sub_100116BA4(id a1)
{
  +[NSSet setWithObject:](NSSet, "setWithObject:", +[MetricsModuleClasses metricClass]);
  id v1 = (id)objc_claimAutoreleasedReturnValue();
  +[APSupportedSecureEncodedClass addClasses:v1];
}

id sub_100118560()
{
  self;
  uint64_t v0 = (void *)MetricsModule_observability;

  return v0;
}

void *sub_100118594(void *a1, void *a2)
{
  id v4 = a2;
  if (a1)
  {
    v10.receiver = a1;
    v10.super_class = (Class)APMetricsObservability;
    id v5 = [super init];
    a1 = v5;
    if (v5)
    {
      objc_storeStrong((id *)v5 + 1, a2);
      id v6 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
      dispatch_queue_t v7 = dispatch_queue_create("com.apple.ap.observabilitymonitor", v6);
      id v8 = (void *)a1[2];
      a1[2] = v7;
    }
  }

  return a1;
}

void sub_100118640(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (a1 && a3 >= 1 && a3 != 8501)
  {
    id v6 = APLogForCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
    {
      int v7 = 138543362;
      id v8 = v5;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Batch created. BatchID: %{public}@", (uint8_t *)&v7, 0xCu);
    }
  }
}

void sub_1001189F4(void *a1, void *a2, void *a3, uint64_t a4)
{
  id v7 = a2;
  id v8 = a3;
  uint64_t v9 = v8;
  if (a1)
  {
    if (a4 == 8501)
    {
      if (v8)
      {
        objc_super v10 = [[APExpiredObservabilityBatchesReporter alloc] initWithBatchPath:v8];
        [(APExpiredObservabilityBatchesReporter *)v10 run];
      }
      goto LABEL_6;
    }
    if (a4 >= 1)
    {
LABEL_6:
      uint64_t v11 = (void *)os_transaction_create();
      uint64_t v12 = [a1 queue];
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_100118B28;
      block[3] = &unk_100236608;
      id v15 = v7;
      __int16 v16 = a1;
      id v17 = v11;
      id v13 = v11;
      dispatch_async(v12, block);
    }
  }
}

void sub_100118B28(uint64_t a1)
{
  uint64_t v2 = APLogForCategory();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v5 = 138543362;
    uint64_t v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Batch expired, batch ID: %{public}@", (uint8_t *)&v5, 0xCu);
  }

  id v4 = [*(id *)(a1 + 40) signalMonitor];
  [v4 batchExpiredWithBatchID:*(void *)(a1 + 32)];
}

void sub_100118BF0(void *a1, uint64_t a2, double a3)
{
  if (a1 && a2 >= 1 && a2 != 8501)
  {
    uint64_t v15 = v6;
    uint64_t v16 = v5;
    uint64_t v17 = v3;
    uint64_t v18 = v4;
    uint64_t v9 = (void *)os_transaction_create();
    objc_super v10 = [a1 queue];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100118CD8;
    block[3] = &unk_100236630;
    double v14 = a3;
    void block[4] = a1;
    id v13 = v9;
    id v11 = v9;
    dispatch_async(v10, block);
  }
}

void sub_100118CD8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) signalMonitor];
  [v2 eventSavedWithCreatedToSavedTimeInterval:*(double *)(a1 + 48)];
}

void sub_100118E1C(uint64_t a1)
{
  if ([*(id *)(a1 + 32) count])
  {
    id v2 = [*(id *)(a1 + 32) compactMapObjectsUsingBlock:&stru_100236670];
    if (![v2 count]) {
      goto LABEL_13;
    }
  }
  else
  {
    id v2 = 0;
  }
  uint64_t v3 = APLogForCategory();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    CFStringRef v4 = @"server";
    uint64_t v5 = *(void *)(a1 + 64);
    if (!*(void *)(a1 + 56)) {
      CFStringRef v4 = @"client";
    }
    int v9 = 138543874;
    CFStringRef v10 = v4;
    __int16 v11 = 2048;
    uint64_t v12 = v5;
    __int16 v13 = 2114;
    double v14 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Upload failed with error %{public}@: %ld, batchIDs: %{public}@", (uint8_t *)&v9, 0x20u);
  }

  uint64_t v6 = [*(id *)(a1 + 40) signalMonitor];
  id v7 = v6;
  if (v2) {
    id v8 = v2;
  }
  else {
    id v8 = &__NSArray0__struct;
  }
  [v6 uploadFailureWithType:*(void *)(a1 + 56) code:*(void *)(a1 + 64) batchIDs:v8];

LABEL_13:
}

id sub_100118F64(id a1, APMetricBatchInfoObservable *a2)
{
  id v2 = a2;
  uint64_t v3 = (uint64_t)[(APMetricBatchInfoObservable *)v2 purpose];
  if (v3 < 1 || v3 == 8501)
  {
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = [(APMetricBatchInfoObservable *)v2 identifier];
  }

  return v5;
}

void sub_1001190A8(uint64_t a1)
{
  if ([*(id *)(a1 + 32) count])
  {
    id v2 = [*(id *)(a1 + 32) compactMapObjectsUsingBlock:&stru_1002366B8];
    if (![v2 count]) {
      goto LABEL_8;
    }
  }
  else
  {
    id v2 = 0;
  }
  uint64_t v3 = APLogForCategory();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Upload success", v5, 2u);
  }

  CFStringRef v4 = [*(id *)(a1 + 40) signalMonitor];
  [v4 uploadSuccess];

LABEL_8:
}

id sub_100119170(id a1, APMetricBatchInfoObservable *a2)
{
  id v2 = a2;
  uint64_t v3 = (uint64_t)[(APMetricBatchInfoObservable *)v2 purpose];
  if (v3 < 1 || v3 == 8501)
  {
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = [(APMetricBatchInfoObservable *)v2 identifier];
  }

  return v5;
}

void sub_1001191D8(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    CFStringRef v4 = (void *)os_transaction_create();
    uint64_t v5 = [a1 queue];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1001192B4;
    block[3] = &unk_100236608;
    id v8 = v3;
    int v9 = a1;
    id v10 = v4;
    id v6 = v4;
    dispatch_async(v5, block);
  }
}

void sub_1001192B4(uint64_t a1)
{
  if ([*(id *)(a1 + 32) count])
  {
    id v2 = [*(id *)(a1 + 32) compactMapObjectsUsingBlock:&stru_1002366D8];
    if (![v2 count]) {
      goto LABEL_8;
    }
  }
  else
  {
    id v2 = 0;
  }
  id v3 = APLogForCategory();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    int v5 = 134218242;
    id v6 = [v2 count];
    __int16 v7 = 2114;
    id v8 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Will upload %ld batches. BatchIDs: %{public}@", (uint8_t *)&v5, 0x16u);
  }

  CFStringRef v4 = [*(id *)(a1 + 40) signalMonitor];
  [v4 willUploadWithBatchCount:[v2 count]];

LABEL_8:
}

id sub_1001193D8(id a1, APMetricBatchInfoObservable *a2)
{
  id v2 = a2;
  uint64_t v3 = (uint64_t)[(APMetricBatchInfoObservable *)v2 purpose];
  if (v3 < 1 || v3 == 8501)
  {
    int v5 = 0;
  }
  else
  {
    int v5 = [(APMetricBatchInfoObservable *)v2 identifier];
  }

  return v5;
}

void sub_100119440(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, void *a6, void *a7)
{
  id v13 = a2;
  id v14 = a3;
  id v15 = a6;
  id v16 = a7;
  if (a1 && a4 >= 1 && a4 != 8501)
  {
    if (v13)
    {
      uint64_t v17 = +[NSDate now];
      [v17 timeIntervalSinceDate:v13];
      double v19 = v18;
    }
    else
    {
      __int16 v20 = APLogForCategory();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "batchCreatedDate is missing.", buf, 2u);
      }

      double v19 = -1.0;
    }
    id v21 = [[APBatchesCounter alloc] initWithFileManager:v15 startDirectory:v16];
    int64_t v22 = [(APBatchesCounter *)v21 count];

    id v23 = (void *)os_transaction_create();
    long long v24 = [a1 queue];
    v26[0] = _NSConcreteStackBlock;
    v26[1] = 3221225472;
    _OWORD v26[2] = sub_100119630;
    v26[3] = &unk_100236700;
    v26[4] = a1;
    double v29 = v19;
    uint64_t v30 = a5;
    int64_t v31 = v22;
    id v27 = v14;
    id v28 = v23;
    id v25 = v23;
    dispatch_async(v24, v26);
  }
}

id sub_100119630(uint64_t a1)
{
  [*(id *)(a1 + 32) _batchClosedWithBatchLifetime:*(void *)(a1 + 40) batchID:*(void *)(a1 + 64) eventsCount:*(double *)(a1 + 56)];
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 72);

  return _[v2 _batchEnqueuedWithQueueLength:v3];
}

void sub_10011967C(void *a1, void *a2, void *a3, uint64_t a4, void *a5, void *a6)
{
  id v11 = a2;
  id v12 = a3;
  id v13 = a5;
  id v14 = a6;
  if (a1 && a4 >= 1 && a4 != 8501)
  {
    if (v11)
    {
      id v15 = +[NSDate now];
      [v15 timeIntervalSinceDate:v11];
      double v17 = v16;
    }
    else
    {
      double v18 = APLogForCategory();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "batchCreatedDate is missing.", buf, 2u);
      }

      double v17 = -1.0;
    }
    double v19 = [[APBatchesCounter alloc] initWithFileManager:v13 startDirectory:v14];
    int64_t v20 = [(APBatchesCounter *)v19 count];

    id v21 = (void *)os_transaction_create();
    int64_t v22 = [a1 queue];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100119860;
    block[3] = &unk_100236698;
    void block[4] = a1;
    double v27 = v17;
    int64_t v28 = v20;
    id v25 = v12;
    id v26 = v21;
    id v23 = v21;
    dispatch_async(v22, block);
  }
}

id sub_100119860(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _batchDequeuedWithWaitingTime:*(void *)(a1 + 64) queueLength:*(void *)(a1 + 40) batchID:*(double *)(a1 + 56)];
}

void sub_100119874(void *a1, void *a2, int a3, void *a4)
{
  id v7 = a2;
  id v8 = a4;
  if (a1)
  {
    if (!a3)
    {
      id v10 = [v7 responseError];

      if (v10)
      {
        id v11 = [v7 responseError];
        id v12 = [v11 code];
        id v13 = a1;
        uint64_t v14 = 0;
      }
      else
      {
        id v15 = [v7 URLResponse];

        if (!v15)
        {
          [a1 _payloadUploadFailureWithType:1 code:1000 batchInfos:v8];
          goto LABEL_16;
        }
        double v16 = [v7 URLResponse];
        if ((uint64_t)[v16 statusCode] <= 199)
        {
        }
        else
        {
          double v17 = [v7 URLResponse];
          uint64_t v18 = (uint64_t)[v17 statusCode];

          if (v18 <= 299)
          {
            [a1 _payloadUploadSuccessForBatchInfos:v8];
            goto LABEL_16;
          }
        }
        id v11 = [v7 URLResponse];
        id v12 = [v11 statusCode];
        id v13 = a1;
        uint64_t v14 = 1;
      }
      [v13 _payloadUploadFailureWithType:v14 code:v12 batchInfos:v8];

      goto LABEL_16;
    }
    int v9 = APLogForCategory();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)double v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Payload transmission timed out.", v19, 2u);
    }
  }
LABEL_16:
}

id sub_100119A0C(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v5 = a3;
  self;
  id v10 = 0;
  id v6 = [v5 createdDateForFileAtPath:v4 error:&v10];

  id v7 = v10;
  if (v7) {
    BOOL v8 = 1;
  }
  else {
    BOOL v8 = v6 == 0;
  }
  if (v8) {
    APSimulateCrashNoKillProcess();
  }

  return v6;
}

id sub_100119AC0(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v5 = a3;
  self;
  id v10 = 0;
  id v6 = [v5 addedToDirectoryDateForFileAtPath:v4 error:&v10];

  id v7 = v10;
  if (v7) {
    BOOL v8 = 1;
  }
  else {
    BOOL v8 = v6 == 0;
  }
  if (v8) {
    APSimulateCrashNoKillProcess();
  }

  return v6;
}

void sub_100119CEC(id a1)
{
  if (!qword_100289BA0) {
    qword_100289BA0 = (uint64_t)NSClassFromString(@"APMetric");
  }
}

void sub_100119E80(id a1)
{
  if (!qword_100289BB0) {
    qword_100289BB0 = (uint64_t)NSClassFromString(@"APMetricBatch");
  }
}

void sub_10011A014(id a1)
{
  if (!qword_100289BC0) {
    qword_100289BC0 = (uint64_t)NSClassFromString(@"APMetricNotificationRegistrar");
  }
}

void sub_10011A1F0(id a1)
{
  if (!qword_100289BD0) {
    qword_100289BD0 = (uint64_t)NSClassFromString(@"APMetricPurpose");
  }
}

void sub_10011A384(id a1)
{
  if (!qword_100289BE0) {
    qword_100289BE0 = (uint64_t)NSClassFromString(@"APMetricHTTPDelivery");
  }
}

void sub_10011A518(id a1)
{
  if (!qword_100289BF0) {
    qword_100289BF0 = (uint64_t)NSClassFromString(@"APMetricServerDelivery");
  }
}

void sub_10011A6AC(id a1)
{
  if (!qword_100289C00) {
    qword_100289C00 = (uint64_t)NSClassFromString(@"APMetricStorageEC");
  }
}

id *sub_10011BE40(id *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  if (a1)
  {
    v21.receiver = a1;
    v21.super_class = (Class)APMetricPreparedDataServerDelivery;
    id v13 = [(id *)[super init];
    a1 = v13;
    if (v13)
    {
      objc_storeStrong(v13 + 1, a3);
      objc_storeWeak(a1 + 2, v9);
      objc_storeWeak(a1 + 3, v11);
      objc_storeStrong(a1 + 7, a5);
      objc_initWeak(&location, a1);
      uint64_t v14 = [APSequentialProcessor alloc];
      v18[0] = _NSConcreteStackBlock;
      v18[1] = 3221225472;
      v18[2] = sub_10011BFD8;
      v18[3] = &unk_1002364C0;
      objc_copyWeak(&v19, &location);
      id v15 = sub_100124400(v14, v10, v18);
      id v16 = a1[6];
      a1[6] = v15;

      objc_destroyWeak(&v19);
      objc_destroyWeak(&location);
    }
  }

  return a1;
}

void sub_10011BFB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10011BFD8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v9 = (id)os_transaction_create();
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v8 = [WeakRetained _uploadFile:v6];

  v5[2](v5, v8);
}

void sub_10011C078(void *a1)
{
  if (a1)
  {
    id v2 = APLogForCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(buf[0]) = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Prepared data server delivery update.", (uint8_t *)buf, 2u);
    }

    objc_initWeak(buf, a1);
    uint64_t v3 = [a1 processor];
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    _DWORD v4[2] = sub_10011C1A0;
    v4[3] = &unk_1002364E8;
    objc_copyWeak(&v5, buf);
    sub_1001244D8(v3, v4);

    objc_destroyWeak(&v5);
    objc_destroyWeak(buf);
  }
}

void sub_10011C17C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

id sub_10011C1A0(id *a1)
{
  uint64_t v2 = (void *)os_transaction_create();
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  id v4 = [WeakRetained storage];
  id v5 = +[APDestination ecRouter];
  id v6 = [v4 preparedMetricDataForDestination:v5 purpose:1234 containsSignature:1];

  id v7 = [v6 objectEnumerator];
  id v8 = objc_loadWeakRetained(a1);
  [v8 setFiles:v7];

  id v9 = objc_loadWeakRetained(a1);
  id v10 = [v9 files];

  return v10;
}

void sub_10011C29C(void *a1)
{
  if (a1)
  {
    uint64_t v2 = [a1 backoffTimer];

    if (v2)
    {
      [a1 _backoffTimerReset];
      _[a1 _continueProcessing];
    }
  }
}

void sub_10011C3B8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

id sub_10011C3DC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = [WeakRetained files];

  return v2;
}

id sub_10011FFD4(uint64_t a1)
{
  uint64_t v2 = +[APMetricOffsetSettings settings];
  uint64_t v3 = (void *)qword_100289C18;
  qword_100289C18 = v2;

  id v4 = *(void **)(a1 + 32);

  return _[v4 _setupDefaultRoutes];
}

void sub_10012016C(id a1)
{
  if (!qword_100289C30) {
    qword_100289C30 = objc_opt_class();
  }
}

void sub_100120300(id a1)
{
  if (!qword_100289C40) {
    qword_100289C40 = objc_opt_class();
  }
}

id sub_100121AA4(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) stringByAppendingPathComponent:a2];
}

id sub_100121AB0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  id v10 = 0;
  id v5 = [v4 lastModifiedDateForFileAtPath:v3 error:&v10];
  id v6 = v10;
  if (v6)
  {
    id v7 = APLogForCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138740227;
      id v12 = v3;
      __int16 v13 = 2114;
      id v14 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Error getting last modified date of batch at (%{sensitive}@)! %{public}@", buf, 0x16u);
    }

    id v8 = 0;
  }
  else
  {
    id v8 = [v5 isBefore:*(void *)(a1 + 40)];
  }

  return v8;
}

void sub_100123568(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100123580(uint64_t a1, void *a2, unsigned char *a3)
{
  id result = [a2 count];
  if (result == (id)4)
  {
    ++*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
    *a3 = 1;
  }
  return result;
}

void sub_1001236C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001237A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001237B4(id a1)
{
  qword_100289C48 = +[NSMutableDictionary dictionaryWithCapacity:5];

  _objc_release_x1();
}

void *sub_100124400(void *a1, void *a2, void *a3)
{
  id v6 = a2;
  id v7 = a3;
  if (a1)
  {
    v16.receiver = a1;
    v16.super_class = (Class)APSequentialProcessor;
    id v8 = [super init];
    a1 = v8;
    if (v8)
    {
      objc_storeStrong((id *)v8 + 2, a2);
      id v9 = objc_retainBlock(v7);
      id v10 = (void *)a1[3];
      a1[3] = v9;

      id v11 = [objc_alloc((Class)APUnfairLock) initWithOptions:1];
      id v12 = (void *)a1[6];
      a1[6] = v11;

      id v13 = [objc_alloc((Class)APUnfairLock) initWithOptions:1];
      id v14 = (void *)a1[7];
      a1[7] = v13;
    }
  }

  return a1;
}

void sub_1001244D8(void *a1, void *a2)
{
  if (a1)
  {
    id v3 = a2;
    id v4 = [a1 collectionProviderLock];
    [v4 lock];
    [a1 setCollectionProvider:v3];

    [v4 unlock];
    id v5 = [a1 lock];
    id v6 = [a1 queue];
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    _DWORD v8[2] = sub_1001245D4;
    void v8[3] = &unk_100234D88;
    id v9 = v5;
    id v10 = a1;
    id v7 = v5;
    dispatch_async(v6, v8);
  }
}

id sub_1001245D4(uint64_t a1)
{
  [*(id *)(a1 + 32) lock];
  if (([*(id *)(a1 + 40) isRunning] & 1) == 0)
  {
    [*(id *)(a1 + 40) setIsRunning:1];
    uint64_t v2 = [*(id *)(a1 + 40) queue];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10012468C;
    block[3] = &unk_100233D50;
    void block[4] = *(void *)(a1 + 40);
    dispatch_async(v2, block);
  }
  return [*(id *)(a1 + 32) unlock];
}

id sub_10012468C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _next:0];
}

void sub_100124830(uint64_t a1, char a2)
{
  id v4 = [*(id *)(a1 + 32) queue];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1001248D0;
  v5[3] = &unk_100236970;
  v5[4] = *(void *)(a1 + 32);
  char v6 = a2;
  dispatch_async(v4, v5);
}

id sub_1001248D0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _next:*(unsigned __int8 *)(a1 + 40)];
}

void sub_100124A18(id a1)
{
  uint64_t v2 = objc_alloc_init(APJourneyBatchSettings);
  [(APJourneyBatchSettings *)v2 periodicDelayTimeInterval];
  qword_100289C58 = v1;
}

void sub_100124C64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100124C88(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _configurePreparedDataObjects];
}

void sub_100124D9C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100124DC0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  char v6 = a3;
  id v7 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v9 = [WeakRetained serverDeliveryQueue];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  void v11[2] = sub_100124EE8;
  v11[3] = &unk_1002369C0;
  id v10 = v5;
  id v12 = v10;
  objc_copyWeak(&v13, v7);
  dispatch_async(v9, v11);

  v6[2](v6, @"OK");
  objc_destroyWeak(&v13);
}

void sub_100124ED4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100124EE8(uint64_t a1)
{
  id v11 = objc_alloc_init(APFakeNetworkResponse);
  unsigned int v2 = [(APFakeNetworkResponse *)v11 loadConfig:*(void *)(a1 + 32)];
  id v3 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained(v3);
  if (v2) {
    id v5 = v11;
  }
  else {
    id v5 = 0;
  }
  [WeakRetained setFakeNetworkResponse:v5];

  id v6 = objc_loadWeakRetained(v3);
  id v7 = [v6 backoffTimers];
  [v7 removeAllObjects];

  id v8 = objc_loadWeakRetained(v3);
  id v9 = [v8 lastProcessingDates];
  [v9 removeAllObjects];

  id v10 = objc_loadWeakRetained(v3);
  [v10 processServerDeliveryTimer];
}

void sub_10012523C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_sync_exit(v15);
  _Unwind_Resume(a1);
}

void sub_100125270(uint64_t a1)
{
  objc_copyWeak(&to, (id *)(a1 + 32));
  id v1 = objc_loadWeakRetained(&to);
  [v1 processServerDeliveryTimer];

  objc_destroyWeak(&to);
}

void sub_1001252BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
}

void sub_100125388(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100126874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
}

id sub_1001268A0(id a1, APEventChannel *a2)
{
  return [(APEventChannel *)a2 protectedEventChannel];
}

void sub_1001268A8(uint64_t a1, void *a2)
{
  ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  id v3 = [a2 bundleIdentifier];
  if ([v3 length]) {
    [*(id *)(a1 + 32) addObject:v3];
  }
}

void sub_100126BD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100126C00(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100126C10(uint64_t a1)
{
}

void sub_100126C18(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [APEventChannel alloc];
  id v5 = [*(id *)(a1 + 32) destination];
  signed int v6 = [v3 intValue];

  id v10 = [(APEventChannel *)v4 initWithDestination:v5 purpose:v6];
  uint64_t v7 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) arrayByAddingObject:v10];
  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
  id v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v7;
}

void sub_1001273F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_100127414(uint64_t a1, char a2)
{
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  id v3 = *(id *)(a1 + 32);
  id v4 = [v3 countByEnumeratingWithState:&v17 objects:v23 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v18;
    char v7 = 1;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v18 != v6) {
          objc_enumerationMutation(v3);
        }
        id v9 = *(void **)(*((void *)&v17 + 1) + 8 * i);
        if (*(unsigned char *)(a1 + 56))
        {
          id v10 = [*(id *)(a1 + 40) batchDeliveredClosure];
          if (v10)
          {
            id v11 = [v9 identifier];
            ((void (**)(void, void *, id))v10)[2](v10, v11, [v9 metricsCount]);
          }
        }
        id v12 = APLogForCategory();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
        {
          id v13 = [v9 identifier];
          *(_DWORD *)buf = 138543362;
          int64_t v22 = v13;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "deleting batch %{public}@", buf, 0xCu);
        }
        id v14 = [v9 fileSystemToken];
        unsigned __int8 v15 = +[APMetricBatch removeBatchByFileSystemToken:v14];

        v7 &= v15;
      }
      id v5 = [v3 countByEnumeratingWithState:&v17 objects:v23 count:16];
    }
    while (v5);
  }
  else
  {
    char v7 = 1;
  }

  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = v7 & a2;
}

void sub_100127710(uint64_t a1)
{
  objc_copyWeak(&to, (id *)(a1 + 40));
  id v2 = objc_loadWeakRetained(&to);
  [v2 processMetrics:*(void *)(a1 + 48) forChannel:*(void *)(a1 + 32)];

  objc_destroyWeak(&to);
}

void sub_100127768(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
}

void sub_100127EEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100127F0C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained preparedDataServerDelivery];
  sub_10011C078(v1);
}

void sub_1001281E0(id a1)
{
  qword_100289C70 = [[APDestination alloc] initWithString:@"ECRouter"];

  _objc_release_x1();
}

uint64_t sub_100128CA0()
{
  uint64_t v0 = sub_10019AC10();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  id v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10019AC90();
  sub_100128DDC(v4, qword_10028D320);
  sub_100128E40(v4, (uint64_t)qword_10028D320);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Calendar.Identifier.gregorian(_:), v0);
  sub_10019AC20();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

double variable initialization expression of ObservabilityManager.stateDumper@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 128) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t *sub_100128DDC(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_100128E40(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_100128E78()
{
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LoggingTimeRangeOffset()
{
  return self;
}

float sub_100128ED4()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  sub_10007FDE0(v0 + 2, v1);
  float v3 = (*(float (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  if (qword_100284FA8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_10019AF80();
  sub_100128E40(v4, (uint64_t)qword_10028D348);
  id v5 = sub_10019AF60();
  os_log_type_t v6 = sub_10019B3A0();
  if (os_log_type_enabled(v5, v6))
  {
    char v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)char v7 = 136315138;
    uint64_t v10 = v8;
    sub_10019B350();
    sub_10007C26C(0, 0xE000000000000000, &v10);
    sub_10019B4A0();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "time range offset: %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return v3;
}

float sub_1001290AC()
{
  return sub_100128ED4();
}

uint64_t type metadata accessor for DefaultObservabilityServerErrorBucketConfigurationStore()
{
  return self;
}

uint64_t sub_1001290F4()
{
  sub_10000C440(&qword_100283EC0);
  uint64_t v0 = sub_10019AE80();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001D6A80;
  id v5 = (_OWORD *)(v4 + v3);
  _OWORD *v5 = xmmword_1001D6920;
  os_log_type_t v6 = *(void (**)(void))(v1 + 104);
  ((void (*)(_OWORD *, void, uint64_t))v6)(v5, enum case for IntBucketContents.range(_:), v0);
  *(_OWORD *)((char *)v5 + v2) = xmmword_1001D6930;
  v6();

  return IntBucketConfiguration.init(unknownBucketName:discreteBuckets:classifiedBuckets:)(100000, v4, _swiftEmptyArrayStorage);
}

Swift::Int sub_10012923C()
{
  Swift::UInt v1 = *v0;
  Swift::UInt v2 = v0[1];
  sub_10019B7D0();
  sub_10019B7E0(v1);
  sub_10019B7E0(v2);
  return sub_10019B7F0();
}

void sub_100129298()
{
  Swift::UInt v1 = v0[1];
  sub_10019B7E0(*v0);
  sub_10019B7E0(v1);
}

Swift::Int sub_1001292D4()
{
  Swift::UInt v1 = *v0;
  Swift::UInt v2 = v0[1];
  sub_10019B7D0();
  sub_10019B7E0(v1);
  sub_10019B7E0(v2);
  return sub_10019B7F0();
}

BOOL sub_10012932C(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t sub_100129344()
{
  uint64_t v1 = sub_10019B700();
  v2._countAndFlagsBits = 8250;
  v2._object = (void *)0xE200000000000000;
  sub_10019B190(v2);
  v3._countAndFlagsBits = sub_10019B700();
  sub_10019B190(v3);
  swift_bridgeObjectRelease();
  return v1;
}

__n128 initializeBufferWithCopyOfBuffer for ObservabilityErrorBucket(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ObservabilityErrorBucket(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ObservabilityErrorBucket(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ObservabilityErrorBucket()
{
  return &type metadata for ObservabilityErrorBucket;
}

unint64_t sub_100129440()
{
  unint64_t result = qword_1002852D8[0];
  if (!qword_1002852D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1002852D8);
  }
  return result;
}

uint64_t sub_100129494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

uint64_t sub_10012949C()
{
  uint64_t result = sub_10019B480();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10012953C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  size_t v9 = v7 + v8;
  size_t v10 = v7 + 7;
  uint64_t v11 = v8 + 8;
  if (v8 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || ((v8 + 8 + ((v7 + 7 + ((v7 + v8) & ~v8)) & 0xFFFFFFFFFFFFFFF8)) & ~v8) + v7 > 0x18)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    uint64_t v15 = v14 + ((v8 & 0xF8 ^ 0x1F8) & (v8 + 16));
    swift_retain();
  }
  else
  {
    uint64_t v16 = ~v8;
    long long v24 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48);
    if (v24(a2, 1, v5))
    {
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    id v25 = a1;
    long long v17 = (void *)(((unint64_t)a1 + v9) & v16);
    long long v18 = (void *)(((unint64_t)a2 + v9) & v16);
    if (v24((uint64_t *)v18, 1, v5))
    {
      memcpy(v17, v18, v7);
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(v17, v18, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v17, 0, 1, v5);
    }
    long long v19 = (void *)(((unint64_t)v17 + v10) & 0xFFFFFFFFFFFFFFF8);
    long long v20 = (void *)(((unint64_t)v18 + v10) & 0xFFFFFFFFFFFFFFF8);
    *long long v19 = *v20;
    objc_super v21 = (void *)(((unint64_t)v19 + v11) & v16);
    int64_t v22 = (void *)(((unint64_t)v20 + v11) & v16);
    if (v24((uint64_t *)v22, 1, v5))
    {
      memcpy(v21, v22, v7);
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(v21, v22, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v21, 0, 1, v5);
    }
    return v25;
  }
  return (uint64_t *)v15;
}

uint64_t sub_1001297F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v11 = *(void *)(v3 - 8);
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (!v4(a1, 1, v3)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v3);
  }
  if (*(_DWORD *)(v11 + 84)) {
    uint64_t v5 = *(void *)(v11 + 64);
  }
  else {
    uint64_t v5 = *(void *)(v11 + 64) + 1;
  }
  uint64_t v6 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v7 = (v5 + a1 + v6) & ~v6;
  if (!v4(v7, 1, v3)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v7, v3);
  }
  unint64_t v8 = (v6 + ((v5 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v6;
  uint64_t result = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v4)(v8, 1, v3);
  if (!result)
  {
    size_t v10 = *(uint64_t (**)(unint64_t, uint64_t))(v11 + 8);
    return v10(v8, v3);
  }
  return result;
}

void *sub_100129988(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
  if (v7(a2, 1, v5))
  {
    int v8 = *(_DWORD *)(v6 + 84);
    size_t v9 = *(void *)(v6 + 64);
    if (v8) {
      size_t v10 = *(void *)(v6 + 64);
    }
    else {
      size_t v10 = v9 + 1;
    }
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    int v8 = *(_DWORD *)(v6 + 84);
    size_t v9 = *(void *)(v6 + 64);
  }
  if (v8) {
    size_t v11 = v9;
  }
  else {
    size_t v11 = v9 + 1;
  }
  uint64_t v12 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v13 = ~v12;
  uint64_t v14 = (void *)(((unint64_t)a1 + v11 + v12) & ~v12);
  uint64_t v15 = (const void *)(((unint64_t)a2 + v11 + v12) & ~v12);
  if (v7(v15, 1, v5))
  {
    memcpy(v14, v15, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v14, v15, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v14, 0, 1, v5);
  }
  uint64_t v16 = (void *)(((unint64_t)v14 + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
  long long v17 = (void *)(((unint64_t)v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v16 = *v17;
  long long v18 = (void *)(((unint64_t)v16 + v12 + 8) & v13);
  long long v19 = (const void *)(((unint64_t)v17 + v12 + 8) & v13);
  if (v7(v19, 1, v5))
  {
    memcpy(v18, v19, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v18, v19, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v18, 0, 1, v5);
  }
  return a1;
}

void *sub_100129BDC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_12;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  if (v10) {
    size_t v12 = v11;
  }
  else {
    size_t v12 = v11 + 1;
  }
  memcpy(a1, a2, v12);
LABEL_12:
  if (*(_DWORD *)(v6 + 84)) {
    size_t v13 = *(void *)(v6 + 64);
  }
  else {
    size_t v13 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v14 = *(unsigned __int8 *)(v6 + 80);
  double v27 = a1;
  uint64_t v15 = ~v14;
  uint64_t v16 = (void *)(((unint64_t)a1 + v13 + v14) & ~v14);
  long long v17 = (void *)(((unint64_t)a2 + v13 + v14) & ~v14);
  int v18 = v7(v16, 1, v5);
  int v19 = v7(v17, 1, v5);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(v16, v17, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v16, 0, 1, v5);
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v16, v5);
LABEL_20:
    memcpy(v16, v17, v13);
    goto LABEL_21;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 24))(v16, v17, v5);
LABEL_21:
  long long v20 = (void *)(((unint64_t)v16 + v13 + 7) & 0xFFFFFFFFFFFFFFF8);
  objc_super v21 = (void *)(((unint64_t)v17 + v13 + 7) & 0xFFFFFFFFFFFFFFF8);
  *long long v20 = *v21;
  int64_t v22 = (void *)(((unint64_t)v20 + v14 + 8) & v15);
  id v23 = (void *)(((unint64_t)v21 + v14 + 8) & v15);
  int v24 = v7(v22, 1, v5);
  int v25 = v7(v23, 1, v5);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(v22, v23, v5);
      return v27;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(v22, v5);
    goto LABEL_26;
  }
  if (v25)
  {
LABEL_26:
    memcpy(v22, v23, v13);
    return v27;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 16))(v22, v23, v5);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v22, 0, 1, v5);
  return v27;
}

void *sub_100129F64(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
  if (v7(a2, 1, v5))
  {
    int v8 = *(_DWORD *)(v6 + 84);
    size_t v9 = *(void *)(v6 + 64);
    if (v8) {
      size_t v10 = *(void *)(v6 + 64);
    }
    else {
      size_t v10 = v9 + 1;
    }
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    int v8 = *(_DWORD *)(v6 + 84);
    size_t v9 = *(void *)(v6 + 64);
  }
  if (v8) {
    size_t v11 = v9;
  }
  else {
    size_t v11 = v9 + 1;
  }
  uint64_t v12 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v13 = ~v12;
  uint64_t v14 = (void *)(((unint64_t)a1 + v11 + v12) & ~v12);
  uint64_t v15 = (const void *)(((unint64_t)a2 + v11 + v12) & ~v12);
  if (v7(v15, 1, v5))
  {
    memcpy(v14, v15, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v14, v15, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v14, 0, 1, v5);
  }
  uint64_t v16 = (void *)(((unint64_t)v14 + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
  long long v17 = (void *)(((unint64_t)v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v16 = *v17;
  int v18 = (void *)(((unint64_t)v16 + v12 + 8) & v13);
  int v19 = (const void *)(((unint64_t)v17 + v12 + 8) & v13);
  if (v7(v19, 1, v5))
  {
    memcpy(v18, v19, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v18, v19, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v18, 0, 1, v5);
  }
  return a1;
}

void *sub_10012A1B8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_12;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  if (v10) {
    size_t v12 = v11;
  }
  else {
    size_t v12 = v11 + 1;
  }
  memcpy(a1, a2, v12);
LABEL_12:
  if (*(_DWORD *)(v6 + 84)) {
    size_t v13 = *(void *)(v6 + 64);
  }
  else {
    size_t v13 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v14 = *(unsigned __int8 *)(v6 + 80);
  double v27 = a1;
  uint64_t v15 = ~v14;
  uint64_t v16 = (void *)(((unint64_t)a1 + v13 + v14) & ~v14);
  long long v17 = (void *)(((unint64_t)a2 + v13 + v14) & ~v14);
  int v18 = v7(v16, 1, v5);
  int v19 = v7(v17, 1, v5);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v16, v17, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v16, 0, 1, v5);
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v16, v5);
LABEL_20:
    memcpy(v16, v17, v13);
    goto LABEL_21;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 40))(v16, v17, v5);
LABEL_21:
  long long v20 = (void *)(((unint64_t)v16 + v13 + 7) & 0xFFFFFFFFFFFFFFF8);
  objc_super v21 = (void *)(((unint64_t)v17 + v13 + 7) & 0xFFFFFFFFFFFFFFF8);
  *long long v20 = *v21;
  int64_t v22 = (void *)(((unint64_t)v20 + v14 + 8) & v15);
  id v23 = (void *)(((unint64_t)v21 + v14 + 8) & v15);
  int v24 = v7(v22, 1, v5);
  int v25 = v7(v23, 1, v5);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(v22, v23, v5);
      return v27;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(v22, v5);
    goto LABEL_26;
  }
  if (v25)
  {
LABEL_26:
    memcpy(v22, v23, v13);
    return v27;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v22, v23, v5);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v22, 0, 1, v5);
  return v27;
}

uint64_t sub_10012A540(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v6 = v5 - 1;
  if (!v5) {
    unsigned int v6 = 0;
  }
  uint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v5) {
    ++v7;
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v6;
  if (a2 > v6)
  {
    uint64_t v9 = ((*(unsigned __int8 *)(v4 + 80)
         + ((v7 + ((v7 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + 7) & 0xFFFFFFFFFFFFFFF8)
         + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
       + v7;
    char v10 = 8 * v9;
    if (v9 > 3) {
      goto LABEL_8;
    }
    unsigned int v12 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v12))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (v11) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v12 <= 0xFF)
      {
        if (v12 < 2) {
          goto LABEL_23;
        }
LABEL_8:
        int v11 = *((unsigned __int8 *)a1 + v9);
        if (!*((unsigned char *)a1 + v9)) {
          goto LABEL_23;
        }
LABEL_15:
        int v13 = (v11 - 1) << v10;
        if (v9 > 3) {
          int v13 = 0;
        }
        if (v9)
        {
          if (v9 > 3) {
            LODWORD(v9) = 4;
          }
          switch((int)v9)
          {
            case 2:
              LODWORD(v9) = *a1;
              break;
            case 3:
              LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              LODWORD(v9) = *(_DWORD *)a1;
              break;
            default:
              LODWORD(v9) = *(unsigned __int8 *)a1;
              break;
          }
        }
        return v6 + (v9 | v13) + 1;
      }
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_15;
      }
    }
  }
LABEL_23:
  if (v5 < 2) {
    return 0;
  }
  unsigned int v15 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v15 >= 2) {
    return v15 - 1;
  }
  else {
    return 0;
  }
}

void sub_10012A700(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (!v8) {
    unsigned int v9 = 0;
  }
  uint64_t v10 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (!v8) {
    ++v10;
  }
  size_t v11 = ((*(unsigned __int8 *)(v7 + 80)
        + ((v10 + ((v10 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
      + v10;
  BOOL v12 = a3 >= v9;
  unsigned int v13 = a3 - v9;
  if (v13 == 0 || !v12)
  {
LABEL_14:
    if (v9 < a2) {
      goto LABEL_15;
    }
    goto LABEL_22;
  }
  if (v11 > 3)
  {
    int v6 = 1;
    if (v9 < a2) {
      goto LABEL_15;
    }
    goto LABEL_22;
  }
  unsigned int v14 = ((v13 + ~(-1 << (8 * v11))) >> (8 * v11)) + 1;
  if (!HIWORD(v14))
  {
    if (v14 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v14 > 1;
    }
    goto LABEL_14;
  }
  int v6 = 4;
  if (v9 < a2)
  {
LABEL_15:
    unsigned int v15 = ~v9 + a2;
    if (v11 < 4)
    {
      int v16 = (v15 >> (8 * v11)) + 1;
      if (v11)
      {
        int v17 = v15 & ~(-1 << (8 * v11));
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v15;
      int v16 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v11] = v16;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v16;
        return;
      case 3:
        goto LABEL_40;
      case 4:
        *(_DWORD *)&a1[v11] = v16;
        return;
      default:
        return;
    }
  }
LABEL_22:
  switch(v6)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 3:
LABEL_40:
      __break(1u);
      JUMPOUT(0x10012A964);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_26;
    default:
LABEL_26:
      if (a2)
      {
LABEL_27:
        if (v8 >= 2)
        {
          int v18 = *(void (**)(void))(v7 + 56);
          v18();
        }
      }
      return;
  }
}

uint64_t type metadata accessor for FourNumberSummary()
{
  return sub_10012B520();
}

uint64_t sub_10012A9A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v98 = a5;
  uint64_t v106 = a4;
  uint64_t v111 = a1;
  uint64_t v7 = *(void *)(a3 - 8);
  __chkstk_darwin(a1);
  char v97 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10019B480();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v105 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v11 = __chkstk_darwin(TupleTypeMetadata2);
  char v95 = (char *)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v99 = (char *)&v89 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  int v17 = (char *)&v89 - v16;
  unsigned int v108 = *(char **)(v9 - 8);
  int v18 = v108;
  uint64_t v19 = __chkstk_darwin(v15);
  uint64_t v92 = (char *)&v89 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v93 = (char *)&v89 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  unint64_t v94 = (char *)&v89 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  unint64_t v96 = (char *)&v89 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  char v102 = (char *)&v89 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  unsigned int v103 = (char *)&v89 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  unint64_t v110 = (char *)&v89 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v35 = (char *)&v89 - v34;
  __chkstk_darwin(v33);
  long long v37 = (char *)&v89 - v36;
  unint64_t v100 = v18;
  uint64_t v38 = (void (*)(char *, uint64_t, uint64_t))*((void *)v18 + 2);
  v38((char *)&v89 - v36, v111, v9);
  uint64_t v104 = a2;
  v38(v35, a2, v9);
  uint64_t v109 = TupleTypeMetadata2;
  long long v39 = &v17[*(int *)(TupleTypeMetadata2 + 48)];
  v38(v17, (uint64_t)v37, v9);
  v38(v39, (uint64_t)v35, v9);
  uint64_t v107 = v7;
  uint64_t v41 = v7 + 48;
  unint64_t v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  unsigned int v42 = v40(v17, 1, a3);
  char v101 = v38;
  if (v42 == 1)
  {
    unint64_t v110 = v17;
    unint64_t v43 = (void (*)(char *, uint64_t))*((void *)v108 + 1);
    v43(v35, v9);
    v43(v37, v9);
    unsigned int v44 = v40(v39, 1, a3);
    int v17 = v110;
    if (v44 == 1)
    {
      unsigned int v91 = v40;
      v43(v110, v9);
      uint64_t v45 = a3;
      goto LABEL_8;
    }
LABEL_6:
    (*(void (**)(char *, uint64_t))(v105 + 8))(v17, v109);
    return 0;
  }
  v38(v110, (uint64_t)v17, v9);
  if (v40(v39, 1, a3) == 1)
  {
    unsigned int v46 = (void (*)(char *, uint64_t))*((void *)v108 + 1);
    v46(v35, v9);
    v46(v37, v9);
    (*(void (**)(char *, uint64_t))(v107 + 8))(v110, a3);
    goto LABEL_6;
  }
  unsigned int v91 = v40;
  uint64_t v47 = v97;
  (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v97, v39, a3);
  uint64_t v45 = a3;
  LODWORD(v90) = sub_10019B090();
  char v89 = *(void (**)(char *, uint64_t))(v107 + 8);
  v89(v47, a3);
  unint64_t v43 = (void (*)(char *, uint64_t))*((void *)v108 + 1);
  v43(v35, v9);
  v43(v37, v9);
  v89(v110, a3);
  v43(v17, v9);
  if ((v90 & 1) == 0) {
    return 0;
  }
LABEL_8:
  unint64_t v110 = (char *)v43;
  uint64_t v48 = type metadata accessor for FourNumberSummary();
  uint64_t v49 = v41;
  unint64_t v50 = v103;
  unint64_t v51 = v101;
  v101(v103, v111 + *(int *)(v48 + 44), v9);
  uint64_t v98 = v48;
  uint64_t v52 = v102;
  v51(v102, v104 + *(int *)(v48 + 44), v9);
  unint64_t v53 = v99;
  char v54 = &v99[*(int *)(v109 + 48)];
  v51(v99, (uint64_t)v50, v9);
  unsigned int v108 = v54;
  v51(v54, (uint64_t)v52, v9);
  unsigned int v55 = v91;
  if (v91(v53, 1, v45) != 1)
  {
    char v63 = v96;
    v51(v96, (uint64_t)v53, v9);
    unsigned int v64 = v108;
    if (v55(v108, 1, v45) != 1)
    {
      uint64_t v90 = v49;
      uint64_t v67 = v107;
      char v68 = v97;
      (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v97, v64, v45);
      LODWORD(v108) = sub_10019B090();
      char v69 = *(void (**)(char *, uint64_t))(v67 + 8);
      v69(v68, v45);
      unsigned int v70 = v110;
      ((void (*)(char *, uint64_t))v110)(v102, v9);
      ((void (*)(char *, uint64_t))v70)(v103, v9);
      uint64_t v71 = v53;
      uint64_t v60 = v45;
      v69(v63, v45);
      ((void (*)(char *, uint64_t))v70)(v71, v9);
      uint64_t v61 = v111;
      uint64_t v62 = v104;
      if ((v108 & 1) == 0) {
        return 0;
      }
      goto LABEL_17;
    }
    uint64_t v65 = v110;
    ((void (*)(char *, uint64_t))v110)(v52, v9);
    ((void (*)(char *, uint64_t))v65)(v103, v9);
    (*(void (**)(char *, uint64_t))(v107 + 8))(v63, v45);
LABEL_13:
    (*(void (**)(char *, uint64_t))(v105 + 8))(v53, v109);
    return 0;
  }
  uint64_t v56 = v52;
  uint64_t v57 = v45;
  char v58 = v110;
  ((void (*)(char *, uint64_t))v110)(v56, v9);
  ((void (*)(char *, uint64_t))v58)(v50, v9);
  uint64_t v90 = v49;
  if (v55(v108, 1, v57) != 1) {
    goto LABEL_13;
  }
  unint64_t v59 = v53;
  uint64_t v60 = v57;
  ((void (*)(char *, uint64_t))v58)(v59, v9);
  uint64_t v61 = v111;
  uint64_t v62 = v104;
LABEL_17:
  uint64_t v72 = v98;
  if (*(void *)(v61 + *(int *)(v98 + 48)) == *(void *)(v62 + *(int *)(v98 + 48)))
  {
    char v73 = v94;
    char v74 = v101;
    v101(v94, v61 + *(int *)(v98 + 52), v9);
    unsigned int v75 = v93;
    v74(v93, v62 + *(int *)(v72 + 52), v9);
    uint64_t v76 = v95;
    unint64_t v77 = &v95[*(int *)(v109 + 48)];
    v74(v95, (uint64_t)v73, v9);
    v74(v77, (uint64_t)v75, v9);
    uint64_t v78 = v60;
    if (v55(v76, 1, v60) == 1)
    {
      char v79 = v75;
      unsigned int v80 = v110;
      ((void (*)(char *, uint64_t))v110)(v79, v9);
      ((void (*)(char *, uint64_t))v80)(v73, v9);
      if (v55(v77, 1, v60) == 1)
      {
        ((void (*)(char *, uint64_t))v80)(v76, v9);
        return 1;
      }
      goto LABEL_23;
    }
    v74(v92, (uint64_t)v76, v9);
    if (v55(v77, 1, v60) == 1)
    {
      uint64_t v81 = v110;
      ((void (*)(char *, uint64_t))v110)(v75, v9);
      ((void (*)(char *, uint64_t))v81)(v73, v9);
      (*(void (**)(char *, uint64_t))(v107 + 8))(v92, v60);
LABEL_23:
      (*(void (**)(char *, uint64_t))(v105 + 8))(v76, v109);
      return 0;
    }
    unint64_t v82 = v73;
    uint64_t v83 = v107;
    char v84 = v97;
    (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v97, v77, v78);
    unsigned int v85 = v92;
    char v86 = sub_10019B090();
    uint64_t v87 = *(void (**)(char *, uint64_t))(v83 + 8);
    v87(v84, v78);
    unint64_t v88 = v110;
    ((void (*)(char *, uint64_t))v110)(v75, v9);
    ((void (*)(char *, uint64_t))v88)(v82, v9);
    v87(v85, v78);
    ((void (*)(char *, uint64_t))v88)(v76, v9);
    if (v86) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_10012B510(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_10012A9A4(a1, a2, a3[2], a3[3], a3[4]);
}

uint64_t sub_10012B520()
{
  return swift_getGenericMetadata();
}

uint64_t initializeBufferWithCopyOfBuffer for ObservabilityStateDumper(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for ObservabilityStateDumper(uint64_t a1)
{
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0(a1);
  swift_release();
  swift_release();
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0(a1 + 56);

  return _s7Metrics31ObservabilitySignalDeserializerVwxx_0(a1 + 96);
}

uint64_t initializeWithCopy for ObservabilityStateDumper(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain();
  swift_retain();
  v8(a1 + 56, a2 + 56, v7);
  long long v9 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 120) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 96, a2 + 96);
  return a1;
}

uint64_t *assignWithCopy for ObservabilityStateDumper(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  sub_10012B784(a1 + 7, a2 + 7);
  sub_10012B784(a1 + 12, a2 + 12);
  return a1;
}

uint64_t *sub_10012B784(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 initializeWithTake for ObservabilityStateDumper(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for ObservabilityStateDumper(uint64_t a1, uint64_t a2)
{
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0(a1 + 96);
  long long v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for ObservabilityStateDumper(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 136)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ObservabilityStateDumper(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 136) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 136) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ObservabilityStateDumper()
{
  return &type metadata for ObservabilityStateDumper;
}

uint64_t sub_10012BB2C@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v82 = a1;
  uint64_t v77 = a2;
  sub_10000C440(&qword_100282D10);
  uint64_t v2 = ((uint64_t (*)(void))__chkstk_darwin)();
  unsigned int v70 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  char v74 = (char *)&v65 - v5;
  __chkstk_darwin(v4);
  char v73 = (char *)&v65 - v6;
  uint64_t v78 = type metadata accessor for TimeRange();
  uint64_t v7 = __chkstk_darwin(v78);
  uint64_t v67 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v72 = (char *)&v65 - v10;
  __chkstk_darwin(v9);
  uint64_t v71 = (char *)&v65 - v11;
  uint64_t v12 = sub_10019ACD0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10019AC90();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10019A9C0();
  uint64_t v75 = *(void *)(v20 - 8);
  uint64_t v76 = v20;
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10019ABA0();
  uint64_t v80 = *(void *)(v23 - 8);
  uint64_t v81 = v23;
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v66 = (char *)&v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  char v69 = (char *)&v65 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  char v68 = (char *)&v65 - v29;
  __chkstk_darwin(v28);
  uint64_t v83 = (char *)&v65 - v30;
  sub_10019AAE0();
  if (qword_100284F90 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_100128E40(v16, (uint64_t)qword_10028D320);
  char v79 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v79(v19, v31, v16);
  if (qword_100284FB0 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_100128E40(v12, (uint64_t)qword_10028D368);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v32, v12);
  sub_10019AC30();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v17 + 8);
  v33(v19, v16);
  sub_10019A960();
  sub_10019A880();
  if (!(_BYTE)v82)
  {
    sub_10019A940();
    sub_10019A900();
    v79(v19, v31, v16);
    uint64_t v45 = v73;
    sub_10019AC60();
    v33(v19, v16);
    uint64_t v46 = v80;
    uint64_t v36 = v81;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v80 + 48))(v45, 1, v81);
    if (result != 1)
    {
      uint64_t v47 = v68;
      sub_10019AAE0();
      long long v39 = *(void (**)(char *, uint64_t))(v46 + 8);
      v39(v45, v36);
      uint64_t v40 = (uint64_t)v71;
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v71, v47, v36);
      *(unsigned char *)(v40 + *(int *)(v78 + 20)) = 0;
      sub_10000C440((uint64_t *)&unk_100285520);
      uint64_t v48 = swift_allocObject();
      *(_OWORD *)(v48 + 16) = xmmword_1001D6A80;
      uint64_t result = sub_10019A920();
      if ((v49 & 1) == 0)
      {
        *(void *)(v48 + 56) = &type metadata for Int;
        *(void *)(v48 + 64) = &protocol witness table for Int;
        *(void *)(v48 + 32) = result;
        uint64_t result = sub_10019A8D0();
        if ((v50 & 1) == 0)
        {
          *(void *)(v48 + 96) = &type metadata for Int;
          *(void *)(v48 + 104) = &protocol witness table for Int;
          *(void *)(v48 + 72) = result;
          goto LABEL_23;
        }
        goto LABEL_30;
      }
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v82 == 1)
  {
    sub_10019A940();
    v79(v19, v31, v16);
    uint64_t v34 = v74;
    sub_10019AC60();
    v33(v19, v16);
    uint64_t v35 = v80;
    uint64_t v36 = v81;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v80 + 48))(v34, 1, v81);
    if (result == 1)
    {
      __break(1u);
    }
    else
    {
      uint64_t v38 = v69;
      sub_10019AAE0();
      long long v39 = *(void (**)(char *, uint64_t))(v35 + 8);
      v39(v34, v36);
      uint64_t v40 = (uint64_t)v72;
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v72, v38, v36);
      *(unsigned char *)(v40 + *(int *)(v78 + 20)) = 1;
      sub_10000C440((uint64_t *)&unk_100285520);
      uint64_t v41 = swift_allocObject();
      *(_OWORD *)(v41 + 16) = xmmword_1001D6910;
      uint64_t result = sub_10019A920();
      if ((v42 & 1) == 0)
      {
        *(void *)(v41 + 56) = &type metadata for Int;
        *(void *)(v41 + 64) = &protocol witness table for Int;
        *(void *)(v41 + 32) = result;
        uint64_t result = sub_10019A8D0();
        if ((v43 & 1) == 0)
        {
          *(void *)(v41 + 96) = &type metadata for Int;
          *(void *)(v41 + 104) = &protocol witness table for Int;
          *(void *)(v41 + 72) = result;
          uint64_t result = sub_10019A8F0();
          if ((v44 & 1) == 0)
          {
            *(void *)(v41 + 136) = &type metadata for Int;
            *(void *)(v41 + 144) = &protocol witness table for Int;
            *(void *)(v41 + 112) = result;
LABEL_23:
            uint64_t v60 = sub_10019B0E0();
            uint64_t v62 = v61;
            (*(void (**)(char *, uint64_t))(v75 + 8))(v22, v76);
            v39(v83, v36);
            uint64_t v63 = v77;
            sub_10012E0E0(v40, v77);
            uint64_t result = type metadata accessor for ObservabilityReportingInterval(0);
            unsigned int v64 = (uint64_t *)(v63 + *(int *)(result + 20));
            *unsigned int v64 = v60;
            v64[1] = v62;
            return result;
          }
          goto LABEL_27;
        }
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    __break(1u);
    goto LABEL_26;
  }
  uint64_t result = sub_10019A930();
  if (v51)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  sub_10019A940();
  v79(v19, v31, v16);
  uint64_t v52 = v70;
  sub_10019AC60();
  v33(v19, v16);
  uint64_t v53 = v80;
  uint64_t v36 = v81;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v80 + 48))(v52, 1, v81);
  if (result == 1)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  char v54 = v66;
  sub_10019AAE0();
  long long v39 = *(void (**)(char *, uint64_t))(v53 + 8);
  v39(v52, v36);
  uint64_t v40 = (uint64_t)v67;
  (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v67, v54, v36);
  *(unsigned char *)(v40 + *(int *)(v78 + 20)) = 2;
  sub_10000C440((uint64_t *)&unk_100285520);
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_1001D7600;
  uint64_t result = sub_10019A920();
  if (v56)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  *(void *)(v55 + 56) = &type metadata for Int;
  *(void *)(v55 + 64) = &protocol witness table for Int;
  *(void *)(v55 + 32) = result;
  uint64_t result = sub_10019A8D0();
  if (v57)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(void *)(v55 + 96) = &type metadata for Int;
  *(void *)(v55 + 104) = &protocol witness table for Int;
  *(void *)(v55 + 72) = result;
  uint64_t result = sub_10019A8F0();
  if (v58)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  *(void *)(v55 + 136) = &type metadata for Int;
  *(void *)(v55 + 144) = &protocol witness table for Int;
  *(void *)(v55 + 112) = result;
  uint64_t result = sub_10019A930();
  if ((v59 & 1) == 0)
  {
    *(void *)(v55 + 176) = &type metadata for Int;
    *(void *)(v55 + 184) = &protocol witness table for Int;
    *(void *)(v55 + 152) = result;
    goto LABEL_23;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_10012C564()
{
  return 1;
}

Swift::Int sub_10012C56C()
{
  return sub_10019B7F0();
}

void sub_10012C5B0()
{
}

Swift::Int sub_10012C5D8()
{
  return sub_10019B7F0();
}

uint64_t sub_10012C618()
{
  return 1701669236;
}

uint64_t sub_10012C628@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1701669236 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_10019B720();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_10012C6B0(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_10012C6BC(uint64_t a1)
{
  unint64_t v2 = sub_10012F168();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10012C6F8(uint64_t a1)
{
  unint64_t v2 = sub_10012F168();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10012C734@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v14 = a2;
  uint64_t v4 = sub_10000C440(&qword_100285360);
  __chkstk_darwin(v4 - 8);
  uint64_t v16 = (uint64_t)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000C440(&qword_100285490);
  uint64_t v15 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ObservabilityStateDumper.ObservabilityStateDumperParams(0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UtcDate();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_10007FDE0(a1, a1[3]);
  sub_10012F168();
  sub_10019B820();
  if (!v2)
  {
    sub_10012F1BC(&qword_1002854A0, (void (*)(uint64_t))type metadata accessor for UtcDate);
    sub_10019B630();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v6);
    sub_10012F204(v16, (uint64_t)v11);
    sub_10012F26C((uint64_t)v11, v14, type metadata accessor for ObservabilityStateDumper.ObservabilityStateDumperParams);
  }
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)a1);
  return sub_10012E080((uint64_t)v11, type metadata accessor for ObservabilityStateDumper.ObservabilityStateDumperParams);
}

uint64_t sub_10012C9E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10012C734(a1, a2);
}

void sub_10012C9FC()
{
  unint64_t v1 = self;
  id v2 = [v1 sharedInstance];
  if (v2)
  {
    uint64_t v3 = v2;
    sub_10012CEA4(v0, (uint64_t)&aBlock);
    uint64_t v4 = swift_allocObject();
    long long v5 = v21;
    *(_OWORD *)(v4 + 112) = v20;
    *(_OWORD *)(v4 + 128) = v5;
    *(void *)(v4 + 144) = v22;
    long long v6 = v17;
    *(_OWORD *)(v4 + 48) = v16;
    *(_OWORD *)(v4 + 64) = v6;
    long long v7 = v19;
    *(_OWORD *)(v4 + 80) = v18;
    *(_OWORD *)(v4 + 96) = v7;
    long long v8 = v15;
    *(_OWORD *)(v4 + 16) = aBlock;
    *(_OWORD *)(v4 + 32) = v8;
    id v9 = [v1 sharedInstance];
    if (v9)
    {
      uint64_t v10 = v9;
      NSString v11 = sub_10019B0A0();
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = sub_10012CF34;
      *(void *)(v12 + 24) = v4;
      *(void *)&long long v16 = sub_10012DFD8;
      *((void *)&v16 + 1) = v12;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      *(void *)&long long v15 = sub_10015F008;
      *((void *)&v15 + 1) = &unk_100237228;
      uint64_t v13 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      [v10 subscribeForMessage:v11 handler:v13];
      _Block_release(v13);

      swift_release();
    }
    else
    {

      swift_release();
    }
  }
}

uint64_t sub_10012CBD8(uint64_t a1)
{
  uint64_t v2 = sub_10000C440(&qword_100285360);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000C440(&qword_100282D10);
  __chkstk_darwin(v5 - 8);
  long long v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10019ABA0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  NSString v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10012DFF8(a1, (uint64_t)v4);
  uint64_t v12 = type metadata accessor for UtcDate();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v4, 1, v12) == 1)
  {
    sub_1000808B4((uint64_t)v4, &qword_100285360);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v7, v4, v8);
    sub_10012E080((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for UtcDate);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      goto LABEL_6;
    }
  }
  sub_10019AB90();
  sub_1000808B4((uint64_t)v7, &qword_100282D10);
LABEL_6:
  uint64_t v13 = sub_10012CF50();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v13;
}

uint64_t sub_10012CEA4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10012CEDC()
{
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0(v0 + 16);
  swift_release();
  swift_release();
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0(v0 + 72);
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0(v0 + 112);

  return _swift_deallocObject(v0, 152, 7);
}

uint64_t sub_10012CF34(uint64_t a1)
{
  return sub_10012CBD8(a1);
}

uint64_t sub_10012CF50()
{
  uint64_t v132 = sub_10019A9C0();
  uint64_t v137 = *(void *)(v132 - 8);
  __chkstk_darwin(v132);
  unsigned int v120 = (char *)&v108 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = sub_10019AC90();
  uint64_t v136 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  char v119 = (char *)&v108 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_10019ABA0();
  uint64_t v138 = *(void *)(v116 - 8);
  uint64_t v3 = __chkstk_darwin(v116);
  unint64_t v110 = (char *)&v108 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v111 = (char *)&v108 - v6;
  __chkstk_darwin(v5);
  uint64_t v114 = (char *)&v108 - v7;
  uint64_t v131 = type metadata accessor for TimeRange();
  __chkstk_darwin(v131);
  uint64_t v129 = (uint64_t)&v108 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000C440(&qword_100282D10);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  unsigned int v113 = (char *)&v108 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v115 = (char *)&v108 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v121 = (char *)&v108 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v127 = (char *)&v108 - v17;
  __chkstk_darwin(v16);
  char v124 = (void (*)(char *, uint64_t))((char *)&v108 - v18);
  uint64_t v19 = sub_10019ACD0();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v108 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for ObservabilityReportingInterval(0);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v26 = (char *)&v108 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v29 = (char *)&v108 - v28;
  __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v108 - v30;
  uint64_t v32 = *((void *)v0 + 3);
  uint64_t v33 = *((void *)v0 + 4);
  char v130 = v0;
  sub_10007FDE0(v0, v32);
  float v34 = (*(float (**)(uint64_t, uint64_t))(v33 + 8))(v32, v33);
  unint64_t v128 = v31;
  sub_10012BB2C(0, (uint64_t)v31);
  unint64_t v122 = v29;
  sub_10012BB2C(1, (uint64_t)v29);
  char v112 = v26;
  sub_10012BB2C(2, (uint64_t)v26);
  id v35 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
  uint64_t v139 = 0;
  unint64_t v140 = 0xE000000000000000;
  sub_10019B530(252);
  v141._countAndFlagsBits = 0xD000000000000033;
  v141._object = (void *)0x80000001002133B0;
  sub_10019B190(v141);
  uint64_t v36 = sub_10012F1BC((unint64_t *)&qword_100287920, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v37 = v116;
  uint64_t v134 = v36;
  v142._countAndFlagsBits = sub_10019B700();
  sub_10019B190(v142);
  swift_bridgeObjectRelease();
  v143._countAndFlagsBits = 10272;
  v143._object = (void *)0xE200000000000000;
  sub_10019B190(v143);
  id v118 = self;
  id v38 = [v118 apLocalSharedFormatter];
  sub_10019ACC0();
  Class isa = sub_10019ACB0().super.isa;
  uint64_t v40 = *(void (**)(void, void))(v20 + 8);
  unsigned int v125 = (void (*)(void, void, void))v22;
  uint64_t v126 = v19;
  char v123 = (void (*)(char *, uint64_t))(v20 + 8);
  char v117 = v40;
  v40(v22, v19);
  [v38 setTimeZone:isa];

  Class v41 = sub_10019AAF0().super.isa;
  id v42 = [v38 stringFromDate:v41];

  uint64_t v43 = sub_10019B0B0();
  uint64_t v45 = v44;

  v144._countAndFlagsBits = v43;
  v144._object = v45;
  sub_10019B190(v144);
  swift_bridgeObjectRelease();
  v145._object = (void *)0x80000001002133F0;
  v145._countAndFlagsBits = 0xD00000000000001CLL;
  sub_10019B190(v145);
  sub_10019B350();
  v146._countAndFlagsBits = 10272;
  v146._object = (void *)0xE200000000000000;
  sub_10019B190(v146);
  id v109 = v35;
  id v46 = [v35 stringFromTimeInterval:floorf(v34 * 86400.0)];
  if (v46)
  {
    uint64_t v47 = v46;
    uint64_t v48 = sub_10019B0B0();
    char v50 = v49;
  }
  else
  {
    char v50 = (void *)0xE300000000000000;
    uint64_t v48 = 7104878;
  }
  v147._countAndFlagsBits = v48;
  v147._object = v50;
  sub_10019B190(v147);
  swift_bridgeObjectRelease();
  v148._object = (void *)0x8000000100213410;
  v148._countAndFlagsBits = 0xD00000000000001CLL;
  sub_10019B190(v148);
  char v51 = v130;
  uint64_t v52 = *((void *)v130 + 15);
  uint64_t v53 = *((void *)v130 + 16);
  sub_10007FDE0((void *)v130 + 12, v52);
  uint64_t v54 = (uint64_t)v124;
  (*(void (**)(uint64_t, uint64_t))(v53 + 32))(v52, v53);
  uint64_t v55 = v138;
  char v56 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v138 + 48);
  uint64_t v135 = v138 + 48;
  if (v56(v54, 1, v37) == 1)
  {
    sub_1000808B4(v54, &qword_100282D10);
    char v57 = (void *)0xE300000000000000;
    uint64_t v58 = 7104878;
  }
  else
  {
    id v59 = [v118 apLocalSharedFormatter];
    uint64_t v60 = v125;
    sub_10019ACC0();
    Class v61 = sub_10019ACB0().super.isa;
    v117(v60, v126);
    [v59 setTimeZone:v61];

    Class v62 = sub_10019AAF0().super.isa;
    uint64_t v63 = v54;
    id v64 = [v59 stringFromDate:v62];

    uint64_t v58 = sub_10019B0B0();
    char v57 = v65;

    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v63, v37);
  }
  v149._countAndFlagsBits = v58;
  v149._object = v57;
  sub_10019B190(v149);
  swift_bridgeObjectRelease();
  v150._object = (void *)0x8000000100213430;
  v150._countAndFlagsBits = 0xD00000000000001BLL;
  sub_10019B190(v150);
  uint64_t v66 = *((void *)v51 + 10);
  uint64_t v67 = *((void *)v51 + 11);
  sub_10007FDE0((void *)v51 + 7, v66);
  uint64_t v68 = (uint64_t)v127;
  (*(void (**)(uint64_t, uint64_t))(v67 + 32))(v66, v67);
  char v130 = v56;
  uint64_t v69 = v37;
  if (v56(v68, 1, v37) == 1)
  {
    sub_1000808B4(v68, &qword_100282D10);
    unsigned int v70 = (void *)0xE300000000000000;
    uint64_t v72 = v137;
    uint64_t v71 = v138;
    uint64_t v73 = (uint64_t)v128;
    uint64_t v74 = 7104878;
  }
  else
  {
    id v75 = [v118 apLocalSharedFormatter];
    uint64_t v76 = v125;
    sub_10019ACC0();
    Class v77 = sub_10019ACB0().super.isa;
    v117(v76, v126);
    [v75 setTimeZone:v77];

    Class v78 = sub_10019AAF0().super.isa;
    id v79 = [v75 stringFromDate:v78];

    uint64_t v74 = sub_10019B0B0();
    unsigned int v70 = v80;

    uint64_t v71 = v138;
    (*(void (**)(uint64_t, uint64_t))(v138 + 8))(v68, v69);
    uint64_t v72 = v137;
    uint64_t v73 = (uint64_t)v128;
  }
  v151._countAndFlagsBits = v74;
  v151._object = v70;
  sub_10019B190(v151);
  swift_bridgeObjectRelease();
  v152._object = (void *)0x8000000100213450;
  v152._countAndFlagsBits = 0xD00000000000001BLL;
  sub_10019B190(v152);
  uint64_t v81 = v129;
  sub_10012F26C(v73, v129, (uint64_t (*)(void))type metadata accessor for TimeRange);
  v153._countAndFlagsBits = sub_10019B700();
  sub_10019B190(v153);
  swift_bridgeObjectRelease();
  id v118 = *(id *)(v71 + 8);
  char v117 = (void (*)(void, void))(v71 + 8);
  ((void (*)(uint64_t, uint64_t))v118)(v81, v69);
  v154._countAndFlagsBits = 2108704;
  v154._object = (void *)0xE300000000000000;
  sub_10019B190(v154);
  uint64_t v82 = v71;
  if (qword_100284F90 != -1) {
    swift_once();
  }
  uint64_t v83 = v133;
  uint64_t v84 = sub_100128E40(v133, (uint64_t)qword_10028D320);
  uint64_t v85 = v136;
  char v86 = *(void (**)(void))(v136 + 16);
  uint64_t v87 = v119;
  uint64_t v126 = v84;
  uint64_t v127 = (char *)(v136 + 16);
  unsigned int v125 = (void (*)(void, void, void))v86;
  v86(v119);
  unint64_t v88 = v120;
  sub_100155230(*(unsigned char *)(v73 + *(int *)(v131 + 20)));
  char v89 = v121;
  sub_10019AC70();
  uint64_t v90 = *(void (**)(char *, uint64_t))(v72 + 8);
  uint64_t v137 = v72 + 8;
  char v124 = v90;
  v90(v88, v132);
  unsigned int v91 = *(void (**)(char *, uint64_t))(v85 + 8);
  uint64_t v136 = v85 + 8;
  char v123 = v91;
  v91(v87, v83);
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v130)(v89, 1, v69);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v93 = *(char **)(v82 + 32);
  uint64_t v138 = v82 + 32;
  unint64_t v94 = v114;
  uint64_t v121 = v93;
  ((void (*)(char *, char *, uint64_t))v93)(v114, v89, v69);
  v155._countAndFlagsBits = sub_10019B700();
  sub_10019B190(v155);
  swift_bridgeObjectRelease();
  char v95 = (void (*)(uint64_t, uint64_t))v118;
  ((void (*)(char *, uint64_t))v118)(v94, v69);
  v156._object = (void *)0x8000000100213470;
  v156._countAndFlagsBits = 0xD00000000000001BLL;
  sub_10019B190(v156);
  uint64_t v96 = (uint64_t)v122;
  uint64_t v97 = v129;
  sub_10012F26C((uint64_t)v122, v129, (uint64_t (*)(void))type metadata accessor for TimeRange);
  v157._countAndFlagsBits = sub_10019B700();
  sub_10019B190(v157);
  swift_bridgeObjectRelease();
  v95(v97, v69);
  v158._countAndFlagsBits = 2108704;
  v158._object = (void *)0xE300000000000000;
  sub_10019B190(v158);
  uint64_t v98 = v133;
  v125(v87, v126, v133);
  sub_100155230(*(unsigned char *)(v96 + *(int *)(v131 + 20)));
  uint64_t v99 = v115;
  sub_10019AC70();
  v124(v88, v132);
  v123(v87, v98);
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v130)(v99, 1, v69);
  if (result == 1)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v100 = v111;
  ((void (*)(char *, char *, uint64_t))v121)(v111, v99, v69);
  v159._countAndFlagsBits = sub_10019B700();
  sub_10019B190(v159);
  swift_bridgeObjectRelease();
  v95((uint64_t)v100, v69);
  v160._object = (void *)0x8000000100213490;
  v160._countAndFlagsBits = 0xD00000000000001BLL;
  sub_10019B190(v160);
  uint64_t v101 = (uint64_t)v112;
  sub_10012F26C((uint64_t)v112, v97, (uint64_t (*)(void))type metadata accessor for TimeRange);
  v161._countAndFlagsBits = sub_10019B700();
  sub_10019B190(v161);
  swift_bridgeObjectRelease();
  v95(v97, v69);
  v162._countAndFlagsBits = 2108704;
  v162._object = (void *)0xE300000000000000;
  sub_10019B190(v162);
  uint64_t v102 = v133;
  v125(v87, v126, v133);
  sub_100155230(*(unsigned char *)(v101 + *(int *)(v131 + 20)));
  unsigned int v103 = v113;
  sub_10019AC70();
  v124(v88, v132);
  uint64_t v104 = v87;
  uint64_t v105 = v103;
  v123(v104, v102);
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v130)(v103, 1, v69);
  if (result != 1)
  {
    uint64_t v106 = v110;
    ((void (*)(char *, char *, uint64_t))v121)(v110, v105, v69);
    v163._countAndFlagsBits = sub_10019B700();
    sub_10019B190(v163);
    swift_bridgeObjectRelease();
    v95((uint64_t)v106, v69);

    uint64_t v107 = v139;
    sub_10012E080(v101, type metadata accessor for ObservabilityReportingInterval);
    sub_10012E080((uint64_t)v122, type metadata accessor for ObservabilityReportingInterval);
    sub_10012E080((uint64_t)v128, type metadata accessor for ObservabilityReportingInterval);
    return v107;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_10012DFA0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10012DFD8(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  return sub_10015DF20(a1, a2, a3, a4, *(uint64_t (**)(char *))(v4 + 16));
}

uint64_t sub_10012DFE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10012DFF0()
{
  return swift_release();
}

uint64_t sub_10012DFF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000C440(&qword_100285360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ObservabilityReportingInterval(uint64_t a1)
{
  return sub_10007DA28(a1, qword_1002853C0);
}

uint64_t sub_10012E080(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10012E0E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TimeRange();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_10012E144(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10019ABA0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = type metadata accessor for TimeRange();
    *((unsigned char *)a1 + *(int *)(v8 + 20)) = *((unsigned char *)a2 + *(int *)(v8 + 20));
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10012E230(uint64_t a1)
{
  uint64_t v2 = sub_10019ABA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10012E2A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10019ABA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for TimeRange();
  *(unsigned char *)(a1 + *(int *)(v7 + 20)) = *(unsigned char *)(a2 + *(int *)(v7 + 20));
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  v9[1] = v11;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10012E344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10019ABA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for TimeRange();
  *(unsigned char *)(a1 + *(int *)(v7 + 20)) = *(unsigned char *)(a2 + *(int *)(v7 + 20));
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  void *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10012E3F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10019ABA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for TimeRange();
  *(unsigned char *)(a1 + *(int *)(v7 + 20)) = *(unsigned char *)(a2 + *(int *)(v7 + 20));
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10012E484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10019ABA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for TimeRange();
  *(unsigned char *)(a1 + *(int *)(v7 + 20)) = *(unsigned char *)(a2 + *(int *)(v7 + 20));
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  void *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10012E524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10012E538);
}

uint64_t sub_10012E538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TimeRange();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10012E5FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10012E610);
}

uint64_t sub_10012E610(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for TimeRange();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_10012E6D0()
{
  uint64_t result = type metadata accessor for TimeRange();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10012E764(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(sub_10000C440(&qword_100285360) - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = type metadata accessor for UtcDate();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = sub_10019ABA0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_10012E8D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UtcDate();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = sub_10019ABA0();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(a1, v4);
  }
  return result;
}

void *sub_10012E988(void *a1, const void *a2)
{
  uint64_t v4 = type metadata accessor for UtcDate();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = sub_10000C440(&qword_100285360);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_10019ABA0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *sub_10012EAB4(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for UtcDate();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      uint64_t v12 = sub_10019ABA0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 24))(a1, a2, v12);
      return a1;
    }
    sub_10012E080((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for UtcDate);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v10 = sub_10000C440(&qword_100285360);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    return a1;
  }
  uint64_t v9 = sub_10019ABA0();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

void *sub_10012EC70(void *a1, const void *a2)
{
  uint64_t v4 = type metadata accessor for UtcDate();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = sub_10000C440(&qword_100285360);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_10019ABA0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *sub_10012ED9C(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for UtcDate();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      uint64_t v12 = sub_10019ABA0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 40))(a1, a2, v12);
      return a1;
    }
    sub_10012E080((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for UtcDate);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v10 = sub_10000C440(&qword_100285360);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    return a1;
  }
  uint64_t v9 = sub_10019ABA0();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_10012EF58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10012EF6C);
}

uint64_t sub_10012EF6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000C440(&qword_100285360);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10012EFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10012EFF0);
}

uint64_t sub_10012EFF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000C440(&qword_100285360);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ObservabilityStateDumper.ObservabilityStateDumperParams(uint64_t a1)
{
  return sub_10007DA28(a1, (uint64_t *)&unk_100285450);
}

void sub_10012F084()
{
  sub_10012F110();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10012F110()
{
  if (!qword_100285460)
  {
    type metadata accessor for UtcDate();
    unint64_t v0 = sub_10019B480();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100285460);
    }
  }
}

unint64_t sub_10012F168()
{
  unint64_t result = qword_100285498;
  if (!qword_100285498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100285498);
  }
  return result;
}

uint64_t sub_10012F1BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10012F204(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000C440(&qword_100285360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10012F26C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t getEnumTagSinglePayload for ObservabilityStateDumper.ObservabilityStateDumperParams.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for ObservabilityStateDumper.ObservabilityStateDumperParams.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10012F3C4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10012F3EC()
{
  return 0;
}

ValueMetadata *type metadata accessor for ObservabilityStateDumper.ObservabilityStateDumperParams.CodingKeys()
{
  return &type metadata for ObservabilityStateDumper.ObservabilityStateDumperParams.CodingKeys;
}

unint64_t sub_10012F408()
{
  unint64_t result = qword_1002854A8;
  if (!qword_1002854A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002854A8);
  }
  return result;
}

unint64_t sub_10012F460()
{
  unint64_t result = qword_1002854B0;
  if (!qword_1002854B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002854B0);
  }
  return result;
}

unint64_t sub_10012F4B8()
{
  unint64_t result = qword_1002854B8;
  if (!qword_1002854B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002854B8);
  }
  return result;
}

id sub_10012F50C()
{
  uint64_t v1 = sub_10019A9F0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unsigned int v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_10019AA70();
  uint64_t v5 = *(void *)(v55 - 8);
  uint64_t v6 = __chkstk_darwin(v55);
  uint64_t v52 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v42 - v8;
  uint64_t v10 = sub_10000C440(&qword_100284940);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v53 = (char *)&v42 - v14;
  uint64_t v15 = &v0[OBJC_IVAR____TtC7Metrics33PropertyListFileManagerFileSystem_propertyListDirectoryName];
  *(void *)uint64_t v15 = 1280331841;
  *((void *)v15 + 1) = 0xE400000000000000;
  char v51 = (unint64_t *)v15;
  id v16 = objc_allocWithZone((Class)NSFileManager);
  uint64_t v17 = v0;
  uint64_t v18 = &selRef_evaluate_;
  id v19 = [v16 init];
  *(void *)&v17[OBJC_IVAR____TtC7Metrics33PropertyListFileManagerFileSystem_fileManager] = v19;
  uint64_t v20 = NSSearchPathForDirectoriesInDomains(NSApplicationSupportDirectory, 1uLL, 1);
  uint64_t v21 = sub_10019B2B0();

  if (*(void *)(v21 + 16)
    && (char v49 = v9,
        uint64_t v50 = v1,
        swift_bridgeObjectRetain(),
        swift_bridgeObjectRelease(),
        id v22 = [self mainBundle],
        id v23 = [v22 bundleIdentifier],
        v22,
        v23))
  {
    unint64_t v44 = sub_10019B0B0();
    unint64_t v25 = v24;

    uint64_t v26 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56);
    uint64_t v46 = v5 + 56;
    uint64_t v47 = v26;
    v26((uint64_t)v13, 1, 1, v55);
    uint64_t v27 = enum case for URL.DirectoryHint.inferFromPath(_:);
    uint64_t v48 = v17;
    uint64_t v54 = v5;
    uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
    uint64_t v29 = v4;
    uint64_t v30 = v4;
    uint64_t v31 = v50;
    v28(v30, enum case for URL.DirectoryHint.inferFromPath(_:), v50);
    uint64_t v45 = v28;
    uint64_t v32 = v52;
    sub_10019AA50();
    unint64_t v56 = v44;
    unint64_t v57 = v25;
    v28(v29, v27, v31);
    unint64_t v44 = sub_100131298();
    uint64_t v33 = v49;
    sub_10019AA60();
    uint64_t v43 = *(void (**)(char *, uint64_t))(v2 + 8);
    v43(v29, v31);
    uint64_t v34 = v55;
    id v35 = *(void (**)(char *, uint64_t))(v54 + 8);
    v54 += 8;
    v35(v32, v55);
    swift_bridgeObjectRelease();
    unint64_t v36 = v51[1];
    unint64_t v56 = *v51;
    unint64_t v57 = v36;
    v45(v29, v27, v31);
    uint64_t v17 = v48;
    swift_bridgeObjectRetain();
    uint64_t v37 = (uint64_t)v53;
    sub_10019AA60();
    v43(v29, v31);
    swift_bridgeObjectRelease();
    v35(v33, v34);
    uint64_t v38 = v34;
    uint64_t v18 = &selRef_evaluate_;
    v47(v37, 0, 1, v38);
    sub_1001312EC(v37, (uint64_t)&v17[OBJC_IVAR____TtC7Metrics33PropertyListFileManagerFileSystem_fileDirectory]);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_10019B3B0();
    sub_100080160();
    long long v39 = (void *)sub_10019B470();
    sub_10019AF50();

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(&v17[OBJC_IVAR____TtC7Metrics33PropertyListFileManagerFileSystem_fileDirectory], 1, 1, v55);
  }

  uint64_t v40 = (objc_class *)type metadata accessor for PropertyListFileManagerFileSystem();
  v58.receiver = v17;
  v58.super_class = v40;
  return [super v18[252]];
}

uint64_t sub_10012FAA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v23 = a3;
  uint64_t v6 = sub_10019A9F0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000C440(&qword_100284940);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10019AA70();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100131230(v3 + OBJC_IVAR____TtC7Metrics33PropertyListFileManagerFileSystem_fileDirectory, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_10010C9DC((uint64_t)v12);
    sub_10019B3B0();
    sub_100080160();
    uint64_t v17 = (void *)sub_10019B470();
    sub_10019AF50();

    uint64_t v18 = 1;
    uint64_t v19 = v23;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    uint64_t v24 = a1;
    uint64_t v25 = a2;
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for URL.DirectoryHint.inferFromPath(_:), v6);
    sub_100131298();
    uint64_t v20 = v23;
    sub_10019AA60();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    uint64_t v18 = 0;
    uint64_t v19 = v20;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v19, v18, 1, v13);
}

id sub_10012FDC0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PropertyListFileManagerFileSystem();
  return [super dealloc];
}

uint64_t sub_10012FE58()
{
  return type metadata accessor for PropertyListFileManagerFileSystem();
}

uint64_t type metadata accessor for PropertyListFileManagerFileSystem()
{
  uint64_t result = qword_100285500;
  if (!qword_100285500) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10012FEAC()
{
  sub_10012FF54();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10012FF54()
{
  if (!qword_100285510)
  {
    sub_10019AA70();
    unint64_t v0 = sub_10019B480();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100285510);
    }
  }
}

uint64_t sub_10012FFAC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_10000C440(&qword_100284940);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_10019AA70();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10012FAA8(a1, a2, (uint64_t)v7);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_10010C9DC((uint64_t)v7);
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 32))(v11, v7, v8);
  uint64_t v13 = *(void **)(v2 + OBJC_IVAR____TtC7Metrics33PropertyListFileManagerFileSystem_fileManager);
  sub_10019AA30(0);
  NSString v14 = sub_10019B0A0();
  swift_bridgeObjectRelease();
  unsigned int v15 = [v13 fileExistsAtPath:v14];

  if (v15)
  {
    sub_10019AA00(v16);
    uint64_t v18 = v17;
    id v25 = 0;
    unsigned int v19 = [v13 removeItemAtURL:v17 error:&v25];

    if (v19)
    {
      uint64_t v20 = *(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8);
      id v21 = v25;
      return v20(v11, v8);
    }
    id v22 = v25;
    sub_10019A9E0();

    swift_willThrow();
    sub_10019B3B0();
    sub_100080160();
    uint64_t v23 = (void *)sub_10019B470();
    sub_10019AF50();

    swift_errorRelease();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_10013029C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_10000C440(&qword_100284940);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10019AA70();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  NSString v14 = (char *)&v26 - v13;
  sub_10012FAA8(a1, a2, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_10010C9DC((uint64_t)v7);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
    unsigned int v15 = *(void **)(v2 + OBJC_IVAR____TtC7Metrics33PropertyListFileManagerFileSystem_fileManager);
    sub_10019AA30(0);
    NSString v16 = sub_10019B0A0();
    swift_bridgeObjectRelease();
    unsigned int v17 = [v15 fileExistsAtPath:v16];

    if (v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
      id v18 = objc_allocWithZone((Class)NSDictionary);
      id v24 = sub_1001310E4((uint64_t)v12);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
      uint64_t v26 = 0;
      sub_10000C440((uint64_t *)&unk_100285B20);
      sub_10019B030();

      return v26;
    }
    sub_10019B3A0();
    sub_100080160();
    unsigned int v19 = (void *)sub_10019B470();
    sub_10000C440((uint64_t *)&unk_100285520);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1001D69A0;
    uint64_t v21 = sub_10019AA30(0);
    uint64_t v23 = v22;
    *(void *)(v20 + 56) = &type metadata for String;
    *(void *)(v20 + 64) = sub_100078904();
    *(void *)(v20 + 32) = v21;
    *(void *)(v20 + 40) = v23;
    sub_10019AF50();

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  }
  return 0;
}

uint64_t sub_1001306E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = sub_10000C440(&qword_100284940);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = &v38[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_10019AA70();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  NSString v14 = &v38[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  NSString v16 = &v38[-v15];
  sub_10012FAA8(a2, a3, (uint64_t)v9);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1) {
    return sub_10010C9DC((uint64_t)v9);
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 32))(v16, v9, v10);
  sub_10019AA10();
  id v18 = *(void **)(v4 + OBJC_IVAR____TtC7Metrics33PropertyListFileManagerFileSystem_fileManager);
  sub_10019AA30(0);
  NSString v19 = sub_10019B0A0();
  swift_bridgeObjectRelease();
  unsigned __int8 v20 = [v18 fileExistsAtPath:v19];

  if ((v20 & 1) == 0)
  {
    sub_10019AA00(v21);
    uint64_t v23 = v22;
    id v39 = 0;
    unsigned int v24 = [v18 createDirectoryAtURL:v22 withIntermediateDirectories:1 attributes:0 error:&v39];

    if (v24)
    {
      id v25 = v39;
    }
    else
    {
      id v26 = v39;
      sub_10019A9E0();

      swift_willThrow();
      sub_10019B3B0();
      sub_100080160();
      uint64_t v27 = (void *)sub_10019B470();
      sub_10019AF50();

      swift_errorRelease();
    }
  }
  sub_10000C440((uint64_t *)&unk_100285B20);
  Class isa = sub_10019B020().super.isa;
  sub_10019AA00(v29);
  uint64_t v31 = v30;
  id v39 = 0;
  unsigned int v32 = [(objc_class *)isa writeToURL:v30 error:&v39];

  if (v32)
  {
    uint64_t v33 = *(void (**)(unsigned char *, uint64_t))(v11 + 8);
    id v34 = v39;
    v33(v14, v10);
    return ((uint64_t (*)(unsigned char *, uint64_t))v33)(v16, v10);
  }
  else
  {
    id v35 = v39;
    sub_10019A9E0();

    swift_willThrow();
    sub_10019B3B0();
    sub_100080160();
    unint64_t v36 = (void *)sub_10019B470();
    sub_10019AF50();

    swift_errorRelease();
    uint64_t v37 = *(void (**)(unsigned char *, uint64_t))(v11 + 8);
    v37(v14, v10);
    return ((uint64_t (*)(unsigned char *, uint64_t))v37)(v16, v10);
  }
}

void *sub_100130B58(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v37 = a2;
  uint64_t v5 = sub_10019A9F0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000C440(&qword_100284940);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10019AA70();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  NSString v16 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v18 = (char *)v36 - v17;
  sub_100131230(v3 + OBJC_IVAR____TtC7Metrics33PropertyListFileManagerFileSystem_fileDirectory, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_10010C9DC((uint64_t)v11);
    sub_10019B3B0();
    sub_100080160();
    NSString v19 = (void *)sub_10019B470();
    unsigned __int8 v20 = _swiftEmptyArrayStorage;
    sub_10019AF50();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v11, v12);
    v38[0] = a1;
    v38[1] = v37;
    id v39 = _swiftEmptyArrayStorage;
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for URL.DirectoryHint.inferFromPath(_:), v5);
    sub_100131298();
    sub_10019AA60();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_10019AA30(0);
    uint64_t v21 = *(void (**)(char *, uint64_t))(v13 + 8);
    v21(v16, v12);
    uint64_t v22 = *(void **)(v3 + OBJC_IVAR____TtC7Metrics33PropertyListFileManagerFileSystem_fileManager);
    NSString v23 = sub_10019B0A0();
    swift_bridgeObjectRelease();
    v38[0] = 0;
    id v24 = [v22 contentsOfDirectoryAtPath:v23 error:v38];

    id v25 = v38[0];
    if (v24)
    {
      uint64_t v26 = sub_10019B2B0();
      id v27 = v25;

      sub_10014E1E8(v26);
    }
    else
    {
      id v28 = v38[0];
      sub_10019A9E0();

      swift_willThrow();
      os_log_type_t v29 = sub_10019B3B0();
      sub_100080160();
      uint64_t v30 = sub_10019B470();
      os_log_type_t v31 = v29;
      if (os_log_type_enabled(v30, v29))
      {
        swift_errorRetain();
        swift_errorRetain();
        unsigned int v32 = (uint8_t *)swift_slowAlloc();
        uint64_t v37 = (void *)swift_slowAlloc();
        *(_DWORD *)unsigned int v32 = 138412290;
        v36[1] = v32 + 4;
        swift_errorRetain();
        uint64_t v33 = v18;
        id v34 = (void *)_swift_stdlib_bridgeErrorToNSError();
        v38[0] = v34;
        sub_10019B4A0();
        *uint64_t v37 = v34;
        id v18 = v33;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "Error: Could not get files in directory, error info: %@", v32, 0xCu);
        sub_10000C440(&qword_100285538);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();
      }
    }
    v21(v18, v12);
    return v39;
  }
  return v20;
}

id sub_1001310E4(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_10019AA00(__stack_chk_guard);
  uint64_t v5 = v4;
  id v14 = 0;
  id v6 = [v2 initWithContentsOfURL:v4 error:&v14];

  id v7 = v14;
  if (v6)
  {
    uint64_t v8 = sub_10019AA70();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    id v10 = v7;
    v9(a1, v8);
  }
  else
  {
    id v11 = v14;
    sub_10019A9E0();

    swift_willThrow();
    uint64_t v12 = sub_10019AA70();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
  }
  return v6;
}

uint64_t sub_100131230(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000C440(&qword_100284940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100131298()
{
  unint64_t result = qword_100285530;
  if (!qword_100285530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100285530);
  }
  return result;
}

uint64_t sub_1001312EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000C440(&qword_100284940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100131354()
{
  swift_unknownObjectRelease();
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0(v0 + 24);
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0(v0 + 64);
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0(v0 + 104);
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0(v0 + 144);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ObservabilityReportWorker()
{
  return self;
}

uint64_t sub_1001313D0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v54 = a1;
  uint64_t v3 = sub_10000C440(&qword_100282D10);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10019ABA0();
  uint64_t v51 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v1 + 13;
  uint64_t v10 = v1[16];
  uint64_t v11 = v1[17];
  sub_10007FDE0(v1 + 13, v10);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
  uint64_t v13 = v1[21];
  uint64_t v14 = v1[22];
  uint64_t v53 = v1 + 18;
  sub_10007FDE0(v1 + 18, v13);
  uint64_t v15 = v13;
  uint64_t v16 = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 8))(v12, v15, v14);
  uint64_t v17 = v51;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v5, 1, v6) == 1) {
    return sub_1000808B4((uint64_t)v5, &qword_100282D10);
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v8, v5, v6);
  sub_10007FDE0(v2 + 8, v2[11]);
  uint64_t v19 = sub_100131A80(v54, 2 - (int)v12, (uint64_t)v8);
  if (qword_100284FA8 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_10019AF80();
  sub_100128E40(v20, (uint64_t)qword_10028D348);
  swift_bridgeObjectRetain_n();
  uint64_t v21 = sub_10019AF60();
  os_log_type_t v22 = sub_10019B390();
  BOOL v23 = os_log_type_enabled(v21, v22);
  char v49 = v8;
  uint64_t v50 = v6;
  if (v23)
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v54 = swift_slowAlloc();
    v57[0] = v54;
    *(_DWORD *)uint64_t v24 = 136315394;
    if ((_BYTE)v12)
    {
      if (v12 == 1)
      {
        unint64_t v25 = 0xE600000000000000;
        uint64_t v26 = 0x796C72756F68;
      }
      else
      {
        unint64_t v25 = 0xE500000000000000;
        uint64_t v26 = 0x796C696164;
      }
    }
    else
    {
      unint64_t v25 = 0xED00006E6F697461;
      uint64_t v26 = 0x63696E756D6D6F63;
    }
    *(void *)&long long v55 = sub_10007C26C(v26, v25, v57);
    sub_10019B4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2080;
    type metadata accessor for TimeRange();
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_10019B2C0();
    unint64_t v30 = v29;
    swift_bridgeObjectRelease();
    *(void *)&long long v55 = sub_10007C26C(v28, v30, v57);
    sub_10019B4A0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "%s performing work for %s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v16 = v50;
    uint64_t v27 = *(void *)(v19 + 16);
    if (v27)
    {
LABEL_14:
      uint64_t v31 = *(void *)(type metadata accessor for TimeRange() - 8);
      unint64_t v32 = v19 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
      uint64_t v52 = v2 + 3;
      uint64_t v54 = *(void *)(v31 + 72);
      v48[1] = v19;
      swift_bridgeObjectRetain();
      do
      {
        uint64_t v34 = v2[16];
        uint64_t v33 = v2[17];
        sub_10007FDE0(v9, v34);
        uint64_t v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v34, v33);
        uint64_t v37 = v2[16];
        uint64_t v36 = v2[17];
        sub_10007FDE0(v9, v37);
        (*(void (**)(long long *__return_ptr, unint64_t, uint64_t, uint64_t))(v36 + 16))(&v55, v32, v37, v36);
        if (v56)
        {
          sub_100132A7C(&v55, (uint64_t)v57);
          uint64_t v38 = sub_10007FDE0(v52, v2[6]);
          uint64_t v40 = v2[16];
          uint64_t v39 = v2[17];
          sub_10007FDE0(v9, v40);
          uint64_t v41 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v39 + 8))(v40, v39) + 2801;
          uint64_t v42 = v58;
          uint64_t v43 = v59;
          sub_10007FDE0(v57, v58);
          (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v43);
          unint64_t v44 = *(void **)(*v38 + 16);
          sub_10000C440(&qword_100285600);
          Class isa = sub_10019B020().super.isa;
          [v44 recordMetric:v41 forPurpose:8501 properties:isa internalProperties:0 order:0 options:0];
          swift_bridgeObjectRelease();

          uint64_t v46 = v2[21];
          uint64_t v47 = v2[22];
          sub_10007FDE0(v53, v46);
          (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v47 + 32))(v32, v35, v46, v47);
          _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v57);
        }
        else
        {
          sub_1000808B4((uint64_t)&v55, &qword_100287F70);
        }
        v32 += v54;
        --v27;
      }
      while (v27);
      swift_bridgeObjectRelease();
      uint64_t v16 = v50;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v27 = *(void *)(v19 + 16);
    if (v27) {
      goto LABEL_14;
    }
  }
  (*(void (**)(char *, uint64_t))(v51 + 8))(v49, v16);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100131A80(uint64_t a1, int a2, uint64_t a3)
{
  LODWORD(v126) = a2;
  uint64_t v127 = a1;
  uint64_t v4 = sub_10000C440(&qword_100285608);
  __chkstk_darwin(v4 - 8);
  uint64_t v116 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000C440(&qword_100285610);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10019A9C0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v122 = v9;
  uint64_t v123 = v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v101 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v105 = (char *)&v93 - v14;
  __chkstk_darwin(v13);
  char v124 = (char *)&v93 - v15;
  uint64_t v16 = sub_10019AC90();
  uint64_t v96 = *(void *)(v16 - 8);
  uint64_t v108 = v96;
  uint64_t v17 = __chkstk_darwin(v16);
  unsigned int v113 = (char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v121 = (char *)&v93 - v20;
  __chkstk_darwin(v19);
  char v119 = (char *)&v93 - v21;
  uint64_t v22 = sub_10000C440(&qword_100282D10);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  unint64_t v100 = (char *)&v93 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v107 = (char *)&v93 - v26;
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v93 - v27;
  uint64_t v29 = sub_10019ABA0();
  uint64_t v110 = *(void *)(v29 - 8);
  uint64_t v30 = __chkstk_darwin(v29);
  uint64_t v98 = (char *)&v93 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v104 = (char *)&v93 - v33;
  __chkstk_darwin(v32);
  uint64_t v111 = (char *)&v93 - v34;
  uint64_t v35 = type metadata accessor for TimeRange();
  uint64_t v99 = *(void *)(v35 - 8);
  uint64_t v36 = __chkstk_darwin(v35);
  uint64_t v97 = (char *)&v93 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v112 = (uint64_t)&v93 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v42 = (uint64_t)&v93 - v41;
  uint64_t v43 = __chkstk_darwin(v40);
  uint64_t v45 = (char *)&v93 - v44;
  __chkstk_darwin(v43);
  uint64_t v47 = (char *)&v93 - v46;
  uint64_t v48 = a3;
  LODWORD(a3) = v126;
  sub_10014A22C(v48, v126, (uint64_t)&v93 - v46);
  id v109 = v45;
  sub_10014A22C(v127, a3, (uint64_t)v45);
  if (qword_100284F90 != -1) {
    swift_once();
  }
  uint64_t v49 = sub_100128E40(v16, (uint64_t)qword_10028D320);
  uint64_t v50 = v108;
  uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v108 + 16);
  uint64_t v52 = v119;
  uint64_t v126 = v108 + 16;
  uint64_t v127 = v49;
  unsigned int v125 = v51;
  ((void (*)(char *))v51)(v119);
  uint64_t v106 = v35;
  uint64_t v53 = v124;
  sub_100155230(v47[*(int *)(v35 + 20)]);
  sub_10019AC70();
  uint64_t v54 = v123 + 8;
  unsigned int v120 = *(void (**)(void *, uint64_t))(v123 + 8);
  v120(v53, v122);
  uint64_t v56 = *(char **)(v50 + 8);
  uint64_t v55 = v50 + 8;
  char v119 = v56;
  ((void (*)(char *, uint64_t))v56)(v52, v16);
  uint64_t v57 = v110;
  char v117 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v110 + 48);
  uint64_t v118 = v110 + 48;
  uint64_t result = v117(v28, 1, v29);
  if (result == 1)
  {
LABEL_23:
    __break(1u);
    return result;
  }
  uint64_t v59 = v28;
  uint64_t v60 = v111;
  uint64_t v114 = *(void (**)(char *, char *, uint64_t))(v57 + 32);
  uint64_t v115 = v57 + 32;
  v114(v111, v59, v29);
  unint64_t v103 = sub_100132A94();
  char v61 = sub_10019B080();
  Class v62 = *(void (**)(char *, uint64_t))(v57 + 8);
  uint64_t v110 = v57 + 8;
  uint64_t v102 = v62;
  v62(v60, v29);
  uint64_t v63 = v107;
  if ((v61 & 1) == 0)
  {
    uint64_t v93 = v47;
    sub_100132AEC((uint64_t)v47, v42);
    uint64_t v65 = (char *)*(int *)(v106 + 20);
    uint64_t v66 = v55;
    uint64_t v67 = (void (**)(char *, void, uint64_t, uint64_t))(v96 + 56);
    uint64_t v123 = v54;
    char v124 = (char *)&_swiftEmptyArrayStorage;
    uint64_t v108 = v66;
    uint64_t v111 = v65;
    uint64_t v96 = v29;
    char v95 = (char *)v42;
    for (i = v67; ; uint64_t v67 = i)
    {
      v125(v121, v127, v16);
      v125(v8, v127, v16);
      uint64_t v68 = *v67;
      (*v67)(v8, 0, 1, v16);
      uint64_t v69 = sub_10019ACD0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v116, 1, 1, v69);
      unsigned int v70 = v105;
      sub_10019A990();
      uint64_t v71 = v8;
      uint64_t v72 = v121;
      sub_10019AC70();
      v120(v70, v122);
      ((void (*)(char *, uint64_t))v119)(v72, v16);
      uint64_t result = v117(v63, 1, v29);
      if (result == 1) {
        break;
      }
      uint64_t v73 = v104;
      v114(v104, v63, v29);
      char v74 = sub_10019B080();
      v102(v73, v29);
      if (v74)
      {
        sub_100132B50(v42);
        uint64_t v47 = v93;
        id v64 = v124;
        goto LABEL_20;
      }
      sub_100132AEC(v42, v112);
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        id v75 = v71;
        unint64_t v76 = (unint64_t)v124;
      }
      else
      {
        unint64_t v76 = sub_10015034C(0, *((void *)v124 + 2) + 1, 1, (unint64_t)v124);
        id v75 = v71;
      }
      unint64_t v78 = *(void *)(v76 + 16);
      unint64_t v77 = *(void *)(v76 + 24);
      id v79 = v111;
      if (v78 >= v77 >> 1) {
        unint64_t v76 = sub_10015034C(v77 > 1, v78 + 1, 1, v76);
      }
      *(void *)(v76 + 16) = v78 + 1;
      unint64_t v80 = (*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80);
      char v124 = (char *)v76;
      sub_10012E0E0(v112, v76 + v80 + *(void *)(v99 + 72) * v78);
      v125(v113, v127, v16);
      if (v79[v42])
      {
        uint64_t v81 = v122;
        v125(v75, v127, v16);
        v68(v75, 0, 1, v16);
        uint64_t v82 = sub_10019ACD0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v116, 1, 1, v82);
        uint64_t v84 = v101;
        uint64_t v85 = v75;
        sub_10019A990();
      }
      else
      {
        v125(v75, v127, v16);
        v68(v75, 0, 1, v16);
        uint64_t v83 = sub_10019ACD0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v116, 1, 1, v83);
        uint64_t v84 = v101;
        uint64_t v85 = v75;
        sub_10019A990();
        uint64_t v81 = v122;
      }
      char v86 = v100;
      uint64_t v42 = (uint64_t)v95;
      uint64_t v87 = v113;
      sub_10019AC70();
      v120(v84, v81);
      uint64_t v88 = v16;
      ((void (*)(char *, uint64_t))v119)(v87, v16);
      uint64_t v29 = v96;
      uint64_t result = v117(v86, 1, v96);
      if (result == 1) {
        goto LABEL_22;
      }
      char v89 = v98;
      uint64_t v90 = v114;
      v114(v98, v86, v29);
      char v91 = v111[v42];
      uint64_t v92 = (uint64_t)v97;
      v90(v97, v89, v29);
      *(unsigned char *)(v92 + *(int *)(v106 + 20)) = v91;
      sub_100132B50(v42);
      sub_10012E0E0(v92, v42);
      uint64_t v63 = v107;
      uint64_t v16 = v88;
      uint64_t v8 = v85;
    }
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  id v64 = &_swiftEmptyArrayStorage;
LABEL_20:
  sub_100132B50((uint64_t)v109);
  sub_100132B50((uint64_t)v47);
  return (uint64_t)v64;
}

uint64_t sub_100132A7C(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t sub_100132A94()
{
  unint64_t result = qword_100285618;
  if (!qword_100285618)
  {
    sub_10019ABA0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100285618);
  }
  return result;
}

uint64_t sub_100132AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TimeRange();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100132B50(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TimeRange();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_100132BFC()
{
  uint64_t v28 = OBJC_IVAR____TtC7Metrics42APSigningObservabilityCorrespondentWrapper_correspondent;
  id v1 = objc_allocWithZone((Class)APSystemClock);
  id v27 = v0;
  v26[0] = [v1 init];
  uint64_t v2 = (objc_class *)type metadata accessor for PropertyListFileManagerFileSystem();
  uint64_t v34 = (uint64_t)v2;
  uint64_t v35 = &off_1002372E0;
  v33[0] = [objc_allocWithZone(v2) init];
  uint64_t v3 = type metadata accessor for SigningObservabilityPropertyListFileStore();
  uint64_t v4 = (void *)swift_allocObject();
  uint64_t v5 = sub_100132FEC((uint64_t)v33, (uint64_t)v2);
  __chkstk_darwin(v5);
  uint64_t v7 = (void *)((char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v8 + 16))(v7);
  uint64_t v9 = *v7;
  v4[5] = v2;
  v4[6] = &off_1002372E0;
  _DWORD v4[2] = v9;
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v33);
  uint64_t v10 = type metadata accessor for SigningReportCoreAnalyticsTransmitter();
  uint64_t v11 = swift_allocObject();
  uint64_t v34 = v3;
  uint64_t v35 = &off_100237438;
  v33[0] = v4;
  uint64_t v31 = v10;
  uint64_t v32 = &off_100237610;
  v30[0] = v11;
  type metadata accessor for SigningObservabilityCorrespondent();
  uint64_t v12 = (void *)swift_allocObject();
  uint64_t v13 = sub_100132FEC((uint64_t)v33, v3);
  __chkstk_darwin(v13);
  uint64_t v15 = (void *)((char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v16 + 16))(v15);
  uint64_t v17 = sub_100132FEC((uint64_t)v30, v31);
  __chkstk_darwin(v17);
  uint64_t v19 = (void *)((char *)v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v20 + 16))(v19);
  uint64_t v21 = *v15;
  uint64_t v22 = *v19;
  v12[6] = v3;
  v12[7] = &off_100237438;
  v12[11] = v10;
  v12[12] = &off_100237610;
  v12[8] = v22;
  void v12[2] = v26[0];
  uint64_t v12[3] = v21;
  swift_retain();
  swift_retain();
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v30);
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v33);
  swift_release();
  swift_release();
  uint64_t v23 = v27;
  *(void *)(v26[1] + v28) = v12;

  uint64_t v24 = (objc_class *)type metadata accessor for APSigningObservabilityCorrespondentWrapper();
  v29.receiver = v23;
  v29.super_class = v24;
  return [super init];
}

id sub_100132F84()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for APSigningObservabilityCorrespondentWrapper();
  return [super dealloc];
}

uint64_t type metadata accessor for APSigningObservabilityCorrespondentWrapper()
{
  return self;
}

uint64_t sub_100132FEC(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

id sub_100133170()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ECPrimitiveCreator();
  return [super dealloc];
}

uint64_t type metadata accessor for ECPrimitiveCreator()
{
  return self;
}

void sub_1001331C8(uint64_t a1, uint64_t a2, Class isa, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v24 = a6;
  uint64_t v25 = a5;
  uint64_t v26 = a2;
  uint64_t v27 = a1;
  uint64_t v8 = sub_10019ABD0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10019B3A0();
  v23[1] = sub_100080160();
  uint64_t v12 = (void *)sub_10019B470();
  sub_10000C440((uint64_t *)&unk_100285520);
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = v13;
  *(_OWORD *)(v13 + 16) = xmmword_1001D69A0;
  if (isa)
  {
    uint64_t v30 = sub_10000C440(&qword_1002856E0);
    unint64_t v31 = sub_100133600();
    *(void *)&long long v29 = isa;
    sub_100132A7C(&v29, v14 + 32);
  }
  else
  {
    *(void *)(v13 + 56) = &type metadata for String;
    *(void *)(v13 + 64) = sub_100078904();
    *(void *)(v14 + 32) = 7104878;
    *(void *)(v14 + 40) = 0xE300000000000000;
  }
  swift_bridgeObjectRetain();
  sub_10019AF50();

  swift_bridgeObjectRelease();
  [self metricClass];
  swift_getObjCClassMetadata();
  sub_10019ABC0();
  sub_10019ABB0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  NSString v15 = sub_10019B0A0();
  swift_bridgeObjectRelease();
  if (isa)
  {
    sub_10000C440(&qword_100285600);
    Class isa = sub_10019B020().super.isa;
  }
  if (a4)
  {
    sub_10000C440((uint64_t *)&unk_100285B20);
    v16.super.Class isa = sub_10019B020().super.isa;
  }
  else
  {
    v16.super.Class isa = 0;
  }
  id v17 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v18 = [v17 initWithPurpose:v26 metric:v27 contentIdentifier:0 contextIdentifier:0 handle:v15 branch:0 properties:isa internalProperties:v16.super.isa relayData:0 environment:0 order:v25 options:v24];

  if (v18)
  {
    uint64_t v28 = &OBJC_PROTOCOL___APMetricDaemonExtension;
    uint64_t v19 = swift_dynamicCastObjCProtocolConditional();
    if (v19)
    {
      uint64_t v20 = (void *)v19;
      swift_unknownObjectRetain();
      NSString v21 = sub_10019B0A0();
      [v20 updateClientBundleID:v21];

      swift_unknownObjectRelease();
    }
    [objc_msgSend(self, "storage") receivedMetric:v18];
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_10019B3B0();
    uint64_t v22 = (void *)sub_10019B470();
    sub_10019AF50();
  }
}

unint64_t sub_100133600()
{
  unint64_t result = qword_1002856E8;
  if (!qword_1002856E8)
  {
    sub_1000788B8(&qword_1002856E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002856E8);
  }
  return result;
}

uint64_t sub_10013365C()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GroupRandomizer()
{
  return self;
}

uint64_t sub_1001336C0()
{
  swift_unknownObjectRelease();
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0(v0 + 24);
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0(v0 + 64);
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0(v0 + 104);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ObservabilityWorkSource()
{
  return self;
}

void *sub_100133734()
{
  uint64_t v1 = type metadata accessor for AvailablePeriodicWork();
  uint64_t v92 = *(void *)(v1 - 8);
  uint64_t v93 = v1;
  uint64_t v2 = __chkstk_darwin(v1);
  char v86 = (char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v82 = (uint64_t)&v72 - v5;
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v74 = (uint64_t)&v72 - v7;
  __chkstk_darwin(v6);
  uint64_t v73 = (uint64_t)&v72 - v8;
  uint64_t v85 = sub_10000C440(&qword_1002858D8);
  uint64_t v91 = *(void *)(v85 - 8);
  uint64_t v9 = v91;
  uint64_t v10 = __chkstk_darwin(v85);
  uint64_t v87 = (uint64_t)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v89 = (uint64_t)&v72 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v72 = (uint64_t)&v72 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  id v18 = (char *)&v72 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v90 = (uint64_t)&v72 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v72 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v26 = (char *)&v72 - v25;
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v72 - v27;
  uint64_t v29 = v0[6];
  uint64_t v30 = v0[7];
  sub_10007FDE0(v0 + 3, v29);
  uint64_t v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 16))(v29, v30);
  uint64_t v88 = v28;
  sub_100134038(0, v31, (uint64_t)v28);
  sub_100134038(1, v31, (uint64_t)v26);
  sub_100134038(2, v31, (uint64_t)v23);
  swift_bridgeObjectRelease();
  uint64_t v32 = sub_10000C440(&qword_1002858E0);
  uint64_t v33 = *(void *)(v9 + 72);
  uint64_t v34 = v92;
  uint64_t v35 = *(unsigned __int8 *)(v91 + 80);
  uint64_t v36 = (v35 + 32) & ~v35;
  uint64_t v78 = v36 + 2 * v33;
  uint64_t v79 = v32;
  uint64_t v77 = v35 | 7;
  uint64_t v37 = swift_allocObject();
  long long v76 = xmmword_1001D6A80;
  *(_OWORD *)(v37 + 16) = xmmword_1001D6A80;
  uint64_t v80 = v36;
  uint64_t v38 = v37 + v36;
  uint64_t v83 = v26;
  sub_1000800FC((uint64_t)v26, v38, &qword_1002858D8);
  uint64_t v81 = v33;
  uint64_t v84 = v23;
  sub_1000800FC((uint64_t)v23, v38 + v33, &qword_1002858D8);
  sub_1000800FC(v38, (uint64_t)v18, &qword_1002858D8);
  id v75 = v18;
  uint64_t v39 = (uint64_t)v18;
  uint64_t v40 = v72;
  sub_100134614(v39, v72);
  uint64_t v91 = *(void *)(v34 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v91)(v40, 1, v93) == 1)
  {
    uint64_t v41 = v73;
    sub_1000808B4(v40, &qword_1002858D8);
    uint64_t v42 = _swiftEmptyArrayStorage;
    uint64_t v43 = v74;
  }
  else
  {
    uint64_t v44 = v73;
    sub_10013467C(v40, v73);
    uint64_t v41 = v44;
    uint64_t v43 = v74;
    sub_10013467C(v44, v74);
    uint64_t v42 = _swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v42 = (void *)sub_1001504A8(0, _swiftEmptyArrayStorage[2] + 1, 1, (unint64_t)_swiftEmptyArrayStorage);
    }
    unint64_t v46 = v42[2];
    unint64_t v45 = v42[3];
    if (v46 >= v45 >> 1) {
      uint64_t v42 = (void *)sub_1001504A8(v45 > 1, v46 + 1, 1, (unint64_t)v42);
    }
    v42[2] = v46 + 1;
    sub_10013467C(v43, (uint64_t)v42+ ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80))+ *(void *)(v92 + 72) * v46);
  }
  uint64_t v47 = (uint64_t)v75;
  sub_1000800FC(v38 + v33, (uint64_t)v75, &qword_1002858D8);
  sub_100134614(v47, v40);
  int v48 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v91)(v40, 1, v93);
  uint64_t v49 = (uint64_t)v88;
  if (v48 == 1)
  {
    sub_1000808B4(v40, &qword_1002858D8);
    uint64_t v50 = (uint64_t)v86;
  }
  else
  {
    sub_10013467C(v40, v41);
    sub_10013467C(v41, v43);
    uint64_t v51 = v43;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v42 = (void *)sub_1001504A8(0, v42[2] + 1, 1, (unint64_t)v42);
    }
    uint64_t v50 = (uint64_t)v86;
    unint64_t v53 = v42[2];
    unint64_t v52 = v42[3];
    if (v53 >= v52 >> 1) {
      uint64_t v42 = (void *)sub_1001504A8(v52 > 1, v53 + 1, 1, (unint64_t)v42);
    }
    v42[2] = v53 + 1;
    sub_10013467C(v51, (uint64_t)v42+ ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80))+ *(void *)(v92 + 72) * v53);
    uint64_t v49 = (uint64_t)v88;
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v55 = v90;
  sub_10014F028(KeyPath, (uint64_t)v42, v90);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v56 = swift_allocObject();
  *(_OWORD *)(v56 + 16) = v76;
  uint64_t v57 = v56 + v80;
  sub_1000800FC(v49, v56 + v80, &qword_1002858D8);
  uint64_t v58 = v57 + v81;
  sub_1000800FC(v55, v57 + v81, &qword_1002858D8);
  uint64_t v59 = v89;
  sub_1000800FC(v57, v89, &qword_1002858D8);
  uint64_t v60 = v87;
  sub_100134614(v59, v87);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v91)(v60, 1, v93) == 1)
  {
    sub_1000808B4(v60, &qword_1002858D8);
    char v61 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v62 = v60;
    uint64_t v63 = v82;
    sub_10013467C(v62, v82);
    sub_10013467C(v63, v50);
    char v61 = _swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v61 = (void *)sub_1001504A8(0, _swiftEmptyArrayStorage[2] + 1, 1, (unint64_t)_swiftEmptyArrayStorage);
    }
    unint64_t v65 = v61[2];
    unint64_t v64 = v61[3];
    if (v65 >= v64 >> 1) {
      char v61 = (void *)sub_1001504A8(v64 > 1, v65 + 1, 1, (unint64_t)v61);
    }
    v61[2] = v65 + 1;
    sub_10013467C(v50, (uint64_t)v61+ ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80))+ *(void *)(v92 + 72) * v65);
    uint64_t v60 = v87;
  }
  uint64_t v66 = v58;
  uint64_t v67 = v89;
  sub_1000800FC(v66, v89, &qword_1002858D8);
  sub_100134614(v67, v60);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v91)(v60, 1, v93) == 1)
  {
    sub_1000808B4(v60, &qword_1002858D8);
  }
  else
  {
    uint64_t v68 = v82;
    sub_10013467C(v60, v82);
    sub_10013467C(v68, v50);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v61 = (void *)sub_1001504A8(0, v61[2] + 1, 1, (unint64_t)v61);
    }
    unint64_t v70 = v61[2];
    unint64_t v69 = v61[3];
    if (v70 >= v69 >> 1) {
      char v61 = (void *)sub_1001504A8(v69 > 1, v70 + 1, 1, (unint64_t)v61);
    }
    v61[2] = v70 + 1;
    sub_10013467C(v50, (uint64_t)v61+ ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80))+ *(void *)(v92 + 72) * v70);
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1000808B4(v90, &qword_1002858D8);
  sub_1000808B4((uint64_t)v84, &qword_1002858D8);
  sub_1000808B4((uint64_t)v83, &qword_1002858D8);
  sub_1000808B4(v49, &qword_1002858D8);
  return v61;
}

uint64_t sub_100134038@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_10019A9C0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v54 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_10019AC90();
  uint64_t v53 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  unint64_t v52 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for TimeRange();
  __chkstk_darwin(v50);
  uint64_t v49 = (uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10019ABA0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v47 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v58 = (char *)&v43 - v15;
  uint64_t v16 = sub_10000C440(&qword_100282D10);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  int v48 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v43 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v43 - v22;
  uint64_t v24 = *(void *)(a2 + 16);
  uint64_t v56 = v7;
  uint64_t v57 = v6;
  if (v24 && (unint64_t v25 = sub_100136A74(a1), (v26 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v23, *(void *)(a2 + 56) + *(void *)(v12 + 72) * v25, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v23, 0, 1, v11);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v23, 1, 1, v11);
  }
  sub_1000800FC((uint64_t)v23, (uint64_t)v21, &qword_100282D10);
  uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v27(v21, 1, v11) == 1)
  {
    uint64_t v28 = type metadata accessor for AvailablePeriodicWork();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a3, 1, 1, v28);
    return sub_1000808B4((uint64_t)v23, &qword_100282D10);
  }
  uint64_t v45 = a3;
  unint64_t v46 = (uint64_t (*)(char *, uint64_t, uint64_t))v27;
  uint64_t v29 = (uint64_t)v58;
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  uint64_t v44 = v23;
  v43(v58, v21, v11);
  sub_10007FDE0((void *)(v51 + 64), *(void *)(v51 + 88));
  LODWORD(v51) = a1;
  uint64_t v30 = v49;
  sub_10014A22C(v29, 2 - a1, v49);
  if (qword_100284F90 != -1) {
    swift_once();
  }
  uint64_t v31 = v55;
  uint64_t v32 = sub_100128E40(v55, (uint64_t)qword_10028D320);
  uint64_t v33 = v52;
  uint64_t v34 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v52, v32, v31);
  uint64_t v35 = v54;
  sub_100155230(*(unsigned char *)(v30 + *(int *)(v50 + 20)));
  uint64_t v36 = v48;
  sub_10019AC70();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v35, v57);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v33, v31);
  uint64_t result = v46(v36, 1, v11);
  if (result != 1)
  {
    uint64_t v38 = v47;
    uint64_t v39 = (void (*)(uint64_t, char *, uint64_t))v43;
    v43(v47, v36, v11);
    BOOL v40 = (v51 & 7) == 0;
    uint64_t v41 = v45;
    v39(v45, v38, v11);
    uint64_t v42 = type metadata accessor for AvailablePeriodicWork();
    *(unsigned char *)(v41 + *(int *)(v42 + 20)) = v40;
    sub_100132B50(v30);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v58, v11);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v41, 0, 1, v42);
    uint64_t v23 = v44;
    return sub_1000808B4((uint64_t)v23, &qword_100282D10);
  }
  __break(1u);
  return result;
}

uint64_t sub_100134614(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000C440(&qword_1002858D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10013467C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AvailablePeriodicWork();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_1001346E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10019ABA0();
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v23 - v6;
  uint64_t v8 = 0;
  uint64_t result = (void *)(v0 + 104);
  uint64_t v10 = *(void **)(v0 + 16);
  uint64_t v25 = v0;
  id v26 = v10;
  uint64_t v12 = (void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v24 = (void *)(v0 + 104);
  while (1)
  {
    sub_10007FDE0(result, *(void *)(v1 + 128));
    uint64_t v13 = sub_10016CAD4();
    uint64_t v14 = v13[2];
    if (v14)
    {
      uint64_t v27 = v8;
      uint64_t v15 = (uint64_t)(v13 + 4);
      do
      {
        sub_10010B568(v15, (uint64_t)v28);
        id v16 = [[*(id *)(*sub_10007FDE0(v28, v28[3]) + 16) now];
        sub_10019AB70();

        sub_1001313D0((uint64_t)v5);
        (*v12)(v5, v2);
        _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v28);
        v15 += 40;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
      uint64_t v1 = v25;
      uint64_t v8 = v27;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v17 = sub_100133734();
    id v18 = [v26 now];
    sub_10019AB70();

    uint64_t v19 = v17[2];
    if (!v19) {
      break;
    }
    uint64_t v27 = v8 + 1;
    uint64_t v20 = *(void *)(type metadata accessor for AvailablePeriodicWork() - 8);
    uint64_t v21 = (char *)v17 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    uint64_t v22 = *(void *)(v20 + 72);
    swift_bridgeObjectRetain();
    while ((sub_10019AB10() & 1) == 0)
    {
      v21 += v22;
      if (!--v19)
      {
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    swift_bridgeObjectRelease();
    (*v12)(v7, v2);
    swift_bridgeObjectRelease();
    uint64_t v8 = v27;
    uint64_t result = v24;
    if (v27 == 4) {
      return result;
    }
  }
LABEL_14:
  (*v12)(v7, v2);
  return (void *)swift_bridgeObjectRelease();
}

uint64_t initializeBufferWithCopyOfBuffer for ObservabilityError(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for ObservabilityError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ObservabilityError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100134A54(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_100134A5C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ObservabilityError()
{
  return &type metadata for ObservabilityError;
}

Swift::Int sub_100134A78()
{
  Swift::UInt v1 = *(void *)v0;
  Swift::UInt v2 = *(unsigned __int8 *)(v0 + 8);
  sub_10019B7D0();
  sub_10019B7E0(v2);
  sub_10019B7E0(v1);
  return sub_10019B7F0();
}

void sub_100134AD8()
{
  Swift::UInt v1 = *(void *)v0;
  sub_10019B7E0(*(unsigned __int8 *)(v0 + 8));
  sub_10019B7E0(v1);
}

Swift::Int sub_100134B18()
{
  Swift::UInt v1 = *(void *)v0;
  Swift::UInt v2 = *(unsigned __int8 *)(v0 + 8);
  sub_10019B7D0();
  sub_10019B7E0(v2);
  sub_10019B7E0(v1);
  return sub_10019B7F0();
}

uint64_t sub_100134B74(uint64_t a1, uint64_t a2)
{
  return (*(void *)a1 == *(void *)a2) & ~(*(unsigned __int8 *)(a1 + 8) ^ *(unsigned __int8 *)(a2 + 8));
}

unint64_t sub_100134B9C()
{
  unint64_t result = qword_1002858E8;
  if (!qword_1002858E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002858E8);
  }
  return result;
}

uint64_t sub_100134BF0()
{
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0(v0 + 16);
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0(v0 + 56);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PersistentTimeRangeOffset()
{
  return self;
}

float sub_100134C54()
{
  Swift::UInt v1 = *(void **)v0;
  Swift::UInt v2 = (void *)(*(void *)v0 + 16);
  uint64_t v3 = *(void *)(*(void *)v0 + 40);
  uint64_t v4 = *(void *)(*(void *)v0 + 48);
  sub_10007FDE0(v2, v3);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  if ((v5 & 0x100000000) == 0) {
    return *(float *)&v5;
  }
  uint64_t v7 = v1[10];
  uint64_t v8 = v1[11];
  sub_10007FDE0(v1 + 7, v7);
  float v6 = (*(float (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
  uint64_t v9 = v1[5];
  uint64_t v10 = v1[6];
  sub_10007FDE0(v2, v9);
  (*(void (**)(uint64_t, uint64_t, float))(v10 + 16))(v9, v10, v6);
  return v6;
}

uint64_t sub_100134D38()
{
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CachingTimeRangeOffset()
{
  return self;
}

float sub_100134D94()
{
  uint64_t v1 = *v0;
  if ((*(unsigned char *)(*v0 + 60) & 1) == 0) {
    return *(float *)(v1 + 56);
  }
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 48);
  sub_10007FDE0((void *)(v1 + 16), v2);
  float result = (*(float (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  *(float *)(v1 + 56) = result;
  *(unsigned char *)(v1 + 60) = 0;
  return result;
}

ValueMetadata *type metadata accessor for NormalizedScaleFactor()
{
  return &type metadata for NormalizedScaleFactor;
}

BOOL sub_100134E14(float *a1, float *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100134E28()
{
  return 0;
}

uint64_t sub_100134E6C()
{
  uint64_t v1 = sub_10000C440((uint64_t *)&unk_1002871B0);
  __chkstk_darwin(v1 - 8);
  uint64_t v127 = (char *)&v105 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for SigningFailure();
  uint64_t v137 = *(void (***)(void))(v3 - 8);
  __chkstk_darwin(v3);
  Swift::String v143 = (char *)&v105 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_10019ACD0();
  *(void *)&long long v138 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  unsigned int v125 = (char *)&v105 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = sub_10019AC90();
  uint64_t v6 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  Swift::String v141 = (char *)&v105 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = sub_10019A9C0();
  uint64_t v8 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v140 - 8);
  uint64_t v9 = __chkstk_darwin(v140);
  uint64_t v122 = (char *)&v105 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v123 = (char *)&v105 - v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v105 - v13;
  uint64_t v145 = sub_10019ABA0();
  uint64_t v135 = *(void *)(v145 - 8);
  uint64_t v15 = __chkstk_darwin(v145);
  uint64_t v121 = (uint64_t)&v105 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  unsigned int v120 = (char *)&v105 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  Swift::String v144 = (char *)&v105 - v20;
  __chkstk_darwin(v19);
  Swift::String v146 = (char *)&v105 - v21;
  swift_getObjectType();
  uint64_t v110 = sub_100146080();
  uint64_t v109 = v22;
  uint64_t v24 = v23;
  uint64_t v25 = (void *)(v0 + 24);
  uint64_t v124 = v0;
  id v26 = sub_10007FDE0((void *)(v0 + 24), *(void *)(v0 + 48));
  sub_10007FDE0((void *)(*v26 + 16), *(void *)(*v26 + 40));
  unint64_t v106 = (unint64_t)"clock";
  uint64_t v27 = sub_10013029C(0xD000000000000016, 0x8000000100213950);
  uint64_t v107 = v24;
  if (v27)
  {
    uint64_t result = sub_100137A1C(v27);
    if ((v31 & 1) == 0)
    {
      uint64_t v32 = result;
      uint64_t v33 = v29;
      uint64_t v34 = v30;
      goto LABEL_11;
    }
  }
  uint64_t v139 = v8;
  sub_10019AAB0();
  if (qword_100284F90 != -1) {
LABEL_48:
  }
    swift_once();
  uint64_t v35 = v142;
  uint64_t v36 = sub_100128E40(v142, (uint64_t)qword_10028D320);
  uint64_t v37 = v6;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v39 = v141;
  v38(v141, v36, v35);
  if (qword_100284FB0 != -1) {
    swift_once();
  }
  uint64_t v40 = v126;
  uint64_t v41 = sub_100128E40(v126, (uint64_t)qword_10028D368);
  uint64_t v42 = v138;
  uint64_t v43 = v125;
  (*(void (**)(char *, uint64_t, uint64_t))(v138 + 16))(v125, v41, v40);
  sub_10019AC30();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v40);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v35);
  uint64_t result = sub_10019A910();
  if (v44) {
    goto LABEL_52;
  }
  uint64_t v32 = result;
  uint64_t v6 = v37;
  uint64_t result = sub_10019A920();
  uint64_t v8 = v139;
  if (v45)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  uint64_t v33 = result;
  uint64_t result = sub_10019A8D0();
  uint64_t v24 = v107;
  if (v46)
  {
LABEL_54:
    __break(1u);
    return result;
  }
  uint64_t v34 = result;
  (*(void (**)(char *, uint64_t))(v135 + 8))(v146, v145);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v8[1])(v14, v140);
LABEL_11:
  BOOL v47 = v32 < v110;
  if (v32 != v110)
  {
    int v48 = v127;
LABEL_16:
    if (!v47) {
      return result;
    }
    goto LABEL_18;
  }
  BOOL v47 = v33 < v109;
  int v48 = v127;
  if (v33 != v109) {
    goto LABEL_16;
  }
  if (v34 >= v24) {
    return result;
  }
LABEL_18:
  uint64_t v49 = v124;
  uint64_t v50 = sub_100135CC0(v110, v109, v24);
  if (v50[2])
  {
    Swift::String v146 = (char *)v50[2];
    uint64_t v111 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v137 + 7);
    uint64_t v139 = (unsigned int (**)(char *, uint64_t, uint64_t))(v137 + 6);
    char v119 = (void (**)(char *, uint64_t, uint64_t))(v135 + 16);
    uint64_t v137 = (void (**)(void))(v6 + 16);
    uint64_t v118 = (void (**)(char *, uint64_t, uint64_t))(v138 + 16);
    char v117 = (void (**)(char *, uint64_t))(v138 + 8);
    v135 += 8;
    uint64_t v136 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v134 = (void (**)(char *, uint64_t))(v8 + 1);
    unsigned int v114 = enum case for Calendar.Component.day(_:);
    uint64_t v51 = v50;
    swift_retain();
    uint64_t v105 = v51;
    unint64_t v52 = v51 + 6;
    long long v138 = xmmword_1001D6910;
    unint64_t v108 = (unint64_t)"lastDayReportSubmitted";
    uint64_t v116 = 0x8000000100213970;
    long long v113 = xmmword_1001D69A0;
    uint64_t v53 = v49;
    uint64_t v112 = v25;
    uint64_t v115 = v3;
    while (1)
    {
      uint64_t v55 = *(v52 - 1);
      uint64_t v54 = *v52;
      uint64_t v56 = *(v52 - 2);
      uint64_t v57 = *sub_10007FDE0(v25, *(void *)(v53 + 48));
      uint64_t v148 = 0x736572756C696166;
      unint64_t v149 = 0xE90000000000002FLL;
      sub_10000C440((uint64_t *)&unk_100285520);
      uint64_t v58 = swift_allocObject();
      *(_OWORD *)(v58 + 16) = v138;
      *(void *)(v58 + 56) = &type metadata for Int;
      *(void *)(v58 + 64) = &protocol witness table for Int;
      *(void *)(v58 + 72) = v55;
      *(void *)(v58 + 32) = v56;
      *(void *)(v58 + 96) = &type metadata for Int;
      *(void *)(v58 + 104) = &protocol witness table for Int;
      *(void *)(v58 + 136) = &type metadata for Int;
      *(void *)(v58 + 144) = &protocol witness table for Int;
      *(void *)(v58 + 112) = v54;
      v150._countAndFlagsBits = sub_10019B0E0();
      sub_10019B190(v150);
      swift_bridgeObjectRelease();
      uint64_t v60 = v148;
      uint64_t v59 = v149;
      sub_10007FDE0((void *)(v57 + 16), *(void *)(v57 + 40));
      uint64_t v61 = sub_10013029C(v60, v59);
      if (v61) {
        sub_100137188(v61, v48);
      }
      else {
        (*v111)(v48, 1, 1, v3);
      }
      uint64_t v62 = (uint64_t)v143;
      swift_bridgeObjectRelease();
      if ((*v139)(v48, 1, v3) == 1)
      {
        sub_100135E74((uint64_t)v48);
      }
      else
      {
        sub_100135ED4((uint64_t)v48, v62);
        uint64_t v63 = sub_10007FDE0(v25, *(void *)(v53 + 48));
        sub_10007FDE0((void *)(*v63 + 16), *(void *)(*v63 + 40));
        uint64_t v64 = sub_10013029C(0xD000000000000012, v116);
        if (v64)
        {
          uint64_t v65 = v64;
          if (!*(void *)(v64 + 16)
            || (unint64_t v66 = sub_100076504(0xD000000000000012, v108 | 0x8000000000000000), (v67 & 1) == 0)
            || (uint64_t v148 = *(void *)(*(void *)(v65 + 56) + 8 * v66),
                swift_unknownObjectRetain(),
                sub_10000C440((uint64_t *)&unk_100285B20),
                (swift_dynamicCast() & 1) == 0))
          {
            char v147 = 2;
          }
          swift_bridgeObjectRelease();
          int v128 = v147 & 1;
        }
        else
        {
          int v128 = 0;
        }
        uint64_t v68 = v141;
        (*v119)(v144, v62, v145);
        if (qword_100284F90 != -1) {
          swift_once();
        }
        uint64_t v69 = v142;
        uint64_t v70 = sub_100128E40(v142, (uint64_t)qword_10028D320);
        uint64_t v71 = (void (*)(char *, uint64_t, uint64_t))*v137;
        uint64_t v132 = v70;
        uint64_t v133 = v71;
        ((void (*)(char *))v71)(v68);
        if (qword_100284FB0 != -1) {
          swift_once();
        }
        uint64_t v72 = v126;
        uint64_t v73 = sub_100128E40(v126, (uint64_t)qword_10028D368);
        uint64_t v74 = v125;
        (*v118)(v125, v73, v72);
        id v75 = v123;
        long long v76 = v68;
        sub_10019AC30();
        uint64_t v77 = v75;
        (*v117)(v74, v72);
        uint64_t v78 = *v136;
        (*v136)(v76, v69);
        uint64_t result = sub_10019A910();
        if (v79)
        {
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
          goto LABEL_53;
        }
        uint64_t v80 = result;
        uint64_t result = sub_10019A920();
        if (v81) {
          goto LABEL_50;
        }
        uint64_t v82 = result;
        uint64_t v131 = v78;
        uint64_t result = sub_10019A8D0();
        if (v83) {
          goto LABEL_51;
        }
        uint64_t v84 = result;
        char v130 = *(void (**)(char *, uint64_t))v135;
        v130(v144, v145);
        uint64_t v129 = *v134;
        v129(v77, v140);
        uint64_t v85 = v115;
        char v86 = (uint64_t *)(v62 + *(int *)(v115 + 20));
        uint64_t v87 = *v86;
        uint64_t v88 = v86[1];
        uint64_t v89 = v86[2];
        uint64_t v14 = v120;
        sub_10013CD20(v80, v82, v84, (uint64_t)v120);
        uint64_t v90 = v121;
        sub_10013CD20(v87, v88, v89, v121);
        uint64_t v25 = v141;
        uint64_t v6 = v142;
        v133(v141, v132, v142);
        sub_10000C440(&qword_100285B18);
        uint64_t v91 = sub_10019AC80();
        uint64_t v92 = *(void *)(v91 - 8);
        unint64_t v93 = (*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80);
        uint64_t v94 = swift_allocObject();
        *(_OWORD *)(v94 + 16) = v113;
        (*(void (**)(unint64_t, void, uint64_t))(v92 + 104))(v94 + v93, v114, v91);
        sub_10013A1AC(v94);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        char v95 = v122;
        sub_10019AC40();
        swift_bridgeObjectRelease();
        v131((char *)v25, v6);
        uint64_t v96 = sub_10019A8D0();
        LOBYTE(v91) = v97;
        v129(v95, v140);
        uint64_t v98 = v90;
        uint64_t v99 = v145;
        unint64_t v100 = v130;
        uint64_t v3 = v135;
        v130((char *)v98, v145);
        v100(v14, v99);
        if (v91) {
          uint64_t v101 = 0;
        }
        else {
          uint64_t v101 = v96;
        }
        if (__OFADD__(v101, 1))
        {
          __break(1u);
          goto LABEL_48;
        }
        uint64_t v102 = (uint64_t)v143;
        sub_10013E870();
        sub_100135F38(v102);
        uint64_t v53 = v124;
        uint64_t v3 = v85;
        int v48 = v127;
        uint64_t v25 = v112;
      }
      v52 += 3;
      if (!--v146)
      {
        swift_release();
        uint64_t v49 = v53;
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v103 = sub_10007FDE0(v25, *(void *)(v49 + 48));
  sub_10007FDE0((void *)(*v103 + 16), *(void *)(*v103 + 40));
  unint64_t v104 = sub_1001370CC();
  sub_1001306E8(v104, 0xD000000000000016, v106 | 0x8000000000000000);
  return swift_bridgeObjectRelease();
}

void *sub_100135CC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10007FDE0((void *)(v3 + 24), *(void *)(v3 + 48));
  uint64_t v7 = sub_100136D6C();
  uint64_t v8 = v7[2];
  if (v8)
  {
    uint64_t v9 = v7 + 6;
    do
    {
      long long v14 = *((_OWORD *)v9 - 1);
      uint64_t v15 = *v9;
      uint64_t v16 = *(v9 - 2);
      BOOL v17 = v16 < a1;
      if (v16 == a1)
      {
        BOOL v17 = *((void *)&v14 + 1) < a2;
        if (*((void *)&v14 + 1) == a2) {
          BOOL v17 = v15 < a3;
        }
      }
      if (v17)
      {
        long long v19 = *((_OWORD *)v9 - 1);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_10016D0C4(0, _swiftEmptyArrayStorage[2] + 1, 1);
        }
        long long v10 = v19;
        unint64_t v12 = _swiftEmptyArrayStorage[2];
        unint64_t v11 = _swiftEmptyArrayStorage[3];
        if (v12 >= v11 >> 1)
        {
          sub_10016D0C4(v11 > 1, v12 + 1, 1);
          long long v10 = v19;
        }
        _swiftEmptyArrayStorage[2] = v12 + 1;
        uint64_t v13 = &_swiftEmptyArrayStorage[3 * v12];
        *((_OWORD *)v13 + 2) = v10;
        v13[6] = v15;
      }
      v9 += 3;
      --v8;
    }
    while (v8);
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100135E08()
{
  swift_unknownObjectRelease();
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0(v0 + 24);
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0(v0 + 64);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SigningObservabilityCorrespondent()
{
  return self;
}

uint64_t sub_100135E74(uint64_t a1)
{
  uint64_t v2 = sub_10000C440((uint64_t *)&unk_1002871B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100135ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SigningFailure();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100135F38(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SigningFailure();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100135F94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10000C440(&qword_100285608);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000C440(&qword_100285610);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10019A9A0();
  sub_10019A9B0();
  uint64_t v8 = sub_10019A8E0();
  int v10 = v9;
  uint64_t result = sub_10019A910();
  uint64_t v12 = result;
  int v14 = v13;
  if ((v13 & 1) == 0)
  {
    uint64_t v12 = -result;
    if (__OFSUB__(0, result))
    {
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
  }
  uint64_t result = sub_10019A920();
  uint64_t v16 = result;
  if ((v15 & 1) == 0)
  {
    uint64_t v16 = -result;
    if (__OFSUB__(0, result)) {
      goto LABEL_29;
    }
  }
  int v43 = v15;
  uint64_t result = sub_10019A8D0();
  uint64_t v18 = result;
  if ((v17 & 1) == 0)
  {
    uint64_t v18 = -result;
    if (__OFSUB__(0, result)) {
      goto LABEL_30;
    }
  }
  int v42 = v17;
  uint64_t result = sub_10019A8F0();
  if ((v19 & 1) == 0)
  {
    BOOL v20 = __OFSUB__(0, result);
    uint64_t result = -result;
    if (v20) {
      goto LABEL_31;
    }
  }
  int v40 = v19;
  uint64_t v41 = result;
  uint64_t result = sub_10019A930();
  if ((v21 & 1) == 0)
  {
    BOOL v20 = __OFSUB__(0, result);
    uint64_t result = -result;
    if (v20) {
      goto LABEL_32;
    }
  }
  int v38 = v21;
  uint64_t v39 = result;
  uint64_t result = sub_10019A950();
  if ((v22 & 1) == 0)
  {
    BOOL v20 = __OFSUB__(0, result);
    uint64_t result = -result;
    if (v20) {
      goto LABEL_33;
    }
  }
  int v36 = v22;
  uint64_t v37 = result;
  uint64_t result = sub_10019A870();
  if ((v23 & 1) == 0)
  {
    BOOL v20 = __OFSUB__(0, result);
    uint64_t result = -result;
    if (v20) {
      goto LABEL_34;
    }
  }
  int v33 = v23;
  uint64_t v34 = result;
  int v35 = v14;
  uint64_t result = sub_10019A980();
  if ((v24 & 1) == 0)
  {
    BOOL v20 = __OFSUB__(0, result);
    uint64_t result = -result;
    if (v20) {
      goto LABEL_35;
    }
  }
  v31[7] = result;
  v31[8] = v18;
  int v32 = v10;
  uint64_t result = sub_10019A8B0();
  if ((v25 & 1) == 0 && __OFSUB__(0, result)) {
    goto LABEL_36;
  }
  v31[5] = v16;
  v31[6] = v12;
  uint64_t result = sub_10019A970();
  if ((v26 & 1) == 0 && __OFSUB__(0, result)) {
    goto LABEL_37;
  }
  v31[3] = v8;
  v31[4] = v7;
  uint64_t result = sub_10019A8A0();
  if ((v27 & 1) == 0 && __OFSUB__(0, result)) {
    goto LABEL_38;
  }
  v31[1] = v4;
  _OWORD v31[2] = a1;
  uint64_t result = sub_10019A890();
  if ((v28 & 1) == 0 && __OFSUB__(0, result)) {
    goto LABEL_39;
  }
  uint64_t v29 = sub_10019A8C0();
  if (v30) {
    return sub_10019A990();
  }
  BOOL v20 = __OFSUB__(0, v29);
  uint64_t result = -v29;
  if (!v20) {
    return sub_10019A990();
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1001362D8(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a3 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  while (v9)
  {
    unint64_t v13 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v14 = v13 | (v12 << 6);
LABEL_5:
    char v18 = *(unsigned char *)(*(void *)(a3 + 48) + v14);
    uint64_t result = a1(&v18);
    if (v3) {
      return swift_release();
    }
  }
  if (__OFADD__(v12++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v12 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v12);
  if (v16)
  {
LABEL_19:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v12 << 6);
    goto LABEL_5;
  }
  int64_t v17 = v12 + 1;
  if (v12 + 1 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_18;
  }
  int64_t v17 = v12 + 2;
  if (v12 + 2 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_18;
  }
  int64_t v17 = v12 + 3;
  if (v12 + 3 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_18;
  }
  int64_t v17 = v12 + 4;
  if (v12 + 4 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
LABEL_18:
    int64_t v12 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v10) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_100136458()
{
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0(v0 + 16);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ObservabilityCachingSignalStore()
{
  return self;
}

uint64_t sub_1001364BC()
{
  if (v0[7])
  {
    uint64_t v1 = v0[7];
  }
  else
  {
    uint64_t v2 = v0;
    uint64_t v3 = v0[5];
    uint64_t v4 = v0[6];
    sub_10007FDE0(v0 + 2, v3);
    uint64_t v1 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
    v2[7] = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100136548(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 40);
  uint64_t v4 = *(void *)(*(void *)v1 + 48);
  sub_10007FDE0((void *)(*(void *)v1 + 16), v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, v3, v4);
}

uint64_t sub_1001365B8()
{
  return sub_1001364BC();
}

uint64_t sub_1001365DC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(*(void *)v2 + 40);
  uint64_t v6 = *(void *)(*(void *)v2 + 48);
  sub_10007FDE0((void *)(*(void *)v2 + 16), v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 24))(a1, a2, v5, v6);
}

uint64_t sub_100136654(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)*v2;
  v5[7] = 0;
  swift_bridgeObjectRelease();
  uint64_t v6 = v5[5];
  uint64_t v7 = v5[6];
  sub_10007FDE0(v5 + 2, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6, v7);
}

uint64_t sub_1001366D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void **)v3;
  uint64_t v8 = *(void *)(*(void *)v3 + 56);
  if (v8)
  {
    __chkstk_darwin(a1);
    void v12[2] = v8;
    uint64_t v12[3] = a1;
    void v12[4] = v7;
    swift_bridgeObjectRetain();
    sub_1001362D8((uint64_t (*)(char *))sub_100136A10, (uint64_t)v12, a3);
    swift_bridgeObjectRelease();
  }
  uint64_t v9 = v7[5];
  uint64_t v10 = v7[6];
  sub_10007FDE0(v7 + 2, v9);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 40))(a1, a2, a3, v9, v10);
}

uint64_t sub_1001367C4(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v20 = a4;
  uint64_t v6 = sub_10000C440(&qword_100282D10);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v11 = (char *)&v19 - v10;
  uint64_t v12 = sub_10019ABA0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  int v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16) && (unint64_t v16 = sub_100136A74(*a1), (v17 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v11, *(void *)(a2 + 56) + *(void *)(v13 + 72) * v16, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  }
  sub_10000C54C((uint64_t)v11, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12) == 1)
  {
    sub_10019AAC0();
    sub_10000C4EC((uint64_t)v9);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v9, v12);
  }
  if (sub_10019AB00())
  {
    *(void *)(v20 + 56) = 0;
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_100136A10(unsigned __int8 *a1)
{
  return sub_1001367C4(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_100136A30(uint64_t a1)
{
  uint64_t v2 = sub_10019B7C0();

  return sub_100136B50(a1, v2);
}

unint64_t sub_100136A74(unsigned __int8 a1)
{
  sub_10019B7D0();
  sub_10019B7E0(a1);
  Swift::Int v2 = sub_10019B7F0();

  return sub_100136BEC(a1, v2);
}

unint64_t sub_100136AE0(char a1)
{
  char v2 = a1 & 1;
  sub_10019B7D0();
  sub_10019B7E0(a1 & 1);
  Swift::Int v3 = sub_10019B7F0();

  return sub_100136C8C(v2, v3);
}

unint64_t sub_100136B50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_100136BEC(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_100136C8C(char a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if ((((a1 & 1) == 0) ^ *(unsigned char *)(v7 + result))) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for SigningObservabilityPropertyListFileStore()
{
  return self;
}

void *sub_100136D6C()
{
  sub_10007FDE0((void *)(v0 + 16), *(void *)(v0 + 40));
  uint64_t v1 = sub_100130B58((void *)0x736572756C696166, (void *)0xE800000000000000);
  uint64_t v2 = v1[2];
  if (v2)
  {
    swift_bridgeObjectRetain();
    Swift::Int v3 = v1 + 5;
    uint64_t v4 = _swiftEmptyArrayStorage;
    do
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_100137FB4();
      if ((v9 & 1) == 0)
      {
        uint64_t v10 = v6;
        uint64_t v11 = v7;
        uint64_t v12 = v8;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v4 = sub_100150380(0, v4[2] + 1, 1, v4);
        }
        unint64_t v14 = v4[2];
        unint64_t v13 = v4[3];
        if (v14 >= v13 >> 1) {
          uint64_t v4 = sub_100150380((void *)(v13 > 1), v14 + 1, 1, v4);
        }
        _DWORD v4[2] = v14 + 1;
        uint64_t v5 = &v4[3 * v14];
        v5[4] = v10;
        void v5[5] = v11;
        v5[6] = v12;
      }
      v3 += 2;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_100136EB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10000C440((uint64_t *)&unk_100285520);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1001D6910;
  *(void *)(v6 + 56) = &type metadata for Int;
  *(void *)(v6 + 64) = &protocol witness table for Int;
  *(void *)(v6 + 32) = a1;
  *(void *)(v6 + 96) = &type metadata for Int;
  *(void *)(v6 + 104) = &protocol witness table for Int;
  *(void *)(v6 + 72) = a2;
  *(void *)(v6 + 136) = &type metadata for Int;
  *(void *)(v6 + 144) = &protocol witness table for Int;
  *(void *)(v6 + 112) = a3;
  v8._countAndFlagsBits = sub_10019B0E0();
  sub_10019B190(v8);
  swift_bridgeObjectRelease();
  return 0x736572756C696166;
}

unint64_t sub_100136F94()
{
  sub_10000C440(&qword_100285C90);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001D6910;
  strcpy((char *)(inited + 32), "firstFailure");
  *(unsigned char *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(NSDate *)(inited + 48) = sub_10019AAF0();
  *(void *)(inited + 56) = 0x6C6961467473616CLL;
  *(void *)(inited + 64) = 0xEB00000000657275;
  type metadata accessor for SigningFailure();
  sub_1001370CC();
  sub_10000C440((uint64_t *)&unk_100285B20);
  Class isa = sub_10019B020().super.isa;
  swift_bridgeObjectRelease();
  *(void *)(inited + 72) = isa;
  strcpy((char *)(inited + 80), "daysAttempted");
  *(_WORD *)(inited + 94) = -4864;
  *(NSNumber *)(inited + 96) = sub_10019B370();
  return sub_10013ECE4(inited);
}

unint64_t sub_1001370CC()
{
  sub_10000C440(&qword_100285C90);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001D6910;
  *(void *)(inited + 32) = 1918985593;
  *(void *)(inited + 40) = 0xE400000000000000;
  *(NSNumber *)(inited + 48) = sub_10019B370();
  *(void *)(inited + 56) = 0x68746E6F6DLL;
  *(void *)(inited + 64) = 0xE500000000000000;
  *(NSNumber *)(inited + 72) = sub_10019B370();
  *(void *)(inited + 80) = 7954788;
  *(void *)(inited + 88) = 0xE300000000000000;
  *(NSNumber *)(inited + 96) = sub_10019B370();
  return sub_10013ECE4(inited);
}

uint64_t sub_100137188@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_10019ABA0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  int v38 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000C440(&qword_100282D10);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v37 - v11;
  if (*(void *)(a1 + 16) && (unint64_t v13 = sub_100076504(0x6961467473726966, 0xEC0000006572756CLL), (v14 & 1) != 0))
  {
    uint64_t v40 = *(void *)(*(void *)(a1 + 56) + 8 * v13);
    swift_unknownObjectRetain();
    sub_10000C440((uint64_t *)&unk_100285B20);
    int v15 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v12, v15 ^ 1u, 1, v4);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v12, 1, 1, v4);
  }
  if (!*(void *)(a1 + 16))
  {
    uint64_t v18 = 0;
    goto LABEL_19;
  }
  unint64_t v16 = sub_100076504(0x6C6961467473616CLL, 0xEB00000000657275);
  if ((v17 & 1) == 0)
  {
    uint64_t v18 = 0;
    if (*(void *)(a1 + 16)) {
      goto LABEL_14;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    uint64_t v23 = 0;
    int v24 = 1;
    goto LABEL_20;
  }
  uint64_t v40 = *(void *)(*(void *)(a1 + 56) + 8 * v16);
  swift_unknownObjectRetain();
  sub_10000C440((uint64_t *)&unk_100285B20);
  sub_10000C440((uint64_t *)&unk_100286370);
  if (swift_dynamicCast()) {
    uint64_t v18 = v39;
  }
  else {
    uint64_t v18 = 0;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_19;
  }
LABEL_14:
  unint64_t v19 = sub_100076504(0x6574744173796164, 0xED0000646574706DLL);
  if ((v20 & 1) == 0) {
    goto LABEL_19;
  }
  uint64_t v21 = *(void *)(*(void *)(a1 + 56) + 8 * v19);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v40 = v21;
  sub_10000C440((uint64_t *)&unk_100285B20);
  int v22 = swift_dynamicCast();
  if (v22) {
    uint64_t v23 = v39;
  }
  else {
    uint64_t v23 = 0;
  }
  int v24 = v22 ^ 1;
LABEL_20:
  sub_10000C660((uint64_t)v12, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    swift_bridgeObjectRelease();
    sub_10000C4EC((uint64_t)v10);
  }
  else
  {
    char v25 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v25(v38, v10, v4);
    if (v18)
    {
      uint64_t v26 = sub_100137A1C(v18);
      if ((v29 & 1) == 0 && !v24)
      {
        uint64_t v32 = v27;
        uint64_t v33 = v28;
        uint64_t v34 = v26;
        v25(a2, v38, v4);
        uint64_t v35 = type metadata accessor for SigningFailure();
        int v36 = (uint64_t *)&a2[*(int *)(v35 + 20)];
        *int v36 = v34;
        v36[1] = v32;
        void v36[2] = v33;
        *(void *)&a2[*(int *)(v35 + 24)] = v23;
        sub_10000C4EC((uint64_t)v12);
        return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(a2, 0, 1, v35);
      }
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v38, v4);
  }
  sub_10000C4EC((uint64_t)v12);
  uint64_t v30 = type metadata accessor for SigningFailure();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(a2, 1, 1, v30);
}

unsigned __int8 *sub_1001375D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  sub_10013831C();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_10019B210();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_100076CAC();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (unsigned __int8 *)sub_10019B560();
  }
LABEL_7:
  unint64_t v13 = sub_1001376CC(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_1001376CC(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v23 = a3 + 48;
      unsigned __int8 v24 = a3 + 55;
      unsigned __int8 v25 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v23 = 58;
      }
      else
      {
        unsigned __int8 v25 = 97;
        unsigned __int8 v24 = 65;
      }
      if (result)
      {
        uint64_t v26 = 0;
        do
        {
          unsigned int v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              uint64_t v13 = 0;
              if (v27 < 0x61 || v27 >= v25) {
                return (unsigned __int8 *)v13;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63) {
            return 0;
          }
          uint64_t v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v15 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v16 = a3 + 48;
  unsigned __int8 v17 = a3 + 55;
  unsigned __int8 v18 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v16 = 58;
  }
  else
  {
    unsigned __int8 v18 = 97;
    unsigned __int8 v17 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  unint64_t v19 = result + 1;
  do
  {
    unsigned int v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        uint64_t v13 = 0;
        if (v20 < 0x61 || v20 >= v18) {
          return (unsigned __int8 *)v13;
        }
        char v21 = -87;
      }
      else
      {
        char v21 = -55;
      }
    }
    else
    {
      char v21 = -48;
    }
    uint64_t v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21))) {
      return 0;
    }
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

uint64_t sub_100137948(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    unsigned int v11 = v14;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    unsigned int v11 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    unsigned int v11 = (void *)sub_10019B560();
  }
  uint64_t result = sub_100137B8C((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    char v15 = v13 & 1;
LABEL_8:
    LOBYTE(v14[0]) = (a4 & 0x1000000000000000) != 0;
  }
  return result;
}

uint64_t sub_100137A1C(uint64_t a1)
{
  if (*(void *)(a1 + 16)
    && (sub_100076504(1918985593, 0xE400000000000000), (v2 & 1) != 0)
    && (swift_unknownObjectRetain(), sub_10000C440((uint64_t *)&unk_100285B20), (swift_dynamicCast() & 1) != 0)
    && *(void *)(a1 + 16)
    && (uint64_t v3 = v7, sub_100076504(0x68746E6F6DLL, 0xE500000000000000), (v4 & 1) != 0)
    && (swift_unknownObjectRetain(), (swift_dynamicCast() & 1) != 0)
    && *(void *)(a1 + 16)
    && (sub_100076504(7954788, 0xE300000000000000), (v5 & 1) != 0))
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    if (swift_dynamicCast()) {
      return v3;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_100137B8C(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10 = a2;
  uint64_t v11 = result;
  uint64_t v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0) {
    LOBYTE(v12) = 1;
  }
  uint64_t v13 = 4 << v12;
  unint64_t v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    uint64_t result = sub_10007C774(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      int64_t v15 = a2 >> 16;
      if (v14 != v13) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  unint64_t v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0) {
    unint64_t v16 = HIBYTE(a5) & 0xF;
  }
  if (v16 < a2 >> 16) {
    goto LABEL_95;
  }
  uint64_t result = sub_10019B1D0();
  int64_t v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    uint64_t result = sub_10007C774(v10, a4, a5);
    unint64_t v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    uint64_t result = sub_10007C774(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0) {
      goto LABEL_8;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    uint64_t result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  unint64_t v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0) {
    unint64_t v17 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (v17 < v10 >> 16) {
    goto LABEL_91;
  }
  if (v17 < a3 >> 16)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  uint64_t result = sub_10019B1D0();
LABEL_21:
  int64_t v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_90;
  }
  if (v18 < v15)
  {
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  unint64_t v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11) {
    unint64_t v19 = 0;
  }
  int v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        unsigned __int8 v31 = a6 + 48;
        unsigned __int8 v32 = a6 + 55;
        unsigned __int8 v33 = a6 + 87;
        if (a6 > 10)
        {
          unsigned __int8 v31 = 58;
        }
        else
        {
          unsigned __int8 v33 = 97;
          unsigned __int8 v32 = 65;
        }
        if (v19)
        {
          uint64_t v24 = 0;
          uint64_t v34 = v19 + 1;
          uint64_t v35 = result - 1;
          do
          {
            unsigned int v36 = *v34;
            if (v36 < 0x30 || v36 >= v31)
            {
              if (v36 < 0x41 || v36 >= v32)
              {
                uint64_t v29 = 0;
                if (v36 < 0x61 || v36 >= v33) {
                  return v29;
                }
                char v37 = -87;
              }
              else
              {
                char v37 = -55;
              }
            }
            else
            {
              char v37 = -48;
            }
            uint64_t v38 = v24 * a6;
            if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63) {
              return 0;
            }
            uint64_t v24 = v38 + (v36 + v37);
            if (__OFADD__(v38, (v36 + v37))) {
              return 0;
            }
            ++v34;
            --v35;
          }
          while (v35);
          return v24;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_94;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      unsigned __int8 v39 = a6 + 48;
      unsigned __int8 v40 = a6 + 55;
      unsigned __int8 v41 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v39 = 58;
      }
      else
      {
        unsigned __int8 v41 = 97;
        unsigned __int8 v40 = 65;
      }
      if (v19)
      {
        uint64_t v42 = 0;
        do
        {
          unsigned int v43 = *v19;
          if (v43 < 0x30 || v43 >= v39)
          {
            if (v43 < 0x41 || v43 >= v40)
            {
              uint64_t v29 = 0;
              if (v43 < 0x61 || v43 >= v41) {
                return v29;
              }
              char v44 = -87;
            }
            else
            {
              char v44 = -55;
            }
          }
          else
          {
            char v44 = -48;
          }
          uint64_t v45 = v42 * a6;
          if ((unsigned __int128)(v42 * (__int128)a6) >> 64 != (v42 * a6) >> 63) {
            return 0;
          }
          uint64_t v42 = v45 + (v43 + v44);
          if (__OFADD__(v45, (v43 + v44))) {
            return 0;
          }
          ++v19;
          --result;
        }
        while (result);
        return v45 + (v43 + v44);
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      unsigned __int8 v21 = a6 + 48;
      unsigned __int8 v22 = a6 + 55;
      unsigned __int8 v23 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v21 = 58;
      }
      else
      {
        unsigned __int8 v23 = 97;
        unsigned __int8 v22 = 65;
      }
      if (v19)
      {
        uint64_t v24 = 0;
        unsigned __int8 v25 = v19 + 1;
        uint64_t v26 = result - 1;
        while (1)
        {
          unsigned int v27 = *v25;
          if (v27 < 0x30 || v27 >= v21)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              uint64_t v29 = 0;
              if (v27 < 0x61 || v27 >= v23) {
                return v29;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v30 = v24 * a6;
          if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63) {
            return 0;
          }
          uint64_t v24 = v30 - (v27 + v28);
          if (__OFSUB__(v30, (v27 + v28))) {
            return 0;
          }
          ++v25;
          if (!--v26) {
            return v24;
          }
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

unsigned __int8 *sub_100137FB4()
{
  if (sub_10019B160() != 8) {
    goto LABEL_16;
  }
  unint64_t v0 = sub_10019B180();
  if ((unint64_t)sub_10019B180() >> 14 < v0 >> 14)
  {
    __break(1u);
    goto LABEL_27;
  }
  swift_bridgeObjectRetain();
  sub_10019B170();
  uint64_t v1 = sub_10019B220();
  unint64_t v3 = v2;
  unint64_t v5 = v4;
  unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  unint64_t v8 = sub_10019B180();
  if ((unint64_t)sub_10019B180() >> 14 < v8 >> 14)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  sub_10019B170();
  uint64_t v9 = sub_10019B220();
  unint64_t v39 = v11;
  unint64_t v40 = v10;
  unint64_t v13 = v12;
  swift_bridgeObjectRelease();
  unint64_t v14 = sub_10019B180();
  if ((unint64_t)sub_10019B180() >> 14 < v14 >> 14)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  sub_10019B170();
  uint64_t v36 = sub_10019B220();
  unint64_t v37 = v15;
  unint64_t v38 = v16;
  unint64_t v18 = v17;
  swift_bridgeObjectRelease();
  if (!((v1 ^ v3) >> 14))
  {
LABEL_29:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  uint64_t v19 = sub_100137948(v1, v3, v5, v7, 10);
  if ((v20 & 0x100) == 0)
  {
    unsigned __int8 v21 = (unsigned __int8 *)v19;
    char v22 = v20;
    swift_bridgeObjectRelease();
    unint64_t v23 = v40;
    if ((v22 & 1) == 0)
    {
      unint64_t v24 = v39;
      goto LABEL_11;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  unsigned __int8 v21 = sub_1001375D8(v1, v3, v5, v7, 10);
  char v26 = v25;
  swift_bridgeObjectRelease();
  unint64_t v24 = v39;
  if (v26) {
    goto LABEL_15;
  }
  unint64_t v23 = v40;
LABEL_11:
  if ((v9 ^ v23) < 0x4000) {
    goto LABEL_15;
  }
  sub_100137948(v9, v23, v24, v13, 10);
  if ((v27 & 0x100) != 0)
  {
    sub_1001375D8(v9, v23, v24, v13, 10);
    char v33 = v32;
    swift_bridgeObjectRelease();
    if ((v33 & 1) == 0)
    {
      unint64_t v30 = v37;
      unint64_t v29 = v38;
      goto LABEL_21;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    return 0;
  }
  char v28 = v27;
  swift_bridgeObjectRelease();
  unint64_t v30 = v37;
  unint64_t v29 = v38;
  if (v28) {
    goto LABEL_16;
  }
LABEL_21:
  if ((v36 ^ v29) < 0x4000) {
    goto LABEL_16;
  }
  sub_100137948(v36, v29, v30, v18, 10);
  if ((v34 & 0x100) != 0) {
    sub_1001375D8(v36, v29, v30, v18, 10);
  }
  char v35 = v34;
  swift_bridgeObjectRelease();
  if (v35) {
    return 0;
  }
  return v21;
}

unint64_t sub_10013831C()
{
  unint64_t result = qword_100285C98;
  if (!qword_100285C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100285C98);
  }
  return result;
}

uint64_t sub_100138440(uint64_t a1, uint64_t a2, void *a3, double a4)
{
  uint64_t v8 = type metadata accessor for ObservabilitySignal();
  __chkstk_darwin(v8);
  unint64_t v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_10000C440(&qword_100285CA8);
  __chkstk_darwin(v11 - 8);
  unint64_t v13 = &v20[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = type metadata accessor for BatchID();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  unint64_t v17 = &v20[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_bridgeObjectRetain();
  sub_10016591C(a2, a3, (uint64_t)v13);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  sub_1001395E0((uint64_t)v13, (uint64_t)v17);
  uint64_t v18 = (uint64_t)&v10[*(int *)(sub_10000C440(&qword_100285CB0) + 64)];
  *(double *)unint64_t v10 = a4;
  *((void *)v10 + 1) = a1;
  sub_100139644((uint64_t)v17, v18);
  swift_storeEnumTagMultiPayload();
  sub_10016212C((uint64_t)v10);
  sub_1001396A8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ObservabilitySignal);
  return sub_1001396A8((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for BatchID);
}

uint64_t sub_1001387B0(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for ObservabilitySignal();
  __chkstk_darwin(v4);
  unint64_t v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_10000C440(&qword_100285CA8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for BatchID();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  unint64_t v13 = &v15[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_bridgeObjectRetain();
  sub_10016591C(a1, a2, (uint64_t)v9);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  sub_1001395E0((uint64_t)v9, (uint64_t)v13);
  sub_100139644((uint64_t)v13, (uint64_t)v6);
  swift_storeEnumTagMultiPayload();
  sub_10016212C((uint64_t)v6);
  sub_1001396A8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ObservabilitySignal);
  return sub_1001396A8((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for BatchID);
}

uint64_t sub_100138D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_10000C440(&qword_100285CA0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = &v57[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_10019AD30();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v71 = &v57[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_10000C440(&qword_100285CA8);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = &v57[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v78 = type metadata accessor for BatchID();
  uint64_t v72 = *(void *)(v78 - 8);
  uint64_t v16 = __chkstk_darwin(v78);
  uint64_t v77 = &v57[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v70 = &v57[-v19];
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v69 = &v57[-v21];
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v68 = &v57[-v23];
  __chkstk_darwin(v22);
  char v67 = &v57[-v24];
  uint64_t v25 = type metadata accessor for ObservabilitySignal();
  __chkstk_darwin(v25);
  uint64_t v63 = &v57[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!a1)
  {
    int v28 = 1;
    uint64_t v29 = *(void *)(a3 + 16);
    if (v29) {
      goto LABEL_3;
    }
    goto LABEL_18;
  }
  if (a1 == 1)
  {
    int v28 = 0;
    uint64_t v29 = *(void *)(a3 + 16);
    if (v29)
    {
LABEL_3:
      int v58 = v28;
      uint64_t v59 = v26;
      uint64_t v61 = a2;
      uint64_t v62 = v3;
      unint64_t v30 = (unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48);
      unint64_t v66 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 32);
      unsigned __int8 v31 = (void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v72 + 56);
      id v75 = (unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v72 + 48);
      uint64_t v76 = v10;
      swift_bridgeObjectRetain();
      uint64_t v60 = a3;
      char v32 = (void **)(a3 + 40);
      char v33 = _swiftEmptyArrayStorage;
      unint64_t v64 = 0x800000010020C420;
      uint64_t v65 = (void *)0x8000000100213A40;
      do
      {
        char v79 = v33;
        uint64_t v35 = (uint64_t)*(v32 - 1);
        __int16 v34 = *v32;
        swift_bridgeObjectRetain_n();
        sub_10019AD10();
        uint64_t v36 = v76;
        if ((*v30)(v9, 1, v76) == 1)
        {
          sub_1000808B4((uint64_t)v9, &qword_100285CA0);
          uint64_t v80 = 0;
          unint64_t v81 = 0xE000000000000000;
          sub_10019B530(52);
          v82._countAndFlagsBits = 0xD000000000000031;
          v82._object = v65;
          sub_10019B190(v82);
          v83._countAndFlagsBits = v35;
          v83._object = v34;
          sub_10019B190(v83);
          v84._countAndFlagsBits = 34;
          v84._object = (void *)0xE100000000000000;
          sub_10019B190(v84);
          swift_bridgeObjectRelease();
          sub_10019B3B0();
          sub_100080160();
          unint64_t v37 = (void *)sub_10019B470();
          sub_10019AF50();

          uint64_t v38 = 1;
        }
        else
        {
          uint64_t v74 = v32;
          unint64_t v39 = *v66;
          unint64_t v40 = v71;
          (*v66)(v71, v9, v36);
          uint64_t v73 = v34;
          unsigned __int8 v41 = v31;
          uint64_t v42 = v15;
          unsigned int v43 = v9;
          char v44 = v30;
          uint64_t v45 = v70;
          v39(v70, v40, v36);
          uint64_t v46 = (uint64_t)v45;
          unint64_t v30 = v44;
          uint64_t v9 = v43;
          uint64_t v15 = v42;
          unsigned __int8 v31 = v41;
          char v32 = v74;
          BOOL v47 = v69;
          sub_1001395E0(v46, (uint64_t)v69);
          uint64_t v48 = (uint64_t)v47;
          uint64_t v49 = v68;
          sub_1001395E0(v48, (uint64_t)v68);
          sub_1001395E0((uint64_t)v49, (uint64_t)v15);
          uint64_t v38 = 0;
        }
        uint64_t v50 = v78;
        (*v31)(v15, v38, 1, v78);
        swift_bridgeObjectRelease();
        BOOL v51 = (*v75)(v15, 1, v50) == 1;
        char v33 = v79;
        if (v51)
        {
          sub_1000808B4((uint64_t)v15, &qword_100285CA8);
        }
        else
        {
          unint64_t v52 = v67;
          sub_1001395E0((uint64_t)v15, (uint64_t)v67);
          sub_1001395E0((uint64_t)v52, (uint64_t)v77);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            char v33 = (void *)sub_100150880(0, v33[2] + 1, 1, (unint64_t)v33);
          }
          unint64_t v54 = v33[2];
          unint64_t v53 = v33[3];
          if (v54 >= v53 >> 1) {
            char v33 = (void *)sub_100150880(v53 > 1, v54 + 1, 1, (unint64_t)v33);
          }
          void v33[2] = v54 + 1;
          sub_1001395E0((uint64_t)v77, (uint64_t)v33+ ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80))+ *(void *)(v72 + 72) * v54);
        }
        v32 += 2;
        --v29;
      }
      while (v29);
      swift_bridgeObjectRelease();
      a2 = v61;
      LOBYTE(v28) = v58;
      goto LABEL_19;
    }
LABEL_18:
    char v33 = _swiftEmptyArrayStorage;
LABEL_19:
    uint64_t v55 = (uint64_t)v63;
    *uint64_t v63 = a2;
    *(unsigned char *)(v55 + 8) = v28;
    *(void *)(v55 + 16) = v33;
    swift_storeEnumTagMultiPayload();
    sub_10016212C(v55);
    return sub_1001396A8(v55, (uint64_t (*)(void))type metadata accessor for ObservabilitySignal);
  }
  uint64_t v80 = a1;
  uint64_t result = sub_10019B740();
  __break(1u);
  return result;
}

uint64_t sub_100139518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for ObservabilitySignal();
  __chkstk_darwin(v4);
  unint64_t v6 = (uint64_t *)((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  void *v6 = a3;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  sub_10016212C((uint64_t)v6);
  sub_1001396A8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ObservabilitySignal);
  return swift_release();
}

uint64_t sub_1001395E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BatchID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100139644(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BatchID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001396A8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

ValueMetadata *type metadata accessor for ObservabilityErrorType()
{
  return &type metadata for ObservabilityErrorType;
}

unint64_t sub_10013971C()
{
  unint64_t result = qword_100285CB8;
  if (!qword_100285CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100285CB8);
  }
  return result;
}

uint64_t type metadata accessor for DefaultObservabilityClientErrorBucketConfigurationStore()
{
  return self;
}

uint64_t sub_100139794()
{
  sub_10000C440(&qword_100283F90);
  sub_10019AEB0();
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1001D69D0;
  sub_10000C440(&qword_100283EC0);
  uint64_t v39 = sub_10019AE80();
  uint64_t v0 = *(void *)(v39 - 8);
  uint64_t v1 = *(void *)(v0 + 72);
  unint64_t v2 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1001D69A0;
  uint64_t v4 = (uint64_t *)(v3 + v2);
  uint64_t *v4 = sub_100076838((uint64_t)&off_100236CF8);
  unsigned int v40 = enum case for IntBucketContents.individualValues(_:);
  uint64_t v5 = *(void (**)(uint64_t *))(v0 + 104);
  v5(v4);
  sub_10019AEA0();
  uint64_t v6 = v1;
  uint64_t v36 = 3 * v1;
  uint64_t v38 = v1;
  uint64_t v7 = 2 * v1;
  uint64_t v35 = 2 * v1;
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1001D6910;
  unint64_t v9 = v8 + v2;
  *(_OWORD *)(v8 + v2) = xmmword_1001D69E0;
  ((void (*)(unint64_t, void, uint64_t))v5)(v8 + v2, enum case for IntBucketContents.range(_:), v39);
  *(_OWORD *)(v9 + v6) = xmmword_1001D69F0;
  ((void (*)(void))v5)();
  *(_OWORD *)(v9 + v7) = xmmword_1001D6A00;
  ((void (*)(void))v5)();
  sub_10019AEA0();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1001D69A0;
  uint64_t v11 = (uint64_t *)(v10 + v2);
  uint64_t *v11 = sub_100076838((uint64_t)&off_100236D28);
  ((void (*)(uint64_t *, void, uint64_t))v5)(v11, v40, v39);
  sub_10019AEA0();
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1001D69A0;
  uint64_t v13 = (uint64_t *)(v12 + v2);
  *uint64_t v13 = sub_100076838((uint64_t)&off_100236D58);
  ((void (*)(uint64_t *, void, uint64_t))v5)(v13, v40, v39);
  sub_10019AEA0();
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1001D69A0;
  uint64_t v15 = (uint64_t *)(v14 + v2);
  *uint64_t v15 = sub_100076838((uint64_t)&off_100236D80);
  ((void (*)(uint64_t *, void, uint64_t))v5)(v15, v40, v39);
  sub_10019AEA0();
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1001D69A0;
  uint64_t v17 = (uint64_t *)(v16 + v2);
  *uint64_t v17 = sub_100076838((uint64_t)&off_100236DA8);
  ((void (*)(uint64_t *, void, uint64_t))v5)(v17, v40, v39);
  sub_10019AEA0();
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1001D69A0;
  uint64_t v19 = (uint64_t *)(v18 + v2);
  *uint64_t v19 = sub_100076838((uint64_t)&off_100236DD8);
  ((void (*)(uint64_t *, void, uint64_t))v5)(v19, v40, v39);
  sub_10019AEA0();
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1001D69A0;
  uint64_t v21 = (uint64_t *)(v20 + v2);
  *uint64_t v21 = sub_100076838((uint64_t)&off_100236E00);
  ((void (*)(uint64_t *, void, uint64_t))v5)(v21, v40, v39);
  sub_10019AEA0();
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1001D69A0;
  uint64_t v23 = (uint64_t *)(v22 + v2);
  *uint64_t v23 = sub_100076838((uint64_t)&off_100236E40);
  ((void (*)(uint64_t *, void, uint64_t))v5)(v23, v40, v39);
  sub_10019AEA0();
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1001D6A10;
  uint64_t v25 = (uint64_t *)(v24 + v2);
  *uint64_t v25 = sub_100076838((uint64_t)&off_100236E70);
  ((void (*)(uint64_t *, void, uint64_t))v5)(v25, v40, v39);
  *(_OWORD *)((char *)v25 + v38) = xmmword_1001D6A20;
  ((void (*)(void))v5)();
  *(_OWORD *)((char *)v25 + v35) = xmmword_1001D6A30;
  ((void (*)(void))v5)();
  *(_OWORD *)((char *)v25 + v36) = xmmword_1001D6A40;
  ((void (*)(void))v5)();
  uint64_t v26 = 4 * v38;
  *(_OWORD *)((char *)v25 + v26) = xmmword_1001D6A50;
  ((void (*)(void))v5)();
  *(_OWORD *)((char *)v25 + v26 + v38) = xmmword_1001D6A60;
  ((void (*)(void))v5)();
  *(_OWORD *)((char *)v25 + 6 * v38) = xmmword_1001D6A70;
  ((void (*)(void))v5)();
  sub_10019AEA0();
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1001D6A80;
  int v28 = (uint64_t *)(v27 + v2);
  *int v28 = sub_100076838((uint64_t)&off_100236EA0);
  ((void (*)(uint64_t *, void, uint64_t))v5)(v28, v40, v39);
  *(_OWORD *)((char *)v28 + v38) = xmmword_1001D6A90;
  ((void (*)(void))v5)();
  sub_10019AEA0();
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1001D69A0;
  *(_OWORD *)(v29 + v2) = xmmword_1001D6AA0;
  ((void (*)(void))v5)();
  sub_10019AEA0();
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1001D69A0;
  unsigned __int8 v31 = (uint64_t *)(v30 + v2);
  *unsigned __int8 v31 = sub_100076838((uint64_t)&off_100236EC8);
  ((void (*)(uint64_t *, void, uint64_t))v5)(v31, v40, v39);
  sub_10019AEA0();
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1001D6A80;
  char v33 = (uint64_t *)(v32 + v2);
  *char v33 = sub_100076838((uint64_t)&off_100236EF8);
  ((void (*)(uint64_t *, void, uint64_t))v5)(v33, v40, v39);
  *(_OWORD *)((char *)v33 + v38) = xmmword_1001D6AB0;
  ((void (*)(void))v5)();
  sub_10019AEA0();

  return IntBucketConfiguration.init(unknownBucketName:discreteBuckets:classifiedBuckets:)(100011, _swiftEmptyArrayStorage, v37);
}

uint64_t sub_10013A194()
{
  return sub_100139794();
}

void *sub_10013A1AC(uint64_t a1)
{
  uint64_t v2 = sub_10019AC80();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_10000C440(&qword_100285D60);
    uint64_t v9 = sub_10019B520();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    unsigned __int8 v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_10013A5E0(&qword_100285D68);
      uint64_t v16 = sub_10019B050();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_10013A5E0(&qword_100285D70);
          char v23 = sub_10019B090();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        unint64_t result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

Swift::Int sub_10013A49C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10000C440(&qword_100285D58);
    uint64_t v3 = sub_10019B520();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      Swift::UInt v7 = *(unsigned __int8 *)(v6 + v4);
      sub_10019B7D0();
      sub_10019B7E0(v7);
      Swift::Int result = sub_10019B7F0();
      uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v10 = result & ~v9;
      unint64_t v11 = v10 >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
      uint64_t v13 = 1 << v10;
      uint64_t v14 = *(void *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(unsigned __int8 *)(v14 + v10) == v7) {
          goto LABEL_3;
        }
        uint64_t v15 = ~v9;
        while (1)
        {
          unint64_t v10 = (v10 + 1) & v15;
          unint64_t v11 = v10 >> 6;
          uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
          uint64_t v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0) {
            break;
          }
          if (*(unsigned __int8 *)(v14 + v10) == v7) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v5 + 8 * v11) = v13 | v12;
      *(unsigned char *)(v14 + v10) = v7;
      uint64_t v16 = *(void *)(v3 + 16);
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

uint64_t sub_10013A5E0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10019AC80();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10013A624@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v66 = a2;
  uint64_t v63 = sub_10019ABA0();
  uint64_t v62 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  char v67 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TimeRange();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100284FA8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_10019AF80();
  sub_100128E40(v9, (uint64_t)qword_10028D348);
  sub_10013CB74(a1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for TimeRange);
  swift_retain();
  unint64_t v10 = sub_10019AF60();
  os_log_type_t v11 = sub_10019B390();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    v68[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136446466;
    v79[0] = sub_10007C26C(0x796C696164, 0xE500000000000000, v68);
    sub_10019B4A0();
    swift_release();
    *(_WORD *)(v12 + 12) = 2082;
    uint64_t v13 = sub_100155DB0();
    v79[0] = sub_10007C26C(v13, v14, v68);
    sub_10019B4A0();
    swift_bridgeObjectRelease();
    sub_10013CBDC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for TimeRange);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Generating %{public}s report for %{public}s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release();
    sub_10013CBDC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for TimeRange);
  }

  uint64_t v15 = v2[19];
  uint64_t v16 = v2[20];
  sub_10007FDE0(v2 + 16, v15);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 24))(v79, a1, 2, v15, v16);
  uint64_t v77 = 0;
  uint64_t v78 = 0;
  uint64_t v76 = 0;
  uint64_t v17 = v2[4];
  uint64_t v18 = v3[5];
  swift_bridgeObjectRetain();
  uint64_t v73 = sub_10013B030(v17, v18, (uint64_t (*)(uint64_t))sub_10013C30C, (void (*)(BOOL, uint64_t, uint64_t))sub_10016D044);
  uint64_t v74 = v19;
  uint64_t v75 = v20;
  uint64_t v21 = v3[2];
  uint64_t v22 = v3[3];
  swift_bridgeObjectRetain();
  v71[0] = sub_10013B030(v21, v22, (uint64_t (*)(uint64_t))sub_10013C0F4, (void (*)(BOOL, uint64_t, uint64_t))sub_10016CFC4);
  v71[1] = v23;
  uint64_t v72 = v24;
  uint64_t v69 = _swiftEmptyArrayStorage;
  uint64_t v70 = _swiftEmptyArrayStorage;
  uint64_t v25 = sub_10007FDE0(v79, v79[3]);
  __chkstk_darwin(v25);
  *(&v56 - 8) = (uint64_t)&v76;
  *(&v56 - 7) = (uint64_t)v71;
  *(&v56 - 6) = (uint64_t)&v69;
  *(&v56 - 5) = (uint64_t)&v70;
  *(&v56 - 4) = (uint64_t)&v78;
  *(&v56 - 3) = (uint64_t)&v77;
  *(&v56 - 2) = (uint64_t)&v73;
  sub_10019B250();
  uint64_t v26 = (uint64_t)v70;
  uint64_t v27 = swift_bridgeObjectRetain();
  uint64_t v65 = sub_10013B8F0(v27);
  uint64_t v64 = v28;
  swift_bridgeObjectRelease();
  sub_10007FDE0(v3 + 21, v3[24]);
  uint64_t v29 = swift_bridgeObjectRetain();
  sub_100157608(v29);
  swift_bridgeObjectRelease();
  uint64_t v30 = v78;
  if (v78 > 0 || v77 > 0 || v76 > 0) {
    goto LABEL_22;
  }
  uint64_t v61 = 0;
  uint64_t v60 = a1;
  uint64_t v31 = v74;
  uint64_t v32 = *(void *)(v75 + 16);
  if (v32)
  {
    uint64_t v33 = v75 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1000800FC(v33, (uint64_t)v68, &qword_100285E50);
      uint64_t v34 = v68[0];
      sub_1000808B4((uint64_t)v68, &qword_100285E50);
      if (v34) {
        goto LABEL_21;
      }
      v33 += 48;
      if (!--v32)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  uint64_t v59 = v31;
  uint64_t v35 = *(void *)(v72 + 16);
  if (v35)
  {
    uint64_t v36 = v72 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1000800FC(v36, (uint64_t)v68, (uint64_t *)&unk_100287F20);
      uint64_t v37 = v68[0];
      sub_1000808B4((uint64_t)v68, (uint64_t *)&unk_100287F20);
      if (v37) {
        break;
      }
      v36 += 48;
      if (!--v35)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
    }
LABEL_21:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a1 = v60;
    goto LABEL_22;
  }
LABEL_19:
  v68[0] = v26;
  sub_10000C440(&qword_100285E58);
  sub_10013CCDC(&qword_100285E60, &qword_100285E58);
  char v38 = sub_10019B380();
  a1 = v60;
  if (v38)
  {
LABEL_22:
    uint64_t v40 = v62;
    uint64_t v41 = v63;
    uint64_t v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 16))(v67, a1, v63);
    uint64_t v59 = v77;
    uint64_t v60 = v76;
    uint64_t v61 = v73;
    __chkstk_darwin(v42);
    *(&v56 - 2) = (uint64_t)&type metadata for Int;
    *(&v56 - 1) = (uint64_t)&protocol witness table for Int;
    swift_getKeyPath();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v43 = swift_bridgeObjectRetain();
    int v58 = sub_10013CA90(v43);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v44 = swift_release_n();
    uint64_t v57 = v71[0];
    __chkstk_darwin(v44);
    *(&v56 - 2) = (uint64_t)&type metadata for Double;
    *(&v56 - 1) = (uint64_t)&protocol witness table for Double;
    swift_getKeyPath();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v45 = swift_bridgeObjectRetain();
    uint64_t v46 = sub_10013CA90(v45);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release_n();
    uint64_t v47 = v70[2];
    swift_retain();
    uint64_t v48 = sub_10014BDFC();
    swift_retain();
    swift_release();
    uint64_t v49 = sub_10014BDFC();
    swift_release_n();
    swift_release();
    uint64_t v50 = v66;
    (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v66, v67, v41);
    BOOL v51 = (int *)type metadata accessor for ObservabilityDailyReport();
    *(void *)(v50 + v51[5]) = v30;
    *(void *)(v50 + v51[6]) = v59;
    *(void *)(v50 + v51[7]) = v60;
    unint64_t v52 = (uint64_t *)(v50 + v51[8]);
    unint64_t v53 = v58;
    *unint64_t v52 = v61;
    v52[1] = (uint64_t)v53;
    unint64_t v54 = (void *)(v50 + v51[9]);
    *unint64_t v54 = v57;
    v54[1] = v46;
    *(void *)(v50 + v51[10]) = v47;
    *(void *)(v50 + v51[11]) = v48;
    *(void *)(v50 + v51[12]) = v49;
    (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v51 - 1) + 56))(v50, 0, 1, v51);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v79);
  }
  uint64_t v39 = type metadata accessor for ObservabilityDailyReport();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v66, 1, 1, v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v79);
}

uint64_t sub_10013B030(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), void (*a4)(BOOL, uint64_t, uint64_t))
{
  swift_bridgeObjectRetain();
  uint64_t v8 = a3(a2);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    uint64_t v18 = a1;
    uint64_t v21 = _swiftEmptyArrayStorage;
    a4(0, v9, 0);
    uint64_t v10 = v8 + 32;
    os_log_type_t v11 = _swiftEmptyArrayStorage;
    do
    {
      sub_10010B568(v10, (uint64_t)v19);
      sub_10010B568((uint64_t)v19, (uint64_t)v20 + 8);
      *(void *)&v20[0] = 0;
      _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v19);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        a4(0, v11[2] + 1, 1);
        os_log_type_t v11 = v21;
      }
      unint64_t v13 = v11[2];
      unint64_t v12 = v11[3];
      if (v13 >= v12 >> 1)
      {
        a4(v12 > 1, v13 + 1, 1);
        os_log_type_t v11 = v21;
      }
      void v11[2] = v13 + 1;
      unint64_t v14 = &v11[6 * v13];
      long long v15 = v20[0];
      long long v16 = v20[2];
      void v14[3] = v20[1];
      v14[4] = v16;
      void v14[2] = v15;
      v10 += 40;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    return v18;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return a1;
}

void sub_10013B1C4(uint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, unint64_t *a5, void *a6, void *a7, uint64_t a8)
{
  v43[0] = a8;
  v43[1] = a3;
  uint64_t v44 = a7;
  uint64_t v45 = a5;
  uint64_t v46 = a4;
  uint64_t v11 = type metadata accessor for BatchID();
  uint64_t v47 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  unint64_t v14 = (char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)v43 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)v43 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)v43 - v21;
  unint64_t v23 = type metadata accessor for ObservabilitySignal();
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)v43 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10013CB74(a1, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for ObservabilitySignal);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v26 = *((void *)v25 + 1);
      BOOL v27 = __OFADD__(*a2, v26);
      unint64_t v28 = *a2 + v26;
      if (v27)
      {
        __break(1u);
LABEL_23:
        unint64_t v23 = sub_100150880(0, *(void *)(v23 + 16) + 1, 1, v23);
        *a2 = v23;
LABEL_5:
        unint64_t v32 = *(void *)(v23 + 16);
        unint64_t v31 = *(void *)(v23 + 24);
        if (v32 >= v31 >> 1)
        {
          unint64_t v23 = sub_100150880(v31 > 1, v32 + 1, 1, v23);
          *a2 = v23;
        }
        *(void *)(v23 + 16) = v32 + 1;
        sub_10013CC3C((uint64_t)v20, v23+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(void *)(v47 + 72) * v32, (uint64_t (*)(void))type metadata accessor for BatchID);
        uint64_t v33 = type metadata accessor for BatchID;
        uint64_t v34 = (uint64_t)v22;
LABEL_14:
        sub_10013CBDC(v34, (uint64_t (*)(void))v33);
      }
      else
      {
        *a2 = v28;
        sub_10013B6E8();
      }
      return;
    case 1u:
      uint64_t v29 = sub_10000C440(&qword_100285CB0);
      sub_10013CC3C((uint64_t)&v25[*(int *)(v29 + 64)], (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for BatchID);
      sub_10013CB74((uint64_t)v22, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for BatchID);
      a2 = v46;
      unint64_t v23 = *v46;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a2 = v23;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_5;
      }
      goto LABEL_23;
    case 3u:
      sub_10013CC3C((uint64_t)v25, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for BatchID);
      sub_10013CB74((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for BatchID);
      uint64_t v35 = v45;
      unint64_t v36 = *v45;
      char v37 = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v35 = v36;
      if ((v37 & 1) == 0)
      {
        unint64_t v36 = sub_100150880(0, *(void *)(v36 + 16) + 1, 1, v36);
        *uint64_t v35 = v36;
      }
      unint64_t v39 = *(void *)(v36 + 16);
      unint64_t v38 = *(void *)(v36 + 24);
      if (v39 >= v38 >> 1)
      {
        unint64_t v36 = sub_100150880(v38 > 1, v39 + 1, 1, v36);
        *uint64_t v35 = v36;
      }
      *(void *)(v36 + 16) = v39 + 1;
      sub_10013CC3C((uint64_t)v14, v36+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(void *)(v47 + 72) * v39, (uint64_t (*)(void))type metadata accessor for BatchID);
      uint64_t v33 = type metadata accessor for BatchID;
      uint64_t v34 = (uint64_t)v17;
      goto LABEL_14;
    case 4u:
      if (__OFADD__(*a6, 1))
      {
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
        JUMPOUT(0x10013B6D0);
      }
      ++*a6;
      uint64_t v40 = sub_10019ABA0();
      (*(void (**)(char *, uint64_t))(*(void *)(v40 - 8) + 8))(v25, v40);
      break;
    case 5u:
      if (__OFADD__(*v44, 1)) {
        goto LABEL_25;
      }
      double v41 = *(double *)v25;
      ++*v44;
      double v42 = round(v41 * 1000.0);
      if ((~*(void *)&v42 & 0x7FF0000000000000) == 0) {
        goto LABEL_26;
      }
      if (v42 <= -9.22337204e18) {
        goto LABEL_27;
      }
      if (v42 >= 9.22337204e18) {
        goto LABEL_28;
      }
      sub_10013B7EC();
      break;
    default:
      uint64_t v33 = type metadata accessor for ObservabilitySignal;
      uint64_t v34 = (uint64_t)v25;
      goto LABEL_14;
  }
}

void sub_10013B6E8()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = v1[2];
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    unint64_t v4 = 0;
    while (1)
    {
      sub_10007FDE0(&v1[v3 + 5], v1[v3 + 8]);
      if (sub_10019B260()) {
        break;
      }
      ++v4;
      v3 += 6;
      if (v2 == v4)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v1 = sub_10013CA7C(v1);
    }
    if (v4 >= v1[2])
    {
      __break(1u);
    }
    else
    {
      uint64_t v5 = v1[v3 + 4];
      BOOL v6 = __OFADD__(v5, 1);
      uint64_t v7 = v5 + 1;
      if (!v6)
      {
        v1[v3 + 4] = v7;
        *(void *)(v0 + 16) = v1;
        return;
      }
    }
    __break(1u);
  }
}

uint64_t sub_10013B7EC()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = v1[2];
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    unint64_t v4 = 0;
    while (1)
    {
      sub_10007FDE0(&v1[v3 + 5], v1[v3 + 8]);
      if (sub_10019B260()) {
        break;
      }
      ++v4;
      v3 += 6;
      if (v2 == v4) {
        return swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_10013CA68(v1);
      uint64_t v1 = (void *)result;
    }
    if (v4 >= v1[2])
    {
      __break(1u);
    }
    else
    {
      uint64_t v6 = v1[v3 + 4];
      BOOL v7 = __OFADD__(v6, 1);
      uint64_t v8 = v6 + 1;
      if (!v7)
      {
        v1[v3 + 4] = v8;
        *(void *)(v0 + 16) = v1;
        return result;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10013B8F0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for BatchID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3 - 8);
  uint64_t v58 = (uint64_t)v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10010B568(v1 + 88, (uint64_t)&v65);
  type metadata accessor for ErrorCollector();
  uint64_t v6 = (void *)swift_allocObject();
  v6[7] = sub_100142550((uint64_t)_swiftEmptyArrayStorage);
  BOOL v7 = v6 + 7;
  uint64_t v60 = v6 + 2;
  sub_100132A7C(&v65, (uint64_t)(v6 + 2));
  sub_10010B568(v1 + 48, (uint64_t)&v65);
  uint64_t v8 = (void *)swift_allocObject();
  v8[7] = sub_100142550((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v9 = v8 + 7;
  uint64_t v59 = v8 + 2;
  sub_100132A7C(&v65, (uint64_t)(v8 + 2));
  uint64_t v57 = *(void *)(a1 + 16);
  if (!v57) {
    return (uint64_t)v6;
  }
  uint64_t v55 = (void *)(v1 + 168);
  uint64_t v56 = v1;
  uint64_t v54 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v10 = *(void *)(v4 + 72);
  v52[1] = a1;
  uint64_t v53 = v10;
  swift_bridgeObjectRetain();
  uint64_t v11 = 0;
  uint64_t v12 = v58;
  while (1)
  {
    sub_10013CB74(v54 + v53 * v11, v12, (uint64_t (*)(void))type metadata accessor for BatchID);
    sub_10007FDE0(v55, *(void *)(v56 + 192));
    sub_100157920(&v62);
    uint64_t v13 = sub_10007FDE0(&v62, v64);
    __chkstk_darwin(v13);
    (*(void (**)(char *))(v15 + 16))((char *)v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    sub_10010B318((uint64_t *)&v65);
    sub_10019B230();
    _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)&v62);
    sub_100132FEC((uint64_t)&v65, AssociatedTypeWitness);
    sub_10019B490();
    unsigned __int8 v16 = v63;
    if (v63 != 255) {
      break;
    }
LABEL_3:
    ++v11;
    uint64_t v12 = v58;
    sub_10013CBDC(v58, (uint64_t (*)(void))type metadata accessor for BatchID);
    _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)&v65);
    if (v11 == v57)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v6;
    }
  }
  while ((v16 & 1) != 0)
  {
    sub_10007FDE0(v59, v8[5]);
    uint64_t v32 = sub_10019AE90();
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v61 = v8[7];
    uint64_t v34 = v61;
    v8[7] = 0x8000000000000000;
    unint64_t v25 = sub_100136A30(v32);
    uint64_t v36 = *(void *)(v34 + 16);
    BOOL v37 = (v35 & 1) == 0;
    uint64_t v38 = v36 + v37;
    if (__OFADD__(v36, v37)) {
      goto LABEL_33;
    }
    char v39 = v35;
    if (*(void *)(v34 + 24) >= v38)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_100141DC8();
        uint64_t v34 = v61;
      }
    }
    else
    {
      sub_100140E6C(v38, isUniquelyReferenced_nonNull_native);
      uint64_t v34 = v61;
      unint64_t v40 = sub_100136A30(v32);
      if ((v39 & 1) != (v41 & 1)) {
        goto LABEL_38;
      }
      unint64_t v25 = v40;
    }
    void *v9 = v34;
    swift_bridgeObjectRelease();
    uint64_t v47 = (void *)*v9;
    if ((v39 & 1) == 0)
    {
      v47[(v25 >> 6) + 8] |= 1 << v25;
      uint64_t v48 = 8 * v25;
      *(void *)(v47[6] + v48) = v32;
      *(void *)(v47[7] + v48) = 0;
      uint64_t v49 = v47[2];
      BOOL v19 = __OFADD__(v49, 1);
      uint64_t v50 = v49 + 1;
      if (v19) {
        goto LABEL_37;
      }
      v47[2] = v50;
    }
    uint64_t v17 = v47[7];
    uint64_t v18 = *(void *)(v17 + 8 * v25);
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19) {
      goto LABEL_34;
    }
LABEL_7:
    *(void *)(v17 + 8 * v25) = v20;
    swift_endAccess();
    sub_100132FEC((uint64_t)&v65, AssociatedTypeWitness);
    sub_10019B490();
    unsigned __int8 v16 = v63;
    if (v63 == 255) {
      goto LABEL_3;
    }
  }
  sub_10007FDE0(v60, v6[5]);
  uint64_t v21 = sub_10019AE90();
  swift_beginAccess();
  char v22 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v61 = v6[7];
  uint64_t v23 = v61;
  v6[7] = 0x8000000000000000;
  unint64_t v25 = sub_100136A30(v21);
  uint64_t v26 = *(void *)(v23 + 16);
  BOOL v27 = (v24 & 1) == 0;
  uint64_t v28 = v26 + v27;
  if (!__OFADD__(v26, v27))
  {
    char v29 = v24;
    if (*(void *)(v23 + 24) >= v28)
    {
      if ((v22 & 1) == 0)
      {
        sub_100141DC8();
        uint64_t v23 = v61;
      }
    }
    else
    {
      sub_100140E6C(v28, v22);
      uint64_t v23 = v61;
      unint64_t v30 = sub_100136A30(v21);
      if ((v29 & 1) != (v31 & 1)) {
        goto LABEL_38;
      }
      unint64_t v25 = v30;
    }
    void *v7 = v23;
    swift_bridgeObjectRelease();
    double v42 = (void *)*v7;
    if ((v29 & 1) == 0)
    {
      v42[(v25 >> 6) + 8] |= 1 << v25;
      uint64_t v43 = 8 * v25;
      *(void *)(v42[6] + v43) = v21;
      *(void *)(v42[7] + v43) = 0;
      uint64_t v44 = v42[2];
      BOOL v19 = __OFADD__(v44, 1);
      uint64_t v45 = v44 + 1;
      if (v19) {
        goto LABEL_36;
      }
      v42[2] = v45;
    }
    uint64_t v17 = v42[7];
    uint64_t v46 = *(void *)(v17 + 8 * v25);
    BOOL v19 = __OFADD__(v46, 1);
    uint64_t v20 = v46 + 1;
    if (v19) {
      goto LABEL_35;
    }
    goto LABEL_7;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  uint64_t result = sub_10019B760();
  __break(1u);
  return result;
}

uint64_t sub_10013BF1C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0(v0 + 48);
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0(v0 + 88);
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0(v0 + 128);
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0(v0 + 168);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ObservabilityDailyReporter()
{
  return self;
}

uint64_t sub_10013BFA0()
{
  return 2;
}

uint64_t sub_10013BFA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10000C440(&qword_100285E48);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10013A624(a1, (uint64_t)v6);
  uint64_t v7 = type metadata accessor for ObservabilityDailyReport();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7) == 1)
  {
    uint64_t result = sub_1000808B4((uint64_t)v6, &qword_100285E48);
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(void *)(a2 + 32) = 0;
  }
  else
  {
    *(void *)(a2 + 24) = v7;
    *(void *)(a2 + 32) = &off_1002376B0;
    uint64_t v9 = sub_10010B318((uint64_t *)a2);
    return sub_10013CC3C((uint64_t)v6, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ObservabilityDailyReport);
  }
  return result;
}

void sub_10013C0CC(uint64_t a1)
{
  sub_10013B1C4(a1, *(unint64_t **)(v1 + 16), *(void *)(v1 + 24), *(unint64_t **)(v1 + 32), *(unint64_t **)(v1 + 40), *(void **)(v1 + 48), *(void **)(v1 + 56), *(void *)(v1 + 64));
}

void *sub_10013C0F4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 32 + 8 * v1 - 8);
  uint64_t v4 = 2 * v1 - 1;
  v15[0] = a1;
  v15[1] = a1 + 32;
  if (v1 == 1) {
    uint64_t v4 = 1;
  }
  v15[2] = 0;
  v15[3] = v4;
  void v15[4] = a1;
  v15[5] = a1 + 32;
  v15[6] = 1;
  v15[7] = (2 * v1) | 1;
  sub_10000C440(&qword_100285E68);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1001D69A0;
  *(void *)(v5 + 56) = sub_10000C440(&qword_100285E70);
  *(void *)(v5 + 64) = sub_10013CCDC(&qword_100285E78, &qword_100285E70);
  *(void *)(v5 + 32) = v2;
  uint64_t v14 = v5;
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_10013C504(v15);
  uint64_t v7 = sub_100149350((uint64_t)v6);
  swift_bridgeObjectRelease();
  sub_10014E340((uint64_t)v7);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = (uint64_t)sub_1001501F4(0, *(void *)(v5 + 16) + 1, 1, (char *)v5);
  }
  unint64_t v9 = *(void *)(v5 + 16);
  unint64_t v8 = *(void *)(v5 + 24);
  if (v9 >= v8 >> 1) {
    uint64_t v5 = (uint64_t)sub_1001501F4((char *)(v8 > 1), v9 + 1, 1, (char *)v5);
  }
  uint64_t v12 = sub_10000C440(&qword_100285E80);
  uint64_t v13 = sub_10013CCDC(&qword_100285E88, &qword_100285E80);
  *(void *)&long long v11 = v3;
  *(void *)(v5 + 16) = v9 + 1;
  sub_100132A7C(&v11, v5 + 40 * v9 + 32);
  swift_unknownObjectRelease_n();
  return (void *)v5;
}

void *sub_10013C30C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 32 + 8 * v1 - 8);
  uint64_t v4 = 2 * v1 - 1;
  v15[0] = a1;
  v15[1] = a1 + 32;
  if (v1 == 1) {
    uint64_t v4 = 1;
  }
  v15[2] = 0;
  v15[3] = v4;
  void v15[4] = a1;
  v15[5] = a1 + 32;
  v15[6] = 1;
  v15[7] = (2 * v1) | 1;
  sub_10000C440((uint64_t *)&unk_100287F50);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1001D69A0;
  *(void *)(v5 + 56) = sub_10000C440(&qword_100285E90);
  *(void *)(v5 + 64) = sub_10013CCDC(&qword_100285E98, &qword_100285E90);
  *(void *)(v5 + 32) = v2;
  uint64_t v14 = v5;
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_10013C7B8(v15);
  uint64_t v7 = sub_100149488((uint64_t)v6);
  swift_bridgeObjectRelease();
  sub_10014E354((uint64_t)v7);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = (uint64_t)sub_100150208(0, *(void *)(v5 + 16) + 1, 1, (char *)v5);
  }
  unint64_t v9 = *(void *)(v5 + 16);
  unint64_t v8 = *(void *)(v5 + 24);
  if (v9 >= v8 >> 1) {
    uint64_t v5 = (uint64_t)sub_100150208((char *)(v8 > 1), v9 + 1, 1, (char *)v5);
  }
  uint64_t v12 = sub_10000C440(&qword_100285EA0);
  uint64_t v13 = sub_10013CCDC(&qword_100285EA8, &qword_100285EA0);
  *(void *)&long long v11 = v3;
  *(void *)(v5 + 16) = v9 + 1;
  sub_100132A7C(&v11, v5 + 40 * v9 + 32);
  swift_unknownObjectRelease_n();
  return (void *)v5;
}

void *sub_10013C504(void *result)
{
  uint64_t v1 = result[2];
  uint64_t v2 = result[3] >> 1;
  if (__OFSUB__(v2, v1))
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v3 = (uint64_t)result;
  uint64_t v4 = result[6];
  uint64_t v5 = result[7] >> 1;
  if (!__OFSUB__(v5, v4))
  {
    uint64_t v34 = result[7] >> 1;
    uint64_t v35 = result[6];
    uint64_t v36 = result[3] >> 1;
    uint64_t v37 = result[2];
    uint64_t v33 = result[1];
    uint64_t v32 = result[5];
    if (v5 - v4 >= v2 - v1) {
      uint64_t v6 = v2 - v1;
    }
    else {
      uint64_t v6 = v5 - v4;
    }
    uint64_t result = (void *)sub_10016D024(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0) {
      goto LABEL_46;
    }
    uint64_t result = (void *)sub_10013CCA4(v3);
    if (v6)
    {
      uint64_t v7 = 0;
      uint64_t v9 = v34;
      uint64_t v8 = v35;
      uint64_t v10 = v35 - v34;
      if (v35 <= v34) {
        uint64_t v11 = v34;
      }
      else {
        uint64_t v11 = v35;
      }
      uint64_t v12 = v11 - v35;
      uint64_t v14 = v32;
      uint64_t v13 = v33;
      uint64_t v16 = v36;
      uint64_t v15 = v37;
      do
      {
        if (!(v37 - v36 + v7))
        {
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }
        if (v15 + v7 >= v16 || v7 >= v6) {
          goto LABEL_37;
        }
        if (!(v10 + v7)) {
          goto LABEL_38;
        }
        if (v12 == v7) {
          goto LABEL_39;
        }
        double v17 = *(double *)(v33 + 8 * v37 + 8 * v7);
        double v18 = *(double *)(v32 + 8 * v35 + 8 * v7);
        if (v17 > v18) {
          goto LABEL_40;
        }
        unint64_t v20 = _swiftEmptyArrayStorage[2];
        unint64_t v19 = _swiftEmptyArrayStorage[3];
        if (v20 >= v19 >> 1)
        {
          uint64_t v31 = v10;
          uint64_t result = (void *)sub_10016D024(v19 > 1, v20 + 1, 1);
          uint64_t v10 = v31;
          uint64_t v14 = v32;
          uint64_t v13 = v33;
          uint64_t v9 = v34;
          uint64_t v8 = v35;
          uint64_t v16 = v36;
          uint64_t v15 = v37;
        }
        ++v7;
        _swiftEmptyArrayStorage[2] = v20 + 1;
        uint64_t v21 = (double *)&_swiftEmptyArrayStorage[2 * v20];
        v21[4] = v17;
        v21[5] = v18;
      }
      while (v6 != v7);
      uint64_t v22 = v8 + v7;
      uint64_t v23 = v15 + v7;
      if (v23 == v16) {
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v8 = v35;
      uint64_t v16 = v36;
      uint64_t v22 = v35;
      uint64_t v15 = v37;
      uint64_t v23 = v37;
      uint64_t v13 = v33;
      uint64_t v9 = v34;
      uint64_t v14 = v32;
      if (v37 == v36)
      {
LABEL_24:
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        return _swiftEmptyArrayStorage;
      }
    }
    uint64_t v24 = v23;
    uint64_t v25 = v22;
    while (v23 >= v15 && v24 < v16)
    {
      if (v9 == v25) {
        goto LABEL_24;
      }
      if (v22 < v8 || v25 >= v9) {
        goto LABEL_42;
      }
      double v26 = *(double *)(v13 + 8 * v24);
      double v27 = *(double *)(v14 + 8 * v25);
      if (v26 > v27) {
        goto LABEL_43;
      }
      unint64_t v29 = _swiftEmptyArrayStorage[2];
      unint64_t v28 = _swiftEmptyArrayStorage[3];
      if (v29 >= v28 >> 1)
      {
        uint64_t result = (void *)sub_10016D024(v28 > 1, v29 + 1, 1);
        uint64_t v14 = v32;
        uint64_t v13 = v33;
        uint64_t v9 = v34;
        uint64_t v8 = v35;
        uint64_t v16 = v36;
        uint64_t v15 = v37;
      }
      ++v24;
      _swiftEmptyArrayStorage[2] = v29 + 1;
      unint64_t v30 = (double *)&_swiftEmptyArrayStorage[2 * v29];
      v30[4] = v26;
      v30[5] = v27;
      ++v25;
      if (v16 == v24) {
        goto LABEL_24;
      }
    }
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
  return result;
}

void *sub_10013C7B8(void *result)
{
  uint64_t v1 = result[2];
  uint64_t v2 = result[3] >> 1;
  if (__OFSUB__(v2, v1))
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v3 = (uint64_t)result;
  uint64_t v4 = result[6];
  uint64_t v5 = result[7] >> 1;
  if (!__OFSUB__(v5, v4))
  {
    uint64_t v37 = result[7] >> 1;
    uint64_t v38 = result[6];
    uint64_t v39 = result[3] >> 1;
    uint64_t v40 = result[2];
    uint64_t v36 = result[1];
    uint64_t v35 = result[5];
    if (v5 - v4 >= v2 - v1) {
      uint64_t v6 = v2 - v1;
    }
    else {
      uint64_t v6 = v5 - v4;
    }
    uint64_t result = (void *)sub_10016D0A4(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0) {
      goto LABEL_46;
    }
    uint64_t result = (void *)sub_10013CCA4(v3);
    if (v6)
    {
      uint64_t v7 = 0;
      uint64_t v9 = v37;
      uint64_t v8 = v38;
      uint64_t v10 = v38 - v37;
      if (v38 <= v37) {
        uint64_t v11 = v37;
      }
      else {
        uint64_t v11 = v38;
      }
      uint64_t v12 = v11 - v38;
      uint64_t v14 = v35;
      uint64_t v13 = v36;
      uint64_t v15 = v35 + 8 * v38;
      uint64_t v17 = v39;
      uint64_t v16 = v40;
      do
      {
        if (!(v40 - v39 + v7))
        {
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }
        if (v16 + v7 >= v17 || v7 >= v6) {
          goto LABEL_37;
        }
        if (!(v10 + v7)) {
          goto LABEL_38;
        }
        if (v12 == v7) {
          goto LABEL_39;
        }
        uint64_t v18 = *(void *)(v36 + 8 * v40 + 8 * v7);
        uint64_t v19 = *(void *)(v15 + 8 * v7);
        if (v19 < v18) {
          goto LABEL_40;
        }
        unint64_t v21 = _swiftEmptyArrayStorage[2];
        unint64_t v20 = _swiftEmptyArrayStorage[3];
        if (v21 >= v20 >> 1)
        {
          uint64_t v33 = v12;
          uint64_t v34 = v10;
          uint64_t v32 = v15;
          uint64_t result = (void *)sub_10016D0A4(v20 > 1, v21 + 1, 1);
          uint64_t v15 = v32;
          uint64_t v12 = v33;
          uint64_t v10 = v34;
          uint64_t v14 = v35;
          uint64_t v13 = v36;
          uint64_t v9 = v37;
          uint64_t v8 = v38;
          uint64_t v17 = v39;
          uint64_t v16 = v40;
        }
        ++v7;
        _swiftEmptyArrayStorage[2] = v21 + 1;
        uint64_t v22 = &_swiftEmptyArrayStorage[2 * v21];
        v22[4] = v18;
        v22[5] = v19;
      }
      while (v6 != v7);
      uint64_t v23 = v8 + v7;
      uint64_t v24 = v16 + v7;
      if (v24 == v17) {
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v8 = v38;
      uint64_t v17 = v39;
      uint64_t v23 = v38;
      uint64_t v16 = v40;
      uint64_t v24 = v40;
      uint64_t v13 = v36;
      uint64_t v9 = v37;
      uint64_t v14 = v35;
      if (v40 == v39)
      {
LABEL_24:
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        return _swiftEmptyArrayStorage;
      }
    }
    uint64_t v25 = v24;
    uint64_t v26 = v23;
    while (v24 >= v16 && v25 < v17)
    {
      if (v9 == v26) {
        goto LABEL_24;
      }
      if (v23 < v8 || v26 >= v9) {
        goto LABEL_42;
      }
      uint64_t v27 = *(void *)(v13 + 8 * v25);
      uint64_t v28 = *(void *)(v14 + 8 * v26);
      if (v28 < v27) {
        goto LABEL_43;
      }
      unint64_t v30 = _swiftEmptyArrayStorage[2];
      unint64_t v29 = _swiftEmptyArrayStorage[3];
      if (v30 >= v29 >> 1)
      {
        uint64_t result = (void *)sub_10016D0A4(v29 > 1, v30 + 1, 1);
        uint64_t v14 = v35;
        uint64_t v13 = v36;
        uint64_t v9 = v37;
        uint64_t v8 = v38;
        uint64_t v17 = v39;
        uint64_t v16 = v40;
      }
      ++v25;
      _swiftEmptyArrayStorage[2] = v30 + 1;
      uint64_t v31 = &_swiftEmptyArrayStorage[2 * v30];
      v31[4] = v27;
      v31[5] = v28;
      ++v26;
      if (v17 == v25) {
        goto LABEL_24;
      }
    }
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
  return result;
}

void *sub_10013CA68(void *a1)
{
  return sub_1001508B4(0, a1[2], 0, a1);
}

void *sub_10013CA7C(void *a1)
{
  return sub_1001508C8(0, a1[2], 0, a1);
}

void *sub_10013CA90(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10016CFA4(0, v1, 0);
    uint64_t v3 = a1 + 32;
    do
    {
      swift_getAtKeyPath();
      unint64_t v5 = _swiftEmptyArrayStorage[2];
      unint64_t v4 = _swiftEmptyArrayStorage[3];
      if (v5 >= v4 >> 1) {
        sub_10016CFA4(v4 > 1, v5 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v5 + 1;
      _swiftEmptyArrayStorage[v5 + 4] = v7;
      v3 += 48;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10013CB74(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10013CBDC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10013CC3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10013CCA4(uint64_t a1)
{
  return a1;
}

uint64_t sub_10013CCDC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000788B8(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10013CD20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v31 = a3;
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v28 = a4;
  uint64_t v4 = sub_10000C440(&qword_100285608);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000C440(&qword_100285610);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10019A9C0();
  uint64_t v29 = *(void *)(v10 - 8);
  uint64_t v30 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10019AC90();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10000C440(&qword_100282D10);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100284F90 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_100128E40(v13, (uint64_t)qword_10028D320);
  unint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v21(v16, v20, v13);
  v21(v9, v20, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  if (qword_100284FB0 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_10019ACD0();
  uint64_t v23 = sub_100128E40(v22, (uint64_t)qword_10028D368);
  uint64_t v24 = *(void *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v6, v23, v22);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v6, 0, 1, v22);
  sub_10019A990();
  sub_10019AC60();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v30);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v25 = sub_10019ABA0();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48))(v19, 1, v25);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v28, v19, v25);
  }
  __break(1u);
  return result;
}

Swift::Int sub_10013D1D0()
{
  Swift::UInt v1 = *v0;
  Swift::UInt v2 = v0[1];
  Swift::UInt v3 = v0[2];
  sub_10019B7D0();
  sub_10019B7E0(v1);
  sub_10019B7E0(v2);
  sub_10019B7E0(v3);
  return sub_10019B7F0();
}

void sub_10013D23C()
{
  Swift::UInt v1 = v0[1];
  Swift::UInt v2 = v0[2];
  sub_10019B7E0(*v0);
  sub_10019B7E0(v1);
  sub_10019B7E0(v2);
}

Swift::Int sub_10013D284()
{
  Swift::UInt v1 = *v0;
  Swift::UInt v2 = v0[1];
  Swift::UInt v3 = v0[2];
  sub_10019B7D0();
  sub_10019B7E0(v1);
  sub_10019B7E0(v2);
  sub_10019B7E0(v3);
  return sub_10019B7F0();
}

BOOL sub_10013D2EC(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

BOOL sub_10013D31C(void *a1, void *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  BOOL v4 = v2 == v3;
  BOOL v5 = v2 < v3;
  if (v4) {
    BOOL v5 = a1[2] < a2[2];
  }
  if (*a1 == *a2) {
    return v5;
  }
  else {
    return *a1 < *a2;
  }
}

BOOL sub_10013D354(void *a1, void *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  BOOL v4 = v3 == v2;
  BOOL v5 = v3 < v2;
  if (v4) {
    BOOL v5 = a2[2] < a1[2];
  }
  if (*a2 == *a1) {
    BOOL v6 = v5;
  }
  else {
    BOOL v6 = *a2 < *a1;
  }
  return !v6;
}

BOOL sub_10013D390(void *a1, void *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  BOOL v4 = v2 == v3;
  BOOL v5 = v2 < v3;
  if (v4) {
    BOOL v5 = a1[2] < a2[2];
  }
  if (*a1 == *a2) {
    BOOL v6 = v5;
  }
  else {
    BOOL v6 = *a1 < *a2;
  }
  return !v6;
}

BOOL sub_10013D3CC(void *a1, void *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  BOOL v4 = v3 == v2;
  BOOL v5 = v3 < v2;
  if (v4) {
    BOOL v5 = a2[2] < a1[2];
  }
  if (*a2 == *a1) {
    return v5;
  }
  else {
    return *a2 < *a1;
  }
}

uint64_t sub_10013D404()
{
  uint64_t v1 = sub_10019B700();
  v2._countAndFlagsBits = 47;
  v2._object = (void *)0xE100000000000000;
  sub_10019B190(v2);
  v3._countAndFlagsBits = sub_10019B700();
  sub_10019B190(v3);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 47;
  v4._object = (void *)0xE100000000000000;
  sub_10019B190(v4);
  v5._countAndFlagsBits = sub_10019B700();
  sub_10019B190(v5);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_10013D4DC()
{
  return sub_10013D404();
}

unint64_t sub_10013D4EC()
{
  unint64_t result = qword_100285EB0;
  if (!qword_100285EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100285EB0);
  }
  return result;
}

__n128 initializeBufferWithCopyOfBuffer for Day(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for Day(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Day(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Day()
{
  return &type metadata for Day;
}

unint64_t sub_10013D5B4()
{
  unint64_t result = qword_100285EB8;
  if (!qword_100285EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100285EB8);
  }
  return result;
}

uint64_t sub_10013D608()
{
  if (*v0) {
    return 7827308;
  }
  else {
    return 1751607656;
  }
}

uint64_t sub_10013D634(unsigned char *a1, unsigned char *a2)
{
  return *a1 & ~*a2 & 1;
}

uint64_t sub_10013D648(unsigned char *a1, unsigned char *a2)
{
  return *a1 & 1 | ((*a2 & 1) == 0);
}

uint64_t sub_10013D65C(unsigned char *a1, unsigned char *a2)
{
  return *a2 & 1 | ((*a1 & 1) == 0);
}

uint64_t sub_10013D670(unsigned char *a1, unsigned char *a2)
{
  return *a2 & ~*a1 & 1;
}

unsigned char *storeEnumTagSinglePayload for PeriodicWorkPriority(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10013D750);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PeriodicWorkPriority()
{
  return &type metadata for PeriodicWorkPriority;
}

uint64_t sub_10013D788()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ConstantTimeRangeOffset()
{
  return self;
}

float sub_10013D7BC()
{
  return *(float *)(*(void *)v0 + 16);
}

uint64_t sub_10013D7C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v1 = sub_10000C440(&qword_100285608);
  __chkstk_darwin(v1 - 8);
  unint64_t v52 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10000C440(&qword_100285610);
  __chkstk_darwin(v3 - 8);
  uint64_t v49 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000C440(&qword_100282D10);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_10019ACD0();
  uint64_t v46 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10019AC90();
  uint64_t v54 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10019A9C0();
  uint64_t v50 = *(void *)(v13 - 8);
  uint64_t v51 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v48 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v37 - v16;
  if (qword_100284F90 != -1) {
    swift_once();
  }
  uint64_t v53 = v7;
  uint64_t v18 = sub_100128E40(v10, (uint64_t)qword_10028D320);
  uint64_t v19 = *(void (**)(void))(v54 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v19)(v12, v18, v10);
  uint64_t v45 = v10;
  if (qword_100284FB0 != -1) {
    swift_once();
  }
  uint64_t v20 = v44;
  uint64_t v21 = sub_100128E40(v44, (uint64_t)qword_10028D368);
  uint64_t v22 = v46;
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 16);
  uint64_t v41 = v21;
  v40(v9, v21, v20);
  uint64_t v39 = v17;
  sub_10019AC30();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v20);
  uint64_t v23 = v54;
  uint64_t v24 = *(void (**)(char *, uint64_t))(v54 + 8);
  double v42 = v12;
  uint64_t v43 = v24;
  uint64_t v47 = v54 + 8;
  uint64_t v25 = v45;
  v24(v12, v45);
  ((void (*)(char *, uint64_t, uint64_t))v19)(v12, v18, v25);
  uint64_t v26 = v49;
  v19();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v26, 0, 1, v25);
  uint64_t v27 = v52;
  v40(v52, v41, v20);
  uint64_t v28 = v39;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v27, 0, 1, v20);
  sub_10019A910();
  sub_10019A920();
  sub_10019A8D0();
  uint64_t v29 = v48;
  sub_10019A990();
  uint64_t v30 = v53;
  uint64_t v31 = v42;
  sub_10019AC60();
  uint64_t v32 = v51;
  uint64_t v33 = *(void (**)(char *, uint64_t))(v50 + 8);
  v33(v29, v51);
  v43(v31, v25);
  uint64_t v34 = sub_10019ABA0();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48))(v30, 1, v34);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    v33(v28, v32);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v35 + 32))(v38, v30, v34);
  }
  return result;
}

uint64_t sub_10013DDDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v43 = a1;
  uint64_t v1 = sub_10000C440(&qword_100285608);
  __chkstk_darwin(v1 - 8);
  uint64_t v54 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10000C440(&qword_100285610);
  __chkstk_darwin(v3 - 8);
  uint64_t v56 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000C440(&qword_100282D10);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10019ACD0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v47 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10019AC90();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_10019A9C0();
  uint64_t v15 = *(void *)(v53 - 8);
  uint64_t v16 = __chkstk_darwin(v53);
  uint64_t v51 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v43 - v18;
  if (qword_100284F90 != -1) {
    swift_once();
  }
  uint64_t v49 = v19;
  uint64_t v52 = v15;
  uint64_t v55 = v7;
  uint64_t v20 = sub_100128E40(v11, (uint64_t)qword_10028D320);
  uint64_t v21 = v12;
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v22(v14, v20, v11);
  uint64_t v48 = v11;
  uint64_t v23 = v14;
  if (qword_100284FB0 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_100128E40(v8, (uint64_t)qword_10028D368);
  uint64_t v25 = v9;
  uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v45 = v24;
  uint64_t v26 = v47;
  v44(v47, v24, v8);
  uint64_t v27 = v49;
  sub_10019AC30();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v26, v8);
  uint64_t v28 = *(char **)(v21 + 8);
  uint64_t v46 = v23;
  uint64_t v47 = v28;
  uint64_t v50 = v21 + 8;
  uint64_t v29 = v48;
  ((void (*)(char *, uint64_t))v28)(v23, v48);
  v22(v23, v20, v29);
  uint64_t v30 = v56;
  v22(v56, v20, v29);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v30, 0, 1, v29);
  uint64_t v31 = v54;
  v44(v54, v45, v8);
  uint64_t v32 = v27;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v31, 0, 1, v8);
  uint64_t v45 = sub_10019A910();
  LODWORD(v44) = v33 & 1;
  sub_10019A920();
  sub_10019A8D0();
  sub_10019A8F0();
  uint64_t v34 = v51;
  sub_10019A990();
  uint64_t v35 = v55;
  uint64_t v36 = v46;
  sub_10019AC60();
  uint64_t v37 = *(void (**)(char *, uint64_t))(v52 + 8);
  uint64_t v38 = v34;
  uint64_t v39 = v53;
  v37(v38, v53);
  ((void (*)(char *, uint64_t))v47)(v36, v29);
  uint64_t v40 = sub_10019ABA0();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48))(v35, 1, v40);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    v37(v32, v39);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v41 + 32))(v43, v35, v40);
  }
  return result;
}

uint64_t type metadata accessor for LoggingNormalizedScaleFactorStore()
{
  return self;
}

uint64_t sub_10013E434()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  sub_10007FDE0(v0 + 2, v1);
  unint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  if (qword_100284FA8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_10019AF80();
  sub_100128E40(v4, (uint64_t)qword_10028D348);
  uint64_t v5 = sub_10019AF60();
  os_log_type_t v6 = sub_10019B3A0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    sub_10000C440(&qword_100286000);
    uint64_t v8 = sub_10019B110();
    sub_10007C26C(v8, v9, &v11);
    sub_10019B4A0();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "stored scale factor: %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return v3 | ((HIDWORD(v3) & 1) << 32);
}

uint64_t sub_10013E60C(float a1)
{
  uint64_t v2 = v1;
  if (qword_100284FA8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_10019AF80();
  sub_100128E40(v4, (uint64_t)qword_10028D348);
  uint64_t v5 = sub_10019AF60();
  os_log_type_t v6 = sub_10019B3A0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v13 = v8;
    sub_10019B350();
    sub_10007C26C(0, 0xE000000000000000, &v13);
    sub_10019B4A0();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "storing scale factor: %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  unint64_t v9 = v2 + 2;
  uint64_t v11 = v2[5];
  uint64_t v10 = v2[6];
  sub_10007FDE0(v9, v11);
  return (*(uint64_t (**)(uint64_t, uint64_t, float))(v10 + 16))(v11, v10, a1);
}

uint64_t sub_10013E7F0()
{
  unint64_t v0 = sub_10013E434();
  return v0 | ((HIDWORD(v0) & 1) << 32);
}

uint64_t sub_10013E828(float a1)
{
  return sub_10013E60C(a1);
}

uint64_t type metadata accessor for SigningReportCoreAnalyticsTransmitter()
{
  return self;
}

void sub_10013E870()
{
  unint64_t v0 = self;
  NSString v1 = sub_10019B0A0();
  sub_10000C440(&qword_1002860A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001D6910;
  *(void *)(inited + 32) = 0xD000000000000012;
  *(void *)(inited + 40) = 0x8000000100213970;
  *(NSNumber *)(inited + 48) = sub_10019B320();
  *(void *)(inited + 56) = 0x6C69614673796164;
  *(void *)(inited + 64) = 0xEA00000000006465;
  *(NSNumber *)(inited + 72) = sub_10019B370();
  strcpy((char *)(inited + 80), "daysAttempted");
  *(_WORD *)(inited + 94) = -4864;
  *(NSNumber *)(inited + 96) = sub_10019B370();
  sub_10013EE20(inited);
  sub_10013E9E8();
  Class isa = sub_10019B020().super.isa;
  swift_bridgeObjectRelease();
  [v0 sendEvent:v1 customPayload:isa];
}

unint64_t sub_10013E9E8()
{
  unint64_t result = qword_1002860A8;
  if (!qword_1002860A8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1002860A8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TimeRange.Duration(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ObservabilityReportType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10013EB84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ObservabilityReportType()
{
  return &type metadata for ObservabilityReportType;
}

unint64_t sub_10013EBC0()
{
  unint64_t result = qword_1002860B0;
  if (!qword_1002860B0)
  {
    sub_1000788B8(&qword_1002860B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002860B0);
  }
  return result;
}

void sub_10013EC1C(void *a1@<X8>)
{
  *a1 = &off_100236F20;
}

unint64_t sub_10013EC30()
{
  unint64_t result = qword_1002860C0;
  if (!qword_1002860C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002860C0);
  }
  return result;
}

uint64_t sub_10013EC84()
{
  uint64_t v1 = 0x796C72756F68;
  if (*v0 != 1) {
    uint64_t v1 = 0x796C696164;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x63696E756D6D6F63;
  }
}

unint64_t sub_10013ECE4(uint64_t a1)
{
  return sub_10013ED08(a1, &qword_100286118);
}

unint64_t sub_10013ECF0(uint64_t a1)
{
  return sub_10013EE2C(a1, &qword_1002860E8);
}

unint64_t sub_10013ECFC(uint64_t a1)
{
  return sub_10013ED08(a1, &qword_1002860D8);
}

unint64_t sub_10013ED08(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    int v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000C440(a2);
  int v3 = (void *)sub_10019B5D0();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v6 = *(v5 - 2);
    uint64_t v7 = *(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    unint64_t result = sub_100076504(v6, v7);
    if (v10) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v6;
    v11[1] = v7;
    *(void *)(v3[7] + 8 * result) = v8;
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    _DWORD v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10013EE20(uint64_t a1)
{
  return sub_10013EE2C(a1, &qword_100286128);
}

unint64_t sub_10013EE2C(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    int v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000C440(a2);
  int v3 = (void *)sub_10019B5D0();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v6 = (uint64_t)*(v5 - 2);
    uint64_t v7 = (uint64_t)*(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    id v9 = v8;
    unint64_t result = sub_100076504(v6, v7);
    if (v11) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v12 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v12 = v6;
    v12[1] = v7;
    *(void *)(v3[7] + 8 * result) = v9;
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    _DWORD v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10013EF44()
{
  sub_10000C440(&qword_1002860D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001D81D0;
  *(void *)(inited + 32) = 0x444D4D5F65746164;
  *(void *)(inited + 40) = 0xEB00000000484844;
  *(void *)(inited + 48) = sub_10013F15C();
  strcpy((char *)(inited + 56), "created_events");
  *(unsigned char *)(inited + 71) = -18;
  int v2 = (int *)type metadata accessor for ObservabilityDailyReport();
  *(NSNumber *)(inited + 72) = sub_10019B370();
  *(void *)(inited + 80) = 0x6465726566667562;
  *(void *)(inited + 88) = 0xEF73746E6576655FLL;
  *(NSNumber *)(inited + 96) = sub_10019B370();
  strcpy((char *)(inited + 104), "queued_events");
  *(_WORD *)(inited + 118) = -4864;
  *(NSNumber *)(inited + 120) = sub_10019B370();
  *(void *)(inited + 128) = 0xD000000000000018;
  *(void *)(inited + 136) = 0x8000000100213C60;
  *(void *)(inited + 144) = sub_10013F4F8(*(void *)(v0 + v2[8]), *(void *)(v0 + v2[8] + 8));
  strcpy((char *)(inited + 152), "buffered_time");
  *(_WORD *)(inited + 166) = -4864;
  *(void *)(inited + 168) = sub_10013F4F8(*(void *)(v0 + v2[9]), *(void *)(v0 + v2[9] + 8));
  *(void *)(inited + 176) = 0x5F64657269707865;
  *(void *)(inited + 184) = 0xEF73656863746162;
  *(NSNumber *)(inited + 192) = sub_10019B370();
  *(void *)(inited + 200) = 0xD000000000000016;
  *(void *)(inited + 208) = 0x8000000100213C80;
  uint64_t v3 = *(void *)(v0 + v2[12]);
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_10013F7A8(v4, v3);
  uint64_t v6 = sub_10013F908(v5);
  swift_bridgeObjectRelease();
  *(void *)(inited + 216) = v6;
  return sub_10013ED08(inited, &qword_1002860D8);
}

uint64_t sub_10013F15C()
{
  uint64_t v0 = sub_10019ACD0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10019AC90();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10019A9C0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100284F90 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_100128E40(v4, (uint64_t)qword_10028D320);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v12, v4);
  if (qword_100284FB0 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_100128E40(v0, (uint64_t)qword_10028D368);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v13, v0);
  sub_10019AC30();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_10000C6C8(0, (unint64_t *)&qword_100286100);
  BOOL v14 = (void *)sub_10019B450();
  sub_10000C440((uint64_t *)&unk_100285520);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1001D6910;
  uint64_t result = sub_10019A920();
  if (v17)
  {
    __break(1u);
    goto LABEL_10;
  }
  *(void *)(v15 + 56) = &type metadata for Int;
  *(void *)(v15 + 64) = &protocol witness table for Int;
  *(void *)(v15 + 32) = result;
  uint64_t result = sub_10019A8D0();
  if (v18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  *(void *)(v15 + 96) = &type metadata for Int;
  *(void *)(v15 + 104) = &protocol witness table for Int;
  *(void *)(v15 + 72) = result;
  uint64_t result = sub_10019A8F0();
  if ((v19 & 1) == 0)
  {
    *(void *)(v15 + 136) = &type metadata for Int;
    *(void *)(v15 + 144) = &protocol witness table for Int;
    *(void *)(v15 + 112) = result;
    uint64_t v20 = sub_10019B460();

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v20;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10013F4F8(uint64_t a1, uint64_t a2)
{
  sub_10000C440(&qword_1002860F8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001D69A0;
  *(void *)(inited + 32) = 0x6E6F6973726576;
  *(void *)(inited + 40) = 0xE700000000000000;
  *(NSNumber *)(inited + 48) = sub_10019B370();
  uint64_t v4 = (void *)sub_10013EE2C(inited, &qword_1002860E8);
  uint64_t v24 = *(void *)(a2 + 16);
  if (!v24)
  {
LABEL_19:
    sub_10000C6C8(0, (unint64_t *)&qword_1002860E0);
    Class isa = sub_10019B020().super.isa;
    swift_bridgeObjectRelease();
    return (uint64_t)isa;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  while (1)
  {
    uint64_t v7 = *(void *)(a2 + 8 * v5++ + 32);
    if (v7 < 1) {
      goto LABEL_5;
    }
    v25._countAndFlagsBits = sub_10019B700();
    sub_10019B190(v25);
    swift_bridgeObjectRelease();
    v8.super.super.Class isa = sub_10019B370().super.super.isa;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v11 = sub_100076504(0x74656B637562, 0xE600000000000000);
    uint64_t v12 = v4[2];
    BOOL v13 = (v10 & 1) == 0;
    uint64_t v14 = v12 + v13;
    if (__OFADD__(v12, v13)) {
      break;
    }
    char v15 = v10;
    if (v4[3] >= v14)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if ((v10 & 1) == 0) {
          goto LABEL_14;
        }
      }
      else
      {
        sub_100141F58();
        if ((v15 & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    else
    {
      sub_100141114(v14, isUniquelyReferenced_nonNull_native);
      unint64_t v16 = sub_100076504(0x74656B637562, 0xE600000000000000);
      if ((v15 & 1) != (v17 & 1)) {
        goto LABEL_22;
      }
      unint64_t v11 = v16;
      if ((v15 & 1) == 0)
      {
LABEL_14:
        v4[(v11 >> 6) + 8] |= 1 << v11;
        char v18 = (void *)(v4[6] + 16 * v11);
        *char v18 = 0x74656B637562;
        v18[1] = 0xE600000000000000;
        *(NSNumber *)(v4[7] + 8 * v11) = v8;
        uint64_t v19 = v4[2];
        BOOL v20 = __OFADD__(v19, 1);
        uint64_t v21 = v19 + 1;
        if (v20) {
          goto LABEL_21;
        }
        _DWORD v4[2] = v21;
        swift_bridgeObjectRetain();
        goto LABEL_4;
      }
    }
    uint64_t v6 = v4[7];

    *(NSNumber *)(v6 + 8 * v11) = v8;
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    if (v24 == v5)
    {
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_10019B760();
  __break(1u);
  return result;
}

uint64_t sub_10013F7A8(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v15 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    uint64_t result = sub_10013FC7C(&v14, *(void *)(*(void *)(v2 + 48) + 16 * v10), *(void *)(*(void *)(v2 + 48) + 16 * v10 + 8));
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_10013F908(uint64_t a1)
{
  uint64_t v2 = (void *)sub_10013EE2C((uint64_t)_swiftEmptyArrayStorage, &qword_1002860E8);
  uint64_t v30 = a1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  uint64_t v5 = v4 & *(void *)(a1 + 56);
  int64_t v31 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v6 = 0;
  while (1)
  {
    if (v5)
    {
      v5 &= v5 - 1;
    }
    else
    {
      int64_t v8 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        goto LABEL_40;
      }
      if (v8 >= v31)
      {
LABEL_37:
        swift_release();
        sub_10000C6C8(0, (unint64_t *)&qword_1002860E0);
        Class isa = sub_10019B020().super.isa;
        swift_bridgeObjectRelease();
        return (uint64_t)isa;
      }
      uint64_t v9 = *(void *)(v30 + 8 * v8);
      ++v6;
      if (!v9)
      {
        int64_t v6 = v8 + 1;
        if (v8 + 1 >= v31) {
          goto LABEL_37;
        }
        uint64_t v9 = *(void *)(v30 + 8 * v6);
        if (!v9)
        {
          int64_t v6 = v8 + 2;
          if (v8 + 2 >= v31) {
            goto LABEL_37;
          }
          uint64_t v9 = *(void *)(v30 + 8 * v6);
          if (!v9)
          {
            int64_t v6 = v8 + 3;
            if (v8 + 3 >= v31) {
              goto LABEL_37;
            }
            uint64_t v9 = *(void *)(v30 + 8 * v6);
            if (!v9)
            {
              int64_t v6 = v8 + 4;
              if (v8 + 4 >= v31) {
                goto LABEL_37;
              }
              uint64_t v9 = *(void *)(v30 + 8 * v6);
              if (!v9)
              {
                int64_t v10 = v8 + 5;
                if (v10 >= v31) {
                  goto LABEL_37;
                }
                uint64_t v9 = *(void *)(v30 + 8 * v10);
                if (!v9)
                {
                  while (1)
                  {
                    int64_t v6 = v10 + 1;
                    if (__OFADD__(v10, 1)) {
                      goto LABEL_41;
                    }
                    if (v6 >= v31) {
                      goto LABEL_37;
                    }
                    uint64_t v9 = *(void *)(v30 + 8 * v6);
                    ++v10;
                    if (v9) {
                      goto LABEL_25;
                    }
                  }
                }
                int64_t v6 = v10;
              }
            }
          }
        }
      }
LABEL_25:
      uint64_t v5 = (v9 - 1) & v9;
    }
    uint64_t v11 = sub_10019B700();
    uint64_t v13 = v12;
    v14.super.super.Class isa = sub_10019B370().super.super.isa;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v17 = sub_100076504(v11, v13);
    uint64_t v18 = v2[2];
    BOOL v19 = (v16 & 1) == 0;
    uint64_t v20 = v18 + v19;
    if (__OFADD__(v18, v19)) {
      break;
    }
    char v21 = v16;
    if (v2[3] >= v20)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v16) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_100141F58();
        if (v21) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_100141114(v20, isUniquelyReferenced_nonNull_native);
      unint64_t v22 = sub_100076504(v11, v13);
      if ((v21 & 1) != (v23 & 1)) {
        goto LABEL_42;
      }
      unint64_t v17 = v22;
      if (v21)
      {
LABEL_4:
        uint64_t v7 = v2[7];

        *(NSNumber *)(v7 + 8 * v17) = v14;
        goto LABEL_5;
      }
    }
    v2[(v17 >> 6) + 8] |= 1 << v17;
    uint64_t v24 = (uint64_t *)(v2[6] + 16 * v17);
    *uint64_t v24 = v11;
    v24[1] = v13;
    *(NSNumber *)(v2[7] + 8 * v17) = v14;
    uint64_t v25 = v2[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_39;
    }
    v2[2] = v27;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  uint64_t result = sub_10019B760();
  __break(1u);
  return result;
}

uint64_t sub_10013FC7C(_OWORD *a1, Swift::UInt a2, Swift::UInt a3)
{
  uint64_t v7 = *v3;
  sub_10019B7D0();
  sub_10019B7E0(a2);
  sub_10019B7E0(a3);
  Swift::Int v8 = sub_10019B7F0();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    while (1)
    {
      uint64_t v12 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v10);
      uint64_t v14 = *v12;
      uint64_t v13 = v12[1];
      if (v14 == a2 && v13 == a3) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_8;
      }
    }
    uint64_t result = 0;
    long long v17 = *(_OWORD *)(*(void *)(*v3 + 48) + 16 * v10);
  }
  else
  {
LABEL_8:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1001403E8(a2, a3, v10, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v19;
    swift_bridgeObjectRelease();
    *(void *)&long long v17 = a2;
    *((void *)&v17 + 1) = a3;
    uint64_t result = 1;
  }
  *a1 = v17;
  return result;
}

uint64_t sub_10013FDBC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_10019B7C0();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_100140548(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_10013FEB8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000C440(&qword_1002860F0);
  uint64_t result = sub_10019B510();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v29 = (void *)(v2 + 56);
    uint64_t v6 = 1 << *(unsigned char *)(v2 + 32);
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v10 = result + 56;
    while (1)
    {
      if (v8)
      {
        unint64_t v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          return result;
        }
        uint64_t result = v2 + 56;
        if (v15 >= v9) {
          goto LABEL_31;
        }
        unint64_t v16 = v29[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v9) {
            goto LABEL_31;
          }
          unint64_t v16 = v29[v5];
          if (!v16)
          {
            int64_t v17 = v15 + 2;
            if (v17 >= v9)
            {
LABEL_31:
              uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
              if (v28 > 63) {
                bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v29 = -1 << v28;
              }
              uint64_t v1 = v0;
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v16 = v29[v17];
            if (!v16)
            {
              while (1)
              {
                int64_t v5 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_37;
                }
                if (v5 >= v9) {
                  goto LABEL_31;
                }
                unint64_t v16 = v29[v5];
                ++v17;
                if (v16) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v5 = v17;
          }
        }
LABEL_21:
        unint64_t v8 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = (Swift::UInt *)(*(void *)(v2 + 48) + 16 * v14);
      Swift::UInt v19 = *v18;
      Swift::UInt v20 = v18[1];
      sub_10019B7D0();
      sub_10019B7E0(v19);
      sub_10019B7E0(v20);
      uint64_t result = sub_10019B7F0();
      uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_36;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = (Swift::UInt *)(*(void *)(v4 + 48) + 16 * v11);
      *uint64_t v12 = v19;
      v12[1] = v20;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_100140164()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000C440(&qword_100286130);
  uint64_t result = sub_10019B510();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    uint64_t v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  uint64_t *v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = sub_10019B7C0();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

Swift::Int sub_1001403E8(Swift::Int result, Swift::UInt a2, unint64_t a3, char a4)
{
  Swift::UInt v7 = result;
  unint64_t v8 = *(void *)(*v4 + 16);
  unint64_t v9 = *(void *)(*v4 + 24);
  if (v9 > v8 && (a4 & 1) != 0) {
    goto LABEL_15;
  }
  if (a4)
  {
    sub_10013FEB8();
  }
  else
  {
    if (v9 > v8)
    {
      uint64_t result = (Swift::Int)sub_10014066C();
      goto LABEL_15;
    }
    sub_100140988();
  }
  uint64_t v10 = *v4;
  sub_10019B7D0();
  sub_10019B7E0(v7);
  sub_10019B7E0(a2);
  uint64_t result = sub_10019B7F0();
  uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
  a3 = result & ~v11;
  if ((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v12 = ~v11;
    do
    {
      unint64_t v13 = (uint64_t *)(*(void *)(v10 + 48) + 16 * a3);
      uint64_t v15 = *v13;
      uint64_t v14 = v13[1];
      if (v15 == v7 && v14 == a2) {
        goto LABEL_18;
      }
      a3 = (a3 + 1) & v12;
    }
    while (((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
  }
LABEL_15:
  uint64_t v17 = *v4;
  *(void *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v18 = (Swift::UInt *)(*(void *)(v17 + 48) + 16 * a3);
  *uint64_t v18 = v7;
  v18[1] = a2;
  uint64_t v19 = *(void *)(v17 + 16);
  BOOL v20 = __OFADD__(v19, 1);
  uint64_t v21 = v19 + 1;
  if (!v20)
  {
    *(void *)(v17 + 16) = v21;
    return result;
  }
  __break(1u);
LABEL_18:
  uint64_t result = sub_10019B750();
  __break(1u);
  return result;
}

uint64_t sub_100140548(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_100140164();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1001407F0();
      goto LABEL_14;
    }
    sub_100140C08();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_10019B7C0();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_10019B750();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

void *sub_10014066C()
{
  uint64_t v1 = v0;
  sub_10000C440(&qword_1002860F0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10019B500();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v16 >= v13) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17) {
        break;
      }
    }
LABEL_25:
    unint64_t v19 = __clz(__rbit64(v17));
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = v19 + (v9 << 6);
LABEL_12:
    *(_OWORD *)(*(void *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(void *)(v2 + 48) + 16 * v15);
  }
  int64_t v18 = v16 + 2;
  if (v18 >= v13) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1001407F0()
{
  uint64_t v1 = v0;
  sub_10000C440(&qword_100286130);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10019B500();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_100140988()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000C440(&qword_1002860F0);
  uint64_t result = sub_10019B510();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_33:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v28 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_22;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    if (v15 >= v28) {
      goto LABEL_31;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v28) {
        goto LABEL_31;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16) {
        break;
      }
    }
LABEL_21:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_22:
    int64_t v18 = (Swift::UInt *)(*(void *)(v2 + 48) + 16 * v14);
    Swift::UInt v19 = *v18;
    Swift::UInt v20 = v18[1];
    sub_10019B7D0();
    sub_10019B7E0(v19);
    sub_10019B7E0(v20);
    uint64_t result = sub_10019B7F0();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_34;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    unint64_t v12 = (Swift::UInt *)(*(void *)(v4 + 48) + 16 * v11);
    *unint64_t v12 = v19;
    v12[1] = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 2;
  if (v17 >= v28)
  {
LABEL_31:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_33;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v28) {
      goto LABEL_31;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_21;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_100140C08()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000C440(&qword_100286130);
  uint64_t result = sub_10019B510();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  BOOL v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = sub_10019B7C0();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100140E6C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10000C440(&qword_100286120);
  uint64_t result = sub_10019B5C0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v35 = a2;
    uint64_t v34 = v3;
    int64_t v8 = 0;
    unint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    uint64_t v33 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13) {
          goto LABEL_31;
        }
        unint64_t v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v20 = v9[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                uint64_t *v9 = v32;
              }
              uint64_t v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v20 = v9[v8];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_21:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      uint64_t v22 = 8 * v18;
      uint64_t v23 = *(void *)(*(void *)(v5 + 48) + v22);
      uint64_t v24 = *(void *)(*(void *)(v5 + 56) + v22);
      uint64_t result = sub_10019B7C0();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t v16 = 8 * v15;
      *(void *)(*(void *)(v7 + 48) + v16) = v23;
      *(void *)(*(void *)(v7 + 56) + v16) = v24;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_100141114(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10000C440(&qword_1002860E8);
  char v38 = a2;
  uint64_t v6 = sub_10019B5C0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_10019B7D0();
    sub_10019B150();
    uint64_t result = sub_10019B7F0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_100141424(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10000C440(&qword_1002860D8);
  char v36 = a2;
  uint64_t v6 = sub_10019B5C0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
    }
    sub_10019B7D0();
    sub_10019B150();
    uint64_t result = sub_10019B7F0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10014173C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10000C440(&qword_100286110);
  uint64_t result = sub_10019B5C0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v29 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v29) {
          goto LABEL_33;
        }
        unint64_t v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v29) {
            goto LABEL_33;
          }
          unint64_t v20 = v30[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v30 = -1 << v28;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v29) {
                  goto LABEL_33;
                }
                unint64_t v20 = v30[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      Swift::UInt v26 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v18);
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_10019B7D0();
      sub_10019B7E0(v26);
      uint64_t result = sub_10019B7F0();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_100141A10(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v43 = sub_10019ABA0();
  uint64_t v5 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  double v42 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  sub_10000C440(&qword_100286138);
  int v41 = a2;
  uint64_t result = sub_10019B5C0();
  uint64_t v9 = result;
  if (*(void *)(v7 + 16))
  {
    uint64_t v37 = v2;
    int64_t v10 = 0;
    uint64_t v11 = *(void *)(v7 + 64);
    uint64_t v39 = (void *)(v7 + 64);
    uint64_t v12 = 1 << *(unsigned char *)(v7 + 32);
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v14 = v13 & v11;
    int64_t v38 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v40 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    unint64_t v15 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
    uint64_t v16 = result + 64;
    while (1)
    {
      if (v14)
      {
        unint64_t v18 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v19 = v18 | (v10 << 6);
      }
      else
      {
        int64_t v20 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v39;
        if (v20 >= v38) {
          goto LABEL_34;
        }
        unint64_t v21 = v39[v20];
        ++v10;
        if (!v21)
        {
          int64_t v10 = v20 + 1;
          if (v20 + 1 >= v38) {
            goto LABEL_34;
          }
          unint64_t v21 = v39[v10];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v38)
            {
LABEL_34:
              if ((v41 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v37;
                goto LABEL_41;
              }
              uint64_t v36 = 1 << *(unsigned char *)(v7 + 32);
              if (v36 >= 64) {
                bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v39 = -1 << v36;
              }
              uint64_t v3 = v37;
              *(void *)(v7 + 16) = 0;
              break;
            }
            unint64_t v21 = v39[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v10 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_43;
                }
                if (v10 >= v38) {
                  goto LABEL_34;
                }
                unint64_t v21 = v39[v10];
                ++v22;
                if (v21) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v10 = v22;
          }
        }
LABEL_21:
        unint64_t v14 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v10 << 6);
      }
      uint64_t v23 = *(void *)(v7 + 56);
      uint64_t v24 = v7;
      Swift::UInt v25 = *(unsigned __int8 *)(*(void *)(v7 + 48) + v19);
      uint64_t v26 = v5;
      uint64_t v27 = *(void *)(v5 + 72);
      uint64_t v28 = v23 + v27 * v19;
      if (v41) {
        (*v15)(v42, v28, v43);
      }
      else {
        (*v40)(v42, v28, v43);
      }
      sub_10019B7D0();
      sub_10019B7E0(v25);
      uint64_t result = sub_10019B7F0();
      uint64_t v29 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v16 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v17 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(unsigned char *)(*(void *)(v9 + 48) + v17) = v25;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v15)(*(void *)(v9 + 56) + v27 * v17, v42, v43);
      ++*(void *)(v9 + 16);
      uint64_t v5 = v26;
      uint64_t v7 = v24;
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v3 = v9;
  return result;
}

void *sub_100141DC8()
{
  uint64_t v1 = v0;
  sub_10000C440(&qword_100286120);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10019B5B0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = v21 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_100141F58()
{
  uint64_t v1 = v0;
  sub_10000C440(&qword_1002860E8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10019B5B0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    int64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10014210C()
{
  uint64_t v1 = v0;
  sub_10000C440(&qword_1002860D8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10019B5B0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_unknownObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1001422C4()
{
  uint64_t v1 = sub_10019ABA0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000C440(&qword_100286138);
  int64_t v22 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_10019B5B0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *int64_t v22 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v23 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v26 = v2 + 16;
  int64_t v24 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v25 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v18 >= v24) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_23;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v10);
      if (!v19) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_9:
    char v16 = *(unsigned char *)(*(void *)(v5 + 48) + v15);
    unint64_t v17 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 56) + v17, v1);
    *(unsigned char *)(*(void *)(v7 + 48) + v15) = v16;
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 56) + v17, v4, v1);
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v24) {
    goto LABEL_23;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v24) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_100142550(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10000C440(&qword_100286120);
    uint64_t v3 = (void *)sub_10019B5D0();
    for (i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      uint64_t v5 = *(i - 1);
      uint64_t v6 = *i;
      unint64_t result = sub_100136A30(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v9 = 8 * result;
      *(void *)(v3[6] + v9) = v5;
      *(void *)(v3[7] + v9) = v6;
      uint64_t v10 = v3[2];
      BOOL v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11) {
        goto LABEL_10;
      }
      _DWORD v3[2] = v12;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_100142628(uint64_t a1)
{
  uint64_t v2 = sub_10000C440((uint64_t *)&unk_100286140);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (unsigned __int8 *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    sub_10000C440(&qword_100286138);
    uint64_t v7 = (void *)sub_10019B5D0();
    char v8 = &v5[*(int *)(v2 + 48)];
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v10 = *(void *)(v3 + 72);
    while (1)
    {
      sub_1001427E8(v9, (uint64_t)v5);
      unsigned __int8 v11 = *v5;
      unint64_t result = sub_100136A74(*v5);
      if (v13) {
        break;
      }
      unint64_t v14 = result;
      *(void *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v7[6] + result) = v11;
      uint64_t v15 = v7[7];
      uint64_t v16 = sub_10019ABA0();
      unint64_t result = (*(uint64_t (**)(unint64_t, unsigned __int8 *, uint64_t))(*(void *)(v16 - 8) + 32))(v15 + *(void *)(*(void *)(v16 - 8) + 72) * v14, v8, v16);
      uint64_t v17 = v7[2];
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18) {
        goto LABEL_10;
      }
      _DWORD v7[2] = v19;
      v9 += v10;
      if (!--v6) {
        return (unint64_t)v7;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

uint64_t sub_1001427E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000C440((uint64_t *)&unk_100286140);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100142850(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 115;
  }
  else {
    uint64_t v2 = 99;
  }
  if (a2) {
    uint64_t v3 = 115;
  }
  else {
    uint64_t v3 = 99;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_10019B720();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1001428B8(char *a1, char *a2)
{
  return sub_100142850(*a1, *a2);
}

Swift::Int sub_1001428C4()
{
  return sub_10019B7F0();
}

uint64_t sub_100142924()
{
  sub_10019B150();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100142968()
{
  return sub_10019B7F0();
}

uint64_t sub_1001429C4@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v8._countAndFlagsBits = *a1;
  uint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_100236F48;
  v8._object = v3;
  Swift::Int v5 = sub_10019B5F0(v4, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

void sub_100142A24(uint64_t *a1@<X8>)
{
  uint64_t v2 = 99;
  if (*v1) {
    uint64_t v2 = 115;
  }
  *a1 = v2;
  a1[1] = 0xE100000000000000;
}

uint64_t sub_100142A44()
{
  if (*v0) {
    return 115;
  }
  else {
    return 99;
  }
}

uint64_t sub_100142A60@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  v9._countAndFlagsBits = a1;
  v5._rawValue = &off_100236F48;
  v9._object = a2;
  Swift::Int v6 = sub_10019B5F0(v5, v9);
  uint64_t result = swift_bridgeObjectRelease();
  if (v6 == 1) {
    char v8 = 1;
  }
  else {
    char v8 = 2;
  }
  if (!v6) {
    char v8 = 0;
  }
  *a3 = v8;
  return result;
}

void sub_100142AC4(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_100142AD0(uint64_t a1)
{
  unint64_t v2 = sub_100143314();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100142B0C(uint64_t a1)
{
  unint64_t v2 = sub_100143314();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100142B48(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_10000C440(&qword_100286178);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007FDE0(a1, a1[3]);
  sub_100143314();
  sub_10019B830();
  uint64_t v14 = a2;
  char v13 = 0;
  sub_10000C440(&qword_100286168);
  sub_100143368(&qword_100286180);
  sub_10019B6B0();
  if (!v3)
  {
    uint64_t v14 = a3;
    char v13 = 1;
    sub_10019B6B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_100142D08@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100142D50(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_100142D34(void *a1)
{
  return sub_100142B48(a1, *v1, v1[1]);
}

uint64_t sub_100142D50(void *a1)
{
  uint64_t v3 = sub_10000C440(&qword_100286158);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::Int v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007FDE0(a1, a1[3]);
  sub_100143314();
  sub_10019B820();
  if (v1)
  {
    uint64_t v8 = 0;
    _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000C440(&qword_100286168);
    char v10 = 0;
    sub_100143368(&qword_100286170);
    sub_10019B630();
    uint64_t v8 = v11;
    char v10 = 1;
    sub_10019B630();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)a1);
  }
  return v8;
}

uint64_t sub_100142F60()
{
  uint64_t v1 = sub_10019B100();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10019A830();
  swift_allocObject();
  sub_10019A820();
  sub_10019B0F0();
  uint64_t v5 = sub_10019B0C0();
  unint64_t v7 = v6;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v7 >> 60 == 15)
  {
    swift_release();
    return 1;
  }
  else
  {
    sub_1001430EC();
    sub_10019A810();
    sub_10007FF14(v5, v7);
    uint64_t result = swift_release();
    if (!v0) {
      return v9;
    }
  }
  return result;
}

unint64_t sub_1001430EC()
{
  unint64_t result = qword_100286150;
  if (!qword_100286150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100286150);
  }
  return result;
}

uint64_t destroy for ObservabilityCommunicationCodes()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s7Metrics31ObservabilityCommunicationCodesVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ObservabilityCommunicationCodes(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for ObservabilityCommunicationCodes(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ObservabilityCommunicationCodes(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ObservabilityCommunicationCodes(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ObservabilityCommunicationCodes()
{
  return &type metadata for ObservabilityCommunicationCodes;
}

unint64_t sub_100143314()
{
  unint64_t result = qword_100286160;
  if (!qword_100286160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100286160);
  }
  return result;
}

uint64_t sub_100143368(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000788B8(&qword_100286168);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ObservabilityCommunicationCodes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100143498);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ObservabilityCommunicationCodes.CodingKeys()
{
  return &type metadata for ObservabilityCommunicationCodes.CodingKeys;
}

unint64_t sub_1001434D4()
{
  unint64_t result = qword_100286188;
  if (!qword_100286188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100286188);
  }
  return result;
}

unint64_t sub_10014352C()
{
  unint64_t result = qword_100286190;
  if (!qword_100286190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100286190);
  }
  return result;
}

unint64_t sub_100143584()
{
  unint64_t result = qword_100286198;
  if (!qword_100286198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100286198);
  }
  return result;
}

uint64_t *sub_1001435D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10019ABA0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1001436A8(uint64_t a1)
{
  uint64_t v2 = sub_10019ABA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10014371C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10019ABA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10014379C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10019ABA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100143828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10019ABA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1001438A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10019ABA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100143928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10014393C);
}

uint64_t sub_10014393C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10019ABA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1001439FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100143A10);
}

uint64_t sub_100143A10(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10019ABA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for ObservabilityCommunicationReport()
{
  uint64_t result = qword_1002861F8;
  if (!qword_1002861F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100143B18()
{
  uint64_t result = sub_10019ABA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100143BB0()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GroupConfigPersistence()
{
  return self;
}

unint64_t sub_100143C1C(char a1)
{
  unint64_t result = 0x63697274656DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x5465736F70727570;
      break;
    case 2:
      unint64_t result = 0x726564726FLL;
      break;
    case 3:
      unint64_t result = 0x736E6F6974706FLL;
      break;
    case 4:
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0x696669746E656469;
      break;
    case 7:
      unint64_t result = 0x68636E617262;
      break;
    case 8:
      unint64_t result = 0x69747265706F7270;
      break;
    case 9:
      unint64_t result = 0xD000000000000016;
      break;
    case 10:
      unint64_t result = 0x6D6E6F7269766E65;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100143D84(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000C440(&qword_1002863A0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10007FDE0(a1, a1[3]);
  sub_100145C24();
  sub_10019B830();
  v11[0] = 0;
  sub_10019B6D0();
  if (!v2)
  {
    v11[0] = 1;
    sub_10019B6D0();
    v11[0] = 2;
    sub_10019B6A0();
    v11[0] = 3;
    sub_10019B6A0();
    v11[0] = 4;
    sub_10019B680();
    v11[0] = 5;
    sub_10019B680();
    v11[0] = 6;
    sub_10019B680();
    sub_100145784(v3 + 96, (uint64_t)v13, &qword_100286368);
    sub_100145784((uint64_t)v13, (uint64_t)v11, &qword_100286368);
    HIBYTE(v10) = 7;
    sub_10000C440(&qword_100286390);
    sub_100145D80(&qword_1002863A8);
    sub_10019B6B0();
    v11[0] = 8;
    sub_10019B680();
    v11[0] = 9;
    sub_10019B680();
    sub_100145784(v3 + 136, (uint64_t)v12, &qword_100286368);
    sub_100145784((uint64_t)v12, (uint64_t)v11, &qword_100286368);
    HIBYTE(v10) = 10;
    sub_10019B6B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1001440F0()
{
  return sub_100143C1C(*v0);
}

uint64_t sub_1001440F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100144254(a1, a2);
  *a3 = result;
  return result;
}

void sub_100144120(unsigned char *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_10014412C(uint64_t a1)
{
  unint64_t v2 = sub_100145C24();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100144168(uint64_t a1)
{
  unint64_t v2 = sub_100145C24();

  return CodingKey.debugDescription.getter(a1, v2);
}

__n128 sub_1001441A4@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1001446F8(a1, v8);
  if (!v2)
  {
    long long v5 = v8[7];
    *(_OWORD *)(a2 + 96) = v8[6];
    *(_OWORD *)(a2 + 112) = v5;
    *(_OWORD *)(a2 + 128) = v8[8];
    long long v6 = v8[3];
    *(_OWORD *)(a2 + 32) = v8[2];
    *(_OWORD *)(a2 + 48) = v6;
    long long v7 = v8[5];
    *(_OWORD *)(a2 + 64) = v8[4];
    *(_OWORD *)(a2 + 80) = v7;
    __n128 result = (__n128)v8[1];
    *(_OWORD *)a2 = v8[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_100144200(void *a1)
{
  return sub_100143D84(a1);
}

uint64_t sub_100144254(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x63697274656DLL && a2 == 0xE600000000000000;
  if (v2 || (sub_10019B720() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5465736F70727570 && a2 == 0xEB00000000657079 || (sub_10019B720() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726564726FLL && a2 == 0xE500000000000000 || (sub_10019B720() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_10019B720() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000100213D00 || (sub_10019B720() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000100213D20 || (sub_10019B720() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_10019B720() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x68636E617262 && a2 == 0xE600000000000000 || (sub_10019B720() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEE006E6F734A7365 || (sub_10019B720() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000100213D40 || (sub_10019B720() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6D6E6F7269766E65 && a2 == 0xEB00000000746E65)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v6 = sub_10019B720();
    swift_bridgeObjectRelease();
    if (v6) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

uint64_t sub_1001446F8@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = sub_10000C440(&qword_100286380);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v80 = 1;
  uint64_t v9 = a1[3];
  uint64_t v54 = a1;
  sub_10007FDE0(a1, v9);
  sub_100145C24();
  sub_10019B820();
  if (v2)
  {
    _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v54);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v53 = v6;
    LOBYTE(v64[0]) = 0;
    uint64_t v10 = sub_10019B650();
    LOBYTE(v64[0]) = 1;
    uint64_t v11 = sub_10019B650();
    LOBYTE(v64[0]) = 2;
    uint64_t v52 = sub_10019B620();
    char v81 = v12 & 1;
    LOBYTE(v64[0]) = 3;
    int v51 = v12;
    uint64_t v50 = sub_10019B620();
    char v80 = v13 & 1;
    LOBYTE(v64[0]) = 4;
    int v49 = v13;
    uint64_t v14 = sub_10019B600();
    uint64_t v16 = v15;
    *(void *)&long long v48 = v14;
    LOBYTE(v64[0]) = 5;
    swift_bridgeObjectRetain();
    *((void *)&v48 + 1) = v16;
    uint64_t v45 = sub_10019B600();
    LOBYTE(v64[0]) = 6;
    uint64_t v47 = v17;
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_10019B600();
    uint64_t v46 = v18;
    uint64_t v19 = sub_10000C440(&qword_100286390);
    LOBYTE(v55) = 7;
    uint64_t v20 = sub_100145D80(&qword_100286398);
    swift_bridgeObjectRetain();
    uint64_t v43 = v20;
    uint64_t v44 = v19;
    sub_10019B630();
    uint64_t v40 = v11;
    uint64_t v41 = v10;
    uint64_t v39 = a2;
    uint64_t v21 = v64[0];
    LOBYTE(v64[0]) = 8;
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_10019B600();
    uint64_t v24 = v23;
    uint64_t v38 = v22;
    LOBYTE(v64[0]) = 9;
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_10019B600();
    uint64_t v27 = v26;
    char v82 = 10;
    swift_bridgeObjectRetain();
    sub_10019B630();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v8, v5);
    uint64_t v28 = v79;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&long long v55 = v41;
    *((void *)&v55 + 1) = v40;
    *(void *)&long long v56 = v52;
    BYTE8(v56) = v51 & 1;
    *(void *)&long long v57 = v50;
    BYTE8(v57) = v49 & 1;
    long long v58 = v48;
    uint64_t v29 = v46;
    *(void *)&long long v59 = v45;
    *((void *)&v59 + 1) = v47;
    *(void *)&long long v60 = v42;
    *((void *)&v60 + 1) = v46;
    *(void *)&long long v61 = v21;
    *((void *)&v61 + 1) = v38;
    *(void *)&long long v62 = v24;
    *((void *)&v62 + 1) = v25;
    *(void *)&long long v63 = v27;
    *((void *)&v63 + 1) = v28;
    sub_100145C78((uint64_t)&v55);
    swift_bridgeObjectRelease();
    uint64_t v30 = v47;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v54);
    v64[0] = v41;
    v64[1] = v40;
    v64[2] = v52;
    char v65 = v81;
    uint64_t v66 = v50;
    char v67 = v80;
    long long v68 = v48;
    uint64_t v69 = v45;
    uint64_t v70 = v30;
    uint64_t v71 = v42;
    uint64_t v72 = v29;
    uint64_t v73 = v21;
    uint64_t v74 = v38;
    uint64_t v75 = v24;
    uint64_t v76 = v25;
    uint64_t v77 = v27;
    uint64_t v78 = v28;
    uint64_t result = sub_100145CFC((uint64_t)v64);
    long long v32 = v62;
    unint64_t v33 = v39;
    v39[6] = v61;
    v33[7] = v32;
    v33[8] = v63;
    long long v34 = v58;
    void v33[2] = v57;
    void v33[3] = v34;
    long long v35 = v60;
    v33[4] = v59;
    v33[5] = v35;
    long long v36 = v56;
    *unint64_t v33 = v55;
    v33[1] = v36;
  }
  return result;
}

void sub_100144E68()
{
  uint64_t v0 = self;
  id v1 = [v0 sharedInstance];
  if (v1)
  {
    id v6 = v1;
    id v2 = [v0 sharedInstance];
    if (v2)
    {
      uint64_t v3 = v2;
      NSString v4 = sub_10019B0A0();
      aBlock[4] = sub_10016FD04;
      aBlock[5] = 0;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10015F008;
      aBlock[3] = &unk_1002377D0;
      uint64_t v5 = _Block_copy(aBlock);
      swift_release();
      [v3 subscribeForMessage:v4 handler:v5];
      _Block_release(v5);
    }
    else
    {
    }
  }
}

uint64_t sub_100144FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100144FD8()
{
  return swift_release();
}

uint64_t sub_100144FE0(uint64_t a1)
{
  uint64_t v43 = sub_10019ABD0();
  uint64_t v42 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v3 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10019B100();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100145784(a1 + 104, (uint64_t)v53, &qword_100286360);
  sub_100145784((uint64_t)v53, (uint64_t)v54, &qword_100286360);
  if (v54[1]
    && (sub_10019B0F0(),
        uint64_t v8 = sub_10019B0C0(),
        unint64_t v10 = v9,
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4),
        v10 >> 60 != 15))
  {
    int v12 = self;
    Class isa = sub_10019AA80().super.isa;
    v48[0] = 0;
    id v14 = [v12 JSONObjectWithData:isa options:0 error:v48];

    if (!v14)
    {
      id v36 = v48[0];
      sub_10019A9E0();

      swift_willThrow();
      uint64_t v37 = v8;
      unint64_t v38 = v10;
      return sub_10007FF14(v37, v38);
    }
    id v15 = v48[0];
    sub_10019B4D0();
    sub_10007FF14(v8, v10);
    swift_unknownObjectRelease();
    sub_10000C440(&qword_1002856E0);
    if (swift_dynamicCast()) {
      uint64_t v11 = v47;
    }
    else {
      uint64_t v11 = 0;
    }
  }
  else
  {
    uint64_t v11 = 0;
  }
  sub_100145784(a1 + 120, (uint64_t)v52, &qword_100286360);
  sub_100145784((uint64_t)v52, (uint64_t)v55, &qword_100286360);
  if (v55[1])
  {
    sub_10019B0F0();
    uint64_t v16 = sub_10019B0C0();
    unint64_t v18 = v17;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (v18 >> 60 != 15)
    {
      uint64_t v20 = self;
      Class v21 = sub_10019AA80().super.isa;
      v48[0] = 0;
      id v22 = [v20 JSONObjectWithData:v21 options:0 error:v48];

      if (v22)
      {
        id v23 = v48[0];
        sub_10019B4D0();
        sub_10007FF14(v16, v18);
        swift_unknownObjectRelease();
        sub_10000C440((uint64_t *)&unk_100286370);
        if (swift_dynamicCast()) {
          uint64_t v19 = v47;
        }
        else {
          uint64_t v19 = 0;
        }
        goto LABEL_15;
      }
      id v39 = v48[0];
      swift_bridgeObjectRelease();
      sub_10019A9E0();

      swift_willThrow();
      uint64_t v37 = v16;
      unint64_t v38 = v18;
      return sub_10007FF14(v37, v38);
    }
  }
  uint64_t v19 = 0;
LABEL_15:
  [self metricClass];
  uint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
  uint64_t v46 = *(void *)(a1 + 8);
  sub_100145784(a1 + 48, (uint64_t)v51, &qword_100286360);
  sub_100145784((uint64_t)v51, (uint64_t)v56, &qword_100286360);
  if (v56[1]) {
    NSString v45 = sub_10019B0A0();
  }
  else {
    NSString v45 = 0;
  }
  sub_100145784(a1 + 64, (uint64_t)v50, &qword_100286360);
  sub_100145784((uint64_t)v50, (uint64_t)v57, &qword_100286360);
  if (v57[1])
  {
    NSString v24 = sub_10019B0A0();
    if (*(void *)(a1 + 88)) {
      goto LABEL_23;
    }
LABEL_22:
    sub_10019ABC0();
    sub_10019ABB0();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v3, v43);
    goto LABEL_23;
  }
  NSString v24 = 0;
  if (!*(void *)(a1 + 88)) {
    goto LABEL_22;
  }
LABEL_23:
  swift_bridgeObjectRetain();
  NSString v25 = sub_10019B0A0();
  swift_bridgeObjectRelease();
  sub_100145784(a1 + 96, (uint64_t)v49, &qword_100286368);
  sub_100145784((uint64_t)v49, (uint64_t)&v58, &qword_100286368);
  if (v58)
  {
    v26.super.Class isa = sub_10019B2A0().super.isa;
    if (v11) {
      goto LABEL_25;
    }
LABEL_28:
    v27.super.Class isa = 0;
    if (v19) {
      goto LABEL_26;
    }
LABEL_29:
    v28.super.Class isa = 0;
    goto LABEL_30;
  }
  v26.super.Class isa = 0;
  if (!v11) {
    goto LABEL_28;
  }
LABEL_25:
  sub_10000C440(&qword_100285600);
  v27.super.Class isa = sub_10019B020().super.isa;
  swift_bridgeObjectRelease();
  if (!v19) {
    goto LABEL_29;
  }
LABEL_26:
  sub_10000C440((uint64_t *)&unk_100285B20);
  v28.super.Class isa = sub_10019B020().super.isa;
  swift_bridgeObjectRelease();
LABEL_30:
  swift_bridgeObjectRetain();
  v29.super.Class isa = sub_10019B2A0().super.isa;
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(a1 + 24)) {
    uint64_t v30 = 0;
  }
  else {
    uint64_t v30 = *(void *)(a1 + 16);
  }
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t v31 = 0;
  }
  else {
    uint64_t v31 = *(void *)(a1 + 32);
  }
  id v32 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v40 = v31;
  unint64_t v33 = v45;
  id v34 = [v32 initWithPurpose:v46 metric:*(void *)a1 contentIdentifier:v45 contextIdentifier:v24 handle:v25 branch:v26.super.isa properties:v27.super.isa internalProperties:v28.super.isa relayData:0 environment:v29.super.isa order:v30 options:v40];

  if (!v34) {
    return 0xD000000000000024;
  }
  [objc_msgSend(self, "storage") receivedMetric:v34];
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return 0x207363697274654DLL;
}

uint64_t sub_100145784(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10000C440(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

ValueMetadata *type metadata accessor for MetricsInjector()
{
  return &type metadata for MetricsInjector;
}

uint64_t destroy for MetricsInjector.MetricsInjectorParams()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MetricsInjector.MetricsInjectorParams(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v3 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v3;
  uint64_t v4 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v4;
  uint64_t v5 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v5;
  uint64_t v6 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v6;
  uint64_t v7 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v7;
  uint64_t v8 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MetricsInjector.MetricsInjectorParams(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for MetricsInjector.MetricsInjectorParams(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t assignWithTake for MetricsInjector.MetricsInjectorParams(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsInjector.MetricsInjectorParams(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 144)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 56);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsInjector.MetricsInjectorParams(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 144) = 0;
    }
    if (a2) {
      *(void *)(result + 56) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsInjector.MetricsInjectorParams()
{
  return &type metadata for MetricsInjector.MetricsInjectorParams;
}

unint64_t sub_100145C24()
{
  unint64_t result = qword_100286388;
  if (!qword_100286388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100286388);
  }
  return result;
}

uint64_t sub_100145C78(uint64_t a1)
{
  return a1;
}

uint64_t sub_100145CFC(uint64_t a1)
{
  return a1;
}

uint64_t sub_100145D80(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000788B8(&qword_100286390);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MetricsInjector.MetricsInjectorParams.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MetricsInjector.MetricsInjectorParams.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100145F40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsInjector.MetricsInjectorParams.CodingKeys()
{
  return &type metadata for MetricsInjector.MetricsInjectorParams.CodingKeys;
}

unint64_t sub_100145F7C()
{
  unint64_t result = qword_1002863B0;
  if (!qword_1002863B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002863B0);
  }
  return result;
}

unint64_t sub_100145FD4()
{
  unint64_t result = qword_1002863B8;
  if (!qword_1002863B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002863B8);
  }
  return result;
}

unint64_t sub_10014602C()
{
  unint64_t result = qword_1002863C0;
  if (!qword_1002863C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002863C0);
  }
  return result;
}

uint64_t sub_100146080()
{
  id v1 = v0;
  uint64_t v2 = sub_10019ACD0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10019AC90();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10019A9C0();
  uint64_t v26 = *(void *)(v10 - 8);
  uint64_t v27 = v10;
  __chkstk_darwin(v10);
  int v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10019ABA0();
  uint64_t v13 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  id v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = [v1 now];
  sub_10019AB70();

  if (qword_100284F90 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_100128E40(v6, (uint64_t)qword_10028D320);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v17, v6);
  if (qword_100284FB0 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_100128E40(v2, (uint64_t)qword_10028D368);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v18, v2);
  sub_10019AC30();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t result = sub_10019A910();
  if (v20)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v21 = result;
  uint64_t result = sub_10019A920();
  if (v22)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t result = sub_10019A8D0();
  if ((v23 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v25);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v12, v27);
    return v21;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100146444()
{
  uint64_t v1 = v0;
  sub_10010B568(v0 + 16, (uint64_t)&v116);
  uint64_t v103 = type metadata accessor for ObservabilityXPCTimer();
  swift_allocObject();
  uint64_t v2 = sub_10015FD5C((uint64_t)&v116);
  uint64_t v102 = type metadata accessor for ObservabilityRegularTimer();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 24) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v4 = v3 + OBJC_IVAR____TtC7Metrics25ObservabilityRegularTimer_scheduledTime;
  uint64_t v5 = sub_10019ABA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(void *)(v3 + OBJC_IVAR____TtC7Metrics25ObservabilityRegularTimer_dispatchWorkItem) = 0;
  uint64_t v107 = v3;
  uint64_t v6 = OBJC_IVAR____TtC7Metrics25ObservabilityRegularTimer_lock;
  *(void *)(v3 + v6) = [objc_allocWithZone((Class)APUnfairLock) initWithOptions:1];
  uint64_t v7 = type metadata accessor for ObservabilityPeriodicPlanner();
  uint64_t v8 = (void *)swift_allocObject();
  uint64_t v110 = v2;
  swift_retain();
  swift_retain();
  unint64_t v9 = sub_10014774C(0, 0, v2, v3, v8);
  *((void *)&v117 + 1) = v7;
  *(void *)&long long v118 = &off_100237E50;
  *(void *)&long long v116 = v9;
  unint64_t v108 = v9;
  type metadata accessor for QueryingPeriodicScheduler();
  uint64_t v10 = (void *)swift_allocObject();
  uint64_t v11 = sub_100132FEC((uint64_t)&v116, v7);
  __chkstk_darwin(v11);
  uint64_t v13 = (uint64_t *)((char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v14 + 16))(v13);
  uint64_t v15 = *v13;
  uint64_t v109 = v10;
  v10[5] = v7;
  v10[6] = &off_100237E50;
  v10[2] = v15;
  v10[7] = &_swiftEmptyArrayStorage;
  uint64_t v99 = v10 + 7;
  swift_retain();
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)&v116);
  id v16 = *(void **)(v1 + 56);
  uint64_t v17 = type metadata accessor for ObservabilitySignalDatabase();
  uint64_t v18 = swift_allocObject();
  sub_10000C6C8(0, (unint64_t *)&qword_100284870);
  id v19 = v16;
  sub_10019B470();
  sub_10019AE20();
  swift_allocObject();
  *(void *)(v18 + 16) = sub_10019AE10();
  *((void *)&v117 + 1) = v17;
  *(void *)&long long v118 = &off_100237950;
  *(void *)&long long v116 = v18;
  type metadata accessor for ObservabilityCachingSignalStore();
  uint64_t v20 = swift_allocObject();
  uint64_t v106 = v20;
  *(void *)(v20 + 56) = 0;
  sub_100132A7C(&v116, v20 + 16);
  type metadata accessor for ObservabilityStateStoreDatabase();
  uint64_t v21 = swift_allocObject();
  uint64_t v98 = v21;
  id v22 = v19;
  uint64_t v101 = v18;
  swift_retain();
  sub_10019B470();
  swift_allocObject();
  *(void *)(v21 + 16) = sub_10019AE10();
  id v23 = [objc_allocWithZone((Class)APSystemClock) init];
  uint64_t v24 = (objc_class *)type metadata accessor for PropertyListFileManagerFileSystem();
  id v25 = [objc_allocWithZone(v24) init];
  *((void *)&v117 + 1) = v24;
  *(void *)&long long v118 = &off_1002372E0;
  *(void *)&long long v116 = v25;
  uint64_t v26 = type metadata accessor for NormalizedScaleFactorPropertyListStore();
  uint64_t v27 = (void *)swift_allocObject();
  uint64_t v28 = sub_100132FEC((uint64_t)&v116, (uint64_t)v24);
  __chkstk_darwin(v28);
  uint64_t v30 = (uint64_t *)((char *)&v88 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v31 + 16))(v30);
  uint64_t v32 = *v30;
  v27[5] = v24;
  void v27[6] = &off_1002372E0;
  v27[2] = v32;
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)&v116);
  *((void *)&v117 + 1) = v26;
  *(void *)&long long v118 = &off_1002381C0;
  *(void *)&long long v116 = v27;
  uint64_t v33 = type metadata accessor for LoggingNormalizedScaleFactorStore();
  uint64_t v34 = swift_allocObject();
  sub_100132A7C(&v116, v34 + 16);
  uint64_t v35 = type metadata accessor for RandomTimeRangeOffset();
  uint64_t v36 = swift_allocObject();
  *((void *)&v117 + 1) = v33;
  *(void *)&long long v118 = &off_1002375F8;
  *(void *)&long long v116 = v34;
  uint64_t v112 = v35;
  long long v113 = &off_100237D10;
  *(void *)&long long v111 = v36;
  uint64_t v37 = type metadata accessor for PersistentTimeRangeOffset();
  uint64_t v38 = swift_allocObject();
  sub_100132A7C(&v116, v38 + 16);
  sub_100132A7C(&v111, v38 + 56);
  *((void *)&v117 + 1) = v37;
  *(void *)&long long v118 = &off_1002373C0;
  *(void *)&long long v116 = v38;
  uint64_t v39 = type metadata accessor for LoggingTimeRangeOffset();
  uint64_t v40 = swift_allocObject();
  sub_100132A7C(&v116, v40 + 16);
  *((void *)&v117 + 1) = v39;
  *(void *)&long long v118 = &off_100237060;
  *(void *)&long long v116 = v40;
  uint64_t v41 = type metadata accessor for CachingTimeRangeOffset();
  uint64_t v97 = v41;
  uint64_t v42 = swift_allocObject();
  *(_DWORD *)(v42 + 56) = 0;
  *(unsigned char *)(v42 + 60) = 1;
  uint64_t v43 = v42;
  sub_100132A7C(&v116, v42 + 16);
  *((void *)&v117 + 1) = v41;
  *(void *)&long long v118 = &off_1002373D0;
  *(void *)&long long v116 = v43;
  uint64_t v105 = v43;
  type metadata accessor for OffsetTimeRangeReferenceFrame();
  uint64_t v104 = swift_allocObject();
  sub_100132A7C(&v116, v104 + 16);
  uint64_t v100 = v38;
  swift_retain();
  swift_retain();
  uint64_t v44 = sub_100147BE8();
  uint64_t v95 = v45;
  uint64_t v96 = v44;
  uint64_t v93 = v47;
  uint64_t v94 = v46;
  uint64_t v48 = type metadata accessor for ObservabilityErrorBucketConfigSystemJSONSource();
  uint64_t v49 = swift_allocObject();
  *(unsigned char *)(v49 + 16) = 0;
  *((void *)&v117 + 1) = v48;
  uint64_t v50 = sub_100148428(&qword_1002864C0, (void (*)(uint64_t))type metadata accessor for ObservabilityErrorBucketConfigSystemJSONSource);
  *(void *)&long long v118 = v50;
  *(void *)&long long v116 = v49;
  uint64_t v51 = type metadata accessor for DefaultObservabilityClientErrorBucketConfigurationStore();
  uint64_t v52 = swift_allocObject();
  uint64_t v112 = v51;
  uint64_t v89 = sub_100148428(&qword_1002864C8, (void (*)(uint64_t))type metadata accessor for DefaultObservabilityClientErrorBucketConfigurationStore);
  long long v113 = (_UNKNOWN **)v89;
  *(void *)&long long v111 = v52;
  uint64_t v53 = sub_10019AF10();
  swift_allocObject();
  id v92 = v23;
  uint64_t v54 = sub_10019AF00();
  *((void *)&v117 + 1) = v53;
  *(void *)&long long v118 = &protocol witness table for JSONIntBucketConfigurationStore;
  *(void *)&long long v116 = v54;
  sub_10019AEF0();
  swift_allocObject();
  uint64_t v91 = sub_10019AED0();
  uint64_t v55 = swift_allocObject();
  *(unsigned char *)(v55 + 16) = 1;
  *((void *)&v117 + 1) = v48;
  *(void *)&long long v118 = v50;
  *(void *)&long long v116 = v55;
  uint64_t v56 = type metadata accessor for DefaultObservabilityServerErrorBucketConfigurationStore();
  uint64_t v57 = swift_allocObject();
  uint64_t v112 = v56;
  uint64_t v58 = sub_100148428(&qword_1002864D0, (void (*)(uint64_t))type metadata accessor for DefaultObservabilityServerErrorBucketConfigurationStore);
  long long v113 = (_UNKNOWN **)v58;
  *(void *)&long long v111 = v57;
  swift_allocObject();
  uint64_t v59 = sub_10019AF00();
  *((void *)&v117 + 1) = v53;
  *(void *)&long long v118 = &protocol witness table for JSONIntBucketConfigurationStore;
  *(void *)&long long v116 = v59;
  swift_allocObject();
  uint64_t v90 = sub_10019AED0();
  uint64_t v60 = swift_allocObject();
  *(unsigned char *)(v60 + 16) = 2;
  *((void *)&v117 + 1) = v48;
  *(void *)&long long v118 = v50;
  *(void *)&long long v116 = v60;
  uint64_t v61 = swift_allocObject();
  uint64_t v112 = v51;
  long long v113 = (_UNKNOWN **)v89;
  *(void *)&long long v111 = v61;
  swift_allocObject();
  uint64_t v62 = sub_10019AF00();
  *((void *)&v117 + 1) = v53;
  *(void *)&long long v118 = &protocol witness table for JSONIntBucketConfigurationStore;
  *(void *)&long long v116 = v62;
  swift_allocObject();
  uint64_t v63 = sub_10019AED0();
  uint64_t v64 = swift_allocObject();
  *(unsigned char *)(v64 + 16) = 3;
  *((void *)&v117 + 1) = v48;
  *(void *)&long long v118 = v50;
  *(void *)&long long v116 = v64;
  uint64_t v65 = swift_allocObject();
  uint64_t v112 = v56;
  long long v113 = (_UNKNOWN **)v58;
  *(void *)&long long v111 = v65;
  swift_allocObject();
  uint64_t v66 = sub_10019AF00();
  *((void *)&v117 + 1) = v53;
  *(void *)&long long v118 = &protocol witness table for JSONIntBucketConfigurationStore;
  *(void *)&long long v116 = v66;
  swift_allocObject();
  uint64_t v67 = sub_10019AED0();
  id v68 = [objc_allocWithZone((Class)type metadata accessor for ECPrimitiveCreator()) init];
  type metadata accessor for ECPrimitiveEventSink();
  uint64_t v69 = swift_allocObject();
  *(void *)(v69 + 16) = v68;
  uint64_t v70 = v104;
  swift_retain();
  uint64_t v71 = v106;
  swift_retain();
  uint64_t v72 = swift_retain();
  uint64_t v87 = v67;
  id v73 = v92;
  uint64_t v74 = v63;
  uint64_t v75 = v72;
  uint64_t v76 = sub_100147FB8(v94, v93, (uint64_t)v92, v91, v90, v96, v95, v74, v87, v69, v70, v71, v72);

  id v77 = v73;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v78 = sub_100147308((uint64_t)v77, v71, v70, (uint64_t)v76);
  sub_10000C440(&qword_1002864D8);
  uint64_t v79 = swift_allocObject();
  *(_OWORD *)(v79 + 16) = xmmword_1001D69A0;
  *(void *)(v79 + 56) = type metadata accessor for ObservabilityWorkSource();
  *(void *)(v79 + 64) = &off_100237318;
  *(void *)(v79 + 32) = v78;
  swift_beginAccess();
  swift_retain();
  uint64_t v80 = swift_bridgeObjectRetain();
  sub_10014EEA0(v80);
  swift_endAccess();
  swift_setDeallocating();
  sub_10000C440(&qword_1002864E0);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v81 = (uint64_t)v109;
  v108[3] = &off_100237A88;
  swift_unknownObjectWeakAssign();
  id v82 = v77;
  swift_retain();
  swift_retain();
  swift_retain();
  Swift::String v83 = sub_10014752C((uint64_t)v82, v81, v71, v75);
  uint64_t v112 = v97;
  long long v113 = &off_1002373D0;
  *(void *)&long long v111 = v105;
  v115[4] = &off_100238020;
  v115[3] = v103;
  v114[4] = &off_100237990;
  v115[0] = v110;
  v114[3] = v102;
  v114[0] = v107;
  Swift::String v84 = self;
  swift_retain();
  swift_retain();
  swift_retain();
  if ([v84 isAppleInternalInstall])
  {
    sub_10010B568((uint64_t)&v111, (uint64_t)&v116);
    sub_10010B568((uint64_t)v115, (uint64_t)&v119[1]);
    sub_10010B568((uint64_t)v114, (uint64_t)v120);
    *((void *)&v118 + 1) = v75;
    v119[0] = v101;
    swift_retain();
    swift_retain();
  }
  else
  {
    uint64_t v121 = 0;
    memset(v120, 0, sizeof(v120));
    long long v118 = 0u;
    memset(v119, 0, sizeof(v119));
    long long v116 = 0u;
    long long v117 = 0u;
  }
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v114);
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v115);
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)&v111);
  sub_1001482A4((uint64_t)&v116, (uint64_t)&v111);
  type metadata accessor for ObservabilityManager();
  uint64_t v85 = swift_allocObject();
  *(_OWORD *)(v85 + 40) = 0u;
  *(_OWORD *)(v85 + 56) = 0u;
  *(_OWORD *)(v85 + 72) = 0u;
  *(_OWORD *)(v85 + 88) = 0u;
  *(_OWORD *)(v85 + 104) = 0u;
  *(_OWORD *)(v85 + 120) = 0u;
  *(_OWORD *)(v85 + 136) = 0u;
  *(void *)(v85 + 152) = 0;
  *(_OWORD *)(v85 + 24) = 0u;
  *(void *)(v85 + 16) = v83;
  swift_beginAccess();
  swift_retain();
  sub_10014830C((uint64_t)&v111, v85 + 24);
  swift_endAccess();
  [self setSignalMonitor:v83];
  if ([v84 isAppleInternalInstall])
  {
    sub_1001482A4((uint64_t)&v116, (uint64_t)&v111);
    if (v112)
    {
      sub_10012C9FC();
      sub_1001483D4((uint64_t)&v111);
    }
    else
    {
      sub_100148374((uint64_t)&v111);
    }
    sub_100144E68();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_100148374((uint64_t)&v116);
  }
  else
  {
    sub_100148374((uint64_t)&v116);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  return v85;
}

uint64_t sub_1001472A4()
{
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ObservabilityManagerBuilder()
{
  return self;
}

void *sub_100147308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = type metadata accessor for ObservabilityCachingSignalStore();
  uint64_t v29 = &off_100237408;
  *(void *)&long long v27 = a2;
  uint64_t v8 = type metadata accessor for OffsetTimeRangeReferenceFrame();
  v26[3] = v8;
  v26[4] = &off_100237980;
  v26[0] = a3;
  uint64_t v9 = type metadata accessor for ObservabilityProductionWorkerFactory();
  uint64_t v24 = v9;
  id v25 = &off_100238528;
  v23[0] = a4;
  type metadata accessor for ObservabilityWorkSource();
  uint64_t v10 = (void *)swift_allocObject();
  uint64_t v11 = sub_100132FEC((uint64_t)v26, v8);
  __chkstk_darwin(v11);
  uint64_t v13 = (void *)((char *)&v23[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v14 + 16))(v13);
  uint64_t v15 = sub_100132FEC((uint64_t)v23, v24);
  __chkstk_darwin(v15);
  uint64_t v17 = (void *)((char *)&v23[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v18 + 16))(v17);
  uint64_t v19 = *v13;
  uint64_t v20 = *v17;
  v10[11] = v8;
  v10[12] = &off_100237980;
  v10[8] = v19;
  uint8_t v10[16] = v9;
  v10[17] = &off_100238528;
  v10[13] = v20;
  v10[2] = a1;
  sub_100132A7C(&v27, (uint64_t)(v10 + 3));
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v23);
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v26);
  return v10;
}

void *sub_10014752C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for QueryingPeriodicScheduler();
  v29[3] = v8;
  v29[4] = &off_100237A98;
  v29[0] = a2;
  uint64_t v27 = type metadata accessor for ObservabilityCachingSignalStore();
  uint64_t v28 = &off_100237408;
  *(void *)&long long v26 = a3;
  uint64_t v9 = type metadata accessor for ObservabilityStateStoreDatabase();
  uint64_t v24 = v9;
  id v25 = &off_100237CB8;
  v23[0] = a4;
  type metadata accessor for ObservabilitySignalMonitor();
  uint64_t v10 = (void *)swift_allocObject();
  uint64_t v11 = sub_100132FEC((uint64_t)v29, v8);
  __chkstk_darwin(v11);
  uint64_t v13 = (void *)((char *)&v23[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v14 + 16))(v13);
  uint64_t v15 = sub_100132FEC((uint64_t)v23, v24);
  __chkstk_darwin(v15);
  uint64_t v17 = (void *)((char *)&v23[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v18 + 16))(v17);
  uint64_t v19 = *v13;
  uint64_t v20 = *v17;
  v10[6] = v8;
  v10[7] = &off_100237A98;
  uint8_t v10[16] = v9;
  v10[17] = &off_100237CB8;
  v10[13] = v20;
  v10[2] = a1;
  v10[3] = v19;
  sub_100132A7C(&v26, (uint64_t)(v10 + 8));
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v23);
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v29);
  return v10;
}

void *sub_10014774C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v22 = a2;
  uint64_t v23 = a1;
  uint64_t v21 = sub_10019B410();
  uint64_t v8 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10019B3E0();
  __chkstk_darwin(v11);
  uint64_t v12 = sub_10019AFB0();
  __chkstk_darwin(v12 - 8);
  v26[3] = type metadata accessor for ObservabilityXPCTimer();
  v26[4] = &off_100238020;
  v26[0] = a3;
  void v25[3] = type metadata accessor for ObservabilityRegularTimer();
  v25[4] = &off_100237990;
  v25[0] = a4;
  a5[3] = 0;
  swift_unknownObjectWeakInit();
  sub_10000C6C8(0, (unint64_t *)&unk_1002869C0);
  sub_10019AFA0();
  uint64_t v24 = &_swiftEmptyArrayStorage;
  sub_100148428(&qword_100286500, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000C440((uint64_t *)&unk_1002869D0);
  sub_100148470();
  sub_10019B4E0();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v21);
  a5[14] = sub_10019B430();
  a5[3] = v22;
  swift_unknownObjectWeakAssign();
  sub_10010B568((uint64_t)v26, (uint64_t)(a5 + 4));
  sub_10010B568((uint64_t)v25, (uint64_t)(a5 + 9));
  swift_beginAccess();
  uint64_t v13 = a5[7];
  uint64_t v14 = a5[8];
  sub_100132FEC((uint64_t)(a5 + 4), v13);
  uint64_t v15 = *(void (**)(void *, _UNKNOWN **, uint64_t, uint64_t))(v14 + 16);
  swift_retain();
  v15(a5, &off_100237E40, v13, v14);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v16 = a5[12];
  uint64_t v17 = a5[13];
  sub_100132FEC((uint64_t)(a5 + 9), v16);
  uint64_t v18 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v17 + 16);
  uint64_t v19 = swift_retain();
  v18(v19, &off_100237E40, v16, v17);
  swift_endAccess();
  sub_10015D1AC();
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v25);
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v26);
  return a5;
}

uint64_t sub_100147AE8(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16)) {
    return 0;
  }
  unint64_t v4 = sub_100076504(0x6E6F6973726576, 0xE700000000000000);
  if ((v5 & 1) == 0) {
    return 0;
  }
  sub_100076430(*(void *)(a1 + 56) + 32 * v4, (uint64_t)v11);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (!*(void *)(a1 + 16)) {
    return 0;
  }
  uint64_t v6 = v10;
  unint64_t v7 = sub_100076504(0x7374656B637562, 0xE700000000000000);
  if ((v8 & 1) == 0) {
    return 0;
  }
  sub_100076430(*(void *)(a1 + 56) + 32 * v7, (uint64_t)v11);
  sub_10000C440(a2);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  return v6;
}

uint64_t sub_100147BE8()
{
  uint64_t v0 = self;
  sub_10000C6C8(0, (unint64_t *)&qword_100282D20);
  id v1 = [v0 configurationForClass:swift_getObjCClassFromMetadata()];
  self;
  uint64_t v2 = (void *)swift_dynamicCastObjCClass();
  if (!v2) {
    goto LABEL_7;
  }
  uint64_t v3 = v2;
  id v4 = [v2 createdToBufferedTimeHistogram];
  uint64_t v5 = sub_10019B040();

  unint64_t v6 = sub_100075FAC(v5);
  swift_bridgeObjectRelease();
  if (!v6 || (v7 = sub_100147AE8(v6, &qword_1002864F8), uint64_t v9 = v8, swift_bridgeObjectRelease(), !v9))
  {
LABEL_7:
    swift_unknownObjectRelease();
LABEL_8:
    NSString v15 = sub_10019B0A0();
    APSimulateCrash();

    return 0;
  }
  id v10 = [v3 bufferedTimeHistogram];
  uint64_t v11 = sub_10019B040();

  unint64_t v12 = sub_100075FAC(v11);
  swift_bridgeObjectRelease();
  if (!v12)
  {
    swift_unknownObjectRelease();
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_100147AE8(v12, &qword_1002864F0);
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (!v14) {
    goto LABEL_11;
  }
  return v7;
}

void *sub_100147DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  uint64_t v31 = sub_10019AEF0();
  uint64_t v32 = &protocol witness table for ConfigurableIntBucketStrategy;
  v29[4] = &protocol witness table for ConfigurableIntBucketStrategy;
  v30[0] = a4;
  v29[3] = v31;
  v28[4] = &protocol witness table for ConfigurableIntBucketStrategy;
  v29[0] = a5;
  v28[3] = v31;
  v28[0] = a8;
  v27[3] = v31;
  v27[4] = &protocol witness table for ConfigurableIntBucketStrategy;
  v27[0] = a9;
  v26[3] = type metadata accessor for ObservabilityCachingSignalStore();
  v26[4] = &off_100237408;
  v26[0] = a12;
  void v25[3] = type metadata accessor for ECPrimitiveEventSink();
  v25[4] = &off_100237FF0;
  v25[0] = a10;
  void v24[3] = type metadata accessor for OffsetTimeRangeReferenceFrame();
  v24[4] = &off_100237980;
  v24[0] = a11;
  void v23[3] = type metadata accessor for ObservabilityStateStoreDatabase();
  v23[4] = &off_100237CB8;
  v23[0] = a13;
  a14[2] = a1;
  a14[3] = a2;
  a14[4] = a3;
  sub_10010B568((uint64_t)v30, (uint64_t)(a14 + 5));
  sub_10010B568((uint64_t)v29, (uint64_t)(a14 + 10));
  a14[15] = a6;
  a14[16] = a7;
  sub_10010B568((uint64_t)v28, (uint64_t)(a14 + 17));
  sub_10010B568((uint64_t)v27, (uint64_t)(a14 + 22));
  sub_10010B568((uint64_t)v25, (uint64_t)(a14 + 27));
  sub_10010B568((uint64_t)v24, (uint64_t)(a14 + 32));
  sub_10010B568((uint64_t)v26, (uint64_t)(a14 + 37));
  sub_10010B568((uint64_t)v23, (uint64_t)(a14 + 42));
  swift_unknownObjectRetain();
  sub_10016BA68();
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v23);
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v26);
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v24);
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v25);
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v27);
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v28);
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v29);
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v30);
  return a14;
}

void *sub_100147FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v35 = a7;
  uint64_t v36 = a8;
  uint64_t v33 = a5;
  uint64_t v34 = a6;
  uint64_t v32 = a4;
  uint64_t v44 = type metadata accessor for ECPrimitiveEventSink();
  uint64_t v45 = &off_100237FF0;
  v43[0] = a10;
  uint64_t v41 = type metadata accessor for OffsetTimeRangeReferenceFrame();
  uint64_t v42 = &off_100237980;
  v40[0] = a11;
  uint64_t v38 = type metadata accessor for ObservabilityStateStoreDatabase();
  uint64_t v39 = &off_100237CB8;
  v37[0] = a13;
  type metadata accessor for ObservabilityProductionWorkerFactory();
  uint64_t v16 = (void *)swift_allocObject();
  uint64_t v17 = sub_100132FEC((uint64_t)v43, v44);
  __chkstk_darwin(v17);
  uint64_t v19 = (uint64_t *)((char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v20 + 16))(v19);
  uint64_t v21 = sub_100132FEC((uint64_t)v40, v41);
  __chkstk_darwin(v21);
  uint64_t v23 = (uint64_t *)((char *)&v31 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v24 + 16))(v23);
  uint64_t v25 = sub_100132FEC((uint64_t)v37, v38);
  __chkstk_darwin(v25);
  uint64_t v27 = (uint64_t *)((char *)&v31 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v28 + 16))(v27);
  uint64_t v29 = sub_100147DF8(a1, a2, a3, v32, v33, v34, v35, v36, a9, *v19, *v23, a12, *v27, v16);
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v37);
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v40);
  _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v43);
  return v29;
}

uint64_t sub_1001482A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000C440(&qword_1002864E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10014830C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000C440(&qword_1002864E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100148374(uint64_t a1)
{
  uint64_t v2 = sub_10000C440(&qword_1002864E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001483D4(uint64_t a1)
{
  return a1;
}

uint64_t sub_100148428(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100148470()
{
  unint64_t result = qword_100286508;
  if (!qword_100286508)
  {
    sub_1000788B8((uint64_t *)&unk_1002869D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100286508);
  }
  return result;
}

uint64_t sub_1001484CC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10000C440(&qword_100282D10);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10019ABA0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_10000C4EC(a1);
    unint64_t v13 = sub_100136A74(a2);
    if (v14)
    {
      unint64_t v15 = v13;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v17 = *v3;
      uint64_t v21 = *v3;
      *uint64_t v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1001422C4();
        uint64_t v17 = v21;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 32))(v8, *(void *)(v17 + 56) + *(void *)(v10 + 72) * v15, v9);
      sub_100159550(v15, v17);
      *uint64_t v3 = v17;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    }
    return sub_10000C4EC((uint64_t)v8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_10014A044((uint64_t)v12, a2, v18);
    *uint64_t v3 = v21;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100148718(unsigned __int8 a1)
{
  sub_10000C440((uint64_t *)&unk_100284880);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1001D69A0;
  *(void *)(v2 + 56) = &type metadata for Int;
  *(void *)(v2 + 64) = &protocol witness table for Int;
  *(void *)(v2 + 32) = a1;
  sub_10019ABA0();
  sub_10019ADF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100148870@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_10007FDE0(a1, a1[3]);
  double v3 = COERCE_DOUBLE(sub_10019AD70());
  if ((v4 & 1) != 0 || v3 <= 0.0)
  {
    uint64_t v7 = sub_10019ABA0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a2, 1, 1, v7);
  }
  else
  {
    sub_10019AB40();
    uint64_t v5 = sub_10019ABA0();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a2, 0, 1, v5);
  }
}

uint64_t sub_100148954()
{
  sub_100142628((uint64_t)_swiftEmptyArrayStorage);
  sub_10000C440(&qword_1002865F8);
  sub_10019ADE0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_100148A1C(uint64_t a1, void *a2)
{
  uint64_t v18 = a1;
  uint64_t v4 = sub_10000C440(&qword_100282D10);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10019ABA0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007FDE0(a2, a2[3]);
  uint64_t result = sub_10019AD80();
  if (!v2)
  {
    uint64_t v16 = v6;
    uint64_t v17 = v8;
    sub_10019AB40();
    sub_10007FDE0(a2, a2[3]);
    unint64_t v12 = sub_10019ADA0();
    char v13 = sub_100165CC0(v12);
    uint64_t v14 = (uint64_t)v16;
    uint64_t v15 = v17;
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v16, v10, v7);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v14, 0, 1, v7);
    sub_1001484CC(v14, v13);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v10, v7);
  }
  return result;
}

uint64_t sub_100148CC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v28 = (void *)a3;
  uint64_t v31 = sub_10019A9C0();
  uint64_t v30 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10019AC90();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000C440(&qword_100282D10);
  __chkstk_darwin(v10 - 8);
  unint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10019ABA0();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000C440(&qword_1002865D8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001D6910;
  sub_10019AB50();
  *(void *)(inited + 56) = &type metadata for Double;
  *(void *)(inited + 64) = &protocol witness table for Double;
  *(void *)(inited + 32) = v18;
  if (qword_100284F90 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_100128E40(v6, (uint64_t)qword_10028D320);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v19, v6);
  uint64_t v20 = type metadata accessor for TimeRange();
  sub_100155230(*(unsigned char *)(a1 + *(int *)(v20 + 20)));
  sub_10019AC70();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v31);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    sub_10019AB50();
    uint64_t v23 = v22;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    *(void *)(inited + 96) = &type metadata for Double;
    *(void *)(inited + 104) = &protocol witness table for Double;
    *(void *)(inited + 72) = v23;
    uint64_t v24 = v29;
    *(void *)(inited + 136) = &type metadata for Int;
    *(void *)(inited + 144) = &protocol witness table for Int;
    *(void *)(inited + 112) = v24;
    sub_100149214(inited);
    swift_bridgeObjectRelease();
    type metadata accessor for ObservabilitySignal();
    sub_10019AE00();
    swift_bridgeObjectRelease();
    if (v37)
    {
      sub_10010B568((uint64_t)&v35, (uint64_t)&v32);
    }
    else
    {
      long long v32 = v35;
      long long v33 = v36;
      uint64_t v34 = v38;
    }
    if (*((void *)&v33 + 1))
    {
      if (v37) {
        _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)&v35);
      }
      return sub_100132A7C(&v32, (uint64_t)v28);
    }
    else
    {
      uint64_t v25 = sub_10000C440(&qword_1002865E8);
      uint64_t v26 = v28;
      v28[3] = v25;
      uint64_t result = sub_100149F94();
      v26[4] = result;
      *uint64_t v26 = _swiftEmptyArrayStorage;
      if (v37)
      {
        uint64_t result = _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)&v35);
        if (*((void *)&v33 + 1)) {
          return _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)&v32);
        }
      }
    }
  }
  return result;
}

void *sub_100149214(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
    sub_10010C2B4(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = _swiftEmptyArrayStorage;
    do
    {
      sub_10010B568(v4, (uint64_t)v8);
      sub_10000C440(&qword_1002865E0);
      sub_10000C440((uint64_t *)&unk_100287F00);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10010C2B4(0, v2[2] + 1, 1);
        uint64_t v2 = v10;
      }
      unint64_t v6 = v2[2];
      unint64_t v5 = v2[3];
      if (v6 >= v5 >> 1)
      {
        sub_10010C2B4((void *)(v5 > 1), v6 + 1, 1);
        uint64_t v2 = v10;
      }
      v2[2] = v6 + 1;
      sub_10010C2D4((uint64_t)v9, (uint64_t)&v2[5 * v6 + 4]);
      v4 += 40;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void *sub_100149350(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    sub_10016CFF4(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = _swiftEmptyArrayStorage;
    do
    {
      sub_10000C440(&qword_100286600);
      sub_10000C440(&qword_100287F30);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10016CFF4(0, v2[2] + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = v2[2];
      unint64_t v5 = v2[3];
      if (v6 >= v5 >> 1)
      {
        sub_10016CFF4(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v2[2] = v6 + 1;
      sub_100132A7C(&v8, (uint64_t)&v2[5 * v6 + 4]);
      v4 += 16;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void *sub_100149488(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    sub_10016D074(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = _swiftEmptyArrayStorage;
    do
    {
      sub_10000C440(&qword_100286608);
      sub_10000C440(&qword_100286610);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10016D074(0, v2[2] + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = v2[2];
      unint64_t v5 = v2[3];
      if (v6 >= v5 >> 1)
      {
        sub_10016D074(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v2[2] = v6 + 1;
      sub_100132A7C(&v8, (uint64_t)&v2[5 * v6 + 4]);
      v4 += 16;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1001495C0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_10010B568(a1, (uint64_t)v6);
  sub_1001535A4(a2);
  uint64_t result = sub_100149FF0((uint64_t)v6);
  if (!v2)
  {
    uint64_t v5 = type metadata accessor for ObservabilitySignal();
    return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a2, 0, 1, v5);
  }
  return result;
}

void sub_100149660(uint64_t a1, uint64_t a2)
{
  uint64_t v26 = a2;
  uint64_t v28 = sub_10019A9C0();
  uint64_t v27 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10019AC90();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000C440(&qword_100282D10);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10019ABA0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000C440(&qword_1002865D8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001D6910;
  sub_10019AB50();
  *(void *)(inited + 32) = v17;
  v25[1] = inited + 32;
  *(void *)(inited + 56) = &type metadata for Double;
  *(void *)(inited + 64) = &protocol witness table for Double;
  if (qword_100284F90 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_100128E40(v5, (uint64_t)qword_10028D320);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v18, v5);
  uint64_t v19 = type metadata accessor for TimeRange();
  sub_100155230(*(unsigned char *)(a1 + *(int *)(v19 + 20)));
  sub_10019AC70();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v28);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    sub_10019AB50();
    uint64_t v21 = v20;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    *(void *)(inited + 96) = &type metadata for Double;
    *(void *)(inited + 104) = &protocol witness table for Double;
    *(void *)(inited + 72) = v21;
    uint64_t v22 = v26;
    *(void *)(inited + 136) = &type metadata for Int;
    *(void *)(inited + 144) = &protocol witness table for Int;
    *(void *)(inited + 112) = v22;
    sub_100149214(inited);
    swift_setDeallocating();
    sub_10000C440(&qword_1002865E0);
    swift_arrayDestroy();
    char v23 = sub_10019ADD0();
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      sub_10019B3B0();
      sub_100080160();
      uint64_t v24 = (void *)sub_10019B470();
      sub_10019AF50();
    }
  }
}

void sub_100149B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ObservabilitySignalSerializer();
  __chkstk_darwin(v6 - 8);
  long long v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100149ED4(a2, (uint64_t)v8);
  uint64_t v9 = *(void *)(a3 + 56);
  uint64_t v23 = a3 + 56;
  uint64_t v10 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v9;
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v14 = 0;
  unint64_t v22 = 0x800000010020C420;
  while (v12)
  {
    unint64_t v15 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    unint64_t v16 = v15 | (v14 << 6);
LABEL_20:
    sub_100151FEC(a1, *(unsigned char *)(*(void *)(a3 + 48) + v16));
    char v20 = sub_10019ADD0();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
      sub_10019B3B0();
      sub_100080160();
      uint64_t v21 = (void *)sub_10019B470();
      sub_10019AF50();
    }
  }
  int64_t v17 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v17 >= v13) {
    goto LABEL_22;
  }
  unint64_t v18 = *(void *)(v23 + 8 * v17);
  ++v14;
  if (v18) {
    goto LABEL_19;
  }
  int64_t v14 = v17 + 1;
  if (v17 + 1 >= v13) {
    goto LABEL_22;
  }
  unint64_t v18 = *(void *)(v23 + 8 * v14);
  if (v18) {
    goto LABEL_19;
  }
  int64_t v14 = v17 + 2;
  if (v17 + 2 >= v13) {
    goto LABEL_22;
  }
  unint64_t v18 = *(void *)(v23 + 8 * v14);
  if (v18)
  {
LABEL_19:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v14 << 6);
    goto LABEL_20;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v13)
  {
LABEL_22:
    swift_release();
    sub_100149F38((uint64_t)v8);
    return;
  }
  unint64_t v18 = *(void *)(v23 + 8 * v19);
  if (v18)
  {
    int64_t v14 = v19;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v14 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v14 >= v13) {
      goto LABEL_22;
    }
    unint64_t v18 = *(void *)(v23 + 8 * v14);
    ++v19;
    if (v18) {
      goto LABEL_19;
    }
  }
LABEL_24:
  __break(1u);
}

uint64_t sub_100149DC4()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ObservabilitySignalDatabase()
{
  return self;
}

uint64_t sub_100149E20(unsigned __int8 a1)
{
  return sub_100148718(a1);
}

uint64_t sub_100149E44()
{
  return sub_100148954();
}

uint64_t sub_100149E68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_100148CC0(a1, a2, a3);
}

void sub_100149E8C(uint64_t a1, uint64_t a2)
{
}

void sub_100149EB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_100149ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ObservabilitySignal();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100149F38(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ObservabilitySignalSerializer();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100149F94()
{
  unint64_t result = qword_1002865F0;
  if (!qword_1002865F0)
  {
    sub_1000788B8(&qword_1002865E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002865F0);
  }
  return result;
}

uint64_t sub_100149FF0(uint64_t a1)
{
  return a1;
}

uint64_t sub_10014A044(uint64_t a1, char a2, char a3)
{
  uint64_t v4 = (void **)v3;
  long long v8 = (void *)*v3;
  unint64_t v10 = sub_100136A74(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1001422C4();
      goto LABEL_7;
    }
    sub_100141A10(v13, a3 & 1);
    unint64_t v24 = sub_100136A74(a2);
    if ((v14 & 1) == (v25 & 1))
    {
      unint64_t v10 = v24;
      unint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_10019B760();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7];
    uint64_t v18 = sub_10019ABA0();
    uint64_t v19 = *(void *)(v18 - 8);
    char v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 40);
    uint64_t v21 = v18;
    uint64_t v22 = v17 + *(void *)(v19 + 72) * v10;
    return v20(v22, a1, v21);
  }
LABEL_13:

  return sub_100166ED0(v10, a2, a1, v16);
}

uint64_t sub_10014A1AC()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GroupConfigurator()
{
  return self;
}

uint64_t type metadata accessor for OffsetTimeRangeReferenceFrame()
{
  return self;
}

uint64_t sub_10014A22C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v74 = a3;
  LODWORD(v94) = a2;
  unsigned int v5 = a2;
  uint64_t v6 = sub_10000C440(&qword_100285608);
  __chkstk_darwin(v6 - 8);
  uint64_t v88 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000C440(&qword_100285610);
  __chkstk_darwin(v8 - 8);
  uint64_t v87 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10019A9C0();
  uint64_t v11 = *(char **)(v10 - 8);
  uint64_t v92 = v10;
  uint64_t v93 = v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v91 = (uint64_t)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  char v86 = (char *)&v70 - v14;
  uint64_t v15 = sub_10019AC90();
  Swift::String v83 = *(char **)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v95 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10000C440(&qword_100282D10);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_10019ABA0();
  uint64_t v76 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v85 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for TimeRange();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = __chkstk_darwin(v21);
  Swift::String v84 = (char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v89 = (uint64_t)&v70 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v70 - v28;
  uint64_t v30 = __chkstk_darwin(v27);
  long long v32 = (char *)&v70 - v31;
  __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v70 - v33;
  if (v5 > 1)
  {
    uint64_t v79 = v22;
    uint64_t v71 = a1;
    uint64_t v72 = v3;
    sub_10014BAD4(a1, 2);
    v32[*(int *)(v21 + 20)] = 2;
    id v73 = sub_10015495C(3);
    uint64_t v70 = v32;
    sub_100132AEC((uint64_t)v32, (uint64_t)v29);
    uint64_t v94 = *(int *)(v21 + 20);
    id v77 = (void (**)(char *, void, uint64_t, uint64_t))(v83 + 56);
    uint64_t v78 = (void (**)(char *, uint64_t, uint64_t))(v83 + 16);
    uint64_t v81 = (void (**)(char *, uint64_t))(v83 + 8);
    id v82 = (void (**)(char *, uint64_t))(v93 + 8);
    uint64_t v80 = (uint64_t (**)(char *, uint64_t, uint64_t))(v76 + 48);
    uint64_t v75 = (void (**)(char *, char *, uint64_t))(v76 + 32);
    uint64_t v39 = (char *)&_swiftEmptyArrayStorage;
    uint64_t v40 = 4;
    uint64_t v76 = v21;
    Swift::String v83 = v19;
    while (1)
    {
      uint64_t v41 = v89;
      sub_100132AEC((uint64_t)v29, v89);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v39 = (char *)sub_10015034C(0, *((void *)v39 + 2) + 1, 1, (unint64_t)v39);
      }
      uint64_t v43 = v78;
      uint64_t v42 = v79;
      unint64_t v45 = *((void *)v39 + 2);
      unint64_t v44 = *((void *)v39 + 3);
      if (v45 >= v44 >> 1) {
        uint64_t v39 = (char *)sub_10015034C(v44 > 1, v45 + 1, 1, (unint64_t)v39);
      }
      *((void *)v39 + 2) = v45 + 1;
      sub_10012E0E0(v41, (uint64_t)&v39[((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(void *)(v42 + 72) * v45]);
      if (qword_100284F90 != -1) {
        swift_once();
      }
      uint64_t v46 = sub_100128E40(v15, (uint64_t)qword_10028D320);
      uint64_t v47 = *v43;
      (*v43)(v95, v46, v15);
      uint64_t v93 = v39;
      uint64_t v48 = v87;
      v47(v87, v46, v15);
      (*v77)(v48, 0, 1, v15);
      uint64_t v49 = sub_10019ACD0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v88, 1, 1, v49);
      uint64_t v50 = v86;
      sub_10019A990();
      uint64_t v51 = v91;
      sub_100135F94(v91);
      uint64_t v52 = *v82;
      uint64_t v53 = v92;
      (*v82)(v50, v92);
      uint64_t v54 = v83;
      uint64_t v55 = v95;
      sub_10019AC70();
      uint64_t v56 = v51;
      uint64_t v57 = v54;
      v52((char *)v56, v53);
      (*v81)(v55, v15);
      uint64_t v58 = v54;
      uint64_t v59 = v90;
      uint64_t result = (*v80)(v58, 1, v90);
      if (result == 1) {
        break;
      }
      uint64_t v61 = *v75;
      uint64_t v62 = v85;
      (*v75)(v85, v57, v59);
      char v63 = v29[v94];
      uint64_t v64 = (uint64_t)v84;
      v61(v84, v62, v59);
      *(unsigned char *)(v64 + *(int *)(v76 + 20)) = v63;
      sub_100132B50((uint64_t)v29);
      sub_10012E0E0(v64, (uint64_t)v29);
      --v40;
      uint64_t v39 = v93;
      if (!v40)
      {
        uint64_t result = sub_100132B50((uint64_t)v29);
        uint64_t v65 = *((void *)v39 + 2);
        uint64_t v66 = v73[2];
        BOOL v67 = __OFADD__(v65, v66);
        uint64_t v68 = v65 + v66;
        if (!v67)
        {
          uint64_t v96 = sub_10015034C(0, v68 & ~(v68 >> 63), 0, (unint64_t)&_swiftEmptyArrayStorage);
          uint64_t v69 = swift_bridgeObjectRetain();
          sub_10014E530(v69);
          sub_10014E4E8((uint64_t)v39);
          swift_bridgeObjectRelease();
          sub_10014AD00(v71, v96, v74);
          swift_bridgeObjectRelease();
          uint64_t v38 = (uint64_t)v70;
          return sub_100132B50(v38);
        }
        __break(1u);
        break;
      }
    }
    __break(1u);
  }
  else
  {
    char v35 = v94;
    sub_10014BAD4(a1, v94);
    v34[*(int *)(v21 + 20)] = v35;
    sub_10000C440(&qword_100286788);
    unint64_t v36 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_1001D69A0;
    sub_100132AEC((uint64_t)v34, v37 + v36);
    sub_10014AD00(a1, v37, v74);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v38 = (uint64_t)v34;
    return sub_100132B50(v38);
  }
  return result;
}

uint64_t sub_10014AD00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v93 = a3;
  uint64_t v5 = sub_10000C440(&qword_100285608);
  __chkstk_darwin(v5 - 8);
  uint64_t v109 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000C440(&qword_100285610);
  __chkstk_darwin(v7 - 8);
  unint64_t v108 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_10019A9C0();
  long long v118 = *(void (***)(char *, uint64_t))(v115 - 8);
  uint64_t v9 = __chkstk_darwin(v115);
  uint64_t v107 = (char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v99 = (uint64_t)&v89 - v12;
  __chkstk_darwin(v11);
  uint64_t v98 = (char *)&v89 - v13;
  uint64_t v14 = sub_10019AC90();
  unsigned int v114 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v121 = (char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v96 = (char *)&v89 - v17;
  uint64_t v18 = sub_10000C440(&qword_100282D10);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v105 = (char *)&v89 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v95 = (char *)&v89 - v21;
  uint64_t v22 = sub_10019ABA0();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v103 = (char *)&v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v89 - v27;
  __chkstk_darwin(v26);
  uint64_t v91 = (char *)&v89 - v29;
  uint64_t v30 = sub_10000C440(&qword_100286790);
  uint64_t v31 = __chkstk_darwin(v30 - 8);
  uint64_t v92 = (uint64_t)&v89 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v100 = (uint64_t)&v89 - v33;
  uint64_t v116 = type metadata accessor for TimeRange();
  uint64_t v34 = __chkstk_darwin(v116);
  uint64_t v90 = (uint64_t)&v89 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v38 = (char *)&v89 - v37;
  uint64_t v39 = __chkstk_darwin(v36);
  uint64_t v41 = (char *)&v89 - v40;
  uint64_t v42 = __chkstk_darwin(v39);
  uint64_t v89 = (char *)&v89 - v43;
  __chkstk_darwin(v42);
  uint64_t v46 = *(void *)(a2 + 16);
  if (v46)
  {
    uint64_t v47 = a2 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80));
    uint64_t v101 = v45;
    uint64_t v117 = *(void *)(v45 + 72);
    uint64_t v94 = (uint64_t)&v89 - v44;
    sub_100132AEC(v47 + v117 * (v46 - 1), (uint64_t)&v89 - v44);
    unsigned int v120 = (void (**)(char *, uint64_t, uint64_t))(v23 + 16);
    uint64_t v106 = (void (**)(char *, void, uint64_t, uint64_t))(v114 + 7);
    long long v111 = (void (**)(char *, uint64_t, uint64_t))(v114 + 2);
    uint64_t v112 = v118 + 1;
    long long v113 = (void (**)(char *, uint64_t))(v114 + 1);
    unsigned int v114 = (unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    uint64_t v110 = (void (**)(char *, char *, uint64_t))(v23 + 32);
    long long v118 = (void (**)(char *, uint64_t))(v23 + 8);
    uint64_t v97 = a2;
    swift_bridgeObjectRetain();
    uint64_t v102 = v28;
    uint64_t v104 = a1;
    uint64_t v119 = v14;
    do
    {
      sub_100132AEC(v47, (uint64_t)v41);
      sub_100132A94();
      char v48 = sub_10019B080();
      (*v120)(v28, a1, v22);
      sub_100132AEC((uint64_t)v41, (uint64_t)v38);
      if (v48)
      {
        sub_100132B50((uint64_t)v38);
        (*v118)(v28, v22);
      }
      else
      {
        if (qword_100284F90 != -1) {
          swift_once();
        }
        uint64_t v49 = sub_100128E40(v14, (uint64_t)qword_10028D320);
        uint64_t v50 = v14;
        uint64_t v51 = *v111;
        (*v111)(v121, v49, v50);
        uint64_t v52 = v108;
        uint64_t v53 = v49;
        uint64_t v54 = v119;
        v51(v108, v53, v119);
        uint64_t v55 = v54;
        (*v106)(v52, 0, 1, v54);
        uint64_t v56 = sub_10019ACD0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v109, 1, 1, v56);
        uint64_t v57 = v107;
        sub_10019A990();
        uint64_t v58 = v105;
        uint64_t v59 = v121;
        sub_10019AC70();
        (*v112)(v57, v115);
        (*v113)(v59, v55);
        if ((*v114)(v58, 1, v22) == 1)
        {
          __break(1u);
LABEL_19:
          __break(1u);
          goto LABEL_20;
        }
        uint64_t v60 = v103;
        (*v110)(v103, v58, v22);
        uint64_t v61 = v102;
        char v62 = sub_10019AB10();
        char v63 = *v118;
        uint64_t v64 = v60;
        uint64_t v28 = v61;
        (*v118)(v64, v22);
        sub_100132B50((uint64_t)v38);
        v63(v61, v22);
        uint64_t v14 = v119;
        a1 = v104;
        if (v62)
        {
          swift_bridgeObjectRelease();
          uint64_t v65 = (uint64_t)v41;
          uint64_t v66 = v100;
          sub_10012E0E0(v65, v100);
          BOOL v67 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v101 + 56);
          uint64_t v68 = v66;
          uint64_t v69 = 0;
          goto LABEL_12;
        }
      }
      sub_100132B50((uint64_t)v41);
      v47 += v117;
      --v46;
    }
    while (v46);
    swift_bridgeObjectRelease();
    BOOL v67 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v101 + 56);
    uint64_t v68 = v100;
    uint64_t v69 = 1;
LABEL_12:
    uint64_t v70 = v116;
    v67(v68, v69, 1, v116);
    uint64_t v71 = v111;
    uint64_t v72 = v95;
    if (qword_100284F90 != -1) {
      swift_once();
    }
    uint64_t v73 = sub_100128E40(v14, (uint64_t)qword_10028D320);
    uint64_t v74 = v96;
    (*v71)(v96, v73, v14);
    uint64_t v75 = v94;
    uint64_t v121 = (char *)*(int *)(v70 + 20);
    uint64_t v76 = v98;
    sub_100155230(v121[v94]);
    uint64_t v77 = v99;
    sub_100135F94(v99);
    uint64_t v78 = *v112;
    uint64_t v79 = v115;
    (*v112)(v76, v115);
    sub_10019AC70();
    v78((char *)v77, v79);
    (*v113)(v74, v14);
    if ((*v114)(v72, 1, v22) == 1) {
      goto LABEL_19;
    }
    uint64_t v80 = *v110;
    uint64_t v81 = v91;
    (*v110)(v91, v72, v22);
    char v82 = v121[v75];
    uint64_t v83 = (uint64_t)v89;
    v80(v89, v81, v22);
    uint64_t v84 = v116;
    *(unsigned char *)(v83 + *(int *)(v116 + 20)) = v82;
    sub_100132B50(v75);
    uint64_t v85 = v92;
    sub_10014BD34(v100, v92);
    uint64_t v86 = v90;
    sub_10012E0E0(v83, v90);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v101 + 48))(v85, 1, v84) == 1)
    {
      sub_10012E0E0(v86, v93);
      return sub_10014BD9C(v85);
    }
    else
    {
      sub_100132B50(v86);
      return sub_10012E0E0(v85, v93);
    }
  }
  else
  {
LABEL_20:
    NSString v88 = sub_10019B0A0();
    APSimulateCrash();

    uint64_t result = sub_10019B590();
    __break(1u);
  }
  return result;
}

uint64_t sub_10014BAD4(uint64_t a1, char a2)
{
  uint64_t v4 = sub_10019ABA0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    sub_10013DDDC((uint64_t)v7);
    uint64_t v9 = v2[5];
    uint64_t v8 = v2[6];
    sub_10007FDE0(v2 + 2, v9);
    float v10 = (*(float (**)(uint64_t, uint64_t))(v8 + 8))(v9, v8);
    fmod(floor(v10 * 86400.0), 3600.0);
  }
  else
  {
    sub_10013D7C8((uint64_t)v7);
    uint64_t v12 = v2[5];
    uint64_t v11 = v2[6];
    sub_10007FDE0(v2 + 2, v12);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v11);
  }
  sub_10019AAE0();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t (*sub_10014BC78(uint64_t a1, unint64_t a2, uint64_t a3))(void)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a3 + 16) > a2)
  {
    type metadata accessor for TimeRange();
    return nullsub_1;
  }
  __break(1u);
  return result;
}

uint64_t sub_10014BD34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000C440(&qword_100286790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10014BD9C(uint64_t a1)
{
  uint64_t v2 = sub_10000C440(&qword_100286790);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10014BDFC()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v15 = &_swiftEmptySetSingleton;
  uint64_t v2 = v1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v6) {
      goto LABEL_25;
    }
    unint64_t v12 = *(void *)(v2 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v6) {
        goto LABEL_25;
      }
      unint64_t v12 = *(void *)(v2 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v6) {
          goto LABEL_25;
        }
        unint64_t v12 = *(void *)(v2 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v6) {
            goto LABEL_25;
          }
          unint64_t v12 = *(void *)(v2 + 8 * v8);
          if (!v12)
          {
            int64_t v8 = v11 + 4;
            if (v11 + 4 >= v6) {
              goto LABEL_25;
            }
            unint64_t v12 = *(void *)(v2 + 8 * v8);
            if (!v12) {
              break;
            }
          }
        }
      }
    }
LABEL_24:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_5:
    uint64_t result = sub_10013FC7C(&v14, *(void *)(*(void *)(v1 + 48) + 8 * v10), *(void *)(*(void *)(v1 + 56) + 8 * v10));
  }
  int64_t v13 = v11 + 5;
  if (v13 >= v6)
  {
LABEL_25:
    swift_release();
    swift_bridgeObjectRelease();
    return (uint64_t)v15;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v13);
  if (v12)
  {
    int64_t v8 = v13;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_25;
    }
    unint64_t v12 = *(void *)(v2 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_24;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_10014BFA4()
{
  uint64_t v1 = v0[6];
  sub_10007FDE0(v0 + 2, v0[5]);
  uint64_t v2 = sub_10019AE90();
  uint64_t v3 = (void **)(v0 + 7);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v5 = *v3;
  uint64_t v19 = *v3;
  *uint64_t v3 = (void *)0x8000000000000000;
  unint64_t v7 = sub_100136A30(v2);
  uint64_t v8 = v5[2];
  BOOL v9 = (v6 & 1) == 0;
  uint64_t v10 = v8 + v9;
  if (__OFADD__(v8, v9))
  {
    __break(1u);
    goto LABEL_11;
  }
  LOBYTE(v1) = v6;
  if (v5[3] >= v10)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      goto LABEL_12;
    }
  }
  else
  {
    sub_100140E6C(v10, isUniquelyReferenced_nonNull_native);
    unint64_t v5 = v19;
    unint64_t v11 = sub_100136A30(v2);
    if ((v1 & 1) != (v12 & 1))
    {
      uint64_t result = sub_10019B760();
      __break(1u);
      return result;
    }
    unint64_t v7 = v11;
  }
  while (1)
  {
    *uint64_t v3 = v5;
    swift_bridgeObjectRelease();
    int64_t v13 = *v3;
    if ((v1 & 1) == 0) {
      sub_100166E88(v7, v2, 0, *v3);
    }
    uint64_t v14 = v13[7];
    uint64_t v15 = *(void *)(v14 + 8 * v7);
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (!v16) {
      break;
    }
LABEL_11:
    __break(1u);
LABEL_12:
    sub_100141DC8();
    unint64_t v5 = v19;
  }
  *(void *)(v14 + 8 * v7) = v17;
  return swift_endAccess();
}

uint64_t type metadata accessor for ErrorCollector()
{
  return self;
}

id sub_10014C130(uint64_t a1)
{
  uint64_t v49 = a1;
  uint64_t v2 = sub_10019ACD0();
  uint64_t v47 = *(void *)(v2 - 8);
  uint64_t v48 = v2;
  __chkstk_darwin(v2);
  uint64_t v46 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10019ABA0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v44 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v43 - v9;
  __chkstk_darwin(v8);
  char v12 = (char *)&v43 - v11;
  uint64_t v13 = sub_10000C440(&qword_100282D10);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v45 = (uint64_t)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v43 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v43 - v19;
  uint64_t v50 = OBJC_IVAR____TtC7Metrics25ObservabilityRegularTimer_lock;
  [*(id *)(v1 + OBJC_IVAR____TtC7Metrics25ObservabilityRegularTimer_lock) lock];
  uint64_t v51 = v1;
  uint64_t v21 = v1 + OBJC_IVAR____TtC7Metrics25ObservabilityRegularTimer_scheduledTime;
  swift_beginAccess();
  sub_10000C660(v21, (uint64_t)v20);
  sub_10000C660((uint64_t)v20, (uint64_t)v18);
  uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v22(v18, 1, v4) == 1)
  {
    sub_10000C4EC((uint64_t)v18);
    sub_10000C4EC((uint64_t)v20);
    uint64_t v23 = v49;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v12, v18, v4);
    uint64_t v23 = v49;
    char v24 = sub_10019AB10();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
    sub_10000C4EC((uint64_t)v20);
    if ((v24 & 1) == 0) {
      return [*(id *)(v51 + v50) unlock];
    }
  }
  sub_10019AB90();
  char v25 = sub_10019AB00();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v5 + 8);
  v26(v10, v4);
  if (v25)
  {
    uint64_t v27 = v4;
    uint64_t v28 = v45;
    sub_10000C660(v21, v45);
    if (v22((char *)v28, 1, v4) == 1)
    {
      sub_10000C4EC(v28);
LABEL_12:
      sub_10014C7A4(v23);
      return [*(id *)(v51 + v50) unlock];
    }
    uint64_t v39 = v44;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v44, v28, v4);
    if (!*(void *)(v51 + OBJC_IVAR____TtC7Metrics25ObservabilityRegularTimer_dispatchWorkItem))
    {
      v26(v39, v4);
      goto LABEL_12;
    }
    swift_retain();
    if (sub_10019AB10())
    {
      sub_10019B3A0();
      sub_10000C6C8(0, (unint64_t *)&qword_100284870);
      uint64_t v40 = v23;
      uint64_t v41 = (void *)sub_10019B470();
      sub_10019AF50();

      sub_10019AFF0();
      sub_10014C7A4(v40);
      swift_release();
      v26(v39, v27);
    }
    else
    {
      v26(v39, v4);
      swift_release();
    }
  }
  else
  {
    sub_10019B3B0();
    sub_10000C6C8(0, (unint64_t *)&qword_100284870);
    uint64_t v29 = (void *)sub_10019B470();
    sub_10000C440((uint64_t *)&unk_100285520);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_1001D69A0;
    id v31 = [self apLocalSharedFormatter];
    uint64_t v32 = v46;
    sub_10019ACC0();
    Class isa = sub_10019ACB0().super.isa;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v32, v48);
    [v31 setTimeZone:isa];

    Class v34 = sub_10019AAF0().super.isa;
    id v35 = [v31 stringFromDate:v34];

    uint64_t v36 = sub_10019B0B0();
    uint64_t v38 = v37;

    *(void *)(v30 + 56) = &type metadata for String;
    *(void *)(v30 + 64) = sub_100078904();
    *(void *)(v30 + 32) = v36;
    *(void *)(v30 + 40) = v38;
    sub_10019AF50();

    swift_bridgeObjectRelease();
  }
  return [*(id *)(v51 + v50) unlock];
}

uint64_t sub_10014C7A4(uint64_t a1)
{
  uint64_t v39 = a1;
  uint64_t v1 = sub_10019AFD0();
  uint64_t v51 = *(void *)(v1 - 8);
  uint64_t v52 = v1;
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v50 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v49 = (char *)&v38 - v4;
  uint64_t v48 = sub_10019AF90();
  __chkstk_darwin(v48);
  uint64_t v47 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_10019ABA0();
  uint64_t v6 = *(void *)(v44 - 8);
  uint64_t v46 = *(void *)(v6 + 64);
  __chkstk_darwin(v44);
  uint64_t v45 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000C440(&qword_100282D10);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v43 = (uint64_t)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  char v12 = (char *)&v38 - v11;
  uint64_t v42 = sub_10019B410();
  uint64_t v41 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v40 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10019B3E0();
  __chkstk_darwin(v14);
  uint64_t v15 = sub_10019AFB0();
  __chkstk_darwin(v15 - 8);
  sub_10019B3A0();
  sub_10000C6C8(0, (unint64_t *)&qword_100284870);
  uint64_t v16 = (void *)sub_10019B470();
  sub_10000C440((uint64_t *)&unk_100285520);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1001D69A0;
  uint64_t v18 = sub_10019AAD0();
  uint64_t v20 = v19;
  *(void *)(v17 + 56) = &type metadata for String;
  *(void *)(v17 + 64) = sub_100078904();
  *(void *)(v17 + 32) = v18;
  *(void *)(v17 + 40) = v20;
  sub_10019AF50();

  swift_bridgeObjectRelease();
  sub_10000C6C8(0, (unint64_t *)&unk_1002869C0);
  sub_10019AFA0();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10014DAD8(&qword_100286500, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000C440((uint64_t *)&unk_1002869D0);
  sub_10014DB20((unint64_t *)&qword_100286508, (uint64_t *)&unk_1002869D0);
  sub_10019B4E0();
  (*(void (**)(char *, void, uint64_t))(v41 + 104))(v40, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v42);
  uint64_t v21 = (void *)sub_10019B430();
  uint64_t v22 = v39;
  sub_10019AB30();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v24 = v44;
  v23(v12, v22, v44);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v12, 0, 1, v24);
  uint64_t v25 = v43;
  sub_10000C54C((uint64_t)v12, v43);
  uint64_t v26 = v53 + OBJC_IVAR____TtC7Metrics25ObservabilityRegularTimer_scheduledTime;
  swift_beginAccess();
  sub_10000C484(v25, v26);
  swift_endAccess();
  uint64_t v27 = swift_allocObject();
  swift_weakInit();
  uint64_t v28 = v45;
  v23(v45, v22, v24);
  unint64_t v29 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v27;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v30 + v29, v28, v24);
  aBlock[4] = sub_10014DA5C;
  aBlock[5] = v30;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10014D6BC;
  aBlock[3] = &unk_100237A10;
  _Block_copy(aBlock);
  uint64_t v54 = _swiftEmptyArrayStorage;
  sub_10014DAD8(&qword_1002869E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  swift_retain();
  sub_10000C440(&qword_1002869E8);
  sub_10014DB20(&qword_1002869F0, &qword_1002869E8);
  sub_10019B4E0();
  sub_10019B000();
  swift_allocObject();
  uint64_t v31 = sub_10019AFE0();
  swift_release();
  swift_release();
  uint64_t v32 = v50;
  sub_10019AFC0();
  uint64_t v33 = v49;
  sub_10019B010();
  Class v34 = *(void (**)(char *, uint64_t))(v51 + 8);
  id v35 = v32;
  uint64_t v36 = v52;
  v34(v35, v52);
  sub_10019B400();

  v34(v33, v36);
  *(void *)(v53 + OBJC_IVAR____TtC7Metrics25ObservabilityRegularTimer_dispatchWorkItem) = v31;
  return swift_release();
}

uint64_t sub_10014CFD0()
{
  uint64_t v0 = sub_10019AF90();
  uint64_t v37 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_10019AFB0();
  uint64_t v35 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v4 = (char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000C440(&qword_100282D10);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    id v9 = *(id *)(Strong + OBJC_IVAR____TtC7Metrics25ObservabilityRegularTimer_lock);
    swift_release();
    [v9 lock];
  }
  swift_beginAccess();
  uint64_t v10 = swift_weakLoadStrong();
  if (v10)
  {
    *(void *)(v10 + OBJC_IVAR____TtC7Metrics25ObservabilityRegularTimer_dispatchWorkItem) = 0;
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  uint64_t v11 = swift_weakLoadStrong();
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = sub_10019ABA0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v7, 1, 1, v13);
    uint64_t v14 = v12 + OBJC_IVAR____TtC7Metrics25ObservabilityRegularTimer_scheduledTime;
    swift_beginAccess();
    sub_10000C484((uint64_t)v7, v14);
    swift_endAccess();
    swift_release();
  }
  swift_beginAccess();
  uint64_t v15 = swift_weakLoadStrong();
  if (v15)
  {
    id v16 = *(id *)(v15 + OBJC_IVAR____TtC7Metrics25ObservabilityRegularTimer_lock);
    swift_release();
    [v16 unlock];
  }
  sub_10019B3A0();
  sub_10000C6C8(0, (unint64_t *)&qword_100284870);
  uint64_t v17 = (void *)sub_10019B470();
  sub_10000C440((uint64_t *)&unk_100285520);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1001D69A0;
  uint64_t v19 = sub_10019AAD0();
  uint64_t v21 = v20;
  *(void *)(v18 + 56) = &type metadata for String;
  *(void *)(v18 + 64) = sub_100078904();
  *(void *)(v18 + 32) = v19;
  *(void *)(v18 + 40) = v21;
  sub_10019AF50();

  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v23 = swift_unknownObjectWeakLoadStrong();
    uint64_t result = swift_release();
    if (v23)
    {
      if (qword_100284FA8 != -1) {
        swift_once();
      }
      uint64_t v24 = sub_10019AF80();
      sub_100128E40(v24, (uint64_t)qword_10028D348);
      uint64_t v25 = sub_10019AF60();
      os_log_type_t v26 = sub_10019B3A0();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v27 = 0;
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "ObservabilityPeriodicPlanner got 'Timer Fired' signal from underlying timer", v27, 2u);
        swift_slowDealloc();
      }

      uint64_t v28 = swift_unknownObjectWeakLoadStrong();
      if (v28)
      {
        uint64_t v29 = v28;
        uint64_t v30 = *(void *)(v23 + 24);
        uint64_t v31 = os_transaction_create();
        v34[1] = *(void *)(v23 + 112);
        uint64_t v32 = (void *)swift_allocObject();
        v32[2] = v31;
        v32[3] = v29;
        v32[4] = v30;
        v32[5] = nullsub_1;
        v32[6] = 0;
        aBlock[4] = sub_10014DBB8;
        aBlock[5] = v32;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10014D6BC;
        aBlock[3] = &unk_100237A60;
        uint64_t v33 = _Block_copy(aBlock);
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        sub_10019AFA0();
        uint64_t v38 = _swiftEmptyArrayStorage;
        sub_10014DAD8(&qword_1002869E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10000C440(&qword_1002869E8);
        sub_10014DB20(&qword_1002869F0, &qword_1002869E8);
        sub_10019B4E0();
        sub_10019B420();
        _Block_release(v33);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v2, v0);
        (*(void (**)(char *, uint64_t))(v35 + 8))(v4, v36);
        swift_unknownObjectRelease();
        return swift_release();
      }
      else
      {
        return swift_unknownObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_10014D6BC(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_10014D700()
{
  sub_10000C7B8(v0 + 16);
  sub_10000C4EC(v0 + OBJC_IVAR____TtC7Metrics25ObservabilityRegularTimer_scheduledTime);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_10014D78C()
{
  return type metadata accessor for ObservabilityRegularTimer();
}

uint64_t type metadata accessor for ObservabilityRegularTimer()
{
  uint64_t result = qword_1002868A8;
  if (!qword_1002868A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10014D7E0()
{
  sub_10000C3E8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_10014D894(uint64_t a1, uint64_t a2)
{
  *(void *)(*(void *)v2 + 24) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

uint64_t sub_10014D8DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC7Metrics25ObservabilityRegularTimer_scheduledTime;
  swift_beginAccess();
  return sub_10000C660(v3, a1);
}

id sub_10014D934(uint64_t a1)
{
  return sub_10014C130(a1);
}

uint64_t sub_10014D958()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10014D990()
{
  uint64_t v1 = sub_10019ABA0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10014DA5C()
{
  sub_10019ABA0();

  return sub_10014CFD0();
}

uint64_t sub_10014DAC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10014DAD0()
{
  return swift_release();
}

uint64_t sub_10014DAD8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10014DB20(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000788B8(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10014DB70()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10014DBB8()
{
  return sub_10015D834(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void (**)(uint64_t))(v0 + 40));
}

uint64_t *sub_10014DBD0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10019ABA0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    *((void *)v10 + 2) = *((void *)v11 + 2);
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
  }
  return a1;
}

uint64_t sub_10014DCB4(uint64_t a1)
{
  uint64_t v2 = sub_10019ABA0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_10014DD18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10019ABA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  return a1;
}

uint64_t sub_10014DDAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10019ABA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  _DWORD v8[2] = v9[2];
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10014DE4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10019ABA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  return a1;
}

uint64_t sub_10014DEE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10019ABA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  return a1;
}

uint64_t sub_10014DF74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10014DF88);
}

uint64_t sub_10014DF88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10019ABA0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10014DFF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10014E008);
}

uint64_t sub_10014E008(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10019ABA0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SigningFailure()
{
  uint64_t result = qword_100286AB8;
  if (!qword_100286AB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10014E0C4()
{
  uint64_t result = sub_10019ABA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

BOOL sub_10014E16C(uint64_t a1, uint64_t a2)
{
  if ((sub_10019AB60() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for SigningFailure();
  uint64_t v5 = *(int *)(v4 + 20);
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  uint64_t v8 = *(void *)(a1 + v5 + 16);
  uint64_t v9 = (uint64_t *)(a2 + v5);
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v12 = v9[2];
  BOOL v13 = v6 == v10 && v7 == v11;
  return v13 && v8 == v12 && *(void *)(a1 + *(int *)(v4 + 24)) == *(void *)(a2 + *(int *)(v4 + 24));
}

uint64_t sub_10014E1E8(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_1001500E4(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[2 * v9 + 4];
  if (a1 + 32 < v10 + 16 * v8 && v10 < a1 + 32 + 16 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    _DWORD v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_10019B5E0();
  __break(1u);
  return result;
}

uint64_t sub_10014E340(uint64_t a1)
{
  return sub_10014E368(a1, &qword_100285E68, &qword_100287F30);
}

uint64_t sub_10014E354(uint64_t a1)
{
  return sub_10014E368(a1, (uint64_t *)&unk_100287F50, &qword_100286610);
}

uint64_t sub_10014E368(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  int64_t v5 = *v3;
  int64_t v6 = *((void *)*v3 + 2);
  int64_t v7 = v6 + v4;
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v7 <= *((void *)v5 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v6 <= v7) {
    int64_t v18 = v6 + v4;
  }
  else {
    int64_t v18 = v6;
  }
  int64_t v5 = sub_10015021C(isUniquelyReferenced_nonNull_native, v18, 1, v5, a2, a3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v4) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v12 = *((void *)v5 + 2);
  if ((*((void *)v5 + 3) >> 1) - v12 < v4)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v13 = (unint64_t)&v5[40 * v12 + 32];
  if (a1 + 32 < v13 + 40 * v4 && v13 < a1 + 32 + 40 * v4) {
    goto LABEL_24;
  }
  sub_10000C440(a3);
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v3 = v5;
    return result;
  }
  uint64_t v15 = *((void *)v5 + 2);
  BOOL v16 = __OFADD__(v15, v4);
  uint64_t v17 = v15 + v4;
  if (!v16)
  {
    *((void *)v5 + 2) = v17;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_10019B5E0();
  __break(1u);
  return result;
}

uint64_t sub_10014E4E8(uint64_t a1)
{
  return sub_10014EB80(a1, &qword_100286788, (uint64_t (*)(void))type metadata accessor for TimeRange, (uint64_t (*)(void))type metadata accessor for TimeRange, (uint64_t (*)(void))type metadata accessor for TimeRange);
}

uint64_t sub_10014E530(uint64_t a1)
{
  uint64_t v51 = type metadata accessor for TimeRange();
  uint64_t v4 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  int64_t v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000C440(&qword_100286790);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v50 = (uint64_t)&v46 - v10;
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v46 - v13;
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = *v2;
  int64_t v17 = *(void *)(*v2 + 16);
  int64_t v18 = v17 + v15;
  if (__OFADD__(v17, v15))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v53 = v12;
  uint64_t v1 = v4;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t *v2 = v16;
  uint64_t v52 = v6;
  if (!isUniquelyReferenced_nonNull_native || (int64_t v20 = *(void *)(v16 + 24) >> 1, v20 < v18))
  {
    if (v17 <= v18) {
      int64_t v21 = v17 + v15;
    }
    else {
      int64_t v21 = v17;
    }
    uint64_t v16 = sub_1001504DC(isUniquelyReferenced_nonNull_native, v21, 1, v16, &qword_100286788, (uint64_t (*)(void))type metadata accessor for TimeRange, (uint64_t (*)(void))type metadata accessor for TimeRange);
    unint64_t *v2 = v16;
    int64_t v20 = *(void *)(v16 + 24) >> 1;
  }
  uint64_t v22 = *(void *)(v16 + 16);
  int64_t v18 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  int64_t v17 = *(void *)(v4 + 72);
  uint64_t v23 = v20 - v22;
  uint64_t result = sub_100150C30((uint64_t)&v55, v16 + v18 + v17 * v22, v20 - v22, a1);
  if (result < v15) {
    goto LABEL_17;
  }
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v24 = *(void *)(v16 + 16);
  BOOL v25 = __OFADD__(v24, result);
  uint64_t v26 = v24 + result;
  if (v25)
  {
    __break(1u);
    while (1)
    {
      uint64_t v46 = v4 + 56;
      while (1)
      {
        sub_1000808B4(v16, &qword_100286790);
        uint64_t v33 = *v2;
        unint64_t v34 = *(void *)(*v2 + 24);
        int64_t v35 = v34 >> 1;
        if ((uint64_t)(v34 >> 1) < a1 + 1)
        {
          uint64_t v33 = sub_1001504DC(v34 > 1, a1 + 1, 1, *v2, &qword_100286788, (uint64_t (*)(void))type metadata accessor for TimeRange, (uint64_t (*)(void))type metadata accessor for TimeRange);
          unint64_t *v2 = v33;
          int64_t v35 = *(void *)(v33 + 24) >> 1;
        }
        uint64_t v36 = v53;
        sub_1000800FC((uint64_t)v14, v53, &qword_100286790);
        if (v49(v36, 1, v51) != 1) {
          break;
        }
        uint64_t v37 = v51;
        uint64_t v4 = v53;
LABEL_31:
        sub_1000808B4(v4, &qword_100286790);
        uint64_t v32 = a1;
LABEL_26:
        *(void *)(*v2 + 16) = v32;
        uint64_t v16 = v50;
        sub_1000800FC((uint64_t)v14, v50, &qword_100286790);
        if (v49(v16, 1, v37) == 1) {
          goto LABEL_22;
        }
      }
      if (a1 <= v35) {
        uint64_t v38 = v35;
      }
      else {
        uint64_t v38 = a1;
      }
      uint64_t v48 = v38;
      uint64_t v39 = v33 + v18 + v17 * a1;
      uint64_t v37 = v51;
      uint64_t v4 = v53;
      while (1)
      {
        sub_100150ED0(v4, v23, (uint64_t (*)(void))type metadata accessor for TimeRange);
        if (v48 == a1)
        {
          sub_100150F38(v23, (uint64_t (*)(void))type metadata accessor for TimeRange);
          uint64_t v32 = v48;
          a1 = v48;
          goto LABEL_26;
        }
        sub_1000808B4((uint64_t)v14, &qword_100286790);
        sub_100150ED0(v23, v39, (uint64_t (*)(void))type metadata accessor for TimeRange);
        if (!v56)
        {
          uint64_t v43 = v14;
          uint64_t v44 = 1;
          goto LABEL_40;
        }
        unint64_t v40 = v56 - 1;
        if (__OFSUB__(v56, 1)) {
          break;
        }
        --v56;
        uint64_t v41 = sub_10014BC78((uint64_t)v54, v40, v55);
        sub_100150E68(v42, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for TimeRange);
        ((void (*)(unsigned char *, void))v41)(v54, 0);
        uint64_t v43 = v14;
        uint64_t v44 = 0;
LABEL_40:
        v47(v43, v44, 1, v37);
        uint64_t v4 = v53;
        sub_1000800FC((uint64_t)v14, v53, &qword_100286790);
        unsigned int v45 = v49(v4, 1, v37);
        v39 += v17;
        ++a1;
        uint64_t v23 = (uint64_t)v52;
        if (v45 == 1) {
          goto LABEL_31;
        }
      }
      __break(1u);
LABEL_44:
      uint64_t v30 = v51;
      uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56);
      v47(v14, 1, 1, v51);
      uint64_t v23 = (uint64_t)v52;
LABEL_21:
      uint64_t v16 = v50;
      sub_1000800FC((uint64_t)v14, v50, &qword_100286790);
      uint64_t v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
      v1 += 48;
      uint64_t v49 = v31;
      if (v31(v16, 1, v30) == 1)
      {
LABEL_22:
        sub_1000808B4((uint64_t)v14, &qword_100286790);
        swift_bridgeObjectRelease();
        return sub_1000808B4(v16, &qword_100286790);
      }
    }
  }
  *(void *)(v16 + 16) = v26;
LABEL_12:
  if (result != v23)
  {
    return swift_bridgeObjectRelease();
  }
LABEL_18:
  a1 = *(void *)(v16 + 16);
  if (!v56) {
    goto LABEL_44;
  }
  unint64_t v27 = v56 - 1;
  uint64_t v23 = (uint64_t)v52;
  if (!__OFSUB__(v56, 1))
  {
    --v56;
    uint64_t v28 = sub_10014BC78((uint64_t)v54, v27, v55);
    sub_100150E68(v29, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for TimeRange);
    ((void (*)(unsigned char *, void))v28)(v54, 0);
    uint64_t v30 = v51;
    uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56);
    v47(v14, 0, 1, v51);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_10014EB80(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = *v5;
  int64_t v8 = *(void *)(*v5 + 16);
  int64_t v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v9 <= *(void *)(v7 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v8 <= v9) {
    int64_t v30 = v8 + v6;
  }
  else {
    int64_t v30 = v8;
  }
  unint64_t v7 = sub_1001504DC(isUniquelyReferenced_nonNull_native, v30, 1, v7, a2, a3, a4);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v6) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v16 = *(void *)(v7 + 16);
  uint64_t v17 = (*(void *)(v7 + 24) >> 1) - v16;
  uint64_t v18 = *(void *)(a5(0) - 8);
  uint64_t v19 = *(void *)(v18 + 72);
  if (v17 < v6)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v20 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  unint64_t v21 = v7 + v20 + v19 * v16;
  unint64_t v22 = a1 + v20;
  uint64_t v23 = v19 * v6;
  unint64_t v24 = v21 + v23;
  unint64_t v25 = v22 + v23;
  if (v22 < v24 && v21 < v25) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v6)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t *v5 = v7;
    return result;
  }
  uint64_t v27 = *(void *)(v7 + 16);
  BOOL v28 = __OFADD__(v27, v6);
  uint64_t v29 = v27 + v6;
  if (!v28)
  {
    *(void *)(v7 + 16) = v29;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_10019B5E0();
  __break(1u);
  return result;
}

uint64_t sub_10014ED54(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_100150A10(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v10 = &v3[2 * v9 + 4];
  if (a1 + 32 < (unint64_t)&v10[2 * v8] && (unint64_t)v10 < a1 + 32 + 16 * v8) {
    goto LABEL_24;
  }
  memcpy(v10, (const void *)(a1 + 32), 16 * v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    _DWORD v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_10019B5E0();
  __break(1u);
  return result;
}

uint64_t sub_10014EEA0(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_10015021C(isUniquelyReferenced_nonNull_native, v15, 1, v3, &qword_1002864D8, &qword_1002864E0);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[40 * v9 + 32];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8) {
    goto LABEL_24;
  }
  sub_10000C440(&qword_1002864E0);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = *((void *)v3 + 2);
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    *((void *)v3 + 2) = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_10019B5E0();
  __break(1u);
  return result;
}

uint64_t sub_10014F028@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v39 = sub_10019ABA0();
  uint64_t v6 = *(void *)(v39 - 8);
  uint64_t v7 = __chkstk_darwin(v39);
  uint64_t v41 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v40 = (char *)&v32 - v9;
  uint64_t v10 = type metadata accessor for AvailablePeriodicWork();
  uint64_t v11 = __chkstk_darwin(v10);
  BOOL v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v17 = (char *)&v32 - v16;
  uint64_t v18 = *(void *)(a2 + 16);
  if (v18)
  {
    uint64_t v32 = v14;
    uint64_t v33 = a3;
    uint64_t v34 = v15;
    unint64_t v19 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    sub_100150E68(a2 + v19, (uint64_t)&v32 - v16, (uint64_t (*)(void))type metadata accessor for AvailablePeriodicWork);
    swift_retain();
    uint64_t v35 = a2;
    swift_bridgeObjectRetain();
    uint64_t v20 = v18 - 1;
    if (v18 != 1)
    {
      uint64_t v24 = *(void *)(v34 + 72);
      uint64_t v37 = (void (**)(char *, uint64_t))(v6 + 8);
      uint64_t v38 = v24;
      uint64_t v25 = v35 + v24 + v19;
      uint64_t v36 = a1;
      uint64_t v27 = v40;
      uint64_t v26 = v41;
      uint64_t v28 = v39;
      uint64_t v29 = v37;
      do
      {
        sub_100150E68(v25, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for AvailablePeriodicWork);
        swift_getAtKeyPath();
        swift_getAtKeyPath();
        sub_100132A94();
        char v30 = sub_10019B080();
        uint64_t v31 = *v29;
        (*v29)(v26, v28);
        v31(v27, v28);
        if (v30)
        {
          sub_100150F38((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for AvailablePeriodicWork);
          sub_100150ED0((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for AvailablePeriodicWork);
        }
        else
        {
          sub_100150F38((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for AvailablePeriodicWork);
        }
        v25 += v38;
        --v20;
      }
      while (v20);
    }
    swift_bridgeObjectRelease();
    uint64_t v21 = v33;
    sub_100150ED0((uint64_t)v17, v33, (uint64_t (*)(void))type metadata accessor for AvailablePeriodicWork);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56))(v21, 0, 1, v32);
    return swift_release();
  }
  else
  {
    uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 56);
    return v23(a3, 1, 1);
  }
}

uint64_t type metadata accessor for QueryingPeriodicScheduler()
{
  return self;
}

void sub_10014F3F8()
{
  qword_100286AF8 = 0x405E000000000000;
}

uint64_t sub_10014F408()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for AvailablePeriodicWork();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v67 = (uint64_t)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v54 - v6;
  uint64_t v8 = sub_10000C440(&qword_100286BC8);
  __chkstk_darwin(v8 - 8);
  uint64_t v61 = (uint64_t)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for PeriodicWorkRequest();
  uint64_t v57 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v56 = (uint64_t)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000C440(&qword_1002858D8);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v59 = (uint64_t)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v60 = (uint64_t)&v54 - v14;
  swift_beginAccess();
  uint64_t v15 = *(void *)(v0 + 56);
  uint64_t v16 = _swiftEmptyArrayStorage;
  uint64_t v69 = _swiftEmptyArrayStorage;
  uint64_t v17 = *(void *)(v15 + 16);
  uint64_t v66 = v7;
  if (v17)
  {
    uint64_t v18 = v15 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_10010B568(v18, (uint64_t)v68);
      sub_10007FDE0(v68, v68[3]);
      unint64_t v19 = sub_100133734();
      _s7Metrics31ObservabilitySignalDeserializerVwxx_0((uint64_t)v68);
      sub_10014EB80((uint64_t)v19, &qword_100286BD0, (uint64_t (*)(void))type metadata accessor for AvailablePeriodicWork, (uint64_t (*)(void))type metadata accessor for AvailablePeriodicWork, (uint64_t (*)(void))type metadata accessor for AvailablePeriodicWork);
      v18 += 40;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    uint64_t v16 = v69;
    uint64_t v7 = v66;
  }
  v68[0] = &_swiftEmptyDictionarySingleton;
  uint64_t v20 = v16[2];
  if (v20)
  {
    uint64_t v55 = v0;
    uint64_t v21 = *(unsigned __int8 *)(v3 + 80);
    uint64_t v22 = (v21 + 32) & ~v21;
    uint64_t v54 = v16;
    uint64_t v23 = (uint64_t)v16 + v22;
    uint64_t v24 = *(void *)(v3 + 72);
    uint64_t v64 = v24 + v22;
    uint64_t v25 = &_swiftEmptyDictionarySingleton;
    uint64_t v63 = v21 | 7;
    long long v62 = xmmword_1001D69A0;
    uint64_t v65 = v24;
    while (1)
    {
      sub_100150E68(v23, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AvailablePeriodicWork);
      char v27 = v7[*(int *)(v2 + 20)];
      unint64_t v29 = sub_100136AE0(v27);
      uint64_t v30 = v25[2];
      BOOL v31 = (v28 & 1) == 0;
      uint64_t v32 = v30 + v31;
      if (__OFADD__(v30, v31)) {
        break;
      }
      char v33 = v28;
      if (v25[3] < v32)
      {
        sub_10014173C(v32, 1);
        uint64_t v25 = (void *)v68[0];
        unint64_t v34 = sub_100136AE0(v27);
        if ((v33 & 1) != (v35 & 1)) {
          goto LABEL_28;
        }
        unint64_t v29 = v34;
      }
      if (v33)
      {
        uint64_t v36 = v22;
        uint64_t v37 = v2;
        uint64_t v38 = v25[7];
        sub_100150ED0((uint64_t)v7, v67, (uint64_t (*)(void))type metadata accessor for AvailablePeriodicWork);
        unint64_t v39 = *(void *)(v38 + 8 * v29);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v38 + 8 * v29) = v39;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v39 = sub_1001504DC(0, *(void *)(v39 + 16) + 1, 1, v39, &qword_100286BD0, (uint64_t (*)(void))type metadata accessor for AvailablePeriodicWork, (uint64_t (*)(void))type metadata accessor for AvailablePeriodicWork);
          *(void *)(v38 + 8 * v29) = v39;
        }
        unint64_t v42 = *(void *)(v39 + 16);
        unint64_t v41 = *(void *)(v39 + 24);
        if (v42 >= v41 >> 1)
        {
          unint64_t v39 = sub_1001504DC(v41 > 1, v42 + 1, 1, v39, &qword_100286BD0, (uint64_t (*)(void))type metadata accessor for AvailablePeriodicWork, (uint64_t (*)(void))type metadata accessor for AvailablePeriodicWork);
          *(void *)(v38 + 8 * v29) = v39;
        }
        uint64_t v2 = v37;
        *(void *)(v39 + 16) = v42 + 1;
        uint64_t v22 = v36;
        unint64_t v26 = v39 + v36;
        uint64_t v24 = v65;
        sub_100150ED0(v67, v26 + v42 * v65, (uint64_t (*)(void))type metadata accessor for AvailablePeriodicWork);
        uint64_t v7 = v66;
      }
      else
      {
        sub_10000C440(&qword_100286BD0);
        uint64_t v43 = swift_allocObject();
        *(_OWORD *)(v43 + 16) = v62;
        sub_100150ED0((uint64_t)v7, v43 + v22, (uint64_t (*)(void))type metadata accessor for AvailablePeriodicWork);
        v25[(v29 >> 6) + 8] |= 1 << v29;
        *(unsigned char *)(v25[6] + v29) = v27;
        *(void *)(v25[7] + 8 * v29) = v43;
        uint64_t v44 = v25[2];
        BOOL v45 = __OFADD__(v44, 1);
        uint64_t v46 = v44 + 1;
        if (v45) {
          goto LABEL_27;
        }
        void v25[2] = v46;
      }
      v23 += v24;
      if (!--v20)
      {
        swift_bridgeObjectRelease();
        uint64_t v1 = v55;
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    uint64_t result = sub_10019B760();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v25 = &_swiftEmptyDictionarySingleton;
LABEL_22:
    uint64_t v47 = v60;
    sub_10014FB14((uint64_t)v25, 1, v60);
    uint64_t v48 = v59;
    sub_10014FB14((uint64_t)v25, 0, v59);
    swift_release();
    uint64_t v49 = v61;
    sub_10014FD2C(v47, v48, v61);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v49, 1, v58) == 1)
    {
      sub_1000808B4(v48, &qword_1002858D8);
      sub_1000808B4(v47, &qword_1002858D8);
      uint64_t v50 = &qword_100286BC8;
      uint64_t v51 = v49;
    }
    else
    {
      uint64_t v52 = v56;
      sub_100150ED0(v49, v56, (uint64_t (*)(void))type metadata accessor for PeriodicWorkRequest);
      sub_10007FDE0((void *)(v1 + 16), *(void *)(v1 + 40));
      sub_10015D9F0(v52);
      sub_100150F38(v52, (uint64_t (*)(void))type metadata accessor for PeriodicWorkRequest);
      sub_1000808B4(v48, &qword_1002858D8);
      uint64_t v51 = v47;
      uint64_t v50 = &qword_1002858D8;
    }
    return sub_1000808B4(v51, v50);
  }
  return result;
}

uint64_t sub_10014FB14@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_10000C440(&qword_1002858D8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16)) {
    goto LABEL_5;
  }
  unint64_t v9 = sub_100136AE0(a2 & 1);
  if ((v10 & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v11 = *(void *)(*(void *)(a1 + 56) + 8 * v9);
  uint64_t KeyPath = swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_10014F028(KeyPath, v11, (uint64_t)v8);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v13 = type metadata accessor for AvailablePeriodicWork();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v13) == 1)
  {
    sub_1000808B4((uint64_t)v8, &qword_1002858D8);
LABEL_5:
    uint64_t v15 = type metadata accessor for AvailablePeriodicWork();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a3, 1, 1, v15);
  }
  if (qword_100284F98 != -1) {
    swift_once();
  }
  sub_10019AAE0();
  *(unsigned char *)(a3 + *(int *)(v13 + 20)) = v8[*(int *)(v13 + 20)];
  sub_100150F38((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AvailablePeriodicWork);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
}

uint64_t sub_10014FD2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for AvailablePeriodicWork();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  char v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v29 - v11;
  uint64_t v13 = sub_10000C440(&qword_100286BD8);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (uint64_t)&v16[*(int *)(v14 + 56)];
  sub_1000800FC(a1, (uint64_t)v16, &qword_1002858D8);
  sub_1000800FC(a2, v17, &qword_1002858D8);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  LODWORD(a2) = v18(v16, 1, v6);
  int v19 = v18((char *)v17, 1, v6);
  int v20 = v19;
  if (a2 == 1)
  {
    if (v19 == 1)
    {
      uint64_t v21 = type metadata accessor for PeriodicWorkRequest();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(a3, 1, 1, v21);
    }
    sub_100150ED0(v17, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for AvailablePeriodicWork);
    uint64_t v25 = sub_10019ABA0();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v25 - 8) + 32))(a3, v12, v25);
    uint64_t v24 = type metadata accessor for PeriodicWorkRequest();
  }
  else
  {
    sub_100150ED0((uint64_t)v16, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for AvailablePeriodicWork);
    if (v20 == 1)
    {
      uint64_t v23 = sub_10019ABA0();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v23 - 8) + 32))(a3, v12, v23);
    }
    else
    {
      sub_100150ED0(v17, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for AvailablePeriodicWork);
      uint64_t v26 = a3 + *(int *)(sub_10000C440(&qword_100286BE0) + 48);
      uint64_t v27 = sub_10019ABA0();
      char v28 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v27 - 8) + 32);
      v28(a3, v12, v27);
      v28(v26, v10, v27);
    }
    uint64_t v24 = type metadata accessor for PeriodicWorkRequest();
  }
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(a3, 0, 1, v24);
}

void *sub_1001500E4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000C440(&qword_100286C08);
      char v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      char v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100150D74(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1001501F4(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_10015021C(a1, a2, a3, a4, &qword_100285E68, &qword_100287F30);
}

char *sub_100150208(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_10015021C(a1, a2, a3, a4, (uint64_t *)&unk_100287F50, &qword_100286610);
}

char *sub_10015021C(char *result, int64_t a2, char a3, char *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = *((void *)a4 + 3);
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = *((void *)a4 + 2);
    if (v10 <= v11) {
      uint64_t v12 = *((void *)a4 + 2);
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_10000C440(a5);
      uint64_t v13 = (char *)swift_allocObject();
      size_t v14 = j__malloc_size(v13);
      *((void *)v13 + 2) = v11;
      *((void *)v13 + 3) = 2 * ((uint64_t)(v14 - 32) / 40);
      uint64_t v15 = v13 + 32;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[40 * v11 + 32]) {
          memmove(v15, a4 + 32, 40 * v11);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v15 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100151084(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_10015034C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001504DC(a1, a2, a3, a4, &qword_100286788, (uint64_t (*)(void))type metadata accessor for TimeRange, (uint64_t (*)(void))type metadata accessor for TimeRange);
}

void *sub_100150380(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000C440(&qword_100286C00);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100151190(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001504A8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001504DC(a1, a2, a3, a4, &qword_100286BD0, (uint64_t (*)(void))type metadata accessor for AvailablePeriodicWork, (uint64_t (*)(void))type metadata accessor for AvailablePeriodicWork);
}

uint64_t sub_1001504DC(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000C440(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_10019B580();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100151390(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_10015075C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000C440((uint64_t *)&unk_100284880);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100151280(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100150880(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001504DC(a1, a2, a3, a4, &qword_100286BE8, (uint64_t (*)(void))type metadata accessor for BatchID, (uint64_t (*)(void))type metadata accessor for BatchID);
}

void *sub_1001508B4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1001508DC(a1, a2, a3, a4, (uint64_t *)&unk_100287F40, &qword_100285E50);
}

void *sub_1001508C8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1001508DC(a1, a2, a3, a4, &qword_100286BF8, (uint64_t *)&unk_100287F20);
}

void *sub_1001508DC(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_10000C440(a5);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = j__malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 48);
      uint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[6 * v11 + 4]) {
          memmove(v15, a4 + 4, 48 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = _swiftEmptyArrayStorage;
      uint64_t v15 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1001514EC(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_100150A10(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000C440((uint64_t *)&unk_100287EF0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100150F98(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100150B20(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000C440(&qword_100286BF0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001515F8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100150C30(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5 = (void *)result;
  uint64_t v6 = *(void *)(a4 + 16);
  if (!a2)
  {
    uint64_t v12 = *(void *)(a4 + 16);
    uint64_t v6 = 0;
    goto LABEL_14;
  }
  if (!a3)
  {
    uint64_t v12 = *(void *)(a4 + 16);
LABEL_13:
    uint64_t v6 = a3;
    goto LABEL_14;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    if (v6)
    {
      uint64_t v8 = a2;
      uint64_t v9 = 0;
      while (v6 + v9 <= *(void *)(a4 + 16))
      {
        uint64_t v10 = *(void *)(type metadata accessor for TimeRange() - 8);
        uint64_t v11 = *(void *)(v10 + 72);
        uint64_t result = sub_100150E68(a4+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ v11 * (v6 + v9 - 1), v8, (uint64_t (*)(void))type metadata accessor for TimeRange);
        if (a3 + v9 == 1)
        {
          uint64_t v12 = v6 + v9 - 1;
          goto LABEL_13;
        }
        v8 += v11;
        --v9;
        if (!(v6 + v9)) {
          goto LABEL_9;
        }
      }
      __break(1u);
      goto LABEL_16;
    }
LABEL_9:
    uint64_t v12 = 0;
LABEL_14:
    void *v5 = a4;
    v5[1] = v12;
    return v6;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_100150D74(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10019B5E0();
  __break(1u);
  return result;
}

uint64_t sub_100150E68(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100150ED0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100150F38(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *sub_100150F98(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_10019B5E0();
  __break(1u);
  return result;
}

uint64_t sub_100151084(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      sub_10000C440(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_10019B5E0();
  __break(1u);
  return result;
}

char *sub_100151190(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 24 * a1 + 32);
    size_t v6 = 24 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_10019B5E0();
  __break(1u);
  return result;
}

uint64_t sub_100151280(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_10000C440((uint64_t *)&unk_100287F00);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10019B5E0();
  __break(1u);
  return result;
}

uint64_t sub_100151390(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_10019B5E0();
  __break(1u);
  return result;
}

uint64_t sub_1001514EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 48 * a1 + 32;
    unint64_t v7 = a3 + 48 * v5;
    if (v6 >= v7 || v6 + 48 * v5 <= a3)
    {
      sub_10000C440(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_10019B5E0();
  __break(1u);
  return result;
}

uint64_t sub_1001515F8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10019B5E0();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ObservabilityErrorBucketConfigSystemJSONSource()
{
  return self;
}

uint64_t getEnumTagSinglePayload for ObservabilityErrorBucketConfigSystemJSONSource.Source(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ObservabilityErrorBucketConfigSystemJSONSource.Source(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10015186CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ObservabilityErrorBucketConfigSystemJSONSource.Source()
{
  return &type metadata for ObservabilityErrorBucketConfigSystemJSONSource.Source;
}

unint64_t sub_1001518A8()
{
  unint64_t result = qword_100286CB0;
  if (!qword_100286CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100286CB0);
  }
  return result;
}

unint64_t sub_1001518FC()
{
  uint64_t v1 = self;
  sub_100151A10();
  id v2 = [v1 configurationForClass:swift_getObjCClassFromMetadata()];
  self;
  int v3 = (void *)swift_dynamicCastObjCClass();
  if (v3)
  {
    id v4 = [v3 *(SEL *)off_100237B38[*(char *)(v0 + 16)]];
    uint64_t v5 = sub_10019B040();

    unint64_t v6 = sub_100075FAC(v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v6 = 0;
  }
  swift_unknownObjectRelease();
  return v6;
}

unint64_t sub_1001519EC()
{
  return sub_1001518FC();
}

unint64_t sub_100151A10()
{
  unint64_t result = qword_100282D20;
  if (!qword_100282D20)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100282D20);
  }
  return result;
}

void *sub_100151A50(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10019ABA0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_100151B1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10019ABA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100151B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10019ABA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100151C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10019ABA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100151C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10019ABA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100151D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100151D20);
}

uint64_t sub_100151D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10019ABA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return v10 - 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_100151DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100151DF0);
}

uint64_t sub_100151DF0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10019ABA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t type metadata accessor for AvailablePeriodicWork()
{
  uint64_t result = qword_100286D10;
  if (!qword_100286D10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100151EF8()
{
  uint64_t result = sub_10019ABA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100151F8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (sub_10019AB60()) {
    char v6 = *(unsigned char *)(a1 + *(int *)(a3 + 20)) ^ *(unsigned char *)(a2 + *(int *)(a3 + 20)) ^ 1;
  }
  else {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_100151FEC(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_10019ABA0();
  uint64_t v64 = *(void *)(v5 - 8);
  uint64_t v65 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for BatchID();
  uint64_t v63 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v66 = (uint64_t)&v63 - v12;
  uint64_t v13 = type metadata accessor for ObservabilitySignal();
  __chkstk_darwin(v13);
  uint64_t v15 = (uint64_t *)((char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000C440((uint64_t *)&unk_100284880);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1001D6910;
  sub_10019AB50();
  *(void *)(v16 + 32) = v17;
  *(void *)(v16 + 56) = &type metadata for Double;
  *(void *)(v16 + 64) = &protocol witness table for Double;
  uint64_t v18 = sub_100165B3C();
  int64_t v19 = (int64_t)&protocol witness table for Int;
  *(void *)(v16 + 96) = &type metadata for Int;
  *(void *)(v16 + 104) = &protocol witness table for Int;
  *(void *)(v16 + 72) = v18;
  *(void *)(v16 + 136) = &type metadata for Int;
  *(void *)(v16 + 144) = &protocol witness table for Int;
  *(void *)(v16 + 112) = a2;
  sub_100152830(v3, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ObservabilitySignal);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v23 = *v15;
      uint64_t v24 = v15[1];
      uint64_t v25 = sub_10000C440(&qword_100285CB0);
      uint64_t v26 = v66;
      sub_1001395E0((uint64_t)v15 + *(int *)(v25 + 64), v66);
      *((void *)&v68 + 1) = &type metadata for Double;
      uint64_t v69 = &protocol witness table for Double;
      *(void *)&long long v67 = v23;
      uint64_t v16 = (uint64_t)sub_10015075C((void *)1, 4, 1, (void *)v16);
      *(void *)(v16 + 16) = 4;
      sub_10010C2D4((uint64_t)&v67, v16 + 152);
      *((void *)&v68 + 1) = &type metadata for Int;
      uint64_t v69 = &protocol witness table for Int;
      *(void *)&long long v67 = v24;
      unint64_t v28 = *(void *)(v16 + 16);
      unint64_t v27 = *(void *)(v16 + 24);
      if (v28 >= v27 >> 1) {
        uint64_t v16 = (uint64_t)sub_10015075C((void *)(v27 > 1), v28 + 1, 1, (void *)v16);
      }
      *(void *)(v16 + 16) = v28 + 1;
      sub_10010C2D4((uint64_t)&v67, v16 + 40 * v28 + 32);
      uint64_t v29 = sub_10019AD20();
      *((void *)&v68 + 1) = &type metadata for String;
      uint64_t v69 = &protocol witness table for String;
      *(void *)&long long v67 = v29;
      *((void *)&v67 + 1) = v30;
      unint64_t v32 = *(void *)(v16 + 16);
      unint64_t v31 = *(void *)(v16 + 24);
      int64_t v19 = v32 + 1;
      if (v32 >= v31 >> 1) {
        uint64_t v16 = (uint64_t)sub_10015075C((void *)(v31 > 1), v32 + 1, 1, (void *)v16);
      }
      *(void *)(v16 + 16) = v19;
      sub_10010C2D4((uint64_t)&v67, v16 + 40 * v32 + 32);
      sub_100153024(v26, (uint64_t (*)(void))type metadata accessor for BatchID);
      goto LABEL_31;
    case 2u:
    case 7u:
      uint64_t v20 = *v15;
      *((void *)&v68 + 1) = &type metadata for Int;
      uint64_t v69 = &protocol witness table for Int;
      *(void *)&long long v67 = v20;
      goto LABEL_12;
    case 3u:
      sub_1001395E0((uint64_t)v15, (uint64_t)v11);
      uint64_t v33 = sub_10019AD20();
      *((void *)&v68 + 1) = &type metadata for String;
      uint64_t v69 = &protocol witness table for String;
      *(void *)&long long v67 = v33;
      *((void *)&v67 + 1) = v34;
      int64_t v19 = 4;
      uint64_t v16 = (uint64_t)sub_10015075C((void *)1, 4, 1, (void *)v16);
      *(void *)(v16 + 16) = 4;
      sub_10010C2D4((uint64_t)&v67, v16 + 152);
      sub_100153024((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for BatchID);
      goto LABEL_31;
    case 4u:
      uint64_t v36 = v64;
      uint64_t v35 = v65;
      (*(void (**)(char *, uint64_t *, uint64_t))(v64 + 32))(v7, v15, v65);
      int64_t v19 = (int64_t)v7;
      sub_10019AB50();
      *((void *)&v68 + 1) = &type metadata for Double;
      uint64_t v69 = &protocol witness table for Double;
      *(void *)&long long v67 = v37;
      sub_100152898((uint64_t)&v67, v16 + 32);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v35);
      goto LABEL_31;
    case 5u:
      uint64_t v38 = *v15;
      *((void *)&v68 + 1) = &type metadata for Double;
      uint64_t v69 = &protocol witness table for Double;
      *(void *)&long long v67 = v38;
LABEL_12:
      int64_t v19 = 4;
      uint64_t v16 = (uint64_t)sub_10015075C((void *)1, 4, 1, (void *)v16);
      *(void *)(v16 + 16) = 4;
      uint64_t v39 = v16 + 152;
      goto LABEL_30;
    case 6u:
      uint64_t v40 = *v15;
      uint64_t v41 = v15[2];
      if (v15[1])
      {
        *((void *)&v68 + 1) = &type metadata for Int;
        uint64_t v69 = &protocol witness table for Int;
        *(void *)&long long v67 = 1;
      }
      else
      {
        *((void *)&v68 + 1) = &type metadata for Int;
        uint64_t v69 = &protocol witness table for Int;
        *(void *)&long long v67 = 0;
      }
      uint64_t v16 = (uint64_t)sub_10015075C((void *)1, 4, 1, (void *)v16);
      *(void *)(v16 + 16) = 4;
      sub_10010C2D4((uint64_t)&v67, v16 + 152);
      *((void *)&v68 + 1) = &type metadata for Int;
      uint64_t v69 = &protocol witness table for Int;
      *(void *)&long long v67 = v40;
      unint64_t v43 = *(void *)(v16 + 16);
      unint64_t v42 = *(void *)(v16 + 24);
      if (v43 >= v42 >> 1) {
        uint64_t v16 = (uint64_t)sub_10015075C((void *)(v42 > 1), v43 + 1, 1, (void *)v16);
      }
      *(void *)(v16 + 16) = v43 + 1;
      sub_10010C2D4((uint64_t)&v67, v16 + 40 * v43 + 32);
      int64_t v44 = *(void *)(v41 + 16);
      if (v44)
      {
        *(void *)&long long v67 = _swiftEmptyArrayStorage;
        sub_10016D114(0, v44, 0);
        uint64_t v45 = *(unsigned __int8 *)(v63 + 80);
        uint64_t v65 = v41;
        uint64_t v46 = v41 + ((v45 + 32) & ~v45);
        uint64_t v66 = *(void *)(v63 + 72);
        uint64_t v47 = (void *)v67;
        do
        {
          sub_100152830(v46, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for BatchID);
          uint64_t v48 = sub_10019AD20();
          uint64_t v50 = v49;
          sub_100153024((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for BatchID);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_10016D114(0, v47[2] + 1, 1);
            uint64_t v47 = (void *)v67;
          }
          unint64_t v52 = v47[2];
          unint64_t v51 = v47[3];
          if (v52 >= v51 >> 1)
          {
            sub_10016D114(v51 > 1, v52 + 1, 1);
            uint64_t v47 = (void *)v67;
          }
          v47[2] = v52 + 1;
          uint64_t v53 = &v47[2 * v52];
          v53[4] = v48;
          v53[5] = v50;
          v46 += v66;
          --v44;
        }
        while (v44);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v47 = _swiftEmptyArrayStorage;
      }
      *(void *)&long long v67 = v47;
      sub_10000C440(&qword_100286390);
      sub_10010BA68();
      uint64_t v54 = sub_10019B070();
      uint64_t v56 = v55;
      swift_bridgeObjectRelease();
      *((void *)&v68 + 1) = &type metadata for String;
      uint64_t v69 = &protocol witness table for String;
      *(void *)&long long v67 = v54;
      *((void *)&v67 + 1) = v56;
      goto LABEL_28;
    case 8u:
      goto LABEL_31;
    default:
      uint64_t v21 = *v15;
      uint64_t v22 = v15[1];
      *((void *)&v68 + 1) = &type metadata for Double;
      uint64_t v69 = &protocol witness table for Double;
      *(void *)&long long v67 = v21;
      uint64_t v16 = (uint64_t)sub_10015075C((void *)1, 4, 1, (void *)v16);
      *(void *)(v16 + 16) = 4;
      sub_10010C2D4((uint64_t)&v67, v16 + 152);
      *((void *)&v68 + 1) = &type metadata for Int;
      uint64_t v69 = &protocol witness table for Int;
      *(void *)&long long v67 = v22;
LABEL_28:
      unint64_t v58 = *(void *)(v16 + 16);
      unint64_t v57 = *(void *)(v16 + 24);
      int64_t v19 = v58 + 1;
      if (v58 < v57 >> 1) {
        goto LABEL_29;
      }
      while (1)
      {
        uint64_t v16 = (uint64_t)sub_10015075C((void *)(v57 > 1), v19, 1, (void *)v16);
LABEL_29:
        *(void *)(v16 + 16) = v19;
        uint64_t v39 = v16 + 40 * v58 + 32;
LABEL_30:
        sub_10010C2D4((uint64_t)&v67, v39);
LABEL_31:
        unint64_t v57 = *(void *)(v16 + 16);
        unint64_t v58 = v57 - 6;
        if (v57 <= 6) {
          break;
        }
        __break(1u);
      }
      if (v57 != 6)
      {
        do
        {
          uint64_t v69 = 0;
          long long v67 = 0u;
          long long v68 = 0u;
          unint64_t v61 = *(void *)(v16 + 16);
          unint64_t v60 = *(void *)(v16 + 24);
          if (v61 >= v60 >> 1) {
            uint64_t v16 = (uint64_t)sub_10015075C((void *)(v60 > 1), v61 + 1, 1, (void *)v16);
          }
          *(void *)(v16 + 16) = v61 + 1;
          sub_10010C2D4((uint64_t)&v67, v16 + 40 * v61 + 32);
        }
        while (!__CFADD__(v58++, 1));
      }
      return v16;
  }
}

uint64_t sub_100152830(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100152898(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000C440((uint64_t *)&unk_100287F00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

char *sub_100152900(char *a1, char *a2)
{
  uint64_t v4 = *(void *)(type metadata accessor for ObservabilitySignal() - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v7 = *(int *)(sub_10000C440(&qword_100285CB0) + 64);
        uint64_t v8 = &a1[v7];
        uint64_t v9 = &a2[v7];
        uint64_t v10 = sub_10019AD30();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v13 = sub_10019AD30();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v14 = sub_10019ABA0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        *((void *)a1 + 2) = *((void *)a2 + 2);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_100152B30(uint64_t a1)
{
  type metadata accessor for ObservabilitySignal();
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      a1 += *(int *)(sub_10000C440(&qword_100285CB0) + 64);
      goto LABEL_3;
    case 3:
LABEL_3:
      uint64_t v3 = sub_10019AD30();
      goto LABEL_5;
    case 4:
      uint64_t v3 = sub_10019ABA0();
LABEL_5:
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    case 6:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

char *sub_100152C38(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for ObservabilitySignal();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v5 = *(int *)(sub_10000C440(&qword_100285CB0) + 64);
      uint64_t v6 = &a1[v5];
      uint64_t v7 = &a2[v5];
      uint64_t v8 = sub_10019AD30();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
      goto LABEL_7;
    case 3u:
      uint64_t v9 = sub_10019AD30();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      goto LABEL_7;
    case 4u:
      uint64_t v10 = sub_10019ABA0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      goto LABEL_7;
    case 6u:
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      *((void *)a1 + 2) = *((void *)a2 + 2);
      swift_bridgeObjectRetain();
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_100152E18(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_100153024((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ObservabilitySignal);
    uint64_t v4 = type metadata accessor for ObservabilitySignal();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v5 = *(int *)(sub_10000C440(&qword_100285CB0) + 64);
        uint64_t v6 = (char *)a1 + v5;
        uint64_t v7 = (char *)a2 + v5;
        uint64_t v8 = sub_10019AD30();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
        goto LABEL_8;
      case 3u:
        uint64_t v9 = sub_10019AD30();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        goto LABEL_8;
      case 4u:
        uint64_t v10 = sub_10019ABA0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        goto LABEL_8;
      case 6u:
        uint64_t v11 = *a2;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        *a1 = v11;
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_100153024(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *sub_100153084(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4 = type metadata accessor for ObservabilitySignal();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 4:
      uint64_t v10 = sub_10019ABA0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
      break;
    case 3:
      uint64_t v11 = sub_10019AD30();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      *a1 = *a2;
      uint64_t v6 = *(int *)(sub_10000C440(&qword_100285CB0) + 64);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_10019AD30();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *sub_100153214(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_100153024((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ObservabilitySignal);
    uint64_t v4 = type metadata accessor for ObservabilitySignal();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 4:
        uint64_t v10 = sub_10019ABA0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
        break;
      case 3:
        uint64_t v11 = sub_10019AD30();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        *a1 = *a2;
        uint64_t v6 = *(int *)(sub_10000C440(&qword_100285CB0) + 64);
        uint64_t v7 = (char *)a1 + v6;
        uint64_t v8 = (char *)a2 + v6;
        uint64_t v9 = sub_10019AD30();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1001533C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001533DC);
}

uint64_t sub_1001533DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ObservabilitySignal();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100153448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10015345C);
}

uint64_t sub_10015345C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ObservabilitySignal();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ObservabilitySignalSerializer()
{
  uint64_t result = qword_100286DA0;
  if (!qword_100286DA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100153518()
{
  uint64_t result = type metadata accessor for ObservabilitySignal();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1001535A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v84 = a1;
  uint64_t v3 = sub_10000C440(&qword_100285CA0);
  __chkstk_darwin(v3 - 8);
  NSString v88 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_10019AD30();
  uint64_t v81 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v83 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000C440(&qword_100285CA8);
  __chkstk_darwin(v6 - 8);
  uint64_t v86 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for BatchID();
  uint64_t v85 = *(void *)(v82 - 8);
  uint64_t v8 = __chkstk_darwin(v82);
  uint64_t v10 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v69 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v69 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  int64_t v19 = (char *)&v69 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v69 - v20;
  sub_10007FDE0(v1, v1[3]);
  uint64_t v22 = (uint64_t)v89;
  unint64_t result = sub_10019ADA0();
  if (!v22)
  {
    uint64_t v24 = (uint64_t)v19;
    uint64_t v79 = v16;
    uint64_t v80 = v13;
    uint64_t v89 = v10;
    uint64_t v26 = v85;
    uint64_t v25 = (uint64_t)v86;
    uint64_t v28 = v87;
    uint64_t v27 = (uint64_t)v88;
    char v29 = sub_100165DB4(result);
    switch(v29)
    {
      case 1:
        sub_10007FDE0(v1, v1[3]);
        uint64_t v34 = sub_10019AD60();
        sub_10016591C(v34, v35, (uint64_t)v21);
        sub_10007FDE0(v1, v1[3]);
        sub_10019AD80();
        uint64_t v36 = v84;
        *uint64_t v84 = v37;
        sub_10007FDE0(v1, v1[3]);
        uint64_t v61 = sub_10019ADA0();
        uint64_t v62 = (uint64_t)v36 + *(int *)(sub_10000C440(&qword_100285CB0) + 64);
        v36[1] = v61;
        sub_1001395E0((uint64_t)v21, v62);
        type metadata accessor for ObservabilitySignal();
        goto LABEL_14;
      case 2:
      case 8:
        sub_10007FDE0(v1, v1[3]);
        *uint64_t v84 = sub_10019ADA0();
        type metadata accessor for ObservabilitySignal();
        goto LABEL_14;
      case 3:
        sub_10007FDE0(v1, v1[3]);
        uint64_t v38 = sub_10019AD60();
        sub_10016591C(v38, v39, v24);
        sub_1001395E0(v24, (uint64_t)v84);
        type metadata accessor for ObservabilitySignal();
        goto LABEL_14;
      case 4:
        sub_10007FDE0(v1, v1[3]);
        sub_10019AD80();
        sub_10019AB40();
        type metadata accessor for ObservabilitySignal();
        goto LABEL_14;
      case 5:
        sub_10007FDE0(v1, v1[3]);
        sub_10019AD80();
        *uint64_t v84 = v40;
        type metadata accessor for ObservabilitySignal();
        goto LABEL_14;
      case 6:
        sub_10007FDE0(v1, v1[3]);
        uint64_t v41 = sub_10019ADA0();
        int v42 = sub_100165EAC(v41);
        sub_10007FDE0(v2, v2[3]);
        int v75 = v42;
        uint64_t v70 = sub_10019ADA0();
        sub_10007FDE0(v2, v2[3]);
        uint64_t v43 = sub_10019AD60();
        unint64_t v45 = v44;
        uint64_t v90 = 124;
        unint64_t v91 = 0xE100000000000000;
        __chkstk_darwin(v43);
        *(&v69 - 2) = (uint64_t)&v90;
        swift_bridgeObjectRetain();
        uint64_t v46 = sub_100154098(0x7FFFFFFFFFFFFFFFLL, 1, sub_100154698, (uint64_t)(&v69 - 4), v43, v45);
        swift_bridgeObjectRelease();
        if (*(void *)(v46 + 16))
        {
          uint64_t v77 = *(void *)(v46 + 16);
          uint64_t v73 = (void (**)(void))(v81 + 32);
          uint64_t v74 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48);
          uint64_t v71 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
          uint64_t v72 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56);
          uint64_t v69 = swift_bridgeObjectRetain();
          uint64_t v47 = (void *)(v69 + 56);
          uint64_t v48 = _swiftEmptyArrayStorage;
          do
          {
            uint64_t v78 = v48;
            uint64_t v49 = *v47;
            uint64_t v76 = v47;
            swift_bridgeObjectRetain();
            uint64_t v81 = v49;
            uint64_t v50 = sub_10019B120();
            unint64_t v52 = v51;
            swift_bridgeObjectRetain();
            sub_10019AD10();
            if ((*v74)(v27, 1, v28) == 1)
            {
              sub_1000808B4(v27, &qword_100285CA0);
              uint64_t v90 = 0;
              unint64_t v91 = 0xE000000000000000;
              sub_10019B530(52);
              v92._object = (void *)0x8000000100213A40;
              v92._countAndFlagsBits = 0xD000000000000031;
              sub_10019B190(v92);
              v93._countAndFlagsBits = v50;
              v93._object = v52;
              sub_10019B190(v93);
              swift_bridgeObjectRelease();
              v94._countAndFlagsBits = 34;
              v94._object = (void *)0xE100000000000000;
              sub_10019B190(v94);
              uint64_t v63 = v90;
              unint64_t v64 = v91;
              sub_1001546F0();
              swift_allocError();
              *uint64_t v65 = v63;
              v65[1] = v64;
              swift_willThrow();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              return swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            uint64_t v53 = *v73;
            ((void (*)(char *, uint64_t, uint64_t))*v73)(v83, v27, v28);
            uint64_t v54 = (uint64_t)v80;
            v53();
            sub_1001395E0(v54, v25);
            uint64_t v55 = v82;
            (*v72)(v25, 0, 1, v82);
            swift_bridgeObjectRelease();
            if ((*v71)(v25, 1, v55) == 1)
            {
              sub_1000808B4(v25, &qword_100285CA8);
              uint64_t v48 = v78;
            }
            else
            {
              uint64_t v56 = (uint64_t)v79;
              sub_1001395E0(v25, (uint64_t)v79);
              sub_1001395E0(v56, (uint64_t)v89);
              uint64_t v48 = v78;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v48 = (void *)sub_100150880(0, v48[2] + 1, 1, (unint64_t)v48);
              }
              uint64_t v57 = v26;
              unint64_t v59 = v48[2];
              unint64_t v58 = v48[3];
              if (v59 >= v58 >> 1)
              {
                uint64_t v60 = sub_100150880(v58 > 1, v59 + 1, 1, (unint64_t)v48);
                uint64_t v57 = v26;
                uint64_t v48 = (void *)v60;
              }
              void v48[2] = v59 + 1;
              sub_1001395E0((uint64_t)v89, (uint64_t)v48+ ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80))+ *(void *)(v57 + 72) * v59);
            }
            uint64_t v47 = v76 + 4;
            --v77;
          }
          while (v77);
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v48 = _swiftEmptyArrayStorage;
        }
        uint64_t v66 = v84;
        char v67 = v75;
        uint64_t v68 = v70;
        swift_bridgeObjectRelease();
        *uint64_t v66 = v68;
        *((unsigned char *)v66 + 8) = v67 & 1;
        v66[2] = (uint64_t)v48;
        type metadata accessor for ObservabilitySignal();
LABEL_14:
        unint64_t result = swift_storeEnumTagMultiPayload();
        break;
      case 7:
        type metadata accessor for ObservabilitySignal();
        goto LABEL_14;
      default:
        sub_10007FDE0(v1, v1[3]);
        sub_10019AD80();
        uint64_t v31 = v30;
        sub_10007FDE0(v1, v1[3]);
        uint64_t v32 = sub_10019ADA0();
        uint64_t v33 = v84;
        *uint64_t v84 = v31;
        v33[1] = v32;
        type metadata accessor for ObservabilitySignal();
        goto LABEL_14;
    }
  }
  return result;
}

uint64_t sub_100154098(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v50[3] = a4;
  if (a1 < 0) {
    goto LABEL_42;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = _swiftEmptyArrayStorage;
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_10015453C(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  uint64_t v42 = a1;
  uint64_t v43 = v10;
  unint64_t v48 = 4 * v12;
  uint64_t v13 = _swiftEmptyArrayStorage;
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v50[0] = sub_10019B200();
    v50[1] = v17;
    char v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19) {
      break;
    }
    unint64_t v14 = sub_10019B170();
LABEL_9:
    if (v48 == v14 >> 14) {
      goto LABEL_29;
    }
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v14 = sub_10019B170();
    *(void *)(v47 + 16) = v14;
    unint64_t v15 = v14;
    unint64_t v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14) {
    goto LABEL_41;
  }
  uint64_t v20 = sub_10019B220();
  uint64_t v44 = v21;
  uint64_t v45 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_100150B20(0, v13[2] + 1, 1, v13);
  }
  unint64_t v27 = v13[2];
  unint64_t v26 = v13[3];
  if (v27 >= v26 >> 1) {
    uint64_t v13 = sub_100150B20((void *)(v26 > 1), v27 + 1, 1, v13);
  }
  v13[2] = v27 + 1;
  uint64_t v28 = &v13[4 * v27];
  v28[4] = v45;
  void v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(void *)(v43 + 16) = v13;
  uint64_t v29 = sub_10019B170();
  unint64_t v14 = v29;
  *(void *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    unint64_t v15 = v29;
    unint64_t v16 = v29;
    goto LABEL_9;
  }
  unint64_t v16 = v29;
  unint64_t v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    uint64_t v31 = sub_10019B220();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_100150B20(0, v13[2] + 1, 1, v13);
    }
    unint64_t v39 = v13[2];
    unint64_t v38 = v13[3];
    if (v39 >= v38 >> 1) {
      uint64_t v13 = sub_100150B20((void *)(v38 > 1), v39 + 1, 1, v13);
    }
    v13[2] = v39 + 1;
    uint64_t v40 = &v13[4 * v39];
    v40[4] = v31;
    void v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(void *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_10019B580();
  __break(1u);
LABEL_42:
  uint64_t result = sub_10019B580();
  __break(1u);
  return result;
}