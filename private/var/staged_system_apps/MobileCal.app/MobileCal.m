void sub_10000620C(uint64_t a1)
{
  void *v2;
  id v3;
  void v4[6];

  v2 = [*(id *)(*(void *)(a1 + 32) + 8) model];
  v3 = [v2 eventNotificationsForCurrentIdentityCount];

  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100023E10;
  v4[3] = &unk_1001D2A40;
  v4[4] = *(void *)(a1 + 32);
  v4[5] = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);
}

void sub_1000062C0(uint64_t a1)
{
  v2 = [*(id *)(*(void *)(a1 + 32) + 224) defaultCalendarForNewEvents];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v2 != 0;

  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1000072A0;
  v3[3] = &unk_1001D3260;
  long long v4 = *(_OWORD *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v3);
}

void sub_1000063D0(uint64_t a1)
{
  v1 = *(void **)(a1 + 32);
  id v2 = [*(id *)(a1 + 40) invisibleCalendars];
  [v1 __buildCalendarSyncHashesForCalendars:v2];
}

void sub_100006698(uint64_t a1)
{
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = (void *)WeakRetained[26];
    WeakRetained[26] = 0;
    v3 = WeakRetained;

    WeakRetained = v3;
  }
}

uint64_t sub_100006B3C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 128);
  uint64_t v3 = *(void *)(*v0 + 120);
  uint64_t v4 = *(void *)(*v0 + 112);
  swift_task_dealloc();
  swift_release();
  *(unsigned char *)(v1 + 321) = *(unsigned char *)(v1 + 320);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 272);
  return _swift_task_switch(sub_100024314, v5);
}

void sub_100006DC8(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 25) = 0;
  id v1 = [*(id *)(*(void *)(a1 + 32) + 16) weekScrollView];
  [v1 updateDayBadges];
}

uint64_t type metadata accessor for TipsManager()
{
  return self;
}

id sub_100007024()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for TipsManager()) init];
  static TipsManager.shared = (uint64_t)result;
  return result;
}

uint64_t sub_100007054()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[13];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1000245E8(v3, &qword_1002160D8);
    swift_release();
    uint64_t v4 = v0[30];
    return _swift_task_switch(sub_100140B48, v4);
  }
  else
  {
    uint64_t v6 = v0[26];
    uint64_t v5 = v0[27];
    uint64_t v7 = v0[24];
    uint64_t v8 = v0[25];
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[16], v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v5, v7);
    v9 = (int *)AsyncMapSequence.Iterator.transform.getter();
    v0[38] = v10;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    v14 = (int *)((char *)v9 + *v9);
    v11 = (void *)swift_task_alloc();
    v0[39] = v11;
    void *v11 = v0;
    v11[1] = sub_100006B3C;
    uint64_t v12 = v0[16];
    return ((uint64_t (*)(void *, uint64_t))v14)(v0 + 40, v12);
  }
}

void sub_1000072A0(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  id v2 = [*(id *)(a1 + 32) addEventBarButtonItem];
  [v2 setEnabled:v1];
}

void sub_100007B08(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    uint64_t v6 = kCalUILogHandle;
    if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v5;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "[UserStateLog] State -> UserNotificationCenter requestAuthorizationWithOptions error: [%@]", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v7 = kCalUILogHandle;
  if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_INFO))
  {
    int v8 = 67109120;
    LODWORD(v9) = a2;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "[UserStateLog] State -> UserNotificationCenter requestAuthorizationWithOptions callback. Access granted: [%d]", (uint8_t *)&v8, 8u);
  }
  *(unsigned char *)(*(void *)(a1 + 32) + 41) = a2;
}

uint64_t sub_10000828C()
{
  if (*((unsigned char *)v0 + 321))
  {
    sub_100140D58();
  }
  else
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v2 = (void *)Strong;
      uint64_t v3 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v4 = (void *)swift_allocObject();
      v4[2] = nullsub_3;
      v4[3] = 0;
      v4[4] = v3;
      v0[6] = sub_1001423DC;
      v0[7] = v4;
      v0[2] = _NSConcreteStackBlock;
      v0[3] = 1107296256;
      v0[4] = sub_1001412CC;
      v0[5] = &unk_1001D6680;
      id v5 = _Block_copy(v0 + 2);
      swift_release();
      [v2 dismissViewControllerAnimated:1 completion:v5];
      _Block_release(v5);
    }
  }
  uint64_t v6 = static MainActor.shared.getter();
  v0[33] = v6;
  if (v6)
  {
    swift_getObjectType();
    uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
  }
  v0[34] = v7;
  v0[35] = v9;
  return _swift_task_switch(sub_10000B708, v7);
}

void sub_1000085CC(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 8) model];
  uint64_t v3 = [v2 defaultCalendarForNewEvents];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v3 != 0;

  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100023D28;
  v4[3] = &unk_1001D3260;
  long long v5 = *(_OWORD *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);
}

int main(int argc, const char **argv, const char **envp)
{
  uint64_t v6 = (objc_class *)objc_opt_class();
  NSStringFromClass(v6);
  uint64_t v7 = (NSString *)objc_claimAutoreleasedReturnValue();
  UIApplicationMain(argc, (char **)argv, v7, 0);

  return 0;
}

void sub_100009B20(uint64_t a1)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:@"MainViewControllerDidAppearNotification" object:*(void *)(a1 + 32)];
}

void sub_10000AB94(id a1)
{
  uint64_t v1 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  attr = dispatch_queue_attr_make_with_qos_class(v1, QOS_CLASS_USER_INITIATED, 0);

  dispatch_queue_t v2 = dispatch_queue_create("com.apple.mobilecal.calendarsButtonConfig", attr);
  uint64_t v3 = (void *)qword_100216758;
  qword_100216758 = (uint64_t)v2;
}

void sub_10000ADE0(uint64_t a1)
{
  dispatch_queue_t v2 = [*(id *)(a1 + 32) _calendarsButtonConfiguration];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100023DFC;
  v4[3] = &unk_1001D28A8;
  void v4[4] = *(void *)(a1 + 32);
  id v5 = v2;
  id v3 = v2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);
}

void sub_10000AFA0(id a1)
{
  uint64_t v1 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  attr = dispatch_queue_attr_make_with_qos_class(v1, QOS_CLASS_USER_INITIATED, 0);

  dispatch_queue_t v2 = dispatch_queue_create("dayNavigationViewController.loadOccurrenceCacheQueue", attr);
  id v3 = (void *)qword_100216A20;
  qword_100216A20 = (uint64_t)v2;
}

void sub_10000B024(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v6 = *a4;
  id v7 = a1;
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100013AAC(&qword_100216078);
  sub_100010FD0(v8, a5);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  swift_endAccess();
}

uint64_t sub_10000B0D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1000245E8(a1, &qword_100216230);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

void sub_10000B314(id a1)
{
  os_log_t v1 = os_log_create(CalendarLogSubsystem, "CalendarUI");
  dispatch_queue_t v2 = (void *)kCalUILogHandle;
  kCalUILogHandle = (uint64_t)v1;

  os_log_t v3 = os_log_create(CalendarLogSubsystem, "Inbox");
  uint64_t v4 = (void *)kCalUILogInboxHandle;
  kCalUILogInboxHandle = (uint64_t)v3;

  os_log_t v5 = os_log_create(CalendarLogSubsystem, "Testing");
  uint64_t v6 = (void *)kCalUILogTestHandle;
  kCalUILogTestHandle = (uint64_t)v5;

  os_log_t v7 = os_log_create(CalendarLogSubsystem, "Carplay");
  uint64_t v8 = kCalUILogCarplayHandle;
  kCalUILogCarplayHandle = (uint64_t)v7;

  _objc_release_x1(v7, v8);
}

uint64_t sub_10000B708()
{
  uint64_t v1 = v0[33];
  v0[36] = AsyncMapSequence.Iterator.baseIterator.modify();
  sub_100013AF0(&qword_100216108, &qword_1002160E8);
  dispatch_queue_t v2 = (void *)swift_task_alloc();
  v0[37] = v2;
  void *v2 = v0;
  v2[1] = sub_100024378;
  uint64_t v3 = v0[13];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v3, v1, &protocol witness table for MainActor);
}

uint64_t sub_10000BA78()
{
  uint64_t v2 = v0[22];
  uint64_t v1 = v0[23];
  uint64_t v3 = v0[21];
  sub_100024554();
  sub_100024218();
  Tip.shouldDisplayUpdates.getter();
  AsyncMapSequence.base.getter();
  sub_100013AF0(&qword_100216100, &qword_1002160E0);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  AsyncMapSequence.transform.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  AsyncMapSequence.Iterator.init(_:transform:)();
  v0[32] = OBJC_IVAR____TtC9MobileCal11TipsManager_tipPopoverController;
  uint64_t v4 = static MainActor.shared.getter();
  v0[33] = v4;
  if (v4)
  {
    swift_getObjectType();
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  v0[34] = v5;
  v0[35] = v7;
  return _swift_task_switch(sub_10000B708, v5);
}

void sub_10000BC0C(uint64_t a1)
{
  id v9 = [*(id *)(a1 + 32) _findSomeCalendarModel];
  uint64_t v2 = +[UIScreen mainScreen];
  uint64_t v3 = [v2 traitCollection];
  id v4 = [v3 userInterfaceIdiom];

  if (v4 == (id)1) {
    uint64_t v5 = PadApplicationTester;
  }
  else {
    uint64_t v5 = PhoneApplicationTester;
  }
  id v6 = [[v5 alloc] initWithModel:v9];
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(void **)(v7 + 8);
  *(void *)(v7 + 8) = v6;
}

void sub_10000C1E4(uint64_t a1)
{
  uint64_t v2 = +[CUIKPreferences sharedPreferences];
  id v10 = [v2 lastViewedOccurrenceUID];

  uint64_t v3 = +[CUIKPreferences sharedPreferences];
  id v4 = [v3 lastViewedOccurrenceDate];

  if (v10) {
    BOOL v5 = v4 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5)
  {
    id v6 = [*(id *)(*(void *)(a1 + 32) + 224) eventStore];
    uint64_t v7 = [v6 allEventsWithUniqueId:v10 occurrenceDate:v4];

    if ([v7 count] == (id)1)
    {
      uint64_t v8 = [v7 firstObject];
      if (v8)
      {
        id v9 = (void *)v8;
        [*(id *)(a1 + 32) showEvent:v8 animated:0 showMode:1 context:0];
      }
    }
  }
}

void sub_10000D234(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[NSNumber numberWithUnsignedChar:CalDefaultTimeZoneSettingIsAutomatic()];
  [v3 setObject:v4 forKeyedSubscript:@"timezoneSupportIsEnabled"];

  BOOL v5 = +[CDBPreferences shared];
  id v6 = [NSNumber numberWithInteger:[v5 get_kCalPreferredDaysToSyncKey]];
  [v3 setObject:v6 forKeyedSubscript:@"numberOfDaysToSync"];

  +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [*(id *)(a1 + 32) currentViewType]);
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  [v3 setObject:v7 forKeyedSubscript:@"viewType"];
}

void sub_10000D484(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

Swift::Void __swiftcall TipsManager.addTipObservers(for:todayButton:)(UIViewController a1, UIBarButtonItem todayButton)
{
  id v3 = v2;
  sub_100013AAC(&qword_100216230);
  __chkstk_darwin();
  BOOL v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC9MobileCal11TipsManager_tipObservationTask;
  if (!*(void *)&v2[OBJC_IVAR____TtC9MobileCal11TipsManager_tipObservationTask])
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

    if (!Strong)
    {
      uint64_t v8 = (void *)swift_unknownObjectWeakLoadStrong();

      if (!v8)
      {
        swift_unknownObjectWeakAssign();
        swift_unknownObjectWeakAssign();
        uint64_t v9 = type metadata accessor for TaskPriority();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 1, 1, v9);
        type metadata accessor for MainActor();
        id v10 = v2;
        uint64_t v11 = static MainActor.shared.getter();
        uint64_t v12 = (void *)swift_allocObject();
        v12[2] = v11;
        v12[3] = &protocol witness table for MainActor;
        v12[4] = v10;
        *(void *)&v3[v6] = sub_10000B0D8((uint64_t)v5, (uint64_t)&unk_100216068, (uint64_t)v12);
        swift_release();
      }
    }
  }
}

void sub_10000FFD0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = qword_100216758;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10001249C;
  v6[3] = &unk_1001D4280;
  objc_copyWeak(&v8, (id *)(a1 + 32));
  id v7 = v3;
  id v5 = v3;
  dispatch_async(v4, v6);

  objc_destroyWeak(&v8);
}

void sub_1000105A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100010830(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_100010AC8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100013AAC(&qword_100216078);
  sub_100010B78(v3, a2);
  sub_100010FD0(v3, (uint64_t)a2);
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t *sub_100010B78(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_100010BDC()
{
  uint64_t v0 = sub_100013AAC(&qword_100216078);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Tips.Rule();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  id v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100215D50 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100010FD0(v0, (uint64_t)qword_1002171E0);
  swift_beginAccess();
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v9(v3, v8, v0);
  Tips.Rule.init<A>(_:_:)();
  uint64_t v15 = static Tips.RuleBuilder.buildExpression(_:)();
  id v10 = *(void (**)(char *, uint64_t))(v5 + 8);
  v10(v7, v4);
  if (qword_100215D58 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_100010FD0(v0, (uint64_t)qword_1002171F8);
  swift_beginAccess();
  v9(v3, v11, v0);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  v10(v7, v4);
  if (qword_100215D48 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_100010FD0(v0, (uint64_t)qword_1002171C8);
  swift_beginAccess();
  v9(v3, v12, v0);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  v10(v7, v4);
  static Tips.RuleBuilder.buildPartialBlock(first:)();
  swift_bridgeObjectRelease();
  static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_100010FD0(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

int64_t sub_10001154C(id a1, AnchoredValuePair *a2, AnchoredValuePair *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = a3;
  [(AnchoredValuePair *)v4 size];
  double v7 = v6;
  [(AnchoredValuePair *)v5 size];
  double v9 = v7 - v8;
  if (v9 < 0.0) {
    double v9 = -v9;
  }
  if (v9 >= 0.00001)
  {
    [(AnchoredValuePair *)v4 size];
    double v12 = v11;
    [(AnchoredValuePair *)v5 size];
    if (v12 > v13) {
      int64_t v10 = 1;
    }
    else {
      int64_t v10 = -1;
    }
  }
  else
  {
    int64_t v10 = 0;
  }

  return v10;
}

id sub_100011B8C(uint64_t a1)
{
  uint64_t v1 = *(void **)(*(void *)(a1 + 32) + 16);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10001C290;
  v3[3] = &unk_1001D5520;
  char v5 = *(unsigned char *)(a1 + 56);
  long long v4 = *(_OWORD *)(a1 + 40);
  return [v1 enumerateObjectsUsingBlock:v3];
}

void sub_10001249C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = [WeakRetained _calendarsButtonConfiguration];

  if (v3)
  {
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_100023964;
    v4[3] = &unk_1001D28A8;
    id v5 = *(id *)(a1 + 32);
    id v6 = v3;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);
  }
}

void sub_100012A44(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_1002169C8;
  qword_1002169C8 = v1;

  [(id)qword_1002169C8 setCalculationType:0];
  [(id)qword_1002169C8 addAnchoredValue:16 forWindowSizeWidth:51.0];
  [(id)qword_1002169C8 addAnchoredValue:32 forWindowSizeWidth:56.66];
  [(id)qword_1002169C8 addAnchoredValue:2 forWindowSizeWidth:44.5];
  uint64_t v3 = (void *)qword_1002169C8;

  [v3 addAnchoredValue:4 forWindowSizeWidth:44.5];
}

uint64_t sub_1000130C8()
{
  uint64_t v0 = sub_100013AAC(&qword_1002162B8);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Tips.UsesConstellation();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  double v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100013AAC(&qword_1002162C0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  double v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Tips.UsesConstellation.init(_:)();
  static Tips.OptionsBuilder.buildExpression<A>(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v15 = v4;
  v16 = &protocol witness table for Tips.UsesConstellation;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  static Tips.OptionsBuilder.buildPartialBlock<A>(first:)();
  uint64_t v15 = v8;
  v16 = (void *)OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v13 = static Tips.OptionsBuilder.buildFinalResult<A>(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v13;
}

uint64_t sub_100013364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[12] = a4;
  sub_100013AAC(&qword_1002160D8);
  v4[13] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Tips.Status();
  v4[14] = v5;
  v4[15] = *(void *)(v5 - 8);
  v4[16] = swift_task_alloc();
  v4[17] = sub_100013AAC(&qword_1002160E0);
  v4[18] = swift_task_alloc();
  v4[19] = sub_100013AAC(&qword_1002160E8);
  v4[20] = swift_task_alloc();
  uint64_t v6 = sub_100013AAC(&qword_1002160F0);
  v4[21] = v6;
  v4[22] = *(void *)(v6 - 8);
  v4[23] = swift_task_alloc();
  uint64_t v7 = sub_100013AAC(&qword_1002160F8);
  v4[24] = v7;
  v4[25] = *(void *)(v7 - 8);
  v4[26] = swift_task_alloc();
  v4[27] = swift_task_alloc();
  v4[28] = type metadata accessor for MainActor();
  v4[29] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[30] = v8;
  v4[31] = v9;
  return _swift_task_switch(sub_10000BA78, v8);
}

Swift::Void __swiftcall Application.registerAppIntentsDependencies()()
{
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v5 = 0;
  long long v3 = 0u;
  long long v4 = 0u;
  *(void *)(swift_allocObject() + 16) = v0;
  id v1 = v0;
  sub_100013AAC(&qword_100216000);
  AppDependencyManager.add<A>(key:dependency:)();
  swift_release();
  swift_release();
  sub_1000137CC((uint64_t)&v3);
  static AppDependencyManager.shared.getter();
  uint64_t v5 = 0;
  long long v3 = 0u;
  long long v4 = 0u;
  *(void *)(swift_allocObject() + 16) = v1;
  id v2 = v1;
  sub_100013AAC(&qword_100216010);
  AppDependencyManager.add<A>(key:dependency:)();
  swift_release();
  swift_release();
  sub_1000137CC((uint64_t)&v3);
  static AppDependencyManager.shared.getter();
  sub_10001382C(0, &qword_100216018);
  long long v3 = 0u;
  long long v4 = 0u;
  uint64_t v5 = 0;
  AppDependencyManager.add<A>(key:dependency:)();
  swift_release();
  sub_1000137CC((uint64_t)&v3);
  static AppDependencyManager.shared.getter();
  sub_10001382C(0, &qword_100216020);
  long long v3 = 0u;
  long long v4 = 0u;
  uint64_t v5 = 0;
  AppDependencyManager.add<A>(key:dependency:)();
  swift_release();
  sub_1000137CC((uint64_t)&v3);
}

uint64_t sub_1000137CC(uint64_t a1)
{
  uint64_t v2 = sub_100013AAC(&qword_100216008);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10001382C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_100013868@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_100013AAC(&qword_1002162C8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100013AAC(&qword_1002162D0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100013AF0(&qword_1002162D8, &qword_1002162D0);
  static PredicateExpressions.build_Arg<A>(_:)();
  v11[15] = 1;
  static PredicateExpressions.build_Arg<A>(_:)();
  a1[3] = sub_100013AAC(&qword_1002162E0);
  a1[4] = sub_100013BE0();
  sub_100013B7C(a1);
  sub_100013AF0(&qword_100216300, &qword_1002162C8);
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_100013AAC(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_100013AF0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100013B34(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100013B34(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t *sub_100013B7C(uint64_t *a1)
{
  id v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

unint64_t sub_100013BE0()
{
  unint64_t result = qword_1002162E8;
  if (!qword_1002162E8)
  {
    sub_100013B34(&qword_1002162E0);
    sub_100013AF0(&qword_1002162F0, &qword_1002162D0);
    sub_100024574();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002162E8);
  }
  return result;
}

id sub_1000159C4(uint64_t a1)
{
  uint64_t v2 = +[NSNotificationCenter defaultCenter];
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = CUIKCalendarModelDisplayedOccurrencesChangedForTheFirstTimeNotification;
  uint64_t v5 = [*(id *)(v3 + 8) model];
  [v2 removeObserver:v3 name:v4 object:v5];

  uint64_t v6 = +[NSNotificationCenter defaultCenter];
  [v6 removeObserver:*(void *)(a1 + 32) name:@"MainViewControllerDidCompleteExtendedLaunchNotification" object:0];

  uint64_t v7 = *(void **)(a1 + 32);

  return [v7 updateErrorState];
}

void sub_100015A8C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) name];
  uint64_t v3 = [*(id *)(a1 + 40) topMainViewControllerContainer];
  uint64_t v4 = [v3 currentChildViewController];
  if (!*(unsigned char *)(*(void *)(a1 + 40) + 183)
    && (!*(void *)(a1 + 32)
     || [v2 isEqualToString:CUIKCalendarModelDisplayedOccurrencesChangedForTheFirstTimeNotification]&& !objc_msgSend(v4, "handlesNotifyOnExtendedLaunchCompletion")|| objc_msgSend(v2, "isEqualToString:", @"MainViewControllerDidCompleteExtendedLaunchNotification")))
  {
    *(unsigned char *)(*(void *)(a1 + 40) + 183) = 1;
    if (*(unsigned char *)(*(void *)(a1 + 40) + 183))
    {
      uint64_t v5 = +[NSNotificationCenter defaultCenter];
      [v5 removeObserver:*(void *)(a1 + 40) name:CUIKCalendarModelDisplayedOccurrencesChangedForTheFirstTimeNotification object:*(void *)(*(void *)(a1 + 40) + 224)];

      uint64_t v6 = +[NSNotificationCenter defaultCenter];
      [v6 removeObserver:*(void *)(a1 + 40) name:@"MainViewControllerDidCompleteExtendedLaunchNotification" object:0];

      [*(id *)(a1 + 40) _updateCalendarButtonAccessory];
      [*(id *)(a1 + 40) _updateUserActivity];
      dispatch_time_t v7 = dispatch_time(0, 300000000);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_1000AEE1C;
      block[3] = &unk_1001D2740;
      block[4] = *(void *)(a1 + 40);
      dispatch_after(v7, (dispatch_queue_t)&_dispatch_main_q, block);
    }
  }
}

void sub_1000177E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v10 - 160));
  _Unwind_Resume(a1);
}

void sub_10001843C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

BOOL EKUICurrentWindowInterfaceParadigm_RequiresPageSheetEventEditors()
{
  return (EKUICurrentWindowSizeParadigmForViewHierarchy() & 0x3FCC0420) != 0;
}

void sub_10001C290(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v6 = v3;
  if (!*(unsigned char *)(a1 + 48)) {
    goto LABEL_5;
  }
  [v3 frame];
  double v4 = 0.0;
  if (CGRectGetMidX(v8) < *(double *)(a1 + 32))
  {
    id v3 = v6;
    goto LABEL_6;
  }
  [v6 frame];
  CGFloat MidX = CGRectGetMidX(v9);
  id v3 = v6;
  if (MidX < *(double *)(a1 + 40)) {
LABEL_5:
  }
    double v4 = 1.0;
LABEL_6:
  [v3 setAlpha:v4];
}

id sub_10001D130(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 48) setFrame:*(double *)(a1 + 40) + *(double *)(a1 + 48) * -0.5, *(double *)(a1 + 64), *(double *)(a1 + 48), *(double *)(a1 + 72)];
}

void sub_10001E450(uint64_t a1, void *a2)
{
  [a2 CGRectValue];
  [*(id *)(a1 + 32) convertRect:*(void *)(*(void *)(a1 + 32) + 128) toView:];
  CalRoundRectToScreenScale();
  id v3 = *(void **)(a1 + 40);
  +[NSValue valueWithCGRect:](NSValue, "valueWithCGRect:");
  id v4 = (id)objc_claimAutoreleasedReturnValue();
  [v3 addObject:v4];
}

void sub_100022D18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100023964(uint64_t a1)
{
  return _[*(id *)(a1 + 32) setConfiguration:*(void *)(a1 + 40)];
}

unint64_t sub_100023970()
{
  return 0xD00000000000001FLL;
}

id sub_100023C50(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 32) setFrame: *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64)];
}

void sub_100023C70(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 8) numberOfDaysWithCachedOccurrences];
  [*(id *)(*(void *)(a1 + 32) + 8) fetchDaysStartingFromSection:[*(id *)(*(void *)(a1 + 32) + 8) sectionForCachedOccurrencesOnDate:*(void *)(a1 + 40)] sectionsToLoadInBothDirections:8];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100006DC8;
  block[3] = &unk_1001D2740;
  block[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100023D28(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  id v2 = [*(id *)(*(void *)(a1 + 32) + 40) newEventBarButtonItem];
  [v2 setEnabled:v1];
}

id sub_100023D88(uint64_t a1)
{
  +[CalMCSignpost endLaunchToView:extended:](CalMCSignpost, "endLaunchToView:extended:", [*(id *)(a1 + 32) currentViewType], 0);

  return +[CalMCSignpost beginLaunch:1];
}

id sub_100023DDC(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 280) setDateString:*(void *)(*(void *)(a1 + 32) + 96)];
}

id sub_100023DFC(uint64_t a1)
{
  return _[*(id *)(*(void *)(a1 + 32) + 160) setConfiguration:*(void *)(a1 + 40)];
}

id sub_100023E10(uint64_t a1)
{
  return _[*(id *)(*(void *)(a1 + 32) + 40) updateInboxCount:*(void *)(a1 + 40)];
}

void sub_100023E24(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = qword_100216668;
  qword_100216668 = v1;

  _objc_release_x1(v1, v2);
}

id sub_100023E60(uint64_t a1)
{
  return [*(id *)(a1 + 32) requestContactsAuthorization];
}

void sub_100023E68(id a1)
{
  uint64_t v1 = +[NSMutableDictionary dictionary];
  uint64_t v2 = qword_100216688;
  qword_100216688 = v1;

  _objc_release_x1(v1, v2);
}

void sub_100023EA8(id a1)
{
  uint64_t v1 = +[NSMutableDictionary dictionary];
  uint64_t v2 = qword_100216678;
  qword_100216678 = v1;

  _objc_release_x1(v1, v2);
}

void sub_100023EE8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.mobilecal.signposts", "TelemetrySignposts");
  uint64_t v2 = qword_1002169A0;
  qword_1002169A0 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

uint64_t sub_100023F2C(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = qword_1002165E0;
  qword_1002165E0 = (uint64_t)v1;

  return _objc_release_x1(v1, v2);
}

void sub_100023F64(id a1)
{
  id v1 = objc_alloc_init(CalendarSceneManagerSharedState);
  uint64_t v2 = qword_1002169F0;
  qword_1002169F0 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

unint64_t EKUICurrentWindowInterfaceParadigm_SupportsLargeWeekdayNamesInNavigationPalette()
{
  return ((unint64_t)EKUICurrentWindowInterfaceParadigm() >> 4) & 1;
}

void CalUILogInitialize()
{
  if (qword_100216710 != -1) {
    dispatch_once(&qword_100216710, &stru_1001D3C68);
  }
}

uint64_t sub_100023FE8(uint64_t a1)
{
  id v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10013C8D8;
  id v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_100215EC8 + dword_100215EC8);
  return v6(a1, v4);
}

uint64_t sub_1000240A0(uint64_t a1, int *a2)
{
  id v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *id v4 = v2;
  v4[1] = sub_10013B430;
  return v6(a1);
}

unint64_t sub_1000241C4()
{
  unint64_t result = qword_1002162B0;
  if (!qword_1002162B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002162B0);
  }
  return result;
}

unint64_t sub_100024218()
{
  unint64_t result = qword_100216088;
  if (!qword_100216088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100216088);
  }
  return result;
}

uint64_t sub_10002426C(uint64_t a1)
{
  return sub_100010AC8(a1, qword_1002171E0);
}

uint64_t sub_1000242A0(uint64_t a1)
{
  return sub_100010AC8(a1, qword_1002171F8);
}

uint64_t sub_1000242C8(uint64_t a1)
{
  return sub_100010AC8(a1, qword_1002171C8);
}

uint64_t sub_100024314()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 240);
  return _swift_task_switch(sub_10000828C, v1);
}

uint64_t sub_100024378()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 272);
    id v4 = sub_100140B30;
  }
  else
  {
    (*(void (**)(void))(v2 + 288))();
    uint64_t v3 = *(void *)(v2 + 272);
    id v4 = sub_100007054;
  }
  return _swift_task_switch(v4, v3);
}

uint64_t sub_1000244A0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10013C8D8;
  return sub_100013364(a1, v4, v5, v6);
}

void sub_100024554()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC9MobileCal11TipsManager____lazy_storage___jumpToTodayTip) == 1) {
    *(unsigned char *)(v0 + OBJC_IVAR____TtC9MobileCal11TipsManager____lazy_storage___jumpToTodayTip) = 0;
  }
}

unint64_t sub_100024574()
{
  unint64_t result = qword_1002162F8;
  if (!qword_1002162F8)
  {
    sub_100013B34(&qword_1002162C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002162F8);
  }
  return result;
}

uint64_t sub_1000245E8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100013AAC(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_100024E38(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100026B38(id a1)
{
  uint64_t v1 = +[UIColor separatorColor];
  uint64_t v2 = (void *)qword_1002163B8;
  qword_1002163B8 = v1;

  uint64_t v3 = +[UIColor quaternarySystemFillColor];
  uint64_t v4 = (void *)qword_1002163C0;
  qword_1002163C0 = v3;

  uint64_t v5 = 0;
  double v6 = 0.0;
  double v7 = 0.0;
  double v8 = 0.0;
  double v9 = 0.0;
  do
  {
    *(double *)&qword_1002163C8[v5] = v9;
    *(double *)&qword_100216400[v5] = v8;
    *(double *)&qword_100216438[v5] = v7;
    *(double *)&qword_100216470[v5] = v6;
    double v9 = v9 + *(double *)&qword_1001C10B0[v5] + 0.5;
    double v8 = v8 + *(double *)&qword_1001C10E8[v5] + 0.5;
    double v7 = v7 + *(double *)&qword_1001C1120[v5] + 1.0;
    double v6 = v6 + *(double *)&qword_1001C1158[v5++] + 1.0;
  }
  while (v5 != 7);
}

void sub_100026F34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100026F60(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    [WeakRetained[1] setBackgroundColor:[qword_1002163B8 CGColor]];
    [WeakRetained[2] setBackgroundColor:[qword_1002163B8 CGColor]];
    [WeakRetained _rebuildOverlayLabels];
    [WeakRetained _rebuildDayNumberLabels];
    uint64_t v1 = [WeakRetained[57] layer];
    [v1 setNeedsDisplay];
  }
}

void sub_100028038(id a1, UILabel *a2, unint64_t a3, BOOL *a4)
{
}

void sub_100028040(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v14 = v5;
  if (*(void *)(a1 + 56) > a3 || *(void *)(a1 + 64) <= a3)
  {
    [v5 setHidden:1];
  }
  else
  {
    [v5 setHidden:0];
    uint64_t v6 = a3 - *(void *)(a1 + 56);
    double v7 = *(void **)(a1 + 32);
    double v8 = [*(id *)(*(void *)(a1 + 40) + 400) date];
    double v9 = [v7 dateByAddingUnit:16 value:v6 toDate:v8 options:1024];

    uint64_t v10 = +[CUIKDateStrings overlayMediumStringForDate:v9 inCalendar:*(void *)(a1 + 32)];
    [v14 setText:v10];

    uint64_t v11 = [*(id *)(a1 + 32) components:24 fromDate:v9];
    if ([v11 day] == (id)1)
    {
      if ([v11 month] == (id)1)
      {
        unsigned __int8 v12 = [v11 isLeapMonth];
        *(void *)(*(void *)(a1 + 40) + 72) = a3;
        if ((v12 & 1) == 0) {
          *(unsigned char *)(*(void *)(a1 + 40) + 80) = 1;
        }
      }
      else
      {
        *(void *)(*(void *)(a1 + 40) + 72) = a3;
      }
    }
    CUIKZeroIndexedWeekStart();
    if (CUIKDayOfWeekIsWeekend()) {
      WeekendTextColor();
    }
    else {
    uint64_t v13 = +[UIColor labelColor];
    }
    [v14 setTextColor:v13];

    [v14 setFont:*(void *)(a1 + 48)];
  }
}

void sub_1000286BC(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v21 = v5;
  if (*(void *)(a1 + 40) > a3 || *(void *)(a1 + 48) <= a3)
  {
    [v5 setHidden:1];
  }
  else
  {
    [v5 setHidden:0];
    unint64_t v6 = ((unint64_t)[*(id *)(*(void *)(a1 + 32) + 400) day] + a3 + ~*(void *)(a1 + 40))
       % *(void *)(a1 + 56);
    double v7 = CUIKLocalizedStringForInteger();
    [v21 setText:v7];

    id v8 = (id)qword_1002163A0;
    CUIKZeroIndexedWeekStart();
    if (CUIKDayOfWeekIsWeekend()) {
      WeekendTextColor();
    }
    else {
    double v9 = +[UIColor labelColor];
    }
    if (v6 + 1 == *(void *)(*(void *)(a1 + 32) + 472))
    {
      uint64_t v10 = +[UIColor whiteColor];
      [v21 setTextColor:v10];

      [v21 setTextAlignment:1];
      id v11 = (id)qword_1002163A8;

      unsigned __int8 v12 = v21;
      id v8 = v11;
    }
    else
    {
      [v21 setTextColor:v9];
      unsigned __int8 v12 = v21;
    }
    [v12 setFont:v8];
    if (!v6)
    {
      [*(id *)(*(void *)(a1 + 32) + 368) setTextColor:v9];
      uint64_t v13 = [v21 font];
      [*(id *)(*(void *)(a1 + 32) + 368) setFont:v13];

      id v14 = [*(id *)(a1 + 32) startDate];
      uint64_t v15 = [v14 date];
      v16 = CUIKStringForDate();
      [*(id *)(*(void *)(a1 + 32) + 368) setText:v16];

      [*(id *)(*(void *)(a1 + 32) + 376) setTextColor:v9];
      v17 = [v21 font];
      [*(id *)(*(void *)(a1 + 32) + 376) setFont:v17];

      v18 = [*(id *)(a1 + 32) startDate];
      v19 = [v18 date];
      v20 = CUIKStringForMonth();
      [*(id *)(*(void *)(a1 + 32) + 376) setText:v20];

      *(void *)(*(void *)(a1 + 32) + 384) = a3;
    }
  }
}

void sub_1000289A4(id a1, UIImageView *a2, unint64_t a3, BOOL *a4)
{
  uint64_t v4 = a2;
  [(UIImageView *)v4 setHidden:1];
  [(UIImageView *)v4 setAlpha:1.0];
}

void sub_100028ADC(uint64_t a1)
{
  id v2 = *(id *)(*(void *)(a1 + 32) + 376);
  uint64_t v3 = *(void *)(a1 + 32);
  if (*(void *)(v3 + 472) != 1)
  {
    id v26 = v2;
    id v4 = *(id *)(v3 + 368);

    id v5 = [*(id *)(*(void *)(a1 + 32) + 32) objectAtIndexedSubscript:*(void *)(*(void *)(a1 + 32) + 384)];
    unint64_t v6 = v5;
    double v7 = 0.0;
    if (!*(unsigned char *)(a1 + 40)) {
      double v7 = 1.0;
    }
    [v5 setAlpha:v7];

    id v2 = v4;
  }
  if (*(unsigned char *)(a1 + 40)) {
    double v8 = 1.0;
  }
  else {
    double v8 = 0.0;
  }
  id v27 = v2;
  [v2 setAlpha:v8];
  if (*(unsigned char *)(a1 + 40)) {
    double v9 = 1.0;
  }
  else {
    double v9 = 0.0;
  }
  [*(id *)(*(void *)(a1 + 32) + 56) setAlpha:v9];
  uint64_t v10 = [*(id *)(*(void *)(a1 + 32) + 48) objectAtIndex:*(void *)(*(void *)(a1 + 32) + 384)];
  id v11 = v10;
  if (*(unsigned char *)(a1 + 40)) {
    double v12 = 0.0;
  }
  else {
    double v12 = 1.0;
  }
  [v10 setAlpha:v12];
  uint64_t v13 = *(void *)(a1 + 32);
  if (*(void *)(v13 + 40) && !*(unsigned char *)(a1 + 40))
  {
    id v14 = [*(id *)(v13 + 400) dayOfWeek];
    uint64_t v15 = (uint64_t)v14 - CUIKZeroIndexedWeekStart() + 6;
    v16 = CUIKGetOverlayCalendar();
    uint64_t v17 = *(void *)(a1 + 32);
    uint64_t v18 = *(void *)(v17 + 384) + 7 * (v15 / 7) - v15;
    v19 = [*(id *)(v17 + 400) date];
    v20 = [v16 dateByAddingUnit:16 value:v18 toDate:v19 options:1024];

    id v21 = CUIKGetOverlayCalendar();
    v22 = +[CUIKDateStrings overlayMediumStringForDate:v20 inCalendar:v21];

    v23 = [*(id *)(*(void *)(a1 + 32) + 40) objectAtIndexedSubscript:*(void *)(*(void *)(a1 + 32) + 384)];
    v24 = [v23 text];
    unsigned __int8 v25 = [v22 isEqualToString:v24];

    if ((v25 & 1) == 0)
    {
      [v23 setAlpha:0.0];
      [v23 setText:v22];
      [v23 setAlpha:1.0];
      [*(id *)(*(void *)(a1 + 32) + 64) setAlpha:0.0];
      [*(id *)(*(void *)(a1 + 32) + 64) setAlpha:1.0];
    }
  }
}

id sub_100029644(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:0.1];
}

void sub_100029654(uint64_t a1)
{
  [*(id *)(a1 + 32) removeFromSuperview];
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 40) + 488));
  [WeakRetained largeMonthWeekView:*(void *)(a1 + 40) didDoubleTapOnDay:*(void *)(a1 + 48)];
}

void sub_100029E60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100029E9C(void *a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  [v5 sizeToFit];
  int IsLeftToRight = CalTimeDirectionIsLeftToRight();
  double v7 = (uint64_t *)(a1[4] + 128 + 32 * a3);
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  uint64_t v10 = v7[2];
  uint64_t v11 = v7[3];
  if (IsLeftToRight)
  {
    CGRectGetMaxX(*(CGRect *)&v8);
    [v5 bounds];
    CGRectGetWidth(v89);
  }
  else
  {
    CGRectGetMinX(*(CGRect *)&v8);
  }
  CalRoundToScreenScale();
  *(void *)(*(void *)(a1[5] + 8) + 32) = v12;
  [v5 frame];
  CalRoundPointToScreenScale();
  [v5 setFrame:];
  uint64_t v13 = a1[4];
  if (*(void *)(v13 + 384) == a3)
  {
    [*(id *)(v13 + 368) sizeToFit];
    uint64_t v14 = 376;
    [*(id *)(a1[4] + 376) sizeToFit];
    if (*(void *)(a1[4] + 472) == 1)
    {
      NSAttributedStringKey v87 = NSFontAttributeName;
      uint64_t v15 = [v5 font];
      v88 = v15;
      v16 = +[NSDictionary dictionaryWithObjects:&v88 forKeys:&v87 count:1];
      [@" " sizeWithAttributes:v16];
      double v18 = v17;

      if (CalTimeDirectionIsLeftToRight())
      {
        [*(id *)(a1[4] + 376) bounds];
        double v19 = v18 + CGRectGetWidth(v90);
        [v5 bounds];
        *(double *)(*(void *)(a1[5] + 8) + 32) = *(double *)(*(void *)(a1[5] + 8) + 32)
                                                     - (v19
                                                      + CGRectGetWidth(v91));
      }
      [*(id *)(a1[4] + 376) frame];
      CalRoundPointToScreenScale();
      [*(id *)(a1[4] + 376) setFrame:];
    }
    else
    {
      if (CalTimeDirectionIsLeftToRight())
      {
        [v5 bounds];
        double Width = CGRectGetWidth(v92);
        [*(id *)(a1[4] + 368) bounds];
        *(double *)(*(void *)(a1[5] + 8) + 32) = Width
                                                     - CGRectGetWidth(v93)
                                                     + *(double *)(*(void *)(a1[5] + 8) + 32);
      }
      [*(id *)(a1[4] + 368) frame];
      CalRoundPointToScreenScale();
      [*(id *)(a1[4] + 368) setFrame:];
      uint64_t v14 = 368;
    }
    id v21 = *(id *)(a1[4] + v14);
    int v22 = CalTimeDirectionIsLeftToRight();
    [v21 frame];
    if (v22) {
      double MaxX = v23 + -14.0;
    }
    else {
      double MaxX = CGRectGetMaxX(*(CGRect *)&v23);
    }
    [v21 frame];
    [*(id *)(a1[4] + 56) setFrame:MaxX, v28 + -7.0, 14.0, 14.0];
    v29 = [*(id *)(a1[4] + 56) layer];
    [v29 setCornerRadius:7.0];

    uint64_t v13 = a1[4];
  }
  v30 = *(void **)(v13 + 40);
  if (v30)
  {
    v31 = [v30 objectAtIndexedSubscript:a3];
    if (*(void *)(a1[4] + 384) == a3)
    {
      v32 = CUIKGetOverlayCalendar();
      uint64_t v33 = a3 - a1[6];
      v34 = [*(id *)(a1[4] + 400) date];
      v35 = [v32 dateByAddingUnit:16 value:v33 toDate:v34 options:1024];

      v36 = CUIKGetOverlayCalendar();
      v37 = +[CUIKDateStrings overlayMediumStringForDate:v35 inCalendar:v36];
      [v31 setText:v37];
    }
    else
    {
      v35 = 0;
    }
    [v31 sizeToFit];
    [v31 frame];
    CGFloat v39 = v38;
    CGFloat v41 = v40;
    double v43 = v42;
    double v45 = v44;
    if (a1[6] == a3 && *(unsigned char *)(a1[4] + 465))
    {
      int v46 = CalTimeDirectionIsLeftToRight();
      [*(id *)(a1[4] + 392) frame];
      if (v46)
      {
        double v51 = CGRectGetMaxX(*(CGRect *)&v47);
        double v52 = 2.0;
LABEL_26:
        double v59 = v51 + v52;
LABEL_30:
        [v5 frame];
        double v64 = v63;
        [v5 _firstLineBaselineOffsetFromBoundsTop];
        double v66 = v65 + v64;
        [v31 _firstLineBaselineOffsetFromBoundsTop];
        [v31 setFrame:v59, v66 - v67 + -1.0, v43, v45];
        v68 = (void *)a1[4];
        if (v68[48] == a3)
        {
          if (v68[59] == 1) {
            v69 = &OBJC_IVAR___LargeMonthWeekView__firstOfMonthNoDayLabel;
          }
          else {
            v69 = &OBJC_IVAR___LargeMonthWeekView__firstOfMonthLabel;
          }
          id v70 = *(id *)((char *)v68 + *v69);
          [v70 alpha];
          if (v71 == 1.0)
          {
            [v70 frame];
            double MinX = CGRectGetMinX(v95);
            [v31 frame];
            if (MinX < CGRectGetMaxX(v96))
            {
              v73 = CUIKGetOverlayCalendar();
              v74 = +[CUIKDateStrings overlayShortStringForDate:v35 inCalendar:v73];
              [v31 setText:v74];

              [v31 sizeToFit];
              [v70 alpha];
              if (v75 == 1.0)
              {
                [v70 frame];
                double v76 = CGRectGetMinX(v97);
                [v31 frame];
                if (v76 < CGRectGetMaxX(v98))
                {
                  [v31 setText:&stru_1001D6918];
                  [v31 sizeToFit];
                }
              }
            }
          }

          v68 = (void *)a1[4];
        }
        if (v68[9] == a3)
        {
          [v31 frame];
          CGRectGetMaxY(v99);
          CalRoundRectToScreenScale();
          [*(id *)(a1[4] + 64) setFrame:];
        }

        uint64_t v13 = a1[4];
        goto LABEL_43;
      }
      double v60 = CGRectGetMinX(*(CGRect *)&v47);
      double v61 = -2.0;
    }
    else
    {
      int v53 = CalTimeDirectionIsLeftToRight();
      v54 = (uint64_t *)(a1[4] + 128 + 32 * a3);
      uint64_t v55 = *v54;
      uint64_t v56 = v54[1];
      uint64_t v57 = v54[2];
      uint64_t v58 = v54[3];
      if (v53)
      {
        double v51 = CGRectGetMinX(*(CGRect *)&v55);
        double v52 = 9.5;
        goto LABEL_26;
      }
      double v60 = CGRectGetMaxX(*(CGRect *)&v55);
      double v61 = -9.5;
    }
    double v62 = v60 + v61;
    v94.origin.x = v39;
    v94.origin.y = v41;
    v94.size.width = v43;
    v94.size.height = v45;
    double v59 = v62 - CGRectGetWidth(v94);
    goto LABEL_30;
  }
LABEL_43:
  v77 = *(void **)(v13 + 48);
  if (v77)
  {
    v78 = [v77 objectAtIndexedSubscript:a3];
    int v79 = CalTimeDirectionIsLeftToRight();
    [v5 frame];
    if (v79) {
      double v84 = v80 + -14.0;
    }
    else {
      double v84 = CGRectGetMaxX(*(CGRect *)&v80);
    }
    [v5 frame];
    [v78 setFrame:v84, v85 + -7.0, 14.0, 14.0];
    v86 = [v78 layer];
    [v86 setCornerRadius:7.0];
  }
}

void sub_10002AE50(id a1)
{
  uint64_t v1 = +[UIColor colorWithWhite:0.0 alpha:0.05];
  uint64_t v2 = qword_1002164A8;
  qword_1002164A8 = v1;

  _objc_release_x1(v1, v2);
}

id sub_10002AE9C(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:1.0];
}

id sub_10002AEA8(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:0.0];
}

id sub_10002AEB4(uint64_t a1)
{
  return [*(id *)(a1 + 32) removeFromSuperview];
}

id sub_10002CC30(uint64_t a1)
{
  return [*(id *)(a1 + 32) openAttendeesDetailItem];
}

uint64_t sub_10002F52C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

id sub_10002F798(uint64_t a1)
{
  id v1 = [objc_alloc((Class)EKUIReadonlyEventViewController) initWithEvent:*(void *)(a1 + 32)];

  return v1;
}

id sub_10002F7DC(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 8);
  id v3 = a2;
  id v4 = [v2 selectedOccurrences];
  id v5 = +[EKUIContextMenuActions menuForEvents:presentationController:isEditMenu:overrideActionBlock:completionBlock:](EKUIContextMenuActions, "menuForEvents:presentationController:isEditMenu:overrideActionBlock:completionBlock:", v4);

  unint64_t v6 = +[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", (char *)[v3 count] + 1);
  [v6 addObjectsFromArray:v3];

  [v6 addObject:v5];
  double v7 = +[UIMenu menuWithChildren:v6];

  return v7;
}

id *sub_10002F920(id *result, uint64_t a2)
{
  if (a2 == 8) {
    return (id *)[result[4] attemptDisplayReviewPrompt];
  }
  return result;
}

void sub_10002FBA8(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_10002FC3C;
  v2[3] = &unk_1001D28A8;
  id v1 = *(void **)(a1 + 40);
  v2[4] = *(void *)(a1 + 32);
  id v3 = v1;
  +[UIView performWithoutAnimation:v2];
}

id sub_10002FC3C(uint64_t a1)
{
  return [*(id *)(a1 + 32) showEvent:*(void *)(a1 + 40) animated:1 showMode:1 context:0];
}

id sub_10002FE6C(uint64_t a1, uint64_t a2)
{
  if (a2 == 3)
  {
    id v3 = *(void **)(a1 + 48);
    return _[v3 setEditing:0 animated:1];
  }
  else
  {
    objc_storeStrong((id *)(*(void *)(a1 + 32) + 80), *(id *)(a1 + 40));
    id v4 = [*(id *)(a1 + 32) tableView];
    [v4 beginUpdates];

    id v5 = *(void **)(a1 + 32);
    unint64_t v6 = [v5 tableView];
    id v7 = [v5 tableView:v6 numberOfRowsInSection:[*(id *)(*(void *)(a1 + 32) + 80) section]];

    uint64_t v8 = [*(id *)(a1 + 32) tableView];
    if (v7)
    {
      uint64_t v9 = +[NSArray arrayWithObject:*(void *)(a1 + 40)];
      [v8 deleteRowsAtIndexPaths:v9 withRowAnimation:2];
    }
    else
    {
      uint64_t v9 = +[NSIndexSet indexSetWithIndex:](NSIndexSet, "indexSetWithIndex:", [*(id *)(*(void *)(a1 + 32) + 80) section]);
      [v8 deleteSections:v9 withRowAnimation:2];
    }

    uint64_t v10 = [*(id *)(a1 + 32) tableView];
    [v10 endUpdates];

    uint64_t v11 = *(void **)(a1 + 32);
    return [v11 performSelector:"_clearSwipedRow" withObject:0 afterDelay:1.0];
  }
}

void sub_100030160(void *a1, uint64_t a2)
{
  if (a2 == 2)
  {
    uint64_t v3 = a1[5];
    id v4 = *(void **)(a1[4] + 8);
    uint64_t v11 = 0;
    id v5 = (id *)&v11;
    unint64_t v6 = &v11;
    uint64_t v7 = 2;
  }
  else if (a2 == 1)
  {
    uint64_t v3 = a1[5];
    id v4 = *(void **)(a1[4] + 8);
    uint64_t v12 = 0;
    id v5 = (id *)&v12;
    unint64_t v6 = &v12;
    uint64_t v7 = 1;
  }
  else
  {
    if (a2)
    {
      id v8 = 0;
      goto LABEL_9;
    }
    uint64_t v3 = a1[5];
    id v4 = *(void **)(a1[4] + 8);
    uint64_t v13 = 0;
    id v5 = (id *)&v13;
    unint64_t v6 = &v13;
    uint64_t v7 = 0;
  }
  [v4 removeEvent:v3 withSpan:v7 error:v6];
  id v8 = *v5;
LABEL_9:
  uint64_t v9 = a1[4];
  uint64_t v10 = *(void **)(v9 + 88);
  *(void *)(v9 + 88) = 0;

  (*(void (**)(void))(a1[6] + 16))();
}

void sub_1000312D0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateBadge];
}

void sub_100032154(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 112) setHidden:0];
  [*(id *)(*(void *)(a1 + 32) + 160) removeFromSuperview];
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(v2 + 160);
  *(void *)(v2 + 160) = 0;
}

void *sub_100033D08(void *result)
{
  uint64_t v1 = result[4];
  if (!*(unsigned char *)(v1 + 152)) {
    return [*(id *)(v1 + 144) removeFromSuperview];
  }
  return result;
}

void sub_100033F20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100033F38(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100033F48(uint64_t a1)
{
}

void sub_100033F50(uint64_t a1, void *a2, unsigned char *a3)
{
  id v13 = a2;
  [v13 frame];
  if (CGRectContainsPoint(v15, *(CGPoint *)(a1 + 48))
    && [v13 conformsToProtocol:&OBJC_PROTOCOL___MonthInfiniteScrollSubview])
  {
    id v5 = [*(id *)(a1 + 32) scrollView];
    [v5 convertPoint:v13 toView:*(double *)(a1 + 48) *(double *)(a1 + 56)];
    double v7 = v6;
    double v9 = v8;

    uint64_t v10 = [v13 dateAtPoint:v7, v9];
    uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8);
    uint64_t v12 = *(void **)(v11 + 40);
    *(void *)(v11 + 40) = v10;

    *a3 = 1;
  }
}

id sub_100034294(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 224) setAlpha:0.0];
}

void sub_1000342AC(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 224) removeFromSuperview];
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(v2 + 224);
  *(void *)(v2 + 224) = 0;

  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(void **)(v4 + 216);
  *(void *)(v4 + 216) = 0;
}

void sub_100034A68(id a1, InfiniteScrollViewSubview *a2, BOOL *a3)
{
  uint64_t v3 = a2;
  if (-[InfiniteScrollViewSubview conformsToProtocol:](v3, "conformsToProtocol:", &OBJC_PROTOCOL___MonthInfiniteScrollSubview))-[InfiniteScrollViewSubview setHighlightedDayRange:](v3, "setHighlightedDayRange:", 0x7FFFFFFFFFFFFFFFLL, 0); {
}
  }

uint64_t sub_100034B2C(uint64_t a1, void *a2)
{
  id v15 = a2;
  id v3 = [v15 conformsToProtocol:&OBJC_PROTOCOL___MonthInfiniteScrollSubview];
  id v4 = v15;
  if (v3)
  {
    id v5 = v15;
    double v6 = [v5 calendarDate];
    if ([v6 compare:*(void *)(*(void *)(a1 + 32) + 184)] == (id)-1)
    {
      double v7 = [v5 endCalendarDate];
      id v8 = [v7 compare:*(void *)(*(void *)(a1 + 32) + 176)];

      if (v8 == (id)1)
      {
        double v9 = *(void **)(*(void *)(a1 + 32) + 176);
        uint64_t v10 = [v5 calendarDate];
        uint64_t v11 = (uint64_t)[v9 differenceInDays:v10];

        uint64_t v12 = (char *)[*(id *)(*(void *)(a1 + 32) + 184) differenceInDays:*(void *)(*(void *)(a1 + 32) + 176)]+ (v11 & (v11 >> 63))+ 1;
        uint64_t v13 = v11 & ~(v11 >> 63);
LABEL_7:
        [v5 setHighlightedDayRange:v13, v12];

        id v4 = v15;
        goto LABEL_8;
      }
    }
    else
    {
    }
    uint64_t v12 = 0;
    uint64_t v13 = 0x7FFFFFFFFFFFFFFFLL;
    goto LABEL_7;
  }
LABEL_8:

  return _objc_release_x1(v3, v4);
}

id sub_100034EA4(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 224);
  long long v3 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v11[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v11[1] = v3;
  v11[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  [v2 setTransform:v11];
  [*(id *)(*(void *)(a1 + 32) + 224) frame];
  id v4 = [*(id *)(a1 + 32) view];
  id v5 = [*(id *)(a1 + 32) scrollView];
  [v4 convertPoint:v5 fromView:*(double *)(a1 + 40), *(double *)(a1 + 48)];
  double v7 = v6;
  double v9 = v8;

  [*(id *)(*(void *)(a1 + 32) + 224) setFrame:v7, v9, *(double *)(a1 + 56), *(double *)(a1 + 64)];
  return [*(id *)(*(void *)(a1 + 32) + 224) setAlpha:0.0];
}

uint64_t sub_100034F80(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_100035708(uint64_t a1)
{
  return [*(id *)(a1 + 32) setFrame: *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64)];
}

void sub_100035718(uint64_t a1)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100035814;
  v4[3] = &unk_1001D2740;
  id v5 = *(id *)(a1 + 32);
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_100035820;
  v2[3] = &unk_1001D27D8;
  id v3 = *(id *)(a1 + 32);
  +[UIView animateWithDuration:0 delay:v4 options:v2 animations:1.0 completion:0.5];
}

id sub_100035814(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:0.0];
}

id sub_100035820(uint64_t a1)
{
  return [*(id *)(a1 + 32) removeFromSuperview];
}

void sub_10003602C(uint64_t a1)
{
  id v2 = *(id *)(*(void *)(a1 + 32) + 224);
  CGAffineTransformMakeScale(&v20, 1.3, 1.3);
  CGAffineTransform v19 = v20;
  [v2 setTransform:&v19];
  [v2 frame];
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  uint64_t v11 = [v2 occurrence];
  uint64_t v12 = [v11 startDate];
  uint64_t v13 = [v2 occurrence];
  uint64_t v14 = [v13 endDate];
  id v15 = [*(id *)(*(void *)(a1 + 32) + 168) calendar];
  unsigned int v16 = [v12 isSameDayAsDate:v14 inCalendar:v15];

  double v17 = v8 * 0.769230769;
  if (v16)
  {
    double v17 = v8 + 23.08;
    double v18 = v4 + -11.54;
  }
  else
  {
    double v18 = v4 + v8 * 0.769230769 * 0.15;
  }
  [v2 setFrame:v18, v6 + -30.0, v17, v10];
}

id sub_1000361AC(uint64_t a1)
{
  [*(id *)(a1 + 32) draggedOccurrenceWasCancelled:*(void *)(*(void *)(a1 + 32) + 216) atPoint:*(double *)(a1 + 40) y:*(double *)(a1 + 48)];
  [*(id *)(a1 + 32) removeDraggingOccurrenceAnimated:1];
  id v2 = *(void **)(a1 + 32);

  return [v2 removeAllWeekHighlights];
}

void sub_10003644C(uint64_t a1)
{
  id v27 = *(id *)(*(void *)(a1 + 32) + 224);
  id v2 = [*(id *)(a1 + 32) scrollView];
  [v27 frame];
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  uint64_t v11 = [*(id *)(a1 + 32) view];
  [v2 convertRect:v11 fromView:v4];

  uint64_t v12 = [v27 occurrence];
  uint64_t v13 = [v12 startDate];
  uint64_t v14 = [v27 occurrence];
  id v15 = [v14 endDate];
  unsigned int v16 = [*(id *)(*(void *)(a1 + 32) + 168) calendar];
  [v13 isSameDayAsDate:v15 inCalendar:v16];

  double v17 = [*(id *)(a1 + 32) view];
  CalRoundRectToScreenScale();
  double v19 = v18;
  double v21 = v20;
  double v23 = v22;
  double v25 = v24;
  id v26 = [*(id *)(a1 + 32) scrollView];
  [v17 convertRect:v26 fromView:v19];
  [v27 setFrame:];
}

id sub_100036DE8(uint64_t a1)
{
  [*(id *)(a1 + 32) removeDraggingOccurrenceAnimated:1];
  [*(id *)(a1 + 32) removeAllWeekHighlights];
  id v2 = *(void **)(a1 + 32);

  return [v2 selectOccurrence:0 inWeek:0];
}

void sub_100036E38(uint64_t a1, int a2, uint64_t a3)
{
  double v4 = *(id **)(a1 + 32);
  if (a2)
  {
    [v4[27] rollback];
    [*(id *)(a1 + 32) draggedOccurrenceWasCancelled:atPoint:*(void *)(*(void *)(a1 + 32) + 216), *(double *)(a1 + 48), *(double *)(a1 + 56)];
    [*(id *)(a1 + 32) removeDraggingOccurrenceAnimated:1];
    [*(id *)(a1 + 32) removeAllWeekHighlights];
    double v5 = *(void **)(a1 + 32);
    [v5 selectOccurrence:0 inWeek:0];
  }
  else
  {
    double v7 = [*(id *)(a1 + 40) dateAtPoint:*(double *)(a1 + 64) *(double *)(a1 + 72)];
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_100036F54;
    v8[3] = &unk_1001D2A40;
    v8[4] = *(void *)(a1 + 32);
    v8[5] = a3;
    [v4 _animateDraggingOccurrenceToDate:v7 atLastPosition:1 dropPoint:v8 completion:*(double *)(a1 + 48) *(double *)(a1 + 56)];
  }
}

id sub_100036F54(uint64_t a1)
{
  [*(id *)(a1 + 32) _saveDraggedEventWithSpan:*(void *)(a1 + 40)];
  [*(id *)(a1 + 32) removeDraggingOccurrenceAnimated:0];
  [*(id *)(a1 + 32) removeAllWeekHighlights];
  id v2 = *(void **)(a1 + 32);

  return [v2 selectOccurrence:0 inWeek:0];
}

id sub_100036FB0(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 224) setFrame:*(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64)];
}

id sub_100036FD0(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 224) setClipsToBounds:0];
  id v2 = *(void **)(*(void *)(a1 + 32) + 224);

  return [v2 setNeedsDisplay];
}

id sub_100037020(uint64_t a1)
{
  [*(id *)(a1 + 32) removeDraggingOccurrenceAnimated:1];
  [*(id *)(a1 + 32) removeAllWeekHighlights];
  id v2 = *(void **)(a1 + 32);

  return [v2 selectOccurrence:0 inWeek:0];
}

void sub_1000375FC(uint64_t a1)
{
  [*(id *)(a1 + 32) removeAllWeekHighlights];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1000376FC;
  v4[3] = &unk_1001D2740;
  id v5 = *(id *)(a1 + 40);
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_100037708;
  v2[3] = &unk_1001D27D8;
  id v3 = *(id *)(a1 + 40);
  +[UIView animateWithDuration:v4 animations:v2 completion:0.2];
}

id sub_1000376FC(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:0.0];
}

id sub_100037708(uint64_t a1)
{
  return [*(id *)(a1 + 32) removeFromSuperview];
}

uint64_t sub_10003783C()
{
  return NSRequestConcreteImplementation();
}

uint64_t sub_100037858()
{
  return objc_opt_class();
}

void sub_1000378D4(id a1)
{
  uint64_t v1 = objc_opt_new();
  id v2 = (void *)qword_1002164B8;
  qword_1002164B8 = v1;

  id v3 = (void *)qword_1002164B8;

  [v3 addAnchoredValue:2 forWindowSizeWidth:15.0];
}

void sub_1000379F8(id a1)
{
  uint64_t v1 = objc_opt_new();
  id v2 = (void *)qword_1002164C8;
  qword_1002164C8 = v1;

  id v3 = (void *)qword_1002164C8;

  [v3 addAnchoredValue:2 forWindowSizeWidth:140.0];
}

void sub_100037AB4(id a1)
{
  uint64_t v1 = objc_opt_new();
  id v2 = (void *)qword_1002164D8;
  qword_1002164D8 = v1;

  id v3 = (void *)qword_1002164D8;

  [v3 addAnchoredValue:2 forWindowSizeWidth:164.0];
}

void sub_100037BEC(id a1)
{
  uint64_t v1 = objc_opt_new();
  id v2 = (void *)qword_1002164E8;
  qword_1002164E8 = v1;

  id v3 = (void *)qword_1002164E8;

  [v3 addAnchoredValue:2 forWindowSizeWidth:28.0];
}

void sub_100037D04(id a1)
{
  uint64_t v1 = objc_opt_new();
  id v2 = (void *)qword_1002164F8;
  qword_1002164F8 = v1;

  id v3 = (void *)qword_1002164F8;

  [v3 addAnchoredValue:2 forWindowSizeWidth:13.0];
}

void sub_100037DC8(id a1)
{
  uint64_t v1 = objc_opt_new();
  id v2 = (void *)qword_100216508;
  qword_100216508 = v1;

  id v3 = (void *)qword_100216508;

  [v3 addAnchoredValue:2 forWindowSizeWidth:18.0];
}

void sub_100037E94(id a1)
{
  uint64_t v1 = objc_opt_new();
  id v2 = (void *)qword_100216518;
  qword_100216518 = v1;

  id v3 = (void *)qword_100216518;

  [v3 addAnchoredValue:2 forWindowSizeWidth:37.0];
}

void sub_100037F58(id a1)
{
  uint64_t v1 = objc_opt_new();
  id v2 = (void *)qword_100216528;
  qword_100216528 = v1;

  id v3 = (void *)qword_100216528;

  [v3 addAnchoredValue:2 forWindowSizeWidth:20.0];
}

void sub_100038018(id a1)
{
  uint64_t v1 = objc_opt_new();
  id v2 = (void *)qword_100216538;
  qword_100216538 = v1;

  id v3 = (void *)qword_100216538;

  [v3 addAnchoredValue:2 forWindowSizeWidth:21.0];
}

void sub_10003945C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unsigned char *a5)
{
  char v16 = 0;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  double v7 = [a3 occurrenceBlocks];
  id v8 = [v7 countByEnumeratingWithState:&v12 objects:v17 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v13;
LABEL_3:
    uint64_t v11 = 0;
    while (1)
    {
      if (*(void *)v13 != v10) {
        objc_enumerationMutation(v7);
      }
      (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
      if (v16) {
        break;
      }
      if (v9 == (id)++v11)
      {
        id v9 = [v7 countByEnumeratingWithState:&v12 objects:v17 count:16];
        if (v9) {
          goto LABEL_3;
        }
        break;
      }
    }
  }

  if (v16) {
    *a5 = 1;
  }
}

void sub_1000396C8(uint64_t a1, void *a2)
{
  uint64_t v2 = *(unsigned __int8 *)(a1 + 32);
  id v3 = [a2 occurrenceView];
  [v3 setUsesSmallText:v2];
}

void sub_10003990C(uint64_t a1, void *a2, unint64_t a3)
{
  double v4 = (double)a3;
  id v5 = *(void **)(a1 + 32);
  id v11 = a2;
  [v5 _dayWidth];
  double v7 = v6 * v4;
  [*(id *)(a1 + 32) _dayWidth];
  double v8 = *(double *)(a1 + 40);
  BOOL v10 = v7 + v9 > v8 && v7 <= v8;
  [v11 setOverlayShowsMonth:v10 animated:*(unsigned __int8 *)(a1 + 48)];
}

void sub_100039FC0(uint64_t a1, void *a2)
{
  id v9 = a2;
  id v3 = [v9 occurrenceView];
  double v4 = (char *)[v9 rangeStart];
  if (v4 <= [v9 rangeEnd])
  {
    while (v4 < [*(id *)(*(void *)(a1 + 32) + 32) count])
    {
      id v5 = [*(id *)(*(void *)(a1 + 32) + 32) objectAtIndexedSubscript:v4];
      double v6 = [v5 date];

      LODWORD(v5) = [*(id *)(a1 + 32) _shouldAnnotateAppEntitiesForDay:v6];
      if (v5)
      {
        uint64_t v8 = 1;
        goto LABEL_7;
      }
      if (v4++ >= [v9 rangeEnd]) {
        break;
      }
    }
  }
  uint64_t v8 = 0;
LABEL_7:
  [v3 setShouldAnnotateAppEntities:v8];
}

void sub_10003A444(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10003A45C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10003A46C(uint64_t a1)
{
}

void sub_10003A474(uint64_t a1, void *a2, unsigned char *a3)
{
  id v5 = a2;
  double v6 = *(void **)(a1 + 32);
  id v12 = v5;
  double v7 = [v5 occurrenceView];
  uint64_t v8 = [v7 occurrence];
  LODWORD(v6) = [v6 isEqual:v8];

  if (v6)
  {
    uint64_t v9 = [v12 occurrenceView];
    uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8);
    id v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    *a3 = 1;
  }
}

void sub_10003A664(uint64_t a1, void *a2)
{
  id v3 = [a2 occurrenceView];
  [v3 setUserInteractionEnabled:*(unsigned __int8 *)(*(void *)(a1 + 32) + 243)];
}

void sub_10003A760(uint64_t a1, void *a2)
{
  id v8 = a2;
  id v3 = [v8 occurrenceView];
  double v4 = [v3 occurrence];
  unsigned int v5 = [v4 isEqual:*(void *)(a1 + 32)];

  if (v5)
  {
    uint64_t v6 = *(unsigned __int8 *)(a1 + 40);
    double v7 = [v8 occurrenceView];
    [v7 setDimmed:v6];
  }
}

void sub_10003A8B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10003A8C8(uint64_t result, uint64_t a2, unsigned char *a3)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
  *a3 = 1;
  return result;
}

void sub_10003AA48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10003AA68(uint64_t a1, void *a2, unsigned char *a3)
{
  unsigned int v5 = [a2 occurrenceView];
  uint64_t v6 = [v5 occurrence];
  unsigned int v7 = [v6 isEqual:*(void *)(a1 + 32)];

  if (v7)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
    *a3 = 1;
  }
}

void sub_10003AC30(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = [a2 occurrenceView];
  [v2 addObject:v3];
}

void sub_10003AD98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10003ADB0(uint64_t a1, void *a2, unsigned char *a3)
{
  id v32 = a2;
  if (![*(id *)(a1 + 32) isBirthday]
    || ([v32 occurrenceView],
        unsigned int v5 = objc_claimAutoreleasedReturnValue(),
        [v5 occurrence],
        uint64_t v6 = objc_claimAutoreleasedReturnValue(),
        unsigned int v7 = [v6 isBirthday],
        v6,
        v5,
        !v7))
  {
    double v19 = [v32 occurrenceView];
    double v20 = [v19 occurrence];
    unsigned int v21 = [v20 isEqual:*(void *)(a1 + 32)];

    double v18 = v32;
    if (!v21) {
      goto LABEL_11;
    }
    goto LABEL_8;
  }
  id v8 = [v32 occurrenceView];
  uint64_t v9 = [v8 occurrence];
  uint64_t v10 = [v9 startCalendarDate];
  id v11 = [v10 dayComponents];
  id v12 = [*(id *)(a1 + 32) startCalendarDate];
  long long v13 = [v12 dayComponents];
  if (![v11 isEqual:v13])
  {
LABEL_10:

    double v18 = v32;
    goto LABEL_11;
  }
  v31 = [v32 occurrenceView];
  v30 = [v31 occurrence];
  long long v14 = [v30 birthdayContactIdentifier];
  long long v15 = [*(id *)(a1 + 32) birthdayContactIdentifier];
  if (![v14 isEqual:v15])
  {

    goto LABEL_10;
  }
  id v26 = [v32 occurrenceView];
  double v25 = [v26 occurrence];
  [v25 uniqueIdentifier];
  char v16 = v29 = v8;
  [*(id *)(a1 + 32) uniqueIdentifier];
  double v17 = v28 = v9;
  unsigned int v27 = [v16 isEqual:v17];

  double v18 = v32;
  if (v27)
  {
LABEL_8:
    uint64_t v22 = [v32 occurrenceView];
    uint64_t v23 = *(void *)(*(void *)(a1 + 40) + 8);
    double v24 = *(void **)(v23 + 40);
    *(void *)(v23 + 40) = v22;

    double v18 = v32;
    *a3 = 1;
  }
LABEL_11:
}

void sub_10003B2D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10003B2F0(void *a1, uint64_t a2, void *a3, uint64_t a4, unsigned char *a5)
{
  if (a1[6] == a2)
  {
    long long v21 = 0u;
    long long v22 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    unsigned int v7 = [a3 occurrenceBlocks];
    id v8 = [v7 countByEnumeratingWithState:&v19 objects:v23 count:16];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = *(void *)v20;
      do
      {
        for (i = 0; i != v9; i = (char *)i + 1)
        {
          if (*(void *)v20 != v10) {
            objc_enumerationMutation(v7);
          }
          id v12 = *(void **)(*((void *)&v19 + 1) + 8 * i);
          long long v13 = [v12 occurrenceView];
          long long v14 = [v13 occurrence];
          unsigned int v15 = [v14 isEqual:a1[4]];

          if (v15)
          {
            uint64_t v16 = [v12 occurrenceView];
            uint64_t v17 = *(void *)(a1[5] + 8);
            double v18 = *(void **)(v17 + 40);
            *(void *)(v17 + 40) = v16;

            *a5 = 1;
          }
        }
        id v9 = [v7 countByEnumeratingWithState:&v19 objects:v23 count:16];
      }
      while (v9);
    }
  }
}

uint64_t sub_10003B6EC(uint64_t a1, void *a2)
{
  id v3 = [a2 occurrenceView];
  id v4 = v3;
  if (v3)
  {
    uint64_t v6 = v3;
    [*(id *)(*(void *)(a1 + 32) + 56) addObject:v3];
    [v6 setHidden:1];
    id v3 = [v6 setOccurrence:0];
    id v4 = v6;
  }

  return _objc_release_x1(v3, v4);
}

void sub_10003B7DC(uint64_t a1, void *a2)
{
  id v8 = a2;
  id v3 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v8 rangeStart]);
  id v4 = [*(id *)(*(void *)(a1 + 32) + 224) objectForKeyedSubscript:v3];
  if (!v4)
  {
    id v4 = objc_opt_new();
    [*(id *)(*(void *)(a1 + 32) + 224) setObject:v4 forKeyedSubscript:v3];
  }
  unsigned int v5 = [v8 occurrenceView];
  uint64_t v6 = [v5 occurrence];
  unsigned int v7 = [v6 calendarItemIdentifier];

  if (v5 && v7)
  {
    [v4 setObject:v5 forKeyedSubscript:v7];
    [v8 setOccurrenceView:0];
  }
}

id sub_10003C26C(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:1.0];
}

void sub_10003DBD4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_10003DBEC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  uint64_t v6 = [a3 occurrenceBlocks];
  id v7 = [v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v7)
  {
    id v8 = v7;
    char v9 = 0;
    uint64_t v10 = *(void *)v15;
    do
    {
      for (i = 0; i != v8; i = (char *)i + 1)
      {
        if (*(void *)v15 != v10) {
          objc_enumerationMutation(v6);
        }
        id v12 = [*(id *)(*((void *)&v14 + 1) + 8 * i) occurrenceView];
        [v12 frame];
        if (CGRectIntersectsRect(v19, *(CGRect *)(a1 + 40)))
        {
          if ([v12 isHidden])
          {
            [v12 frame];
            if (!CGRectIsEmpty(v20)) {
              [v12 setHidden:0];
            }
          }
          char v9 = 1;
        }
      }
      id v8 = [v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }
    while (v8);

    if (v9)
    {
      uint64_t v13 = *(void *)(*(void *)(a1 + 32) + 8);
      if (*(void *)(v13 + 24) < a4) {
        *(void *)(v13 + 24) = a4;
      }
    }
  }
  else
  {
  }
}

void sub_10003EE08(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_100216548;
  qword_100216548 = v1;

  [(id)qword_100216548 setRoundingType:4];
  [(id)qword_100216548 addAnchoredValue:64 forWindowSizeHeight:2.0];
  [(id)qword_100216548 addAnchoredValue:256 forWindowSizeHeight:2.0];
  [(id)qword_100216548 addAnchoredValue:1024 forWindowSizeHeight:2.0];
  [(id)qword_100216548 addAnchoredValue:4096 forWindowSizeHeight:3.0];
  [(id)qword_100216548 addAnchoredValue:2048 forWindowSizeHeight:4.0];
  id v3 = (void *)qword_100216548;

  [v3 addAnchoredValue:0x2000 forWindowSizeHeight:6.0];
}

void sub_10003F3B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10003F3CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id result = [*(id *)(a1 + 32) useMultiDayHeaderStyle];
  if (!result || *(void *)(a1 + 48) == a2)
  {
    uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
    if (*(void *)(v8 + 24) <= a4) {
      *(void *)(v8 + 24) = a4 + 1;
    }
  }
  return result;
}

void sub_10003FEE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_10003FF28(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6 = a3;
  long long v42 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  long long v45 = 0u;
  id v7 = [v6 occurrenceBlocks];
  id v8 = [v7 countByEnumeratingWithState:&v42 objects:v47 count:16];
  double v9 = 0.0;
  double v10 = 0.0;
  if (v8)
  {
    id v11 = v8;
    uint64_t v12 = *(void *)v43;
    do
    {
      for (i = 0; i != v11; i = (char *)i + 1)
      {
        if (*(void *)v43 != v12) {
          objc_enumerationMutation(v7);
        }
        uint64_t v14 = [*(id *)(*((void *)&v42 + 1) + 8 * i) occurrenceView];
        long long v15 = [v14 currentImageState];
        unsigned int v16 = [v15 requiresLanguageAwarePadding];

        double v17 = 0.0;
        if (v16)
        {
          double v18 = [v14 currentImageState];
          [v18 totalLanguageAwareHeightPadding];
          double v17 = v19;
        }
        if (v17 > v10) {
          double v10 = v17;
        }
      }
      id v11 = [v7 countByEnumeratingWithState:&v42 objects:v47 count:16];
    }
    while (v11);
  }

  CGRect v20 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  long long v21 = +[NSNumber numberWithInteger:a2];
  long long v22 = [v20 objectForKeyedSubscript:v21];

  if (v22)
  {
    [v22 doubleValue];
    double v9 = v23;
  }
  long long v40 = 0u;
  long long v41 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  double v24 = [v6 occurrenceBlocks];
  id v25 = [v24 countByEnumeratingWithState:&v38 objects:v46 count:16];
  if (v25)
  {
    id v26 = v25;
    uint64_t v27 = *(void *)v39;
    do
    {
      for (j = 0; j != v26; j = (char *)j + 1)
      {
        if (*(void *)v39 != v27) {
          objc_enumerationMutation(v24);
        }
        v29 = *(void **)(*((void *)&v38 + 1) + 8 * (void)j);
        v30 = [v29 occurrenceView];
        [*(id *)(a1 + 32) _frameForOccurrenceBlock:v29 index:a4 yPos:v9 padding:v10];
        [v30 setFrame:];
        [v30 requestContentIfNeeded:*(void *)(a1 + 56) completion:0];
      }
      id v26 = [v24 countByEnumeratingWithState:&v38 objects:v46 count:16];
    }
    while (v26);
  }

  [*(id *)(a1 + 32) occurrenceHeight];
  double v32 = v9 + v10 + v31;
  uint64_t v33 = +[NSNumber numberWithDouble:v32 + 3.0];
  v34 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  v35 = +[NSNumber numberWithInteger:a2];
  [v34 setObject:v33 forKeyedSubscript:v35];

  uint64_t v36 = *(void *)(*(void *)(a1 + 48) + 8);
  if (v32 > *(double *)(v36 + 24)) {
    *(double *)(v36 + 24) = v32;
  }
}

void sub_1000403E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000403F8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v6 = [a3 occurrenceBlocks];
  id v7 = [v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v15;
    do
    {
      double v10 = 0;
      do
      {
        if (*(void *)v15 != v9) {
          objc_enumerationMutation(v6);
        }
        id v11 = [*(id *)(*((void *)&v14 + 1) + 8 * (void)v10) occurrenceView];
        uint64_t v12 = [v11 occurrence];
        unsigned int v13 = [v12 isEqual:*(void *)(a1 + 32)];

        if (v13) {
          *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = a4;
        }
        double v10 = (char *)v10 + 1;
      }
      while (v8 != v10);
      id v8 = [v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }
    while (v8);
  }
}

void sub_100041418(id a1)
{
}

uint64_t sub_100041550(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100041870(int8x16_t *a1)
{
  if (a1[2].i64[0])
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10004190C;
    block[3] = &unk_1001D28A8;
    int8x16_t v2 = a1[2];
    id v1 = (id)v2.i64[0];
    int8x16_t v4 = vextq_s8(v2, v2, 8uLL);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

id sub_10004190C(uint64_t a1)
{
  return [*(id *)(a1 + 32) continueSearchWithTerm:*(void *)(a1 + 40)];
}

void *sub_100041918(void *result)
{
  uint64_t v1 = result[4];
  if (v1) {
    return [*(id *)(result[5] + 24) continueSearchWithTerm:v1 animated:1 removeViewControllersIncapableOfSearchIfNeeded:0];
  }
  return result;
}

id sub_100041BB0(uint64_t a1)
{
  if ([*(id *)(*(void *)(a1 + 32) + 8) splitBehavior] == (id)2 || *(unsigned char *)(a1 + 40) == 0) {
    uint64_t v3 = 3;
  }
  else {
    uint64_t v3 = 2;
  }
  [*(id *)(*(void *)(a1 + 32) + 8) setPreferredDisplayMode:v3];
  int8x16_t v4 = *(void **)(a1 + 32);

  return [v4 updateSearchViewControllerToolbar];
}

void sub_100041D78(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) delegate];
  [v1 searchEnding];
}

void sub_100041DBC(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 8) setViewController:0 forColumn:0];
  [*(id *)(*(void *)(a1 + 32) + 8) setPreferredDisplayMode:1];
  [*(id *)(a1 + 32) teardownSearch];
  int8x16_t v2 = [*(id *)(a1 + 32) delegate];
  [v2 searchEnded];

  *(unsigned char *)(*(void *)(a1 + 32) + 56) = 0;
}

void sub_100042418(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 104));
  [WeakRetained setShowsCancelButton:1 animated:1];

  id v3 = [*(id *)(a1 + 32) delegate];
  [v3 searchBegan];
}

uint64_t sub_100042490(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 56) = 0;
  return result;
}

id sub_1000425DC(void *a1)
{
  return [*(id *)(a1[4] + 24) searchResultsViewController:a1[5] didSelectEvent:a1[6]];
}

void sub_100042988(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) delegate];
  [v1 searchEnding];
}

void sub_1000429CC(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 8) setViewController:0 forColumn:0];
  [*(id *)(*(void *)(a1 + 32) + 8) setPreferredDisplayMode:1];
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(v2 + 104));
  [v3 searchBarCancelButtonClicked:WeakRetained];

  [*(id *)(a1 + 32) teardownSearch];
  unsigned int v5 = [*(id *)(a1 + 32) delegate];
  [v5 searchEnded];

  *(unsigned char *)(*(void *)(a1 + 32) + 56) = 0;
}

void sub_100042E84(uint64_t a1)
{
  uint64_t v2 = +[NSNotificationCenter defaultCenter];
  [v2 addObserver:*(void *)(a1 + 32) selector:"_detailViewControllerAppeared:" name:EKEventViewControllerDidAppearNotification object:0];

  id v3 = [*(id *)(a1 + 32) application];
  [v3 startedTest:*(void *)(a1 + 40)];

  int8x16_t v4 = [*(id *)(a1 + 32) application];
  [v4 startedSubTest:*(void *)(a1 + 48) forTest:*(void *)(a1 + 40)];

  unsigned int v5 = [*(id *)(a1 + 32) application];
  id v6 = [v5 rootNavigationController];
  [v6 showEvent:*(void *)(a1 + 56) animated:1 showMode:1 context:0];

  id v7 = [*(id *)(a1 + 32) application];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100043004;
  v8[3] = &unk_1001D2E90;
  v8[4] = *(void *)(a1 + 32);
  id v9 = *(id *)(a1 + 48);
  id v10 = *(id *)(a1 + 40);
  id v11 = *(id *)(a1 + 64);
  [v7 installCACommitCompletionBlock:v8];
}

void sub_100043004(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) application];
  [v2 finishedSubTest:*(void *)(a1 + 40) forTest:*(void *)(a1 + 48)];

  id v3 = [*(id *)(a1 + 32) application];
  [v3 startedSubTest:*(void *)(a1 + 56) forTest:*(void *)(a1 + 48)];
}

void sub_100043238(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) model];
  uint64_t v2 = [v1 eventStore];
  id v3 = +[EKEvent eventWithEventStore:v2];

  int8x16_t v4 = CUIKNowDate();
  [v3 setStartDate:v4];

  unsigned int v5 = [v3 startDate];
  id v6 = [v5 dateByAddingTimeInterval:3600.0];
  [v3 setEndDate:v6];

  [v3 setTitle:@"Perf test event"];
  id v7 = (void *)qword_100216568;
  qword_100216568 = (uint64_t)v3;
}

void sub_100043530(uint64_t a1)
{
  uint64_t v2 = +[NSNotificationCenter defaultCenter];
  [v2 addObserver:*(void *)(a1 + 32) selector:"_detailViewControllerAppeared:" name:EKEventViewControllerDidAppearNotification object:0];

  if ([*(id *)(a1 + 32) shouldWaitForAttendeeLoading])
  {
    id v3 = +[NSNotificationCenter defaultCenter];
    [v3 addObserver:*(void *)(a1 + 32) selector:"_attendeesDidFinishLoading:" name:EKEventDetailsDidFinishLoadingAttendeesNotification object:0];
  }
  int8x16_t v4 = [*(id *)(a1 + 32) application];
  [v4 startedTest:*(void *)(a1 + 40)];

  if ([*(id *)(a1 + 32) shouldWaitForAttendeeLoading])
  {
    unsigned int v5 = [*(id *)(a1 + 32) application];
    id v6 = [*(id *)(a1 + 32) eventDetailsDidShowSubtestName];
    [v5 startedSubTest:v6 forTest:*(void *)(a1 + 40)];
  }
  id v8 = [*(id *)(a1 + 32) application];
  id v7 = [v8 rootNavigationController];
  [v7 showEvent:*(void *)(a1 + 48) animated:1 showMode:1 context:0];
}

void sub_100043A30(uint64_t a1)
{
  uint64_t v2 = +[NSNotificationCenter defaultCenter];
  [v2 addObserver:*(void *)(a1 + 32) selector:"_detailViewControllerAppeared:" name:EKEventViewControllerDidAppearNotification object:0];

  id v3 = [*(id *)(a1 + 32) application];
  [v3 startedTest:*(void *)(a1 + 40)];

  int8x16_t v4 = [*(id *)(a1 + 32) application];
  [v4 startedSubTest:*(void *)(a1 + 48) forTest:*(void *)(a1 + 40)];

  unsigned int v5 = [*(id *)(a1 + 32) application];
  id v6 = [v5 rootNavigationController];
  [v6 showEvent:*(void *)(a1 + 56) animated:1 showMode:1 context:0];

  id v7 = [*(id *)(a1 + 32) application];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100043BB0;
  v8[3] = &unk_1001D2E90;
  v8[4] = *(void *)(a1 + 32);
  id v9 = *(id *)(a1 + 48);
  id v10 = *(id *)(a1 + 40);
  id v11 = *(id *)(a1 + 64);
  [v7 installCACommitCompletionBlock:v8];
}

void sub_100043BB0(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) application];
  [v2 finishedSubTest:*(void *)(a1 + 40) forTest:*(void *)(a1 + 48)];

  id v3 = [*(id *)(a1 + 32) application];
  [v3 startedSubTest:*(void *)(a1 + 56) forTest:*(void *)(a1 + 48)];
}

void sub_100044044(uint64_t a1)
{
  uint64_t v2 = [CarplayDataManager alloc];
  id v5 = [*(id *)(*(void *)(a1 + 32) + 8) eventStore];
  id v3 = [(CarplayDataManager *)v2 initWithEventStore:v5];
  int8x16_t v4 = (void *)qword_100216578;
  qword_100216578 = (uint64_t)v3;
}

id sub_100044408(uint64_t a1)
{
  return [*(id *)(a1 + 32) _refreshTodayView];
}

void sub_100044C0C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) userInfo];
  id v4 = [v2 objectForKeyedSubscript:EKEventStoreChangedObjectIDsUserInfoKey];

  uint64_t v3 = *(void *)(a1 + 40);
  if (v4) {
    [*(id *)(v3 + 64) addObjectsFromArray:v4];
  }
  else {
    *(unsigned char *)(v3 + 72) = 1;
  }
  [*(id *)(a1 + 40) _refreshTodayView];
}

id sub_100044D24(uint64_t a1)
{
  CUIKInvalidateToday();
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 24);
  uint64_t v3 = CUIKNowDate();
  id v4 = CUIKStringForDateAndDayOfWeekInCalendarTimezoneWithFormattingContext();
  [v2 updateHeaderText:v4];

  id v5 = CUIKNowDate();
  id v6 = CUIKStringForDateAndDayOfWeekInCalendarTimezoneWithFormattingContext();
  [*(id *)(*(void *)(a1 + 32) + 40) setSectionTitle:v6];

  id v7 = *(void **)(a1 + 32);

  return [v7 _refreshTodayView];
}

id sub_100044E5C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _refreshTodayView];
}

id sub_100044FAC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _setViewStatesForCachedEventCollection];
}

id sub_1000466D8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) application];
  [v2 startedTest:*(void *)(a1 + 40)];

  uint64_t v3 = *(void **)(a1 + 32);

  return [v3 _mainLoop];
}

void sub_100046A4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100046A78(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v6 = WeakRetained;
    uint64_t v2 = [WeakRetained backgroundImage];
    uint64_t v3 = +[UIColor colorWithPatternImage:v2];
    [v6 setBackgroundColor:v3];

    id v4 = +[UIColor systemBackgroundColor];
    [v6[1] setBackgroundColor:v4];

    id v5 = +[UIColor labelColor];
    [v6[1] setTextColor:v5];

    id WeakRetained = v6;
  }
}

id sub_100046D1C(uint64_t a1)
{
  double v1 = 1.0;
  if (!*(unsigned char *)(a1 + 40)) {
    double v1 = 0.0;
  }
  return [*(id *)(a1 + 32) setAlpha:v1];
}

id sub_100046D38(uint64_t a1)
{
  double v1 = 1.0;
  if (!*(unsigned char *)(a1 + 40)) {
    double v1 = 0.0;
  }
  return [*(id *)(*(void *)(a1 + 32) + 8) setAlpha:v1];
}

void sub_10004700C(id *a1)
{
  uint64_t v2 = [(id)objc_opt_class() testName];
  [a1[5] startedTest:v2];
  uint64_t v3 = [a1[6] traitCollection];
  id v4 = [v3 horizontalSizeClass];

  if (v4 == (id)2) {
    [a1[6] setCurrentSidebarState:1];
  }
  else {
    [a1[7] showCalendarsAnimated:0 completion:0];
  }
  id v5 = [a1[4] application];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10004712C;
  v7[3] = &unk_1001D28A8;
  id v8 = a1[5];
  id v9 = v2;
  id v6 = v2;
  [v5 installCACommitCompletionBlock:v7];
}

id sub_10004712C(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedTest:*(void *)(a1 + 40) waitForCommit:1 extraResults:0];
}

void sub_100047EA0(uint64_t a1)
{
  [*(id *)(a1 + 32) completeTransition:1];
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"PhoneMonthListAnimator_ListToMonthAnimationCompleteNotification" object:0];
}

void sub_100047F00(uint64_t a1)
{
  [*(id *)(a1 + 32) completeTransition:1];
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"PhoneMonthListAnimator_MonthToListAnimationCompleteNotification" object:0];
}

id sub_100047FF0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _haltAnimations];
}

void sub_100048484(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) monthViewController];
  [v2 setSplitStateOpen:1];

  uint64_t v3 = [*(id *)(a1 + 32) monthViewController];
  id v4 = [v3 view];
  [v4 setAlpha:0.0];

  id v5 = [*(id *)(a1 + 32) listViewController];
  id v6 = [v5 view];
  [v6 frame];
  double v8 = v7;
  double v10 = v9;

  [*(id *)(a1 + 32) listViewNormalLocation];
  double v12 = v11;
  double v14 = v13;
  long long v15 = [*(id *)(a1 + 32) listViewController];
  long long v16 = [v15 view];
  [v16 setFrame:v12, v14, v8, v10];

  id v18 = [*(id *)(a1 + 32) listViewController];
  long long v17 = [v18 view];
  [v17 setAlpha:1.0];
}

void sub_1000485C0(uint64_t a1)
{
  dispatch_time_t v2 = dispatch_time(0, 200000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100048654;
  block[3] = &unk_1001D2740;
  void block[4] = *(void *)(a1 + 32);
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100048654(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) monthViewController];
  id v1 = [v2 view];
  [v1 setAlpha:1.0];
}

void sub_1000486B4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) paletteView];
  uint64_t v3 = [v2 animatableDateLabel];
  [v3 setAlpha:0.0];

  id v4 = [*(id *)(a1 + 32) paletteView];
  id v5 = [v4 dayInitialsHeaderView];
  [v5 setAlpha:0.0];

  [*(id *)(a1 + 32) weekDayInitialsMonth];
  double v7 = v6;
  [*(id *)(a1 + 32) weekDayInitialsMonth];
  double v9 = v8;
  [*(id *)(a1 + 32) weekDayInitialsMonth];
  double v11 = v10;
  id v13 = [*(id *)(a1 + 32) paletteView];
  double v12 = [v13 dayInitialsHeaderView];
  [v12 setFrame:v7, 0.0, v9, v11];
}

uint64_t sub_1000487B8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) paletteView];
  uint64_t v3 = [v2 dateLabel];
  [v3 setHidden:0];

  id v4 = [*(id *)(a1 + 32) paletteView];
  id v5 = [v4 animatableDateLabel];
  [v5 setAlpha:0.0];

  double v6 = [*(id *)(a1 + 32) paletteView];
  double v7 = [v6 dayInitialsHeaderView];
  [v7 setAlpha:1.0];

  double v8 = [*(id *)(a1 + 32) paletteView];
  [v8 setSuppressLayout:0];

  double v9 = [*(id *)(a1 + 32) paletteView];
  [v9 layoutIfNeeded];

  [*(id *)(a1 + 32) _haltAnimations];
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    double v11 = *(uint64_t (**)(void))(result + 16);
    return v11();
  }
  return result;
}

void sub_100048D3C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) monthViewController];
  [v2 setSplitStateOpen:0];

  uint64_t v3 = [*(id *)(a1 + 32) monthViewController];
  id v4 = [v3 view];
  [v4 setAlpha:1.0];

  id v5 = [*(id *)(a1 + 32) listViewController];
  double v6 = [v5 view];
  [v6 frame];
  double v8 = v7;
  double v10 = v9;

  double v11 = *(double *)(a1 + 40);
  double v12 = *(double *)(a1 + 48);
  id v13 = [*(id *)(a1 + 32) listViewController];
  double v14 = [v13 view];
  [v14 setFrame:v11, v12, v8, v10];

  id v16 = [*(id *)(a1 + 32) listViewController];
  long long v15 = [v16 view];
  [v15 setAlpha:0.0];
}

void sub_100048E6C(uint64_t a1)
{
  [*(id *)(a1 + 32) weekDayInitialsMonth];
  double v3 = v2;
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  double v10 = [*(id *)(a1 + 32) paletteView];
  double v11 = [v10 dayInitialsHeaderView];
  [v11 setFrame:v3, v5, v7, v9];

  double v12 = [*(id *)(a1 + 32) paletteView];
  id v13 = [v12 dayInitialsHeaderView];
  [v13 setAlpha:1.0];

  id v15 = [*(id *)(a1 + 32) paletteView];
  double v14 = [v15 animatableDateLabel];
  [v14 setAlpha:1.0];
}

uint64_t sub_100048F64(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) paletteView];
  double v3 = [v2 dateLabel];
  [v3 setHidden:0];

  double v4 = [*(id *)(a1 + 32) paletteView];
  double v5 = [v4 animatableDateLabel];
  [v5 setAlpha:0.0];

  double v6 = [*(id *)(a1 + 32) paletteView];
  [v6 setSuppressLayout:0];

  double v7 = [*(id *)(a1 + 32) paletteView];
  [v7 layoutIfNeeded];

  [*(id *)(a1 + 32) _haltAnimations];
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    double v9 = *(uint64_t (**)(void))(result + 16);
    return v9();
  }
  return result;
}

void sub_100049EA0(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 8) numberOfDaysWithCachedOccurrences];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100049F38;
  block[3] = &unk_1001D2740;
  void block[4] = *(void *)(a1 + 32);
  dispatch_sync((dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_100049F38(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 24) = 0;
  return [*(id *)(a1 + 32) _reloadOccurrenceData];
}

void sub_10004A59C(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 40);
  double v2 = +[NSArray arrayWithObjects:&v3 count:1];
  [*(id *)(*(void *)(a1 + 32) + 8) setSelectedOccurrences:v2];
}

id sub_10004A630(uint64_t a1)
{
  id v1 = [objc_alloc((Class)EKUIReadonlyEventViewController) initWithEvent:*(void *)(a1 + 32)];

  return v1;
}

id sub_10004A674(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(*(void *)(a1 + 32) + 8);
  id v4 = a2;
  double v5 = [v3 selectedOccurrences];
  double v6 = +[EKUIContextMenuActions menuForEvents:v5 presentationController:*(void *)(a1 + 32) isEditMenu:0 overrideActionBlock:0 completionBlock:0];

  double v7 = +[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", (char *)[v4 count] + 1);
  [v7 addObjectsFromArray:v4];

  [v7 addObject:v6];
  double v8 = +[UIMenu menuWithChildren:v7];

  return v8;
}

void sub_10004A854(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) view];
  int IsCompactInViewHierarchy = EKUICurrentWidthSizeClassIsCompactInViewHierarchy();

  uint64_t v4 = *(void *)(a1 + 32);
  if (IsCompactInViewHierarchy)
  {
    double v5 = *(void **)(v4 + 64);
    id v8 = [*(id *)(a1 + 40) event];
    [v5 compactMonthListViewController:v4 didSelectEvent:showMode:];
  }
  else
  {
    double v6 = [*(id *)(a1 + 32) compactMonthListViewDelegate];
    int v7 = objc_opt_respondsToSelector();

    if ((v7 & 1) == 0) {
      return;
    }
    id v8 = [*(id *)(a1 + 32) compactMonthListViewDelegate];
    [v8 compactMonthListViewController:*(void *)(a1 + 32) wantsToCommitViewControllerFromPreview:*(void *)(a1 + 40)];
  }
}

void sub_10004B270(uint64_t a1, uint64_t a2)
{
  if (a2 == 3)
  {
    uint64_t v3 = *(void **)(a1 + 48);
    _[v3 setEditing:0 animated:1];
  }
  else
  {
    id v5 = [*(id *)(a1 + 32) tableView];
    uint64_t v4 = +[NSArray arrayWithObject:*(void *)(a1 + 40)];
    [v5 deleteRowsAtIndexPaths:v4 withRowAnimation:2];
  }
}

void sub_10004B5A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10004B5CC(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v5 = WeakRetained;
  if (a2 == 2)
  {
    double v6 = (void *)WeakRetained[1];
    id v8 = (void *)(a1 + 32);
    uint64_t v7 = *(void *)(a1 + 32);
    uint64_t v14 = 0;
    double v9 = (id *)&v14;
    double v10 = &v14;
    uint64_t v11 = 2;
  }
  else if (a2 == 1)
  {
    double v6 = (void *)WeakRetained[1];
    id v8 = (void *)(a1 + 32);
    uint64_t v7 = *(void *)(a1 + 32);
    uint64_t v15 = 0;
    double v9 = (id *)&v15;
    double v10 = &v15;
    uint64_t v11 = 1;
  }
  else
  {
    if (a2)
    {
      id v12 = 0;
      goto LABEL_9;
    }
    double v6 = (void *)WeakRetained[1];
    id v8 = (void *)(a1 + 32);
    uint64_t v7 = *(void *)(a1 + 32);
    uint64_t v16 = 0;
    double v9 = (id *)&v16;
    double v10 = &v16;
    uint64_t v11 = 0;
  }
  [v6 removeEvent:v7 withSpan:v11 error:v10];
  id v12 = *v9;
  [v5 _purgeCachedOccurrence:*v8];
LABEL_9:
  id v13 = (void *)v5[5];
  v5[5] = 0;

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_10004C6DC(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) delegate];
  id v4 = v2;
  if (*(unsigned char *)(a1 + 49)) {
    uint64_t v3 = 2;
  }
  else {
    uint64_t v3 = 1;
  }
  [v2 inboxViewControllerWantsShowEvent:*(void *)(a1 + 40) animated:*(unsigned __int8 *)(a1 + 48) showMode:v3];
}

uint64_t sub_10004CC70(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) doneBlock];

  if (v2)
  {
    uint64_t v3 = [*(id *)(a1 + 32) doneBlock];
    v3[2](v3, *(void *)(a1 + 32), 0);
  }
  id v4 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v4();
}

id sub_10004CFF0(uint64_t a1)
{
  return [*(id *)(a1 + 32) setLabelElementsVisible:1];
}

void sub_10004D984(uint64_t a1)
{
  NSAttributedStringKey v4 = NSFontAttributeName;
  id v1 = [*(id *)(a1 + 32) _normalFont];
  id v5 = v1;
  double v2 = +[NSDictionary dictionaryWithObjects:&v5 forKeys:&v4 count:1];

  [@" " sizeWithAttributes:v2];
  CalRoundToScreenScale();
  qword_1002165C8 = v3;
}

id GetFormatAnd_d_FieldRangeFor_Ed(void *a1, uint64_t *a2)
{
  id v3 = a1;
  NSAttributedStringKey v4 = +[NSDate date];
  id v5 = +[DayNavigationViewCell _findFormatForLocale:v3 usingExampleDate:v4];

  double v6 = +[NSDateFormatter dateFormatFromTemplate:@"d" options:0 locale:v3];
  uint64_t v7 = sub_10004E54C(v5);
  id v8 = sub_10004E54C(v6);
  uint64_t v9 = (uint64_t)[v7 rangeOfString:v8];
  *a2 = v9;
  a2[1] = v10;
  if (v9 == 0x7FFFFFFFFFFFFFFFLL)
  {
    uint64_t v11 = (uint64_t)+[DayNavigationViewCell _rangeForFirstSequenceOfDCharacters:v7];
    *a2 = v11;
    a2[1] = v10;
    if (v11 < 0) {
      goto LABEL_33;
    }
  }
  else
  {
    uint64_t v11 = v9;
    if (v9 < 0) {
      goto LABEL_33;
    }
  }
  unint64_t v12 = v10 + v11;
  id v13 = [v7 length];
  if (v12 < (unint64_t)v13 && [v7 characterAtIndex:v12] == 100) {
    ++v12;
  }
  if (v12 < (unint64_t)v13
    && [v7 characterAtIndex:v12 - 1] == 100
    && [v7 characterAtIndex:v12] == 46)
  {
    ++v12;
  }
  double v19 = v5;
  if (v11)
  {
    if ([v7 characterAtIndex:v11 - 1] == 100) {
      *a2 = --v11;
    }
    if ((unint64_t)v11 >= 2)
    {
      unsigned int v14 = [v7 characterAtIndex:v11 - 1];
      if (v14 == 8208 || v14 == 45) {
        --v11;
      }
    }
  }
  char v15 = 0;
  while (1)
  {
    uint64_t v16 = v11 - 1;
    if (v11 < 1) {
      break;
    }
    UChar32 v17 = [v7 characterAtIndex:v11 - 1];
    if (u_isUWhiteSpace(v17) || u_ispunct(v17))
    {
      if ((v15 & 1) == 0) {
        goto LABEL_32;
      }
      goto LABEL_31;
    }
    if (u_isUAlphabetic(v17))
    {
      char v15 = 1;
      --v11;
      if ((v17 - 65) > 0x39) {
        continue;
      }
      uint64_t v11 = v16;
      if ((v17 - 97) >= 0xFFFFFFFA) {
        continue;
      }
    }
    goto LABEL_32;
  }
  if ((v15 & 1) == 0) {
    goto LABEL_32;
  }
  uint64_t v11 = 0;
LABEL_31:
  *a2 = v11;
LABEL_32:
  a2[1] = v12 - *a2;
  id v5 = v19;
LABEL_33:

  return v5;
}

id sub_10004E54C(void *a1)
{
  id v1 = a1;
  double v2 = +[NSMutableString stringWithCapacity:10];
  [v2 insertString:v1 atIndex:0];
  uint64_t v3 = (uint64_t)[v2 length];
  if (v3 >= 1)
  {
    uint64_t v4 = v3;
    uint64_t v5 = 0;
    int v6 = 0;
    do
    {
      __int16 v12 = 0;
      unsigned int v7 = [v2 characterAtIndex:v5];
      if (v7 == 39)
      {
        v6 ^= 1u;
      }
      else
      {
        BOOL v9 = v7 - 65 < 0x3A && v7 - 97 < 0xFFFFFFFA;
        if ((v6 & v9) == 1)
        {
          __int16 v12 = v7 - 8257;
          int v6 = 1;
          uint64_t v10 = +[NSString stringWithCharacters:&v12 length:1];
          [v2 replaceCharactersInRange:v5 withString:1 v10];
        }
      }
      ++v5;
    }
    while (v4 != v5);
  }

  return v2;
}

uint64_t sub_10004E834()
{
  return v0;
}

void sub_10004F484(uint64_t a1)
{
  double v2 = +[NSNotificationCenter defaultCenter];
  uint64_t v3 = *(void **)(a1 + 32);
  uint64_t v4 = [v3 notificationName];
  [v2 addObserver:v3 selector:"_animationCompleted" name:v4 object:0];

  uint64_t v5 = [*(id *)(a1 + 32) application];
  int v6 = [(id)objc_opt_class() testName];
  [v5 startedTest:v6];
  unsigned int v7 = [(id)objc_opt_class() _delaySubTestName];
  id v8 = [(id)objc_opt_class() _animationSubTestName];
  [v5 startedSubTest:v7 forTest:v6];
  [*(id *)(a1 + 32) kickOffAnimation];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_10004F620;
  v13[3] = &unk_1001D2E90;
  id v14 = v5;
  id v15 = v7;
  id v16 = v6;
  id v17 = v8;
  id v9 = v8;
  id v10 = v6;
  id v11 = v7;
  id v12 = v5;
  [v12 installCACommitCompletionBlock:v13];
}

id sub_10004F620(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedSubTest:*(void *)(a1 + 40) forTest:*(void *)(a1 + 48)];
  double v2 = *(void **)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);

  return [v2 startedSubTest:v3 forTest:v4];
}

void sub_10004F6EC(uint64_t a1)
{
  id v4 = [(id)objc_opt_class() testName];
  double v2 = [*(id *)(a1 + 32) application];
  uint64_t v3 = [(id)objc_opt_class() _animationSubTestName];
  [v2 finishedSubTest:v3 forTest:v4];
  [v2 finishedTest:v4];
}

void sub_100050920(uint64_t a1)
{
  double v2 = [(id)objc_opt_class() testName];
  [*(id *)(a1 + 40) startedTest:v2];
  id v3 = [*(id *)(a1 + 48) showInboxAnimated:0 completion:0];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1000509FC;
  v5[3] = &unk_1001D2740;
  id v4 = *(void **)(a1 + 40);
  id v6 = *(id *)(a1 + 48);
  [v4 finishedTest:v2 waitForCommit:1 extraResults:0 withTeardownBlock:v5];
}

id sub_1000509FC(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismissViewControllerWithTransition:0 completion:0];
}

void sub_100051238(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000512B0;
  block[3] = &unk_1001D2740;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_1000512B0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _setupWeekView];
}

void sub_1000563C0(uint64_t a1)
{
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v1 = *(id *)(*(void *)(a1 + 32) + 40);
  id v2 = [v1 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v8;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v1);
        }
        id v6 = [*(id *)(*((void *)&v7 + 1) + 8 * (void)v5) layer];
        [v6 removeAllAnimations];

        uint64_t v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v3 = [v1 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v3);
  }
}

uint64_t sub_1000564C8(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 96) = 0;
  return result;
}

void sub_100058CDC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) scrollView];
  [v2 setContentOffset:0 animated:*(double *)(a1 + 40) *(double *)(a1 + 48)];
}

id sub_100058D34(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 72) = 0;
  uint64_t v2 = *(void *)(a1 + 48);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  [*(id *)(a1 + 32) didEndScrolling];
  [*(id *)(*(void *)(a1 + 32) + 104) setNeedsLayout];
  id v3 = *(void **)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);

  return [v3 reloadDataForViews:v4];
}

uint64_t sub_100059E48(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_10005A2E4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10005A2F4(uint64_t a1)
{
}

void sub_10005A2FC(uint64_t a1)
{
}

void sub_10005A400(uint64_t a1)
{
}

void sub_10005A4AC(uint64_t a1)
{
  uint64_t v2 = kCalUILogCarplayHandle;
  if (os_log_type_enabled((os_log_t)kCalUILogCarplayHandle, OS_LOG_TYPE_INFO))
  {
    int v4 = 136315138;
    uint64_t v5 = "-[CarplayDataManager reloadEvents:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s beginning", (uint8_t *)&v4, 0xCu);
  }
  [*(id *)(a1 + 32) _fetchUpcomingOccurrences:*(void *)(a1 + 40)];
  id v3 = kCalUILogCarplayHandle;
  if (os_log_type_enabled((os_log_t)kCalUILogCarplayHandle, OS_LOG_TYPE_INFO))
  {
    int v4 = 136315138;
    uint64_t v5 = "-[CarplayDataManager reloadEvents:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s complete", (uint8_t *)&v4, 0xCu);
  }
}

BOOL sub_10005AD00(id a1, EKEvent *a2, NSDictionary *a3)
{
  return [(EKEvent *)a2 participationStatus] != (id)3;
}

void sub_10005AE3C(uint64_t a1)
{
  if (*(void *)(*(void *)(a1 + 32) + 32))
  {
    uint64_t v2 = +[NSTimeZone calendarTimeZone];
    [*(id *)(*(void *)(a1 + 32) + 32) setTimeZone:v2];
    id v3 = kCalUILogCarplayHandle;
    if (os_log_type_enabled((os_log_t)kCalUILogCarplayHandle, OS_LOG_TYPE_INFO))
    {
      int v4 = 138412290;
      uint64_t v5 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Changed the cached event store's time zone to [%@]", (uint8_t *)&v4, 0xCu);
    }
  }
}

void sub_10005B648(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = [*(id *)(a1 + 32) viewControllers];
  if ([v4 containsObject:*(void *)(a1 + 40)])
  {

    goto LABEL_4;
  }
  uint64_t v5 = [*(id *)(a1 + 32) presentedViewController];
  unsigned int v6 = [v5 isEqual:*(void *)(a1 + 40)];

  if (!v6)
  {
    long long v7 = (id)kCalUILogHandle;
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_opt_class();
      char isKindOfClass = objc_opt_isKindOfClass();
      long long v9 = *(void **)(a1 + 40);
      if (isKindOfClass)
      {
        long long v9 = [*(id *)(a1 + 40) topViewController];
      }
      *(_DWORD *)buf = 138412290;
      long long v44 = v9;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "[83058884] Showing vc %@", buf, 0xCu);
      if (isKindOfClass) {
    }
      }
    if (v3)
    {
      v41[0] = _NSConcreteStackBlock;
      v41[1] = 3221225472;
      v41[2] = sub_10005BC4C;
      v41[3] = &unk_1001D3038;
      long long v42 = v3;
      long long v10 = objc_retainBlock(v41);
    }
    else
    {
      long long v10 = 0;
    }
    unsigned int v11 = [*(id *)(a1 + 40) prefersForcedModalShowViewController];
    id v12 = *(void **)(a1 + 40);
    if (v11)
    {
      id v13 = [v12 modalPresentationDelegate];
      id v14 = [v13 presentationStyleOverrideForChildViewControllers];

      unsigned int v15 = [*(id *)(a1 + 40) prefersToBePresentedFromApplicationRootViewController];
      id v16 = *(void **)(a1 + 40);
      if (v15)
      {
        uint64_t v17 = 1;
      }
      else
      {
        uint64_t v27 = [v16 modalPresentationDelegate];

        id v16 = *(void **)(a1 + 40);
        if (!v27 || v14 == (id)-1) {
          uint64_t v17 = 6;
        }
        else {
          uint64_t v17 = (uint64_t)v14;
        }
      }
      [v16 setModalPresentationStyle:v17];
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        [*(id *)(a1 + 40) setModalTransitionStyle:12];
      }
      uint64_t v34 = objc_opt_class();
      long long v21 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"<%@> presents <%@> with modal style %ld", v34, objc_opt_class(), [*(id *)(a1 + 40) modalPresentationStyle]);
      v35 = (void *)kCalUILogHandle;
      if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v36 = v35;
        v37 = objc_opt_class();
        *(_DWORD *)buf = 138543874;
        long long v44 = v37;
        __int16 v45 = 2080;
        int v46 = "-[UINavigationController(MobileCalUniversalShowViewControllerSignatureUsage) showViewController:sender:ani"
              "mated:completion:]_block_invoke_2";
        __int16 v47 = 2114;
        v48 = v21;
        id v38 = v37;
        _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEBUG, "%{public}@ [%s] %{public}@", buf, 0x20u);
      }
      [*(id *)(a1 + 32) presentViewController:*(void *)(a1 + 40)];
      if (*(unsigned char *)(a1 + 48) || !v10) {
        goto LABEL_39;
      }
    }
    else
    {
      unsigned int v18 = [v12 prefersToBePresentedFromUINavigationController];
      uint64_t v19 = objc_opt_class();
      uint64_t v20 = objc_opt_class();
      if (v18)
      {
        long long v21 = +[NSString stringWithFormat:@"<%@> presents <%@> with navigation controller", v19, v20];
        long long v22 = (void *)kCalUILogHandle;
        if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_DEBUG))
        {
          double v23 = v22;
          double v24 = objc_opt_class();
          *(_DWORD *)buf = 138543874;
          long long v44 = v24;
          __int16 v45 = 2080;
          int v46 = "-[UINavigationController(MobileCalUniversalShowViewControllerSignatureUsage) showViewController:sender:a"
                "nimated:completion:]_block_invoke";
          __int16 v47 = 2114;
          v48 = v21;
          id v25 = v24;
          _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEBUG, "%{public}@ [%s] %{public}@", buf, 0x20u);
        }
        id v26 = [objc_alloc((Class)UINavigationController) initWithRootViewController:*(void *)(a1 + 40)];
        [v26 setModalPresentationStyle:3];
        [*(id *)(a1 + 32) presentViewController:v26 animated:0 completion:0];
        if (v10) {
          ((void (*)(void *))v10[2])(v10);
        }

        goto LABEL_39;
      }
      long long v21 = +[NSString stringWithFormat:@"<%@> pushes <%@>", v19, v20];
      double v28 = (void *)kCalUILogHandle;
      if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_DEBUG))
      {
        v29 = v28;
        v30 = objc_opt_class();
        *(_DWORD *)buf = 138543874;
        long long v44 = v30;
        __int16 v45 = 2080;
        int v46 = "-[UINavigationController(MobileCalUniversalShowViewControllerSignatureUsage) showViewController:sender:ani"
              "mated:completion:]_block_invoke";
        __int16 v47 = 2114;
        v48 = v21;
        id v31 = v30;
        _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEBUG, "%{public}@ [%s] %{public}@", buf, 0x20u);
      }
      [*(id *)(a1 + 32) pushViewController:*(void *)(a1 + 40) animated:*(unsigned __int8 *)(a1 + 48)];
      if (!v3) {
        goto LABEL_39;
      }
      if (*(unsigned char *)(a1 + 48))
      {
        [*(id *)(a1 + 32) durationForTransition:1];
        dispatch_time_t v33 = dispatch_time(0, (uint64_t)(v32 * 1000000000.0));
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_10005BC5C;
        block[3] = &unk_1001D3038;
        long long v40 = v3;
        dispatch_after(v33, (dispatch_queue_t)&_dispatch_main_q, block);

LABEL_39:
        goto LABEL_40;
      }
    }
    ((void (*)(void *))v10[2])(v10);
    goto LABEL_39;
  }
LABEL_4:
  if (v3) {
    v3[2](v3);
  }
LABEL_40:
}

void sub_10005BC4C(uint64_t a1)
{
}

uint64_t sub_10005BC5C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_10005BC6C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(void *)(a1 + 40));
}

id sub_10005C4EC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _startTest];
}

id sub_10005C5D8(uint64_t a1)
{
  uint64_t v2 = *(unsigned char **)(a1 + 32);
  if (v2[57])
  {
    id v3 = +[NSNotificationCenter defaultCenter];
    int v4 = *(void **)(a1 + 32);
    uint64_t v5 = [v4 rotationAnimationStartedNotificationName];
    [v3 addObserver:v4 selector:"_rotationAnimationStarted:" name:v5 object:0];

    unsigned int v6 = +[NSNotificationCenter defaultCenter];
    long long v7 = *(void **)(a1 + 32);
    long long v8 = [v7 rotationAnimationCompleteNotificationName];
    [v6 addObserver:v7 selector:"_rotationAnimationCompleted:" name:v8 object:0];

    uint64_t v2 = *(unsigned char **)(a1 + 32);
  }
  long long v9 = [v2 application];
  [v9 startedTest:*(void *)(a1 + 40)];

  long long v10 = *(void **)(a1 + 32);

  return _[v10 _rotationTest];
}

void sub_10005C93C(uint64_t a1)
{
  if (!*(unsigned char *)(*(void *)(a1 + 32) + 57))
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10005C9C8;
    block[3] = &unk_1001D2740;
    void block[4] = *(void *)(a1 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

id sub_10005C9C8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _rotationTest];
}

id sub_10005CB80(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _rotationTest];
}

void sub_10005D568(id a1)
{
  id v1 = objc_alloc_init((Class)NSCache);
  uint64_t v2 = qword_1002165F8;
  qword_1002165F8 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

void sub_10005D5A4(id a1)
{
  id v1 = objc_alloc_init((Class)NSCache);
  uint64_t v2 = qword_100216608;
  qword_100216608 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

void sub_10005F1DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10005F208(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10005F218(uint64_t a1)
{
}

void sub_10005F220(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  unsigned int v6 = [a2 occurrenceBlocks];
  id v7 = [v6 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v17;
    do
    {
      for (i = 0; i != v8; i = (char *)i + 1)
      {
        if (*(void *)v17 != v9) {
          objc_enumerationMutation(v6);
        }
        unsigned int v11 = *(void **)(*((void *)&v16 + 1) + 8 * i);
        id v12 = [v11 startRange];
        id v13 = [v11 length];
        uint64_t v14 = *(void *)(a1 + 40);
        if (v14 >= (uint64_t)v12 && v14 <= (uint64_t)v12 + (uint64_t)v13)
        {
          objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), v11);
          *a4 = 1;
        }
      }
      id v8 = [v6 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v8);
  }
}

void sub_10005F4C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10005F4E0(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id result = [a2 isFilledForDay:*(void *)(a1 + 40)];
  if (result)
  {
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a3;
    *a4 = 1;
  }
  return result;
}

id sub_10005FBB8(uint64_t a1)
{
  [*(id *)(a1 + 32) setHidden:0];
  uint64_t v2 = *(void **)(a1 + 40);

  return [v2 setNeedsDisplay];
}

void sub_1000607CC(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)NSCache);
  id v3 = (void *)qword_100216638;
  qword_100216638 = (uint64_t)v2;

  int v4 = *(void **)(a1 + 32);

  objc_storeStrong((id *)&qword_100216630, v4);
}

int64_t sub_10006127C(id a1, id a2, id a3)
{
  return _CUIKCompareEKEvents(a2, a3, 1);
}

id sub_100061FA8(uint64_t a1)
{
  if (([*(id *)(a1 + 32) animating] & 1) == 0) {
    [*(id *)(a1 + 40) setHidden:0];
  }
  [*(id *)(a1 + 32) _layoutSingleOccurrence:*(void *)(a1 + 40) index:*(unsigned __int8 *)(a1 + 64) numRows:*(double *)(a1 + 48) drawTimeString:*(double *)(a1 + 56)];
  id v2 = *(void **)(a1 + 40);

  return [v2 setAlpha:1.0];
}

id sub_100062008(uint64_t a1)
{
  [*(id *)(a1 + 32) _layoutSingleOccurrence:*(void *)(a1 + 40) index:*(unsigned __int8 *)(a1 + 64) numRows:*(double *)(a1 + 48) drawTimeString:*(double *)(a1 + 56)];
  id v2 = *(void **)(a1 + 40);

  return [v2 setAlpha:0.0];
}

uint64_t sub_100063040(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 > a3 || a2 > 0x13)
  {
    unint64_t v5 = a2;
    return v5 > 0x13;
  }
  else
  {
    unint64_t v4 = 19;
    if (a3 < 0x13) {
      unint64_t v4 = a3;
    }
    while (!*(unsigned char *)(a4 + 20 * *(void *)(a1 + 32) + a2))
    {
      unint64_t v5 = a2 + 1;
      if (a2++ >= v4) {
        return v5 > 0x13;
      }
    }
    return 1;
  }
}

id sub_10006309C(uint64_t a1)
{
  [*(id *)(a1 + 32) setAlpha:*(double *)(a1 + 40)];
  [*(id *)(a1 + 32) setFrame: *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72)];
  id v2 = *(void **)(a1 + 32);

  return [v2 update];
}

void sub_100063204(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_1000632A0(uint64_t a1)
{
  id v2 = objc_alloc((Class)UIGraphicsImageRenderer);
  [*(id *)(a1 + 32) bounds];
  id v5 = [v2 initWithSize:v3, v4];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1000633A8;
  v9[3] = &unk_1001D3238;
  v9[4] = *(void *)(a1 + 32);
  id v6 = [v5 imageWithActions:v9];
  id v7 = [v6 CGImage];
  id v8 = [*(id *)(a1 + 32) layer];
  [v8 setContents:v7];

  [*(id *)(a1 + 32) setHasDrawnBefore:1];
  [*(id *)(a1 + 32) setAlpha:1.0];
}

void sub_1000633A8(uint64_t a1, void *a2)
{
  double v3 = *(void **)(a1 + 32);
  id v4 = [a2 CGContext];
  id v5 = [*(id *)(a1 + 32) traitCollection];
  [v3 drawIntoContext:v4 traitCollection:v5];
}

id sub_1000636A0(uint64_t a1, void *a2)
{
  double v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 delegate];
  id v6 = [v5 selectedEventsForEditMenu];
  id v7 = [*(id *)(a1 + 32) delegate];
  id v8 = [v7 presentationControllerForEditMenu];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_10006381C;
  v13[3] = &unk_1001D2858;
  void v13[4] = *(void *)(a1 + 32);
  uint64_t v9 = +[EKUIContextMenuActions menuForEvents:v6 presentationController:v8 isEditMenu:0 overrideActionBlock:0 completionBlock:v13];

  long long v10 = +[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", (char *)[v4 count] + 1);
  [v10 addObjectsFromArray:v4];

  [v10 addObject:v9];
  unsigned int v11 = +[UIMenu menuWithChildren:v10];

  return v11;
}

void sub_10006381C(uint64_t a1, uint64_t a2)
{
  if (a2 == 8)
  {
    double v3 = [*(id *)(a1 + 32) delegate];
    char v4 = objc_opt_respondsToSelector();

    if (v4)
    {
      id v5 = [*(id *)(a1 + 32) delegate];
      [v5 attemptDisplayReviewPrompt];
    }
  }
}

void sub_100063E20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100063E48(uint64_t a1)
{
  id v2 = [objc_alloc((Class)UIGraphicsImageRenderer) initWithSize:*(double *)(*(void *)(a1 + 32) + 40), *(double *)(*(void *)(a1 + 32) + 48)];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100063F08;
  v6[3] = &unk_1001D3238;
  void v6[4] = *(void *)(a1 + 32);
  uint64_t v3 = [v2 imageWithActions:v6];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_100063F08(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v6 = [v3 view];
  id v5 = [v4 CGContext];

  [v6 drawIntoContext:v5 traitCollection:*(void *)(*(void *)(a1 + 32) + 56)];
}

void sub_100063F94(uint64_t a1)
{
  if (([*(id *)(a1 + 32) isCancelled] & 1) == 0)
  {
    id v2 = [*(id *)(a1 + 32) view];
    unsigned __int8 v3 = [v2 hasDrawnBefore];

    if (v3)
    {
      id v4 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) CGImage];
      id v5 = [*(id *)(a1 + 32) view];
      id v6 = [v5 layer];
      [v6 setContents:v4];
    }
    else
    {
      id v7 = [*(id *)(a1 + 32) view];
      [v7 setAlpha:0.0];

      id v8 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) CGImage];
      uint64_t v9 = [*(id *)(a1 + 32) view];
      long long v10 = [v9 layer];
      [v10 setContents:v8];

      v12[0] = _NSConcreteStackBlock;
      v12[1] = 3221225472;
      v12[2] = sub_100064118;
      v12[3] = &unk_1001D2740;
      v12[4] = *(void *)(a1 + 32);
      +[UIView animateWithDuration:v12 animations:0.15];
    }
    unsigned int v11 = [*(id *)(a1 + 32) view];
    [v11 setHasDrawnBefore:1];
  }
}

void sub_100064118(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) view];
  [v1 setAlpha:1.0];
}

void sub_10006422C(id a1)
{
  id v1 = objc_alloc_init(_BackgroundViewRenderManager);
  uint64_t v2 = qword_100216648;
  qword_100216648 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

void sub_100064458(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100064470(uint64_t a1)
{
  id v2 = *(id *)(*(void *)(a1 + 32) + 16);
  objc_sync_enter(v2);
  unsigned __int8 v3 = [*(id *)(*(void *)(a1 + 32) + 16) containsObject:*(void *)(a1 + 40)];
  objc_sync_exit(v2);

  if ((v3 & 1) == 0)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100064550;
    block[3] = &unk_1001D2740;
    id v5 = *(id *)(a1 + 40);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

void sub_10006453C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100064550(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) delegate];
  if (objc_opt_respondsToSelector()) {
    [v1 didCompleteMonthWeekViewBackgroundRendering];
  }
}

void sub_10006472C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1000647BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_100064E50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100064E7C(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    long long v23 = 0u;
    long long v24 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
    id v3 = WeakRetained[40];
    id v4 = [v3 countByEnumeratingWithState:&v21 objects:v26 count:16];
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = *(void *)v22;
      do
      {
        id v7 = 0;
        do
        {
          if (*(void *)v22 != v6) {
            objc_enumerationMutation(v3);
          }
          id v8 = *(void **)(*((void *)&v21 + 1) + 8 * (void)v7);
          id v9 = +[LargeMonthWeekView gridlineColor];
          [v8 setBackgroundColor:[v9 CGColor]];

          id v7 = (char *)v7 + 1;
        }
        while (v5 != v7);
        id v5 = [v3 countByEnumeratingWithState:&v21 objects:v26 count:16];
      }
      while (v5);
    }

    long long v19 = 0u;
    long long v20 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    id v10 = v2[41];
    id v11 = [v10 countByEnumeratingWithState:&v17 objects:v25 count:16];
    if (v11)
    {
      id v12 = v11;
      uint64_t v13 = *(void *)v18;
      do
      {
        uint64_t v14 = 0;
        do
        {
          if (*(void *)v18 != v13) {
            objc_enumerationMutation(v10);
          }
          unsigned int v15 = *(void **)(*((void *)&v17 + 1) + 8 * (void)v14);
          id v16 = +[LargeMonthWeekView weekendColor];
          [v15 setBackgroundColor:[v16 CGColor]];

          uint64_t v14 = (char *)v14 + 1;
        }
        while (v12 != v14);
        id v12 = [v10 countByEnumeratingWithState:&v17 objects:v25 count:16];
      }
      while (v12);
    }
  }
}

void sub_1000658E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

uint64_t sub_100065904(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100065914(uint64_t a1)
{
}

void sub_10006591C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(unsigned char **)(a1 + 32);
  if (v4[381])
  {
    [v4 _animateGridlinesAndBackgrounds];
    id v4 = *(unsigned char **)(a1 + 32);
  }
  v8[0] = 0;
  v8[1] = v8;
  v8[2] = 0x2020000000;
  v8[3] = 0;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100065A04;
  v5[3] = &unk_1001D32A8;
  void v5[4] = v4;
  long long v6 = *(_OWORD *)(a1 + 40);
  id v7 = v8;
  [v4 enumerateScrollViewSubviews:v5];
  _Block_object_dispose(v8, 8);
}

void sub_1000659EC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_100065A04(uint64_t a1, void *a2)
{
  id v4 = a2;
  id v34 = v4;
  if (!*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40))
  {
    [v4 frame];
    CGFloat v6 = v5;
    CGFloat v8 = v7;
    CGFloat v10 = v9;
    CGFloat v12 = v11;
    uint64_t v13 = [*(id *)(a1 + 32) scrollView];
    [v13 bounds];
    v37.origin.x = v14;
    v37.origin.y = v15;
    v37.size.width = v16;
    v37.size.height = v17;
    v36.origin.x = v6;
    v36.origin.y = v8;
    v36.size.width = v10;
    v36.size.height = v12;
    BOOL v18 = CGRectIntersectsRect(v36, v37);

    id v4 = v34;
    if (v18)
    {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
      long long v19 = [*(id *)(a1 + 32) scrollView];
      [v19 contentOffset];
      double v21 = v20;
      double v23 = v22;
      long long v24 = [*(id *)(a1 + 32) scrollView];
      [v34 convertPoint:v24 fromView:v21];
      uint64_t v25 = *(void *)(*(void *)(a1 + 48) + 8);
      *(void *)(v25 + 32) = v26;
      *(void *)(v25 + 40) = v27;

      [v34 frame];
      id v4 = v34;
      *(double *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) = v28
                                                                  - *(double *)(*(void *)(*(void *)(a1 + 48) + 8)
                                                                              + 40);
    }
  }
  v29 = *(void **)(a1 + 32);
  v30 = [v4 startDate];
  [v29 _subviewHeightForDate:v30];
  double v32 = v31;

  [v34 frame];
  *(double *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = *(double *)(*(void *)(*(void *)(a1 + 56) + 8)
                                                                          + 24)
                                                              + v32
                                                              - v33;
  [v34 setFrame:];
}

void sub_100065BBC(uint64_t a1)
{
  [*(id *)(a1 + 32) updateDraggedOccurrenceView];
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v2 + 381))
  {
    *(unsigned char *)(v2 + 381) = 0;
    [*(id *)(a1 + 32) _cleanupGridAnimation];
  }
  id v3 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  if (v3)
  {
    [v3 bounds];
    CGFloat MaxY = CGRectGetMaxY(v16);
    uint64_t v5 = *(void *)(*(void *)(a1 + 48) + 8);
    double v6 = *(double *)(v5 + 32);
    CGFloat v7 = MaxY - *(double *)(v5 + 40);
    CGFloat v8 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
    double v9 = [*(id *)(a1 + 32) scrollView];
    [v8 convertPoint:v9 toView:v6];
    double v11 = v10;
    double v13 = v12;

    id v14 = [*(id *)(a1 + 32) scrollView];
    [v14 setContentOffset:0 animated:v11];
  }
}

void sub_100065E5C(uint64_t a1)
{
  [*(id *)(a1 + 32) _removeAnimatedGridComponents];
  id v2 = [objc_alloc((Class)NSMutableArray) initWithCapacity:6];
  for (uint64_t i = 0; i != 6; ++i)
  {
    id v4 = objc_alloc_init((Class)UIView);
    uint64_t v5 = +[LargeMonthWeekView gridlineColor];
    [v4 setBackgroundColor:v5];

    double v6 = [*(id *)(*(void *)(a1 + 32) + 320) objectAtIndexedSubscript:i];
    [v6 frame];
    [v4 setFrame:];

    CGFloat v7 = [*(id *)(a1 + 32) scrollView];
    [v7 addSubview:v4];

    [v2 addObject:v4];
  }
  uint64_t v8 = *(void *)(a1 + 32);
  double v9 = *(void **)(v8 + 336);
  *(void *)(v8 + 336) = v2;
  id v10 = v2;

  id v11 = objc_alloc_init((Class)UIView);
  id v12 = objc_alloc_init((Class)UIView);
  double v13 = +[LargeMonthWeekView weekendColor];
  [v11 setBackgroundColor:v13];

  id v14 = +[LargeMonthWeekView weekendColor];
  [v12 setBackgroundColor:v14];

  CGFloat v15 = [*(id *)(*(void *)(a1 + 32) + 328) objectAtIndexedSubscript:0];
  [v15 frame];
  [v11 setFrame:];

  CGRect v16 = [*(id *)(*(void *)(a1 + 32) + 328) objectAtIndexedSubscript:1];
  [v16 frame];
  [v12 setFrame:];

  CGFloat v17 = [*(id *)(a1 + 32) scrollView];
  [v17 addSubview:v11];

  BOOL v18 = [*(id *)(a1 + 32) scrollView];
  [v18 addSubview:v12];

  v22[0] = v11;
  v22[1] = v12;
  uint64_t v19 = +[NSArray arrayWithObjects:v22 count:2];
  uint64_t v20 = *(void *)(a1 + 32);
  double v21 = *(void **)(v20 + 344);
  *(void *)(v20 + 344) = v19;
}

void sub_1000670B4(id a1, InfiniteScrollViewSubview *a2, BOOL *a3)
{
}

void sub_10006739C(uint64_t a1, void *a2)
{
  id v6 = a2;
  id v3 = [v6 startDate];
  id v4 = [v3 month];
  if (v4 == [*(id *)(a1 + 32) month])
  {
    uint64_t v5 = [v6 startDate];
    objc_msgSend(v6, "setShowsFirstDayOfMonthLabel:animated:", objc_msgSend(v5, "year") != objc_msgSend(*(id *)(a1 + 32), "year"), 1);
  }
  else
  {
    [v6 setShowsFirstDayOfMonthLabel:1 animated:1];
  }
}

void sub_100067B7C(id a1)
{
  uint64_t v1 = objc_opt_new();
  id v2 = (void *)qword_100216658;
  qword_100216658 = v1;

  [(id)qword_100216658 setCalculationType:1];
  [(id)qword_100216658 addAnchoredValue:2048 forWindowSizeWidth:110.5];
  [(id)qword_100216658 addAnchoredValue:4096 forWindowSizeWidth:140.5];
  id v3 = (void *)qword_100216658;

  [v3 addAnchoredValue:0x4000 forWindowSizeWidth:169.0];
}

void sub_10006922C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_10006924C(uint64_t a1)
{
  if (([*(id *)(a1 + 32) isNew] & 1) != 0 || *(void *)(a1 + 72) == 3)
  {
    uint64_t v2 = *(void *)(a1 + 32);
    id v3 = [*(id *)(a1 + 40) model];
    uint64_t v4 = +[AddEventViewController editOrAddViewControllerForEventOrIntegrationWithEvent:v2 model:v3 creationMethod:*(void *)(a1 + 80) eventEditViewDelegate:*(void *)(a1 + 40)];

    uint64_t v5 = *(void *)(*(void *)(a1 + 64) + 8);
    id v6 = *(void **)(v5 + 40);
    *(void *)(v5 + 40) = v4;
  }
  else
  {
    id v10 = [*(id *)(a1 + 40) augmentEventDetailsContext:*(void *)(a1 + 48)];
    uint64_t v7 = +[EKEventViewController eventDetailViewControllerWithEvent:*(void *)(a1 + 32) delegate:*(void *)(a1 + 40) context:v10];
    uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8);
    double v9 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v7;

    [*(id *)(a1 + 56) setNavigationBarHidden:1 animated:0];
    id v6 = v10;
  }
}

uint64_t sub_100069344(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48)) {
    [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) openAttendeesDetailItem];
  }
  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    return EKUIPopFallbackSizingContextWithViewHierarchy();
  }
  return result;
}

void sub_100069938(uint64_t a1)
{
  double v1 = *(double *)(a1 + 40);
  double v2 = *(double *)(a1 + 48);
  id v3 = [*(id *)(a1 + 32) scrollView];
  [v3 setContentOffset:v1, v2];
}

void sub_100069B7C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) containerView];
  [v1 setAlpha:0.0];
}

void sub_100069BC4(id *a1)
{
  double v2 = [a1[4] presentedViewController];

  if (v2)
  {
    id v3 = a1[4];
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_100069CB8;
    v6[3] = &unk_1001D3388;
    void v6[4] = v3;
    id v7 = a1[5];
    id v8 = a1[6];
    [v3 dismissViewControllerAnimated:0 completion:v6];
  }
  else
  {
    id v4 = a1[6];
    if (v4)
    {
      uint64_t v5 = (void (*)(void))*((void *)v4 + 2);
      v5();
    }
  }
}

uint64_t sub_100069CB8(uint64_t a1)
{
  [*(id *)(a1 + 32) presentationControllerDidDismiss:*(void *)(a1 + 40)];
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    id v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

void sub_10006A378(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10006A39C(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 64));
  id v3 = [*(id *)(a1 + 32) startCalendarDate];
  id v4 = [WeakRetained subviewForDate:v3];

  if ([WeakRetained isReadyToShowViewControllersInsideEnqueueableManagedNavigationController:*(void *)(a1 + 40)] & 1) != 0|| (objc_msgSend(WeakRetained, "isWaitingForBackgroundLoadingOfSelectedEventOccurrenceView"))
  {
    uint64_t v5 = (void *)kCalUILogHandle;
    if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_DEBUG))
    {
      id v6 = v5;
      *(_DWORD *)CGFloat v17 = 138412290;
      *(void *)&v17[4] = objc_opt_class();
      id v7 = *(id *)&v17[4];
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "%@ found the source occurrence view for the selected event yet.", v17, 0xCu);
    }
    [v4 setSelectedOccurrence:*(void *)(a1 + 32), *(_OWORD *)v17];
    id v8 = [WeakRetained shownEventViewController];
    if (v8)
    {
      int v9 = *((unsigned __int8 *)WeakRetained + 248);

      if (!v9)
      {
        id v10 = [WeakRetained draggedOccurrenceView];

        if (v10)
        {
          [WeakRetained removeDraggingOccurrenceAnimated:0];
          [WeakRetained removeAllWeekHighlights];
        }
      }
    }
    objc_storeStrong(WeakRetained + 32, *(id *)(a1 + 32));
    [WeakRetained _scrollToWeekView:v4 animated:1 completion:*(void *)(a1 + 56)];
  }
  else
  {
    id v11 = (void *)kCalUILogHandle;
    if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_DEBUG))
    {
      id v12 = v11;
      double v13 = objc_opt_class();
      id v14 = v13;
      CGFloat v15 = [WeakRetained managedNavigationController];
      *(_DWORD *)CGFloat v17 = 138412546;
      *(void *)&v17[4] = v13;
      *(_WORD *)&v17[12] = 2112;
      *(void *)&v17[14] = objc_opt_class();
      id v16 = *(id *)&v17[14];
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "%@ didn't find the source occurrence view for the selected event yet. It is probably still background loading. %@ will be notified once it loads.", v17, 0x16u);
    }
    [WeakRetained setIsWaitingForBackgroundLoadingOfSelectedEventOccurrenceView:1 *(void *)v17, *(_OWORD *)&v17[8]];
  }
  [*(id *)(a1 + 48) setNeedsUpdateOfSupportedInterfaceOrientations];
}

id sub_10006ACB4(uint64_t a1)
{
  return [*(id *)(a1 + 32) presentViewController:*(void *)(a1 + 40) animated:1 completion:0];
}

id sub_10006AF50(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  double v2 = *(void **)(a1 + 32);

  return [v2 attemptDisplayReviewPrompt];
}

id sub_10006AF98(uint64_t a1)
{
  return [*(id *)(a1 + 32) attemptDisplayReviewPrompt];
}

uint64_t sub_10006AFA0(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

uint64_t sub_10006AFB4(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_10006B104(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  id v3 = [*(id *)(a1 + 48) context];
  [v1 showEvent:v2 animated:1 showMode:1 context:v3];
}

void sub_10006B244(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  id v3 = [*(id *)(a1 + 48) context];
  [v1 showEvent:v2 animated:1 showMode:1 context:v3];
}

void sub_10006B374(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  id v3 = [*(id *)(a1 + 48) context];
  [v1 showEvent:v2 animated:1 showMode:1 context:v3];
}

uint64_t sub_10006B4E8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  BOOL v18 = v3;
  if (!v4) {
    goto LABEL_5;
  }
  if (!*(void *)(a1 + 40)) {
    goto LABEL_5;
  }
  [v4 timeIntervalSinceReferenceDate];
  double v6 = v5;
  [*(id *)(a1 + 40) timeIntervalSinceReferenceDate];
  double v8 = v7;
  int v9 = [v18 calendarDate];
  [v9 absoluteTime];
  double v11 = v10;

  id v12 = [v18 calendarDate];
  double v13 = [v12 calendarDateForEndOfWeekWithWeekStart:CUIKOneIndexedWeekStart()];
  [v13 absoluteTime];
  double v15 = v14;

  id v3 = v18;
  if (v15 >= v6 && v11 <= v8)
  {
LABEL_5:
    id v16 = [v3 reloadData];
    id v3 = v18;
  }

  return _objc_release_x1(v16, v3);
}

id sub_10006B94C(uint64_t a1, void *a2)
{
  return [a2 setShowsWeekNumber:*(unsigned __int8 *)(a1 + 32)];
}

void sub_10006BFE4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10006BFFC(uint64_t a1, void *a2, unsigned char *a3)
{
  id v20 = a2;
  [v20 frame];
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  double v10 = [*(id *)(a1 + 32) view];
  [v10 bounds];
  CGFloat v12 = v11;

  v22.origin.x = 0.0;
  v22.origin.y = v7;
  v22.size.width = v12;
  v22.size.height = v9;
  BOOL v13 = CGRectContainsPoint(v22, *(CGPoint *)(a1 + 48));
  id v14 = v20;
  if (v13)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
    double v15 = *(void **)(a1 + 64);
    if (v15)
    {
      id v16 = [*(id *)(a1 + 32) scrollView];
      [v16 convertPoint:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) toView:*(double *)(a1 + 48), *(double *)(a1 + 56)];
      *double v15 = v17;
      v15[1] = v18;
    }
    *a3 = 1;
    id v14 = v20;
  }

  return _objc_release_x1(v13, v14);
}

id sub_10006C1BC(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _presentationControllerDidDismiss];
}

id sub_10006CAD4(uint64_t a1)
{
  [*(id *)(a1 + 32) _updateSubviewAlphaForCircled:*(unsigned __int8 *)(a1 + 104) pressed:*(unsigned __int8 *)(*(void *)(a1 + 32) + 100)];
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 40);
  id v3 = (double *)(a1 + 72);
  id v4 = (double *)(a1 + 80);
  double v5 = (double *)(a1 + 88);
  if (*(unsigned char *)(a1 + 104)) {
    double v6 = (double *)(a1 + 64);
  }
  else {
    double v6 = (double *)(a1 + 96);
  }
  if (*(unsigned char *)(a1 + 104))
  {
    id v3 = (double *)(a1 + 40);
    id v4 = (double *)(a1 + 48);
    double v5 = (double *)(a1 + 56);
  }
  double v7 = *v5;
  double v8 = *v4;
  double v9 = *v3;
  double v10 = *v6;

  return [v2 setFrame:v9, v8, v7, v10];
}

id sub_10006CB74(uint64_t a1)
{
  [*(id *)(a1 + 32) dayCircleFrame];
  id result = [*(id *)(*(void *)(a1 + 32) + 40) setFrame:];
  *(unsigned char *)(*(void *)(a1 + 32) + 96) = 0;
  return result;
}

id sub_10006CCB8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateSubviewAlpha];
}

void sub_10006D14C(id a1)
{
  id v1 = objc_alloc_init((Class)UILabel);
  uint64_t v2 = (void *)qword_100216698;
  qword_100216698 = (uint64_t)v1;

  id v3 = (void *)qword_100216698;

  [v3 setText:@"0"];
}

void sub_10006DCC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10006DCEC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = (void *)*((void *)WeakRetained + 7);
    *((void *)WeakRetained + 7) = 0;

    long long v21 = 0u;
    long long v22 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    id v4 = [v2 allDayView];
    double v5 = [v4 occurrenceViews];

    id v6 = [v5 countByEnumeratingWithState:&v19 objects:v24 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v20;
      do
      {
        double v9 = 0;
        do
        {
          if (*(void *)v20 != v8) {
            objc_enumerationMutation(v5);
          }
          [*(id *)(*((void *)&v19 + 1) + 8 * (void)v9) forceUpdateColors];
          double v9 = (char *)v9 + 1;
        }
        while (v7 != v9);
        id v7 = [v5 countByEnumeratingWithState:&v19 objects:v24 count:16];
      }
      while (v7);
    }

    long long v17 = 0u;
    long long v18 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    double v10 = [v2 occurrenceViews];
    id v11 = [v10 countByEnumeratingWithState:&v15 objects:v23 count:16];
    if (v11)
    {
      id v12 = v11;
      uint64_t v13 = *(void *)v16;
      do
      {
        id v14 = 0;
        do
        {
          if (*(void *)v16 != v13) {
            objc_enumerationMutation(v10);
          }
          [*(id *)(*((void *)&v15 + 1) + 8 * (void)v14) forceUpdateColors];
          id v14 = (char *)v14 + 1;
        }
        while (v12 != v14);
        id v12 = [v10 countByEnumeratingWithState:&v15 objects:v23 count:16];
      }
      while (v12);
    }
  }
}

void sub_10006ED48(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 120) dateFromComponents:*(void *)(*(void *)(a1 + 32) + 112)];
  id v3 = [*(id *)(a1 + 32) lastSecondOfWeek];
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 96));
  double v5 = [WeakRetained weekView:*(void *)(a1 + 32) allEventsForStartDate:v2 endDate:v3];

  if (v5)
  {
    id v6 = [v5 copy];
    uint64_t v7 = *(void *)(a1 + 32);
    uint64_t v8 = *(void **)(v7 + 64);
    *(void *)(v7 + 64) = v6;

    double v9 = *(void **)(*(void *)(a1 + 32) + 24);
    double v10 = [v5 timedOccurrences];
    [v9 loadAndLayoutOccurrences:v10 reverse:*(unsigned __int8 *)(a1 + 48)];

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10006EEC4;
    block[3] = &unk_1001D3518;
    id v11 = *(void **)(a1 + 40);
    void block[4] = *(void *)(a1 + 32);
    char v14 = *(unsigned char *)(a1 + 48);
    id v13 = v11;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

void sub_10006EEC4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 16);
  id v4 = [*(id *)(v2 + 64) allDayOccurrences];
  [v3 setOccurrences:v4 animated:1];

  [*(id *)(*(void *)(a1 + 32) + 24) movePreloadedItemsToVisible];
  double v5 = *(void **)(*(void *)(a1 + 32) + 24);
  uint64_t v6 = *(unsigned __int8 *)(a1 + 48);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10006EFC0;
  v7[3] = &unk_1001D3038;
  id v8 = *(id *)(a1 + 40);
  [v5 applyLoadedOccurrencesWithBatching:1 animated:1 reverse:v6 completion:v7];
}

uint64_t sub_10006EFC0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_10006F458(uint64_t a1)
{
  [*(id *)(a1 + 32) firstVisibleSecondChanged];
  [*(id *)(a1 + 32) scrollViewDidScroll:*(void *)(*(void *)(a1 + 32) + 32)];
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

id sub_10006F4C8(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 32) setContentOffset:*(double *)(a1 + 40) *(double *)(a1 + 48)];
}

id sub_10006FAAC(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 32) scrollRectToVisible:0 animated:*(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64)];
}

void sub_100070194(uint64_t a1, void *a2)
{
  id v8 = a2;
  id v3 = +[UIColor systemBackgroundColor];
  [v3 setFill];

  double v4 = 0.0;
  [v8 fillRect:0.0, 0.0, *(double *)(a1 + 40), *(double *)(a1 + 48)];
  double v5 = [(id)objc_opt_class() weekSeparatorColor];
  [v5 setFill];
  EKUISeparatorLineThickness();
  if (*(uint64_t *)(*(void *)(a1 + 32) + 48) >= 2)
  {
    uint64_t v6 = 1;
    do
    {
      [objc_opt_class() dayWidthForOrientation:*(*(void *)(*(void *)(a1 + 32) + 128));
      double v4 = v4 + v7;
      CalRoundRectToScreenScale();
      [v8 fillRect:];
      ++v6;
    }
    while (*(void *)(*(void *)(a1 + 32) + 48) > v6);
  }
}

void sub_100071938(uint64_t a1)
{
  uint64_t v2 = +[NSNotificationCenter defaultCenter];
  [v2 addObserver:*(void *)(a1 + 32) selector:"_searchViewDidAppear" name:@"ListViewController_ViewDidAppearNotification" object:0];

  id v3 = *(void **)(a1 + 40);
  id v6 = [*(id *)(a1 + 32) model];
  double v4 = [v6 selectedDate];
  id v5 = [v3 pushCalendarViewControllerWithViewType:4 andDate:v4];
}

id sub_1000719E4(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismissViewControllerAnimated:1 completion:*(void *)(a1 + 40)];
}

void sub_100071AA4(uint64_t a1)
{
  uint64_t v2 = [(id)objc_opt_class() testName];
  id v3 = [*(id *)(a1 + 32) application];
  [v3 startedTest:v2];

  double v4 = [*(id *)(a1 + 32) application];
  id v5 = [v4 rootNavigationController];

  id v6 = [v5 topViewController];
  double v7 = [v6 currentChildViewController];
  id v8 = [v7 tableViewForTesting];

  uint64_t v9 = *(void *)(a1 + 32);
  double v10 = *(void **)(v9 + 40);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_100071BCC;
  _OWORD v11[3] = &unk_1001D2740;
  v11[4] = v9;
  [v10 scrollView:v8 completionBlock:v11];
}

void sub_100071BCC(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) model];
  [v1 setShowDayAsList:0];
}

void sub_100071C7C(id a1)
{
  id v3 = objc_alloc_init((Class)NSMutableParagraphStyle);
  [v3 setAlignment:0];
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_1002166B0;
  qword_1002166B0 = v1;

  [(id)qword_1002166B0 setObject:v3 forKeyedSubscript:NSParagraphStyleAttributeName];
}

void sub_100071F48(uint64_t a1)
{
  [*(id *)(a1 + 32) drawInRect:*(void *)(a1 + 40) withAttributes:CGPointZero.x, CGPointZero.y, *(double *)(a1 + 48), *(double *)(a1 + 56)];
  if (*(double *)(a1 + 64) > 0.0)
  {
    uint64_t v2 = CalendarAppTintColor();
    [v2 setFill];

    uint64_t v3 = *(void *)(a1 + 48);
    double v4 = *(double *)(a1 + 56) + 2.0;
    uint64_t v5 = *(void *)(a1 + 64);
    uint64_t v6 = 0;
    UIRectFill(*(CGRect *)&v6);
  }
}

void sub_100072108(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = qword_1002166C0;
  qword_1002166C0 = v1;

  _objc_release_x1(v1, v2);
}

void sub_100072494(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000724B4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000724C4(uint64_t a1)
{
}

void sub_1000724CC(uint64_t a1)
{
  uint64_t v2 = objc_opt_class();
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 64);
  CalRoundToScreenScale();
  double v6 = v5;
  [*(id *)(a1 + 32) fontSize];
  double v8 = v7;
  id v12 = [*(id *)(a1 + 32) traitCollection];
  uint64_t v9 = objc_msgSend(v2, "_cachedImageForString:isWeekend:underlineThickness:fontSize:style:", v3, v4, objc_msgSend(v12, "userInterfaceStyle"), v6, v8);
  uint64_t v10 = *(void *)(*(void *)(a1 + 48) + 8);
  id v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v9;
}

void sub_100073554(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = +[DividedMonthDayTransitionView dividedMonthPaletteBackgroundColor];
  [v2 setBackgroundColor:v3];

  [*(id *)(a1 + 40) setAlpha:1.0];
  uint64_t v4 = [*(id *)(a1 + 48) paletteView];
  [v4 setExtraPaletteHeight:*(double *)(a1 + 56)];

  double v5 = [*(id *)(a1 + 48) paletteView];
  [v5 layoutSubviews];

  id v7 = +[CompactMonthViewController dividedModeBackgroundColor];
  double v6 = [*(id *)(a1 + 48) scrubber];
  [v6 setBackgroundColor:v7];
}

id sub_100073630(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) paletteView];
  [v2 setExtraPaletteHeight:0.0];

  uint64_t v3 = [*(id *)(a1 + 32) paletteView];
  [v3 layoutSubviews];

  [*(id *)(a1 + 40) removeFromSuperview];
  uint64_t v4 = *(void **)(a1 + 48);

  return [v4 removeFromSuperview];
}

void sub_1000736A0(uint64_t a1)
{
  [*(id *)(a1 + 32) weekDayInitialsMonth];
  double v3 = v2;
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  uint64_t v10 = [*(id *)(a1 + 32) paletteView];
  id v11 = [v10 dayInitialsHeaderView];
  [v11 setFrame:v3, v5, v7, v9];

  id v13 = [*(id *)(a1 + 32) paletteView];
  id v12 = [v13 dateLabel];
  [v12 setAlpha:1.0];
}

id sub_10007376C(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) monthViewController];
  double v3 = [v2 view];
  [v3 frame];
  double v5 = v4;
  double v7 = v6;

  double v8 = *(double *)(a1 + 48);
  double v9 = *(double *)(a1 + 56);
  uint64_t v10 = [*(id *)(a1 + 32) monthViewController];
  id v11 = [v10 view];
  [v11 setFrame:v8, v9, v5, v7];

  id v12 = [*(id *)(a1 + 32) monthViewController];
  id v13 = [v12 view];
  [v13 setAlpha:1.0];

  [*(id *)(a1 + 40) setAlpha:1.0];
  [*(id *)(a1 + 40) frame];
  double v14 = *(double *)(a1 + 64);
  double v15 = *(double *)(a1 + 72);
  long long v16 = *(void **)(a1 + 40);

  return [v16 setFrame:v14, v15];
}

void sub_100073868(uint64_t a1)
{
  [*(id *)(a1 + 32) removeFromSuperview];
  id v3 = [*(id *)(a1 + 40) monthViewController];
  double v2 = [v3 view];
  [v2 setHidden:0];
}

id sub_1000738D4(uint64_t a1)
{
  return [*(id *)(a1 + 32) setFrame:*(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64)];
}

id sub_1000738E4(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:0.0];
}

void sub_1000738F0(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) allDayView];
  [v1 setAlpha:0.0];
}

id sub_100073938(uint64_t a1)
{
  return [*(id *)(a1 + 32) _haltAnimations];
}

void sub_100074928(uint64_t a1)
{
  [*(id *)(a1 + 32) setAlpha:0.0];
  double v2 = [*(id *)(a1 + 40) scrubber];
  [v2 setAlpha:1.0];

  id v4 = [*(id *)(a1 + 40) scrubber];
  id v3 = +[DividedMonthDayTransitionView dividedMonthPaletteBackgroundColor];
  [v4 setBackgroundColor:v3];
}

id sub_1000749C0(uint64_t a1)
{
  [*(id *)(a1 + 32) removeFromSuperview];
  double v2 = *(void **)(a1 + 40);

  return [v2 removeFromSuperview];
}

void sub_1000749FC(uint64_t a1)
{
  [*(id *)(a1 + 32) weekDayInitialsDay];
  double v3 = v2;
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  uint64_t v10 = [*(id *)(a1 + 32) paletteView];
  id v11 = [v10 dayInitialsHeaderView];
  [v11 setFrame:v3, v5, v7, v9];

  id v13 = [*(id *)(a1 + 32) paletteView];
  id v12 = [v13 animatableDateLabel];
  [v12 setAlpha:0.0];
}

void sub_100074AC8(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) paletteView];
  [v2 setExtraPaletteHeight:0.0];

  id v3 = [*(id *)(a1 + 32) paletteView];
  [v3 layoutSubviews];
}

id sub_100074B34(uint64_t a1)
{
  [*(id *)(a1 + 32) setAlpha:0.0];
  [*(id *)(a1 + 32) frame];
  double v2 = -(*(double *)(a1 + 40) + 63.0);
  id v3 = *(void **)(a1 + 32);

  return [v3 setFrame:0.0, v2];
}

id sub_100074B94(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) monthViewController];
  id v3 = [v2 view];
  [v3 setHidden:0];

  double v4 = *(void **)(a1 + 40);

  return [v4 removeFromSuperview];
}

void sub_100074BFC(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) bottomView];
  id v3 = [v2 layer];
  long long v4 = *(_OWORD *)&CATransform3DIdentity.m33;
  v18[4] = *(_OWORD *)&CATransform3DIdentity.m31;
  v18[5] = v4;
  long long v5 = *(_OWORD *)&CATransform3DIdentity.m43;
  v18[6] = *(_OWORD *)&CATransform3DIdentity.m41;
  v18[7] = v5;
  long long v6 = *(_OWORD *)&CATransform3DIdentity.m13;
  v18[0] = *(_OWORD *)&CATransform3DIdentity.m11;
  v18[1] = v6;
  long long v7 = *(_OWORD *)&CATransform3DIdentity.m23;
  v18[2] = *(_OWORD *)&CATransform3DIdentity.m21;
  v18[3] = v7;
  [v3 setTransform:v18];

  double v8 = [*(id *)(a1 + 32) bottomView];
  [v8 frame];
  double v10 = v9;
  double v12 = v11;

  [*(id *)(a1 + 32) dayViewDayLocation];
  double v14 = v13;
  double v16 = v15;
  long long v17 = [*(id *)(a1 + 32) bottomView];
  [v17 setFrame:v14, v16, v10, v12];
}

id sub_100074CE8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) animationDidStop:0 finished:1];
}

void sub_100074CF8(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) bottomView];
  [v1 setAlpha:1.0];
}

id sub_100074D44(uint64_t a1)
{
  return [*(id *)(a1 + 32) _haltAnimations];
}

void sub_10007551C(uint64_t a1)
{
  [*(id *)(a1 + 32) weekDayInitialsMonth];
  double v3 = v2;
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  double v10 = [*(id *)(a1 + 32) paletteView];
  double v11 = [v10 dayInitialsHeaderView];
  [v11 setFrame:v3, v5, v7, v9];

  double v12 = [*(id *)(a1 + 32) paletteView];
  double v13 = [v12 dayInitialsHeaderView];
  [v13 setAlpha:1.0];

  id v15 = [*(id *)(a1 + 32) paletteView];
  double v14 = [v15 animatableDateLabel];
  [v14 setAlpha:1.0];
}

uint64_t sub_100075614(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) paletteView];
  double v3 = [v2 dateLabel];
  [v3 setHidden:0];

  double v4 = [*(id *)(a1 + 32) paletteView];
  double v5 = [v4 animatableDateLabel];
  [v5 setAlpha:0.0];

  uint64_t v6 = *(unsigned __int8 *)(a1 + 48);
  double v7 = [*(id *)(a1 + 32) paletteView];
  [v7 setDividerLineVisible:v6];

  double v8 = [*(id *)(a1 + 32) paletteView];
  [v8 setSuppressLayout:0];

  double v9 = [*(id *)(a1 + 32) paletteView];
  [v9 layoutIfNeeded];

  [*(id *)(a1 + 32) _haltAnimations];
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    double v11 = *(uint64_t (**)(void))(result + 16);
    return v11();
  }
  return result;
}

void sub_100075720(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) monthViewController];
  double v3 = [v2 view];
  [v3 frame];
  double v5 = v4;
  double v7 = v6;

  double v8 = *(double *)(a1 + 40);
  double v9 = *(double *)(a1 + 48);
  id v11 = [*(id *)(a1 + 32) monthViewController];
  double v10 = [v11 view];
  [v10 setFrame:v8, v9, v5, v7];
}

id sub_1000757DC(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) monthViewController];
  [v2 frameOfListView];
  double MinY = CGRectGetMinY(v14);
  double v4 = [*(id *)(a1 + 32) monthViewController];
  double v5 = [v4 view];
  [v5 frame];
  CGFloat v6 = MinY / CGRectGetHeight(v15);

  [*(id *)(a1 + 40) frame];
  CGFloat Height = CGRectGetHeight(v16);
  CATransform3DMakeTranslation(&a, 0.0, Height * 0.5, 0.0);
  CATransform3DMakeScale(&b, 1.0, v6, 1.0);
  CATransform3DConcat(&v13, &a, &b);
  double v8 = [*(id *)(a1 + 40) layer];
  CATransform3D v10 = v13;
  [v8 setTransform:&v10];

  return [*(id *)(a1 + 40) setAlpha:0.0];
}

void sub_1000758FC(uint64_t a1)
{
  [*(id *)(a1 + 32) removeFromSuperview];
  id v3 = [*(id *)(a1 + 40) listViewController];
  double v2 = [v3 view];
  [v2 setHidden:0];
}

void sub_100076260(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) monthViewController];
  id v1 = [v2 view];
  [v1 setHidden:1];
}

void sub_1000762C0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) paletteView];
  id v3 = [v2 animatableDateLabel];
  [v3 setAlpha:0.0];

  double v4 = [*(id *)(a1 + 32) paletteView];
  double v5 = [v4 dayInitialsHeaderView];
  [v5 setAlpha:0.0];

  [*(id *)(a1 + 32) weekDayInitialsMonth];
  double v7 = v6;
  [*(id *)(a1 + 32) weekDayInitialsMonth];
  double v9 = v8;
  [*(id *)(a1 + 32) weekDayInitialsMonth];
  double v11 = v10;
  id v13 = [*(id *)(a1 + 32) paletteView];
  double v12 = [v13 dayInitialsHeaderView];
  [v12 setFrame:v7, 0.0, v9, v11];
}

uint64_t sub_1000763C4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) paletteView];
  id v3 = [v2 animatableDateLabel];
  [v3 setAlpha:0.0];

  double v4 = [*(id *)(a1 + 32) paletteView];
  double v5 = [v4 dateLabel];
  [v5 setHidden:0];

  double v6 = [*(id *)(a1 + 32) paletteView];
  double v7 = [v6 dayInitialsHeaderView];
  [v7 setAlpha:1.0];

  uint64_t v8 = *(unsigned __int8 *)(a1 + 48);
  double v9 = [*(id *)(a1 + 32) paletteView];
  [v9 setDividerLineVisible:v8];

  double v10 = [*(id *)(a1 + 32) paletteView];
  [v10 setSuppressLayout:0];

  double v11 = [*(id *)(a1 + 32) paletteView];
  [v11 layoutIfNeeded];

  [*(id *)(a1 + 32) _haltAnimations];
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v13 = *(uint64_t (**)(void))(result + 16);
    return v13();
  }
  return result;
}

id sub_1000764FC(uint64_t a1)
{
  [*(id *)(a1 + 32) frame];
  [*(id *)(a1 + 32) setFrame:0.0,-*(double *)(a1 + 40)];
  id v2 = *(void **)(a1 + 32);

  return [v2 setAlpha:0.0];
}

void sub_100076550(uint64_t a1)
{
  [*(id *)(a1 + 32) removeFromSuperview];
  id v3 = [*(id *)(a1 + 40) monthViewController];
  id v2 = [v3 view];
  [v2 setHidden:0];
}

void sub_1000765BC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) listViewController];
  id v3 = [v2 view];
  [v3 setHidden:1];

  id v13 = [*(id *)(a1 + 32) listViewController];
  double v4 = [v13 view];
  [v4 frame];
  double v6 = v5;
  double v7 = [*(id *)(a1 + 32) listViewController];
  uint64_t v8 = [v7 view];
  [v8 frame];
  double v10 = v9;
  double v11 = [*(id *)(a1 + 32) listViewController];
  double v12 = [v11 view];
  [v12 setFrame:0.0, 0.0, v6, v10];
}

id sub_1000766C8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) layer];
  long long v3 = *(_OWORD *)&CATransform3DIdentity.m33;
  void v8[4] = *(_OWORD *)&CATransform3DIdentity.m31;
  void v8[5] = v3;
  long long v4 = *(_OWORD *)&CATransform3DIdentity.m43;
  void v8[6] = *(_OWORD *)&CATransform3DIdentity.m41;
  v8[7] = v4;
  long long v5 = *(_OWORD *)&CATransform3DIdentity.m13;
  v8[0] = *(_OWORD *)&CATransform3DIdentity.m11;
  v8[1] = v5;
  long long v6 = *(_OWORD *)&CATransform3DIdentity.m23;
  v8[2] = *(_OWORD *)&CATransform3DIdentity.m21;
  v8[3] = v6;
  [v2 setTransform:v8];

  return [*(id *)(a1 + 32) setAlpha:1.0];
}

id sub_100076740(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) listViewController];
  long long v3 = [v2 view];
  [v3 setHidden:0];

  long long v4 = *(void **)(a1 + 40);

  return [v4 removeFromSuperview];
}

id sub_1000769D4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) application];
  [v2 startedTest:*(void *)(a1 + 40)];

  long long v3 = *(void **)(a1 + 32);

  return [v3 _mainLoop];
}

void sub_100076B5C(id a1)
{
}

id sub_100076B70(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 40) setDisplayedDate:*(void *)(a1 + 40) animated:1];
}

id sub_10007712C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) application];
  [v2 startedTest:*(void *)(a1 + 40)];

  long long v3 = *(void **)(a1 + 32);

  return [v3 _mainLoop];
}

void sub_1000772B4(id a1)
{
}

id sub_1000772C8(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 40) selectDate:*(void *)(a1 + 40) animated:1];
}

id sub_10007754C(uint64_t a1)
{
  return [*(id *)(a1 + 32) scrollToDisplayedDateAnimated:0];
}

void sub_100078AE0(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  id v7 = a2;
  id v8 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100078BC4;
  block[3] = &unk_1001D36F0;
  id v9 = *(id *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  id v14 = v9;
  uint64_t v15 = v10;
  id v17 = v7;
  uint64_t v18 = a4;
  id v16 = v8;
  id v11 = v7;
  id v12 = v8;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100078BC4(uint64_t a1)
{
  if ([*(id *)(a1 + 32) isEqual:*(void *)(*(void *)(a1 + 40) + 16)])
  {
    [*(id *)(*(void *)(a1 + 40) + 32) setText:*(void *)(a1 + 48)];
    switch(*(void *)(a1 + 64))
    {
      case 0:
      case 2:
        id v4 = +[UIImage systemImageNamed:@"video.fill"];
        [*(id *)(*(void *)(a1 + 40) + 40) setImage:v4];

        break;
      case 1:
      case 3:
        uint64_t v2 = *(void *)(a1 + 56);
        long long v3 = *(void **)(*(void *)(a1 + 40) + 40);
        [v3 setImage:v2];
        break;
      default:
        return;
    }
  }
}

void sub_100078E3C(id a1, BOOL a2)
{
  BOOL v2 = a2;
  long long v3 = kCalUILogCarplayHandle;
  if (os_log_type_enabled((os_log_t)kCalUILogCarplayHandle, OS_LOG_TYPE_INFO))
  {
    v4[0] = 67109120;
    v4[1] = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "cellWasTapped for conference cell completion handler called with success %d", (uint8_t *)v4, 8u);
  }
}

void sub_10007903C(id a1)
{
  id v1 = objc_alloc_init((Class)NSCache);
  uint64_t v2 = qword_1002166D0;
  qword_1002166D0 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

UIColor *__cdecl sub_1000796E8(id a1, UITraitCollection *a2)
{
  if ((id)[(UITraitCollection *)a2 userInterfaceStyle] == (id)1)
  {
    double v2 = 0.518;
    double v3 = 1.0;
    double v4 = 0.518;
    double v5 = 0.518;
  }
  else
  {
    double v2 = 0.596;
    double v5 = 0.62;
    double v3 = 1.0;
    double v4 = 0.596;
  }
  long long v6 = +[UIColor colorWithRed:v2 green:v4 blue:v5 alpha:v3];

  return (UIColor *)v6;
}

UIColor *__cdecl sub_100079760(id a1, UITraitCollection *a2)
{
  if ((id)[(UITraitCollection *)a2 userInterfaceStyle] == (id)1)
  {
    double v2 = 0.537;
    double v3 = 0.557;
  }
  else
  {
    double v2 = 0.62;
    double v3 = 0.643;
  }
  double v4 = +[UIColor colorWithRed:v2 green:v2 blue:v3 alpha:1.0];

  return (UIColor *)v4;
}

void sub_100079A4C(uint64_t a1)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 addObserver:*(void *)(a1 + 32) selector:"clearMetrics" name:UIContentSizeCategoryDidChangeNotification object:0];
}

void sub_10007B760(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40)) {
    double v2 = 0.0;
  }
  else {
    double v2 = 1.0;
  }
  [*(id *)(*(void *)(a1 + 32) + 72) setAlpha:v2];
  if (*(unsigned char *)(a1 + 40)) {
    double v3 = 1.0;
  }
  else {
    double v3 = 0.0;
  }
  [*(id *)(*(void *)(a1 + 32) + 72) setAlpha:v3];
  if (!*(unsigned char *)(a1 + 40))
  {
    [*(id *)(a1 + 32) _removeCommentPromptRelatedConstraintsIfNeeded];
    [*(id *)(*(void *)(a1 + 32) + 72) removeFromSuperview];
    uint64_t v4 = *(void *)(a1 + 32);
    double v5 = *(void **)(v4 + 72);
    *(void *)(v4 + 72) = 0;
  }
}

id sub_10007C548(uint64_t a1, void *a2, int a3, double a4)
{
  id v7 = *(void **)(a1 + 32);
  id v8 = a2;
  if ([v7 count])
  {
    id v9 = [*(id *)(a1 + 32) anyObject];
    [*(id *)(a1 + 32) removeObject:v9];
    [v9 setUserInteractionEnabled:0];
    uint64_t v10 = [v9 gestureRecognizers];
    v31[0] = _NSConcreteStackBlock;
    v31[1] = 3221225472;
    v31[2] = sub_10007C970;
    v31[3] = &unk_1001D37E0;
    id v11 = v9;
    id v32 = v11;
    [v10 enumerateObjectsUsingBlock:v31];
  }
  else
  {
    id v11 = (id)objc_opt_new();
    [v11 setOpaque:0];
    id v12 = +[UIColor clearColor];
    [v11 setBackgroundColor:v12];

    [v11 setLineBreakMode:4];
    id v13 = [*(id *)(a1 + 40) contentView];
    [v13 addSubview:v11];
  }
  if (a3 == 3)
  {
    uint64_t v17 = 32770;
  }
  else
  {
    if (a3 == 1)
    {
      id v14 = [*(id *)(a1 + 40) showAsCancelledOrDeclined];
      uint64_t v15 = +[UIFontDescriptor preferredFontDescriptorWithTextStyle:UIFontTextStyleHeadline addingSymbolicTraits:0x8000 options:0];
      id v16 = +[UIFont fontWithDescriptor:v15 size:0.0];
      [v11 setFont:v16];

      if (v14) {
        +[CalendarMessageCell strikethroughTitleColor:](CalendarMessageCell, "strikethroughTitleColor:", [*(id *)(a1 + 40) destination]);
      }
      else {
      long long v21 = +[UIColor labelColor];
      }
      [v11 setTextColor:v21];

      [v11 setDrawsStrikethrough:v14];
      id v22 = [(id)objc_opt_class() numberOfLinesForTitleLabels];
      goto LABEL_19;
    }
    uint64_t v17 = 0x8000;
  }
  uint64_t v15 = +[UIFontDescriptor preferredFontDescriptorWithTextStyle:UIFontTextStyleFootnote addingSymbolicTraits:v17 options:0];
  uint64_t v18 = +[UIFont fontWithDescriptor:v15 size:0.0];
  [v11 setFont:v18];

  if (a3 == 4)
  {
    long long v19 = CalendarAppTintColor();
    [v11 setTextColor:v19];

    [v11 setUserInteractionEnabled:1];
    id v20 = [objc_alloc((Class)UITapGestureRecognizer) initWithTarget:*(void *)(a1 + 40) action:"actionLabelTap"];
    [v11 addGestureRecognizer:v20];
  }
  else
  {
    if ((a3 & 0xFFFFFFFE) == 2) {
      +[UIColor labelColor];
    }
    else {
    id v20 = +[UIColor secondaryLabelColor];
    }
    [v11 setTextColor:v20];
  }

  [v11 setDrawsStrikethrough:0];
  id v22 = [(id)objc_opt_class() numberOfLinesForBodyLabels];
LABEL_19:
  [v11 setNumberOfLines:v22];

  [v11 setFirstLineHeadIndent:a4];
  double v23 = [*(id *)(a1 + 40) traitCollection];
  int v24 = EKUIUsesLargeTextLayout();
  double v25 = 0.0;
  if (v24) {
    double v25 = 0.5;
  }
  [v11 setHyphenationFactor:v25];

  [v11 setText:v8];
  [v11 _setOverallWritingDirectionFollowsLayoutDirection:1];
  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  LODWORD(v26) = 1144750080;
  [v11 setContentCompressionResistancePriority:0 forAxis:v26];
  LODWORD(v27) = 1144750080;
  [v11 setContentHuggingPriority:1 forAxis:v27];
  LODWORD(v28) = 1148846080;
  [v11 setContentCompressionResistancePriority:1 forAxis:v28];
  LODWORD(v29) = 1132068864;
  [v11 setContentHuggingPriority:0 forAxis:v29];

  return v11;
}

id sub_10007C970(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) removeGestureRecognizer:a2];
}

void sub_10007C97C(uint64_t a1, void *a2, uint64_t a3)
{
  double v5 = 0.0;
  id v10 = a2;
  if (!a3 && [*(id *)(a1 + 32) _shouldWrapTextUnderAuthor])
  {
    CalRoundToScreenScale();
    double v7 = v6;
    CalRoundToScreenScale();
    +[EKUILargeTextUtilities contentSizeCategoryScaledValueForDefaultValue:shouldScaleForSmallerSizes:](EKUILargeTextUtilities, "contentSizeCategoryScaledValueForDefaultValue:shouldScaleForSmallerSizes:", 0);
    double v5 = v7 + v8;
  }
  id v9 = (*(void (**)(double))(*(void *)(a1 + 48) + 16))(v5);
  [*(id *)(a1 + 40) addObject:v9];
}

void sub_10007CA44(uint64_t a1)
{
  (*(void (**)(double))(*(void *)(a1 + 40) + 16))(0.0);
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  [v2 setNumberOfLines:2];
  [*(id *)(a1 + 32) addObject:v2];
}

CFStringRef CalendarMessageCellStringForButtonAction(uint64_t a1)
{
  CFStringRef result = 0;
  if (a1 <= 1023)
  {
    if (a1 > 31)
    {
      CFStringRef v6 = @"EKEventStatusButtonsActionIgnore";
      CFStringRef v7 = @"EKEventStatusButtonsActionViewComment";
      CFStringRef v8 = @"EKEventStatusButtonsActionViewComments";
      if (a1 != 512) {
        CFStringRef v8 = 0;
      }
      if (a1 != 256) {
        CFStringRef v7 = v8;
      }
      if (a1 != 128) {
        CFStringRef v6 = v7;
      }
      CFStringRef v9 = @"EKEventStatusButtonsActionOK";
      CFStringRef v10 = @"EKEventStatusButtonsActionJoin";
      if (a1 != 64) {
        CFStringRef v10 = 0;
      }
      if (a1 != 32) {
        CFStringRef v9 = v10;
      }
      if (a1 <= 127) {
        return v9;
      }
      else {
        return v6;
      }
    }
    else
    {
      switch(a1)
      {
        case 0:
        case 7:
          return @"EKEventStatusButtonsActionNone";
        case 1:
          CFStringRef result = @"EKEventStatusButtonsActionAccept";
          break;
        case 2:
          CFStringRef result = @"EKEventStatusButtonsActionMaybe";
          break;
        case 4:
          CFStringRef result = @"EKEventStatusButtonsActionDeclineEvent";
          break;
        case 8:
          CFStringRef result = @"EKEventStatusButtonsActionAdd";
          break;
        case 16:
          CFStringRef result = @"EKEventStatusButtonsActionDelete";
          break;
        default:
          return result;
      }
    }
    return result;
  }
  if (a1 >= 0x8000)
  {
    if (a1 >= 0x40000)
    {
      CFStringRef v3 = @"EKEventStatusButtonsActionUnsubscribe";
      CFStringRef v4 = @"EKEventStatusButtonsActionDeleteReminder";
      CFStringRef v12 = @"EKEventStatusButtonsActionRemove";
      if (a1 != 0x100000) {
        CFStringRef v12 = 0;
      }
      if (a1 != 0x80000) {
        CFStringRef v4 = v12;
      }
      BOOL v5 = a1 == 0x40000;
    }
    else
    {
      if (a1 == 0x8000) {
        return @"EKEventStatusButtonsActionNone";
      }
      CFStringRef v3 = @"EKEventStatusButtonsActionReportJunk";
      CFStringRef v4 = @"EKEventStatusButtonsActionDeclineSharedCalendar";
      if (a1 != 0x20000) {
        CFStringRef v4 = 0;
      }
      BOOL v5 = a1 == 0x10000;
    }
    goto LABEL_40;
  }
  if (a1 > 4095)
  {
    CFStringRef v3 = @"EKEventStatusButtonsActionAcceptNewTime";
    CFStringRef v4 = @"EKEventStatusButtonsActionRejectNewTime";
    CFStringRef v11 = @"EKEventStatusButtonsActionRespond";
    if (a1 != 0x4000) {
      CFStringRef v11 = 0;
    }
    if (a1 != 0x2000) {
      CFStringRef v4 = v11;
    }
    BOOL v5 = a1 == 4096;
LABEL_40:
    if (v5) {
      return v3;
    }
    else {
      return v4;
    }
  }
  if (a1 == 1024 || a1 == 1792) {
    return @"EKEventStatusButtonsActionViewEvent";
  }
  if (a1 == 2048) {
    return @"EKEventStatusButtonsActionUpdate";
  }
  return result;
}

uint64_t sub_10007EFF4(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_10007F6B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10007F6D4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10007F6E4(uint64_t a1)
{
}

void sub_10007F6EC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  id obj = [*(id *)(a1 + 32) _castedDayOccurrenceViewFromGenericView:a2];
  [*(id *)(a1 + 32) convertPoint:*(double *)(a1 + 48) toView:*(double *)(a1 + 56)];
  if (v6 >= 0.0 && (double v8 = v7, v7 >= 0.0) && (v9 = v6, [obj bounds], v9 <= v10))
  {
    [obj bounds];
    double v12 = v11;
    if (([obj isSelectedCopyView] & 1) == 0 && v8 <= v12)
    {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
      *a4 = 1;
    }
  }
  else
  {
    [obj isSelectedCopyView];
  }
}

void sub_10007FEC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10007FEF0(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    CFStringRef v4 = WeakRetained;
    id v2 = [(id)objc_opt_class() _headerBackgroundColor];
    [v4 setBackgroundColor:v2];

    CFStringRef v3 = [v4 _thinLineColor];
    [v4[2] setBackgroundColor:v3];

    id WeakRetained = v4;
  }
}

void sub_100080260(id a1)
{
  uint64_t v1 = +[UIColor separatorColor];
  uint64_t v2 = qword_100216700;
  qword_100216700 = v1;

  _objc_release_x1(v1, v2);
}

void sub_100081958(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 40) presentingViewController];

  if (!v2)
  {
    CFStringRef v3 = [*(id *)(*(void *)(a1 + 32) + 40) sourceViewController];
    id v4 = [v3 presentationStyleOverrideForChildViewControllers];

    if (v4 != (id)-1) {
      [*(id *)(*(void *)(a1 + 32) + 40) setModalPresentationStyle:v4];
    }
    BOOL v5 = [*(id *)(a1 + 32) sourceViewController];
    uint64_t v6 = *(void *)(a1 + 32);
    uint64_t v7 = *(void *)(v6 + 40);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_100081A50;
    v8[3] = &unk_1001D27D8;
    void v8[4] = v6;
    [v5 enqueuableNavigationController:v7 requestsDeferShowViewControllerUntilReady:v8];
  }
}

void sub_100081A50(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) sourceViewController];
  CFStringRef v3 = *(void **)(*(void *)(a1 + 32) + 40);
  id v4 = [v3 popoverPresentationController];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100081B18;
  v5[3] = &unk_1001D2740;
  void v5[4] = *(void *)(a1 + 32);
  [v2 enqueueableManagedNavigationController:v3 requestsConfigurationOfPropertiesForPopoverPresentationController:v4 completion:v5];
}

void sub_100081B18(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 40) presentingViewController];

  CFStringRef v3 = (void *)kCalUILogHandle;
  if (v2)
  {
    if (!os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_ERROR)) {
      return;
    }
    id v4 = *(void **)(*(void *)(a1 + 32) + 40);
    BOOL v5 = v3;
    uint64_t v6 = [v4 sourceViewController];
    uint64_t v7 = *(void **)(*(void *)(a1 + 32) + 40);
    double v8 = [v7 presentingViewController];
    *(_DWORD *)buf = 138412802;
    id v22 = v6;
    __int16 v23 = 2112;
    int v24 = v7;
    __int16 v25 = 2112;
    double v26 = v8;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Race condition: %@ asked to present %@ after it has already been presented, off of %@.", buf, 0x20u);
  }
  else
  {
    if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_DEBUG))
    {
      double v9 = *(void **)(*(void *)(a1 + 32) + 40);
      double v10 = v3;
      double v11 = [v9 sourceViewController];
      *(_DWORD *)buf = 138412290;
      id v22 = (id)objc_opt_class();
      id v12 = v22;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "%@ is now ready to present the popover.", buf, 0xCu);
    }
    id v13 = (id)kCalUILogHandle;
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      objc_opt_class();
      char isKindOfClass = objc_opt_isKindOfClass();
      uint64_t v15 = *(void *)(a1 + 32);
      id v16 = *(void **)(v15 + 40);
      if (isKindOfClass)
      {
        id v16 = [*(id *)(v15 + 40) topViewController];
      }
      *(_DWORD *)buf = 138412290;
      id v22 = v16;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "[83058884] presenting deferred vc %@", buf, 0xCu);
      if (isKindOfClass) {
    }
      }
    BOOL v5 = [*(id *)(*(void *)(a1 + 32) + 40) sourceViewController];
    uint64_t v17 = *(void *)(a1 + 32);
    uint64_t v18 = *(void *)(v17 + 40);
    uint64_t v19 = *(unsigned __int8 *)(v17 + 48);
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472;
    v20[2] = sub_100081DD8;
    v20[3] = &unk_1001D2740;
    v20[4] = v17;
    [v5 presentViewController:v18 animated:v19 completion:v20];
  }
}

void sub_100081DD8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) queue];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100081E68;
  block[3] = &unk_1001D2740;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async(v2, block);
}

id sub_100081E68(uint64_t a1)
{
  return [*(id *)(a1 + 32) finish];
}

void sub_100083A54(uint64_t a1)
{
  [*(id *)(a1 + 32) updateDraggingOccurrenceFrameFromSource];
  [*(id *)(a1 + 32) updateDraggingOccurrenceOrigin];
  long long v11 = 0u;
  long long v12 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v2 = *(id *)(*(void *)(a1 + 40) + 376);
  id v3 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v10;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v10 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = [*(id *)(*((void *)&v9 + 1) + 8 * (void)v6) weekView:(void)v9];
        double v8 = [v7 content];
        [v8 setNeedsLayout];

        uint64_t v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }
    while (v4);
  }
}

void sub_100083D94(uint64_t a1)
{
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v2 = *(id *)(a1 + 32);
    [v2 setCalendarPreviewIsInlineDayView:1];
    [v2 setAllowsCalendarPreview:1];
    if (*(void *)(a1 + 40) == 2) {
      [v2 openAttendeesDetailItem];
    }
  }
}

id sub_1000860AC(uint64_t a1, void *a2)
{
  [a2 setAsyncLoading:0];
  uint64_t v3 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v3 + 123))
  {
    [(id)v3 _reloadDataIfVisible];
  }
  else
  {
    *(void *)(v3 + 144) = 0;
    [*(id *)(a1 + 32) _updateHeaderHeightsAnimated:*(unsigned __int8 *)(a1 + 40)];
  }
  id v4 = *(void **)(a1 + 32);

  return [v4 updateVisibleRects];
}

void sub_100086ED4(id a1, NSMutableDictionary *a2)
{
}

id sub_10008779C(uint64_t a1, void *a2)
{
  [a2 setAsyncLoading:0];
  uint64_t v3 = *(unsigned char **)(a1 + 32);
  if (v3[123])
  {
    return [v3 _reloadDataIfVisible];
  }
  else
  {
    return [v3 _updateHeaderHeightsAnimated:1];
  }
}

uint64_t sub_10008A228(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10008AB30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10008AB54(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10008AB64(uint64_t a1)
{
}

void sub_10008AB6C(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v17 = a2;
  [v17 frame];
  double MinX = CGRectGetMinX(v19);
  [v17 frame];
  double MaxX = CGRectGetMaxX(v20);
  double v9 = *(double *)(a1 + 48);
  if (v9 < MinX)
  {
    uint64_t v10 = (char *)[v17 week];
    int IsLeftToRight = CalTimeDirectionIsLeftToRight();
    uint64_t v12 = v10 - 1;
    if (!IsLeftToRight) {
      uint64_t v12 = v10 + 1;
    }
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = v12;
    double v9 = *(double *)(a1 + 48);
  }
  if (v9 > MaxX)
  {
    uint64_t v13 = (char *)[v17 week];
    int v14 = CalTimeDirectionIsLeftToRight();
    uint64_t v15 = v13 - 1;
    if (v14) {
      uint64_t v15 = v13 + 1;
    }
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = v15;
    double v9 = *(double *)(a1 + 48);
  }
  if (v9 >= MinX && v9 <= MaxX)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
    *a4 = 1;
  }
}

void sub_10008BFA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10008BFC0(void *a1, void *a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v6 = [a2 occurrenceViewForEvent:a1[4] occurrenceDate:a1[5]];
  uint64_t v7 = *(void *)(a1[6] + 8);
  double v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;

  if (*(void *)(*(void *)(a1[6] + 8) + 40)) {
    *a4 = 1;
  }
}

id sub_10008E328(uint64_t a1)
{
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v2 = *(id *)(*(void *)(a1 + 32) + 376);
  id v3 = [v2 countByEnumeratingWithState:&v19 objects:v23 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v20;
    do
    {
      for (uint64_t i = 0; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v20 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(a1 + 32) _setHeaderHeightForWeekGroupView:forceLayout:*(void *)(*((void *)&v19 + 1) + 8 * i) forceLayout:*(unsigned __int8 *)(a1 + 48) v19];
      }
      id v4 = [v2 countByEnumeratingWithState:&v19 objects:v23 count:16];
    }
    while (v4);
  }

  [*(id *)(*(void *)(a1 + 32) + 392) setHeaderHeight:*(double *)(a1 + 40)];
  double v7 = 1.0;
  if (!*(unsigned char *)(a1 + 49)) {
    double v7 = 0.0;
  }
  [*(id *)(*(void *)(a1 + 32) + 392) setAllDayAlpha:v7, v19];
  [*(id *)(*(void *)(a1 + 32) + 392) layoutSubviews];
  [*(id *)(*(void *)(a1 + 32) + 248) frame];
  double v9 = v8;
  double v11 = v10;
  [*(id *)(*(void *)(a1 + 32) + 392) frame];
  uint64_t v12 = *(double **)(a1 + 32);
  double v14 = v13 + v12[18] - v11;
  uint64_t v15 = [v12 view];
  [v15 bounds];
  double v17 = v16;

  return [*(id *)(*(void *)(a1 + 32) + 248) setFrame:v9, v14, v17, v11];
}

id sub_10008E4F4(uint64_t a1)
{
  if (objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "weekViewClass"), "showsAllDayDividerLine")) {
    BOOL v2 = *(unsigned char *)(a1 + 40) == 0;
  }
  else {
    BOOL v2 = 1;
  }
  id v3 = *(void **)(*(void *)(a1 + 32) + 248);

  return [v3 setHidden:v2];
}

void sub_10008E790(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10008E7A8(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v8 = a2;
  [v8 frame];
  if (v7 <= *(double *)(a1 + 40) + 0.0001)
  {
    [v8 frame];
    if (CGRectGetMaxX(v10) > *(double *)(a1 + 40) + -0.0001)
    {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
      *a4 = 1;
    }
  }
}

void sub_10008E990(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10008E9A8(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v8 = a2;
  [v8 frame];
  if (v7 < *(double *)(a1 + 40))
  {
    [v8 frame];
    if (CGRectGetMaxX(v10) >= *(double *)(a1 + 40))
    {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
      *a4 = 1;
    }
  }
}

uint64_t sub_1000904B0(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_1000905D0(uint64_t a1)
{
  v35 = +[NSMutableDictionary dictionary];
  [*(id *)(a1 + 32) _visibleOccurrenceViewsWithOptions:3];
  long long v42 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  long long v45 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue();
  id v37 = [obj countByEnumeratingWithState:&v42 objects:v52 count:16];
  if (v37)
  {
    uint64_t v36 = *(void *)v43;
    do
    {
      for (uint64_t i = 0; i != v37; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v43 != v36) {
          objc_enumerationMutation(obj);
        }
        id v3 = [*(id *)(*((void *)&v42 + 1) + 8 * i) occurrence];
        id v4 = [v3 UUID];

        if (v4)
        {
          v50[0] = @"startDate";
          uint64_t v5 = [v3 startDate];
          long long v41 = (void *)v5;
          if (v5) {
            CFStringRef v6 = (const __CFString *)v5;
          }
          else {
            CFStringRef v6 = &stru_1001D6918;
          }
          v51[0] = v6;
          v50[1] = @"duration";
          [v3 duration];
          long long v40 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
          v51[1] = v40;
          v50[2] = @"allDay";
          unsigned int v7 = [v3 isAllDay];
          CFStringRef v8 = @"NO";
          if (v7) {
            CFStringRef v8 = @"YES";
          }
          v51[2] = v8;
          v50[3] = @"UUID";
          uint64_t v9 = [v3 UUID];
          long long v39 = (void *)v9;
          if (v9) {
            CFStringRef v10 = (const __CFString *)v9;
          }
          else {
            CFStringRef v10 = &stru_1001D6918;
          }
          v51[3] = v10;
          v50[4] = @"uniqueID";
          uint64_t v11 = [v3 uniqueID];
          id v38 = (void *)v11;
          if (v11) {
            CFStringRef v12 = (const __CFString *)v11;
          }
          else {
            CFStringRef v12 = &stru_1001D6918;
          }
          v51[4] = v12;
          v50[5] = @"externalID";
          uint64_t v13 = [v3 externalID];
          double v14 = (void *)v13;
          if (v13) {
            CFStringRef v15 = (const __CFString *)v13;
          }
          else {
            CFStringRef v15 = &stru_1001D6918;
          }
          v51[5] = v15;
          v50[6] = @"externalURL";
          uint64_t v16 = [v3 externalURL];
          double v17 = (void *)v16;
          if (v16) {
            CFStringRef v18 = (const __CFString *)v16;
          }
          else {
            CFStringRef v18 = &stru_1001D6918;
          }
          v51[6] = v18;
          v50[7] = @"calendarIdentifier";
          long long v19 = [v3 calendar];
          uint64_t v20 = [v19 calendarIdentifier];
          long long v21 = (void *)v20;
          if (v20) {
            CFStringRef v22 = (const __CFString *)v20;
          }
          else {
            CFStringRef v22 = &stru_1001D6918;
          }
          v51[7] = v22;
          v50[8] = @"sourceIdentifier";
          __int16 v23 = [v3 calendar];
          int v24 = [v23 source];
          uint64_t v25 = [v24 sourceIdentifier];
          double v26 = (void *)v25;
          if (v25) {
            CFStringRef v27 = (const __CFString *)v25;
          }
          else {
            CFStringRef v27 = &stru_1001D6918;
          }
          v51[8] = v27;
          double v28 = +[NSDictionary dictionaryWithObjects:v51 forKeys:v50 count:9];

          double v29 = [v3 UUID];
          [v35 setObject:v28 forKeyedSubscript:v29];
        }
      }
      id v37 = [obj countByEnumeratingWithState:&v42 objects:v52 count:16];
    }
    while (v37);
  }
  v30 = (void *)kCalUILogHandle;
  if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_INFO))
  {
    double v31 = v30;
    id v32 = (objc_class *)objc_opt_class();
    double v33 = NSStringFromClass(v32);
    *(_DWORD *)buf = 138543618;
    __int16 v47 = v33;
    __int16 v48 = 2114;
    v49 = v35;
    _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_INFO, "[UserStateLog] State -> %{public}@ Visible Events when viewDidAppear. %{public}@", buf, 0x16u);
  }
}

void sub_100091704(id *a1)
{
  BOOL v2 = +[NSNotificationCenter defaultCenter];
  [v2 addObserver:a1[4] selector:"_viewControllerAppeared:" name:EKEventEditViewControllerDidAppear object:0];

  id v3 = [a1[4] application];
  [v3 startedTest:a1[5]];

  id v4 = [a1[4] application];
  [v4 startedSubTest:a1[6] forTest:a1[5]];

  uint64_t v5 = [a1[4] application];
  CFStringRef v6 = [v5 rootNavigationController];
  [v6 addEventPressed];

  unsigned int v7 = [a1[4] application];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100091874;
  v8[3] = &unk_1001D2E90;
  void v8[4] = a1[4];
  id v9 = a1[6];
  id v10 = a1[5];
  id v11 = a1[7];
  [v7 installCACommitCompletionBlock:v8];
}

void sub_100091874(uint64_t a1)
{
  BOOL v2 = [*(id *)(a1 + 32) application];
  [v2 finishedSubTest:*(void *)(a1 + 40) forTest:*(void *)(a1 + 48)];

  id v3 = [*(id *)(a1 + 32) application];
  [v3 startedSubTest:*(void *)(a1 + 56) forTest:*(void *)(a1 + 48)];
}

void sub_1000919F4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  BOOL v2 = WeakRetained;
  if (WeakRetained)
  {
    if ([WeakRetained dividedListMode]) {
      [(id)objc_opt_class() dividedModeBackgroundColor];
    }
    else {
    id v3 = +[UIColor systemBackgroundColor];
    }
    id v4 = [v2 scrollView];
    [v4 setBackgroundColor:v3];

    uint64_t v5 = (void *)v2[53];
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_100091AF8;
    v7[3] = &unk_1001D3A40;
    id v8 = v3;
    id v6 = v3;
    [v5 enumerateObjectsUsingBlock:v7];
  }
}

id sub_100091AF8(uint64_t a1, void *a2)
{
  return [a2 setBackgroundColor:*(void *)(a1 + 32)];
}

void sub_100093338(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100093358(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  id v17 = [*(id *)(a1 + 32) subviewForDate:a2];
  if (v17)
  {
    unsigned int v7 = [*(id *)(a1 + 40) objectAtIndexedSubscript:a3];
    id v8 = [*(id *)(a1 + 32) scrollView];
    [v7 floatValue];
    [v8 convertPoint:[*(void *)(*(void *)(a1 + 32) + 520)] fromView:0.0 v9];
    double v11 = v10;

    [v17 frame];
    double v13 = v12 - v11;
    double v14 = [*(id *)(a1 + 32) scrollView];
    CFStringRef v15 = [*(id *)(a1 + 32) scrollView];
    [v15 contentOffset];
    [v14 setContentOffset:0.0, v13 + v16];

    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
    *a4 = 1;
  }
}

void sub_100093A60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
}

void sub_100093A98(uint64_t a1)
{
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24))
  {
    if (![*(id *)(a1 + 32) count])
    {
      BOOL v2 = *(unsigned char **)(a1 + 40);
      if (!v2[334])
      {
        [v2 finishChangeScale];
        id v3 = [*(id *)(a1 + 40) pinchToZoomAllowed];
        id v4 = [*(id *)(a1 + 40) pinchRecognizer];
        [v4 setEnabled:v3];

        id v5 = +[NSNotificationCenter defaultCenter];
        [v5 postNotificationName:@"MonthViewScaleAnimationFinishedNotification" object:0];
      }
    }
  }
}

id sub_100093B64(uint64_t a1)
{
  return _[*(id *)(a1 + 32) applySizeToPinchView:*(void *)(a1 + 40) compressed:*(unsigned __int8 *)(a1 + 48) snapToBoundary:1];
}

uint64_t sub_100093B78(uint64_t a1)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100093B98(uint64_t a1)
{
  [*(id *)(a1 + 32) removeObject:*(void *)(a1 + 40)];
  BOOL v2 = *(uint64_t (**)(void))(*(void *)(a1 + 48) + 16);

  return v2();
}

id sub_100093BE0(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 40);
  id v3 = *(id **)(a1 + 32);
  if (v2)
  {
    [v3 _updateListViewFrame];
    id v4 = [*(id *)(*(void *)(a1 + 32) + 296) view];
    id v5 = v4;
    double v6 = 1.0;
    double v7 = 1.0;
  }
  else
  {
    [v3[38] frame];
    double v9 = v8;
    double v11 = v10;
    double v12 = [*(id *)(a1 + 32) view];
    [v12 bounds];
    double Height = CGRectGetHeight(v17);

    double v6 = 0.0;
    [*(id *)(*(void *)(a1 + 32) + 304) setFrame:0.0, Height, v9, v11];
    id v4 = [*(id *)(*(void *)(a1 + 32) + 296) view];
    id v5 = v4;
    double v7 = 0.0;
  }
  [v4 setAlpha:v7];

  double v14 = *(void **)(*(void *)(a1 + 32) + 312);

  return [v14 setAlpha:v6];
}

uint64_t sub_100093CF4(uint64_t a1)
{
  int v2 = [*(id *)(*(void *)(a1 + 32) + 296) view];
  [v2 setAlpha:1.0];

  [*(id *)(*(void *)(a1 + 32) + 312) setAlpha:1.0];
  objc_msgSend(*(id *)(*(void *)(a1 + 32) + 304), "setUserInteractionEnabled:", objc_msgSend(*(id *)(a1 + 32), "dividedListMode"));
  if (!*(unsigned char *)(a1 + 48))
  {
    [*(id *)(*(void *)(a1 + 32) + 304) setHidden:1];
    [*(id *)(*(void *)(a1 + 32) + 296) setDisabled:1];
  }
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(void **)(v3 + 336);
  *(void *)(v3 + 336) = 0;

  [*(id *)(a1 + 32) _updateNavigationControllerBackButton];
  *(unsigned char *)(*(void *)(a1 + 32) + 334) = 0;
  id v5 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v5();
}

void sub_1000941AC(uint64_t a1, int a2)
{
  [*(id *)(a1 + 32) setDisableTodayPulse:0];
  if (a2)
  {
    CUIKTodayComponents();
    id v8 = (id)objc_claimAutoreleasedReturnValue();
    id v4 = [*(id *)(a1 + 40) month];
    if (v4 == [v8 month]
      && (id v5 = [*(id *)(a1 + 40) year], v5 == objc_msgSend(v8, "year")))
    {
      uint64_t v6 = [*(id *)(a1 + 56) calendarDateForDay];
    }
    else
    {
      uint64_t v6 = [*(id *)(a1 + 40) calendarDateForMonth];
    }
    double v7 = (void *)v6;
    [*(id *)(*(void *)(a1 + 48) + 8) setSelectedDate:v6];

    [*(id *)(a1 + 48) _animateChangeToWeekSize:*(void *)(a1 + 64) divided:*(unsigned __int8 *)(a1 + 72)];
  }
}

id sub_100094B7C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) applySizeToPinchView:*(void *)(a1 + 40) compressed:0 snapToBoundary:0];
}

void sub_100094B90(uint64_t a1)
{
  [*(id *)(a1 + 32) finishChangeScale];
  id v2 = [*(id *)(a1 + 32) pinchToZoomAllowed];
  id v3 = [*(id *)(a1 + 32) pinchRecognizer];
  [v3 setEnabled:v2];
}

void sub_100094CC8(uint64_t a1)
{
  if ([*(id *)(a1 + 32) dividedListMode])
  {
    id v2 = *(void **)(a1 + 32);
    id v4 = [v2 model];
    id v3 = [v4 selectedDay];
    [v2 reinitializeAllViewsWithCalendarDate:v3];
  }
}

id sub_100095590(id result)
{
  uint64_t v1 = *((void *)result + 4);
  if (*(unsigned char *)(v1 + 331))
  {
    *(unsigned char *)(v1 + 331) = 0;
    *(unsigned char *)(*((void *)result + 4) + 330) = 0;
    return [*((id *)result + 4) _loadEventsForAllSubviews];
  }
  return result;
}

id sub_1000955C4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateListViewFrame];
}

void sub_100095C18(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) scrollView];
  [v2 setContentOffset:0 animated:**(double **)(a1 + 40), *(double *)(*(void *)(a1 + 40) + 8)];
}

id sub_100095C74(uint64_t a1)
{
  return [*(id *)(a1 + 32) didEndScrolling];
}

id sub_100095C7C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateListViewFrame];
}

id sub_100095C84(uint64_t a1)
{
  return _[*(id *)(a1 + 32) setGrayLineAlpha:0.0];
}

id sub_100095C90(uint64_t a1)
{
  return _[*(id *)(a1 + 32) setGrayLineAlpha:1.0];
}

void sub_100097438(id a1, InfiniteScrollViewSubview *a2, BOOL *a3)
{
}

void sub_100097690(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = a2;
  [v3 resetTimeZone:v2];
  [v3 resetTodayBits];
}

void sub_100097AAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100097AC4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100097AD4(uint64_t a1)
{
}

void sub_100097ADC(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v11 = a2;
  [*(id *)(a1 + 32) locationInView:v11];
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    [v11 bounds];
    v13.x = v8;
    v13.y = v10;
    if (CGRectContainsPoint(v14, v13) && ([v11 isHidden] & 1) == 0)
    {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
      *a4 = 1;
    }
  }
}

void sub_100097D50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100097D7C(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v11 = a2;
  [*(id *)(a1 + 32) locationInView:v11];
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  if (([v11 isHidden] & 1) == 0)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      [v11 bounds];
      v13.x = v8;
      v13.y = v10;
      if (CGRectContainsPoint(v14, v13))
      {
        objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
        *a4 = 1;
      }
    }
  }
}

void sub_100098034(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10009804C(uint64_t a1, void *a2, unsigned char *a3)
{
  id v22 = a2;
  uint64_t v6 = [*(id *)(a1 + 32) scrollView];
  [v6 bounds];
  CGFloat v8 = v7;
  CGFloat v10 = v9;

  id v11 = [*(id *)(a1 + 32) scrollView];
  [v11 contentOffset];
  double v13 = v12;
  CGRect v14 = [*(id *)(a1 + 32) scrollView];
  [v14 safeAreaInsets];
  CGFloat v16 = v13 + v15;

  [*(id *)(*(void *)(a1 + 32) + 304) frame];
  double v18 = v17;
  long long v19 = [*(id *)(a1 + 32) scrollView];
  [v19 safeAreaInsets];
  CGFloat v21 = v18 - v20;

  v24.origin.x = v8;
  v24.origin.y = v16;
  v24.size.width = v10;
  v24.size.height = v21;
  if (CGRectContainsPoint(v24, *(CGPoint *)(a1 + 48)))
  {
    [v22 frame];
    if (CGRectContainsPoint(v25, *(CGPoint *)(a1 + 48)))
    {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
      *a3 = 1;
    }
  }
}

id sub_100098844(uint64_t a1)
{
  return [*(id *)(a1 + 32) _removeMonthHighlight];
}

id sub_100098C4C(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:0.0];
}

id sub_100098C58(uint64_t a1)
{
  return [*(id *)(a1 + 32) removeFromSuperview];
}

void sub_100099274(uint64_t a1, void *a2)
{
  id v9 = a2;
  id v3 = [v9 calendarDate];
  [v3 absoluteTime];
  double v5 = v4;

  uint64_t v6 = [v9 endCalendarDate];
  [v6 absoluteTime];
  double v8 = v7;

  if (v5 <= *(double *)(a1 + 40) && v8 >= *(double *)(a1 + 48)) {
    [*(id *)(a1 + 32) _loadEventDataForMonthWeekView:v9];
  }
}

void sub_100099420(id *a1)
{
  uint64_t v2 = [a1[4] _loadEventsForStartDate:a1[5] endDate:a1[6]];
  id v3 = (void *)*((void *)a1[4] + 1);
  double v4 = [a1[5] date];
  double v5 = [a1[6] date];
  uint64_t v6 = [v3 occurrencesForStartDate:v4 endDate:v5 preSorted:1 waitForLoad:1];
  double v7 = [v6 occurrences];

  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_100099594;
  v10[3] = &unk_1001D3BA0;
  id v11 = a1[5];
  id v12 = a1[7];
  id v13 = a1[6];
  id v14 = v2;
  id v15 = a1[4];
  id v16 = v7;
  id v8 = v7;
  id v9 = v2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v10);
}

void sub_100099594(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v9 = [*(id *)(a1 + 40) calendarDate];
  if (objc_msgSend(v2, "isEqual:"))
  {
    id v3 = *(void **)(a1 + 48);
    double v4 = [*(id *)(a1 + 40) endCalendarDate];
    LODWORD(v3) = [v3 isEqual:v4];

    if (v3)
    {
      uint64_t v5 = *(void *)(a1 + 56);
      if (v5) {
        [*(id *)(a1 + 40) setEventData:v5 animated:[*(id *)(a1 + 64) _shouldAnimateDots]];
      }
      uint64_t v6 = *(void **)(a1 + 40);
      uint64_t v7 = *(void *)(a1 + 72);
      id v8 = [*(id *)(a1 + 64) _shouldAnimateDots];
      [v6 setOccurrences:v7 animated:v8];
    }
  }
  else
  {
  }
}

id sub_10009978C(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) _loadEventDataForMonthWeekView:a2];
}

id sub_10009A290(uint64_t a1)
{
  return [*(id *)(a1 + 32) _loadEventsForAllSubviews];
}

void sub_10009A298(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 8) numberOfDaysWithCachedOccurrences];
  uint64_t v7 = 0;
  uint64_t v6 = 0;
  [*(id *)(a1 + 32) _dayIndexesForRangeStart:*(void *)(a1 + 40) rangeEnd:*(void *)(a1 + 48) outFirstDayIndex:&v7 outLastDayIndex:&v6];
  uint64_t v2 = v7;
  if (v7 <= v6)
  {
    do
      id v3 = [*(id *)(*(void *)(a1 + 32) + 8) cachedSpecialDayDataForSection:v2];
    while (v2++ < v6);
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10009A394;
  block[3] = &unk_1001D2740;
  void block[4] = *(void *)(a1 + 32);
  dispatch_sync((dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_10009A394(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 328) = 0;
  return [*(id *)(a1 + 32) _loadEventsForAllSubviews];
}

void sub_10009A7F8(uint64_t a1, void *a2)
{
  id v39 = a2;
  id v3 = [*(id *)(a1 + 32) traitCollection];
  +[UITraitCollection _setCurrentTraitCollection:v3];

  [v39 frame];
  uint64_t v5 = +[NSNumber numberWithDouble:v4];
  [*(id *)(a1 + 40) addObject:v5];
  if ([*(id *)(a1 + 32) dividedListMode]) {
    [(id)objc_opt_class() dividedModeBackgroundColor];
  }
  else {
  uint64_t v6 = +[UIColor systemBackgroundColor];
  }
  [v39 setBackgroundColor:v6];

  [v39 frame];
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  CGFloat v14 = v13;
  if ([*(id *)(a1 + 32) dividedListMode])
  {
    id v15 = [*(id *)(a1 + 32) scrollView];
    [v39 rectForCells];
    [v15 convertRect:v39 fromView:];
    CGFloat v8 = v16;
    CGFloat v10 = v17;
    CGFloat v12 = v18;
    CGFloat v14 = v19;
  }
  v42.origin.double x = v8;
  v42.origin.double y = v10;
  v42.size.double width = v12;
  v42.size.double height = v14;
  if (CGRectContainsRect(*(CGRect *)(a1 + 64), v42))
  {
    [v39 setHidden:1];
  }
  else
  {
    [v39 frame];
    v43.origin.double x = v20;
    v43.origin.double y = v21;
    v43.size.double width = v22;
    v43.size.double height = v23;
    CGRect v41 = CGRectIntersection(*(CGRect *)(a1 + 64), v43);
    double x = v41.origin.x;
    double y = v41.origin.y;
    double width = v41.size.width;
    double height = v41.size.height;
    if (!CGRectIsNull(v41))
    {
      if (height > 10.0) {
        [v39 setTemporarilyHideWeekNumber:1];
      }
      double v28 = [*(id *)(a1 + 32) scrollView];
      [v28 convertRect:v39 toView:x, y, width, height];
      double v30 = v29;
      double v32 = v31;
      double v34 = v33;
      double v36 = v35;

      id v37 = [objc_alloc((Class)UIView) initWithFrame:v30, v32, v34, v36];
      id v38 = +[UIColor systemBackgroundColor];
      [v37 setBackgroundColor:v38];

      [v39 addSubview:v37];
      [*(id *)(a1 + 48) addObject:v37];
    }
  }
  [*(id *)(a1 + 56) addObject:v39];
}

void sub_10009AD18(id a1, InfiniteScrollViewSubview *a2, BOOL *a3)
{
  double v4 = a2;
  if ([(InfiniteScrollViewSubview *)v4 isHidden]) {
    [(InfiniteScrollViewSubview *)v4 setHidden:0];
  }
  id v3 = +[UIColor clearColor];
  [(InfiniteScrollViewSubview *)v4 setBackgroundColor:v3];
}

id sub_10009B2DC(uint64_t a1)
{
  double v1 = 1.0;
  if (!*(unsigned char *)(a1 + 40)) {
    double v1 = 0.0;
  }
  return [*(id *)(*(void *)(a1 + 32) + 344) setAlpha:v1];
}

void sub_10009B998(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10009B9C8(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v6 = [*(id *)(a1 + 40) calendarDateForEndOfMonth];
  uint64_t v3 = [v2 subviewForDate:v6];
  uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_10009BE8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_10009BEC4(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = *(double *)(a1 + 48);
  id v13 = v3;
  uint64_t v5 = [v3 calendarDate];
  [v5 absoluteTime];
  if (v4 <= v6)
  {
    double v7 = [v13 calendarDate];
    [v7 absoluteTime];
    double v9 = v8;
    double v10 = *(double *)(a1 + 56);

    if (v9 <= v10)
    {
      [v13 frame];
      if (v11 < *(double *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
      {
        [v13 frame];
        *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = v12;
        *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
      }
    }
  }
  else
  {
  }
}

uint64_t sub_10009C0E0(uint64_t a1)
{
  objc_opt_class();
  uint64_t result = objc_opt_isKindOfClass();
  if (result)
  {
    uint64_t v3 = *(void *)(a1 + 40);
    if (v3 == 3)
    {
      uint64_t v5 = *(void **)(a1 + 32);
      return (uint64_t)[v5 editButtonTapped];
    }
    else if (v3 == 2)
    {
      double v4 = *(void **)(a1 + 32);
      return (uint64_t)[v4 openAttendeesDetailItem];
    }
  }
  return result;
}

uint64_t sub_10009C334(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(a1 + 32));
  }
  return result;
}

void sub_10009C584(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10009C59C(uint64_t a1, void *a2, unsigned char *a3)
{
  id v13 = a2;
  [v13 frame];
  BOOL v6 = CGRectContainsPoint(v15, *(CGPoint *)(a1 + 48));
  id v7 = v13;
  if (v6)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
    double v8 = *(void **)(a1 + 64);
    if (v8)
    {
      double v9 = [*(id *)(a1 + 32) scrollView];
      [v9 convertPoint:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) toView:*(double *)(a1 + 48), *(double *)(a1 + 56)];
      *double v8 = v10;
      v8[1] = v11;
    }
    *a3 = 1;
    id v7 = v13;
  }

  return _objc_release_x1(v6, v7);
}

void sub_10009D130(id *a1)
{
  uint64_t v2 = [a1[4] view];
  [v2 setHidden:0];

  uint64_t v3 = [a1[5] transitionView];
  [v3 removeFromSuperview];

  [a1[6] setAnimatingViewTransition:0];
  [a1[7] setAnimatingViewTransition:0];
  [a1[8] completeTransition:1];
  double v4 = [a1[9] view];
  [v4 setHidden:0];

  id v5 = +[NSNotificationCenter defaultCenter];
  [v5 postNotificationName:@"YearMonthAnimator_MonthToYearAnimationCompleteNotification" object:0];
}

void sub_10009D204(id *a1)
{
  uint64_t v2 = [a1[4] view];
  [v2 setHidden:0];

  uint64_t v3 = [a1[5] view];
  [v3 setHidden:0];

  double v4 = [a1[6] transitionView];
  [v4 removeFromSuperview];

  [a1[7] setAnimatingViewTransition:0];
  [a1[8] setAnimatingViewTransition:0];
  [a1[9] completeTransition:1];
  id v5 = +[NSNotificationCenter defaultCenter];
  [v5 postNotificationName:@"YearMonthAnimator_YearToMonthAnimationCompleteNotification" object:0];
}

void sub_10009D830(id a1)
{
  id v1 = objc_alloc_init((Class)NSCache);
  uint64_t v2 = qword_100216718;
  qword_100216718 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

void sub_10009DDA4(void *a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  BOOL v6 = v5;
  uint64_t v7 = a3 + 1;
  uint64_t v8 = a1[7];
  if ((id)a1[4] == v5) {
    unsigned __int8 v9 = *(unsigned char *)(a1[5] + 82) != 0;
  }
  else {
    unsigned __int8 v9 = [v5 isSelected];
  }
  if (v7 == v8 && (v9 & 1) != 0) {
    goto LABEL_26;
  }
  if ((void *)a1[4] == v6)
  {
    uint64_t v10 = &OBJC_IVAR___MainWindowControlHeaderView__inboxSelected;
    goto LABEL_10;
  }
  if ((void *)a1[6] == v6)
  {
    uint64_t v10 = &OBJC_IVAR___MainWindowControlHeaderView__calendarSelected;
LABEL_10:
    *(unsigned char *)(a1[5] + *v10) = v7 == v8;
  }
  uint64_t v11 = a1[5];
  if (*(void **)(v11 + 40) == v6)
  {
    uint64_t v12 = [v6 customView];
    id v13 = +[MainWindowControlHeaderView inboxImageForCount:*(void *)(a1[5] + 72) selected:*(unsigned __int8 *)(a1[5] + 82)];
    [v12 setImage:v13 forState:0];

    [v12 sizeToFit];
  }
  else
  {
    if (*(void **)(v11 + 24) != v6)
    {
      [v6 setSelected:v7 == v8];
      goto LABEL_26;
    }
    uint64_t v12 = [v6 customView];
    uint64_t v14 = +[MainWindowControlHeaderView badgedCalendarIcon:*(unsigned __int8 *)(a1[5] + 81)];
    [v12 setImage:v14 forState:0];
  }
  CGRect v15 = [v6 customView];
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  double v16 = [v15 interactions];
  id v17 = [v16 countByEnumeratingWithState:&v22 objects:v26 count:16];
  if (v17)
  {
    id v18 = v17;
    uint64_t v19 = *(void *)v23;
    do
    {
      for (uint64_t i = 0; i != v18; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v23 != v19) {
          objc_enumerationMutation(v16);
        }
        CGFloat v21 = *(void **)(*((void *)&v22 + 1) + 8 * i);
        objc_opt_class();
        if (objc_opt_isKindOfClass()) {
          [v21 invalidate];
        }
      }
      id v18 = [v16 countByEnumeratingWithState:&v22 objects:v26 count:16];
    }
    while (v18);
  }

LABEL_26:
}

id sub_10009E13C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = 24;
  BOOL v6 = *(void **)(*(void *)(a1 + 32) + 24);
  id v7 = a3;
  id v8 = a2;
  id v9 = [v6 customView];

  uint64_t v10 = &OBJC_IVAR___MainWindowControlHeaderView__inboxSelected;
  if (v9 == v8) {
    uint64_t v10 = &OBJC_IVAR___MainWindowControlHeaderView__calendarSelected;
  }
  int v11 = *(unsigned __int8 *)(*(void *)(a1 + 32) + *v10);
  id v12 = objc_alloc_init((Class)UIPreviewParameters);
  id v13 = [v7 preview];

  uint64_t v14 = [v13 target];

  id v15 = objc_alloc((Class)UITargetedPreview);
  if (v9 != v8) {
    uint64_t v5 = 40;
  }
  double v16 = [*(id *)(*(void *)(a1 + 32) + v5) customView];
  id v17 = [v15 initWithView:v16 parameters:v12 target:v14];

  if (v11)
  {
    id v18 = +[UIPointerLiftEffect effectWithPreview:v17];
    uint64_t v19 = 0;
  }
  else
  {
    id v18 = +[UIPointerHighlightEffect effectWithPreview:v17];
    CGFloat v20 = [v14 container];
    CGFloat v21 = [v17 view];
    [v21 bounds];
    double v23 = v22;
    double v25 = v24;
    double v27 = v26;
    double v29 = v28;
    double v30 = [v17 view];
    [v20 convertRect:v30 fromView:v23];

    UIRectInset();
    uint64_t v19 = +[UIPointerShape shapeWithRoundedRect:](UIPointerShape, "shapeWithRoundedRect:");
  }
  double v31 = +[UIPointerStyle styleWithEffect:v18 shape:v19];

  return v31;
}

id sub_10009EAF0(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) application];
  [v2 startedTest:*(void *)(a1 + 40)];

  uint64_t v3 = *(void **)(a1 + 32);

  return [v3 _mainLoop];
}

void sub_10009EC3C(id a1)
{
}

id sub_10009EC50(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 40) navigateToNextDateComponentUnitAnimated:1];
}

void sub_10009F0D0(id a1, CalendarMessageCell *a2, unint64_t a3, BOOL *a4)
{
  double v4 = a2;
  if (objc_opt_respondsToSelector()) {
    [(CalendarMessageCell *)v4 updateSelectedResponseButton];
  }
}

void sub_10009F384(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10009F3A0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10009F3B0(uint64_t a1)
{
}

void sub_10009F3B8(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 48);
  id v6 = [*(id *)(a1 + 40) objectID];
  uint64_t v3 = [v2 objectForKey:v6];
  uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_10009F42C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(NSObject **)(v2 + 72);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10009F590;
  block[3] = &unk_1001D3A90;
  uint64_t v12 = *(void *)(a1 + 56);
  void block[4] = v2;
  id v11 = *(id *)(a1 + 40);
  dispatch_sync(v3, block);
  if (!*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40))
  {
    uint64_t v4 = [*(id *)(a1 + 48) scanForConflicts];
    if (v4)
    {
      uint64_t v5 = *(void *)(a1 + 32);
      id v6 = *(NSObject **)(v5 + 72);
      v7[0] = _NSConcreteStackBlock;
      v7[1] = 3221225472;
      v7[2] = sub_10009F604;
      v7[3] = &unk_1001D2EE0;
      void v7[4] = v5;
      id v8 = *(id *)(a1 + 40);
      id v9 = v4;
      dispatch_sync(v6, v7);
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), v4);
    }
  }
}

void sub_10009F590(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 48);
  id v6 = [*(id *)(a1 + 40) objectID];
  uint64_t v3 = [v2 objectForKey:v6];
  uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_10009F604(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 48);
  id v3 = [*(id *)(a1 + 40) objectID];
  [v2 setObject:v1 forKeyedSubscript:v3];
}

void sub_10009F70C(uint64_t a1)
{
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v10;
    do
    {
      id v6 = 0;
      do
      {
        if (*(void *)v10 != v5) {
          objc_enumerationMutation(v2);
        }
        id v7 = [*(id *)(*((void *)&v9 + 1) + 8 * (void)v6) notification:(void)v9];
        if (![v7 type] || objc_msgSend(v7, "type") == (id)1) {
          id v8 = [*(id *)(a1 + 40) conflictInfoForNotification:v7];
        }

        id v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }
    while (v4);
  }
}

void sub_10009F8B4(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 24) count];
  if (v2)
  {
    if (*(void *)(a1 + 40) < (uint64_t)v2)
    {
      id v3 = [*(id *)(*(void *)(a1 + 32) + 24) objectAtIndex:];
      id v4 = [v3 notification];

      uint64_t v5 = CUIKDisplayStringForNotificationIdentity();
      uint64_t v6 = *(void *)(a1 + 32);
      id v7 = *(NSObject **)(v6 + 96);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_10009F9C0;
      block[3] = &unk_1001D2EE0;
      void block[4] = v6;
      id v11 = v4;
      id v12 = v5;
      id v8 = v5;
      id v9 = v4;
      dispatch_sync(v7, block);
    }
  }
}

void sub_10009F9C0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  id v2 = *(void **)(*(void *)(a1 + 32) + 56);
  id v3 = [*(id *)(a1 + 40) objectID];
  [v2 setObject:v1 forKeyedSubscript:v3];
}

id sub_10009FD08(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v6 = *(void **)(a1 + 32);
  id v7 = [a2 notification];
  id v8 = [v7 URL];
  [v6 removeObject:v8];

  id result = [*(id *)(a1 + 32) count];
  if (!result) {
    *a4 = 1;
  }
  return result;
}

void sub_1000A0400(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_1000A0428(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 48);
  id v6 = [*(id *)(a1 + 40) objectID];
  uint64_t v3 = [v2 objectForKeyedSubscript:v6];
  uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_1000A049C(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000A0548;
  block[3] = &unk_1001D3DB0;
  objc_copyWeak(&v7, (id *)(a1 + 48));
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  id v5 = v2;
  uint64_t v6 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v7);
}

void sub_1000A0548(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = [WeakRetained[3] indexOfObject:*(void *)(a1 + 32)];
    if (v4 != (id)0x7FFFFFFFFFFFFFFFLL)
    {
      v5[0] = _NSConcreteStackBlock;
      v5[1] = 3221225472;
      v5[2] = sub_1000A05FC;
      v5[3] = &unk_1001D2A40;
      void v5[4] = *(void *)(a1 + 40);
      void v5[5] = v4;
      +[UIView performWithoutAnimation:v5];
    }
  }
}

void sub_1000A05FC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) delegate];
  [v2 inboxTableViewGroupController:*(void *)(a1 + 32) requestsReloadOfRow:*(void *)(a1 + 40)];
}

void sub_1000A0650(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 56);
  id v6 = [*(id *)(a1 + 40) objectID];
  uint64_t v3 = [v2 objectForKeyedSubscript:v6];
  uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

uint64_t sub_1000A0EF8(uint64_t a1, void *a2)
{
  long long v10 = [a2 notification];
  objc_opt_class();
  uint64_t isKindOfClass = objc_opt_isKindOfClass();
  uint64_t v4 = v10;
  if (isKindOfClass)
  {
    id v5 = v10;
    id v6 = *(void **)(*(void *)(a1 + 32) + 40);
    id v7 = [v5 URL];
    id v8 = [v6 objectForKeyedSubscript:v7];

    if (v8) {
      [*(id *)(a1 + 32) _saveStatus:3 forEventInvitationNotification:v5 commit:1];
    }

    uint64_t v4 = v10;
  }

  return _objc_release_x1(isKindOfClass, v4);
}

void sub_1000A1FF0(uint64_t a1)
{
  [*(id *)(a1 + 32) _saveStatus:*(void *)(a1 + 64) forEventInvitationNotification:*(void *)(a1 + 40) commit:0];
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id v2 = [*(id *)(a1 + 48) conflictingDates];
  id v3 = [v2 countByEnumeratingWithState:&v22 objects:v28 count:16];
  if (v3)
  {
    id v4 = v3;
    id v5 = 0;
    uint64_t v6 = *(void *)v23;
    while (2)
    {
      id v7 = 0;
      id v8 = v5;
      do
      {
        if (*(void *)v23 != v6) {
          objc_enumerationMutation(v2);
        }
        uint64_t v9 = *(void *)(*((void *)&v22 + 1) + 8 * (void)v7);
        long long v10 = [*(id *)(*(void *)(a1 + 32) + 8) eventStore];
        uint64_t v11 = [*(id *)(a1 + 56) objectID];
        id v12 = [v10 eventForObjectID:v11 occurrenceDate:v9 checkValid:0];

        [v12 setParticipationStatus:1];
        id v13 = [v12 eventStore];
        id v21 = v8;
        LOBYTE(v11) = [v13 saveEvent:v12 span:0 commit:0 error:&v21];
        id v5 = v21;

        if ((v11 & 1) == 0)
        {
          uint64_t v14 = kCalUILogInboxHandle;
          if (os_log_type_enabled((os_log_t)kCalUILogInboxHandle, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138412290;
            id v27 = v5;
            _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "Error saving invitation status: %@.", buf, 0xCu);
          }
          id v15 = [*(id *)(a1 + 56) eventStore];
          [v15 rollback];

          goto LABEL_17;
        }

        id v7 = (char *)v7 + 1;
        id v8 = v5;
      }
      while (v4 != v7);
      id v4 = [v2 countByEnumeratingWithState:&v22 objects:v28 count:16];
      if (v4) {
        continue;
      }
      break;
    }
  }
  else
  {
    id v5 = 0;
  }
  double v16 = v5;

  id v17 = [*(id *)(*(void *)(a1 + 32) + 8) eventStore];
  id v20 = v5;
  unsigned __int8 v18 = [v17 commitWithRollback:&v20];
  id v5 = v20;

  if ((v18 & 1) == 0)
  {
    uint64_t v19 = kCalUILogInboxHandle;
    if (os_log_type_enabled((os_log_t)kCalUILogInboxHandle, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      id v27 = v5;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "Error committing to event store: %@.", buf, 0xCu);
    }
  }
LABEL_17:
}

id sub_1000A22BC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _saveStatus:*(void *)(a1 + 48) forEventInvitationNotification:*(void *)(a1 + 40) commit:1];
}

uint64_t sub_1000A22D0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_1000A2ACC(id a1, EKCalendarNotificationReference *a2)
{
  return [(EKCalendarNotificationReference *)a2 notification];
}

void sub_1000A3AC0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 192));
  _Unwind_Resume(a1);
}

void sub_1000A3AE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v3 = *(void **)(a1 + 32);
  id v7 = 0;
  unsigned __int8 v4 = [v3 saveEvent:a2 span:a3 error:&v7];
  id v5 = v7;
  if ((v4 & 1) == 0)
  {
    uint64_t v6 = kCalUILogInboxHandle;
    if (os_log_type_enabled((os_log_t)kCalUILogInboxHandle, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      id v9 = v5;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "Error clearing attendee change flags: %@", buf, 0xCu);
    }
  }
}

void sub_1000A3BB8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (!*(void *)(*(void *)(a1 + 32) + 32))
  {
    id v4 = objc_alloc_init((Class)NSMutableArray);
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = *(void **)(v5 + 32);
    *(void *)(v5 + 32) = v4;
  }
  id v7 = [v3 URL];
  [*(id *)(*(void *)(a1 + 32) + 32) addObject:v7];
  id v8 = *(void **)(*(void *)(a1 + 32) + 24);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_1000A3D18;
  v14[3] = &unk_1001D3EB8;
  id v9 = v3;
  id v15 = v9;
  id v10 = [v8 indexOfObjectPassingTest:v14];
  if (v10 != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    [*(id *)(*(void *)(a1 + 32) + 24) removeObjectAtIndex:v10];
    uint64_t v11 = [*(id *)(a1 + 32) delegate];
    [v11 inboxTableViewGroupController:*(void *)(a1 + 32) addedRows:0 removedRows:0 updatedRows:0];

    id v12 = *(void **)(*(void *)(a1 + 32) + 8);
    id v13 = [v9 objectID];
    [v12 addRespondedNotificationObjectID:v13];
  }
}

BOOL sub_1000A3D18(uint64_t a1, void *a2)
{
  id v3 = [a2 notification];
  BOOL v4 = v3 == *(void **)(a1 + 32);

  return v4;
}

uint64_t sub_1000A3D58(uint64_t a1)
{
  [*(id *)(a1 + 32) setIsJunk:1];
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)(a1 + 48) + 16);

  return v2();
}

void sub_1000A3DA0(uint64_t a1, uint64_t a2)
{
  if ((unint64_t)(a2 - 3) >= 3) {
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
  uint64_t v3 = *(void *)(a1 + 32);
  BOOL v4 = *(void **)(v3 + 104);
  *(void *)(v3 + 104) = 0;
}

void sub_1000A3E08(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    uint64_t v2 = [WeakRetained viewController];
    uint64_t v3 = [v2 presentingViewController];
    [v3 dismissViewControllerAnimated:1 completion:0];

    id WeakRetained = v4;
  }
}

void sub_1000A3E7C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = a4;
  [*(id *)(*(void *)(a1 + 32) + 32) removeObject:*(void *)(a1 + 40)];
  if (v5)
  {
    uint64_t v6 = kCalUILogInboxHandle;
    if (os_log_type_enabled((os_log_t)kCalUILogInboxHandle, OS_LOG_TYPE_ERROR))
    {
      int v7 = 138412290;
      id v8 = v5;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "Error responding to shared calendar invitation: %@", (uint8_t *)&v7, 0xCu);
    }
  }
}

id sub_1000A41E4(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 112) = 1;
  id result = [*(id *)(a1 + 32) visible];
  if (result)
  {
    uint64_t v3 = *(void **)(a1 + 32);
    return [v3 refreshIfNeeded];
  }
  return result;
}

id sub_1000A434C(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 112) = 1;
  id result = [*(id *)(a1 + 32) visible];
  if (result)
  {
    uint64_t v3 = kCalUILogInboxHandle;
    if (os_log_type_enabled((os_log_t)kCalUILogInboxHandle, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      int v5 = 138543362;
      uint64_t v6 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Will refresh inbox notifications group controller if needed. Inbox notifications group controller: %{public}@.", (uint8_t *)&v5, 0xCu);
    }
    return [*(id *)(a1 + 32) refreshIfNeeded];
  }
  return result;
}

BOOL sub_1000A4898(id a1, EKCalendarNotificationReference *a2, NSDictionary *a3)
{
  return [(EKCalendarNotificationReference *)a2 type] - 6 < 0xFFFFFFFB;
}

BOOL sub_1000A49B0(id a1, EKCalendarNotificationReference *a2, NSDictionary *a3)
{
  unsigned int v3 = [(EKCalendarNotificationReference *)a2 type];
  return v3 > 5 || (v3 & 0x3F) == 1;
}

BOOL sub_1000A4AD0(id a1, EKCalendarNotificationReference *a2, NSDictionary *a3)
{
  unsigned int v3 = [(EKCalendarNotificationReference *)a2 type];
  return (v3 > 5) | (0x1Cu >> v3) & 1;
}

id sub_1000A4DF4(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) isCancelled];
  if ((result & 1) == 0)
  {
    id result = [*(id *)(a1 + 32) isExecuting];
    if ((result & 1) == 0)
    {
      id result = [*(id *)(a1 + 32) isFinished];
      if ((result & 1) == 0)
      {
        unsigned int v3 = *(void **)(a1 + 32);
        return _[v3 main];
      }
    }
  }
  return result;
}

void sub_1000A5054(id a1)
{
  v3[0] = objc_opt_class();
  v3[1] = objc_opt_class();
  uint64_t v1 = +[NSArray arrayWithObjects:v3 count:2];
  uint64_t v2 = (void *)qword_100216738;
  qword_100216738 = v1;
}

void sub_1000A5228(uint64_t a1)
{
  uint64_t v2 = (void *)kCalUILogHandle;
  if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_DEBUG))
  {
    unsigned int v3 = v2;
    uint64_t v4 = objc_opt_class();
    id v5 = v4;
    *(_DWORD *)buf = 138412546;
    id v21 = v4;
    __int16 v22 = 2112;
    id v23 = (id)objc_opt_class();
    id v6 = v23;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "%@ operation instructing %@ to dismiss presented view controller.", buf, 0x16u);
  }
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_1000A5540;
  v19[3] = &unk_1001D2740;
  v19[4] = *(void *)(a1 + 32);
  int v7 = objc_retainBlock(v19);
  id v8 = [*(id *)(*(void *)(a1 + 32) + 8) presentedViewController];
  id v9 = [v8 presentingViewController];
  if (v9 == *(void **)(*(void *)(a1 + 32) + 8))
  {
    unsigned int v10 = 0;
    if (!v8) {
      goto LABEL_10;
    }
  }
  else
  {
    unsigned int v10 = [v8 isBeingDismissed];
    if (!v8)
    {
LABEL_10:
      if (!v8)
      {
        id v15 = (void *)kCalUILogHandle;
        if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_DEBUG))
        {
          double v16 = v15;
          id v17 = objc_opt_class();
          *(_DWORD *)buf = 138412290;
          id v21 = v17;
          id v18 = v17;
          _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEBUG, "Not dismissing. %@ has no presentation", buf, 0xCu);
        }
        goto LABEL_16;
      }
LABEL_11:
      if (v10)
      {
        id v13 = kCalUILogHandle;
        if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v14 = *(void **)(*(void *)(a1 + 32) + 8);
          *(_DWORD *)buf = 138412802;
          id v21 = v14;
          __int16 v22 = 2112;
          id v23 = v8;
          __int16 v24 = 2112;
          long long v25 = v9;
          _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "Not dismissing. %@'s presentation already being dismissed (%@ presented by %@)", buf, 0x20u);
        }
      }
LABEL_16:
      ((void (*)(void *))v7[2])(v7);
      goto LABEL_17;
    }
  }
  if (v10) {
    goto LABEL_10;
  }
  uint64_t v11 = +[DismissPresentedViewControllerOperation blacklistedDismissalClasses];
  unsigned __int8 v12 = [v11 containsObject:objc_opt_class()];

  if (v12) {
    goto LABEL_11;
  }
  [*(id *)(*(void *)(a1 + 32) + 8) dismissViewControllerWithoutEnqueuingWithTransition:*(unsigned int *)(*(void *)(a1 + 32) + 16) completion:v7];
LABEL_17:
}

void sub_1000A5540(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(v2 + 24);
  if (v3)
  {
    (*(void (**)(void))(v3 + 16))();
    uint64_t v2 = *(void *)(a1 + 32);
    uint64_t v4 = *(void **)(v2 + 24);
  }
  else
  {
    uint64_t v4 = 0;
  }
  *(void *)(v2 + 24) = 0;

  id v5 = [*(id *)(a1 + 32) queue];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000A5608;
  block[3] = &unk_1001D2740;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async(v5, block);
}

id sub_1000A5608(uint64_t a1)
{
  return [*(id *)(a1 + 32) finish];
}

void sub_1000A60D4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = [v2 model];
  uint64_t v4 = [v3 selectedDate];
  id v5 = [v4 calendarDateForYear];
  [v2 reinitializeAllViewsWithCalendarDate:v5];

  id v6 = [*(id *)(a1 + 32) view];
  [v6 setNeedsLayout];
}

id sub_1000A6178(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v3.receiver = *(id *)(a1 + 40);
  v3.super_class = (Class)CompactYearViewController;
  return [super viewWillTransitionToSize:v1 withTransitionCoordinator:*(double *)(a1 + 48) *(double *)(a1 + 56)];
}

id sub_1000A61B8(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  uint64_t v2 = *(void **)(a1 + 32);

  return _[v2 transitionToSizeDidEnd];
}

id sub_1000A7DB0(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 120) layoutSubviews];
}

void sub_1000A7DC4(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 112) setSplitStateOpen:1];
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 112) view];
  [v2 setAlpha:0.0];

  [*(id *)(a1 + 32) weekDayInitialsDay];
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  uint64_t v11 = [*(id *)(*(void *)(a1 + 32) + 120) dayInitialsHeaderView];
  [v11 setFrame:v4, v6, v8, v10];

  id v12 = [*(id *)(*(void *)(a1 + 32) + 120) animatableDateLabel];
  [v12 setAlpha:0.0];
}

id sub_1000A7EB8(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 128) setAlpha:1.0];
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 136);

  return [v2 setAlpha:1.0];
}

id sub_1000A7F14(uint64_t a1)
{
  return [*(id *)(a1 + 32) _haltAnimations];
}

id sub_1000A8538(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 120) layoutSubviews];
}

void sub_1000A854C(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 112) setSplitStateOpen:0];
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 112) view];
  [v2 setAlpha:1.0];

  [*(id *)(a1 + 32) weekDayInitialsMonth];
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  uint64_t v11 = [*(id *)(*(void *)(a1 + 32) + 120) dayInitialsHeaderView];
  [v11 setFrame:v4, v6, v8, v10];

  id v12 = [*(id *)(*(void *)(a1 + 32) + 120) animatableDateLabel];
  [v12 setAlpha:1.0];
}

void sub_1000A8640(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 120) dateLabel];
  [v2 setHidden:0];

  id v3 = [*(id *)(*(void *)(a1 + 32) + 120) animatableDateLabel];
  [v3 setAlpha:0.0];
}

id sub_1000A86C8(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 128) setAlpha:0.0];
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 136);

  return [v2 setAlpha:0.0];
}

id sub_1000A8724(uint64_t a1)
{
  return [*(id *)(a1 + 32) _haltAnimations];
}

void sub_1000A88FC()
{
  springAnimateViewAlpha();
  id v0 = (id)objc_claimAutoreleasedReturnValue();
  preferredNavigationAnimationFrameRateRange();
  [v0 setPreferredFrameRateRange:];
}

void sub_1000AA244(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000AA25C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000AA26C(uint64_t a1)
{
}

void sub_1000AA274(uint64_t a1, void *a2)
{
  id v5 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v3 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
    double v4 = [v5 shownViewController];
    [v3 addObject:v4];
  }
}

void sub_1000AA44C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000AA464(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
    *a4 = 1;
  }
}

id sub_1000AAEA8(uint64_t a1)
{
  return [*(id *)(a1 + 32) setViewControllers:&__NSArray0__struct];
}

void sub_1000AB1A8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

void sub_1000AB1E4(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  double v4 = [WeakRetained viewControllers];
  id v5 = [v4 count];

  if (v5)
  {
    double v6 = (void *)kCalUILogHandle;
    if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_DEBUG))
    {
      id v7 = v6;
      double v8 = objc_opt_class();
      double v9 = *(void **)(a1 + 32);
      id v10 = v8;
      uint64_t v11 = [v9 viewControllers];
      id v12 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v11 count]);
      int v15 = 138412546;
      double v16 = v8;
      __int16 v17 = 2112;
      id v18 = v12;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "%@ removing %@ stack view controllers.", (uint8_t *)&v15, 0x16u);
    }
    id v13 = objc_loadWeakRetained(v2);
    [v13 setViewControllers:&__NSArray0__struct animated:0];

    uint64_t v14 = *(void *)(a1 + 40);
    if (v14) {
      (*(void (**)(void))(v14 + 16))();
    }
  }
}

void sub_1000AB374(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 56) && *(unsigned char *)(a1 + 57))
  {
    uint64_t v2 = (void *)kCalUILogHandle;
    if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_DEBUG))
    {
      id v3 = v2;
      id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
      id v5 = objc_opt_class();
      id v6 = v5;
      id v7 = objc_loadWeakRetained((id *)(a1 + 48));
      double v8 = [v7 presentedViewController];
      *(_DWORD *)buf = 138412546;
      double v28 = v5;
      __int16 v29 = 2112;
      id v30 = (id)objc_opt_class();
      id v9 = v30;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "%@ dismissing presented view controller %@.", buf, 0x16u);
    }
    id v10 = *(void **)(a1 + 32);
    v24[0] = _NSConcreteStackBlock;
    v24[1] = 3221225472;
    v24[2] = sub_1000AB690;
    v24[3] = &unk_1001D40E8;
    objc_copyWeak(&v26, (id *)(a1 + 48));
    id v25 = *(id *)(a1 + 40);
    [v10 dismissViewControllerWithTransition:0 completion:v24];

    objc_destroyWeak(&v26);
  }
  else
  {
    id v11 = objc_loadWeakRetained((id *)(a1 + 48));
    id v12 = [v11 viewControllers];
    id v13 = [v12 count];

    if (v13)
    {
      uint64_t v14 = (void *)kCalUILogHandle;
      if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_DEBUG))
      {
        int v15 = v14;
        id v16 = objc_loadWeakRetained((id *)(a1 + 48));
        __int16 v17 = objc_opt_class();
        id v18 = v17;
        id v19 = objc_loadWeakRetained((id *)(a1 + 48));
        id v20 = [v19 viewControllers];
        id v21 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v20 count]);
        *(_DWORD *)buf = 138412546;
        double v28 = v17;
        __int16 v29 = 2112;
        id v30 = v21;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "%@ removing %@ stack view controllers.", buf, 0x16u);
      }
      id v22 = objc_loadWeakRetained((id *)(a1 + 48));
      [v22 setViewControllers:&__NSArray0__struct animated:0];

      uint64_t v23 = *(void *)(a1 + 40);
      if (v23) {
        (*(void (**)(void))(v23 + 16))();
      }
    }
  }
}

void sub_1000AB674(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000AB690(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  double v4 = [WeakRetained viewControllers];
  id v5 = [v4 count];

  if (v5)
  {
    id v6 = (void *)kCalUILogHandle;
    if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_DEBUG))
    {
      id v7 = v6;
      id v8 = objc_loadWeakRetained(v2);
      id v9 = objc_opt_class();
      id v10 = v9;
      id v11 = objc_loadWeakRetained(v2);
      id v12 = [v11 viewControllers];
      id v13 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v12 count]);
      int v16 = 138412546;
      __int16 v17 = v9;
      __int16 v18 = 2112;
      id v19 = v13;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "%@ removing %@ stack view controllers after dismissing presented vc completed.", (uint8_t *)&v16, 0x16u);
    }
    id v14 = objc_loadWeakRetained(v2);
    [v14 setViewControllers:&__NSArray0__struct animated:0];

    uint64_t v15 = *(void *)(a1 + 32);
    if (v15) {
      (*(void (**)(void))(v15 + 16))();
    }
  }
}

void sub_1000AB9FC(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000ABA8C;
  block[3] = &unk_1001D4138;
  long long v2 = *(_OWORD *)(a1 + 32);
  id v1 = (id)v2;
  long long v4 = v2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

uint64_t sub_1000ABA8C(uint64_t a1)
{
  long long v2 = kCalUILogHandle;
  if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v3 = *(void *)(a1 + 40);
    int v5 = 138412290;
    uint64_t v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "%@ executing block operation.", (uint8_t *)&v5, 0xCu);
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000AC6D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000AC6FC(void *a1, void *a2)
{
  id result = [a2 setFrame:*(double *)(*(void *)(a1[4] + 8) + 32), *(double *)(*(void *)(a1[4] + 8) + 40), *(double *)(*(void *)(a1[4] + 8) + 48), *(double *)(*(void *)(a1[4] + 8) + 56)];
  if (++*(void *)(*(void *)(a1[5] + 8) + 24) <= a1[6])
  {
    CGRectGetMaxX(*(CGRect *)(*(void *)(a1[4] + 8) + 32));
    id result = (id)CalRoundToScreenScale();
    *(void *)(*(void *)(a1[4] + 8) + 32) = v4;
  }
  return result;
}

id sub_1000ACA1C(uint64_t a1, void *a2)
{
  return [a2 setOverlaySignificantDatesProvider:*(void *)(a1 + 32)];
}

id sub_1000ACAC8(uint64_t a1, void *a2)
{
  return _[a2 overlaySignificantDatesChangedInRange:*(void *)(a1 + 32)];
}

id sub_1000AD220(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 24) setAlpha:0.0];
}

id sub_1000AD3A0(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 24) setAlpha:1.0];
}

void sub_1000AEA94(uint64_t a1, void *a2)
{
  long long v2 = *(void **)(a1 + 32);
  id v3 = a2;
  [v3 setHorizontalSizeClass:[v2 activeWidthSizeClass]];
}

id sub_1000AEE08(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateUserActivity];
}

id sub_1000AEE10(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _updateAfterExtendedLaunch:0];
}

id sub_1000AEE1C(uint64_t a1)
{
  [*(id *)(a1 + 32) updateSelectedDateForJumpToTodayTip];
  long long v2 = *(void **)(a1 + 32);

  return [v2 updateShouldDisplayJumpToTodayTip];
}

id sub_1000AEFA0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  long long v2 = [WeakRetained delegatesMenu];

  return v2;
}

id sub_1000AEFEC(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

id sub_1000AF0E8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateFilterLabel];
}

id sub_1000AF1C8(uint64_t a1)
{
  return [*(id *)(a1 + 32) toggleDayViewMode:0];
}

id sub_1000AF1D4(uint64_t a1)
{
  return [*(id *)(a1 + 32) toggleDayViewMode:1];
}

id sub_1000AF1E0(uint64_t a1)
{
  return [*(id *)(a1 + 32) toggleDayViewMode:2];
}

void sub_1000AF1EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v7 = [WeakRetained topMainViewControllerContainer];
  id v8 = [v7 currentChildViewController];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass)
  {
    id v10 = [WeakRetained topMainViewControllerContainer];
    id v11 = [v10 currentChildViewController];

    [v11 animateToMonthWeekSize:a2 divided:a3];
    [*(id *)(a1 + 32) updateDividedMonthBarButtonItem];
  }
  id v12 = [WeakRetained addEventBarButtonItem];
  id v13 = [WeakRetained searchBarButtonItem:v12];
  v18[1] = v13;
  id v14 = [WeakRetained _compactMonthDividedListSwitchBarButtonItem];
  v18[2] = v14;
  uint64_t v15 = +[NSArray arrayWithObjects:v18 count:3];

  int v16 = [WeakRetained topViewController];
  __int16 v17 = [v16 navigationItem];
  [v17 setRightBarButtonItems:v15 animated:0];
}

uint64_t sub_1000AF384(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1000AF39C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000AF3B4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = +[CUIKPreferences sharedPreferences];
  (*(void (**)(uint64_t, id, void))(v1 + 16))(v1, [v2 monthViewEventScaleSize], 0);
}

uint64_t sub_1000AF420(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000AF5F0(id a1, RootNavigationController *a2)
{
  id v2 = [(RootNavigationController *)a2 showSearchAnimated:1 becomeFirstResponder:0 completion:0];

  CalAnalyticsSendEvent();
}

id sub_1000AF730(uint64_t a1, void *a2)
{
  return [a2 showSearchAnimated:1 becomeFirstResponder:0 completion:*(void *)(a1 + 32)];
}

uint64_t sub_1000AF760(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000AF78C(id a1, RootNavigationController *a2)
{
  id v2 = (void *)UIApp;
  id v3 = a2;
  if ([v2 isRunningTest]) {
    uint64_t v4 = &stru_1001D43C8;
  }
  else {
    uint64_t v4 = 0;
  }
  [(RootNavigationController *)v3 showAddEventAnimated:1 completion:v4];

  CalAnalyticsSendEvent();
}

void sub_1000AF800(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"AddEventButton_AnimationCompleteNotification" object:0];
}

void sub_1000AF86C(id a1, RootNavigationController *a2)
{
  int v5 = a2;
  id v2 = [(RootNavigationController *)v5 model];
  unsigned int v3 = [v2 showDayAsList];

  if (v3) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = 2;
  }
  [(RootNavigationController *)v5 toggleDayViewMode:v4];
}

void sub_1000AFAC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000AFAE8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  unsigned int v3 = WeakRetained;
  if (!WeakRetained)
  {
    int v5 = kCalUILogHandle;
    if (!os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_INFO)) {
      goto LABEL_9;
    }
    uint64_t v9 = *(void *)(a1 + 32);
    int v11 = 138543362;
    uint64_t v12 = v9;
    id v8 = "Suppressing %{public}@ because RootNavigationController has been deallocated.";
    goto LABEL_8;
  }
  if (([WeakRetained _isCurrentlyDraggingEvent] & 1) == 0)
  {
    uint64_t v4 = [v3 presentedViewController];

    if (!v4)
    {
      (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
      goto LABEL_11;
    }
  }
  int v5 = kCalUILogHandle;
  if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_INFO))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    int v11 = 138543362;
    uint64_t v12 = v7;
    id v8 = "%{public}@ suppressed due to active event gestures, or presented view controller.";
LABEL_8:
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, v8, (uint8_t *)&v11, 0xCu);
  }
LABEL_9:
  uint64_t v10 = *(void *)(a1 + 40);
  if (v10) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v10, v6);
  }
LABEL_11:
}

void sub_1000B00BC(id a1, RootNavigationController *a2)
{
  id v2 = a2;
  unsigned int v3 = v2;
  if (v2->_showingAccountErrors && !v2->_interactedWithCalendarButtonForCurrentError)
  {
    +[EKUIAccountErrorsAnalyticsTracker trackRootUIInteractedWithError];
    id v2 = v3;
    v3->_interactedWithCalendarButtonForCurrentError = 1;
  }
  [(RootNavigationController *)v2 showCalendarsAnimated:1 completion:0];
}

id sub_1000B025C(uint64_t a1, void *a2)
{
  return [a2 showCalendarsAnimated:1 completion:*(void *)(a1 + 32)];
}

uint64_t sub_1000B026C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000B0298(id a1, RootNavigationController *a2)
{
  id v2 = [(RootNavigationController *)a2 showInboxAnimated:1 completion:0];
}

id sub_1000B0364(uint64_t a1, void *a2)
{
  return [a2 showInboxAnimated:1 completion:*(void *)(a1 + 32)];
}

void sub_1000B0648(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) topMainViewControllerContainer];
  id v2 = [v5 currentChildViewController];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if ((isKindOfClass & 1) == 0) {
    [v5 invalidateManagedNavigationController];
  }
  uint64_t v4 = *(void *)(a1 + 40);
  if (v4) {
    (*(void (**)(uint64_t, void))(v4 + 16))(v4, *(unsigned __int8 *)(a1 + 48));
  }
}

BOOL sub_1000B07C0(id a1, UIViewController *a2)
{
  id v2 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

id sub_1000B0A3C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _showCalendarsAnimated:*(unsigned __int8 *)(a1 + 48) completion:*(void *)(a1 + 40)];
}

uint64_t sub_1000B0B6C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(*(void *)(a1 + 32) + 168));
  }
  return result;
}

void sub_1000B1054(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,id a37)
{
}

void sub_1000B10C0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    id v2 = [WeakRetained model];
    [v2 updateSourceForSelectedIdentity:0 selectedCalendars:0];

    id WeakRetained = v3;
  }
}

void sub_1000B1124(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    id v3 = [WeakRetained model];
    [v3 updateSourceForSelectedIdentity:*(void *)(a1 + 32) selectedCalendars:0];

    id WeakRetained = v4;
  }
}

void sub_1000B1474(uint64_t a1, int a2)
{
  if (a2)
  {
    id v3 = [*(id *)(a1 + 32) _popToViewControllerSatisfying:&stru_1001D4500];
    if (v3)
    {
      id v4 = [AddEventViewController alloc];
      id v5 = [*(id *)(a1 + 32) model];
      uint64_t v6 = [(AddEventViewController *)v4 initWithModel:v5 eventTitle:*(void *)(a1 + 40) startDate:*(void *)(a1 + 48) endDate:*(void *)(a1 + 56) location:*(void *)(a1 + 64)];

      [(AddEventViewController *)v6 setPresentedOverWholeApp:1];
      [(AddEventViewController *)v6 setAllDay:*(unsigned __int8 *)(a1 + 104)];
      [(AddEventViewController *)v6 setExactEventStartDate:*(void *)(a1 + 72)];
      [(AddEventViewController *)v6 setSuggestionKey:*(void *)(a1 + 80)];
      [(AddEventViewController *)v6 setDelegate:*(void *)(a1 + 32)];
      [(AddEventViewController *)v6 setEventCreationMethod:2];
      uint64_t v7 = [*(id *)(a1 + 32) topViewController];
      char v8 = objc_opt_respondsToSelector();

      if (v8)
      {
        uint64_t v9 = [*(id *)(a1 + 32) topViewController];
        -[AddEventViewController setShowEventWhenAdded:](v6, "setShowEventWhenAdded:", [v9 showEventDetailsWhenNewEventAdded]);
      }
      uint64_t v10 = *(void **)(a1 + 32);
      int v11 = *(void **)(a1 + 88);
      uint64_t v12 = v11;
      if (!v11)
      {
        uint64_t v12 = [*(id *)(a1 + 32) addEventBarButtonItem];
      }
      EKUIContainedControllerIdealWidth();
      double v14 = v13;
      EKUIContainedControllerIdealWidth();
      double v16 = v15;
      EKUIGoldenRatioPhi();
      [v10 _presentAdaptiveModalPopoverViewController:v6 relativeToBarButtonItem:v12 permittedArrowDirections:1 contentSize:[v10 contentSizeForPopoverPresentation] animated:v14 completion:v16];
      if (!v11) {
    }
      }
    else
    {
      __int16 v18 = kCalUILogHandle;
      if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)id v19 = 0;
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "The current top view controller does not allow the add event view to be displayed above it.", v19, 2u);
      }
    }
  }
}

BOOL sub_1000B1658(id a1, UIViewController *a2)
{
  id v2 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

void sub_1000B17D4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = [a2 presentingViewController];
  uint64_t v7 = [v6 presentedViewController];

  if (v7)
  {
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_1000B18D8;
    _OWORD v11[3] = &unk_1001D4550;
    id v8 = v5;
    uint64_t v9 = *(void **)(a1 + 40);
    v11[4] = *(void *)(a1 + 32);
    id v12 = v8;
    id v13 = v9;
    [v6 dismissViewControllerAnimated:1 completion:v11];
    uint64_t v10 = [*(id *)(a1 + 32) todayBarButtonItem];
    [v10 setEnabled:1];

    [*(id *)(a1 + 32) _updateCalendarsButtonTitle];
  }
}

uint64_t sub_1000B18D8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2)
  {
    id v3 = [*(id *)(a1 + 32) topMainViewControllerContainer];
    (*(void (**)(uint64_t, void *))(v2 + 16))(v2, v3);
  }
  id v4 = [*(id *)(a1 + 32) topMainViewControllerContainer];
  unsigned int v5 = [v4 shouldInvalidateManagedNavigationControllerOnPresentationDismissal];

  if (v5)
  {
    uint64_t v6 = [*(id *)(a1 + 32) topMainViewControllerContainer];
    [v6 invalidateManagedNavigationController];
  }
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    id v8 = *(uint64_t (**)(void))(result + 16);
    return v8();
  }
  return result;
}

void sub_1000B2058(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  id v3 = [*(id *)(a1 + 32) window];
  EKUIPopFallbackSizingContextWithViewHierarchy();
}

void sub_1000B2274(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id *sub_1000B2290(id *result, int a2)
{
  if (a2)
  {
    v2[0] = _NSConcreteStackBlock;
    v2[1] = 3221225472;
    v2[2] = sub_1000B2314;
    v2[3] = &unk_1001D45A0;
    return (id *)[result[4] _popToViewControllerSatisfying:v2];
  }
  return result;
}

uint64_t sub_1000B2314(uint64_t a1, void *a2)
{
  id v3 = [a2 navigationItem];
  id v4 = [v3 rightBarButtonItems];
  unsigned int v5 = [*(id *)(a1 + 32) searchBarButtonItem];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v4 containsObject:v5];

  return *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
}

void sub_1000B282C(id a1, UIMutableTraits *a2)
{
}

id sub_1000B2838(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _showSearchController:*(void *)(a1 + 40) withSearchBar:*(void *)(a1 + 48) animated:*(unsigned __int8 *)(a1 + 64) becomeFirstResponder:*(unsigned __int8 *)(a1 + 65) completion:*(void *)(a1 + 56)];
}

void sub_1000B2950(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000B2A14;
  block[3] = &unk_1001D4658;
  char v9 = *(unsigned char *)(a1 + 64);
  id v5 = *(id *)(a1 + 32);
  id v8 = *(id *)(a1 + 56);
  id v2 = *(id *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  id v6 = v2;
  uint64_t v7 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_1000B2A14(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 64)) {
    [*(id *)(a1 + 32) becomeFirstResponder];
  }
  uint64_t v2 = *(void *)(a1 + 56);
  if (v2) {
    (*(void (**)(uint64_t, void))(v2 + 16))(v2, *(void *)(a1 + 40));
  }
  uint64_t v3 = *(void **)(a1 + 48);

  return [v3 setNeedsUpdateOfSupportedInterfaceOrientations];
}

void sub_1000B313C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = [*(id *)(a1 + 32) topMainViewControllerContainer];
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

id sub_1000B3198(uint64_t a1)
{
  return [*(id *)(a1 + 32) attemptDisplayReviewPrompt];
}

id sub_1000B31A0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = [*(id *)(a1 + 32) topMainViewControllerContainer];
  (*(void (**)(uint64_t, void *))(v2 + 16))(v2, v3);

  id v4 = *(void **)(a1 + 32);

  return [v4 attemptDisplayReviewPrompt];
}

void sub_1000B373C(uint64_t a1, void *a2)
{
  unsigned int v3 = [a2 isCancelled];
  id v4 = *(void **)(a1 + 32);
  if (v3)
  {
    id v7 = [*(id *)(a1 + 32) disappearingViewController];
    [v4 _updatePaletteStateWithViewController:v7];
  }
  else
  {
    uint64_t v5 = *(void *)(a1 + 40);
    id v6 = *(void **)(a1 + 32);
    [v6 _updatePaletteStateWithViewController:v5];
  }
}

id sub_1000B37CC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updatePaletteStateWithViewController:*(void *)(a1 + 40)];
}

void sub_1000B3BA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000B3BC0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000B3BD0(uint64_t a1)
{
}

id sub_1000B3BD8(uint64_t a1)
{
  return [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) setAlpha:0.0];
}

id sub_1000B3BEC(uint64_t a1)
{
  return [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) removeFromSuperview];
}

void sub_1000B4AB4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  unsigned int v3 = [v2 topViewController];
  [v2 _updatePaletteStateWithViewController:v3];

  [*(id *)(a1 + 32) _updateLeftFixedSpaceBarButtonItemWidthWithViewController:*(void *)(a1 + 40) targetWindowSize:*(double *)(a1 + 48) targetWindowSize:*(double *)(a1 + 56)];
  id v4 = [*(id *)(a1 + 32) navigationBar];
  [v4 setNeedsLayout];

  uint64_t v5 = [*(id *)(a1 + 32) viewSwitcherLayoutHandler];

  if (v5)
  {
    id v6 = [*(id *)(a1 + 32) viewSwitcherLayoutHandler];
    [v6 rootNavigationControllerRequestsLayoutOfViewSwitcher:*(void *)(a1 + 32)];
  }
}

id sub_1000B4B84(uint64_t a1)
{
  [*(id *)(a1 + 32) _invalidateNavBarDateStringCache];
  if (objc_opt_respondsToSelector()) {
    [*(id *)(a1 + 40) updateNavigationBarDisplayedDateString];
  }
  uint64_t v2 = *(void **)(a1 + 32);

  return _[v2 updateDeviceOrientationForJumpToTodayTip];
}

void sub_1000B4E48(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

id sub_1000B4E60(uint64_t a1)
{
  return [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) setAlpha:0.0];
}

void sub_1000B4E74(uint64_t a1, void *a2)
{
  id v3 = a2;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  id v4 = [*(id *)(a1 + 32) topViewController];
  uint64_t v5 = [v4 view];
  id v6 = [v5 layer];
  id v7 = [v6 sublayers];

  id v8 = [v7 countByEnumeratingWithState:&v28 objects:v33 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v29;
    do
    {
      for (uint64_t i = 0; i != v9; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v29 != v10) {
          objc_enumerationMutation(v7);
        }
        [(id)objc_opt_class() recursiveAnimationRemove:*(void *)(*((void *)&v28 + 1) + 8 * i)];
      }
      id v9 = [v7 countByEnumeratingWithState:&v28 objects:v33 count:16];
    }
    while (v9);
  }

  long long v26 = 0u;
  long long v27 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  id v12 = [*(id *)(a1 + 32) navigationBar];
  id v13 = [v12 superview];
  double v14 = [v13 layer];
  double v15 = [v14 sublayers];

  id v16 = [v15 countByEnumeratingWithState:&v24 objects:v32 count:16];
  if (v16)
  {
    id v17 = v16;
    uint64_t v18 = *(void *)v25;
    do
    {
      for (j = 0; j != v17; j = (char *)j + 1)
      {
        if (*(void *)v25 != v18) {
          objc_enumerationMutation(v15);
        }
        [*(id *)(a1 + 32) recursiveAnimationRemoveForSmallLayers:*(void *)(*((void *)&v24 + 1) + 8 * (void)j)];
      }
      id v17 = [v15 countByEnumeratingWithState:&v24 objects:v32 count:16];
    }
    while (v17);
  }

  id v20 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  id v21 = [v3 containerView];
  id v22 = v21;
  if (v21) {
    [v21 transform];
  }
  else {
    memset(v23, 0, sizeof(v23));
  }
  [v20 setTransform:v23];
}

id sub_1000B50D0(uint64_t a1)
{
  return [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) removeFromSuperview];
}

BOOL sub_1000B5498(id a1, UIViewController *a2)
{
  uint64_t v2 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

void sub_1000B5ED8(uint64_t a1)
{
  uint64_t v2 = (void *)kCalUILogHandle;
  if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_DEBUG))
  {
    id v3 = v2;
    id v4 = objc_opt_class();
    id v5 = v4;
    *(_DWORD *)buf = 138412546;
    double v15 = v4;
    __int16 v16 = 2112;
    id v17 = (id)objc_opt_class();
    id v6 = v17;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Completion handler for: [%@ showViewController:%@ sender:::]", buf, 0x16u);
  }
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1000B60B4;
  v9[3] = &unk_1001D2EB8;
  id v7 = *(void **)(a1 + 56);
  v9[4] = *(void *)(a1 + 48);
  id v10 = v7;
  id v11 = *(id *)(a1 + 40);
  id v12 = *(id *)(a1 + 64);
  id v13 = *(id *)(a1 + 72);
  id v8 = objc_retainBlock(v9);
  if (+[NSThread isMainThread]) {
    ((void (*)(void *))v8[2])(v8);
  }
  else {
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v8);
  }
}

void sub_1000B60B4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) window];
  EKUIPushFallbackSizingContextWithViewHierarchy();

  id v6 = *(id *)(a1 + 40);
  if ([*(id *)(a1 + 48) prefersForcedModalShowViewController])
  {
    id v3 = *(id *)(a1 + 48);

    id v4 = v3;
  }
  else
  {
    id v4 = v6;
  }
  id v7 = v4;
  [*(id *)(a1 + 32) _replayJournal:*(void *)(a1 + 56) withRootVC:v4 topMainVC:*(void *)(a1 + 64)];
  id v5 = [*(id *)(a1 + 32) window];
  EKUIPopFallbackSizingContextWithViewHierarchy();
}

void sub_1000B616C(uint64_t a1)
{
  if ([*(id *)(a1 + 32) displayType] == (id)1)
  {
    uint64_t v2 = [*(id *)(a1 + 40) presentingViewController];
    if (v2 || *(unsigned char *)(a1 + 72)) {
      unsigned __int8 v3 = 1;
    }
    else {
      unsigned __int8 v3 = [*(id *)(a1 + 48) _viewControllerRequiresSystemPresentation:*(void *)(a1 + 56)];
    }
  }
  else
  {
    unsigned __int8 v3 = 0;
  }
  if (*(unsigned char *)(a1 + 73))
  {
    if (*(unsigned char *)(a1 + 74))
    {
      objc_opt_class();
      char isKindOfClass = objc_opt_isKindOfClass();
      id v5 = *(void **)(a1 + 40);
      if (isKindOfClass)
      {
        id v6 = v5;
      }
      else
      {
        id v6 = [v5 navigationController];
      }
      id v23 = v6;
      [v6 pushViewController:*(void *)(a1 + 56) animated:0];
    }
    else
    {
      if ([*(id *)(a1 + 56) modalPresentationStyle] == (id)7)
      {
        double v14 = [*(id *)(a1 + 40) view];
        double v15 = [*(id *)(a1 + 56) popoverPresentationController];
        [v15 setSourceView:v14];
      }
      __int16 v16 = *(void **)(a1 + 40);
      uint64_t v17 = *(void *)(a1 + 56);
      uint64_t v18 = *(void *)(a1 + 64);
      [v16 presentViewController:v17 animated:0 completion:v18];
    }
  }
  else
  {
    char v7 = v3 | ~objc_opt_respondsToSelector();
    id v8 = (void *)kCalUILogHandle;
    BOOL v9 = os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_DEFAULT);
    if (v7)
    {
      if (v9)
      {
        id v10 = v8;
        id v11 = objc_opt_class();
        id v12 = v11;
        *(_DWORD *)buf = 138412546;
        long long v25 = v11;
        __int16 v26 = 2112;
        id v27 = (id)objc_opt_class();
        id v13 = v27;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Calling [%@ presentViewController:%@]", buf, 0x16u);
      }
      [*(id *)(a1 + 40) presentViewController:*(void *)(a1 + 56) animated:0 completion:*(void *)(a1 + 64)];
    }
    else
    {
      if (v9)
      {
        id v19 = v8;
        id v20 = objc_opt_class();
        id v21 = v20;
        *(_DWORD *)buf = 138412546;
        long long v25 = v20;
        __int16 v26 = 2112;
        id v27 = (id)objc_opt_class();
        id v22 = v27;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "Calling [%@ showViewController:%@ sender:::]", buf, 0x16u);
      }
      [*(id *)(a1 + 40) showViewController:*(void *)(a1 + 56) sender:*(void *)(a1 + 48) animated:0 completion:*(void *)(a1 + 64)];
    }
  }
}

void sub_1000B6C80(uint64_t a1)
{
  [*(id *)(a1 + 32) _setNavigationStackOfMainViewControllersForTraitsTransitionFromTraitCollection:*(void *)(a1 + 40) toNewTraitCollection:*(void *)(a1 + 48) withPreTransitionViewType:*(void *)(a1 + 64) withPreferredPostTransitionViewType:*(void *)(a1 + 72)];
  id v6 = [*(id *)(a1 + 32) topMainViewControllerContainer];
  [v6 setupForViewAppearance];
  uint64_t v2 = [v6 currentChildViewController];
  if (objc_opt_respondsToSelector()) {
    [v2 setIsWaitingForBackgroundLoadingOfSelectedEventOccurrenceView:[*(id *)(a1 + 56) isEmpty] ^ 1];
  }
  unsigned __int8 v3 = [v2 viewControllerToShowFrom];
  unsigned __int8 v4 = [v3 isEqual:*(void *)(a1 + 32)];

  if ((v4 & 1) == 0) {
    id v5 = [v2 managedNavigationController];
  }
  +[CATransaction begin];
  +[CATransaction setDisableActions:1];
  [*(id *)(a1 + 32) _replayJournal:*(void *)(a1 + 56) withRootVC:v2 topMainVC:v2];
  +[CATransaction commit];
}

void sub_1000B6D88(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (*(void *)(a1 + 32))
  {
    NSClassFromString(@"_UIDatePickerWheelsTimeLabel");
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      [*(id *)(a1 + 32) becomeFirstResponder];
    }
  }
  if (+[ApplicationTester testingSessionStarted])
  {
    unsigned __int8 v3 = +[NSNotificationCenter defaultCenter];
    [v3 postNotificationName:@"RootNavigationController_TransitionCompletedNotification" object:*(void *)(a1 + 40)];
  }
  [*(id *)(a1 + 40) _adjustNavBarVisibilityAfterTraitCollectionChange];
}

void sub_1000B6E38(uint64_t a1)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:@"RootNavigationController_TransitionStartedNotification" object:*(void *)(a1 + 32)];
}

void sub_1000B788C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) topMainViewControllerContainer];
  [v2 selectDate:*(void *)(a1 + 40) andTime:*(unsigned __int8 *)(a1 + 48) animated:*(unsigned __int8 *)(a1 + 49)];
}

void sub_1000B7B08(uint64_t a1, int a2)
{
  if (a2)
  {
    id v9 = [*(id *)(a1 + 32) model];
    unsigned __int8 v3 = [*(id *)(a1 + 40) calendar];
    id v4 = v3;
    if (v3)
    {
      id v5 = [v3 objectID];
      [v9 ensureCalendarVisibleWithId:v5];
    }
    id v6 = [*(id *)(a1 + 40) startCalendarDate];
    [v9 setSelectedDate:v6];
    char v7 = [*(id *)(a1 + 32) _popToViewControllerSatisfying:&stru_1001D47B0];
    id v8 = v7;
    if (v7) {
      [v7 showEvent:*(void *)(a1 + 40) animated:*(unsigned __int8 *)(a1 + 64) showMode:*(void *)(a1 + 56) context:*(void *)(a1 + 48)];
    }
  }
}

BOOL sub_1000B7BF0(id a1, UIViewController *a2)
{
  id v2 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

void sub_1000B7CD4(uint64_t a1)
{
  id v2 = +[CalContactsProvider defaultProvider];
  uint64_t v3 = *(void *)(a1 + 32);
  v19[0] = CNContactGivenNameKey;
  v19[1] = CNContactFamilyNameKey;
  id v4 = +[NSArray arrayWithObjects:v19 count:2];
  id v5 = [v2 unifiedContactWithIdentifier:v3 keysToFetch:v4];

  if (v5)
  {
    id v6 = objc_opt_new();
    char v7 = [v5 givenName];
    [v6 setGivenName:v7];

    id v8 = [v5 familyName];
    [v6 setFamilyName:v8];

    id v9 = objc_opt_new();
    id v10 = [v9 stringFromPersonNameComponents:v6];
    id v11 = [*(id *)(a1 + 40) topViewController];
    id v12 = [v11 navigationItem];
    id v13 = [v12 rightBarButtonItems];
    double v14 = [*(id *)(a1 + 40) searchBarButtonItem];
    unsigned int v15 = [v13 containsObject:v14];

    if ([v10 length] && v15)
    {
      __int16 v16 = [*(id *)(a1 + 40) presentedViewController];

      if (v16) {
        [*(id *)(a1 + 40) dismissViewControllerAnimated:0 completion:0];
      }
      uint64_t v17 = [*(id *)(a1 + 40) showSearchAnimated:1 becomeFirstResponder:0 completion:0];
      uint64_t v18 = [v17 searchBar];
      [v18 setText:v10];
    }
  }
}

void sub_1000B8C64(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) topMainViewControllerContainer];
  id v6 = [v2 bestDateForNewEvent];

  uint64_t v3 = [*(id *)(a1 + 32) window];
  EKUIPushFallbackSizingContextWithViewHierarchy();

  id v4 = [*(id *)(a1 + 32) pushCalendarViewControllerWithViewType:*(void *)(a1 + 40) andDate:v6];
  [v4 viewSwitcherSwitchedToViewWithDate:v6];
  id v5 = [*(id *)(a1 + 32) window];
  EKUIPopFallbackSizingContextWithViewHierarchy();
}

void sub_1000B924C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000B9264(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 _switcherFontOfSize:0 isSemibold:16.0];
  NSAttributedStringKey v10 = NSFontAttributeName;
  id v11 = v5;
  id v6 = +[NSDictionary dictionaryWithObjects:&v11 forKeys:&v10 count:1];
  id v7 = [objc_alloc((Class)NSAttributedString) initWithString:v4 attributes:v6];

  [v7 boundingRectWithSize:0 options:0 context:1.79769313e308 1.79769313e308];
  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  if (v8 > *(double *)(v9 + 24)) {
    *(double *)(v9 + 24) = v8;
  }
}

void sub_1000B96E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000B9700(double *a1, void *a2)
{
  uint64_t v3 = (void *)*((void *)a1 + 4);
  double v4 = a1[6];
  id v5 = a2;
  id v6 = [v3 _switcherFontOfSize:0 isSemibold:v4];
  NSAttributedStringKey v11 = NSFontAttributeName;
  id v12 = v6;
  id v7 = +[NSDictionary dictionaryWithObjects:&v12 forKeys:&v11 count:1];
  id v8 = [objc_alloc((Class)NSAttributedString) initWithString:v5 attributes:v7];

  [v8 boundingRectWithSize:0 options:0 context:1.79769313e308];
  uint64_t v10 = *(void *)(*((void *)a1 + 5) + 8);
  if (v9 > *(double *)(v10 + 24)) {
    *(double *)(v10 + 24) = v9;
  }
}

void sub_1000B98F0(id a1)
{
  uint64_t v3 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v1 = dispatch_queue_create("com.apple.mobilecal.notificationCountUpdateQ", v3);
  id v2 = (void *)qword_100216768;
  qword_100216768 = (uint64_t)v1;
}

void sub_1000B9954(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) eventNotificationsForCurrentIdentityCount];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  void v3[2] = sub_1000B99E0;
  v3[3] = &unk_1001D2A40;
  void v3[4] = *(void *)(a1 + 40);
  v3[5] = v2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v3);
}

id sub_1000B99E0(uint64_t a1)
{
  [*(id *)(a1 + 32) setNumberOfNotifications:*(void *)(a1 + 40)];
  id v2 = kCalUILogHandle;
  if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Broadcasting darwin notification to update badge count", v5, 2u);
  }
  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterPostNotification(DarwinNotifyCenter, _EKNotificationCountChangedExternallyNotification, 0, 0, 1u);
  id result = [*(id *)(a1 + 32) showingOverriddenToolbarItems];
  if (result) {
    return [*(id *)(a1 + 32) _updateInboxBarButtonItem];
  }
  return result;
}

void sub_1000BA278(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) showInboxAnimated:0];
  [v2 showEvent:*(void *)(a1 + 40) animated:0];
}

void sub_1000BA2D4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) eventStore];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  void v3[2] = sub_1000BA364;
  v3[3] = &unk_1001D4870;
  void v3[4] = *(void *)(a1 + 40);
  [v2 familyCalendarsWithCompletion:v3];
}

void sub_1000BA364(uint64_t a1, void *a2)
{
  id v4 = a2;
  if ([v4 count] == (id)1)
  {
    uint64_t v3 = [v4 firstObject];
    [*(id *)(a1 + 32) showCalendar:v3];
  }
}

void sub_1000BA64C(id a1)
{
  byte_100216778 = objc_opt_class() != 0;
}

void sub_1000BA834(uint64_t a1, int a2)
{
  if (a2)
  {
    id v2 = *(void **)(a1 + 32);
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    void v3[2] = sub_1000BA8D0;
    v3[3] = &unk_1001D4898;
    void v3[4] = v2;
    id v4 = *(id *)(a1 + 40);
    [v2 showCalendarsAnimated:1 completion:v3];
  }
}

id sub_1000BA8D0(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 168) showAddSubscribedCalendarWithURL:*(void *)(a1 + 40)];
}

uint64_t sub_1000BB598(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 181) = 0;
  return result;
}

void sub_1000BB7B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_1000BB7D4(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    double v9 = WeakRetained;
    uint64_t v3 = [WeakRetained topViewController];
    id v4 = [v3 navigationItem];
    id v5 = [v4 rightBarButtonItems];
    unsigned int v6 = [v5 containsObject:v9[2]];

    id v7 = [v9 presentedViewController];
    if (v7 || !v6)
    {
    }
    else
    {
      id WeakRetained = (id *)[v9[2] isEnabled];
      id v2 = v9;
      if (!WeakRetained) {
        goto LABEL_8;
      }
      id WeakRetained = (id *)[v9 showAddEventAnimated:1 completion:0];
    }
    id v2 = v9;
  }
LABEL_8:

  return _objc_release_x1(WeakRetained, v2);
}

void sub_1000BB98C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000BB9A8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v8 = WeakRetained;
    id v2 = [WeakRetained topViewController];
    uint64_t v3 = [v2 navigationItem];
    id v4 = [v3 rightBarButtonItems];
    unsigned int v5 = [v4 containsObject:v8[3]];

    unsigned int v6 = [v8 presentedViewController];

    id WeakRetained = v8;
    if (!v6)
    {
      if (v5)
      {
        id v7 = [v8 showSearchAnimated:1 becomeFirstResponder:1 completion:0];
        id WeakRetained = v8;
      }
    }
  }
}

void sub_1000BBD44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000BBD60(uint64_t a1, void *a2, uint64_t a3)
{
  unsigned int v5 = (id *)(a1 + 40);
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained(v5);
  id v8 = [WeakRetained modifiedStartDate];
  [v6 setStartDate:v8];

  id v9 = objc_loadWeakRetained(v5);
  uint64_t v10 = [v9 modifiedEndDate];
  [v6 setEndDateUnadjustedForLegacyClients:v10];

  [*(id *)(a1 + 32) EKUI_editor];
  id v11 = (id)objc_claimAutoreleasedReturnValue();
  [v11 saveEvent:v6 span:a3 error:0];
}

id sub_1000BCE90(uint64_t a1)
{
  [*(id *)(a1 + 32) setAnimatingViewTransition:0];
  [*(id *)(a1 + 40) setAnimatingViewTransition:0];
  id v2 = [*(id *)(a1 + 48) transitionView];
  [v2 removeFromSuperview];

  uint64_t v3 = *(void **)(a1 + 56);

  return [v3 completeTransition:1];
}

id sub_1000BCEF8(uint64_t a1)
{
  [*(id *)(a1 + 32) setAnimatingViewTransition:0];
  [*(id *)(a1 + 40) setAnimatingViewTransition:0];
  id v2 = [*(id *)(a1 + 48) transitionView];
  [v2 removeFromSuperview];

  uint64_t v3 = *(void **)(a1 + 56);

  return [v3 completeTransition:1];
}

void sub_1000BDE3C(id a1)
{
  id v1 = objc_alloc_init((Class)UILabel);
  id v2 = (void *)qword_100216788;
  qword_100216788 = (uint64_t)v1;

  id v3 = objc_alloc_init((Class)UILabel);
  id v4 = (void *)qword_100216790;
  qword_100216790 = (uint64_t)v3;

  unsigned int v5 = CUIKLocalizedStringForInteger();
  [(id)qword_100216788 setText:v5];

  CUIKLocalizedStringForInteger();
  id v6 = (id)objc_claimAutoreleasedReturnValue();
  [(id)qword_100216790 setText:v6];
}

id sub_1000BF3F0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _setDoneButtonState];
}

void sub_1000C0528(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000C0554(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    long long v14 = 0u;
    long long v15 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    id v3 = WeakRetained[14];
    id v4 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = *(void *)v13;
      do
      {
        for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v13 != v6) {
            objc_enumerationMutation(v3);
          }
          id v8 = *(void **)(*((void *)&v12 + 1) + 8 * i);
          [v8 updateDayNumber:v12];
          [v8 updateOverlay];
        }
        id v5 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
      }
      while (v5);
    }

    [v2[17] hideOverlayAndNumber:1];
    if ([v2 compressedVerticalMode]) {
      +[UIColor clearColor];
    }
    else {
    id v9 = +[UIColor systemBackgroundColor];
    }
    [v2[8] setBackgroundColor:v9];
    uint64_t v10 = [v2[17] attachedTodayCircle];
    [v10 setBackgroundColor:v9];

    [v2 _forceReloadImagesForDayTypeBadges];
    id v11 = [v2[20] layer];
    [v11 setNeedsDisplay];
  }
}

void sub_1000C07FC(id a1)
{
  uint64_t v1 = +[UIColor secondaryLabelColor];
  uint64_t v2 = qword_1002167A0;
  qword_1002167A0 = v1;

  _objc_release_x1(v1, v2);
}

void sub_1000C1024(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = __cachedCalculatedValues;
  __cachedCalculatedValues = v1;

  _objc_release_x1(v1, v2);
}

void sub_1000C2A2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
}

void sub_1000C2AAC(uint64_t a1, void *a2, uint64_t a3)
{
  id v85 = a2;
  [v85 frame];
  double Width = CGRectGetWidth(v87);
  [v85 frame];
  double v7 = v6;
  id v8 = [v85 layer];
  [v8 frame];
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  CGFloat v14 = v13;
  CGFloat v16 = v15;
  EKUIScaleFactor();
  double v18 = 1.0 / v17;
  v88.origin.double x = v10;
  v88.origin.double y = v12;
  v88.size.double width = v14;
  v88.size.double height = v16;
  double v83 = v7;
  double v84 = Width;
  double v19 = v7 + (Width - CGRectGetWidth(v88)) * 0.5;
  CGFloat v20 = *(double *)(a1 + 80);
  CalRoundRectToScreenScale();
  [v8 setFrame:];
  id v21 = [v85 overlay];

  if (v21)
  {
    id v22 = [v85 overlay];
    [v22 frame];
    double v81 = v18;
    CGFloat v24 = v23;
    double v26 = v25;
    double v28 = v27;

    v89.origin.double x = v19;
    v89.origin.double y = v20;
    v89.size.double width = v14;
    v89.size.double height = v16;
    CGRectGetMaxY(v89);
    CalRoundToScreenScale();
    double v30 = v29;
    v90.origin.double x = v19;
    v90.origin.double y = v20;
    v90.size.double width = v14;
    v90.size.double height = v16;
    CGRectGetMidX(v90);
    v91.origin.double x = v24;
    double v18 = v81;
    v91.origin.double y = v30;
    v91.size.double width = v26;
    v91.size.double height = v28;
    CGRectGetWidth(v91);
    CalRoundToScreenScale();
    double v32 = v31;
    double v33 = [v85 overlay];
    [v33 setFrame:v32, v30, v26, v28];
  }
  double v34 = [v85 attachedTodayCircle];

  if (v34)
  {
    double v35 = [v85 attachedTodayCircle];
    [v35 setCompressed:[*(id *)(a1 + 32) compressedVerticalMode]];
    [v35 sizeToFit];
    double v36 = objc_opt_class();
    [v35 frame];
    double v80 = v38;
    double v82 = v37;
    [v8 frame];
    double v79 = v39;
    double v41 = v40;
    double v43 = v42;
    double v45 = v44;
    [v85 frame];
    double v46 = v18;
    uint64_t v48 = v47;
    uint64_t v50 = v49;
    uint64_t v52 = v51;
    uint64_t v54 = v53;
    uint64_t v55 = [v85 overlay];
    uint64_t v78 = v48;
    double v18 = v46;
    [v36 frameForDayCircleWithSize:v55 != 0 compressedVerticalMode:[*(id *)(a1 + 32) compressedVerticalMode] containsFirstDayOfMonth:[*(id *)(a1 + 32) containsFirstDayOfMonth] dayNumberLayerFrame:v82 dayNumberFrame:v80 withOverlay:v41 compressed:v43 containsFirstDayOfMonth:v78 dayNumberFrame:v50 dayNumberLayerFrame:v52 dayNumberFrame:v54];
    double v57 = v56;
    double v59 = v58;
    double v61 = v60;
    double v63 = v62;

    [v35 setFrame:v57, v59, v61, v63];
  }
  double v64 = [v85 calendarDate];

  if (v64)
  {
    uint64_t v65 = *(void *)(*(void *)(a1 + 40) + 8);
    if ((*(void *)(v65 + 24) & 0x8000000000000000) != 0) {
      *(void *)(v65 + 24) = a3;
    }
    *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = a3;
    uint64_t v66 = *(void *)(*(void *)(a1 + 56) + 8);
    if (v83 < *(double *)(v66 + 24)) {
      *(double *)(v66 + 24) = v83;
    }
    uint64_t v67 = *(void *)(*(void *)(a1 + 64) + 8);
    if (*(double *)(v67 + 24) == 0.0) {
      *(double *)(v67 + 24) = v84;
    }
    *(double *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = v84
                                                                + *(double *)(*(void *)(*(void *)(a1 + 72) + 8)
                                                                            + 24);
  }
  [*(id *)(a1 + 32) _layoutDayTypeBadgeForDayNumber:v85 yOffset:*(double *)(a1 + 88)];
  v68 = [*(id *)(*(void *)(a1 + 32) + 128) objectAtIndex:a3];
  CalRoundToScreenScale();
  double v70 = v69;
  CalRoundToScreenScale();
  double v72 = v18 + v71;
  [*(id *)(a1 + 32) frame];
  double v74 = v73 - *(double *)(a1 + 96);
  +[CompactMonthWeekView verticalEventPadding:](CompactMonthWeekView, "verticalEventPadding:", [*(id *)(a1 + 32) compressedVerticalMode]);
  [v68 setFrame:v72, v74 - v75, v70, 6.0];
  [v68 setNeedsDisplay];
  uint64_t v76 = *(void *)(a1 + 32);
  if (!*(unsigned char *)(v76 + 255))
  {
    double v77 = 0.0;
    if (!*(unsigned char *)(v76 + 120)) {
      double v77 = 1.0;
    }
    [v68 setAlpha:v77];
  }
}

void sub_1000C3720(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 128) objectAtIndex:];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  [v2 processedEventData];
  id v4 = [v3 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v17;
    do
    {
      for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v17 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = *(void **)(*((void *)&v16 + 1) + 8 * i);
        uint64_t v9 = [v8 eventIdentifier];
        if (v9)
        {
          CGFloat v10 = (void *)v9;
          double v11 = *(void **)(a1 + 40);
          CGFloat v12 = [v8 eventIdentifier];
          double v13 = [v11 objectForKeyedSubscript:v12];

          if (!v13)
          {
            CGFloat v14 = *(void **)(a1 + 40);
            double v15 = [v8 eventIdentifier];
            [v14 setObject:v2 forKeyedSubscript:v15];
          }
        }
      }
      id v5 = [v3 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v5);
  }
}

MonthViewOccurrence *sub_1000C38B0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [MonthViewOccurrence alloc];
  id v5 = [v3 occurrence];
  id v6 = [v3 dayRange];
  id v8 = -[MonthViewOccurrence initWithFrame:occurrence:forDayRange:isCompact:isMultiDay:](v4, "initWithFrame:occurrence:forDayRange:isCompact:isMultiDay:", v5, v6, v7, 1, [v3 isMultiDay], CGRectZero.origin.x, CGRectZero.origin.y, CGRectZero.size.width, CGRectZero.size.height);

  uint64_t v9 = *(void **)(a1 + 32);
  [v3 frame];
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;
  double v17 = v16;

  [v9 convertRect:*(void *)(*(void *)(a1 + 32) + 160) fromView:v11, v13, v15, v17];
  -[MonthViewOccurrence setFrame:](v8, "setFrame:");
  [*(id *)(a1 + 32) addSubview:v8];

  return v8;
}

void sub_1000C39D8(uint64_t a1, uint64_t a2, void *a3)
{
  id v20 = a3;
  id v4 = [v20 occurrence];
  id v5 = [v4 eventOccurrenceID];

  id v6 = [*(id *)(a1 + 32) objectForKeyedSubscript:v5];
  if (v6)
  {
    uint64_t v7 = [*(id *)(*(void *)(a1 + 40) + 176) objectForKeyedSubscript:v5];
    if (v7)
    {
      id v8 = (void *)v7;
      uint64_t v9 = 0;
    }
    else
    {
      id v8 = objc_opt_new();
      [*(id *)(*(void *)(a1 + 40) + 176) setObject:v8 forKeyedSubscript:v5];
      uint64_t v9 = (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
      double v10 = [v6 dataForEventID:v5];
      [v10 setAnimating:1];
      [v8 setView:v9];
      [v8 setSummary:v6];
      [v8 setEventID:v5];
      [v8 setOccurrenceView:v20];
      [v8 setSummaryData:v10];
    }
    if (*(unsigned char *)(a1 + 57))
    {
      double v11 = *(void **)(a1 + 40);
      [v6 frameForEventID:v5];
      [v11 convertRect:v6 fromView:v11];
      [v9 setFrame:];
    }
    else
    {
      [v9 setDrawBackgroundWithLayer:1];
      double v12 = [v8 occurrenceView];
      double v13 = [v12 occurrence];
      if ([v13 isIntegrationEvent])
      {
        double v14 = CUIKIntegrationEventBackgroundColor();
      }
      else
      {
        long long v19 = [v8 occurrenceView];
        double v15 = [v19 occurrence];
        double v16 = [v15 calendar];
        double v14 = [v16 displayColor];
      }
      double v17 = [*(id *)(a1 + 40) traitCollection];
      [v17 userInterfaceStyle];
      long long v18 = CUIKSummaryColorForColor();

      objc_msgSend(v9, "updateBackgroundWithEdgeInsets:color:alpha:cornerMask:", v18, objc_msgSend(v6, "backGroundCornerMaskforEventID:", v5), UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right, 1.0);
    }
    [*(id *)(a1 + 32) removeObjectForKey:v5];
  }
  else
  {
    if (!*(unsigned char *)(a1 + 56)) {
      goto LABEL_15;
    }
    id v8 = objc_opt_new();
    uint64_t v9 = (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    [v8 setView:v9];
    [*(id *)(*(void *)(a1 + 40) + 184) addObject:v8];
  }

LABEL_15:
}

void sub_1000C3CD0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  int v5 = *(unsigned __int8 *)(a1 + 40);
  id v18 = v4;
  id v6 = [v4 view];
  uint64_t v7 = v6;
  if (v5)
  {
    [v6 setDrawBackgroundWithLayer:1];

    id v8 = [v18 occurrenceView];
    uint64_t v9 = [v8 occurrence];
    if ([v9 isIntegrationEvent])
    {
      double v10 = CUIKIntegrationEventBackgroundColor();
    }
    else
    {
      double v11 = [v18 occurrenceView];
      double v12 = [v11 occurrence];
      double v13 = [v12 calendar];
      double v10 = [v13 displayColor];
    }
    double v14 = [*(id *)(a1 + 32) traitCollection];
    [v14 userInterfaceStyle];
    uint64_t v7 = CUIKSummaryColorForColor();

    double v15 = [v18 view];
    double v16 = [v18 summary];
    double v17 = [v18 eventID];
    [v15 updateBackgroundWithEdgeInsets:v7 cornerMask:[v16 backGroundCornerMaskforEventID:v17] top:UIEdgeInsetsZero.top left:UIEdgeInsetsZero.left bottom:UIEdgeInsetsZero.bottom right:UIEdgeInsetsZero.right alpha:1.0];
  }
  else
  {
    [v6 setDrawBackgroundWithLayer:0];
  }
}

id sub_1000C3E74(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 112);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1000C3F6C;
  v9[3] = &unk_1001D4A30;
  v9[4] = v2;
  char v10 = *(unsigned char *)(a1 + 40);
  [v3 enumerateObjectsUsingBlock:v9];
  uint64_t v4 = *(void *)(a1 + 32);
  int v5 = *(void **)(v4 + 176);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1000C3FDC;
  v7[3] = &unk_1001D4A08;
  char v8 = *(unsigned char *)(a1 + 40);
  void v7[4] = v4;
  return [v5 enumerateKeysAndObjectsUsingBlock:v7];
}

void sub_1000C3F6C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 128) objectAtIndex:];
  id v4 = v2;
  double v3 = 1.0;
  if (!*(unsigned char *)(a1 + 40)) {
    double v3 = 0.0;
  }
  [v2 setAlpha:v3];
}

void sub_1000C3FDC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v29 = v4;
  if (*(unsigned char *)(a1 + 40))
  {
    int v5 = [v4 summary];
    if (v5)
    {
      id v6 = *(void **)(a1 + 32);
      uint64_t v7 = [v29 eventID];
      [v5 frameForEventID:v7];
      [v6 convertRect:v5 fromView:];
      double v9 = v8;
      double v11 = v10;
      double v13 = v12;
      double v15 = v14;
      double v16 = [v29 view];
      [v16 setFrame:v9, v11, v13, v15];
    }
    else
    {
      uint64_t v7 = [v29 view];
      [v7 setAlpha:0.0];
    }
  }
  else
  {
    double v17 = [v4 occurrenceView];

    if (v17)
    {
      id v18 = [v29 occurrenceView];
      [v18 setHidden:1];

      long long v19 = *(void **)(a1 + 32);
      id v20 = [v29 occurrenceView];
      [v20 frame];
      [v19 convertRect:*(void *)(*(void *)(a1 + 32) + 160) fromView:nil];
      double v22 = v21;
      double v24 = v23;
      double v26 = v25;
      double v28 = v27;

      int v5 = [v29 view];
      [v5 setFrame:v22, v24, v26, v28];
    }
    else
    {
      int v5 = [v29 view];
      [v5 setAlpha:0.0];
    }
  }
}

id sub_1000C4190(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  double v3 = *(void **)(v2 + 184);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1000C4230;
  v5[3] = &unk_1001D4A58;
  void v5[4] = v2;
  [v3 enumerateObjectsUsingBlock:v5];
  return [*(id *)(*(void *)(a1 + 32) + 160) setAlpha:0.0];
}

void sub_1000C4230(uint64_t a1, void *a2)
{
  id v14 = a2;
  double v3 = [v14 occurrenceView];
  id v4 = [v14 occurrenceView];
  [v4 setHidden:1];

  if (v3)
  {
    int v5 = *(void **)(a1 + 32);
    [v3 frame];
    [v5 convertRect:*(void *)(*(void *)(a1 + 32) + 160) fromView:nil];
    double v8 = v7 + v6 * 0.5 + -3.0;
    double v11 = v9 - v10;
    double v12 = [v14 view];
    [v12 setFrame:v8, v11, 6.0, 6.0];
  }
  double v13 = [v14 view];
  [v13 setAlpha:0.0];
}

id sub_1000C4334(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  double v3 = *(void **)(v2 + 184);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1000C43D4;
  v5[3] = &unk_1001D4A58;
  void v5[4] = v2;
  [v3 enumerateObjectsUsingBlock:v5];
  return [*(id *)(*(void *)(a1 + 32) + 160) setAlpha:1.0];
}

void sub_1000C43D4(uint64_t a1, void *a2)
{
  id v15 = a2;
  double v3 = [v15 occurrenceView];
  id v4 = *(void **)(a1 + 32);
  [v3 frame];
  [v4 convertRect:*(void *)(*(void *)(a1 + 32) + 160) fromView:nil];
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;
  double v13 = [v15 view];
  [v13 setFrame:v6, v8, v10, v12];

  if (!*(unsigned char *)(*(void *)(a1 + 32) + 216))
  {
    id v14 = [v15 view];
    [v14 setAlpha:1.0];
  }
}

id sub_1000C44C8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void **)(v1 + 184);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  _DWORD v4[2] = sub_1000C4544;
  v4[3] = &unk_1001D4A58;
  void v4[4] = v1;
  return [v2 enumerateObjectsUsingBlock:v4];
}

void sub_1000C4544(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v17 = [v3 occurrenceView];
  id v4 = *(void **)(a1 + 32);
  [v17 frame];
  [v4 convertRect:*(void *)(*(void *)(a1 + 32) + 160) fromView:nil];
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  [v17 backgroundInsets];
  double v12 = v11;
  [v17 backgroundInsets];
  double v14 = v12 + v13 + 6.0;
  id v15 = [v3 view];
  [v15 setFrame:v6 + v10 * 0.5 - v14 * 0.5, v8, v14, v14];

  double v16 = [v3 view];

  [v16 setAlpha:1.0];
}

void *sub_1000C4658(void *result)
{
  uint64_t v1 = result[4];
  if (result[5] == *(void *)(v1 + 208))
  {
    uint64_t v2 = result;
    id v3 = *(void **)(v1 + 184);
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    _DWORD v4[2] = sub_1000C470C;
    v4[3] = &unk_1001D4A58;
    void v4[4] = v1;
    [v3 enumerateObjectsUsingBlock:v4];
    return [*(id *)(v2[4] + 160) setAlpha:1.0];
  }
  return result;
}

void sub_1000C470C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v14 = [v3 occurrenceView];
  id v4 = *(void **)(a1 + 32);
  [v14 frame];
  [v4 convertRect:*(void *)(*(void *)(a1 + 32) + 160) fromView:];
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;
  double v13 = [v3 view];

  [v13 setFrame:v6, v8, v10, v12];
}

void *sub_1000C47D4(void *a1)
{
  uint64_t v2 = a1[6];
  id result = (void *)a1[4];
  if (v2 == result[26])
  {
    [result finishAnimations];
    id result = (void *)a1[5];
    if (result)
    {
      id v4 = (uint64_t (*)(void))result[2];
      return (void *)v4();
    }
  }
  return result;
}

void sub_1000C4A10(id a1, id a2, AnimationInfo *a3, BOOL *a4)
{
  id v4 = a3;
  double v5 = [(AnimationInfo *)v4 view];
  [v5 removeFromSuperview];

  id v6 = [(AnimationInfo *)v4 summaryData];

  [v6 setAnimating:0];
}

id sub_1000C4D60(uint64_t a1)
{
  [*(id *)(a1 + 32) setHidden:0];
  uint64_t v2 = *(void **)(a1 + 40);

  return [v2 haltTodayPulse];
}

void sub_1000C54B8(uint64_t a1, void *a2)
{
  [a2 frame];
  +[NSValue valueWithCGRect:](NSValue, "valueWithCGRect:");
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  [*(id *)(a1 + 32) addObject:v3];
}

void sub_1000C5628(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000C5640(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000C5650(uint64_t a1)
{
}

void sub_1000C5658(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v9 = a2;
  if ([v9 representsActualDate])
  {
    [v9 frame];
    if (CGRectContainsPoint(v11, *(CGPoint *)(a1 + 40)))
    {
      uint64_t v6 = [v9 calendarDate];
      uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
      double v8 = *(void **)(v7 + 40);
      *(void *)(v7 + 40) = v6;

      *a4 = 1;
    }
  }
}

void sub_1000C579C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1000C57B4(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  if ([v7 representsActualDate])
  {
    [v7 frame];
    if (CGRectContainsPoint(v9, *(CGPoint *)(a1 + 40)))
    {
      *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a3;
      *a4 = 1;
    }
  }
}

void sub_1000C5BB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va1, a8);
  va_start(va, a8);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000C5BDC(void *a1, void *a2)
{
  id v18 = a2;
  id v3 = [v18 representsActualDate];
  id v4 = v18;
  if (v3)
  {
    double v5 = [v18 calendarDate];
    if (![v5 compare:a1[4]])
    {
      [v18 frame];
      uint64_t v6 = *(void **)(a1[5] + 8);
      void v6[4] = v7;
      void v6[5] = v8;
      v6[6] = v9;
      v6[7] = v10;
      uint64_t v11 = [v18 layer];
      [v11 frame];
      uint64_t v12 = *(void **)(a1[6] + 8);
      v12[4] = v13;
      void v12[5] = v14;
      v12[6] = v15;
      v12[7] = v16;
    }
    id v4 = v18;
  }

  return _objc_release_x1(v3, v4);
}

void sub_1000C5F48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  uint64_t v19 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v13 - 144), 8);
  _Block_object_dispose((const void *)(v13 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1000C5F88(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v9 = v5;
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) && *(void *)(*(void *)(a1 + 32) + 32) <= a3)
  {
    if ([*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) month] == *(id *)(a1 + 72))
    {
      [v9 setCalendarDate:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)];
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), *(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40));
      ++*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 24);
      if ((unint64_t)(a3 + 1) < *(void *)(a1 + 80))
      {
        uint64_t v6 = [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) calendarDateByAddingDays:1];
        uint64_t v7 = *(void *)(*(void *)(a1 + 48) + 8);
        uint64_t v8 = *(void **)(v7 + 40);
        *(void *)(v7 + 40) = v6;
      }
    }
    else
    {
      [v9 setCalendarDate:0];
      *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
    }
  }
  else
  {
    [v5 setCalendarDate:0];
  }
}

id sub_1000C627C(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 104) setAlpha:*(double *)(a1 + 40)];
}

void sub_1000C63CC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v6 = [v3 calendarDate];
  id v4 = [v6 date];
  id v5 = +[EKCalendarDate calendarDateWithDate:v4 timeZone:*(void *)(a1 + 32)];
  [v3 setCalendarDate:v5];
}

uint64_t sub_1000C675C(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v24 = a2;
  id v7 = [v24 representsActualDate];
  id v8 = v24;
  if (v7)
  {
    id v9 = [v24 calendarDate];
    uint64_t v10 = [v9 calendarDateForDay];
    uint64_t v11 = [v10 date];

    uint64_t v12 = [v9 calendarDateForEndOfDay];
    uint64_t v13 = [v12 date];

    if ([v11 compare:*(void *)(a1 + 32)] != (id)1
      && [v13 compare:*(void *)(a1 + 32)] != (id)-1)
    {
      uint64_t v14 = *(void **)(a1 + 40);
      if ((id)v14[17] != v24)
      {
        [v14 _clearTodayHighlight];
        uint64_t v15 = [*(id *)(a1 + 40) makeDayCircleForDate:v9 isToday:1];
        [*(id *)(a1 + 40) addSubview:v15];
        uint64_t v16 = [v24 attachedTodayCircle];
        [v16 removeFromSuperview];

        [v24 setAttachedTodayCircle:v15];
        objc_storeStrong((id *)(*(void *)(a1 + 40) + 136), a2);
        [*(id *)(*(void *)(a1 + 40) + 136) hideOverlayAndNumber:1];
        uint64_t v17 = [v24 dayTypeBadge];
        uint64_t v18 = [v17 superlayer];

        if (v18)
        {
          uint64_t v19 = [v24 dayTypeBadge];
          id v20 = [v19 superlayer];

          double v21 = [v24 dayTypeBadge];
          [v21 removeFromSuperlayer];

          double v22 = [v24 dayTypeBadge];
          [v20 addSublayer:v22];
        }
      }
      *a4 = 1;
    }

    id v8 = v24;
  }

  return _objc_release_x1(v7, v8);
}

void sub_1000C6ED8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,char a42)
{
}

void sub_1000C6F04(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = [a2 calendarDate];

  if (v7)
  {
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a3;
    *a4 = 1;
  }
}

void sub_1000C6F60(uint64_t a1, void *a2, uint64_t a3)
{
  id v16 = a2;
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) + a3;
  if (v5 < (uint64_t)[*(id *)(*(void *)(a1 + 32) + 112) count])
  {
    id v6 = [*(id *)(*(void *)(a1 + 32) + 112) objectAtIndexedSubscript:v5];
    id v7 = *(void **)(a1 + 32);
    id v8 = [v16 dayType];
    id v9 = [v16 dayTypeBadgeColor];
    uint64_t v10 = [v16 dayTypeBadgeLocale];
    [v7 _updateDayTypeBadgeForDayNumber:v6 withDayType:v8 color:v9 locale:v10 forceImageUpdate:0];

    uint64_t v11 = [v6 calendarDate];
    uint64_t v12 = [v11 date];

    uint64_t v13 = [v6 calendar];
    uint64_t v14 = *(void **)(a1 + 32);
    uint64_t v15 = [v16 eventSummaryData];
    [v14 _updateSingleDaySummaryForDayIndex:v5 withData:v15 date:v12 calendar:v13];
  }
}

id sub_1000C70C0(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) _updateDayTypeBadgeForDayNumber:a2 withDayType:0 color:0 locale:0 forceImageUpdate:0];
}

void sub_1000C7644(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) attachedTodayCircle];
  [v1 setAlpha:1.0];
}

void sub_1000C7E5C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1000C7E74(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = [a2 calendarDate];

  if (v7)
  {
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a3;
    *a4 = 1;
  }
}

void sub_1000C7ED0(uint64_t a1, void *a2, uint64_t a3)
{
  id v11 = a2;
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) + a3;
  if (v5 < (uint64_t)[*(id *)(*(void *)(a1 + 32) + 112) count])
  {
    id v6 = [*(id *)(*(void *)(a1 + 32) + 112) objectAtIndexedSubscript:v5];
    id v7 = *(void **)(a1 + 32);
    id v8 = [v11 dayType];
    id v9 = [v11 dayTypeBadgeColor];
    uint64_t v10 = [v11 dayTypeBadgeLocale];
    [v7 _updateDayTypeBadgeForDayNumber:v6 withDayType:v8 color:v9 locale:v10 forceImageUpdate:1];
  }
}

void sub_1000C808C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 cgColor];
  id v5 = [v3 dayTypeBadge];

  [v5 setBackgroundColor:v4];
}

id sub_1000C90AC(uint64_t a1)
{
  +[CATransaction begin];
  +[CATransaction setDisableActions:1];
  uint64_t v2 = [*(id *)(a1 + 32) layer];
  [v2 setHidden:0];

  id v3 = [*(id *)(a1 + 32) overlay];
  id v4 = [v3 layer];
  [v4 setHidden:0];

  return +[CATransaction commit];
}

void sub_1000C9648(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000C9660(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = [a2 calendarDate];

  if (v7)
  {
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a3;
    *a4 = 1;
  }
}

void sub_1000C9EC8(id a1)
{
  uint64_t v1 = +[UIColor colorWithWhite:0.0 alpha:0.05];
  uint64_t v2 = (void *)qword_1002167B8;
  qword_1002167B8 = v1;

  uint64_t v3 = +[UIColor colorWithWhite:1.0 alpha:0.1];
  uint64_t v4 = qword_1002167C0;
  qword_1002167C0 = v3;

  _objc_release_x1(v3, v4);
}

id sub_1000C9F44(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:1.0];
}

id sub_1000C9F50(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:0.0];
}

id sub_1000C9F5C(uint64_t a1)
{
  return [*(id *)(a1 + 32) removeFromSuperview];
}

int64_t sub_1000CAC38(id a1, EventSummaryData *a2, EventSummaryData *a3)
{
  uint64_t v4 = a2;
  id v5 = a3;
  id v6 = [(EventSummaryData *)v4 startDate];
  [v6 timeIntervalSinceReferenceDate];
  double v8 = v7;

  id v9 = [(EventSummaryData *)v5 startDate];
  [v9 timeIntervalSinceReferenceDate];
  double v11 = v10;

  if ([(EventSummaryData *)v4 isAllDay] && ![(EventSummaryData *)v5 isAllDay])
  {
    int64_t v12 = -1;
  }
  else if ([(EventSummaryData *)v4 isAllDay] || ![(EventSummaryData *)v5 isAllDay])
  {
    if ([(EventSummaryData *)v4 isAllDay] && [(EventSummaryData *)v5 isAllDay])
    {
      int64_t v12 = 0;
    }
    else if (vabdd_f64(v8, v11) >= 2.22044605e-16)
    {
      if (v8 >= v11) {
        int64_t v12 = 1;
      }
      else {
        int64_t v12 = -1;
      }
    }
    else
    {
      uint64_t v13 = [(EventSummaryData *)v4 endDate];
      [v13 timeIntervalSinceReferenceDate];
      double v15 = v14 - v8;

      id v16 = [(EventSummaryData *)v5 endDate];
      [v16 timeIntervalSinceReferenceDate];
      double v18 = v17 - v11;

      double v19 = vabdd_f64(v15, v18);
      uint64_t v20 = -1;
      if (v15 >= v18) {
        uint64_t v20 = 1;
      }
      if (v19 >= 2.22044605e-16) {
        int64_t v12 = v20;
      }
      else {
        int64_t v12 = 0;
      }
    }
  }
  else
  {
    int64_t v12 = 1;
  }

  return v12;
}

uint64_t sub_1000CAD98(uint64_t a1, void *a2, void *a3)
{
  double v16 = 0.0;
  double v17 = 0.0;
  double v14 = 0.0;
  double v15 = 0.0;
  double v12 = 0.0;
  double v13 = 0.0;
  id v5 = a3;
  id v6 = [a2 color];
  [v6 getHue:&v17 saturation:&v16 brightness:&v15 alpha:0];

  double v7 = [v5 color];

  [v7 getHue:&v14 saturation:&v13 brightness:&v12 alpha:0];
  double v8 = *(double *)(a1 + 32);
  double v9 = v8 * floor(v17 / v8);
  double v10 = v8 * floor(v14 / v8);
  if (vabdd_f64(v9, v10) >= 2.22044605e-16)
  {
    if (v9 < v10) {
      return -1;
    }
    if (v9 > v10) {
      return 1;
    }
  }
  if (v16 < v13) {
    return -1;
  }
  if (v16 <= v13)
  {
    if (v15 >= v12) {
      return v15 > v12;
    }
    return -1;
  }
  return 1;
}

void sub_1000CC310(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) queue];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000CC3A0;
  block[3] = &unk_1001D2740;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async(v2, block);
}

id sub_1000CC3A0(uint64_t a1)
{
  return [*(id *)(a1 + 32) finish];
}

void sub_1000CD06C(id a1)
{
  id v1 = objc_alloc_init((Class)NSMutableDictionary);
  uint64_t v2 = qword_1002167F0;
  qword_1002167F0 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

void sub_1000CD220(id a1)
{
  id v1 = objc_alloc_init((Class)NSMutableDictionary);
  uint64_t v2 = qword_100216800;
  qword_100216800 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

id sub_1000CE61C(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 40) scrollView:*(void *)(a1 + 40) completionBlock:0];
}

void sub_1000CEA84(uint64_t a1)
{
  uint64_t v2 = +[NSNotificationCenter defaultCenter];
  [v2 addObserver:*(void *)(a1 + 32) selector:"_listViewDidAppear" name:@"ListViewController_ViewDidAppearNotification" object:0];

  uint64_t v3 = *(void **)(a1 + 40);
  id v6 = [*(id *)(a1 + 32) model];
  uint64_t v4 = [v6 selectedDate];
  id v5 = [v3 pushCalendarViewControllerWithViewType:4 andDate:v4];
}

id sub_1000CEB30(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismissViewControllerAnimated:1 completion:*(void *)(a1 + 40)];
}

void sub_1000CEBF0(uint64_t a1)
{
  uint64_t v2 = [(id)objc_opt_class() testName];
  uint64_t v3 = [*(id *)(a1 + 32) application];
  [v3 startedTest:v2];

  uint64_t v4 = [*(id *)(a1 + 32) application];
  id v5 = [v4 rootNavigationController];

  id v6 = [v5 topViewController];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    double v7 = [v6 currentChildViewController];
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      double v8 = [v7 tableViewForTesting];
      uint64_t v9 = *(void *)(a1 + 32);
      double v10 = *(void **)(v9 + 40);
      v13[0] = _NSConcreteStackBlock;
      v13[1] = 3221225472;
      v13[2] = sub_1000CEDA0;
      v13[3] = &unk_1001D2740;
      void v13[4] = v9;
      [v10 scrollView:v8 completionBlock:v13];
    }
    else
    {
      double v12 = [*(id *)(a1 + 32) application];
      [v12 failedTest:v2 withResults:0];
    }
  }
  else
  {
    double v11 = [*(id *)(a1 + 32) application];
    [v11 failedTest:v2 withResults:0];
  }
}

void sub_1000CEDA0(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) model];
  [v1 setShowDayAsList:0];
}

void sub_1000CF21C(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 16);
  if (v2)
  {
    [v2 setViewControllers:&__NSArray0__struct animated:0];
    [*(id *)(*(void *)(a1 + 32) + 16) removeFromParentViewController];
    uint64_t v3 = [*(id *)(*(void *)(a1 + 32) + 16) view];
    [v3 removeFromSuperview];

    uint64_t v4 = *(void *)(a1 + 32);
    id v5 = *(void **)(v4 + 16);
    *(void *)(v4 + 16) = 0;
  }
}

void sub_1000CF5C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000CF5E0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000CF5F0(uint64_t a1)
{
}

void sub_1000CF5F8(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (objc_opt_isKindOfClass()) {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
  }
}

id sub_1000CFA2C(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) disableRotationTimings];
  if ((result & 1) == 0)
  {
    uint64_t v3 = *(void **)(a1 + 32);
    return _[v3 transitionToSizeDidEnd];
  }
  return result;
}

void sub_1000CFB44(uint64_t a1)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:*(void *)(a1 + 32) object:*(void *)(a1 + 40)];
}

void sub_1000D02E4(id a1)
{
  uint64_t v1 = objc_opt_new();
  id v2 = (void *)qword_100216820;
  qword_100216820 = v1;

  [(id)qword_100216820 addAnchoredValue:2 forWindowSizeWidth:7.5];
  [(id)qword_100216820 addAnchoredValue:16 forWindowSizeWidth:1.0];
  uint64_t v3 = (void *)qword_100216820;

  [v3 addAnchoredValue:32 forWindowSizeWidth:17.67];
}

void sub_1000D03C0(id a1)
{
  uint64_t v1 = objc_opt_new();
  id v2 = (void *)qword_100216830;
  qword_100216830 = v1;

  [(id)qword_100216830 addAnchoredValue:2 forWindowSizeWidth:41.0];
  [(id)qword_100216830 addAnchoredValue:16 forWindowSizeWidth:59.0];
  [(id)qword_100216830 addAnchoredValue:32 forWindowSizeWidth:59.0];
  uint64_t v3 = (void *)qword_100216830;

  [v3 addAnchoredValue:0x20000 forWindowSizeWidth:59.0];
}

void sub_1000D04E4(id a1)
{
  uint64_t v1 = objc_opt_new();
  id v2 = (void *)qword_100216840;
  qword_100216840 = v1;

  [(id)qword_100216840 addAnchoredValue:2 forWindowSizeWidth:7.5];
  [(id)qword_100216840 addAnchoredValue:16 forWindowSizeWidth:-6.5];
  [(id)qword_100216840 addAnchoredValue:32 forWindowSizeWidth:0.0];
  uint64_t v3 = (void *)qword_100216840;

  [v3 addAnchoredValue:0x20000 forWindowSizeWidth:0.0];
}

void sub_1000D05F4(id a1)
{
  uint64_t v1 = objc_opt_new();
  id v2 = (void *)qword_100216850;
  qword_100216850 = v1;

  [(id)qword_100216850 addAnchoredValue:2 forWindowSizeWidth:1.0];
  [(id)qword_100216850 addAnchoredValue:16 forWindowSizeWidth:1.5];
  uint64_t v3 = (void *)qword_100216850;

  [v3 addAnchoredValue:32 forWindowSizeWidth:1.33];
}

id sub_1000D10B0(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 104) setAlpha:0.0];
  [*(id *)(*(void *)(a1 + 32) + 104) setText:*(void *)(a1 + 40)];
  id v2 = *(void **)(*(void *)(a1 + 32) + 104);

  return [v2 setAlpha:1.0];
}

uint64_t sub_1000D1110(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000D1780(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000D17F8;
  block[3] = &unk_1001D2740;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_1000D17F8(uint64_t a1)
{
  v2.receiver = *(id *)(a1 + 32);
  v2.super_class = (Class)MonthViewLandscapeScrollTest;
  return [super runTest];
}

uint64_t sub_1000D194C()
{
  id v0 = (objc_class *)objc_opt_class();
  uint64_t v1 = NSStringFromClass(v0);
  uint64_t v2 = qword_100216868;
  qword_100216868 = v1;

  return _objc_release_x1(v1, v2);
}

void sub_1000D2AE0(id a1, UITraitEnvironment *a2, UITraitCollection *a3)
{
  id v3 = +[NSNotificationCenter defaultCenter];
  [v3 postNotificationName:CUIKSizeClassChangedNotification object:0];
}

id sub_1000D3D10(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 40) scrollView:*(void *)(a1 + 40) completionBlock:0];
}

void sub_1000D42F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_1000D4320(uint64_t a1)
{
  return [*(id *)(a1 + 32) runRecapTestIfNeeded:*(void *)(a1 + 40)];
}

id sub_1000D44B4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _callCompletionIfExists];
}

void sub_1000D44BC(uint64_t a1)
{
  dispatch_time_t v2 = dispatch_time(0, 0);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000D454C;
  block[3] = &unk_1001D2740;
  void block[4] = *(void *)(a1 + 32);
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_1000D454C(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 48) finishedTest:*(void *)(*(void *)(a1 + 32) + 56)];
  dispatch_time_t v2 = *(void **)(a1 + 32);

  return [v2 _callCompletionIfExists];
}

id sub_1000D49CC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _realTest];
}

void sub_1000D4B90(id a1)
{
}

void sub_1000D4DC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000D4DF4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateBadge];
}

void sub_1000D4FD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location, id a16)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a16);
  _Unwind_Resume(a1);
}

void sub_1000D5010(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained && v2) {
    [WeakRetained dayNavigationCellTouchUpOccurred:v2];
  }
}

id sub_1000D5920(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 112) setAlpha:0.0];
  [*(id *)(*(void *)(a1 + 32) + 112) setText:*(void *)(a1 + 40)];
  id v2 = *(void **)(*(void *)(a1 + 32) + 112);

  return [v2 setAlpha:1.0];
}

uint64_t sub_1000D5980(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000D6054(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 88) setHidden:0];
  [*(id *)(*(void *)(a1 + 32) + 168) removeFromSuperview];
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 168);
  *(void *)(v2 + 168) = 0;
}

void sub_1000D9A5C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) scrollView];
  [*(id *)(*(void *)(a1 + 32) + 40) scrollView:v2 completionBlock:0];
}

void sub_1000DA078(uint64_t a1)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:@"LargeWeekViewController_RotationAnimationStartedNotification" object:*(void *)(a1 + 32)];
}

void sub_1000DA0D8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) window];
  EKUIPushFallbackSizingContextWithViewHierarchy();

  [*(id *)(a1 + 32) _resizeInterfaceForWindowSize:*(double *)(a1 + 40) *(double *)(a1 + 48)];
  id v3 = [*(id *)(a1 + 32) window];
  EKUIPopFallbackSizingContextWithViewHierarchy();
}

void sub_1000DA14C(uint64_t a1)
{
  [*(id *)(a1 + 32) setRotatingToPortrait:0];
  [*(id *)(a1 + 32) setRotatingToLandscape:0];
  *(unsigned char *)(*(void *)(a1 + 32) + 416) = 0;
  [*(id *)(a1 + 32) updateVisibleRects];
  if (+[ApplicationTester testingSessionStarted])
  {
    id v2 = +[NSNotificationCenter defaultCenter];
    [v2 postNotificationName:@"LargeWeekViewController_RotationAnimationCompletedNotification" object:*(void *)(a1 + 32)];
  }
}

void sub_1000DA56C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _selectedOccurrenceViews];
  id v3 = [v2 count];

  if (v3)
  {
    id v4 = +[NSMutableArray array];
    long long v24 = 0u;
    long long v25 = 0u;
    long long v26 = 0u;
    long long v27 = 0u;
    id v5 = [*(id *)(a1 + 32) _selectedOccurrenceViews];
    id v6 = [v5 countByEnumeratingWithState:&v24 objects:v29 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v25;
      do
      {
        for (uint64_t i = 0; i != v7; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v25 != v8) {
            objc_enumerationMutation(v5);
          }
          double v10 = [*(id *)(*((void *)&v24 + 1) + 8 * i) occurrence];
          [v4 addObject:v10];
        }
        id v7 = [v5 countByEnumeratingWithState:&v24 objects:v29 count:16];
      }
      while (v7);
    }
    goto LABEL_12;
  }
  double v11 = [*(id *)(a1 + 32) eventGestureController];
  double v12 = [v11 draggingView];

  if (v12)
  {
    id v5 = [*(id *)(a1 + 32) eventGestureController];
    double v13 = [v5 event];
    double v28 = v13;
    id v4 = +[NSArray arrayWithObjects:&v28 count:1];

LABEL_12:
    goto LABEL_13;
  }
  id v4 = 0;
LABEL_13:
  [*(id *)(a1 + 32) _setSelectedEvents:v4];
  double v14 = [*(id *)(a1 + 32) _selectedOccurrenceViews];
  id v15 = [v14 count];

  if (v15 == (id)1)
  {
    double v16 = [*(id *)(a1 + 32) presentedViewController];
    double v17 = [v16 popoverPresentationController];
    double v18 = [*(id *)(a1 + 32) _selectedOccurrenceViews];
    double v19 = [v18 firstObject];
    [v17 setSourceView:v19];

    uint64_t v20 = [*(id *)(a1 + 32) presentedViewController];
    double v21 = [v20 popoverPresentationController];
    double v22 = [*(id *)(a1 + 32) _selectedOccurrenceViews];
    double v23 = [v22 firstObject];
    [v23 bounds];
    [v21 setSourceRect:];
  }
  *(unsigned char *)(*(void *)(a1 + 32) + 410) = 0;
}

uint64_t sub_1000DB234(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1000DB24C(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  void v3[2] = sub_1000DB2E4;
  v3[3] = &unk_1001D29F0;
  id v4 = *(id *)(a1 + 48);
  [v1 scrollEventIntoView:v2 animateWithDuration:v3 completion:0.3];
}

uint64_t sub_1000DB2E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000DBE48(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

void sub_1000DBE6C(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000DBEFC;
  block[3] = &unk_1001D41E8;
  objc_copyWeak(&v2, (id *)(a1 + 32));
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v2);
}

void sub_1000DBEFC(uint64_t a1)
{
  id v2 = (void *)kCalUILogHandle;
  if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_DEBUG))
  {
    id v3 = v2;
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    id v5 = [WeakRetained navigationThrottleOperation];
    int v7 = 138412290;
    uint64_t v8 = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "#NavigationThrottle Finished navigation throttle operation: %@", (uint8_t *)&v7, 0xCu);
  }
  id v6 = objc_loadWeakRetained((id *)(a1 + 32));
  [v6 setNavigationThrottleOperation:0];
}

void sub_1000DBFF0(uint64_t a1)
{
  id v2 = (void *)kCalUILogHandle;
  if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_DEBUG))
  {
    id v3 = *(void **)(a1 + 32);
    id v4 = v2;
    id v5 = [v3 occurrence];
    id v6 = [v5 title];
    *(_DWORD *)buf = 138412290;
    id v20 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "#ShowEvent Finished showing event: %@", buf, 0xCu);
  }
  int v7 = +[TimerOperation operationWithTimeInterval:0.2];
  objc_initWeak(&location, v7);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_1000DC22C;
  v13[3] = &unk_1001D4E40;
  objc_copyWeak(&v17, &location);
  id v8 = v7;
  id v14 = v8;
  id v9 = *(id *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  id v15 = v9;
  uint64_t v16 = v10;
  [v8 setCompletionBlock:v13];
  double v11 = [*(id *)(a1 + 40) showEventDetailsOperationQueue];
  [v11 addOperation:v8];

  double v12 = kCalUILogHandle;
  if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 138412290;
    id v20 = v8;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "#ShowDetails Added show event details timer operation: %@", buf, 0xCu);
  }

  objc_destroyWeak(&v17);
  objc_destroyWeak(&location);
}

void sub_1000DC204(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000DC22C(uint64_t a1)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  _DWORD v4[2] = sub_1000DC2EC;
  v4[3] = &unk_1001D4E40;
  objc_copyWeak(&v8, (id *)(a1 + 56));
  id v5 = *(id *)(a1 + 32);
  id v2 = *(id *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  id v6 = v2;
  uint64_t v7 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);

  objc_destroyWeak(&v8);
}

void sub_1000DC2EC(id *a1)
{
  id v2 = (void *)kCalUILogHandle;
  if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v3 = v2;
    id WeakRetained = objc_loadWeakRetained(a1 + 7);
    *(_DWORD *)buf = 138412290;
    id v14 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "#ShowDetails Finished show event details timer operation: %@", buf, 0xCu);
  }
  if (([a1[4] isCancelled] & 1) == 0)
  {
    id v5 = [a1[5] occurrence];
    id v6 = [a1[6] model];
    uint64_t v7 = [v6 selectedOccurrence];
    unsigned int v8 = [v5 isEqual:v7];

    if (v8)
    {
      id v9 = a1[6];
      uint64_t v10 = [a1[5] occurrence];
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 3221225472;
      v11[2] = sub_1000DC4A0;
      _OWORD v11[3] = &unk_1001D2740;
      id v12 = a1[5];
      [v9 showEvent:v10 animated:1 showMode:1 context:0 completion:v11];
    }
  }
}

void sub_1000DC4A0(uint64_t a1)
{
  id v2 = (void *)kCalUILogHandle;
  if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v3 = *(void **)(a1 + 32);
    id v4 = v2;
    id v5 = [v3 occurrence];
    id v6 = [v5 title];
    int v7 = 138412290;
    unsigned int v8 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "#ShowDetails Showed details for event: %@", (uint8_t *)&v7, 0xCu);
  }
}

void sub_1000DCC90(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) model];
  uint64_t v3 = [v2 selectedOccurrence];

  id v4 = *(unsigned char **)(a1 + 32);
  if (v3)
  {
    if (!v4[412])
    {
      if (v4[413]) {
        uint64_t v5 = 2;
      }
      else {
        uint64_t v5 = 1;
      }
      [v4 showEvent:v3 animated:1 showMode:v5 context:0];
      id v4 = *(unsigned char **)(a1 + 32);
    }
    [v4 setIsWaitingForBackgroundLoadingOfSelectedEventOccurrenceView:0];
    *(unsigned char *)(*(void *)(a1 + 32) + 413) = 0;
    id v6 = *(unsigned char **)(a1 + 32);
    if (v6[412])
    {
      objc_initWeak(&location, v6);
      int v7 = *(void **)(a1 + 32);
      v8[0] = _NSConcreteStackBlock;
      v8[1] = 3221225472;
      v8[2] = sub_1000DCE04;
      v8[3] = &unk_1001D3F58;
      objc_copyWeak(&v9, &location);
      [v7 scrollEventIntoView:v3 animated:0 completion:v8];
      objc_destroyWeak(&v9);
      objc_destroyWeak(&location);
    }
  }
  else
  {
    [v4 setIsWaitingForBackgroundLoadingOfSelectedEventOccurrenceView:0];
    *(unsigned char *)(*(void *)(a1 + 32) + 413) = 0;
  }
}

void sub_1000DCDE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000DCE04(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  WeakRetained[412] = 0;
  uint64_t v1 = [WeakRetained managedNavigationController];
  [v1 sourceViewController:WeakRetained notifiesReadinessForPresentation:1];
}

void sub_1000DD2E8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) window];
  EKUIPushFallbackSizingContextWithViewHierarchy();
  [*(id *)(a1 + 32) invalidateManagedNavigationController];
  [*(id *)(a1 + 32) _presentDetailViewControllerAsPageSheet:*(void *)(a1 + 40)];
  EKUIPopFallbackSizingContextWithViewHierarchy();
}

id sub_1000DD594(uint64_t a1)
{
  return [*(id *)(a1 + 32) presentViewController:*(void *)(a1 + 40) animated:1 completion:0];
}

void sub_1000DD6F4(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  id v3 = [*(id *)(a1 + 48) context];
  [v1 showEvent:v2 animated:1 showMode:1 context:v3];
}

void sub_1000DD834(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  id v3 = [*(id *)(a1 + 48) context];
  [v1 showEvent:v2 animated:1 showMode:1 context:v3];
}

void sub_1000DD964(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  id v3 = [*(id *)(a1 + 48) context];
  [v1 showEvent:v2 animated:1 showMode:1 context:v3];
}

void sub_1000DDB68(uint64_t a1)
{
  [*(id *)(a1 + 32) invalidateManagedNavigationController];
  id v4 = [*(id *)(a1 + 32) augmentEventDetailsContext:0];
  uint64_t v2 = [*(id *)(a1 + 40) event];
  id v3 = +[EKEventViewController eventDetailViewControllerWithEvent:v2 delegate:*(void *)(a1 + 32) context:v4];

  [*(id *)(a1 + 32) _presentDetailViewControllerAsPageSheet:v3];
}

id sub_1000DE000(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  id v3 = *(void **)(a1 + 32);

  return [v3 setNeedsUpdateOfSupportedInterfaceOrientations];
}

uint64_t sub_1000DE048(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) view];
  id v3 = [v2 window];
  id v4 = [v3 windowScene];
  id v5 = [v4 activationState];

  if (v5 != (id)2) {
    [*(id *)(a1 + 32) invalidateManagedNavigationController];
  }
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
  *(unsigned char *)(*(void *)(a1 + 32) + 414) = 0;
  *(unsigned char *)(*(void *)(a1 + 32) + 415) = 0;
  return result;
}

void sub_1000DE0F4(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) containerView];
  [v1 setAlpha:0.0];
}

void sub_1000DE13C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  void v3[2] = sub_1000DE1F0;
  v3[3] = &unk_1001D4E68;
  void v3[4] = v2;
  id v4 = *(id *)(a1 + 40);
  char v6 = *(unsigned char *)(a1 + 56);
  id v5 = *(id *)(a1 + 48);
  [v2 dismissViewControllerAnimated:0 completion:v3];
}

uint64_t sub_1000DE1F0(uint64_t a1)
{
  [*(id *)(a1 + 32) _presentationControllerDidDismissPopover:*(void *)(a1 + 40) cleanSelectionState:*(unsigned __int8 *)(a1 + 56)];
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)(a1 + 48) + 16);

  return v2();
}

void sub_1000DE41C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  id v4 = [*(id *)(a1 + 32) view];
  id v3 = [v4 window];
  EKUIPopFallbackSizingContextWithViewHierarchy();
}

void sub_1000DE490(uint64_t a1)
{
  if (!*(unsigned char *)(*(void *)(a1 + 32) + 410) && *(void *)(a1 + 40))
  {
    uint64_t v2 = [*(id *)(a1 + 48) layer];
    id v3 = [v2 mask];
    id v4 = *(void **)(a1 + 48);
    if (v3)
    {
      id v5 = [v4 layer];
      char v6 = [v5 mask];
      [v6 frame];
      CGFloat v8 = v7;
      CGFloat v10 = v9;
      CGFloat v12 = v11;
      CGFloat v14 = v13;
    }
    else
    {
      [v4 bounds];
      CGFloat v8 = v15;
      CGFloat v10 = v16;
      CGFloat v12 = v17;
      CGFloat v14 = v18;
    }

    if (!*(void *)(a1 + 48)
      || (v42.origin.double x = v8, v42.origin.y = v10, v42.size.width = v12, v42.size.height = v14, CGRectIsEmpty(v42)))
    {
      double v19 = (void *)kCalUILogHandle;
      if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_ERROR))
      {
        id v20 = v19;
        *(_DWORD *)buf = 138412546;
        id v39 = (id)objc_opt_class();
        __int16 v40 = 2080;
        double v41 = "-[LargeWeekViewController _presentEventViewController:forOccurrenceView:animated:showComments:completion:]_block_invoke_2";
        id v21 = v39;
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "%@ [%s] Invalid occurrence view source for popover.", buf, 0x16u);
      }
    }
    double v22 = [*(id *)(a1 + 32) viewControllerToShowFrom];
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();
    objc_opt_class();
    char v24 = objc_opt_isKindOfClass();
    objc_opt_class();
    [v22 setNavigationBarHidden:((isKindOfClass | v24) | objc_opt_isKindOfClass()) & 1 animated:0];
    long long v25 = [*(id *)(a1 + 32) view];
    long long v26 = [v25 window];
    EKUIPushFallbackSizingContextWithViewHierarchy();

    uint64_t v28 = *(void *)(a1 + 32);
    long long v27 = *(void **)(a1 + 40);
    int v29 = *(unsigned __int8 *)(a1 + 65);
    if (*(unsigned char *)(a1 + 64)) {
      BOOL v30 = v29 == 0;
    }
    else {
      BOOL v30 = 0;
    }
    uint64_t v31 = v30;
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 3221225472;
    v33[2] = sub_1000DE794;
    v33[3] = &unk_1001D4EB8;
    char v37 = v29;
    id v34 = v27;
    id v32 = *(id *)(a1 + 56);
    uint64_t v35 = *(void *)(a1 + 32);
    id v36 = v32;
    [v22 showViewController:v34 sender:v28 animated:v31 completion:v33];
  }
}

void sub_1000DE794(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  void v3[2] = sub_1000DE844;
  v3[3] = &unk_1001D4EB8;
  char v7 = *(unsigned char *)(a1 + 56);
  id v4 = *(id *)(a1 + 32);
  id v2 = *(id *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 40);
  id v6 = v2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v3);
}

id sub_1000DE844(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 56))
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      [*(id *)(a1 + 32) openAttendeesDetailItem];
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  id v2 = *(void **)(a1 + 40);

  return [v2 setNeedsUpdateOfSupportedInterfaceOrientations];
}

uint64_t sub_1000DED4C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_1000DF100(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1000DF118(uint64_t a1)
{
  if (([*(id *)(a1 + 32) isNew] & 1) != 0 || *(unsigned char *)(a1 + 80))
  {
    id v2 = [*(id *)(a1 + 40) view];
    *(unsigned char *)(*(void *)(a1 + 40) + 414) = EKUICurrentWindowInterfaceParadigm_SupportsPopoversForEventEditing() ^ 1;

    uint64_t v3 = +[AddEventViewController editOrAddViewControllerForEventOrIntegrationWithEvent:model:creationMethod:eventEditViewDelegate:](AddEventViewController, "editOrAddViewControllerForEventOrIntegrationWithEvent:model:creationMethod:eventEditViewDelegate:", *(void *)(a1 + 32), *(void *)(*(void *)(a1 + 40) + 8), *(void *)(a1 + 72));
  }
  else
  {
    id v4 = [*(id *)(a1 + 40) augmentEventDetailsContext:*(void *)(a1 + 48)];
    uint64_t v5 = +[NSMutableDictionary dictionaryWithDictionary:v4];
    [v5 setObject:&__kCFBooleanFalse forKeyedSubscript:EKUIEventDetailsContext_AllowsCalendarPreview];
    [v5 setObject:&__kCFBooleanFalse forKeyedSubscript:EKUIEventDetailsContext_CalendarPreviewIsInlineDayView];
    id v6 = [*(id *)(a1 + 40) view];
    char v7 = +[NSNumber numberWithInt:EKUICurrentWindowInterfaceParadigm() == 8];
    [v5 setObject:v7 forKeyedSubscript:EKUIEventDetailsContext_MinimalMode];

    [v5 setObject:&__kCFBooleanFalse forKeyedSubscript:EKUIEventDetailsContext_ShowsDoneButton];
    uint64_t v8 = *(void *)(a1 + 32);
    double v9 = *(void **)(a1 + 40);
    CGFloat v10 = [v9 view];
    +[EKEventViewController eventDetailViewControllerWithEvent:v8 delegate:v9 context:v5 allowInlinePreview:0 previewInline:0 minimalMode:EKUICurrentWindowInterfaceParadigm() == 8];
    id v11 = (id)objc_claimAutoreleasedReturnValue();

    uint64_t v3 = (uint64_t)v11;
  }
  id v12 = (id)v3;
  [*(id *)(a1 + 40) _presentEventViewController:v3 forOccurrenceView:*(void *)(a1 + 56) animated:1 showComments:*(unsigned __int8 *)(a1 + 81) completion:*(void *)(a1 + 64)];
}

void sub_1000DFEC8(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 412) = 0;
  id v2 = [*(id *)(a1 + 32) managedNavigationController];
  [v2 sourceViewController:*(void *)(a1 + 32) notifiesReadinessForPresentation:1];
}

uint64_t sub_1000E11FC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_1000E1210(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) eventGestureController];
  uint64_t v3 = [v2 draggingView];
  [v3 setDrawsResizeHandles:0];

  id v5 = [*(id *)(a1 + 32) eventGestureController];
  id v4 = [v5 draggingView];
  [v4 setAlpha:0.0];
}

id sub_1000E12A8(uint64_t a1)
{
  return [*(id *)(a1 + 32) editorDidCancelEditingEvent:*(void *)(a1 + 40)];
}

uint64_t sub_1000E12B4(uint64_t a1)
{
  [*(id *)(a1 + 32) editorDidCancelEditingEvent:*(void *)(a1 + 40)];
  id v2 = *(uint64_t (**)(void))(*(void *)(a1 + 48) + 16);

  return v2();
}

id sub_1000E1300(uint64_t a1)
{
  return [*(id *)(a1 + 32) attemptDisplayReviewPrompt];
}

id sub_1000E1308(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  id v2 = *(void **)(a1 + 32);

  return [v2 attemptDisplayReviewPrompt];
}

void sub_1000E1950(uint64_t a1, void *a2)
{
  double v3 = *(double *)(a1 + 32);
  id v4 = a2;
  [v4 frame];
  [v4 showOverlayMonthInCellAtOffset:*(unsigned __int8 *)(a1 + 40) animated:v3 - CGRectGetMinX(v6)];
}

id sub_1000E1B88(uint64_t a1)
{
  return [*(id *)(a1 + 32) _presentationControllerDidDismissPopover:0 cleanSelectionState:1];
}

void sub_1000E1E80(id a1)
{
  uint64_t v1 = objc_opt_new();
  id v2 = (void *)qword_100216878;
  qword_100216878 = v1;

  [(id)qword_100216878 setCalculationType:1];
  [(id)qword_100216878 addAnchoredValue:2048 forWindowSizeWidth:72.0];
  double v3 = (void *)qword_100216878;

  [v3 addAnchoredValue:4096 forWindowSizeWidth:78.0];
}

void sub_1000E1F9C(uint64_t a1)
{
  id v4 = +[UIFontDescriptor preferredFontDescriptorWithTextStyle:UIFontTextStyleHeadline];
  [*(id *)(a1 + 32) _yearNumberFontSize];
  uint64_t v2 = +[UIFont fontWithDescriptor:size:](UIFont, "fontWithDescriptor:size:", v4);
  double v3 = (void *)qword_100216888;
  qword_100216888 = v2;
}

void sub_1000E20B0(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_100216898;
  qword_100216898 = v1;

  [(id)qword_100216898 setCalculationType:1];
  [(id)qword_100216898 addAnchoredValue:2048 forWindowSizeWidth:50.0];
  double v3 = (void *)qword_100216898;

  [v3 addAnchoredValue:4096 forWindowSizeWidth:50.0];
}

void sub_1000E2540(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_1002168B0;
  qword_1002168B0 = v1;

  [(id)qword_1002168B0 addAnchoredValue:2 forWindowSizeWidth:92.5];
  [(id)qword_1002168B0 addAnchoredValue:16 forWindowSizeWidth:105.0];
  [(id)qword_1002168B0 addAnchoredValue:32 forWindowSizeWidth:119.0];
  double v3 = (void *)qword_1002168B0;

  [v3 addAnchoredValue:128 forWindowSizeWidth:147.0];
}

void sub_1000E26E0(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_1002168C0;
  qword_1002168C0 = v1;

  [(id)qword_1002168C0 addAnchoredValue:2 forWindowSizeWidth:108.0];
  [(id)qword_1002168C0 addAnchoredValue:16 forWindowSizeWidth:126.5];
  [(id)qword_1002168C0 addAnchoredValue:32 forWindowSizeWidth:138.0];
  double v3 = (void *)qword_1002168C0;

  [v3 addAnchoredValue:128 forWindowSizeWidth:141.0];
}

void sub_1000E2900(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_1002168D0;
  qword_1002168D0 = v1;

  [(id)qword_1002168D0 addAnchoredValue:2 forWindowSizeWidth:-1.0];
  [(id)qword_1002168D0 addAnchoredValue:16 forWindowSizeWidth:0.0];
  double v3 = (void *)qword_1002168D0;

  [v3 addAnchoredValue:32 forWindowSizeWidth:0.0];
}

void sub_1000E29E0(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_1002168E0;
  qword_1002168E0 = v1;

  [(id)qword_1002168E0 addAnchoredValue:2 forWindowSizeWidth:2.0];
  [(id)qword_1002168E0 addAnchoredValue:16 forWindowSizeWidth:4.0];
  double v3 = (void *)qword_1002168E0;

  [v3 addAnchoredValue:32 forWindowSizeWidth:6.0];
}

void sub_1000E2AC0(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_1002168F0;
  qword_1002168F0 = v1;

  [(id)qword_1002168F0 addAnchoredValue:2 forWindowSizeWidth:5.5];
  [(id)qword_1002168F0 addAnchoredValue:16 forWindowSizeWidth:5.0];
  [(id)qword_1002168F0 addAnchoredValue:32 forWindowSizeWidth:5.0];
  double v3 = (void *)qword_1002168F0;

  [v3 addAnchoredValue:128 forWindowSizeWidth:5.0];
}

void sub_1000E2F98(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_100216918;
  qword_100216918 = v1;

  [(id)qword_100216918 addAnchoredValue:2 forWindowSizeWidth:8.0];
  [(id)qword_100216918 addAnchoredValue:16 forWindowSizeWidth:9.0];
  [(id)qword_100216918 addAnchoredValue:32 forWindowSizeWidth:10.6666667];
  double v3 = (void *)qword_100216918;

  [v3 addAnchoredValue:128 forWindowSizeWidth:12.0];
}

void sub_1000E308C(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_100216928;
  qword_100216928 = v1;

  [(id)qword_100216928 addAnchoredValue:2 forWindowSizeWidth:13.0];
  [(id)qword_100216928 addAnchoredValue:16 forWindowSizeWidth:14.0];
  double v3 = (void *)qword_100216928;

  [v3 addAnchoredValue:32 forWindowSizeWidth:16.0];
}

void sub_1000E31AC(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_100216938;
  qword_100216938 = v1;

  [(id)qword_100216938 addAnchoredValue:2 forWindowSizeWidth:24.0];
  [(id)qword_100216938 addAnchoredValue:16 forWindowSizeWidth:25.0];
  [(id)qword_100216938 addAnchoredValue:32 forWindowSizeWidth:26.5];
  double v3 = (void *)qword_100216938;

  [v3 addAnchoredValue:128 forWindowSizeWidth:27.0];
}

void sub_1000E32A0(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_100216948;
  qword_100216948 = v1;

  [(id)qword_100216948 addAnchoredValue:2 forWindowSizeWidth:13.0];
  [(id)qword_100216948 addAnchoredValue:16 forWindowSizeWidth:15.0];
  [(id)qword_100216948 addAnchoredValue:32 forWindowSizeWidth:17.0];
  double v3 = (void *)qword_100216948;

  [v3 addAnchoredValue:128 forWindowSizeWidth:20.0];
}

void sub_1000E3390(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_100216958;
  qword_100216958 = v1;

  [(id)qword_100216958 addAnchoredValue:2 forWindowSizeWidth:14.0];
  [(id)qword_100216958 addAnchoredValue:16 forWindowSizeWidth:17.0];
  [(id)qword_100216958 addAnchoredValue:32 forWindowSizeWidth:18.0];
  double v3 = (void *)qword_100216958;

  [v3 addAnchoredValue:128 forWindowSizeWidth:18.5];
}

void sub_1000E3484(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_100216968;
  qword_100216968 = v1;

  [(id)qword_100216968 setCalculationType:1];
  [(id)qword_100216968 addAnchoredValue:2 forWindowSizeWidth:0.0];
  [(id)qword_100216968 addAnchoredValue:16 forWindowSizeWidth:0.0];
  [(id)qword_100216968 addAnchoredValue:32 forWindowSizeWidth:-0.25];
  double v3 = (void *)qword_100216968;

  [v3 addAnchoredValue:128 forWindowSizeWidth:-0.25];
}

void sub_1000E3580(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_100216978;
  qword_100216978 = v1;

  [(id)qword_100216978 setCalculationType:1];
  [(id)qword_100216978 addAnchoredValue:2 forWindowSizeWidth:0.0];
  [(id)qword_100216978 addAnchoredValue:16 forWindowSizeWidth:0.0];
  [(id)qword_100216978 addAnchoredValue:32 forWindowSizeWidth:-0.25];
  double v3 = (void *)qword_100216978;

  [v3 addAnchoredValue:128 forWindowSizeWidth:-0.25];
}

void sub_1000E369C(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_100216988;
  qword_100216988 = v1;

  [(id)qword_100216988 addAnchoredValue:2 forWindowSizeWidth:-1.0];
  [(id)qword_100216988 addAnchoredValue:16 forWindowSizeWidth:-1.0];
  [(id)qword_100216988 addAnchoredValue:32 forWindowSizeWidth:-1.33333333];
  double v3 = (void *)qword_100216988;

  [v3 addAnchoredValue:128 forWindowSizeWidth:-2.0];
}

void sub_1000E3A18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000E3A44(uint64_t a1)
{
  id WeakRetained = (char *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained && !*(void *)(WeakRetained + 138))
  {
    uint64_t v2 = WeakRetained;
    [WeakRetained _configureSidebarConfigurationOfManagedNavigationController];
    id WeakRetained = v2;
  }
}

void sub_1000E4F38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, id a19)
{
}

void sub_1000E4F8C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    [WeakRetained setModelSelectedEvent:0];
    [v5 _selectEvent:0 animated:1 context:1];
    id v3 = objc_loadWeakRetained((id *)(a1 + 40));
    id v4 = [v3 presentingViewController];
    [v4 dismissViewControllerAnimated:1 completion:0];

    id WeakRetained = v5;
  }
}

void sub_1000E5954(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000E5984(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  CGRect v6 = [a2 occurrence];
  char v7 = [*(id *)(a1 + 32) occurrence];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v6 isEqual:v7];

  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)) {
    *a4 = 1;
  }
}

void sub_1000E5AD8(id a1)
{
  uint64_t v20 = objc_opt_class();
  uint64_t v1 = +[NSArray arrayWithObjects:&v20 count:1];
  uint64_t v2 = +[UINavigationBar appearanceWhenContainedInInstancesOfClasses:v1];
  id v3 = +[UIColor systemBackgroundColor];
  [v2 setBarTintColor:v3];

  uint64_t v19 = objc_opt_class();
  id v4 = +[NSArray arrayWithObjects:&v19 count:1];
  id v5 = +[UIToolbar appearanceWhenContainedInInstancesOfClasses:v4];
  CGRect v6 = +[UIColor systemBackgroundColor];
  [v5 setBarTintColor:v6];

  v18[0] = objc_opt_class();
  v18[1] = objc_opt_class();
  char v7 = +[NSArray arrayWithObjects:v18 count:2];
  uint64_t v8 = +[UITableView appearanceWhenContainedInInstancesOfClasses:v7];
  double v9 = +[UIColor systemGroupedBackgroundColor];
  [v8 setEditorBackgroundColor:v9];

  uint64_t v17 = objc_opt_class();
  CGFloat v10 = +[NSArray arrayWithObjects:&v17 count:1];
  id v11 = +[UITableView appearanceWhenContainedInInstancesOfClasses:v10];
  id v12 = +[UIColor systemGroupedBackgroundColor];
  [v11 setEditorBackgroundColor:v12];

  v16[0] = objc_opt_class();
  v16[1] = objc_opt_class();
  v16[2] = objc_opt_class();
  double v13 = +[NSArray arrayWithObjects:v16 count:3];
  CGFloat v14 = +[UILabel appearanceWhenContainedInInstancesOfClasses:v13];
  double v15 = +[UIColor clearColor];
  [v14 setEditorBackgroundColor:v15];
}

void sub_1000E795C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1000E7980(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    WeakRetained[124] = 0;
    uint64_t v2 = WeakRetained;
    [WeakRetained updateNoContentConfiguration];
    id WeakRetained = v2;
  }
}

id sub_1000E7E14(uint64_t a1)
{
  return _[*(id *)(a1 + 32) clearNoContentConfiguration];
}

uint64_t sub_1000E7E1C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_1000E7E34(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateNoContentConfiguration];
}

uint64_t sub_1000E7E3C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_1000E8548(uint64_t a1)
{
  return [*(id *)(a1 + 32) _selectEvent:*(void *)(a1 + 40) animated:*(unsigned __int8 *)(a1 + 52) context:*(unsigned int *)(a1 + 48)];
}

id sub_1000E855C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _resetSplitView];
}

id sub_1000E8564(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateNoContentConfiguration];
}

id sub_1000E8D4C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _selectEvents:*(void *)(a1 + 40) animated:*(unsigned __int8 *)(a1 + 52) context:*(unsigned int *)(a1 + 48)];
}

void sub_1000E8D60(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) day];
  id v3 = [v2 dayComponents];
  id v4 = [*(id *)(a1 + 32) dayView];
  id v5 = [v4 currentDayView];
  CGRect v6 = [v5 displayDate];
  unsigned int v7 = [v3 CalIsSameDayAsComponents:v6];

  if (v7)
  {
    uint64_t v8 = *(void **)(a1 + 32);
    [v8 _resetSplitView];
  }
}

id sub_1000E8E30(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateNoContentConfiguration];
}

void sub_1000E9068(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000E9080(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000E9090(uint64_t a1)
{
}

void sub_1000E9098(void *a1, void *a2)
{
  id v7 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && [v7 isSelectedCopyView])
  {
    if (os_variant_has_internal_ui())
    {
      id v4 = *(void **)(*(void *)(a1[5] + 8) + 40);
      if (v4)
      {
        id v5 = [v4 tag];
        if (v5 != [v7 tag])
        {
          CGRect v6 = +[NSAssertionHandler currentHandler];
          [v6 handleFailureInMethod:a1[6] object:a1[4] file:@"LargeDayViewController.m" lineNumber:1436 description:@"There shouldn't be more than one selectedOccurrenceFrontmostClonedView."];
        }
      }
    }
    objc_storeStrong((id *)(*(void *)(a1[5] + 8) + 40), a2);
  }
}

uint64_t sub_1000EAD44(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

uint64_t sub_1000EB294(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 120) = 0;
  return result;
}

void sub_1000EB474(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location, id a16)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a16);
  _Unwind_Resume(a1);
}

void sub_1000EB4A0(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = [WeakRetained shownEventViewController];
  [v4 setEditorShowTransition:0];

  id v5 = objc_loadWeakRetained(v2);
  CGRect v6 = [v5 shownEventViewController];
  [v6 editButtonTapped];

  id v7 = objc_loadWeakRetained(v2);
  uint64_t v8 = [v7 shownEventViewController];
  [v8 setEditorShowTransition:6];

  double v9 = (id *)(a1 + 40);
  id v10 = objc_loadWeakRetained(v9);
  LODWORD(v8) = [v10 isHidden];

  if (v8)
  {
    id v11 = objc_loadWeakRetained(v2);
    id v12 = [v11 managedNavigationController];
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_1000EB604;
    v13[3] = &unk_1001D41E8;
    objc_copyWeak(&v14, v9);
    [v12 enqueueBlock:v13];

    objc_destroyWeak(&v14);
  }
}

void sub_1000EB5F0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000EB604(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setHidden:0];
}

void sub_1000EDA00(uint64_t a1)
{
  [*(id *)(a1 + 32) firstDayCellInset];
  double v3 = v2;
  [*(id *)(a1 + 32) dayCellSize];
  double v5 = v4;
  double v7 = v6;
  uint64_t v8 = EKUIWidthSizeClassForViewHierarchy();
  if (![*(id *)(*(void *)(a1 + 32) + 8) count]) {
    goto LABEL_9;
  }
  unint64_t v9 = 0;
  double Width = -1.0;
  do
  {
    id v11 = [*(id *)(*(void *)(a1 + 32) + 8) objectAtIndex:v9];
    [v11 setFrame:v3, 0.0, v5, v7];
    [v11 setAlpha:1.0];
    if (((unint64_t)[*(id *)(a1 + 32) monthBreakIndex] & 0x8000000000000000) == 0
      && (uint64_t)v9 <= (uint64_t)[*(id *)(a1 + 32) monthBreakIndex])
    {
      double Width = v5 + v3;
    }
    [*(id *)(a1 + 32) dayCellSize];
    double v13 = v12;
    +[CompactDayNavigationViewCell standardCircleDiameterForSizeClass:v8];
    double v15 = v14;
    +[CompactDayNavigationViewCell overlayCircleDiameterForSizeClass:v8];
    double v17 = v16;
    +[CompactDayNavigationViewCell largeOverlayCircleDiameterForSizeClass:v8];
    [v11 setCircleDiameter:v15 overlayDiameter:v17 largeOverlayDiameter:v18];
    [v11 setMonthAnimationState:0];
    [v11 setApplyMonthAnimationStateAdjustments:0];
    [v11 layoutIfNeeded];

    id v19 = [*(id *)(*(void *)(a1 + 32) + 8) count];
    if (v9 > 5) {
      break;
    }
    double v3 = v3 + v13;
    ++v9;
  }
  while (v9 < (unint64_t)v19);
  if (Width < 0.0)
  {
LABEL_9:
    [*(id *)(a1 + 32) monthFrame];
    double Width = CGRectGetWidth(v74);
  }
  double v20 = 0.0;
  [*(id *)(*(void *)(a1 + 32) + 16) setAlpha:0.0];
  unint64_t v21 = (unint64_t)[*(id *)(a1 + 32) monthBreakIndex];
  uint64_t v22 = *(void *)(a1 + 32);
  if ((v21 & 0x8000000000000000) == 0 && *(void *)(v22 + 56) > *(void *)(v22 + 112))
  {
    [(id)v22 monthFrame];
    double v20 = Width;
    double Width = CGRectGetWidth(v75) - Width;
    uint64_t v22 = *(void *)(a1 + 32);
  }
  [*(id *)(v22 + 16) setFrame:v20];
  uint64_t v23 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v23 + 25))
  {
    [*(id *)(v23 + 32) sizeToFit];
    [*(id *)(*(void *)(a1 + 32) + 32) frame];
    CGFloat v25 = v24;
    CGFloat v27 = v26;
    double v29 = v28;
    double v31 = v30;
    if (CalTimeDirectionIsLeftToRight())
    {
      [*(id *)(*(void *)(a1 + 32) + 16) frame];
      CGRectGetMinX(v76);
      v77.origin.double x = v25;
      v77.origin.double y = v27;
      v77.size.double width = v29;
      v77.size.double height = v31;
      CGRectGetWidth(v77);
    }
    else
    {
      [*(id *)(*(void *)(a1 + 32) + 16) frame];
      CGRectGetMaxX(v78);
    }
    +[CompactMonthWeekView weekNumberDistanceFromGrayLine];
    CalRoundToScreenScale();
    double v33 = v32;
    [*(id *)(*(void *)(a1 + 32) + 16) frame];
    double MinY = CGRectGetMinY(v79);
    v80.origin.double x = v33;
    v80.origin.double y = v27;
    v80.size.double width = v29;
    v80.size.double height = v31;
    [*(id *)(*(void *)(a1 + 32) + 32) setFrame:v33 MinY + CGRectGetHeight(v80) * -0.5, v29, v31];
    [*(id *)(*(void *)(a1 + 32) + 32) setAlpha:0.0];
    uint64_t v23 = *(void *)(a1 + 32);
  }
  if (*(void *)(v23 + 64) == *(void *)(v23 + 56))
  {
    uint64_t v35 = [(id)v23 _todayCell];
    +[CompactDayNavigationViewCell standardCircleDiameterForSizeClass:v8];
    double v37 = v36;
    +[CompactDayNavigationViewCell overlayCircleDiameterForSizeClass:v8];
    double v39 = v38;
    +[CompactDayNavigationViewCell largeOverlayCircleDiameterForSizeClass:v8];
    [v35 setCircleDiameter:v37 overlayDiameter:v39 largeOverlayDiameter:v40];

    double v41 = [*(id *)(a1 + 32) _todayCell];
    [v41 layoutIfNeeded];

    uint64_t v23 = *(void *)(a1 + 32);
  }
  CGRect v42 = [(id)v23 monthOccurrencesSnapshot];

  if (v42)
  {
    double v43 = [*(id *)(a1 + 32) monthOccurrencesSnapshot];
    [v43 setAlpha:0.0];

    [*(id *)(a1 + 32) monthOccurrencesFrame];
    double v45 = v44;
    double v47 = v46;
    double v49 = v48;
    double v51 = v50;
    uint64_t v52 = [*(id *)(a1 + 32) monthOccurrencesSnapshot];
    [v52 setFrame:v45, v47, v49, v51];
  }
  uint64_t v53 = [*(id *)(a1 + 32) monthSummarySnapshots];
  id v54 = [v53 count];
  uint64_t v55 = [*(id *)(a1 + 32) monthSummaryFrames];
  id v56 = [v55 count];

  if (v54 == v56)
  {
    double v57 = [*(id *)(a1 + 32) monthSummarySnapshots];
    uint64_t v58 = (uint64_t)[v57 count];

    if (v58 >= 1)
    {
      uint64_t v59 = 0;
      do
      {
        double v60 = [*(id *)(a1 + 32) monthSummarySnapshots];
        double v61 = [v60 objectAtIndexedSubscript:v59];

        double v62 = [*(id *)(a1 + 32) monthSummaryFrames];
        double v63 = [v62 objectAtIndexedSubscript:v59];
        [v63 CGRectValue];
        double v65 = v64;
        double v67 = v66;
        double v69 = v68;
        double v71 = v70;

        [v61 setAlpha:0.0];
        [v61 setFrame:v65, v67, v69, v71];

        ++v59;
        double v72 = [*(id *)(a1 + 32) monthSummarySnapshots];
        id v73 = [v72 count];
      }
      while (v59 < (uint64_t)v73);
    }
  }
}

void sub_1000EDF40(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _todayCell];
  [v2 setCircled:*(void *)(*(void *)(a1 + 32) + 56) == *(void *)(*(void *)(a1 + 32) + 64) animated:*(unsigned __int8 *)(a1 + 40)];
}

void sub_1000EDFB8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _selectedCell];
  [v2 setCircled:1 animated:*(unsigned __int8 *)(a1 + 40)];
}

id sub_1000EE010(uint64_t a1)
{
  return [*(id *)(a1 + 32) setBounds:*(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64)];
}

void sub_1000EE61C(uint64_t a1)
{
  [*(id *)(a1 + 32) dayCellSize];
  if (((unint64_t)[*(id *)(a1 + 32) monthBreakIndex] & 0x8000000000000000) != 0)
  {
    double v3 = 1.0;
  }
  else
  {
    id v2 = [*(id *)(a1 + 32) monthBreakIndex];
    if ((uint64_t)v2 >= (uint64_t)[*(id *)(a1 + 32) selectedIndex]) {
      double v3 = 1.0;
    }
    else {
      double v3 = 0.0;
    }
  }
  if (![*(id *)(*(void *)(a1 + 32) + 8) count]) {
    goto LABEL_33;
  }
  id v118 = 0;
  double v4 = 0;
  uint64_t v5 = 6;
  double v6 = 0.0;
  do
  {
    double v7 = [*(id *)(*(void *)(a1 + 32) + 8) objectAtIndex:v4];
    uint64_t v8 = v4 - (unsigned char *)[*(id *)(a1 + 32) firstMonthCellIndex];
    if (!CalTimeDirectionIsLeftToRight()) {
      uint64_t v8 = v5;
    }
    if (v8 < 0
      || ([*(id *)(a1 + 32) monthCellFrames],
          unint64_t v9 = objc_claimAutoreleasedReturnValue(),
          id v10 = [v9 count],
          v9,
          v8 >= (uint64_t)v10))
    {
      [*(id *)(a1 + 32) dayCellSize];
      double v15 = v18;
      double v17 = v19;
    }
    else
    {
      id v11 = [*(id *)(a1 + 32) monthCellFrames];
      double v12 = [v11 objectAtIndex:v8];

      [v12 CGRectValue];
      double v6 = v13;
      double v15 = v14;
      [*(id *)(a1 + 32) dayCellSize];
      double v17 = v16;
    }
    if (((unint64_t)[*(id *)(a1 + 32) monthBreakIndex] & 0x8000000000000000) == 0
      && (uint64_t)v4 <= (uint64_t)[*(id *)(a1 + 32) monthBreakIndex])
    {
      id v20 = v7;

      id v118 = v20;
    }
    unint64_t v21 = *(void **)(a1 + 32);
    BOOL v22 = v4 == (char *)v21[8] || v4 == (char *)v21[7];
    [v21 _yOffsetForMonthCells:v22];
    [v7 setFrame:v6, v23, v15, v17];
    [v7 setAlpha:v3];
    if (v4 == [*(id *)(a1 + 32) monthBreakIndex])
    {
      id v24 = [*(id *)(a1 + 32) monthBreakIndex];
      if ((uint64_t)v24 >= (uint64_t)[*(id *)(a1 + 32) selectedIndex]) {
        double v3 = 0.0;
      }
      else {
        double v3 = 1.0;
      }
    }
    if (v4 == *(char **)(*(void *)(a1 + 32) + 64)) {
      [v7 setApplyMonthAnimationStateAdjustments:1];
    }
    else {
      [v7 setMonthAnimationState:1];
    }
    if (*(unsigned char *)(*(void *)(a1 + 32) + 40)) {
      +[CompactMonthWeekView circleDiameterCompressed];
    }
    else {
      +[CompactMonthWeekView circleDiameter];
    }
    double v26 = v25;
    +[CompactMonthWeekView circleDiameterWithOverlay];
    double v28 = v27;
    +[CompactMonthWeekView circleDiameterWithOverlayLarge];
    [v7 setCircleDiameter:v26 overlayDiameter:v28 largeOverlayDiameter:v29];
    [v7 layoutIfNeeded];

    double v30 = (char *)[*(id *)(*(void *)(a1 + 32) + 8) count];
    if ((unint64_t)v4 > 5) {
      break;
    }
    double v6 = v6 + v15;
    ++v4;
    --v5;
  }
  while (v4 < v30);
  if (!v118)
  {
LABEL_33:
    id v118 = [*(id *)(*(void *)(a1 + 32) + 8) objectAtIndexedSubscript:6];
  }
  [*(id *)(*(void *)(a1 + 32) + 16) setAlpha:1.0];
  if (((unint64_t)[*(id *)(a1 + 32) monthBreakIndex] & 0x8000000000000000) == 0)
  {
    double v31 = *(void **)(a1 + 32);
    if (v31[7] > v31[14])
    {
      [v31 monthFrame];
      double Width = CGRectGetWidth(v120);
      [v118 frame];
      double v33 = Width - CGRectGetMaxX(v121);
      if (*(unsigned char *)(*(void *)(a1 + 32) + 25) && (CalTimeDirectionIsLeftToRight() & 1) == 0)
      {
        id v34 = [*(id *)(a1 + 32) monthCellFrames];
        uint64_t v35 = [v34 firstObject];

        if (v35)
        {
          [*(id *)(a1 + 32) monthFrame];
          double MaxX = CGRectGetMaxX(v122);
          +[CompactMonthWeekView twoDigitWeekNumberWidth];
          double v38 = MaxX - v37;
          +[CompactMonthWeekView weekNumberDistanceFromGrayLine];
          double v40 = v38 - v39;
          [v118 frame];
          double v33 = v40 - CGRectGetMaxX(v123);
        }
      }
      [v118 frame];
      double v41 = CGRectGetMaxX(v124);
      goto LABEL_51;
    }
  }
  [v118 frame];
  double v33 = CGRectGetMaxX(v125);
  uint64_t v42 = *(void *)(a1 + 32);
  if (!*(unsigned char *)(v42 + 25))
  {
    double v41 = 0.0;
    goto LABEL_52;
  }
  double v43 = [(id)v42 monthCellFrames];
  double v44 = [v43 firstObject];

  double v41 = 0.0;
  if (v44)
  {
    if (CalTimeDirectionIsLeftToRight())
    {
      +[CompactMonthWeekView twoDigitWeekNumberWidth];
      double v46 = v45;
      +[CompactMonthWeekView weekNumberDistanceFromGrayLine];
      double v48 = v46 + v47 * 2.0;
      double v41 = v48 + 0.0;
LABEL_49:
      double v33 = v33 - v48;
      goto LABEL_50;
    }
    id v49 = [*(id *)(*(void *)(a1 + 32) + 8) objectAtIndexedSubscript:6];

    if (v118 == v49)
    {
      [*(id *)(a1 + 32) monthFrame];
      double v50 = CGRectGetMaxX(v126);
      +[CompactMonthWeekView twoDigitWeekNumberWidth];
      double v33 = v50 - v51;
      +[CompactMonthWeekView weekNumberDistanceFromGrayLine];
      goto LABEL_49;
    }
  }
LABEL_50:

LABEL_51:
  uint64_t v42 = *(void *)(a1 + 32);
LABEL_52:
  [*(id *)(v42 + 16) setFrame:v41, 0.0, v33, 1.0];
  uint64_t v52 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v52 + 25))
  {
    [*(id *)(v52 + 32) sizeToFit];
    [*(id *)(*(void *)(a1 + 32) + 32) frame];
    CGFloat v54 = v53;
    CGFloat v56 = v55;
    double v58 = v57;
    double v60 = v59;
    if (CalTimeDirectionIsLeftToRight())
    {
      [*(id *)(*(void *)(a1 + 32) + 16) frame];
      CGRectGetMinX(v127);
      v128.origin.double x = v54;
      v128.origin.double y = v56;
      v128.size.double width = v58;
      v128.size.double height = v60;
      CGRectGetWidth(v128);
    }
    else
    {
      [*(id *)(*(void *)(a1 + 32) + 16) frame];
      CGRectGetMaxX(v129);
    }
    +[CompactMonthWeekView weekNumberDistanceFromGrayLine];
    CalRoundToScreenScale();
    double v62 = v61;
    [*(id *)(*(void *)(a1 + 32) + 16) frame];
    CGRectGetMinY(v130);
    v131.origin.double x = v62;
    v131.origin.double y = v56;
    v131.size.double width = v58;
    v131.size.double height = v60;
    CGRectGetHeight(v131);
    CalRoundToScreenScale();
    [*(id *)(*(void *)(a1 + 32) + 32) setFrame:v62, v63, v58, v60];
    [*(id *)(*(void *)(a1 + 32) + 32) setAlpha:1.0];
    uint64_t v52 = *(void *)(a1 + 32);
  }
  double v64 = [(id)v52 _todayCell];
  if (v64)
  {
  }
  else
  {
    double v65 = [*(id *)(a1 + 32) _selectedCell];

    if (!v65) {
      goto LABEL_64;
    }
  }
  double v66 = *(unsigned __int8 **)(a1 + 32);
  int v67 = v66[40];
  double v68 = [v66 _todayCell];
  if (v67)
  {
    +[CompactMonthWeekView circleDiameterCompressed];
    double v70 = v69;
    +[CompactMonthWeekView circleDiameterWithOverlay];
    double v72 = v71;
    +[CompactMonthWeekView circleDiameterWithOverlayLarge];
    [v68 setCircleDiameter:v70 overlayDiameter:v72 largeOverlayDiameter:v73];

    CGRect v74 = [*(id *)(a1 + 32) _selectedCell];
    +[CompactMonthWeekView circleDiameterCompressed];
    double v76 = v75;
    +[CompactMonthWeekView circleDiameterWithOverlay];
    double v78 = v77;
    +[CompactMonthWeekView circleDiameterWithOverlayLarge];
    [v74 setCircleDiameter:v76 overlayDiameter:v78 largeOverlayDiameter:v79];

    double v68 = [*(id *)(a1 + 32) _selectedCell];
    [v68 layoutIfNeeded];
  }
  else
  {
    +[CompactMonthWeekView circleDiameter];
    double v81 = v80;
    +[CompactMonthWeekView circleDiameterWithOverlay];
    double v83 = v82;
    +[CompactMonthWeekView circleDiameterWithOverlayLarge];
    [v68 setCircleDiameter:v81 overlayDiameter:v83 largeOverlayDiameter:v84];
  }

  id v85 = [*(id *)(a1 + 32) _todayCell];
  [v85 layoutIfNeeded];

LABEL_64:
  v86 = [*(id *)(a1 + 32) monthOccurrencesSnapshot];

  if (v86)
  {
    CGRect v87 = [*(id *)(a1 + 32) monthOccurrencesSnapshot];
    [v87 setAlpha:1.0];

    [*(id *)(a1 + 32) monthOccurrencesFrame];
    double v89 = v88;
    double v91 = v90;
    double v93 = v92;
    double v95 = v94;
    CGRect v96 = [*(id *)(a1 + 32) monthOccurrencesSnapshot];
    [v96 setFrame:v89, v91, v93, v95];
  }
  CGRect v97 = [*(id *)(a1 + 32) monthSummarySnapshots];
  id v98 = [v97 count];
  CGRect v99 = [*(id *)(a1 + 32) monthSummaryFrames];
  id v100 = [v99 count];

  if (v98 == v100)
  {
    v101 = [*(id *)(a1 + 32) monthSummarySnapshots];
    uint64_t v102 = (uint64_t)[v101 count];

    if (v102 >= 1)
    {
      uint64_t v103 = 0;
      do
      {
        v104 = [*(id *)(a1 + 32) monthSummarySnapshots];
        v105 = [v104 objectAtIndexedSubscript:v103];

        v106 = [*(id *)(a1 + 32) monthSummaryFrames];
        v107 = [v106 objectAtIndexedSubscript:v103];
        [v107 CGRectValue];
        double v109 = v108;
        double v111 = v110;
        double v113 = v112;
        double v115 = v114;

        [v105 setAlpha:1.0];
        [v105 setFrame:v109, v111, v113, v115];

        ++v103;
        v116 = [*(id *)(a1 + 32) monthSummarySnapshots];
        id v117 = [v116 count];
      }
      while (v103 < (uint64_t)v117);
    }
  }
}

void sub_1000EEEE8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _todayCell];
  [v2 setCircled:*(void *)(*(void *)(a1 + 32) + 56) == *(void *)(*(void *)(a1 + 32) + 64) animated:*(unsigned __int8 *)(a1 + 40)];
}

void sub_1000EEF60(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _selectedCell];
  [v2 setCircled:1 animated:*(unsigned __int8 *)(a1 + 40)];
}

void sub_1000EEFB8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _todayCell];
  [v2 setCircled:1 animated:*(unsigned __int8 *)(a1 + 40)];
}

void sub_1000EF010(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _selectedCell];
  [v2 setCircled:*(unsigned char *)(a1 + 40) == 0];
}

id sub_1000EF06C(uint64_t a1)
{
  return [*(id *)(a1 + 32) setBounds:*(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64)];
}

id sub_1000EF294(uint64_t a1)
{
  double v2 = *(double *)(a1 + 40);
  double v3 = *(double *)(a1 + 48);
  [*(id *)(a1 + 32) frame];
  double v5 = v4;
  [*(id *)(a1 + 32) frame];
  double v6 = *(void **)(a1 + 32);

  return [v6 setFrame:v2, v3, v5];
}

id paletteTitleFont(void *a1, void *a2)
{
  id v3 = a1;
  double v4 = UIFontTextStyleLargeTitle;
  if (![a2 userInterfaceIdiom] && (char *)objc_msgSend(v3, "interfaceOrientation") - 3 <= (char *)1)
  {
    double v5 = UIFontTextStyleTitle2;

    double v4 = v5;
  }
  double v6 = +[UIFont _preferredFontForTextStyle:v4 maximumContentSizeCategory:UIContentSizeCategoryMedium];
  double v7 = +[UIFontDescriptor preferredFontDescriptorWithTextStyle:v4 addingSymbolicTraits:2 options:0];
  [v6 pointSize];
  uint64_t v8 = +[UIFont fontWithDescriptor:size:](UIFont, "fontWithDescriptor:size:", v7);

  return v8;
}

id contactForSource(void *a1)
{
  id v1 = a1;
  double v2 = [v1 preferredOwnerAddress];
  id v3 = v2;
  if (v2)
  {
    if ([v2 hasMailto])
    {
      uint64_t v4 = [v3 stringRemovingMailto];
LABEL_6:
      double v5 = (void *)v4;
      goto LABEL_22;
    }
    if ([v3 hasTel])
    {
      uint64_t v4 = [v3 stringRemovingTel];
      goto LABEL_6;
    }
  }
  double v6 = [v1 ownerAddresses];
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  id v7 = [v6 countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (!v7)
  {
    double v5 = 0;
    goto LABEL_21;
  }
  id v8 = v7;
  uint64_t v9 = *(void *)v18;
  while (2)
  {
    for (uint64_t i = 0; i != v8; uint64_t i = (char *)i + 1)
    {
      if (*(void *)v18 != v9) {
        objc_enumerationMutation(v6);
      }
      id v11 = *(void **)(*((void *)&v17 + 1) + 8 * i);
      if ([v11 hasMailto])
      {
        uint64_t v12 = [v11 stringRemovingMailto];
LABEL_20:
        double v5 = (void *)v12;
        goto LABEL_21;
      }
      if ([v11 hasTel])
      {
        uint64_t v12 = [v11 stringRemovingTel];
        goto LABEL_20;
      }
    }
    id v8 = [v6 countByEnumeratingWithState:&v17 objects:v21 count:16];
    double v5 = 0;
    if (v8) {
      continue;
    }
    break;
  }
LABEL_21:

LABEL_22:
  double v13 = CUIKDisplayedTitleForSource();
  double v14 = +[EKUILabeledAvatarView contactKeysToFetch];
  double v15 = +[ContactsUtils contactForAddress:v5 fullName:v13 firstName:0 lastName:0 keysToFetch:v14];

  return v15;
}

unint64_t EKUICurrentWindowInterfaceParadigm_ShouldUseLargeFormatInterface()
{
  return ((unint64_t)EKUICurrentWindowInterfaceParadigm() >> 4) & 1;
}

unint64_t EKUICurrentWindowInterfaceParadigm_SupportsPopoversForEventEditing()
{
  return ((unint64_t)EKUICurrentWindowInterfaceParadigm() >> 4) & 1;
}

id sub_1000F1320(uint64_t a1)
{
  return [*(id *)(a1 + 32) restorePresentedViewControllers:*(void *)(a1 + 40) startIndex:0 presenter:*(void *)(a1 + 48)];
}

void sub_1000F15F4(uint64_t a1)
{
  double v2 = (id)kCalUILogHandle;
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();
    uint64_t v4 = *(void **)(a1 + 32);
    if (isKindOfClass)
    {
      uint64_t v4 = [*(id *)(a1 + 32) topViewController];
    }
    *(_DWORD *)buf = 138412290;
    double v15 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "[83058884] CalendarVC restoring presented vc %@", buf, 0xCu);
    if (isKindOfClass) {
  }
    }
  uint64_t v6 = *(void *)(a1 + 32);
  double v5 = *(void **)(a1 + 40);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1000F1778;
  v10[3] = &unk_1001D35F8;
  id v7 = *(void **)(a1 + 56);
  void v10[4] = *(void *)(a1 + 48);
  id v8 = v7;
  uint64_t v9 = *(void *)(a1 + 64);
  id v11 = v8;
  uint64_t v13 = v9;
  id v12 = *(id *)(a1 + 32);
  [v5 presentViewController:v6 animated:0 completion:v10];
}

id sub_1000F1778(uint64_t a1)
{
  return [*(id *)(a1 + 32) restorePresentedViewControllers:*(void *)(a1 + 40) startIndex:*(void *)(a1 + 56) + 1 presenter:*(void *)(a1 + 48)];
}

void sub_1000F1ABC(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) application];
  id v3 = [v2 rootNavigationController];
  id v4 = [v3 resetToYearView];

  dispatch_time_t v5 = dispatch_time(0, 2000000000);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1000F1BC8;
  v7[3] = &unk_1001D2E90;
  uint64_t v6 = *(void **)(a1 + 40);
  void v7[4] = *(void *)(a1 + 32);
  id v8 = v6;
  id v9 = *(id *)(a1 + 48);
  id v10 = *(id *)(a1 + 56);
  dispatch_after(v5, (dispatch_queue_t)&_dispatch_main_q, v7);
}

void sub_1000F1BC8(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  void v3[2] = sub_1000F1C84;
  v3[3] = &unk_1001D2E90;
  double v2 = *(void **)(a1 + 40);
  void v3[4] = *(void *)(a1 + 32);
  id v4 = v2;
  id v5 = *(id *)(a1 + 48);
  id v6 = *(id *)(a1 + 56);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v3);
}

void sub_1000F1C84(uint64_t a1)
{
  id v3 = [(id)objc_opt_class() testName];
  [*(id *)(a1 + 40) startedTest:v3];
  id v2 = [*(id *)(a1 + 48) pushCalendarViewControllerWithViewType:[*(id *)(a1 + 32) _viewType] andDate:*(void *)(a1 + 56)];
}

void sub_1000F1DBC(uint64_t a1)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 removeObserver:*(void *)(a1 + 32)];
}

void sub_1000F2458(id a1, UIMutableTraits *a2)
{
}

void sub_1000F2A20(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1000F2A4C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (*(unsigned char *)(a1 + 48)
    || (uint64_t v5 = *(void *)(a1 + 32), *(void *)(v5 + 112))
    && (v6[0] = _NSConcreteStackBlock,
        v6[1] = 3221225472,
        v6[2] = sub_1000F2B40,
        v6[3] = &unk_1001D2740,
        void v6[4] = v5,
        +[UIView performWithoutAnimation:v6],
        *(unsigned char *)(a1 + 48)))
  {
    if (*(unsigned char *)(a1 + 49))
    {
      if (!*(unsigned char *)(a1 + 50))
      {
        id v4 = *(void **)(a1 + 32);
        if (v4[14])
        {
          [v4 setCurrentSidebarState:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)];
          *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
        }
      }
    }
  }
}

id sub_1000F2B40(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = *(void **)(v1 + 8);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  _DWORD v4[2] = sub_1000F2BC0;
  v4[3] = &unk_1001D5210;
  void v4[4] = v1;
  return [v2 showCalendarsAnimated:0 completion:v4];
}

void sub_1000F2BC0(uint64_t a1, void *a2)
{
  [a2 restorePreservedState:*(void *)(*(void *)(a1 + 32) + 112)];
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(void **)(v3 + 112);
  *(void *)(v3 + 112) = 0;
}

void sub_1000F2C14(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  if (v4) {
    [v4 becomeFirstResponder];
  }
  [*(id *)(*(void *)(a1 + 40) + 16) setOverrideTraitCollection:*(void *)(a1 + 48) forChildViewController:*(void *)(*(void *)(a1 + 40) + 24)];
  [*(id *)(a1 + 40) layoutSearchControl];
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v6 = *(void *)(v5 + 8);
  uint64_t v7 = *(void *)(v6 + 24);
  BOOL v8 = v7 == 0;
  if (!v7)
  {
    if (!*(void *)(*(void *)(a1 + 40) + 112) || !*(unsigned char *)(a1 + 72))
    {
      BOOL v8 = 0;
      goto LABEL_12;
    }
    *(void *)(v6 + 24) = 1;
    uint64_t v5 = *(void *)(a1 + 64);
    uint64_t v7 = *(void *)(*(void *)(v5 + 8) + 24);
  }
  if (v7 == 2)
  {
    if (*(void *)(a1 + 56))
    {
      id v9 = [*(id *)(*(void *)(a1 + 40) + 16) splitBehavior];
      uint64_t v5 = *(void *)(a1 + 64);
      if (v9 == (id)2)
      {
        *(void *)(*(void *)(v5 + 8) + 24) = 0;
        uint64_t v5 = *(void *)(a1 + 64);
      }
    }
  }
LABEL_12:
  uint64_t v10 = *(void *)(*(void *)(v5 + 8) + 24);
  if (v10)
  {
    uint64_t v11 = *(void *)(a1 + 40);
    if (v10 != *(void *)(v11 + 136) || *(void *)(v11 + 112))
    {
      v18[0] = _NSConcreteStackBlock;
      v18[1] = 3221225472;
      void v18[2] = sub_1000F2E48;
      void v18[3] = &unk_1001D3260;
      v18[4] = v11;
      v18[5] = v5;
      id v12 = objc_retainBlock(v18);
      uint64_t v13 = v12;
      if (v8)
      {
        dispatch_time_t v14 = dispatch_time(0, 0);
        dispatch_after(v14, (dispatch_queue_t)&_dispatch_main_q, v13);
      }
      else
      {
        ((void (*)(void *))v12[2])(v12);
      }
    }
  }
  double v15 = *(void **)(a1 + 56);
  if (v15)
  {
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    v16[2] = sub_1000F2ED4;
    void v16[3] = &unk_1001D28A8;
    v16[4] = *(void *)(a1 + 40);
    id v17 = v15;
    +[UIView performWithoutAnimation:v16];
  }
}

id sub_1000F2E48(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1000F2EC4;
  v2[3] = &unk_1001D3260;
  long long v3 = *(_OWORD *)(a1 + 32);
  return +[UIView performWithoutAnimation:v2];
}

id sub_1000F2EC4(uint64_t a1)
{
  return [*(id *)(a1 + 32) setCurrentSidebarState:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)];
}

id sub_1000F2ED4(uint64_t a1)
{
  return _[*(id *)(*(void *)(a1 + 32) + 8) restoreEventDetailViewControllers:*(void *)(a1 + 40)];
}

void sub_1000F31E0(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 48) || fabs(*(double *)(a1 + 40)) != 180.0)
  {
    id v2 = *(void **)(a1 + 32);
    long long v3 = [v2 traitCollection];
    [v2 setupSearchControlForTraitCollection:v3];

    [*(id *)(a1 + 32) layoutSearchControl];
  }
  [*(id *)(a1 + 32) updatePrimaryViewControllerToolbar];
  id v4 = *(void **)(a1 + 32);
  uint64_t v5 = (void *)v4[5];
  id v7 = [v4 view];
  [v7 bounds];
  [v5 layoutForWidth:v6];
}

void sub_1000F34A8(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  long long v3 = (void *)v2[1];
  id v4 = [v2 traitCollection];
  [v3 setAvatarViewVisible:[v2 canShowAvatarViewWithTraitCollection:v4]];

  id v5 = [(id)objc_opt_class() shouldHideInlineFocusBannerForSidebarState:0];
  id v6 = [*(id *)(*(void *)(a1 + 32) + 8) paletteView];
  [v6 setShouldHideInlineFocusBanner:v5];
}

void sub_1000F3B4C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(*(void *)(a1 + 32) + 8) model];
  id v5 = [v4 eventStore];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1000F3C1C;
  v7[3] = &unk_1001D4870;
  id v8 = v3;
  id v6 = v3;
  [v5 familyCalendarsWithCompletion:v7];
}

void sub_1000F3C1C(uint64_t a1, void *a2)
{
  id v4 = a2;
  if ([v4 count] == (id)1)
  {
    id v3 = [v4 firstObject];
    [*(id *)(a1 + 32) showCalendar:v3 enableDoneInitially:0];
  }
}

id sub_1000F4028(uint64_t a1)
{
  return [*(id *)(a1 + 32) layoutSearchControl];
}

id sub_1000F4030(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 64) becomeFirstResponder];
  id v2 = *(void **)(a1 + 32);

  return [v2 setNeedsUpdateOfSupportedInterfaceOrientations];
}

void sub_1000F4618(uint64_t a1)
{
  if ([*(id *)(*(void *)(a1 + 32) + 16) splitBehavior] == (id)1)
  {
    id v2 = *(void **)(a1 + 32);
    id v3 = (void *)v2[1];
    id v4 = [v2 traitCollection];
    [v3 setAvatarViewVisible:[v2 canShowAvatarViewWithTraitCollection:v4]];
  }
  id v5 = [(id)objc_opt_class() shouldHideInlineFocusBannerForSidebarState:0];
  id v6 = [*(id *)(*(void *)(a1 + 32) + 8) paletteView];
  [v6 setShouldHideInlineFocusBanner:v5];
}

uint64_t sub_1000F46F0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000F4700(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 32) cancelSearch];
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v2 + 97)) {
    [*(id *)(v2 + 8) setAvatarViewVisible:0];
  }
  id v3 = [(id)objc_opt_class() shouldHideInlineFocusBannerForSidebarState:*(void *)(a1 + 40)];
  id v4 = [*(id *)(*(void *)(a1 + 32) + 8) paletteView];
  [v4 setShouldHideInlineFocusBanner:v3];
}

uint64_t sub_1000F47B4(uint64_t a1, void *a2)
{
  uint64_t isKindOfClass = a2;
  uint64_t v4 = isKindOfClass;
  if (*(void *)(*(void *)(a1 + 32) + 112))
  {
    uint64_t v8 = isKindOfClass;
    objc_opt_class();
    uint64_t isKindOfClass = objc_opt_isKindOfClass();
    uint64_t v4 = v8;
    if (isKindOfClass)
    {
      [*(id *)(a1 + 40) restorePreservedState:*(void *)(*(void *)(a1 + 32) + 112)];
      uint64_t v5 = *(void *)(a1 + 32);
      id v6 = *(void **)(v5 + 112);
      *(void *)(v5 + 112) = 0;

      uint64_t v4 = v8;
    }
  }

  return _objc_release_x1(isKindOfClass, v4);
}

void sub_1000F4954(uint64_t a1, void *a2)
{
  id v6 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  uint64_t v4 = *(void *)(a1 + 32);
  if (v4)
  {
    id v5 = v6;
    if ((isKindOfClass & 1) == 0) {
      id v5 = 0;
    }
    (*(void (**)(uint64_t, id))(v4 + 16))(v4, v5);
  }
}

void sub_1000F4AD8(uint64_t a1, void *a2)
{
  id v6 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  uint64_t v4 = *(void *)(a1 + 32);
  if (v4)
  {
    id v5 = v6;
    if ((isKindOfClass & 1) == 0) {
      id v5 = 0;
    }
    (*(void (**)(uint64_t, id))(v4 + 16))(v4, v5);
  }
}

void sub_1000F4C5C(uint64_t a1, void *a2)
{
  id v6 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  uint64_t v4 = *(void *)(a1 + 32);
  if (v4)
  {
    id v5 = v6;
    if ((isKindOfClass & 1) == 0) {
      id v5 = 0;
    }
    (*(void (**)(uint64_t, id))(v4 + 16))(v4, v5);
  }
}

id sub_1000F502C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) view];
  [v2 addSubview:*(void *)(*(void *)(a1 + 32) + 72)];

  id v3 = *(void **)(*(void *)(a1 + 32) + 72);

  return [v3 setAlpha:0.0];
}

id sub_1000F5098(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1000F5118;
  v2[3] = &unk_1001D2740;
  void v2[4] = *(void *)(a1 + 32);
  return +[UIView animateWithDuration:v2 animations:0.25];
}

id sub_1000F5118(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 72) setAlpha:1.0];
}

id sub_1000F52FC(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 8) showEvent:*(void *)(a1 + 40) animated:*(unsigned __int8 *)(a1 + 56) showMode:*(void *)(a1 + 48) context:0];
}

id sub_1000F60A0(uint64_t a1, void *a2)
{
  return [a2 showCalendar:*(void *)(a1 + 32) enableDoneInitially:*(unsigned __int8 *)(a1 + 40)];
}

id sub_1000F6190(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 8) dismissPresentedViewControllerAnimated:*(unsigned __int8 *)(a1 + 48) completion:*(void *)(a1 + 40)];
}

void sub_1000F7208(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) _getEvent];
  id v3 = [(id)objc_opt_class() testName];
  uint64_t v4 = [*(id *)(a1 + 32) controller];
  [v4 showEvent:v2 animated:0 showMode:1 context:0];

  dispatch_time_t v5 = dispatch_time(0, 2000000000);
  id v6 = dispatch_get_global_queue(0, 0);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1000F734C;
  v10[3] = &unk_1001D2E90;
  id v7 = *(void **)(a1 + 40);
  void v10[4] = *(void *)(a1 + 32);
  id v11 = v2;
  id v12 = v7;
  id v13 = v3;
  id v8 = v3;
  id v9 = v2;
  dispatch_after(v5, v6, v10);
}

void sub_1000F734C(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  void v3[2] = sub_1000F7408;
  v3[3] = &unk_1001D2E90;
  uint64_t v2 = *(void **)(a1 + 40);
  void v3[4] = *(void *)(a1 + 32);
  id v4 = v2;
  id v5 = *(id *)(a1 + 48);
  id v6 = *(id *)(a1 + 56);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v3);
}

void sub_1000F7408(id *a1)
{
  uint64_t v2 = [a1[4] controller];
  id v3 = [v2 shownEventViewController];
  [v3 doneButtonTapped];

  dispatch_time_t v4 = dispatch_time(0, 2000000000);
  id v5 = dispatch_get_global_queue(0, 0);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1000F7520;
  v8[3] = &unk_1001D2E90;
  id v9 = a1[5];
  id v10 = a1[6];
  id v6 = a1[7];
  id v7 = a1[4];
  id v11 = v6;
  id v12 = v7;
  dispatch_after(v4, v5, v8);
}

void sub_1000F7520(uint64_t a1)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  _DWORD v4[2] = sub_1000F75DC;
  v4[3] = &unk_1001D2E90;
  id v5 = *(id *)(a1 + 32);
  id v6 = *(id *)(a1 + 40);
  id v2 = *(id *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  id v7 = v2;
  uint64_t v8 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);
}

void sub_1000F75DC(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v2 = *(void **)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  if (v3)
  {
    [v2 startedTest:v4];
    id v5 = [*(id *)(a1 + 56) controller];
    [v5 showEvent:*(void *)(a1 + 32) animated:0 showMode:1 context:0];

    id v6 = (void *)UIApp;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_1000F7710;
    v10[3] = &unk_1001D2EE0;
    id v11 = *(id *)(a1 + 40);
    id v7 = *(id *)(a1 + 48);
    uint64_t v8 = *(void *)(a1 + 56);
    id v12 = v7;
    uint64_t v13 = v8;
    [v6 installCACommitCompletionBlock:v10];
  }
  else
  {
    [v2 failedTest:v4 withFailure:@"No Events Loaded"];
    id v9 = +[NSNotificationCenter defaultCenter];
    [v9 removeObserver:*(void *)(a1 + 56)];
  }
}

id sub_1000F7710(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedTest:*(void *)(a1 + 40)];
  id v2 = *(void **)(a1 + 48);

  return [v2 cleanUp];
}

void sub_1000F7DC0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _getEvent];
  uint64_t v3 = [(id)objc_opt_class() testName];
  if ([v2 isNew])
  {
    [*(id *)(a1 + 40) failedTest:v3 withFailure:@"Event failed to save"];
    uint64_t v4 = +[NSNotificationCenter defaultCenter];
    [v4 removeObserver:*(void *)(a1 + 32)];
  }
  id v5 = *(void **)(*(void *)(a1 + 32) + 56);
  id v6 = [v2 startDate];
  id v7 = [*(id *)(a1 + 32) model];
  uint64_t v8 = [v7 eventStore];
  id v9 = [v8 timeZone];
  id v10 = +[EKCalendarDate calendarDateWithDate:v6 timeZone:v9];
  [v5 selectDate:v10 animated:0];

  dispatch_time_t v11 = dispatch_time(0, 2000000000);
  id v12 = dispatch_get_global_queue(0, 0);
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_1000F7FC0;
  v15[3] = &unk_1001D2E90;
  id v16 = v2;
  id v17 = *(id *)(a1 + 40);
  id v18 = v3;
  uint64_t v19 = *(void *)(a1 + 32);
  id v13 = v3;
  id v14 = v2;
  dispatch_after(v11, v12, v15);
}

void sub_1000F7FC0(uint64_t a1)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  _DWORD v4[2] = sub_1000F807C;
  v4[3] = &unk_1001D2E90;
  id v5 = *(id *)(a1 + 32);
  id v6 = *(id *)(a1 + 40);
  id v2 = *(id *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  id v7 = v2;
  uint64_t v8 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);
}

void sub_1000F807C(uint64_t a1)
{
  dispatch_time_t v2 = dispatch_time(0, 2000000000);
  uint64_t v3 = dispatch_get_global_queue(0, 0);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1000F816C;
  v6[3] = &unk_1001D2E90;
  id v7 = *(id *)(a1 + 32);
  id v8 = *(id *)(a1 + 40);
  id v4 = *(id *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  id v9 = v4;
  uint64_t v10 = v5;
  dispatch_after(v2, v3, v6);
}

void sub_1000F816C(uint64_t a1)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  _DWORD v4[2] = sub_1000F8228;
  v4[3] = &unk_1001D2E90;
  id v5 = *(id *)(a1 + 32);
  id v6 = *(id *)(a1 + 40);
  id v2 = *(id *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  id v7 = v2;
  uint64_t v8 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);
}

void sub_1000F8228(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id v2 = +[NSNotificationCenter defaultCenter];
    [v2 addObserver:*(void *)(a1 + 56) selector:"_detailsDidAppear:" name:EKEventViewControllerDidAppearNotification object:0];

    if ([*(id *)(a1 + 56) shouldWaitForAttendeeLoad])
    {
      uint64_t v3 = +[NSNotificationCenter defaultCenter];
      [v3 addObserver:*(void *)(a1 + 56) selector:"_attendeesDidFinishLoading:" name:EKEventDetailsDidFinishLoadingAttendeesNotification object:0];
    }
    [*(id *)(a1 + 40) startedTest:*(void *)(a1 + 48)];
    if ([*(id *)(a1 + 56) shouldWaitForAttendeeLoad])
    {
      id v4 = *(void **)(a1 + 40);
      id v5 = [*(id *)(a1 + 56) eventDetailsDidShowSubtestName];
      [v4 startedSubTest:v5 forTest:*(void *)(a1 + 48)];
    }
    id v6 = [*(id *)(a1 + 56) controller];
    [v6 showEvent:*(void *)(a1 + 32) animated:0 showMode:1 context:0];
  }
  else
  {
    [*(id *)(a1 + 40) failedTest:*(void *)(a1 + 48) withFailure:@"No Events Loaded"];
    id v6 = +[NSNotificationCenter defaultCenter];
    [v6 removeObserver:*(void *)(a1 + 56)];
  }
}

void sub_1000F8884(id a1, NSMutableDictionary *a2)
{
}

id sub_1000F889C(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 40) setContentOffset:*(double *)(a1 + 40) *(double *)(a1 + 48)];
}

id sub_1000F88B8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) scrollViewDidEndDecelerating:*(void *)(a1 + 40)];
}

void sub_1000F8B14(id a1)
{
  uint64_t v1 = +[UIColor systemGrayColor];
  uint64_t v2 = qword_1002169B0;
  qword_1002169B0 = v1;

  _objc_release_x1(v1, v2);
}

void sub_1000F99E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000F99F8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000F9A08(uint64_t a1)
{
}

void sub_1000F9A10(uint64_t a1)
{
  dispatch_time_t v2 = dispatch_time(0, 5000000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000F9AD0;
  block[3] = &unk_1001D5400;
  void block[4] = *(void *)(a1 + 32);
  long long v4 = *(_OWORD *)(a1 + 40);
  id v3 = (id)v4;
  long long v6 = v4;
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1000F9AD0(uint64_t a1)
{
  dispatch_time_t v2 = [(id)objc_opt_class() testName];
  id v3 = [*(id *)(a1 + 32) application];
  [v3 startedTest:v2];

  long long v4 = [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) switcherViewController];
  id v5 = [v4 showRepliedSection];

  long long v6 = *(void **)(a1 + 40);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1000F9BD4;
  v8[3] = &unk_1001D28A8;
  id v9 = v6;
  id v10 = v2;
  id v7 = v2;
  [v9 installCACommitCompletionBlock:v8];
}

id sub_1000F9BD4(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedTest:*(void *)(a1 + 40) extraResults:0];
}

void sub_1000F9D80(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1000F9E28;
  v6[3] = &unk_1001D29A0;
  id v7 = v3;
  id v5 = v3;
  [WeakRetained enumerateScrollViewSubviews:v6];
}

id sub_1000F9E28(uint64_t a1, void *a2)
{
  return _[a2 overlaySignificantDatesChangedInRange:*(void *)(a1 + 32)];
}

id sub_1000F9FA4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) extendedLaunchCompletedByViewType:0];
}

void sub_1000FAE48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000FAE60(uint64_t a1, void *a2, unsigned char *a3)
{
  id result = [a2 maximumNumberOfMonths];
  if (result != *(id *)(a1 + 40))
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
    *a3 = 1;
  }
  return result;
}

void sub_1000FAF44(id a1, InfiniteScrollViewSubview *a2, BOOL *a3)
{
}

void sub_1000FAFC0(id a1, InfiniteScrollViewSubview *a2, BOOL *a3)
{
}

void sub_1000FB03C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) window];
  EKUIPushFallbackSizingContextWithViewHierarchy();
  [*(id *)(a1 + 32) _reloadAllViews];
  [*(id *)(a1 + 32) localeDidChange];
  [*(id *)(a1 + 32) enumerateScrollViewSubviews:&stru_1001D54C0];
  EKUIPopFallbackSizingContextWithViewHierarchy();
}

void sub_1000FB0B4(id a1, InfiniteScrollViewSubview *a2, BOOL *a3)
{
}

id sub_1000FB6B8(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 112) setAlpha:*(double *)(a1 + 40)];
}

id sub_1000FBBC8(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 112) removeFromSuperview];
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 112);
  *(void *)(v2 + 112) = 0;

  [*(id *)(a1 + 32) _updateBackButtonToSelectedDate];
  id v5 = *(void **)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  id v6 = [v5 shouldAnimateTransitionsToMonthView];

  return [v5 _pushMonthViewControllerWithDate:v4 animated:v6];
}

id sub_1000FC534(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) setContentOffset:*(double *)(*(void *)(a1 + 32) + 64)];
  *(unsigned char *)(*(void *)(a1 + 32) + 144) = 1;
  *(unsigned char *)(*(void *)(a1 + 32) + 145) = 0;
  return result;
}

id sub_1000FC590(uint64_t a1)
{
  [*(id *)(a1 + 32) setNeedsLayout];
  id result = [*(id *)(a1 + 32) _didFinishDecelerating];
  *(unsigned char *)(*(void *)(a1 + 32) + 144) = 0;
  return result;
}

void sub_1000FD298(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_1002169D8;
  qword_1002169D8 = v1;

  [(id)qword_1002169D8 setCalculationType:0];
  [(id)qword_1002169D8 addAnchoredValue:512 forWindowSizeWidth:109.0];
  [(id)qword_1002169D8 addAnchoredValue:1024 forWindowSizeWidth:109.0];
  [(id)qword_1002169D8 addAnchoredValue:2048 forWindowSizeWidth:109.0];
  id v3 = (void *)qword_1002169D8;

  [v3 addAnchoredValue:4096 forWindowSizeWidth:146.0];
}

uint64_t sub_1000FDCCC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000FE144(id a1, NSMutableDictionary *a2)
{
}

void sub_1000FE15C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = [*(id *)(a1 + 40) date];
  [v2 setSelectedDate:v3 animated:1];

  id v6 = [*(id *)(a1 + 32) navDelegate];
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = [*(id *)(a1 + 40) date];
  [v6 dayNavigationWeekScrollView:v4 selectedDateChanged:v5];
}

id sub_1000FE6E0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) showDebugMenu];
}

void sub_1000FED70(uint64_t a1)
{
  uint64_t v2 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [*(id *)(*(void *)(a1 + 32) + 24) currentViewType]);
  id v4 = +[NSDictionary dictionaryWithObject:v2 forKey:@"_CalendarSceneManagerDidChangeDisplayedOccurrencesForTheFirstTimeNotification_CalendarContentViewType_Key"];

  id v3 = +[NSNotificationCenter defaultCenter];
  [v3 postNotificationName:@"_CalendarSceneManagerDidChangeDisplayedOccurrencesForTheFirstTimeNotification" object:*(void *)(a1 + 32) userInfo:v4];
}

void sub_1000FEEDC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) eventStore];
  id v1 = [v2 refreshEverythingIfNecessary:0];
}

void *sub_1000FF0CC(void *result)
{
  uint64_t v1 = result[4];
  if (*(unsigned char *)(v1 + 45))
  {
    id v2 = result;
    *(unsigned char *)(v1 + 45) = 0;
    id v3 = kCalUILogHandle;
    if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = v2[5];
      int v5 = 138412290;
      uint64_t v6 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "CalendarSceneManager calling _completeStateRestoration (5 second timeout expired) for scene: %@", (uint8_t *)&v5, 0xCu);
    }
    return [(id)v2[5] _completeStateRestoration];
  }
  return result;
}

void sub_1000FF724(uint64_t a1)
{
  id v1 = [*(id *)(*(void *)(a1 + 32) + 8) eventStore];
  [v1 requestIntegrationCatchupSync];
}

void sub_100101510(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_10010153C(uint64_t a1)
{
  uint64_t v2 = kCalUILogHandle;
  if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v5 = 136315394;
    uint64_t v6 = "-[CalendarSceneManager _continueUserActivity:restoreSelectedOccurrence:restoreSelectedDate:restorationHandler:]_block_invoke";
    __int16 v7 = 2112;
    uint64_t v8 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Running delayed execution of [%s] that was previously requested at [%@] in the system time.", (uint8_t *)&v5, 0x16u);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  [WeakRetained _continueUserActivity:*(void *)(a1 + 40) restoreSelectedOccurrence:*(unsigned __int8 *)(a1 + 64) restoreSelectedDate:*(unsigned __int8 *)(a1 + 65) restorationHandler:*(void *)(a1 + 48)];
}

void sub_100101E78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100101EC4(uint64_t a1)
{
  uint64_t v2 = kCalUILogHandle;
  if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    int v6 = 136315650;
    __int16 v7 = "-[CalendarSceneManager _openURL:]_block_invoke";
    __int16 v8 = 2112;
    uint64_t v9 = v3;
    __int16 v10 = 2112;
    uint64_t v11 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Running delayed execution of [%s] with URL [%@] that was previously requested at [%@] in the system time.", (uint8_t *)&v6, 0x20u);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _openURL:*(void *)(a1 + 32)];
}

uint64_t sub_100101FA0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100101FB0(uint64_t a1)
{
}

void sub_100101FB8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v7 = EKUIEventDetailsFromTravelAdvisoryContextKey;
  uint64_t v4 = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 56)];
  __int16 v8 = v4;
  int v5 = +[NSDictionary dictionaryWithObjects:&v8 forKeys:&v7 count:1];
  [WeakRetained handleURL:v3 context:v5];

  int v6 = +[NSNotificationCenter defaultCenter];
  [v6 removeObserver:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
}

void sub_1001022F8(id a1)
{
  id v1 = +[NSCharacterSet URLFragmentAllowedCharacterSet];
  id v4 = [v1 mutableCopy];

  [v4 removeCharactersInString:@"/?&:$+,;=@"];
  id v2 = [v4 copy];
  uint64_t v3 = (void *)qword_100216A10;
  qword_100216A10 = (uint64_t)v2;
}

void sub_1001027BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001027E8(uint64_t a1)
{
  id v2 = kCalUILogHandle;
  if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    int v6 = 136315650;
    uint64_t v7 = "-[CalendarSceneManager windowScene:performActionForShortcutItem:completionHandler:]_block_invoke";
    __int16 v8 = 2112;
    uint64_t v9 = v3;
    __int16 v10 = 2112;
    uint64_t v11 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Running delayed execution of [%s] with shortcut item [%@] that was previously requested at [%@] in the system time.", (uint8_t *)&v6, 0x20u);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  [WeakRetained windowScene:*(void *)(a1 + 48) performActionForShortcutItem:*(void *)(a1 + 32) completionHandler:*(void *)(a1 + 56)];
}

void sub_100102B20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(v24);
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  objc_destroyWeak((id *)(v26 - 104));
  _Unwind_Resume(a1);
}

void sub_100102B68(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = objc_loadWeakRetained((id *)(a1 + 48));
  if (!WeakRetained)
  {
    uint64_t v8 = kCalUILogHandle;
    if (!os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_ERROR)) {
      goto LABEL_11;
    }
    *(_WORD *)buf = 0;
    uint64_t v9 = "Will not dismiss the splash screen view controller because 'strongSelf' is nil.";
    __int16 v10 = v8;
LABEL_10:
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, v9, buf, 2u);
    goto LABEL_11;
  }
  uint64_t v4 = kCalUILogHandle;
  if (!v3)
  {
    if (!os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_ERROR)) {
      goto LABEL_11;
    }
    *(_WORD *)buf = 0;
    uint64_t v9 = "Will not dismiss the splash screen view controller because 'strongSplashScreenViewController' is nil.";
    __int16 v10 = v4;
    goto LABEL_10;
  }
  if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 138412290;
    id v16 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Dismissing the splash screen view controller: [%@]", buf, 0xCu);
  }
  int v5 = [v3 presentingViewController];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_100102D28;
  _OWORD v11[3] = &unk_1001D2EE0;
  id v6 = v3;
  uint64_t v7 = *(void *)(a1 + 32);
  id v12 = v6;
  uint64_t v13 = v7;
  id v14 = WeakRetained;
  [v5 dismissViewControllerAnimated:1 completion:v11];

LABEL_11:
}

id sub_100102D28(uint64_t a1)
{
  id v2 = kCalUILogHandle;
  if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v6 = 138412290;
    uint64_t v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Completed dismissal of the splash screen view controller: [%@]", (uint8_t *)&v6, 0xCu);
  }
  uint64_t v4 = +[NSNotificationCenter defaultCenter];
  [v4 removeObserver:*(void *)(a1 + 40) name:@"_CalendarSceneManagerDidCompleteSplashScreenNotification" object:0];

  return [*(id *)(a1 + 48) _splashScreenDidDismissShouldNotify:1];
}

uint64_t sub_100102E08(uint64_t a1)
{
  id v2 = (void *)kCalUILogHandle;
  if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v3 = v2;
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    int v6 = 138412290;
    id v7 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Completed presentation of the splash screen view controller: [%@]", (uint8_t *)&v6, 0xCu);
  }
  return EKUIPopFallbackSizingContextWithViewHierarchy();
}

id sub_1001030BC(uint64_t a1)
{
  id v2 = kCalUILogHandle;
  if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Completed dismissal of splash screen view controller.", v4, 2u);
  }
  return [*(id *)(a1 + 32) _splashScreenDidDismissShouldNotify:0];
}

void sub_100103630(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) cellFactory];
  [v2 localeChanged];

  id v3 = [*(id *)(*(void *)(a1 + 32) + 8) calendar];
  [*(id *)(*(void *)(a1 + 32) + 16) setCalendar:v3];
}

id sub_100104184(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_100104200;
  v2[3] = &unk_1001D2740;
  void v2[4] = *(void *)(a1 + 32);
  return +[UIView performWithoutAnimation:v2];
}

void sub_100104200(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  id v4 = [v1 model];
  id v2 = [v4 selectedDate];
  id v3 = [v2 calendarDateForEndOfMonth];
  [v1 reinitializeAllViewsWithCalendarDate:v3];
}

void sub_100104280(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) navigationController];
  objc_msgSend(v2, "setToolbarHidden:animated:", objc_msgSend(*(id *)(a1 + 32), "allowsOverriddenToolbarItems") ^ 1, 1);

  *(unsigned char *)(*(void *)(a1 + 32) + 240) = 0;
}

void sub_1001044D8(uint64_t a1)
{
  [*(id *)(a1 + 32) reinitializeAllViewsWithCalendarDate:*(void *)(a1 + 40)];
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 192);
  *(void *)(v2 + 192) = 0;
}

void sub_100104A4C(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_100216A30;
  qword_100216A30 = v1;

  [(id)qword_100216A30 setCalculationType:1];
  [(id)qword_100216A30 setRoundingType:4];
  [(id)qword_100216A30 addAnchoredValue:2048 forWindowSizeWidth:3.0];
  [(id)qword_100216A30 addAnchoredValue:4096 forWindowSizeWidth:4.0];
  id v3 = (void *)qword_100216A30;

  [v3 addAnchoredValue:0x40000000 forWindowSizeWidth:6.0];
}

id sub_100105290(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 200);
  *(void *)(v2 + 200) = 0;

  id v4 = *(void **)(a1 + 32);

  return [v4 _updateYearNumbersAnimated:0 withForce:1];
}

void sub_1001054AC(uint64_t a1, void *a2)
{
  id v3 = *(void **)(*(void *)(a1 + 32) + 200);
  id v7 = a2;
  id v4 = [v7 calendarDate];
  id v5 = [v3 compare:v4];

  BOOL v6 = *(unsigned char *)(a1 + 40) != 0;
  if (v5) {
    [v7 showYearNumberAnimated:v6];
  }
  else {
    [v7 hideYearNumberAnimated:v6];
  }
}

void sub_100105D10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id location)
{
}

void sub_100105D5C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained selectSegmentIndex:*(void *)(a1 + 40)];
}

id sub_100107030(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) requestReminderSheet:a2];
}

id sub_10010703C(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) requestReminderSheet:a2];
}

id sub_100107920(uint64_t a1, void *a2)
{
  return [a2 setShowWeekNumber:*(unsigned __int8 *)(a1 + 32)];
}

BOOL sub_10010833C(id a1, EKCalendarNotificationReference *a2, NSDictionary *a3)
{
  return [(EKCalendarNotificationReference *)a2 type] > 4;
}

void sub_1001084E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10010850C(uint64_t a1, void *a2)
{
  id v8 = [a2 traitCollection];
  id v4 = [v8 verticalSizeClass];
  if (v4 == (id)1)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [(id)objc_opt_class() dividedModeBackgroundColor];
  }
  else
  {
    +[UIColor whiteColor];
  id v5 = };
  id v6 = objc_loadWeakRetained((id *)(a1 + 32));
  id v7 = [v6 scrollView];
  [v7 setBackgroundColor:v5];

  if (v4 == (id)1)
  {

    id v5 = WeakRetained;
  }
}

id sub_1001090A4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) transitionToSizeDidEnd];
}

id sub_100109D50(id result)
{
  uint64_t v1 = *((void *)result + 4);
  if (*(unsigned char *)(v1 + 351))
  {
    *(unsigned char *)(v1 + 351) = 0;
    return [*((id *)result + 4) _loadEventsForAllSubviews];
  }
  return result;
}

void sub_10010A408(uint64_t a1, uint64_t a2)
{
  id v4 = *(id **)(a1 + 32);
  id v5 = [v4[1] selectedDate];
  id v9 = [v4 subviewForDate:v5];

  id v6 = *(id **)(a1 + 32);
  id v7 = [v6[1] selectedDate];
  [v6 _setSelectedDay:v7 onMonthWeekView:v9 animated:1];

  if ([*(id *)(a1 + 32) _viewingEventDetailsColumn]
    && ([*(id *)(a1 + 32) _shouldDisplayThreeColumns] & 1) == 0)
  {
    [*(id *)(a1 + 32) _autoSelectEvent];
  }
  uint64_t v8 = *(void *)(a1 + 40);
  if (v8) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v8, a2);
  }
}

void sub_10010A6C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10010A6E0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10010A6F0(uint64_t a1)
{
}

void sub_10010A6F8(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v11 = a2;
  [*(id *)(a1 + 32) locationInView:v11];
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    [v11 bounds];
    v13.double x = v8;
    v13.double y = v10;
    if (CGRectContainsPoint(v14, v13) && ([v11 isHidden] & 1) == 0)
    {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
      *a4 = 1;
    }
  }
}

void sub_10010A968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10010A994(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v11 = a2;
  [*(id *)(a1 + 32) locationInView:v11];
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    [v11 bounds];
    v13.double x = v8;
    v13.double y = v10;
    if (CGRectContainsPoint(v14, v13))
    {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
      *a4 = 1;
    }
  }
}

uint64_t sub_10010AB54(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 362) = 0;
  return result;
}

void sub_10010ACA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10010ACBC(uint64_t a1, void *a2, unsigned char *a3)
{
  id v23 = a2;
  id v6 = [*(id *)(a1 + 32) scrollView];
  [v6 bounds];
  CGFloat v8 = v7;
  CGFloat v10 = v9;

  id v11 = [*(id *)(a1 + 32) scrollView];
  [v11 contentOffset];
  double v13 = v12;
  CGRect v14 = [*(id *)(a1 + 32) scrollView];
  [v14 safeAreaInsets];
  CGFloat v16 = v13 + v15;

  id v17 = [*(id *)(a1 + 32) view];
  [v17 frame];
  double v19 = v18;
  long long v20 = [*(id *)(a1 + 32) scrollView];
  [v20 safeAreaInsets];
  CGFloat v22 = v19 - v21;

  v25.origin.double x = v8;
  v25.origin.double y = v16;
  v25.size.double width = v10;
  v25.size.double height = v22;
  if (CGRectContainsPoint(v25, *(CGPoint *)(a1 + 48)))
  {
    [v23 frame];
    if (CGRectContainsPoint(v26, *(CGPoint *)(a1 + 48)))
    {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
      *a3 = 1;
    }
  }
}

id sub_10010B314(uint64_t a1)
{
  return [*(id *)(a1 + 32) _removeMonthHighlight];
}

id sub_10010B5D4(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:0.0];
}

id sub_10010B5E0(uint64_t a1)
{
  return [*(id *)(a1 + 32) removeFromSuperview];
}

void sub_10010B99C(uint64_t a1, void *a2)
{
  id v13 = a2;
  id v3 = [v13 calendarDate];
  [v3 absoluteTime];
  double v5 = v4;

  id v6 = [v13 endCalendarDate];
  [v6 absoluteTime];
  double v8 = v7;

  if (v5 <= *(double *)(a1 + 40) && v8 >= *(double *)(a1 + 48))
  {
    double v9 = *(void **)(a1 + 32);
    CGFloat v10 = [v13 calendarDate];
    id v11 = [v13 endCalendarDate];
    double v12 = [v9 _loadEventsForStartDate:v10 endDate:v11];

    if (v12) {
      [v13 setEventData:v12 animated:[*(id *)(a1 + 32) _shouldAnimateDots]];
    }
  }
}

void sub_10010BB9C(uint64_t a1, void *a2)
{
  id v7 = a2;
  id v3 = *(void **)(a1 + 32);
  double v4 = [v7 calendarDate];
  double v5 = [v7 endCalendarDate];
  id v6 = [v3 _loadEventsForStartDate:v4 endDate:v5];

  if (v6) {
    [v7 setEventData:v6 animated:[*(id *)(a1 + 32) _shouldAnimateDots]];
  }
}

void sub_10010C4E0(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 8) numberOfDaysWithCachedOccurrences];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10010C57C;
  block[3] = &unk_1001D2740;
  void block[4] = *(void *)(a1 + 32);
  dispatch_sync((dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_10010C57C(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 347) = 0;
  return [*(id *)(a1 + 32) _loadEventsForAllSubviews];
}

void sub_10010CD7C(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 312);
  id v3 = [*(id *)(a1 + 40) event];
  [v2 selectEvent:v3 animated:*(unsigned __int8 *)(a1 + 48)];
}

id sub_10010CDE4(uint64_t a1)
{
  if (([*(id *)(a1 + 32) _shouldDisplayThreeColumns] & 1) == 0)
  {
    [*(id *)(a1 + 32) _setPaletteDisplaced];
    [*(id *)(*(void *)(a1 + 32) + 368) setAlpha:1.0];
  }
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 viewWillLayoutSubviews];
}

id sub_10010CFAC(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 40);
  id v3 = *(void **)(a1 + 32);
  if (v2)
  {
    [v3 _setPaletteDisplaced];
    double v4 = 1.0;
  }
  else
  {
    [v3 _resetPaletteState];
    double v4 = 0.0;
  }
  double v5 = *(void **)(*(void *)(a1 + 32) + 368);

  return [v5 setAlpha:v4];
}

void *sub_10010D00C(void *result)
{
  if (!*((unsigned char *)result + 40)) {
    return [*(id *)(result[4] + 368) setHidden:1];
  }
  return result;
}

id sub_10010D204(uint64_t a1)
{
  return [*(id *)(a1 + 32) viewWillLayoutSubviews];
}

id sub_10010D20C(uint64_t a1)
{
  int v2 = [*(id *)(*(void *)(a1 + 32) + 384) presentedViewController];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass) {
    [*(id *)(*(void *)(a1 + 32) + 384) dismissViewControllerWithTransition:0 completion:0];
  }
  return [*(id *)(*(void *)(a1 + 32) + 384) popToRootViewControllerAnimated:0];
}

void sub_10010E3A4(uint64_t a1)
{
  id v4 = [*(id *)(*(void *)(a1 + 32) + 312) defaultEventForSelectedDate];
  [*(id *)(*(void *)(a1 + 32) + 8) setSelectedOccurrence:v4];
  if (v4)
  {
    [*(id *)(*(void *)(a1 + 32) + 312) scrollToSelectedDateAnimated:0];
    int v2 = [*(id *)(a1 + 32) augmentEventDetailsContext:0];
    id v3 = +[EKEventViewController eventDetailViewControllerWithEvent:v4 delegate:*(void *)(a1 + 32) context:v2];
    [*(id *)(a1 + 32) _slideToShowEventDetails:v3 animated:0];
  }
}

void sub_10010E604(id *a1)
{
  [a1[4] invalidateManagedNavigationController];
  [a1[5] setDelegate:0];
  int v2 = [a1[6] startCalendarDate];
  [*((id *)a1[4] + 1) setSelectedDate:v2];

  id v3 = a1[4];
  id v4 = [a1[6] startDate];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10010E72C;
  v5[3] = &unk_1001D5848;
  void v5[4] = a1[4];
  id v6 = a1[6];
  id v7 = a1[5];
  id v8 = a1[7];
  [v3 showDate:v4 animated:1 completionBlock:v5];
}

id sub_10010E72C(uint64_t a1, int a2)
{
  if (a2)
  {
    id v3 = *(void **)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    double v5 = [*(id *)(a1 + 48) context];
    [v3 _showDetailsForEvent:v4 animated:1 showMode:1 context:v5];
  }
  id v6 = *(void **)(a1 + 56);

  return [v6 setDisableTodayPulse:0];
}

void sub_10010EA04(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10010EA9C;
  block[3] = &unk_1001D5870;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = v3;
  id v5 = v2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_10010EA9C(uint64_t a1)
{
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    [*(id *)(a1 + 32) setEditorShowTransition:6];
    uint64_t v2 = *(void *)(a1 + 48);
    if (v2 == 3)
    {
      *(unsigned char *)(*(void *)(a1 + 40) + 361) = 1;
      [*(id *)(a1 + 32) editButtonTapped];
    }
    else if (v2 == 2)
    {
      [*(id *)(a1 + 32) openAttendeesDetailItem];
    }
  }
  uint64_t v3 = *(void **)(*(void *)(a1 + 40) + 304);

  return [v3 deselectAllRowsAnimated:0];
}

id sub_10010EC0C(uint64_t a1)
{
  [*(id *)(a1 + 32) invalidateManagedNavigationController];
  [*(id *)(a1 + 40) setDelegate:0];
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 8);

  return [v2 setSelectedOccurrence:0];
}

id sub_10010ED5C(uint64_t a1)
{
  return [*(id *)(a1 + 32) invalidateManagedNavigationController];
}

void sub_10010EFC8(uint64_t a1)
{
  [*(id *)(a1 + 32) setDisableTodayPulse:0];
  uint64_t v2 = [*(id *)(a1 + 40) model];
  [v2 setSelectedDate:*(void *)(a1 + 48)];

  byte_100216A50 = 0;
}

uint64_t sub_1001112E0(uint64_t a1)
{
  [*(id *)(a1 + 32) _animationComplete];
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v2();
}

uint64_t sub_10011144C(uint64_t a1)
{
  [*(id *)(a1 + 32) _animationComplete];
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v2();
}

id sub_100111BE8(uint64_t a1)
{
  return _[*(id *)(*(void *)(a1 + 32) + 56) springAnimateToEndStateWithTimingFunction:2];
}

id sub_100111C00(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 64) view];
  [*(id *)(a1 + 32) _calculateYearFrameForYearViewZoom];
  scaleViewToFrame();

  scaleViewToFrame();
  scaleViewToFrame();
  uint64_t v3 = [*(id *)(*(void *)(a1 + 32) + 64) view];
  [v3 setAlpha:1.0];

  uint64_t v4 = *(void *)(a1 + 32);
  if (*(void *)(v4 + 32))
  {
    double v5 = *(double *)(v4 + 168);
    double v6 = -*(double *)(v4 + 192);
    [*(id *)(v4 + 32) frame];
    [*(id *)(*(void *)(a1 + 32) + 32) setFrame:v5, v6];
    uint64_t v4 = *(void *)(a1 + 32);
  }
  if (*(void *)(v4 + 40))
  {
    double v7 = *(double *)(v4 + 200);
    [(id)v4 bounds];
    double v9 = v8;
    [*(id *)(*(void *)(a1 + 32) + 40) frame];
    [*(id *)(*(void *)(a1 + 32) + 40) setFrame:v7, v9];
    uint64_t v4 = *(void *)(a1 + 32);
  }
  if (*(void *)(v4 + 48))
  {
    double v10 = *(double *)(v4 + 232);
    [(id)v4 bounds];
    uint64_t v11 = *(void *)(a1 + 32);
    double v13 = v12 + *(double *)(v11 + 224);
    [*(id *)(v11 + 48) frame];
    [*(id *)(*(void *)(a1 + 32) + 48) setFrame:v10, v13];
    uint64_t v4 = *(void *)(a1 + 32);
  }
  id result = *(id *)(v4 + 320);
  if (result)
  {
    [result frame];
    double v15 = *(void **)(*(void *)(a1 + 32) + 320);
    double v16 = *(double *)(a1 + 40);
    double v17 = *(double *)(a1 + 48);
    return [v15 setFrame:v16, v17];
  }
  return result;
}

id sub_100111DF4(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 16) setAlpha:1.0];
  [*(id *)(*(void *)(a1 + 32) + 24) setAlpha:0.0];
  [*(id *)(*(void *)(a1 + 32) + 8) setAlpha:0.0];
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 80);

  return [v2 setAlpha:0.0];
}

id sub_100111E80(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 80) setAlpha:1.0];
}

id sub_10011216C(uint64_t a1)
{
  return _[*(id *)(*(void *)(a1 + 32) + 56) springAnimateToStartStateWithTimingFunction:2];
}

id sub_100112184(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 64) view];
  [*(id *)(a1 + 32) _calculateMonthFrameForYearViewZoom];
  scaleViewToFrame();

  scaleViewToFrame();
  scaleViewToFrame();
  uint64_t v3 = [*(id *)(*(void *)(a1 + 32) + 64) view];
  [v3 setAlpha:0.0];

  uint64_t v4 = *(void **)(a1 + 32);
  if (v4[4])
  {
    scaleViewToFrame();
    [*(id *)(*(void *)(a1 + 32) + 32) setAlpha:1.0];
    uint64_t v4 = *(void **)(a1 + 32);
  }
  if (v4[5])
  {
    scaleViewToFrame();
    [*(id *)(*(void *)(a1 + 32) + 40) setAlpha:1.0];
    uint64_t v4 = *(void **)(a1 + 32);
  }
  id result = (id)v4[6];
  if (result)
  {
    scaleViewToFrame();
    double v6 = *(void **)(*(void *)(a1 + 32) + 48);
    return [v6 setAlpha:1.0];
  }
  return result;
}

id sub_100112314(double *a1)
{
  id result = *(id *)(*((void *)a1 + 4) + 320);
  if (result)
  {
    [result frame];
    uint64_t v3 = *(void **)(*((void *)a1 + 4) + 320);
    double v4 = a1[5];
    double v5 = a1[6];
    return [v3 setFrame:v4, v5];
  }
  return result;
}

id sub_100112374(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 16) setAlpha:0.0];
  [*(id *)(*(void *)(a1 + 32) + 24) setAlpha:1.0];
  [*(id *)(*(void *)(a1 + 32) + 8) setAlpha:*(double *)(*(void *)(a1 + 32) + 328)];
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 80) animatableDateLabel];
  [v2 setAlpha:1.0];

  uint64_t v3 = *(void **)(*(void *)(a1 + 32) + 80);

  return [v3 setAlpha:1.0];
}

void sub_100112430(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 80) dateLabel];
  [v2 setHidden:0];

  id v3 = [*(id *)(*(void *)(a1 + 32) + 80) animatableDateLabel];
  [v3 setAlpha:0.0];
}

NSArray *__cdecl sub_1001152EC(id a1, NSArray *a2)
{
  uint64_t v2 = a2;
  id v3 = [(NSArray *)v2 indexOfObjectPassingTest:&stru_1001D58F0];
  if (v3)
  {
    double v4 = [(NSArray *)v2 objectAtIndexedSubscript:v3];
    double v8 = v4;
    double v5 = +[NSArray arrayWithObjects:&v8 count:1];
    double v6 = [(NSArray *)v2 arrayByExcludingObjectsInArray:v5];
  }
  else
  {
    double v6 = v2;
  }

  return v6;
}

BOOL sub_1001153D0(id a1, UIMenuElement *a2, unint64_t a3, BOOL *a4)
{
  double v4 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    unsigned __int8 v5 = [(UIMenuElement *)v4 action] == "find:";
  }
  else
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      double v6 = [(UIMenuElement *)v4 identifier];
      unsigned __int8 v5 = [v6 isEqualToString:UIMenuFind];
    }
    else
    {
      unsigned __int8 v5 = 0;
    }
  }

  return v5;
}

id sub_100115488(uint64_t a1)
{
  id v39 = (id)objc_opt_new();
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained allSceneManagers];

  long long v47 = 0u;
  long long v48 = 0u;
  long long v45 = 0u;
  long long v46 = 0u;
  id obj = v3;
  id v34 = [obj countByEnumeratingWithState:&v45 objects:v52 count:16];
  if (v34)
  {
    uint64_t v4 = 0;
    uint64_t v33 = *(void *)v46;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v46 != v33) {
          objc_enumerationMutation(obj);
        }
        uint64_t v35 = v5;
        uint64_t v36 = v4;
        double v6 = *(void **)(*((void *)&v45 + 1) + 8 * v5);
        uint64_t v7 = +[NSString stringWithFormat:@"Scene #%ld", v4];
        double v8 = +[NSMutableDictionary dictionary];
        double v40 = (void *)v7;
        [v39 setObject:v8 forKeyedSubscript:v7];

        long long v43 = 0u;
        long long v44 = 0u;
        long long v41 = 0u;
        long long v42 = 0u;
        double v9 = [v6 model];
        double v10 = [v9 selectedCalendars];

        id v37 = v10;
        id v11 = [v10 countByEnumeratingWithState:&v41 objects:v51 count:16];
        if (v11)
        {
          id v12 = v11;
          uint64_t v38 = *(void *)v42;
          do
          {
            for (uint64_t i = 0; i != v12; uint64_t i = (char *)i + 1)
            {
              if (*(void *)v42 != v38) {
                objc_enumerationMutation(v37);
              }
              CGRect v14 = *(void **)(*((void *)&v41 + 1) + 8 * i);
              v49[0] = @"calendarIdentifier";
              uint64_t v15 = [v14 calendarIdentifier];
              double v16 = (void *)v15;
              if (v15) {
                CFStringRef v17 = (const __CFString *)v15;
              }
              else {
                CFStringRef v17 = &stru_1001D6918;
              }
              v50[0] = v17;
              v49[1] = @"isIgnoringEventAlerts";
              if ([v14 isIgnoringEventAlerts]) {
                CFStringRef v18 = @"YES";
              }
              else {
                CFStringRef v18 = @"NO";
              }
              v50[1] = v18;
              v49[2] = @"type";
              double v19 = +[EKCalendar typeDescription:](EKCalendar, "typeDescription:", [v14 type]);
              v50[2] = v19;
              v49[3] = @"color";
              uint64_t v20 = [v14 colorString];
              double v21 = (void *)v20;
              if (v20) {
                CFStringRef v22 = (const __CFString *)v20;
              }
              else {
                CFStringRef v22 = &stru_1001D6918;
              }
              v50[3] = v22;
              v49[4] = @"allowsModify";
              if ([v14 allowsContentModifications]) {
                CFStringRef v23 = @"YES";
              }
              else {
                CFStringRef v23 = @"NO";
              }
              v50[4] = v23;
              v49[5] = @"sourceIdentifier";
              id v24 = [v14 source];
              uint64_t v25 = [v24 sourceIdentifier];
              CGRect v26 = (void *)v25;
              if (v25) {
                CFStringRef v27 = (const __CFString *)v25;
              }
              else {
                CFStringRef v27 = &stru_1001D6918;
              }
              v50[5] = v27;
              double v28 = +[NSDictionary dictionaryWithObjects:v50 forKeys:v49 count:6];
              double v29 = [v39 objectForKeyedSubscript:v40];
              double v30 = [v14 calendarIdentifier];
              [v29 setObject:v28 forKeyedSubscript:v30];
            }
            id v12 = [v37 countByEnumeratingWithState:&v41 objects:v51 count:16];
          }
          while (v12);
        }

        uint64_t v4 = v36 + 1;
        uint64_t v5 = v35 + 1;
      }
      while ((id)(v35 + 1) != v34);
      id v34 = [obj countByEnumeratingWithState:&v45 objects:v52 count:16];
    }
    while (v34);
  }

  return v39;
}

uint64_t sub_100115868(uint64_t a1)
{
  uint64_t v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:CUIKStateCaptureNotification object:*(void *)(a1 + 32) userInfo:0];

  return 0;
}

void sub_100116420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _Block_object_dispose(&a67, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100116478(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100116488(uint64_t a1)
{
}

void sub_100116490(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = kCalUILogHandle;
  if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v9 = 138412546;
    uint64_t v10 = v5;
    __int16 v11 = 1024;
    int v12 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Finished updating snapshot for scene %@ with result: %d", (uint8_t *)&v9, 0x12u);
  }
  if (*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40))
  {
    double v6 = +[NSNotificationCenter defaultCenter];
    [v6 removeObserver:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)];
  }
  if (!a2) {
    *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 0;
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
  uint64_t v7 = *(void *)(*(void *)(a1 + 48) + 8);
  double v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = 0;
}

void sub_1001165B4(void *a1, void *a2)
{
  id v3 = a2;
  if (!*(unsigned char *)(*(void *)(a1[6] + 8) + 24))
  {
    uint64_t v4 = kCalUILogHandle;
    if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v5 = a1[4];
      int v6 = 138412290;
      uint64_t v7 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Got occurrences changed notification before the timeout for scene %@", (uint8_t *)&v6, 0xCu);
    }
    *(unsigned char *)(*(void *)(a1[7] + 8) + 24) = 1;
    (*(void (**)(void))(a1[5] + 16))();
  }
}

uint64_t sub_1001166A4(uint64_t result)
{
  if (!*(unsigned char *)(*(void *)(*(void *)(result + 48) + 8) + 24))
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = kCalUILogHandle;
    if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v3 = v1[4];
      int v4 = 138412290;
      uint64_t v5 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Timed out before we got the occurrences change notification for scene %@", (uint8_t *)&v4, 0xCu);
    }
    *(unsigned char *)(*(void *)(v1[7] + 8) + 24) = 1;
    return (*(uint64_t (**)(void))(v1[5] + 16))();
  }
  return result;
}

uint64_t sub_100116780(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24));
  }
  return result;
}

void sub_100116934(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) eventStore];
  id v1 = [v2 refreshEverythingIfNecessary:0];
}

void sub_1001174B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001174DC(uint64_t a1)
{
  +[EKUILargeTextUtilities clearCache];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = [WeakRetained tableView];
  [v2 reloadData];
}

void sub_100117750(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 refreshIfNeeded];
  if ([v3 hasRows]) {
    [*(id *)(a1 + 32) addObject:v3];
  }
}

id sub_100117844(uint64_t a1, void *a2)
{
  return [a2 setVisible:*(unsigned __int8 *)(a1 + 32)];
}

void sub_1001178A0(id a1, InboxNotificationsGroupController *a2, unint64_t a3, BOOL *a4)
{
}

id sub_100117D9C(uint64_t a1, void *a2)
{
  return [a2 viewWillAppear:*(unsigned __int8 *)(a1 + 32)];
}

void sub_100117FAC(id a1, InboxNotificationsGroupController *a2, unint64_t a3, BOOL *a4)
{
}

void sub_10011813C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 64);
  int v4 = [*(id *)(v2 + 8) selectedOccurrence];
  LOBYTE(v3) = [v3 isEqual:v4];

  if ((v3 & 1) == 0)
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v6 = *(void **)(v5 + 64);
    *(void *)(v5 + 64) = 0;

    uint64_t v7 = [*(id *)(a1 + 32) tableView];
    double v8 = [*(id *)(a1 + 32) tableView];
    int v9 = [v8 indexPathForSelectedRow];
    [v7 deselectRowAtIndexPath:v9 animated:1];
  }
  [*(id *)(*(void *)(a1 + 32) + 72) invalidate];
  uint64_t v10 = *(void *)(a1 + 32);
  __int16 v11 = *(void **)(v10 + 72);
  *(void *)(v10 + 72) = 0;
}

id sub_100118FFC(uint64_t a1)
{
  id v1 = [objc_alloc((Class)EKUIReadonlyEventViewController) initWithEvent:*(void *)(a1 + 32)];
  [v1 setAllowsCalendarPreview:1];
  [v1 setInlineDayViewRespectsSelectedCalendarsFilter:0];
  [v1 setCalendarPreviewIsInlineDayView:1];

  return v1;
}

id sub_100119068(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) tableView];
  id v3 = [v2 cellForRowAtIndexPath:*(void *)(a1 + 40)];

  uint64_t v12 = *(void *)(a1 + 48);
  int v4 = +[NSArray arrayWithObjects:&v12 count:1];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1001191F0;
  v10[3] = &unk_1001D5B28;
  id v11 = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100119248;
  v8[3] = &unk_1001D2858;
  uint64_t v9 = *(void *)(a1 + 32);
  id v5 = v3;
  int v6 = +[EKUIContextMenuActions menuForEvents:v4 presentationController:v9 isEditMenu:0 overrideActionBlock:v10 completionBlock:v8];

  return v6;
}

BOOL sub_1001191F0(uint64_t a1, uint64_t a2)
{
  id v3 = +[EKUIContextMenuActions statusButtonsActionFromContextMenuAction:a2];
  uint64_t v4 = v3 & 7;
  if ((v3 & 7) != 0) {
    [*(id *)(a1 + 32) eventStatusButtonsView:0 didSelectAction:v3 appliesToAll:0 ifCancelled:0];
  }
  return v4 != 0;
}

id *sub_100119248(id *result, uint64_t a2)
{
  if (a2 == 8) {
    return (id *)[result[4] attemptDisplayReviewPrompt];
  }
  return result;
}

void sub_10011954C(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1001195E0;
  v2[3] = &unk_1001D28A8;
  id v1 = *(void **)(a1 + 40);
  void v2[4] = *(void *)(a1 + 32);
  id v3 = v1;
  +[UIView performWithoutAnimation:v2];
}

void sub_1001195E0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 104));
  [WeakRetained inboxNewSectionViewController:*(void *)(a1 + 32) inspectEvent:*(void *)(a1 + 40)];
}

void sub_100119BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = +[NSIndexPath indexPathForRow:a2 inSection:*(void *)(a1 + 40)];
  [v2 addObject:v3];
}

void sub_100119C34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = +[NSIndexPath indexPathForRow:a2 inSection:*(void *)(a1 + 40)];
  [v2 addObject:v3];
}

void sub_100119C98(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = +[NSIndexPath indexPathForRow:a2 inSection:*(void *)(a1 + 40)];
  [v2 addObject:v3];
}

void sub_10011ABE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10011AC0C(uint64_t a1, void *a2, void *a3)
{
  id v19 = a2;
  id v5 = a3;
  int v6 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained(v6);
  [WeakRetained _updateTodayButtonPosition];

  if ([v5 horizontalSizeClass] == (id)2)
  {
    double v8 = [v19 traitCollection];
    id v9 = [v8 horizontalSizeClass];

    if (v9 == (id)1)
    {
      id v10 = objc_loadWeakRetained(v6);
      id v11 = [v10 viewControllers];
      id v12 = [v11 count];

      if ((unint64_t)v12 < 2) {
        goto LABEL_10;
      }
      id v13 = objc_loadWeakRetained(v6);
      [v13 _hideSearchBar];
      goto LABEL_9;
    }
  }
  if ([v5 horizontalSizeClass] == (id)1)
  {
    CGRect v14 = [v19 traitCollection];
    id v15 = [v14 horizontalSizeClass];

    if (v15 == (id)2)
    {
      id v16 = objc_loadWeakRetained(v6);
      CFStringRef v17 = [v16 viewControllers];
      id v18 = [v17 count];

      if ((unint64_t)v18 >= 2)
      {
        id v13 = objc_loadWeakRetained(v6);
        [v13 _showSearchBar];
LABEL_9:
      }
    }
  }
LABEL_10:
}

void sub_10011AFCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10011AFE4(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 48) = *(void *)(a1 + 48);
  uint64_t v2 = [*(id *)(a1 + 32) view];
  IsRegularInViewHierarchdouble y = EKUICurrentWidthSizeClassIsRegularInViewHierarchy();

  if (IsRegularInViewHierarchy)
  {
    *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 32) = 0;
    uint64_t v4 = [*(id *)(a1 + 32) searchBar];
    [v4 setFrame:*(double *)(*(void *)(*(void *)(a1 + 40) + 8) + 32), *(double *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), *(double *)(*(void *)(*(void *)(a1 + 40) + 8) + 48), *(double *)(*(void *)(*(void *)(a1 + 40) + 8) + 56)];

    id v5 = [*(id *)(a1 + 32) searchResultsViewController];
    int v6 = [*(id *)(a1 + 32) searchBar];
    uint64_t v7 = [*(id *)(a1 + 32) searchBar];
    [v7 frame];
    [v5 _searchBar:v6];
    double v9 = v8;
    double v11 = v10;

    id v12 = [*(id *)(a1 + 32) searchBar];
    id v13 = [v12 searchField];
    [v13 frame];
    double v15 = v14;

    id v16 = [*(id *)(a1 + 32) searchBar];
    CFStringRef v17 = [v16 searchField];
    [v17 setFrame:v9, 8.0, v11, v15];

    id v18 = [*(id *)(a1 + 32) view];
    EKUIApplicationFrame();
    double v20 = v19;
    double v22 = v21;
    double v24 = v23;

    double v25 = *(double *)(a1 + 72);
    CGRect v26 = [*(id *)(a1 + 32) searchBar];
    CFStringRef v27 = [v26 searchField];
    double v28 = [v27 superview];
    [v28 setFrame:v20, v22, v24, v25];

    double v29 = *(double *)(a1 + 72);
    double v30 = *(double *)(a1 + 56) - v29 + -20.0;
    double v31 = v29 + 1.0;
    EKUIWidthForWindowSizeParadigm();
    double v33 = v32;
    id v34 = [*(id *)(a1 + 32) parentViewController];
    uint64_t v35 = [v34 view];
    [v35 frame];
    double Width = CGRectGetWidth(v49);

    id v37 = *(void **)(a1 + 32);
    if (Width <= v33)
    {
      id v47 = [v37 parentViewController];
      long long v45 = [v47 view];
      long long v46 = [v45 superview];
      [v46 setFrame:v9, v31, v11, v30];
    }
    else
    {
      uint64_t v38 = [v37 view];
      [v38 setFrame:v9, v31, v11, v30];

      id v39 = [*(id *)(a1 + 32) view];
      double v40 = [v39 layer];
      [v40 setMasksToBounds:1];

      long long v41 = [*(id *)(a1 + 32) view];
      long long v42 = [v41 layer];
      [v42 setCornerRadius:4.0];

      id v47 = [*(id *)(a1 + 32) view];
      [v47 setNeedsDisplay];
    }
  }
  else
  {
    long long v43 = [*(id *)(a1 + 32) view];
    long long v44 = [*(id *)(a1 + 32) view];
    EKUIApplicationFrame();
    [v43 setFrame:];

    id v47 = [*(id *)(a1 + 32) searchBar];
    [v47 setFrame:*(double *)(*(void *)(*(void *)(a1 + 40) + 8) + 32), *(double *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), *(double *)(*(void *)(*(void *)(a1 + 40) + 8) + 48), *(double *)(*(void *)(*(void *)(a1 + 40) + 8) + 56)];
  }
}

id sub_10011B6DC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _hideSearchBar];
}

void sub_10011B6E4(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) searchBar];
  [v1 setHidden:1];
}

id sub_10011B878(uint64_t a1)
{
  return [*(id *)(a1 + 32) _showSearchBar];
}

uint64_t sub_10011B880(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10011BA70(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) searchBar];
  [v2 setHidden:0];

  double v3 = *(double *)(a1 + 40);
  double v4 = *(double *)(a1 + 48);
  double v5 = *(double *)(a1 + 56);
  double v6 = *(double *)(a1 + 64);
  id v7 = [*(id *)(a1 + 32) searchBar];
  [v7 setFrame:v3, v4, v5, v6];
}

void sub_10011BE40(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) view];
  IsRegularInViewHierarchdouble y = EKUICurrentWidthSizeClassIsRegularInViewHierarchy();

  double v4 = *(void **)(a1 + 32);
  if (IsRegularInViewHierarchy)
  {
    double v5 = [v4 searchBar];
    double v6 = [v5 _leftButton];

    [v6 setEnabled:*(unsigned __int8 *)(a1 + 40)];
    if (*(unsigned char *)(a1 + 40)) {
      CalendarAppTintColor();
    }
    else {
    id v7 = +[UIColor lightGrayColor];
    }
    [v6 setTitleColor:v7 forState:0];
  }
  else
  {
    double v6 = [v4 searchResultsViewController];
    id v7 = [v6 toolbarItems];
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_10011BFE0;
    v14[3] = &unk_1001D5BC8;
    void v14[4] = *(void *)(a1 + 32);
    char v15 = *(unsigned char *)(a1 + 40);
    [v7 enumerateObjectsUsingBlock:v14];
  }

  double v8 = [*(id *)(a1 + 32) searchBar];
  double v9 = [v8 searchField];
  [v9 setUserInteractionEnabled:*(unsigned __int8 *)(a1 + 40)];

  double v10 = [*(id *)(a1 + 32) searchBar];
  double v11 = [v10 searchField];
  id v12 = v11;
  double v13 = 0.35;
  if (*(unsigned char *)(a1 + 40)) {
    double v13 = 1.0;
  }
  [v11 setAlpha:v13];
}

void sub_10011BFE0(uint64_t a1, void *a2)
{
  id v6 = a2;
  double v3 = [v6 title];
  double v4 = [(id)objc_opt_class() _todayLocalizedString];
  unsigned int v5 = [v3 isEqualToString:v4];

  if (v5) {
    [v6 setEnabled:*(unsigned __int8 *)(a1 + 40)];
  }
}

void sub_10011C5CC(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_100216A68;
  qword_100216A68 = v1;

  double v3 = (void *)qword_100216A68;

  [v3 addAnchoredValue:2 forWindowSizeWidth:7.5];
}

void sub_10011C684(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_100216A78;
  qword_100216A78 = v1;

  double v3 = (void *)qword_100216A78;

  [v3 addAnchoredValue:2 forWindowSizeWidth:55.0];
}

void sub_10011C740(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_100216A88;
  qword_100216A88 = v1;

  double v3 = (void *)qword_100216A88;

  [v3 addAnchoredValue:2 forWindowSizeWidth:0.0];
}

void sub_10011C800(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_100216A98;
  qword_100216A98 = v1;

  double v3 = (void *)qword_100216A98;

  [v3 addAnchoredValue:2 forWindowSizeWidth:4.0];
}

void sub_10011C91C(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_100216AA8;
  qword_100216AA8 = v1;

  double v3 = (void *)qword_100216AA8;

  [v3 addAnchoredValue:2 forWindowSizeWidth:36.0];
}

void sub_10011C9EC(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_100216AC0;
  qword_100216AC0 = v1;

  double v3 = (void *)qword_100216AC0;

  [v3 addAnchoredValue:2 forWindowSizeWidth:17.0];
}

void sub_10011CB0C(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_100216AD0;
  qword_100216AD0 = v1;

  double v3 = (void *)qword_100216AD0;

  [v3 addAnchoredValue:2 forWindowSizeWidth:8.0];
}

void sub_10011CBD4(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_100216AE0;
  qword_100216AE0 = v1;

  double v3 = (void *)qword_100216AE0;

  [v3 addAnchoredValue:2 forWindowSizeWidth:12.0];
}

void sub_10011CE40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10011CE64(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateTableAlpha:1];

  id v3 = objc_loadWeakRetained(v1);
  [v3 _setContentInsets];
}

void sub_10011D80C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10011D828(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 40);
  id v3 = objc_loadWeakRetained((id *)(a1 + 40));
  double v4 = [v3 tableView];
  if ((uint64_t)[v3 numberOfSectionsInTableView:v4] >= 1)
  {

LABEL_4:
    id WeakRetained = objc_loadWeakRetained(v2);
    double v9 = [WeakRetained view];
    double v10 = v9;
    double v11 = 1.0;
    goto LABEL_5;
  }
  id v5 = objc_loadWeakRetained(v2);
  id v6 = [v5 searchBar];
  id v7 = [v6 text];
  id v8 = [v7 length];

  if (v8) {
    goto LABEL_4;
  }
  if ([*(id *)(a1 + 32) destination] == (id)2) {
    return;
  }
  id WeakRetained = objc_loadWeakRetained(v2);
  double v9 = [WeakRetained view];
  double v10 = v9;
  double v11 = 0.0;
LABEL_5:
  [v9 setAlpha:v11];
}

void sub_10011DF18(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) searchResultsDelegate];

  if (v2)
  {
    id v3 = [*(id *)(a1 + 32) searchResultsDelegate];
    [v3 searchResultsViewController:*(void *)(a1 + 32) didSelectEvent:*(void *)(a1 + 40)];
  }
}

void sub_10011E114(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_10011E1A8;
  v2[3] = &unk_1001D28A8;
  uint64_t v1 = *(void **)(a1 + 40);
  void v2[4] = *(void *)(a1 + 32);
  id v3 = v1;
  +[UIView performWithoutAnimation:v2];
}

id sub_10011E1A8(uint64_t a1)
{
  return [*(id *)(a1 + 32) showEvent:*(void *)(a1 + 40)];
}

id sub_10011F028(uint64_t a1)
{
  +[NSThread sleepForTimeInterval:2.0];
  uint64_t v2 = +[NSNotificationCenter defaultCenter];
  [v2 addObserver:*(void *)(a1 + 32) selector:"_searchViewDidAppear" name:@"ListViewController_ViewDidAppearNotification" object:0];

  id v3 = [*(id *)(a1 + 32) application];
  [v3 startedTest:*(void *)(a1 + 40)];

  double v4 = *(void **)(*(void *)(a1 + 32) + 56);

  return [v4 toggleDayViewMode:2];
}

id sub_10011F0D0(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 56) presentedViewController];

  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 40);
    double v4 = *(void **)(*(void *)(a1 + 32) + 56);
    return [v4 dismissViewControllerAnimated:1 completion:v3];
  }
  else
  {
    id v6 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);
    return (id)v6();
  }
}

id sub_10011F21C(uint64_t a1)
{
  uint64_t v2 = +[NSNotificationCenter defaultCenter];
  [v2 removeObserver:*(void *)(a1 + 32)];

  uint64_t v3 = *(void **)(*(void *)(a1 + 32) + 56);

  return [v3 toggleDayViewMode:0];
}

void sub_10011F410(uint64_t a1)
{
  id v4 = [*(id *)(a1 + 32) presentedViewController];
  uint64_t v2 = [v4 _eventEditorForTestingOnly];
  uint64_t v3 = +[NSNotificationCenter defaultCenter];
  [v3 addObserver:*(void *)(a1 + 40) selector:"handleDidBeginAutocompleteSearchNotification:" name:_EventKitUI_EventEditorDidBeginAutocompleteSearchNotification object:0];
  [v3 addObserver:*(void *)(a1 + 40) selector:"handleDidShowAutocompleteResultsNotification:" name:_EventKitUI_EventEditorDidShowAutocompleteResultsNotification object:0];
  [*(id *)(a1 + 48) startedTest:*(void *)(a1 + 56)];
  [*(id *)(a1 + 48) startedSubTest:@"SearchThrottleDelay" forTest:*(void *)(a1 + 56)];
  [v2 _setEventTitleForTestingAutocomplete:*(void *)(a1 + 64)];
}

void sub_10011F68C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) application];
  [v2 finishedSubTest:@"CellDisplay" forTest:*(void *)(a1 + 40)];

  uint64_t v3 = [*(id *)(a1 + 32) application];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10011F744;
  v5[3] = &unk_1001D2740;
  uint64_t v4 = *(void *)(a1 + 40);
  void v5[4] = *(void *)(a1 + 32);
  [v3 finishedTest:v4 extraResults:0 withTeardownBlock:v5];
}

void sub_10011F744(uint64_t a1)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 removeObserver:*(void *)(a1 + 32)];
}

void sub_10011FC64(id a1)
{
  uint64_t v1 = +[UIColor labelColor];
  id v2 = (void *)qword_100216B20;
  qword_100216B20 = v1;

  uint64_t v3 = +[UIColor secondaryLabelColor];
  uint64_t v4 = (void *)qword_100216B28;
  qword_100216B28 = v3;

  uint64_t v5 = +[UIColor tertiaryLabelColor];
  id v6 = (void *)qword_100216B30;
  qword_100216B30 = v5;

  uint64_t v7 = +[UIColor colorWithWhite:1.0 alpha:0.75];
  uint64_t v8 = qword_100216B38;
  qword_100216B38 = v7;

  _objc_release_x1(v7, v8);
}

void sub_10011FEB8(id a1)
{
  uint64_t v1 = +[UIColor secondaryLabelColor];
  id v2 = (void *)qword_100216B48;
  qword_100216B48 = v1;

  uint64_t v3 = +[UIColor tertiaryLabelColor];
  uint64_t v4 = (void *)qword_100216B50;
  qword_100216B50 = v3;

  uint64_t v5 = +[UIColor tertiaryLabelColor];
  uint64_t v6 = qword_100216B58;
  qword_100216B58 = v5;

  _objc_release_x1(v5, v6);
}

void sub_10011FFC0(id a1)
{
  uint64_t v1 = +[UIColor colorWithWhite:0.0 alpha:0.2];
  uint64_t v2 = qword_100216B68;
  qword_100216B68 = v1;

  _objc_release_x1(v1, v2);
}

void sub_100120EA4(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = qword_100216B78;
  qword_100216B78 = v1;

  _objc_release_x1(v1, v2);
}

void sub_100120EE0(id a1)
{
  EKUIScaleFactor();
  qword_100216B88 = v1;
}

void sub_100120F00(uint64_t a1)
{
  [*(id *)(a1 + 32) setFill];
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 64);

  UIRectFill(*(CGRect *)&v2);
}

void sub_100121400(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = qword_100216B98;
  qword_100216B98 = v1;

  _objc_release_x1(v1, v2);
}

void sub_10012143C(id a1)
{
  EKUIScaleFactor();
  qword_100216BA8 = v1;
}

void sub_10012145C(uint64_t a1)
{
  [*(id *)(a1 + 32) setFill];
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 64);

  UIRectFill(*(CGRect *)&v2);
}

void sub_100123FA4(id a1)
{
  uint64_t v1 = +[UIColor colorWithWhite:0.831372549 alpha:1.0];
  uint64_t v2 = qword_100216BB8;
  qword_100216BB8 = v1;

  _objc_release_x1(v1, v2);
}

id sub_100123FF0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateDotImageView];
}

id sub_100126248(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 25) = 1;
  return [*(id *)(a1 + 40) reloadData];
}

void sub_10012625C(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 25) = 0;
  +[CarplayUtilities dateForSection:](CarplayUtilities, "dateForSection:", [*(id *)(a1 + 40) section]);
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v2 = objc_msgSend(*(id *)(a1 + 32), "cellForRow:underDate:inTableView:", objc_msgSend(*(id *)(a1 + 40), "row"), v3, *(void *)(a1 + 48));
  [*(id *)(a1 + 56) crossfadeToCell:v2];
  [*(id *)(a1 + 48) insertRowsAtIndexPaths:*(void *)(a1 + 64) withRowAnimation:3];
}

id sub_100126308(uint64_t a1)
{
  return [*(id *)(a1 + 32) reloadData];
}

BOOL sub_100126760(id a1, EKEvent *a2, NSDictionary *a3)
{
  id v3 = [(EKEvent *)a2 calendar];
  uint64_t v4 = [v3 source];
  BOOL v5 = [v4 sourceType] == (id)5;

  return v5;
}

void sub_100127160(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_100216BC8;
  qword_100216BC8 = v1;

  [(id)qword_100216BC8 setCalculationType:1];
  id v3 = (void *)qword_100216BC8;
  EKUIWidthForWindowSizeParadigm();
  [v3 addAnchoredValue:223.0 forSize:v4 * 0.5];
  [(id)qword_100216BC8 addAnchoredValue:512 forWindowSizeWidth:159.0];
  [(id)qword_100216BC8 addAnchoredValue:2048 forWindowSizeWidth:215.5];
  [(id)qword_100216BC8 addAnchoredValue:4096 forWindowSizeWidth:208.5];
  [(id)qword_100216BC8 addAnchoredValue:0x8000 forWindowSizeWidth:237.0];
  [(id)qword_100216BC8 addAnchoredValue:0x10000 forWindowSizeWidth:218.0];
  BOOL v5 = (void *)qword_100216BC8;

  [v5 addAnchoredValue:0x4000 forWindowSizeWidth:290.0];
}

void sub_1001272F8(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_100216BD8;
  qword_100216BD8 = v1;

  [(id)qword_100216BD8 addAnchoredValue:2048 forWindowSizeWidth:5.0];
  id v3 = (void *)qword_100216BD8;

  [v3 addAnchoredValue:4096 forWindowSizeWidth:5.0];
}

uint64_t sub_100127458(uint64_t a1)
{
  [*(id *)(a1 + 32) headerFontMaxSize];
  uint64_t v1 = +[UIFont systemFontOfSize:weight:](UIFont, "systemFontOfSize:weight:");
  uint64_t v2 = qword_100216BE8;
  qword_100216BE8 = v1;

  return _objc_release_x1(v1, v2);
}

void sub_100127710(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_100216C08;
  qword_100216C08 = v1;

  [(id)qword_100216C08 setCalculationType:0];
  id v3 = (void *)qword_100216C08;
  EKUIWidthForWindowSizeParadigm();
  [v3 addAnchoredValue:14.0 forSize:v4 * 0.5];
  [(id)qword_100216C08 addAnchoredValue:512 forWindowSizeWidth:10.0];
  [(id)qword_100216C08 addAnchoredValue:2048 forWindowSizeWidth:12.0];
  [(id)qword_100216C08 addAnchoredValue:4096 forWindowSizeWidth:12.0];
  [(id)qword_100216C08 addAnchoredValue:0x8000 forWindowSizeWidth:13.0];
  [(id)qword_100216C08 addAnchoredValue:0x10000 forWindowSizeWidth:13.0];
  [(id)qword_100216C08 addAnchoredValue:0x4000 forWindowSizeWidth:16.0];
  BOOL v5 = (void *)qword_100216C08;

  [v5 addAnchoredValue:0x40000000 forWindowSizeWidth:15.5];
}

void sub_1001278B8(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_100216C18;
  qword_100216C18 = v1;

  [(id)qword_100216C18 setCalculationType:0];
  id v3 = (void *)qword_100216C18;
  EKUIWidthForWindowSizeParadigm();
  [v3 addAnchoredValue:16.0 forSize:v4 * 0.5];
  [(id)qword_100216C18 addAnchoredValue:512 forWindowSizeWidth:11.0];
  [(id)qword_100216C18 addAnchoredValue:2048 forWindowSizeWidth:14.0];
  [(id)qword_100216C18 addAnchoredValue:4096 forWindowSizeWidth:14.0];
  [(id)qword_100216C18 addAnchoredValue:0x8000 forWindowSizeWidth:14.0];
  [(id)qword_100216C18 addAnchoredValue:0x10000 forWindowSizeWidth:14.0];
  [(id)qword_100216C18 addAnchoredValue:0x4000 forWindowSizeWidth:16.0];
  BOOL v5 = (void *)qword_100216C18;

  [v5 addAnchoredValue:0x40000000 forWindowSizeWidth:15.5];
}

void sub_100127A4C(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_100216C28;
  qword_100216C28 = v1;

  [(id)qword_100216C28 setCalculationType:0];
  id v3 = (void *)qword_100216C28;
  EKUIWidthForWindowSizeParadigm();
  [v3 addAnchoredValue:28.0 forSize:v4 * 0.5];
  [(id)qword_100216C28 addAnchoredValue:512 forWindowSizeWidth:16.0];
  [(id)qword_100216C28 addAnchoredValue:2048 forWindowSizeWidth:24.0];
  [(id)qword_100216C28 addAnchoredValue:4096 forWindowSizeWidth:24.0];
  [(id)qword_100216C28 addAnchoredValue:0x8000 forWindowSizeWidth:24.0];
  [(id)qword_100216C28 addAnchoredValue:0x10000 forWindowSizeWidth:24.0];
  [(id)qword_100216C28 addAnchoredValue:0x4000 forWindowSizeWidth:28.0];
  BOOL v5 = (void *)qword_100216C28;

  [v5 addAnchoredValue:0x40000000 forWindowSizeWidth:27.5];
}

void sub_100127C78(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_100216C38;
  qword_100216C38 = v1;

  [(id)qword_100216C38 setCalculationType:0];
  id v3 = (void *)qword_100216C38;
  EKUIWidthForWindowSizeParadigm();
  [v3 addAnchoredValue:1.0 forSize:v4 * 0.5];
  [(id)qword_100216C38 addAnchoredValue:512 forWindowSizeWidth:-1.5];
  [(id)qword_100216C38 addAnchoredValue:2048 forWindowSizeWidth:0.0];
  [(id)qword_100216C38 addAnchoredValue:4096 forWindowSizeWidth:0.0];
  [(id)qword_100216C38 addAnchoredValue:0x4000 forWindowSizeWidth:-2.0];
  BOOL v5 = (void *)qword_100216C38;

  [v5 addAnchoredValue:0x40000000 forWindowSizeWidth:-1.5];
}

void sub_100127E24(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_100216C48;
  qword_100216C48 = v1;

  [(id)qword_100216C48 setCalculationType:1];
  [(id)qword_100216C48 addAnchoredValue:512 forWindowSizeWidth:48.0];
  [(id)qword_100216C48 addAnchoredValue:2048 forWindowSizeWidth:59.5];
  [(id)qword_100216C48 addAnchoredValue:4096 forWindowSizeWidth:59.5];
  id v3 = (void *)qword_100216C48;

  [v3 addAnchoredValue:0x4000 forWindowSizeWidth:75.0];
}

void sub_100127F90(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_100216C58;
  qword_100216C58 = v1;

  id v3 = (void *)qword_100216C58;
  EKUIWidthForWindowSizeParadigm();
  [v3 addAnchoredValue:24.0 forSize:v4 * 0.5];
  [(id)qword_100216C58 addAnchoredValue:512 forWindowSizeWidth:24.0];
  [(id)qword_100216C58 addAnchoredValue:2048 forWindowSizeWidth:24.0];
  BOOL v5 = (void *)qword_100216C58;

  [v5 addAnchoredValue:4096 forWindowSizeWidth:24.0];
}

void sub_1001280E0(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_100216C68;
  qword_100216C68 = v1;

  [(id)qword_100216C68 setCalculationType:1];
  id v3 = (void *)qword_100216C68;
  EKUIWidthForWindowSizeParadigm();
  [v3 addAnchoredValue:24.0 forSize:v4 * 0.5];
  [(id)qword_100216C68 addAnchoredValue:512 forWindowSizeWidth:17.0];
  [(id)qword_100216C68 addAnchoredValue:2048 forWindowSizeWidth:22.0];
  [(id)qword_100216C68 addAnchoredValue:4096 forWindowSizeWidth:22.0];
  [(id)qword_100216C68 addAnchoredValue:0x8000 forWindowSizeWidth:26.0];
  [(id)qword_100216C68 addAnchoredValue:0x10000 forWindowSizeWidth:26.0];
  BOOL v5 = (void *)qword_100216C68;

  [v5 addAnchoredValue:0x4000 forWindowSizeWidth:30.0];
}

void sub_1001282B4(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_100216C78;
  qword_100216C78 = v1;

  [(id)qword_100216C78 setCalculationType:1];
  id v3 = (void *)qword_100216C78;
  EKUIWidthForWindowSizeParadigm();
  [v3 addAnchoredValue:12.0 forSize:v4 * 0.5];
  [(id)qword_100216C78 addAnchoredValue:512 forWindowSizeWidth:11.0];
  BOOL v5 = (void *)qword_100216C78;

  [v5 addAnchoredValue:2048 forWindowSizeWidth:12.0];
}

void sub_100128404(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_100216C88;
  qword_100216C88 = v1;

  [(id)qword_100216C88 setCalculationType:1];
  [(id)qword_100216C88 addAnchoredValue:512 forWindowSizeWidth:31.0];
  [(id)qword_100216C88 addAnchoredValue:2048 forWindowSizeWidth:38.0];
  [(id)qword_100216C88 addAnchoredValue:4096 forWindowSizeWidth:38.0];
  [(id)qword_100216C88 addAnchoredValue:0x8000 forWindowSizeWidth:38.0];
  [(id)qword_100216C88 addAnchoredValue:0x10000 forWindowSizeWidth:38.0];
  id v3 = (void *)qword_100216C88;

  [v3 addAnchoredValue:0x4000 forWindowSizeWidth:50.0];
}

void sub_100129B04(id *a1)
{
  [a1[4] setAnimatingViewTransition:0];
  [a1[5] setAnimatingViewTransition:0];
  uint64_t v2 = [a1[6] transitionView];
  [v2 removeFromSuperview];

  [a1[7] completeTransition:1];
  id v3 = +[NSNotificationCenter defaultCenter];
  [v3 postNotificationName:@"PhoneMonthDayAnimator_DayToMonthAnimationCompleteNotification" object:0];
}

void sub_100129BA0(id *a1)
{
  [a1[4] setAnimatingViewTransition:0];
  [a1[5] setAnimatingViewTransition:0];
  uint64_t v2 = [a1[6] transitionView];
  [v2 removeFromSuperview];

  [a1[7] completeTransition:1];
  id v3 = +[NSNotificationCenter defaultCenter];
  [v3 postNotificationName:@"PhoneMonthDayAnimator_MonthToDayAnimationCompleteNotification" object:0];
}

void sub_10012B5A4(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10012B6A0;
  block[3] = &unk_1001D28A8;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  id v7 = v2;
  uint64_t v8 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  double v4 = [*(id *)(a1 + 40) queue];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10012B718;
  v5[3] = &unk_1001D2740;
  void v5[4] = *(void *)(a1 + 40);
  dispatch_async(v4, v5);
}

uint64_t sub_10012B6A0(uint64_t a1)
{
  uint64_t result = objc_opt_respondsToSelector();
  if (result)
  {
    uint64_t v3 = *(void **)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    uint64_t v5 = *(void *)(v4 + 32);
    uint64_t v6 = *(void *)(v4 + 24);
    uint64_t v7 = *(unsigned __int8 *)(v4 + 11);
    return (uint64_t)_[v3 navigationController:v5 didShowViewController:v6 animated:v7];
  }
  return result;
}

id sub_10012B718(uint64_t a1)
{
  return [*(id *)(a1 + 32) finish];
}

id sub_10012B7A8(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) isCancelled];
  if ((result & 1) == 0)
  {
    id result = [*(id *)(a1 + 32) isExecuting];
    if ((result & 1) == 0)
    {
      id result = [*(id *)(a1 + 32) isFinished];
      if ((result & 1) == 0)
      {
        uint64_t v3 = *(void **)(a1 + 32);
        return _[v3 main];
      }
    }
  }
  return result;
}

void sub_10012B950(uint64_t a1)
{
  id v2 = *(unsigned char **)(a1 + 32);
  if (!v2[10])
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v3 = (void *)kCalUILogHandle;
      if (os_log_type_enabled((os_log_t)kCalUILogHandle, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v4 = v3;
        uint64_t v5 = objc_opt_class();
        id v6 = v5;
        uint64_t v7 = objc_opt_class();
        id v8 = v7;
        *(_DWORD *)buf = 138412802;
        double v13 = v5;
        __int16 v14 = 2112;
        char v15 = v7;
        __int16 v16 = 2112;
        id v17 = (id)objc_opt_class();
        id v9 = v17;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%@ operation instructing %@ to push %@.", buf, 0x20u);
      }
      [*(id *)(*(void *)(a1 + 32) + 32) pushViewController:*(void *)(*(void *)(a1 + 32) + 24) animated:*(unsigned __int8 *)(*(void *)(a1 + 32) + 11)];
      double v10 = [*(id *)(a1 + 32) queue];
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_10012BBA4;
      block[3] = &unk_1001D2740;
      void block[4] = *(void *)(a1 + 32);
      dispatch_async(v10, block);

      return;
    }
    id v2 = *(unsigned char **)(a1 + 32);
  }

  _[v2 doInternalPresentation];
}

id sub_10012BBA4(uint64_t a1)
{
  return [*(id *)(a1 + 32) finish];
}

id sub_10012BC68(uint64_t a1)
{
  return [*(id *)(a1 + 32) finish];
}

void sub_10012C6D4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(v2 + 112);
  uint64_t v4 = [*(id *)(v2 + 8) selectedOccurrence];
  LOBYTE(v3) = [v3 isEqual:v4];

  if ((v3 & 1) == 0)
  {
    uint64_t v5 = *(void *)(a1 + 32);
    id v6 = *(void **)(v5 + 112);
    *(void *)(v5 + 112) = 0;

    uint64_t v7 = [*(id *)(a1 + 32) tableView];
    id v8 = [*(id *)(a1 + 32) tableView];
    id v9 = [v8 indexPathForSelectedRow];
    [v7 deselectRowAtIndexPath:v9 animated:1];
  }
  [*(id *)(*(void *)(a1 + 32) + 120) invalidate];
  uint64_t v10 = *(void *)(a1 + 32);
  double v11 = *(void **)(v10 + 120);
  *(void *)(v10 + 120) = 0;
}

void sub_10012CBFC(uint64_t a1)
{
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v15;
    do
    {
      for (uint64_t i = 0; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v15 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void **)(*((void *)&v14 + 1) + 8 * i);
        if ((objc_msgSend(*(id *)(a1 + 40), "isFocusBannerSection:", objc_msgSend(v7, "section")) & 1) == 0)
        {
          id v8 = [*(id *)(a1 + 40) _notificationForIndexPath:v7 cache:*(void *)(a1 + 48)];
          id v9 = v8;
          if (v8)
          {
            uint64_t v10 = *(void *)(a1 + 40);
            double v11 = *(NSObject **)(v10 + 80);
            v12[0] = _NSConcreteStackBlock;
            v12[1] = 3221225472;
            v12[2] = sub_10012CDB0;
            v12[3] = &unk_1001D28A8;
            v12[4] = v10;
            id v13 = v8;
            dispatch_sync(v11, v12);
          }
        }
      }
      id v4 = [v2 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }
    while (v4);
  }
}

void sub_10012CDB0(uint64_t a1)
{
  CUIKDisplayStringForNotificationIdentity();
  id v5 = (id)objc_claimAutoreleasedReturnValue();
  id v2 = *(void **)(a1 + 40);
  id v3 = *(void **)(*(void *)(a1 + 32) + 64);
  id v4 = [v2 objectID];
  [v3 setObject:v5 forKeyedSubscript:v4];
}

id sub_10012D2EC(uint64_t a1)
{
  id v1 = [objc_alloc((Class)EKUIReadonlyEventViewController) initWithEvent:*(void *)(a1 + 32)];
  [v1 setAllowsCalendarPreview:1];
  [v1 setInlineDayViewRespectsSelectedCalendarsFilter:0];
  [v1 setCalendarPreviewIsInlineDayView:1];

  return v1;
}

id sub_10012D358(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) tableView];
  id v3 = [v2 cellForRowAtIndexPath:*(void *)(a1 + 40)];

  uint64_t v11 = *(void *)(a1 + 48);
  id v4 = +[NSArray arrayWithObjects:&v11 count:1];
  uint64_t v5 = *(void *)(a1 + 32);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_10012D4A0;
  v9[3] = &unk_1001D5B28;
  id v10 = v3;
  id v6 = v3;
  uint64_t v7 = +[EKUIContextMenuActions menuForEvents:v4 presentationController:v5 isEditMenu:0 overrideActionBlock:v9 completionBlock:0];

  return v7;
}

BOOL sub_10012D4A0(uint64_t a1, uint64_t a2)
{
  id v3 = +[EKUIContextMenuActions statusButtonsActionFromContextMenuAction:a2];
  uint64_t v4 = v3 & 7;
  if ((v3 & 7) != 0) {
    [*(id *)(a1 + 32) eventStatusButtonsView:0 didSelectAction:v3 appliesToAll:0 ifCancelled:0];
  }
  return v4 != 0;
}

void sub_10012D7E8(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_10012D87C;
  v2[3] = &unk_1001D28A8;
  id v1 = *(void **)(a1 + 40);
  void v2[4] = *(void *)(a1 + 32);
  id v3 = v1;
  +[UIView performWithoutAnimation:v2];
}

void sub_10012D87C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 160));
  [WeakRetained inboxRepliedSectionViewController:*(void *)(a1 + 32) inspectEvent:*(void *)(a1 + 40)];
}

void sub_10012DDBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10012DDD0(uint64_t a1, void *a2, uint64_t a3)
{
  id v14 = a2;
  id v5 = +[NSNull null];

  id v6 = v14;
  if (v5 != v14)
  {
    uint64_t v7 = [v14 notification];
    id v8 = v7;
    if (v7)
    {
      id v9 = *(void **)(*(void *)(a1 + 32) + 56);
      id v10 = [v7 URL];
      uint64_t v11 = [v9 objectForKeyedSubscript:v10];

      if (v11)
      {
        id v12 = *(void **)(a1 + 32);
        id v13 = +[NSIndexPath indexPathForRow:a3 inSection:*(void *)(a1 + 40)];
        [v12 _saveStatus:3 forItemAtIndexPath:v13];
      }
    }

    id v6 = v14;
  }
}

unsigned char *sub_10012E460(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 144) = 1;
  id result = *(unsigned char **)(a1 + 32);
  if (result[40]) {
    return [result _refreshIfNeeded];
  }
  return result;
}

unsigned char *sub_10012E5AC(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 144) = 1;
  id result = *(unsigned char **)(a1 + 32);
  if (result[40]) {
    return [result _refreshIfNeeded];
  }
  return result;
}

unsigned char *sub_10012E6F8(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 144) = 1;
  id result = *(unsigned char **)(a1 + 32);
  if (result[40]) {
    return [result _refreshIfNeeded];
  }
  return result;
}

void sub_10012EAD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_10012EB04(uint64_t a1, uint64_t a2)
{
  id v3 = [*(id *)(a1 + 32) _eventForOccurrenceInfo:a2];
  if ([*(id *)(*(void *)(a1 + 32) + 8) focusFilterMode] == (id)1
    && ([*(id *)(*(void *)(a1 + 32) + 8) unselectedCalendarsForFocusMode],
        uint64_t v4 = objc_claimAutoreleasedReturnValue(),
        [v3 calendar],
        id v5 = objc_claimAutoreleasedReturnValue(),
        unsigned __int8 v6 = [v4 containsObject:v5],
        v5,
        v4,
        (v6 & 1) != 0))
  {
    id v7 = 0;
  }
  else
  {
    id v8 = [*(id *)(*(void *)(a1 + 32) + 8) sourceForSelectedIdentity];

    id v9 = [v3 calendar];
    id v10 = [v9 source];
    uint64_t v11 = v10;
    if (v8)
    {
      id v12 = [v10 sourceIdentifier];
      id v13 = [*(id *)(*(void *)(a1 + 32) + 8) sourceForSelectedIdentity];
      id v14 = [v13 sourceIdentifier];
      id v7 = [v12 isEqualToString:v14];
    }
    else
    {
      id v7 = (id)([v10 isDelegate] ^ 1);
    }
  }
  return v7;
}

void sub_10012EF40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10012EF5C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10012EF6C(uint64_t a1)
{
}

void sub_10012EF74(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 64);
  id v6 = [*(id *)(a1 + 40) objectID];
  uint64_t v3 = [v2 objectForKeyedSubscript:v6];
  uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_10012F19C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10012F530(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10012F550(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) notification];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void *)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  return _objc_release_x1(v2, v4);
}

id sub_10012F59C(uint64_t a1)
{
  return [*(id *)(a1 + 32) setNotification:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
}

id sub_1001306E8(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 8) setDesiredPaddingDays:1];
  [*(id *)(*(void *)(a1 + 32) + 8) setComponentForExpandingPadding:16];
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 64);

  return [v2 setPreloadExtraDays:1];
}

void sub_100130CD8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100130CF4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [WeakRetained presentedViewController];

  if (!v2
    && [WeakRetained didSelectEvent:*(void *)(a1 + 32) userInitiated:*(unsigned __int8 *)(a1 + 48)])
  {
    [WeakRetained _showDetailForEvent:*(void *)(a1 + 32) animated:*(unsigned __int8 *)(a1 + 49) context:0];
  }
}

void sub_100130E78(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100130E94(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [WeakRetained presentedViewController];

  if (!v2
    && [WeakRetained didSelectEvents:*(void *)(a1 + 32) userInitiated:*(unsigned __int8 *)(a1 + 48)])
  {
    [WeakRetained _showDetailForEvents:*(void *)(a1 + 32) animated:*(unsigned __int8 *)(a1 + 49)];
  }
}

uint64_t sub_1001325E8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(a1 + 32));
  }
  return result;
}

id sub_100133F48(id a1, EKDayOccurrenceView *a2)
{
  return [(EKDayOccurrenceView *)a2 occurrence];
}

id sub_100133F50(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:1.0];
}

void sub_1001340BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1001340D4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1001340E4(uint64_t a1)
{
}

void sub_1001340EC(uint64_t a1, void *a2)
{
  id v7 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && [v7 isSelectedCopyView])
  {
    uint64_t v3 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
    if (!v3)
    {
      uint64_t v4 = +[NSMutableArray array];
      uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
      id v6 = *(void **)(v5 + 40);
      *(void *)(v5 + 40) = v4;

      uint64_t v3 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
    }
    [v3 addObject:v7];
  }
}

id sub_100134388(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = [a2 occurrence];
  id v4 = [v2 containsObject:v3];

  return v4;
}

void sub_100135080(id a1, BOOL a2)
{
  BOOL v2 = a2;
  uint64_t v3 = kCalUILogCarplayHandle;
  if (os_log_type_enabled((os_log_t)kCalUILogCarplayHandle, OS_LOG_TYPE_INFO))
  {
    v4[0] = 67109120;
    v4[1] = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "cellWasTapped on location cell completion handler called with success %d", (uint8_t *)v4, 8u);
  }
}

uint64_t sub_100135D28(void *a1)
{
  id v41 = a1;
  uint64_t v2 = type metadata accessor for RemindersInCalendarUtilities.ReminderCreationModule();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  long long v42 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v36 = (char *)&v33 - v6;
  uint64_t v7 = sub_100013AAC((uint64_t *)&unk_100216260);
  __chkstk_darwin(v7 - 8);
  id v9 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for RemindersInCalendarEditingReminderProperties();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for RemindersInCalendarUtilities.ReminderCreationConfiguration();
  uint64_t v34 = *(void *)(v11 - 8);
  uint64_t v35 = v11;
  __chkstk_darwin(v11);
  id v39 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100013AAC((uint64_t *)&unk_100215E40);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v40 = (uint64_t)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  double v33 = (char *)&v33 - v17;
  __chkstk_darwin(v16);
  double v19 = (char *)&v33 - v18;
  uint64_t v37 = v1;
  uint64_t v20 = v1 + OBJC_IVAR____TtC9MobileCal32AddReminderViewControllerManager_creationModule;
  swift_beginAccess();
  sub_10013C644(v20, (uint64_t)v19, (uint64_t *)&unk_100215E40);
  uint64_t v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48);
  int v21 = v38(v19, 1, v2);
  sub_1000245E8((uint64_t)v19, (uint64_t *)&unk_100215E40);
  if (v21 == 1)
  {
    RemindersInCalendarUtilities.ReminderCreationConfiguration.init()();
    [self newObjectID];
    RemindersInCalendarUtilities.ReminderCreationConfiguration.reminderID.setter();
    id v22 = [v41 addItemState];
    uint64_t v23 = type metadata accessor for DateComponents();
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v9, 1, 1, v23);
    uint64_t v24 = v37;
    sub_100136398(v22, v9, 0);

    sub_1000245E8((uint64_t)v9, (uint64_t *)&unk_100216260);
    RemindersInCalendarUtilities.ReminderCreationConfiguration.initialProperties.setter();
    id v25 = *(id *)(v24 + OBJC_IVAR____TtC9MobileCal32AddReminderViewControllerManager_undoManager);
    RemindersInCalendarUtilities.ReminderCreationConfiguration.undoManager.setter();
    CGRect v26 = v36;
    static RemindersInCalendarUtilities.makeReminderCreationModule(configuration:)();
    RemindersInCalendarUtilities.ReminderCreationModule.moduleInterface.getter();
    swift_getObjectType();
    sub_10013C710(&qword_100215EB0, (void (*)(uint64_t))type metadata accessor for AddReminderViewControllerManager);
    swift_unknownObjectRetain();
    dispatch thunk of RemindersInCalendarReminderCreationModuleInterface.moduleDelegate.setter();
    swift_unknownObjectRelease();
    uint64_t v27 = (uint64_t)v33;
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v33, v26, v2);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v27, 0, 1, v2);
    swift_beginAccess();
    sub_10013C758(v27, v20, (uint64_t *)&unk_100215E40);
    swift_endAccess();
    id v28 = [v41 addItemState];
    sub_100137434(v28);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v26, v2);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v39, v35);
  }
  uint64_t v29 = v40;
  sub_10013C644(v20, v40, (uint64_t *)&unk_100215E40);
  if (v38((char *)v29, 1, v2) == 1)
  {
    sub_1000245E8(v29, (uint64_t *)&unk_100215E40);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    double v30 = v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v42, v29, v2);
    uint64_t v31 = RemindersInCalendarUtilities.ReminderCreationModule.viewController.getter();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v30, v2);
    return v31;
  }
  return result;
}

void sub_100136398(void *a1, void (*a2)(char *, uint64_t, uint64_t, uint64_t), void *a3)
{
  id v75 = a3;
  double v71 = a2;
  uint64_t v4 = sub_100013AAC(&qword_100215E90);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  int v67 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  double v66 = (char *)&v64 - v7;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v68 = *(void *)(v8 - 8);
  uint64_t v69 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  double v70 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  double v64 = (char *)&v64 - v11;
  uint64_t v76 = type metadata accessor for DateComponents();
  uint64_t v12 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  double v65 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100013AAC((uint64_t *)&unk_100216260);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v73 = (uint64_t)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v72 = (uint64_t)&v64 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  int v21 = (char *)&v64 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v64 - v22;
  uint64_t v24 = sub_100013AAC(&qword_100215E98);
  __chkstk_darwin(v24 - 8);
  CGRect v26 = (char *)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  RemindersInCalendarEditingReminderProperties.init()();
  id v27 = [a1 event];
  id v28 = [v27 title];
  if (v28)
  {
    uint64_t v29 = v28;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  RemindersInCalendarEditingReminderProperties.title.setter();
  id v30 = [v27 notes];
  if (v30)
  {
    uint64_t v31 = v30;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  RemindersInCalendarEditingReminderProperties.notes.setter();
  id v32 = [v27 URL];
  if (v32)
  {
    double v33 = v32;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v34 = type metadata accessor for URL();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v26, 0, 1, v34);
  }
  else
  {
    uint64_t v35 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v26, 1, 1, v35);
  }
  RemindersInCalendarEditingReminderProperties.url.setter();
  if ([a1 explicitTime])
  {
    id v36 = [v27 startDateComponents];
    uint64_t v37 = v76;
    if (v36)
    {
      uint64_t v38 = v36;
      static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v39 = 0;
    }
    else
    {
      uint64_t v39 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v23, v39, 1, v37);
    RemindersInCalendarEditingReminderProperties.dueDateComponents.setter();
    goto LABEL_23;
  }
  sub_10013C644((uint64_t)v71, (uint64_t)v21, (uint64_t *)&unk_100216260);
  uint64_t v37 = v76;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v21, 1, v76) == 1)
  {
    sub_1000245E8((uint64_t)v21, (uint64_t *)&unk_100216260);
    isCATransform3D a = (Class)[v27 startDate];
    if (isa)
    {
      id v41 = v70;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v43 = v68;
      uint64_t v42 = v69;
      long long v44 = v66;
      (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v66, v41, v69);
      long long v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56);
      v45(v44, 0, 1, v42);
      int v46 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 48))(v44, 1, v42);
      id v47 = v67;
      double v71 = v45;
      if (v46 == 1)
      {
        isCATransform3D a = 0;
      }
      else
      {
        isCATransform3D a = Date._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v42);
      }
    }
    else
    {
      uint64_t v43 = v68;
      uint64_t v42 = v69;
      double v71 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56);
      v71(v66, 1, 1, v69);
      id v47 = v67;
    }
    id v50 = (id)CUIKGetDefaultTimeForDate();

    if (v50)
    {
      double v51 = v70;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
      v52(v47, v51, v42);
      v71(v47, 0, 1, v42);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v47, 1, v42) != 1)
      {
        uint64_t v53 = (uint64_t)v64;
        v52(v64, v47, v42);
        uint64_t v54 = v72;
        sub_100136D28(v53, 0, v72);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v54, 0, 1, v37);
        RemindersInCalendarEditingReminderProperties.dueDateComponents.setter();
        (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v53, v42);
        goto LABEL_23;
      }
    }
    else
    {
      v71(v47, 1, 1, v42);
    }
    __break(1u);
    return;
  }
  long long v48 = v65;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v65, v21, v37);
  uint64_t v49 = v72;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(v72, v48, v37);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v49, 0, 1, v37);
  RemindersInCalendarEditingReminderProperties.dueDateComponents.setter();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v48, v37);
LABEL_23:
  uint64_t v55 = v74 + OBJC_IVAR____TtC9MobileCal32AddReminderViewControllerManager_initialDateComponents;
  swift_beginAccess();
  uint64_t v56 = v73;
  sub_10013C644(v55, v73, (uint64_t *)&unk_100216260);
  int v57 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v56, 1, v37);
  sub_1000245E8(v56, (uint64_t *)&unk_100216260);
  if (v57 == 1)
  {
    uint64_t v58 = v72;
    RemindersInCalendarEditingReminderProperties.dueDateComponents.getter();
    swift_beginAccess();
    sub_10013C758(v58, v55, (uint64_t *)&unk_100216260);
    swift_endAccess();
  }
  if (v75)
  {
    id v59 = v75;
    id v60 = [v27 recurrenceRules];
    if (v60)
    {
      double v61 = v60;
      sub_10001382C(0, &qword_100215EA8);
      static Array._unconditionallyBridgeFromObjectiveC(_:)();
    }
    sub_10001382C(0, &qword_100215EA0);
    id v62 = [v59 accountID];
    id v63 = [v59 objectID];
    static REMRecurrenceRule.convert(_:account:reminder:)();

    swift_bridgeObjectRelease();
    RemindersInCalendarEditingReminderProperties.recurrenceRules.setter();
  }
}

uint64_t sub_100136D28@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100013AAC(&qword_100215E68);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Calendar();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v33 - v14;
  id v16 = (id)CUIKCalendar();
  if (!v16)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    goto LABEL_8;
  }
  uint64_t v17 = v16;
  uint64_t v37 = a3;
  uint64_t v38 = a1;
  static Calendar._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v18(v8, v13, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  if (result == 1)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  id v36 = v15;
  v18(v15, v8, v9);
  sub_100013AAC(&qword_100215E70);
  uint64_t v20 = type metadata accessor for Calendar.Component();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(void *)(v21 + 72);
  unint64_t v23 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = (void (**)(unint64_t, void, uint64_t))(v21 + 104);
  uint64_t v25 = 2 * v22;
  uint64_t v26 = 3 * v22;
  uint64_t v35 = 4 * v22;
  if (a2)
  {
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1001C18D0;
    unint64_t v28 = v27 + v23;
    uint64_t v29 = *v24;
    (*v24)(v28, enum case for Calendar.Component.era(_:), v20);
    v29(v28 + v22, enum case for Calendar.Component.year(_:), v20);
    v29(v28 + v25, enum case for Calendar.Component.month(_:), v20);
    v29(v28 + v26, enum case for Calendar.Component.day(_:), v20);
    v29(v28 + v35, enum case for Calendar.Component.timeZone(_:), v20);
  }
  else
  {
    uint64_t v34 = 8 * v22;
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1001C18C0;
    unint64_t v30 = v27 + v23;
    uint64_t v31 = *v24;
    (*v24)(v30, enum case for Calendar.Component.era(_:), v20);
    v31(v30 + v22, enum case for Calendar.Component.year(_:), v20);
    v31(v30 + v25, enum case for Calendar.Component.month(_:), v20);
    v31(v30 + v26, enum case for Calendar.Component.day(_:), v20);
    v31(v30 + v35, enum case for Calendar.Component.hour(_:), v20);
    v31(v30 + 5 * v22, enum case for Calendar.Component.minute(_:), v20);
    v31(v30 + 6 * v22, enum case for Calendar.Component.second(_:), v20);
    v31(v30 + v34 - v22, enum case for Calendar.Component.timeZone(_:), v20);
  }
  sub_10013BCF4(v27);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  id v32 = v36;
  Calendar.dateComponents(_:from:)();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v32, v9);
}

uint64_t sub_100137284()
{
  uint64_t v1 = sub_100013AAC((uint64_t *)&unk_100215E40);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for RemindersInCalendarUtilities.ReminderCreationModule();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + OBJC_IVAR____TtC9MobileCal32AddReminderViewControllerManager_creationModule;
  swift_beginAccess();
  sub_10013C644(v8, (uint64_t)v3, (uint64_t *)&unk_100215E40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1000245E8((uint64_t)v3, (uint64_t *)&unk_100215E40);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    uint64_t v9 = RemindersInCalendarUtilities.ReminderCreationModule.viewController.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v9;
}

uint64_t sub_100137434(void *a1)
{
  uint64_t v29 = a1;
  uint64_t v2 = sub_100013AAC((uint64_t *)&unk_100216260);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)v28 - v6);
  uint64_t v8 = type metadata accessor for RemindersInCalendarEditingReminderProperties();
  uint64_t v30 = *(void *)(v8 - 8);
  uint64_t v31 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100013AAC((uint64_t *)&unk_100215E40);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for RemindersInCalendarUtilities.ReminderCreationModule();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v1 + OBJC_IVAR____TtC9MobileCal32AddReminderViewControllerManager_creationModule;
  swift_beginAccess();
  sub_10013C644(v18, (uint64_t)v13, (uint64_t *)&unk_100215E40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1) {
    return sub_1000245E8((uint64_t)v13, (uint64_t *)&unk_100215E40);
  }
  v28[1] = v1;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
  RemindersInCalendarUtilities.ReminderCreationModule.moduleInterface.getter();
  v28[0] = v20;
  RemindersInCalendarUtilities.ReminderCreationModule.moduleInterface.getter();
  swift_getObjectType();
  uint64_t v21 = (void *)dispatch thunk of RemindersInCalendarReminderCreationModuleInterface.reminder.getter();
  swift_unknownObjectRelease();
  if (v21)
  {
    id v22 = [v21 dueDateComponents];

    if (v22)
    {
      static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v23 = type metadata accessor for DateComponents();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v5, 0, 1, v23);
    }
    else
    {
      uint64_t v25 = type metadata accessor for DateComponents();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v5, 1, 1, v25);
    }
    sub_10013C6A8((uint64_t)v5, (uint64_t)v7);
  }
  else
  {
    uint64_t v24 = type metadata accessor for DateComponents();
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v7, 1, 1, v24);
  }
  uint64_t v26 = v29;
  swift_getObjectType();
  RemindersInCalendarUtilities.ReminderCreationModule.moduleInterface.getter();
  swift_getObjectType();
  uint64_t v27 = (void *)dispatch thunk of RemindersInCalendarReminderCreationModuleInterface.reminder.getter();
  swift_unknownObjectRelease();
  sub_100136398(v26, v7, v27);

  sub_1000245E8((uint64_t)v7, (uint64_t *)&unk_100216260);
  dispatch thunk of RemindersInCalendarReminderCreationModuleInterface.editReminder(with:)();
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v31);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

void sub_1001378F8(void *a1)
{
  uint64_t v3 = sub_100013AAC((uint64_t *)&unk_100216260);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  v183 = (void (*)(char *, char *, uint64_t))((char *)&v163 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  v186 = (char *)&v163 - v6;
  uint64_t v7 = type metadata accessor for DateComponents();
  uint64_t v187 = *(void *)(v7 - 8);
  uint64_t v188 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  v172 = (char *)&v163 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  v173 = (char *)&v163 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  v181 = (char *)&v163 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  v180 = (char *)&v163 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  v179 = (char *)&v163 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  v170 = (char *)&v163 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  v177 = (char *)&v163 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  v178 = (char *)&v163 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  v171 = (char *)&v163 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  v176 = (char *)&v163 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  v174 = (char *)&v163 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  v175 = (char *)&v163 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  v184 = (char *)&v163 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  id v36 = (char *)&v163 - v35;
  __chkstk_darwin(v34);
  v185 = (char *)&v163 - v37;
  uint64_t v38 = sub_100013AAC((uint64_t *)&unk_100215E40);
  __chkstk_darwin(v38 - 8);
  uint64_t v40 = (char *)&v163 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for RemindersInCalendarUtilities.ReminderCreationModule();
  uint64_t v42 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  long long v44 = (char *)&v163 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v45 = a1;
  id v46 = [a1 event];
  uint64_t v182 = v1;
  uint64_t v47 = v1 + OBJC_IVAR____TtC9MobileCal32AddReminderViewControllerManager_creationModule;
  swift_beginAccess();
  uint64_t v48 = v47;
  uint64_t v49 = v41;
  uint64_t v50 = v42;
  sub_10013C644(v48, (uint64_t)v40, (uint64_t *)&unk_100215E40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v49) == 1)
  {

    sub_1000245E8((uint64_t)v40, (uint64_t *)&unk_100215E40);
    return;
  }
  id v169 = v46;
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v44, v40, v49);
  RemindersInCalendarUtilities.ReminderCreationModule.moduleInterface.getter();
  swift_getObjectType();
  double v51 = (void *)dispatch thunk of RemindersInCalendarReminderCreationModuleInterface.reminder.getter();
  swift_unknownObjectRelease();
  if (!v51)
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v49);

    return;
  }
  uint64_t v167 = v49;
  v168 = v45;
  id v52 = [v51 dueDateComponents];
  if (v52)
  {
    uint64_t v53 = v52;
    static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v54 = (uint64_t)v186;
    uint64_t v55 = v187;
    uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v187 + 32);
    uint64_t v57 = v188;
    v56(v186, v36, v188);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v55 + 56))(v54, 0, 1, v57);
    uint64_t v58 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
    if (v58((char *)v54, 1, v57) != 1)
    {
      v165 = v51;
      id v59 = v185;
      v56(v185, (char *)v54, v57);
      uint64_t v60 = v182 + OBJC_IVAR____TtC9MobileCal32AddReminderViewControllerManager_initialDateComponents;
      swift_beginAccess();
      uint64_t v61 = v188;
      id v62 = (char *)v183;
      sub_10013C644(v60, (uint64_t)v183, (uint64_t *)&unk_100216260);
      int v63 = v58(v62, 1, v61);
      v166 = v44;
      if (v63 == 1)
      {
        sub_1000245E8((uint64_t)v62, (uint64_t *)&unk_100216260);
        double v64 = v168;
        uint64_t v65 = v167;
        id v66 = v169;
        (*(void (**)(char *, uint64_t))(v187 + 8))(v59, v61);
LABEL_43:
        long long v44 = v166;
        double v51 = v165;
        goto LABEL_44;
      }
      v56(v184, v62, v61);
      uint64_t v67 = DateComponents.era.getter();
      char v69 = v68;
      uint64_t v70 = DateComponents.era.getter();
      if (v69)
      {
        char v73 = v71 & 1;
      }
      else
      {
        BOOL v72 = (v71 & 1) == 0 && v67 == v70;
        char v73 = v72;
      }
      uint64_t v74 = v175;
      id v75 = v174;
      uint64_t v77 = v187;
      uint64_t v76 = v188;
      double v78 = (char *)(v187 + 16);
      double v79 = *(void (**)(char *, char *, uint64_t))(v187 + 16);
      v79(v175, v184, v188);
      double v80 = v185;
      v186 = v78;
      v79(v75, v185, v76);
      v183 = v79;
      if (v73)
      {
        double v81 = v74;
        uint64_t v82 = DateComponents.year.getter();
        LODWORD(v175) = v83;
        uint64_t v84 = DateComponents.year.getter();
        char v86 = v85;
        CGRect v87 = v75;
        double v90 = *(void (**)(char *, uint64_t))(v77 + 8);
        unint64_t v89 = v77 + 8;
        double v88 = v90;
        uint64_t v91 = v89 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        v90(v87, v76);
        v174 = (char *)v89;
        v90(v81, v76);
        if (v175)
        {
          uint64_t v164 = v50;
          LODWORD(v175) = v86 & 1;
          id v98 = v184;
          double v92 = v176;
        }
        else
        {
          double v92 = v176;
          if (v86)
          {
            uint64_t v76 = v188;
            double v80 = v185;
LABEL_24:
            double v94 = v184;
            v79(v92, v184, v76);
            double v95 = v171;
            v79(v171, v80, v76);
            CGRect v96 = v95;
            uint64_t v97 = v76;
            id v98 = v94;
            goto LABEL_32;
          }
          uint64_t v164 = v50;
          LODWORD(v175) = v82 == v84;
          id v98 = v184;
        }
        uint64_t v99 = v188;
        v79(v92, v98, v188);
        id v100 = v171;
        double v80 = v185;
        v79(v171, v185, v99);
        CGRect v96 = v100;
        if (v175)
        {
          uint64_t v101 = DateComponents.month.getter();
          char v103 = v102;
          uint64_t v104 = DateComponents.month.getter();
          char v106 = v105;
          v88(v96, v99);
          v88(v92, v99);
          uint64_t v182 = v91;
          if (v103)
          {
            char v124 = v106 & 1;
            v107 = v183;
            id v98 = v184;
          }
          else
          {
            v107 = v183;
            if (v106)
            {
              uint64_t v97 = v188;
              uint64_t v50 = v164;
              double v108 = v183;
              id v98 = v184;
              double v80 = v185;
LABEL_33:
              double v109 = v170;
              double v110 = v178;
              v108(v178, v98, v97);
              double v111 = v177;
              v108(v177, v80, v97);
              goto LABEL_34;
            }
            char v124 = v101 == v104;
            id v98 = v184;
          }
          double v110 = v178;
          uint64_t v125 = v188;
          v107(v178, v98, v188);
          double v111 = v177;
          double v80 = v185;
          v107(v177, v185, v125);
          if (v124)
          {
            CGRect v126 = v110;
            uint64_t v127 = DateComponents.day.getter();
            char v129 = v128;
            uint64_t v130 = DateComponents.day.getter();
            char v132 = v131;
            v88(v111, v125);
            v88(v126, v125);
            if (v129)
            {
              char v133 = v132 & 1;
            }
            else
            {
              if (v132)
              {
                uint64_t v97 = v188;
                uint64_t v50 = v164;
                id v98 = v184;
                double v80 = v185;
                double v109 = v170;
                goto LABEL_35;
              }
              char v133 = v127 == v130;
            }
            v134 = v183;
            id v98 = v184;
            v135 = v170;
            uint64_t v136 = v188;
            v183(v170, v184, v188);
            double v113 = v179;
            double v80 = v185;
            v134(v179, v185, v136);
            if (v133)
            {
              v137 = v135;
              uint64_t v138 = DateComponents.hour.getter();
              char v140 = v139;
              uint64_t v141 = DateComponents.hour.getter();
              char v143 = v142;
              v88(v113, v136);
              v88(v137, v136);
              if (v140)
              {
                char v144 = v143 & 1;
                id v98 = v184;
                v116 = v181;
              }
              else
              {
                v116 = v181;
                if (v143)
                {
                  uint64_t v97 = v188;
                  uint64_t v50 = v164;
                  id v98 = v184;
                  double v80 = v185;
                  goto LABEL_37;
                }
                char v144 = v138 == v141;
                id v98 = v184;
              }
              v145 = v183;
              v146 = v180;
              uint64_t v147 = v188;
              v183(v180, v98, v188);
              double v80 = v185;
              v145(v116, v185, v147);
              if (v144)
              {
                uint64_t v148 = DateComponents.minute.getter();
                char v150 = v149;
                uint64_t v151 = DateComponents.minute.getter();
                char v153 = v152;
                v88(v116, v147);
                v88(v146, v147);
                if (v150)
                {
                  char v154 = v153 & 1;
                  uint64_t v50 = v164;
                }
                else
                {
                  uint64_t v50 = v164;
                  if (v153)
                  {
                    uint64_t v97 = v188;
                    id v98 = v184;
                    double v80 = v185;
                    goto LABEL_39;
                  }
                  char v154 = v148 == v151;
                }
                v155 = v183;
                CGRect v121 = v184;
                v156 = v173;
                uint64_t v97 = v188;
                v183(v173, v184, v188);
                v119 = v172;
                v155(v172, v185, v97);
                if (v154)
                {
                  uint64_t v157 = DateComponents.second.getter();
                  char v159 = v158;
                  uint64_t v160 = DateComponents.second.getter();
                  char v162 = v161;
                  v88(v119, v97);
                  v88(v156, v97);
                  v88(v121, v97);
                  if (v159)
                  {
                    uint64_t v97 = v188;
                    uint64_t v65 = v167;
                    id v66 = v169;
                    CGRect v122 = v185;
                    double v64 = v168;
                    if (v162) {
                      goto LABEL_42;
                    }
                  }
                  else if (v162)
                  {
                    uint64_t v97 = v188;
                    uint64_t v65 = v167;
                    id v66 = v169;
                    CGRect v122 = v185;
                    double v64 = v168;
                  }
                  else
                  {
                    BOOL v72 = v157 == v160;
                    uint64_t v97 = v188;
                    uint64_t v65 = v167;
                    id v66 = v169;
                    CGRect v122 = v185;
                    double v64 = v168;
                    if (v72) {
                      goto LABEL_42;
                    }
                  }
LABEL_41:
                  [v64 setExplicitTime:1];
LABEL_42:
                  v88(v122, v97);
                  goto LABEL_43;
                }
                uint64_t v65 = v167;
                CGRect v120 = v156;
LABEL_40:
                id v66 = v169;
                double v64 = v168;
                v88(v119, v97);
                v88(v120, v97);
                v88(v121, v97);
                CGRect v122 = v185;
                goto LABEL_41;
              }
              double v114 = v146;
              uint64_t v97 = v147;
              uint64_t v50 = v164;
LABEL_38:
              v88(v116, v97);
              v88(v114, v97);
LABEL_39:
              id v117 = v173;
              id v118 = v183;
              v183(v173, v98, v97);
              v119 = v172;
              v118(v172, v80, v97);
              CGRect v120 = v117;
              CGRect v121 = v98;
              uint64_t v65 = v167;
              goto LABEL_40;
            }
            uint64_t v97 = v136;
            uint64_t v50 = v164;
            double v109 = v135;
LABEL_36:
            v88(v113, v97);
            v88(v109, v97);
LABEL_37:
            double v114 = v180;
            double v115 = v183;
            v183(v180, v98, v97);
            v116 = v181;
            v115(v181, v80, v97);
            goto LABEL_38;
          }
          uint64_t v97 = v125;
          uint64_t v50 = v164;
          double v109 = v170;
LABEL_34:
          v88(v111, v97);
          v88(v110, v97);
LABEL_35:
          double v112 = v183;
          v183(v109, v98, v97);
          double v113 = v179;
          v112(v179, v80, v97);
          goto LABEL_36;
        }
        uint64_t v97 = v99;
        uint64_t v50 = v164;
LABEL_32:
        v88(v96, v97);
        uint64_t v182 = v91;
        v88(v92, v97);
        double v108 = v183;
        goto LABEL_33;
      }
      double v93 = v75;
      double v88 = *(void (**)(char *, uint64_t))(v77 + 8);
      uint64_t v91 = (v77 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v88(v93, v76);
      v88(v74, v76);
      double v92 = v176;
      goto LABEL_24;
    }
  }
  else
  {
    uint64_t v54 = (uint64_t)v186;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v187 + 56))(v186, 1, 1, v188);
  }
  sub_1000245E8(v54, (uint64_t *)&unk_100216260);
  double v64 = v168;
  uint64_t v65 = v167;
  id v66 = v169;
LABEL_44:
  v189[3] = sub_10001382C(0, &qword_100215E60);
  v189[4] = &protocol witness table for REMReminderChangeItem;
  v189[0] = v51;
  id v123 = v51;
  [v64 explicitTime];
  EKEvent.update(from:updateDates:forSavingIntegrationEvent:)();

  (*(void (**)(char *, uint64_t))(v50 + 8))(v44, v65);
  sub_10013C5F4((uint64_t)v189);
}

uint64_t sub_1001389C0()
{
  uint64_t v1 = sub_100013AAC((uint64_t *)&unk_100215E40);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v21 - v5;
  uint64_t v7 = type metadata accessor for RemindersInCalendarUtilities.ReminderCreationModule();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v21 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v21 - v11;
  uint64_t v13 = v0 + OBJC_IVAR____TtC9MobileCal32AddReminderViewControllerManager_creationModule;
  swift_beginAccess();
  sub_10013C644(v13, (uint64_t)v6, (uint64_t *)&unk_100215E40);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v14(v6, 1, v7) == 1)
  {
    sub_1000245E8((uint64_t)v6, (uint64_t *)&unk_100215E40);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v12, v6, v7);
    uint64_t v15 = (void *)RemindersInCalendarUtilities.ReminderCreationModule.viewController.getter();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    unsigned __int8 v16 = [v15 isModalInPresentation];

    if (v16)
    {
      char v17 = 0;
      return v17 & 1;
    }
  }
  sub_10013C644(v13, (uint64_t)v4, (uint64_t *)&unk_100215E40);
  if (v14(v4, 1, v7) == 1)
  {
    sub_1000245E8((uint64_t)v4, (uint64_t *)&unk_100215E40);
    char v17 = 1;
  }
  else
  {
    uint64_t v18 = v21;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v21, v4, v7);
    RemindersInCalendarUtilities.ReminderCreationModule.moduleInterface.getter();
    swift_getObjectType();
    char v19 = dispatch thunk of RemindersInCalendarReminderCreationModuleInterface.requiresUserConfirmationForCancelingEditing.getter();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v18, v7);
    char v17 = v19 ^ 1;
  }
  return v17 & 1;
}

id sub_100138CD0()
{
  uint64_t v54 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v0 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v2 = (char *)&v43 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Locale();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for LocalizedStringResource();
  uint64_t v49 = *(void *)(v9 - 8);
  uint64_t v10 = v49;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v48 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v55 = (char *)&v43 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  char v17 = (char *)&v43 - v16;
  __chkstk_darwin(v15);
  char v19 = (char *)&v43 - v18;
  uint64_t v43 = v8;
  String.LocalizationValue.init(stringLiteral:)();
  double v51 = v5;
  static Locale.current.getter();
  unsigned int v53 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  id v52 = *(void (**)(char *))(v0 + 104);
  v52(v2);
  uint64_t v46 = v0 + 104;
  uint64_t v20 = v19;
  uint64_t v50 = v19;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  uint64_t v22 = v17;
  uint64_t v23 = v17;
  uint64_t v24 = v9;
  v21(v23, v20, v9);
  String.init(localized:)();
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v26 = [self alertControllerWithTitle:0 message:v25 preferredStyle:0];
  id v44 = v26;

  [v26 setProhibitsRotation:1];
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  ((void (*)(char *, void, uint64_t))v52)(v2, v53, v54);
  uint64_t v27 = v55;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v45 = v24;
  v21(v22, v27, v24);
  String.init(localized:)();
  uint64_t v28 = swift_allocObject();
  uint64_t v29 = v47;
  *(void *)(v28 + 16) = v47;
  id v30 = v29;
  NSString v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_10013C5D4;
  aBlock[5] = v28;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100139504;
  aBlock[3] = &unk_1001D62A0;
  uint64_t v32 = _Block_copy(aBlock);
  swift_release();
  uint64_t v33 = self;
  id v34 = [v33 actionWithTitle:v31 style:2 handler:v32];
  _Block_release(v32);

  id v35 = v44;
  [v44 addAction:v34];

  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  ((void (*)(char *, void, uint64_t))v52)(v2, v53, v54);
  id v36 = v48;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v37 = v36;
  uint64_t v38 = v45;
  v21(v22, v36, v45);
  String.init(localized:)();
  NSString v39 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v40 = [v33 actionWithTitle:v39 style:1 handler:0];

  [v35 addAction:v40];
  uint64_t v41 = *(void (**)(char *, uint64_t))(v49 + 8);
  v41(v37, v38);
  v41(v55, v38);
  v41(v50, v38);
  return v35;
}

uint64_t sub_100139338(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100013AAC((uint64_t *)&unk_100215E40);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for RemindersInCalendarUtilities.ReminderCreationModule();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a2 + OBJC_IVAR____TtC9MobileCal32AddReminderViewControllerManager_creationModule;
  swift_beginAccess();
  sub_10013C644(v10, (uint64_t)v5, (uint64_t *)&unk_100215E40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1) {
    return sub_1000245E8((uint64_t)v5, (uint64_t *)&unk_100215E40);
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  RemindersInCalendarUtilities.ReminderCreationModule.moduleInterface.getter();
  swift_getObjectType();
  dispatch thunk of RemindersInCalendarReminderCreationModuleInterface.cancelEditing(canShowUserConfirmation:)();
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_100139504(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_100139630()
{
  uint64_t v1 = sub_100013AAC((uint64_t *)&unk_100215E40);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for RemindersInCalendarUtilities.ReminderCreationModule();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + OBJC_IVAR____TtC9MobileCal32AddReminderViewControllerManager_creationModule;
  swift_beginAccess();
  sub_10013C644(v8, (uint64_t)v3, (uint64_t *)&unk_100215E40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1000245E8((uint64_t)v3, (uint64_t *)&unk_100215E40);
    char v9 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    RemindersInCalendarUtilities.ReminderCreationModule.moduleInterface.getter();
    swift_getObjectType();
    char v9 = dispatch thunk of RemindersInCalendarReminderCreationModuleInterface.hasUncommittedChanges.getter();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v9 & 1;
}

uint64_t sub_100139834()
{
  uint64_t v1 = type metadata accessor for RemindersInCalendarUtilities.ReminderCreationModule();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100013AAC((uint64_t *)&unk_100215E40);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + OBJC_IVAR____TtC9MobileCal32AddReminderViewControllerManager_creationModule;
  swift_beginAccess();
  sub_10013C644(v8, (uint64_t)v7, (uint64_t *)&unk_100215E40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
  {
    sub_1000245E8((uint64_t)v7, (uint64_t *)&unk_100215E40);
    char v9 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
    sub_1000245E8((uint64_t)v7, (uint64_t *)&unk_100215E40);
    RemindersInCalendarUtilities.ReminderCreationModule.moduleInterface.getter();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    swift_getObjectType();
    char v9 = dispatch thunk of RemindersInCalendarReminderCreationModuleInterface.requiresUserConfirmationForCommittingEditing.getter();
    swift_unknownObjectRelease();
  }
  return v9 & 1;
}

uint64_t sub_100139A44(void (*a1)(uint64_t), void (*a2)(uint64_t))
{
  uint64_t v5 = sub_100013AAC(&qword_100216230);
  __chkstk_darwin(v5 - 8);
  uint64_t v29 = (uint64_t)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100013AAC((uint64_t *)&unk_100215E40);
  __chkstk_darwin(v7 - 8);
  char v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for RemindersInCalendarUtilities.ReminderCreationModule();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v27 - v15;
  uint64_t v17 = v2 + OBJC_IVAR____TtC9MobileCal32AddReminderViewControllerManager_creationModule;
  swift_beginAccess();
  sub_10013C644(v17, (uint64_t)v9, (uint64_t *)&unk_100215E40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    uint64_t result = sub_1000245E8((uint64_t)v9, (uint64_t *)&unk_100215E40);
    if (a1)
    {
      uint64_t v19 = swift_retain();
      a1(v19);
      return sub_10013C36C((uint64_t)a1);
    }
  }
  else
  {
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v28(v16, v9, v10);
    uint64_t v20 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
    type metadata accessor for MainActor();
    sub_10013C37C((uint64_t)a1);
    uint64_t v21 = static MainActor.shared.getter();
    unint64_t v22 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v27 = a2;
    unint64_t v23 = (v12 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v21;
    *(void *)(v24 + 24) = &protocol witness table for MainActor;
    v28((char *)(v24 + v22), v14, v10);
    NSString v25 = (void (**)(uint64_t))(v24 + v23);
    id v26 = v27;
    *NSString v25 = a1;
    v25[1] = v26;
    sub_10000B0D8(v29, (uint64_t)&unk_100215E58, v24);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
  return result;
}

uint64_t sub_100139D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  void v6[4] = a6;
  v6[2] = a4;
  uint64_t v7 = type metadata accessor for RemindersInCalendarEditingResult();
  void v6[5] = v7;
  v6[6] = *(void *)(v7 - 8);
  v6[7] = swift_task_alloc();
  v6[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v6[9] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[10] = v8;
  v6[11] = v9;
  return _swift_task_switch(sub_100139EA0, v8);
}

uint64_t sub_100139EA0()
{
  uint64_t v1 = (void *)RemindersInCalendarUtilities.ReminderCreationModule.viewController.getter();
  id v2 = [v1 view];

  if (v2)
  {
    [v2 endEditing:1];

    uint64_t v7 = RemindersInCalendarUtilities.ReminderCreationModule.moduleInterface.getter();
    uint64_t v9 = v8;
    v0[12] = v7;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v11 = (void *)swift_task_alloc();
    v0[13] = v11;
    void *v11 = v0;
    v11[1] = sub_100139FB0;
    uint64_t v3 = v0[8];
    uint64_t v4 = 1;
    uint64_t v5 = ObjectType;
    uint64_t v6 = v9;
  }
  else
  {
    __break(1u);
  }
  return dispatch thunk of RemindersInCalendarReminderCreationModuleInterface.commitEditing(allowingUserConfirmation:)(v3, v4, v5, v6);
}

uint64_t sub_100139FB0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  uint64_t v2 = *(void *)(v1 + 80);
  return _swift_task_switch(sub_10013A0F4, v2);
}

uint64_t sub_10013A0F4()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[3];
  swift_release();
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for RemindersInCalendarEditingResult.performed(_:), v3);
  char v5 = static RemindersInCalendarEditingResult.== infix(_:_:)();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v6(v1, v3);
  if ((v5 & 1) != 0 && v4)
  {
    uint64_t v7 = (void (*)(uint64_t))v0[3];
    uint64_t v8 = swift_retain();
    v7(v8);
    sub_10013C36C((uint64_t)v7);
  }
  v6(v0[8], v0[5]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_10013A2E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100013AAC((uint64_t *)&unk_100215E40);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for RemindersInCalendarUtilities.ReminderCreationModule();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v1 + OBJC_IVAR____TtC9MobileCal32AddReminderViewControllerManager_creationModule;
  swift_beginAccess();
  sub_10013C644(v9, (uint64_t)v4, (uint64_t *)&unk_100215E40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_1000245E8((uint64_t)v4, (uint64_t *)&unk_100215E40);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  RemindersInCalendarUtilities.ReminderCreationModule.moduleInterface.getter();
  swift_getObjectType();
  dispatch thunk of RemindersInCalendarReminderCreationModuleInterface.cancelEditing(canShowUserConfirmation:)();
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10013A518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_10013CA6C;
  return static RemindersInCalendarUtilities.checkAndRequestAuthorizationIfNeeded(presentingWith:)(a4);
}

void sub_10013A608(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v69 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v68 = (char *)v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DateComponents();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100013AAC((uint64_t *)&unk_100216260);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v70 = a1;
  id v17 = [a1 dueDateComponents];
  if (!v17)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v16, 1, 1, v10);
    goto LABEL_11;
  }
  uint64_t v18 = v17;
  static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v13, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v16, 1, v10) == 1)
  {
LABEL_11:
    sub_1000245E8((uint64_t)v16, (uint64_t *)&unk_100216260);
    if (qword_100215D40 != -1) {
      swift_once();
    }
    sub_100010FD0(v4, (uint64_t)qword_1002171B0);
    uint64_t v42 = Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v42, v43)) {
      goto LABEL_16;
    }
    id v44 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v44 = 0;
    uint64_t v45 = "Created reminder has no due date and won't be visible in Calendar";
    goto LABEL_15;
  }
  sub_1000245E8((uint64_t)v16, (uint64_t *)&unk_100216260);
  uint64_t v19 = *(void **)(v2 + OBJC_IVAR____TtC9MobileCal32AddReminderViewControllerManager_model);
  id v20 = [v19 eventStore];
  if (!v20)
  {
    if (qword_100215D40 != -1) {
      swift_once();
    }
    sub_100010FD0(v4, (uint64_t)qword_1002171B0);
    uint64_t v42 = Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v42, v43)) {
      goto LABEL_16;
    }
    id v44 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v44 = 0;
    uint64_t v45 = "No event store";
LABEL_15:
    _os_log_impl((void *)&_mh_execute_header, v42, v43, v45, v44, 2u);
    swift_slowDealloc();
LABEL_16:

    return;
  }
  id v21 = v20;
  id v22 = [self eventWithEventStore:v20];
  id v23 = [v19 reminderCalendar];
  if (!v23)
  {
    if (qword_100215D40 != -1) {
      swift_once();
    }
    sub_100010FD0(v4, (uint64_t)qword_1002171B0);
    uint64_t v46 = Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v46, v47))
    {

      return;
    }
    uint64_t v48 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v48 = 0;
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "No calendar", v48, 2u);
    swift_slowDealloc();

    goto LABEL_34;
  }
  id v66 = v19;
  id v67 = v23;
  [v22 setCalendar:v23];
  id v24 = v22;
  id v25 = [v70 objectID];
  id v26 = [v25 urlRepresentation];

  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  URL.absoluteString.getter();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  NSString v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v24 setUniqueID:v27];

  id v28 = [objc_allocWithZone((Class)AddItemState) initWithEvent:v24];
  [v28 setExplicitTime:1];
  sub_1001378F8(v28);
  if (qword_100215D40 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_100010FD0(v4, (uint64_t)qword_1002171B0);
  NSString v31 = v68;
  uint64_t v30 = v69;
  uint64_t v32 = *(void (**)(char *))(v69 + 16);
  uint64_t v65 = v29;
  v32(v68);
  id v33 = v24;
  id v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v34, v35))
  {
    id v63 = v28;
    id v64 = v21;
    id v36 = (uint8_t *)swift_slowAlloc();
    id v72 = (id)swift_slowAlloc();
    *(_DWORD *)id v36 = 136315138;
    id v37 = [v33 uniqueID];
    if (!v37)
    {

      __break(1u);
      goto LABEL_36;
    }
    uint64_t v38 = v37;
    v62[1] = v36 + 4;
    uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v41 = v40;

    uint64_t v71 = sub_10013B528(v39, v41, (uint64_t *)&v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "Saving temporary event for reminder %s", v36, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v69 + 8))(v31, v4);
    id v28 = v63;
    id v21 = v64;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v4);
  }
  id v72 = 0;
  if (![v21 saveEvent:v33 span:0 commit:0 error:&v72])
  {
    id v56 = v72;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v46 = Logger.logObject.getter();
    os_log_type_t v57 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v46, v57))
    {
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      id v59 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v58 = 138412290;
      swift_errorRetain();
      uint64_t v60 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v64 = v21;
      uint64_t v61 = v60;
      id v72 = v60;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v59 = v61;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v46, v57, "Error saving event for new reminder %@", v58, 0xCu);
      sub_100013AAC(&qword_100215E30);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      return;
    }

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
LABEL_34:

    return;
  }
  id v49 = v72;
  id v50 = v66;
  id v51 = [v66 pendingReminderTracker];
  if (v51)
  {
    id v52 = v51;
    id v53 = [v33 sequenceNumber];
    [v52 setOptimisticReminder:v70 forEvent:v33 sequenceNumber:v53];

    id v54 = [v50 pendingReminderTracker];
    if (v54)
    {
      uint64_t v55 = v54;
      [v54 addPendingEvent:v33 sequenceNumber:[v33 sequenceNumber]];

      return;
    }
    goto LABEL_37;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

id sub_10013B11C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AddReminderViewControllerManager();
  return [super dealloc];
}

void *sub_10013B1E4()
{
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    [result addItemViewControllerManager:v0 didCompleteWithAction:0];
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10013B24C(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_10013C24C(a3);
}

uint64_t variable initialization expression of TipsManager.tipPopoverController()
{
  return 0;
}

uint64_t variable initialization expression of TipsManager.$__lazy_storage_$_jumpToTodayTip()
{
  return 1;
}

uint64_t sub_10013B264()
{
  return type metadata accessor for AddReminderViewControllerManager();
}

uint64_t type metadata accessor for AddReminderViewControllerManager()
{
  uint64_t result = qword_100215E08;
  if (!qword_100215E08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10013B2B8()
{
  sub_10013B3DC(319, &qword_100215E18, (void (*)(uint64_t))&type metadata accessor for RemindersInCalendarUtilities.ReminderCreationModule);
  if (v0 <= 0x3F)
  {
    sub_10013B3DC(319, (unint64_t *)&unk_100215E20, (void (*)(uint64_t))&type metadata accessor for DateComponents);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_10013B3DC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10013B430()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10013B528(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_10013B5FC(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_10013C30C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_10013C30C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_10013C5F4((uint64_t)v12);
  return v7;
}

uint64_t sub_10013B5FC(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_10013B7B8(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = _StringObject.sharedUTF8.getter();
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
LABEL_17:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_10013B7B8(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_10013B850(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_10013BA30(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_10013BA30(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_10013B850(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_10013B9C8(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = _StringGuts.copyUTF8(into:)();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
LABEL_10:
      uint64_t v2 = String.UTF8View._foreignCount()();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_10013B9C8(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_100013AAC(&qword_100215E38);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  _DWORD v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_10013BA30(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100013AAC(&qword_100215E38);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_10013BB80(void *a1)
{
  unint64_t v3 = &v1[OBJC_IVAR____TtC9MobileCal32AddReminderViewControllerManager_creationModule];
  uint64_t v4 = type metadata accessor for RemindersInCalendarUtilities.ReminderCreationModule();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  size_t v5 = &v1[OBJC_IVAR____TtC9MobileCal32AddReminderViewControllerManager_initialDateComponents];
  uint64_t v6 = type metadata accessor for DateComponents();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  swift_unknownObjectWeakInit();
  v1[OBJC_IVAR____TtC9MobileCal32AddReminderViewControllerManager_ignoreUnsavedChanges] = 0;
  int64_t v7 = v1;
  id v8 = [a1 undoManager];
  if (v8)
  {
    int64_t v9 = v8;
    id v10 = [v8 systemUndoManager];

    if (v10)
    {
      *(void *)&v7[OBJC_IVAR____TtC9MobileCal32AddReminderViewControllerManager_undoManager] = v10;
      *(void *)&v7[OBJC_IVAR____TtC9MobileCal32AddReminderViewControllerManager_model] = a1;
      id v11 = a1;

      v12.receiver = v7;
      v12.super_class = (Class)type metadata accessor for AddReminderViewControllerManager();
      [super init];
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void *sub_10013BCF4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Calendar.Component();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_100013AAC(&qword_100215E78);
    uint64_t v9 = static _SetStorage.allocate(capacity:)();
    uint64_t v10 = 0;
    objc_super v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    os_log_type_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    NSString v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_10013C710(&qword_100215E80, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
      uint64_t v16 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_10013C710(&qword_100215E88, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
          char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
          id v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        id v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_10013C00C(void *a1)
{
  uint64_t v2 = sub_100013AAC(&qword_100216230);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TaskPriority();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  void v7[4] = a1;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  id v9 = a1;
  if (v8 == 1)
  {
    sub_1000245E8((uint64_t)v4, &qword_100216230);
    uint64_t v10 = 0;
    uint64_t v11 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v11 = v12;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v10 = 0;
      uint64_t v11 = 0;
    }
  }
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = &unk_100215EC0;
  *(void *)(v13 + 24) = v7;
  if (v11 | v10)
  {
    v15[0] = 0;
    v15[1] = 0;
    v15[2] = v10;
    v15[3] = v11;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_10013C24C(void *a1)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v4 = (void *)result;
    sub_10013A608(a1);
    if (v5)
    {
      uint64_t v6 = v5;
      [v4 replaceSavedEvent:v5];
      [v4 addItemViewControllerManager:v1 didCompleteWithAction:1];
    }
    else
    {
      [v4 addItemViewControllerManager:v1 didCompleteWithAction:0];
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10013C30C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_10013C36C(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_10013C37C(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_10013C38C()
{
  uint64_t v1 = type metadata accessor for RemindersInCalendarUtilities.ReminderCreationModule();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  if (*(void *)(v0 + v5)) {
    swift_release();
  }

  return _swift_deallocObject(v0, v5 + 16, v3 | 7);
}

uint64_t sub_10013C470(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for RemindersInCalendarUtilities.ReminderCreationModule() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  id v9 = (uint64_t *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_10013CA6C;
  return sub_100139D98(a1, v6, v7, v8, v10, v11);
}

uint64_t sub_10013C59C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10013C5D4(uint64_t a1)
{
  return sub_100139338(a1, *(void *)(v1 + 16));
}

uint64_t sub_10013C5DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10013C5EC()
{
  return swift_release();
}

uint64_t sub_10013C5F4(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_10013C644(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100013AAC(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10013C6A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100013AAC((uint64_t *)&unk_100216260);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10013C710(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10013C758(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100013AAC(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_10013C7BC()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10013C7FC()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_10013C8D8;
  uint64_t v4 = (void *)swift_task_alloc();
  void v3[2] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_10013CA6C;
  return static RemindersInCalendarUtilities.checkAndRequestAuthorizationIfNeeded(presentingWith:)(v2);
}

uint64_t sub_10013C8D8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10013C9CC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10013CA04()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10013CA3C()
{
  return sub_1001433EC(*(void *)(v0 + 16));
}

uint64_t sub_10013CA44(uint64_t a1)
{
  return a1;
}

BOOL sub_10013CA70(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int sub_10013CA88()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10013CAD0()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_10013CAFC()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t Application.open(view:)(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for CalendarAppView();
  void v2[4] = v3;
  void v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[7] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10013CC44, v4);
}

uint64_t sub_10013CC44()
{
  uint64_t v1 = (void *)v0[3];
  swift_release();
  id v2 = [v1 allSceneManagers];
  sub_10001382C(0, (unint64_t *)&qword_100215FF0);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v3 >> 62))
  {
    if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_29:
    swift_bridgeObjectRelease();
    sub_10013CFA8();
    swift_allocError();
    unsigned char *v17 = 0;
    swift_willThrow();
    swift_task_dealloc();
    uint64_t v15 = (uint64_t (*)(void))v0[1];
    goto LABEL_30;
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v4 = swift_bridgeObjectRelease();
  if (!v16) {
    goto LABEL_29;
  }
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return _diagnoseUnexpectedEnumCase<A>(type:)(v4, v5);
    }
    id v6 = *(id *)(v3 + 32);
  }
  uint64_t v7 = v6;
  uint64_t v9 = v0[5];
  uint64_t v8 = v0[6];
  uint64_t v10 = v0[4];
  uint64_t v11 = v0[2];
  swift_bridgeObjectRelease();
  id v12 = [v7 rootViewController];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v11, v10);
  int v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 88))(v8, v10);
  if (v13 != enum case for CalendarAppView.day(_:))
  {
    if (v13 == enum case for CalendarAppView.week(_:))
    {
      uint64_t v14 = &selRef_showWeekView;
      goto LABEL_24;
    }
    if (v13 == enum case for CalendarAppView.month(_:))
    {
      uint64_t v14 = &selRef_showMonthView;
      goto LABEL_24;
    }
    if (v13 == enum case for CalendarAppView.splitMonth(_:))
    {
      uint64_t v14 = &selRef_showSplitMonthView;
      goto LABEL_24;
    }
    if (v13 == enum case for CalendarAppView.year(_:))
    {
      uint64_t v14 = &selRef_showYearView;
      goto LABEL_24;
    }
    if (v13 == enum case for CalendarAppView.list(_:))
    {
      uint64_t v14 = &selRef_showListView;
      goto LABEL_24;
    }
    if (v13 == enum case for CalendarAppView.search(_:))
    {
      uint64_t v14 = &selRef_showSearchView;
      goto LABEL_24;
    }
    if (v13 == enum case for CalendarAppView.calendars(_:))
    {
      uint64_t v14 = &selRef_showCalendarsView;
      goto LABEL_24;
    }
    if (v13 == enum case for CalendarAppView.inbox(_:))
    {
      uint64_t v14 = &selRef_showInboxView;
      goto LABEL_24;
    }
    uint64_t v4 = v0[4];
    uint64_t v5 = v4;
    return _diagnoseUnexpectedEnumCase<A>(type:)(v4, v5);
  }
  uint64_t v14 = &selRef_showDayView;
LABEL_24:
  [v12 *v14];

  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
LABEL_30:
  return v15();
}

unint64_t sub_10013CFA8()
{
  unint64_t result = qword_100215F48;
  if (!qword_100215F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100215F48);
  }
  return result;
}

uint64_t Application.open(date:)(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_100013AAC(&qword_100215E68);
  void v2[4] = swift_task_alloc();
  void v2[5] = swift_task_alloc();
  sub_100013AAC(&qword_100215F58);
  v2[6] = swift_task_alloc();
  sub_100013AAC(&qword_100215E90);
  v2[7] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[8] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10013D134, v3);
}

void sub_10013D134()
{
  uint64_t v1 = (void *)v0[3];
  swift_release();
  id v2 = [v1 allSceneManagers];
  sub_10001382C(0, (unint64_t *)&qword_100215FF0);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v3 >> 62))
  {
    if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    sub_10013CFA8();
    swift_allocError();
    *id v26 = 0;
    swift_willThrow();
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v25) {
    goto LABEL_14;
  }
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_21:
      __break(1u);
      return;
    }
    id v4 = *(id *)(v3 + 32);
  }
  uint64_t v5 = v4;
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[2];
  swift_bridgeObjectRelease();
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v6, v7, v8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  id v10 = [v5 model];
  id v11 = [v10 calendar];

  uint64_t v12 = v0[4];
  if (v11)
  {
    static Calendar._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v13 = type metadata accessor for Calendar();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 0, 1, v13);
  }
  else
  {
    uint64_t v13 = type metadata accessor for Calendar();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  }
  uint64_t v14 = v0[5];
  sub_10013D5C4(v0[4], v14);
  type metadata accessor for Calendar();
  uint64_t v15 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v14, 1, v13) == 1) {
    goto LABEL_21;
  }
  uint64_t v17 = v0[6];
  uint64_t v16 = v0[7];
  uint64_t v18 = v0[5];
  sub_10001382C(0, &qword_100215F60);
  Calendar.timeZone.getter();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v18, v13);
  uint64_t v19 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 0, 1, v19);
  id v20 = sub_10013D62C(v16, v17);
  if (!v20)
  {
    sub_10013CFA8();
    swift_allocError();
    unsigned char *v24 = 1;
    swift_willThrow();

LABEL_15:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v23 = (void (*)(void))v0[1];
    goto LABEL_16;
  }
  uint64_t v21 = v20;
  id v22 = [v5 rootNavigationController];
  [v22 showDate:v21 animated:1];

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v23 = (void (*)(void))v0[1];
LABEL_16:
  v23();
}

uint64_t sub_10013D5C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100013AAC(&qword_100215E68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_10013D62C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  isCATransform3D a = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4) != 1)
  {
    isCATransform3D a = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v7 = type metadata accessor for TimeZone();
  uint64_t v8 = *(void *)(v7 - 8);
  Class v9 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7) != 1)
  {
    Class v9 = TimeZone._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a2, v7);
  }
  id v10 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithDate:isa timeZone:v9];

  return v10;
}

uint64_t Application.open(event:withIdiom:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  void v3[4] = v2;
  void v3[2] = a1;
  uint64_t v4 = type metadata accessor for OpenIdiom();
  void v3[5] = v4;
  void v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  type metadata accessor for MainActor();
  v3[8] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10013D8C0, v5);
}

uint64_t sub_10013D8C0()
{
  uint64_t v1 = *(void **)(v0 + 32);
  swift_release();
  id v2 = [v1 eventStore];
  if (!v2)
  {
    uint64_t v18 = type metadata accessor for CalendarLinkError();
    sub_10013DCA0();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v18 - 8) + 104))(v19, enum case for CalendarLinkError.failedToCreateEventStore(_:), v18);
    swift_willThrow();
LABEL_21:
    swift_task_dealloc();
    char v23 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_22;
  }
  unint64_t v3 = v2;
  EventEntity.id.getter();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = [v3 eventWithIdentifier:v4];

  if (!v5)
  {
    uint64_t v20 = type metadata accessor for CalendarLinkError();
    sub_10013DCA0();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, enum case for CalendarLinkError.eventNotFound(_:), v20);
    swift_willThrow();
LABEL_20:

    goto LABEL_21;
  }
  id v6 = [*(id *)(v0 + 32) allSceneManagers];
  sub_10001382C(0, (unint64_t *)&qword_100215FF0);
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v7 >> 62))
  {
    if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v8 = swift_bridgeObjectRelease();
  if (!v24)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    sub_10013CFA8();
    swift_allocError();
    *uint64_t v25 = 0;
    swift_willThrow();

    goto LABEL_20;
  }
LABEL_5:
  if ((v7 & 0xC000000000000001) != 0)
  {
    id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return _diagnoseUnexpectedEnumCase<A>(type:)(v8, v9);
    }
    id v10 = *(id *)(v7 + 32);
  }
  id v11 = v10;
  uint64_t v13 = *(void *)(v0 + 48);
  uint64_t v12 = *(void *)(v0 + 56);
  uint64_t v14 = *(void *)(v0 + 40);
  uint64_t v15 = *(void *)(v0 + 24);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v12, v15, v14);
  int v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 88))(v12, v14);
  if (v16 != enum case for OpenIdiom.viewer(_:))
  {
    if (v16 == enum case for OpenIdiom.editor(_:))
    {
      uint64_t v17 = 3;
      goto LABEL_14;
    }
    uint64_t v8 = *(void *)(v0 + 40);
    uint64_t v9 = v8;
    return _diagnoseUnexpectedEnumCase<A>(type:)(v8, v9);
  }
  uint64_t v17 = 1;
LABEL_14:
  id v22 = [v11 rootNavigationController];
  [v22 showEvent:v5 animated:1 showMode:v17 context:0];

  swift_task_dealloc();
  char v23 = *(uint64_t (**)(void))(v0 + 8);
LABEL_22:
  return v23();
}

unint64_t sub_10013DCA0()
{
  unint64_t result = qword_100215F70;
  if (!qword_100215F70)
  {
    type metadata accessor for CalendarLinkError();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100215F70);
  }
  return result;
}

uint64_t Application.open(calendar:enableDoneInitially:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 40) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  type metadata accessor for MainActor();
  *(void *)(v3 + 32) = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10013DD94, v4);
}

void sub_10013DD94()
{
  uint64_t v1 = *(void **)(v0 + 24);
  swift_release();
  id v2 = [v1 allSceneManagers];
  sub_10001382C(0, (unint64_t *)&qword_100215FF0);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    sub_10013CFA8();
    swift_allocError();
    unsigned char *v11 = 0;
    swift_willThrow();
    uint64_t v9 = *(void (**)(void))(v0 + 8);
    goto LABEL_9;
  }
  if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v4 = *(id *)(v3 + 32);
  }
  id v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 16);
  swift_bridgeObjectRelease();
  id v8 = [v5 rootViewController];
  [v8 showInspectorForCalendar:v7 enableDoneInitially:v6];

  uint64_t v9 = *(void (**)(void))(v0 + 8);
LABEL_9:
  v9();
}

uint64_t Application.highlight(event:)(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for MainActor();
  void v2[4] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10013DFE4, v3);
}

void sub_10013DFE4()
{
  uint64_t v1 = (void *)v0[3];
  swift_release();
  id v2 = [v1 allSceneManagers];
  sub_10001382C(0, (unint64_t *)&qword_100215FF0);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    sub_10013CFA8();
    swift_allocError();
    *uint64_t v10 = 0;
    swift_willThrow();
    id v8 = (void (*)(void))v0[1];
    goto LABEL_9;
  }
  if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v4 = *(id *)(v3 + 32);
  }
  uint64_t v5 = v4;
  uint64_t v6 = v0[2];
  swift_bridgeObjectRelease();
  id v7 = [v5 rootViewController];
  [v7 showEventAndCloseSidebarIfNeeded:v6 animated:1 showMode:0];

  id v8 = (void (*)(void))v0[1];
LABEL_9:
  v8();
}

void sub_10013E194()
{
  qword_100217188 = (uint64_t)&_swiftEmptySetSingleton;
}

uint64_t Application.composeEmail(event:recipients:)(uint64_t a1, uint64_t a2)
{
  v3[25] = a2;
  v3[26] = v2;
  v3[24] = a1;
  v3[27] = swift_getObjectType();
  type metadata accessor for MainActor();
  v3[28] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[29] = v4;
  v3[30] = v5;
  return _swift_task_switch(sub_10013E250, v4);
}

uint64_t sub_10013E250()
{
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = self;
  sub_10001382C(0, qword_100215F90);
  isCATransform3D a = Array._bridgeToObjectiveC()().super.isa;
  LODWORD(v1) = [v2 canShowViewControllerForEvent:v1 withParticipantRecipients:isa];

  if (!v1)
  {
    swift_release();
    uint64_t v17 = type metadata accessor for CalendarLinkError();
    sub_10013DCA0();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v17 - 8) + 104))(v18, enum case for CalendarLinkError.cannotSendMailDueToAccountManagement(_:), v17);
    swift_willThrow();
    goto LABEL_15;
  }
  id v4 = [*(id *)(v0 + 208) allSceneManagers];
  sub_10001382C(0, (unint64_t *)&qword_100215FF0);
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v6 = swift_bridgeObjectRelease();
    if (v21) {
      goto LABEL_4;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    sub_10013CFA8();
    swift_allocError();
    unsigned char *v22 = 0;
    swift_willThrow();
    swift_release();
    goto LABEL_15;
  }
  if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_14;
  }
LABEL_4:
  if ((v5 & 0xC000000000000001) != 0)
  {
    id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return _swift_continuation_await(v6);
    }
    id v7 = *(id *)(v5 + 32);
  }
  id v8 = v7;
  *(void *)(v0 + 248) = v7;
  uint64_t v9 = *(void **)(v0 + 192);
  swift_bridgeObjectRelease();
  id v10 = objc_allocWithZone((Class)EKUIEmailCompositionManager);
  id v11 = v9;
  swift_bridgeObjectRetain();
  Class v12 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v13 = [v10 initWithEvent:v11 participantRecipients:v12 subjectPrefix:0 bodyPrefix:0];
  *(void *)(v0 + 256) = v13;

  id v14 = [v13 viewController];
  *(void *)(v0 + 264) = v14;
  if (v14)
  {
    id v15 = [v8 rootViewController];
    *(void *)(v0 + 272) = v15;
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 56) = v0 + 288;
    *(void *)(v0 + 24) = sub_10013E6A0;
    uint64_t v16 = swift_continuation_init();
    *(void *)(v0 + 144) = _NSConcreteStackBlock;
    *(void *)(v0 + 152) = 0x40000000;
    *(void *)(v0 + 160) = sub_10013EB9C;
    *(void *)(v0 + 168) = &unk_1001D6340;
    *(void *)(v0 + 176) = v16;
    [v15 dismissPresentedViewControllerAnimated:0 completion:v0 + 144];
    uint64_t v6 = v0 + 16;
    return _swift_continuation_await(v6);
  }
  swift_release();
  uint64_t v19 = type metadata accessor for CalendarLinkError();
  sub_10013DCA0();
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v19 - 8) + 104))(v20, enum case for CalendarLinkError.cannotSendMailForUnknownReason(_:), v19);
  swift_willThrow();

LABEL_15:
  char v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23();
}

uint64_t sub_10013E6A0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 232);
  return _swift_task_switch(sub_10013E7A8, v1);
}

uint64_t sub_10013E7A8()
{
  id v13 = v0;

  if (qword_100215D30 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)v0[32];
  uint64_t v1 = v0[33];
  uint64_t v3 = (void *)v0[31];
  uint64_t v4 = v0[27];
  swift_beginAccess();
  id v5 = v2;
  sub_10013F1B8(&v12, v5);
  swift_endAccess();

  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v4;
  v0[22] = sub_10013F4C8;
  v0[23] = v7;
  v0[18] = _NSConcreteStackBlock;
  v0[19] = 1107296256;
  v0[20] = sub_10013ECD4;
  v0[21] = &unk_1001D63A8;
  id v8 = _Block_copy(v0 + 18);
  swift_release();
  [v5 setMessageSendingComplete:v8];
  _Block_release(v8);
  id v9 = [v3 rootViewController];
  v0[35] = v9;
  v0[10] = v0;
  v0[11] = sub_10013EA08;
  uint64_t v10 = swift_continuation_init();
  v0[18] = _NSConcreteStackBlock;
  v0[19] = 0x40000000;
  v0[20] = sub_10013ED28;
  v0[21] = &unk_1001D63D0;
  v0[22] = v10;
  [v9 presentViewController:v1 animated:1 completion:v0 + 18];
  return _swift_continuation_await(v0 + 10);
}

uint64_t sub_10013EA08()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 232);
  return _swift_task_switch(sub_10013EB10, v1);
}

uint64_t sub_10013EB10()
{
  uint64_t v1 = *(void **)(v0 + 280);
  uint64_t v2 = *(void **)(v0 + 264);
  uint64_t v3 = *(void **)(v0 + 248);

  swift_release();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10013EB9C(uint64_t a1, char a2)
{
  **(unsigned char **)(*(void *)(*(void *)(a1 + 32) + 64) + 40) = a2;
  return _swift_continuation_resume();
}

void sub_10013EBC0()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    id v2 = [Strong viewController];
    if (v2)
    {
      uint64_t v3 = v2;
      id v4 = [v2 presentingViewController];

      if (v4)
      {
        [v4 dismissViewControllerAnimated:1 completion:0];
      }
    }
    if (qword_100215D30 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v5 = (void *)sub_1001401C4(v1);
    swift_endAccess();
  }
}

uint64_t sub_10013ECD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_10013ED28(uint64_t a1)
{
  return _swift_continuation_resume(*(void *)(a1 + 32));
}

uint64_t sub_10013ED30(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_10013CA6C;
  return Application.open(view:)(a1);
}

uint64_t sub_10013EDC8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_10013CA6C;
  return Application.open(date:)(a1);
}

uint64_t sub_10013EE60(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10013CA6C;
  return Application.open(event:withIdiom:)(a1, a2);
}

uint64_t sub_10013EF08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_10013CA6C;
  return CalendarViewOpener.list(description:events:)(a1, a2, a3, a4, a5);
}

uint64_t sub_10013EFD0(uint64_t a1, char a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10013CA6C;
  return Application.open(calendar:enableDoneInitially:)(a1, a2);
}

uint64_t sub_10013F078(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_10013CA6C;
  return Application.highlight(event:)(a1);
}

uint64_t sub_10013F110(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10013C8D8;
  return Application.composeEmail(event:recipients:)(a1, a2);
}

uint64_t sub_10013F1B8(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = __CocoaSet.member(for:)();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_10001382C(0, &qword_100215FD8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v27;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = __CocoaSet.count.getter();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v22 = sub_10013F6F8(v7, result + 1);
    BOOL v28 = (void *)v22;
    if (*(void *)(v22 + 24) <= *(void *)(v22 + 16))
    {
      id v26 = v8;
      sub_10013F8F0();
      char v23 = v28;
    }
    else
    {
      char v23 = (void *)v22;
      id v24 = v8;
    }
    sub_10013FB90((uint64_t)v8, v23);
    uint64_t *v3 = (uint64_t)v23;
  }
  else
  {
    Swift::Int v11 = *(void *)(v6 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v12 = NSObject._rawHashValue(seed:)(v11);
    uint64_t v13 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v14 = v12 & ~v13;
    if ((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      sub_10001382C(0, &qword_100215FD8);
      id v15 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
      char v16 = static NSObject.== infix(_:_:)();

      if (v16)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v20 = *(void **)(*(void *)(*v3 + 48) + 8 * v14);
        *a1 = v20;
        id v21 = v20;
        return 0;
      }
      uint64_t v17 = ~v13;
      while (1)
      {
        unint64_t v14 = (v14 + 1) & v17;
        if (((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
        char v19 = static NSObject.== infix(_:_:)();

        if (v19) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    id v8 = a2;
    sub_10013FC14((uint64_t)v8, v14, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v29;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_10013F458()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10013F490()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_10013F4C8()
{
}

uint64_t sub_10013F4D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10013F4E0()
{
  return swift_release();
}

unsigned char *initializeBufferWithCopyOfBuffer for OpenViewError(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for OpenViewError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for OpenViewError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10013F654);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_10013F67C(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_10013F684(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for OpenViewError()
{
  return &type metadata for OpenViewError;
}

unint64_t sub_10013F6A4()
{
  unint64_t result = qword_100215FD0;
  if (!qword_100215FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100215FD0);
  }
  return result;
}

Swift::Int sub_10013F6F8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_100013AAC((uint64_t *)&unk_100215FE0);
    uint64_t v2 = static _SetStorage.convert(_:capacity:)();
    uint64_t v14 = v2;
    __CocoaSet.makeIterator()();
    if (__CocoaSet.Iterator.next()())
    {
      sub_10001382C(0, &qword_100215FD8);
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_10013F8F0();
          uint64_t v2 = v14;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (__CocoaSet.Iterator.next()());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v2;
}

uint64_t sub_10013F8F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100013AAC((uint64_t *)&unk_100215FE0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    BOOL v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v28;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v4 + 40));
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

unint64_t sub_10013FB90(uint64_t a1, void *a2)
{
  NSObject._rawHashValue(seed:)(a2[5]);
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) |= 1 << result;
  *(void *)(a2[6] + 8 * result) = a1;
  ++a2[2];
  return result;
}

void sub_10013FC14(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_10013F8F0();
  }
  else
  {
    if (v7 > v6)
    {
      sub_10013FD9C();
      goto LABEL_14;
    }
    sub_10013FF48();
  }
  uint64_t v8 = *v3;
  Swift::Int v9 = NSObject._rawHashValue(seed:)(*(void *)(*v3 + 40));
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_10001382C(0, &qword_100215FD8);
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = static NSObject.== infix(_:_:)();

    if (v12)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = static NSObject.== infix(_:_:)();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

id sub_10013FD9C()
{
  uint64_t v1 = v0;
  sub_100013AAC((uint64_t *)&unk_100215FE0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_10013FF48()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100013AAC((uint64_t *)&unk_100215FE0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  BOOL v28 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    Swift::Int v19 = *(void *)(v4 + 40);
    id v20 = *(id *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = NSObject._rawHashValue(seed:)(v19);
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v28;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1001401C4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v5 = a1;
    char v6 = __CocoaSet.contains(_:)();

    if (v6)
    {
      uint64_t v7 = sub_10014039C();
      swift_bridgeObjectRelease();
      return v7;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  Swift::Int v8 = *(void *)(v4 + 40);
  swift_bridgeObjectRetain();
  Swift::Int v9 = NSObject._rawHashValue(seed:)(v8);
  uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v11 = v9 & ~v10;
  if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    goto LABEL_12;
  }
  sub_10001382C(0, &qword_100215FD8);
  id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
  char v13 = static NSObject.== infix(_:_:)();

  if ((v13 & 1) == 0)
  {
    uint64_t v14 = ~v10;
    do
    {
      unint64_t v11 = (v11 + 1) & v14;
      if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        goto LABEL_12;
      }
      id v15 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
      char v16 = static NSObject.== infix(_:_:)();
    }
    while ((v16 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *v2;
  uint64_t v20 = *v2;
  uint64_t *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10013FD9C();
    uint64_t v18 = v20;
  }
  uint64_t v7 = *(void *)(*(void *)(v18 + 48) + 8 * v11);
  sub_100140538(v11);
  uint64_t *v2 = v20;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_10014039C()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = __CocoaSet.count.getter();
  uint64_t v3 = swift_unknownObjectRetain();
  Swift::Int v4 = sub_10013F6F8(v3, v2);
  Swift::Int v16 = v4;
  Swift::Int v5 = *(void *)(v4 + 40);
  swift_retain();
  Swift::Int v6 = NSObject._rawHashValue(seed:)(v5);
  uint64_t v7 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    sub_10001382C(0, &qword_100215FD8);
    id v9 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
    char v10 = static NSObject.== infix(_:_:)();

    if (v10)
    {
LABEL_6:
      swift_release();
      uint64_t v14 = *(void *)(*(void *)(v4 + 48) + 8 * v8);
      sub_100140538(v8);
      if (static NSObject.== infix(_:_:)())
      {
        Swift::Int *v1 = v16;
        return v14;
      }
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v7;
      while (1)
      {
        unint64_t v8 = (v8 + 1) & v11;
        if (((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
          break;
        }
        id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
        char v13 = static NSObject.== infix(_:_:)();

        if (v13) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_100140538(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(v3 + 40);
        id v11 = *(id *)(*(void *)(v3 + 48) + 8 * v6);
        Swift::Int v12 = NSObject._rawHashValue(seed:)(v10);

        Swift::Int v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v2 >= v13)
          {
LABEL_16:
            uint64_t v16 = *(void *)(v3 + 48);
            unint64_t v17 = (void *)(v16 + 8 * v2);
            uint64_t v18 = (void *)(v16 + 8 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v17 >= v18 + 1))
            {
              void *v17 = *v18;
              int64_t v2 = v6;
            }
          }
        }
        else if (v13 >= v9 || v2 >= v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v21;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

EKEventStore_optional __swiftcall Application.eventStore()()
{
  swift_getObjectType();
  id v1 = [v0 allSceneManagers];
  sub_100140834();
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v3 = (objc_class *)swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    id v7 = [(id)swift_getObjCClassFromMetadata() createNewCalendarModel];
    goto LABEL_9;
  }
  if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v2 & 0xC000000000000001) != 0)
  {
    id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_12;
    }
    id v5 = *(id *)(v2 + 32);
  }
  unint64_t v6 = v5;
  swift_bridgeObjectRelease();
  id v7 = [v6 model];

LABEL_9:
  unint64_t v9 = (objc_class *)[v7 eventStore];

  uint64_t v3 = v9;
LABEL_12:
  result.value.super.isCATransform3D a = v3;
  result.is_nil = v4;
  return result;
}

unint64_t sub_100140834()
{
  unint64_t result = qword_100215FF0;
  if (!qword_100215FF0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100215FF0);
  }
  return result;
}

id sub_1001408B8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  a2[3] = sub_10001382C(0, &qword_100216028);
  a2[4] = sub_1001409E4();
  *a2 = a1;

  return a1;
}

uint64_t sub_100140920()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_100140958@<X0>(void *a1@<X8>)
{
  return sub_1001408B8(*(void **)(v1 + 16), a1);
}

id sub_100140960@<X0>(void *a1@<X8>)
{
  unint64_t v2 = *(void **)(v1 + 16);
  *a1 = v2;
  return v2;
}

id sub_10014096C@<X0>(void *a1@<X8>)
{
  id result = [objc_allocWithZone((Class)CalLinkREMStoreWrapper) init];
  *a1 = result;
  return result;
}

id sub_1001409A8@<X0>(void *a1@<X8>)
{
  id result = [objc_allocWithZone((Class)CNContactStore) init];
  *a1 = result;
  return result;
}

unint64_t sub_1001409E4()
{
  unint64_t result = qword_100216030;
  if (!qword_100216030)
  {
    sub_10001382C(255, &qword_100216028);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100216030);
  }
  return result;
}

id TipsManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

uint64_t *TipsManager.shared.unsafeMutableAddressor()
{
  if (qword_100215D38 != -1) {
    swift_once();
  }
  return &static TipsManager.shared;
}

id static TipsManager.shared.getter()
{
  if (qword_100215D38 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static TipsManager.shared;

  return v0;
}

uint64_t sub_100140B30()
{
  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t sub_100140B48()
{
  (*(void (**)(void, void))(v0[25] + 8))(v0[27], v0[24]);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

Swift::Void __swiftcall TipsManager.updatePresentedController(_:)(UIViewController a1)
{
  if (byte_100216040 == 1)
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

    if (!Strong)
    {
      swift_unknownObjectWeakAssign();
    }
  }
}

void sub_100140D58()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  if (Strong) {
    return;
  }
  uint64_t v1 = swift_unknownObjectWeakLoadStrong();
  if (!v1) {
    return;
  }
  id v33 = (id)v1;
  uint64_t v2 = swift_unknownObjectWeakLoadStrong();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    sub_100024554();
    sub_100024218();
    if ([v3 view])
    {
      type metadata accessor for TipUIPopoverViewController();
      Swift::Bool v4 = (void *)TipUIPopoverViewController.__allocating_init(_:sourceItem:actionHandler:)();
      id v5 = [v3 traitCollection];
      id v6 = [v5 horizontalSizeClass];

      if (v6 == (id)1)
      {
        id v7 = [v3 view];
        if (!v7)
        {
LABEL_25:
          __break(1u);
          return;
        }
        uint64_t v8 = v7;
        [v7 bounds];
        CGFloat v10 = v9;
        CGFloat v12 = v11;
        CGFloat v14 = v13;
        CGFloat v16 = v15;

        v35.origin.double x = v10;
        v35.origin.double y = v12;
        v35.size.double width = v14;
        v35.size.double height = v16;
        double Width = CGRectGetWidth(v35);
      }
      else
      {
        double Width = UILayoutFittingCompressedSize.width;
      }
      [v4 setPreferredContentSize:CGSizeMake(Width, UILayoutFittingCompressedSize.height)];
      uint64_t v18 = (void *)TipUIPopoverViewController.popoverPresentationController.getter();
      if (v18)
      {
        uint64_t v19 = v18;
        [v18 setPermittedArrowDirections:2];
      }
      uint64_t v20 = TipUIPopoverViewController.popoverPresentationController.getter();
      if (v20)
      {
        uint64_t v21 = (void *)v20;
        id v22 = [v3 view];
        [v21 setSourceView:v22];
      }
      unint64_t v23 = (void *)TipUIPopoverViewController.popoverPresentationController.getter();
      if (v23)
      {
        char v24 = v23;
        [v23 setBarButtonItem:v33];
      }
      uint64_t v25 = TipUIPopoverViewController.popoverPresentationController.getter();
      if (!v25) {
        goto LABEL_19;
      }
      BOOL v26 = (void *)v25;
      id v27 = [v3 view];
      sub_1001410F8(v27);

      id v28 = [v3 view];
      if (v28)
      {
        uint64_t v29 = v28;
        id v30 = [v28 subviews];

        sub_10001382C(0, &qword_1002160B8);
        unint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        sub_100141AD4(v31);
        isCATransform3D a = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v26 setPassthroughViews:isa];

LABEL_19:
        [v3 presentViewController:v4 animated:1 completion:0];
        swift_unknownObjectWeakAssign();

        goto LABEL_20;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_25;
  }
LABEL_20:
}

void *sub_1001410F8(void *a1)
{
  if (!a1) {
    return &_swiftEmptyArrayStorage;
  }
  id v1 = a1;
  id v2 = [v1 superview];
  if (!v2)
  {
LABEL_9:
    sub_100013AAC(&qword_1002162A0);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1001C1AD0;
    *(void *)(v9 + 32) = v1;
    uint64_t v11 = v9;
    specialized Array._endMutation()();
    return (void *)v11;
  }
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  if (ObjectType == sub_10001382C(0, &qword_1002160D0))
  {

    goto LABEL_9;
  }
  id v5 = v3;
  uint64_t v6 = sub_1001410F8(v3);

  id v7 = v1;
  swift_bridgeObjectRetain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  uint64_t v8 = v6;

  swift_bridgeObjectRelease();
  return (void *)v8;
}

void sub_10014125C(void (*a1)(void))
{
  a1();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v2 = (void *)Strong;
    swift_unknownObjectWeakAssign();
  }
}

uint64_t sub_1001412CC(uint64_t a1)
{
  id v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t TipsManager.dismissTipIfPresentedWithCompletionBlock(_:)(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    uint64_t v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v8 = (void *)swift_allocObject();
    v8[2] = sub_100142084;
    v8[3] = v4;
    void v8[4] = v7;
    aBlock[4] = sub_1001420C8;
    aBlock[5] = v8;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001412CC;
    aBlock[3] = &unk_1001D6568;
    uint64_t v9 = _Block_copy(aBlock);
    swift_retain_n();
    swift_retain();
    swift_release();
    [v6 dismissViewControllerAnimated:0 completion:v9];
    _Block_release(v9);
  }
  else
  {
    uint64_t v10 = qword_100215D48;
    swift_retain_n();
    if (v10 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_100013AAC(&qword_100216078);
    sub_100010FD0(v11, (uint64_t)qword_1002171C8);
    char v15 = 0;
    swift_beginAccess();
    Tips.Parameter.wrappedValue.setter();
    uint64_t v12 = swift_endAccess();
    a1(v12);
  }
  swift_release();
  return swift_release();
}

uint64_t sub_100141520(uint64_t (*a1)(uint64_t))
{
  if (qword_100215D48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100013AAC(&qword_100216078);
  sub_100010FD0(v2, (uint64_t)qword_1002171C8);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  uint64_t v3 = swift_endAccess();
  return a1(v3);
}

id TipsManager.init()()
{
  *(void *)&v0[OBJC_IVAR____TtC9MobileCal11TipsManager_tipObservationTask] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v0[OBJC_IVAR____TtC9MobileCal11TipsManager____lazy_storage___jumpToTodayTip] = 1;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TipsManager();
  return [super init];
}

id TipsManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TipsManager();
  [super dealloc];
}

Swift::Void __swiftcall TipsManager.jumpToTodayActionPerformed()()
{
  uint64_t v0 = type metadata accessor for Tips.InvalidationReason();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100024554();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Tips.InvalidationReason.actionPerformed(_:), v0);
  sub_100024218();
  Tip.invalidate(reason:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

Swift::Void __swiftcall TipsManager.setIsPortraitOrientation(to:)(Swift::Bool to)
{
}

Swift::Void __swiftcall TipsManager.setIsSelectedDateFiveDaysAwayFromToday(to:)(Swift::Bool to)
{
}

Swift::Void __swiftcall TipsManager.setShouldDisplayJumpToTodayTip(to:)(Swift::Bool to)
{
}

uint64_t sub_100141A18(uint64_t a1, void *a2, uint64_t a3)
{
  if (*a2 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_100013AAC(&qword_100216078);
  sub_100010FD0(v4, a3);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  return swift_endAccess();
}

uint64_t sub_100141AD4(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = v4 + v3;
    if (!__OFADD__(v4, v3)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v5 = v15 + v3;
  if (__OFADD__(v15, v3)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v1 = v6;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
    {
      uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
      if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v6 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    uint64_t *v1 = v9;
    uint64_t v8 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = sub_100141CA0(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_100141CA0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100013AF0(&qword_1002160C8, &qword_1002160C0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100013AAC(&qword_1002160C0);
          uint64_t v12 = sub_100141ED4(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10001382C(0, &qword_1002160B8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void (*sub_100141ED4(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(void *a1)
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_100141F84(v6, a2, a3);
  return sub_100141F3C;
}

void sub_100141F3C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_100141F84(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_100142004;
  }
  __break(1u);
  return result;
}

void sub_100142004(id *a1)
{
}

uint64_t sub_10014200C()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10014204C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100142084()
{
  return sub_100141520(*(uint64_t (**)(uint64_t))(v0 + 16));
}

uint64_t sub_10014208C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1001420C8()
{
  sub_10014125C(*(void (**)(void))(v0 + 16));
}

uint64_t sub_1001420D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001420E4()
{
  return swift_release();
}

uint64_t sub_1001420EC(uint64_t a1, void (**a2)(void))
{
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a2;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_10013CA3C;
  *(void *)(v4 + 24) = v3;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v6 = (void *)Strong;
    uint64_t v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v8 = (void *)swift_allocObject();
    v8[2] = sub_1001423C0;
    v8[3] = v4;
    void v8[4] = v7;
    aBlock[4] = sub_1001423DC;
    aBlock[5] = v8;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001412CC;
    aBlock[3] = &unk_1001D6608;
    uint64_t v9 = _Block_copy(aBlock);
    swift_retain_n();
    _Block_copy(a2);
    swift_retain();
    swift_release();
    [v6 dismissViewControllerAnimated:0 completion:v9];
    _Block_release(v9);
  }
  else
  {
    swift_retain_n();
    _Block_copy(a2);
    if (qword_100215D48 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_100013AAC(&qword_100216078);
    sub_100010FD0(v10, (uint64_t)qword_1002171C8);
    char v13 = 0;
    swift_beginAccess();
    Tips.Parameter.wrappedValue.setter();
    swift_endAccess();
    a2[2](a2);
  }
  swift_release();
  return swift_release_n();
}

uint64_t sub_100142340()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100142380()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100142448(void *a1)
{
  uint64_t v2 = sub_100013AAC(&qword_100216128);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AppEntityID();
  uint64_t v22 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v11 = type metadata accessor for AppEntityVisualState();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = type metadata accessor for ViewLocation();
  __chkstk_darwin(v12 - 8);
  id v13 = [a1 event];
  uint64_t v14 = EKEvent.entityIdentifier.getter();
  if (!v15)
  {

    return 0;
  }
  uint64_t v16 = v14;
  uint64_t v17 = v15;
  if ([v13 isIntegrationEvent])
  {
    if ([v13 isReminderIntegrationEvent])
    {
      AppEntityID.init(entityIdentifierString:)();
      uint64_t v18 = v22;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v4, 1, v5) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v10, v4, v5);
        (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v8, v10, v5);
        [a1 rect];
        ViewLocation.init(x:y:z:width:height:depth:)();
        sub_100142A58((char)[a1 state]);
        type metadata accessor for ReminderEntity();
        type metadata accessor for _RepresentedEntityElement();
        swift_allocObject();
        sub_1001433A4(&qword_100216138, (void (*)(uint64_t))&type metadata accessor for ReminderEntity);
        uint64_t v19 = _RepresentedEntityElement.init<A>(appEntityType:identifier:geometry:state:subelements:)();

        (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v5);
        return v19;
      }

      sub_100142FF0((uint64_t)v4);
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    return 0;
  }
  [a1 rect];
  ViewLocation.init(x:y:z:width:height:depth:)();
  sub_100142A58((char)[a1 state]);
  type metadata accessor for EventEntity();
  uint64_t v23 = v16;
  uint64_t v24 = v17;
  type metadata accessor for _RepresentedEntityElement();
  swift_allocObject();
  sub_1001433A4(&qword_100216130, (void (*)(uint64_t))&type metadata accessor for EventEntity);
  uint64_t v19 = _RepresentedEntityElement.init<A>(appEntityType:identifier:geometry:state:subelements:)();

  return v19;
}

void *sub_1001428B8(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  unint64_t v14 = (unint64_t)&_swiftEmptyArrayStorage;
  if (a3 >> 62) {
    goto LABEL_17;
  }
  uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = _CocoaArrayWrapper.endIndex.getter())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v7 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a3 + 8 * i);
      uint64_t v8 = v7;
      uint64_t v9 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v13 = v7;
      a1(&v12, &v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return (void *)swift_bridgeObjectRelease();
      }

      if (v12)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      if (v9 == v5)
      {
        swift_bridgeObjectRelease();
        return (void *)v14;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_100142A58(char a1)
{
  uint64_t v2 = type metadata accessor for AppEntityVisualState();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v16 - v7;
  v16[1] = &_swiftEmptyArrayStorage;
  sub_1001433A4(&qword_100216140, (void (*)(uint64_t))&type metadata accessor for AppEntityVisualState);
  sub_100013AAC(&qword_100216148);
  sub_100143050();
  uint64_t result = dispatch thunk of SetAlgebra.init<A>(_:)();
  if (a1)
  {
    static AppEntityVisualState.selected.getter();
    sub_1001430AC(v8, (uint64_t)v6);
    uint64_t v11 = *(void (**)(char *, uint64_t))(v3 + 8);
    v11(v6, v2);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v11)(v8, v2);
    if ((a1 & 2) == 0)
    {
LABEL_3:
      if ((a1 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((a1 & 2) == 0)
  {
    goto LABEL_3;
  }
  static AppEntityVisualState.highlighted.getter();
  sub_1001430AC(v8, (uint64_t)v6);
  uint64_t v12 = *(void (**)(char *, uint64_t))(v3 + 8);
  v12(v6, v2);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v12)(v8, v2);
  if ((a1 & 4) == 0)
  {
LABEL_4:
    if ((a1 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  static AppEntityVisualState.focused.getter();
  sub_1001430AC(v8, (uint64_t)v6);
  id v13 = *(void (**)(char *, uint64_t))(v3 + 8);
  v13(v6, v2);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v13)(v8, v2);
  if ((a1 & 8) == 0)
  {
LABEL_5:
    if ((a1 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  static AppEntityVisualState.disabled.getter();
  sub_1001430AC(v8, (uint64_t)v6);
  unint64_t v14 = *(void (**)(char *, uint64_t))(v3 + 8);
  v14(v6, v2);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v14)(v8, v2);
  if ((a1 & 0x10) == 0)
  {
LABEL_6:
    if ((a1 & 0x20) == 0) {
      return result;
    }
    goto LABEL_7;
  }
LABEL_13:
  static AppEntityVisualState.editing.getter();
  sub_1001430AC(v8, (uint64_t)v6);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v3 + 8);
  v15(v6, v2);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v15)(v8, v2);
  if ((a1 & 0x20) == 0) {
    return result;
  }
LABEL_7:
  static AppEntityVisualState.primary.getter();
  sub_1001430AC(v8, (uint64_t)v6);
  uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v6, v2);
  return ((uint64_t (*)(char *, uint64_t))v10)(v8, v2);
}

void *sub_100142D88()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return &_swiftEmptyArrayStorage;
  }
  id v2 = [Strong annotatedEntities];
  if (!v2)
  {
    swift_unknownObjectRelease();
    return &_swiftEmptyArrayStorage;
  }
  uint64_t v3 = v2;
  sub_100142F70();
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  __chkstk_darwin(v5);
  v8[2] = v0;
  uint64_t v6 = sub_1001428B8((void (*)(uint64_t *__return_ptr, id *))sub_100142FB0, (uint64_t)v8, v4);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return v6;
}

uint64_t initializeBufferWithCopyOfBuffer for ViewEntityProviderWrapper(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t initializeWithCopy for ViewEntityProviderWrapper()
{
  return _swift_unknownObjectWeakCopyInit();
}

uint64_t assignWithCopy for ViewEntityProviderWrapper()
{
  return _swift_unknownObjectWeakCopyAssign();
}

uint64_t initializeWithTake for ViewEntityProviderWrapper()
{
  return _swift_unknownObjectWeakTakeInit();
}

uint64_t assignWithTake for ViewEntityProviderWrapper()
{
  return _swift_unknownObjectWeakTakeAssign();
}

uint64_t getEnumTagSinglePayload for ViewEntityProviderWrapper(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ViewEntityProviderWrapper(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ViewEntityProviderWrapper()
{
  return &type metadata for ViewEntityProviderWrapper;
}

unint64_t sub_100142F1C()
{
  unint64_t result = qword_100216118;
  if (!qword_100216118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100216118);
  }
  return result;
}

unint64_t sub_100142F70()
{
  unint64_t result = qword_100216120;
  if (!qword_100216120)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100216120);
  }
  return result;
}

uint64_t sub_100142FB0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100142448(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100142FF0(uint64_t a1)
{
  uint64_t v2 = sub_100013AAC(&qword_100216128);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100143050()
{
  unint64_t result = qword_100216150;
  if (!qword_100216150)
  {
    sub_100013B34(&qword_100216148);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100216150);
  }
  return result;
}

uint64_t sub_1001430AC(char *a1, uint64_t a2)
{
  id v30 = a1;
  uint64_t v4 = sub_100013AAC(&qword_100216158);
  uint64_t v5 = __chkstk_darwin(v4);
  id v28 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v24 - v7;
  uint64_t v9 = type metadata accessor for AppEntityVisualState();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  id v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v24 - v14;
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v27 = v2;
  uint64_t v25 = v16;
  v16(v13, v2, v9);
  v24[1] = sub_1001433A4(&qword_100216140, (void (*)(uint64_t))&type metadata accessor for AppEntityVisualState);
  dispatch thunk of SetAlgebra.intersection(_:)();
  sub_1001433A4((unint64_t *)&unk_100216160, (void (*)(uint64_t))&type metadata accessor for AppEntityVisualState);
  uint64_t v26 = a2;
  char v17 = dispatch thunk of static Equatable.== infix(_:_:)() ^ 1;
  uint64_t v29 = v4;
  uint64_t v18 = &v8[*(int *)(v4 + 48)];
  *uint64_t v8 = v17 & 1;
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    uint64_t v21 = v25;
    uint64_t v20 = v26;
    v25(v18, v26, v9);
    v21(v13, v20, v9);
    dispatch thunk of SetAlgebra.formUnion(_:)();
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v19(v18, v15, v9);
  }
  uint64_t v22 = &v28[*(int *)(v29 + 48)];
  v19(v22, v18, v9);
  v19(v30, v22, v9);
  return v17 & 1;
}

uint64_t sub_1001433A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001433EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_100143694()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100013AAC(&qword_100216248);
  __chkstk_darwin(v2 - 8);
  id v51 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100013AAC((uint64_t *)&unk_100216260);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  id v49 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v50 = (uint64_t)&v47 - v7;
  uint64_t v8 = type metadata accessor for RemindersInCalendarEditingReminderProperties();
  uint64_t v56 = *(void *)(v8 - 8);
  uint64_t v57 = v8;
  __chkstk_darwin(v8);
  id v59 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for RemindersInCalendarUtilities.ReminderEditingModule();
  uint64_t v54 = *(void *)(v10 - 8);
  uint64_t v55 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for RemindersInCalendarUtilities.ReminderEditingConfiguration();
  uint64_t v52 = *(void *)(v13 - 8);
  uint64_t v53 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100013AAC(&qword_100216290);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (uint64_t *)((char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = type metadata accessor for RemindersInCalendarUtilities.ReminderEditingConfiguration.ReminderSpecifier();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v47 - v24;
  uint64_t v58 = OBJC_IVAR____TtC9MobileCal28EKReminderEditViewController_event;
  uint64_t v26 = *(void **)&v0[OBJC_IVAR____TtC9MobileCal28EKReminderEditViewController_event];
  id v27 = v26;
  sub_100143E38(v26, v18);

  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1) {
    return sub_1000245E8((uint64_t)v18, &qword_100216290);
  }
  (*(void (**)(char *, void *, uint64_t))(v20 + 32))(v25, v18, v19);
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v23, v25, v19);
  RemindersInCalendarUtilities.ReminderEditingConfiguration.init(reminderSpecifier:)();
  uint64_t v29 = *(void **)&v1[OBJC_IVAR____TtC9MobileCal28EKReminderEditViewController_model];
  uint64_t v48 = v25;
  if (v29) {
    id v30 = [v29 undoManager];
  }
  RemindersInCalendarUtilities.ReminderEditingConfiguration.undoManager.setter();
  static RemindersInCalendarUtilities.makeReminderEditingModule(configuration:)();
  RemindersInCalendarEditingReminderProperties.init()();
  unint64_t v31 = *(void **)&v1[v58];
  if (v31)
  {
    id v32 = [v31 startDateComponents];
    if (v32)
    {
      id v33 = v32;
      uint64_t v34 = v15;
      uint64_t v35 = (uint64_t)v49;
      static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v36 = type metadata accessor for DateComponents();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 0, 1, v36);
    }
    else
    {
      uint64_t v34 = v15;
      uint64_t v38 = type metadata accessor for DateComponents();
      uint64_t v35 = (uint64_t)v49;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v49, 1, 1, v38);
    }
    sub_10013C6A8(v35, v50);
  }
  else
  {
    uint64_t v34 = v15;
    uint64_t v37 = type metadata accessor for DateComponents();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v50, 1, 1, v37);
  }
  uint64_t v39 = (uint64_t)v51;
  RemindersInCalendarEditingReminderProperties.dueDateComponents.setter();
  RemindersInCalendarUtilities.ReminderEditingModule.moduleInterface.getter();
  swift_getObjectType();
  dispatch thunk of RemindersInCalendarReminderEditingModuleInterface.editReminder(with:)();
  swift_unknownObjectRelease();
  RemindersInCalendarUtilities.ReminderEditingModule.moduleInterface.getter();
  swift_getObjectType();
  sub_100146DA8();
  swift_unknownObjectRetain();
  dispatch thunk of RemindersInCalendarReminderEditingModuleInterface.moduleDelegate.setter();
  swift_unknownObjectRelease();
  uint64_t v41 = v54;
  uint64_t v40 = v55;
  (*(void (**)(uint64_t, char *, uint64_t))(v54 + 16))(v39, v12, v55);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v39, 0, 1, v40);
  uint64_t v42 = (uint64_t)&v1[OBJC_IVAR____TtC9MobileCal28EKReminderEditViewController_currentModule];
  swift_beginAccess();
  sub_100146E00(v39, v42);
  swift_endAccess();
  sub_100013AAC(&qword_1002162A0);
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_1001C1AD0;
  *(void *)(v43 + 32) = RemindersInCalendarUtilities.ReminderEditingModule.viewController.getter();
  uint64_t v60 = v43;
  specialized Array._endMutation()();
  sub_10001382C(0, &qword_1002162A8);
  isCATransform3D a = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v1 setViewControllers:isa animated:0];

  uint64_t v45 = (void *)RemindersInCalendarUtilities.ReminderEditingModule.viewController.getter();
  id v46 = [v45 view];

  if (v46)
  {
    [v46 annotateWithEvent:*(void *)&v1[v58]];
    [v46 updateEntityAnnotationStateWithIsSelected:1 isHighlighted:0 isFocused:0 isDisabled:0 isEditing:1 isPrimary:1];
  }
  (*(void (**)(char *, uint64_t))(v56 + 8))(v59, v57);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v12, v40);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v34, v53);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v48, v19);
}

uint64_t sub_100143E38@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_100013AAC((uint64_t *)&unk_100216260);
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_100013AAC(&qword_100215E98);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    uint64_t v26 = type metadata accessor for RemindersInCalendarUtilities.ReminderEditingConfiguration.ReminderSpecifier();
    uint64_t v22 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
    uint64_t v25 = v26;
    uint64_t v23 = a2;
    uint64_t v24 = 1;
    goto LABEL_7;
  }
  uint64_t v13 = *(void **)(v2 + OBJC_IVAR____TtC9MobileCal28EKReminderEditViewController_model);
  uint64_t v41 = a2;
  if (v13)
  {
    id v14 = a1;
    id v15 = v13;
    id v16 = [v15 pendingReminderTracker];
    if (v16)
    {
      uint64_t v17 = v16;
      id v18 = [v16 optimisticReminderForEvent:v14];

      if (v18)
      {

        uint64_t v19 = v41;
        *uint64_t v41 = v18;
        uint64_t v20 = enum case for RemindersInCalendarUtilities.ReminderEditingConfiguration.ReminderSpecifier.optimisticReminder(_:);
        uint64_t v21 = type metadata accessor for RemindersInCalendarUtilities.ReminderEditingConfiguration.ReminderSpecifier();
        uint64_t v40 = *(void *)(v21 - 8);
        (*(void (**)(void *, uint64_t, uint64_t))(v40 + 104))(v19, v20, v21);
        uint64_t v22 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(v40 + 56);
        uint64_t v23 = v19;
        uint64_t v24 = 0;
        uint64_t v25 = v21;
LABEL_7:
        return v22(v23, v24, 1, v25);
      }
    }
    else
    {
    }
  }
  else
  {
    id v28 = a1;
  }
  id v29 = [a1 uniqueID];
  if (v29)
  {
    id v30 = v29;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    URL.init(string:)();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {

      sub_1000245E8((uint64_t)v8, &qword_100215E98);
      unint64_t v31 = v41;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
      URL._bridgeToObjectiveC()(v32);
      uint64_t v34 = v33;
      id v35 = [self objectIDWithURL:v33];

      unint64_t v31 = v41;
      if (v35)
      {
        EKEvent.recurrentReminderOccurrenceDate.getter();
        RemindersInCalendarUtilities.ReminderSpecifier.init(reminderID:dueDateOfRecurrentInstance:)();

        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        uint64_t v36 = enum case for RemindersInCalendarUtilities.ReminderEditingConfiguration.ReminderSpecifier.reminder(_:);
        uint64_t v37 = type metadata accessor for RemindersInCalendarUtilities.ReminderEditingConfiguration.ReminderSpecifier();
        uint64_t v38 = *(void *)(v37 - 8);
        (*(void (**)(void *, uint64_t, uint64_t))(v38 + 104))(v31, v36, v37);
        return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(v38 + 56))(v31, 0, 1, v37);
      }
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  else
  {

    unint64_t v31 = v41;
  }
  uint64_t v39 = type metadata accessor for RemindersInCalendarUtilities.ReminderEditingConfiguration.ReminderSpecifier();
  return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v31, 1, 1, v39);
}

uint64_t sub_100144310()
{
  uint64_t v1 = sub_100013AAC((uint64_t *)&unk_100216260);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for RemindersInCalendarEditingReminderProperties();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100013AAC(&qword_100216248);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for RemindersInCalendarUtilities.ReminderEditingModule();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v0 + OBJC_IVAR____TtC9MobileCal28EKReminderEditViewController_currentModule;
  swift_beginAccess();
  sub_100146938(v15, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_1000245E8((uint64_t)v10, &qword_100216248);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  uint64_t v17 = *(void **)(v0 + OBJC_IVAR____TtC9MobileCal28EKReminderEditViewController_event);
  if (v17)
  {
    id v18 = v17;
    RemindersInCalendarEditingReminderProperties.init()();
    id v19 = [v18 startDateComponents];
    if (v19)
    {
      uint64_t v20 = v19;
      static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v21 = type metadata accessor for DateComponents();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v3, 0, 1, v21);
    }
    else
    {
      uint64_t v22 = type metadata accessor for DateComponents();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v3, 1, 1, v22);
    }
    RemindersInCalendarEditingReminderProperties.dueDateComponents.setter();
    RemindersInCalendarUtilities.ReminderEditingModule.moduleInterface.getter();
    swift_getObjectType();
    dispatch thunk of RemindersInCalendarReminderEditingModuleInterface.editReminder(with:)();

    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_100144774()
{
  uint64_t v1 = sub_100013AAC(&qword_100216248);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for RemindersInCalendarUtilities.ReminderEditingModule();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + OBJC_IVAR____TtC9MobileCal28EKReminderEditViewController_currentModule;
  swift_beginAccess();
  sub_100146938(v8, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1000245E8((uint64_t)v3, &qword_100216248);
    char v9 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    RemindersInCalendarUtilities.ReminderEditingModule.moduleInterface.getter();
    swift_getObjectType();
    char v9 = dispatch thunk of RemindersInCalendarReminderEditingModuleInterface.hasUncommittedChanges.getter();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v9 & 1;
}

uint64_t sub_100144970()
{
  uint64_t v1 = type metadata accessor for RemindersInCalendarUtilities.ReminderEditingModule();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100013AAC(&qword_100216248);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + OBJC_IVAR____TtC9MobileCal28EKReminderEditViewController_currentModule;
  swift_beginAccess();
  sub_100146938(v8, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
  {
    sub_1000245E8((uint64_t)v7, &qword_100216248);
    char v9 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
    sub_1000245E8((uint64_t)v7, &qword_100216248);
    RemindersInCalendarUtilities.ReminderEditingModule.moduleInterface.getter();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    swift_getObjectType();
    char v9 = dispatch thunk of RemindersInCalendarReminderEditingModuleInterface.requiresUserConfirmationForCommittingEditing.getter();
    swift_unknownObjectRelease();
  }
  return v9 & 1;
}

uint64_t sub_100144B78(void (*a1)(uint64_t), void (*a2)(uint64_t))
{
  id v29 = a2;
  uint64_t v4 = sub_100013AAC(&qword_100216230);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100013AAC(&qword_100216248);
  __chkstk_darwin(v7 - 8);
  char v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for RemindersInCalendarUtilities.ReminderEditingModule();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = __chkstk_darwin(v10);
  id v14 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v16 = (char *)&v27 - v15;
  uint64_t v17 = v2 + OBJC_IVAR____TtC9MobileCal28EKReminderEditViewController_currentModule;
  swift_beginAccess();
  sub_100146938(v17, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    uint64_t result = sub_1000245E8((uint64_t)v9, &qword_100216248);
    if (a1)
    {
      uint64_t v19 = swift_retain();
      a1(v19);
      return sub_10013C36C((uint64_t)a1);
    }
  }
  else
  {
    id v27 = v6;
    id v28 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v28(v16, v9, v10);
    uint64_t v20 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v6, 1, 1, v20);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
    type metadata accessor for MainActor();
    sub_10013C37C((uint64_t)a1);
    uint64_t v21 = static MainActor.shared.getter();
    unint64_t v22 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    unint64_t v23 = (v12 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v21;
    *(void *)(v24 + 24) = &protocol witness table for MainActor;
    v28((char *)(v24 + v22), v14, v10);
    uint64_t v25 = (void (**)(uint64_t))(v24 + v23);
    uint64_t v26 = v29;
    *uint64_t v25 = a1;
    v25[1] = v26;
    sub_10000B0D8((uint64_t)v27, (uint64_t)&unk_100216258, v24);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
  return result;
}

uint64_t sub_100144EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  void v6[4] = a6;
  v6[2] = a4;
  uint64_t v7 = type metadata accessor for RemindersInCalendarEditingResult();
  void v6[5] = v7;
  v6[6] = *(void *)(v7 - 8);
  v6[7] = swift_task_alloc();
  v6[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v6[9] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[10] = v8;
  v6[11] = v9;
  return _swift_task_switch(sub_100144FCC, v8);
}

uint64_t sub_100144FCC()
{
  uint64_t v1 = (void *)RemindersInCalendarUtilities.ReminderEditingModule.viewController.getter();
  id v2 = [v1 view];

  if (v2)
  {
    [v2 endEditing:1];

    uint64_t v7 = RemindersInCalendarUtilities.ReminderEditingModule.moduleInterface.getter();
    uint64_t v9 = v8;
    v0[12] = v7;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v11 = (void *)swift_task_alloc();
    v0[13] = v11;
    void *v11 = v0;
    v11[1] = sub_100139FB0;
    uint64_t v3 = v0[8];
    uint64_t v4 = 1;
    uint64_t v5 = ObjectType;
    uint64_t v6 = v9;
  }
  else
  {
    __break(1u);
  }
  return dispatch thunk of RemindersInCalendarReminderEditingModuleInterface.commitEditing(allowingUserConfirmation:)(v3, v4, v5, v6);
}

uint64_t sub_1001451B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[5] = a4;
  uint64_t v5 = type metadata accessor for RemindersInCalendarUtilities.ReminderEditingModule();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  sub_100013AAC(&qword_100216248);
  v4[9] = swift_task_alloc();
  sub_100013AAC(&qword_100216280);
  v4[10] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[11] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[12] = v6;
  v4[13] = v7;
  return _swift_task_switch(sub_100145308, v6);
}

uint64_t sub_100145308()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[5] + OBJC_IVAR____TtC9MobileCal28EKReminderEditViewController_currentModule;
  swift_beginAccess();
  sub_100146938(v4, v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2))
  {
    uint64_t v5 = v0[9];
    swift_release();
    sub_1000245E8(v5, &qword_100216248);
    uint64_t v6 = v0[10];
    uint64_t v7 = type metadata accessor for RemindersInCalendarEditingResult();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
    sub_1000245E8(v6, &qword_100216280);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  else
  {
    uint64_t v10 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v12 = v0[6];
    uint64_t v13 = v0[7];
    uint64_t v14 = v0[5];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v10, v11, v12);
    sub_1000245E8(v11, &qword_100216248);
    uint64_t v15 = RemindersInCalendarUtilities.ReminderEditingModule.moduleInterface.getter();
    uint64_t v17 = v16;
    v0[14] = v15;
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v10, v12);
    uint64_t ObjectType = swift_getObjectType();
    char v19 = *(unsigned char *)(v14 + OBJC_IVAR____TtC9MobileCal28EKReminderEditViewController_ignoreUnsavedChanges);
    uint64_t v20 = (void *)swift_task_alloc();
    v0[15] = v20;
    void *v20 = v0;
    v20[1] = sub_10014556C;
    uint64_t v21 = v0[10];
    return dispatch thunk of RemindersInCalendarReminderEditingModuleInterface.cancelEditing(allowingUserConfirmation:)(v21, (v19 & 1) == 0, ObjectType, v17);
  }
}

uint64_t sub_10014556C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  uint64_t v2 = *(void *)(v1 + 96);
  return _swift_task_switch(sub_1001456B0, v2);
}

uint64_t sub_1001456B0()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = type metadata accessor for RemindersInCalendarEditingResult();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 0, 1, v2);
  sub_1000245E8(v1, &qword_100216280);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100145B60(void *a1)
{
  uint64_t v2 = sub_100013AAC(&qword_100216230);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  type metadata accessor for MainActor();
  id v6 = a1;
  uint64_t v7 = static MainActor.shared.getter();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v7;
  v8[3] = &protocol witness table for MainActor;
  void v8[4] = v6;
  sub_10000B0D8((uint64_t)v4, (uint64_t)&unk_100216240, (uint64_t)v8);
  return swift_release();
}

uint64_t sub_100145C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _DWORD v4[2] = type metadata accessor for MainActor();
  v4[3] = static MainActor.shared.getter();
  id v6 = (void *)swift_task_alloc();
  void v4[4] = v6;
  *id v6 = v4;
  v6[1] = sub_100145D28;
  return static RemindersInCalendarUtilities.checkAndRequestAuthorizationIfNeeded(presentingWith:)(a4);
}

uint64_t sub_100145D28()
{
  swift_task_dealloc();
  uint64_t v0 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100145E64, v0);
}

uint64_t sub_100145E64()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_100145F6C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EKReminderEditViewController();
  return [super dealloc];
}

uint64_t sub_100146018()
{
  return type metadata accessor for EKReminderEditViewController();
}

uint64_t type metadata accessor for EKReminderEditViewController()
{
  uint64_t result = qword_1002161A8;
  if (!qword_1002161A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10014606C()
{
  sub_10014611C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10014611C()
{
  if (!qword_1002161B8)
  {
    type metadata accessor for RemindersInCalendarUtilities.ReminderEditingModule();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002161B8);
    }
  }
}

uint64_t sub_100146178(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_100146718(a3);
}

uint64_t sub_100146180()
{
  uint64_t v1 = type metadata accessor for RemindersInCalendarUtilities.ReminderEditingModule();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100013AAC(&qword_100216248);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + OBJC_IVAR____TtC9MobileCal28EKReminderEditViewController_currentModule;
  swift_beginAccess();
  sub_100146938(v8, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
  {
    sub_1000245E8((uint64_t)v7, &qword_100216248);
    char v9 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
    sub_1000245E8((uint64_t)v7, &qword_100216248);
    RemindersInCalendarUtilities.ReminderEditingModule.moduleInterface.getter();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    swift_getObjectType();
    char v10 = dispatch thunk of RemindersInCalendarReminderEditingModuleInterface.requiresUserConfirmationForCancelingEditing.getter();
    swift_unknownObjectRelease();
    char v9 = v10 ^ 1;
  }
  return v9 & 1;
}

void *sub_100146358()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9MobileCal28EKReminderEditViewController_event);
  if (v1) {
    [v1 rollback];
  }
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    [result eventEditViewController:v0 didCompleteWithAction:0 completionHandler:0];
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

void sub_1001463E0(void *a1, void *a2, void *a3)
{
  v19[3] = (id)sub_10001382C(0, (unint64_t *)&unk_100216220);
  v19[4] = &protocol witness table for REMReminder;
  v19[0] = a2;
  id v6 = a2;
  EKEvent.update(from:updateDates:forSavingIntegrationEvent:)();
  sub_10013C5F4((uint64_t)v19);
  if ([a1 completed]) {
    [a1 setRecurrenceRules:0];
  }
  id v7 = [a1 eventStore];
  if (!v7) {
    __break(1u);
  }
  uint64_t v8 = v7;
  uint64_t v9 = static EKSpan.automaticChange.getter();
  v19[0] = 0;
  unsigned int v10 = [v8 saveEvent:a1 span:v9 commit:0 error:v19];

  if (v10)
  {
    id v11 = v19[0];
    [a3 setOptimisticReminder:v6 forEvent:a1 sequenceNumber:[a1 sequenceNumber]];
    [a3 addPendingEvent:a1 sequenceNumber:[a1 sequenceNumber]];
  }
  else
  {
    id v12 = v19[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_100215D40 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_100010FD0(v13, (uint64_t)qword_1002171B0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 138412290;
      swift_errorRetain();
      id v18 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v19[0] = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v17 = v18;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Error saving reminder changes onto event %@", v16, 0xCu);
      sub_100013AAC(&qword_100215E30);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

uint64_t sub_100146718(void *a1)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v4 = (void *)result;
    uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC9MobileCal28EKReminderEditViewController_model);
    if (v5)
    {
      id v6 = v5;
      id v7 = [v6 pendingReminderTracker];
      if (v7)
      {
        uint64_t v8 = v7;
        uint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC9MobileCal28EKReminderEditViewController_event);
        if (v9)
        {
          id v10 = v9;
          sub_1001463E0(v10, a1, v8);

          id v6 = v8;
          uint64_t v8 = v10;
        }

        id v6 = v8;
      }
    }
    v12[4] = sub_100145B60;
    void v12[5] = 0;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_100139504;
    uint64_t v12[3] = &unk_1001D6728;
    id v11 = _Block_copy(v12);
    [v4 eventEditViewController:v1 didCompleteWithAction:1 completionHandler:v11];
    _Block_release(v11);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100146868(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100146878()
{
  return swift_release();
}

uint64_t sub_100146884(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_10013CA6C;
  return sub_100145C78(a1, v4, v5, v6);
}

uint64_t sub_100146938(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100013AAC(&qword_100216248);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001469A0()
{
  uint64_t v1 = type metadata accessor for RemindersInCalendarUtilities.ReminderEditingModule();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  if (*(void *)(v0 + v5)) {
    swift_release();
  }

  return _swift_deallocObject(v0, v5 + 16, v3 | 7);
}

uint64_t sub_100146A84(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for RemindersInCalendarUtilities.ReminderEditingModule() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = (uint64_t *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  id v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *id v12 = v2;
  v12[1] = sub_10013CA6C;
  return sub_100144EC4(a1, v6, v7, v8, v10, v11);
}

uint64_t sub_100146BB4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10013CA6C;
  return sub_1001451B4(a1, v4, v5, v6);
}

uint64_t sub_100146C6C()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100146CAC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10013C8D8;
  return sub_1001451B4(a1, v4, v5, v6);
}

uint64_t sub_100146D60()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100146D98()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

unint64_t sub_100146DA8()
{
  unint64_t result = qword_100216298;
  if (!qword_100216298)
  {
    type metadata accessor for EKReminderEditViewController();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100216298);
  }
  return result;
}

uint64_t sub_100146E00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100013AAC(&qword_100216248);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100146E68()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100010B78(v0, qword_1002171B0);
  sub_100010FD0(v0, (uint64_t)qword_1002171B0);
  return Logger.init(subsystem:category:)();
}

ValueMetadata *type metadata accessor for JumpToTodayTip()
{
  return &type metadata for JumpToTodayTip;
}

void *sub_100146EEC()
{
  return &protocol witness table for String;
}

uint64_t sub_100146EF8()
{
  return Tip.title.getter();
}

void sub_100146F28(void *a1@<X8>)
{
  *a1 = 0xD00000000000001FLL;
  a1[1] = 0x80000001001B5840;
}

uint64_t sub_100146F48()
{
  return Image.init(systemName:)(0x7261646E656C6163, 0xE800000000000000);
}

uint64_t sub_100146F60()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

void sub_100147590(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "Initializing a reminder editor without a calendar model. The editor won't be able to update values in the app and there will be a syncing delay before changes are visible. (delegate = %@)", (uint8_t *)&v2, 0xCu);
}

uint64_t AppDependencyManager.add<A>(key:dependency:)()
{
  return AppDependencyManager.add<A>(key:dependency:)();
}

uint64_t static AppDependencyManager.shared.getter()
{
  return static AppDependencyManager.shared.getter();
}

uint64_t type metadata accessor for AppDependencyManager()
{
  return type metadata accessor for AppDependencyManager();
}

uint64_t static AppEntityVisualState.highlighted.getter()
{
  return static AppEntityVisualState.highlighted.getter();
}

uint64_t static AppEntityVisualState.editing.getter()
{
  return static AppEntityVisualState.editing.getter();
}

uint64_t static AppEntityVisualState.focused.getter()
{
  return static AppEntityVisualState.focused.getter();
}

uint64_t static AppEntityVisualState.primary.getter()
{
  return static AppEntityVisualState.primary.getter();
}

uint64_t static AppEntityVisualState.disabled.getter()
{
  return static AppEntityVisualState.disabled.getter();
}

uint64_t static AppEntityVisualState.selected.getter()
{
  return static AppEntityVisualState.selected.getter();
}

uint64_t type metadata accessor for AppEntityVisualState()
{
  return type metadata accessor for AppEntityVisualState();
}

uint64_t ViewLocation.init(x:y:z:width:height:depth:)()
{
  return ViewLocation.init(x:y:z:width:height:depth:)();
}

uint64_t type metadata accessor for ViewLocation()
{
  return type metadata accessor for ViewLocation();
}

uint64_t _RepresentedEntityElement.init<A>(appEntityType:identifier:geometry:state:subelements:)()
{
  return _RepresentedEntityElement.init<A>(appEntityType:identifier:geometry:state:subelements:)();
}

uint64_t type metadata accessor for _RepresentedEntityElement()
{
  return type metadata accessor for _RepresentedEntityElement();
}

uint64_t static DateComponents._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t DateComponents.day.getter()
{
  return DateComponents.day.getter();
}

uint64_t DateComponents.era.getter()
{
  return DateComponents.era.getter();
}

uint64_t DateComponents.hour.getter()
{
  return DateComponents.hour.getter();
}

uint64_t DateComponents.year.getter()
{
  return DateComponents.year.getter();
}

uint64_t DateComponents.month.getter()
{
  return DateComponents.month.getter();
}

uint64_t DateComponents.minute.getter()
{
  return DateComponents.minute.getter();
}

uint64_t DateComponents.second.getter()
{
  return DateComponents.second.getter();
}

uint64_t type metadata accessor for DateComponents()
{
  return type metadata accessor for DateComponents();
}

uint64_t static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)()
{
  return static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)();
}

uint64_t static PredicateExpressions.build_Arg<A>(_:)()
{
  return static PredicateExpressions.build_Arg<A>(_:)();
}

{
  return static PredicateExpressions.build_Arg<A>(_:)();
}

uint64_t _convertNSErrorToError(_:)()
{
  return _convertNSErrorToError(_:)();
}

uint64_t type metadata accessor for LocalizedStringResource.BundleDescription()
{
  return type metadata accessor for LocalizedStringResource.BundleDescription();
}

uint64_t type metadata accessor for LocalizedStringResource()
{
  return type metadata accessor for LocalizedStringResource();
}

uint64_t LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)()
{
  return LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
}

uint64_t LocalizedStringResource.init(_:table:locale:bundle:comment:)()
{
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t URL.absoluteString.getter()
{
  return URL.absoluteString.getter();
}

void __swiftcall URL._bridgeToObjectiveC()(NSURL *__return_ptr retstr)
{
}

uint64_t static URL._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t URL.init(string:)()
{
  return URL.init(string:)();
}

uint64_t type metadata accessor for URL()
{
  return type metadata accessor for URL();
}

NSDate __swiftcall Date._bridgeToObjectiveC()()
{
  return (NSDate)Date._bridgeToObjectiveC()();
}

uint64_t static Date._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t type metadata accessor for Date()
{
  return type metadata accessor for Date();
}

uint64_t static Locale.current.getter()
{
  return static Locale.current.getter();
}

uint64_t type metadata accessor for Locale()
{
  return type metadata accessor for Locale();
}

uint64_t Calendar.dateComponents(_:from:)()
{
  return Calendar.dateComponents(_:from:)();
}

uint64_t static Calendar._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Calendar._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Calendar.timeZone.getter()
{
  return Calendar.timeZone.getter();
}

uint64_t type metadata accessor for Calendar.Component()
{
  return type metadata accessor for Calendar.Component();
}

uint64_t type metadata accessor for Calendar()
{
  return type metadata accessor for Calendar();
}

NSTimeZone __swiftcall TimeZone._bridgeToObjectiveC()()
{
  return (NSTimeZone)TimeZone._bridgeToObjectiveC()();
}

uint64_t type metadata accessor for TimeZone()
{
  return type metadata accessor for TimeZone();
}

uint64_t type metadata accessor for CalendarAppView()
{
  return type metadata accessor for CalendarAppView();
}

uint64_t type metadata accessor for CalendarLinkError()
{
  return type metadata accessor for CalendarLinkError();
}

uint64_t EventEntity.id.getter()
{
  return EventEntity.id.getter();
}

uint64_t type metadata accessor for EventEntity()
{
  return type metadata accessor for EventEntity();
}

uint64_t type metadata accessor for OpenIdiom()
{
  return type metadata accessor for OpenIdiom();
}

uint64_t RemindersInCalendarUtilities.ReminderSpecifier.init(reminderID:dueDateOfRecurrentInstance:)()
{
  return RemindersInCalendarUtilities.ReminderSpecifier.init(reminderID:dueDateOfRecurrentInstance:)();
}

uint64_t RemindersInCalendarUtilities.ReminderEditingModule.viewController.getter()
{
  return RemindersInCalendarUtilities.ReminderEditingModule.viewController.getter();
}

uint64_t RemindersInCalendarUtilities.ReminderEditingModule.moduleInterface.getter()
{
  return RemindersInCalendarUtilities.ReminderEditingModule.moduleInterface.getter();
}

uint64_t type metadata accessor for RemindersInCalendarUtilities.ReminderEditingModule()
{
  return type metadata accessor for RemindersInCalendarUtilities.ReminderEditingModule();
}

uint64_t RemindersInCalendarUtilities.ReminderCreationModule.viewController.getter()
{
  return RemindersInCalendarUtilities.ReminderCreationModule.viewController.getter();
}

uint64_t RemindersInCalendarUtilities.ReminderCreationModule.moduleInterface.getter()
{
  return RemindersInCalendarUtilities.ReminderCreationModule.moduleInterface.getter();
}

uint64_t type metadata accessor for RemindersInCalendarUtilities.ReminderCreationModule()
{
  return type metadata accessor for RemindersInCalendarUtilities.ReminderCreationModule();
}

uint64_t static RemindersInCalendarUtilities.makeReminderEditingModule(configuration:)()
{
  return static RemindersInCalendarUtilities.makeReminderEditingModule(configuration:)();
}

uint64_t static RemindersInCalendarUtilities.makeReminderCreationModule(configuration:)()
{
  return static RemindersInCalendarUtilities.makeReminderCreationModule(configuration:)();
}

uint64_t type metadata accessor for RemindersInCalendarUtilities.ReminderEditingConfiguration.ReminderSpecifier()
{
  return type metadata accessor for RemindersInCalendarUtilities.ReminderEditingConfiguration.ReminderSpecifier();
}

uint64_t RemindersInCalendarUtilities.ReminderEditingConfiguration.undoManager.setter()
{
  return RemindersInCalendarUtilities.ReminderEditingConfiguration.undoManager.setter();
}

uint64_t RemindersInCalendarUtilities.ReminderEditingConfiguration.init(reminderSpecifier:)()
{
  return RemindersInCalendarUtilities.ReminderEditingConfiguration.init(reminderSpecifier:)();
}

uint64_t type metadata accessor for RemindersInCalendarUtilities.ReminderEditingConfiguration()
{
  return type metadata accessor for RemindersInCalendarUtilities.ReminderEditingConfiguration();
}

uint64_t RemindersInCalendarUtilities.ReminderCreationConfiguration.reminderID.setter()
{
  return RemindersInCalendarUtilities.ReminderCreationConfiguration.reminderID.setter();
}

uint64_t RemindersInCalendarUtilities.ReminderCreationConfiguration.undoManager.setter()
{
  return RemindersInCalendarUtilities.ReminderCreationConfiguration.undoManager.setter();
}

uint64_t RemindersInCalendarUtilities.ReminderCreationConfiguration.initialProperties.setter()
{
  return RemindersInCalendarUtilities.ReminderCreationConfiguration.initialProperties.setter();
}

uint64_t RemindersInCalendarUtilities.ReminderCreationConfiguration.init()()
{
  return RemindersInCalendarUtilities.ReminderCreationConfiguration.init()();
}

uint64_t type metadata accessor for RemindersInCalendarUtilities.ReminderCreationConfiguration()
{
  return type metadata accessor for RemindersInCalendarUtilities.ReminderCreationConfiguration();
}

uint64_t static RemindersInCalendarEditingResult.== infix(_:_:)()
{
  return static RemindersInCalendarEditingResult.== infix(_:_:)();
}

uint64_t type metadata accessor for RemindersInCalendarEditingResult()
{
  return type metadata accessor for RemindersInCalendarEditingResult();
}

uint64_t RemindersInCalendarEditingReminderProperties.recurrenceRules.setter()
{
  return RemindersInCalendarEditingReminderProperties.recurrenceRules.setter();
}

uint64_t RemindersInCalendarEditingReminderProperties.dueDateComponents.getter()
{
  return RemindersInCalendarEditingReminderProperties.dueDateComponents.getter();
}

uint64_t RemindersInCalendarEditingReminderProperties.dueDateComponents.setter()
{
  return RemindersInCalendarEditingReminderProperties.dueDateComponents.setter();
}

uint64_t RemindersInCalendarEditingReminderProperties.url.setter()
{
  return RemindersInCalendarEditingReminderProperties.url.setter();
}

uint64_t RemindersInCalendarEditingReminderProperties.notes.setter()
{
  return RemindersInCalendarEditingReminderProperties.notes.setter();
}

uint64_t RemindersInCalendarEditingReminderProperties.title.setter()
{
  return RemindersInCalendarEditingReminderProperties.title.setter();
}

uint64_t RemindersInCalendarEditingReminderProperties.init()()
{
  return RemindersInCalendarEditingReminderProperties.init()();
}

uint64_t type metadata accessor for RemindersInCalendarEditingReminderProperties()
{
  return type metadata accessor for RemindersInCalendarEditingReminderProperties();
}

uint64_t dispatch thunk of RemindersInCalendarReminderEditingModuleInterface.requiresUserConfirmationForCancelingEditing.getter()
{
  return dispatch thunk of RemindersInCalendarReminderEditingModuleInterface.requiresUserConfirmationForCancelingEditing.getter();
}

uint64_t dispatch thunk of RemindersInCalendarReminderEditingModuleInterface.requiresUserConfirmationForCommittingEditing.getter()
{
  return dispatch thunk of RemindersInCalendarReminderEditingModuleInterface.requiresUserConfirmationForCommittingEditing.getter();
}

uint64_t dispatch thunk of RemindersInCalendarReminderEditingModuleInterface.editReminder(with:)()
{
  return dispatch thunk of RemindersInCalendarReminderEditingModuleInterface.editReminder(with:)();
}

uint64_t dispatch thunk of RemindersInCalendarReminderEditingModuleInterface.moduleDelegate.setter()
{
  return dispatch thunk of RemindersInCalendarReminderEditingModuleInterface.moduleDelegate.setter();
}

uint64_t dispatch thunk of RemindersInCalendarReminderEditingModuleInterface.hasUncommittedChanges.getter()
{
  return dispatch thunk of RemindersInCalendarReminderEditingModuleInterface.hasUncommittedChanges.getter();
}

uint64_t dispatch thunk of RemindersInCalendarReminderCreationModuleInterface.editReminder(with:)()
{
  return dispatch thunk of RemindersInCalendarReminderCreationModuleInterface.editReminder(with:)();
}

uint64_t dispatch thunk of RemindersInCalendarReminderCreationModuleInterface.cancelEditing(canShowUserConfirmation:)()
{
  return dispatch thunk of RemindersInCalendarReminderCreationModuleInterface.cancelEditing(canShowUserConfirmation:)();
}

uint64_t dispatch thunk of RemindersInCalendarReminderCreationModuleInterface.moduleDelegate.setter()
{
  return dispatch thunk of RemindersInCalendarReminderCreationModuleInterface.moduleDelegate.setter();
}

uint64_t dispatch thunk of RemindersInCalendarReminderCreationModuleInterface.hasUncommittedChanges.getter()
{
  return dispatch thunk of RemindersInCalendarReminderCreationModuleInterface.hasUncommittedChanges.getter();
}

uint64_t dispatch thunk of RemindersInCalendarReminderCreationModuleInterface.requiresUserConfirmationForCancelingEditing.getter()
{
  return dispatch thunk of RemindersInCalendarReminderCreationModuleInterface.requiresUserConfirmationForCancelingEditing.getter();
}

uint64_t dispatch thunk of RemindersInCalendarReminderCreationModuleInterface.requiresUserConfirmationForCommittingEditing.getter()
{
  return dispatch thunk of RemindersInCalendarReminderCreationModuleInterface.requiresUserConfirmationForCommittingEditing.getter();
}

uint64_t dispatch thunk of RemindersInCalendarReminderCreationModuleInterface.reminder.getter()
{
  return dispatch thunk of RemindersInCalendarReminderCreationModuleInterface.reminder.getter();
}

uint64_t AppEntityID.init(entityIdentifierString:)()
{
  return AppEntityID.init(entityIdentifierString:)();
}

uint64_t type metadata accessor for AppEntityID()
{
  return type metadata accessor for AppEntityID();
}

uint64_t type metadata accessor for ReminderEntity()
{
  return type metadata accessor for ReminderEntity();
}

uint64_t Logger.logObject.getter()
{
  return Logger.logObject.getter();
}

uint64_t Logger.init(subsystem:category:)()
{
  return Logger.init(subsystem:category:)();
}

uint64_t type metadata accessor for Logger()
{
  return type metadata accessor for Logger();
}

uint64_t Tip.invalidate(reason:)()
{
  return Tip.invalidate(reason:)();
}

uint64_t Tip.shouldDisplayUpdates.getter()
{
  return Tip.shouldDisplayUpdates.getter();
}

uint64_t Tip.title.getter()
{
  return Tip.title.getter();
}

uint64_t Tip.actions.getter()
{
  return Tip.actions.getter();
}

uint64_t Tip.message.getter()
{
  return Tip.message.getter();
}

uint64_t TipUIPopoverViewController.popoverPresentationController.getter()
{
  return TipUIPopoverViewController.popoverPresentationController.getter();
}

uint64_t type metadata accessor for TipUIPopoverViewController()
{
  return type metadata accessor for TipUIPopoverViewController();
}

uint64_t TipUIPopoverViewController.__allocating_init(_:sourceItem:actionHandler:)()
{
  return TipUIPopoverViewController.__allocating_init(_:sourceItem:actionHandler:)();
}

uint64_t static Tips.RuleBuilder.buildExpression(_:)()
{
  return static Tips.RuleBuilder.buildExpression(_:)();
}

uint64_t static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)()
{
  return static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
}

uint64_t static Tips.RuleBuilder.buildPartialBlock(first:)()
{
  return static Tips.RuleBuilder.buildPartialBlock(first:)();
}

uint64_t static Tips.OptionsBuilder.buildExpression<A>(_:)()
{
  return static Tips.OptionsBuilder.buildExpression<A>(_:)();
}

uint64_t static Tips.OptionsBuilder.buildFinalResult<A>(_:)()
{
  return static Tips.OptionsBuilder.buildFinalResult<A>(_:)();
}

uint64_t static Tips.OptionsBuilder.buildPartialBlock<A>(first:)()
{
  return static Tips.OptionsBuilder.buildPartialBlock<A>(first:)();
}

uint64_t type metadata accessor for Tips.UsesConstellation()
{
  return type metadata accessor for Tips.UsesConstellation();
}

uint64_t Tips.UsesConstellation.init(_:)()
{
  return Tips.UsesConstellation.init(_:)();
}

uint64_t type metadata accessor for Tips.InvalidationReason()
{
  return type metadata accessor for Tips.InvalidationReason();
}

uint64_t static Tips.ConfigurationOption.AnalyticsEngine.coreAnalytics.getter()
{
  return static Tips.ConfigurationOption.AnalyticsEngine.coreAnalytics.getter();
}

uint64_t type metadata accessor for Tips.ConfigurationOption.AnalyticsEngine()
{
  return type metadata accessor for Tips.ConfigurationOption.AnalyticsEngine();
}

uint64_t static Tips.ConfigurationOption.analyticsEngine(_:)()
{
  return static Tips.ConfigurationOption.analyticsEngine(_:)();
}

uint64_t static Tips.ConfigurationOption.DisplayFrequency.system.getter()
{
  return static Tips.ConfigurationOption.DisplayFrequency.system.getter();
}

uint64_t type metadata accessor for Tips.ConfigurationOption.DisplayFrequency()
{
  return type metadata accessor for Tips.ConfigurationOption.DisplayFrequency();
}

uint64_t static Tips.ConfigurationOption.displayFrequency(_:)()
{
  return static Tips.ConfigurationOption.displayFrequency(_:)();
}

uint64_t static Tips.ConfigurationOption.DatastoreLocation.tipsGroupContainer.getter()
{
  return static Tips.ConfigurationOption.DatastoreLocation.tipsGroupContainer.getter();
}

uint64_t type metadata accessor for Tips.ConfigurationOption.DatastoreLocation()
{
  return type metadata accessor for Tips.ConfigurationOption.DatastoreLocation();
}

uint64_t static Tips.ConfigurationOption.datastoreLocation(_:)()
{
  return static Tips.ConfigurationOption.datastoreLocation(_:)();
}

uint64_t type metadata accessor for Tips.ConfigurationOption()
{
  return type metadata accessor for Tips.ConfigurationOption();
}

uint64_t type metadata accessor for Tips.Rule()
{
  return type metadata accessor for Tips.Rule();
}

uint64_t Tips.Rule.init<A>(_:_:)()
{
  return Tips.Rule.init<A>(_:_:)();
}

uint64_t type metadata accessor for Tips.Status()
{
  return type metadata accessor for Tips.Status();
}

uint64_t Tips.Parameter.wrappedValue.setter()
{
  return Tips.Parameter.wrappedValue.setter();
}

uint64_t Tips.Parameter.init<A>(_:_:_:_:)()
{
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t static Tips.configure(_:)()
{
  return static Tips.configure(_:)();
}

uint64_t dispatch thunk of Hashable._rawHashValue(seed:)()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t dispatch thunk of static Equatable.== infix(_:_:)()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t String.LocalizationValue.init(stringLiteral:)()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t type metadata accessor for String.LocalizationValue()
{
  return type metadata accessor for String.LocalizationValue();
}

NSString __swiftcall String._bridgeToObjectiveC()()
{
  return (NSString)String._bridgeToObjectiveC()();
}

uint64_t static String._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t String.init(localized:)()
{
  return String.init(localized:)();
}

Swift::Int __swiftcall String.UTF8View._foreignCount()()
{
  return String.UTF8View._foreignCount()();
}

uint64_t specialized Array._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray __swiftcall Array._bridgeToObjectiveC()()
{
  return (NSArray)Array._bridgeToObjectiveC()();
}

uint64_t static Array._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t specialized Array._endMutation()()
{
  return specialized Array._endMutation()();
}

uint64_t specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t dispatch thunk of Actor.unownedExecutor.getter()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t static MainActor.shared.getter()
{
  return static MainActor.shared.getter();
}

uint64_t type metadata accessor for MainActor()
{
  return type metadata accessor for MainActor();
}

uint64_t TaskPriority.rawValue.getter()
{
  return TaskPriority.rawValue.getter();
}

uint64_t type metadata accessor for TaskPriority()
{
  return type metadata accessor for TaskPriority();
}

uint64_t dispatch thunk of AsyncSequence.makeAsyncIterator()()
{
  return dispatch thunk of AsyncSequence.makeAsyncIterator()();
}

uint64_t static os_log_type_t.error.getter()
{
  return static os_log_type_t.error.getter();
}

uint64_t static os_log_type_t.default.getter()
{
  return static os_log_type_t.default.getter();
}

uint64_t static REMRecurrenceRule.convert(_:account:reminder:)()
{
  return static REMRecurrenceRule.convert(_:account:reminder:)();
}

uint64_t static EKSpan.automaticChange.getter()
{
  return static EKSpan.automaticChange.getter();
}

uint64_t UIView.setEntityProvider<A>(_:)()
{
  return UIView.setEntityProvider<A>(_:)();
}

uint64_t EKEvent.entityIdentifier.getter()
{
  return EKEvent.entityIdentifier.getter();
}

uint64_t EKEvent.recurrentReminderOccurrenceDate.getter()
{
  return EKEvent.recurrentReminderOccurrenceDate.getter();
}

uint64_t EKEvent.update(from:updateDates:forSavingIntegrationEvent:)()
{
  return EKEvent.update(from:updateDates:forSavingIntegrationEvent:)();
}

Swift::Int __swiftcall NSObject._rawHashValue(seed:)(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t static NSObject.== infix(_:_:)()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t type metadata accessor for Optional()
{
  return type metadata accessor for Optional();
}

uint64_t UnsafeMutableRawBufferPointer.copyMemory(from:)()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t UnsafeMutableRawBufferPointer.subscript.setter()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t dispatch thunk of SetAlgebra.intersection(_:)()
{
  return dispatch thunk of SetAlgebra.intersection(_:)();
}

uint64_t dispatch thunk of SetAlgebra.formUnion(_:)()
{
  return dispatch thunk of SetAlgebra.formUnion(_:)();
}

uint64_t dispatch thunk of SetAlgebra.init<A>(_:)()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t _HashTable.previousHole(before:)()
{
  return _HashTable.previousHole(before:)();
}

uint64_t _HashTable.nextHole(atOrAfter:)()
{
  return _HashTable.nextHole(atOrAfter:)();
}

uint64_t __CocoaSet.makeIterator()()
{
  return __CocoaSet.makeIterator()();
}

uint64_t __CocoaSet.count.getter()
{
  return __CocoaSet.count.getter();
}

uint64_t __CocoaSet.member(for:)()
{
  return __CocoaSet.member(for:)();
}

uint64_t __CocoaSet.Iterator.next()()
{
  return __CocoaSet.Iterator.next()();
}

uint64_t __CocoaSet.contains(_:)()
{
  return __CocoaSet.contains(_:)();
}

uint64_t static _SetStorage.copy(original:)()
{
  return static _SetStorage.copy(original:)();
}

uint64_t static _SetStorage.resize(original:capacity:move:)()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t static _SetStorage.convert(_:capacity:)()
{
  return static _SetStorage.convert(_:capacity:)();
}

uint64_t static _SetStorage.allocate(capacity:)()
{
  return static _SetStorage.allocate(capacity:)();
}

uint64_t _StringGuts.copyUTF8(into:)()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t specialized _ArrayBuffer._getElementSlowPath(_:)()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t _StringObject.sharedUTF8.getter()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t AsyncMapSequence.base.getter()
{
  return AsyncMapSequence.base.getter();
}

uint64_t AsyncMapSequence.Iterator.baseIterator.modify()
{
  return AsyncMapSequence.Iterator.baseIterator.modify();
}

uint64_t AsyncMapSequence.Iterator.transform.getter()
{
  return AsyncMapSequence.Iterator.transform.getter();
}

uint64_t AsyncMapSequence.Iterator.init(_:transform:)()
{
  return AsyncMapSequence.Iterator.init(_:transform:)();
}

uint64_t AsyncMapSequence.transform.getter()
{
  return AsyncMapSequence.transform.getter();
}

uint64_t _assertionFailure(_:_:file:line:flags:)()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t _CocoaArrayWrapper.endIndex.getter()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t _fatalErrorMessage(_:_:file:line:flags:)()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t Error._getEmbeddedNSError()()
{
  return Error._getEmbeddedNSError()();
}

uint64_t Error._code.getter()
{
  return Error._code.getter();
}

uint64_t Error._domain.getter()
{
  return Error._domain.getter();
}

uint64_t Error._userInfo.getter()
{
  return Error._userInfo.getter();
}

uint64_t Hasher.init(_seed:)()
{
  return Hasher.init(_seed:)();
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt a1)
{
}

Swift::Int __swiftcall Hasher._finalize()()
{
  return Hasher._finalize()();
}

uint64_t BadgeImageForAlternateWorkday()
{
  return _BadgeImageForAlternateWorkday();
}

uint64_t BadgeImageForHoliday()
{
  return _BadgeImageForHoliday();
}

CATransform3D *__cdecl CATransform3DConcat(CATransform3D *__return_ptr retstr, CATransform3D *a, CATransform3D *b)
{
  return _CATransform3DConcat(retstr, a, b);
}

CATransform3D *__cdecl CATransform3DMakeScale(CATransform3D *__return_ptr retstr, CGFloat sx, CGFloat sy, CGFloat sz)
{
  return _CATransform3DMakeScale(retstr, sx, sy, sz);
}

CATransform3D *__cdecl CATransform3DMakeTranslation(CATransform3D *__return_ptr retstr, CGFloat tx, CGFloat ty, CGFloat tz)
{
  return _CATransform3DMakeTranslation(retstr, tx, ty, tz);
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return _CFNotificationCenterGetDarwinNotifyCenter();
}

void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately)
{
}

void CFRelease(CFTypeRef cf)
{
}

void CFSetAddValue(CFMutableSetRef theSet, const void *value)
{
}

CFMutableSetRef CFSetCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFSetCallBacks *callBacks)
{
  return _CFSetCreateMutable(allocator, capacity, callBacks);
}

CFIndex CFSetGetCount(CFSetRef theSet)
{
  return _CFSetGetCount(theSet);
}

BOOL CGAffineTransformIsIdentity(CGAffineTransform *t)
{
  return _CGAffineTransformIsIdentity(t);
}

CGAffineTransform *__cdecl CGAffineTransformMakeScale(CGAffineTransform *__return_ptr retstr, CGFloat sx, CGFloat sy)
{
  return _CGAffineTransformMakeScale(retstr, sx, sy);
}

CGContextRef CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef space, uint32_t bitmapInfo)
{
  return _CGBitmapContextCreate(data, width, height, bitsPerComponent, bytesPerRow, space, bitmapInfo);
}

CGImageRef CGBitmapContextCreateImage(CGContextRef context)
{
  return _CGBitmapContextCreateImage(context);
}

uint64_t CGBitmapGetAlignedBytesPerRow()
{
  return _CGBitmapGetAlignedBytesPerRow();
}

CGColorSpaceRef CGColorSpaceCreateDeviceGray(void)
{
  return _CGColorSpaceCreateDeviceGray();
}

void CGColorSpaceRelease(CGColorSpaceRef space)
{
}

void CGContextAddPath(CGContextRef c, CGPathRef path)
{
}

void CGContextAddRect(CGContextRef c, CGRect rect)
{
}

void CGContextBeginPath(CGContextRef c)
{
}

void CGContextClearRect(CGContextRef c, CGRect rect)
{
}

void CGContextClip(CGContextRef c)
{
}

void CGContextClipToMask(CGContextRef c, CGRect rect, CGImageRef mask)
{
}

void CGContextDrawLinearGradient(CGContextRef c, CGGradientRef gradient, CGPoint startPoint, CGPoint endPoint, CGGradientDrawingOptions options)
{
}

void CGContextEOClip(CGContextRef c)
{
}

void CGContextFillEllipseInRect(CGContextRef c, CGRect rect)
{
}

void CGContextFillRect(CGContextRef c, CGRect rect)
{
}

void CGContextFlush(CGContextRef c)
{
}

CGAffineTransform *__cdecl CGContextGetCTM(CGAffineTransform *__return_ptr retstr, CGContextRef c)
{
  return _CGContextGetCTM(retstr, c);
}

void CGContextRelease(CGContextRef c)
{
}

void CGContextRestoreGState(CGContextRef c)
{
}

void CGContextSaveGState(CGContextRef c)
{
}

void CGContextScaleCTM(CGContextRef c, CGFloat sx, CGFloat sy)
{
}

uint64_t CGContextSetBaseCTM()
{
  return _CGContextSetBaseCTM();
}

void CGContextSetFillColorWithColor(CGContextRef c, CGColorRef color)
{
}

uint64_t CGFloatIsValid()
{
  return _CGFloatIsValid();
}

CGGradientRef CGGradientCreateWithColors(CGColorSpaceRef space, CFArrayRef colors, const CGFloat *locations)
{
  return _CGGradientCreateWithColors(space, colors, locations);
}

void CGGradientRelease(CGGradientRef gradient)
{
}

void CGImageRelease(CGImageRef image)
{
}

BOOL CGRectContainsPoint(CGRect rect, CGPoint point)
{
  return _CGRectContainsPoint(rect, point);
}

BOOL CGRectContainsRect(CGRect rect1, CGRect rect2)
{
  return _CGRectContainsRect(rect1, rect2);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return _CGRectEqualToRect(rect1, rect2);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  return _CGRectGetHeight(rect);
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  return _CGRectGetMaxX(rect);
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  return _CGRectGetMaxY(rect);
}

CGFloat CGRectGetMidX(CGRect rect)
{
  return _CGRectGetMidX(rect);
}

CGFloat CGRectGetMidY(CGRect rect)
{
  return _CGRectGetMidY(rect);
}

CGFloat CGRectGetMinX(CGRect rect)
{
  return _CGRectGetMinX(rect);
}

CGFloat CGRectGetMinY(CGRect rect)
{
  return _CGRectGetMinY(rect);
}

CGFloat CGRectGetWidth(CGRect rect)
{
  return _CGRectGetWidth(rect);
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  return _CGRectInset(rect, dx, dy);
}

CGRect CGRectIntersection(CGRect r1, CGRect r2)
{
  return _CGRectIntersection(r1, r2);
}

BOOL CGRectIntersectsRect(CGRect rect1, CGRect rect2)
{
  return _CGRectIntersectsRect(rect1, rect2);
}

BOOL CGRectIsEmpty(CGRect rect)
{
  return _CGRectIsEmpty(rect);
}

BOOL CGRectIsNull(CGRect rect)
{
  return _CGRectIsNull(rect);
}

CGRect CGRectUnion(CGRect r1, CGRect r2)
{
  return _CGRectUnion(r1, r2);
}

BOOL CLLocationCoordinate2DIsValid(CLLocationCoordinate2D coord)
{
  return _CLLocationCoordinate2DIsValid(coord);
}

uint64_t CTFontGetLanguageAwareOutsets()
{
  return _CTFontGetLanguageAwareOutsets();
}

uint64_t CUIKAdjustedColorForColor()
{
  return _CUIKAdjustedColorForColor();
}

uint64_t CUIKAllDayBackgroundColor()
{
  return _CUIKAllDayBackgroundColor();
}

uint64_t CUIKBirthdayMonthCalendarColor()
{
  return _CUIKBirthdayMonthCalendarColor();
}

uint64_t CUIKCalendar()
{
  return _CUIKCalendar();
}

uint64_t CUIKColorBarColor()
{
  return _CUIKColorBarColor();
}

uint64_t CUIKColorLightenedToPercentageWithFinalAlpha()
{
  return _CUIKColorLightenedToPercentageWithFinalAlpha();
}

uint64_t CUIKCreateStripedUIImage()
{
  return _CUIKCreateStripedUIImage();
}

uint64_t CUIKCurrentLocaleRequiresIndianLanguageAdjustments()
{
  return _CUIKCurrentLocaleRequiresIndianLanguageAdjustments();
}

uint64_t CUIKCurrentLocaleRequiresUnabbrevatedMonthNames()
{
  return _CUIKCurrentLocaleRequiresUnabbrevatedMonthNames();
}

uint64_t CUIKDayOfWeekIsWeekend()
{
  return _CUIKDayOfWeekIsWeekend();
}

uint64_t CUIKDayRangeForOccurenceDates()
{
  return _CUIKDayRangeForOccurenceDates();
}

uint64_t CUIKDisplayStringForNotificationIdentity()
{
  return _CUIKDisplayStringForNotificationIdentity();
}

uint64_t CUIKDisplayedTitleForEvent()
{
  return _CUIKDisplayedTitleForEvent();
}

uint64_t CUIKDisplayedTitleForSource()
{
  return _CUIKDisplayedTitleForSource();
}

uint64_t CUIKEventDisplaysAsDeclined()
{
  return _CUIKEventDisplaysAsDeclined();
}

uint64_t CUIKEventParticipantStatusForDisplay()
{
  return _CUIKEventParticipantStatusForDisplay();
}

uint64_t CUIKGetDefaultStartAndEndTimeForDate()
{
  return _CUIKGetDefaultStartAndEndTimeForDate();
}

uint64_t CUIKGetDefaultTimeForDate()
{
  return _CUIKGetDefaultTimeForDate();
}

uint64_t CUIKGetOverlayCalendar()
{
  return _CUIKGetOverlayCalendar();
}

uint64_t CUIKGetWeekendDays()
{
  return _CUIKGetWeekendDays();
}

uint64_t CUIKITriggerReminderSync()
{
  return _CUIKITriggerReminderSync();
}

uint64_t CUIKIntegrationEventBackgroundColor()
{
  return _CUIKIntegrationEventBackgroundColor();
}

uint64_t CUIKInvalidateToday()
{
  return _CUIKInvalidateToday();
}

uint64_t CUIKLocaleIsRightToLeft()
{
  return _CUIKLocaleIsRightToLeft();
}

uint64_t CUIKLocalizedStringForInteger()
{
  return _CUIKLocalizedStringForInteger();
}

uint64_t CUIKLongStringForDateWithCommaAndYear()
{
  return _CUIKLongStringForDateWithCommaAndYear();
}

uint64_t CUIKLongStringForMonth()
{
  return _CUIKLongStringForMonth();
}

uint64_t CUIKNSDateIsThisYear()
{
  return _CUIKNSDateIsThisYear();
}

uint64_t CUIKNSDateIsToday()
{
  return _CUIKNSDateIsToday();
}

uint64_t CUIKNowComponents()
{
  return _CUIKNowComponents();
}

uint64_t CUIKNowDate()
{
  return _CUIKNowDate();
}

uint64_t CUIKNumberOfSecondsForCurrentTime()
{
  return _CUIKNumberOfSecondsForCurrentTime();
}

uint64_t CUIKOneIndexedWeekStart()
{
  return _CUIKOneIndexedWeekStart();
}

uint64_t CUIKSecondaryTextColorForCalendarColorForStyle()
{
  return _CUIKSecondaryTextColorForCalendarColorForStyle();
}

uint64_t CUIKShortStringForMonthYear()
{
  return _CUIKShortStringForMonthYear();
}

uint64_t CUIKShow24Hours()
{
  return _CUIKShow24Hours();
}

uint64_t CUIKStringAbbreviationForMonth()
{
  return _CUIKStringAbbreviationForMonth();
}

uint64_t CUIKStringForDate()
{
  return _CUIKStringForDate();
}

uint64_t CUIKStringForDateAndDayOfWeekInCalendarTimezoneWithFormattingContext()
{
  return _CUIKStringForDateAndDayOfWeekInCalendarTimezoneWithFormattingContext();
}

uint64_t CUIKStringForDateComponents()
{
  return _CUIKStringForDateComponents();
}

uint64_t CUIKStringForDateWithCommaAndYear()
{
  return _CUIKStringForDateWithCommaAndYear();
}

uint64_t CUIKStringForMonth()
{
  return _CUIKStringForMonth();
}

uint64_t CUIKStringForMonthNumber()
{
  return _CUIKStringForMonthNumber();
}

uint64_t CUIKStringForMonthYear()
{
  return _CUIKStringForMonthYear();
}

uint64_t CUIKStringForTime()
{
  return _CUIKStringForTime();
}

uint64_t CUIKStringForYear()
{
  return _CUIKStringForYear();
}

uint64_t CUIKStringVeryShortAbbreviationForMonth()
{
  return _CUIKStringVeryShortAbbreviationForMonth();
}

uint64_t CUIKSummaryColorForColor()
{
  return _CUIKSummaryColorForColor();
}

uint64_t CUIKTextColorForCalendarColorForStyle()
{
  return _CUIKTextColorForCalendarColorForStyle();
}

uint64_t CUIKTodayComponents()
{
  return _CUIKTodayComponents();
}

uint64_t CUIKTodayDate()
{
  return _CUIKTodayDate();
}

uint64_t CUIKVeryShortStringForMonthYear()
{
  return _CUIKVeryShortStringForMonthYear();
}

uint64_t CUIKWeekdayAbbreviations()
{
  return _CUIKWeekdayAbbreviations();
}

uint64_t CUIKWeekdayVeryShortAbbreviations()
{
  return _CUIKWeekdayVeryShortAbbreviations();
}

uint64_t CUIKZeroIndexedWeekStart()
{
  return _CUIKZeroIndexedWeekStart();
}

uint64_t CalAddStateCaptureBlock()
{
  return _CalAddStateCaptureBlock();
}

uint64_t CalAnalyticsSendEvent()
{
  return _CalAnalyticsSendEvent();
}

uint64_t CalAnalyticsSendEventLazy()
{
  return _CalAnalyticsSendEventLazy();
}

uint64_t CalCeilToScreenScale()
{
  return _CalCeilToScreenScale();
}

uint64_t CalCopyTimeZone()
{
  return _CalCopyTimeZone();
}

uint64_t CalDefaultTimeZoneSettingIsAutomatic()
{
  return _CalDefaultTimeZoneSettingIsAutomatic();
}

uint64_t CalDetailStringsForCalendarEvent()
{
  return _CalDetailStringsForCalendarEvent();
}

uint64_t CalEventOccurrenceCacheCopyBoundsForTimeZone()
{
  return _CalEventOccurrenceCacheCopyBoundsForTimeZone();
}

uint64_t CalFloorToScreenScale()
{
  return _CalFloorToScreenScale();
}

uint64_t CalInterfaceIsLeftToRight()
{
  return _CalInterfaceIsLeftToRight();
}

uint64_t CalIsRectEffectivelyEqualToRect()
{
  return _CalIsRectEffectivelyEqualToRect();
}

uint64_t CalOffsetToCenterNumberWithFont()
{
  return _CalOffsetToCenterNumberWithFont();
}

uint64_t CalOnePixelInPoints()
{
  return _CalOnePixelInPoints();
}

uint64_t CalPlopViewWithScaleFactorAndCompletion()
{
  return _CalPlopViewWithScaleFactorAndCompletion();
}

uint64_t CalPopViewIn()
{
  return _CalPopViewIn();
}

uint64_t CalRoundPointToScreenScale()
{
  return _CalRoundPointToScreenScale();
}

uint64_t CalRoundRectToScreenScale()
{
  return _CalRoundRectToScreenScale();
}

uint64_t CalRoundToScreenScale()
{
  return _CalRoundToScreenScale();
}

uint64_t CalSnapDateTo15MinuteInterval()
{
  return _CalSnapDateTo15MinuteInterval();
}

uint64_t CalSnapDateTo15MinuteOr5MinuteInterval()
{
  return _CalSnapDateTo15MinuteOr5MinuteInterval();
}

uint64_t CalSwitchViewToSuperview()
{
  return _CalSwitchViewToSuperview();
}

uint64_t CalTimeDirectionIsLeftToRight()
{
  return _CalTimeDirectionIsLeftToRight();
}

uint64_t CalendarAppCircleNonTodayBGColor()
{
  return _CalendarAppCircleNonTodayBGColor();
}

uint64_t CalendarAppCircleTextColor()
{
  return _CalendarAppCircleTextColor();
}

uint64_t CalendarAppTintColor()
{
  return _CalendarAppTintColor();
}

uint64_t DisplayAddressForIdentity()
{
  return _DisplayAddressForIdentity();
}

uint64_t DraggedEventShadowColor()
{
  return _DraggedEventShadowColor();
}

uint64_t DraggedEventShadowOffset()
{
  return _DraggedEventShadowOffset();
}

uint64_t EKUIApplicationFrame()
{
  return _EKUIApplicationFrame();
}

uint64_t EKUIContainedControllerIdealWidth()
{
  return _EKUIContainedControllerIdealWidth();
}

uint64_t EKUICurrentHeightSizeClassIsCompact()
{
  return _EKUICurrentHeightSizeClassIsCompact();
}

uint64_t EKUICurrentHeightSizeClassIsRegular()
{
  return _EKUICurrentHeightSizeClassIsRegular();
}

uint64_t EKUICurrentWidthSizeClassIsCompactInViewHierarchy()
{
  return _EKUICurrentWidthSizeClassIsCompactInViewHierarchy();
}

uint64_t EKUICurrentWidthSizeClassIsRegularInViewHierarchy()
{
  return _EKUICurrentWidthSizeClassIsRegularInViewHierarchy();
}

uint64_t EKUICurrentWindowHeightWithViewHierarchy()
{
  return _EKUICurrentWindowHeightWithViewHierarchy();
}

uint64_t EKUICurrentWindowInterfaceParadigm()
{
  return _EKUICurrentWindowInterfaceParadigm();
}

uint64_t EKUICurrentWindowSize()
{
  return _EKUICurrentWindowSize();
}

uint64_t EKUICurrentWindowSizeParadigmForViewHierarchy()
{
  return _EKUICurrentWindowSizeParadigmForViewHierarchy();
}

uint64_t EKUICurrentWindowWidthWithViewHierarchy()
{
  return _EKUICurrentWindowWidthWithViewHierarchy();
}

uint64_t EKUIDeviceCanTransform()
{
  return _EKUIDeviceCanTransform();
}

uint64_t EKUIGoldenRatioColumnWidthMinor()
{
  return _EKUIGoldenRatioColumnWidthMinor();
}

uint64_t EKUIGoldenRatioPhi()
{
  return _EKUIGoldenRatioPhi();
}

uint64_t EKUIHasFallbackSizingContext()
{
  return _EKUIHasFallbackSizingContext();
}

uint64_t EKUIHeightForWindowSizeParadigm()
{
  return _EKUIHeightForWindowSizeParadigm();
}

uint64_t EKUIHeightSizeClassForViewHierarchy()
{
  return _EKUIHeightSizeClassForViewHierarchy();
}

uint64_t EKUIInterfaceOrientationForViewHierarchy()
{
  return _EKUIInterfaceOrientationForViewHierarchy();
}

uint64_t EKUIIsExtended()
{
  return _EKUIIsExtended();
}

uint64_t EKUIIsSizeExtended()
{
  return _EKUIIsSizeExtended();
}

uint64_t EKUILayoutMarginsForFullscreenLayoutRectWithSize()
{
  return _EKUILayoutMarginsForFullscreenLayoutRectWithSize();
}

uint64_t EKUILogInitIfNeeded()
{
  return _EKUILogInitIfNeeded();
}

uint64_t EKUIMainWindowForMultiwindowError()
{
  return _EKUIMainWindowForMultiwindowError();
}

uint64_t EKUIMultiwindowAssert()
{
  return _EKUIMultiwindowAssert();
}

uint64_t EKUIOverriddenTraitsBasedOnWindowGeometryIsEnforced()
{
  return _EKUIOverriddenTraitsBasedOnWindowGeometryIsEnforced();
}

uint64_t EKUIPopFallbackSizingContextWithViewHierarchy()
{
  return _EKUIPopFallbackSizingContextWithViewHierarchy();
}

uint64_t EKUIPrefersLargerTextThanDefault()
{
  return _EKUIPrefersLargerTextThanDefault();
}

uint64_t EKUIPushFallbackSizingContextWithViewHierarchy()
{
  return _EKUIPushFallbackSizingContextWithViewHierarchy();
}

uint64_t EKUIScaleFactor()
{
  return _EKUIScaleFactor();
}

uint64_t EKUISeparatorLineThickness()
{
  return _EKUISeparatorLineThickness();
}

uint64_t EKUIShouldSaveStateInPreferences()
{
  return _EKUIShouldSaveStateInPreferences();
}

uint64_t EKUIUseLargeFormatPhoneUI()
{
  return _EKUIUseLargeFormatPhoneUI();
}

uint64_t EKUIUsesLargeTextLayout()
{
  return _EKUIUsesLargeTextLayout();
}

uint64_t EKUIUsesLargeTextYearView()
{
  return _EKUIUsesLargeTextYearView();
}

uint64_t EKUIUsesRoundedRectsInsteadOfCircles()
{
  return _EKUIUsesRoundedRectsInsteadOfCircles();
}

uint64_t EKUIWidthForWindowSizeParadigm()
{
  return _EKUIWidthForWindowSizeParadigm();
}

uint64_t EKUIWidthSizeClassForViewHierarchy()
{
  return _EKUIWidthSizeClassForViewHierarchy();
}

uint64_t EKUIWindowInterfaceParadigmForWindowSize()
{
  return _EKUIWindowInterfaceParadigmForWindowSize();
}

uint64_t EKUIWindowSizeParadigmForWindowSize()
{
  return _EKUIWindowSizeParadigmForWindowSize();
}

uint64_t EKWeakLinkClass()
{
  return _EKWeakLinkClass();
}

uint64_t EKWeakLinkStringConstant()
{
  return _EKWeakLinkStringConstant();
}

Class NSClassFromString(NSString *aClassName)
{
  return _NSClassFromString(aClassName);
}

uint64_t NSRequestConcreteImplementation()
{
  return _NSRequestConcreteImplementation();
}

SEL NSSelectorFromString(NSString *aSelectorName)
{
  return _NSSelectorFromString(aSelectorName);
}

NSString *__cdecl NSStringFromCGPoint(CGPoint point)
{
  return _NSStringFromCGPoint(point);
}

NSString *__cdecl NSStringFromCGRect(CGRect rect)
{
  return _NSStringFromCGRect(rect);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

NSString *__cdecl NSStringFromPoint(NSPoint aPoint)
{
  return _NSStringFromPoint(aPoint);
}

NSString *__cdecl NSStringFromRect(NSRect aRect)
{
  return _NSStringFromRect(aRect);
}

uint64_t PresentJunkAlertControllerForEvent()
{
  return _PresentJunkAlertControllerForEvent();
}

uint64_t PresentJunkAlertControllerWithHandler()
{
  return _PresentJunkAlertControllerWithHandler();
}

uint64_t RPTViewFrameInScreenSpace()
{
  return _RPTViewFrameInScreenSpace();
}

uint64_t TodayTimelineColor()
{
  return _TodayTimelineColor();
}

BOOL UIAccessibilityButtonShapesEnabled(void)
{
  return _UIAccessibilityButtonShapesEnabled();
}

uint64_t UIAnimationDragCoefficient()
{
  return _UIAnimationDragCoefficient();
}

int UIApplicationMain(int argc, char **argv, NSString *principalClassName, NSString *delegateClassName)
{
  return _UIApplicationMain(argc, argv, principalClassName, delegateClassName);
}

NSComparisonResult UIContentSizeCategoryCompareToCategory(UIContentSizeCategory lhs, UIContentSizeCategory rhs)
{
  return _UIContentSizeCategoryCompareToCategory(lhs, rhs);
}

void UIGraphicsBeginImageContextWithOptions(CGSize size, BOOL opaque, CGFloat scale)
{
}

void UIGraphicsEndImageContext(void)
{
}

CGContextRef UIGraphicsGetCurrentContext(void)
{
  return _UIGraphicsGetCurrentContext();
}

UIImage *UIGraphicsGetImageFromCurrentImageContext(void)
{
  return _UIGraphicsGetImageFromCurrentImageContext();
}

void UIGraphicsPopContext(void)
{
}

void UIGraphicsPushContext(CGContextRef context)
{
}

void UIRectFill(CGRect rect)
{
}

void UIRectFillUsingBlendMode(CGRect rect, CGBlendMode blendMode)
{
}

uint64_t UIRectInset()
{
  return _UIRectInset();
}

uint64_t UIRectInsetEdges()
{
  return _UIRectInsetEdges();
}

uint64_t UIRectRoundToScale()
{
  return _UIRectRoundToScale();
}

uint64_t WeekendTextColor()
{
  return _WeekendTextColor();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

NSDictionary *_NSDictionaryOfVariableBindings(NSString *commaSeparatedKeysString, id firstValue, ...)
{
  return __NSDictionaryOfVariableBindings(commaSeparatedKeysString, firstValue);
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

uint64_t _os_feature_enabled_impl()
{
  return __os_feature_enabled_impl();
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

uint64_t animateNavigationPreferringFRR()
{
  return _animateNavigationPreferringFRR();
}

long double atan2(long double __y, long double __x)
{
  return _atan2(__y, __x);
}

void bzero(void *a1, size_t a2)
{
}

uint64_t captureImageFromView()
{
  return _captureImageFromView();
}

uint64_t createImageViewFromView()
{
  return _createImageViewFromView();
}

uint64_t createSnapshotFromView()
{
  return _createSnapshotFromView();
}

uint64_t dayViewScrollAnimationsPreferringFRR()
{
  return _dayViewScrollAnimationsPreferringFRR();
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return _dispatch_get_global_queue(identifier, flags);
}

dispatch_group_t dispatch_group_create(void)
{
  return _dispatch_group_create();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return _dispatch_queue_attr_make_with_autorelease_frequency(attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return _dispatch_queue_attr_make_with_qos_class(attr, qos_class, relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return _dispatch_time(when, delta);
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

uint64_t navigationAnimationsPreferringFRR()
{
  return _navigationAnimationsPreferringFRR();
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

{
}

{
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_enumerationMutation(id obj)
{
}

void objc_exception_throw(id exception)
{
}

id objc_getAssociatedObject(id object, const void *key)
{
  return _objc_getAssociatedObject(object, key);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return _objc_getProperty(self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t objc_opt_respondsToSelector()
{
  return _objc_opt_respondsToSelector();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

int objc_sync_enter(id obj)
{
  return _objc_sync_enter(obj);
}

int objc_sync_exit(id obj)
{
  return _objc_sync_exit(obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return _os_log_create(subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return _os_signpost_enabled(log);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t os_variant_has_internal_ui()
{
  return _os_variant_has_internal_ui();
}

uint64_t pinchDistanceForGestureRecognizer()
{
  return _pinchDistanceForGestureRecognizer();
}

uint64_t preferredNavigationAnimationFrameRateRange()
{
  return _preferredNavigationAnimationFrameRateRange();
}

uint64_t recursiveAnimationRemove()
{
  return _recursiveAnimationRemove();
}

uint64_t scaleViewToFrame()
{
  return _scaleViewToFrame();
}

uint64_t springAnimateViewAlpha()
{
  return _springAnimateViewAlpha();
}

uint64_t springAnimateViewBounds()
{
  return _springAnimateViewBounds();
}

uint64_t springAnimateViewFrame()
{
  return _springAnimateViewFrame();
}

uint64_t springAnimateViewPosition()
{
  return _springAnimateViewPosition();
}

uint64_t springAnimationDuration()
{
  return _springAnimationDuration();
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return _swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return _swift_unknownObjectWeakAssign();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

UBool u_isUAlphabetic(UChar32 c)
{
  return _u_isUAlphabetic(c);
}

UBool u_isUWhiteSpace(UChar32 c)
{
  return _u_isUWhiteSpace(c);
}

UBool u_ispunct(UChar32 c)
{
  return _u_ispunct(c);
}

id objc_msgSend_CGColor(void *a1, const char *a2, ...)
{
  return _[a1 CGColor];
}

id objc_msgSend_CGContext(void *a1, const char *a2, ...)
{
  return _[a1 CGContext];
}

id objc_msgSend_CGImage(void *a1, const char *a2, ...)
{
  return _[a1 CGImage];
}

id objc_msgSend_CGPath(void *a1, const char *a2, ...)
{
  return _[a1 CGPath];
}

id objc_msgSend_CGRectValue(void *a1, const char *a2, ...)
{
  return _[a1 CGRectValue];
}

id objc_msgSend_CUIK_disabledSymbolColor(void *a1, const char *a2, ...)
{
  return [a1 CUIK_disabledSymbolColor];
}

id objc_msgSend_CUIK_reminderShouldBeEditable(void *a1, const char *a2, ...)
{
  return [a1 CUIK_reminderShouldBeEditable];
}

id objc_msgSend_CUIK_symbolColor(void *a1, const char *a2, ...)
{
  return [a1 CUIK_symbolColor];
}

id objc_msgSend_CUIK_symbolName_(void *a1, const char *a2, ...)
{
  return [a1 CUIK_symbolName:];
}

id objc_msgSend_CalEmailAddresses(void *a1, const char *a2, ...)
{
  return _[a1 CalEmailAddresses];
}

id objc_msgSend_CalGregorianCalendarForTimeZone_(void *a1, const char *a2, ...)
{
  return [a1 CalGregorianCalendarForTimeZone:];
}

id objc_msgSend_CalIsAfterDate_(void *a1, const char *a2, ...)
{
  return [a1 CalIsAfterDate:];
}

id objc_msgSend_CalIsBeforeDate_(void *a1, const char *a2, ...)
{
  return [a1 CalIsBeforeDate:];
}

id objc_msgSend_CalIsSameDayAsComponents_(void *a1, const char *a2, ...)
{
  return [a1 CalIsSameDayAsComponents:];
}

id objc_msgSend_CalMap_(void *a1, const char *a2, ...)
{
  return [a1 CalMap:];
}

id objc_msgSend_CalPhoneNumbers(void *a1, const char *a2, ...)
{
  return _[a1 CalPhoneNumbers];
}

id objc_msgSend_CalSimulatedDateForNow(void *a1, const char *a2, ...)
{
  return _[a1 CalSimulatedDateForNow];
}

id objc_msgSend_Cal_annotateWithNotification_(void *a1, const char *a2, ...)
{
  return [a1 Cal_annotateWithNotification:];
}

id objc_msgSend_EKUI_editor(void *a1, const char *a2, ...)
{
  return [a1 EKUI_editor];
}

id objc_msgSend_EKUI_viewHierarchy(void *a1, const char *a2, ...)
{
  return [a1 EKUI_viewHierarchy];
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return _[a1 URL];
}

id objc_msgSend_URLContexts(void *a1, const char *a2, ...)
{
  return _[a1 URLContexts];
}

id objc_msgSend_URLFragmentAllowedCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 URLFragmentAllowedCharacterSet];
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return [a1 URLWithString:];
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _[a1 UTF8String];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _[a1 UUID];
}

id objc_msgSend___buildCalendarSyncHashesForCalendars_(void *a1, const char *a2, ...)
{
  return [a1 __buildCalendarSyncHashesForCalendars:];
}

id objc_msgSend___restoreSelectedCalendarsFromPreferences(void *a1, const char *a2, ...)
{
  return [a1 __restoreSelectedCalendarsFromPreferences];
}

id objc_msgSend__actualEventsWidth(void *a1, const char *a2, ...)
{
  return _[a1 _actualEventsWidth];
}

id objc_msgSend__addAllObservers(void *a1, const char *a2, ...)
{
  return _[a1 _addAllObservers];
}

id objc_msgSend__addButtonsToNavigationBarForViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addButtonsToNavigationBarForViewController:");
}

id objc_msgSend__addChildViewControllerForCurrentTraits(void *a1, const char *a2, ...)
{
  return _[a1 _addChildViewControllerForCurrentTraits];
}

id objc_msgSend__addDoneButtonIfNeededToViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addDoneButtonIfNeededToViewController:");
}

id objc_msgSend__addNewBottomView(void *a1, const char *a2, ...)
{
  return _[a1 _addNewBottomView];
}

id objc_msgSend__addNewCellToSide_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addNewCellToSide:");
}

id objc_msgSend__addNewTopView(void *a1, const char *a2, ...)
{
  return _[a1 _addNewTopView];
}

id objc_msgSend__addPersistedStateFromCalendarModelToDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addPersistedStateFromCalendarModelToDictionary:");
}

id objc_msgSend__adjustCellsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _adjustCellsIfNeeded];
}

id objc_msgSend__adjustContentOffsetIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _adjustContentOffsetIfNeeded];
}

id objc_msgSend__adjustNavBarVisibilityAfterTraitCollectionChange(void *a1, const char *a2, ...)
{
  return _[a1 _adjustNavBarVisibilityAfterTraitCollectionChange];
}

id objc_msgSend__adjustSelectedOccurrences(void *a1, const char *a2, ...)
{
  return _[a1 _adjustSelectedOccurrences];
}

id objc_msgSend__alignXToPage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_alignXToPage:");
}

id objc_msgSend__allDayOccurrenceBlocksForEvents_rangeStart_rangeEnd_(void *a1, const char *a2, ...)
{
  return [_allDayOccurrenceBlocksForEvents:rangeStart:rangeEnd:];
}

id objc_msgSend__allEventsHaveSameAddressWithFirstArray_secondArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_allEventsHaveSameAddressWithFirstArray:secondArray:");
}

id objc_msgSend__allFetchedOccurrences_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_allFetchedOccurrences:");
}

id objc_msgSend__allowedToDisplayEventDetailsColumn(void *a1, const char *a2, ...)
{
  return _[a1 _allowedToDisplayEventDetailsColumn];
}

id objc_msgSend__animateChangeToWeekSize_divided_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateChangeToWeekSize:divided:");
}

id objc_msgSend__animateDraggingOccurrenceToDate_atLastPosition_dropPoint_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateDraggingOccurrenceToDate:atLastPosition:dropPoint:completion:");
}

id objc_msgSend__animateGridlinesAndBackgrounds(void *a1, const char *a2, ...)
{
  return _[a1 _animateGridlinesAndBackgrounds];
}

id objc_msgSend__animateUsingDefaultDampedSpringWithDelay_initialSpringVelocity_options_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateUsingDefaultDampedSpringWithDelay:initialSpringVelocity:options:animations:completion:");
}

id objc_msgSend__animateUsingDefaultTimingWithOptions_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateUsingDefaultTimingWithOptions:animations:completion:");
}

id objc_msgSend__animateUsingSpringWithDuration_delay_options_mass_stiffness_damping_initialVelocity_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:");
}

id objc_msgSend__animateView_toPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateView:toPosition:");
}

id objc_msgSend__animateView_toPosition_setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateView:toPosition:setDelegate:");
}

id objc_msgSend__animateWithDuration_delay_options_factory_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateWithDuration:delay:options:factory:animations:completion:");
}

id objc_msgSend__animateZoomToMonthState(void *a1, const char *a2, ...)
{
  return _[a1 _animateZoomToMonthState];
}

id objc_msgSend__animateZoomToYearState(void *a1, const char *a2, ...)
{
  return _[a1 _animateZoomToYearState];
}

id objc_msgSend__animationComplete(void *a1, const char *a2, ...)
{
  return _[a1 _animationComplete];
}

id objc_msgSend__animationSubTestName(void *a1, const char *a2, ...)
{
  return _[a1 _animationSubTestName];
}

id objc_msgSend__anyOccurrencesAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_anyOccurrencesAvailable:");
}

id objc_msgSend__appNameString(void *a1, const char *a2, ...)
{
  return _[a1 _appNameString];
}

id objc_msgSend__applicationIconImageForBundleIdentifier_format_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applicationIconImageForBundleIdentifier:format:scale:");
}

id objc_msgSend__applicationLastActiveTime(void *a1, const char *a2, ...)
{
  return _[a1 _applicationLastActiveTime];
}

id objc_msgSend__areMultipleScenesOpen(void *a1, const char *a2, ...)
{
  return _[a1 _areMultipleScenesOpen];
}

id objc_msgSend__attributes(void *a1, const char *a2, ...)
{
  return _[a1 _attributes];
}

id objc_msgSend__authorCache(void *a1, const char *a2, ...)
{
  return _[a1 _authorCache];
}

id objc_msgSend__autoSelectEvent(void *a1, const char *a2, ...)
{
  return _[a1 _autoSelectEvent];
}

id objc_msgSend__autoSelectEventWithAnimatedScroll_(void *a1, const char *a2, ...)
{
  return [a1 _autoSelectEventWithAnimatedScroll:];
}

id objc_msgSend__automaticDayFrames(void *a1, const char *a2, ...)
{
  return _[a1 _automaticDayFrames];
}

id objc_msgSend__availableSpace(void *a1, const char *a2, ...)
{
  return _[a1 _availableSpace];
}

id objc_msgSend__backgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 _backgroundColor];
}

id objc_msgSend__backgroundInsetsIgnoringSplitEdges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_backgroundInsetsIgnoringSplitEdges:");
}

id objc_msgSend__badgeDataForDate_outIsLoading_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_badgeDataForDate:outIsLoading:");
}

id objc_msgSend__beginAutoScrollingAutoSelectingWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_beginAutoScrollingAutoSelectingWithContext:");
}

id objc_msgSend__birthdayCount(void *a1, const char *a2, ...)
{
  return _[a1 _birthdayCount];
}

id objc_msgSend__blendColor_withColor_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_blendColor:withColor:alpha:");
}

id objc_msgSend__bodyLeading(void *a1, const char *a2, ...)
{
  return _[a1 _bodyLeading];
}

id objc_msgSend__bodyStringDict_(void *a1, const char *a2, ...)
{
  return [a1 _bodyStringDict:];
}

id objc_msgSend__boldFont(void *a1, const char *a2, ...)
{
  return _[a1 _boldFont];
}

id objc_msgSend__bottomOfCurrentMonth(void *a1, const char *a2, ...)
{
  return _[a1 _bottomOfCurrentMonth];
}

id objc_msgSend__bottomPadding(void *a1, const char *a2, ...)
{
  return _[a1 _bottomPadding];
}

id objc_msgSend__buildDayNumberViews(void *a1, const char *a2, ...)
{
  return _[a1 _buildDayNumberViews];
}

id objc_msgSend__buildVerticalDaySeparators(void *a1, const char *a2, ...)
{
  return _[a1 _buildVerticalDaySeparators];
}

id objc_msgSend__cachedImageForString_isWeekend_underlineThickness_fontSize_style_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cachedImageForString:isWeekend:underlineThickness:fontSize:style:");
}

id objc_msgSend__cachedSizeForLabel_(void *a1, const char *a2, ...)
{
  return [a1 _cachedSizeForLabel:];
}

id objc_msgSend__calculateCellWidth(void *a1, const char *a2, ...)
{
  return _[a1 _calculateCellWidth];
}

id objc_msgSend__calculateMonthFrameForYearViewZoom(void *a1, const char *a2, ...)
{
  return _[a1 _calculateMonthFrameForYearViewZoom];
}

id objc_msgSend__calculateYearFrameForYearViewZoom(void *a1, const char *a2, ...)
{
  return _[a1 _calculateYearFrameForYearViewZoom];
}

id objc_msgSend__calendarDateAtPoint_(void *a1, const char *a2, ...)
{
  return [a1 _calendarDateAtPoint:];
}

id objc_msgSend__calendarDateIsOnWeekend(void *a1, const char *a2, ...)
{
  return _[a1 _calendarDateIsOnWeekend];
}

id objc_msgSend__calendarOccurrencesCollectionFromPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_calendarOccurrencesCollectionFromPredicate:");
}

id objc_msgSend__calendarOrderSortDescriptor(void *a1, const char *a2, ...)
{
  return _[a1 _calendarOrderSortDescriptor];
}

id objc_msgSend__calendarsButtonConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 _calendarsButtonConfiguration];
}

id objc_msgSend__calendarsButtonHasBackground(void *a1, const char *a2, ...)
{
  return _[a1 _calendarsButtonHasBackground];
}

id objc_msgSend__callCompletionIfExists(void *a1, const char *a2, ...)
{
  return _[a1 _callCompletionIfExists];
}

id objc_msgSend__canChangeSelectedDate(void *a1, const char *a2, ...)
{
  return _[a1 _canChangeSelectedDate];
}

id objc_msgSend__canChangeSelectedEvent(void *a1, const char *a2, ...)
{
  return _[a1 _canChangeSelectedEvent];
}

id objc_msgSend__canEnableRefresh(void *a1, const char *a2, ...)
{
  return _[a1 _canEnableRefresh];
}

id objc_msgSend__canPerformDeleteKeyCommand(void *a1, const char *a2, ...)
{
  return _[a1 _canPerformDeleteKeyCommand];
}

id objc_msgSend__canPerformDuplicateKeyCommand(void *a1, const char *a2, ...)
{
  return _[a1 _canPerformDuplicateKeyCommand];
}

id objc_msgSend__canSkipViewHierarchyRebuildingWhenTransitioningFromOldCollection_toNewCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_canSkipViewHierarchyRebuildingWhenTransitioningFromOldCollection:toNewCollection:");
}

id objc_msgSend__captureImageOfMonthInYearView(void *a1, const char *a2, ...)
{
  return _[a1 _captureImageOfMonthInYearView];
}

id objc_msgSend__captureImagesForSlidingPiecesFromMonthViewController_selectedDate_calendar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_captureImagesForSlidingPiecesFromMonthViewController:selectedDate:calendar:");
}

id objc_msgSend__carSystemFocusColor(void *a1, const char *a2, ...)
{
  return _[a1 _carSystemFocusColor];
}

id objc_msgSend__carSystemFocusLabelColor(void *a1, const char *a2, ...)
{
  return _[a1 _carSystemFocusLabelColor];
}

id objc_msgSend__carSystemFocusPrimaryColor(void *a1, const char *a2, ...)
{
  return _[a1 _carSystemFocusPrimaryColor];
}

id objc_msgSend__carSystemPrimaryColor(void *a1, const char *a2, ...)
{
  return _[a1 _carSystemPrimaryColor];
}

id objc_msgSend__carSystemQuaternaryColor(void *a1, const char *a2, ...)
{
  return _[a1 _carSystemQuaternaryColor];
}

id objc_msgSend__castedDayOccurrenceViewFromGenericView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_castedDayOccurrenceViewFromGenericView:");
}

id objc_msgSend__cellHeightForMultiplier_windowSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cellHeightForMultiplier:windowSize:");
}

id objc_msgSend__cellInRowIsCollapsedAllDayCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cellInRowIsCollapsedAllDayCell:");
}

id objc_msgSend__cellIndexForX_(void *a1, const char *a2, ...)
{
  return [a1 _cellIndexForX:];
}

id objc_msgSend__cellTitle(void *a1, const char *a2, ...)
{
  return _[a1 _cellTitle];
}

id objc_msgSend__cellToStartDrawingInForViewWithCalendarDate_calendar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cellToStartDrawingInForViewWithCalendarDate:calendar:");
}

id objc_msgSend__centerDateFormatter(void *a1, const char *a2, ...)
{
  return _[a1 _centerDateFormatter];
}

id objc_msgSend__childViewControllerForTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_childViewControllerForTraitCollection:");
}

id objc_msgSend__circleDiameter(void *a1, const char *a2, ...)
{
  return _[a1 _circleDiameter];
}

id objc_msgSend__circleFrameWithDayFrame_numberString_overlayString_compressed_containsFirstDay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_circleFrameWithDayFrame:numberString:overlayString:compressed:containsFirstDay:");
}

id objc_msgSend__circleSize(void *a1, const char *a2, ...)
{
  return _[a1 _circleSize];
}

id objc_msgSend__circledFont(void *a1, const char *a2, ...)
{
  return _[a1 _circledFont];
}

id objc_msgSend__circledOverlayFont(void *a1, const char *a2, ...)
{
  return _[a1 _circledOverlayFont];
}

id objc_msgSend__classRepresentingViewType_forTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_classRepresentingViewType:forTraitCollection:");
}

id objc_msgSend__cleanupGridAnimation(void *a1, const char *a2, ...)
{
  return _[a1 _cleanupGridAnimation];
}

id objc_msgSend__cleanupSelectedOccurrenceCloneViews(void *a1, const char *a2, ...)
{
  return _[a1 _cleanupSelectedOccurrenceCloneViews];
}

id objc_msgSend__cleanupSelectedOccurrenceCloneViewsRespectingModelSelected(void *a1, const char *a2, ...)
{
  return _[a1 _cleanupSelectedOccurrenceCloneViewsRespectingModelSelected];
}

id objc_msgSend__cleanupSelectedOccurrenceCloneViewsSkipSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cleanupSelectedOccurrenceCloneViewsSkipSet:");
}

id objc_msgSend__clearSelectedOccurrenceViews(void *a1, const char *a2, ...)
{
  return _[a1 _clearSelectedOccurrenceViews];
}

id objc_msgSend__clearSelectedOccurrenceViewsUpdatingModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearSelectedOccurrenceViewsUpdatingModel:");
}

id objc_msgSend__clearSplitViewNavigationController(void *a1, const char *a2, ...)
{
  return _[a1 _clearSplitViewNavigationController];
}

id objc_msgSend__clearTodayHighlight(void *a1, const char *a2, ...)
{
  return _[a1 _clearTodayHighlight];
}

id objc_msgSend__clonedViewForSelectedOccurrence_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clonedViewForSelectedOccurrence:");
}

id objc_msgSend__closeEventPresentationAnimated_(void *a1, const char *a2, ...)
{
  return [a1 _closeEventPresentationAnimated:];
}

id objc_msgSend__closeEventPresentationAnimated_cleanSelectionState_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_closeEventPresentationAnimated:cleanSelectionState:completion:");
}

id objc_msgSend__closeEventPresentationAnimated_viewController_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_closeEventPresentationAnimated:viewController:completion:");
}

id objc_msgSend__collectStats_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_collectStats:");
}

id objc_msgSend__compactMonthDividedListSwitchBarButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 _compactMonthDividedListSwitchBarButtonItem];
}

id objc_msgSend__compactRoundedRectHeightForSizeClass_(void *a1, const char *a2, ...)
{
  return [a1 _compactRoundedRectHeightForSizeClass:];
}

id objc_msgSend__completeStateRestoration(void *a1, const char *a2, ...)
{
  return _[a1 _completeStateRestoration];
}

id objc_msgSend__computeDayStartsAndEndDate(void *a1, const char *a2, ...)
{
  return _[a1 _computeDayStartsAndEndDate];
}

id objc_msgSend__configureSidebarConfigurationOfManagedNavigationController(void *a1, const char *a2, ...)
{
  return _[a1 _configureSidebarConfigurationOfManagedNavigationController];
}

id objc_msgSend__configureViewSwitcherShowingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureViewSwitcherShowingViewController:");
}

id objc_msgSend__constructAndPresentSplashScreenFromViewController_window_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_constructAndPresentSplashScreenFromViewController:window:");
}

id objc_msgSend__contactForCurrentIdentity(void *a1, const char *a2, ...)
{
  return _[a1 _contactForCurrentIdentity];
}

id objc_msgSend__containsPreciseTouch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_containsPreciseTouch:");
}

id objc_msgSend__containsViewControllerRequiringNavBarVisibilityRestoration(void *a1, const char *a2, ...)
{
  return _[a1 _containsViewControllerRequiringNavBarVisibilityRestoration];
}

id objc_msgSend__contentUnavailableConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 _contentUnavailableConfiguration];
}

id objc_msgSend__continueUserActivity_restoreSelectedOccurrence_restoreSelectedDate_restorationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_continueUserActivity:restoreSelectedOccurrence:restoreSelectedDate:restorationHandler:");
}

id objc_msgSend__createAndActivateConstraints(void *a1, const char *a2, ...)
{
  return _[a1 _createAndActivateConstraints];
}

id objc_msgSend__createAndAddSeparatorView(void *a1, const char *a2, ...)
{
  return _[a1 _createAndAddSeparatorView];
}

id objc_msgSend__createAndAddTitleView(void *a1, const char *a2, ...)
{
  return _[a1 _createAndAddTitleView];
}

id objc_msgSend__createAndSetupModel(void *a1, const char *a2, ...)
{
  return _[a1 _createAndSetupModel];
}

id objc_msgSend__createEventDetailsColumn(void *a1, const char *a2, ...)
{
  return _[a1 _createEventDetailsColumn];
}

id objc_msgSend__createFocusImageView(void *a1, const char *a2, ...)
{
  return _[a1 _createFocusImageView];
}

id objc_msgSend__createLabelWithFont_(void *a1, const char *a2, ...)
{
  return [a1 _createLabelWithFont:];
}

id objc_msgSend__createLargeMonthWeekViewForDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createLargeMonthWeekViewForDate:");
}

id objc_msgSend__createLeftFixedSpaceBarItemIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _createLeftFixedSpaceBarItemIfNeeded];
}

id objc_msgSend__createListView(void *a1, const char *a2, ...)
{
  return _[a1 _createListView];
}

id objc_msgSend__createMonthAnimationStateModeSubviews(void *a1, const char *a2, ...)
{
  return _[a1 _createMonthAnimationStateModeSubviews];
}

id objc_msgSend__createMonthHighlightForMonthView_day_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createMonthHighlightForMonthView:day:");
}

id objc_msgSend__createPreparedViewForWeek_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createPreparedViewForWeek:");
}

id objc_msgSend__createPrimaryView(void *a1, const char *a2, ...)
{
  return _[a1 _createPrimaryView];
}

id objc_msgSend__createSecondaryView(void *a1, const char *a2, ...)
{
  return _[a1 _createSecondaryView];
}

id objc_msgSend__createSplitView(void *a1, const char *a2, ...)
{
  return _[a1 _createSplitView];
}

id objc_msgSend__createSubviews(void *a1, const char *a2, ...)
{
  return _[a1 _createSubviews];
}

id objc_msgSend__createSubviewsWithFirstVisibleDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createSubviewsWithFirstVisibleDate:");
}

id objc_msgSend__createSubviewsWithSizeClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createSubviewsWithSizeClass:");
}

id objc_msgSend__createTableView(void *a1, const char *a2, ...)
{
  return _[a1 _createTableView];
}

id objc_msgSend__createTestEventWithStartDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createTestEventWithStartDate:");
}

id objc_msgSend__createViews(void *a1, const char *a2, ...)
{
  return _[a1 _createViews];
}

id objc_msgSend__currentDateComponents(void *a1, const char *a2, ...)
{
  return _[a1 _currentDateComponents];
}

id objc_msgSend__currentOrientation(void *a1, const char *a2, ...)
{
  return _[a1 _currentOrientation];
}

id objc_msgSend__currentTraitCollection(void *a1, const char *a2, ...)
{
  return _[a1 _currentTraitCollection];
}

id objc_msgSend__currentlyViewingCalendarDate(void *a1, const char *a2, ...)
{
  return _[a1 _currentlyViewingCalendarDate];
}

id objc_msgSend__customizeEventEditorForSplitViewAppearance_(void *a1, const char *a2, ...)
{
  return [a1 _customizeEventEditorForSplitViewAppearance:];
}

id objc_msgSend__dateForFirstVisibleRow(void *a1, const char *a2, ...)
{
  return _[a1 _dateForFirstVisibleRow];
}

id objc_msgSend__dateForPoint_(void *a1, const char *a2, ...)
{
  return [a1 _dateForPoint:];
}

id objc_msgSend__dateLabelMaxWidth(void *a1, const char *a2, ...)
{
  return _[a1 _dateLabelMaxWidth];
}

id objc_msgSend__dateModeForAllDay_(void *a1, const char *a2, ...)
{
  return [a1 _dateModeForAllDay:];
}

id objc_msgSend__dateString(void *a1, const char *a2, ...)
{
  return _[a1 _dateString];
}

id objc_msgSend__dayInMonth_fromGesture_(void *a1, const char *a2, ...)
{
  return [a1 _dayInMonth:fromGesture:];
}

id objc_msgSend__dayIndexForToday(void *a1, const char *a2, ...)
{
  return _[a1 _dayIndexForToday];
}

id objc_msgSend__dayIndexesForRangeStart_rangeEnd_outFirstDayIndex_outLastDayIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dayIndexesForRangeStart:rangeEnd:outFirstDayIndex:outLastDayIndex:");
}

id objc_msgSend__dayLabelColorAtDayIndex_isWeekend_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dayLabelColorAtDayIndex:isWeekend:");
}

id objc_msgSend__dayLabelFontForSizeClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dayLabelFontForSizeClass:");
}

id objc_msgSend__dayNumberFontForSize_(void *a1, const char *a2, ...)
{
  return [a1 _dayNumberFontForSize:];
}

id objc_msgSend__dayOccurrenceViewForEvent_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dayOccurrenceViewForEvent:block:");
}

id objc_msgSend__dayOfWeekLabelFont(void *a1, const char *a2, ...)
{
  return _[a1 _dayOfWeekLabelFont];
}

id objc_msgSend__dayRangeForOccurrence_useProposedTime_isMultiDay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dayRangeForOccurrence:useProposedTime:isMultiDay:");
}

id objc_msgSend__dayTextSizeForNumberOfMonthsPerRow_windowSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dayTextSizeForNumberOfMonthsPerRow:windowSize:");
}

id objc_msgSend__dayTextSizeForWindowSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dayTextSizeForWindowSize:");
}

id objc_msgSend__dayTypeForOccurrence_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dayTypeForOccurrence:");
}

id objc_msgSend__dayViewWidthWhenSplit(void *a1, const char *a2, ...)
{
  return _[a1 _dayViewWidthWhenSplit];
}

id objc_msgSend__dayWidth(void *a1, const char *a2, ...)
{
  return _[a1 _dayWidth];
}

id objc_msgSend__daysInAWeek(void *a1, const char *a2, ...)
{
  return _[a1 _daysInAWeek];
}

id objc_msgSend__daysToShiftFromSelectedDateToBeginningOfWeekIfShowingFullWeek_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_daysToShiftFromSelectedDateToBeginningOfWeekIfShowingFullWeek:");
}

id objc_msgSend__daysYAdjustTopForNumberOfMonthsPerRow_windowSize_heightSizeClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_daysYAdjustTopForNumberOfMonthsPerRow:windowSize:heightSizeClass:");
}

id objc_msgSend__daysYAdjustTopForWindowSize_heightSizeClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_daysYAdjustTopForWindowSize:heightSizeClass:");
}

id objc_msgSend__delaySubTestName(void *a1, const char *a2, ...)
{
  return _[a1 _delaySubTestName];
}

id objc_msgSend__delegateShouldClose(void *a1, const char *a2, ...)
{
  return _[a1 _delegateShouldClose];
}

id objc_msgSend__deleteEventAtIndexPath_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteEventAtIndexPath:withCompletionHandler:");
}

id objc_msgSend__deselectAllSelectedRowsAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deselectAllSelectedRowsAnimated:");
}

id objc_msgSend__deselectOccurrenceView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deselectOccurrenceView:");
}

id objc_msgSend__deselectOccurrenceView_updatingModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deselectOccurrenceView:updatingModel:");
}

id objc_msgSend__deselectRowAtIndexPath_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deselectRowAtIndexPath:animated:");
}

id objc_msgSend__detailViewControllerAppeared_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_detailViewControllerAppeared:");
}

id objc_msgSend__detailsDidAppear_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_detailsDidAppear:");
}

id objc_msgSend__diagnosticsAvailable(void *a1, const char *a2, ...)
{
  return _[a1 _diagnosticsAvailable];
}

id objc_msgSend__didFinishDecelerating(void *a1, const char *a2, ...)
{
  return _[a1 _didFinishDecelerating];
}

id objc_msgSend__dismissEditorAndSaveIfPossibleWhileChangingDate_animated_(void *a1, const char *a2, ...)
{
  return [a1 _dismissEditorAndSaveIfPossibleWhileChangingDate:animated:];
}

id objc_msgSend__dismissMessagesViewControllerWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dismissMessagesViewControllerWithCompletion:");
}

id objc_msgSend__dismissPresentedViewController(void *a1, const char *a2, ...)
{
  return _[a1 _dismissPresentedViewController];
}

id objc_msgSend__dismissPresentedViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return [_dismissPresentedViewControllerAnimated:completion:];
}

id objc_msgSend__displayEventDetailsViewControllerForEvent_showComment_context_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_displayEventDetailsViewControllerForEvent:showComment:context:completion:");
}

id objc_msgSend__displayEventDetailsViewControllerForSelectedEventWithOccurrenceView_showComments_context_forceShowEditor_creationMethod_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_displayEventDetailsViewControllerForSelectedEventWithOccurrenceView:showComments:context:forceShowEditor:creationMethod:completion:");
}

id objc_msgSend__displayEventDetailsViewControllerForSelectedEventWithOccurrenceView_showComments_creationMethod_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_displayEventDetailsViewControllerForSelectedEventWithOccurrenceView:showComments:creationMethod:");
}

id objc_msgSend__donateUserActivity_(void *a1, const char *a2, ...)
{
  return [a1 _donateUserActivity:];
}

id objc_msgSend__doneBlock(void *a1, const char *a2, ...)
{
  return _[a1 _doneBlock];
}

id objc_msgSend__doneBlockWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_doneBlockWithCompletion:");
}

id objc_msgSend__drawBackgroundInFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_drawBackgroundInFrame:");
}

id objc_msgSend__drawInFrame_traitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_drawInFrame:traitCollection:");
}

id objc_msgSend__drawString_inTextRect_withTrailingFade_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_drawString:inTextRect:withTrailingFade:");
}

id objc_msgSend__earliestVisibleWeekGroupView(void *a1, const char *a2, ...)
{
  return _[a1 _earliestVisibleWeekGroupView];
}

id objc_msgSend__earliestWeekGroup(void *a1, const char *a2, ...)
{
  return _[a1 _earliestWeekGroup];
}

id objc_msgSend__editingDidCompleteWithAction_changingDate_dismissEditor_editorToDismiss_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_editingDidCompleteWithAction:changingDate:dismissEditor:editorToDismiss:");
}

id objc_msgSend__encodeIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 _encodeIdentifier];
}

id objc_msgSend__ensureStackBaseCalendarViewControllerContainerIsPresent(void *a1, const char *a2, ...)
{
  return _[a1 _ensureStackBaseCalendarViewControllerContainerIsPresent];
}

id objc_msgSend__eventEditorForTestingOnly(void *a1, const char *a2, ...)
{
  return _[a1 _eventEditorForTestingOnly];
}

id objc_msgSend__eventForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_eventForIndexPath:");
}

id objc_msgSend__eventForIndexPath_cache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_eventForIndexPath:cache:");
}

id objc_msgSend__eventForItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_eventForItem:");
}

id objc_msgSend__eventForOccurrenceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_eventForOccurrenceInfo:");
}

id objc_msgSend__eventForRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_eventForRowAtIndexPath:");
}

id objc_msgSend__eventForTest(void *a1, const char *a2, ...)
{
  return _[a1 _eventForTest];
}

id objc_msgSend__eventInMonthWeekView_fromGesture_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_eventInMonthWeekView:fromGesture:");
}

id objc_msgSend__eventIntersectsDayViewControllerActiveDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_eventIntersectsDayViewControllerActiveDate:");
}

id objc_msgSend__eventURLFromLaunchURL_isTravel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_eventURLFromLaunchURL:isTravel:");
}

id objc_msgSend__eventViewControllerForModelSelectedEventIsAlreadyShown(void *a1, const char *a2, ...)
{
  return _[a1 _eventViewControllerForModelSelectedEventIsAlreadyShown];
}

id objc_msgSend__eventWithURI_checkValid_(void *a1, const char *a2, ...)
{
  return [a1 _eventWithURI:checkValid:];
}

id objc_msgSend__eventsForCutOrCopy(void *a1, const char *a2, ...)
{
  return _[a1 _eventsForCutOrCopy];
}

id objc_msgSend__extendStateRestoration(void *a1, const char *a2, ...)
{
  return _[a1 _extendStateRestoration];
}

id objc_msgSend__extendedLaunchDidComplete(void *a1, const char *a2, ...)
{
  return _[a1 _extendedLaunchDidComplete];
}

id objc_msgSend__extractEventsEndingAfterTimeframeFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_extractEventsEndingAfterTimeframeFrom:");
}

id objc_msgSend__extractEventsStartingBeforeTimeframeFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_extractEventsStartingBeforeTimeframeFrom:");
}

id objc_msgSend__extractNumberFromUserActivity_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_extractNumberFromUserActivity:forKey:");
}

id objc_msgSend__extractViewTypeFromUserInfo_withKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_extractViewTypeFromUserInfo:withKey:");
}

id objc_msgSend__fadeInOccurrenceView_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fadeInOccurrenceView:animated:");
}

id objc_msgSend__fadePressHighlightViewToAlpha_duration_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fadePressHighlightViewToAlpha:duration:completion:");
}

id objc_msgSend__fallbackSizingContextWindow(void *a1, const char *a2, ...)
{
  return _[a1 _fallbackSizingContextWindow];
}

id objc_msgSend__fetchUpcomingOccurrences_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchUpcomingOccurrences:");
}

id objc_msgSend__findBoundsForSize_outLowerBound_outUpperBound_outExactMatchValue_outFoundExactMatch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_findBoundsForSize:outLowerBound:outUpperBound:outExactMatchValue:outFoundExactMatch:");
}

id objc_msgSend__findFormatForLocale_usingExampleDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_findFormatForLocale:usingExampleDate:");
}

id objc_msgSend__findSomeCalendarModel(void *a1, const char *a2, ...)
{
  return _[a1 _findSomeCalendarModel];
}

id objc_msgSend__firstLineBaselineOffsetFromBoundsTop(void *a1, const char *a2, ...)
{
  return _[a1 _firstLineBaselineOffsetFromBoundsTop];
}

id objc_msgSend__firstVisibleIndex(void *a1, const char *a2, ...)
{
  return _[a1 _firstVisibleIndex];
}

id objc_msgSend__firstVisibleIndexInView(void *a1, const char *a2, ...)
{
  return _[a1 _firstVisibleIndexInView];
}

id objc_msgSend__flatImageWithColor_(void *a1, const char *a2, ...)
{
  return [a1 _flatImageWithColor:];
}

id objc_msgSend__flooredCalendarDateForCalendarDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_flooredCalendarDateForCalendarDate:");
}

id objc_msgSend__focusBannerVisible(void *a1, const char *a2, ...)
{
  return _[a1 _focusBannerVisible];
}

id objc_msgSend__focusConfigurationChanged(void *a1, const char *a2, ...)
{
  return _[a1 _focusConfigurationChanged];
}

id objc_msgSend__fontSize(void *a1, const char *a2, ...)
{
  return _[a1 _fontSize];
}

id objc_msgSend__fontSizeForSizeClass_(void *a1, const char *a2, ...)
{
  return [a1 _fontSizeForSizeClass:];
}

id objc_msgSend__forceInboxButtonCreationIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _forceInboxButtonCreationIfNeeded];
}

id objc_msgSend__forceLayoutIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _forceLayoutIfNeeded];
}

id objc_msgSend__forceReloadImagesForDayTypeBadges(void *a1, const char *a2, ...)
{
  return _[a1 _forceReloadImagesForDayTypeBadges];
}

id objc_msgSend__forceUpdateCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_forceUpdateCell:");
}

id objc_msgSend__frameForOccurrenceBlock_index_yPos_padding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_frameForOccurrenceBlock:index:yPos:padding:");
}

id objc_msgSend__frameForStartColumn_endColumn_dayRow_occurrenceRow_numRows_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_frameForStartColumn:endColumn:dayRow:occurrenceRow:numRows:");
}

id objc_msgSend__frameForWeek_(void *a1, const char *a2, ...)
{
  return [a1 _frameForWeek:];
}

id objc_msgSend__fromString(void *a1, const char *a2, ...)
{
  return _[a1 _fromString];
}

id objc_msgSend__generateFormatStringsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _generateFormatStringsIfNeeded];
}

id objc_msgSend__generateImageForString_isWeekend_underlineThickness_fontSize_style_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateImageForString:isWeekend:underlineThickness:fontSize:style:");
}

id objc_msgSend__generateImageWithString_color_fontSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateImageWithString:color:fontSize:");
}

id objc_msgSend__generateWeekDayInitialsHeaderViewWithHorizontalSizeClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateWeekDayInitialsHeaderViewWithHorizontalSizeClass:");
}

id objc_msgSend__getEvent(void *a1, const char *a2, ...)
{
  return _[a1 _getEvent];
}

id objc_msgSend__getMonthViewMonthContainingDate_hideMonthLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getMonthViewMonthContainingDate:hideMonthLabel:");
}

id objc_msgSend__getSortedBlocksFromOccurrenceBlocks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getSortedBlocksFromOccurrenceBlocks:");
}

id objc_msgSend__gridOfDaysHeightAdjustment(void *a1, const char *a2, ...)
{
  return _[a1 _gridOfDaysHeightAdjustment];
}

id objc_msgSend__gridOfDaysYAdjustment(void *a1, const char *a2, ...)
{
  return _[a1 _gridOfDaysYAdjustment];
}

id objc_msgSend__groupForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_groupForIndexPath:");
}

id objc_msgSend__groupForSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_groupForSection:");
}

id objc_msgSend__haltAnimations(void *a1, const char *a2, ...)
{
  return _[a1 _haltAnimations];
}

id objc_msgSend__hasPaddingRow(void *a1, const char *a2, ...)
{
  return _[a1 _hasPaddingRow];
}

id objc_msgSend__headerBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 _headerBackgroundColor];
}

id objc_msgSend__headerEligibleForCalendarDate_(void *a1, const char *a2, ...)
{
  return [a1 _headerEligibleForCalendarDate:];
}

id objc_msgSend__headerFontForNumberOfMonthsPerRow_windowSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_headerFontForNumberOfMonthsPerRow:windowSize:");
}

id objc_msgSend__headerFontSizeForNumberOfMonthsPerRow_windowSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_headerFontSizeForNumberOfMonthsPerRow:windowSize:");
}

id objc_msgSend__heightForNumberOfMonthsPerRow_windowSize_heightSizeClass_(void *a1, const char *a2, ...)
{
  return [a1 _heightForNumberOfMonthsPerRow:windowSize:heightSizeClass:];
}

id objc_msgSend__heightForViewWithVisibleHeader_windowSize_heightSizeClass_orientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_heightForViewWithVisibleHeader:windowSize:heightSizeClass:orientation:");
}

id objc_msgSend__heightForWeekdayLabelsForSizeClass_(void *a1, const char *a2, ...)
{
  return [a1 _heightForWeekdayLabelsForSizeClass:];
}

id objc_msgSend__hidePressHighlightWithFadeDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hidePressHighlightWithFadeDuration:");
}

id objc_msgSend__hideSearchBar(void *a1, const char *a2, ...)
{
  return _[a1 _hideSearchBar];
}

id objc_msgSend__higherScopeCompactCalendarViewControllerRelativeTo_(void *a1, const char *a2, ...)
{
  return [a1 _higherScopeCompactCalendarViewControllerRelativeTo:];
}

id objc_msgSend__highlightEvent_dayViewDate_isAllDay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_highlightEvent:dayViewDate:isAllDay:");
}

id objc_msgSend__horizontalVelocity(void *a1, const char *a2, ...)
{
  return _[a1 _horizontalVelocity];
}

id objc_msgSend__ignoreSelectedOccurrencesChangedNotification_(void *a1, const char *a2, ...)
{
  return [a1 _ignoreSelectedOccurrencesChangedNotification:];
}

id objc_msgSend__inboxTitleForNotificationCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_inboxTitleForNotificationCount:");
}

id objc_msgSend__indexForDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_indexForDate:");
}

id objc_msgSend__indexOfCellToScrollToForDateAndBuildIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_indexOfCellToScrollToForDateAndBuildIfNeeded:");
}

id objc_msgSend__indexPathForDate_(void *a1, const char *a2, ...)
{
  return [a1 _indexPathForDate:];
}

id objc_msgSend__initActionIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 _initActionIdentifiers];
}

id objc_msgSend__initializeAndPushListView(void *a1, const char *a2, ...)
{
  return _[a1 _initializeAndPushListView];
}

id objc_msgSend__initializeBackground(void *a1, const char *a2, ...)
{
  return _[a1 _initializeBackground];
}

id objc_msgSend__initializeCalendarsButton(void *a1, const char *a2, ...)
{
  return _[a1 _initializeCalendarsButton];
}

id objc_msgSend__initializeDaySummaries(void *a1, const char *a2, ...)
{
  return _[a1 _initializeDaySummaries];
}

id objc_msgSend__initializeDays(void *a1, const char *a2, ...)
{
  return _[a1 _initializeDays];
}

id objc_msgSend__initializeGrayLine(void *a1, const char *a2, ...)
{
  return _[a1 _initializeGrayLine];
}

id objc_msgSend__initializeHeaderView(void *a1, const char *a2, ...)
{
  return _[a1 _initializeHeaderView];
}

id objc_msgSend__initializeMonthNameLabel(void *a1, const char *a2, ...)
{
  return _[a1 _initializeMonthNameLabel];
}

id objc_msgSend__initializeMonthViews(void *a1, const char *a2, ...)
{
  return _[a1 _initializeMonthViews];
}

id objc_msgSend__initializeThinLine(void *a1, const char *a2, ...)
{
  return _[a1 _initializeThinLine];
}

id objc_msgSend__interpolatedValueForSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_interpolatedValueForSize:");
}

id objc_msgSend__invalidateMarkerTimer(void *a1, const char *a2, ...)
{
  return _[a1 _invalidateMarkerTimer];
}

id objc_msgSend__invalidateNavBarDateStringCache(void *a1, const char *a2, ...)
{
  return _[a1 _invalidateNavBarDateStringCache];
}

id objc_msgSend__invalidateUpdateTimer(void *a1, const char *a2, ...)
{
  return _[a1 _invalidateUpdateTimer];
}

id objc_msgSend__invitedByString(void *a1, const char *a2, ...)
{
  return _[a1 _invitedByString];
}

id objc_msgSend__isAddEventPopoverDisplayed(void *a1, const char *a2, ...)
{
  return _[a1 _isAddEventPopoverDisplayed];
}

id objc_msgSend__isAnyWindowShowingDelegateCalendar(void *a1, const char *a2, ...)
{
  return _[a1 _isAnyWindowShowingDelegateCalendar];
}

id objc_msgSend__isCarScreen(void *a1, const char *a2, ...)
{
  return _[a1 _isCarScreen];
}

id objc_msgSend__isCollapsed(void *a1, const char *a2, ...)
{
  return _[a1 _isCollapsed];
}

id objc_msgSend__isCurrentlyDraggingEvent(void *a1, const char *a2, ...)
{
  return _[a1 _isCurrentlyDraggingEvent];
}

id objc_msgSend__isDateWeekend_(void *a1, const char *a2, ...)
{
  return [a1 _isDateWeekend:];
}

id objc_msgSend__isLeadingEdgeToday(void *a1, const char *a2, ...)
{
  return _[a1 _isLeadingEdgeToday];
}

id objc_msgSend__isTextEditingInProgress(void *a1, const char *a2, ...)
{
  return _[a1 _isTextEditingInProgress];
}

id objc_msgSend__isThisTheOnlyConnectedScene(void *a1, const char *a2, ...)
{
  return _[a1 _isThisTheOnlyConnectedScene];
}

id objc_msgSend__isTodayCircleFrameFullyUnobstructed(void *a1, const char *a2, ...)
{
  return _[a1 _isTodayCircleFrameFullyUnobstructed];
}

id objc_msgSend__isTransitioningTraitCollection(void *a1, const char *a2, ...)
{
  return _[a1 _isTransitioningTraitCollection];
}

id objc_msgSend__isUserActivityForStateRestoration_(void *a1, const char *a2, ...)
{
  return [a1 _isUserActivityForStateRestoration:];
}

id objc_msgSend__isVisible(void *a1, const char *a2, ...)
{
  return _[a1 _isVisible];
}

id objc_msgSend__isWindowSizeFullscreen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isWindowSizeFullscreen:");
}

id objc_msgSend__itemForIndexPath_cache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_itemForIndexPath:cache:");
}

id objc_msgSend__labelFont(void *a1, const char *a2, ...)
{
  return _[a1 _labelFont];
}

id objc_msgSend__lastViewOnScreen(void *a1, const char *a2, ...)
{
  return _[a1 _lastViewOnScreen];
}

id objc_msgSend__lastVisibleIndex(void *a1, const char *a2, ...)
{
  return _[a1 _lastVisibleIndex];
}

id objc_msgSend__latestDateComponents(void *a1, const char *a2, ...)
{
  return _[a1 _latestDateComponents];
}

id objc_msgSend__latestVisibleWeekGroupView(void *a1, const char *a2, ...)
{
  return _[a1 _latestVisibleWeekGroupView];
}

id objc_msgSend__latestWeekGroup(void *a1, const char *a2, ...)
{
  return _[a1 _latestWeekGroup];
}

id objc_msgSend__launchTestName(void *a1, const char *a2, ...)
{
  return _[a1 _launchTestName];
}

id objc_msgSend__layOutSplitDividerFrame(void *a1, const char *a2, ...)
{
  return _[a1 _layOutSplitDividerFrame];
}

id objc_msgSend__layoutCells(void *a1, const char *a2, ...)
{
  return _[a1 _layoutCells];
}

id objc_msgSend__layoutDayArea(void *a1, const char *a2, ...)
{
  return _[a1 _layoutDayArea];
}

id objc_msgSend__layoutDayInitialsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_layoutDayInitialsView:");
}

id objc_msgSend__layoutDayNumberCells(void *a1, const char *a2, ...)
{
  return _[a1 _layoutDayNumberCells];
}

id objc_msgSend__layoutDayTypeBadgeForDayNumber_yOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_layoutDayTypeBadgeForDayNumber:yOffset:");
}

id objc_msgSend__layoutDayViewPane(void *a1, const char *a2, ...)
{
  return _[a1 _layoutDayViewPane];
}

id objc_msgSend__layoutForSplitViews(void *a1, const char *a2, ...)
{
  return _[a1 _layoutForSplitViews];
}

id objc_msgSend__layoutGridlinesAndBackgrounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_layoutGridlinesAndBackgrounds:");
}

id objc_msgSend__layoutInitialSubviews(void *a1, const char *a2, ...)
{
  return _[a1 _layoutInitialSubviews];
}

id objc_msgSend__layoutOverlayLegend(void *a1, const char *a2, ...)
{
  return _[a1 _layoutOverlayLegend];
}

id objc_msgSend__layoutSingleOccurrence_index_numRows_drawTimeString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_layoutSingleOccurrence:index:numRows:drawTimeString:");
}

id objc_msgSend__layoutThinLine(void *a1, const char *a2, ...)
{
  return _[a1 _layoutThinLine];
}

id objc_msgSend__layoutVerticalDaySeparators(void *a1, const char *a2, ...)
{
  return _[a1 _layoutVerticalDaySeparators];
}

id objc_msgSend__layoutYearNumber(void *a1, const char *a2, ...)
{
  return _[a1 _layoutYearNumber];
}

id objc_msgSend__leftButton(void *a1, const char *a2, ...)
{
  return _[a1 _leftButton];
}

id objc_msgSend__leftDateFormatter(void *a1, const char *a2, ...)
{
  return _[a1 _leftDateFormatter];
}

id objc_msgSend__leftMarginWithOriginalValue_(void *a1, const char *a2, ...)
{
  return [a1 _leftMarginWithOriginalValue:];
}

id objc_msgSend__legacy_drawInRect_withFont_lineBreakMode_alignment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_legacy_drawInRect:withFont:lineBreakMode:alignment:");
}

id objc_msgSend__listViewShowsSingleDay(void *a1, const char *a2, ...)
{
  return _[a1 _listViewShowsSingleDay];
}

id objc_msgSend__listViewSwitchBarButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 _listViewSwitchBarButtonItem];
}

id objc_msgSend__listviewColumnCollapsedWidth(void *a1, const char *a2, ...)
{
  return _[a1 _listviewColumnCollapsedWidth];
}

id objc_msgSend__loadAndShowAppropriateContentView(void *a1, const char *a2, ...)
{
  return _[a1 _loadAndShowAppropriateContentView];
}

id objc_msgSend__loadCircleIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _loadCircleIfNeeded];
}

id objc_msgSend__loadCircledNumberIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _loadCircledNumberIfNeeded];
}

id objc_msgSend__loadCircledOverlayIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _loadCircledOverlayIfNeeded];
}

id objc_msgSend__loadEventDataForMonthWeekView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadEventDataForMonthWeekView:");
}

id objc_msgSend__loadEventsForAllSubviews(void *a1, const char *a2, ...)
{
  return _[a1 _loadEventsForAllSubviews];
}

id objc_msgSend__loadEventsForStartDate_endDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadEventsForStartDate:endDate:");
}

id objc_msgSend__loadEventsForViewsInRangeStartingAt_endingAt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadEventsForViewsInRangeStartingAt:endingAt:");
}

id objc_msgSend__loadMonthAnimationStateBadgeIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _loadMonthAnimationStateBadgeIfNeeded];
}

id objc_msgSend__loadMonthAnimationStateOverlayIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _loadMonthAnimationStateOverlayIfNeeded];
}

id objc_msgSend__loadOverlayIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _loadOverlayIfNeeded];
}

id objc_msgSend__loadPressIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _loadPressIfNeeded];
}

id objc_msgSend__loadUnderlineIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _loadUnderlineIfNeeded];
}

id objc_msgSend__loadedBufferViewsLeft(void *a1, const char *a2, ...)
{
  return _[a1 _loadedBufferViewsLeft];
}

id objc_msgSend__loadedBufferViewsRight(void *a1, const char *a2, ...)
{
  return _[a1 _loadedBufferViewsRight];
}

id objc_msgSend__locationString(void *a1, const char *a2, ...)
{
  return _[a1 _locationString];
}

id objc_msgSend__mainFrameForEvent_atLastPosition_atPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mainFrameForEvent:atLastPosition:atPoint:");
}

id objc_msgSend__mainLoop(void *a1, const char *a2, ...)
{
  return _[a1 _mainLoop];
}

id objc_msgSend__maxHeightOfTableView(void *a1, const char *a2, ...)
{
  return _[a1 _maxHeightOfTableView];
}

id objc_msgSend__meContact(void *a1, const char *a2, ...)
{
  return _[a1 _meContact];
}

id objc_msgSend__monthFrameForMonthAfter_anchorMonth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_monthFrameForMonthAfter:anchorMonth:");
}

id objc_msgSend__monthFrameForMonthBefore_anchorMonth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_monthFrameForMonthBefore:anchorMonth:");
}

id objc_msgSend__monthHeaderHeight(void *a1, const char *a2, ...)
{
  return _[a1 _monthHeaderHeight];
}

id objc_msgSend__monthLabelColumnIndex(void *a1, const char *a2, ...)
{
  return _[a1 _monthLabelColumnIndex];
}

id objc_msgSend__monthOccurrenceAtPoint_(void *a1, const char *a2, ...)
{
  return [a1 _monthOccurrenceAtPoint:];
}

id objc_msgSend__monthWeekViewsUseVerticalCompression(void *a1, const char *a2, ...)
{
  return _[a1 _monthWeekViewsUseVerticalCompression];
}

id objc_msgSend__monthsPerRowForWindowSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_monthsPerRowForWindowSize:");
}

id objc_msgSend__navBarDateStringFromDate_includingMonth_includingYear_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navBarDateStringFromDate:includingMonth:includingYear:format:");
}

id objc_msgSend__navBarStringYearFontForTraitCollection_useSmallerSize_bold_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navBarStringYearFontForTraitCollection:useSmallerSize:bold:");
}

id objc_msgSend__nearestValueForSize_(void *a1, const char *a2, ...)
{
  return [a1 _nearestValueForSize:];
}

id objc_msgSend__newEvent(void *a1, const char *a2, ...)
{
  return _[a1 _newEvent];
}

id objc_msgSend__nodeContainsViewControllersRequiringTeardown_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_nodeContainsViewControllersRequiringTeardown:");
}

id objc_msgSend__normalFont(void *a1, const char *a2, ...)
{
  return _[a1 _normalFont];
}

id objc_msgSend__notificationForIndexPath_cache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notificationForIndexPath:cache:");
}

id objc_msgSend__notificationIsCancelled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notificationIsCancelled:");
}

id objc_msgSend__notificationIsInvite_(void *a1, const char *a2, ...)
{
  return [a1 _notificationIsInvite:];
}

id objc_msgSend__now(void *a1, const char *a2, ...)
{
  return _[a1 _now];
}

id objc_msgSend__numberFrameForDayIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_numberFrameForDayIndex:");
}

id objc_msgSend__numberOfDaysSortDescriptor(void *a1, const char *a2, ...)
{
  return _[a1 _numberOfDaysSortDescriptor];
}

id objc_msgSend__numberOfWeeksInSelectedMonth(void *a1, const char *a2, ...)
{
  return _[a1 _numberOfWeeksInSelectedMonth];
}

id objc_msgSend__occurrenceHeight(void *a1, const char *a2, ...)
{
  return _[a1 _occurrenceHeight];
}

id objc_msgSend__occurrencePadding(void *a1, const char *a2, ...)
{
  return _[a1 _occurrencePadding];
}

id objc_msgSend__occurrenceViewForEventOccurrence_(void *a1, const char *a2, ...)
{
  return [a1 _occurrenceViewForEventOccurrence:];
}

id objc_msgSend__occurrenceViewForPopoverSource(void *a1, const char *a2, ...)
{
  return _[a1 _occurrenceViewForPopoverSource];
}

id objc_msgSend__offsetAllViews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_offsetAllViews:");
}

id objc_msgSend__offsetForDotInFrame_withDot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_offsetForDotInFrame:withDot:");
}

id objc_msgSend__offsetNumberOfWeeksFromSelectedMonthForBottomVisibleMonth(void *a1, const char *a2, ...)
{
  return _[a1 _offsetNumberOfWeeksFromSelectedMonthForBottomVisibleMonth];
}

id objc_msgSend__offsetNumberOfWeeksFromSelectedMonthForTopVisibleMonth(void *a1, const char *a2, ...)
{
  return _[a1 _offsetNumberOfWeeksFromSelectedMonthForTopVisibleMonth];
}

id objc_msgSend__opaqueWeekendBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 _opaqueWeekendBackgroundColor];
}

id objc_msgSend__openURL_(void *a1, const char *a2, ...)
{
  return [a1 _openURL:];
}

id objc_msgSend__organizerString(void *a1, const char *a2, ...)
{
  return _[a1 _organizerString];
}

id objc_msgSend__orientationForSize_(void *a1, const char *a2, ...)
{
  return [a1 _orientationForSize:];
}

id objc_msgSend__overlayFont(void *a1, const char *a2, ...)
{
  return _[a1 _overlayFont];
}

id objc_msgSend__overlayFontSize(void *a1, const char *a2, ...)
{
  return _[a1 _overlayFontSize];
}

id objc_msgSend__pageDecelerationTarget(void *a1, const char *a2, ...)
{
  return _[a1 _pageDecelerationTarget];
}

id objc_msgSend__paletteView(void *a1, const char *a2, ...)
{
  return _[a1 _paletteView];
}

id objc_msgSend__parentViewForCreationGesture(void *a1, const char *a2, ...)
{
  return _[a1 _parentViewForCreationGesture];
}

id objc_msgSend__parentViewForCreationGesturePreview(void *a1, const char *a2, ...)
{
  return _[a1 _parentViewForCreationGesturePreview];
}

id objc_msgSend__performAction_forEventInvitationNotification_avoidUserInteraction_cancelled_cell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performAction:forEventInvitationNotification:avoidUserInteraction:cancelled:cell:");
}

id objc_msgSend__performAction_forSuggestionNotification_save_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performAction:forSuggestionNotification:save:");
}

id objc_msgSend__performActionForAllNotifications_save_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performActionForAllNotifications:save:");
}

id objc_msgSend__performActionForAttendeeReplyNotification_save_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performActionForAttendeeReplyNotification:save:");
}

id objc_msgSend__performActionForInviteReplayNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performActionForInviteReplayNotification:");
}

id objc_msgSend__performActionForResourceChangeNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performActionForResourceChangeNotification:");
}

id objc_msgSend__performCustomRotationAnimationForMainWindowWithTransitionCoordinator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performCustomRotationAnimationForMainWindowWithTransitionCoordinator:");
}

id objc_msgSend__performScrollTest_iterations_delta_length_scrollAxis_extraResultsBlock_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performScrollTest:iterations:delta:length:scrollAxis:extraResultsBlock:completionBlock:");
}

id objc_msgSend__persistActiveViewModeSettingToPreferences(void *a1, const char *a2, ...)
{
  return _[a1 _persistActiveViewModeSettingToPreferences];
}

id objc_msgSend__pointForDotInFrame_withDot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pointForDotInFrame:withDot:");
}

id objc_msgSend__popToViewControllerSatisfying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_popToViewControllerSatisfying:");
}

id objc_msgSend__popoverPresentationOperationInQueue(void *a1, const char *a2, ...)
{
  return _[a1 _popoverPresentationOperationInQueue];
}

id objc_msgSend__positionOfSecond_(void *a1, const char *a2, ...)
{
  return [a1 _positionOfSecond:];
}

id objc_msgSend__preferredFontForTextStyle_maximumContentSizeCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preferredFontForTextStyle:maximumContentSizeCategory:");
}

id objc_msgSend__preferredPostTransitionViewFromTraitCollection_toTraitCollection_currentViewType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preferredPostTransitionViewFromTraitCollection:toTraitCollection:currentViewType:");
}

id objc_msgSend__presentAdaptiveModalPopoverViewController_relativeToBarButtonItem_permittedArrowDirections_contentSize_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentAdaptiveModalPopoverViewController:relativeToBarButtonItem:permittedArrowDirections:contentSize:animated:completion:");
}

id objc_msgSend__presentAdaptiveModalViewController_withPresentationStyleOverride_relativeToBarButtonItem_withSourceView_sourceRect_permittedArrowDirections_contentSize_passThroughViews_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentAdaptiveModalViewController:withPresentationStyleOverride:relativeToBarButtonItem:withSourceView:sourceRect:permittedArrowDirections:contentSize:passThroughViews:animated:completion:");
}

id objc_msgSend__presentDetailViewControllerAsPageSheet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentDetailViewControllerAsPageSheet:");
}

id objc_msgSend__presentEventViewController_forOccurrenceView_animated_showComments_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentEventViewController:forOccurrenceView:animated:showComments:");
}

id objc_msgSend__presentEventViewController_forOccurrenceView_animated_showComments_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentEventViewController:forOccurrenceView:animated:showComments:completion:");
}

id objc_msgSend__presentSelfOnModalPresentationDelegateAnimated_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentSelfOnModalPresentationDelegateAnimated:withCompletionHandler:");
}

id objc_msgSend__presentationControllerDidDismissPopover_cleanSelectionState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentationControllerDidDismissPopover:cleanSelectionState:");
}

id objc_msgSend__presentedEditor(void *a1, const char *a2, ...)
{
  return _[a1 _presentedEditor];
}

id objc_msgSend__pressColor(void *a1, const char *a2, ...)
{
  return _[a1 _pressColor];
}

id objc_msgSend__processEventData(void *a1, const char *a2, ...)
{
  return _[a1 _processEventData];
}

id objc_msgSend__processScrollingMessagesOnEveryFrameFromListViewController(void *a1, const char *a2, ...)
{
  return _[a1 _processScrollingMessagesOnEveryFrameFromListViewController];
}

id objc_msgSend__purgeCachedOccurrence_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_purgeCachedOccurrence:");
}

id objc_msgSend__pushDetailViewControllerForEvent_animated_showComments_proposedTimeAttendee_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pushDetailViewControllerForEvent:animated:showComments:proposedTimeAttendee:");
}

id objc_msgSend__pushMonthViewControllerWithDate_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pushMonthViewControllerWithDate:animated:");
}

id objc_msgSend__rangeEnd(void *a1, const char *a2, ...)
{
  return _[a1 _rangeEnd];
}

id objc_msgSend__rangeForFirstSequenceOfDCharacters_(void *a1, const char *a2, ...)
{
  return [a1 _rangeForFirstSequenceOfDCharacters:];
}

id objc_msgSend__rangeStart(void *a1, const char *a2, ...)
{
  return _[a1 _rangeStart];
}

id objc_msgSend__rePresentEditPopoverFromTargetView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_rePresentEditPopoverFromTargetView:");
}

id objc_msgSend__realTest(void *a1, const char *a2, ...)
{
  return _[a1 _realTest];
}

id objc_msgSend__rebuildDayNumberLabels(void *a1, const char *a2, ...)
{
  return _[a1 _rebuildDayNumberLabels];
}

id objc_msgSend__rebuildOverlayLabels(void *a1, const char *a2, ...)
{
  return _[a1 _rebuildOverlayLabels];
}

id objc_msgSend__recenterContentIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _recenterContentIfNeeded];
}

id objc_msgSend__recursiveRemoveSelectedClonedViewsFromViewTree_skipSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recursiveRemoveSelectedClonedViewsFromViewTree:skipSet:");
}

id objc_msgSend__refreshIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _refreshIfNeeded];
}

id objc_msgSend__refreshListView(void *a1, const char *a2, ...)
{
  return _[a1 _refreshListView];
}

id objc_msgSend__refreshTodayView(void *a1, const char *a2, ...)
{
  return _[a1 _refreshTodayView];
}

id objc_msgSend__refreshView(void *a1, const char *a2, ...)
{
  return _[a1 _refreshView];
}

id objc_msgSend__registerGestureRecognizers(void *a1, const char *a2, ...)
{
  return _[a1 _registerGestureRecognizers];
}

id objc_msgSend__reloadAllViews(void *a1, const char *a2, ...)
{
  return _[a1 _reloadAllViews];
}

id objc_msgSend__reloadAllViewsForContentSizeCategoryChange(void *a1, const char *a2, ...)
{
  return _[a1 _reloadAllViewsForContentSizeCategoryChange];
}

id objc_msgSend__reloadAllViewsWithDate_(void *a1, const char *a2, ...)
{
  return [a1 _reloadAllViewsWithDate:];
}

id objc_msgSend__reloadDataIfVisible(void *a1, const char *a2, ...)
{
  return _[a1 _reloadDataIfVisible];
}

id objc_msgSend__reloadHeaderView(void *a1, const char *a2, ...)
{
  return _[a1 _reloadHeaderView];
}

id objc_msgSend__reloadMonthNameLabel(void *a1, const char *a2, ...)
{
  return _[a1 _reloadMonthNameLabel];
}

id objc_msgSend__reloadMonthViews(void *a1, const char *a2, ...)
{
  return _[a1 _reloadMonthViews];
}

id objc_msgSend__reloadOccurrenceData(void *a1, const char *a2, ...)
{
  return _[a1 _reloadOccurrenceData];
}

id objc_msgSend__reloadTableViewAndScrollIfNeededWithForceScroll_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reloadTableViewAndScrollIfNeededWithForceScroll:");
}

id objc_msgSend__reloadYearNumberLabel(void *a1, const char *a2, ...)
{
  return _[a1 _reloadYearNumberLabel];
}

id objc_msgSend__removeAllAnimations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeAllAnimations:");
}

id objc_msgSend__removeAnimatedGridComponents(void *a1, const char *a2, ...)
{
  return _[a1 _removeAnimatedGridComponents];
}

id objc_msgSend__removeBottomView(void *a1, const char *a2, ...)
{
  return _[a1 _removeBottomView];
}

id objc_msgSend__removeChildViewControllerForCurrentTraits(void *a1, const char *a2, ...)
{
  return _[a1 _removeChildViewControllerForCurrentTraits];
}

id objc_msgSend__removeColorBarConstraintsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _removeColorBarConstraintsIfNeeded];
}

id objc_msgSend__removeCommentPromptRelatedConstraintsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _removeCommentPromptRelatedConstraintsIfNeeded];
}

id objc_msgSend__removeDateHighlight(void *a1, const char *a2, ...)
{
  return _[a1 _removeDateHighlight];
}

id objc_msgSend__removeDisclosureConstraintsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _removeDisclosureConstraintsIfNeeded];
}

id objc_msgSend__removeLabelRelatedConstraintsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _removeLabelRelatedConstraintsIfNeeded];
}

id objc_msgSend__removeMonthHighlight(void *a1, const char *a2, ...)
{
  return _[a1 _removeMonthHighlight];
}

id objc_msgSend__removeOverlayLegend(void *a1, const char *a2, ...)
{
  return _[a1 _removeOverlayLegend];
}

id objc_msgSend__removeTopView(void *a1, const char *a2, ...)
{
  return _[a1 _removeTopView];
}

id objc_msgSend__replayJournal_withRootVC_topMainVC_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_replayJournal:withRootVC:topMainVC:");
}

id objc_msgSend__resetPaletteState(void *a1, const char *a2, ...)
{
  return _[a1 _resetPaletteState];
}

id objc_msgSend__resetSelectionForDividedListState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resetSelectionForDividedListState:");
}

id objc_msgSend__resetSplitView(void *a1, const char *a2, ...)
{
  return _[a1 _resetSplitView];
}

id objc_msgSend__resizeInterfaceForWindowSize_(void *a1, const char *a2, ...)
{
  return [a1 _resizeInterfaceForWindowSize:];
}

id objc_msgSend__responseButtons(void *a1, const char *a2, ...)
{
  return _[a1 _responseButtons];
}

id objc_msgSend__restoreLastUsedCalendarViewType(void *a1, const char *a2, ...)
{
  return _[a1 _restoreLastUsedCalendarViewType];
}

id objc_msgSend__restoreModelPersistedStateFromUserActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_restoreModelPersistedStateFromUserActivity:");
}

id objc_msgSend__restoreSelectedCalendarsFromPreferenceIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _restoreSelectedCalendarsFromPreferenceIfNeeded];
}

id objc_msgSend__restoreStateFromUserActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_restoreStateFromUserActivity:");
}

id objc_msgSend__resumeToTodayTimeout(void *a1, const char *a2, ...)
{
  return _[a1 _resumeToTodayTimeout];
}

id objc_msgSend__reusableOccurrenceTableViewCellForEvent_underDate_inTableView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reusableOccurrenceTableViewCellForEvent:underDate:inTableView:");
}

id objc_msgSend__reuseWeekView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reuseWeekView:");
}

id objc_msgSend__rightDateFormatter(void *a1, const char *a2, ...)
{
  return _[a1 _rightDateFormatter];
}

id objc_msgSend__rightMarginWithOriginalValue_(void *a1, const char *a2, ...)
{
  return [a1 _rightMarginWithOriginalValue:];
}

id objc_msgSend__romanNumeralFromInt_(void *a1, const char *a2, ...)
{
  return [a1 _romanNumeralFromInt:];
}

id objc_msgSend__rootNavigationControllerForModel_(void *a1, const char *a2, ...)
{
  return [a1 _rootNavigationControllerForModel:];
}

id objc_msgSend__rootViewControllerForCarScene(void *a1, const char *a2, ...)
{
  return _[a1 _rootViewControllerForCarScene];
}

id objc_msgSend__rootViewControllerForModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_rootViewControllerForModel:");
}

id objc_msgSend__roundValue_(void *a1, const char *a2, ...)
{
  return [a1 _roundValue:];
}

id objc_msgSend__roundedRectFrameWithDayFrame_dayLayerFrame_numberString_overlayString_compressed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_roundedRectFrameWithDayFrame:dayLayerFrame:numberString:overlayString:compressed:");
}

id objc_msgSend__roundedRectOriginForDayLayerFrame_roundedRectSize_withOverlay_compressed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_roundedRectOriginForDayLayerFrame:roundedRectSize:withOverlay:compressed:");
}

id objc_msgSend__rowDrawsBackground_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_rowDrawsBackground:");
}

id objc_msgSend__saveDraggedEventWithSpan_(void *a1, const char *a2, ...)
{
  return [a1 _saveDraggedEventWithSpan:];
}

id objc_msgSend__saveFilterAndNotifyWithReason_(void *a1, const char *a2, ...)
{
  return [a1 _saveFilterAndNotifyWithReason:];
}

id objc_msgSend__saveStatus_forEventInvitationNotification_commit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_saveStatus:forEventInvitationNotification:commit:");
}

id objc_msgSend__saveStatus_forItemAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_saveStatus:forItemAtIndexPath:");
}

id objc_msgSend__scaledValueForValue_(void *a1, const char *a2, ...)
{
  return [a1 _scaledValueForValue:];
}

id objc_msgSend__sceneIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 _sceneIdentifier];
}

id objc_msgSend__scrollEventIntoViewAndRequestPresentPopoverForEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scrollEventIntoViewAndRequestPresentPopoverForEvent:");
}

id objc_msgSend__scrollListToNewSelectedDateAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scrollListToNewSelectedDateAnimated:");
}

id objc_msgSend__scrollToEvent_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scrollToEvent:animated:");
}

id objc_msgSend__scrollToSecond_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scrollToSecond:animated:completion:");
}

id objc_msgSend__scrollToWeekView_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scrollToWeekView:animated:completion:");
}

id objc_msgSend__scrollTypeFromOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scrollTypeFromOptions:");
}

id objc_msgSend__scrollViewVerticalVelocity(void *a1, const char *a2, ...)
{
  return _[a1 _scrollViewVerticalVelocity];
}

id objc_msgSend__scrubAtPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scrubAtPoint:");
}

id objc_msgSend__scrubWithTouches_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scrubWithTouches:");
}

id objc_msgSend__searchBar_proposedSearchFieldFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_searchBar:proposedSearchFieldFrame:");
}

id objc_msgSend__secondAtPosition_(void *a1, const char *a2, ...)
{
  return [a1 _secondAtPosition:];
}

id objc_msgSend__selectEvent_animated_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_selectEvent:animated:context:");
}

id objc_msgSend__selectEvents_animated_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_selectEvents:animated:context:");
}

id objc_msgSend__selectEvents_updatingModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_selectEvents:updatingModel:");
}

id objc_msgSend__selectOccurrenceView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_selectOccurrenceView:");
}

id objc_msgSend__selectOccurrenceView_updatingModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_selectOccurrenceView:updatingModel:");
}

id objc_msgSend__selectRowAtIndexPath_animated_scrollPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_selectRowAtIndexPath:animated:scrollPosition:");
}

id objc_msgSend__selectTodayForMainViewControllerContainer_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_selectTodayForMainViewControllerContainer:animated:");
}

id objc_msgSend__selectedCalendars(void *a1, const char *a2, ...)
{
  return _[a1 _selectedCalendars];
}

id objc_msgSend__selectedCell(void *a1, const char *a2, ...)
{
  return _[a1 _selectedCell];
}

id objc_msgSend__selectedDateAsCalendarDate(void *a1, const char *a2, ...)
{
  return _[a1 _selectedDateAsCalendarDate];
}

id objc_msgSend__selectedDateChangedToDate_(void *a1, const char *a2, ...)
{
  return [a1 _selectedDateChangedToDate:];
}

id objc_msgSend__selectedDateIsVisible(void *a1, const char *a2, ...)
{
  return _[a1 _selectedDateIsVisible];
}

id objc_msgSend__selectedOccurrenceFrontmostClonedViews(void *a1, const char *a2, ...)
{
  return _[a1 _selectedOccurrenceFrontmostClonedViews];
}

id objc_msgSend__selectedOccurrenceViews(void *a1, const char *a2, ...)
{
  return _[a1 _selectedOccurrenceViews];
}

id objc_msgSend__setAdditionalSelectionInsets_(void *a1, const char *a2, ...)
{
  return [a1 _setAdditionalSelectionInsets:];
}

id objc_msgSend__setAllowsInteractivePop_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAllowsInteractivePop:");
}

id objc_msgSend__setAlwaysAllowPopoverPresentations_(void *a1, const char *a2, ...)
{
  return [a1 _setAlwaysAllowPopoverPresentations];
}

id objc_msgSend__setAnyCalendarsHiddenByFocus_forceUpdate_(void *a1, const char *a2, ...)
{
  return [_a1 _setAnyCalendarsHiddenByFocus:forceUpdate:];
}

id objc_msgSend__setAutoDisableCancelButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAutoDisableCancelButton:");
}

id objc_msgSend__setAutoScrollEdgeTransitionDistance_(void *a1, const char *a2, ...)
{
  return [a1 _setAutoScrollEdgeTransitionDistance:];
}

id objc_msgSend__setAutoScrollEnabled_(void *a1, const char *a2, ...)
{
  return [a1 _setAutoScrollEnabled:];
}

id objc_msgSend__setBackdropStyle_(void *a1, const char *a2, ...)
{
  return [a1 _setBackdropStyle:];
}

id objc_msgSend__setBackgroundView_(void *a1, const char *a2, ...)
{
  return [_a1 _setBackgroundView:];
}

id objc_msgSend__setBottomPalette_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setBottomPalette:");
}

id objc_msgSend__setCell_highlight_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCell:highlight:animated:");
}

id objc_msgSend__setCell_toDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCell:toDate:");
}

id objc_msgSend__setClipUnderlapWhileTransitioning_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setClipUnderlapWhileTransitioning:");
}

id objc_msgSend__setContentInsets(void *a1, const char *a2, ...)
{
  return _[a1 _setContentInsets];
}

id objc_msgSend__setContentUnavailableConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 _setContentUnavailableConfiguration:];
}

id objc_msgSend__setCurrentDateLabelString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCurrentDateLabelString:");
}

id objc_msgSend__setCurrentTraitCollection_(void *a1, const char *a2, ...)
{
  return [a1 _setCurrentTraitCollection:];
}

id objc_msgSend__setDayViewToSplitViewVisibleState(void *a1, const char *a2, ...)
{
  return _[a1 _setDayViewToSplitViewVisibleState];
}

id objc_msgSend__setDoneButtonState(void *a1, const char *a2, ...)
{
  return _[a1 _setDoneButtonState];
}

id objc_msgSend__setEventTitleForTestingAutocomplete_(void *a1, const char *a2, ...)
{
  return [a1 _setEventTitleForTestingAutocomplete];
}

id objc_msgSend__setHeaderHeightForWeekGroupView_forceLayout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setHeaderHeightForWeekGroupView:forceLayout:");
}

id objc_msgSend__setHidesShadow_(void *a1, const char *a2, ...)
{
  return [a1 _setHidesShadow:];
}

id objc_msgSend__setHourHeightScale_(void *a1, const char *a2, ...)
{
  return [a1 _setHourHeightScale:];
}

id objc_msgSend__setIgnoreBarButtonItemSiblings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setIgnoreBarButtonItemSiblings:");
}

id objc_msgSend__setManagedNavigationControllerModalPresentationDelegates(void *a1, const char *a2, ...)
{
  return _[a1 _setManagedNavigationControllerModalPresentationDelegates];
}

id objc_msgSend__setManualScrollEdgeAppearanceEnabled_(void *a1, const char *a2, ...)
{
  return [a1 _setManualScrollEdgeAppearanceEnabled:];
}

id objc_msgSend__setManualScrollEdgeAppearanceProgress_(void *a1, const char *a2, ...)
{
  return [a1 _setManualScrollEdgeAppearanceProgress:];
}

id objc_msgSend__setMarginWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setMarginWidth:");
}

id objc_msgSend__setMenuProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setMenuProvider:");
}

id objc_msgSend__setMinimumDesiredHeight_forBarMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setMinimumDesiredHeight:forBarMetrics:");
}

id objc_msgSend__setModal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setModal:");
}

id objc_msgSend__setModelDateForLaunch_restoreLastViewedDateFromPreferenceIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setModelDateForLaunch:restoreLastViewedDateFromPreferenceIfNeeded:");
}

id objc_msgSend__setNavigationStackOfMainViewControllersForTraitsTransitionFromTraitCollection_toNewTraitCollection_withPreTransitionViewType_withPreferredPostTransitionViewType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setNavigationStackOfMainViewControllersForTraitsTransitionFromTraitCollection:toNewTraitCollection:withPreTransitionViewType:withPreferredPostTransitionViewType:");
}

id objc_msgSend__setNeedsHeaderUpdate(void *a1, const char *a2, ...)
{
  return _[a1 _setNeedsHeaderUpdate];
}

id objc_msgSend__setNeedsUpdateContentUnavailableConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 _setNeedsUpdateContentUnavailableConfiguration];
}

id objc_msgSend__setNeedsUserActivityUpdate(void *a1, const char *a2, ...)
{
  return _[a1 _setNeedsUserActivityUpdate];
}

id objc_msgSend__setOffscreenCellsHidden_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setOffscreenCellsHidden:animated:");
}

id objc_msgSend__setOverallWritingDirectionFollowsLayoutDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setOverallWritingDirectionFollowsLayoutDirection:");
}

id objc_msgSend__setPaletteDisplaced(void *a1, const char *a2, ...)
{
  return _[a1 _setPaletteDisplaced];
}

id objc_msgSend__setReduceLayoutProcessingForAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setReduceLayoutProcessingForAnimation:");
}

id objc_msgSend__setRefreshControl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setRefreshControl:");
}

id objc_msgSend__setSearchBarEnabledState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSearchBarEnabledState:");
}

id objc_msgSend__setSegmentWidthsForViewSwitcher_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSegmentWidthsForViewSwitcher:");
}

id objc_msgSend__setSelectedDay_onMonthWeekView_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSelectedDay:onMonthWeekView:animated:");
}

id objc_msgSend__setSelectedEvents_(void *a1, const char *a2, ...)
{
  return [_a1 _setSelectedEvents:];
}

id objc_msgSend__setShouldRespectPreferredContentSize_(void *a1, const char *a2, ...)
{
  return [a1 _setShouldRespectPreferredContentSize:];
}

id objc_msgSend__setSplitViewPosition(void *a1, const char *a2, ...)
{
  return _[a1 _setSplitViewPosition];
}

id objc_msgSend__setToDayStateAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setToDayStateAnimated:");
}

id objc_msgSend__setToMonthState(void *a1, const char *a2, ...)
{
  return _[a1 _setToMonthState];
}

id objc_msgSend__setToMonthStateAnimated_(void *a1, const char *a2, ...)
{
  return [a1 _setToMonthStateAnimated:];
}

id objc_msgSend__setToYearState(void *a1, const char *a2, ...)
{
  return _[a1 _setToYearState];
}

id objc_msgSend__setTopVisibleDateAsSelectedDate(void *a1, const char *a2, ...)
{
  return _[a1 _setTopVisibleDateAsSelectedDate];
}

id objc_msgSend__setTransformLayerRotationsAreEnabled_(void *a1, const char *a2, ...)
{
  return [a1 _setTransformLayerRotationsAreEnabled:];
}

id objc_msgSend__setUpCustomAppearances(void *a1, const char *a2, ...)
{
  return _[a1 _setUpCustomAppearances];
}

id objc_msgSend__setUpGesturesAndModalMode(void *a1, const char *a2, ...)
{
  return _[a1 _setUpGesturesAndModalMode];
}

id objc_msgSend__setUpInitialViewWithDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setUpInitialViewWithDate:");
}

id objc_msgSend__setUpInteraction(void *a1, const char *a2, ...)
{
  return _[a1 _setUpInteraction];
}

id objc_msgSend__setUpInteractions(void *a1, const char *a2, ...)
{
  return _[a1 _setUpInteractions];
}

id objc_msgSend__setUpModel(void *a1, const char *a2, ...)
{
  return _[a1 _setUpModel];
}

id objc_msgSend__setUpMonthViewInMonthViewFrame(void *a1, const char *a2, ...)
{
  return _[a1 _setUpMonthViewInMonthViewFrame];
}

id objc_msgSend__setUpSelectedCalendarsOnModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setUpSelectedCalendarsOnModel:");
}

id objc_msgSend__setUpSelectedOccurrenceViewsWithEvents_animated_autoScroll_resetSelection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setUpSelectedOccurrenceViewsWithEvents:animated:autoScroll:resetSelection:");
}

id objc_msgSend__setViewStatesForCachedEventCollection(void *a1, const char *a2, ...)
{
  return _[a1 _setViewStatesForCachedEventCollection];
}

id objc_msgSend__setupConstraints(void *a1, const char *a2, ...)
{
  return _[a1 _setupConstraints];
}

id objc_msgSend__setupDebugMenu_(void *a1, const char *a2, ...)
{
  return [a1 _setupDebugMenu:];
}

id objc_msgSend__setupListViewController(void *a1, const char *a2, ...)
{
  return _[a1 _setupListViewController];
}

id objc_msgSend__setupViewToDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupViewToDate:");
}

id objc_msgSend__sharedState(void *a1, const char *a2, ...)
{
  return _[a1 _sharedState];
}

id objc_msgSend__shouldAnimateDots(void *a1, const char *a2, ...)
{
  return _[a1 _shouldAnimateDots];
}

id objc_msgSend__shouldAnnotateAppEntitiesForDay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldAnnotateAppEntitiesForDay:");
}

id objc_msgSend__shouldCollapseAllDayEventsAccordingToPolicy(void *a1, const char *a2, ...)
{
  return _[a1 _shouldCollapseAllDayEventsAccordingToPolicy];
}

id objc_msgSend__shouldDisplayThreeColumns(void *a1, const char *a2, ...)
{
  return _[a1 _shouldDisplayThreeColumns];
}

id objc_msgSend__shouldDoExternalPresentationOfManagedNavigationController(void *a1, const char *a2, ...)
{
  return _[a1 _shouldDoExternalPresentationOfManagedNavigationController];
}

id objc_msgSend__shouldEnqueueDismissals(void *a1, const char *a2, ...)
{
  return _[a1 _shouldEnqueueDismissals];
}

id objc_msgSend__shouldMaintainToday(void *a1, const char *a2, ...)
{
  return _[a1 _shouldMaintainToday];
}

id objc_msgSend__shouldResumeToTodayOnBecomeActive(void *a1, const char *a2, ...)
{
  return _[a1 _shouldResumeToTodayOnBecomeActive];
}

id objc_msgSend__shouldShowListViewInModeSwitcher(void *a1, const char *a2, ...)
{
  return _[a1 _shouldShowListViewInModeSwitcher];
}

id objc_msgSend__shouldShowMessage(void *a1, const char *a2, ...)
{
  return _[a1 _shouldShowMessage];
}

id objc_msgSend__shouldShowNoEventsView(void *a1, const char *a2, ...)
{
  return _[a1 _shouldShowNoEventsView];
}

id objc_msgSend__shouldShowTomorrowSection(void *a1, const char *a2, ...)
{
  return _[a1 _shouldShowTomorrowSection];
}

id objc_msgSend__shouldUseSideBar(void *a1, const char *a2, ...)
{
  return _[a1 _shouldUseSideBar];
}

id objc_msgSend__shouldWrapTextUnderAuthor(void *a1, const char *a2, ...)
{
  return _[a1 _shouldWrapTextUnderAuthor];
}

id objc_msgSend__showAddSubscribedCalendarWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showAddSubscribedCalendarWithURL:");
}

id objc_msgSend__showBackground(void *a1, const char *a2, ...)
{
  return _[a1 _showBackground];
}

id objc_msgSend__showDate_inView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showDate:inView:");
}

id objc_msgSend__showDebugReportProblemViewController(void *a1, const char *a2, ...)
{
  return _[a1 _showDebugReportProblemViewController];
}

id objc_msgSend__showDetailForEvent_animated_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showDetailForEvent:animated:context:");
}

id objc_msgSend__showDetailForEvent_animated_showComments_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showDetailForEvent:animated:showComments:context:");
}

id objc_msgSend__showDetailForEvent_animated_userInitiated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showDetailForEvent:animated:userInitiated:");
}

id objc_msgSend__showDetailForEvents_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showDetailForEvents:animated:");
}

id objc_msgSend__showDetailForEvents_animated_userInitiated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showDetailForEvents:animated:userInitiated:");
}

id objc_msgSend__showDetailsForEvent_animated_showMode_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showDetailsForEvent:animated:showMode:context:");
}

id objc_msgSend__showEditorForEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showEditorForEvent:");
}

id objc_msgSend__showEvent_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showEvent:animated:");
}

id objc_msgSend__showEvent_inView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showEvent:inView:");
}

id objc_msgSend__showEvent_viewController_animated_showComments_modal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showEvent:viewController:animated:showComments:modal:");
}

id objc_msgSend__showEventDetailsForOccurrence_inWeek_onDay_animatedScrollToVisible_showMode_context_creationMethod_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showEventDetailsForOccurrence:inWeek:onDay:animatedScrollToVisible:showMode:context:creationMethod:");
}

id objc_msgSend__showEventDetailsForOccurrence_inWeek_onDay_creationMethod_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showEventDetailsForOccurrence:inWeek:onDay:creationMethod:");
}

id objc_msgSend__showEventsWithoutChangingDate_animated_showComments_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showEventsWithoutChangingDate:animated:showComments:context:");
}

id objc_msgSend__showListScrolledToDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showListScrolledToDate:");
}

id objc_msgSend__showMonthOverlayInCellAtOffset_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showMonthOverlayInCellAtOffset:animated:");
}

id objc_msgSend__showNowForMainViewControllerContainer_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showNowForMainViewControllerContainer:animated:");
}

id objc_msgSend__showNowWhenSameDaySelected(void *a1, const char *a2, ...)
{
  return _[a1 _showNowWhenSameDaySelected];
}

id objc_msgSend__showPressHighlightWithFadeDuration_(void *a1, const char *a2, ...)
{
  return [a1 _showPressHighlightWithFadeDuration:];
}

id objc_msgSend__showSearchBar(void *a1, const char *a2, ...)
{
  return _[a1 _showSearchBar];
}

id objc_msgSend__showTrailingBorder(void *a1, const char *a2, ...)
{
  return _[a1 _showTrailingBorder];
}

id objc_msgSend__showViewControllerAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 _showViewControllerAtIndex:];
}

id objc_msgSend__showWeekDayInitialsForHeightSizeClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showWeekDayInitialsForHeightSizeClass:");
}

id objc_msgSend__showingSplashScreen(void *a1, const char *a2, ...)
{
  return _[a1 _showingSplashScreen];
}

id objc_msgSend__showsEventViewControllerAsFullScreen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showsEventViewControllerAsFullScreen:");
}

id objc_msgSend__simulateScrollWithTranslation_duration_willBeginDragging_didEndDragging_willBeginDecelerating_didEndDecelerating_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_simulateScrollWithTranslation:duration:willBeginDragging:didEndDragging:willBeginDecelerating:didEndDecelerating:");
}

id objc_msgSend__sizingContextWindow(void *a1, const char *a2, ...)
{
  return _[a1 _sizingContextWindow];
}

id objc_msgSend__slideToAnimatePalleteShowingBackButton_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_slideToAnimatePalleteShowingBackButton:animated:");
}

id objc_msgSend__slideToHideEventDetailsAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_slideToHideEventDetailsAnimated:");
}

id objc_msgSend__slideToShowEventDetails_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_slideToShowEventDetails:animated:");
}

id objc_msgSend__slowComputeCalendarDateForWeekFromStartDate_weekOffset_(void *a1, const char *a2, ...)
{
  return [a1 _slowComputeCalendarDateForWeekFromStartDate:weekOffset:];
}

id objc_msgSend__snapDateForOffset_snapToWeeks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_snapDateForOffset:snapToWeeks:");
}

id objc_msgSend__sort(void *a1, const char *a2, ...)
{
  return _[a1 _sort];
}

id objc_msgSend__sortBlocks_intoRowsUsingDataFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sortBlocks:intoRowsUsingDataFrom:");
}

id objc_msgSend__specialDayTypeForOccurrence_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_specialDayTypeForOccurrence:");
}

id objc_msgSend__splashScreenDidDismissShouldNotify_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_splashScreenDidDismissShouldNotify:");
}

id objc_msgSend__splitViewNavigationController_willShowViewController_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_splitViewNavigationController:willShowViewController:animated:completion:");
}

id objc_msgSend__splitViewWidth(void *a1, const char *a2, ...)
{
  return _[a1 _splitViewWidth];
}

id objc_msgSend__standardLabelForFontSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_standardLabelForFontSize:");
}

id objc_msgSend__startMarkerTimer(void *a1, const char *a2, ...)
{
  return _[a1 _startMarkerTimer];
}

id objc_msgSend__startTest(void *a1, const char *a2, ...)
{
  return _[a1 _startTest];
}

id objc_msgSend__startUpdateTimer(void *a1, const char *a2, ...)
{
  return _[a1 _startUpdateTimer];
}

id objc_msgSend__startingFrameForEvent_atPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startingFrameForEvent:atPoint:");
}

id objc_msgSend__stateRestoreSelectedCalendarsFromUserActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stateRestoreSelectedCalendarsFromUserActivity:");
}

id objc_msgSend__stopPulsingToday(void *a1, const char *a2, ...)
{
  return _[a1 _stopPulsingToday];
}

id objc_msgSend__strikeColor(void *a1, const char *a2, ...)
{
  return _[a1 _strikeColor];
}

id objc_msgSend__stringsIncludeSpacing(void *a1, const char *a2, ...)
{
  return _[a1 _stringsIncludeSpacing];
}

id objc_msgSend__subTestNameForTargetInterfaceOrientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_subTestNameForTargetInterfaceOrientation:");
}

id objc_msgSend__subviewHeightForDate_(void *a1, const char *a2, ...)
{
  return [a1 _subviewHeightForDate:];
}

id objc_msgSend__switcherFontOfSize_isSemibold_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_switcherFontOfSize:isSemibold:");
}

id objc_msgSend__systemImageNamed_(void *a1, const char *a2, ...)
{
  return [a1 _systemImageNamed:];
}

id objc_msgSend__tableView(void *a1, const char *a2, ...)
{
  return _[a1 _tableView];
}

id objc_msgSend__teardownSidebarConfigurationOfManagedNavigationController(void *a1, const char *a2, ...)
{
  return _[a1 _teardownSidebarConfigurationOfManagedNavigationController];
}

id objc_msgSend__testClassForTestName_(void *a1, const char *a2, ...)
{
  return [a1 _testClassForTestName:];
}

id objc_msgSend__testEventWithConferenceNotes(void *a1, const char *a2, ...)
{
  return _[a1 _testEventWithConferenceNotes];
}

id objc_msgSend__textColor(void *a1, const char *a2, ...)
{
  return _[a1 _textColor];
}

id objc_msgSend__textInsets(void *a1, const char *a2, ...)
{
  return _[a1 _textInsets];
}

id objc_msgSend__thinLineColor(void *a1, const char *a2, ...)
{
  return _[a1 _thinLineColor];
}

id objc_msgSend__thinSystemFontOfSize_(void *a1, const char *a2, ...)
{
  return [a1 _thinSystemFontOfSize:];
}

id objc_msgSend__threeColumnsDisplayIsAllowed(void *a1, const char *a2, ...)
{
  return _[a1 _threeColumnsDisplayIsAllowed];
}

id objc_msgSend__timeColor(void *a1, const char *a2, ...)
{
  return _[a1 _timeColor];
}

id objc_msgSend__timeString_(void *a1, const char *a2, ...)
{
  return [a1 _timeString:];
}

id objc_msgSend__titleColor(void *a1, const char *a2, ...)
{
  return _[a1 _titleColor];
}

id objc_msgSend__titleFont(void *a1, const char *a2, ...)
{
  return _[a1 _titleFont];
}

id objc_msgSend__todayCell(void *a1, const char *a2, ...)
{
  return _[a1 _todayCell];
}

id objc_msgSend__todayLocalizedString(void *a1, const char *a2, ...)
{
  return _[a1 _todayLocalizedString];
}

id objc_msgSend__todaysDate(void *a1, const char *a2, ...)
{
  return _[a1 _todaysDate];
}

id objc_msgSend__tooFarToAnimate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tooFarToAnimate:");
}

id objc_msgSend__topExtensionHeight(void *a1, const char *a2, ...)
{
  return _[a1 _topExtensionHeight];
}

id objc_msgSend__topPresentedController(void *a1, const char *a2, ...)
{
  return _[a1 _topPresentedController];
}

id objc_msgSend__tornDownJournalOfShownViewControllers(void *a1, const char *a2, ...)
{
  return _[a1 _tornDownJournalOfShownViewControllers];
}

id objc_msgSend__totalEventsWidth(void *a1, const char *a2, ...)
{
  return _[a1 _totalEventsWidth];
}

id objc_msgSend__totalWidth(void *a1, const char *a2, ...)
{
  return _[a1 _totalWidth];
}

id objc_msgSend__unregisterGestureRecognizers(void *a1, const char *a2, ...)
{
  return _[a1 _unregisterGestureRecognizers];
}

id objc_msgSend__updateAddEventButtonEnabledness(void *a1, const char *a2, ...)
{
  return _[a1 _updateAddEventButtonEnabledness];
}

id objc_msgSend__updateAllDaySectionScrollerContentSize(void *a1, const char *a2, ...)
{
  return _[a1 _updateAllDaySectionScrollerContentSize];
}

id objc_msgSend__updateAllDayView(void *a1, const char *a2, ...)
{
  return _[a1 _updateAllDayView];
}

id objc_msgSend__updateAppEntityAnnotation(void *a1, const char *a2, ...)
{
  return _[a1 _updateAppEntityAnnotation];
}

id objc_msgSend__updateAppEntityAnnotationState(void *a1, const char *a2, ...)
{
  return _[a1 _updateAppEntityAnnotationState];
}

id objc_msgSend__updateBackButtonOnBackViewControllerToDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateBackButtonOnBackViewControllerToDate:");
}

id objc_msgSend__updateBackButtonToDate_container_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateBackButtonToDate:container:");
}

id objc_msgSend__updateBackButtonToSelectedDate(void *a1, const char *a2, ...)
{
  return _[a1 _updateBackButtonToSelectedDate];
}

id objc_msgSend__updateBadge(void *a1, const char *a2, ...)
{
  return _[a1 _updateBadge];
}

id objc_msgSend__updateBadgeAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateBadgeAtIndex:");
}

id objc_msgSend__updateBadgeBackgroundColors(void *a1, const char *a2, ...)
{
  return _[a1 _updateBadgeBackgroundColors];
}

id objc_msgSend__updateBadgeForCell_forDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateBadgeForCell:forDate:");
}

id objc_msgSend__updateBadges(void *a1, const char *a2, ...)
{
  return _[a1 _updateBadges];
}

id objc_msgSend__updateCalendarButtonAccessory(void *a1, const char *a2, ...)
{
  return _[a1 _updateCalendarButtonAccessory];
}

id objc_msgSend__updateCalendarButtonSpinner(void *a1, const char *a2, ...)
{
  return _[a1 _updateCalendarButtonSpinner];
}

id objc_msgSend__updateCalendarsButtonConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 _updateCalendarsButtonConfiguration];
}

id objc_msgSend__updateCalendarsButtonMenuProvider(void *a1, const char *a2, ...)
{
  return _[a1 _updateCalendarsButtonMenuProvider];
}

id objc_msgSend__updateCalendarsButtonTitle(void *a1, const char *a2, ...)
{
  return _[a1 _updateCalendarsButtonTitle];
}

id objc_msgSend__updateCell_atIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCell:atIndexPath:");
}

id objc_msgSend__updateCell_withBadgeDataIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCell:withBadgeDataIndex:");
}

id objc_msgSend__updateCellWidthIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _updateCellWidthIfNeeded];
}

id objc_msgSend__updateChooserForFocusMode(void *a1, const char *a2, ...)
{
  return _[a1 _updateChooserForFocusMode];
}

id objc_msgSend__updateCircleColor(void *a1, const char *a2, ...)
{
  return _[a1 _updateCircleColor];
}

id objc_msgSend__updateColorBar(void *a1, const char *a2, ...)
{
  return _[a1 _updateColorBar];
}

id objc_msgSend__updateColorsForUserInterfaceStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateColorsForUserInterfaceStyle:");
}

id objc_msgSend__updateDateLabelFrame(void *a1, const char *a2, ...)
{
  return _[a1 _updateDateLabelFrame];
}

id objc_msgSend__updateDayBadges(void *a1, const char *a2, ...)
{
  return _[a1 _updateDayBadges];
}

id objc_msgSend__updateDayFrames(void *a1, const char *a2, ...)
{
  return _[a1 _updateDayFrames];
}

id objc_msgSend__updateDayHeaderFrames(void *a1, const char *a2, ...)
{
  return _[a1 _updateDayHeaderFrames];
}

id objc_msgSend__updateDayTypeBadgeForDayNumber_withDayType_color_locale_forceImageUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateDayTypeBadgeForDayNumber:withDayType:color:locale:forceImageUpdate:");
}

id objc_msgSend__updateDayTypeBadgesWithBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 _updateDayTypeBadgesWithBackgroundColor];
}

id objc_msgSend__updateDisplayedString(void *a1, const char *a2, ...)
{
  return _[a1 _updateDisplayedString];
}

id objc_msgSend__updateDisplayedStrings(void *a1, const char *a2, ...)
{
  return _[a1 _updateDisplayedStrings];
}

id objc_msgSend__updateDividedListTopLineForDividedMode_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateDividedListTopLineForDividedMode:animated:");
}

id objc_msgSend__updateDotImage(void *a1, const char *a2, ...)
{
  return _[a1 _updateDotImage];
}

id objc_msgSend__updateDotImageView(void *a1, const char *a2, ...)
{
  return _[a1 _updateDotImageView];
}

id objc_msgSend__updateDraggingOffsetTimesForPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateDraggingOffsetTimesForPoint:");
}

id objc_msgSend__updateEventDetailsColumnViewFrame(void *a1, const char *a2, ...)
{
  return _[a1 _updateEventDetailsColumnViewFrame];
}

id objc_msgSend__updateEventSummaries(void *a1, const char *a2, ...)
{
  return _[a1 _updateEventSummaries];
}

id objc_msgSend__updateFadeDirection(void *a1, const char *a2, ...)
{
  return _[a1 _updateFadeDirection];
}

id objc_msgSend__updateFadeVisibility(void *a1, const char *a2, ...)
{
  return _[a1 _updateFadeVisibility];
}

id objc_msgSend__updateFadeWidth(void *a1, const char *a2, ...)
{
  return _[a1 _updateFadeWidth];
}

id objc_msgSend__updateFilterLabel(void *a1, const char *a2, ...)
{
  return _[a1 _updateFilterLabel];
}

id objc_msgSend__updateFilterLabelAnimate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateFilterLabelAnimate:");
}

id objc_msgSend__updateFilterState(void *a1, const char *a2, ...)
{
  return _[a1 _updateFilterState];
}

id objc_msgSend__updateFocusBanner(void *a1, const char *a2, ...)
{
  return _[a1 _updateFocusBanner];
}

id objc_msgSend__updateForCurrentTraits(void *a1, const char *a2, ...)
{
  return _[a1 _updateForCurrentTraits];
}

id objc_msgSend__updateFormatter(void *a1, const char *a2, ...)
{
  return _[a1 _updateFormatter];
}

id objc_msgSend__updateGroupVisibility(void *a1, const char *a2, ...)
{
  return _[a1 _updateGroupVisibility];
}

id objc_msgSend__updateHeaderHeightsAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateHeaderHeightsAnimated:");
}

id objc_msgSend__updateHeaderViewsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _updateHeaderViewsIfNeeded];
}

id objc_msgSend__updateInboxBarButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 _updateInboxBarButtonItem];
}

id objc_msgSend__updateInfiniteScrollViewFrame(void *a1, const char *a2, ...)
{
  return _[a1 _updateInfiniteScrollViewFrame];
}

id objc_msgSend__updateInteractivePopAllowed(void *a1, const char *a2, ...)
{
  return _[a1 _updateInteractivePopAllowed];
}

id objc_msgSend__updateLabels(void *a1, const char *a2, ...)
{
  return _[a1 _updateLabels];
}

id objc_msgSend__updateLeftFixedSpaceBarButtonItemWidthWithViewController_targetWindowSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateLeftFixedSpaceBarButtonItemWidthWithViewController:targetWindowSize:");
}

id objc_msgSend__updateListViewFrame(void *a1, const char *a2, ...)
{
  return _[a1 _updateListViewFrame];
}

id objc_msgSend__updateMonthFont(void *a1, const char *a2, ...)
{
  return _[a1 _updateMonthFont];
}

id objc_msgSend__updateMonthTitle(void *a1, const char *a2, ...)
{
  return _[a1 _updateMonthTitle];
}

id objc_msgSend__updateMonthTitleViewFont(void *a1, const char *a2, ...)
{
  return _[a1 _updateMonthTitleViewFont];
}

id objc_msgSend__updateNavbarStringForNewStateAfterWindowSizeChange(void *a1, const char *a2, ...)
{
  return _[a1 _updateNavbarStringForNewStateAfterWindowSizeChange];
}

id objc_msgSend__updateNavigationControllerBackButton(void *a1, const char *a2, ...)
{
  return _[a1 _updateNavigationControllerBackButton];
}

id objc_msgSend__updateNavigationControllerBackButtonToDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateNavigationControllerBackButtonToDate:");
}

id objc_msgSend__updateOccurrenceBackgroundParameters(void *a1, const char *a2, ...)
{
  return _[a1 _updateOccurrenceBackgroundParameters];
}

id objc_msgSend__updateOccurrenceTable(void *a1, const char *a2, ...)
{
  return _[a1 _updateOccurrenceTable];
}

id objc_msgSend__updateOccurrenceWithForce_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateOccurrenceWithForce:");
}

id objc_msgSend__updateOccurrencesBounds(void *a1, const char *a2, ...)
{
  return _[a1 _updateOccurrencesBounds];
}

id objc_msgSend__updateOverlayLegend(void *a1, const char *a2, ...)
{
  return _[a1 _updateOverlayLegend];
}

id objc_msgSend__updateOverlayMonthFont(void *a1, const char *a2, ...)
{
  return _[a1 _updateOverlayMonthFont];
}

id objc_msgSend__updatePaletteStateWithViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updatePaletteStateWithViewController:");
}

id objc_msgSend__updatePreferredContentSize(void *a1, const char *a2, ...)
{
  return _[a1 _updatePreferredContentSize];
}

id objc_msgSend__updateResponseButtons(void *a1, const char *a2, ...)
{
  return _[a1 _updateResponseButtons];
}

id objc_msgSend__updateSceneActivationConditions(void *a1, const char *a2, ...)
{
  return _[a1 _updateSceneActivationConditions];
}

id objc_msgSend__updateSceneTitle(void *a1, const char *a2, ...)
{
  return _[a1 _updateSceneTitle];
}

id objc_msgSend__updateSelectedViewsToMatchModel(void *a1, const char *a2, ...)
{
  return _[a1 _updateSelectedViewsToMatchModel];
}

id objc_msgSend__updateSeparatorVisibilityForOccurrenceCell_atIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSeparatorVisibilityForOccurrenceCell:atIndexPath:");
}

id objc_msgSend__updateSeparatorVisibilityForRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSeparatorVisibilityForRowAtIndexPath:");
}

id objc_msgSend__updateShouldAnnotateAppEntities(void *a1, const char *a2, ...)
{
  return _[a1 _updateShouldAnnotateAppEntities];
}

id objc_msgSend__updateShouldAnnotateByDay(void *a1, const char *a2, ...)
{
  return _[a1 _updateShouldAnnotateByDay];
}

id objc_msgSend__updateSingleDaySummaryForDayIndex_withData_date_calendar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSingleDaySummaryForDayIndex:withData:date:calendar:");
}

id objc_msgSend__updateString(void *a1, const char *a2, ...)
{
  return _[a1 _updateString];
}

id objc_msgSend__updateSubviewAlpha(void *a1, const char *a2, ...)
{
  return _[a1 _updateSubviewAlpha];
}

id objc_msgSend__updateSubviewAlphaForCircled_pressed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSubviewAlphaForCircled:pressed:");
}

id objc_msgSend__updateSubviewsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _updateSubviewsIfNeeded];
}

id objc_msgSend__updateSuggestionPropertiesWithNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSuggestionPropertiesWithNotification:");
}

id objc_msgSend__updateTableAlpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateTableAlpha:");
}

id objc_msgSend__updateTextColor(void *a1, const char *a2, ...)
{
  return _[a1 _updateTextColor];
}

id objc_msgSend__updateTimeMarker(void *a1, const char *a2, ...)
{
  return _[a1 _updateTimeMarker];
}

id objc_msgSend__updateTimeMarkerExtensionColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateTimeMarkerExtensionColor:");
}

id objc_msgSend__updateTimeMarkerTodayDay(void *a1, const char *a2, ...)
{
  return _[a1 _updateTimeMarkerTodayDay];
}

id objc_msgSend__updateTimeStrings(void *a1, const char *a2, ...)
{
  return _[a1 _updateTimeStrings];
}

id objc_msgSend__updateToMatchMonthViewIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _updateToMatchMonthViewIfNeeded];
}

id objc_msgSend__updateTodayButtonPosition(void *a1, const char *a2, ...)
{
  return _[a1 _updateTodayButtonPosition];
}

id objc_msgSend__updateUserActivity(void *a1, const char *a2, ...)
{
  return _[a1 _updateUserActivity];
}

id objc_msgSend__updateViewSwitcherFont(void *a1, const char *a2, ...)
{
  return _[a1 _updateViewSwitcherFont];
}

id objc_msgSend__updateViewSwitcherSegmentWidthsAfterWindowSizeChange(void *a1, const char *a2, ...)
{
  return _[a1 _updateViewSwitcherSegmentWidthsAfterWindowSizeChange];
}

id objc_msgSend__updateViewsForTimeZoneChange(void *a1, const char *a2, ...)
{
  return _[a1 _updateViewsForTimeZoneChange];
}

id objc_msgSend__updateWeekDayHeaderDayFrames(void *a1, const char *a2, ...)
{
  return _[a1 _updateWeekDayHeaderDayFrames];
}

id objc_msgSend__updateWeekHighlightsForDragPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateWeekHighlightsForDragPoint:");
}

id objc_msgSend__updateWeekNumber(void *a1, const char *a2, ...)
{
  return _[a1 _updateWeekNumber];
}

id objc_msgSend__updateWeekNumberAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateWeekNumberAnimated:");
}

id objc_msgSend__updateWeekNumberFont(void *a1, const char *a2, ...)
{
  return _[a1 _updateWeekNumberFont];
}

id objc_msgSend__updateWeekNumberLabel(void *a1, const char *a2, ...)
{
  return _[a1 _updateWeekNumberLabel];
}

id objc_msgSend__updateWeekViewContentHeight(void *a1, const char *a2, ...)
{
  return _[a1 _updateWeekViewContentHeight];
}

id objc_msgSend__updateWeekendIndices(void *a1, const char *a2, ...)
{
  return _[a1 _updateWeekendIndices];
}

id objc_msgSend__updateYearNumbersAnimated_withForce_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateYearNumbersAnimated:withForce:");
}

id objc_msgSend__useLargeFormatBehavior(void *a1, const char *a2, ...)
{
  return _[a1 _useLargeFormatBehavior];
}

id objc_msgSend__useNewPhonePlusMetricsForSizeParadigm_(void *a1, const char *a2, ...)
{
  return [a1 _useNewPhonePlusMetricsForSizeParadigm:];
}

id objc_msgSend__usePortraitLayoutForSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_usePortraitLayoutForSize:");
}

id objc_msgSend__verticalGridExtensionImage(void *a1, const char *a2, ...)
{
  return _[a1 _verticalGridExtensionImage];
}

id objc_msgSend__verticalVelocity(void *a1, const char *a2, ...)
{
  return _[a1 _verticalVelocity];
}

id objc_msgSend__view_containsCalendarDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_view:containsCalendarDate:");
}

id objc_msgSend__viewControllerExistsInPresentationChainThatShouldNotRotate(void *a1, const char *a2, ...)
{
  return _[a1 _viewControllerExistsInPresentationChainThatShouldNotRotate];
}

id objc_msgSend__viewControllerForIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_viewControllerForIndex:");
}

id objc_msgSend__viewControllerRequiresSystemPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_viewControllerRequiresSystemPresentation:");
}

id objc_msgSend__viewControllerTreeIsEligibleForJournalingConsideration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_viewControllerTreeIsEligibleForJournalingConsideration:");
}

id objc_msgSend__viewForCalendarDate_(void *a1, const char *a2, ...)
{
  return [a1 _viewForCalendarDate:];
}

id objc_msgSend__viewForCalendarDateContainsFirstDayOfMonth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_viewForCalendarDateContainsFirstDayOfMonth:");
}

id objc_msgSend__viewFromGesture_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_viewFromGesture:");
}

id objc_msgSend__viewSwitcherIndexRepresentingViewType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_viewSwitcherIndexRepresentingViewType:");
}

id objc_msgSend__viewSwitcherLabelStrings(void *a1, const char *a2, ...)
{
  return _[a1 _viewSwitcherLabelStrings];
}

id objc_msgSend__viewSwitcherNumSegments(void *a1, const char *a2, ...)
{
  return _[a1 _viewSwitcherNumSegments];
}

id objc_msgSend__viewSwitcherSegmentWidth(void *a1, const char *a2, ...)
{
  return _[a1 _viewSwitcherSegmentWidth];
}

id objc_msgSend__viewSwitcherSegmentedControl(void *a1, const char *a2, ...)
{
  return _[a1 _viewSwitcherSegmentedControl];
}

id objc_msgSend__viewType(void *a1, const char *a2, ...)
{
  return _[a1 _viewType];
}

id objc_msgSend__viewTypeRepresentedByViewSwitcherIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_viewTypeRepresentedByViewSwitcherIndex:");
}

id objc_msgSend__viewingEventDetailsColumn(void *a1, const char *a2, ...)
{
  return _[a1 _viewingEventDetailsColumn];
}

id objc_msgSend__visibleOccurrenceViewsWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_visibleOccurrenceViewsWithOptions:");
}

id objc_msgSend__visibleSize(void *a1, const char *a2, ...)
{
  return _[a1 _visibleSize];
}

id objc_msgSend__weekDayInitialsFontForNumberOfMonthsPerRow_windowSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_weekDayInitialsFontForNumberOfMonthsPerRow:windowSize:");
}

id objc_msgSend__weekGroup_containsOccurrence_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_weekGroup:containsOccurrence:");
}

id objc_msgSend__weekGroupForEvent_occurrenceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_weekGroupForEvent:occurrenceDate:");
}

id objc_msgSend__weekGroupForPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_weekGroupForPoint:");
}

id objc_msgSend__weekNumberFont(void *a1, const char *a2, ...)
{
  return _[a1 _weekNumberFont];
}

id objc_msgSend__weekStartForDate_(void *a1, const char *a2, ...)
{
  return [a1 _weekStartForDate:];
}

id objc_msgSend__weekViewAtPoint_pointInWeek_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_weekViewAtPoint:pointInWeek:");
}

id objc_msgSend__weekViewAtScrollPoint_pointInWeek_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_weekViewAtScrollPoint:pointInWeek:");
}

id objc_msgSend__weekdayImageForDayNumberString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_weekdayImageForDayNumberString:");
}

id objc_msgSend__weekendImageForDayNumberString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_weekendImageForDayNumberString:");
}

id objc_msgSend__widthForDayAtPoint_isMovingRight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_widthForDayAtPoint:isMovingRight:");
}

id objc_msgSend__widthOfSpace(void *a1, const char *a2, ...)
{
  return _[a1 _widthOfSpace];
}

id objc_msgSend__willKeyCommandChangeSelectedDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_willKeyCommandChangeSelectedDate:");
}

id objc_msgSend__willKeyCommandChangeSelectedEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_willKeyCommandChangeSelectedEvent:");
}

id objc_msgSend__xOffsetForDate_(void *a1, const char *a2, ...)
{
  return [a1 _xOffsetForDate:];
}

id objc_msgSend__xSpacingForNumberOfMonthsPerRow_windowSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_xSpacingForNumberOfMonthsPerRow:windowSize:");
}

id objc_msgSend__yLocationForMonthLabel(void *a1, const char *a2, ...)
{
  return _[a1 _yLocationForMonthLabel];
}

id objc_msgSend__yOffsetForMonthCells_(void *a1, const char *a2, ...)
{
  return [a1 _yOffsetForMonthCells:];
}

id objc_msgSend__yOffsetForNumber(void *a1, const char *a2, ...)
{
  return _[a1 _yOffsetForNumber];
}

id objc_msgSend__yOffsetForRoundedRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_yOffsetForRoundedRect:");
}

id objc_msgSend__yOffsetForWeekdayLabelsWithSizeClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_yOffsetForWeekdayLabelsWithSizeClass:");
}

id objc_msgSend__ySpacingForNumberOfMonthsPerRow_windowSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ySpacingForNumberOfMonthsPerRow:windowSize:");
}

id objc_msgSend__yearLayoutMargins(void *a1, const char *a2, ...)
{
  return _[a1 _yearLayoutMargins];
}

id objc_msgSend__yearNumberFontSize(void *a1, const char *a2, ...)
{
  return _[a1 _yearNumberFontSize];
}

id objc_msgSend__yearString(void *a1, const char *a2, ...)
{
  return _[a1 _yearString];
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return _[a1 absoluteString];
}

id objc_msgSend_absoluteTime(void *a1, const char *a2, ...)
{
  return _[a1 absoluteTime];
}

id objc_msgSend_acceptSuggestedEvent_(void *a1, const char *a2, ...)
{
  return [a1 acceptSuggestedEvent:];
}

id objc_msgSend_accountsInInitialSyncCount(void *a1, const char *a2, ...)
{
  return _[a1 accountsInInitialSyncCount];
}

id objc_msgSend_action(void *a1, const char *a2, ...)
{
  return _[a1 action];
}

id objc_msgSend_actionBodyString(void *a1, const char *a2, ...)
{
  return _[a1 actionBodyString];
}

id objc_msgSend_actionBodyStringAction(void *a1, const char *a2, ...)
{
  return _[a1 actionBodyStringAction];
}

id objc_msgSend_actionWithTitle_image_identifier_handler_(void *a1, const char *a2, ...)
{
  return [a1 actionWithTitle:image:identifier:handler:];
}

id objc_msgSend_actionWithTitle_style_handler_(void *a1, const char *a2, ...)
{
  return [a1 actionWithTitle:style:handler:];
}

id objc_msgSend_actions(void *a1, const char *a2, ...)
{
  return _[a1 actions];
}

id objc_msgSend_actionsForNotification_(void *a1, const char *a2, ...)
{
  return [a1 actionsForNotification:];
}

id objc_msgSend_actionsForNotification_proposedTimeAttendee_eventStore_(void *a1, const char *a2, ...)
{
  return [a1 actionsForNotification:proposedTimeAttendee:eventStore:];
}

id objc_msgSend_activateConstraints_(void *a1, const char *a2, ...)
{
  return [a1 activateConstraints:];
}

id objc_msgSend_activationState(void *a1, const char *a2, ...)
{
  return _[a1 activationState];
}

id objc_msgSend_activeCalendar(void *a1, const char *a2, ...)
{
  return _[a1 activeCalendar];
}

id objc_msgSend_activeWidthSizeClass(void *a1, const char *a2, ...)
{
  return _[a1 activeWidthSizeClass];
}

id objc_msgSend_activityForActivity_(void *a1, const char *a2, ...)
{
  return [a1 activityForActivity:];
}

id objc_msgSend_activityType(void *a1, const char *a2, ...)
{
  return _[a1 activityType];
}

id objc_msgSend_actualScaleFactor(void *a1, const char *a2, ...)
{
  return _[a1 actualScaleFactor];
}

id objc_msgSend_addAction_(void *a1, const char *a2, ...)
{
  return [a1 addAction:];
}

id objc_msgSend_addAlarm_(void *a1, const char *a2, ...)
{
  return [a1 addAlarm:];
}

id objc_msgSend_addAnchoredValue_forSize_(void *a1, const char *a2, ...)
{
  return [a1 addAnchoredValue:forSize:];
}

id objc_msgSend_addAnchoredValue_forWindowSizeHeight_(void *a1, const char *a2, ...)
{
  return [a1 addAnchoredValue:forWindowSizeHeight:];
}

id objc_msgSend_addAnchoredValue_forWindowSizeWidth_(void *a1, const char *a2, ...)
{
  return [a1 addAnchoredValue:forWindowSizeWidth:];
}

id objc_msgSend_addAnimation_forKey_(void *a1, const char *a2, ...)
{
  return [a1 addAnimation:forKey:];
}

id objc_msgSend_addAnimations_(void *a1, const char *a2, ...)
{
  return [a1 addAnimations:];
}

id objc_msgSend_addAttendee_(void *a1, const char *a2, ...)
{
  return [a1 addAttendee:];
}

id objc_msgSend_addAttribute_value_range_(void *a1, const char *a2, ...)
{
  return [a1 addAttribute:value:range:];
}

id objc_msgSend_addBulletedListItemWithTitle_description_image_(void *a1, const char *a2, ...)
{
  return [a1 addBulletedListItemWithTitle:description:image:];
}

id objc_msgSend_addButton_(void *a1, const char *a2, ...)
{
  return [a1 addButton:];
}

id objc_msgSend_addChildViewController_(void *a1, const char *a2, ...)
{
  return [a1 addChildViewController:];
}

id objc_msgSend_addClip(void *a1, const char *a2, ...)
{
  return _[a1 addClip];
}

id objc_msgSend_addCompletion_(void *a1, const char *a2, ...)
{
  return [a1 addCompletion:];
}

id objc_msgSend_addDependency_(void *a1, const char *a2, ...)
{
  return [a1 addDependency:];
}

id objc_msgSend_addEventBarButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 addEventBarButtonItem];
}

id objc_msgSend_addEventDelegate(void *a1, const char *a2, ...)
{
  return _[a1 addEventDelegate];
}

id objc_msgSend_addEventPressed(void *a1, const char *a2, ...)
{
  return _[a1 addEventPressed];
}

id objc_msgSend_addEventToSelection_(void *a1, const char *a2, ...)
{
  return [a1 addEventToSelection:];
}

id objc_msgSend_addEventToSelection_inWeek_updateModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEventToSelection:inWeek:updateModel:");
}

id objc_msgSend_addFadeMaskForRect_leftSide_start_end_withContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addFadeMaskForRect:leftSide:start:end:withContext:");
}

id objc_msgSend_addGestureRecognizer_(void *a1, const char *a2, ...)
{
  return [a1 addGestureRecognizer:];
}

id objc_msgSend_addInteraction_(void *a1, const char *a2, ...)
{
  return [a1 addInteraction:];
}

id objc_msgSend_addItemState(void *a1, const char *a2, ...)
{
  return _[a1 addItemState];
}

id objc_msgSend_addItemViewControllerManager_didCompleteWithAction_(void *a1, const char *a2, ...)
{
  return [a1 addItemViewControllerManager:didCompleteWithAction:];
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return [a1 addObject:];
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return [a1 addObjectsFromArray:];
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return [a1 addObserver:selector:name:object:];
}

id objc_msgSend_addObserverForName_object_queue_usingBlock_(void *a1, const char *a2, ...)
{
  return [a1 addObserverForName:object:queue:usingBlock:];
}

id objc_msgSend_addObserversForController_todayButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserversForController:todayButton:");
}

id objc_msgSend_addOccurrenceAwaitingRefresh_(void *a1, const char *a2, ...)
{
  return [a1 addOccurrenceAwaitingRefresh];
}

id objc_msgSend_addOccurrenceBlock_(void *a1, const char *a2, ...)
{
  return [a1 addOccurrenceBlock:];
}

id objc_msgSend_addOperation_(void *a1, const char *a2, ...)
{
  return [a1 addOperation:];
}

id objc_msgSend_addPresentedViewController_withPresenter_(void *a1, const char *a2, ...)
{
  return [a1 addPresentedViewController:withPresenter:];
}

id objc_msgSend_addPushedViewController_withPresenter_(void *a1, const char *a2, ...)
{
  return [a1 addPushedViewController:withPresenter:];
}

id objc_msgSend_addRespondedNotificationObjectID_(void *a1, const char *a2, ...)
{
  return [a1 addRespondedNotificationObjectID];
}

id objc_msgSend_addSegmentWithFrame_splitLeftEdge_splitRightEdge_fadeLeftEdge_fadeRightEdge_(void *a1, const char *a2, ...)
{
  return [a1 addSegmentWithFrame:];
}

id objc_msgSend_addSublayer_(void *a1, const char *a2, ...)
{
  return [a1 addSublayer:];
}

id objc_msgSend_addSubview_(void *a1, const char *a2, ...)
{
  return [a1 addSubview:];
}

id objc_msgSend_addTarget_action_(void *a1, const char *a2, ...)
{
  return [a1 addTarget:action:];
}

id objc_msgSend_addTarget_action_forControlEvents_(void *a1, const char *a2, ...)
{
  return [a1 addTarget:action:forControlEvents:];
}

id objc_msgSend_addTimer_forMode_(void *a1, const char *a2, ...)
{
  return [a1 addTimer:forMode:];
}

id objc_msgSend_addTipObserversFor_todayButton_(void *a1, const char *a2, ...)
{
  return [a1 addTipObserversFor:todayButton:];
}

id objc_msgSend_addToolbarButtonItemsWithViewController_(void *a1, const char *a2, ...)
{
  return [a1 addToolbarButtonItemsWithViewController:];
}

id objc_msgSend_addUserInfoEntriesFromDictionary_(void *a1, const char *a2, ...)
{
  return [a1 addUserInfoEntriesFromDictionary:];
}

id objc_msgSend_addViewToQueue_(void *a1, const char *a2, ...)
{
  return [a1 addViewToQueue];
}

id objc_msgSend_addViewToScroller_(void *a1, const char *a2, ...)
{
  return [a1 addViewToScroller:];
}

id objc_msgSend_addViewToScroller_isAllDay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addViewToScroller:isAllDay:");
}

id objc_msgSend_adjustForVisibleRect_(void *a1, const char *a2, ...)
{
  return [a1 adjustForVisibleRect:];
}

id objc_msgSend_adjustHighlight_forDay_(void *a1, const char *a2, ...)
{
  return [a1 adjustHighlight:forDay:];
}

id objc_msgSend_adjustLoadedViewRange(void *a1, const char *a2, ...)
{
  return _[a1 adjustLoadedViewRange];
}

id objc_msgSend_adjustSelectedDateForNewMonth_(void *a1, const char *a2, ...)
{
  return [a1 adjustSelectedDateForNewMonth:];
}

id objc_msgSend_adjustVisibleAllDayOccurrenceLabelsAnimated_(void *a1, const char *a2, ...)
{
  return [a1 adjustVisibleAllDayOccurrenceLabelsAnimated:];
}

id objc_msgSend_adjustedContentInset(void *a1, const char *a2, ...)
{
  return _[a1 adjustedContentInset];
}

id objc_msgSend_adjustedSeparatorInsets(void *a1, const char *a2, ...)
{
  return _[a1 adjustedSeparatorInsets];
}

id objc_msgSend_alarmWithRelativeOffset_(void *a1, const char *a2, ...)
{
  return [a1 alarmWithRelativeOffset:];
}

id objc_msgSend_alertControllerWithTitle_message_preferredStyle_(void *a1, const char *a2, ...)
{
  return [a1 alertControllerWithTitle:message:preferredStyle:];
}

id objc_msgSend_allAccountsOffline(void *a1, const char *a2, ...)
{
  return _[a1 allAccountsOffline];
}

id objc_msgSend_allComponents(void *a1, const char *a2, ...)
{
  return _[a1 allComponents];
}

id objc_msgSend_allDay(void *a1, const char *a2, ...)
{
  return _[a1 allDay];
}

id objc_msgSend_allDayAlpha(void *a1, const char *a2, ...)
{
  return _[a1 allDayAlpha];
}

id objc_msgSend_allDayBackgroundColorOriginY(void *a1, const char *a2, ...)
{
  return _[a1 allDayBackgroundColorOriginY];
}

id objc_msgSend_allDayLabelFont(void *a1, const char *a2, ...)
{
  return _[a1 allDayLabelFont];
}

id objc_msgSend_allDayLabelOriginY(void *a1, const char *a2, ...)
{
  return _[a1 allDayLabelOriginY];
}

id objc_msgSend_allDayOccurrenceInsetIntoScroller(void *a1, const char *a2, ...)
{
  return _[a1 allDayOccurrenceInsetIntoScroller];
}

id objc_msgSend_allDayOccurrences(void *a1, const char *a2, ...)
{
  return _[a1 allDayOccurrences];
}

id objc_msgSend_allDayView(void *a1, const char *a2, ...)
{
  return _[a1 allDayView];
}

id objc_msgSend_allEventNotificationsCount(void *a1, const char *a2, ...)
{
  return _[a1 allEventNotificationsCount];
}

id objc_msgSend_allEventsIndividuallyRepresented_(void *a1, const char *a2, ...)
{
  return [a1 allEventsIndividuallyRepresented:];
}

id objc_msgSend_allEventsValidForAction_fromEvents_(void *a1, const char *a2, ...)
{
  return [a1 allEventsValidForAction:fromEvents:];
}

id objc_msgSend_allEventsWithUniqueId_occurrenceDate_(void *a1, const char *a2, ...)
{
  return [a1 allEventsWithUniqueId:occurrenceDate:];
}

id objc_msgSend_allGroups(void *a1, const char *a2, ...)
{
  return _[a1 allGroups];
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return _[a1 allKeys];
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return _[a1 allObjects];
}

id objc_msgSend_allOccurrenceViews(void *a1, const char *a2, ...)
{
  return _[a1 allOccurrenceViews];
}

id objc_msgSend_allSceneManagers(void *a1, const char *a2, ...)
{
  return _[a1 allSceneManagers];
}

id objc_msgSend_allSelectedEventsIndividuallyRepresented(void *a1, const char *a2, ...)
{
  return _[a1 allSelectedEventsIndividuallyRepresented];
}

id objc_msgSend_allViews(void *a1, const char *a2, ...)
{
  return _[a1 allViews];
}

id objc_msgSend_allowEvents(void *a1, const char *a2, ...)
{
  return _[a1 allowEvents];
}

id objc_msgSend_allowsContentModifications(void *a1, const char *a2, ...)
{
  return _[a1 allowsContentModifications];
}

id objc_msgSend_allowsOverriddenRightNavigationBarItems(void *a1, const char *a2, ...)
{
  return _[a1 allowsOverriddenRightNavigationBarItems];
}

id objc_msgSend_allowsOverriddenToolbarItems(void *a1, const char *a2, ...)
{
  return _[a1 allowsOverriddenToolbarItems];
}

id objc_msgSend_allowsParticipationStatusModifications(void *a1, const char *a2, ...)
{
  return _[a1 allowsParticipationStatusModifications];
}

id objc_msgSend_allowsResponseCommentModifications(void *a1, const char *a2, ...)
{
  return _[a1 allowsResponseCommentModifications];
}

id objc_msgSend_alpha(void *a1, const char *a2, ...)
{
  return _[a1 alpha];
}

id objc_msgSend_alwaysAnimate(void *a1, const char *a2, ...)
{
  return _[a1 alwaysAnimate];
}

id objc_msgSend_andPredicateWithSubpredicates_(void *a1, const char *a2, ...)
{
  return [a1 andPredicateWithSubpredicates:];
}

id objc_msgSend_animatableDateLabel(void *a1, const char *a2, ...)
{
  return _[a1 animatableDateLabel];
}

id objc_msgSend_animateAlongsideTransition_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateAlongsideTransition:completion:");
}

id objc_msgSend_animateAlongsideTransitionInView_animation_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateAlongsideTransitionInView:animation:completion:");
}

id objc_msgSend_animateBlock_(void *a1, const char *a2, ...)
{
  return [a1 animateBlock:];
}

id objc_msgSend_animateShowingSearchBarAnimated_withCompletion_(void *a1, const char *a2, ...)
{
  return [a1 animateShowingSearchBarAnimated:withCompletion:];
}

id objc_msgSend_animateToDayLayout(void *a1, const char *a2, ...)
{
  return _[a1 animateToDayLayout];
}

id objc_msgSend_animateToDayWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 animateToDayWithCompletion:];
}

id objc_msgSend_animateToListWithCompletion_inContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateToListWithCompletion:inContext:");
}

id objc_msgSend_animateToMonthLayout(void *a1, const char *a2, ...)
{
  return _[a1 animateToMonthLayout];
}

id objc_msgSend_animateToMonthViewWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 animateToMonthViewWithCompletion:];
}

id objc_msgSend_animateToMonthWeekSize_divided_(void *a1, const char *a2, ...)
{
  return [a1 animateToMonthWeekSize:divided:];
}

id objc_msgSend_animateToMonthWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 animateToMonthWithCompletion:];
}

id objc_msgSend_animateToMonthWithCompletion_inContext_(void *a1, const char *a2, ...)
{
  return [a1 animateToMonthWithCompletion:inContext:];
}

id objc_msgSend_animateToScale_fromScale_completionBlock_(void *a1, const char *a2, ...)
{
  return [a1 animateToScale:fromScale:completionBlock:];
}

id objc_msgSend_animateToYearViewWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 animateToYearViewWithCompletion:];
}

id objc_msgSend_animateVisible_duration_completion_(void *a1, const char *a2, ...)
{
  return [a1 animateVisible:duration:completion:];
}

id objc_msgSend_animateWithDuration_animations_(void *a1, const char *a2, ...)
{
  return [a1 animateWithDuration:];
}

id objc_msgSend_animateWithDuration_animations_completion_(void *a1, const char *a2, ...)
{
  return [a1 animateWithDuration:animations:completion:];
}

id objc_msgSend_animateWithDuration_delay_options_animations_completion_(void *a1, const char *a2, ...)
{
  return [a1 animateWithDuration:delay:options:animations:completion:];
}

id objc_msgSend_animateWithDuration_delay_usingSpringWithDamping_initialSpringVelocity_options_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:");
}

id objc_msgSend_animateWithSpringDuration_bounce_initialSpringVelocity_delay_options_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithSpringDuration:bounce:initialSpringVelocity:delay:options:animations:completion:");
}

id objc_msgSend_animating(void *a1, const char *a2, ...)
{
  return _[a1 animating];
}

id objc_msgSend_animationDuration(void *a1, const char *a2, ...)
{
  return _[a1 animationDuration];
}

id objc_msgSend_anyObject(void *a1, const char *a2, ...)
{
  return _[a1 anyObject];
}

id objc_msgSend_appGroupIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 appGroupIdentifier];
}

id objc_msgSend_appearanceWhenContainedInInstancesOfClasses_(void *a1, const char *a2, ...)
{
  return [a1 appearanceWhenContainedInInstancesOfClasses:];
}

id objc_msgSend_appendAttributedString_(void *a1, const char *a2, ...)
{
  return [a1 appendAttributedString:];
}

id objc_msgSend_appendFormat_(void *a1, const char *a2, ...)
{
  return [a1 appendFormat:];
}

id objc_msgSend_appendString_(void *a1, const char *a2, ...)
{
  return [a1 appendString:];
}

id objc_msgSend_application(void *a1, const char *a2, ...)
{
  return _[a1 application];
}

id objc_msgSend_application_runTest_options_(void *a1, const char *a2, ...)
{
  return [a1 application:runTest:options:];
}

id objc_msgSend_applicationDidForeground(void *a1, const char *a2, ...)
{
  return _[a1 applicationDidForeground];
}

id objc_msgSend_applicationLastActiveTime(void *a1, const char *a2, ...)
{
  return _[a1 applicationLastActiveTime];
}

id objc_msgSend_applicationLastActiveTimeProvider(void *a1, const char *a2, ...)
{
  return _[a1 applicationLastActiveTimeProvider];
}

id objc_msgSend_applicationRecordForURL_incomplete_(void *a1, const char *a2, ...)
{
  return [a1 applicationRecordForURL:incomplete:];
}

id objc_msgSend_applicationRequestDelayer(void *a1, const char *a2, ...)
{
  return _[a1 applicationRequestDelayer];
}

id objc_msgSend_applicationState(void *a1, const char *a2, ...)
{
  return _[a1 applicationState];
}

id objc_msgSend_applyLoadedOccurrencesWithBatching_animated_reverse_completion_(void *a1, const char *a2, ...)
{
  return [a1 applyLoadedOccurrencesWithBatching:animated:reverse:completion:];
}

id objc_msgSend_applyMonthAnimationStateAdjustments(void *a1, const char *a2, ...)
{
  return _[a1 applyMonthAnimationStateAdjustments];
}

id objc_msgSend_areContextualRemindersSupported(void *a1, const char *a2, ...)
{
  return _[a1 areContextualRemindersSupported];
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _[a1 array];
}

id objc_msgSend_arrayByAddingObject_(void *a1, const char *a2, ...)
{
  return [a1 arrayByAddingObject:];
}

id objc_msgSend_arrayByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return [a1 arrayByAddingObjectsFromArray:];
}

id objc_msgSend_arrayByExcludingObjectsInArray_(void *a1, const char *a2, ...)
{
  return [a1 arrayByExcludingObjectsInArray:];
}

id objc_msgSend_arrayWithArray_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithArray:];
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithCapacity:];
}

id objc_msgSend_arrayWithObject_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithObject:];
}

id objc_msgSend_arrayWithObjects_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithObjects:];
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithObjects:count:];
}

id objc_msgSend_arrowDirection(void *a1, const char *a2, ...)
{
  return _[a1 arrowDirection];
}

id objc_msgSend_ascender(void *a1, const char *a2, ...)
{
  return _[a1 ascender];
}

id objc_msgSend_asyncLoading(void *a1, const char *a2, ...)
{
  return _[a1 asyncLoading];
}

id objc_msgSend_attachedTodayCircle(void *a1, const char *a2, ...)
{
  return _[a1 attachedTodayCircle];
}

id objc_msgSend_attemptDisplayReviewPrompt(void *a1, const char *a2, ...)
{
  return _[a1 attemptDisplayReviewPrompt];
}

id objc_msgSend_attendees(void *a1, const char *a2, ...)
{
  return _[a1 attendees];
}

id objc_msgSend_attributedText(void *a1, const char *a2, ...)
{
  return _[a1 attributedText];
}

id objc_msgSend_attributedTime(void *a1, const char *a2, ...)
{
  return _[a1 attributedTime];
}

id objc_msgSend_attributedTitle(void *a1, const char *a2, ...)
{
  return _[a1 attributedTitle];
}

id objc_msgSend_attributedTitleForLabel(void *a1, const char *a2, ...)
{
  return _[a1 attributedTitleForLabel];
}

id objc_msgSend_attributedTitleForWrappingLabel(void *a1, const char *a2, ...)
{
  return _[a1 attributedTitleForWrappingLabel];
}

id objc_msgSend_attributedTitleWithParagraphStyle_(void *a1, const char *a2, ...)
{
  return [a1 attributedTitleWithParagraphStyle:];
}

id objc_msgSend_augmentEventDetailsContext_(void *a1, const char *a2, ...)
{
  return [a1 augmentEventDetailsContext:];
}

id objc_msgSend_authorAddressForIdentity_(void *a1, const char *a2, ...)
{
  return [a1 authorAddressForIdentity:];
}

id objc_msgSend_authorCacheKeyForIdentity_(void *a1, const char *a2, ...)
{
  return [a1 authorCacheKeyForIdentity:];
}

id objc_msgSend_authorCacheObjectForKey_(void *a1, const char *a2, ...)
{
  return [a1 authorCacheObjectForKey:];
}

id objc_msgSend_authorCacheSetObject_forKey_(void *a1, const char *a2, ...)
{
  return [a1 authorCacheSetObject:forKey:];
}

id objc_msgSend_authorView(void *a1, const char *a2, ...)
{
  return _[a1 authorView];
}

id objc_msgSend_authorizationStatus(void *a1, const char *a2, ...)
{
  return _[a1 authorizationStatus];
}

id objc_msgSend_authorizationStatusForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 authorizationStatusForBundleIdentifier:];
}

id objc_msgSend_automaticGeocodingEnabled(void *a1, const char *a2, ...)
{
  return _[a1 automaticGeocodingEnabled];
}

id objc_msgSend_avatarView(void *a1, const char *a2, ...)
{
  return _[a1 avatarView];
}

id objc_msgSend_backButtonTitleForEventDetails(void *a1, const char *a2, ...)
{
  return _[a1 backButtonTitleForEventDetails];
}

id objc_msgSend_backGroundCornerMask(void *a1, const char *a2, ...)
{
  return _[a1 backGroundCornerMask];
}

id objc_msgSend_backGroundCornerMaskforEventID_(void *a1, const char *a2, ...)
{
  return [a1 backGroundCornerMaskforEventID:];
}

id objc_msgSend_background(void *a1, const char *a2, ...)
{
  return _[a1 background];
}

id objc_msgSend_backgroundAlpha(void *a1, const char *a2, ...)
{
  return _[a1 backgroundAlpha];
}

id objc_msgSend_backgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 backgroundColor];
}

id objc_msgSend_backgroundImage(void *a1, const char *a2, ...)
{
  return _[a1 backgroundImage];
}

id objc_msgSend_backgroundInsets(void *a1, const char *a2, ...)
{
  return _[a1 backgroundInsets];
}

id objc_msgSend_backgroundView(void *a1, const char *a2, ...)
{
  return _[a1 backgroundView];
}

id objc_msgSend_badgeColor(void *a1, const char *a2, ...)
{
  return _[a1 badgeColor];
}

id objc_msgSend_badgeDiameter(void *a1, const char *a2, ...)
{
  return _[a1 badgeDiameter];
}

id objc_msgSend_badgeFrameFromDayNumberFrame_isRightToLeft_(void *a1, const char *a2, ...)
{
  return [a1 badgeFrameFromDayNumberFrame:isRightToLeft:];
}

id objc_msgSend_badgeLocale(void *a1, const char *a2, ...)
{
  return _[a1 badgeLocale];
}

id objc_msgSend_badgeType(void *a1, const char *a2, ...)
{
  return _[a1 badgeType];
}

id objc_msgSend_badgedCalendarIcon_(void *a1, const char *a2, ...)
{
  return [a1 badgedCalendarIcon];
}

id objc_msgSend_baselineForWeekdayLabelsWithSizeClass_(void *a1, const char *a2, ...)
{
  return [a1 baselineForWeekdayLabelsWithSizeClass:];
}

id objc_msgSend_baselineForWeekdayNumbers(void *a1, const char *a2, ...)
{
  return _[a1 baselineForWeekdayNumbers];
}

id objc_msgSend_baselineOffsetFromTop(void *a1, const char *a2, ...)
{
  return _[a1 baselineOffsetFromTop];
}

id objc_msgSend_baselineOffsetFromTopOfLayerForFontSize_(void *a1, const char *a2, ...)
{
  return [a1 baselineOffsetFromTopOfLayerForFontSize:];
}

id objc_msgSend_becomeCurrent(void *a1, const char *a2, ...)
{
  return _[a1 becomeCurrent];
}

id objc_msgSend_becomeFirstResponder(void *a1, const char *a2, ...)
{
  return _[a1 becomeFirstResponder];
}

id objc_msgSend_beganHorizontalDeceleration(void *a1, const char *a2, ...)
{
  return _[a1 beganHorizontalDeceleration];
}

id objc_msgSend_begin(void *a1, const char *a2, ...)
{
  return _[a1 begin];
}

id objc_msgSend_beginAppearanceTransition_animated_(void *a1, const char *a2, ...)
{
  return [a1 beginAppearanceTransition:animated:];
}

id objc_msgSend_beginEditingOccurrence_creationMethod_(void *a1, const char *a2, ...)
{
  return [a1 beginEditingOccurrence:creationMethod:];
}

id objc_msgSend_beginLaunch_(void *a1, const char *a2, ...)
{
  return [a1 beginLaunch:];
}

id objc_msgSend_beginUpdates(void *a1, const char *a2, ...)
{
  return _[a1 beginUpdates];
}

id objc_msgSend_bestDateForNewEvent(void *a1, const char *a2, ...)
{
  return _[a1 bestDateForNewEvent];
}

id objc_msgSend_bezierPathWithRoundedRect_byRoundingCorners_cornerRadii_(void *a1, const char *a2, ...)
{
  return [a1 bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:];
}

id objc_msgSend_bezierPathWithRoundedRect_cornerRadius_(void *a1, const char *a2, ...)
{
  return [a1 bezierPathWithRoundedRect:cornerRadius:];
}

id objc_msgSend_birthdayContactIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 birthdayContactIdentifier];
}

id objc_msgSend_blackColor(void *a1, const char *a2, ...)
{
  return _[a1 blackColor];
}

id objc_msgSend_blacklistedDismissalClasses(void *a1, const char *a2, ...)
{
  return _[a1 blacklistedDismissalClasses];
}

id objc_msgSend_blockOperationWithBlock_(void *a1, const char *a2, ...)
{
  return [a1 blockOperationWithBlock:];
}

id objc_msgSend_blueComponent(void *a1, const char *a2, ...)
{
  return _[a1 blueComponent];
}

id objc_msgSend_bodyStringDict(void *a1, const char *a2, ...)
{
  return _[a1 bodyStringDict];
}

id objc_msgSend_boldButton(void *a1, const char *a2, ...)
{
  return _[a1 boldButton];
}

id objc_msgSend_boldSystemFontOfSize_(void *a1, const char *a2, ...)
{
  return [a1 boldSystemFontOfSize:];
}

id objc_msgSend_BOOLForKey_(void *a1, const char *a2, ...)
{
  return [a1 BOOLForKey:];
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _[a1 BOOLValue];
}

id objc_msgSend_bottomAnchor(void *a1, const char *a2, ...)
{
  return _[a1 bottomAnchor];
}

id objc_msgSend_bottomPadding(void *a1, const char *a2, ...)
{
  return _[a1 bottomPadding];
}

id objc_msgSend_bottomPinningProximity(void *a1, const char *a2, ...)
{
  return _[a1 bottomPinningProximity];
}

id objc_msgSend_bottomShadowMargin(void *a1, const char *a2, ...)
{
  return _[a1 bottomShadowMargin];
}

id objc_msgSend_bottomView(void *a1, const char *a2, ...)
{
  return _[a1 bottomView];
}

id objc_msgSend_bottomViewController(void *a1, const char *a2, ...)
{
  return _[a1 bottomViewController];
}

id objc_msgSend_boundingRectWithSize_options_attributes_context_(void *a1, const char *a2, ...)
{
  return [a1 boundingRectWithSize:options:attributes:context:];
}

id objc_msgSend_boundingRectWithSize_options_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "boundingRectWithSize:options:context:");
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return _[a1 bounds];
}

id objc_msgSend_bringSubviewToFront_(void *a1, const char *a2, ...)
{
  return [a1 bringSubviewToFront:];
}

id objc_msgSend_build(void *a1, const char *a2, ...)
{
  return _[a1 build];
}

id objc_msgSend_bundleForClass_(void *a1, const char *a2, ...)
{
  return [a1 bundleForClass];
}

id objc_msgSend_bundleId(void *a1, const char *a2, ...)
{
  return _[a1 bundleId];
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 bundleIdentifier];
}

id objc_msgSend_buttonTray(void *a1, const char *a2, ...)
{
  return _[a1 buttonTray];
}

id objc_msgSend_buttonWithType_(void *a1, const char *a2, ...)
{
  return [a1 buttonWithType:];
}

id objc_msgSend_cachedCalculatedValues(void *a1, const char *a2, ...)
{
  return _[a1 cachedCalculatedValues];
}

id objc_msgSend_cachedOccurrenceAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 cachedOccurrenceAtIndexPath:];
}

id objc_msgSend_cachedOccurrenceAtIndexPath_usingFilter_(void *a1, const char *a2, ...)
{
  return [a1 cachedOccurrenceAtIndexPath:usingFilter:];
}

id objc_msgSend_cachedOccurrencesAreLoaded(void *a1, const char *a2, ...)
{
  return _[a1 cachedOccurrencesAreLoaded];
}

id objc_msgSend_cachedOccurrencesForSection_(void *a1, const char *a2, ...)
{
  return [a1 cachedOccurrencesForSection:];
}

id objc_msgSend_cachedSpecialDayDataForSection_(void *a1, const char *a2, ...)
{
  return [a1 cachedSpecialDayDataForSection:];
}

id objc_msgSend_cal_hasSchemeTel(void *a1, const char *a2, ...)
{
  return [a1 cal_hasSchemeTel];
}

id objc_msgSend_cal_isMultidayEventForUIWithStartDate_endDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cal_isMultidayEventForUIWithStartDate:endDate:");
}

id objc_msgSend_calculationType(void *a1, const char *a2, ...)
{
  return _[a1 calculationType];
}

id objc_msgSend_calendar(void *a1, const char *a2, ...)
{
  return _[a1 calendar];
}

id objc_msgSend_calendarDate(void *a1, const char *a2, ...)
{
  return _[a1 calendarDate];
}

id objc_msgSend_calendarDateByAddingDays_(void *a1, const char *a2, ...)
{
  return [a1 calendarDateByAddingDays:];
}

id objc_msgSend_calendarDateByAddingMonths_(void *a1, const char *a2, ...)
{
  return [a1 calendarDateByAddingMonths:];
}

id objc_msgSend_calendarDateByAddingWeeks_(void *a1, const char *a2, ...)
{
  return [a1 calendarDateByAddingWeeks:];
}

id objc_msgSend_calendarDateByAddingYears_(void *a1, const char *a2, ...)
{
  return [a1 calendarDateByAddingYears:];
}

id objc_msgSend_calendarDateByComponentwiseAddingSeconds_(void *a1, const char *a2, ...)
{
  return [a1 calendarDateByComponentwiseAddingSeconds:];
}

id objc_msgSend_calendarDateForDay(void *a1, const char *a2, ...)
{
  return _[a1 calendarDateForDay];
}

id objc_msgSend_calendarDateForEndOfDay(void *a1, const char *a2, ...)
{
  return _[a1 calendarDateForEndOfDay];
}

id objc_msgSend_calendarDateForEndOfMonth(void *a1, const char *a2, ...)
{
  return _[a1 calendarDateForEndOfMonth];
}

id objc_msgSend_calendarDateForEndOfWeekWithWeekStart_(void *a1, const char *a2, ...)
{
  return [a1 calendarDateForEndOfWeekWithWeekStart:];
}

id objc_msgSend_calendarDateForEndOfYear(void *a1, const char *a2, ...)
{
  return _[a1 calendarDateForEndOfYear];
}

id objc_msgSend_calendarDateForMonth(void *a1, const char *a2, ...)
{
  return _[a1 calendarDateForMonth];
}

id objc_msgSend_calendarDateForPoint_(void *a1, const char *a2, ...)
{
  return [a1 calendarDateForPoint:];
}

id objc_msgSend_calendarDateForSubviewAboveSubviewWithCalendarDate_(void *a1, const char *a2, ...)
{
  return [a1 calendarDateForSubviewAboveSubviewWithCalendarDate:];
}

id objc_msgSend_calendarDateForSubviewBelowSubviewWithCalendarDate_(void *a1, const char *a2, ...)
{
  return [a1 calendarDateForSubviewBelowSubviewWithCalendarDate:];
}

id objc_msgSend_calendarDateForWeekWithWeekStart_(void *a1, const char *a2, ...)
{
  return [a1 calendarDateForWeekWithWeekStart:];
}

id objc_msgSend_calendarDateForYear(void *a1, const char *a2, ...)
{
  return _[a1 calendarDateForYear];
}

id objc_msgSend_calendarDateInTimeZone_(void *a1, const char *a2, ...)
{
  return [a1 calendarDateInTimeZone:];
}

id objc_msgSend_calendarDateWithAbsoluteTime_timeZone_(void *a1, const char *a2, ...)
{
  return [a1 calendarDateWithAbsoluteTime:timeZone:];
}

id objc_msgSend_calendarDateWithDate_timeZone_(void *a1, const char *a2, ...)
{
  return [a1 calendarDateWithDate:timeZone:];
}

id objc_msgSend_calendarDateWithDateComponents_timeZone_(void *a1, const char *a2, ...)
{
  return [a1 calendarDateWithDateComponents:timeZone:];
}

id objc_msgSend_calendarFromEventStore_(void *a1, const char *a2, ...)
{
  return [a1 calendarFromEventStore:];
}

id objc_msgSend_calendarIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 calendarIdentifier];
}

id objc_msgSend_calendarItem(void *a1, const char *a2, ...)
{
  return _[a1 calendarItem];
}

id objc_msgSend_calendarItemIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 calendarItemIdentifier];
}

id objc_msgSend_calendarItemWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 calendarItemWithIdentifier:];
}

id objc_msgSend_calendarModel(void *a1, const char *a2, ...)
{
  return _[a1 calendarModel];
}

id objc_msgSend_calendarOrder(void *a1, const char *a2, ...)
{
  return _[a1 calendarOrder];
}

id objc_msgSend_calendarSignpostHandle(void *a1, const char *a2, ...)
{
  return _[a1 calendarSignpostHandle];
}

id objc_msgSend_calendarTimeZone(void *a1, const char *a2, ...)
{
  return _[a1 calendarTimeZone];
}

id objc_msgSend_calendarToMakeVisibleOnSave(void *a1, const char *a2, ...)
{
  return _[a1 calendarToMakeVisibleOnSave];
}

id objc_msgSend_calendarToPasteTo(void *a1, const char *a2, ...)
{
  return _[a1 calendarToPasteTo];
}

id objc_msgSend_calendarsBarButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 calendarsBarButtonItem];
}

id objc_msgSend_calendarsButtonTitle(void *a1, const char *a2, ...)
{
  return _[a1 calendarsButtonTitle];
}

id objc_msgSend_calendarsForEntityType_(void *a1, const char *a2, ...)
{
  return [a1 calendarsForEntityType:];
}

id objc_msgSend_canAnimateToDate_(void *a1, const char *a2, ...)
{
  return [a1 canAnimateToDate:];
}

id objc_msgSend_canBeDirectlyManaged(void *a1, const char *a2, ...)
{
  return _[a1 canBeDirectlyManaged];
}

id objc_msgSend_canDismiss(void *a1, const char *a2, ...)
{
  return _[a1 canDismiss];
}

id objc_msgSend_canManagePresentationStyle(void *a1, const char *a2, ...)
{
  return _[a1 canManagePresentationStyle];
}

id objc_msgSend_canOpenApplication_reason_(void *a1, const char *a2, ...)
{
  return [a1 canOpenApplication:reason:];
}

id objc_msgSend_canPerformAction_withSender_(void *a1, const char *a2, ...)
{
  return [a1 canPerformAction:withSender:];
}

id objc_msgSend_canPerformPaste(void *a1, const char *a2, ...)
{
  return _[a1 canPerformPaste];
}

id objc_msgSend_canRequirePushOrPresentation(void *a1, const char *a2, ...)
{
  return _[a1 canRequirePushOrPresentation];
}

id objc_msgSend_canSelectRow_(void *a1, const char *a2, ...)
{
  return [a1 canSelectRow:];
}

id objc_msgSend_canShowAvatarViewWithTraitCollection_(void *a1, const char *a2, ...)
{
  return [a1 canShowAvatarViewWithTraitCollection:];
}

id objc_msgSend_canShowViewControllerForEvent_withParticipantRecipients_(void *a1, const char *a2, ...)
{
  return [a1 canShowViewControllerForEvent:withParticipantRecipients:];
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return _[a1 cancel];
}

id objc_msgSend_cancelAllOperations(void *a1, const char *a2, ...)
{
  return _[a1 cancelAllOperations];
}

id objc_msgSend_cancelAllRendering(void *a1, const char *a2, ...)
{
  return _[a1 cancelAllRendering];
}

id objc_msgSend_cancelButton(void *a1, const char *a2, ...)
{
  return _[a1 cancelButton];
}

id objc_msgSend_cancelEditing(void *a1, const char *a2, ...)
{
  return _[a1 cancelEditing];
}

id objc_msgSend_cancelOutstandingOperations(void *a1, const char *a2, ...)
{
  return _[a1 cancelOutstandingOperations];
}

id objc_msgSend_cancelPreviousPerformRequestsWithTarget_selector_object_(void *a1, const char *a2, ...)
{
  return [a1 cancelPreviousPerformRequestsWithTarget:selector:object:];
}

id objc_msgSend_cancelScrollingAnimation(void *a1, const char *a2, ...)
{
  return _[a1 cancelScrollingAnimation];
}

id objc_msgSend_cancelSearch(void *a1, const char *a2, ...)
{
  return _[a1 cancelSearch];
}

id objc_msgSend_cancelTimer(void *a1, const char *a2, ...)
{
  return _[a1 cancelTimer];
}

id objc_msgSend_capHeight(void *a1, const char *a2, ...)
{
  return _[a1 capHeight];
}

id objc_msgSend_capitalizedStringWithLocale_(void *a1, const char *a2, ...)
{
  return [a1 capitalizedStringWithLocale:];
}

id objc_msgSend_captureSnapshotRect_fromView_withSnapshotType_(void *a1, const char *a2, ...)
{
  return [a1 captureSnapshotRect:fromView:withSnapshotType:];
}

id objc_msgSend_cellClass(void *a1, const char *a2, ...)
{
  return _[a1 cellClass];
}

id objc_msgSend_cellClassForNotification_(void *a1, const char *a2, ...)
{
  return [a1 cellClassForNotification];
}

id objc_msgSend_cellFactory(void *a1, const char *a2, ...)
{
  return _[a1 cellFactory];
}

id objc_msgSend_cellForRow_allowAsyncLoading_(void *a1, const char *a2, ...)
{
  return [a1 cellForRow:allowAsyncLoading:];
}

id objc_msgSend_cellForRow_underDate_inTableView_(void *a1, const char *a2, ...)
{
  return [a1 cellForRow:underDate:inTableView:];
}

id objc_msgSend_cellForRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 cellForRowAtIndexPath:];
}

id objc_msgSend_cellForSource_withModel_inTableView_(void *a1, const char *a2, ...)
{
  return [a1 cellForSource:withModel:inTableView:];
}

id objc_msgSend_cellFrameDictionary(void *a1, const char *a2, ...)
{
  return _[a1 cellFrameDictionary];
}

id objc_msgSend_cellFramesForWeekContainingDate_(void *a1, const char *a2, ...)
{
  return [a1 cellFramesForWeekContainingDate:];
}

id objc_msgSend_cellHeight(void *a1, const char *a2, ...)
{
  return _[a1 cellHeight];
}

id objc_msgSend_cellSize(void *a1, const char *a2, ...)
{
  return _[a1 cellSize];
}

id objc_msgSend_cellWasTapped(void *a1, const char *a2, ...)
{
  return _[a1 cellWasTapped];
}

id objc_msgSend_cellsDisplayed(void *a1, const char *a2, ...)
{
  return _[a1 cellsDisplayed];
}

id objc_msgSend_center(void *a1, const char *a2, ...)
{
  return _[a1 center];
}

id objc_msgSend_centerDateComponents(void *a1, const char *a2, ...)
{
  return _[a1 centerDateComponents];
}

id objc_msgSend_centerOnCalendar_(void *a1, const char *a2, ...)
{
  return [a1 centerOnCalendar:];
}

id objc_msgSend_centerStringForDate_(void *a1, const char *a2, ...)
{
  return [a1 centerStringForDate:];
}

id objc_msgSend_centerViewOnScreen(void *a1, const char *a2, ...)
{
  return _[a1 centerViewOnScreen];
}

id objc_msgSend_centerXAnchor(void *a1, const char *a2, ...)
{
  return _[a1 centerXAnchor];
}

id objc_msgSend_centerYAnchor(void *a1, const char *a2, ...)
{
  return _[a1 centerYAnchor];
}

id objc_msgSend_centerYOffsetForTitleLabelWithSizeClass_(void *a1, const char *a2, ...)
{
  return [a1 centerYOffsetForTitleLabelWithSizeClass:];
}

id objc_msgSend_centeredCalendar(void *a1, const char *a2, ...)
{
  return _[a1 centeredCalendar];
}

id objc_msgSend_cgColor(void *a1, const char *a2, ...)
{
  return _[a1 cgColor];
}

id objc_msgSend_changeType(void *a1, const char *a2, ...)
{
  return _[a1 changeType];
}

id objc_msgSend_characterAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 characterAtIndex:];
}

id objc_msgSend_characters(void *a1, const char *a2, ...)
{
  return _[a1 characters];
}

id objc_msgSend_checkLocationAuthorizationAndAllowEventLocationPrediction(void *a1, const char *a2, ...)
{
  return _[a1 checkLocationAuthorizationAndAllowEventLocationPrediction];
}

id objc_msgSend_checkTestPreconditions(void *a1, const char *a2, ...)
{
  return _[a1 checkTestPreconditions];
}

id objc_msgSend_childViewControllerChangedForCurrentTraits(void *a1, const char *a2, ...)
{
  return _[a1 childViewControllerChangedForCurrentTraits];
}

id objc_msgSend_childViewControllerClassForTraits_(void *a1, const char *a2, ...)
{
  return [a1 childViewControllerClassForTraits:];
}

id objc_msgSend_childViewControllerForCompactWidthCompactHeight(void *a1, const char *a2, ...)
{
  return _[a1 childViewControllerForCompactWidthCompactHeight];
}

id objc_msgSend_childViewControllerForCompactWidthRegularHeight(void *a1, const char *a2, ...)
{
  return _[a1 childViewControllerForCompactWidthRegularHeight];
}

id objc_msgSend_childViewControllerForRegularWidthCompactHeight(void *a1, const char *a2, ...)
{
  return _[a1 childViewControllerForRegularWidthCompactHeight];
}

id objc_msgSend_childViewControllerForRegularWidthRegularHeight(void *a1, const char *a2, ...)
{
  return _[a1 childViewControllerForRegularWidthRegularHeight];
}

id objc_msgSend_childViewControllerForUnknownTraits(void *a1, const char *a2, ...)
{
  return _[a1 childViewControllerForUnknownTraits];
}

id objc_msgSend_childViewControllers(void *a1, const char *a2, ...)
{
  return _[a1 childViewControllers];
}

id objc_msgSend_circleDiameter(void *a1, const char *a2, ...)
{
  return _[a1 circleDiameter];
}

id objc_msgSend_circleDiameterCompressed(void *a1, const char *a2, ...)
{
  return _[a1 circleDiameterCompressed];
}

id objc_msgSend_circleDiameterWithOverlay(void *a1, const char *a2, ...)
{
  return _[a1 circleDiameterWithOverlay];
}

id objc_msgSend_circleDiameterWithOverlayLarge(void *a1, const char *a2, ...)
{
  return _[a1 circleDiameterWithOverlayLarge];
}

id objc_msgSend_circleFrame(void *a1, const char *a2, ...)
{
  return _[a1 circleFrame];
}

id objc_msgSend_circleYOffsetCompressed_containsFirstDayOfMonth_(void *a1, const char *a2, ...)
{
  return [a1 circleYOffsetCompressed:containsFirstDayOfMonth:];
}

id objc_msgSend_circled(void *a1, const char *a2, ...)
{
  return _[a1 circled];
}

id objc_msgSend_circledFontForSize_(void *a1, const char *a2, ...)
{
  return [a1 circledFontForSize:];
}

id objc_msgSend_classForStackBaseContainerForCurrentTraits(void *a1, const char *a2, ...)
{
  return _[a1 classForStackBaseContainerForCurrentTraits];
}

id objc_msgSend_cleanUp(void *a1, const char *a2, ...)
{
  return _[a1 cleanUp];
}

id objc_msgSend_cleanupSelectionState(void *a1, const char *a2, ...)
{
  return _[a1 cleanupSelectionState];
}

id objc_msgSend_clearCache(void *a1, const char *a2, ...)
{
  return _[a1 clearCache];
}

id objc_msgSend_clearCachedFonts(void *a1, const char *a2, ...)
{
  return _[a1 clearCachedFonts];
}

id objc_msgSend_clearCalculatedValues(void *a1, const char *a2, ...)
{
  return _[a1 clearCalculatedValues];
}

id objc_msgSend_clearColor(void *a1, const char *a2, ...)
{
  return _[a1 clearColor];
}

id objc_msgSend_clearSelection(void *a1, const char *a2, ...)
{
  return _[a1 clearSelection];
}

id objc_msgSend_clearTemporaryViews(void *a1, const char *a2, ...)
{
  return _[a1 clearTemporaryViews];
}

id objc_msgSend_closestOccurrenceToTomorrowForEventObjectID_(void *a1, const char *a2, ...)
{
  return [a1 closestOccurrenceToTomorrowForEventObjectID:];
}

id objc_msgSend_collapsedSectionIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 collapsedSectionIdentifiers];
}

id objc_msgSend_collectionForDayType_(void *a1, const char *a2, ...)
{
  return [a1 collectionForDayType:];
}

id objc_msgSend_color(void *a1, const char *a2, ...)
{
  return _[a1 color];
}

id objc_msgSend_colorBarConstraints(void *a1, const char *a2, ...)
{
  return _[a1 colorBarConstraints];
}

id objc_msgSend_colorEffectSaturate_(void *a1, const char *a2, ...)
{
  return [a1 colorEffectSaturate:];
}

id objc_msgSend_colorForCalendar_(void *a1, const char *a2, ...)
{
  return [a1 colorForCalendar:];
}

id objc_msgSend_colorNamed_(void *a1, const char *a2, ...)
{
  return [a1 colorNamed:];
}

id objc_msgSend_colorString(void *a1, const char *a2, ...)
{
  return _[a1 colorString];
}

id objc_msgSend_colorWithAlphaComponent_(void *a1, const char *a2, ...)
{
  return [a1 colorWithAlphaComponent:];
}

id objc_msgSend_colorWithCGColor_(void *a1, const char *a2, ...)
{
  return [a1 colorWithCGColor:];
}

id objc_msgSend_colorWithDynamicProvider_(void *a1, const char *a2, ...)
{
  return [a1 colorWithDynamicProvider:];
}

id objc_msgSend_colorWithPatternImage_(void *a1, const char *a2, ...)
{
  return [a1 colorWithPatternImage:];
}

id objc_msgSend_colorWithRed_green_blue_alpha_(void *a1, const char *a2, ...)
{
  return [a1 colorWithRed:green:blue:alpha:];
}

id objc_msgSend_colorWithWhite_alpha_(void *a1, const char *a2, ...)
{
  return [a1 colorWithWhite:alpha:];
}

id objc_msgSend_commandWithTitle_image_action_input_modifierFlags_propertyList_(void *a1, const char *a2, ...)
{
  return [a1 commandWithTitle:image:action:input:modifierFlags:propertyList:];
}

id objc_msgSend_comment_withInsertedAutoCommentForDate_timeZone_(void *a1, const char *a2, ...)
{
  return [a1 comment:withInsertedAutoCommentForDate:timeZone:];
}

id objc_msgSend_commentPromptRelatedConstraints(void *a1, const char *a2, ...)
{
  return _[a1 commentPromptRelatedConstraints];
}

id objc_msgSend_commit(void *a1, const char *a2, ...)
{
  return _[a1 commit];
}

id objc_msgSend_commitWithRollback_(void *a1, const char *a2, ...)
{
  return [a1 commitWithRollback:];
}

id objc_msgSend_committedValueForKey_(void *a1, const char *a2, ...)
{
  return [a1 committedValueForKey:];
}

id objc_msgSend_compact(void *a1, const char *a2, ...)
{
  return _[a1 compact];
}

id objc_msgSend_compactHourFont(void *a1, const char *a2, ...)
{
  return _[a1 compactHourFont];
}

id objc_msgSend_compactMonthListViewController_didSelectEvent_showMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compactMonthListViewController:didSelectEvent:showMode:");
}

id objc_msgSend_compactMonthListViewController_wantsToCommitViewControllerFromPreview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compactMonthListViewController:wantsToCommitViewControllerFromPreview:");
}

id objc_msgSend_compactMonthListViewDelegate(void *a1, const char *a2, ...)
{
  return _[a1 compactMonthListViewDelegate];
}

id objc_msgSend_compactMonthMenu(void *a1, const char *a2, ...)
{
  return _[a1 compactMonthMenu];
}

id objc_msgSend_compactOccurrenceHeight(void *a1, const char *a2, ...)
{
  return _[a1 compactOccurrenceHeight];
}

id objc_msgSend_compactTextFont(void *a1, const char *a2, ...)
{
  return _[a1 compactTextFont];
}

id objc_msgSend_compare_(void *a1, const char *a2, ...)
{
  return [a1 compare:];
}

id objc_msgSend_comparePointersOfArray_withArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "comparePointersOfArray:withArray:");
}

id objc_msgSend_completeAndSaveWithContinueBlock_(void *a1, const char *a2, ...)
{
  return [a1 completeAndSaveWithContinueBlock:];
}

id objc_msgSend_completeReminderFromTap_(void *a1, const char *a2, ...)
{
  return [a1 completeReminderFromTap:];
}

id objc_msgSend_completeSetup(void *a1, const char *a2, ...)
{
  return _[a1 completeSetup];
}

id objc_msgSend_completeTransition_(void *a1, const char *a2, ...)
{
  return [a1 completeTransition:];
}

id objc_msgSend_completed(void *a1, const char *a2, ...)
{
  return _[a1 completed];
}

id objc_msgSend_completion(void *a1, const char *a2, ...)
{
  return _[a1 completion];
}

id objc_msgSend_component_fromDate_(void *a1, const char *a2, ...)
{
  return [a1 component:fromDate:];
}

id objc_msgSend_components_fromDate_(void *a1, const char *a2, ...)
{
  return [a1 components:fromDate:];
}

id objc_msgSend_components_fromDate_toDate_options_(void *a1, const char *a2, ...)
{
  return [a1 components:fromDate:toDate:options:];
}

id objc_msgSend_componentsSeparatedByString_(void *a1, const char *a2, ...)
{
  return [a1 componentsSeparatedByString:];
}

id objc_msgSend_compressedVerticalMode(void *a1, const char *a2, ...)
{
  return _[a1 compressedVerticalMode];
}

id objc_msgSend_conferenceStringForURL_conferenceURLIsBroadcast_options_(void *a1, const char *a2, ...)
{
  return [a1 conferenceStringForURL:conferenceURLIsBroadcast:options:];
}

id objc_msgSend_conferenceURLForDisplay(void *a1, const char *a2, ...)
{
  return _[a1 conferenceURLForDisplay];
}

id objc_msgSend_configuration(void *a1, const char *a2, ...)
{
  return _[a1 configuration];
}

id objc_msgSend_configurationByApplyingConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 configurationByApplyingConfiguration:];
}

id objc_msgSend_configurationWithFont_(void *a1, const char *a2, ...)
{
  return [a1 configurationWithFont:];
}

id objc_msgSend_configurationWithIdentifier_previewProvider_actionProvider_(void *a1, const char *a2, ...)
{
  return [a1 configurationWithIdentifier:previewProvider:actionProvider:];
}

id objc_msgSend_configurationWithPaletteColors_(void *a1, const char *a2, ...)
{
  return [a1 configurationWithPaletteColors:];
}

id objc_msgSend_configurationWithPointSize_weight_scale_(void *a1, const char *a2, ...)
{
  return [a1 configurationWithPointSize:weight:scale:];
}

id objc_msgSend_configurationWithScale_(void *a1, const char *a2, ...)
{
  return [a1 configurationWithScale:];
}

id objc_msgSend_configurationWithTextStyle_(void *a1, const char *a2, ...)
{
  return [a1 configurationWithTextStyle:];
}

id objc_msgSend_configurationWithTextStyle_scale_(void *a1, const char *a2, ...)
{
  return [a1 configurationWithTextStyle:scale:];
}

id objc_msgSend_configureTipsCenter(void *a1, const char *a2, ...)
{
  return _[a1 configureTipsCenter];
}

id objc_msgSend_configureWithAllDayCount_birthdayCount_(void *a1, const char *a2, ...)
{
  return [a1 configureWithAllDayCount:birthdayCount:];
}

id objc_msgSend_configureWithContact_displayName_address_notificationCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithContact:displayName:address:notificationCount:");
}

id objc_msgSend_configureWithDate_timeZone_(void *a1, const char *a2, ...)
{
  return [a1 configureWithDate:timeZone:];
}

id objc_msgSend_configureWithOpaqueBackground(void *a1, const char *a2, ...)
{
  return _[a1 configureWithOpaqueBackground];
}

id objc_msgSend_confirmDismissAlertController(void *a1, const char *a2, ...)
{
  return _[a1 confirmDismissAlertController];
}

id objc_msgSend_conflictDict(void *a1, const char *a2, ...)
{
  return _[a1 conflictDict];
}

id objc_msgSend_conflictInfoForNotification_(void *a1, const char *a2, ...)
{
  return [a1 conflictInfoForNotification:];
}

id objc_msgSend_conflictStringForConflictDetails_maxTitleLength_descriptions_(void *a1, const char *a2, ...)
{
  return [a1 conflictStringForConflictDetails:maxTitleLength:descriptions:];
}

id objc_msgSend_conflictingDates(void *a1, const char *a2, ...)
{
  return _[a1 conflictingDates];
}

id objc_msgSend_conformsToProtocol_(void *a1, const char *a2, ...)
{
  return [a1 conformsToProtocol:];
}

id objc_msgSend_connectedScenes(void *a1, const char *a2, ...)
{
  return _[a1 connectedScenes];
}

id objc_msgSend_constrainedFontForTextStyle_maximumContentSizeCategory_traitCollection_(void *a1, const char *a2, ...)
{
  return [a1 constrainedFontForTextStyle:maximumContentSizeCategory:traitCollection:];
}

id objc_msgSend_constrainedFontForTextStyle_minimumContentSizeCategory_maximumContentSizeCategory_traitCollection_(void *a1, const char *a2, ...)
{
  return [a1 constrainedFontForTextStyle:minimumContentSizeCategory:maximumContentSizeCategory:traitCollection:];
}

id objc_msgSend_constraintEqualToAnchor_(void *a1, const char *a2, ...)
{
  return [a1 constraintEqualToAnchor:];
}

id objc_msgSend_constraintEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return [a1 constraintEqualToAnchor:constant:];
}

id objc_msgSend_constraintEqualToConstant_(void *a1, const char *a2, ...)
{
  return [a1 constraintEqualToConstant:];
}

id objc_msgSend_constraintEqualToSystemSpacingAfterAnchor_multiplier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToSystemSpacingAfterAnchor:multiplier:");
}

id objc_msgSend_constraintEqualToSystemSpacingBelowAnchor_multiplier_(void *a1, const char *a2, ...)
{
  return [a1 constraintEqualToSystemSpacingBelowAnchor:multiplier:];
}

id objc_msgSend_constraintGreaterThanOrEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return [a1 constraintGreaterThanOrEqualToAnchor:constant:];
}

id objc_msgSend_constraintGreaterThanOrEqualToConstant_(void *a1, const char *a2, ...)
{
  return [a1 constraintGreaterThanOrEqualToConstant:];
}

id objc_msgSend_constraintGreaterThanOrEqualToSystemSpacingAfterAnchor_multiplier_(void *a1, const char *a2, ...)
{
  return [a1 constraintGreaterThanOrEqualToSystemSpacingAfterAnchor:multiplier:];
}

id objc_msgSend_constraintLessThanOrEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return [a1 constraintLessThanOrEqualToAnchor:constant:];
}

id objc_msgSend_constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant_(void *a1, const char *a2, ...)
{
  return [a1 constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:];
}

id objc_msgSend_constraints(void *a1, const char *a2, ...)
{
  return _[a1 constraints];
}

id objc_msgSend_constraintsWithVisualFormat_options_metrics_views_(void *a1, const char *a2, ...)
{
  return [a1 constraintsWithVisualFormat:];
}

id objc_msgSend_contact(void *a1, const char *a2, ...)
{
  return _[a1 contact];
}

id objc_msgSend_contactForAddress_fullName_firstName_lastName_keysToFetch_(void *a1, const char *a2, ...)
{
  return [a1 contactForAddress:firstName:lastName:keysToFetch:];
}

id objc_msgSend_contactForContact_keysToFetch_(void *a1, const char *a2, ...)
{
  return [a1 contactForContact:keysToFetch:];
}

id objc_msgSend_contactKeysToFetch(void *a1, const char *a2, ...)
{
  return _[a1 contactKeysToFetch];
}

id objc_msgSend_contactStore(void *a1, const char *a2, ...)
{
  return _[a1 contactStore];
}

id objc_msgSend_container(void *a1, const char *a2, ...)
{
  return _[a1 container];
}

id objc_msgSend_containerView(void *a1, const char *a2, ...)
{
  return _[a1 containerView];
}

id objc_msgSend_containerViewForOccurrencePreview(void *a1, const char *a2, ...)
{
  return _[a1 containerViewForOccurrencePreview];
}

id objc_msgSend_containingPalette(void *a1, const char *a2, ...)
{
  return _[a1 containingPalette];
}

id objc_msgSend_containsCalendarDate_(void *a1, const char *a2, ...)
{
  return [a1 containsCalendarDate:];
}

id objc_msgSend_containsDate_(void *a1, const char *a2, ...)
{
  return [a1 containsDate:];
}

id objc_msgSend_containsDelegateSources(void *a1, const char *a2, ...)
{
  return _[a1 containsDelegateSources];
}

id objc_msgSend_containsFirstDayOfMonth(void *a1, const char *a2, ...)
{
  return _[a1 containsFirstDayOfMonth];
}

id objc_msgSend_containsLastMonthOfYear(void *a1, const char *a2, ...)
{
  return _[a1 containsLastMonthOfYear];
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsObject:");
}

id objc_msgSend_containsString_(void *a1, const char *a2, ...)
{
  return [a1 containsString:];
}

id objc_msgSend_content(void *a1, const char *a2, ...)
{
  return _[a1 content];
}

id objc_msgSend_contentFrame(void *a1, const char *a2, ...)
{
  return _[a1 contentFrame];
}

id objc_msgSend_contentHeightForFontSize_overlayFontSize_(void *a1, const char *a2, ...)
{
  return [a1 contentHeightForFontSize:overlayFontSize:];
}

id objc_msgSend_contentInset(void *a1, const char *a2, ...)
{
  return _[a1 contentInset];
}

id objc_msgSend_contentInsets(void *a1, const char *a2, ...)
{
  return _[a1 contentInsets];
}

id objc_msgSend_contentOffset(void *a1, const char *a2, ...)
{
  return _[a1 contentOffset];
}

id objc_msgSend_contentSize(void *a1, const char *a2, ...)
{
  return _[a1 contentSize];
}

id objc_msgSend_contentSizeCategoryChanged(void *a1, const char *a2, ...)
{
  return _[a1 contentSizeCategoryChanged];
}

id objc_msgSend_contentSizeCategoryScaledValueForDefaultValue_maximumValue_shouldScaleForSmallerSizes_(void *a1, const char *a2, ...)
{
  return [a1 contentSizeCategoryScaledValueForDefaultValue:maximumValue:shouldScaleForSmallerSizes:];
}

id objc_msgSend_contentSizeCategoryScaledValueForDefaultValue_shouldScaleForSmallerSizes_(void *a1, const char *a2, ...)
{
  return [a1 contentSizeCategoryScaledValueForDefaultValue:shouldScaleForSmallerSizes:];
}

id objc_msgSend_contentUnavailableConfigurationForState_(void *a1, const char *a2, ...)
{
  return [a1 contentUnavailableConfigurationForState:];
}

id objc_msgSend_contentView(void *a1, const char *a2, ...)
{
  return _[a1 contentView];
}

id objc_msgSend_contentWidth(void *a1, const char *a2, ...)
{
  return _[a1 contentWidth];
}

id objc_msgSend_context(void *a1, const char *a2, ...)
{
  return _[a1 context];
}

id objc_msgSend_continueButtonText(void *a1, const char *a2, ...)
{
  return _[a1 continueButtonText];
}

id objc_msgSend_continueSearchWithTerm_(void *a1, const char *a2, ...)
{
  return [a1 continueSearchWithTerm:];
}

id objc_msgSend_continueSearchWithTerm_animated_removeViewControllersIncapableOfSearchIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "continueSearchWithTerm:animated:removeViewControllersIncapableOfSearchIfNeeded:");
}

id objc_msgSend_controller(void *a1, const char *a2, ...)
{
  return _[a1 controller];
}

id objc_msgSend_controllerAppearedTipsConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 controllerAppearedTipsConfiguration];
}

id objc_msgSend_convertPoint_fromView_(void *a1, const char *a2, ...)
{
  return [a1 convertPoint:fromView:];
}

id objc_msgSend_convertPoint_toView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertPoint:toView:");
}

id objc_msgSend_convertRect_fromView_(void *a1, const char *a2, ...)
{
  return [a1 convertRect:fromView:];
}

id objc_msgSend_convertRect_toView_(void *a1, const char *a2, ...)
{
  return [a1 convertRect:toView:];
}

id objc_msgSend_coordinate(void *a1, const char *a2, ...)
{
  return _[a1 coordinate];
}

id objc_msgSend_coordinateSpace(void *a1, const char *a2, ...)
{
  return _[a1 coordinateSpace];
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_copyEvents_delegate_(void *a1, const char *a2, ...)
{
  return [a1 copyEvents:delegate:];
}

id objc_msgSend_couldBeJunk(void *a1, const char *a2, ...)
{
  return _[a1 couldBeJunk];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_createCellWithFrame_(void *a1, const char *a2, ...)
{
  return [a1 createCellWithFrame:];
}

id objc_msgSend_createInitialViewForDate_(void *a1, const char *a2, ...)
{
  return [a1 createInitialViewForDate:];
}

id objc_msgSend_createNewCalendarModel(void *a1, const char *a2, ...)
{
  return _[a1 createNewCalendarModel];
}

id objc_msgSend_createOccurrenceViewForEventGestures(void *a1, const char *a2, ...)
{
  return _[a1 createOccurrenceViewForEventGestures];
}

id objc_msgSend_createSearchBarIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 createSearchBarIfNeeded];
}

id objc_msgSend_createTestEvent_numAttendees_(void *a1, const char *a2, ...)
{
  return [a1 createTestEvent:numAttendees:];
}

id objc_msgSend_createViewController_(void *a1, const char *a2, ...)
{
  return [a1 createViewController:];
}

id objc_msgSend_createdNewEventUsingCreationGesture_(void *a1, const char *a2, ...)
{
  return [a1 createdNewEventUsingCreationGesture:];
}

id objc_msgSend_creationMethod(void *a1, const char *a2, ...)
{
  return _[a1 creationMethod];
}

id objc_msgSend_crossfadeToCell_(void *a1, const char *a2, ...)
{
  return [a1 crossfadeToCell:];
}

id objc_msgSend_cuik_nonTodayTimelineColor(void *a1, const char *a2, ...)
{
  return [a1 cuik_nonTodayTimelineColor];
}

id objc_msgSend_cuik_preferredTightLeadingFontForTextStyle_(void *a1, const char *a2, ...)
{
  return [a1 cuik_preferredTightLeadingFontForTextStyle:];
}

id objc_msgSend_cuik_todayTimelineColor(void *a1, const char *a2, ...)
{
  return [a1 cuik_todayTimelineColor];
}

id objc_msgSend_currentCalendar(void *a1, const char *a2, ...)
{
  return _[a1 currentCalendar];
}

id objc_msgSend_currentChildViewController(void *a1, const char *a2, ...)
{
  return _[a1 currentChildViewController];
}

id objc_msgSend_currentChildViewControllerIsLoaded(void *a1, const char *a2, ...)
{
  return _[a1 currentChildViewControllerIsLoaded];
}

id objc_msgSend_currentDayContainsOccurrences(void *a1, const char *a2, ...)
{
  return _[a1 currentDayContainsOccurrences];
}

id objc_msgSend_currentDayView(void *a1, const char *a2, ...)
{
  return _[a1 currentDayView];
}

id objc_msgSend_currentDayViewMode(void *a1, const char *a2, ...)
{
  return _[a1 currentDayViewMode];
}

id objc_msgSend_currentDevice(void *a1, const char *a2, ...)
{
  return _[a1 currentDevice];
}

id objc_msgSend_currentDragSnappingType(void *a1, const char *a2, ...)
{
  return _[a1 currentDragSnappingType];
}

id objc_msgSend_currentEditor(void *a1, const char *a2, ...)
{
  return _[a1 currentEditor];
}

id objc_msgSend_currentHandler(void *a1, const char *a2, ...)
{
  return _[a1 currentHandler];
}

id objc_msgSend_currentImageState(void *a1, const char *a2, ...)
{
  return _[a1 currentImageState];
}

id objc_msgSend_currentLocale(void *a1, const char *a2, ...)
{
  return _[a1 currentLocale];
}

id objc_msgSend_currentManager(void *a1, const char *a2, ...)
{
  return _[a1 currentManager];
}

id objc_msgSend_currentNotificationCenter(void *a1, const char *a2, ...)
{
  return _[a1 currentNotificationCenter];
}

id objc_msgSend_currentPresentationController(void *a1, const char *a2, ...)
{
  return _[a1 currentPresentationController];
}

id objc_msgSend_currentRootViewController(void *a1, const char *a2, ...)
{
  return _[a1 currentRootViewController];
}

id objc_msgSend_currentRunLoop(void *a1, const char *a2, ...)
{
  return _[a1 currentRunLoop];
}

id objc_msgSend_currentScrollViewXOffset(void *a1, const char *a2, ...)
{
  return _[a1 currentScrollViewXOffset];
}

id objc_msgSend_currentSidebarState(void *a1, const char *a2, ...)
{
  return _[a1 currentSidebarState];
}

id objc_msgSend_currentTimeFrame(void *a1, const char *a2, ...)
{
  return _[a1 currentTimeFrame];
}

id objc_msgSend_currentTraitCollection(void *a1, const char *a2, ...)
{
  return _[a1 currentTraitCollection];
}

id objc_msgSend_currentViewType(void *a1, const char *a2, ...)
{
  return _[a1 currentViewType];
}

id objc_msgSend_currentlyCreatingEvent(void *a1, const char *a2, ...)
{
  return _[a1 currentlyCreatingEvent];
}

id objc_msgSend_currentlyEditingEventsWithGestures(void *a1, const char *a2, ...)
{
  return _[a1 currentlyEditingEventsWithGestures];
}

id objc_msgSend_currentlyLocked(void *a1, const char *a2, ...)
{
  return _[a1 currentlyLocked];
}

id objc_msgSend_currentlySelectedOccurrenceViewSource(void *a1, const char *a2, ...)
{
  return _[a1 currentlySelectedOccurrenceViewSource];
}

id objc_msgSend_currentlyVisibleDateRangeFromStartDate_toEndDate_(void *a1, const char *a2, ...)
{
  return [a1 currentlyVisibleDateRangeFromStartDate:toEndDate:];
}

id objc_msgSend_customBadgedButtonWithImage_action_(void *a1, const char *a2, ...)
{
  return [a1 customBadgedButtonWithImage:action:];
}

id objc_msgSend_customView(void *a1, const char *a2, ...)
{
  return _[a1 customView];
}

id objc_msgSend_cutEvents_delegate_(void *a1, const char *a2, ...)
{
  return [a1 cutEvents:delegate:];
}

id objc_msgSend_dashboardService(void *a1, const char *a2, ...)
{
  return _[a1 dashboardService];
}

id objc_msgSend_dataForEventID_(void *a1, const char *a2, ...)
{
  return [a1 dataForEventID:];
}

id objc_msgSend_dataReloadedWithTrigger_(void *a1, const char *a2, ...)
{
  return [a1 dataReloadedWithTrigger:];
}

id objc_msgSend_dataSource(void *a1, const char *a2, ...)
{
  return _[a1 dataSource];
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _[a1 date];
}

id objc_msgSend_dateAtPoint_(void *a1, const char *a2, ...)
{
  return [a1 dateAtPoint:];
}

id objc_msgSend_dateAtPoint_isAllDay_(void *a1, const char *a2, ...)
{
  return [a1 dateAtPoint:isAllDay:];
}

id objc_msgSend_dateAtPoint_isAllDay_requireAllDayRegionInsistence_(void *a1, const char *a2, ...)
{
  return [a1 dateAtPoint:isAllDay:requireAllDayRegionInsistence:];
}

id objc_msgSend_dateBaselineToLocationBaselineConstraint(void *a1, const char *a2, ...)
{
  return _[a1 dateBaselineToLocationBaselineConstraint];
}

id objc_msgSend_dateBaselineToTitleBaselineConstraint(void *a1, const char *a2, ...)
{
  return _[a1 dateBaselineToTitleBaselineConstraint];
}

id objc_msgSend_dateByAddingComponents_toDate_options_(void *a1, const char *a2, ...)
{
  return [a1 dateByAddingComponents:toDate:options:];
}

id objc_msgSend_dateByAddingDays_inCalendar_(void *a1, const char *a2, ...)
{
  return [a1 dateByAddingDays:inCalendar:];
}

id objc_msgSend_dateByAddingHours_inCalendar_(void *a1, const char *a2, ...)
{
  return [a1 dateByAddingHours:];
}

id objc_msgSend_dateByAddingTimeInterval_(void *a1, const char *a2, ...)
{
  return [a1 dateByAddingTimeInterval:];
}

id objc_msgSend_dateByAddingUnit_value_toDate_options_(void *a1, const char *a2, ...)
{
  return [a1 dateByAddingUnit:value:toDate:options:];
}

id objc_msgSend_dateChanged(void *a1, const char *a2, ...)
{
  return _[a1 dateChanged];
}

id objc_msgSend_dateComponentsForDateOnly(void *a1, const char *a2, ...)
{
  return _[a1 dateComponentsForDateOnly];
}

id objc_msgSend_dateForCachedOccurrencesInSection_(void *a1, const char *a2, ...)
{
  return [a1 dateForCachedOccurrencesInSection:];
}

id objc_msgSend_dateForCachedOccurrencesInSection_usingFilter_(void *a1, const char *a2, ...)
{
  return [a1 dateForCachedOccurrencesInSection:usingFilter:];
}

id objc_msgSend_dateForCurrentMonthOnScreen(void *a1, const char *a2, ...)
{
  return _[a1 dateForCurrentMonthOnScreen];
}

id objc_msgSend_dateForDayInTimeZone_(void *a1, const char *a2, ...)
{
  return [a1 dateForDayInTimeZone:];
}

id objc_msgSend_dateForEndOfDayInTimeZone_(void *a1, const char *a2, ...)
{
  return [a1 dateForEndOfDayInTimeZone:];
}

id objc_msgSend_dateForIndex_(void *a1, const char *a2, ...)
{
  return [a1 dateForIndex:];
}

id objc_msgSend_dateForSection_(void *a1, const char *a2, ...)
{
  return [a1 dateForSection:];
}

id objc_msgSend_dateForStartOfDayInTimeZone_(void *a1, const char *a2, ...)
{
  return [a1 dateForStartOfDayInTimeZone:];
}

id objc_msgSend_dateForTopVisibleMonthOnScreen(void *a1, const char *a2, ...)
{
  return _[a1 dateForTopVisibleMonthOnScreen];
}

id objc_msgSend_dateForWeek_(void *a1, const char *a2, ...)
{
  return [a1 dateForWeek:];
}

id objc_msgSend_dateForXOffset_(void *a1, const char *a2, ...)
{
  return [a1 dateForXOffset:];
}

id objc_msgSend_dateFormatFromTemplate_options_locale_(void *a1, const char *a2, ...)
{
  return [a1 dateFormatFromTemplate:options:locale:];
}

id objc_msgSend_dateFromComponents_(void *a1, const char *a2, ...)
{
  return [a1 dateFromComponents:];
}

id objc_msgSend_dateIsVisible_(void *a1, const char *a2, ...)
{
  return [a1 dateIsVisible:];
}

id objc_msgSend_dateIsWeekend_(void *a1, const char *a2, ...)
{
  return [a1 dateIsWeekend:];
}

id objc_msgSend_dateLabel(void *a1, const char *a2, ...)
{
  return _[a1 dateLabel];
}

id objc_msgSend_dateOfCenterViewInBuffer(void *a1, const char *a2, ...)
{
  return _[a1 dateOfCenterViewInBuffer];
}

id objc_msgSend_dateOfCenterViewOnScreen(void *a1, const char *a2, ...)
{
  return _[a1 dateOfCenterViewOnScreen];
}

id objc_msgSend_dateOfViewInBufferIndexRelativeToCenter_(void *a1, const char *a2, ...)
{
  return [a1 dateOfViewInBufferIndexRelativeToCenter:];
}

id objc_msgSend_dateString(void *a1, const char *a2, ...)
{
  return _[a1 dateString];
}

id objc_msgSend_dateStringForDate_allDay_standalone_shortFormat_(void *a1, const char *a2, ...)
{
  return [a1 dateStringForDate:allDay:standalone:shortFormat:];
}

id objc_msgSend_dateStringVisible(void *a1, const char *a2, ...)
{
  return _[a1 dateStringVisible];
}

id objc_msgSend_dateWithTimeIntervalSinceNow_(void *a1, const char *a2, ...)
{
  return [a1 dateWithTimeIntervalSinceNow:];
}

id objc_msgSend_dateWithTimeIntervalSinceReferenceDate_(void *a1, const char *a2, ...)
{
  return [a1 dateWithTimeIntervalSinceReferenceDate:];
}

id objc_msgSend_day(void *a1, const char *a2, ...)
{
  return _[a1 day];
}

id objc_msgSend_dayBadgeColor(void *a1, const char *a2, ...)
{
  return _[a1 dayBadgeColor];
}

id objc_msgSend_dayBadgeColorsFromOccurrences(void *a1, const char *a2, ...)
{
  return _[a1 dayBadgeColorsFromOccurrences];
}

id objc_msgSend_dayBadgeLocale(void *a1, const char *a2, ...)
{
  return _[a1 dayBadgeLocale];
}

id objc_msgSend_dayBadgeLocalesFromOccurrences(void *a1, const char *a2, ...)
{
  return _[a1 dayBadgeLocalesFromOccurrences];
}

id objc_msgSend_dayBadgeType(void *a1, const char *a2, ...)
{
  return _[a1 dayBadgeType];
}

id objc_msgSend_dayCellSize(void *a1, const char *a2, ...)
{
  return _[a1 dayCellSize];
}

id objc_msgSend_dayCellsScrubbingGestureRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 dayCellsScrubbingGestureRecognizer];
}

id objc_msgSend_dayCellsTapGestureRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 dayCellsTapGestureRecognizer];
}

id objc_msgSend_dayCircleFrame(void *a1, const char *a2, ...)
{
  return _[a1 dayCircleFrame];
}

id objc_msgSend_dayComponents(void *a1, const char *a2, ...)
{
  return _[a1 dayComponents];
}

id objc_msgSend_dayContent(void *a1, const char *a2, ...)
{
  return _[a1 dayContent];
}

id objc_msgSend_dayCount(void *a1, const char *a2, ...)
{
  return _[a1 dayCount];
}

id objc_msgSend_dayDataWithEventCount_dayType_(void *a1, const char *a2, ...)
{
  return [a1 dayDataWithEventCount:dayType:];
}

id objc_msgSend_dayDateAtPoint_(void *a1, const char *a2, ...)
{
  return [a1 dayDateAtPoint:];
}

id objc_msgSend_dayForPoint_(void *a1, const char *a2, ...)
{
  return [a1 dayForPoint:];
}

id objc_msgSend_dayFrame(void *a1, const char *a2, ...)
{
  return _[a1 dayFrame];
}

id objc_msgSend_dayFrameRightInset(void *a1, const char *a2, ...)
{
  return _[a1 dayFrameRightInset];
}

id objc_msgSend_dayFrames(void *a1, const char *a2, ...)
{
  return _[a1 dayFrames];
}

id objc_msgSend_dayHeaderFrames(void *a1, const char *a2, ...)
{
  return _[a1 dayHeaderFrames];
}

id objc_msgSend_dayIndexForCalendarDate_(void *a1, const char *a2, ...)
{
  return [a1 dayIndexForCalendarDate:];
}

id objc_msgSend_dayIndexForToday(void *a1, const char *a2, ...)
{
  return _[a1 dayIndexForToday];
}

id objc_msgSend_dayInitialFont(void *a1, const char *a2, ...)
{
  return _[a1 dayInitialFont];
}

id objc_msgSend_dayInitialTextAlignment(void *a1, const char *a2, ...)
{
  return _[a1 dayInitialTextAlignment];
}

id objc_msgSend_dayInitialsHeaderView(void *a1, const char *a2, ...)
{
  return _[a1 dayInitialsHeaderView];
}

id objc_msgSend_dayLabelBaseHeight(void *a1, const char *a2, ...)
{
  return _[a1 dayLabelBaseHeight];
}

id objc_msgSend_dayLabelHeightWithSizeClass_usesMultiDay_(void *a1, const char *a2, ...)
{
  return [a1 dayLabelHeightWithSizeClass:usesMultiDay:];
}

id objc_msgSend_dayLabelYMargin(void *a1, const char *a2, ...)
{
  return _[a1 dayLabelYMargin];
}

id objc_msgSend_dayNavigationCellShouldEnableSpringLoading(void *a1, const char *a2, ...)
{
  return _[a1 dayNavigationCellShouldEnableSpringLoading];
}

id objc_msgSend_dayNavigationCellTouchUpOccurred_(void *a1, const char *a2, ...)
{
  return [a1 dayNavigationCellTouchUpOccurred:];
}

id objc_msgSend_dayNavigationView_dayDataForDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dayNavigationView:dayDataForDate:");
}

id objc_msgSend_dayNavigationView_didChangeCellWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dayNavigationView:didChangeCellWidth:");
}

id objc_msgSend_dayNavigationView_selectedDateChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dayNavigationView:selectedDateChanged:");
}

id objc_msgSend_dayNavigationViewAllowedToChangeSelectedDate(void *a1, const char *a2, ...)
{
  return _[a1 dayNavigationViewAllowedToChangeSelectedDate];
}

id objc_msgSend_dayNavigationViewController_didChangeCellWidth_(void *a1, const char *a2, ...)
{
  return [a1 dayNavigationViewController:didChangeCellWidth:];
}

id objc_msgSend_dayNavigationViewController_didSelectDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dayNavigationViewController:didSelectDate:");
}

id objc_msgSend_dayNavigationViewControllerAllowedToChangeSelectedDate(void *a1, const char *a2, ...)
{
  return _[a1 dayNavigationViewControllerAllowedToChangeSelectedDate];
}

id objc_msgSend_dayNavigationViewControllerFailedToChangeDate_(void *a1, const char *a2, ...)
{
  return [a1 dayNavigationViewControllerFailedToChangeDate:];
}

id objc_msgSend_dayNavigationViewFailedToSelectDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dayNavigationViewFailedToSelectDate:");
}

id objc_msgSend_dayNavigationViewIsLoadingSpecialDayData_(void *a1, const char *a2, ...)
{
  return [a1 dayNavigationViewIsLoadingSpecialDayData:];
}

id objc_msgSend_dayNavigationWeekScrollView_dayDataForDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dayNavigationWeekScrollView:dayDataForDate:");
}

id objc_msgSend_dayNavigationWeekScrollView_didChangeCellWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dayNavigationWeekScrollView:didChangeCellWidth:");
}

id objc_msgSend_dayNavigationWeekScrollView_selectedDateChanged_(void *a1, const char *a2, ...)
{
  return [a1 dayNavigationWeekScrollView:selectedDateChanged:];
}

id objc_msgSend_dayNavigationWeekScrollViewAllowedToChangeSelectedDate(void *a1, const char *a2, ...)
{
  return _[a1 dayNavigationWeekScrollViewAllowedToChangeSelectedDate];
}

id objc_msgSend_dayNavigationWeekScrollViewFailedToSelectDate_(void *a1, const char *a2, ...)
{
  return [a1 dayNavigationWeekScrollViewFailedToSelectDate:];
}

id objc_msgSend_dayNavigationWeekScrollViewIsLoadingSpecialDayData_(void *a1, const char *a2, ...)
{
  return [a1 dayNavigationWeekScrollViewIsLoadingSpecialDayData:];
}

id objc_msgSend_dayNumberCellFrames(void *a1, const char *a2, ...)
{
  return _[a1 dayNumberCellFrames];
}

id objc_msgSend_dayNumberFont(void *a1, const char *a2, ...)
{
  return _[a1 dayNumberFont];
}

id objc_msgSend_dayNumberFontForSize_(void *a1, const char *a2, ...)
{
  return [a1 dayNumberFontForSize:];
}

id objc_msgSend_dayNumberFontSize_(void *a1, const char *a2, ...)
{
  return [a1 dayNumberFontSize:];
}

id objc_msgSend_dayNumberLayerYOffsetCompressed_containsFirstDayOfMonth_(void *a1, const char *a2, ...)
{
  return [a1 dayNumberLayerYOffsetCompressed:containsFirstDayOfMonth:];
}

id objc_msgSend_dayNumberOverlayFontSize_(void *a1, const char *a2, ...)
{
  return [a1 dayNumberOverlayFontSize:];
}

id objc_msgSend_dayNumberString(void *a1, const char *a2, ...)
{
  return _[a1 dayNumberString];
}

id objc_msgSend_dayOfWeek(void *a1, const char *a2, ...)
{
  return _[a1 dayOfWeek];
}

id objc_msgSend_dayOfWeekStringForDate_(void *a1, const char *a2, ...)
{
  return [a1 dayOfWeekStringForDate:];
}

id objc_msgSend_dayOverlayFontForSize_(void *a1, const char *a2, ...)
{
  return [a1 dayOverlayFontForSize:];
}

id objc_msgSend_dayRange(void *a1, const char *a2, ...)
{
  return _[a1 dayRange];
}

id objc_msgSend_dayScrubberController(void *a1, const char *a2, ...)
{
  return _[a1 dayScrubberController];
}

id objc_msgSend_dayScrubberFrame(void *a1, const char *a2, ...)
{
  return _[a1 dayScrubberFrame];
}

id objc_msgSend_dayTextSize(void *a1, const char *a2, ...)
{
  return _[a1 dayTextSize];
}

id objc_msgSend_dayType(void *a1, const char *a2, ...)
{
  return _[a1 dayType];
}

id objc_msgSend_dayTypeBadge(void *a1, const char *a2, ...)
{
  return _[a1 dayTypeBadge];
}

id objc_msgSend_dayTypeBadgeBackgroundColorForVerticallyCompressedMode_(void *a1, const char *a2, ...)
{
  return [a1 dayTypeBadgeBackgroundColorForVerticallyCompressedMode:];
}

id objc_msgSend_dayTypeBadgeColor(void *a1, const char *a2, ...)
{
  return _[a1 dayTypeBadgeColor];
}

id objc_msgSend_dayTypeBadgeDiameter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dayTypeBadgeDiameter:");
}

id objc_msgSend_dayTypeBadgeFrameFromDayNumberFrame_compressed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dayTypeBadgeFrameFromDayNumberFrame:compressed:");
}

id objc_msgSend_dayTypeBadgeLocale(void *a1, const char *a2, ...)
{
  return _[a1 dayTypeBadgeLocale];
}

id objc_msgSend_dayTypesFromOccurrences(void *a1, const char *a2, ...)
{
  return _[a1 dayTypesFromOccurrences];
}

id objc_msgSend_dayView(void *a1, const char *a2, ...)
{
  return _[a1 dayView];
}

id objc_msgSend_dayViewContent_didTapInEmptySpaceOnDay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dayViewContent:didTapInEmptySpaceOnDay:");
}

id objc_msgSend_dayViewController_createEventAtDate_allDay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dayViewController:createEventAtDate:allDay:");
}

id objc_msgSend_dayViewDayLocation(void *a1, const char *a2, ...)
{
  return _[a1 dayViewDayLocation];
}

id objc_msgSend_dayViewDidChangeSelectedDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dayViewDidChangeSelectedDate:");
}

id objc_msgSend_dayViewFirstVisibleSecond(void *a1, const char *a2, ...)
{
  return _[a1 dayViewFirstVisibleSecond];
}

id objc_msgSend_dayViewHourScale(void *a1, const char *a2, ...)
{
  return _[a1 dayViewHourScale];
}

id objc_msgSend_dayViewMonthLocation(void *a1, const char *a2, ...)
{
  return _[a1 dayViewMonthLocation];
}

id objc_msgSend_dayWidthForOrientation_withViewInViewHierarchy_(void *a1, const char *a2, ...)
{
  return [a1 dayWidthForOrientation:withViewInViewHierarchy:];
}

id objc_msgSend_daysFromFirstToMiddleDay(void *a1, const char *a2, ...)
{
  return _[a1 daysFromFirstToMiddleDay];
}

id objc_msgSend_daysInMonth(void *a1, const char *a2, ...)
{
  return _[a1 daysInMonth];
}

id objc_msgSend_daysInWeek(void *a1, const char *a2, ...)
{
  return _[a1 daysInWeek];
}

id objc_msgSend_daysToDisplay(void *a1, const char *a2, ...)
{
  return _[a1 daysToDisplay];
}

id objc_msgSend_daysYAdjustTop(void *a1, const char *a2, ...)
{
  return _[a1 daysYAdjustTop];
}

id objc_msgSend_deactivateConstraints_(void *a1, const char *a2, ...)
{
  return [a1 deactivateConstraints:];
}

id objc_msgSend_decelerationDistanceThresholdForDisplayingMonthBanner(void *a1, const char *a2, ...)
{
  return _[a1 decelerationDistanceThresholdForDisplayingMonthBanner];
}

id objc_msgSend_decelerationDistanceThresholdForPreferringMonthBoundary(void *a1, const char *a2, ...)
{
  return _[a1 decelerationDistanceThresholdForPreferringMonthBoundary];
}

id objc_msgSend_decelerationDistanceThresholdToStopShowingMonthBanner(void *a1, const char *a2, ...)
{
  return _[a1 decelerationDistanceThresholdToStopShowingMonthBanner];
}

id objc_msgSend_declinesToPerformCutCopyPasteAction_withSender_(void *a1, const char *a2, ...)
{
  return [a1 declinesToPerformCutCopyPasteAction:withSender:];
}

id objc_msgSend_defaultActionURL(void *a1, const char *a2, ...)
{
  return _[a1 defaultActionURL];
}

id objc_msgSend_defaultAlarmOffset(void *a1, const char *a2, ...)
{
  return _[a1 defaultAlarmOffset];
}

id objc_msgSend_defaultCalendarForNewEvents(void *a1, const char *a2, ...)
{
  return _[a1 defaultCalendarForNewEvents];
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _[a1 defaultCenter];
}

id objc_msgSend_defaultCircleDiameter(void *a1, const char *a2, ...)
{
  return _[a1 defaultCircleDiameter];
}

id objc_msgSend_defaultContactKeysToFetch(void *a1, const char *a2, ...)
{
  return _[a1 defaultContactKeysToFetch];
}

id objc_msgSend_defaultEventDuration(void *a1, const char *a2, ...)
{
  return _[a1 defaultEventDuration];
}

id objc_msgSend_defaultEventForSelectedDate(void *a1, const char *a2, ...)
{
  return _[a1 defaultEventForSelectedDate];
}

id objc_msgSend_defaultFormat(void *a1, const char *a2, ...)
{
  return _[a1 defaultFormat];
}

id objc_msgSend_defaultHeightForSizeClass_orientation_(void *a1, const char *a2, ...)
{
  return [a1 defaultHeightForSizeClass:orientation:];
}

id objc_msgSend_defaultHeightForSizeClass_orientation_withHourScale_(void *a1, const char *a2, ...)
{
  return [a1 defaultHeightForSizeClass:orientation:withHourScale:];
}

id objc_msgSend_defaultHourScale(void *a1, const char *a2, ...)
{
  return _[a1 defaultHourScale];
}

id objc_msgSend_defaultMargin(void *a1, const char *a2, ...)
{
  return _[a1 defaultMargin];
}

id objc_msgSend_defaultMonthsPerRowForWindowSize_(void *a1, const char *a2, ...)
{
  return [a1 defaultMonthsPerRowForWindowSize:];
}

id objc_msgSend_defaultPadding(void *a1, const char *a2, ...)
{
  return _[a1 defaultPadding];
}

id objc_msgSend_defaultProvider(void *a1, const char *a2, ...)
{
  return _[a1 defaultProvider];
}

id objc_msgSend_defaultRowHeight(void *a1, const char *a2, ...)
{
  return _[a1 defaultRowHeight];
}

id objc_msgSend_defaultTimeZone(void *a1, const char *a2, ...)
{
  return _[a1 defaultTimeZone];
}

id objc_msgSend_defaultTitleForCalendarItem(void *a1, const char *a2, ...)
{
  return _[a1 defaultTitleForCalendarItem];
}

id objc_msgSend_defaultWorkspace(void *a1, const char *a2, ...)
{
  return _[a1 defaultWorkspace];
}

id objc_msgSend_delaySubTestName(void *a1, const char *a2, ...)
{
  return _[a1 delaySubTestName];
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _[a1 delegate];
}

id objc_msgSend_delegateSources(void *a1, const char *a2, ...)
{
  return _[a1 delegateSources];
}

id objc_msgSend_delegatesMenu(void *a1, const char *a2, ...)
{
  return _[a1 delegatesMenu];
}

id objc_msgSend_deleteEvent_span_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteEvent:span:error:");
}

id objc_msgSend_deleteEvents_presentationController_(void *a1, const char *a2, ...)
{
  return [a1 deleteEvents:presentationController:];
}

id objc_msgSend_deleteRowsAtIndexPaths_withRowAnimation_(void *a1, const char *a2, ...)
{
  return [a1 deleteRowsAtIndexPaths:withRowAnimation:];
}

id objc_msgSend_deleteSections_withRowAnimation_(void *a1, const char *a2, ...)
{
  return [a1 deleteSections:withRowAnimation:];
}

id objc_msgSend_deleteSuggestedEvent_(void *a1, const char *a2, ...)
{
  return [a1 deleteSuggestedEvent:];
}

id objc_msgSend_dequeueReusableCellWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 dequeueReusableCellWithIdentifier:];
}

id objc_msgSend_dequeueReusableCellWithIdentifier_forIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 dequeueReusableCellWithIdentifier:forIndexPath:];
}

id objc_msgSend_dequeueReusableHeaderFooterViewWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 dequeueReusableHeaderFooterViewWithIdentifier:];
}

id objc_msgSend_dequeueReusableView(void *a1, const char *a2, ...)
{
  return _[a1 dequeueReusableView];
}

id objc_msgSend_descender(void *a1, const char *a2, ...)
{
  return _[a1 descender];
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return _[a1 description];
}

id objc_msgSend_descriptionStrings_(void *a1, const char *a2, ...)
{
  return [a1 descriptionStrings:];
}

id objc_msgSend_descriptorForRequiredKeys(void *a1, const char *a2, ...)
{
  return _[a1 descriptorForRequiredKeys];
}

id objc_msgSend_deselectAllRowsAnimated_(void *a1, const char *a2, ...)
{
  return [a1 deselectAllRowsAnimated:];
}

id objc_msgSend_deselectOccurrence_(void *a1, const char *a2, ...)
{
  return [a1 deselectOccurrence];
}

id objc_msgSend_deselectOccurrences_(void *a1, const char *a2, ...)
{
  return [a1 deselectOccurrences:];
}

id objc_msgSend_deselectRowAtIndexPath_animated_(void *a1, const char *a2, ...)
{
  return [a1 deselectRowAtIndexPath:animated:];
}

id objc_msgSend_destination(void *a1, const char *a2, ...)
{
  return _[a1 destination];
}

id objc_msgSend_detailLabel(void *a1, const char *a2, ...)
{
  return _[a1 detailLabel];
}

id objc_msgSend_detailTextLabel(void *a1, const char *a2, ...)
{
  return _[a1 detailTextLabel];
}

id objc_msgSend_detailsLeftInsetAdjustment(void *a1, const char *a2, ...)
{
  return _[a1 detailsLeftInsetAdjustment];
}

id objc_msgSend_detailsRightInsetAdjustment(void *a1, const char *a2, ...)
{
  return _[a1 detailsRightInsetAdjustment];
}

id objc_msgSend_diagnosticsViewController(void *a1, const char *a2, ...)
{
  return _[a1 diagnosticsViewController];
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _[a1 dictionary];
}

id objc_msgSend_dictionaryWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithCapacity:];
}

id objc_msgSend_dictionaryWithDictionary_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithDictionary:];
}

id objc_msgSend_dictionaryWithObject_forKey_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithObject:forKey:];
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithObjects:forKeys:count:];
}

id objc_msgSend_dictionaryWithObjectsAndKeys_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithObjectsAndKeys:];
}

id objc_msgSend_didAttemptToDismiss(void *a1, const char *a2, ...)
{
  return _[a1 didAttemptToDismiss];
}

id objc_msgSend_didBecomeActive(void *a1, const char *a2, ...)
{
  return _[a1 didBecomeActive];
}

id objc_msgSend_didChangeValueForKey_(void *a1, const char *a2, ...)
{
  return [a1 didChangeValueForKey:];
}

id objc_msgSend_didCompleteBackgroundOccurrenceRenderingForLargeMonthWeekView_(void *a1, const char *a2, ...)
{
  return [a1 didCompleteBackgroundOccurrenceRenderingForLargeMonthWeekView:];
}

id objc_msgSend_didCompleteMonthWeekViewBackgroundRendering(void *a1, const char *a2, ...)
{
  return _[a1 didCompleteMonthWeekViewBackgroundRendering];
}

id objc_msgSend_didCrossDragBoundary_(void *a1, const char *a2, ...)
{
  return [a1 didCrossDragBoundary:];
}

id objc_msgSend_didEditEvent_creationMethod_(void *a1, const char *a2, ...)
{
  return [a1 didEditEvent:creationMethod:];
}

id objc_msgSend_didEndDraggingWillDecelerate_(void *a1, const char *a2, ...)
{
  return [a1 didEndDraggingWillDecelerate:];
}

id objc_msgSend_didEndScrolling(void *a1, const char *a2, ...)
{
  return _[a1 didEndScrolling];
}

id objc_msgSend_didEnterBackground(void *a1, const char *a2, ...)
{
  return _[a1 didEnterBackground];
}

id objc_msgSend_didFinishScrolling(void *a1, const char *a2, ...)
{
  return _[a1 didFinishScrolling];
}

id objc_msgSend_didLoadInitialViews(void *a1, const char *a2, ...)
{
  return _[a1 didLoadInitialViews];
}

id objc_msgSend_didMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return [a1 didMoveToParentViewController:];
}

id objc_msgSend_didScroll(void *a1, const char *a2, ...)
{
  return _[a1 didScroll];
}

id objc_msgSend_didSelectEvent_userInitiated_(void *a1, const char *a2, ...)
{
  return [a1 didSelectEvent:userInitiated:];
}

id objc_msgSend_didSelectEvents_userInitiated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didSelectEvents:userInitiated:");
}

id objc_msgSend_didShowEventWithoutShowingDetails_(void *a1, const char *a2, ...)
{
  return [a1 didShowEventWithoutShowingDetails:];
}

id objc_msgSend_differenceInDays_(void *a1, const char *a2, ...)
{
  return [a1 differenceInDays:];
}

id objc_msgSend_differenceInMonths_(void *a1, const char *a2, ...)
{
  return [a1 differenceInMonths:];
}

id objc_msgSend_differenceInSeconds_(void *a1, const char *a2, ...)
{
  return [a1 differenceInSeconds:];
}

id objc_msgSend_dimOccurrence_occurrenceDate_(void *a1, const char *a2, ...)
{
  return [a1 dimOccurrence:occurrenceDate:];
}

id objc_msgSend_disableContinuity(void *a1, const char *a2, ...)
{
  return _[a1 disableContinuity];
}

id objc_msgSend_disableGestureRecognizers(void *a1, const char *a2, ...)
{
  return _[a1 disableGestureRecognizers];
}

id objc_msgSend_disableRotationTimings(void *a1, const char *a2, ...)
{
  return _[a1 disableRotationTimings];
}

id objc_msgSend_disableTodayPulse(void *a1, const char *a2, ...)
{
  return _[a1 disableTodayPulse];
}

id objc_msgSend_disableTodayPushes(void *a1, const char *a2, ...)
{
  return _[a1 disableTodayPushes];
}

id objc_msgSend_disabled(void *a1, const char *a2, ...)
{
  return _[a1 disabled];
}

id objc_msgSend_disappearingViewController(void *a1, const char *a2, ...)
{
  return _[a1 disappearingViewController];
}

id objc_msgSend_disclosureConstraints(void *a1, const char *a2, ...)
{
  return _[a1 disclosureConstraints];
}

id objc_msgSend_dismissAcceptedProposeNewTimeNotification(void *a1, const char *a2, ...)
{
  return _[a1 dismissAcceptedProposeNewTimeNotification];
}

id objc_msgSend_dismissAttendeeRepliedNotification(void *a1, const char *a2, ...)
{
  return _[a1 dismissAttendeeRepliedNotification];
}

id objc_msgSend_dismissDraggedOccurrencePresentationAnimated_(void *a1, const char *a2, ...)
{
  return [a1 dismissDraggedOccurrencePresentationAnimated:];
}

id objc_msgSend_dismissPresentedViewController(void *a1, const char *a2, ...)
{
  return _[a1 dismissPresentedViewController];
}

id objc_msgSend_dismissPresentedViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return [a1 dismissPresentedViewControllerAnimated:YES completion:nil];
}

id objc_msgSend_dismissSplashScreen(void *a1, const char *a2, ...)
{
  return _[a1 dismissSplashScreen];
}

id objc_msgSend_dismissTipDueToUserNavigationWithCompletionBlock_(void *a1, const char *a2, ...)
{
  return [a1 dismissTipDueToUserNavigationWithCompletionBlock:];
}

id objc_msgSend_dismissTipIfPresentedWithCompletionBlock_(void *a1, const char *a2, ...)
{
  return [a1 dismissTipIfPresentedWithCompletionBlock:];
}

id objc_msgSend_dismissViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return [a1 dismissViewControllerAnimated:completion:];
}

id objc_msgSend_dismissViewControllerWithTransition_completion_(void *a1, const char *a2, ...)
{
  return [a1 dismissViewControllerWithTransition:];
}

id objc_msgSend_dismissViewControllerWithoutEnqueuingWithTransition_completion_(void *a1, const char *a2, ...)
{
  return [a1 dismissViewControllerWithoutEnqueuingWithTransition:completion:];
}

id objc_msgSend_dismissing(void *a1, const char *a2, ...)
{
  return _[a1 dismissing];
}

id objc_msgSend_displayColor(void *a1, const char *a2, ...)
{
  return _[a1 displayColor];
}

id objc_msgSend_displayDate(void *a1, const char *a2, ...)
{
  return _[a1 displayDate];
}

id objc_msgSend_displayDetailsForURL_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 displayDetailsForURL:completionHandler:];
}

id objc_msgSend_displayIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 displayIfNeeded];
}

id objc_msgSend_displayIntegrationAlert_(void *a1, const char *a2, ...)
{
  return [a1 displayIntegrationAlert:];
}

id objc_msgSend_displayMode(void *a1, const char *a2, ...)
{
  return _[a1 displayMode];
}

id objc_msgSend_displayName(void *a1, const char *a2, ...)
{
  return _[a1 displayName];
}

id objc_msgSend_displayReviewPromptIfNeededInScene_calendarModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayReviewPromptIfNeededInScene:calendarModel:");
}

id objc_msgSend_displayScale(void *a1, const char *a2, ...)
{
  return _[a1 displayScale];
}

id objc_msgSend_displayType(void *a1, const char *a2, ...)
{
  return _[a1 displayType];
}

id objc_msgSend_displayableAccountErrorsForSource_(void *a1, const char *a2, ...)
{
  return [a1 displayableAccountErrorsForSource:];
}

id objc_msgSend_displayedDate(void *a1, const char *a2, ...)
{
  return _[a1 displayedDate];
}

id objc_msgSend_displayedDateChanged_userInitiated_(void *a1, const char *a2, ...)
{
  return [a1 displayedDateChanged:userInitiated:];
}

id objc_msgSend_displayedDaysForOrientation_withViewInViewHierarchy_(void *a1, const char *a2, ...)
{
  return [a1 displayedDaysForOrientation:withViewInViewHierarchy:];
}

id objc_msgSend_displayedDetailViewControllers(void *a1, const char *a2, ...)
{
  return _[a1 displayedDetailViewControllers];
}

id objc_msgSend_displayedEditor(void *a1, const char *a2, ...)
{
  return _[a1 displayedEditor];
}

id objc_msgSend_displayedOccurrencesChangedWithTrigger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayedOccurrencesChangedWithTrigger:");
}

id objc_msgSend_displayingRootView(void *a1, const char *a2, ...)
{
  return _[a1 displayingRootView];
}

id objc_msgSend_displaysDatesSnappedToWeekBoundaries(void *a1, const char *a2, ...)
{
  return _[a1 displaysDatesSnappedToWeekBoundaries];
}

id objc_msgSend_distanceToBottomOfCircleCompressed_containsFirstDay_(void *a1, const char *a2, ...)
{
  return [a1 distanceToBottomOfCircleCompressed:containsFirstDay:];
}

id objc_msgSend_dividedListMode(void *a1, const char *a2, ...)
{
  return _[a1 dividedListMode];
}

id objc_msgSend_dividedModeBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 dividedModeBackgroundColor];
}

id objc_msgSend_dividedMonthPaletteBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 dividedMonthPaletteBackgroundColor];
}

id objc_msgSend_dividerLineVisible(void *a1, const char *a2, ...)
{
  return _[a1 dividerLineVisible];
}

id objc_msgSend_doCrossfadeAnimationWithNavigationViewContents(void *a1, const char *a2, ...)
{
  return _[a1 doCrossfadeAnimationWithNavigationViewContents];
}

id objc_msgSend_donateIsPortraitOrientation_(void *a1, const char *a2, ...)
{
  return [a1 donateIsPortraitOrientation:];
}

id objc_msgSend_donateIsSelectedDateFiveDaysAwayFromToday_(void *a1, const char *a2, ...)
{
  return [a1 donateIsSelectedDateFiveDaysAwayFromToday:];
}

id objc_msgSend_donateShouldDisplayTip_(void *a1, const char *a2, ...)
{
  return [a1 donateShouldDisplayTip:];
}

id objc_msgSend_donateTodayButtonPressed(void *a1, const char *a2, ...)
{
  return _[a1 donateTodayButtonPressed];
}

id objc_msgSend_doneBlock(void *a1, const char *a2, ...)
{
  return _[a1 doneBlock];
}

id objc_msgSend_doneButtonTapped(void *a1, const char *a2, ...)
{
  return _[a1 doneButtonTapped];
}

id objc_msgSend_dotColor(void *a1, const char *a2, ...)
{
  return _[a1 dotColor];
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _[a1 doubleValue];
}

id objc_msgSend_dragAndDropAllowLongPress(void *a1, const char *a2, ...)
{
  return _[a1 dragAndDropAllowLongPress];
}

id objc_msgSend_dragAndDropIsCurrentlyScrubbing(void *a1, const char *a2, ...)
{
  return _[a1 dragAndDropIsCurrentlyScrubbing];
}

id objc_msgSend_dragAndDropScrubAtPoint_(void *a1, const char *a2, ...)
{
  return [a1 dragAndDropScrubAtPoint:];
}

id objc_msgSend_dragGestureInProgress(void *a1, const char *a2, ...)
{
  return _[a1 dragGestureInProgress];
}

id objc_msgSend_draggedOccurrenceView(void *a1, const char *a2, ...)
{
  return _[a1 draggedOccurrenceView];
}

id objc_msgSend_draggedOccurrenceWasCancelled_atPoint_(void *a1, const char *a2, ...)
{
  return [a1 draggedOccurrenceWasCancelled:atPoint:];
}

id objc_msgSend_draggingDone(void *a1, const char *a2, ...)
{
  return _[a1 draggingDone];
}

id objc_msgSend_draggingView(void *a1, const char *a2, ...)
{
  return _[a1 draggingView];
}

id objc_msgSend_draw(void *a1, const char *a2, ...)
{
  return _[a1 draw];
}

id objc_msgSend_drawAtPoint_(void *a1, const char *a2, ...)
{
  return [a1 drawAtPoint:];
}

id objc_msgSend_drawAtPoint_blendMode_alpha_(void *a1, const char *a2, ...)
{
  return [a1 drawAtPoint:blendMode:alpha:];
}

id objc_msgSend_drawCircle(void *a1, const char *a2, ...)
{
  return _[a1 drawCircle];
}

id objc_msgSend_drawInFrame_context_traitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drawInFrame:context:traitCollection:");
}

id objc_msgSend_drawInRect_(void *a1, const char *a2, ...)
{
  return [a1 drawInRect:];
}

id objc_msgSend_drawInRect_blendMode_alpha_(void *a1, const char *a2, ...)
{
  return [a1 drawInRect:blendMode:alpha:];
}

id objc_msgSend_drawInRect_withAttributes_(void *a1, const char *a2, ...)
{
  return [a1 drawInRect:withAttributes:];
}

id objc_msgSend_drawIntoContext_traitCollection_(void *a1, const char *a2, ...)
{
  return [a1 drawIntoContext:traitCollection:];
}

id objc_msgSend_drawWithRect_options_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drawWithRect:options:context:");
}

id objc_msgSend_drawWithViews(void *a1, const char *a2, ...)
{
  return _[a1 drawWithViews];
}

id objc_msgSend_drawsBackgroundForEvent_(void *a1, const char *a2, ...)
{
  return [a1 drawsBackgroundForEvent:];
}

id objc_msgSend_drawsTimeAtBottom(void *a1, const char *a2, ...)
{
  return _[a1 drawsTimeAtBottom];
}

id objc_msgSend_drawsTimeString(void *a1, const char *a2, ...)
{
  return _[a1 drawsTimeString];
}

id objc_msgSend_duplicateEvents_withDateMode_delegate_(void *a1, const char *a2, ...)
{
  return [a1 duplicateEvents:withDateMode:delegate:];
}

id objc_msgSend_duration(void *a1, const char *a2, ...)
{
  return _[a1 duration];
}

id objc_msgSend_durationForTransition_(void *a1, const char *a2, ...)
{
  return [a1 durationForTransition:];
}

id objc_msgSend_earlierDate_(void *a1, const char *a2, ...)
{
  return [a1 earlierDate:];
}

id objc_msgSend_earliestDateComponents(void *a1, const char *a2, ...)
{
  return _[a1 earliestDateComponents];
}

id objc_msgSend_edgesForExtendedLayout(void *a1, const char *a2, ...)
{
  return _[a1 edgesForExtendedLayout];
}

id objc_msgSend_editButtonTapped(void *a1, const char *a2, ...)
{
  return _[a1 editButtonTapped];
}

id objc_msgSend_editOrAddViewControllerForEventOrIntegrationWithEvent_model_creationMethod_eventEditViewDelegate_(void *a1, const char *a2, ...)
{
  return [a1 editOrAddViewControllerForEventOrIntegrationWithEvent:model:creationMethod:eventEditViewDelegate:];
}

id objc_msgSend_editViewControllerImplementation(void *a1, const char *a2, ...)
{
  return _[a1 editViewControllerImplementation];
}

id objc_msgSend_editorDidCancelEditingEvent_(void *a1, const char *a2, ...)
{
  return [a1 editorDidCancelEditingEvent:];
}

id objc_msgSend_editorDidDeleteEvent_(void *a1, const char *a2, ...)
{
  return [a1 editorDidDeleteEvent:];
}

id objc_msgSend_editorDidSaveEvent_(void *a1, const char *a2, ...)
{
  return [a1 editorDidSaveEvent:];
}

id objc_msgSend_editorForGroupController_(void *a1, const char *a2, ...)
{
  return [a1 editorForGroupController:];
}

id objc_msgSend_effectWithBlurRadius_(void *a1, const char *a2, ...)
{
  return [a1 effectWithBlurRadius:];
}

id objc_msgSend_effectWithPreview_(void *a1, const char *a2, ...)
{
  return [a1 effectWithPreview:];
}

id objc_msgSend_effectWithStyle_(void *a1, const char *a2, ...)
{
  return [a1 effectWithStyle:];
}

id objc_msgSend_effectiveEventGestureSuperview(void *a1, const char *a2, ...)
{
  return _[a1 effectiveEventGestureSuperview];
}

id objc_msgSend_effectiveUserInterfaceLayoutDirection(void *a1, const char *a2, ...)
{
  return _[a1 effectiveUserInterfaceLayoutDirection];
}

id objc_msgSend_ekui_adjustNavAndToolBarToTranslucentGrayStyles(void *a1, const char *a2, ...)
{
  return [a1 ekui_adjustNavAndToolBarToTranslucentGrayStyles];
}

id objc_msgSend_ekui_adjustNavAndToolBarToTransparentStyles(void *a1, const char *a2, ...)
{
  return [a1 ekui_adjustNavAndToolBarToTransparentStyles];
}

id objc_msgSend_ekui_adjustNavBarToTransparentStyle(void *a1, const char *a2, ...)
{
  return [a1 ekui_adjustNavBarToTransparentStyle];
}

id objc_msgSend_ekui_adjustToolBarToTransparentStyle(void *a1, const char *a2, ...)
{
  return [a1 ekui_adjustToolBarToTransparentStyle];
}

id objc_msgSend_ekui_futureTraitCollection(void *a1, const char *a2, ...)
{
  return [a1 ekui_futureTraitCollection];
}

id objc_msgSend_ekui_futureTraitCollectionCategoryPropertyKey(void *a1, const char *a2, ...)
{
  return [a1 ekui_futureTraitCollectionCategoryPropertyKey];
}

id objc_msgSend_ekui_interfaceOrientation(void *a1, const char *a2, ...)
{
  return [a1 ekui_interfaceOrientation];
}

id objc_msgSend_eligibleToShowYearNumber(void *a1, const char *a2, ...)
{
  return _[a1 eligibleToShowYearNumber];
}

id objc_msgSend_emailAddress(void *a1, const char *a2, ...)
{
  return _[a1 emailAddress];
}

id objc_msgSend_embeddedNavigationController(void *a1, const char *a2, ...)
{
  return _[a1 embeddedNavigationController];
}

id objc_msgSend_emptyAuthorCache(void *a1, const char *a2, ...)
{
  return _[a1 emptyAuthorCache];
}

id objc_msgSend_emptyChildViewController(void *a1, const char *a2, ...)
{
  return _[a1 emptyChildViewController];
}

id objc_msgSend_emptyConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 emptyConfiguration];
}

id objc_msgSend_emptySpaceClick(void *a1, const char *a2, ...)
{
  return _[a1 emptySpaceClick];
}

id objc_msgSend_emptySpaceClickForCalendarWeekDayEventContent_atPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emptySpaceClickForCalendarWeekDayEventContent:atPoint:");
}

id objc_msgSend_emptySpaceClickedOnDate_(void *a1, const char *a2, ...)
{
  return [a1 emptySpaceClickedOnDate:];
}

id objc_msgSend_enableEventCreationGesture(void *a1, const char *a2, ...)
{
  return _[a1 enableEventCreationGesture];
}

id objc_msgSend_enableGestureRecognizers(void *a1, const char *a2, ...)
{
  return _[a1 enableGestureRecognizers];
}

id objc_msgSend_enableLayerAnimationsDuringLayout(void *a1, const char *a2, ...)
{
  return _[a1 enableLayerAnimationsDuringLayout];
}

id objc_msgSend_endAnimationSplitState(void *a1, const char *a2, ...)
{
  return _[a1 endAnimationSplitState];
}

id objc_msgSend_endAppearanceTransition(void *a1, const char *a2, ...)
{
  return _[a1 endAppearanceTransition];
}

id objc_msgSend_endCalendarDate(void *a1, const char *a2, ...)
{
  return _[a1 endCalendarDate];
}

id objc_msgSend_endDate(void *a1, const char *a2, ...)
{
  return _[a1 endDate];
}

id objc_msgSend_endDateUnadjustedForLegacyClients(void *a1, const char *a2, ...)
{
  return _[a1 endDateUnadjustedForLegacyClients];
}

id objc_msgSend_endEditing_(void *a1, const char *a2, ...)
{
  return [a1 endEditing:];
}

id objc_msgSend_endForcedStart_(void *a1, const char *a2, ...)
{
  return [a1 endForcedStart:];
}

id objc_msgSend_endLaunchToView_extended_(void *a1, const char *a2, ...)
{
  return [a1 endLaunchToView:extended:];
}

id objc_msgSend_endRange(void *a1, const char *a2, ...)
{
  return _[a1 endRange];
}

id objc_msgSend_endRefreshing(void *a1, const char *a2, ...)
{
  return _[a1 endRefreshing];
}

id objc_msgSend_endSearch_(void *a1, const char *a2, ...)
{
  return [a1 endSearch:];
}

id objc_msgSend_endTimeString(void *a1, const char *a2, ...)
{
  return _[a1 endTimeString];
}

id objc_msgSend_endUpdates(void *a1, const char *a2, ...)
{
  return _[a1 endUpdates];
}

id objc_msgSend_enqueuableNavigationController_requestsDeferShowViewControllerUntilReady_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueuableNavigationController:requestsDeferShowViewControllerUntilReady:");
}

id objc_msgSend_enqueueBlock_(void *a1, const char *a2, ...)
{
  return [a1 enqueueBlock:];
}

id objc_msgSend_enqueueStackResetOperation(void *a1, const char *a2, ...)
{
  return _[a1 enqueueStackResetOperation];
}

id objc_msgSend_enqueueStackResetOperationDismissingPresentations_cancelOperations_completionBlock_(void *a1, const char *a2, ...)
{
  return [a1 enqueueStackResetOperationDismissingPresentations:YES cancelOperations:YES completionBlock:nil];
}

id objc_msgSend_enqueueableManagedNavigationController_requestsConfigurationOfPropertiesForPopoverPresentationController_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueableManagedNavigationController:requestsConfigurationOfPropertiesForPopoverPresentationController:completion:");
}

id objc_msgSend_enqueueableManagedNavigationControllerShouldEnqueuePresentationDismissals_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueableManagedNavigationControllerShouldEnqueuePresentationDismissals:");
}

id objc_msgSend_enqueuedViewControllers(void *a1, const char *a2, ...)
{
  return _[a1 enqueuedViewControllers];
}

id objc_msgSend_ensureCalendarVisibleWithId_(void *a1, const char *a2, ...)
{
  return [a1 ensureCalendarVisibleWithId:];
}

id objc_msgSend_enterAnimationSplitStateWithCutOutArea_topBoundary_(void *a1, const char *a2, ...)
{
  return [a1 enterAnimationSplitStateWithCutOutArea:topBoundary:];
}

id objc_msgSend_enumerateIndexesUsingBlock_(void *a1, const char *a2, ...)
{
  return [a1 enumerateIndexesUsingBlock:];
}

id objc_msgSend_enumerateKeysAndObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return [a1 enumerateKeysAndObjectsUsingBlock:];
}

id objc_msgSend_enumerateObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return [a1 enumerateObjectsUsingBlock:];
}

id objc_msgSend_enumerateObjectsWithOptions_usingBlock_(void *a1, const char *a2, ...)
{
  return [a1 enumerateObjectsWithOptions:];
}

id objc_msgSend_enumerateScrollViewSubviews_(void *a1, const char *a2, ...)
{
  return [a1 enumerateScrollViewSubviews:];
}

id objc_msgSend_environment(void *a1, const char *a2, ...)
{
  return _[a1 environment];
}

id objc_msgSend_era(void *a1, const char *a2, ...)
{
  return _[a1 era];
}

id objc_msgSend_estimatedHeightForRow_(void *a1, const char *a2, ...)
{
  return [a1 estimatedHeightForRow:];
}

id objc_msgSend_estimatedRowHeight(void *a1, const char *a2, ...)
{
  return _[a1 estimatedRowHeight];
}

id objc_msgSend_event(void *a1, const char *a2, ...)
{
  return _[a1 event];
}

id objc_msgSend_eventCanDialIn_(void *a1, const char *a2, ...)
{
  return [a1 eventCanDialIn:];
}

id objc_msgSend_eventCanNavigate_(void *a1, const char *a2, ...)
{
  return [a1 eventCanNavigate:];
}

id objc_msgSend_eventCount(void *a1, const char *a2, ...)
{
  return _[a1 eventCount];
}

id objc_msgSend_eventData(void *a1, const char *a2, ...)
{
  return _[a1 eventData];
}

id objc_msgSend_eventDetailViewControllerWithEvent_delegate_context_(void *a1, const char *a2, ...)
{
  return [a1 eventDetailViewControllerWithEvent:delegate:context:];
}

id objc_msgSend_eventDetailViewControllerWithEvent_delegate_context_allowInlinePreview_previewInline_minimalMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eventDetailViewControllerWithEvent:delegate:context:allowInlinePreview:previewInline:minimalMode:");
}

id objc_msgSend_eventDetailsDidShowSubtestName(void *a1, const char *a2, ...)
{
  return _[a1 eventDetailsDidShowSubtestName];
}

id objc_msgSend_eventEditViewController_didCompleteWithAction_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eventEditViewController:didCompleteWithAction:completionHandler:");
}

id objc_msgSend_eventForObjectID_occurrenceDate_(void *a1, const char *a2, ...)
{
  return [a1 eventForObjectID:occurrenceDate:];
}

id objc_msgSend_eventForObjectID_occurrenceDate_checkValid_(void *a1, const char *a2, ...)
{
  return [a1 eventForObjectID:occurrenceDate:checkValid:];
}

id objc_msgSend_eventForRow_(void *a1, const char *a2, ...)
{
  return [a1 eventForRow:];
}

id objc_msgSend_eventFromEventStore_(void *a1, const char *a2, ...)
{
  return [a1 eventFromEventStore:];
}

id objc_msgSend_eventFromStore_(void *a1, const char *a2, ...)
{
  return [a1 eventFromStore:];
}

id objc_msgSend_eventGestureController(void *a1, const char *a2, ...)
{
  return _[a1 eventGestureController];
}

id objc_msgSend_eventGestureController_commitToPoint_(void *a1, const char *a2, ...)
{
  return [a1 eventGestureController:commitToPoint:];
}

id objc_msgSend_eventGestureController_didCommitOccurrence_toDate_isAllDay_span_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eventGestureController:didCommitOccurrence:toDate:isAllDay:span:");
}

id objc_msgSend_eventGestureController_setUpAtPoint_withOccurrence_forceNewEvent_(void *a1, const char *a2, ...)
{
  return [a1 eventGestureController:setUpAtPoint:withOccurrence:forceNewEvent:];
}

id objc_msgSend_eventID(void *a1, const char *a2, ...)
{
  return _[a1 eventID];
}

id objc_msgSend_eventIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 eventIdentifier];
}

id objc_msgSend_eventIndex(void *a1, const char *a2, ...)
{
  return _[a1 eventIndex];
}

id objc_msgSend_eventNotificationReferencesForCurrentIdentity(void *a1, const char *a2, ...)
{
  return _[a1 eventNotificationReferencesForCurrentIdentity];
}

id objc_msgSend_eventNotificationReferencesForIdentity_(void *a1, const char *a2, ...)
{
  return [a1 eventNotificationReferencesForIdentity:];
}

id objc_msgSend_eventNotificationsForCurrentIdentityCount(void *a1, const char *a2, ...)
{
  return _[a1 eventNotificationsForCurrentIdentityCount];
}

id objc_msgSend_eventOccurrenceID(void *a1, const char *a2, ...)
{
  return _[a1 eventOccurrenceID];
}

id objc_msgSend_eventOrIntegrationViewControllerWithEvent_creationMethod_eventEditViewDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eventOrIntegrationViewControllerWithEvent:creationMethod:eventEditViewDelegate:");
}

id objc_msgSend_eventScale(void *a1, const char *a2, ...)
{
  return _[a1 eventScale];
}

id objc_msgSend_eventStatusButtonsView_didSelectAction_appliesToAll_ifCancelled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eventStatusButtonsView:didSelectAction:appliesToAll:ifCancelled:");
}

id objc_msgSend_eventStore(void *a1, const char *a2, ...)
{
  return _[a1 eventStore];
}

id objc_msgSend_eventStoreForCell_(void *a1, const char *a2, ...)
{
  return [a1 eventStoreForCell:];
}

id objc_msgSend_eventSummaryData(void *a1, const char *a2, ...)
{
  return _[a1 eventSummaryData];
}

id objc_msgSend_eventSummaryDataFromEKEvent_(void *a1, const char *a2, ...)
{
  return [a1 eventSummaryDataFromEKEvent:];
}

id objc_msgSend_eventViewController_didCompleteWithAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eventViewController:didCompleteWithAction:");
}

id objc_msgSend_eventViewController_requestsDisplayOfEditViewController_animated_(void *a1, const char *a2, ...)
{
  return [a1 eventViewController:requestsDisplayOfEditViewController:animated:];
}

id objc_msgSend_eventViewControllerNextButtonWasTapped_(void *a1, const char *a2, ...)
{
  return [a1 eventViewControllerNextButtonWasTapped:];
}

id objc_msgSend_eventViewControllerPreviousButtonWasTapped_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eventViewControllerPreviousButtonWasTapped:");
}

id objc_msgSend_eventViewControllerShouldHideInlineEditButton(void *a1, const char *a2, ...)
{
  return _[a1 eventViewControllerShouldHideInlineEditButton];
}

id objc_msgSend_eventViewControllerShouldShowInlineEditButtonForInvitations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eventViewControllerShouldShowInlineEditButtonForInvitations:");
}

id objc_msgSend_eventViewControllerShowsInlinePreview(void *a1, const char *a2, ...)
{
  return _[a1 eventViewControllerShowsInlinePreview];
}

id objc_msgSend_eventViewControllerUseMinimalMode_(void *a1, const char *a2, ...)
{
  return [a1 eventViewControllerUseMinimalMode:];
}

id objc_msgSend_eventViewDelegateShouldShowNextOccurrenceOfEvent_forward_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eventViewDelegateShouldShowNextOccurrenceOfEvent:forward:");
}

id objc_msgSend_eventWithEventStore_(void *a1, const char *a2, ...)
{
  return [a1 eventWithEventStore:];
}

id objc_msgSend_eventWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 eventWithIdentifier:];
}

id objc_msgSend_events(void *a1, const char *a2, ...)
{
  return _[a1 events];
}

id objc_msgSend_eventsAllDeletable_(void *a1, const char *a2, ...)
{
  return [a1 eventsAllDeletable:];
}

id objc_msgSend_eventsFoundInAppsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 eventsFoundInAppsEnabled];
}

id objc_msgSend_eventsMatchingPredicate_(void *a1, const char *a2, ...)
{
  return [a1 eventsMatchingPredicate:];
}

id objc_msgSend_exceptionWithName_reason_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 exceptionWithName:reason:userInfo:];
}

id objc_msgSend_existingPalette(void *a1, const char *a2, ...)
{
  return _[a1 existingPalette];
}

id objc_msgSend_existsInStore(void *a1, const char *a2, ...)
{
  return _[a1 existsInStore];
}

id objc_msgSend_extendedLaunchComplete(void *a1, const char *a2, ...)
{
  return _[a1 extendedLaunchComplete];
}

id objc_msgSend_extendedLaunchFinished(void *a1, const char *a2, ...)
{
  return _[a1 extendedLaunchFinished];
}

id objc_msgSend_extendedLaunchTestName(void *a1, const char *a2, ...)
{
  return _[a1 extendedLaunchTestName];
}

id objc_msgSend_externalID(void *a1, const char *a2, ...)
{
  return _[a1 externalID];
}

id objc_msgSend_externalURL(void *a1, const char *a2, ...)
{
  return _[a1 externalURL];
}

id objc_msgSend_externallyEndedGestureDragging(void *a1, const char *a2, ...)
{
  return _[a1 externallyEndedGestureDragging];
}

id objc_msgSend_extraPaletteHeight(void *a1, const char *a2, ...)
{
  return _[a1 extraPaletteHeight];
}

id objc_msgSend_extractInitialDateOption(void *a1, const char *a2, ...)
{
  return _[a1 extractInitialDateOption];
}

id objc_msgSend_fadeInContentViewAt_minWidth_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fadeInContentViewAt:minWidth:animated:");
}

id objc_msgSend_fadeLeftEdge(void *a1, const char *a2, ...)
{
  return _[a1 fadeLeftEdge];
}

id objc_msgSend_fadeRightEdge(void *a1, const char *a2, ...)
{
  return _[a1 fadeRightEdge];
}

id objc_msgSend_failedTest_withFailure_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failedTest:withFailure:");
}

id objc_msgSend_failedTest_withResults_(void *a1, const char *a2, ...)
{
  return [a1 failedTest:withResults:];
}

id objc_msgSend_familyCalendarsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "familyCalendarsWithCompletion:");
}

id objc_msgSend_familyName(void *a1, const char *a2, ...)
{
  return _[a1 familyName];
}

id objc_msgSend_feedbackGeneratorWithStyle_forView_(void *a1, const char *a2, ...)
{
  return [a1 feedbackGeneratorWithStyle:forView:];
}

id objc_msgSend_fetchCachedDaysInBackgroundStartingFromSection_usingFilter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchCachedDaysInBackgroundStartingFromSection:usingFilter:");
}

id objc_msgSend_fetchDaysStartingFromSection_sectionsToLoadInBothDirections_(void *a1, const char *a2, ...)
{
  return [a1 fetchDaysStartingFromSection:sectionsToLoadInBothDirections:];
}

id objc_msgSend_fill(void *a1, const char *a2, ...)
{
  return _[a1 fill];
}

id objc_msgSend_fillRect_(void *a1, const char *a2, ...)
{
  return [a1 fillRect:];
}

id objc_msgSend_filledButtonConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 filledButtonConfiguration];
}

id objc_msgSend_filterUsingPredicate_(void *a1, const char *a2, ...)
{
  return [a1 filterUsingPredicate:];
}

id objc_msgSend_filteredArrayUsingPredicate_(void *a1, const char *a2, ...)
{
  return [a1 filteredArrayUsingPredicate:];
}

id objc_msgSend_filteredNotificationsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filteredNotificationsFromArray:");
}

id objc_msgSend_finalFrameForViewController_(void *a1, const char *a2, ...)
{
  return [a1 finalFrameForViewController:];
}

id objc_msgSend_findWeekends(void *a1, const char *a2, ...)
{
  return _[a1 findWeekends];
}

id objc_msgSend_finish(void *a1, const char *a2, ...)
{
  return _[a1 finish];
}

id objc_msgSend_finishAnimations(void *a1, const char *a2, ...)
{
  return _[a1 finishAnimations];
}

id objc_msgSend_finishChangeScale(void *a1, const char *a2, ...)
{
  return _[a1 finishChangeScale];
}

id objc_msgSend_finishedSubTest_forTest_(void *a1, const char *a2, ...)
{
  return [a1 finishedSubTest:forTest:];
}

id objc_msgSend_finishedSubTest_forTest_waitForCommit_(void *a1, const char *a2, ...)
{
  return [a1 finishedSubTest:forTest:waitForCommit:];
}

id objc_msgSend_finishedTest_(void *a1, const char *a2, ...)
{
  return [a1 finishedTest:];
}

id objc_msgSend_finishedTest_extraResults_(void *a1, const char *a2, ...)
{
  return [a1 finishedTest:extraResults:];
}

id objc_msgSend_finishedTest_extraResults_withTeardownBlock_(void *a1, const char *a2, ...)
{
  return [a1 finishedTest:extraResults:withTeardownBlock:];
}

id objc_msgSend_finishedTest_waitForCommit_extraResults_(void *a1, const char *a2, ...)
{
  return [a1 finishedTest:waitForCommit:extraResults:];
}

id objc_msgSend_finishedTest_waitForCommit_extraResults_withTeardownBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishedTest:waitForCommit:extraResults:withTeardownBlock:");
}

id objc_msgSend_firstBaselineAnchor(void *a1, const char *a2, ...)
{
  return _[a1 firstBaselineAnchor];
}

id objc_msgSend_firstDayCellInset(void *a1, const char *a2, ...)
{
  return _[a1 firstDayCellInset];
}

id objc_msgSend_firstEventSecond(void *a1, const char *a2, ...)
{
  return _[a1 firstEventSecond];
}

id objc_msgSend_firstEventYOffset(void *a1, const char *a2, ...)
{
  return _[a1 firstEventYOffset];
}

id objc_msgSend_firstGroupSection(void *a1, const char *a2, ...)
{
  return _[a1 firstGroupSection];
}

id objc_msgSend_firstLineBaselineOffsetForFontSize_(void *a1, const char *a2, ...)
{
  return [a1 firstLineBaselineOffsetForFontSize:];
}

id objc_msgSend_firstLineBaselineOffsetFromBoundsTop(void *a1, const char *a2, ...)
{
  return _[a1 firstLineBaselineOffsetFromBoundsTop];
}

id objc_msgSend_firstMonthCellIndex(void *a1, const char *a2, ...)
{
  return _[a1 firstMonthCellIndex];
}

id objc_msgSend_firstName(void *a1, const char *a2, ...)
{
  return _[a1 firstName];
}

id objc_msgSend_firstNonAllDayEvent(void *a1, const char *a2, ...)
{
  return _[a1 firstNonAllDayEvent];
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _[a1 firstObject];
}

id objc_msgSend_firstOccurrencesForEachDay(void *a1, const char *a2, ...)
{
  return _[a1 firstOccurrencesForEachDay];
}

id objc_msgSend_firstPhoneNumber(void *a1, const char *a2, ...)
{
  return _[a1 firstPhoneNumber];
}

id objc_msgSend_firstResponder(void *a1, const char *a2, ...)
{
  return _[a1 firstResponder];
}

id objc_msgSend_firstView(void *a1, const char *a2, ...)
{
  return _[a1 firstView];
}

id objc_msgSend_firstViewOnScreen(void *a1, const char *a2, ...)
{
  return _[a1 firstViewOnScreen];
}

id objc_msgSend_firstVisibleDayOffsetFromSelectedDay(void *a1, const char *a2, ...)
{
  return _[a1 firstVisibleDayOffsetFromSelectedDay];
}

id objc_msgSend_firstVisibleSecond(void *a1, const char *a2, ...)
{
  return _[a1 firstVisibleSecond];
}

id objc_msgSend_firstVisibleSecondChanged(void *a1, const char *a2, ...)
{
  return _[a1 firstVisibleSecondChanged];
}

id objc_msgSend_firstWeekday(void *a1, const char *a2, ...)
{
  return _[a1 firstWeekday];
}

id objc_msgSend_fixedDayWidth(void *a1, const char *a2, ...)
{
  return _[a1 fixedDayWidth];
}

id objc_msgSend_flashScrollIndicators(void *a1, const char *a2, ...)
{
  return _[a1 flashScrollIndicators];
}

id objc_msgSend_flattenedImageWithColor_(void *a1, const char *a2, ...)
{
  return [a1 flattenedImageWithColor:];
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return _[a1 floatValue];
}

id objc_msgSend_focusBannerPlacement(void *a1, const char *a2, ...)
{
  return _[a1 focusBannerPlacement];
}

id objc_msgSend_focusBannerSection(void *a1, const char *a2, ...)
{
  return _[a1 focusBannerSection];
}

id objc_msgSend_focusBannerVisible(void *a1, const char *a2, ...)
{
  return _[a1 focusBannerVisible];
}

id objc_msgSend_focusFilterMode(void *a1, const char *a2, ...)
{
  return _[a1 focusFilterMode];
}

id objc_msgSend_font(void *a1, const char *a2, ...)
{
  return _[a1 font];
}

id objc_msgSend_fontDescriptor(void *a1, const char *a2, ...)
{
  return _[a1 fontDescriptor];
}

id objc_msgSend_fontDescriptorWithSymbolicTraits_(void *a1, const char *a2, ...)
{
  return [a1 fontDescriptorWithSymbolicTraits:];
}

id objc_msgSend_fontOverride(void *a1, const char *a2, ...)
{
  return _[a1 fontOverride];
}

id objc_msgSend_fontSize(void *a1, const char *a2, ...)
{
  return _[a1 fontSize];
}

id objc_msgSend_fontWithDescriptor_size_(void *a1, const char *a2, ...)
{
  return [a1 fontWithDescriptor:];
}

id objc_msgSend_fontWithSize_(void *a1, const char *a2, ...)
{
  return [a1 fontWithSize:];
}

id objc_msgSend_forceStartWithOccurrence_occurrenceDate_shouldUpdateViewSource_shouldUpdateOrigin_shouldPresentEditMenu_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forceStartWithOccurrence:occurrenceDate:shouldUpdateViewSource:shouldUpdateOrigin:shouldPresentEditMenu:");
}

id objc_msgSend_forceUpdateColors(void *a1, const char *a2, ...)
{
  return _[a1 forceUpdateColors];
}

id objc_msgSend_forceUpdateListView(void *a1, const char *a2, ...)
{
  return _[a1 forceUpdateListView];
}

id objc_msgSend_forceUpdateOfAllElements(void *a1, const char *a2, ...)
{
  return _[a1 forceUpdateOfAllElements];
}

id objc_msgSend_formattedStringForPhoneNumber_(void *a1, const char *a2, ...)
{
  return [a1 formattedStringForPhoneNumber:];
}

id objc_msgSend_frame(void *a1, const char *a2, ...)
{
  return _[a1 frame];
}

id objc_msgSend_frameForCircleWithDayFrame_dayLayerFrame_numberString_overlayString_(void *a1, const char *a2, ...)
{
  return [a1 frameForCircleWithDayFrame:dayLayerFrame:numberString:overlayString:];
}

id objc_msgSend_frameForCircleWithDayFrame_dayLayerFrame_numberString_overlayString_compressed_containsFirstDay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frameForCircleWithDayFrame:dayLayerFrame:numberString:overlayString:compressed:containsFirstDay:");
}

id objc_msgSend_frameForDate_(void *a1, const char *a2, ...)
{
  return [a1 frameForDate:];
}

id objc_msgSend_frameForDayCircleWithSize_dayNumberLayerFrame_dayNumberFrame_withOverlay_compressed_containsFirstDayOfMonth_(void *a1, const char *a2, ...)
{
  return [a1 frameForDayCircleWithSize:dayNumberLayerFrame:dayNumberFrame:withOverlay:compressed:containsFirstDayOfMonth:];
}

id objc_msgSend_frameForEventID_(void *a1, const char *a2, ...)
{
  return [a1 frameForEventID:];
}

id objc_msgSend_frameForGridOfDays_(void *a1, const char *a2, ...)
{
  return [a1 frameForGridOfDays:];
}

id objc_msgSend_frameForLastOccurrenceOnDay_(void *a1, const char *a2, ...)
{
  return [a1 frameForLastOccurrenceOnDay:];
}

id objc_msgSend_frameForOccurrence_onDay_(void *a1, const char *a2, ...)
{
  return [a1 frameForOccurrence:onDay:];
}

id objc_msgSend_frameForOccurrenceAfterLastOnDay_(void *a1, const char *a2, ...)
{
  return [a1 frameForOccurrenceAfterLastOnDay:];
}

id objc_msgSend_frameForTodayHighlight(void *a1, const char *a2, ...)
{
  return _[a1 frameForTodayHighlight];
}

id objc_msgSend_frameForWeekContainingDate_(void *a1, const char *a2, ...)
{
  return [a1 frameForWeekContainingDate:];
}

id objc_msgSend_frameOfListView(void *a1, const char *a2, ...)
{
  return _[a1 frameOfListView];
}

id objc_msgSend_fromPerson(void *a1, const char *a2, ...)
{
  return _[a1 fromPerson];
}

id objc_msgSend_futureMajorBoundaryCalendarDateForCalendarDate_(void *a1, const char *a2, ...)
{
  return [a1 futureMajorBoundaryCalendarDateForCalendarDate:];
}

id objc_msgSend_gapBetweenBlock_(void *a1, const char *a2, ...)
{
  return [a1 gapBetweenBlock:];
}

id objc_msgSend_generateCurrentListToggleBarButtonItemMenu(void *a1, const char *a2, ...)
{
  return _[a1 generateCurrentListToggleBarButtonItemMenu];
}

id objc_msgSend_geoLocation(void *a1, const char *a2, ...)
{
  return _[a1 geoLocation];
}

id objc_msgSend_geocodeEventIfNeeded_(void *a1, const char *a2, ...)
{
  return [a1 geocodeEventIfNeeded:];
}

id objc_msgSend_geolocation(void *a1, const char *a2, ...)
{
  return _[a1 geolocation];
}

id objc_msgSend_gestureController(void *a1, const char *a2, ...)
{
  return _[a1 gestureController];
}

id objc_msgSend_gestureRecognizers(void *a1, const char *a2, ...)
{
  return _[a1 gestureRecognizers];
}

id objc_msgSend_getBooleanPreference_defaultValue_(void *a1, const char *a2, ...)
{
  return [a1 getBooleanPreference:defaultValue:];
}

id objc_msgSend_getHue_saturation_brightness_alpha_(void *a1, const char *a2, ...)
{
  return [a1 getHue:saturation:brightness:alpha:];
}

id objc_msgSend_getRed_green_blue_alpha_(void *a1, const char *a2, ...)
{
  return [a1 getRed:green:blue:alpha:];
}

id objc_msgSend_getWhite_alpha_(void *a1, const char *a2, ...)
{
  return [a1 getWhite:alpha:];
}

id objc_msgSend_get_kCalPreferredDaysToSyncKey(void *a1, const char *a2, ...)
{
  return [a1 get_kCalPreferredDaysToSyncKey];
}

id objc_msgSend_givenName(void *a1, const char *a2, ...)
{
  return _[a1 givenName];
}

id objc_msgSend_grayLineColor(void *a1, const char *a2, ...)
{
  return _[a1 grayLineColor];
}

id objc_msgSend_grayLineHeight(void *a1, const char *a2, ...)
{
  return _[a1 grayLineHeight];
}

id objc_msgSend_greenComponent(void *a1, const char *a2, ...)
{
  return _[a1 greenComponent];
}

id objc_msgSend_grid(void *a1, const char *a2, ...)
{
  return _[a1 grid];
}

id objc_msgSend_gridlineColor(void *a1, const char *a2, ...)
{
  return _[a1 gridlineColor];
}

id objc_msgSend_gutterWidth(void *a1, const char *a2, ...)
{
  return _[a1 gutterWidth];
}

id objc_msgSend_haltAnimation(void *a1, const char *a2, ...)
{
  return _[a1 haltAnimation];
}

id objc_msgSend_haltTodayPulse(void *a1, const char *a2, ...)
{
  return _[a1 haltTodayPulse];
}

id objc_msgSend_handleFailureInMethod_object_file_lineNumber_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFailureInMethod:object:file:lineNumber:description:");
}

id objc_msgSend_handleURL_(void *a1, const char *a2, ...)
{
  return [a1 handleURL:];
}

id objc_msgSend_handleURL_context_(void *a1, const char *a2, ...)
{
  return [a1 handleURL:context:];
}

id objc_msgSend_handlesNotifyOnExtendedLaunchCompletion(void *a1, const char *a2, ...)
{
  return _[a1 handlesNotifyOnExtendedLaunchCompletion];
}

id objc_msgSend_hasAllDayEvents(void *a1, const char *a2, ...)
{
  return _[a1 hasAllDayEvents];
}

id objc_msgSend_hasAttendees(void *a1, const char *a2, ...)
{
  return _[a1 hasAttendees];
}

id objc_msgSend_hasChanges(void *a1, const char *a2, ...)
{
  return _[a1 hasChanges];
}

id objc_msgSend_hasContent(void *a1, const char *a2, ...)
{
  return _[a1 hasContent];
}

id objc_msgSend_hasDrawnBefore(void *a1, const char *a2, ...)
{
  return _[a1 hasDrawnBefore];
}

id objc_msgSend_hasMailto(void *a1, const char *a2, ...)
{
  return _[a1 hasMailto];
}

id objc_msgSend_hasOccurrences(void *a1, const char *a2, ...)
{
  return _[a1 hasOccurrences];
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return [a1 hasPrefix:];
}

id objc_msgSend_hasRecurrenceRules(void *a1, const char *a2, ...)
{
  return _[a1 hasRecurrenceRules];
}

id objc_msgSend_hasReminderCalendar(void *a1, const char *a2, ...)
{
  return _[a1 hasReminderCalendar];
}

id objc_msgSend_hasRows(void *a1, const char *a2, ...)
{
  return _[a1 hasRows];
}

id objc_msgSend_hasSuffix_(void *a1, const char *a2, ...)
{
  return [a1 hasSuffix:];
}

id objc_msgSend_hasTel(void *a1, const char *a2, ...)
{
  return _[a1 hasTel];
}

id objc_msgSend_hasUnsavedChanges(void *a1, const char *a2, ...)
{
  return _[a1 hasUnsavedChanges];
}

id objc_msgSend_hash(void *a1, const char *a2, ...)
{
  return _[a1 hash];
}

id objc_msgSend_headerClass(void *a1, const char *a2, ...)
{
  return _[a1 headerClass];
}

id objc_msgSend_headerDaySpacingForWindowSize_(void *a1, const char *a2, ...)
{
  return [a1 headerDaySpacingForWindowSize:];
}

id objc_msgSend_headerFont(void *a1, const char *a2, ...)
{
  return _[a1 headerFont];
}

id objc_msgSend_headerFontKerning(void *a1, const char *a2, ...)
{
  return _[a1 headerFontKerning];
}

id objc_msgSend_headerFontMaxSize(void *a1, const char *a2, ...)
{
  return _[a1 headerFontMaxSize];
}

id objc_msgSend_headerForSectionInTableView_(void *a1, const char *a2, ...)
{
  return [a1 headerForSectionInTableView:];
}

id objc_msgSend_headerHeight(void *a1, const char *a2, ...)
{
  return _[a1 headerHeight];
}

id objc_msgSend_headerOrigin(void *a1, const char *a2, ...)
{
  return _[a1 headerOrigin];
}

id objc_msgSend_headerVerticalOffset(void *a1, const char *a2, ...)
{
  return _[a1 headerVerticalOffset];
}

id objc_msgSend_headerYInsetForWindowSize_(void *a1, const char *a2, ...)
{
  return [a1 headerYInsetForWindowSize:];
}

id objc_msgSend_heightAnchor(void *a1, const char *a2, ...)
{
  return _[a1 heightAnchor];
}

id objc_msgSend_heightBetweenLineAndNumber(void *a1, const char *a2, ...)
{
  return _[a1 heightBetweenLineAndNumber];
}

id objc_msgSend_heightForAllDayOccurrenceForSizeClass_usesSmallText_(void *a1, const char *a2, ...)
{
  return [a1 heightForAllDayOccurrenceForSizeClass:usesSmallText:];
}

id objc_msgSend_heightForHeaderInSection(void *a1, const char *a2, ...)
{
  return _[a1 heightForHeaderInSection];
}

id objc_msgSend_heightForInterfaceOrientation_windowSize_heightSizeClass_(void *a1, const char *a2, ...)
{
  return [a1 heightForInterfaceOrientation:windowSize:heightSizeClass:];
}

id objc_msgSend_heightForNumberOfOccurrences_(void *a1, const char *a2, ...)
{
  return [a1 heightForNumberOfOccurrences:];
}

id objc_msgSend_heightForSubviewWithCalendarDate_(void *a1, const char *a2, ...)
{
  return [a1 heightForSubviewWithCalendarDate:];
}

id objc_msgSend_heightForViewThatContainsFirstDayOfMonth_compressed_scale_(void *a1, const char *a2, ...)
{
  return [a1 heightForViewThatContainsFirstDayOfMonth:compressed:scale:];
}

id objc_msgSend_heightForViewWithCalendarDate_compressed_windowSize_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "heightForViewWithCalendarDate:compressed:windowSize:scale:");
}

id objc_msgSend_heightForViewWithCalendarDate_windowSize_heightSizeClass_orientation_(void *a1, const char *a2, ...)
{
  return [a1 heightForViewWithCalendarDate:windowSize:heightSizeClass:orientation:];
}

id objc_msgSend_heightForWindowSize_(void *a1, const char *a2, ...)
{
  return [a1 heightForWindowSize:];
}

id objc_msgSend_heightObserver(void *a1, const char *a2, ...)
{
  return _[a1 heightObserver];
}

id objc_msgSend_heightOfCircleCompressed_(void *a1, const char *a2, ...)
{
  return [a1 heightOfCircleCompressed:];
}

id objc_msgSend_heightOfFrameForFontSize_(void *a1, const char *a2, ...)
{
  return [a1 heightOfFrameForFontSize:];
}

id objc_msgSend_heightRequiredWithSizeClass_(void *a1, const char *a2, ...)
{
  return [a1 heightRequiredWithSizeClass:];
}

id objc_msgSend_heightRequiredWithSizeClass_usesMultiDayStyle_(void *a1, const char *a2, ...)
{
  return [a1 heightRequiredWithSizeClass:usesMultiDayStyle:];
}

id objc_msgSend_heightWithoutNoAllDayOccurrences(void *a1, const char *a2, ...)
{
  return _[a1 heightWithoutNoAllDayOccurrences];
}

id objc_msgSend_hidden(void *a1, const char *a2, ...)
{
  return _[a1 hidden];
}

id objc_msgSend_hideColumn_(void *a1, const char *a2, ...)
{
  return [a1 hideColumn:];
}

id objc_msgSend_hideDaySummariesWithScale_(void *a1, const char *a2, ...)
{
  return [a1 hideDaySummariesWithScale:];
}

id objc_msgSend_hideNowDot_(void *a1, const char *a2, ...)
{
  return [a1 hideNowDot:];
}

id objc_msgSend_hideOverlayAndNumber_(void *a1, const char *a2, ...)
{
  return [a1 hideOverlayAndNumber:];
}

id objc_msgSend_hideSearchBarForNavigationTransitionAnimated_(void *a1, const char *a2, ...)
{
  return [a1 hideSearchBarForNavigationTransitionAnimated:];
}

id objc_msgSend_hideText(void *a1, const char *a2, ...)
{
  return _[a1 hideText];
}

id objc_msgSend_hideTimelineHighlight(void *a1, const char *a2, ...)
{
  return _[a1 hideTimelineHighlight];
}

id objc_msgSend_hideYearNumberAnimated_(void *a1, const char *a2, ...)
{
  return [a1 hideYearNumberAnimated:];
}

id objc_msgSend_hidesBackButton(void *a1, const char *a2, ...)
{
  return _[a1 hidesBackButton];
}

id objc_msgSend_highlightDayViewCalendarDate_isAllDay_(void *a1, const char *a2, ...)
{
  return [a1 highlightDayViewCalendarDate:isAllDay:];
}

id objc_msgSend_hitTest_withEvent_(void *a1, const char *a2, ...)
{
  return [a1 hitTest:withEvent:];
}

id objc_msgSend_horizontalScrollView(void *a1, const char *a2, ...)
{
  return _[a1 horizontalScrollView];
}

id objc_msgSend_horizontalSizeClass(void *a1, const char *a2, ...)
{
  return _[a1 horizontalSizeClass];
}

id objc_msgSend_host(void *a1, const char *a2, ...)
{
  return _[a1 host];
}

id objc_msgSend_hour(void *a1, const char *a2, ...)
{
  return _[a1 hour];
}

id objc_msgSend_hourFont(void *a1, const char *a2, ...)
{
  return _[a1 hourFont];
}

id objc_msgSend_hourHeightForSizeClass_orientation_(void *a1, const char *a2, ...)
{
  return [a1 hourHeightForSizeClass:orientation:];
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _[a1 identifier];
}

id objc_msgSend_identityChanged_(void *a1, const char *a2, ...)
{
  return [a1 identityChanged:];
}

id objc_msgSend_identityChooserSection(void *a1, const char *a2, ...)
{
  return _[a1 identityChooserSection];
}

id objc_msgSend_ignoreUnsavedChanges(void *a1, const char *a2, ...)
{
  return _[a1 ignoreUnsavedChanges];
}

id objc_msgSend_image(void *a1, const char *a2, ...)
{
  return _[a1 image];
}

id objc_msgSend_imageFlippedForRightToLeftLayoutDirection(void *a1, const char *a2, ...)
{
  return _[a1 imageFlippedForRightToLeftLayoutDirection];
}

id objc_msgSend_imageForCurrentDayViewMode(void *a1, const char *a2, ...)
{
  return _[a1 imageForCurrentDayViewMode];
}

id objc_msgSend_imageForDayViewMode_(void *a1, const char *a2, ...)
{
  return [a1 imageForDayViewMode:];
}

id objc_msgSend_imageForString_atRect_withSize_(void *a1, const char *a2, ...)
{
  return [a1 imageForString:atRect:withSize:];
}

id objc_msgSend_imageNamed_(void *a1, const char *a2, ...)
{
  return [a1 imageNamed:];
}

id objc_msgSend_imageWithActions_(void *a1, const char *a2, ...)
{
  return [a1 imageWithActions:];
}

id objc_msgSend_imageWithRenderingMode_(void *a1, const char *a2, ...)
{
  return [a1 imageWithRenderingMode:];
}

id objc_msgSend_imageWithTintColor_renderingMode_(void *a1, const char *a2, ...)
{
  return [a1 imageWithTintColor:renderingMode:];
}

id objc_msgSend_impactOccurred(void *a1, const char *a2, ...)
{
  return _[a1 impactOccurred];
}

id objc_msgSend_impactOccurredWithIntensity_(void *a1, const char *a2, ...)
{
  return [a1 impactOccurredWithIntensity:];
}

id objc_msgSend_inboxBarButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 inboxBarButtonItem];
}

id objc_msgSend_inboxDisclosureImage(void *a1, const char *a2, ...)
{
  return _[a1 inboxDisclosureImage];
}

id objc_msgSend_inboxImageForCount_selected_(void *a1, const char *a2, ...)
{
  return [a1 inboxImageForCount:selected:];
}

id objc_msgSend_inboxNewSectionViewController_inspectEvent_(void *a1, const char *a2, ...)
{
  return [a1 inboxNewSectionViewController:inspectEvent:];
}

id objc_msgSend_inboxNewSectionViewController_shouldCloseAnimated_(void *a1, const char *a2, ...)
{
  return [a1 inboxNewSectionViewController:shouldCloseAnimated:];
}

id objc_msgSend_inboxNewSectionViewController_viewCommentsForEvent_(void *a1, const char *a2, ...)
{
  return [a1 inboxNewSectionViewController:viewCommentsForEvent:];
}

id objc_msgSend_inboxNewSectionViewController_viewProposedTimeForAttendee_onEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inboxNewSectionViewController:viewProposedTimeForAttendee:onEvent:");
}

id objc_msgSend_inboxRepliedSectionItems(void *a1, const char *a2, ...)
{
  return _[a1 inboxRepliedSectionItems];
}

id objc_msgSend_inboxRepliedSectionViewController_inspectEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inboxRepliedSectionViewController:inspectEvent:");
}

id objc_msgSend_inboxSwitcherViewController_inspectEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inboxSwitcherViewController:inspectEvent:");
}

id objc_msgSend_inboxSwitcherViewController_shouldCloseAnimated_(void *a1, const char *a2, ...)
{
  return [a1 inboxSwitcherViewController:shouldCloseAnimated:];
}

id objc_msgSend_inboxSwitcherViewController_viewCommentsForEvent_(void *a1, const char *a2, ...)
{
  return [a1 inboxSwitcherViewController:viewCommentsForEvent:];
}

id objc_msgSend_inboxSwitcherViewController_viewProposedTimeForAttendee_onEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inboxSwitcherViewController:viewProposedTimeForAttendee:onEvent:");
}

id objc_msgSend_inboxSwitcherViewControllerRightBarButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 inboxSwitcherViewControllerRightBarButtonItem:];
}

id objc_msgSend_inboxTableViewGroupController_addedRows_removedRows_updatedRows_(void *a1, const char *a2, ...)
{
  return [a1 inboxTableViewGroupController:addedRows:removedRows:updatedRows:];
}

id objc_msgSend_inboxTableViewGroupController_inspectEvent_(void *a1, const char *a2, ...)
{
  return [a1 inboxTableViewGroupController:inspectEvent:];
}

id objc_msgSend_inboxTableViewGroupController_requestsReloadOfRow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inboxTableViewGroupController:requestsReloadOfRow:");
}

id objc_msgSend_inboxTableViewGroupController_viewCommentsForEvent_(void *a1, const char *a2, ...)
{
  return [a1 inboxTableViewGroupController:viewCommentsForEvent:];
}

id objc_msgSend_inboxTableViewGroupController_viewProposedTimeForAttendee_onEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inboxTableViewGroupController:viewProposedTimeForAttendee:onEvent:");
}

id objc_msgSend_inboxViewControllerWantsShowEvent_animated_showMode_(void *a1, const char *a2, ...)
{
  return [a1 inboxViewControllerWantsShowEvent:animated:showMode:];
}

id objc_msgSend_inboxWillDismiss(void *a1, const char *a2, ...)
{
  return _[a1 inboxWillDismiss];
}

id objc_msgSend_indexOfObject_(void *a1, const char *a2, ...)
{
  return [a1 indexOfObject:];
}

id objc_msgSend_indexOfObjectPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObjectPassingTest:");
}

id objc_msgSend_indexPathForCell_(void *a1, const char *a2, ...)
{
  return [a1 indexPathForCell:];
}

id objc_msgSend_indexPathForRow_inSection_(void *a1, const char *a2, ...)
{
  return [a1 indexPathForRow:inSection:];
}

id objc_msgSend_indexPathForRowAtPoint_(void *a1, const char *a2, ...)
{
  return [a1 indexPathForRowAtPoint:];
}

id objc_msgSend_indexPathForSelectedRow(void *a1, const char *a2, ...)
{
  return _[a1 indexPathForSelectedRow];
}

id objc_msgSend_indexPathWithIndexes_length_(void *a1, const char *a2, ...)
{
  return [a1 indexPathWithIndexes:length:];
}

id objc_msgSend_indexPathsForOccurrence_usingFilter_(void *a1, const char *a2, ...)
{
  return [a1 indexPathsForOccurrence:usingFilter:];
}

id objc_msgSend_indexPathsForSelectedRows(void *a1, const char *a2, ...)
{
  return _[a1 indexPathsForSelectedRows];
}

id objc_msgSend_indexPathsForVisibleRows(void *a1, const char *a2, ...)
{
  return _[a1 indexPathsForVisibleRows];
}

id objc_msgSend_indexSetWithIndex_(void *a1, const char *a2, ...)
{
  return [a1 indexSetWithIndex:];
}

id objc_msgSend_initCalendarDate_calendar_maximumNumberOfMonths_(void *a1, const char *a2, ...)
{
  return [a1 initCalendarDate:calendar:maximumNumberOfMonths:];
}

id objc_msgSend_initForCarplayWithReuseIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initForCarplayWithReuseIdentifier:];
}

id objc_msgSend_initWithAbsoluteTime_timeZone_(void *a1, const char *a2, ...)
{
  return [a1 initWithAbsoluteTime:timeZone:];
}

id objc_msgSend_initWithActivationHandler_(void *a1, const char *a2, ...)
{
  return [a1 initWithActivationHandler:];
}

id objc_msgSend_initWithActivityType_(void *a1, const char *a2, ...)
{
  return [a1 initWithActivityType:];
}

id objc_msgSend_initWithAddItemState_(void *a1, const char *a2, ...)
{
  return [a1 initWithAddItemState:];
}

id objc_msgSend_initWithApplication_model_options_(void *a1, const char *a2, ...)
{
  return [a1 initWithApplication:model:options:];
}

id objc_msgSend_initWithArray_(void *a1, const char *a2, ...)
{
  return [a1 initWithArray:];
}

id objc_msgSend_initWithBarButtonSystemItem_primaryAction_(void *a1, const char *a2, ...)
{
  return [a1 initWithBarButtonSystemItem:primaryAction:];
}

id objc_msgSend_initWithBarButtonSystemItem_target_action_(void *a1, const char *a2, ...)
{
  return [a1 initWithBarButtonSystemItem:target:action:];
}

id objc_msgSend_initWithBarPalette_(void *a1, const char *a2, ...)
{
  return [a1 initWithBarPalette:];
}

id objc_msgSend_initWithBundleIdentifier_allowPlaceholder_error_(void *a1, const char *a2, ...)
{
  return [a1 initWithBundleIdentifier:allowPlaceholder:error:];
}

id objc_msgSend_initWithCalendar_selectedDate_cellFactory_eventSpringLoadingEnabled_(void *a1, const char *a2, ...)
{
  return [a1 initWithCalendar:selectedDate:cellFactory:eventSpringLoadingEnabled:];
}

id objc_msgSend_initWithCalendarDate_(void *a1, const char *a2, ...)
{
  return [a1 initWithCalendarDate:];
}

id objc_msgSend_initWithCalendarDate_calendar_(void *a1, const char *a2, ...)
{
  return [a1 initWithCalendarDate:calendar:];
}

id objc_msgSend_initWithCalendarDate_calendar_compressed_(void *a1, const char *a2, ...)
{
  return [a1 initWithCalendarDate:calendar:compressed:];
}

id objc_msgSend_initWithCalendarDate_model_window_(void *a1, const char *a2, ...)
{
  return [a1 initWithCalendarDate:model:window:];
}

id objc_msgSend_initWithCalendarModel_(void *a1, const char *a2, ...)
{
  return [a1 initWithCalendarModel:];
}

id objc_msgSend_initWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 initWithCapacity:];
}

id objc_msgSend_initWithConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 initWithConfiguration:];
}

id objc_msgSend_initWithContainer_center_(void *a1, const char *a2, ...)
{
  return [a1 initWithContainer:center:];
}

id objc_msgSend_initWithContentView_(void *a1, const char *a2, ...)
{
  return [a1 initWithContentView:];
}

id objc_msgSend_initWithCustomView_(void *a1, const char *a2, ...)
{
  return [a1 initWithCustomView:];
}

id objc_msgSend_initWithDataPath_pasteboardManager_(void *a1, const char *a2, ...)
{
  return [a1 initWithDataPath:pasteboardManager:];
}

id objc_msgSend_initWithDate_timeZone_(void *a1, const char *a2, ...)
{
  return [a1 initWithDate:timeZone:];
}

id objc_msgSend_initWithDate_view_calendar_(void *a1, const char *a2, ...)
{
  return [a1 initWithDate:view:calendar:];
}

id objc_msgSend_initWithDateComponents_timeZone_(void *a1, const char *a2, ...)
{
  return [a1 initWithDateComponents:timeZone:];
}

id objc_msgSend_initWithDay_model_window_(void *a1, const char *a2, ...)
{
  return [a1 initWithDay:model:window:];
}

id objc_msgSend_initWithDelegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithDelegate:];
}

id objc_msgSend_initWithDomain_(void *a1, const char *a2, ...)
{
  return [a1 initWithDomain:];
}

id objc_msgSend_initWithDouble_(void *a1, const char *a2, ...)
{
  return [a1 initWithDouble:];
}

id objc_msgSend_initWithEditors_(void *a1, const char *a2, ...)
{
  return [a1 initWithEditors:];
}

id objc_msgSend_initWithEffect_(void *a1, const char *a2, ...)
{
  return [a1 initWithEffect:];
}

id objc_msgSend_initWithEvent_(void *a1, const char *a2, ...)
{
  return [a1 initWithEvent:];
}

id objc_msgSend_initWithEvent_participantRecipients_subjectPrefix_bodyPrefix_(void *a1, const char *a2, ...)
{
  return [a1 initWithEvent:participantRecipients:subjectPrefix:bodyPrefix:];
}

id objc_msgSend_initWithEvent_rect_state_(void *a1, const char *a2, ...)
{
  return [a1 initWithEvent:rect:state:];
}

id objc_msgSend_initWithEvent_showDayName_(void *a1, const char *a2, ...)
{
  return [a1 initWithEvent:showDayName:];
}

id objc_msgSend_initWithEvent_view_(void *a1, const char *a2, ...)
{
  return [a1 initWithEvent:view:];
}

id objc_msgSend_initWithEventIndex_calendarOrder_dayRange_(void *a1, const char *a2, ...)
{
  return [a1 initWithEventIndex:calendarOrder:dayRange:];
}

id objc_msgSend_initWithEventStore_(void *a1, const char *a2, ...)
{
  return [a1 initWithEventStore:];
}

id objc_msgSend_initWithEventStore_limitedToSource_visibilityChangedCallback_queue_(void *a1, const char *a2, ...)
{
  return [a1 initWithEventStore:limitedToSource:visibilityChangedCallback:queue:];
}

id objc_msgSend_initWithEventStore_pasteboardManager_(void *a1, const char *a2, ...)
{
  return [a1 initWithEventStore:pasteboardManager:];
}

id objc_msgSend_initWithEventStore_undoManager_alertDisplayer_pendingReminderTracker_(void *a1, const char *a2, ...)
{
  return [a1 initWithEventStore:undoManager:alertDisplayer:pendingReminderTracker:];
}

id objc_msgSend_initWithEventStore_visibilityChangedCallback_queue_(void *a1, const char *a2, ...)
{
  return [a1 initWithEventStore:visibilityChangedCallback:queue:];
}

id objc_msgSend_initWithEvents_delegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithEvents:delegate:];
}

id objc_msgSend_initWithFireDate_interval_target_selector_userInfo_repeats_(void *a1, const char *a2, ...)
{
  return [a1 initWithFireDate:interval:target:selector:userInfo:repeats:];
}

id objc_msgSend_initWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 initWithFormat:];
}

id objc_msgSend_initWithFrame_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:];
}

id objc_msgSend_initWithFrame_actions_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:actions:];
}

id objc_msgSend_initWithFrame_actions_delegate_options_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:actions:delegate:options:];
}

id objc_msgSend_initWithFrame_calendar_selectedDate_cellFactory_eventSpringLoadingEnabled_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:calendar:selectedDate:cellFactory:eventSpringLoadingEnabled:];
}

id objc_msgSend_initWithFrame_loadMonthAnimationState_hasOverlay_sizeClass_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:loadMonthAnimationState:hasOverlay:sizeClass:];
}

id objc_msgSend_initWithFrame_occurrence_forDayRange_isCompact_isMultiDay_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:occurrence:forDayRange:isCompact:isMultiDay:];
}

id objc_msgSend_initWithFrame_occurrence_forDayRange_isProposedTime_isCompact_isMultiDay_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:occurrence:forDayRange:isProposedTime:isCompact:isMultiDay:];
}

id objc_msgSend_initWithFrame_orientation_numberOfDaysToDisplay_opaque_backgroundColor_rightClickDelegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:orientation:numberOfDaysToDisplay:opaque:backgroundColor:rightClickDelegate:];
}

id objc_msgSend_initWithFrame_sizeClass_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:sizeClass:];
}

id objc_msgSend_initWithFrame_sizeClass_orientation_backgroundColor_opaque_isMiniPreviewInEventDetail_numberOfDaysToDisplay_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:sizeClass:orientation:backgroundColor:opaque:isMiniPreviewInEventDetail:numberOfDaysToDisplay:];
}

id objc_msgSend_initWithFrame_sizeClass_targetWindow_rightClickDelegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:sizeClass:targetWindow:rightClickDelegate:];
}

id objc_msgSend_initWithFrame_sizeClass_targetWindow_rightClickDelegate_isMultiDayView_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:sizeClass:targetWindow:rightClickDelegate:isMultiDayView:];
}

id objc_msgSend_initWithFrame_style_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:style:];
}

id objc_msgSend_initWithFrame_targetSizeClass_orientation_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:targetSizeClass:orientation:];
}

id objc_msgSend_initWithImage_(void *a1, const char *a2, ...)
{
  return [a1 initWithImage:];
}

id objc_msgSend_initWithImage_menu_(void *a1, const char *a2, ...)
{
  return [a1 initWithImage:menu:];
}

id objc_msgSend_initWithImage_style_target_action_(void *a1, const char *a2, ...)
{
  return [a1 initWithImage:style:target:action:];
}

id objc_msgSend_initWithItemContentType_(void *a1, const char *a2, ...)
{
  return [a1 initWithItemContentType:];
}

id objc_msgSend_initWithItems_(void *a1, const char *a2, ...)
{
  return [a1 initWithItems:];
}

id objc_msgSend_initWithKey_ascending_(void *a1, const char *a2, ...)
{
  return [a1 initWithKey:ascending:];
}

id objc_msgSend_initWithModel_(void *a1, const char *a2, ...)
{
  return [a1 initWithModel:];
}

id objc_msgSend_initWithModel_delegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithModel:delegate:];
}

id objc_msgSend_initWithModel_destination_(void *a1, const char *a2, ...)
{
  return [a1 initWithModel:destination:];
}

id objc_msgSend_initWithModel_event_(void *a1, const char *a2, ...)
{
  return [a1 initWithModel:event:];
}

id objc_msgSend_initWithModel_eventStartDate_(void *a1, const char *a2, ...)
{
  return [a1 initWithModel:eventStartDate:];
}

id objc_msgSend_initWithModel_eventTitle_startDate_endDate_location_(void *a1, const char *a2, ...)
{
  return [a1 initWithModel:eventTitle:startDate:endDate:location:];
}

id objc_msgSend_initWithModel_paletteView_reverse_(void *a1, const char *a2, ...)
{
  return [a1 initWithModel:paletteView:reverse:];
}

id objc_msgSend_initWithModel_targetWindow_(void *a1, const char *a2, ...)
{
  return [a1 initWithModel:targetWindow:];
}

id objc_msgSend_initWithModel_window_(void *a1, const char *a2, ...)
{
  return [a1 initWithModel:window:];
}

id objc_msgSend_initWithName_(void *a1, const char *a2, ...)
{
  return [a1 initWithName:];
}

id objc_msgSend_initWithNavigationView_(void *a1, const char *a2, ...)
{
  return [a1 initWithNavigationView:];
}

id objc_msgSend_initWithObjects_(void *a1, const char *a2, ...)
{
  return [a1 initWithObjects:];
}

id objc_msgSend_initWithOccurrenceInfo_(void *a1, const char *a2, ...)
{
  return [a1 initWithOccurrenceInfo:];
}

id objc_msgSend_initWithOccurrenceStart_occurrenceEnd_rangeBoundStart_rangeBoundEnd_(void *a1, const char *a2, ...)
{
  return [a1 initWithOccurrenceStart:occurrenceEnd:rangeBoundStart:rangeBoundEnd:];
}

id objc_msgSend_initWithOccurrenceViews_selectedEvent_(void *a1, const char *a2, ...)
{
  return [a1 initWithOccurrenceViews:selectedEvent:];
}

id objc_msgSend_initWithOccurrences_timedOccurrences_allDayOccurrences_(void *a1, const char *a2, ...)
{
  return [a1 initWithOccurrences:timedOccurrences:allDayOccurrences:];
}

id objc_msgSend_initWithOptions_testName_application_(void *a1, const char *a2, ...)
{
  return [a1 initWithOptions:testName:application:];
}

id objc_msgSend_initWithPaddingCellEnabled_titleForSectionHeader_shouldCollapseMultipleAllDayEvents_model_(void *a1, const char *a2, ...)
{
  return [a1 initWithPaddingCellEnabled:titleForSectionHeader:shouldCollapseMultipleAllDayEvents:model:];
}

id objc_msgSend_initWithPasteboardManager_(void *a1, const char *a2, ...)
{
  return [a1 initWithPasteboardManager:];
}

id objc_msgSend_initWithPlacement_options_(void *a1, const char *a2, ...)
{
  return [a1 initWithPlacement:options:];
}

id objc_msgSend_initWithPresentingViewController_transition_completion_(void *a1, const char *a2, ...)
{
  return [a1 initWithPresentingViewController:transition:completion:];
}

id objc_msgSend_initWithProposedTimeAttendee_(void *a1, const char *a2, ...)
{
  return [a1 initWithProposedTimeAttendee:];
}

id objc_msgSend_initWithReuseIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithReuseIdentifier:];
}

id objc_msgSend_initWithRootNavigationController_(void *a1, const char *a2, ...)
{
  return [a1 initWithRootNavigationController:];
}

id objc_msgSend_initWithRootViewController_(void *a1, const char *a2, ...)
{
  return [a1 initWithRootViewController:];
}

id objc_msgSend_initWithSearchResultsController_(void *a1, const char *a2, ...)
{
  return [a1 initWithSearchResultsController:];
}

id objc_msgSend_initWithSelectionStyle_displayStyle_entityType_forEvent_eventStore_limitedToSource_showIdentityChooser_showDelegateSetupCell_showAccountStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSelectionStyle:displayStyle:entityType:forEvent:eventStore:limitedToSource:showIdentityChooser:showDelegateSetupCell:showAccountStatus:");
}

id objc_msgSend_initWithSize_(void *a1, const char *a2, ...)
{
  return [a1 initWithSize:];
}

id objc_msgSend_initWithSize_format_(void *a1, const char *a2, ...)
{
  return [a1 initWithSize:format:];
}

id objc_msgSend_initWithSizeClass_(void *a1, const char *a2, ...)
{
  return [a1 initWithSizeClass:];
}

id objc_msgSend_initWithStartView_endView_startFrame_endFrame_(void *a1, const char *a2, ...)
{
  return [a1 initWithStartView:endView:startFrame:endFrame:];
}

id objc_msgSend_initWithString_(void *a1, const char *a2, ...)
{
  return [a1 initWithString:];
}

id objc_msgSend_initWithString_attributes_(void *a1, const char *a2, ...)
{
  return [a1 initWithString:attributes:];
}

id objc_msgSend_initWithStyle_(void *a1, const char *a2, ...)
{
  return [a1 initWithStyle:];
}

id objc_msgSend_initWithStyle_reuseIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithStyle:reuseIdentifier:];
}

id objc_msgSend_initWithSuperclassDescription_(void *a1, const char *a2, ...)
{
  return [a1 initWithSuperclassDescription:];
}

id objc_msgSend_initWithTarget_action_(void *a1, const char *a2, ...)
{
  return [a1 initWithTarget:action:];
}

id objc_msgSend_initWithTargetSizeClass_(void *a1, const char *a2, ...)
{
  return [a1 initWithTargetSizeClass:];
}

id objc_msgSend_initWithTestName_scrollView_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 initWithTestName:scrollView:completionHandler:];
}

id objc_msgSend_initWithTimeInterval_(void *a1, const char *a2, ...)
{
  return [a1 initWithTimeInterval:];
}

id objc_msgSend_initWithTitle_style_target_action_(void *a1, const char *a2, ...)
{
  return [a1 initWithTitle:style:target:action:];
}

id objc_msgSend_initWithTitle_target_action_(void *a1, const char *a2, ...)
{
  return [a1 initWithTitle:];
}

id objc_msgSend_initWithValue_size_layoutShift_(void *a1, const char *a2, ...)
{
  return [a1 initWithValue:size:layoutShift:];
}

id objc_msgSend_initWithView_(void *a1, const char *a2, ...)
{
  return [a1 initWithView:];
}

id objc_msgSend_initWithView_delegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithView:delegate:];
}

id objc_msgSend_initWithView_parameters_(void *a1, const char *a2, ...)
{
  return [a1 initWithView:parameters:];
}

id objc_msgSend_initWithView_parameters_target_(void *a1, const char *a2, ...)
{
  return [a1 initWithView:parameters:target:];
}

id objc_msgSend_initWithView_views_bounds_traitCollection_(void *a1, const char *a2, ...)
{
  return [a1 initWithView:views:bounds:traitCollection:];
}

id objc_msgSend_initWithViewController_options_(void *a1, const char *a2, ...)
{
  return [a1 initWithViewController:options:];
}

id objc_msgSend_initWithViewController_shouldShowWithAnimation_(void *a1, const char *a2, ...)
{
  return [a1 initWithViewController:shouldShowWithAnimation:];
}

id objc_msgSend_initWithViewControllerToShow_toBeShownInViewController_shouldBeModal_shouldShowWithAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithViewControllerToShow:toBeShownInViewController:shouldBeModal:shouldShowWithAnimation:");
}

id objc_msgSend_initWithWeekView_andCalendar_(void *a1, const char *a2, ...)
{
  return [a1 initWithWeekView:andCalendar:];
}

id objc_msgSend_initWithWindow_model_(void *a1, const char *a2, ...)
{
  return [a1 initWithWindow:model:];
}

id objc_msgSend_initialPresentationHasCompleted(void *a1, const char *a2, ...)
{
  return _[a1 initialPresentationHasCompleted];
}

id objc_msgSend_initiallyInteractive(void *a1, const char *a2, ...)
{
  return _[a1 initiallyInteractive];
}

id objc_msgSend_inputEventData(void *a1, const char *a2, ...)
{
  return _[a1 inputEventData];
}

id objc_msgSend_inputInvalid(void *a1, const char *a2, ...)
{
  return _[a1 inputInvalid];
}

id objc_msgSend_insertChildMenu_atStartOfMenuForIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 insertChildMenu:atStartOfMenuForIdentifier:];
}

id objc_msgSend_insertNewLayer(void *a1, const char *a2, ...)
{
  return _[a1 insertNewLayer];
}

id objc_msgSend_insertObject_atIndex_(void *a1, const char *a2, ...)
{
  return [a1 insertObject:atIndex:];
}

id objc_msgSend_insertRowsAtIndexPaths_withRowAnimation_(void *a1, const char *a2, ...)
{
  return [a1 insertRowsAtIndexPaths:withRowAnimation:];
}

id objc_msgSend_insertString_atIndex_(void *a1, const char *a2, ...)
{
  return [a1 insertString:atIndex:];
}

id objc_msgSend_insertSubview_aboveSubview_(void *a1, const char *a2, ...)
{
  return [a1 insertSubview:aboveSubview:];
}

id objc_msgSend_insertSubview_atIndex_(void *a1, const char *a2, ...)
{
  return [a1 insertSubview:atIndex:];
}

id objc_msgSend_insertSubview_belowSubview_(void *a1, const char *a2, ...)
{
  return [a1 insertSubview:belowSubview:];
}

id objc_msgSend_insertViews_(void *a1, const char *a2, ...)
{
  return [a1 insertViews:];
}

id objc_msgSend_insetBounds(void *a1, const char *a2, ...)
{
  return _[a1 insetBounds];
}

id objc_msgSend_installCACommitCompletionBlock_(void *a1, const char *a2, ...)
{
  return [a1 installCACommitCompletionBlock:];
}

id objc_msgSend_instancesRespondToSelector_(void *a1, const char *a2, ...)
{
  return [a1 instancesRespondToSelector:];
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _[a1 intValue];
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _[a1 integerValue];
}

id objc_msgSend_intendedSizeClass(void *a1, const char *a2, ...)
{
  return _[a1 intendedSizeClass];
}

id objc_msgSend_intent(void *a1, const char *a2, ...)
{
  return _[a1 intent];
}

id objc_msgSend_interTextSpacing(void *a1, const char *a2, ...)
{
  return _[a1 interTextSpacing];
}

id objc_msgSend_interTextSpacingCircled(void *a1, const char *a2, ...)
{
  return _[a1 interTextSpacingCircled];
}

id objc_msgSend_interaction(void *a1, const char *a2, ...)
{
  return _[a1 interaction];
}

id objc_msgSend_interactions(void *a1, const char *a2, ...)
{
  return _[a1 interactions];
}

id objc_msgSend_interactivePopGestureRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 interactivePopGestureRecognizer];
}

id objc_msgSend_interfaceOrientation(void *a1, const char *a2, ...)
{
  return _[a1 interfaceOrientation];
}

id objc_msgSend_internalEditViewDelegate(void *a1, const char *a2, ...)
{
  return _[a1 internalEditViewDelegate];
}

id objc_msgSend_intersectSet_(void *a1, const char *a2, ...)
{
  return [a1 intersectSet:];
}

id objc_msgSend_intersectingRect_(void *a1, const char *a2, ...)
{
  return [a1 intersectingRect:];
}

id objc_msgSend_intrinsicContentSize(void *a1, const char *a2, ...)
{
  return _[a1 intrinsicContentSize];
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _[a1 invalidate];
}

id objc_msgSend_invalidateBackButtonDate(void *a1, const char *a2, ...)
{
  return _[a1 invalidateBackButtonDate];
}

id objc_msgSend_invalidateFonts(void *a1, const char *a2, ...)
{
  return _[a1 invalidateFonts];
}

id objc_msgSend_invalidateManagedNavigationController(void *a1, const char *a2, ...)
{
  return _[a1 invalidateManagedNavigationController];
}

id objc_msgSend_invisibleCalendars(void *a1, const char *a2, ...)
{
  return _[a1 invisibleCalendars];
}

id objc_msgSend_invisibleCalendarsForAllIdentities(void *a1, const char *a2, ...)
{
  return _[a1 invisibleCalendarsForAllIdentities];
}

id objc_msgSend_invitationBearingStoresExistForEvents(void *a1, const char *a2, ...)
{
  return _[a1 invitationBearingStoresExistForEvents];
}

id objc_msgSend_inviteReplyNotificationFromEventStore_(void *a1, const char *a2, ...)
{
  return [a1 inviteReplyNotificationFromEventStore:];
}

id objc_msgSend_invitedBy(void *a1, const char *a2, ...)
{
  return _[a1 invitedBy];
}

id objc_msgSend_isAfterDate_(void *a1, const char *a2, ...)
{
  return [a1 isAfterDate:];
}

id objc_msgSend_isAfterDayForDate_inCalendar_(void *a1, const char *a2, ...)
{
  return [a1 isAfterDayForDate:inCalendar:];
}

id objc_msgSend_isAllDay(void *a1, const char *a2, ...)
{
  return _[a1 isAllDay];
}

id objc_msgSend_isAnimated(void *a1, const char *a2, ...)
{
  return _[a1 isAnimated];
}

id objc_msgSend_isBackgroundScene(void *a1, const char *a2, ...)
{
  return _[a1 isBackgroundScene];
}

id objc_msgSend_isBeforeDate_(void *a1, const char *a2, ...)
{
  return [a1 isBeforeDate:];
}

id objc_msgSend_isBeforeDayForDate_inCalendar_(void *a1, const char *a2, ...)
{
  return [a1 isBeforeDayForDate:inCalendar:];
}

id objc_msgSend_isBeingDismissed(void *a1, const char *a2, ...)
{
  return _[a1 isBeingDismissed];
}

id objc_msgSend_isBirthday(void *a1, const char *a2, ...)
{
  return _[a1 isBirthday];
}

id objc_msgSend_isBroadcast(void *a1, const char *a2, ...)
{
  return _[a1 isBroadcast];
}

id objc_msgSend_isCancelled(void *a1, const char *a2, ...)
{
  return _[a1 isCancelled];
}

id objc_msgSend_isCollapsed(void *a1, const char *a2, ...)
{
  return _[a1 isCollapsed];
}

id objc_msgSend_isCompact(void *a1, const char *a2, ...)
{
  return _[a1 isCompact];
}

id objc_msgSend_isContinuitySupported(void *a1, const char *a2, ...)
{
  return _[a1 isContinuitySupported];
}

id objc_msgSend_isCurrentMonth(void *a1, const char *a2, ...)
{
  return _[a1 isCurrentMonth];
}

id objc_msgSend_isCurrentUser(void *a1, const char *a2, ...)
{
  return _[a1 isCurrentUser];
}

id objc_msgSend_isDate_inSameDayAsDate_(void *a1, const char *a2, ...)
{
  return [a1 isDate:inSameDayAsDate:];
}

id objc_msgSend_isDateInToday_(void *a1, const char *a2, ...)
{
  return [a1 isDateInToday:];
}

id objc_msgSend_isDateInWeekend_(void *a1, const char *a2, ...)
{
  return [a1 isDateInWeekend:];
}

id objc_msgSend_isDateVisible_(void *a1, const char *a2, ...)
{
  return [a1 isDateVisible:];
}

id objc_msgSend_isDecelerating(void *a1, const char *a2, ...)
{
  return _[a1 isDecelerating];
}

id objc_msgSend_isDelegate(void *a1, const char *a2, ...)
{
  return _[a1 isDelegate];
}

id objc_msgSend_isDescendantOfView_(void *a1, const char *a2, ...)
{
  return [a1 isDescendantOfView:];
}

id objc_msgSend_isDragging(void *a1, const char *a2, ...)
{
  return _[a1 isDragging];
}

id objc_msgSend_isEditable(void *a1, const char *a2, ...)
{
  return _[a1 isEditable];
}

id objc_msgSend_isEmpty(void *a1, const char *a2, ...)
{
  return _[a1 isEmpty];
}

id objc_msgSend_isEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isEnabled];
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return [a1 isEqual:];
}

id objc_msgSend_isEqualToArray_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToArray:];
}

id objc_msgSend_isEqualToAttributedString_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToAttributedString:];
}

id objc_msgSend_isEqualToDate_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToDate:];
}

id objc_msgSend_isEqualToSet_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToSet:];
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToString:];
}

id objc_msgSend_isEqualToTimeZone_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToTimeZone:];
}

id objc_msgSend_isEventAbleToShowPopover_(void *a1, const char *a2, ...)
{
  return [a1 isEventAbleToShowPopover:];
}

id objc_msgSend_isEventFullyVisible_(void *a1, const char *a2, ...)
{
  return [a1 isEventFullyVisible:];
}

id objc_msgSend_isExecuting(void *a1, const char *a2, ...)
{
  return _[a1 isExecuting];
}

id objc_msgSend_isFilledForDay_(void *a1, const char *a2, ...)
{
  return [a1 isFilledForDay:];
}

id objc_msgSend_isFinished(void *a1, const char *a2, ...)
{
  return _[a1 isFinished];
}

id objc_msgSend_isFirstResponder(void *a1, const char *a2, ...)
{
  return _[a1 isFirstResponder];
}

id objc_msgSend_isFocusBannerSection_(void *a1, const char *a2, ...)
{
  return [a1 isFocusBannerSection:];
}

id objc_msgSend_isHidden(void *a1, const char *a2, ...)
{
  return _[a1 isHidden];
}

id objc_msgSend_isHighlighted(void *a1, const char *a2, ...)
{
  return _[a1 isHighlighted];
}

id objc_msgSend_isHolidayCalendar(void *a1, const char *a2, ...)
{
  return _[a1 isHolidayCalendar];
}

id objc_msgSend_isIdentityChooserSection_(void *a1, const char *a2, ...)
{
  return [a1 isIdentityChooserSection:];
}

id objc_msgSend_isIgnoringEventAlerts(void *a1, const char *a2, ...)
{
  return _[a1 isIgnoringEventAlerts];
}

id objc_msgSend_isInUse(void *a1, const char *a2, ...)
{
  return _[a1 isInUse];
}

id objc_msgSend_isInstalled(void *a1, const char *a2, ...)
{
  return _[a1 isInstalled];
}

id objc_msgSend_isIntegrationEvent(void *a1, const char *a2, ...)
{
  return _[a1 isIntegrationEvent];
}

id objc_msgSend_isLeapMonth(void *a1, const char *a2, ...)
{
  return _[a1 isLeapMonth];
}

id objc_msgSend_isMainThread(void *a1, const char *a2, ...)
{
  return _[a1 isMainThread];
}

id objc_msgSend_isModalInPresentation(void *a1, const char *a2, ...)
{
  return _[a1 isModalInPresentation];
}

id objc_msgSend_isMultiDay(void *a1, const char *a2, ...)
{
  return _[a1 isMultiDay];
}

id objc_msgSend_isMultiDayTimedEventInCalendar_(void *a1, const char *a2, ...)
{
  return [a1 isMultiDayTimedEventInCalendar:];
}

id objc_msgSend_isMultiUser(void *a1, const char *a2, ...)
{
  return _[a1 isMultiUser];
}

id objc_msgSend_isNarrow(void *a1, const char *a2, ...)
{
  return _[a1 isNarrow];
}

id objc_msgSend_isNarrowWithScale_(void *a1, const char *a2, ...)
{
  return [a1 isNarrowWithScale:];
}

id objc_msgSend_isNavigationBarHidden(void *a1, const char *a2, ...)
{
  return _[a1 isNavigationBarHidden];
}

id objc_msgSend_isNew(void *a1, const char *a2, ...)
{
  return _[a1 isNew];
}

id objc_msgSend_isOrWasPartOfRecurringSeries(void *a1, const char *a2, ...)
{
  return _[a1 isOrWasPartOfRecurringSeries];
}

id objc_msgSend_isPointInSymbol_(void *a1, const char *a2, ...)
{
  return [a1 isPointInSymbol:];
}

id objc_msgSend_isPointInView_(void *a1, const char *a2, ...)
{
  return [a1 isPointInView:];
}

id objc_msgSend_isPresentedInsidePopover(void *a1, const char *a2, ...)
{
  return _[a1 isPresentedInsidePopover];
}

id objc_msgSend_isReady(void *a1, const char *a2, ...)
{
  return _[a1 isReady];
}

id objc_msgSend_isReadyToShowViewControllersInsideEnqueueableManagedNavigationController_(void *a1, const char *a2, ...)
{
  return [a1 isReadyToShowViewControllersInsideEnqueueableManagedNavigationController:];
}

id objc_msgSend_isReadyToShowViewControllersInsideEnqueueableManagedNavigationController_isPreemptiveCheck_(void *a1, const char *a2, ...)
{
  return [a1 isReadyToShowViewControllersInsideEnqueueableManagedNavigationController:isPreemptiveCheck:];
}

id objc_msgSend_isRecapAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isRecapAvailable];
}

id objc_msgSend_isReminderAppLocked(void *a1, const char *a2, ...)
{
  return _[a1 isReminderAppLocked];
}

id objc_msgSend_isReminderIntegrationEvent(void *a1, const char *a2, ...)
{
  return _[a1 isReminderIntegrationEvent];
}

id objc_msgSend_isReminderStack(void *a1, const char *a2, ...)
{
  return _[a1 isReminderStack];
}

id objc_msgSend_isRotating(void *a1, const char *a2, ...)
{
  return _[a1 isRotating];
}

id objc_msgSend_isRunningTest(void *a1, const char *a2, ...)
{
  return _[a1 isRunningTest];
}

id objc_msgSend_isSameDayAsDate_inCalendar_(void *a1, const char *a2, ...)
{
  return [a1 isSameDayAsDate:inCalendar:];
}

id objc_msgSend_isSceneCalendarAppScene_(void *a1, const char *a2, ...)
{
  return [a1 isSceneCalendarAppScene:];
}

id objc_msgSend_isScrollAnimating(void *a1, const char *a2, ...)
{
  return _[a1 isScrollAnimating];
}

id objc_msgSend_isSelectable(void *a1, const char *a2, ...)
{
  return _[a1 isSelectable];
}

id objc_msgSend_isSelected(void *a1, const char *a2, ...)
{
  return _[a1 isSelected];
}

id objc_msgSend_isSelectedCopyView(void *a1, const char *a2, ...)
{
  return _[a1 isSelectedCopyView];
}

id objc_msgSend_isShortResumeToTodayTimeout(void *a1, const char *a2, ...)
{
  return _[a1 isShortResumeToTodayTimeout];
}

id objc_msgSend_isSingleDay(void *a1, const char *a2, ...)
{
  return _[a1 isSingleDay];
}

id objc_msgSend_isSubclassOfClass_(void *a1, const char *a2, ...)
{
  return [a1 isSubclassOfClass:];
}

id objc_msgSend_isSuspended(void *a1, const char *a2, ...)
{
  return _[a1 isSuspended];
}

id objc_msgSend_isTextTruncated(void *a1, const char *a2, ...)
{
  return _[a1 isTextTruncated];
}

id objc_msgSend_isToday(void *a1, const char *a2, ...)
{
  return _[a1 isToday];
}

id objc_msgSend_isTodayHighlightVisible(void *a1, const char *a2, ...)
{
  return _[a1 isTodayHighlightVisible];
}

id objc_msgSend_isTodayVisible(void *a1, const char *a2, ...)
{
  return _[a1 isTodayVisible];
}

id objc_msgSend_isTomorrow(void *a1, const char *a2, ...)
{
  return _[a1 isTomorrow];
}

id objc_msgSend_isToolbarHidden(void *a1, const char *a2, ...)
{
  return _[a1 isToolbarHidden];
}

id objc_msgSend_isTracking(void *a1, const char *a2, ...)
{
  return _[a1 isTracking];
}

id objc_msgSend_isUserFingerDown(void *a1, const char *a2, ...)
{
  return _[a1 isUserFingerDown];
}

id objc_msgSend_isViewLoaded(void *a1, const char *a2, ...)
{
  return _[a1 isViewLoaded];
}

id objc_msgSend_isWaitingForBackgroundLoadingOfSelectedEventOccurrenceView(void *a1, const char *a2, ...)
{
  return _[a1 isWaitingForBackgroundLoadingOfSelectedEventOccurrenceView];
}

id objc_msgSend_isWeekend(void *a1, const char *a2, ...)
{
  return _[a1 isWeekend];
}

id objc_msgSend_iterateThroughEachAllDayRow_(void *a1, const char *a2, ...)
{
  return [a1 iterateThroughEachAllDayRow:];
}

id objc_msgSend_iterateThroughEachOccurrence_(void *a1, const char *a2, ...)
{
  return [a1 iterateThroughEachOccurrence:];
}

id objc_msgSend_joinMethods(void *a1, const char *a2, ...)
{
  return _[a1 joinMethods];
}

id objc_msgSend_jumpToTodayActionPerformed(void *a1, const char *a2, ...)
{
  return _[a1 jumpToTodayActionPerformed];
}

id objc_msgSend_key(void *a1, const char *a2, ...)
{
  return _[a1 key];
}

id objc_msgSend_kickOffAnimation(void *a1, const char *a2, ...)
{
  return _[a1 kickOffAnimation];
}

id objc_msgSend_label(void *a1, const char *a2, ...)
{
  return _[a1 label];
}

id objc_msgSend_labelColor(void *a1, const char *a2, ...)
{
  return _[a1 labelColor];
}

id objc_msgSend_labelElementsVisible(void *a1, const char *a2, ...)
{
  return _[a1 labelElementsVisible];
}

id objc_msgSend_labelRelatedConstraints(void *a1, const char *a2, ...)
{
  return _[a1 labelRelatedConstraints];
}

id objc_msgSend_largeListViewDisclosingEventDetails(void *a1, const char *a2, ...)
{
  return _[a1 largeListViewDisclosingEventDetails];
}

id objc_msgSend_largeMonthWeekView_didDoubleTapOnDay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "largeMonthWeekView:didDoubleTapOnDay:");
}

id objc_msgSend_largeMonthWeekView_didTapOccurrence_onDay_extendSelection_userInitiated_tappedSymbol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "largeMonthWeekView:didTapOccurrence:onDay:extendSelection:userInitiated:tappedSymbol:");
}

id objc_msgSend_largeMonthWeekView_touchesBegan_withEvent_(void *a1, const char *a2, ...)
{
  return [a1 largeMonthWeekView:touchesBegan:withEvent:];
}

id objc_msgSend_largeMonthWeekView_touchesCancelled_withEvent_(void *a1, const char *a2, ...)
{
  return [a1 largeMonthWeekView:touchesCancelled:withEvent:];
}

id objc_msgSend_largeMonthWeekView_touchesEnded_withEvent_(void *a1, const char *a2, ...)
{
  return [a1 largeMonthWeekView:touchesEnded:withEvent:];
}

id objc_msgSend_largeMonthWeekView_touchesMoved_withEvent_(void *a1, const char *a2, ...)
{
  return [a1 largeMonthWeekView:touchesMoved:withEvent:];
}

id objc_msgSend_largeOverlayCircleDiameterForSizeClass_(void *a1, const char *a2, ...)
{
  return [a1 largeOverlayCircleDiameterForSizeClass:];
}

id objc_msgSend_largeTextRegularController(void *a1, const char *a2, ...)
{
  return _[a1 largeTextRegularController];
}

id objc_msgSend_largeTitleTextAttributes(void *a1, const char *a2, ...)
{
  return _[a1 largeTitleTextAttributes];
}

id objc_msgSend_lastBaselineAnchor(void *a1, const char *a2, ...)
{
  return _[a1 lastBaselineAnchor];
}

id objc_msgSend_lastDisplayedSecond(void *a1, const char *a2, ...)
{
  return _[a1 lastDisplayedSecond];
}

id objc_msgSend_lastName(void *a1, const char *a2, ...)
{
  return _[a1 lastName];
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _[a1 lastObject];
}

id objc_msgSend_lastSecondOfWeek(void *a1, const char *a2, ...)
{
  return _[a1 lastSecondOfWeek];
}

id objc_msgSend_lastSidebarMode(void *a1, const char *a2, ...)
{
  return _[a1 lastSidebarMode];
}

id objc_msgSend_lastSuspendTime(void *a1, const char *a2, ...)
{
  return _[a1 lastSuspendTime];
}

id objc_msgSend_lastUsedNonYearView(void *a1, const char *a2, ...)
{
  return _[a1 lastUsedNonYearView];
}

id objc_msgSend_lastViewMode(void *a1, const char *a2, ...)
{
  return _[a1 lastViewMode];
}

id objc_msgSend_lastViewedDate(void *a1, const char *a2, ...)
{
  return _[a1 lastViewedDate];
}

id objc_msgSend_lastViewedOccurrenceDate(void *a1, const char *a2, ...)
{
  return _[a1 lastViewedOccurrenceDate];
}

id objc_msgSend_lastViewedOccurrenceUID(void *a1, const char *a2, ...)
{
  return _[a1 lastViewedOccurrenceUID];
}

id objc_msgSend_laterDate_(void *a1, const char *a2, ...)
{
  return [a1 laterDate:];
}

id objc_msgSend_launchedToTest(void *a1, const char *a2, ...)
{
  return _[a1 launchedToTest];
}

id objc_msgSend_layedOutRowsRemoveAllObjects(void *a1, const char *a2, ...)
{
  return _[a1 layedOutRowsRemoveAllObjects];
}

id objc_msgSend_layer(void *a1, const char *a2, ...)
{
  return _[a1 layer];
}

id objc_msgSend_layoutBelowIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 layoutBelowIfNeeded];
}

id objc_msgSend_layoutCellsAnimated_(void *a1, const char *a2, ...)
{
  return [a1 layoutCellsAnimated:];
}

id objc_msgSend_layoutForWidth_(void *a1, const char *a2, ...)
{
  return [a1 layoutForWidth:];
}

id objc_msgSend_layoutIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 layoutIfNeeded];
}

id objc_msgSend_layoutMargins(void *a1, const char *a2, ...)
{
  return _[a1 layoutMargins];
}

id objc_msgSend_layoutMarginsGuide(void *a1, const char *a2, ...)
{
  return _[a1 layoutMarginsGuide];
}

id objc_msgSend_layoutMetrics(void *a1, const char *a2, ...)
{
  return _[a1 layoutMetrics];
}

id objc_msgSend_layoutOccurrences(void *a1, const char *a2, ...)
{
  return _[a1 layoutOccurrences];
}

id objc_msgSend_layoutOccurrencesIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 layoutOccurrencesIfNeeded];
}

id objc_msgSend_layoutSearchControl(void *a1, const char *a2, ...)
{
  return _[a1 layoutSearchControl];
}

id objc_msgSend_layoutSegmentedControl(void *a1, const char *a2, ...)
{
  return _[a1 layoutSegmentedControl];
}

id objc_msgSend_layoutShift(void *a1, const char *a2, ...)
{
  return _[a1 layoutShift];
}

id objc_msgSend_layoutSublayersOfLayer_(void *a1, const char *a2, ...)
{
  return [a1 layoutSublayersOfLayer:];
}

id objc_msgSend_layoutSubviews(void *a1, const char *a2, ...)
{
  return _[a1 layoutSubviews];
}

id objc_msgSend_leadingAnchor(void *a1, const char *a2, ...)
{
  return _[a1 leadingAnchor];
}

id objc_msgSend_leadingButton(void *a1, const char *a2, ...)
{
  return _[a1 leadingButton];
}

id objc_msgSend_leftBarButtonBlankFixedSpaceWidth(void *a1, const char *a2, ...)
{
  return _[a1 leftBarButtonBlankFixedSpaceWidth];
}

id objc_msgSend_leftBarButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 leftBarButtonItem];
}

id objc_msgSend_leftContentInset(void *a1, const char *a2, ...)
{
  return _[a1 leftContentInset];
}

id objc_msgSend_leftMarginAdjustment(void *a1, const char *a2, ...)
{
  return _[a1 leftMarginAdjustment];
}

id objc_msgSend_leftMarginForWindowSize_(void *a1, const char *a2, ...)
{
  return [a1 leftMarginForWindowSize:];
}

id objc_msgSend_leftStringForDate_(void *a1, const char *a2, ...)
{
  return [a1 leftStringForDate:];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_liftUpOccurrenceForEditingEvent_(void *a1, const char *a2, ...)
{
  return [a1 liftUpOccurrenceForEditingEvent];
}

id objc_msgSend_lightGrayColor(void *a1, const char *a2, ...)
{
  return _[a1 lightGrayColor];
}

id objc_msgSend_lineHeight(void *a1, const char *a2, ...)
{
  return _[a1 lineHeight];
}

id objc_msgSend_lineHeightAdjustmentOffsetY_(void *a1, const char *a2, ...)
{
  return [a1 lineHeightAdjustmentOffsetY:];
}

id objc_msgSend_listGroupedCellConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 listGroupedCellConfiguration];
}

id objc_msgSend_listSidebarCellConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 listSidebarCellConfiguration];
}

id objc_msgSend_listViewController(void *a1, const char *a2, ...)
{
  return _[a1 listViewController];
}

id objc_msgSend_listViewController_didScrollToDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "listViewController:didScrollToDate:");
}

id objc_msgSend_listViewControllerContainerHandlesShowEvent(void *a1, const char *a2, ...)
{
  return _[a1 listViewControllerContainerHandlesShowEvent];
}

id objc_msgSend_listViewControllerShouldShowEvent_showMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "listViewControllerShouldShowEvent:showMode:");
}

id objc_msgSend_listViewDelegate(void *a1, const char *a2, ...)
{
  return _[a1 listViewDelegate];
}

id objc_msgSend_listViewNormalLocation(void *a1, const char *a2, ...)
{
  return _[a1 listViewNormalLocation];
}

id objc_msgSend_loadAndLayoutOccurrences_reverse_(void *a1, const char *a2, ...)
{
  return [a1 loadAndLayoutOccurrences:reverse:];
}

id objc_msgSend_loadContactsAsynchronously(void *a1, const char *a2, ...)
{
  return _[a1 loadContactsAsynchronously];
}

id objc_msgSend_loadDataAsyncWithCompletion_reverse_(void *a1, const char *a2, ...)
{
  return [a1 loadDataAsyncWithCompletion:reverse:];
}

id objc_msgSend_loadDataBetweenStart_end_withTrigger_generation_completionForCurrentDayReload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadDataBetweenStart:end:withTrigger:generation:completionForCurrentDayReload:");
}

id objc_msgSend_loadViewController(void *a1, const char *a2, ...)
{
  return _[a1 loadViewController];
}

id objc_msgSend_loadViewIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 loadViewIfNeeded];
}

id objc_msgSend_loadViewsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 loadViewsIfNeeded];
}

id objc_msgSend_loadedEventCollection(void *a1, const char *a2, ...)
{
  return _[a1 loadedEventCollection];
}

id objc_msgSend_localCustomObjectForKey_(void *a1, const char *a2, ...)
{
  return [a1 localCustomObjectForKey:];
}

id objc_msgSend_localTimeZone(void *a1, const char *a2, ...)
{
  return _[a1 localTimeZone];
}

id objc_msgSend_locale(void *a1, const char *a2, ...)
{
  return _[a1 locale];
}

id objc_msgSend_localeChanged(void *a1, const char *a2, ...)
{
  return _[a1 localeChanged];
}

id objc_msgSend_localeDidChange(void *a1, const char *a2, ...)
{
  return _[a1 localeDidChange];
}

id objc_msgSend_localeIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 localeIdentifier];
}

id objc_msgSend_localizedName(void *a1, const char *a2, ...)
{
  return _[a1 localizedName];
}

id objc_msgSend_localizedPasteStringForEventCount_includeHere_(void *a1, const char *a2, ...)
{
  return [a1 localizedPasteStringForEventCount:includeHere:];
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return [a1 localizedStringForKey:value:table:];
}

id objc_msgSend_localizedStringFromNumber_numberStyle_(void *a1, const char *a2, ...)
{
  return [a1 localizedStringFromNumber:numberStyle:];
}

id objc_msgSend_localizedStringWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 localizedStringWithFormat:];
}

id objc_msgSend_localizedStringWithValidatedFormat_validFormatSpecifiers_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringWithValidatedFormat:validFormatSpecifiers:error:");
}

id objc_msgSend_location(void *a1, const char *a2, ...)
{
  return _[a1 location];
}

id objc_msgSend_locationAddress(void *a1, const char *a2, ...)
{
  return _[a1 locationAddress];
}

id objc_msgSend_locationBaselineToTitleBaselineConstraint(void *a1, const char *a2, ...)
{
  return _[a1 locationBaselineToTitleBaselineConstraint];
}

id objc_msgSend_locationChanged(void *a1, const char *a2, ...)
{
  return _[a1 locationChanged];
}

id objc_msgSend_locationInView_(void *a1, const char *a2, ...)
{
  return [a1 locationInView:];
}

id objc_msgSend_locationName(void *a1, const char *a2, ...)
{
  return _[a1 locationName];
}

id objc_msgSend_locationOfTouch_inView_(void *a1, const char *a2, ...)
{
  return [a1 locationOfTouch:inView:];
}

id objc_msgSend_locationWithTitle_(void *a1, const char *a2, ...)
{
  return [a1 locationWithTitle:];
}

id objc_msgSend_logEventConfirmedInboxWithUniqueKey_(void *a1, const char *a2, ...)
{
  return [a1 logEventConfirmedInboxWithUniqueKey:];
}

id objc_msgSend_logEventRejectedInboxWithUniqueKey_(void *a1, const char *a2, ...)
{
  return [a1 logEventRejectedInboxWithUniqueKey:];
}

id objc_msgSend_lowercaseString(void *a1, const char *a2, ...)
{
  return _[a1 lowercaseString];
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _[a1 mainBundle];
}

id objc_msgSend_mainContentSize(void *a1, const char *a2, ...)
{
  return _[a1 mainContentSize];
}

id objc_msgSend_mainQueue(void *a1, const char *a2, ...)
{
  return _[a1 mainQueue];
}

id objc_msgSend_mainScreen(void *a1, const char *a2, ...)
{
  return _[a1 mainScreen];
}

id objc_msgSend_mainSystem(void *a1, const char *a2, ...)
{
  return _[a1 mainSystem];
}

id objc_msgSend_mainView(void *a1, const char *a2, ...)
{
  return _[a1 mainView];
}

id objc_msgSend_mainViewControllerCanChangeSelectedDate(void *a1, const char *a2, ...)
{
  return _[a1 mainViewControllerCanChangeSelectedDate];
}

id objc_msgSend_mainViewControllerCanChangeSelectedEvent(void *a1, const char *a2, ...)
{
  return _[a1 mainViewControllerCanChangeSelectedEvent];
}

id objc_msgSend_makeDayCircleForDate_isToday_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeDayCircleForDate:isToday:");
}

id objc_msgSend_makeKeyAndVisible(void *a1, const char *a2, ...)
{
  return _[a1 makeKeyAndVisible];
}

id objc_msgSend_managedNavigationController(void *a1, const char *a2, ...)
{
  return _[a1 managedNavigationController];
}

id objc_msgSend_managedNavigationControllerType(void *a1, const char *a2, ...)
{
  return _[a1 managedNavigationControllerType];
}

id objc_msgSend_managedNavigationControllerWillBeInvalidated(void *a1, const char *a2, ...)
{
  return _[a1 managedNavigationControllerWillBeInvalidated];
}

id objc_msgSend_mapsURLForLocation_onEvent_hasMapItemLaunchOptionFromTimeToLeaveNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mapsURLForLocation:onEvent:hasMapItemLaunchOptionFromTimeToLeaveNotification:");
}

id objc_msgSend_mask(void *a1, const char *a2, ...)
{
  return _[a1 mask];
}

id objc_msgSend_maskImageForImage_atPoint_withSize_(void *a1, const char *a2, ...)
{
  return [a1 maskImageForImage:atPoint:withSize:];
}

id objc_msgSend_matchesMonthView(void *a1, const char *a2, ...)
{
  return _[a1 matchesMonthView];
}

id objc_msgSend_maxAllowableAllDayTextTwoLineHeight(void *a1, const char *a2, ...)
{
  return _[a1 maxAllowableAllDayTextTwoLineHeight];
}

id objc_msgSend_maxAllowableAllDayTextWidth(void *a1, const char *a2, ...)
{
  return _[a1 maxAllowableAllDayTextWidth];
}

id objc_msgSend_maxBufferViews(void *a1, const char *a2, ...)
{
  return _[a1 maxBufferViews];
}

id objc_msgSend_maxNarrowOccurrenceHeight(void *a1, const char *a2, ...)
{
  return _[a1 maxNarrowOccurrenceHeight];
}

id objc_msgSend_maxOccurrencesWithoutScroller(void *a1, const char *a2, ...)
{
  return _[a1 maxOccurrencesWithoutScroller];
}

id objc_msgSend_maxRowCountWithUserVisibleEarliestDate_latestDate_(void *a1, const char *a2, ...)
{
  return [a1 maxRowCountWithUserVisibleEarliestDate:latestDate:];
}

id objc_msgSend_maximumCachedReusableViews(void *a1, const char *a2, ...)
{
  return _[a1 maximumCachedReusableViews];
}

id objc_msgSend_maximumHourScale(void *a1, const char *a2, ...)
{
  return _[a1 maximumHourScale];
}

id objc_msgSend_maximumNumberOfMonths(void *a1, const char *a2, ...)
{
  return _[a1 maximumNumberOfMonths];
}

id objc_msgSend_maximumWeekScale(void *a1, const char *a2, ...)
{
  return _[a1 maximumWeekScale];
}

id objc_msgSend_menuAppearance(void *a1, const char *a2, ...)
{
  return _[a1 menuAppearance];
}

id objc_msgSend_menuForEvents_presentationController_isEditMenu_overrideActionBlock_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "menuForEvents:presentationController:isEditMenu:overrideActionBlock:completionBlock:");
}

id objc_msgSend_menuWithChildren_(void *a1, const char *a2, ...)
{
  return [a1 menuWithChildren:];
}

id objc_msgSend_menuWithTitle_children_(void *a1, const char *a2, ...)
{
  return [a1 menuWithTitle:children:];
}

id objc_msgSend_menuWithTitle_image_identifier_options_children_(void *a1, const char *a2, ...)
{
  return [a1 menuWithTitle:image:identifier:options:children:];
}

id objc_msgSend_messageCell_committedComment_(void *a1, const char *a2, ...)
{
  return [a1 messageCell:committedComment:];
}

id objc_msgSend_messageSendingManager(void *a1, const char *a2, ...)
{
  return _[a1 messageSendingManager];
}

id objc_msgSend_metricsForTextStyle_(void *a1, const char *a2, ...)
{
  return [a1 metricsForTextStyle:];
}

id objc_msgSend_middleHeightForWindowSize_(void *a1, const char *a2, ...)
{
  return [a1 middleHeightForWindowSize:];
}

id objc_msgSend_minNarrowOccurrenceHeight(void *a1, const char *a2, ...)
{
  return _[a1 minNarrowOccurrenceHeight];
}

id objc_msgSend_minimalMode(void *a1, const char *a2, ...)
{
  return _[a1 minimalMode];
}

id objc_msgSend_minimumHeightForSizeClass_orientation_(void *a1, const char *a2, ...)
{
  return [a1 minimumHeightForSizeClass:orientation:];
}

id objc_msgSend_minimumHeightForSizeClass_orientation_isAllDay_(void *a1, const char *a2, ...)
{
  return [a1 minimumHeightForSizeClass:orientation:isAllDay:];
}

id objc_msgSend_minimumHeightForSizeClass_orientation_isAllDay_usesSmallText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minimumHeightForSizeClass:orientation:isAllDay:usesSmallText:");
}

id objc_msgSend_minimumHourScale(void *a1, const char *a2, ...)
{
  return _[a1 minimumHourScale];
}

id objc_msgSend_minimumStandardWindowWidth(void *a1, const char *a2, ...)
{
  return _[a1 minimumStandardWindowWidth];
}

id objc_msgSend_minimumWeekScale(void *a1, const char *a2, ...)
{
  return _[a1 minimumWeekScale];
}

id objc_msgSend_minusSet_(void *a1, const char *a2, ...)
{
  return [a1 minusSet:];
}

id objc_msgSend_minute(void *a1, const char *a2, ...)
{
  return _[a1 minute];
}

id objc_msgSend_mobileCalWindow(void *a1, const char *a2, ...)
{
  return _[a1 mobileCalWindow];
}

id objc_msgSend_modalPresentationDelegate(void *a1, const char *a2, ...)
{
  return _[a1 modalPresentationDelegate];
}

id objc_msgSend_modalPresentationStyle(void *a1, const char *a2, ...)
{
  return _[a1 modalPresentationStyle];
}

id objc_msgSend_model(void *a1, const char *a2, ...)
{
  return _[a1 model];
}

id objc_msgSend_modelSelectedEvent(void *a1, const char *a2, ...)
{
  return _[a1 modelSelectedEvent];
}

id objc_msgSend_modelSelectedEvents(void *a1, const char *a2, ...)
{
  return _[a1 modelSelectedEvents];
}

id objc_msgSend_modifiedEndDate(void *a1, const char *a2, ...)
{
  return _[a1 modifiedEndDate];
}

id objc_msgSend_modifiedStartDate(void *a1, const char *a2, ...)
{
  return _[a1 modifiedStartDate];
}

id objc_msgSend_modifierFlags(void *a1, const char *a2, ...)
{
  return _[a1 modifierFlags];
}

id objc_msgSend_month(void *a1, const char *a2, ...)
{
  return _[a1 month];
}

id objc_msgSend_monthAnimationState(void *a1, const char *a2, ...)
{
  return _[a1 monthAnimationState];
}

id objc_msgSend_monthBreakIndex(void *a1, const char *a2, ...)
{
  return _[a1 monthBreakIndex];
}

id objc_msgSend_monthCellFrames(void *a1, const char *a2, ...)
{
  return _[a1 monthCellFrames];
}

id objc_msgSend_monthClass(void *a1, const char *a2, ...)
{
  return _[a1 monthClass];
}

id objc_msgSend_monthDayNavigationTransitionViewClass(void *a1, const char *a2, ...)
{
  return _[a1 monthDayNavigationTransitionViewClass];
}

id objc_msgSend_monthDayStringForDate_inCalendar_(void *a1, const char *a2, ...)
{
  return [a1 monthDayStringForDate:inCalendar:];
}

id objc_msgSend_monthDayTransitionViewClass(void *a1, const char *a2, ...)
{
  return _[a1 monthDayTransitionViewClass];
}

id objc_msgSend_monthFrame(void *a1, const char *a2, ...)
{
  return _[a1 monthFrame];
}

id objc_msgSend_monthFrameForCalendarDate_adjustHeightUp_(void *a1, const char *a2, ...)
{
  return [a1 monthFrameForCalendarDate:adjustHeightUp:];
}

id objc_msgSend_monthFrameInMonthView(void *a1, const char *a2, ...)
{
  return _[a1 monthFrameInMonthView];
}

id objc_msgSend_monthHeaderLocationForCalendarDate_(void *a1, const char *a2, ...)
{
  return [a1 monthHeaderLocationForCalendarDate:];
}

id objc_msgSend_monthLabel(void *a1, const char *a2, ...)
{
  return _[a1 monthLabel];
}

id objc_msgSend_monthLabelFrame(void *a1, const char *a2, ...)
{
  return _[a1 monthLabelFrame];
}

id objc_msgSend_monthLabelText(void *a1, const char *a2, ...)
{
  return _[a1 monthLabelText];
}

id objc_msgSend_monthMultiDayTransitionViewClass(void *a1, const char *a2, ...)
{
  return _[a1 monthMultiDayTransitionViewClass];
}

id objc_msgSend_monthNameFont(void *a1, const char *a2, ...)
{
  return _[a1 monthNameFont];
}

id objc_msgSend_monthNameLabel(void *a1, const char *a2, ...)
{
  return _[a1 monthNameLabel];
}

id objc_msgSend_monthOccurrencesFrame(void *a1, const char *a2, ...)
{
  return _[a1 monthOccurrencesFrame];
}

id objc_msgSend_monthOccurrencesSnapshot(void *a1, const char *a2, ...)
{
  return _[a1 monthOccurrencesSnapshot];
}

id objc_msgSend_monthScrubberFrame(void *a1, const char *a2, ...)
{
  return _[a1 monthScrubberFrame];
}

id objc_msgSend_monthSplittingCutOutArea(void *a1, const char *a2, ...)
{
  return _[a1 monthSplittingCutOutArea];
}

id objc_msgSend_monthString(void *a1, const char *a2, ...)
{
  return _[a1 monthString];
}

id objc_msgSend_monthSummaryFrames(void *a1, const char *a2, ...)
{
  return _[a1 monthSummaryFrames];
}

id objc_msgSend_monthSummarySnapshots(void *a1, const char *a2, ...)
{
  return _[a1 monthSummarySnapshots];
}

id objc_msgSend_monthTitleView(void *a1, const char *a2, ...)
{
  return _[a1 monthTitleView];
}

id objc_msgSend_monthView_gestureBegan_(void *a1, const char *a2, ...)
{
  return [a1 monthView:gestureBegan:];
}

id objc_msgSend_monthView_gestureCancelled_(void *a1, const char *a2, ...)
{
  return [a1 monthView:gestureCancelled:];
}

id objc_msgSend_monthView_gestureChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "monthView:gestureChanged:");
}

id objc_msgSend_monthView_gestureEnded_(void *a1, const char *a2, ...)
{
  return [a1 monthView:gestureEnded:];
}

id objc_msgSend_monthViewController(void *a1, const char *a2, ...)
{
  return _[a1 monthViewController];
}

id objc_msgSend_monthViewEventScaleSize(void *a1, const char *a2, ...)
{
  return _[a1 monthViewEventScaleSize];
}

id objc_msgSend_monthViewForCalendarDate_(void *a1, const char *a2, ...)
{
  return [a1 monthViewForCalendarDate:];
}

id objc_msgSend_monthViewScaleIcon(void *a1, const char *a2, ...)
{
  return _[a1 monthViewScaleIcon];
}

id objc_msgSend_monthViewScaleSize(void *a1, const char *a2, ...)
{
  return _[a1 monthViewScaleSize];
}

id objc_msgSend_monthViewScaleText(void *a1, const char *a2, ...)
{
  return _[a1 monthViewScaleText];
}

id objc_msgSend_monthViewScaleTitle(void *a1, const char *a2, ...)
{
  return _[a1 monthViewScaleTitle];
}

id objc_msgSend_monthViewSplittingLocation(void *a1, const char *a2, ...)
{
  return _[a1 monthViewSplittingLocation];
}

id objc_msgSend_monthViewSubviewSize(void *a1, const char *a2, ...)
{
  return _[a1 monthViewSubviewSize];
}

id objc_msgSend_monthWeekOccurrencesView_selectedEvent_userInitiated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "monthWeekOccurrencesView:selectedEvent:userInitiated:");
}

id objc_msgSend_monthWeekScale(void *a1, const char *a2, ...)
{
  return _[a1 monthWeekScale];
}

id objc_msgSend_monthWeekSubviewForScrollPoint_pointInWeek_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "monthWeekSubviewForScrollPoint:pointInWeek:");
}

id objc_msgSend_monthWeekViewClass(void *a1, const char *a2, ...)
{
  return _[a1 monthWeekViewClass];
}

id objc_msgSend_monthWeekViewForCalendarDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "monthWeekViewForCalendarDate:");
}

id objc_msgSend_monthsPerRow(void *a1, const char *a2, ...)
{
  return _[a1 monthsPerRow];
}

id objc_msgSend_movePreloadedItemsToVisible(void *a1, const char *a2, ...)
{
  return _[a1 movePreloadedItemsToVisible];
}

id objc_msgSend_moveRowAtIndexPath_toIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 moveRowAtIndexPath:toIndexPath:];
}

id objc_msgSend_multiDayHighlightView(void *a1, const char *a2, ...)
{
  return _[a1 multiDayHighlightView];
}

id objc_msgSend_multiDayViewVisibleHeightWithUserVisibleEarliestDate_latestDate_(void *a1, const char *a2, ...)
{
  return [a1 multiDayViewVisibleHeightWithUserVisibleEarliestDate:latestDate:];
}

id objc_msgSend_multipleMonthViewClass(void *a1, const char *a2, ...)
{
  return _[a1 multipleMonthViewClass];
}

id objc_msgSend_mustAcknowledgeMasterEvent(void *a1, const char *a2, ...)
{
  return _[a1 mustAcknowledgeMasterEvent];
}

id objc_msgSend_mustDisplaySplashScreenToUser(void *a1, const char *a2, ...)
{
  return _[a1 mustDisplaySplashScreenToUser];
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _[a1 mutableCopy];
}

id objc_msgSend_myFullName(void *a1, const char *a2, ...)
{
  return _[a1 myFullName];
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _[a1 name];
}

id objc_msgSend_narrowScale(void *a1, const char *a2, ...)
{
  return _[a1 narrowScale];
}

id objc_msgSend_naturalHeight(void *a1, const char *a2, ...)
{
  return _[a1 naturalHeight];
}

id objc_msgSend_navDelegate(void *a1, const char *a2, ...)
{
  return _[a1 navDelegate];
}

id objc_msgSend_navigateToEventDetails_fromController_(void *a1, const char *a2, ...)
{
  return [a1 navigateToEventDetails:fromController:];
}

id objc_msgSend_navigateToNextDateComponentUnitAnimated_(void *a1, const char *a2, ...)
{
  return [a1 navigateToNextDateComponentUnitAnimated:];
}

id objc_msgSend_navigateToNextSelectableItem(void *a1, const char *a2, ...)
{
  return _[a1 navigateToNextSelectableItem];
}

id objc_msgSend_navigateToPreviousDateComponentUnitAnimated_(void *a1, const char *a2, ...)
{
  return [a1 navigateToPreviousDateComponentUnitAnimated:];
}

id objc_msgSend_navigateToPreviousSelectableItem(void *a1, const char *a2, ...)
{
  return _[a1 navigateToPreviousSelectableItem];
}

id objc_msgSend_navigateToScrollView(void *a1, const char *a2, ...)
{
  return _[a1 navigateToScrollView];
}

id objc_msgSend_navigationBar(void *a1, const char *a2, ...)
{
  return _[a1 navigationBar];
}

id objc_msgSend_navigationBarDisplayedDateString(void *a1, const char *a2, ...)
{
  return _[a1 navigationBarDisplayedDateString];
}

id objc_msgSend_navigationBarTintColor(void *a1, const char *a2, ...)
{
  return _[a1 navigationBarTintColor];
}

id objc_msgSend_navigationController(void *a1, const char *a2, ...)
{
  return _[a1 navigationController];
}

id objc_msgSend_navigationController_willShowViewController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationController:willShowViewController:animated:");
}

id objc_msgSend_navigationItem(void *a1, const char *a2, ...)
{
  return _[a1 navigationItem];
}

id objc_msgSend_navigationThrottleOperation(void *a1, const char *a2, ...)
{
  return _[a1 navigationThrottleOperation];
}

id objc_msgSend_nearestMajorBoundaryForPoint_(void *a1, const char *a2, ...)
{
  return [a1 nearestMajorBoundaryForPoint:];
}

id objc_msgSend_nearestMajorBoundaryForPoint_date_(void *a1, const char *a2, ...)
{
  return [a1 nearestMajorBoundaryForPoint:date:];
}

id objc_msgSend_nearestSnapBoundaryForScale_(void *a1, const char *a2, ...)
{
  return [a1 nearestSnapBoundaryForScale:];
}

id objc_msgSend_needsResponse(void *a1, const char *a2, ...)
{
  return _[a1 needsResponse];
}

id objc_msgSend_newBottomViewBelowViewWithCalendarDate_(void *a1, const char *a2, ...)
{
  return [a1 newBottomViewBelowViewWithCalendarDate:];
}

id objc_msgSend_newDateLabel(void *a1, const char *a2, ...)
{
  return _[a1 newDateLabel];
}

id objc_msgSend_newEventBarButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 newEventBarButtonItem];
}

id objc_msgSend_newFeedbackViewForDraggingOccurrence_atPoint_(void *a1, const char *a2, ...)
{
  return [a1 newFeedbackViewForDraggingOccurrence:atPoint:];
}

id objc_msgSend_newItemBackButtonTitle(void *a1, const char *a2, ...)
{
  return _[a1 newItemBackButtonTitle];
}

id objc_msgSend_newItemTitle(void *a1, const char *a2, ...)
{
  return _[a1 newItemTitle];
}

id objc_msgSend_newTopViewAboveViewWithCalendarDate_(void *a1, const char *a2, ...)
{
  return [a1 newTopViewAboveViewWithCalendarDate:];
}

id objc_msgSend_next(void *a1, const char *a2, ...)
{
  return _[a1 next];
}

id objc_msgSend_nextAvailableOccurrenceViewYOriginForDay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nextAvailableOccurrenceViewYOriginForDay:");
}

id objc_msgSend_nextJournaledViewController(void *a1, const char *a2, ...)
{
  return _[a1 nextJournaledViewController];
}

id objc_msgSend_nextLevelWeekViewController(void *a1, const char *a2, ...)
{
  return _[a1 nextLevelWeekViewController];
}

id objc_msgSend_nextLevelWeekViewControllerWithDate_(void *a1, const char *a2, ...)
{
  return [a1 nextLevelWeekViewControllerWithDate:];
}

id objc_msgSend_nextObject(void *a1, const char *a2, ...)
{
  return _[a1 nextObject];
}

id objc_msgSend_nextOccurrence(void *a1, const char *a2, ...)
{
  return _[a1 nextOccurrence];
}

id objc_msgSend_nextOccurrenceOrDetachmentAfter_(void *a1, const char *a2, ...)
{
  return [a1 nextOccurrenceOrDetachmentAfter:];
}

id objc_msgSend_noContentStringForInboxTableView_(void *a1, const char *a2, ...)
{
  return [a1 noContentStringForInboxTableView:];
}

id objc_msgSend_nonTodayCircleColor(void *a1, const char *a2, ...)
{
  return _[a1 nonTodayCircleColor];
}

id objc_msgSend_nonTodayColor(void *a1, const char *a2, ...)
{
  return _[a1 nonTodayColor];
}

id objc_msgSend_normalFontForSize_(void *a1, const char *a2, ...)
{
  return [a1 normalFontForSize:];
}

id objc_msgSend_normalPlatterBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 normalPlatterBackgroundColor];
}

id objc_msgSend_normalPrimaryTextColor(void *a1, const char *a2, ...)
{
  return _[a1 normalPrimaryTextColor];
}

id objc_msgSend_notPredicateWithSubpredicate_(void *a1, const char *a2, ...)
{
  return [a1 notPredicateWithSubpredicate:];
}

id objc_msgSend_notification(void *a1, const char *a2, ...)
{
  return _[a1 notification];
}

id objc_msgSend_notificationIsCancelled(void *a1, const char *a2, ...)
{
  return _[a1 notificationIsCancelled];
}

id objc_msgSend_notificationIsInvite(void *a1, const char *a2, ...)
{
  return _[a1 notificationIsInvite];
}

id objc_msgSend_notificationName(void *a1, const char *a2, ...)
{
  return _[a1 notificationName];
}

id objc_msgSend_notificationResponse(void *a1, const char *a2, ...)
{
  return _[a1 notificationResponse];
}

id objc_msgSend_notifyObservers(void *a1, const char *a2, ...)
{
  return _[a1 notifyObservers];
}

id objc_msgSend_notifyWhenInteractionChangesUsingBlock_(void *a1, const char *a2, ...)
{
  return [a1 notifyWhenInteractionChangesUsingBlock:];
}

id objc_msgSend_null(void *a1, const char *a2, ...)
{
  return _[a1 null];
}

id objc_msgSend_numAttendees(void *a1, const char *a2, ...)
{
  return _[a1 numAttendees];
}

id objc_msgSend_numDaysToShow(void *a1, const char *a2, ...)
{
  return _[a1 numDaysToShow];
}

id objc_msgSend_numMultiDays(void *a1, const char *a2, ...)
{
  return _[a1 numMultiDays];
}

id objc_msgSend_numberFrame(void *a1, const char *a2, ...)
{
  return _[a1 numberFrame];
}

id objc_msgSend_numberOfCachedOccurrencesInSection_(void *a1, const char *a2, ...)
{
  return [a1 numberOfCachedOccurrencesInSection:];
}

id objc_msgSend_numberOfCachedOccurrencesInSection_usingFilter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfCachedOccurrencesInSection:usingFilter:");
}

id objc_msgSend_numberOfDaysWithCachedOccurrences(void *a1, const char *a2, ...)
{
  return _[a1 numberOfDaysWithCachedOccurrences];
}

id objc_msgSend_numberOfDaysWithCachedOccurrencesUsingFilter_(void *a1, const char *a2, ...)
{
  return [a1 numberOfDaysWithCachedOccurrencesUsingFilter:];
}

id objc_msgSend_numberOfEvents(void *a1, const char *a2, ...)
{
  return _[a1 numberOfEvents];
}

id objc_msgSend_numberOfEventsToPaste(void *a1, const char *a2, ...)
{
  return _[a1 numberOfEventsToPaste];
}

id objc_msgSend_numberOfLinesForBodyLabels(void *a1, const char *a2, ...)
{
  return _[a1 numberOfLinesForBodyLabels];
}

id objc_msgSend_numberOfLinesForTitleLabels(void *a1, const char *a2, ...)
{
  return _[a1 numberOfLinesForTitleLabels];
}

id objc_msgSend_numberOfLinesInString_(void *a1, const char *a2, ...)
{
  return [a1 numberOfLinesInString:];
}

id objc_msgSend_numberOfMatchesInString_options_range_(void *a1, const char *a2, ...)
{
  return [a1 numberOfMatchesInString:options:range:];
}

id objc_msgSend_numberOfMonthsPerRowForWindowSize_(void *a1, const char *a2, ...)
{
  return [a1 numberOfMonthsPerRowForWindowSize:];
}

id objc_msgSend_numberOfNotifications(void *a1, const char *a2, ...)
{
  return _[a1 numberOfNotifications];
}

id objc_msgSend_numberOfRows(void *a1, const char *a2, ...)
{
  return _[a1 numberOfRows];
}

id objc_msgSend_numberOfSections(void *a1, const char *a2, ...)
{
  return _[a1 numberOfSections];
}

id objc_msgSend_numberOfSectionsInTableView_(void *a1, const char *a2, ...)
{
  return [a1 numberOfSectionsInTableView:];
}

id objc_msgSend_numberOfTouches(void *a1, const char *a2, ...)
{
  return _[a1 numberOfTouches];
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return [a1 numberWithBool:];
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return [a1 numberWithDouble:];
}

id objc_msgSend_numberWithFloat_(void *a1, const char *a2, ...)
{
  return [a1 numberWithFloat:];
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return [a1 numberWithInt:];
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return [a1 numberWithInteger:];
}

id objc_msgSend_numberWithUnsignedChar_(void *a1, const char *a2, ...)
{
  return [a1 numberWithUnsignedChar:];
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return [a1 numberWithUnsignedInteger:];
}

id objc_msgSend_object(void *a1, const char *a2, ...)
{
  return _[a1 object];
}

id objc_msgSend_objectAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 objectAtIndex:];
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 objectAtIndexedSubscript:];
}

id objc_msgSend_objectEnumerator(void *a1, const char *a2, ...)
{
  return _[a1 objectEnumerator];
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return [a1 objectForKey:];
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 objectForKeyedSubscript:];
}

id objc_msgSend_objectID(void *a1, const char *a2, ...)
{
  return _[a1 objectID];
}

id objc_msgSend_objectIDWithEntityType_rowID_databaseID_(void *a1, const char *a2, ...)
{
  return [a1 objectIDWithEntityType:rowID:databaseID:];
}

id objc_msgSend_occAlpha(void *a1, const char *a2, ...)
{
  return _[a1 occAlpha];
}

id objc_msgSend_occFrame(void *a1, const char *a2, ...)
{
  return _[a1 occFrame];
}

id objc_msgSend_occurrence(void *a1, const char *a2, ...)
{
  return _[a1 occurrence];
}

id objc_msgSend_occurrence_hasSymbolAtPoint_(void *a1, const char *a2, ...)
{
  return [a1 occurrence:hasSymbolAtPoint:];
}

id objc_msgSend_occurrenceAtPoint_(void *a1, const char *a2, ...)
{
  return [a1 occurrenceAtPoint:];
}

id objc_msgSend_occurrenceBlocks(void *a1, const char *a2, ...)
{
  return _[a1 occurrenceBlocks];
}

id objc_msgSend_occurrenceContainer(void *a1, const char *a2, ...)
{
  return _[a1 occurrenceContainer];
}

id objc_msgSend_occurrenceDate(void *a1, const char *a2, ...)
{
  return _[a1 occurrenceDate];
}

id objc_msgSend_occurrenceEnd(void *a1, const char *a2, ...)
{
  return _[a1 occurrenceEnd];
}

id objc_msgSend_occurrenceHeight(void *a1, const char *a2, ...)
{
  return _[a1 occurrenceHeight];
}

id objc_msgSend_occurrenceInfo(void *a1, const char *a2, ...)
{
  return _[a1 occurrenceInfo];
}

id objc_msgSend_occurrenceInsetIntoScroller(void *a1, const char *a2, ...)
{
  return _[a1 occurrenceInsetIntoScroller];
}

id objc_msgSend_occurrenceStart(void *a1, const char *a2, ...)
{
  return _[a1 occurrenceStart];
}

id objc_msgSend_occurrenceString(void *a1, const char *a2, ...)
{
  return _[a1 occurrenceString];
}

id objc_msgSend_occurrenceView(void *a1, const char *a2, ...)
{
  return _[a1 occurrenceView];
}

id objc_msgSend_occurrenceViewAtPoint_(void *a1, const char *a2, ...)
{
  return [a1 occurrenceViewAtPoint:];
}

id objc_msgSend_occurrenceViewAtPoint_ignoreSelectedCopyView_(void *a1, const char *a2, ...)
{
  return [a1 occurrenceViewAtPoint:ignoreSelectedCopyView:];
}

id objc_msgSend_occurrenceViewForEvent_(void *a1, const char *a2, ...)
{
  return [a1 occurrenceViewForEvent:];
}

id objc_msgSend_occurrenceViewForEvent_includeNextAndPreviousDays_(void *a1, const char *a2, ...)
{
  return [a1 occurrenceViewForEvent:includeNextAndPreviousDays:];
}

id objc_msgSend_occurrenceViewForEvent_occurrenceDate_(void *a1, const char *a2, ...)
{
  return [a1 occurrenceViewForEvent:occurrenceDate:];
}

id objc_msgSend_occurrenceViewForOccurrence_(void *a1, const char *a2, ...)
{
  return [a1 occurrenceViewForOccurrence:];
}

id objc_msgSend_occurrenceViewForOccurrence_onDay_(void *a1, const char *a2, ...)
{
  return [a1 occurrenceViewForOccurrence:onDay:];
}

id objc_msgSend_occurrenceViewSuperviewForEventGestureController_(void *a1, const char *a2, ...)
{
  return [a1 occurrenceViewSuperviewForEventGestureController:];
}

id objc_msgSend_occurrenceViewWithFrame_(void *a1, const char *a2, ...)
{
  return [a1 occurrenceViewWithFrame:];
}

id objc_msgSend_occurrenceViews(void *a1, const char *a2, ...)
{
  return _[a1 occurrenceViews];
}

id objc_msgSend_occurrences(void *a1, const char *a2, ...)
{
  return _[a1 occurrences];
}

id objc_msgSend_occurrencesForStartDate_endDate_preSorted_waitForLoad_(void *a1, const char *a2, ...)
{
  return [a1 occurrencesForStartDate:endDate:preSorted:waitForLoad:];
}

id objc_msgSend_occurrencesForStartDate_endDate_waitForLoad_(void *a1, const char *a2, ...)
{
  return [a1 occurrencesForStartDate:endDate:waitForLoad:];
}

id objc_msgSend_occurrencesView(void *a1, const char *a2, ...)
{
  return _[a1 occurrencesView];
}

id objc_msgSend_on(void *a1, const char *a2, ...)
{
  return _[a1 on];
}

id objc_msgSend_openAttendeesDetailItem(void *a1, const char *a2, ...)
{
  return _[a1 openAttendeesDetailItem];
}

id objc_msgSend_openSensitiveURL_withOptions_error_(void *a1, const char *a2, ...)
{
  return [a1 openSensitiveURL:withOptions:error:];
}

id objc_msgSend_openSessions(void *a1, const char *a2, ...)
{
  return _[a1 openSessions];
}

id objc_msgSend_openURL_options_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 openURL:options:completionHandler:];
}

id objc_msgSend_operationCount(void *a1, const char *a2, ...)
{
  return _[a1 operationCount];
}

id objc_msgSend_operationWithTimeInterval_(void *a1, const char *a2, ...)
{
  return [a1 operationWithTimeInterval:];
}

id objc_msgSend_operations(void *a1, const char *a2, ...)
{
  return _[a1 operations];
}

id objc_msgSend_optionKeyIsDown(void *a1, const char *a2, ...)
{
  return _[a1 optionKeyIsDown];
}

id objc_msgSend_options(void *a1, const char *a2, ...)
{
  return _[a1 options];
}

id objc_msgSend_ordinalityOfUnit_inUnit_forDate_(void *a1, const char *a2, ...)
{
  return [a1 ordinalityOfUnit:inUnit:forDate:];
}

id objc_msgSend_organizer(void *a1, const char *a2, ...)
{
  return _[a1 organizer];
}

id objc_msgSend_organizerCanBeMessaged(void *a1, const char *a2, ...)
{
  return _[a1 organizerCanBeMessaged];
}

id objc_msgSend_orientationForSize_(void *a1, const char *a2, ...)
{
  return [a1 orientationForSize:];
}

id objc_msgSend_origin(void *a1, const char *a2, ...)
{
  return _[a1 origin];
}

id objc_msgSend_originDescriptionStringWithAppName_(void *a1, const char *a2, ...)
{
  return [a1 originDescriptionStringWithAppName:];
}

id objc_msgSend_overlay(void *a1, const char *a2, ...)
{
  return _[a1 overlay];
}

id objc_msgSend_overlayCalendarDidChange(void *a1, const char *a2, ...)
{
  return _[a1 overlayCalendarDidChange];
}

id objc_msgSend_overlayCircleDiameterForSizeClass_(void *a1, const char *a2, ...)
{
  return [a1 overlayCircleDiameterForSizeClass:];
}

id objc_msgSend_overlayFirstDayOfLunarMonthLocalizedStringInCalendar_(void *a1, const char *a2, ...)
{
  return [a1 overlayFirstDayOfLunarMonthLocalizedStringInCalendar:];
}

id objc_msgSend_overlayFontForSize_(void *a1, const char *a2, ...)
{
  return [a1 overlayFontForSize:];
}

id objc_msgSend_overlayFontSize(void *a1, const char *a2, ...)
{
  return _[a1 overlayFontSize];
}

id objc_msgSend_overlayLegendFont(void *a1, const char *a2, ...)
{
  return _[a1 overlayLegendFont];
}

id objc_msgSend_overlayLegendLineLength(void *a1, const char *a2, ...)
{
  return _[a1 overlayLegendLineLength];
}

id objc_msgSend_overlayLegendMonthBaseline(void *a1, const char *a2, ...)
{
  return _[a1 overlayLegendMonthBaseline];
}

id objc_msgSend_overlayLegendMonthLineThickness(void *a1, const char *a2, ...)
{
  return _[a1 overlayLegendMonthLineThickness];
}

id objc_msgSend_overlayLegendRightInset(void *a1, const char *a2, ...)
{
  return _[a1 overlayLegendRightInset];
}

id objc_msgSend_overlayLegendSpacing(void *a1, const char *a2, ...)
{
  return _[a1 overlayLegendSpacing];
}

id objc_msgSend_overlayLegendYearBaseline(void *a1, const char *a2, ...)
{
  return _[a1 overlayLegendYearBaseline];
}

id objc_msgSend_overlayLegendYearLineThickness(void *a1, const char *a2, ...)
{
  return _[a1 overlayLegendYearLineThickness];
}

id objc_msgSend_overlayMediumStringForDate_inCalendar_(void *a1, const char *a2, ...)
{
  return [a1 overlayMediumStringForDate:inCalendar:];
}

id objc_msgSend_overlayShortStringForDate_inCalendar_(void *a1, const char *a2, ...)
{
  return [a1 overlayShortStringForDate:inCalendar:];
}

id objc_msgSend_overlayString(void *a1, const char *a2, ...)
{
  return _[a1 overlayString];
}

id objc_msgSend_overlayText(void *a1, const char *a2, ...)
{
  return _[a1 overlayText];
}

id objc_msgSend_overlayYearStringForDate_inCalendar_(void *a1, const char *a2, ...)
{
  return [a1 overlayYearStringForDate:inCalendar:];
}

id objc_msgSend_overrideExtendedEdges(void *a1, const char *a2, ...)
{
  return _[a1 overrideExtendedEdges];
}

id objc_msgSend_overrideLocaleWeekends(void *a1, const char *a2, ...)
{
  return _[a1 overrideLocaleWeekends];
}

id objc_msgSend_overrideTraitCollectionForChildViewController_(void *a1, const char *a2, ...)
{
  return [a1 overrideTraitCollectionForChildViewController:];
}

id objc_msgSend_owner(void *a1, const char *a2, ...)
{
  return _[a1 owner];
}

id objc_msgSend_ownerAddresses(void *a1, const char *a2, ...)
{
  return _[a1 ownerAddresses];
}

id objc_msgSend_pairWithValue_size_layoutShift_(void *a1, const char *a2, ...)
{
  return [a1 pairWithValue:size:layoutShift:];
}

id objc_msgSend_palette_identitySwitcherTapped_(void *a1, const char *a2, ...)
{
  return [a1 palette:identitySwitcherTapped:];
}

id objc_msgSend_paletteAvatarViewTapped_(void *a1, const char *a2, ...)
{
  return [a1 paletteAvatarViewTapped:];
}

id objc_msgSend_paletteSafeAreaInsets(void *a1, const char *a2, ...)
{
  return _[a1 paletteSafeAreaInsets];
}

id objc_msgSend_paletteShouldShowAvatarView(void *a1, const char *a2, ...)
{
  return _[a1 paletteShouldShowAvatarView];
}

id objc_msgSend_paletteTodayButtonTapped_(void *a1, const char *a2, ...)
{
  return [a1 paletteTodayButtonTapped:];
}

id objc_msgSend_paletteTopMargin(void *a1, const char *a2, ...)
{
  return _[a1 paletteTopMargin];
}

id objc_msgSend_paletteView(void *a1, const char *a2, ...)
{
  return _[a1 paletteView];
}

id objc_msgSend_palleteViewXOffset(void *a1, const char *a2, ...)
{
  return _[a1 palleteViewXOffset];
}

id objc_msgSend_panGestureRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 panGestureRecognizer];
}

id objc_msgSend_parentOfShownViewController(void *a1, const char *a2, ...)
{
  return _[a1 parentOfShownViewController];
}

id objc_msgSend_parentTableViewControllerForGroupController_(void *a1, const char *a2, ...)
{
  return [a1 parentTableViewControllerForGroupController:];
}

id objc_msgSend_parentViewController(void *a1, const char *a2, ...)
{
  return _[a1 parentViewController];
}

id objc_msgSend_participantType(void *a1, const char *a2, ...)
{
  return _[a1 participantType];
}

id objc_msgSend_participantWithName_emailAddress_phoneNumber_url_(void *a1, const char *a2, ...)
{
  return [a1 participantWithName:emailAddress:phoneNumber:url:];
}

id objc_msgSend_participationStatus(void *a1, const char *a2, ...)
{
  return _[a1 participationStatus];
}

id objc_msgSend_passthroughViews(void *a1, const char *a2, ...)
{
  return _[a1 passthroughViews];
}

id objc_msgSend_pastMajorBoundaryCalendarDateForCalendarDate_(void *a1, const char *a2, ...)
{
  return [a1 pastMajorBoundaryCalendarDateForCalendarDate:];
}

id objc_msgSend_pasteEventsWithDateMode_delegate_(void *a1, const char *a2, ...)
{
  return [a1 pasteEventsWithDateMode:];
}

id objc_msgSend_pasteboardManager(void *a1, const char *a2, ...)
{
  return _[a1 pasteboardManager];
}

id objc_msgSend_performAction_forCell_appliesToAll_ifCancelled_(void *a1, const char *a2, ...)
{
  return [a1 performAction:forCell:appliesToAll:ifCancelled:];
}

id objc_msgSend_performAsCurrentTraitCollection_(void *a1, const char *a2, ...)
{
  return [a1 performAsCurrentTraitCollection:];
}

id objc_msgSend_performBatchUpdates_completion_(void *a1, const char *a2, ...)
{
  return [a1 performBatchUpdates:];
}

id objc_msgSend_performModalDialogsIfNeededWithContinue_(void *a1, const char *a2, ...)
{
  return [a1 performModalDialogsIfNeededWithContinue:];
}

id objc_msgSend_performSelector_(void *a1, const char *a2, ...)
{
  return [a1 performSelector:];
}

id objc_msgSend_performSelector_withObject_(void *a1, const char *a2, ...)
{
  return [a1 performSelector:withObject:];
}

id objc_msgSend_performSelector_withObject_afterDelay_(void *a1, const char *a2, ...)
{
  return [a1 performSelector:withObject:afterDelay:];
}

id objc_msgSend_performSelector_withObject_withObject_(void *a1, const char *a2, ...)
{
  return [a1 performSelector:];
}

id objc_msgSend_performSelectorOnMainThread_withObject_waitUntilDone_(void *a1, const char *a2, ...)
{
  return [a1 performSelectorOnMainThread:];
}

id objc_msgSend_performUIAction_block_cancelBlock_(void *a1, const char *a2, ...)
{
  return [a1 performUIAction:nil block:nil cancelBlock:nil];
}

id objc_msgSend_performWithoutAnimation_(void *a1, const char *a2, ...)
{
  return [a1 performWithoutAnimation];
}

id objc_msgSend_permittedArrowDirections(void *a1, const char *a2, ...)
{
  return _[a1 permittedArrowDirections];
}

id objc_msgSend_persistedSceneState(void *a1, const char *a2, ...)
{
  return _[a1 persistedSceneState];
}

id objc_msgSend_phoneNumber(void *a1, const char *a2, ...)
{
  return _[a1 phoneNumber];
}

id objc_msgSend_pillImage(void *a1, const char *a2, ...)
{
  return _[a1 pillImage];
}

id objc_msgSend_pinchRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 pinchRecognizer];
}

id objc_msgSend_pinchToZoomAllowed(void *a1, const char *a2, ...)
{
  return _[a1 pinchToZoomAllowed];
}

id objc_msgSend_plainButtonConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 plainButtonConfiguration];
}

id objc_msgSend_pointAtDate_isAllDay_(void *a1, const char *a2, ...)
{
  return [a1 pointAtDate:isAllDay:];
}

id objc_msgSend_pointIsAboveMonthNameBaseline_(void *a1, const char *a2, ...)
{
  return [a1 pointIsAboveMonthNameBaseline:];
}

id objc_msgSend_pointSize(void *a1, const char *a2, ...)
{
  return _[a1 pointSize];
}

id objc_msgSend_popToRootViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return [a1 popToRootViewControllerAnimated:];
}

id objc_msgSend_popToViewController_animated_(void *a1, const char *a2, ...)
{
  return [a1 popToViewController:animated:];
}

id objc_msgSend_popViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return [a1 popViewControllerAnimated:];
}

id objc_msgSend_popViewControllersAfterAndIncluding_animated_(void *a1, const char *a2, ...)
{
  return [a1 popViewControllersAfterAndIncluding:animated:];
}

id objc_msgSend_popoverPresentationController(void *a1, const char *a2, ...)
{
  return _[a1 popoverPresentationController];
}

id objc_msgSend_positionOfCircleInCellWithWidth_circleSize_compressed_containsFirstDayOfMonth_(void *a1, const char *a2, ...)
{
  return [a1 positionOfCircleInCellWithWidth:circleSize:compressed:containsFirstDayOfMonth:];
}

id objc_msgSend_positionOfSecond_(void *a1, const char *a2, ...)
{
  return [a1 positionOfSecond:];
}

id objc_msgSend_postNotificationName_object_(void *a1, const char *a2, ...)
{
  return [a1 postNotificationName:object:];
}

id objc_msgSend_postNotificationName_object_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 postNotificationName:object:userInfo:];
}

id objc_msgSend_preActionBodyStrings(void *a1, const char *a2, ...)
{
  return _[a1 preActionBodyStrings];
}

id objc_msgSend_predicateForEventsWithStartDate_endDate_calendars_(void *a1, const char *a2, ...)
{
  return [a1 predicateForEventsWithStartDate:endDate:calendars:];
}

id objc_msgSend_predicateWithBlock_(void *a1, const char *a2, ...)
{
  return [a1 predicateWithBlock:];
}

id objc_msgSend_predicateWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 predicateWithFormat:];
}

id objc_msgSend_predicateWithValue_(void *a1, const char *a2, ...)
{
  return [a1 predicateWithValue:];
}

id objc_msgSend_preferredBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 preferredBackgroundColor];
}

id objc_msgSend_preferredContentSize(void *a1, const char *a2, ...)
{
  return _[a1 preferredContentSize];
}

id objc_msgSend_preferredContentSizeCategory(void *a1, const char *a2, ...)
{
  return _[a1 preferredContentSizeCategory];
}

id objc_msgSend_preferredEventsToSelectOnDate_(void *a1, const char *a2, ...)
{
  return [a1 preferredEventsToSelectOnDate:];
}

id objc_msgSend_preferredFontDescriptorWithTextStyle_(void *a1, const char *a2, ...)
{
  return [a1 preferredFontDescriptorWithTextStyle:];
}

id objc_msgSend_preferredFontDescriptorWithTextStyle_addingSymbolicTraits_options_(void *a1, const char *a2, ...)
{
  return [a1 preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:];
}

id objc_msgSend_preferredFontDescriptorWithTextStyle_compatibleWithTraitCollection_(void *a1, const char *a2, ...)
{
  return [a1 preferredFontDescriptorWithTextStyle:];
}

id objc_msgSend_preferredFontForTextStyle_(void *a1, const char *a2, ...)
{
  return [a1 preferredFontForTextStyle:];
}

id objc_msgSend_preferredFontForTextStyle_compatibleWithTraitCollection_(void *a1, const char *a2, ...)
{
  return [a1 preferredFontForTextStyle:];
}

id objc_msgSend_preferredOwnerAddress(void *a1, const char *a2, ...)
{
  return _[a1 preferredOwnerAddress];
}

id objc_msgSend_preferredPointerShape(void *a1, const char *a2, ...)
{
  return _[a1 preferredPointerShape];
}

id objc_msgSend_preferredPreSizeClassTransitionSelectedDate(void *a1, const char *a2, ...)
{
  return _[a1 preferredPreSizeClassTransitionSelectedDate];
}

id objc_msgSend_prefersForcedModalShowViewController(void *a1, const char *a2, ...)
{
  return _[a1 prefersForcedModalShowViewController];
}

id objc_msgSend_prefersPushForSizeClass_(void *a1, const char *a2, ...)
{
  return [a1 prefersPushForSizeClass:];
}

id objc_msgSend_prefersShowingViewControllersOnNavigationStack(void *a1, const char *a2, ...)
{
  return _[a1 prefersShowingViewControllersOnNavigationStack];
}

id objc_msgSend_prefersToBePresentedFromApplicationRootViewController(void *a1, const char *a2, ...)
{
  return _[a1 prefersToBePresentedFromApplicationRootViewController];
}

id objc_msgSend_prefersToBePresentedFromUINavigationController(void *a1, const char *a2, ...)
{
  return _[a1 prefersToBePresentedFromUINavigationController];
}

id objc_msgSend_prefetchConflictInfo(void *a1, const char *a2, ...)
{
  return _[a1 prefetchConflictInfo];
}

id objc_msgSend_prefetchRow_(void *a1, const char *a2, ...)
{
  return [a1 prefetchRow:];
}

id objc_msgSend_prepareForReuse(void *a1, const char *a2, ...)
{
  return _[a1 prepareForReuse];
}

id objc_msgSend_prepareForReuseIsReload_(void *a1, const char *a2, ...)
{
  return [a1 prepareForReuseIsReload:];
}

id objc_msgSend_prepareToChangeScaleFromPinch_(void *a1, const char *a2, ...)
{
  return [a1 prepareToChangeScaleFromPinch:];
}

id objc_msgSend_prepareTransitionScrubberWithSelectedDate_todayDate_dayViewController_monthViewController_paletteView_reverse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareTransitionScrubberWithSelectedDate:todayDate:dayViewController:monthViewController:paletteView:reverse:");
}

id objc_msgSend_prepareTransitionWithTopView_bottomView_allDayView_topLabelsContainer_(void *a1, const char *a2, ...)
{
  return [a1 prepareTransitionWithTopView:bottomView:allDayView:topLabelsContainer:];
}

id objc_msgSend_prepareWithYearViewController_monthViewController_selectedDate_calendar_yearToMonth_paletteView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareWithYearViewController:monthViewController:selectedDate:calendar:yearToMonth:paletteView:");
}

id objc_msgSend_presentAdaptiveModalViewController_animated_completion_(void *a1, const char *a2, ...)
{
  return [a1 presentAdaptiveModalViewController:animated:completion:];
}

id objc_msgSend_presentAlertForOfflineErrorUsingViewController_(void *a1, const char *a2, ...)
{
  return [a1 presentAlertForOfflineErrorUsingViewController:];
}

id objc_msgSend_presentAvailabilityViewControllerForEvent_fromViewController_(void *a1, const char *a2, ...)
{
  return [a1 presentAvailabilityViewControllerForEvent:fromViewController:];
}

id objc_msgSend_presentDeleteAlertWithOptions_viewController_barButtonItem_forEvent_stringForDeleteButton_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentDeleteAlertWithOptions:viewController:barButtonItem:forEvent:stringForDeleteButton:withCompletionHandler:");
}

id objc_msgSend_presentDetachAlertWithOptions_viewController_sourceView_sourceRect_forEvent_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentDetachAlertWithOptions:viewController:sourceView:sourceRect:forEvent:withCompletionHandler:");
}

id objc_msgSend_presentDetailsForEvents_animated_showComments_context_(void *a1, const char *a2, ...)
{
  return [a1 presentDetailsForEvents:animated:showComments:context:];
}

id objc_msgSend_presentFromSource_(void *a1, const char *a2, ...)
{
  return [a1 presentFromSource];
}

id objc_msgSend_presentModalViewController_withTransition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentModalViewController:withTransition:");
}

id objc_msgSend_presentViewController_animated_completion_(void *a1, const char *a2, ...)
{
  return [a1 presentViewController:animated:completion:];
}

id objc_msgSend_presentationController(void *a1, const char *a2, ...)
{
  return _[a1 presentationController];
}

id objc_msgSend_presentationControllerDidAttemptToDismiss(void *a1, const char *a2, ...)
{
  return _[a1 presentationControllerDidAttemptToDismiss];
}

id objc_msgSend_presentationControllerDidDismiss(void *a1, const char *a2, ...)
{
  return _[a1 presentationControllerDidDismiss];
}

id objc_msgSend_presentationControllerDidDismiss_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentationControllerDidDismiss:");
}

id objc_msgSend_presentationControllerForEditMenu(void *a1, const char *a2, ...)
{
  return _[a1 presentationControllerForEditMenu];
}

id objc_msgSend_presentationStyle(void *a1, const char *a2, ...)
{
  return _[a1 presentationStyle];
}

id objc_msgSend_presentationStyleOverrideForChildViewControllers(void *a1, const char *a2, ...)
{
  return _[a1 presentationStyleOverrideForChildViewControllers];
}

id objc_msgSend_presentedOverWholeApp(void *a1, const char *a2, ...)
{
  return _[a1 presentedOverWholeApp];
}

id objc_msgSend_presentedViewController(void *a1, const char *a2, ...)
{
  return _[a1 presentedViewController];
}

id objc_msgSend_presentedViewControllersState(void *a1, const char *a2, ...)
{
  return _[a1 presentedViewControllersState];
}

id objc_msgSend_presentingViewController(void *a1, const char *a2, ...)
{
  return _[a1 presentingViewController];
}

id objc_msgSend_preservedState(void *a1, const char *a2, ...)
{
  return _[a1 preservedState];
}

id objc_msgSend_preservesSuperviewLayoutMargins(void *a1, const char *a2, ...)
{
  return _[a1 preservesSuperviewLayoutMargins];
}

id objc_msgSend_preventScrollingForNextViewAppear(void *a1, const char *a2, ...)
{
  return _[a1 preventScrollingForNextViewAppear];
}

id objc_msgSend_preview(void *a1, const char *a2, ...)
{
  return _[a1 preview];
}

id objc_msgSend_previewViewController(void *a1, const char *a2, ...)
{
  return _[a1 previewViewController];
}

id objc_msgSend_previous(void *a1, const char *a2, ...)
{
  return _[a1 previous];
}

id objc_msgSend_previousOccurrence(void *a1, const char *a2, ...)
{
  return _[a1 previousOccurrence];
}

id objc_msgSend_primaryNumberFrame(void *a1, const char *a2, ...)
{
  return _[a1 primaryNumberFrame];
}

id objc_msgSend_primaryTextLabelFont(void *a1, const char *a2, ...)
{
  return _[a1 primaryTextLabelFont];
}

id objc_msgSend_processInfo(void *a1, const char *a2, ...)
{
  return _[a1 processInfo];
}

id objc_msgSend_processName(void *a1, const char *a2, ...)
{
  return _[a1 processName];
}

id objc_msgSend_processedEventData(void *a1, const char *a2, ...)
{
  return _[a1 processedEventData];
}

id objc_msgSend_prominentInsetGroupedHeaderConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 prominentInsetGroupedHeaderConfiguration];
}

id objc_msgSend_promptForCommentWhenDeclining(void *a1, const char *a2, ...)
{
  return _[a1 promptForCommentWhenDeclining];
}

id objc_msgSend_promptUserForRecurrenceActionOnOccurrence_whenFinished_(void *a1, const char *a2, ...)
{
  return [a1 promptUserForRecurrenceActionOnOccurrence:whenFinished:];
}

id objc_msgSend_proposedStartDate(void *a1, const char *a2, ...)
{
  return _[a1 proposedStartDate];
}

id objc_msgSend_proposedStartDateChanged(void *a1, const char *a2, ...)
{
  return _[a1 proposedStartDateChanged];
}

id objc_msgSend_proposedStartDateDeclined(void *a1, const char *a2, ...)
{
  return _[a1 proposedStartDateDeclined];
}

id objc_msgSend_proposedStartDateForEvent_(void *a1, const char *a2, ...)
{
  return [a1 proposedStartDateForEvent:];
}

id objc_msgSend_proposedTimeAttendee(void *a1, const char *a2, ...)
{
  return _[a1 proposedTimeAttendee];
}

id objc_msgSend_provideAuthorView(void *a1, const char *a2, ...)
{
  return _[a1 provideAuthorView];
}

id objc_msgSend_pulse_(void *a1, const char *a2, ...)
{
  return [a1 pulse:];
}

id objc_msgSend_pulseToday(void *a1, const char *a2, ...)
{
  return _[a1 pulseToday];
}

id objc_msgSend_pulseTodayCircle(void *a1, const char *a2, ...)
{
  return _[a1 pulseTodayCircle];
}

id objc_msgSend_pushCalendarViewControllerWithViewType_andDate_(void *a1, const char *a2, ...)
{
  return [a1 pushCalendarViewControllerWithViewType:andDate:];
}

id objc_msgSend_pushContentViewOfType_date_animated_(void *a1, const char *a2, ...)
{
  return [a1 pushContentViewOfType:date:animated:];
}

id objc_msgSend_pushNextLevelMainViewControllerContainerWithDate_animated_(void *a1, const char *a2, ...)
{
  return [a1 pushNextLevelMainViewControllerContainerWithDate:animated:];
}

id objc_msgSend_pushViewController_(void *a1, const char *a2, ...)
{
  return [a1 pushViewController:];
}

id objc_msgSend_pushViewController_animated_(void *a1, const char *a2, ...)
{
  return [a1 pushViewController:animated:];
}

id objc_msgSend_pushedDayViewControllerWithDate_animated_(void *a1, const char *a2, ...)
{
  return [a1 pushedDayViewControllerWithDate:animated:];
}

id objc_msgSend_pushedListViewControllerWithDate_animated_(void *a1, const char *a2, ...)
{
  return [a1 pushedListViewControllerWithDate:animated:];
}

id objc_msgSend_pushedMonthViewControllerWithDate_animated_(void *a1, const char *a2, ...)
{
  return [a1 pushedMonthViewControllerWithDate:animated:];
}

id objc_msgSend_pushedMultiDayViewControllerWithDate_animated_(void *a1, const char *a2, ...)
{
  return [a1 pushedMultiDayViewControllerWithDate:animated:];
}

id objc_msgSend_pushedNextLevelMainViewControllerContainerAnimated_(void *a1, const char *a2, ...)
{
  return [a1 pushedNextLevelMainViewControllerContainerAnimated:];
}

id objc_msgSend_pushedViewControllers(void *a1, const char *a2, ...)
{
  return _[a1 pushedViewControllers];
}

id objc_msgSend_pushedWeekViewControllerWithDate_animated_(void *a1, const char *a2, ...)
{
  return [a1 pushedWeekViewControllerWithDate:animated:];
}

id objc_msgSend_quaternarySystemFillColor(void *a1, const char *a2, ...)
{
  return _[a1 quaternarySystemFillColor];
}

id objc_msgSend_query(void *a1, const char *a2, ...)
{
  return _[a1 query];
}

id objc_msgSend_queue(void *a1, const char *a2, ...)
{
  return _[a1 queue];
}

id objc_msgSend_radius(void *a1, const char *a2, ...)
{
  return _[a1 radius];
}

id objc_msgSend_raise_format_(void *a1, const char *a2, ...)
{
  return [a1 raise:format:];
}

id objc_msgSend_rangeBoundEnd(void *a1, const char *a2, ...)
{
  return _[a1 rangeBoundEnd];
}

id objc_msgSend_rangeBoundStart(void *a1, const char *a2, ...)
{
  return _[a1 rangeBoundStart];
}

id objc_msgSend_rangeEnd(void *a1, const char *a2, ...)
{
  return _[a1 rangeEnd];
}

id objc_msgSend_rangeOfString_(void *a1, const char *a2, ...)
{
  return [a1 rangeOfString:];
}

id objc_msgSend_rangeOfUnit_inUnit_forDate_(void *a1, const char *a2, ...)
{
  return [a1 rangeOfUnit:inUnit:forDate:];
}

id objc_msgSend_rangeStart(void *a1, const char *a2, ...)
{
  return _[a1 rangeStart];
}

id objc_msgSend_rangeValue(void *a1, const char *a2, ...)
{
  return _[a1 rangeValue];
}

id objc_msgSend_reAdjustAllDayLabelLayout(void *a1, const char *a2, ...)
{
  return _[a1 reAdjustAllDayLabelLayout];
}

id objc_msgSend_receiveTapsInHeader(void *a1, const char *a2, ...)
{
  return _[a1 receiveTapsInHeader];
}

id objc_msgSend_receivedTapAtLocation_usingDate_precise_(void *a1, const char *a2, ...)
{
  return [a1 receivedTapAtLocation:usingDate:precise:];
}

id objc_msgSend_reconfigureViewController_(void *a1, const char *a2, ...)
{
  return [a1 reconfigureViewController:];
}

id objc_msgSend_recordRecentForContactWithName_emailAddress_phoneNumber_(void *a1, const char *a2, ...)
{
  return [a1 recordRecentForContactWithName:emailAddress:phoneNumber:];
}

id objc_msgSend_rect(void *a1, const char *a2, ...)
{
  return _[a1 rect];
}

id objc_msgSend_rectBecameVisible_(void *a1, const char *a2, ...)
{
  return [a1 rectBecameVisible:];
}

id objc_msgSend_rectForCells(void *a1, const char *a2, ...)
{
  return _[a1 rectForCells];
}

id objc_msgSend_rectForSection_(void *a1, const char *a2, ...)
{
  return [a1 rectForSection:];
}

id objc_msgSend_recurrenceEnd(void *a1, const char *a2, ...)
{
  return _[a1 recurrenceEnd];
}

id objc_msgSend_recurrenceEndWithEndDate_(void *a1, const char *a2, ...)
{
  return [a1 recurrenceEndWithEndDate:];
}

id objc_msgSend_recursiveAnimationRemove_(void *a1, const char *a2, ...)
{
  return [a1 recursiveAnimationRemove];
}

id objc_msgSend_recursiveAnimationRemoveForSmallLayers_(void *a1, const char *a2, ...)
{
  return [a1 recursiveAnimationRemoveForSmallLayers];
}

id objc_msgSend_recursiveBuildJournal_ofViewControllerSubtree_stopCondition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recursiveBuildJournal:ofViewControllerSubtree:stopCondition:");
}

id objc_msgSend_redComponent(void *a1, const char *a2, ...)
{
  return _[a1 redComponent];
}

id objc_msgSend_redisplayEditor_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "redisplayEditor:completion:");
}

id objc_msgSend_referenceWeekStart(void *a1, const char *a2, ...)
{
  return _[a1 referenceWeekStart];
}

id objc_msgSend_refresh(void *a1, const char *a2, ...)
{
  return _[a1 refresh];
}

id objc_msgSend_refreshControl(void *a1, const char *a2, ...)
{
  return _[a1 refreshControl];
}

id objc_msgSend_refreshDateWidgets(void *a1, const char *a2, ...)
{
  return _[a1 refreshDateWidgets];
}

id objc_msgSend_refreshEventWidgets(void *a1, const char *a2, ...)
{
  return _[a1 refreshEventWidgets];
}

id objc_msgSend_refreshEverythingIfNecessary_(void *a1, const char *a2, ...)
{
  return [a1 refreshEverythingIfNecessary:];
}

id objc_msgSend_refreshIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 refreshIfNeeded];
}

id objc_msgSend_refreshIfRefreshableAndNotify_(void *a1, const char *a2, ...)
{
  return [a1 refreshIfRefreshableAndNotify:];
}

id objc_msgSend_refreshStartAndEndDates(void *a1, const char *a2, ...)
{
  return _[a1 refreshStartAndEndDates];
}

id objc_msgSend_regionWithRect_identifier_(void *a1, const char *a2, ...)
{
  return [a1 regionWithRect:identifier:];
}

id objc_msgSend_registerAppIntentsDependencies(void *a1, const char *a2, ...)
{
  return _[a1 registerAppIntentsDependencies];
}

id objc_msgSend_registerClass_forCellReuseIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 registerClass:forCellReuseIdentifier:];
}

id objc_msgSend_registerClass_forHeaderFooterViewReuseIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 registerClass:forHeaderFooterViewReuseIdentifier:];
}

id objc_msgSend_registerClassesOnTableView_(void *a1, const char *a2, ...)
{
  return [a1 registerClassesOnTableView:];
}

id objc_msgSend_registerForStateCapture(void *a1, const char *a2, ...)
{
  return _[a1 registerForStateCapture];
}

id objc_msgSend_registerForTraitChanges_withAction_(void *a1, const char *a2, ...)
{
  return [a1 registerForTraitChanges:withAction:];
}

id objc_msgSend_registerForTraitChanges_withHandler_(void *a1, const char *a2, ...)
{
  return [a1 registerForTraitChanges:withHandler:];
}

id objc_msgSend_registerIntegrationEditViewControllerCreator_(void *a1, const char *a2, ...)
{
  return [a1 registerIntegrationEditViewControllerCreator];
}

id objc_msgSend_regularExpressionWithPattern_options_error_(void *a1, const char *a2, ...)
{
  return [a1 regularExpressionWithPattern:options:error:];
}

id objc_msgSend_reinitializeAllViewsWithCalendarDate_(void *a1, const char *a2, ...)
{
  return [a1 reinitializeAllViewsWithCalendarDate:];
}

id objc_msgSend_relayoutPinchView(void *a1, const char *a2, ...)
{
  return _[a1 relayoutPinchView];
}

id objc_msgSend_reloadData(void *a1, const char *a2, ...)
{
  return _[a1 reloadData];
}

id objc_msgSend_reloadDataForAllViews(void *a1, const char *a2, ...)
{
  return _[a1 reloadDataForAllViews];
}

id objc_msgSend_reloadDataForOccurrenceChangeWithGeneration_(void *a1, const char *a2, ...)
{
  return [a1 reloadDataForOccurrenceChangeWithGeneration:];
}

id objc_msgSend_reloadDataForViews_(void *a1, const char *a2, ...)
{
  return [a1 reloadDataForViews:];
}

id objc_msgSend_reloadEvents_(void *a1, const char *a2, ...)
{
  return [a1 reloadEvents:];
}

id objc_msgSend_reloadRowsAtIndexPaths_withRowAnimation_(void *a1, const char *a2, ...)
{
  return [a1 reloadRowsAtIndexPaths:withRowAnimation:];
}

id objc_msgSend_reminderCalendar(void *a1, const char *a2, ...)
{
  return _[a1 reminderCalendar];
}

id objc_msgSend_reminderDetailDismissedWithDeletedEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reminderDetailDismissedWithDeletedEvent:");
}

id objc_msgSend_reminderIntegrationIcon(void *a1, const char *a2, ...)
{
  return _[a1 reminderIntegrationIcon];
}

id objc_msgSend_reminderIntegrationText(void *a1, const char *a2, ...)
{
  return _[a1 reminderIntegrationText];
}

id objc_msgSend_reminderIntegrationTitle(void *a1, const char *a2, ...)
{
  return _[a1 reminderIntegrationTitle];
}

id objc_msgSend_reminderOccurrenceType(void *a1, const char *a2, ...)
{
  return _[a1 reminderOccurrenceType];
}

id objc_msgSend_removeAllAnimations(void *a1, const char *a2, ...)
{
  return _[a1 removeAllAnimations];
}

id objc_msgSend_removeAllContent(void *a1, const char *a2, ...)
{
  return _[a1 removeAllContent];
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return _[a1 removeAllObjects];
}

id objc_msgSend_removeAllWeekHighlights(void *a1, const char *a2, ...)
{
  return _[a1 removeAllWeekHighlights];
}

id objc_msgSend_removeCharactersInString_(void *a1, const char *a2, ...)
{
  return [a1 removeCharactersInString:];
}

id objc_msgSend_removeDraggingOccurrenceAnimated_(void *a1, const char *a2, ...)
{
  return [a1 removeDraggingOccurrenceAnimated:];
}

id objc_msgSend_removeEvent_span_error_(void *a1, const char *a2, ...)
{
  return [a1 removeEvent:span:error:];
}

id objc_msgSend_removeEvent_withSpan_error_(void *a1, const char *a2, ...)
{
  return [a1 removeEvent:withSpan:error:];
}

id objc_msgSend_removeEventFromSelection_(void *a1, const char *a2, ...)
{
  return [a1 removeEventFromSelection:];
}

id objc_msgSend_removeEventFromSelection_inWeek_updateModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeEventFromSelection:inWeek:updateModel:");
}

id objc_msgSend_removeFromParentViewController(void *a1, const char *a2, ...)
{
  return _[a1 removeFromParentViewController];
}

id objc_msgSend_removeFromSuperlayer(void *a1, const char *a2, ...)
{
  return _[a1 removeFromSuperlayer];
}

id objc_msgSend_removeFromSuperview(void *a1, const char *a2, ...)
{
  return _[a1 removeFromSuperview];
}

id objc_msgSend_removeGestureRecognizer_(void *a1, const char *a2, ...)
{
  return [a1 removeGestureRecognizer:];
}

id objc_msgSend_removeInteraction_(void *a1, const char *a2, ...)
{
  return [a1 removeInteraction:];
}

id objc_msgSend_removeInviteReplyNotification_error_(void *a1, const char *a2, ...)
{
  return [a1 removeInviteReplyNotification:error:];
}

id objc_msgSend_removeLastObject(void *a1, const char *a2, ...)
{
  return _[a1 removeLastObject];
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return [a1 removeObject:];
}

id objc_msgSend_removeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 removeObjectAtIndex:];
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return [a1 removeObjectForKey:];
}

id objc_msgSend_removeObjectsForKeys_(void *a1, const char *a2, ...)
{
  return [a1 removeObjectsForKeys:];
}

id objc_msgSend_removeObjectsInArray_(void *a1, const char *a2, ...)
{
  return [a1 removeObjectsInArray:];
}

id objc_msgSend_removeObjectsInRange_(void *a1, const char *a2, ...)
{
  return [a1 removeObjectsInRange:];
}

id objc_msgSend_removeObserver_(void *a1, const char *a2, ...)
{
  return [a1 removeObserver:];
}

id objc_msgSend_removeObserver_name_object_(void *a1, const char *a2, ...)
{
  return [a1 removeObserver:name:object:];
}

id objc_msgSend_removeResourceChange_error_(void *a1, const char *a2, ...)
{
  return [a1 removeResourceChange:error:];
}

id objc_msgSend_removeViewFromQueue_(void *a1, const char *a2, ...)
{
  return [a1 removeViewFromQueue];
}

id objc_msgSend_renderLayer(void *a1, const char *a2, ...)
{
  return _[a1 renderLayer];
}

id objc_msgSend_replaceCharactersInRange_withString_(void *a1, const char *a2, ...)
{
  return [a1 replaceCharactersInRange:withString:];
}

id objc_msgSend_replaceChildrenOfMenuForIdentifier_fromChildrenBlock_(void *a1, const char *a2, ...)
{
  return [a1 replaceChildrenOfMenuForIdentifier:fromChildrenBlock:];
}

id objc_msgSend_replaceObjectAtIndex_withObject_(void *a1, const char *a2, ...)
{
  return [a1 replaceObjectAtIndex:withObject:];
}

id objc_msgSend_reportProblemNavigationController(void *a1, const char *a2, ...)
{
  return _[a1 reportProblemNavigationController];
}

id objc_msgSend_representsActualDate(void *a1, const char *a2, ...)
{
  return _[a1 representsActualDate];
}

id objc_msgSend_representsDayInViewHierarchy(void *a1, const char *a2, ...)
{
  return _[a1 representsDayInViewHierarchy];
}

id objc_msgSend_request(void *a1, const char *a2, ...)
{
  return _[a1 request];
}

id objc_msgSend_requestAuthorizationWithOptions_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 requestAuthorizationWithOptions:completionHandler:];
}

id objc_msgSend_requestContactsAuthorization(void *a1, const char *a2, ...)
{
  return _[a1 requestContactsAuthorization];
}

id objc_msgSend_requestContentIfNeeded_completion_(void *a1, const char *a2, ...)
{
  return [a1 requestContentIfNeeded:completion:];
}

id objc_msgSend_requestIntegrationCatchupSync(void *a1, const char *a2, ...)
{
  return _[a1 requestIntegrationCatchupSync];
}

id objc_msgSend_requestLocationAuthorization(void *a1, const char *a2, ...)
{
  return _[a1 requestLocationAuthorization];
}

id objc_msgSend_requestNotificationAuthorization(void *a1, const char *a2, ...)
{
  return _[a1 requestNotificationAuthorization];
}

id objc_msgSend_requestSyncOnApplicationLaunch(void *a1, const char *a2, ...)
{
  return _[a1 requestSyncOnApplicationLaunch];
}

id objc_msgSend_requireGestureRecognizerToFail_(void *a1, const char *a2, ...)
{
  return [a1 requireGestureRecognizerToFail:];
}

id objc_msgSend_requiresLanguageAwarePadding(void *a1, const char *a2, ...)
{
  return _[a1 requiresLanguageAwarePadding];
}

id objc_msgSend_requiresSelfAsEventEditorDelegate(void *a1, const char *a2, ...)
{
  return _[a1 requiresSelfAsEventEditorDelegate];
}

id objc_msgSend_reset(void *a1, const char *a2, ...)
{
  return _[a1 reset];
}

id objc_msgSend_resetSearchBar(void *a1, const char *a2, ...)
{
  return _[a1 resetSearchBar];
}

id objc_msgSend_resetSegments(void *a1, const char *a2, ...)
{
  return _[a1 resetSegments];
}

id objc_msgSend_resetTimeZone_(void *a1, const char *a2, ...)
{
  return [a1 resetTimeZone:];
}

id objc_msgSend_resetTimersAndWarnings(void *a1, const char *a2, ...)
{
  return _[a1 resetTimersAndWarnings];
}

id objc_msgSend_resetToDayView(void *a1, const char *a2, ...)
{
  return _[a1 resetToDayView];
}

id objc_msgSend_resetToMonthView(void *a1, const char *a2, ...)
{
  return _[a1 resetToMonthView];
}

id objc_msgSend_resetToMonthViewSplit_(void *a1, const char *a2, ...)
{
  return [a1 resetToMonthViewSplit:];
}

id objc_msgSend_resetToWeekView(void *a1, const char *a2, ...)
{
  return _[a1 resetToWeekView];
}

id objc_msgSend_resetToYearView(void *a1, const char *a2, ...)
{
  return _[a1 resetToYearView];
}

id objc_msgSend_resetTodayBits(void *a1, const char *a2, ...)
{
  return _[a1 resetTodayBits];
}

id objc_msgSend_resignFirstResponder(void *a1, const char *a2, ...)
{
  return _[a1 resignFirstResponder];
}

id objc_msgSend_resizableImageWithCapInsets_resizingMode_(void *a1, const char *a2, ...)
{
  return [a1 resizableImageWithCapInsets:resizingMode:];
}

id objc_msgSend_resizeAllViews(void *a1, const char *a2, ...)
{
  return _[a1 resizeAllViews];
}

id objc_msgSend_resizeWeekGroupsIfNeededForOrientation_(void *a1, const char *a2, ...)
{
  return [a1 resizeWeekGroupsIfNeededForOrientation:];
}

id objc_msgSend_resourceChangeFromEventStore_(void *a1, const char *a2, ...)
{
  return [a1 resourceChangeFromEventStore:];
}

id objc_msgSend_resourceSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 resourceSpecifier];
}

id objc_msgSend_respondToSharedCalendarInvite_forCalendarWithID_accountID_queue_completionBlock_(void *a1, const char *a2, ...)
{
  return [a1 respondToSharedCalendarInvite:forCalendarWithID:accountID:queue:completionBlock:];
}

id objc_msgSend_responseComment(void *a1, const char *a2, ...)
{
  return _[a1 responseComment];
}

id objc_msgSend_restorePresentedViewControllers_startIndex_presenter_(void *a1, const char *a2, ...)
{
  return [a1 restorePresentedViewControllers:startIndex:presenter:];
}

id objc_msgSend_restorePreservedState_(void *a1, const char *a2, ...)
{
  return [a1 restorePreservedState:];
}

id objc_msgSend_reusableViews(void *a1, const char *a2, ...)
{
  return _[a1 reusableViews];
}

id objc_msgSend_reuseIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 reuseIdentifier];
}

id objc_msgSend_reverse(void *a1, const char *a2, ...)
{
  return _[a1 reverse];
}

id objc_msgSend_reverseObjectEnumerator(void *a1, const char *a2, ...)
{
  return _[a1 reverseObjectEnumerator];
}

id objc_msgSend_revert(void *a1, const char *a2, ...)
{
  return _[a1 revert];
}

id objc_msgSend_rightBarButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 rightBarButtonItem];
}

id objc_msgSend_rightBarButtonItems(void *a1, const char *a2, ...)
{
  return _[a1 rightBarButtonItems];
}

id objc_msgSend_rightMarginAdjustment(void *a1, const char *a2, ...)
{
  return _[a1 rightMarginAdjustment];
}

id objc_msgSend_rightMarginForWindowSize_(void *a1, const char *a2, ...)
{
  return [a1 rightMarginForWindowSize:];
}

id objc_msgSend_rightSplitViewSideInset(void *a1, const char *a2, ...)
{
  return _[a1 rightSplitViewSideInset];
}

id objc_msgSend_rightStringForDate_(void *a1, const char *a2, ...)
{
  return [a1 rightStringForDate:];
}

id objc_msgSend_role(void *a1, const char *a2, ...)
{
  return _[a1 role];
}

id objc_msgSend_rollback(void *a1, const char *a2, ...)
{
  return _[a1 rollback];
}

id objc_msgSend_rootNavigationController(void *a1, const char *a2, ...)
{
  return _[a1 rootNavigationController];
}

id objc_msgSend_rootNavigationControllerRequestsLayoutOfViewSwitcher_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rootNavigationControllerRequestsLayoutOfViewSwitcher:");
}

id objc_msgSend_rootViewController(void *a1, const char *a2, ...)
{
  return _[a1 rootViewController];
}

id objc_msgSend_rotateIfNeeded_completion_(void *a1, const char *a2, ...)
{
  return [a1 rotateIfNeeded:completion:];
}

id objc_msgSend_rotatingToLandscape(void *a1, const char *a2, ...)
{
  return _[a1 rotatingToLandscape];
}

id objc_msgSend_rotatingToPortrait(void *a1, const char *a2, ...)
{
  return _[a1 rotatingToPortrait];
}

id objc_msgSend_rotationAnimationCompleteNotificationName(void *a1, const char *a2, ...)
{
  return _[a1 rotationAnimationCompleteNotificationName];
}

id objc_msgSend_rotationAnimationStartedNotificationName(void *a1, const char *a2, ...)
{
  return _[a1 rotationAnimationStartedNotificationName];
}

id objc_msgSend_roundedDateForDate_dateMode_calendar_(void *a1, const char *a2, ...)
{
  return [a1 roundedDateForDate:dateMode:calendar:];
}

id objc_msgSend_roundedRectBaselineOffset(void *a1, const char *a2, ...)
{
  return _[a1 roundedRectBaselineOffset];
}

id objc_msgSend_roundedRectDayNumberBaselineOffsetWithOverlay_fontSize_overlayFontSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "roundedRectDayNumberBaselineOffsetWithOverlay:fontSize:overlayFontSize:");
}

id objc_msgSend_roundedRectHeight(void *a1, const char *a2, ...)
{
  return _[a1 roundedRectHeight];
}

id objc_msgSend_roundedRectHeightWithOverlay_fontSize_overlayFontSize_(void *a1, const char *a2, ...)
{
  return [a1 roundedRectHeightWithOverlay:fontSize:overlayFontSize:];
}

id objc_msgSend_roundedRectHorizontalPadding(void *a1, const char *a2, ...)
{
  return _[a1 roundedRectHorizontalPadding];
}

id objc_msgSend_roundedRectSize(void *a1, const char *a2, ...)
{
  return _[a1 roundedRectSize];
}

id objc_msgSend_roundedRectSizeForNumberString_overlayString_fontSize_overlayFontSize_(void *a1, const char *a2, ...)
{
  return [a1 roundedRectSizeForNumberString:overlayString:fontSize:overlayFontSize:];
}

id objc_msgSend_roundedRectVerticalPadding(void *a1, const char *a2, ...)
{
  return _[a1 roundedRectVerticalPadding];
}

id objc_msgSend_roundingType(void *a1, const char *a2, ...)
{
  return _[a1 roundingType];
}

id objc_msgSend_row(void *a1, const char *a2, ...)
{
  return _[a1 row];
}

id objc_msgSend_rowIndexOfOccurrence_(void *a1, const char *a2, ...)
{
  return [a1 rowIndexOfOccurrence:];
}

id objc_msgSend_rowSelected_(void *a1, const char *a2, ...)
{
  return [a1 rowSelected:];
}

id objc_msgSend_runRecapTestIfNeeded_(void *a1, const char *a2, ...)
{
  return [a1 runRecapTestIfNeeded:];
}

id objc_msgSend_runTest(void *a1, const char *a2, ...)
{
  return _[a1 runTest];
}

id objc_msgSend_runTestWithParameters_(void *a1, const char *a2, ...)
{
  return [a1 runTestWithParameters:];
}

id objc_msgSend_safeAreaInsets(void *a1, const char *a2, ...)
{
  return _[a1 safeAreaInsets];
}

id objc_msgSend_safeAreaLayoutGuide(void *a1, const char *a2, ...)
{
  return _[a1 safeAreaLayoutGuide];
}

id objc_msgSend_sanitizeCalSubCal_(void *a1, const char *a2, ...)
{
  return [a1 sanitizeCalSubCal:];
}

id objc_msgSend_saveEvent_span_commit_error_(void *a1, const char *a2, ...)
{
  return [a1 saveEvent:span:commit:error:];
}

id objc_msgSend_saveEvent_span_error_(void *a1, const char *a2, ...)
{
  return [a1 saveEvent:span:error:];
}

id objc_msgSend_saveTemporaryViews(void *a1, const char *a2, ...)
{
  return _[a1 saveTemporaryViews];
}

id objc_msgSend_savedFirstVisibleSecond(void *a1, const char *a2, ...)
{
  return _[a1 savedFirstVisibleSecond];
}

id objc_msgSend_scale(void *a1, const char *a2, ...)
{
  return _[a1 scale];
}

id objc_msgSend_scaleForDragging(void *a1, const char *a2, ...)
{
  return _[a1 scaleForDragging];
}

id objc_msgSend_scaleForSize_(void *a1, const char *a2, ...)
{
  return [a1 scaleForSize:];
}

id objc_msgSend_scaledValueForValue_(void *a1, const char *a2, ...)
{
  return [a1 scaledValueForValue:];
}

id objc_msgSend_scanEventsForDiscoveredConferencesIfNeeded_(void *a1, const char *a2, ...)
{
  return [a1 scanEventsForDiscoveredConferencesIfNeeded:];
}

id objc_msgSend_scanForConflicts(void *a1, const char *a2, ...)
{
  return _[a1 scanForConflicts];
}

id objc_msgSend_scene_openURLContexts_(void *a1, const char *a2, ...)
{
  return [a1 scene:openURLContexts:];
}

id objc_msgSend_sceneIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 sceneIdentifier];
}

id objc_msgSend_sceneTitle(void *a1, const char *a2, ...)
{
  return _[a1 sceneTitle];
}

id objc_msgSend_scheduledTimerWithTimeInterval_repeats_block_(void *a1, const char *a2, ...)
{
  return [a1 scheduledTimerWithTimeInterval:repeats:block:];
}

id objc_msgSend_scheduledTimerWithTimeInterval_target_selector_userInfo_repeats_(void *a1, const char *a2, ...)
{
  return [a1 scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:];
}

id objc_msgSend_scheme(void *a1, const char *a2, ...)
{
  return _[a1 scheme];
}

id objc_msgSend_screen(void *a1, const char *a2, ...)
{
  return _[a1 screen];
}

id objc_msgSend_scrollEventIntoView_animateWithDuration_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollEventIntoView:animateWithDuration:completion:");
}

id objc_msgSend_scrollEventIntoView_animated_(void *a1, const char *a2, ...)
{
  return [a1 scrollEventIntoView:animated:];
}

id objc_msgSend_scrollEventIntoView_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollEventIntoView:animated:completion:");
}

id objc_msgSend_scrollRectToVisible_animated_(void *a1, const char *a2, ...)
{
  return [a1 scrollRectToVisible:animated:];
}

id objc_msgSend_scrollToCurrentTimeOfDayAnimated_(void *a1, const char *a2, ...)
{
  return [a1 scrollToCurrentTimeOfDayAnimated:];
}

id objc_msgSend_scrollToDate_(void *a1, const char *a2, ...)
{
  return [a1 scrollToDate:];
}

id objc_msgSend_scrollToDate_animated_(void *a1, const char *a2, ...)
{
  return [a1 scrollToDate:animated:];
}

id objc_msgSend_scrollToDisplayedDateAnimated_(void *a1, const char *a2, ...)
{
  return [a1 scrollToDisplayedDateAnimated:];
}

id objc_msgSend_scrollToEvent_animateWithDuration_completion_(void *a1, const char *a2, ...)
{
  return [a1 scrollToEvent:animateWithDuration:completion:];
}

id objc_msgSend_scrollToEvent_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollToEvent:animated:completion:");
}

id objc_msgSend_scrollToNow_(void *a1, const char *a2, ...)
{
  return [a1 scrollToNow:];
}

id objc_msgSend_scrollToRowAtIndexPath_atScrollPosition_animated_(void *a1, const char *a2, ...)
{
  return [a1 scrollToRowAtIndexPath:atScrollPosition:animated:];
}

id objc_msgSend_scrollToSecond_animated_completion_(void *a1, const char *a2, ...)
{
  return [a1 scrollToSecond:animated:completion:];
}

id objc_msgSend_scrollToSelectedDateAnimated_(void *a1, const char *a2, ...)
{
  return [a1 scrollToSelectedDateAnimated:];
}

id objc_msgSend_scrollToTodayAnimated_(void *a1, const char *a2, ...)
{
  return [a1 scrollToTodayAnimated:];
}

id objc_msgSend_scrollTowardPoint_(void *a1, const char *a2, ...)
{
  return [a1 scrollTowardPoint:];
}

id objc_msgSend_scrollView(void *a1, const char *a2, ...)
{
  return _[a1 scrollView];
}

id objc_msgSend_scrollView_completionBlock_(void *a1, const char *a2, ...)
{
  return [a1 scrollView:completionBlock:];
}

id objc_msgSend_scrollViewDidEndScrollingAnimation_(void *a1, const char *a2, ...)
{
  return [a1 scrollViewDidEndScrollingAnimation:];
}

id objc_msgSend_scrollViewDidLayoutSubviews(void *a1, const char *a2, ...)
{
  return _[a1 scrollViewDidLayoutSubviews];
}

id objc_msgSend_scrollViewDidScroll_(void *a1, const char *a2, ...)
{
  return [a1 scrollViewDidScroll:];
}

id objc_msgSend_scrollViewSafeAreasDidChange(void *a1, const char *a2, ...)
{
  return _[a1 scrollViewSafeAreasDidChange];
}

id objc_msgSend_scrollerContentHeightWithUserVisibleEarliestDate_latestDate_(void *a1, const char *a2, ...)
{
  return [a1 scrollerContentHeightWithUserVisibleEarliestDate:latestDate:];
}

id objc_msgSend_scrollerContentSize(void *a1, const char *a2, ...)
{
  return _[a1 scrollerContentSize];
}

id objc_msgSend_scrollerIsParentOfView_isAllDay_(void *a1, const char *a2, ...)
{
  return [a1 scrollerIsParentOfView:isAllDay:];
}

id objc_msgSend_scrubber(void *a1, const char *a2, ...)
{
  return _[a1 scrubber];
}

id objc_msgSend_scrubberCellSize(void *a1, const char *a2, ...)
{
  return _[a1 scrubberCellSize];
}

id objc_msgSend_scrubberDidChangeSelectedDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrubberDidChangeSelectedDate:");
}

id objc_msgSend_scrubbingMinimumPressDuration(void *a1, const char *a2, ...)
{
  return _[a1 scrubbingMinimumPressDuration];
}

id objc_msgSend_searchBar(void *a1, const char *a2, ...)
{
  return _[a1 searchBar];
}

id objc_msgSend_searchBar_textDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchBar:textDidChange:");
}

id objc_msgSend_searchBarButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 searchBarButtonItem];
}

id objc_msgSend_searchBarCancelButtonClicked_(void *a1, const char *a2, ...)
{
  return [a1 searchBarCancelButtonClicked:];
}

id objc_msgSend_searchBarHeightDidChange(void *a1, const char *a2, ...)
{
  return _[a1 searchBarHeightDidChange];
}

id objc_msgSend_searchBegan(void *a1, const char *a2, ...)
{
  return _[a1 searchBegan];
}

id objc_msgSend_searchButtonTappedCreateAndAddSearchBar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchButtonTappedCreateAndAddSearchBar:");
}

id objc_msgSend_searchConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 searchConfiguration];
}

id objc_msgSend_searchEnded(void *a1, const char *a2, ...)
{
  return _[a1 searchEnded];
}

id objc_msgSend_searchEnding(void *a1, const char *a2, ...)
{
  return _[a1 searchEnding];
}

id objc_msgSend_searchField(void *a1, const char *a2, ...)
{
  return _[a1 searchField];
}

id objc_msgSend_searchFieldWidth(void *a1, const char *a2, ...)
{
  return _[a1 searchFieldWidth];
}

id objc_msgSend_searchResultIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 searchResultIdentifier];
}

id objc_msgSend_searchResultsDelegate(void *a1, const char *a2, ...)
{
  return _[a1 searchResultsDelegate];
}

id objc_msgSend_searchResultsUpdater(void *a1, const char *a2, ...)
{
  return _[a1 searchResultsUpdater];
}

id objc_msgSend_searchResultsViewController(void *a1, const char *a2, ...)
{
  return _[a1 searchResultsViewController];
}

id objc_msgSend_searchResultsViewController_didSelectEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchResultsViewController:didSelectEvent:");
}

id objc_msgSend_searchString(void *a1, const char *a2, ...)
{
  return _[a1 searchString];
}

id objc_msgSend_searchTapped(void *a1, const char *a2, ...)
{
  return _[a1 searchTapped];
}

id objc_msgSend_second(void *a1, const char *a2, ...)
{
  return _[a1 second];
}

id objc_msgSend_secondAndThirdOccurrencesForEachDay(void *a1, const char *a2, ...)
{
  return _[a1 secondAndThirdOccurrencesForEachDay];
}

id objc_msgSend_secondAtPosition_(void *a1, const char *a2, ...)
{
  return [a1 secondAtPosition:];
}

id objc_msgSend_secondaryLabelColor(void *a1, const char *a2, ...)
{
  return _[a1 secondaryLabelColor];
}

id objc_msgSend_secondarySystemBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 secondarySystemBackgroundColor];
}

id objc_msgSend_section(void *a1, const char *a2, ...)
{
  return _[a1 section];
}

id objc_msgSend_sectionForCachedOccurrencesOnDate_(void *a1, const char *a2, ...)
{
  return [a1 sectionForCachedOccurrencesOnDate:];
}

id objc_msgSend_sectionForCachedOccurrencesOnDate_sectionExistsForDay_(void *a1, const char *a2, ...)
{
  return [a1 sectionForCachedOccurrencesOnDate:sectionExistsForDay:];
}

id objc_msgSend_sectionForCachedOccurrencesOnDate_usingFilter_(void *a1, const char *a2, ...)
{
  return [a1 sectionForCachedOccurrencesOnDate:usingFilter:];
}

id objc_msgSend_sectionForEvent_(void *a1, const char *a2, ...)
{
  return [a1 sectionForEvent:];
}

id objc_msgSend_segmentedControl(void *a1, const char *a2, ...)
{
  return _[a1 segmentedControl];
}

id objc_msgSend_selectDate_andTime_animated_(void *a1, const char *a2, ...)
{
  return [a1 selectDate:andTime:animated:];
}

id objc_msgSend_selectDate_animated_(void *a1, const char *a2, ...)
{
  return [a1 selectDate:animated:];
}

id objc_msgSend_selectEvent_animated_(void *a1, const char *a2, ...)
{
  return [a1 selectEvent:animated:];
}

id objc_msgSend_selectOccurrence_(void *a1, const char *a2, ...)
{
  return [a1 selectOccurrence:];
}

id objc_msgSend_selectOccurrence_inWeek_(void *a1, const char *a2, ...)
{
  return [a1 selectOccurrence:inWeek:];
}

id objc_msgSend_selectOccurrences_(void *a1, const char *a2, ...)
{
  return [a1 selectOccurrences:];
}

id objc_msgSend_selectRowAtIndexPath_animated_scrollPosition_(void *a1, const char *a2, ...)
{
  return [a1 selectRowAtIndexPath:animated:scrollPosition:];
}

id objc_msgSend_selectSegmentIndex_(void *a1, const char *a2, ...)
{
  return [a1 selectSegmentIndex:];
}

id objc_msgSend_selectTodayWithTrigger_animated_(void *a1, const char *a2, ...)
{
  return [a1 selectTodayWithTrigger:animated:];
}

id objc_msgSend_selected(void *a1, const char *a2, ...)
{
  return _[a1 selected];
}

id objc_msgSend_selectedCalendars(void *a1, const char *a2, ...)
{
  return _[a1 selectedCalendars];
}

id objc_msgSend_selectedCalendarsIgnoringFocus(void *a1, const char *a2, ...)
{
  return _[a1 selectedCalendarsIgnoringFocus];
}

id objc_msgSend_selectedCopy(void *a1, const char *a2, ...)
{
  return _[a1 selectedCopy];
}

id objc_msgSend_selectedDate(void *a1, const char *a2, ...)
{
  return _[a1 selectedDate];
}

id objc_msgSend_selectedDateAfterScrollingToPoint_(void *a1, const char *a2, ...)
{
  return [a1 selectedDateAfterScrollingToPoint:];
}

id objc_msgSend_selectedDateOccurrences_loadIsComplete_(void *a1, const char *a2, ...)
{
  return [a1 selectedDateOccurrences:loadIsComplete:];
}

id objc_msgSend_selectedDay(void *a1, const char *a2, ...)
{
  return _[a1 selectedDay];
}

id objc_msgSend_selectedEventWasAutoSelected(void *a1, const char *a2, ...)
{
  return _[a1 selectedEventWasAutoSelected];
}

id objc_msgSend_selectedEventsForEditMenu(void *a1, const char *a2, ...)
{
  return _[a1 selectedEventsForEditMenu];
}

id objc_msgSend_selectedIndex(void *a1, const char *a2, ...)
{
  return _[a1 selectedIndex];
}

id objc_msgSend_selectedOccurrence(void *a1, const char *a2, ...)
{
  return _[a1 selectedOccurrence];
}

id objc_msgSend_selectedOccurrences(void *a1, const char *a2, ...)
{
  return _[a1 selectedOccurrences];
}

id objc_msgSend_selectedResponseButton(void *a1, const char *a2, ...)
{
  return _[a1 selectedResponseButton];
}

id objc_msgSend_selectedSegmentIndex(void *a1, const char *a2, ...)
{
  return _[a1 selectedSegmentIndex];
}

id objc_msgSend_selfAttendee(void *a1, const char *a2, ...)
{
  return _[a1 selfAttendee];
}

id objc_msgSend_sendSubviewToBack_(void *a1, const char *a2, ...)
{
  return [a1 sendSubviewToBack:];
}

id objc_msgSend_separator(void *a1, const char *a2, ...)
{
  return _[a1 separator];
}

id objc_msgSend_separatorColor(void *a1, const char *a2, ...)
{
  return _[a1 separatorColor];
}

id objc_msgSend_session(void *a1, const char *a2, ...)
{
  return _[a1 session];
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return _[a1 set];
}

id objc_msgSend_setAccessibilityElementsHidden_(void *a1, const char *a2, ...)
{
  return [a1 setAccessibilityElementsHidden:];
}

id objc_msgSend_setAccessibilityIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setAccessibilityIdentifier:];
}

id objc_msgSend_setAccessibilityLabel_(void *a1, const char *a2, ...)
{
  return [a1 setAccessibilityLabel:];
}

id objc_msgSend_setAccessibilityTraits_(void *a1, const char *a2, ...)
{
  return [a1 setAccessibilityTraits:];
}

id objc_msgSend_setAccessoryType_(void *a1, const char *a2, ...)
{
  return [a1 setAccessoryType:];
}

id objc_msgSend_setActions_(void *a1, const char *a2, ...)
{
  return [a1 setActions:];
}

id objc_msgSend_setActivationConditions_(void *a1, const char *a2, ...)
{
  return [a1 setActivationConditions:];
}

id objc_msgSend_setActive_(void *a1, const char *a2, ...)
{
  return [a1 setActive:];
}

id objc_msgSend_setAddItemViewControllerManagerDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setAddItemViewControllerManagerDelegate:];
}

id objc_msgSend_setAddress_(void *a1, const char *a2, ...)
{
  return [a1 setAddress:];
}

id objc_msgSend_setAdjustsFontSizeToFitWidth_(void *a1, const char *a2, ...)
{
  return [a1 setAdjustsFontSizeToFitWidth:];
}

id objc_msgSend_setAlignment_(void *a1, const char *a2, ...)
{
  return [a1 setAlignment:];
}

id objc_msgSend_setAllDay_(void *a1, const char *a2, ...)
{
  return [a1 setAllDay:];
}

id objc_msgSend_setAllDayAlpha_(void *a1, const char *a2, ...)
{
  return [a1 setAllDayAlpha:];
}

id objc_msgSend_setAllDayDrawingStyle_(void *a1, const char *a2, ...)
{
  return [a1 setAllDayDrawingStyle:];
}

id objc_msgSend_setAllDayHighlighted_(void *a1, const char *a2, ...)
{
  return [a1 setAllDayHighlighted:];
}

id objc_msgSend_setAllowEventLocationPrediction_(void *a1, const char *a2, ...)
{
  return [a1 setAllowEventLocationPrediction:];
}

id objc_msgSend_setAllowExtendedHeightCells_(void *a1, const char *a2, ...)
{
  return [a1 setAllowExtendedHeightCells:];
}

id objc_msgSend_setAllowableMovement_(void *a1, const char *a2, ...)
{
  return [a1 setAllowableMovement:];
}

id objc_msgSend_setAllowedTouchTypes_(void *a1, const char *a2, ...)
{
  return [a1 setAllowedTouchTypes:];
}

id objc_msgSend_setAllowsCalendarPreview_(void *a1, const char *a2, ...)
{
  return [a1 setAllowsCalendarPreview:];
}

id objc_msgSend_setAllowsEditing_(void *a1, const char *a2, ...)
{
  return [a1 setAllowsEditing:];
}

id objc_msgSend_setAllowsEnqueuedDismissal_(void *a1, const char *a2, ...)
{
  return [a1 setAllowsEnqueuedDismissal:];
}

id objc_msgSend_setAllowsFocus_(void *a1, const char *a2, ...)
{
  return [a1 setAllowsFocus:];
}

id objc_msgSend_setAllowsMultipleSelection_(void *a1, const char *a2, ...)
{
  return [a1 setAllowsMultipleSelection:];
}

id objc_msgSend_setAllowsPullToRefresh_(void *a1, const char *a2, ...)
{
  return [a1 setAllowsPullToRefresh:];
}

id objc_msgSend_setAlpha_(void *a1, const char *a2, ...)
{
  return [a1 setAlpha:];
}

id objc_msgSend_setAlwaysAnimate_(void *a1, const char *a2, ...)
{
  return [a1 setAlwaysAnimate:];
}

id objc_msgSend_setAnchorPoint_(void *a1, const char *a2, ...)
{
  return [a1 setAnchorPoint:];
}

id objc_msgSend_setAnimateAllDayAreaHeight_(void *a1, const char *a2, ...)
{
  return [a1 setAnimateAllDayAreaHeight:];
}

id objc_msgSend_setAnimating_(void *a1, const char *a2, ...)
{
  return [a1 setAnimating:];
}

id objc_msgSend_setAnimatingViewTransition_(void *a1, const char *a2, ...)
{
  return [a1 setAnimatingViewTransition:];
}

id objc_msgSend_setAnyCalendarsHiddenByFocus_(void *a1, const char *a2, ...)
{
  return [a1 setAnyCalendarsHiddenByFocus:];
}

id objc_msgSend_setApplicationLastActiveTimeProvider_(void *a1, const char *a2, ...)
{
  return [a1 setApplicationLastActiveTimeProvider:];
}

id objc_msgSend_setApplicationRequestDelayer_(void *a1, const char *a2, ...)
{
  return [a1 setApplicationRequestDelayer:];
}

id objc_msgSend_setApplyMonthAnimationStateAdjustments_(void *a1, const char *a2, ...)
{
  return [a1 setApplyMonthAnimationStateAdjustments:];
}

id objc_msgSend_setApportionsSegmentWidthsByContent_(void *a1, const char *a2, ...)
{
  return [a1 setApportionsSegmentWidthsByContent:];
}

id objc_msgSend_setArrowDirection_(void *a1, const char *a2, ...)
{
  return [a1 setArrowDirection:];
}

id objc_msgSend_setAsyncLoading_(void *a1, const char *a2, ...)
{
  return [a1 setAsyncLoading:];
}

id objc_msgSend_setAttachedTodayCircle_(void *a1, const char *a2, ...)
{
  return [a1 setAttachedTodayCircle];
}

id objc_msgSend_setAttributedText_(void *a1, const char *a2, ...)
{
  return [a1 setAttributedText:];
}

id objc_msgSend_setAttributedTitle_(void *a1, const char *a2, ...)
{
  return [a1 setAttributedTitle:];
}

id objc_msgSend_setAttributes_(void *a1, const char *a2, ...)
{
  return [a1 setAttributes:];
}

id objc_msgSend_setAttributes_range_(void *a1, const char *a2, ...)
{
  return [a1 setAttributes:range:];
}

id objc_msgSend_setAutoStartNotificationMonitor_(void *a1, const char *a2, ...)
{
  return [a1 setAutoStartNotificationMonitor:];
}

id objc_msgSend_setAutoresizesSubviews_(void *a1, const char *a2, ...)
{
  return [a1 setAutoresizesSubviews:];
}

id objc_msgSend_setAutoresizingMask_(void *a1, const char *a2, ...)
{
  return [a1 setAutoresizingMask:];
}

id objc_msgSend_setAvatarContact_(void *a1, const char *a2, ...)
{
  return [a1 setAvatarContact:];
}

id objc_msgSend_setAvatarViewVisible_(void *a1, const char *a2, ...)
{
  return [a1 setAvatarViewVisible:];
}

id objc_msgSend_setBackButtonTitle_(void *a1, const char *a2, ...)
{
  return [a1 setBackButtonTitle:];
}

id objc_msgSend_setBackgroundColor_(void *a1, const char *a2, ...)
{
  return [a1 setBackgroundColor:];
}

id objc_msgSend_setBackgroundConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 setBackgroundConfiguration:];
}

id objc_msgSend_setBackgroundEffects_(void *a1, const char *a2, ...)
{
  return [a1 setBackgroundEffects:];
}

id objc_msgSend_setBackgroundView_(void *a1, const char *a2, ...)
{
  return [a1 setBackgroundView:];
}

id objc_msgSend_setBadgeColor_(void *a1, const char *a2, ...)
{
  return [a1 setBadgeColor:];
}

id objc_msgSend_setBadgeLocale_(void *a1, const char *a2, ...)
{
  return [a1 setBadgeLocale:];
}

id objc_msgSend_setBadgeType_(void *a1, const char *a2, ...)
{
  return [a1 setBadgeType:];
}

id objc_msgSend_setBarButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setBarButtonItem:];
}

id objc_msgSend_setBarTintColor_(void *a1, const char *a2, ...)
{
  return [a1 setBarTintColor:];
}

id objc_msgSend_setBorderStyle_(void *a1, const char *a2, ...)
{
  return [a1 setBorderStyle:];
}

id objc_msgSend_setBottomPinningProximity_(void *a1, const char *a2, ...)
{
  return [a1 setBottomPinningProximity:];
}

id objc_msgSend_setBottomView_(void *a1, const char *a2, ...)
{
  return [a1 setBottomView:];
}

id objc_msgSend_setBounces_(void *a1, const char *a2, ...)
{
  return [a1 setBounces:];
}

id objc_msgSend_setBounds_(void *a1, const char *a2, ...)
{
  return [a1 setBounds:];
}

id objc_msgSend_setButtonsTouchInsets_(void *a1, const char *a2, ...)
{
  return [a1 setButtonsTouchInsets:];
}

id objc_msgSend_setCalculationType_(void *a1, const char *a2, ...)
{
  return [a1 setCalculationType:];
}

id objc_msgSend_setCalendar_(void *a1, const char *a2, ...)
{
  return [a1 setCalendar:];
}

id objc_msgSend_setCalendarDate_(void *a1, const char *a2, ...)
{
  return [a1 setCalendarDate:];
}

id objc_msgSend_setCalendarForPaste_(void *a1, const char *a2, ...)
{
  return [a1 setCalendarForPaste:];
}

id objc_msgSend_setCalendarPreviewIsInlineDayView_(void *a1, const char *a2, ...)
{
  return [a1 setCalendarPreviewIsInlineDayView:];
}

id objc_msgSend_setCalendarsBarButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setCalendarsBarButtonItem:];
}

id objc_msgSend_setCanActivateForTargetContentIdentifierPredicate_(void *a1, const char *a2, ...)
{
  return [a1 setCanActivateForTargetContentIdentifierPredicate:];
}

id objc_msgSend_setCellFactory_(void *a1, const char *a2, ...)
{
  return [a1 setCellFactory:];
}

id objc_msgSend_setCenter_(void *a1, const char *a2, ...)
{
  return [a1 setCenter:];
}

id objc_msgSend_setCenteredCalendar_(void *a1, const char *a2, ...)
{
  return [a1 setCenteredCalendar:];
}

id objc_msgSend_setChangedFields_(void *a1, const char *a2, ...)
{
  return [a1 setChangedFields:];
}

id objc_msgSend_setCircleDiameter_(void *a1, const char *a2, ...)
{
  return [a1 setCircleDiameter:];
}

id objc_msgSend_setCircleDiameter_overlayDiameter_largeOverlayDiameter_(void *a1, const char *a2, ...)
{
  return [a1 setCircleDiameter:overlayDiameter:largeOverlayDiameter:];
}

id objc_msgSend_setCircleShouldFillFrame_(void *a1, const char *a2, ...)
{
  return [a1 setCircleShouldFillFrame:];
}

id objc_msgSend_setCircled_(void *a1, const char *a2, ...)
{
  return [a1 setCircled:];
}

id objc_msgSend_setCircled_animated_(void *a1, const char *a2, ...)
{
  return [a1 setCircled:animated:];
}

id objc_msgSend_setClearButtonMode_(void *a1, const char *a2, ...)
{
  return [a1 setClearButtonMode:];
}

id objc_msgSend_setClearsContextBeforeDrawing_(void *a1, const char *a2, ...)
{
  return [a1 setClearsContextBeforeDrawing:];
}

id objc_msgSend_setClipsToBounds_(void *a1, const char *a2, ...)
{
  return [a1 setClipsToBounds:];
}

id objc_msgSend_setCollapsedSectionIdentifiers_(void *a1, const char *a2, ...)
{
  return [a1 setCollapsedSectionIdentifiers:];
}

id objc_msgSend_setColor_(void *a1, const char *a2, ...)
{
  return [a1 setColor:];
}

id objc_msgSend_setColorBarConstraints_(void *a1, const char *a2, ...)
{
  return [a1 setColorBarConstraints:];
}

id objc_msgSend_setColors_(void *a1, const char *a2, ...)
{
  return [a1 setColors:];
}

id objc_msgSend_setCommentChanged_(void *a1, const char *a2, ...)
{
  return [a1 setCommentChanged:];
}

id objc_msgSend_setCommentPromptRelatedConstraints_(void *a1, const char *a2, ...)
{
  return [a1 setCommentPromptRelatedConstraints:];
}

id objc_msgSend_setCompactMonthListViewDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setCompactMonthListViewDelegate:];
}

id objc_msgSend_setCompleted_(void *a1, const char *a2, ...)
{
  return [a1 setCompleted:];
}

id objc_msgSend_setCompletion_(void *a1, const char *a2, ...)
{
  return [a1 setCompletion:];
}

id objc_msgSend_setCompletionBlock_(void *a1, const char *a2, ...)
{
  return [a1 setCompletionBlock:];
}

id objc_msgSend_setComponentForExpandingPadding_(void *a1, const char *a2, ...)
{
  return [a1 setComponentForExpandingPadding];
}

id objc_msgSend_setCompressed_(void *a1, const char *a2, ...)
{
  return [a1 setCompressed:];
}

id objc_msgSend_setCompressedVerticalMode_(void *a1, const char *a2, ...)
{
  return [a1 setCompressedVerticalMode:];
}

id objc_msgSend_setConfigurationUpdateHandler_(void *a1, const char *a2, ...)
{
  return [a1 setConfigurationUpdateHandler:];
}

id objc_msgSend_setConflictDict_(void *a1, const char *a2, ...)
{
  return [a1 setConflictDict:];
}

id objc_msgSend_setConstant_(void *a1, const char *a2, ...)
{
  return [a1 setConstant:];
}

id objc_msgSend_setContact_(void *a1, const char *a2, ...)
{
  return [a1 setContact:];
}

id objc_msgSend_setContactStore_(void *a1, const char *a2, ...)
{
  return [a1 setContactStore:];
}

id objc_msgSend_setContentAttributeSet_(void *a1, const char *a2, ...)
{
  return [a1 setContentAttributeSet:];
}

id objc_msgSend_setContentCompressionResistancePriority_forAxis_(void *a1, const char *a2, ...)
{
  return [a1 setContentCompressionResistancePriority:forAxis:];
}

id objc_msgSend_setContentDescription_(void *a1, const char *a2, ...)
{
  return [a1 setContentDescription:];
}

id objc_msgSend_setContentHuggingPriority_forAxis_(void *a1, const char *a2, ...)
{
  return [a1 setContentHuggingPriority:forAxis:];
}

id objc_msgSend_setContentInset_(void *a1, const char *a2, ...)
{
  return [a1 setContentInset:];
}

id objc_msgSend_setContentInsetAdjustmentBehavior_(void *a1, const char *a2, ...)
{
  return [a1 setContentInsetAdjustmentBehavior:];
}

id objc_msgSend_setContentInsets_(void *a1, const char *a2, ...)
{
  return [a1 setContentInsets:];
}

id objc_msgSend_setContentMode_(void *a1, const char *a2, ...)
{
  return [a1 setContentMode:];
}

id objc_msgSend_setContentOffset_(void *a1, const char *a2, ...)
{
  return [a1 setContentOffset:];
}

id objc_msgSend_setContentOffset_animated_(void *a1, const char *a2, ...)
{
  return [a1 setContentOffset:animated:];
}

id objc_msgSend_setContentSize_(void *a1, const char *a2, ...)
{
  return [a1 setContentSize:];
}

id objc_msgSend_setContents_(void *a1, const char *a2, ...)
{
  return [a1 setContents:];
}

id objc_msgSend_setController_(void *a1, const char *a2, ...)
{
  return [a1 setController:];
}

id objc_msgSend_setCornerRadius_(void *a1, const char *a2, ...)
{
  return [a1 setCornerRadius:];
}

id objc_msgSend_setCreationMethod_(void *a1, const char *a2, ...)
{
  return [a1 setCreationMethod];
}

id objc_msgSend_setCurrentEditor_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentEditor:];
}

id objc_msgSend_setCurrentSelectedEvent_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentSelectedEvent:];
}

id objc_msgSend_setCurrentSidebarState_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentSidebarState:];
}

id objc_msgSend_setCurrentSidebarState_completion_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentSidebarState:completion:];
}

id objc_msgSend_setCurrentTraitCollection_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentTraitCollection:];
}

id objc_msgSend_setData_date_calendar_delegate_(void *a1, const char *a2, ...)
{
  return [a1 setData:date:calendar:delegate:];
}

id objc_msgSend_setDataSource_(void *a1, const char *a2, ...)
{
  return [a1 setDataSource:];
}

id objc_msgSend_setDate_(void *a1, const char *a2, ...)
{
  return [a1 setDate:];
}

id objc_msgSend_setDate_forceStringUpdate_(void *a1, const char *a2, ...)
{
  return [a1 setDate:forceStringUpdate:];
}

id objc_msgSend_setDateForPaste_(void *a1, const char *a2, ...)
{
  return [a1 setDateForPaste:];
}

id objc_msgSend_setDateFormat_(void *a1, const char *a2, ...)
{
  return [a1 setDateFormat:];
}

id objc_msgSend_setDateString_(void *a1, const char *a2, ...)
{
  return [a1 setDateString];
}

id objc_msgSend_setDateStringVisible_(void *a1, const char *a2, ...)
{
  return [a1 setDateStringVisible:];
}

id objc_msgSend_setDateStyle_(void *a1, const char *a2, ...)
{
  return [a1 setDateStyle:];
}

id objc_msgSend_setDateTemplate_(void *a1, const char *a2, ...)
{
  return [a1 setDateTemplate:];
}

id objc_msgSend_setDay_(void *a1, const char *a2, ...)
{
  return [a1 setDay:];
}

id objc_msgSend_setDayBadgeColor_(void *a1, const char *a2, ...)
{
  return [a1 setDayBadgeColor:];
}

id objc_msgSend_setDayBadgeLocale_(void *a1, const char *a2, ...)
{
  return [a1 setDayBadgeLocale:];
}

id objc_msgSend_setDayBadgeType_(void *a1, const char *a2, ...)
{
  return [a1 setDayBadgeType:];
}

id objc_msgSend_setDayCellSize_(void *a1, const char *a2, ...)
{
  return [a1 setDayCellSize:];
}

id objc_msgSend_setDayCellsScrubbingGestureRecognizer_(void *a1, const char *a2, ...)
{
  return [a1 setDayCellsScrubbingGestureRecognizer:];
}

id objc_msgSend_setDayCellsTapGestureRecognizer_(void *a1, const char *a2, ...)
{
  return [a1 setDayCellsTapGestureRecognizer:];
}

id objc_msgSend_setDayFrame_(void *a1, const char *a2, ...)
{
  return [a1 setDayFrame:];
}

id objc_msgSend_setDayFrames_(void *a1, const char *a2, ...)
{
  return [a1 setDayFrames:];
}

id objc_msgSend_setDayHeaderFrames_(void *a1, const char *a2, ...)
{
  return [a1 setDayHeaderFrames:];
}

id objc_msgSend_setDayScrubberController_(void *a1, const char *a2, ...)
{
  return [a1 setDayScrubberController:];
}

id objc_msgSend_setDayScrubberFrame_(void *a1, const char *a2, ...)
{
  return [a1 setDayScrubberFrame:];
}

id objc_msgSend_setDayTimeViewDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setDayTimeViewDelegate:];
}

id objc_msgSend_setDayType_(void *a1, const char *a2, ...)
{
  return [a1 setDayType:];
}

id objc_msgSend_setDayTypeBadgeColor_(void *a1, const char *a2, ...)
{
  return [a1 setDayTypeBadgeColor:];
}

id objc_msgSend_setDayTypeBadgeLocale_(void *a1, const char *a2, ...)
{
  return [a1 setDayTypeBadgeLocale:];
}

id objc_msgSend_setDayTypes_badgeColors_badgeLocales_(void *a1, const char *a2, ...)
{
  return [a1 setDayTypes:badgeColors:badgeLocales:];
}

id objc_msgSend_setDayViewFirstVisibleSecond_(void *a1, const char *a2, ...)
{
  return [a1 setDayViewFirstVisibleSecond:];
}

id objc_msgSend_setDayViewHourScale_(void *a1, const char *a2, ...)
{
  return [a1 setDayViewHourScale:];
}

id objc_msgSend_setDebug_(void *a1, const char *a2, ...)
{
  return [a1 setDebug:];
}

id objc_msgSend_setDebugMenuHandler_(void *a1, const char *a2, ...)
{
  return [a1 setDebugMenuHandler:];
}

id objc_msgSend_setDecelerationRate_(void *a1, const char *a2, ...)
{
  return [a1 setDecelerationRate:];
}

id objc_msgSend_setDefinesPresentationContext_(void *a1, const char *a2, ...)
{
  return [a1 setDefinesPresentationContext:];
}

id objc_msgSend_setDelaysContentTouches_(void *a1, const char *a2, ...)
{
  return [a1 setDelaysContentTouches:];
}

id objc_msgSend_setDelaysTouchesBegan_(void *a1, const char *a2, ...)
{
  return [a1 setDelaysTouchesBegan:];
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setDelegate:];
}

id objc_msgSend_setDelegateClass_(void *a1, const char *a2, ...)
{
  return [a1 setDelegateClass:];
}

id objc_msgSend_setDeselectedCalendars_reason_(void *a1, const char *a2, ...)
{
  return [a1 setDeselectedCalendars:reason:];
}

id objc_msgSend_setDesiredPaddingDays_(void *a1, const char *a2, ...)
{
  return [a1 setDesiredPaddingDays:];
}

id objc_msgSend_setDestination_(void *a1, const char *a2, ...)
{
  return [a1 setDestination:];
}

id objc_msgSend_setDiagnosticsViewController_(void *a1, const char *a2, ...)
{
  return [a1 setDiagnosticsViewController:];
}

id objc_msgSend_setDimmed_(void *a1, const char *a2, ...)
{
  return [a1 setDimmed:];
}

id objc_msgSend_setDimmedOccurrence_(void *a1, const char *a2, ...)
{
  return [a1 setDimmedOccurrence:];
}

id objc_msgSend_setDirection_(void *a1, const char *a2, ...)
{
  return [a1 setDirection:];
}

id objc_msgSend_setDisableActions_(void *a1, const char *a2, ...)
{
  return [a1 setDisableActions:];
}

id objc_msgSend_setDisableGestureDayChange_(void *a1, const char *a2, ...)
{
  return [a1 setDisableGestureDayChange:];
}

id objc_msgSend_setDisableNotifyDateChangeDuringTracking_(void *a1, const char *a2, ...)
{
  return [a1 setDisableNotifyDateChangeDuringTracking:];
}

id objc_msgSend_setDisableRotationTimings_(void *a1, const char *a2, ...)
{
  return [a1 setDisableRotationTimings:];
}

id objc_msgSend_setDisableTodayPulse_(void *a1, const char *a2, ...)
{
  return [a1 setDisableTodayPulse:];
}

id objc_msgSend_setDisabled_(void *a1, const char *a2, ...)
{
  return [a1 setDisabled:];
}

id objc_msgSend_setDisclosureConstraints_(void *a1, const char *a2, ...)
{
  return [a1 setDisclosureConstraints:];
}

id objc_msgSend_setDisplayDate_(void *a1, const char *a2, ...)
{
  return [a1 setDisplayDate:];
}

id objc_msgSend_setDisplayMode_(void *a1, const char *a2, ...)
{
  return [a1 setDisplayMode:];
}

id objc_msgSend_setDisplayType_(void *a1, const char *a2, ...)
{
  return [a1 setDisplayType:];
}

id objc_msgSend_setDisplayedDate_(void *a1, const char *a2, ...)
{
  return [a1 setDisplayedDate:];
}

id objc_msgSend_setDisplayedDate_animated_(void *a1, const char *a2, ...)
{
  return [a1 setDisplayedDate:animated:];
}

id objc_msgSend_setDisplayedDate_forceScroll_animated_(void *a1, const char *a2, ...)
{
  return [a1 setDisplayedDate:forceScroll:animated:];
}

id objc_msgSend_setDisplayedEditor_(void *a1, const char *a2, ...)
{
  return [a1 setDisplayedEditor:];
}

id objc_msgSend_setDisplayedString_(void *a1, const char *a2, ...)
{
  return [a1 setDisplayedString:];
}

id objc_msgSend_setDisplaysDatesSnappedToWeekBoundaries_(void *a1, const char *a2, ...)
{
  return [a1 setDisplaysDatesSnappedToWeekBoundaries:];
}

id objc_msgSend_setDividedListMode_(void *a1, const char *a2, ...)
{
  return [a1 setDividedListMode:];
}

id objc_msgSend_setDividerLineVisible_(void *a1, const char *a2, ...)
{
  return [a1 setDividerLineVisible:];
}

id objc_msgSend_setDoesRelativeDateFormatting_(void *a1, const char *a2, ...)
{
  return [a1 setDoesRelativeDateFormatting:];
}

id objc_msgSend_setDoneBlock_(void *a1, const char *a2, ...)
{
  return [a1 setDoneBlock:];
}

id objc_msgSend_setDrawBackgroundWithLayer_(void *a1, const char *a2, ...)
{
  return [a1 setDrawBackgroundWithLayer:];
}

id objc_msgSend_setDrawCircle_(void *a1, const char *a2, ...)
{
  return [a1 setDrawCircle:];
}

id objc_msgSend_setDrawWithViews_(void *a1, const char *a2, ...)
{
  return [a1 setDrawWithViews:];
}

id objc_msgSend_setDrawsBackground_(void *a1, const char *a2, ...)
{
  return [a1 setDrawsBackground:];
}

id objc_msgSend_setDrawsOwnRowSeparators_(void *a1, const char *a2, ...)
{
  return [a1 setDrawsOwnRowSeparators:];
}

id objc_msgSend_setDrawsResizeHandles_(void *a1, const char *a2, ...)
{
  return [a1 setDrawsResizeHandles:];
}

id objc_msgSend_setDrawsStrikethrough_(void *a1, const char *a2, ...)
{
  return [a1 setDrawsStrikethrough:];
}

id objc_msgSend_setDrawsTimeString_(void *a1, const char *a2, ...)
{
  return [a1 setDrawsTimeString:];
}

id objc_msgSend_setDuration_(void *a1, const char *a2, ...)
{
  return [a1 setDuration:];
}

id objc_msgSend_setEKExpandedReminderStackViewControllerDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setEKExpandedReminderStackViewControllerDelegate:];
}

id objc_msgSend_setEdgesForExtendedLayout_(void *a1, const char *a2, ...)
{
  return [a1 setEdgesForExtendedLayout:];
}

id objc_msgSend_setEditViewDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setEditViewDelegate:];
}

id objc_msgSend_setEditorBackgroundColor_(void *a1, const char *a2, ...)
{
  return [a1 setEditorBackgroundColor:];
}

id objc_msgSend_setEditorHideTransition_(void *a1, const char *a2, ...)
{
  return [a1 setEditorHideTransition:];
}

id objc_msgSend_setEditorShowTransition_(void *a1, const char *a2, ...)
{
  return [a1 setEditorShowTransition:];
}

id objc_msgSend_setEkui_futureTraitCollection_(void *a1, const char *a2, ...)
{
  return [a1 setEkui_futureTraitCollection:];
}

id objc_msgSend_setEligibleForSearch_(void *a1, const char *a2, ...)
{
  return [a1 setEligibleForSearch:];
}

id objc_msgSend_setEnableLayerAnimationsDuringLayout_(void *a1, const char *a2, ...)
{
  return [a1 setEnableLayerAnimationsDuringLayout:];
}

id objc_msgSend_setEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setEnabled:];
}

id objc_msgSend_setEndDate_(void *a1, const char *a2, ...)
{
  return [a1 setEndDate:];
}

id objc_msgSend_setEndDateUnadjustedForLegacyClients_(void *a1, const char *a2, ...)
{
  return [a1 setEndDateUnadjustedForLegacyClients:];
}

id objc_msgSend_setEstimatedRowHeight_(void *a1, const char *a2, ...)
{
  return [a1 setEstimatedRowHeight:];
}

id objc_msgSend_setEvent_(void *a1, const char *a2, ...)
{
  return [a1 setEvent:];
}

id objc_msgSend_setEventCount_(void *a1, const char *a2, ...)
{
  return [a1 setEventCount:];
}

id objc_msgSend_setEventCreationMethod_(void *a1, const char *a2, ...)
{
  return [a1 setEventCreationMethod:];
}

id objc_msgSend_setEventData_(void *a1, const char *a2, ...)
{
  return [a1 setEventData:];
}

id objc_msgSend_setEventData_animated_(void *a1, const char *a2, ...)
{
  return [a1 setEventData:animated:];
}

id objc_msgSend_setEventHorizontalInset_(void *a1, const char *a2, ...)
{
  return [a1 setEventHorizontalInset:];
}

id objc_msgSend_setEventID_(void *a1, const char *a2, ...)
{
  return [a1 setEventID:];
}

id objc_msgSend_setEventIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setEventIdentifier:];
}

id objc_msgSend_setEventSpringLoadingEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setEventSpringLoadingEnabled:];
}

id objc_msgSend_setEventStore_(void *a1, const char *a2, ...)
{
  return [a1 setEventStore:];
}

id objc_msgSend_setEventSummaryData_(void *a1, const char *a2, ...)
{
  return [a1 setEventSummaryData:];
}

id objc_msgSend_setEventsFillGrid_(void *a1, const char *a2, ...)
{
  return [a1 setEventsFillGrid:];
}

id objc_msgSend_setExactEventStartDate_(void *a1, const char *a2, ...)
{
  return [a1 setExactEventStartDate:];
}

id objc_msgSend_setExplicitTime_(void *a1, const char *a2, ...)
{
  return [a1 setExplicitTime:];
}

id objc_msgSend_setExtendedLaunchComplete_(void *a1, const char *a2, ...)
{
  return [a1 setExtendedLaunchComplete:];
}

id objc_msgSend_setExtraPaletteHeight_(void *a1, const char *a2, ...)
{
  return [a1 setExtraPaletteHeight:];
}

id objc_msgSend_setFadeLeftEdge_(void *a1, const char *a2, ...)
{
  return [a1 setFadeLeftEdge:];
}

id objc_msgSend_setFadeRightEdge_(void *a1, const char *a2, ...)
{
  return [a1 setFadeRightEdge:];
}

id objc_msgSend_setFamilyName_(void *a1, const char *a2, ...)
{
  return [a1 setFamilyName:];
}

id objc_msgSend_setFill(void *a1, const char *a2, ...)
{
  return _[a1 setFill];
}

id objc_msgSend_setFirstDayCellIndex_(void *a1, const char *a2, ...)
{
  return [a1 setFirstDayCellIndex:];
}

id objc_msgSend_setFirstDayCellInset_(void *a1, const char *a2, ...)
{
  return [a1 setFirstDayCellInset:];
}

id objc_msgSend_setFirstLineHeadIndent_(void *a1, const char *a2, ...)
{
  return [a1 setFirstLineHeadIndent:];
}

id objc_msgSend_setFirstMonthCellIndex_(void *a1, const char *a2, ...)
{
  return [a1 setFirstMonthCellIndex:];
}

id objc_msgSend_setFirstName_(void *a1, const char *a2, ...)
{
  return [a1 setFirstName:];
}

id objc_msgSend_setFirstVisibleSecond_(void *a1, const char *a2, ...)
{
  return [a1 setFirstVisibleSecond:];
}

id objc_msgSend_setFirstWeekday_(void *a1, const char *a2, ...)
{
  return [a1 setFirstWeekday:];
}

id objc_msgSend_setFixedDayHeight_(void *a1, const char *a2, ...)
{
  return [a1 setFixedDayHeight:];
}

id objc_msgSend_setFixedDayWidth_(void *a1, const char *a2, ...)
{
  return [a1 setFixedDayWidth:];
}

id objc_msgSend_setFocusBannerPlacement_(void *a1, const char *a2, ...)
{
  return [a1 setFocusBannerPlacement:];
}

id objc_msgSend_setFocusFilterMode_(void *a1, const char *a2, ...)
{
  return [a1 setFocusFilterMode:];
}

id objc_msgSend_setFont_(void *a1, const char *a2, ...)
{
  return [a1 setFont:];
}

id objc_msgSend_setFontSize_(void *a1, const char *a2, ...)
{
  return [a1 setFontSize:];
}

id objc_msgSend_setForceCanBeDirectlyManagedToNo_(void *a1, const char *a2, ...)
{
  return [a1 setForceCanBeDirectlyManagedToNo:];
}

id objc_msgSend_setForceFullHeightInLandscape_(void *a1, const char *a2, ...)
{
  return [a1 setForceFullHeightInLandscape:];
}

id objc_msgSend_setFrame_(void *a1, const char *a2, ...)
{
  return [a1 setFrame:];
}

id objc_msgSend_setFrame_gutterWidth_(void *a1, const char *a2, ...)
{
  return [a1 setFrame:gutterWidth:];
}

id objc_msgSend_setFromValue_(void *a1, const char *a2, ...)
{
  return [a1 setFromValue:];
}

id objc_msgSend_setGeoLocation_(void *a1, const char *a2, ...)
{
  return [a1 setGeoLocation:];
}

id objc_msgSend_setGestureOccurrenceSuperview_(void *a1, const char *a2, ...)
{
  return [a1 setGestureOccurrenceSuperview:];
}

id objc_msgSend_setGivenName_(void *a1, const char *a2, ...)
{
  return [a1 setGivenName:];
}

id objc_msgSend_setGridHeightScale_(void *a1, const char *a2, ...)
{
  return [a1 setGridHeightScale:];
}

id objc_msgSend_setGutterWidth_(void *a1, const char *a2, ...)
{
  return [a1 setGutterWidth:];
}

id objc_msgSend_setHasDisclosure_(void *a1, const char *a2, ...)
{
  return [a1 setHasDisclosure:];
}

id objc_msgSend_setHasDrawnBefore_(void *a1, const char *a2, ...)
{
  return [a1 setHasDrawnBefore:];
}

id objc_msgSend_setHasEverCompletedFetch_(void *a1, const char *a2, ...)
{
  return [a1 setHasEverCompletedFetch:];
}

id objc_msgSend_setHasPrecedingDuration_(void *a1, const char *a2, ...)
{
  return [a1 setHasPrecedingDuration:];
}

id objc_msgSend_setHasTrailingDuration_(void *a1, const char *a2, ...)
{
  return [a1 setHasTrailingDuration:];
}

id objc_msgSend_setHasValidOrigin_(void *a1, const char *a2, ...)
{
  return [a1 setHasValidOrigin:];
}

id objc_msgSend_setHeaderHeight_(void *a1, const char *a2, ...)
{
  return [a1 setHeaderHeight:];
}

id objc_msgSend_setHeaderText_(void *a1, const char *a2, ...)
{
  return [a1 setHeaderText:];
}

id objc_msgSend_setHeightObserver_(void *a1, const char *a2, ...)
{
  return [a1 setHeightObserver:];
}

id objc_msgSend_setHidden_(void *a1, const char *a2, ...)
{
  return [a1 setHidden:];
}

id objc_msgSend_setHideText_(void *a1, const char *a2, ...)
{
  return [a1 setHideText:];
}

id objc_msgSend_setHideText_animate_(void *a1, const char *a2, ...)
{
  return [a1 setHideText:animate:];
}

id objc_msgSend_setHidesBackButton_(void *a1, const char *a2, ...)
{
  return [a1 setHidesBackButton:];
}

id objc_msgSend_setHidesNavigationBarDuringPresentation_(void *a1, const char *a2, ...)
{
  return [a1 setHidesNavigationBarDuringPresentation:];
}

id objc_msgSend_setHighlightedDateComponents_(void *a1, const char *a2, ...)
{
  return [a1 setHighlightedDateComponents:];
}

id objc_msgSend_setHighlightedDayIndex_(void *a1, const char *a2, ...)
{
  return [a1 setHighlightedDayIndex:];
}

id objc_msgSend_setHighlightedDayRange_(void *a1, const char *a2, ...)
{
  return [a1 setHighlightedDayRange:];
}

id objc_msgSend_setHighlightedHour_(void *a1, const char *a2, ...)
{
  return [a1 setHighlightedHour:];
}

id objc_msgSend_setHighlightedTextColor_(void *a1, const char *a2, ...)
{
  return [a1 setHighlightedTextColor:];
}

id objc_msgSend_setHorizontalSizeClass_(void *a1, const char *a2, ...)
{
  return [a1 setHorizontalSizeClass:];
}

id objc_msgSend_setHour_(void *a1, const char *a2, ...)
{
  return [a1 setHour:];
}

id objc_msgSend_setHourHeightScale_(void *a1, const char *a2, ...)
{
  return [a1 setHourHeightScale:];
}

id objc_msgSend_setHyphenationFactor_(void *a1, const char *a2, ...)
{
  return [a1 setHyphenationFactor:];
}

id objc_msgSend_setIgnoreUnsavedChanges_(void *a1, const char *a2, ...)
{
  return [a1 setIgnoreUnsavedChanges:];
}

id objc_msgSend_setImage_(void *a1, const char *a2, ...)
{
  return [a1 setImage:];
}

id objc_msgSend_setImage_forState_(void *a1, const char *a2, ...)
{
  return [a1 setImage:forState:];
}

id objc_msgSend_setImage_warningString_emphasizedRangeValue_(void *a1, const char *a2, ...)
{
  return [a1 setImage:warningString:emphasizedRangeValue:];
}

id objc_msgSend_setImageColorTransformer_(void *a1, const char *a2, ...)
{
  return [a1 setImageColorTransformer:];
}

id objc_msgSend_setImagePadding_(void *a1, const char *a2, ...)
{
  return [a1 setImagePadding:];
}

id objc_msgSend_setInboxBarButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setInboxBarButtonItem:];
}

id objc_msgSend_setInboxNewSectionDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setInboxNewSectionDelegate:];
}

id objc_msgSend_setInboxRepliedSectionDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setInboxRepliedSectionDelegate:];
}

id objc_msgSend_setInitialPresentationHasCompleted_(void *a1, const char *a2, ...)
{
  return [a1 setInitialPresentationHasCompleted:];
}

id objc_msgSend_setInitialVelocity_(void *a1, const char *a2, ...)
{
  return [a1 setInitialVelocity:];
}

id objc_msgSend_setInlineDayViewRespectsSelectedCalendarsFilter_(void *a1, const char *a2, ...)
{
  return [a1 setInlineDayViewRespectsSelectedCalendarsFilter:];
}

id objc_msgSend_setInputEventData_(void *a1, const char *a2, ...)
{
  return [a1 setInputEventData:];
}

id objc_msgSend_setInternalEditViewDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setInternalEditViewDelegate:];
}

id objc_msgSend_setInvitationStatus_(void *a1, const char *a2, ...)
{
  return [a1 setInvitationStatus:];
}

id objc_msgSend_setIsAccessibilityElement_(void *a1, const char *a2, ...)
{
  return [a1 setIsAccessibilityElement:];
}

id objc_msgSend_setIsAllDay_(void *a1, const char *a2, ...)
{
  return [a1 setIsAllDay:];
}

id objc_msgSend_setIsCompact_(void *a1, const char *a2, ...)
{
  return [a1 setIsCompact:];
}

id objc_msgSend_setIsInUse_(void *a1, const char *a2, ...)
{
  return [a1 setIsInUse:];
}

id objc_msgSend_setIsJunk_(void *a1, const char *a2, ...)
{
  return [a1 setIsJunk:];
}

id objc_msgSend_setIsLargeDayView_(void *a1, const char *a2, ...)
{
  return [a1 setIsLargeDayView:];
}

id objc_msgSend_setIsPortraitOrientationTo_(void *a1, const char *a2, ...)
{
  return [a1 setIsPortraitOrientationTo:];
}

id objc_msgSend_setIsSelectedCopyView_(void *a1, const char *a2, ...)
{
  return [a1 setIsSelectedCopyView:];
}

id objc_msgSend_setIsSelectedDateFiveDaysAwayFromTodayTo_(void *a1, const char *a2, ...)
{
  return [a1 setIsSelectedDateFiveDaysAwayFromTodayTo:];
}

id objc_msgSend_setIsToday_(void *a1, const char *a2, ...)
{
  return [a1 setIsToday:];
}

id objc_msgSend_setIsUserFingerDown_(void *a1, const char *a2, ...)
{
  return [a1 setIsUserFingerDown:];
}

id objc_msgSend_setIsWaitingForBackgroundLoadingOfSelectedEventOccurrenceView_(void *a1, const char *a2, ...)
{
  return [a1 setIsWaitingForBackgroundLoadingOfSelectedEventOccurrenceView:];
}

id objc_msgSend_setIsWeekend_(void *a1, const char *a2, ...)
{
  return [a1 setIsWeekend:];
}

id objc_msgSend_setItems_(void *a1, const char *a2, ...)
{
  return [a1 setItems:];
}

id objc_msgSend_setIterationDurationFactor_(void *a1, const char *a2, ...)
{
  return [a1 setIterationDurationFactor:];
}

id objc_msgSend_setKey_withBoolean_(void *a1, const char *a2, ...)
{
  return [a1 setKey:withBoolean:];
}

id objc_msgSend_setKey_withObject_(void *a1, const char *a2, ...)
{
  return [a1 setKey:withObject:];
}

id objc_msgSend_setKeyPath_(void *a1, const char *a2, ...)
{
  return [a1 setKeyPath:];
}

id objc_msgSend_setLabelElementsVisible_(void *a1, const char *a2, ...)
{
  return [a1 setLabelElementsVisible:];
}

id objc_msgSend_setLabelRelatedConstraints_(void *a1, const char *a2, ...)
{
  return [a1 setLabelRelatedConstraints:];
}

id objc_msgSend_setLargeListViewDisclosingEventDetails_(void *a1, const char *a2, ...)
{
  return [a1 setLargeListViewDisclosingEventDetails:];
}

id objc_msgSend_setLastConfirmedSplashScreenVersion_(void *a1, const char *a2, ...)
{
  return [a1 setLastConfirmedSplashScreenVersion:];
}

id objc_msgSend_setLastName_(void *a1, const char *a2, ...)
{
  return [a1 setLastName:];
}

id objc_msgSend_setLastSidebarMode_(void *a1, const char *a2, ...)
{
  return [a1 setLastSidebarMode:];
}

id objc_msgSend_setLastSuspendTime_(void *a1, const char *a2, ...)
{
  return [a1 setLastSuspendTime:];
}

id objc_msgSend_setLastUsedNonYearView_(void *a1, const char *a2, ...)
{
  return [a1 setLastUsedNonYearView:];
}

id objc_msgSend_setLastViewMode_(void *a1, const char *a2, ...)
{
  return [a1 setLastViewMode:];
}

id objc_msgSend_setLastViewedDate_(void *a1, const char *a2, ...)
{
  return [a1 setLastViewedDate:];
}

id objc_msgSend_setLastViewedOccurrenceDate_(void *a1, const char *a2, ...)
{
  return [a1 setLastViewedOccurrenceDate:];
}

id objc_msgSend_setLastViewedOccurrenceUID_(void *a1, const char *a2, ...)
{
  return [a1 setLastViewedOccurrenceUID];
}

id objc_msgSend_setLatitude_(void *a1, const char *a2, ...)
{
  return [a1 setLatitude:];
}

id objc_msgSend_setLayout_(void *a1, const char *a2, ...)
{
  return [a1 setLayout:];
}

id objc_msgSend_setLayoutMargins_(void *a1, const char *a2, ...)
{
  return [a1 setLayoutMargins:];
}

id objc_msgSend_setLeftBarButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setLeftBarButtonItem:];
}

id objc_msgSend_setLeftBarButtonItems_(void *a1, const char *a2, ...)
{
  return [a1 setLeftBarButtonItems:];
}

id objc_msgSend_setLineBreakMode_(void *a1, const char *a2, ...)
{
  return [a1 setLineBreakMode:];
}

id objc_msgSend_setLineSpacing_(void *a1, const char *a2, ...)
{
  return [a1 setLineSpacing:];
}

id objc_msgSend_setListViewDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setListViewDelegate:];
}

id objc_msgSend_setLoadContactsAsynchronously_(void *a1, const char *a2, ...)
{
  return [a1 setLoadContactsAsynchronously:];
}

id objc_msgSend_setLocale_(void *a1, const char *a2, ...)
{
  return [a1 setLocale:];
}

id objc_msgSend_setLocations_(void *a1, const char *a2, ...)
{
  return [a1 setLocations:];
}

id objc_msgSend_setLongitude_(void *a1, const char *a2, ...)
{
  return [a1 setLongitude:];
}

id objc_msgSend_setMainView_(void *a1, const char *a2, ...)
{
  return [a1 setMainView:];
}

id objc_msgSend_setMargin_(void *a1, const char *a2, ...)
{
  return [a1 setMargin:];
}

id objc_msgSend_setMask_(void *a1, const char *a2, ...)
{
  return [a1 setMask:];
}

id objc_msgSend_setMaskedCorners_(void *a1, const char *a2, ...)
{
  return [a1 setMaskedCorners:];
}

id objc_msgSend_setMasksToBounds_(void *a1, const char *a2, ...)
{
  return [a1 setMasksToBounds:];
}

id objc_msgSend_setMatchesMonthView_(void *a1, const char *a2, ...)
{
  return [a1 setMatchesMonthView:];
}

id objc_msgSend_setMaxCachedDays_(void *a1, const char *a2, ...)
{
  return [a1 setMaxCachedDays:];
}

id objc_msgSend_setMaxConcurrentOperationCount_(void *a1, const char *a2, ...)
{
  return [a1 setMaxConcurrentOperationCount:];
}

id objc_msgSend_setMaximumPrimaryColumnWidth_(void *a1, const char *a2, ...)
{
  return [a1 setMaximumPrimaryColumnWidth:];
}

id objc_msgSend_setMenu_(void *a1, const char *a2, ...)
{
  return [a1 setMenu:];
}

id objc_msgSend_setMessageSendingComplete_(void *a1, const char *a2, ...)
{
  return [a1 setMessageSendingComplete:];
}

id objc_msgSend_setMessageSendingManager_(void *a1, const char *a2, ...)
{
  return [a1 setMessageSendingManager:];
}

id objc_msgSend_setMinimalMode_(void *a1, const char *a2, ...)
{
  return [a1 setMinimalMode:];
}

id objc_msgSend_setMinimumPressDuration_(void *a1, const char *a2, ...)
{
  return [a1 setMinimumPressDuration:];
}

id objc_msgSend_setMinimumPrimaryColumnWidth_(void *a1, const char *a2, ...)
{
  return [a1 setMinimumPrimaryColumnWidth:];
}

id objc_msgSend_setMinimumScaleFactor_(void *a1, const char *a2, ...)
{
  return [a1 setMinimumScaleFactor:];
}

id objc_msgSend_setMinute_(void *a1, const char *a2, ...)
{
  return [a1 setMinute:];
}

id objc_msgSend_setModalPresentationDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setModalPresentationDelegate:];
}

id objc_msgSend_setModalPresentationStyle_(void *a1, const char *a2, ...)
{
  return [a1 setModalPresentationStyle:];
}

id objc_msgSend_setModalTransitionStyle_(void *a1, const char *a2, ...)
{
  return [a1 setModalTransitionStyle:];
}

id objc_msgSend_setModel_(void *a1, const char *a2, ...)
{
  return [a1 setModel:];
}

id objc_msgSend_setModelSelectedEvent_(void *a1, const char *a2, ...)
{
  return [a1 setModelSelectedEvent:];
}

id objc_msgSend_setModelSelectedEvents_(void *a1, const char *a2, ...)
{
  return [a1 setModelSelectedEvents:];
}

id objc_msgSend_setMonth_(void *a1, const char *a2, ...)
{
  return [a1 setMonth:];
}

id objc_msgSend_setMonthAnimationState_(void *a1, const char *a2, ...)
{
  return [a1 setMonthAnimationState:];
}

id objc_msgSend_setMonthBreakIndex_(void *a1, const char *a2, ...)
{
  return [a1 setMonthBreakIndex:];
}

id objc_msgSend_setMonthCellFrames_(void *a1, const char *a2, ...)
{
  return [a1 setMonthCellFrames:];
}

id objc_msgSend_setMonthFrame_(void *a1, const char *a2, ...)
{
  return [a1 setMonthFrame:];
}

id objc_msgSend_setMonthLabel_(void *a1, const char *a2, ...)
{
  return [a1 setMonthLabel:];
}

id objc_msgSend_setMonthOccurrencesFrame_(void *a1, const char *a2, ...)
{
  return [a1 setMonthOccurrencesFrame:];
}

id objc_msgSend_setMonthOccurrencesSnapshot_(void *a1, const char *a2, ...)
{
  return [a1 setMonthOccurrencesSnapshot];
}

id objc_msgSend_setMonthRowHeight_(void *a1, const char *a2, ...)
{
  return [a1 setMonthRowHeight:];
}

id objc_msgSend_setMonthScrubberFrame_(void *a1, const char *a2, ...)
{
  return [a1 setMonthScrubberFrame:];
}

id objc_msgSend_setMonthSummaryFrames_(void *a1, const char *a2, ...)
{
  return [a1 setMonthSummaryFrames:];
}

id objc_msgSend_setMonthSummarySnapshots_(void *a1, const char *a2, ...)
{
  return [a1 setMonthSummarySnapshots:];
}

id objc_msgSend_setMonthText_isCurrentMonth_(void *a1, const char *a2, ...)
{
  return [a1 setMonthText:isCurrentMonth:];
}

id objc_msgSend_setMonthTextBaselineOffset_(void *a1, const char *a2, ...)
{
  return [a1 setMonthTextBaselineOffset:];
}

id objc_msgSend_setMonthViewEventScaleSize_(void *a1, const char *a2, ...)
{
  return [a1 setMonthViewEventScaleSize:];
}

id objc_msgSend_setMonthViewScaleSize_(void *a1, const char *a2, ...)
{
  return [a1 setMonthViewScaleSize:];
}

id objc_msgSend_setMonthWeekScaleSize_(void *a1, const char *a2, ...)
{
  return [a1 setMonthWeekScaleSize:];
}

id objc_msgSend_setMultiAllDayRoundCorners_(void *a1, const char *a2, ...)
{
  return [a1 setMultiAllDayRoundCorners:];
}

id objc_msgSend_setName_(void *a1, const char *a2, ...)
{
  return [a1 setName:];
}

id objc_msgSend_setNamedLocation_(void *a1, const char *a2, ...)
{
  return [a1 setNamedLocation:];
}

id objc_msgSend_setNanosecond_(void *a1, const char *a2, ...)
{
  return [a1 setNanosecond:];
}

id objc_msgSend_setNavBarStringFromDate_includeMonth_includeYear_(void *a1, const char *a2, ...)
{
  return [a1 setNavBarStringFromDate:includeMonth:includeYear:];
}

id objc_msgSend_setNavDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setNavDelegate:];
}

id objc_msgSend_setNavigationBarHidden_(void *a1, const char *a2, ...)
{
  return [a1 setNavigationBarHidden:];
}

id objc_msgSend_setNavigationBarHidden_animated_(void *a1, const char *a2, ...)
{
  return [a1 setNavigationBarHidden:animated:];
}

id objc_msgSend_setNavigationThrottleOperation_(void *a1, const char *a2, ...)
{
  return [a1 setNavigationThrottleOperation:];
}

id objc_msgSend_setNeedsDisplay(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsDisplay];
}

id objc_msgSend_setNeedsLayout(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsLayout];
}

id objc_msgSend_setNeedsRebuild(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsRebuild];
}

id objc_msgSend_setNeedsRefresh_(void *a1, const char *a2, ...)
{
  return [a1 setNeedsRefresh:];
}

id objc_msgSend_setNeedsReload(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsReload];
}

id objc_msgSend_setNeedsSave_(void *a1, const char *a2, ...)
{
  return [a1 setNeedsSave:];
}

id objc_msgSend_setNeedsUpdateConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsUpdateConfiguration];
}

id objc_msgSend_setNeedsUpdateOfSupportedInterfaceOrientations(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsUpdateOfSupportedInterfaceOrientations];
}

id objc_msgSend_setNotes_(void *a1, const char *a2, ...)
{
  return [a1 setNotes:];
}

id objc_msgSend_setNotification_(void *a1, const char *a2, ...)
{
  return [a1 setNotification:];
}

id objc_msgSend_setNotifyWhenTapOtherEventDuringDragging_(void *a1, const char *a2, ...)
{
  return [a1 setNotifyWhenTapOtherEventDuringDragging:];
}

id objc_msgSend_setNumDaysToShow_(void *a1, const char *a2, ...)
{
  return [a1 setNumDaysToShow:];
}

id objc_msgSend_setNumberOfEvents_(void *a1, const char *a2, ...)
{
  return [a1 setNumberOfEvents:];
}

id objc_msgSend_setNumberOfLines_(void *a1, const char *a2, ...)
{
  return [a1 setNumberOfLines:];
}

id objc_msgSend_setNumberOfNotifications_(void *a1, const char *a2, ...)
{
  return [a1 setNumberOfNotifications:];
}

id objc_msgSend_setNumberOfTapsRequired_(void *a1, const char *a2, ...)
{
  return [a1 setNumberOfTapsRequired:];
}

id objc_msgSend_setObject_atIndexedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 setObject:atIndexedSubscript:];
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setObject:forKey:];
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 setObject:forKeyedSubscript:];
}

id objc_msgSend_setObscuresBackgroundDuringPresentation_(void *a1, const char *a2, ...)
{
  return [a1 setObscuresBackgroundDuringPresentation:];
}

id objc_msgSend_setOccurrence_(void *a1, const char *a2, ...)
{
  return [a1 setOccurrence:];
}

id objc_msgSend_setOccurrenceContainer_(void *a1, const char *a2, ...)
{
  return [a1 setOccurrenceContainer:];
}

id objc_msgSend_setOccurrenceDateIndex_(void *a1, const char *a2, ...)
{
  return [a1 setOccurrenceDateIndex:];
}

id objc_msgSend_setOccurrencePadding_(void *a1, const char *a2, ...)
{
  return [a1 setOccurrencePadding:];
}

id objc_msgSend_setOccurrenceView_(void *a1, const char *a2, ...)
{
  return [a1 setOccurrenceView:];
}

id objc_msgSend_setOccurrences_(void *a1, const char *a2, ...)
{
  return [a1 setOccurrences:];
}

id objc_msgSend_setOccurrences_animated_(void *a1, const char *a2, ...)
{
  return [a1 setOccurrences:animated:];
}

id objc_msgSend_setOn_(void *a1, const char *a2, ...)
{
  return [a1 setOn:];
}

id objc_msgSend_setOpaque_(void *a1, const char *a2, ...)
{
  return [a1 setOpaque:];
}

id objc_msgSend_setOpaqueBackground_(void *a1, const char *a2, ...)
{
  return [a1 setOpaqueBackground:];
}

id objc_msgSend_setOrganizerName_(void *a1, const char *a2, ...)
{
  return [a1 setOrganizerName:];
}

id objc_msgSend_setOrientation_(void *a1, const char *a2, ...)
{
  return [a1 setOrientation:];
}

id objc_msgSend_setOverlayFont_(void *a1, const char *a2, ...)
{
  return [a1 setOverlayFont:];
}

id objc_msgSend_setOverlayFontSize_(void *a1, const char *a2, ...)
{
  return [a1 setOverlayFontSize:];
}

id objc_msgSend_setOverlayMonthText_(void *a1, const char *a2, ...)
{
  return [a1 setOverlayMonthText:];
}

id objc_msgSend_setOverlayShowsMonth_animated_(void *a1, const char *a2, ...)
{
  return [a1 setOverlayShowsMonth:animated:];
}

id objc_msgSend_setOverlaySignificantDatesProvider_(void *a1, const char *a2, ...)
{
  return [a1 setOverlaySignificantDatesProvider:];
}

id objc_msgSend_setOverlayString_(void *a1, const char *a2, ...)
{
  return [a1 setOverlayString:];
}

id objc_msgSend_setOverlayText_(void *a1, const char *a2, ...)
{
  return [a1 setOverlayText:];
}

id objc_msgSend_setOverrideExtendedEdges_(void *a1, const char *a2, ...)
{
  return [a1 setOverrideExtendedEdges:];
}

id objc_msgSend_setOverrideTraitCollection_forChildViewController_(void *a1, const char *a2, ...)
{
  return [a1 setOverrideTraitCollection:forChildViewController:];
}

id objc_msgSend_setPadding_(void *a1, const char *a2, ...)
{
  return [a1 setPadding:];
}

id objc_msgSend_setPaddingCellEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setPaddingCellEnabled:];
}

id objc_msgSend_setPagingEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setPagingEnabled:];
}

id objc_msgSend_setPaletteSafeAreaInsets_(void *a1, const char *a2, ...)
{
  return [a1 setPaletteSafeAreaInsets:];
}

id objc_msgSend_setParent_(void *a1, const char *a2, ...)
{
  return [a1 setParent:];
}

id objc_msgSend_setParticipationStatus_(void *a1, const char *a2, ...)
{
  return [a1 setParticipationStatus:];
}

id objc_msgSend_setPassthroughViews_(void *a1, const char *a2, ...)
{
  return [a1 setPassthroughViews:];
}

id objc_msgSend_setPath_(void *a1, const char *a2, ...)
{
  return [a1 setPath:];
}

id objc_msgSend_setPendingReminderTracker_(void *a1, const char *a2, ...)
{
  return [a1 setPendingReminderTracker:];
}

id objc_msgSend_setPermittedArrowDirections_(void *a1, const char *a2, ...)
{
  return [a1 setPermittedArrowDirections:];
}

id objc_msgSend_setPhoneNumbers_(void *a1, const char *a2, ...)
{
  return [a1 setPhoneNumbers:];
}

id objc_msgSend_setPinchRecognizer_(void *a1, const char *a2, ...)
{
  return [a1 setPinchRecognizer:];
}

id objc_msgSend_setPlaceholder_(void *a1, const char *a2, ...)
{
  return [a1 setPlaceholder:];
}

id objc_msgSend_setPointerInteractionEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setPointerInteractionEnabled:];
}

id objc_msgSend_setPointerStyleProvider_(void *a1, const char *a2, ...)
{
  return [a1 setPointerStyleProvider:];
}

id objc_msgSend_setPredicatePropertyLoadMode_(void *a1, const char *a2, ...)
{
  return [a1 setPredicatePropertyLoadMode:];
}

id objc_msgSend_setPreferModalPresentation_(void *a1, const char *a2, ...)
{
  return [a1 setPreferModalPresentation:];
}

id objc_msgSend_setPreferredBackgroundColor_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredBackgroundColor:];
}

id objc_msgSend_setPreferredContentSize_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredContentSize:];
}

id objc_msgSend_setPreferredDisplayMode_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredDisplayMode:];
}

id objc_msgSend_setPreferredFrameRateRange_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredFrameRateRange:];
}

id objc_msgSend_setPreferredHeight_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredHeight:];
}

id objc_msgSend_setPreferredRange_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredRange:];
}

id objc_msgSend_setPreferredReloadStartDate_endDate_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredReloadStartDate:endDate:];
}

id objc_msgSend_setPreferredSymbolConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredSymbolConfiguration:];
}

id objc_msgSend_setPreferredTintMode_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredTintMode:];
}

id objc_msgSend_setPrefersScaledContent_(void *a1, const char *a2, ...)
{
  return [a1 setPrefersScaledContent:];
}

id objc_msgSend_setPrefersShadow_(void *a1, const char *a2, ...)
{
  return [a1 setPrefersShadow:];
}

id objc_msgSend_setPrefersToActivateForTargetContentIdentifierPredicate_(void *a1, const char *a2, ...)
{
  return [a1 setPrefersToActivateForTargetContentIdentifierPredicate:];
}

id objc_msgSend_setPrefetchDataSource_(void *a1, const char *a2, ...)
{
  return [a1 setPrefetchDataSource:];
}

id objc_msgSend_setPreloadExtraDays_(void *a1, const char *a2, ...)
{
  return [a1 setPreloadExtraDays:];
}

id objc_msgSend_setPresentedOverWholeApp_(void *a1, const char *a2, ...)
{
  return [a1 setPresentedOverWholeApp:];
}

id objc_msgSend_setPresentedViewController_(void *a1, const char *a2, ...)
{
  return [a1 setPresentedViewController:];
}

id objc_msgSend_setPresentedViewControllersState_(void *a1, const char *a2, ...)
{
  return [a1 setPresentedViewControllersState:];
}

id objc_msgSend_setPresentingViewController_(void *a1, const char *a2, ...)
{
  return [a1 setPresentingViewController:];
}

id objc_msgSend_setPresentsWithGesture_(void *a1, const char *a2, ...)
{
  return [a1 setPresentsWithGesture:];
}

id objc_msgSend_setPreservesSuperviewLayoutMargins_(void *a1, const char *a2, ...)
{
  return [a1 setPreservesSuperviewLayoutMargins:];
}

id objc_msgSend_setPressed_(void *a1, const char *a2, ...)
{
  return [a1 setPressed:];
}

id objc_msgSend_setPreventScrollingForNextViewAppear_(void *a1, const char *a2, ...)
{
  return [a1 setPreventScrollingForNextViewAppear:];
}

id objc_msgSend_setPrimaryEdge_(void *a1, const char *a2, ...)
{
  return [a1 setPrimaryEdge:];
}

id objc_msgSend_setProcessedEventData_(void *a1, const char *a2, ...)
{
  return [a1 setProcessedEventData:];
}

id objc_msgSend_setProposedStartDateChanged_(void *a1, const char *a2, ...)
{
  return [a1 setProposedStartDateChanged:];
}

id objc_msgSend_setProposedStartDateStatus_(void *a1, const char *a2, ...)
{
  return [a1 setProposedStartDateStatus:];
}

id objc_msgSend_setProposedTimeAttendee_(void *a1, const char *a2, ...)
{
  return [a1 setProposedTimeAttendee:];
}

id objc_msgSend_setPushDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setPushDelegate:];
}

id objc_msgSend_setQueue_(void *a1, const char *a2, ...)
{
  return [a1 setQueue:];
}

id objc_msgSend_setReceiveTapsInHeader_(void *a1, const char *a2, ...)
{
  return [a1 setReceiveTapsInHeader:];
}

id objc_msgSend_setRecurrenceEnd_(void *a1, const char *a2, ...)
{
  return [a1 setRecurrenceEnd:];
}

id objc_msgSend_setReduceLayoutProcessingForAnimation_(void *a1, const char *a2, ...)
{
  return [a1 setReduceLayoutProcessingForAnimation:];
}

id objc_msgSend_setRefreshControl_(void *a1, const char *a2, ...)
{
  return [a1 setRefreshControl:];
}

id objc_msgSend_setReportProblemDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setReportProblemDelegate:];
}

id objc_msgSend_setReportProblemNavigationController_(void *a1, const char *a2, ...)
{
  return [a1 setReportProblemNavigationController:];
}

id objc_msgSend_setResponseComment_(void *a1, const char *a2, ...)
{
  return [a1 setResponseComment:];
}

id objc_msgSend_setRightBarButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setRightBarButtonItem:];
}

id objc_msgSend_setRightBarButtonItems_(void *a1, const char *a2, ...)
{
  return [a1 setRightBarButtonItems:];
}

id objc_msgSend_setRightBarButtonItems_animated_(void *a1, const char *a2, ...)
{
  return [a1 setRightBarButtonItems:animated:];
}

id objc_msgSend_setRightBorderInsetsOccurrences_(void *a1, const char *a2, ...)
{
  return [a1 setRightBorderInsetsOccurrences:];
}

id objc_msgSend_setRootViewController_(void *a1, const char *a2, ...)
{
  return [a1 setRootViewController:];
}

id objc_msgSend_setRotatingToLandscape_(void *a1, const char *a2, ...)
{
  return [a1 setRotatingToLandscape:];
}

id objc_msgSend_setRotatingToPortrait_(void *a1, const char *a2, ...)
{
  return [a1 setRotatingToPortrait:];
}

id objc_msgSend_setRoundedRectSize_(void *a1, const char *a2, ...)
{
  return [a1 setRoundedRectSize:];
}

id objc_msgSend_setRoundingType_(void *a1, const char *a2, ...)
{
  return [a1 setRoundingType:];
}

id objc_msgSend_setRowHeight_(void *a1, const char *a2, ...)
{
  return [a1 setRowHeight:];
}

id objc_msgSend_setSaveBlock_(void *a1, const char *a2, ...)
{
  return [a1 setSaveBlock:];
}

id objc_msgSend_setScale_(void *a1, const char *a2, ...)
{
  return [a1 setScale:];
}

id objc_msgSend_setSceneIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setSceneIdentifier:];
}

id objc_msgSend_setSceneTitleNeedsUpdate(void *a1, const char *a2, ...)
{
  return _[a1 setSceneTitleNeedsUpdate];
}

id objc_msgSend_setScrollEdgeAppearance_(void *a1, const char *a2, ...)
{
  return [a1 setScrollEdgeAppearance:];
}

id objc_msgSend_setScrollEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setScrollEnabled:];
}

id objc_msgSend_setScrollerContentOffset_(void *a1, const char *a2, ...)
{
  return [a1 setScrollerContentOffset:];
}

id objc_msgSend_setScrollerContentSize_(void *a1, const char *a2, ...)
{
  return [a1 setScrollerContentSize:];
}

id objc_msgSend_setScrollingBounds_(void *a1, const char *a2, ...)
{
  return [a1 setScrollingBounds:];
}

id objc_msgSend_setScrollingContentLength_(void *a1, const char *a2, ...)
{
  return [a1 setScrollingContentLength:];
}

id objc_msgSend_setScrollsToTop_(void *a1, const char *a2, ...)
{
  return [a1 setScrollsToTop:];
}

id objc_msgSend_setScrubber_(void *a1, const char *a2, ...)
{
  return [a1 setScrubber:];
}

id objc_msgSend_setSearchBar_(void *a1, const char *a2, ...)
{
  return [a1 setSearchBar:];
}

id objc_msgSend_setSearchResultsDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setSearchResultsDelegate:];
}

id objc_msgSend_setSearchResultsUpdater_(void *a1, const char *a2, ...)
{
  return [a1 setSearchResultsUpdater:];
}

id objc_msgSend_setSearchResultsViewController_(void *a1, const char *a2, ...)
{
  return [a1 setSearchResultsViewController:];
}

id objc_msgSend_setSearchString_(void *a1, const char *a2, ...)
{
  return [a1 setSearchString:];
}

id objc_msgSend_setSecond_(void *a1, const char *a2, ...)
{
  return [a1 setSecond:];
}

id objc_msgSend_setSectionHeaderHeight_(void *a1, const char *a2, ...)
{
  return [a1 setSectionHeaderHeight:];
}

id objc_msgSend_setSectionHeaderTopPadding_(void *a1, const char *a2, ...)
{
  return [a1 setSectionHeaderTopPadding:];
}

id objc_msgSend_setSectionTitle_(void *a1, const char *a2, ...)
{
  return [a1 setSectionTitle:];
}

id objc_msgSend_setSegmentedControl_(void *a1, const char *a2, ...)
{
  return [a1 setSegmentedControl:];
}

id objc_msgSend_setSelected_(void *a1, const char *a2, ...)
{
  return [a1 setSelected:];
}

id objc_msgSend_setSelectedAction_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedAction:];
}

id objc_msgSend_setSelectedCalendars_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedCalendars:];
}

id objc_msgSend_setSelectedCalendarsAndRequestPreferenceSave_reason_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedCalendarsAndRequestPreferenceSave:reason:];
}

id objc_msgSend_setSelectedCopy_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedCopy];
}

id objc_msgSend_setSelectedDate_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedDate:];
}

id objc_msgSend_setSelectedDate_animated_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedDate:animated:];
}

id objc_msgSend_setSelectedDateAndFirstVisibleHeaderDate_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedDateAndFirstVisibleHeaderDate:];
}

id objc_msgSend_setSelectedDateChangesDelayedUntilAfterTransition_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedDateChangesDelayedUntilAfterTransition:];
}

id objc_msgSend_setSelectedDateWithoutScrolling_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedDateWithoutScrolling:];
}

id objc_msgSend_setSelectedDay_animated_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedDay:animated:];
}

id objc_msgSend_setSelectedIndex_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedIndex:];
}

id objc_msgSend_setSelectedOccurrence_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedOccurrence:];
}

id objc_msgSend_setSelectedOccurrence_forceChange_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedOccurrence:forceChange:];
}

id objc_msgSend_setSelectedOccurrences_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedOccurrences:];
}

id objc_msgSend_setSelectedOccurrences_forceChange_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedOccurrences:forceChange:];
}

id objc_msgSend_setSelectedSegmentIndex_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedSegmentIndex:];
}

id objc_msgSend_setSelectionStyle_(void *a1, const char *a2, ...)
{
  return [a1 setSelectionStyle:];
}

id objc_msgSend_setSeparatorEdges_(void *a1, const char *a2, ...)
{
  return [a1 setSeparatorEdges:];
}

id objc_msgSend_setSeparatorInset_(void *a1, const char *a2, ...)
{
  return [a1 setSeparatorInset:];
}

id objc_msgSend_setSeparatorStyle_(void *a1, const char *a2, ...)
{
  return [a1 setSeparatorStyle:];
}

id objc_msgSend_setShadowBlur_(void *a1, const char *a2, ...)
{
  return [a1 setShadowBlur:];
}

id objc_msgSend_setShadowColor_(void *a1, const char *a2, ...)
{
  return [a1 setShadowColor:];
}

id objc_msgSend_setShadowOffset_(void *a1, const char *a2, ...)
{
  return [a1 setShadowOffset:];
}

id objc_msgSend_setShadowOpacity_(void *a1, const char *a2, ...)
{
  return [a1 setShadowOpacity:];
}

id objc_msgSend_setShadowRadius_(void *a1, const char *a2, ...)
{
  return [a1 setShadowRadius:];
}

id objc_msgSend_setShouldAnnotateAppEntities_(void *a1, const char *a2, ...)
{
  return [a1 setShouldAnnotateAppEntities:];
}

id objc_msgSend_setShouldAutoscrollAfterAppearance_(void *a1, const char *a2, ...)
{
  return [a1 setShouldAutoscrollAfterAppearance:];
}

id objc_msgSend_setShouldDisplayJumpToTodayTipTo_(void *a1, const char *a2, ...)
{
  return [a1 setShouldDisplayJumpToTodayTipTo:];
}

id objc_msgSend_setShouldHideInlineFocusBanner_(void *a1, const char *a2, ...)
{
  return [a1 setShouldHideInlineFocusBanner:];
}

id objc_msgSend_setShouldLeaveSearchString_(void *a1, const char *a2, ...)
{
  return [a1 setShouldLeaveSearchString:];
}

id objc_msgSend_setShouldLogVisibleEvents_(void *a1, const char *a2, ...)
{
  return [a1 setShouldLogVisibleEvents:];
}

id objc_msgSend_setShouldRespondToApplicationDidBecomeActiveStateChange_(void *a1, const char *a2, ...)
{
  return [a1 setShouldRespondToApplicationDidBecomeActiveStateChange:];
}

id objc_msgSend_setShouldShowLinkedContacts_(void *a1, const char *a2, ...)
{
  return [a1 setShouldShowLinkedContacts:];
}

id objc_msgSend_setShouldShowMonthTitleHUDWhenScrolling_(void *a1, const char *a2, ...)
{
  return [a1 setShouldShowMonthTitleHUDWhenScrolling:];
}

id objc_msgSend_setShouldShowOverlay_(void *a1, const char *a2, ...)
{
  return [a1 setShouldShowOverlay:];
}

id objc_msgSend_setShouldUseVerticalLayout_(void *a1, const char *a2, ...)
{
  return [a1 setShouldUseVerticalLayout:];
}

id objc_msgSend_setShowDayAsList_(void *a1, const char *a2, ...)
{
  return [a1 setShowDayAsList:];
}

id objc_msgSend_setShowDayName_(void *a1, const char *a2, ...)
{
  return [a1 setShowDayName:];
}

id objc_msgSend_setShowDetailAccessories_(void *a1, const char *a2, ...)
{
  return [a1 setShowDetailAccessories:];
}

id objc_msgSend_setShowDividers_(void *a1, const char *a2, ...)
{
  return [a1 setShowDividers:];
}

id objc_msgSend_setShowEventDetailsOperationQueue_(void *a1, const char *a2, ...)
{
  return [a1 setShowEventDetailsOperationQueue:];
}

id objc_msgSend_setShowEventWhenAdded_(void *a1, const char *a2, ...)
{
  return [a1 setShowEventWhenAdded:];
}

id objc_msgSend_setShowFilteredData_(void *a1, const char *a2, ...)
{
  return [a1 setShowFilteredData:];
}

id objc_msgSend_setShowIdentity_(void *a1, const char *a2, ...)
{
  return [a1 setShowIdentity:];
}

id objc_msgSend_setShowListView_(void *a1, const char *a2, ...)
{
  return [a1 setShowListView:];
}

id objc_msgSend_setShowMonthAsDivided_(void *a1, const char *a2, ...)
{
  return [a1 setShowMonthAsDivided:];
}

id objc_msgSend_setShowNoContentString_(void *a1, const char *a2, ...)
{
  return [a1 setShowNoContentString:];
}

id objc_msgSend_setShowOverlay_(void *a1, const char *a2, ...)
{
  return [a1 setShowOverlay:];
}

id objc_msgSend_setShowSeparatorLines_(void *a1, const char *a2, ...)
{
  return [a1 setShowSeparatorLines:];
}

id objc_msgSend_setShowViewControllersWhenReadyQueue_(void *a1, const char *a2, ...)
{
  return [a1 setShowViewControllersWhenReadyQueue];
}

id objc_msgSend_setShowWeekNumber_(void *a1, const char *a2, ...)
{
  return [a1 setShowWeekNumber:];
}

id objc_msgSend_setShowWeekdayLabel_(void *a1, const char *a2, ...)
{
  return [a1 setShowWeekdayLabel:];
}

id objc_msgSend_setShowingOverriddenToolbarItems_(void *a1, const char *a2, ...)
{
  return [a1 setShowingOverriddenToolbarItems:];
}

id objc_msgSend_setShowingTomorrowSection_(void *a1, const char *a2, ...)
{
  return [a1 setShowingTomorrowSection:];
}

id objc_msgSend_setShowsActivityIndicator_(void *a1, const char *a2, ...)
{
  return [a1 setShowsActivityIndicator:];
}

id objc_msgSend_setShowsBanner_(void *a1, const char *a2, ...)
{
  return [a1 setShowsBanner:];
}

id objc_msgSend_setShowsCancelButton_animated_(void *a1, const char *a2, ...)
{
  return [a1 setShowsCancelButton:animated:];
}

id objc_msgSend_setShowsCommentPrompt_animated_initialValue_(void *a1, const char *a2, ...)
{
  return [a1 setShowsCommentPrompt:animated:initialValue:];
}

id objc_msgSend_setShowsCompletedRemindersSetting_(void *a1, const char *a2, ...)
{
  return [a1 setShowsCompletedRemindersSetting:];
}

id objc_msgSend_setShowsDeclinedEventsSetting_(void *a1, const char *a2, ...)
{
  return [a1 setShowsDeclinedEventsSetting:];
}

id objc_msgSend_setShowsDetectedConferenceItem_(void *a1, const char *a2, ...)
{
  return [a1 setShowsDetectedConferenceItem:];
}

id objc_msgSend_setShowsDoneButton_(void *a1, const char *a2, ...)
{
  return [a1 setShowsDoneButton:];
}

id objc_msgSend_setShowsFirstDayOfMonthLabel_animated_(void *a1, const char *a2, ...)
{
  return [a1 setShowsFirstDayOfMonthLabel:animated:];
}

id objc_msgSend_setShowsHalfOfScrolledEvents_(void *a1, const char *a2, ...)
{
  return [a1 setShowsHalfOfScrolledEvents:];
}

id objc_msgSend_setShowsHorizontalScrollIndicator_(void *a1, const char *a2, ...)
{
  return [a1 setShowsHorizontalScrollIndicator:];
}

id objc_msgSend_setShowsLargeContentViewer_(void *a1, const char *a2, ...)
{
  return [a1 setShowsLargeContentViewer:];
}

id objc_msgSend_setShowsLeftBorder_(void *a1, const char *a2, ...)
{
  return [a1 setShowsLeftBorder:];
}

id objc_msgSend_setShowsMultiDay_(void *a1, const char *a2, ...)
{
  return [a1 setShowsMultiDay:];
}

id objc_msgSend_setShowsRightBorder_(void *a1, const char *a2, ...)
{
  return [a1 setShowsRightBorder:];
}

id objc_msgSend_setShowsTimeLine_(void *a1, const char *a2, ...)
{
  return [a1 setShowsTimeLine:];
}

id objc_msgSend_setShowsTimeMarker_(void *a1, const char *a2, ...)
{
  return [a1 setShowsTimeMarker:];
}

id objc_msgSend_setShowsTimeMarkerExtension_(void *a1, const char *a2, ...)
{
  return [a1 setShowsTimeMarkerExtension:];
}

id objc_msgSend_setShowsVerticalScrollIndicator_(void *a1, const char *a2, ...)
{
  return [a1 setShowsVerticalScrollIndicator:];
}

id objc_msgSend_setShowsWeekNumber_(void *a1, const char *a2, ...)
{
  return [a1 setShowsWeekNumber:];
}

id objc_msgSend_setSignificantDatesChangedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setSignificantDatesChangedHandler:];
}

id objc_msgSend_setSourceRect_(void *a1, const char *a2, ...)
{
  return [a1 setSourceRect:];
}

id objc_msgSend_setSourceView_(void *a1, const char *a2, ...)
{
  return [a1 setSourceView:];
}

id objc_msgSend_setSourceViewController_(void *a1, const char *a2, ...)
{
  return [a1 setSourceViewController:];
}

id objc_msgSend_setSpeed_(void *a1, const char *a2, ...)
{
  return [a1 setSpeed:];
}

id objc_msgSend_setSplashScreenCompletionAction_(void *a1, const char *a2, ...)
{
  return [a1 setSplashScreenCompletionAction:];
}

id objc_msgSend_setSplitLeftEdge_splitRightEdge_(void *a1, const char *a2, ...)
{
  return [a1 setSplitLeftEdge:splitRightEdge:];
}

id objc_msgSend_setSplitStateOpen_(void *a1, const char *a2, ...)
{
  return [a1 setSplitStateOpen:];
}

id objc_msgSend_setSpringLoaded_(void *a1, const char *a2, ...)
{
  return [a1 setSpringLoaded:];
}

id objc_msgSend_setStartDate_(void *a1, const char *a2, ...)
{
  return [a1 setStartDate:];
}

id objc_msgSend_setStartDate_endDate_dayCount_(void *a1, const char *a2, ...)
{
  return [a1 setStartDate:endDate:dayCount:];
}

id objc_msgSend_setStartDate_endDate_dayCount_todayDay_reload_(void *a1, const char *a2, ...)
{
  return [a1 setStartDate:endDate:dayCount:todayDay:reload:];
}

id objc_msgSend_setStartDateWithDateComponents_(void *a1, const char *a2, ...)
{
  return [a1 setStartDateWithDateComponents:];
}

id objc_msgSend_setStartPoint_(void *a1, const char *a2, ...)
{
  return [a1 setStartPoint:];
}

id objc_msgSend_setStartingFirstVisibleSecond_(void *a1, const char *a2, ...)
{
  return [a1 setStartingFirstVisibleSecond:];
}

id objc_msgSend_setState_(void *a1, const char *a2, ...)
{
  return [a1 setState:];
}

id objc_msgSend_setStatusChanged_(void *a1, const char *a2, ...)
{
  return [a1 setStatusChanged:];
}

id objc_msgSend_setString_(void *a1, const char *a2, ...)
{
  return [a1 setString:];
}

id objc_msgSend_setStrings_overlayStrings_weekNumberString_todayInWeek_(void *a1, const char *a2, ...)
{
  return [a1 setStrings:overlayStrings:weekNumberString:todayInWeek:];
}

id objc_msgSend_setStructuredLocation_(void *a1, const char *a2, ...)
{
  return [a1 setStructuredLocation];
}

id objc_msgSend_setSuggestionKey_(void *a1, const char *a2, ...)
{
  return [a1 setSuggestionKey:];
}

id objc_msgSend_setSummary_(void *a1, const char *a2, ...)
{
  return [a1 setSummary:];
}

id objc_msgSend_setSummaryData_(void *a1, const char *a2, ...)
{
  return [a1 setSummaryData:];
}

id objc_msgSend_setSupportsNavigation_(void *a1, const char *a2, ...)
{
  return [a1 setSupportsNavigation:];
}

id objc_msgSend_setSupportsPhoneCall_(void *a1, const char *a2, ...)
{
  return [a1 setSupportsPhoneCall:];
}

id objc_msgSend_setSuppressLayout_(void *a1, const char *a2, ...)
{
  return [a1 setSuppressLayout:];
}

id objc_msgSend_setSuppressViewAdjustments_(void *a1, const char *a2, ...)
{
  return [a1 setSuppressViewAdjustments:];
}

id objc_msgSend_setSuspendEventLoading_(void *a1, const char *a2, ...)
{
  return [a1 setSuspendEventLoading:];
}

id objc_msgSend_setSuspended_(void *a1, const char *a2, ...)
{
  return [a1 setSuspended:];
}

id objc_msgSend_setSwitcherDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setSwitcherDelegate:];
}

id objc_msgSend_setTableHeaderView_(void *a1, const char *a2, ...)
{
  return [a1 setTableHeaderView:];
}

id objc_msgSend_setTableView_(void *a1, const char *a2, ...)
{
  return [a1 setTableView:];
}

id objc_msgSend_setTemporarilyHideWeekNumber_(void *a1, const char *a2, ...)
{
  return [a1 setTemporarilyHideWeekNumber:];
}

id objc_msgSend_setText_(void *a1, const char *a2, ...)
{
  return [a1 setText:];
}

id objc_msgSend_setTextAlignment_(void *a1, const char *a2, ...)
{
  return [a1 setTextAlignment:];
}

id objc_msgSend_setTextColor_(void *a1, const char *a2, ...)
{
  return [a1 setTextColor:];
}

id objc_msgSend_setTextFrameWidthAdjustment_(void *a1, const char *a2, ...)
{
  return [a1 setTextFrameWidthAdjustment:];
}

id objc_msgSend_setTextOffsetFromCircle_(void *a1, const char *a2, ...)
{
  return [a1 setTextOffsetFromCircle];
}

id objc_msgSend_setTextYOffset_(void *a1, const char *a2, ...)
{
  return [a1 setTextYOffset:];
}

id objc_msgSend_setTimeImplicitlySet_(void *a1, const char *a2, ...)
{
  return [a1 setTimeImplicitlySet:];
}

id objc_msgSend_setTimeInterval_(void *a1, const char *a2, ...)
{
  return [a1 setTimeInterval:];
}

id objc_msgSend_setTimeMarkerExtensionColor_(void *a1, const char *a2, ...)
{
  return [a1 setTimeMarkerExtensionColor:];
}

id objc_msgSend_setTimeMarkerTodayDay_(void *a1, const char *a2, ...)
{
  return [a1 setTimeMarkerTodayDay:];
}

id objc_msgSend_setTimeStyle_(void *a1, const char *a2, ...)
{
  return [a1 setTimeStyle:];
}

id objc_msgSend_setTimeZone_(void *a1, const char *a2, ...)
{
  return [a1 setTimeZone:];
}

id objc_msgSend_setTimer_(void *a1, const char *a2, ...)
{
  return [a1 setTimer:];
}

id objc_msgSend_setTintColor_(void *a1, const char *a2, ...)
{
  return [a1 setTintColor:];
}

id objc_msgSend_setTitle_(void *a1, const char *a2, ...)
{
  return [a1 setTitle:];
}

id objc_msgSend_setTitle_forState_(void *a1, const char *a2, ...)
{
  return [a1 setTitle:forState:];
}

id objc_msgSend_setTitleAlignment_(void *a1, const char *a2, ...)
{
  return [a1 setTitleAlignment:];
}

id objc_msgSend_setTitleColor_forState_(void *a1, const char *a2, ...)
{
  return [a1 setTitleColor:forState:];
}

id objc_msgSend_setTitleLineBreakMode_(void *a1, const char *a2, ...)
{
  return [a1 setTitleLineBreakMode:];
}

id objc_msgSend_setTitleTextAttributes_forState_(void *a1, const char *a2, ...)
{
  return [a1 setTitleTextAttributes:forState:];
}

id objc_msgSend_setTitleView_(void *a1, const char *a2, ...)
{
  return [a1 setTitleView:];
}

id objc_msgSend_setToEndState(void *a1, const char *a2, ...)
{
  return _[a1 setToEndState];
}

id objc_msgSend_setToStartState(void *a1, const char *a2, ...)
{
  return _[a1 setToStartState];
}

id objc_msgSend_setToValue_(void *a1, const char *a2, ...)
{
  return [a1 setToValue:];
}

id objc_msgSend_setTodayBarButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setTodayBarButtonItem:];
}

id objc_msgSend_setTodayButtonVisible_(void *a1, const char *a2, ...)
{
  return [a1 setTodayButtonVisible:];
}

id objc_msgSend_setTodayIndex_(void *a1, const char *a2, ...)
{
  return [a1 setTodayIndex:];
}

id objc_msgSend_setToolbarHidden_(void *a1, const char *a2, ...)
{
  return [a1 setToolbarHidden:];
}

id objc_msgSend_setToolbarHidden_animated_(void *a1, const char *a2, ...)
{
  return [a1 setToolbarHidden:animated:];
}

id objc_msgSend_setToolbarItems_(void *a1, const char *a2, ...)
{
  return [a1 setToolbarItems:];
}

id objc_msgSend_setToolbarItems_animated_(void *a1, const char *a2, ...)
{
  return [a1 setToolbarItems:animated:];
}

id objc_msgSend_setTopInset_(void *a1, const char *a2, ...)
{
  return [a1 setTopInset:];
}

id objc_msgSend_setTopPinningProximity_(void *a1, const char *a2, ...)
{
  return [a1 setTopPinningProximity:];
}

id objc_msgSend_setTopView_(void *a1, const char *a2, ...)
{
  return [a1 setTopView:];
}

id objc_msgSend_setTotalEventUnits_(void *a1, const char *a2, ...)
{
  return [a1 setTotalEventUnits:];
}

id objc_msgSend_setTotalRowCount_(void *a1, const char *a2, ...)
{
  return [a1 setTotalRowCount:];
}

id objc_msgSend_setTransform_(void *a1, const char *a2, ...)
{
  return [a1 setTransform:];
}

id objc_msgSend_setTransitioningDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setTransitioningDelegate:];
}

id objc_msgSend_setTranslatesAutoresizingMaskIntoConstraints_(void *a1, const char *a2, ...)
{
  return [a1 setTranslatesAutoresizingMaskIntoConstraints:];
}

id objc_msgSend_setTravelTimeSubviewHeightInPoints_(void *a1, const char *a2, ...)
{
  return [a1 setTravelTimeSubviewHeightInPoints:];
}

id objc_msgSend_setUnderlineThickness_(void *a1, const char *a2, ...)
{
  return [a1 setUnderlineThickness:];
}

id objc_msgSend_setUnderlineThickness_forOverlayStringAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 setUnderlineThickness:forOverlayStringAtIndex:];
}

id objc_msgSend_setUndoableEditor_(void *a1, const char *a2, ...)
{
  return [a1 setUndoableEditor:];
}

id objc_msgSend_setUnselectedCalendars_(void *a1, const char *a2, ...)
{
  return [a1 setUnselectedCalendars:];
}

id objc_msgSend_setUntimedDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setUntimedDelegate:];
}

id objc_msgSend_setUp(void *a1, const char *a2, ...)
{
  return _[a1 setUp];
}

id objc_msgSend_setUpViewConstraints(void *a1, const char *a2, ...)
{
  return _[a1 setUpViewConstraints];
}

id objc_msgSend_setUseCustomDayFrames_(void *a1, const char *a2, ...)
{
  return [a1 setUseCustomDayFrames:];
}

id objc_msgSend_setUseLayoutMargins_(void *a1, const char *a2, ...)
{
  return [a1 setUseLayoutMargins:];
}

id objc_msgSend_setUseMultiDayHeaderStyle_(void *a1, const char *a2, ...)
{
  return [a1 setUseMultiDayHeaderStyle:];
}

id objc_msgSend_setUseMultiDayStyle_(void *a1, const char *a2, ...)
{
  return [a1 setUseMultiDayStyle:];
}

id objc_msgSend_setUseTodayColors_(void *a1, const char *a2, ...)
{
  return [a1 setUseTodayColors:];
}

id objc_msgSend_setUserActivity_(void *a1, const char *a2, ...)
{
  return [a1 setUserActivity:];
}

id objc_msgSend_setUserInteractionEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setUserInteractionEnabled:];
}

id objc_msgSend_setUserNotificationCenter_(void *a1, const char *a2, ...)
{
  return [a1 setUserNotificationCenter:];
}

id objc_msgSend_setUsesHorizontalDragLocking_(void *a1, const char *a2, ...)
{
  return [a1 setUsesHorizontalDragLocking:];
}

id objc_msgSend_setUsesRoundedRectInsteadOfCircle_(void *a1, const char *a2, ...)
{
  return [a1 setUsesRoundedRectInsteadOfCircle:];
}

id objc_msgSend_setUsesSmallText_(void *a1, const char *a2, ...)
{
  return [a1 setUsesSmallText:];
}

id objc_msgSend_setUsesTextYOffsetWithoutAdjustmentForOverlay_(void *a1, const char *a2, ...)
{
  return [a1 setUsesTextYOffsetWithoutAdjustmentForOverlay:];
}

id objc_msgSend_setUsesXDragOffsetInCancelRegion_(void *a1, const char *a2, ...)
{
  return [a1 setUsesXDragOffsetInCancelRegion:];
}

id objc_msgSend_setValue_forKeyPath_(void *a1, const char *a2, ...)
{
  return [a1 setValue:forKeyPath:];
}

id objc_msgSend_setVerticallyCompressedState_(void *a1, const char *a2, ...)
{
  return [a1 setVerticallyCompressedState:];
}

id objc_msgSend_setView_(void *a1, const char *a2, ...)
{
  return [a1 setView:];
}

id objc_msgSend_setViewController_(void *a1, const char *a2, ...)
{
  return [a1 setViewController:];
}

id objc_msgSend_setViewController_forColumn_(void *a1, const char *a2, ...)
{
  return [a1 setViewController:forColumn:];
}

id objc_msgSend_setViewControllerTitleForSelectedEventInSection_(void *a1, const char *a2, ...)
{
  return [a1 setViewControllerTitleForSelectedEventInSection:];
}

id objc_msgSend_setViewControllers_(void *a1, const char *a2, ...)
{
  return [a1 setViewControllers:];
}

id objc_msgSend_setViewControllers_animated_(void *a1, const char *a2, ...)
{
  return [a1 setViewControllers:animated:];
}

id objc_msgSend_setViewIsVisible_(void *a1, const char *a2, ...)
{
  return [a1 setViewIsVisible:];
}

id objc_msgSend_setViewSwitcherLayoutHandler_(void *a1, const char *a2, ...)
{
  return [a1 setViewSwitcherLayoutHandler:];
}

id objc_msgSend_setViewsDimmed_forEvent_(void *a1, const char *a2, ...)
{
  return [a1 setViewsDimmed:forEvent:];
}

id objc_msgSend_setVisible_(void *a1, const char *a2, ...)
{
  return [a1 setVisible:];
}

id objc_msgSend_setVisibleGroups_(void *a1, const char *a2, ...)
{
  return [a1 setVisibleGroups:];
}

id objc_msgSend_setWeek_(void *a1, const char *a2, ...)
{
  return [a1 setWeek:];
}

id objc_msgSend_setWeekAllDayBaselineForLargeFormatWeekView_(void *a1, const char *a2, ...)
{
  return [a1 setWeekAllDayBaselineForLargeFormatWeekView];
}

id objc_msgSend_setWeekAllDayOccurrenceHeight_(void *a1, const char *a2, ...)
{
  return [a1 setWeekAllDayOccurrenceHeight:];
}

id objc_msgSend_setWeekAllDayOccurrenceHeightSmallText_(void *a1, const char *a2, ...)
{
  return [a1 setWeekAllDayOccurrenceHeightSmallText:];
}

id objc_msgSend_setWeekDayInitialsDay_(void *a1, const char *a2, ...)
{
  return [a1 setWeekDayInitialsDay:];
}

id objc_msgSend_setWeekDayInitialsMonth_(void *a1, const char *a2, ...)
{
  return [a1 setWeekDayInitialsMonth];
}

id objc_msgSend_setWeekDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setWeekDelegate:];
}

id objc_msgSend_setWeekNumberText_(void *a1, const char *a2, ...)
{
  return [a1 setWeekNumberText:];
}

id objc_msgSend_setWeekStartDate_(void *a1, const char *a2, ...)
{
  return [a1 setWeekStartDate:];
}

id objc_msgSend_setWeekViewFirstVisibleSecond_(void *a1, const char *a2, ...)
{
  return [a1 setWeekViewFirstVisibleSecond:];
}

id objc_msgSend_setWeekViewHourScale_(void *a1, const char *a2, ...)
{
  return [a1 setWeekViewHourScale:];
}

id objc_msgSend_setWeekViews_(void *a1, const char *a2, ...)
{
  return [a1 setWeekViews:];
}

id objc_msgSend_setWeekday_(void *a1, const char *a2, ...)
{
  return [a1 setWeekday:];
}

id objc_msgSend_setWeekdayHeaderFillsHalfWidth_(void *a1, const char *a2, ...)
{
  return [a1 setWeekdayHeaderFillsHalfWidth:];
}

id objc_msgSend_setWeekdayHeaderMovedBeyondLeftEdge_(void *a1, const char *a2, ...)
{
  return [a1 setWeekdayHeaderMovedBeyondLeftEdge:];
}

id objc_msgSend_setWeekdayHeaderVisible_(void *a1, const char *a2, ...)
{
  return [a1 setWeekdayHeaderVisible:];
}

id objc_msgSend_setWeekendColor_(void *a1, const char *a2, ...)
{
  return [a1 setWeekendColor:];
}

id objc_msgSend_setWeekendIndices_(void *a1, const char *a2, ...)
{
  return [a1 setWeekendIndices:];
}

id objc_msgSend_setWidth_(void *a1, const char *a2, ...)
{
  return [a1 setWidth:];
}

id objc_msgSend_setWidth_forSegmentAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 setWidth:forSegmentAtIndex:];
}

id objc_msgSend_setWindowScene_(void *a1, const char *a2, ...)
{
  return [a1 setWindowScene:];
}

id objc_msgSend_setWithArray_(void *a1, const char *a2, ...)
{
  return [a1 setWithArray:];
}

id objc_msgSend_setWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 setWithCapacity:];
}

id objc_msgSend_setWithObject_(void *a1, const char *a2, ...)
{
  return [a1 setWithObject:];
}

id objc_msgSend_setYear_(void *a1, const char *a2, ...)
{
  return [a1 setYear:];
}

id objc_msgSend_setupCommentPromptConstraintsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 setupCommentPromptConstraintsIfNeeded];
}

id objc_msgSend_setupData(void *a1, const char *a2, ...)
{
  return _[a1 setupData];
}

id objc_msgSend_setupDisclosureConstraintsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 setupDisclosureConstraintsIfNeeded];
}

id objc_msgSend_setupEntityProvider(void *a1, const char *a2, ...)
{
  return _[a1 setupEntityProvider];
}

id objc_msgSend_setupForViewAppearance(void *a1, const char *a2, ...)
{
  return _[a1 setupForViewAppearance];
}

id objc_msgSend_setupLabelConstraintsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 setupLabelConstraintsIfNeeded];
}

id objc_msgSend_setupManagers(void *a1, const char *a2, ...)
{
  return _[a1 setupManagers];
}

id objc_msgSend_setupPresentationControllerIfStyleIsPopover_barButtonItem_passThroughViews_permittedArrowDirections_sourceRect_sourceView_viewController_(void *a1, const char *a2, ...)
{
  return [a1 setupPresentationControllerIfStyleIsPopover:barButtonItem:passThroughViews:permittedArrowDirections:sourceRect:sourceView:viewController:];
}

id objc_msgSend_setupSearch_(void *a1, const char *a2, ...)
{
  return [a1 setupSearch:];
}

id objc_msgSend_setupSearchControlForTraitCollection_(void *a1, const char *a2, ...)
{
  return [a1 setupSearchControlForTraitCollection:];
}

id objc_msgSend_setupSearchNavBarHeight(void *a1, const char *a2, ...)
{
  return _[a1 setupSearchNavBarHeight];
}

id objc_msgSend_setupUIForTraitCollection_(void *a1, const char *a2, ...)
{
  return [a1 setupUIForTraitCollection:];
}

id objc_msgSend_shapeWithRoundedRect_(void *a1, const char *a2, ...)
{
  return [a1 shapeWithRoundedRect:];
}

id objc_msgSend_shapeWithRoundedRect_cornerRadius_(void *a1, const char *a2, ...)
{
  return [a1 shapeWithRoundedRect:cornerRadius:];
}

id objc_msgSend_shared(void *a1, const char *a2, ...)
{
  return _[a1 shared];
}

id objc_msgSend_sharedApplication(void *a1, const char *a2, ...)
{
  return _[a1 sharedApplication];
}

id objc_msgSend_sharedConnection(void *a1, const char *a2, ...)
{
  return _[a1 sharedConnection];
}

id objc_msgSend_sharedFactory(void *a1, const char *a2, ...)
{
  return _[a1 sharedFactory];
}

id objc_msgSend_sharedGenerator(void *a1, const char *a2, ...)
{
  return _[a1 sharedGenerator];
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _[a1 sharedInstance];
}

id objc_msgSend_sharedManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedManager];
}

id objc_msgSend_sharedNotifier(void *a1, const char *a2, ...)
{
  return _[a1 sharedNotifier];
}

id objc_msgSend_sharedOwnerEmail(void *a1, const char *a2, ...)
{
  return _[a1 sharedOwnerEmail];
}

id objc_msgSend_sharedOwnerName(void *a1, const char *a2, ...)
{
  return _[a1 sharedOwnerName];
}

id objc_msgSend_sharedOwnerPhoneNumber(void *a1, const char *a2, ...)
{
  return _[a1 sharedOwnerPhoneNumber];
}

id objc_msgSend_sharedPreferences(void *a1, const char *a2, ...)
{
  return _[a1 sharedPreferences];
}

id objc_msgSend_sharingInvitationResponse(void *a1, const char *a2, ...)
{
  return _[a1 sharingInvitationResponse];
}

id objc_msgSend_sharingStatus(void *a1, const char *a2, ...)
{
  return _[a1 sharingStatus];
}

id objc_msgSend_shortcutItem(void *a1, const char *a2, ...)
{
  return _[a1 shortcutItem];
}

id objc_msgSend_shouldAdaptEventViewControllers(void *a1, const char *a2, ...)
{
  return _[a1 shouldAdaptEventViewControllers];
}

id objc_msgSend_shouldAllDayTextUseTwoLines(void *a1, const char *a2, ...)
{
  return _[a1 shouldAllDayTextUseTwoLines];
}

id objc_msgSend_shouldAllowLongPress(void *a1, const char *a2, ...)
{
  return _[a1 shouldAllowLongPress];
}

id objc_msgSend_shouldAnimateScrollToDate_fromClosestDate_(void *a1, const char *a2, ...)
{
  return [a1 shouldAnimateScrollToDate:fromClosestDate:];
}

id objc_msgSend_shouldAnimateTransitionToDay(void *a1, const char *a2, ...)
{
  return _[a1 shouldAnimateTransitionToDay];
}

id objc_msgSend_shouldAnimateTransitionsToMonthView(void *a1, const char *a2, ...)
{
  return _[a1 shouldAnimateTransitionsToMonthView];
}

id objc_msgSend_shouldAnnotateAppEntitiesChanged(void *a1, const char *a2, ...)
{
  return _[a1 shouldAnnotateAppEntitiesChanged];
}

id objc_msgSend_shouldAutoScrollToSelectedDateAfterFirstRefresh(void *a1, const char *a2, ...)
{
  return _[a1 shouldAutoScrollToSelectedDateAfterFirstRefresh];
}

id objc_msgSend_shouldBeModal(void *a1, const char *a2, ...)
{
  return _[a1 shouldBeModal];
}

id objc_msgSend_shouldDonateTomorrowActivity(void *a1, const char *a2, ...)
{
  return _[a1 shouldDonateTomorrowActivity];
}

id objc_msgSend_shouldHandleCanPerformActionForSelector_(void *a1, const char *a2, ...)
{
  return [a1 shouldHandleCanPerformActionForSelector:];
}

id objc_msgSend_shouldHideInlineFocusBanner(void *a1, const char *a2, ...)
{
  return _[a1 shouldHideInlineFocusBanner];
}

id objc_msgSend_shouldHideInlineFocusBannerForSidebarState_(void *a1, const char *a2, ...)
{
  return [a1 shouldHideInlineFocusBannerForSidebarState:];
}

id objc_msgSend_shouldInvalidateManagedNavigationControllerOnPresentationDismissal(void *a1, const char *a2, ...)
{
  return _[a1 shouldInvalidateManagedNavigationControllerOnPresentationDismissal];
}

id objc_msgSend_shouldJournalMainViewControllerParent(void *a1, const char *a2, ...)
{
  return _[a1 shouldJournalMainViewControllerParent];
}

id objc_msgSend_shouldLeaveSearchString(void *a1, const char *a2, ...)
{
  return _[a1 shouldLeaveSearchString];
}

id objc_msgSend_shouldModallyPresentFirstShownViewController(void *a1, const char *a2, ...)
{
  return _[a1 shouldModallyPresentFirstShownViewController];
}

id objc_msgSend_shouldPreserveDateAcrossRefresh(void *a1, const char *a2, ...)
{
  return _[a1 shouldPreserveDateAcrossRefresh];
}

id objc_msgSend_shouldPushNextLevelViewControllerWhenTodayIsVisible(void *a1, const char *a2, ...)
{
  return _[a1 shouldPushNextLevelViewControllerWhenTodayIsVisible];
}

id objc_msgSend_shouldRecordExtendedLaunchTime(void *a1, const char *a2, ...)
{
  return _[a1 shouldRecordExtendedLaunchTime];
}

id objc_msgSend_shouldRemoveSelfFromNavigationStackIfTraitCollectionIsUnsupported(void *a1, const char *a2, ...)
{
  return _[a1 shouldRemoveSelfFromNavigationStackIfTraitCollectionIsUnsupported];
}

id objc_msgSend_shouldRespondToApplicationDidBecomeActiveStateChange(void *a1, const char *a2, ...)
{
  return _[a1 shouldRespondToApplicationDidBecomeActiveStateChange];
}

id objc_msgSend_shouldSaveSelectedEvent(void *a1, const char *a2, ...)
{
  return _[a1 shouldSaveSelectedEvent];
}

id objc_msgSend_shouldShowFocusBanner(void *a1, const char *a2, ...)
{
  return _[a1 shouldShowFocusBanner];
}

id objc_msgSend_shouldShowIdentityChooser(void *a1, const char *a2, ...)
{
  return _[a1 shouldShowIdentityChooser];
}

id objc_msgSend_shouldShowOverlay(void *a1, const char *a2, ...)
{
  return _[a1 shouldShowOverlay];
}

id objc_msgSend_shouldShowWithAnimation(void *a1, const char *a2, ...)
{
  return _[a1 shouldShowWithAnimation];
}

id objc_msgSend_shouldTimeBarWidthMatchAllDayTextWithResultWidth_(void *a1, const char *a2, ...)
{
  return [a1 shouldTimeBarWidthMatchAllDayTextWithResultWidth:];
}

id objc_msgSend_shouldUpdateModelSelectedDate(void *a1, const char *a2, ...)
{
  return _[a1 shouldUpdateModelSelectedDate];
}

id objc_msgSend_shouldUpdateOwnBackButtonWhenTopViewController(void *a1, const char *a2, ...)
{
  return _[a1 shouldUpdateOwnBackButtonWhenTopViewController];
}

id objc_msgSend_shouldUpdatePreferredReloadDates(void *a1, const char *a2, ...)
{
  return _[a1 shouldUpdatePreferredReloadDates];
}

id objc_msgSend_shouldUpdateSelectedDateWithCentralView(void *a1, const char *a2, ...)
{
  return _[a1 shouldUpdateSelectedDateWithCentralView];
}

id objc_msgSend_shouldUseVerticalLayout(void *a1, const char *a2, ...)
{
  return _[a1 shouldUseVerticalLayout];
}

id objc_msgSend_shouldWaitForAttendeeLoad(void *a1, const char *a2, ...)
{
  return _[a1 shouldWaitForAttendeeLoad];
}

id objc_msgSend_shouldWaitForAttendeeLoading(void *a1, const char *a2, ...)
{
  return _[a1 shouldWaitForAttendeeLoading];
}

id objc_msgSend_show_occurrenceView_atRow_numRows_drawTimeString_(void *a1, const char *a2, ...)
{
  return [a1 show:occurrenceView:atRow:numRows:drawTimeString:];
}

id objc_msgSend_showAddEvent(void *a1, const char *a2, ...)
{
  return _[a1 showAddEvent];
}

id objc_msgSend_showAddEventAnimated_completion_(void *a1, const char *a2, ...)
{
  return [a1 showAddEventAnimated:YES completion:nil];
}

id objc_msgSend_showAddEventAnimated_fromBarButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 showAddEventAnimated:YES fromBarButtonItem:nil];
}

id objc_msgSend_showAddEventAnimated_fromBarButtonItem_withTitle_startDate_exactStartDate_endDate_location_suggestionKey_allDay_completion_(void *a1, const char *a2, ...)
{
  return [a1 showAddEventAnimated:YES fromBarButtonItem:nil withTitle:nil startDate:nil exactStartDate:nil endDate:nil location:nil suggestionKey:nil allDay:NO completion:nil];
}

id objc_msgSend_showAddEventWithTitle_startDate_endDate_location_suggestionsKey_allDay_(void *a1, const char *a2, ...)
{
  return [a1 showAddEventWithTitle:startDate:endDate:location:suggestionsKey:allDay:];
}

id objc_msgSend_showAddSubscribedCalendarWithURL_(void *a1, const char *a2, ...)
{
  return [a1 showAddSubscribedCalendarWithURL:];
}

id objc_msgSend_showAsCancelledOrDeclined(void *a1, const char *a2, ...)
{
  return _[a1 showAsCancelledOrDeclined];
}

id objc_msgSend_showCalendar_(void *a1, const char *a2, ...)
{
  return [a1 showCalendar:];
}

id objc_msgSend_showCalendar_enableDoneInitially_(void *a1, const char *a2, ...)
{
  return [a1 showCalendar:enableDoneInitially:];
}

id objc_msgSend_showCalendarsAnimated_completion_(void *a1, const char *a2, ...)
{
  return [a1 showCalendarsAnimated:completion:];
}

id objc_msgSend_showCalendarsSideBarWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showCalendarsSideBarWithCompletion:");
}

id objc_msgSend_showCalendarsViewWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 showCalendarsViewWithCompletion:];
}

id objc_msgSend_showColumn_(void *a1, const char *a2, ...)
{
  return [a1 showColumn:];
}

id objc_msgSend_showContactWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 showContactWithIdentifier:];
}

id objc_msgSend_showDate_andTime_animated_(void *a1, const char *a2, ...)
{
  return [a1 showDate:andTime:animated:];
}

id objc_msgSend_showDate_animated_(void *a1, const char *a2, ...)
{
  return [a1 showDate:animated:];
}

id objc_msgSend_showDate_animated_completionBlock_(void *a1, const char *a2, ...)
{
  return [a1 showDate:animated:completionBlock:];
}

id objc_msgSend_showDate_animated_toMonthStart_(void *a1, const char *a2, ...)
{
  return [a1 showDate:animated:toMonthStart:];
}

id objc_msgSend_showDateVerticalOffsetForDate_(void *a1, const char *a2, ...)
{
  return [a1 showDateVerticalOffsetForDate:];
}

id objc_msgSend_showDayAsList(void *a1, const char *a2, ...)
{
  return _[a1 showDayAsList];
}

id objc_msgSend_showDayName(void *a1, const char *a2, ...)
{
  return _[a1 showDayName];
}

id objc_msgSend_showDeclinedEvents(void *a1, const char *a2, ...)
{
  return _[a1 showDeclinedEvents];
}

id objc_msgSend_showDetailViewControllerForEvent_context_animated_(void *a1, const char *a2, ...)
{
  return [a1 showDetailViewControllerForEvent:context:animated:];
}

id objc_msgSend_showDetailViewControllerForEvents_animated_(void *a1, const char *a2, ...)
{
  return [a1 showDetailViewControllerForEvents:animated:];
}

id objc_msgSend_showDetailsForDraggedOccurrence_inWeekView_onDay_creationMethod_(void *a1, const char *a2, ...)
{
  return [a1 showDetailsForDraggedOccurrence:inWeekView:onDay:creationMethod:];
}

id objc_msgSend_showEditViewController_(void *a1, const char *a2, ...)
{
  return [a1 showEditViewController:];
}

id objc_msgSend_showEditorForNewDraggedEvent_inWeek_(void *a1, const char *a2, ...)
{
  return [a1 showEditorForNewDraggedEvent:inWeek:];
}

id objc_msgSend_showEvent_(void *a1, const char *a2, ...)
{
  return [a1 showEvent:];
}

id objc_msgSend_showEvent_animated_(void *a1, const char *a2, ...)
{
  return [a1 showEvent:animated:];
}

id objc_msgSend_showEvent_animated_showMode_context_(void *a1, const char *a2, ...)
{
  return [a1 showEvent:animated:showMode:context:];
}

id objc_msgSend_showEvent_animated_showMode_context_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showEvent:animated:showMode:context:completion:");
}

id objc_msgSend_showEventAndCloseSidebarIfNeeded_animated_showMode_(void *a1, const char *a2, ...)
{
  return [a1 showEventAndCloseSidebarIfNeeded:animated:showMode:];
}

id objc_msgSend_showEventDetailsOperationQueue(void *a1, const char *a2, ...)
{
  return _[a1 showEventDetailsOperationQueue];
}

id objc_msgSend_showEventDetailsWhenNewEventAdded(void *a1, const char *a2, ...)
{
  return _[a1 showEventDetailsWhenNewEventAdded];
}

id objc_msgSend_showEventWhenAdded(void *a1, const char *a2, ...)
{
  return _[a1 showEventWhenAdded];
}

id objc_msgSend_showEventWithIdentifier_isSearchResult_date_context_(void *a1, const char *a2, ...)
{
  return [a1 showEventWithIdentifier:isSearchResult:date:context:];
}

id objc_msgSend_showEvents_animated_showMode_context_(void *a1, const char *a2, ...)
{
  return [a1 showEvents:animated:showMode:context:];
}

id objc_msgSend_showExperimentalUI(void *a1, const char *a2, ...)
{
  return _[a1 showExperimentalUI];
}

id objc_msgSend_showFilteredData(void *a1, const char *a2, ...)
{
  return _[a1 showFilteredData];
}

id objc_msgSend_showIdentitySwitcherFromSourceView_(void *a1, const char *a2, ...)
{
  return [a1 showIdentitySwitcherFromSourceView:];
}

id objc_msgSend_showInboxAnimated_(void *a1, const char *a2, ...)
{
  return [a1 showInboxAnimated:];
}

id objc_msgSend_showInboxAnimated_completion_(void *a1, const char *a2, ...)
{
  return [a1 showInboxAnimated:YES completion:nil];
}

id objc_msgSend_showMonthAsDivided(void *a1, const char *a2, ...)
{
  return _[a1 showMonthAsDivided];
}

id objc_msgSend_showNewEvent_(void *a1, const char *a2, ...)
{
  return [a1 showNewEvent:];
}

id objc_msgSend_showNewSection(void *a1, const char *a2, ...)
{
  return _[a1 showNewSection];
}

id objc_msgSend_showNextOccurrenceOfSelectableItem(void *a1, const char *a2, ...)
{
  return _[a1 showNextOccurrenceOfSelectableItem];
}

id objc_msgSend_showNowAnimated_(void *a1, const char *a2, ...)
{
  return [a1 showNowAnimated:];
}

id objc_msgSend_showOverlayCalendar(void *a1, const char *a2, ...)
{
  return _[a1 showOverlayCalendar];
}

id objc_msgSend_showOverlayMonthInCellAtOffset_animated_(void *a1, const char *a2, ...)
{
  return [a1 showOverlayMonthInCellAtOffset:animated:];
}

id objc_msgSend_showPreviousOccurrenceOfSelectableItem(void *a1, const char *a2, ...)
{
  return _[a1 showPreviousOccurrenceOfSelectableItem];
}

id objc_msgSend_showRepliedSection(void *a1, const char *a2, ...)
{
  return _[a1 showRepliedSection];
}

id objc_msgSend_showScrubber(void *a1, const char *a2, ...)
{
  return _[a1 showScrubber];
}

id objc_msgSend_showSearchAnimated_becomeFirstResponder_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showSearchAnimated:becomeFirstResponder:completion:");
}

id objc_msgSend_showSelectedDateIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 showSelectedDateIfNeeded];
}

id objc_msgSend_showTimelineHighlightForTime_(void *a1, const char *a2, ...)
{
  return [a1 showTimelineHighlightForTime:];
}

id objc_msgSend_showTodayAnimated_(void *a1, const char *a2, ...)
{
  return [a1 showTodayAnimated:];
}

id objc_msgSend_showViewController_sender_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showViewController:sender:animated:completion:");
}

id objc_msgSend_showViewControllerOperationClass(void *a1, const char *a2, ...)
{
  return _[a1 showViewControllerOperationClass];
}

id objc_msgSend_showViewControllersWhenReadyQueue(void *a1, const char *a2, ...)
{
  return _[a1 showViewControllersWhenReadyQueue];
}

id objc_msgSend_showWeekNumber(void *a1, const char *a2, ...)
{
  return _[a1 showWeekNumber];
}

id objc_msgSend_showWeekNumbers(void *a1, const char *a2, ...)
{
  return _[a1 showWeekNumbers];
}

id objc_msgSend_showWeekdayLabel(void *a1, const char *a2, ...)
{
  return _[a1 showWeekdayLabel];
}

id objc_msgSend_showYearNumberAnimated_(void *a1, const char *a2, ...)
{
  return [a1 showYearNumberAnimated:];
}

id objc_msgSend_showingOverriddenToolbarItems(void *a1, const char *a2, ...)
{
  return _[a1 showingOverriddenToolbarItems];
}

id objc_msgSend_showingSplashScreen(void *a1, const char *a2, ...)
{
  return _[a1 showingSplashScreen];
}

id objc_msgSend_showingTomorrowSection(void *a1, const char *a2, ...)
{
  return _[a1 showingTomorrowSection];
}

id objc_msgSend_shownContactViewController(void *a1, const char *a2, ...)
{
  return _[a1 shownContactViewController];
}

id objc_msgSend_shownEventEditViewController(void *a1, const char *a2, ...)
{
  return _[a1 shownEventEditViewController];
}

id objc_msgSend_shownEventViewController(void *a1, const char *a2, ...)
{
  return _[a1 shownEventViewController];
}

id objc_msgSend_shownExpandedReminderStackViewController(void *a1, const char *a2, ...)
{
  return _[a1 shownExpandedReminderStackViewController];
}

id objc_msgSend_shownViewController(void *a1, const char *a2, ...)
{
  return _[a1 shownViewController];
}

id objc_msgSend_showsActivityIndicator(void *a1, const char *a2, ...)
{
  return _[a1 showsActivityIndicator];
}

id objc_msgSend_showsAllDayDividerLine(void *a1, const char *a2, ...)
{
  return _[a1 showsAllDayDividerLine];
}

id objc_msgSend_showsHeader(void *a1, const char *a2, ...)
{
  return _[a1 showsHeader];
}

id objc_msgSend_showsSearchBarForTraitCollection_(void *a1, const char *a2, ...)
{
  return [a1 showsSearchBarForTraitCollection:];
}

id objc_msgSend_showsThumb(void *a1, const char *a2, ...)
{
  return _[a1 showsThumb];
}

id objc_msgSend_showsTimeLine(void *a1, const char *a2, ...)
{
  return _[a1 showsTimeLine];
}

id objc_msgSend_showsTimeMarker(void *a1, const char *a2, ...)
{
  return _[a1 showsTimeMarker];
}

id objc_msgSend_showsYearInMonthLabel(void *a1, const char *a2, ...)
{
  return _[a1 showsYearInMonthLabel];
}

id objc_msgSend_sideViews(void *a1, const char *a2, ...)
{
  return _[a1 sideViews];
}

id objc_msgSend_sidebarWidthForViewHierarchy_(void *a1, const char *a2, ...)
{
  return [a1 sidebarWidthForViewHierarchy:];
}

id objc_msgSend_significantTimeChangeOccurred(void *a1, const char *a2, ...)
{
  return _[a1 significantTimeChangeOccurred];
}

id objc_msgSend_simulateFirstLoadFinished(void *a1, const char *a2, ...)
{
  return _[a1 simulateFirstLoadFinished];
}

id objc_msgSend_singleRecurrenceRule(void *a1, const char *a2, ...)
{
  return _[a1 singleRecurrenceRule];
}

id objc_msgSend_size(void *a1, const char *a2, ...)
{
  return _[a1 size];
}

id objc_msgSend_sizeThatFits_(void *a1, const char *a2, ...)
{
  return [a1 sizeThatFits:];
}

id objc_msgSend_sizeToFit(void *a1, const char *a2, ...)
{
  return _[a1 sizeToFit];
}

id objc_msgSend_sizeValue(void *a1, const char *a2, ...)
{
  return _[a1 sizeValue];
}

id objc_msgSend_sizeWithAttributes_(void *a1, const char *a2, ...)
{
  return [a1 sizeWithAttributes:];
}

id objc_msgSend_sleepForTimeInterval_(void *a1, const char *a2, ...)
{
  return [a1 sleepForTimeInterval:];
}

id objc_msgSend_snapshotViewAfterScreenUpdates_(void *a1, const char *a2, ...)
{
  return [a1 snapshotViewAfterScreenUpdates:];
}

id objc_msgSend_sortUsingComparator_(void *a1, const char *a2, ...)
{
  return [a1 sortUsingComparator:];
}

id objc_msgSend_sortUsingFunction_context_(void *a1, const char *a2, ...)
{
  return [a1 sortUsingFunction:];
}

id objc_msgSend_sortedArrayUsingComparator_(void *a1, const char *a2, ...)
{
  return [a1 sortedArrayUsingComparator:];
}

id objc_msgSend_sortedArrayUsingDescriptors_(void *a1, const char *a2, ...)
{
  return [a1 sortedArrayUsingDescriptors:];
}

id objc_msgSend_sortedEnabledDelegates(void *a1, const char *a2, ...)
{
  return _[a1 sortedEnabledDelegates];
}

id objc_msgSend_source(void *a1, const char *a2, ...)
{
  return _[a1 source];
}

id objc_msgSend_sourceForSelectedIdentity(void *a1, const char *a2, ...)
{
  return _[a1 sourceForSelectedIdentity];
}

id objc_msgSend_sourceIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 sourceIdentifier];
}

id objc_msgSend_sourceRect(void *a1, const char *a2, ...)
{
  return _[a1 sourceRect];
}

id objc_msgSend_sourceType(void *a1, const char *a2, ...)
{
  return _[a1 sourceType];
}

id objc_msgSend_sourceView(void *a1, const char *a2, ...)
{
  return _[a1 sourceView];
}

id objc_msgSend_sourceViewController(void *a1, const char *a2, ...)
{
  return _[a1 sourceViewController];
}

id objc_msgSend_sourceViewController_notifiesReadinessForPresentation_(void *a1, const char *a2, ...)
{
  return [a1 sourceViewController:notifiesReadinessForPresentation:];
}

id objc_msgSend_sources(void *a1, const char *a2, ...)
{
  return _[a1 sources];
}

id objc_msgSend_spaceGapFor_(void *a1, const char *a2, ...)
{
  return [a1 spaceGapFor:];
}

id objc_msgSend_spacer(void *a1, const char *a2, ...)
{
  return _[a1 spacer];
}

id objc_msgSend_spacerWidthForWindowWidth_(void *a1, const char *a2, ...)
{
  return [a1 spacerWidthForWindowWidth:];
}

id objc_msgSend_specialDayType(void *a1, const char *a2, ...)
{
  return _[a1 specialDayType];
}

id objc_msgSend_splashScreenCompletionAction(void *a1, const char *a2, ...)
{
  return _[a1 splashScreenCompletionAction];
}

id objc_msgSend_splitBehavior(void *a1, const char *a2, ...)
{
  return _[a1 splitBehavior];
}

id objc_msgSend_splitMultiDayEvents(void *a1, const char *a2, ...)
{
  return _[a1 splitMultiDayEvents];
}

id objc_msgSend_splitterSpace(void *a1, const char *a2, ...)
{
  return _[a1 splitterSpace];
}

id objc_msgSend_standardAppearance(void *a1, const char *a2, ...)
{
  return _[a1 standardAppearance];
}

id objc_msgSend_standardCircleDiameterForSizeClass_(void *a1, const char *a2, ...)
{
  return [a1 standardCircleDiameterForSizeClass:];
}

id objc_msgSend_standardHeight(void *a1, const char *a2, ...)
{
  return _[a1 standardHeight];
}

id objc_msgSend_standardRegularController(void *a1, const char *a2, ...)
{
  return _[a1 standardRegularController];
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return _[a1 standardUserDefaults];
}

id objc_msgSend_standardWidthForOrientation_withViewInViewHierarchy_(void *a1, const char *a2, ...)
{
  return [a1 standardWidthForOrientation:withViewInViewHierarchy:];
}

id objc_msgSend_starkCardControllerForCalendarEventWithContact_(void *a1, const char *a2, ...)
{
  return [a1 starkCardControllerForCalendarEventWithContact:];
}

id objc_msgSend_startCalendarDate(void *a1, const char *a2, ...)
{
  return _[a1 startCalendarDate];
}

id objc_msgSend_startDate(void *a1, const char *a2, ...)
{
  return _[a1 startDate];
}

id objc_msgSend_startDateForNextOccurrence(void *a1, const char *a2, ...)
{
  return _[a1 startDateForNextOccurrence];
}

id objc_msgSend_startDateOfSelectedWeek(void *a1, const char *a2, ...)
{
  return _[a1 startDateOfSelectedWeek];
}

id objc_msgSend_startNotificationMonitor(void *a1, const char *a2, ...)
{
  return _[a1 startNotificationMonitor];
}

id objc_msgSend_startOfDayForDate_(void *a1, const char *a2, ...)
{
  return [a1 startOfDayForDate:];
}

id objc_msgSend_startOfMonthForPoint_(void *a1, const char *a2, ...)
{
  return [a1 startOfMonthForPoint:];
}

id objc_msgSend_startRange(void *a1, const char *a2, ...)
{
  return _[a1 startRange];
}

id objc_msgSend_startSearch(void *a1, const char *a2, ...)
{
  return _[a1 startSearch];
}

id objc_msgSend_startedSubTest_forTest_(void *a1, const char *a2, ...)
{
  return [a1 startedSubTest:forTest:];
}

id objc_msgSend_startedTest_(void *a1, const char *a2, ...)
{
  return [a1 startedTest:];
}

id objc_msgSend_state(void *a1, const char *a2, ...)
{
  return _[a1 state];
}

id objc_msgSend_stateRestorationActivity(void *a1, const char *a2, ...)
{
  return _[a1 stateRestorationActivity];
}

id objc_msgSend_status(void *a1, const char *a2, ...)
{
  return _[a1 status];
}

id objc_msgSend_statusBarManager(void *a1, const char *a2, ...)
{
  return _[a1 statusBarManager];
}

id objc_msgSend_statusButtonsActionFromContextMenuAction_(void *a1, const char *a2, ...)
{
  return [a1 statusButtonsActionFromContextMenuAction:];
}

id objc_msgSend_stopPulsing(void *a1, const char *a2, ...)
{
  return _[a1 stopPulsing];
}

id objc_msgSend_stopScrollingAndZooming(void *a1, const char *a2, ...)
{
  return _[a1 stopScrollingAndZooming];
}

id objc_msgSend_strikethroughTitleColor_(void *a1, const char *a2, ...)
{
  return [a1 strikethroughTitleColor];
}

id objc_msgSend_string(void *a1, const char *a2, ...)
{
  return _[a1 string];
}

id objc_msgSend_stringAttributes(void *a1, const char *a2, ...)
{
  return _[a1 stringAttributes];
}

id objc_msgSend_stringByAddingPercentEncodingWithAllowedCharacters_(void *a1, const char *a2, ...)
{
  return [a1 stringByAddingPercentEncodingWithAllowedCharacters:];
}

id objc_msgSend_stringByAppendingFormat_(void *a1, const char *a2, ...)
{
  return [a1 stringByAppendingFormat:];
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return [a1 stringByAppendingString:];
}

id objc_msgSend_stringByRemovingPercentEncoding(void *a1, const char *a2, ...)
{
  return _[a1 stringByRemovingPercentEncoding];
}

id objc_msgSend_stringByReplacingOccurrencesOfString_withString_(void *a1, const char *a2, ...)
{
  return [a1 stringByReplacingOccurrencesOfString:withString:];
}

id objc_msgSend_stringForKey_(void *a1, const char *a2, ...)
{
  return [a1 stringForKey:];
}

id objc_msgSend_stringFromContact_style_(void *a1, const char *a2, ...)
{
  return [a1 stringFromContact:style:];
}

id objc_msgSend_stringFromDate_(void *a1, const char *a2, ...)
{
  return [a1 stringFromDate:];
}

id objc_msgSend_stringFromDate_toDate_(void *a1, const char *a2, ...)
{
  return [a1 stringFromDate:toDate:];
}

id objc_msgSend_stringFromPersonNameComponents_(void *a1, const char *a2, ...)
{
  return [a1 stringFromPersonNameComponents:];
}

id objc_msgSend_stringRemovingMailto(void *a1, const char *a2, ...)
{
  return _[a1 stringRemovingMailto];
}

id objc_msgSend_stringRemovingTel(void *a1, const char *a2, ...)
{
  return _[a1 stringRemovingTel];
}

id objc_msgSend_stringValue(void *a1, const char *a2, ...)
{
  return _[a1 stringValue];
}

id objc_msgSend_stringWithAutoCommentRemoved_(void *a1, const char *a2, ...)
{
  return [a1 stringWithAutoCommentRemoved:];
}

id objc_msgSend_stringWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 stringWithCapacity:];
}

id objc_msgSend_stringWithCharacters_length_(void *a1, const char *a2, ...)
{
  return [a1 stringWithCharacters:length:];
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 stringWithFormat:];
}

id objc_msgSend_structuredLocation(void *a1, const char *a2, ...)
{
  return _[a1 structuredLocation];
}

id objc_msgSend_style(void *a1, const char *a2, ...)
{
  return _[a1 style];
}

id objc_msgSend_styleWithEffect_shape_(void *a1, const char *a2, ...)
{
  return [a1 styleWithEffect:shape:];
}

id objc_msgSend_subarrayWithRange_(void *a1, const char *a2, ...)
{
  return [a1 subarrayWithRange:];
}

id objc_msgSend_sublayers(void *a1, const char *a2, ...)
{
  return _[a1 sublayers];
}

id objc_msgSend_substringFromIndex_(void *a1, const char *a2, ...)
{
  return [a1 substringFromIndex:];
}

id objc_msgSend_substringToIndex_(void *a1, const char *a2, ...)
{
  return [a1 substringToIndex:];
}

id objc_msgSend_substringWithRange_(void *a1, const char *a2, ...)
{
  return [a1 substringWithRange:];
}

id objc_msgSend_subviewBufferExtensionMultiplier(void *a1, const char *a2, ...)
{
  return _[a1 subviewBufferExtensionMultiplier];
}

id objc_msgSend_subviewCount(void *a1, const char *a2, ...)
{
  return _[a1 subviewCount];
}

id objc_msgSend_subviewForDate_(void *a1, const char *a2, ...)
{
  return [a1 subviewForDate:];
}

id objc_msgSend_subviewForPoint_(void *a1, const char *a2, ...)
{
  return [a1 subviewForPoint:];
}

id objc_msgSend_subviews(void *a1, const char *a2, ...)
{
  return _[a1 subviews];
}

id objc_msgSend_suggestedEvent(void *a1, const char *a2, ...)
{
  return _[a1 suggestedEvent];
}

id objc_msgSend_suggestedEventsFeatureText(void *a1, const char *a2, ...)
{
  return _[a1 suggestedEventsFeatureText];
}

id objc_msgSend_suggestedEventsIcon(void *a1, const char *a2, ...)
{
  return _[a1 suggestedEventsIcon];
}

id objc_msgSend_suggestedEventsTitleText(void *a1, const char *a2, ...)
{
  return _[a1 suggestedEventsTitleText];
}

id objc_msgSend_suggestionInfo(void *a1, const char *a2, ...)
{
  return _[a1 suggestionInfo];
}

id objc_msgSend_suggestionKey(void *a1, const char *a2, ...)
{
  return _[a1 suggestionKey];
}

id objc_msgSend_summary(void *a1, const char *a2, ...)
{
  return _[a1 summary];
}

id objc_msgSend_summaryData(void *a1, const char *a2, ...)
{
  return _[a1 summaryData];
}

id objc_msgSend_superlayer(void *a1, const char *a2, ...)
{
  return _[a1 superlayer];
}

id objc_msgSend_superview(void *a1, const char *a2, ...)
{
  return _[a1 superview];
}

id objc_msgSend_supportedInterfaceOrientations(void *a1, const char *a2, ...)
{
  return _[a1 supportedInterfaceOrientations];
}

id objc_msgSend_supportedToggleMode(void *a1, const char *a2, ...)
{
  return _[a1 supportedToggleMode];
}

id objc_msgSend_supportsAvailabilityRequests(void *a1, const char *a2, ...)
{
  return _[a1 supportsAvailabilityRequests];
}

id objc_msgSend_suppressInitialScrollToCurrentTime(void *a1, const char *a2, ...)
{
  return _[a1 suppressInitialScrollToCurrentTime];
}

id objc_msgSend_suppressLayout(void *a1, const char *a2, ...)
{
  return _[a1 suppressLayout];
}

id objc_msgSend_suppressViewAdjustments(void *a1, const char *a2, ...)
{
  return _[a1 suppressViewAdjustments];
}

id objc_msgSend_suspendEventLoading(void *a1, const char *a2, ...)
{
  return _[a1 suspendEventLoading];
}

id objc_msgSend_swipeToDeleteEnabled(void *a1, const char *a2, ...)
{
  return _[a1 swipeToDeleteEnabled];
}

id objc_msgSend_switcherViewController(void *a1, const char *a2, ...)
{
  return _[a1 switcherViewController];
}

id objc_msgSend_symbolImage_forFont_(void *a1, const char *a2, ...)
{
  return [a1 symbolImage:forFont:];
}

id objc_msgSend_synchronizeWeekGroupScrollingToWeek_(void *a1, const char *a2, ...)
{
  return [a1 synchronizeWeekGroupScrollingToWeek:];
}

id objc_msgSend_system(void *a1, const char *a2, ...)
{
  return _[a1 system];
}

id objc_msgSend_systemBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 systemBackgroundColor];
}

id objc_msgSend_systemFontOfSize_(void *a1, const char *a2, ...)
{
  return [a1 systemFontOfSize:];
}

id objc_msgSend_systemFontOfSize_weight_(void *a1, const char *a2, ...)
{
  return [a1 systemFontOfSize:weight:];
}

id objc_msgSend_systemGray2Color(void *a1, const char *a2, ...)
{
  return _[a1 systemGray2Color];
}

id objc_msgSend_systemGrayColor(void *a1, const char *a2, ...)
{
  return _[a1 systemGrayColor];
}

id objc_msgSend_systemGroupedBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 systemGroupedBackgroundColor];
}

id objc_msgSend_systemImageNamed_(void *a1, const char *a2, ...)
{
  return [a1 systemImageNamed:];
}

id objc_msgSend_systemImageNamed_withConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 systemImageNamed:withConfiguration:];
}

id objc_msgSend_systemIndigoColor(void *a1, const char *a2, ...)
{
  return _[a1 systemIndigoColor];
}

id objc_msgSend_systemLayoutSizeFittingSize_(void *a1, const char *a2, ...)
{
  return [a1 systemLayoutSizeFittingSize:];
}

id objc_msgSend_systemRedColor(void *a1, const char *a2, ...)
{
  return _[a1 systemRedColor];
}

id objc_msgSend_systemWhiteColor(void *a1, const char *a2, ...)
{
  return _[a1 systemWhiteColor];
}

id objc_msgSend_tableBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 tableBackgroundColor];
}

id objc_msgSend_tableCellGroupedBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 tableCellGroupedBackgroundColor];
}

id objc_msgSend_tableView(void *a1, const char *a2, ...)
{
  return _[a1 tableView];
}

id objc_msgSend_tableView_cellForRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 tableView:cellForRowAtIndexPath:];
}

id objc_msgSend_tableView_didSelectRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 tableView:didSelectRowAtIndexPath:];
}

id objc_msgSend_tableView_numberOfRowsInSection_(void *a1, const char *a2, ...)
{
  return [a1 tableView:numberOfRowsInSection:];
}

id objc_msgSend_tableViewBackgroundColorOpaque(void *a1, const char *a2, ...)
{
  return _[a1 tableViewBackgroundColorOpaque];
}

id objc_msgSend_tableViewForTesting(void *a1, const char *a2, ...)
{
  return _[a1 tableViewForTesting];
}

id objc_msgSend_tag(void *a1, const char *a2, ...)
{
  return _[a1 tag];
}

id objc_msgSend_tappedOnDate_(void *a1, const char *a2, ...)
{
  return [a1 tappedOnDate:];
}

id objc_msgSend_target(void *a1, const char *a2, ...)
{
  return _[a1 target];
}

id objc_msgSend_targetCalendarDate(void *a1, const char *a2, ...)
{
  return _[a1 targetCalendarDate];
}

id objc_msgSend_targetTransform(void *a1, const char *a2, ...)
{
  return _[a1 targetTransform];
}

id objc_msgSend_targetViewControllerForAction_sender_(void *a1, const char *a2, ...)
{
  return [a1 targetViewControllerForAction:sender:];
}

id objc_msgSend_teardownSearch(void *a1, const char *a2, ...)
{
  return _[a1 teardownSearch];
}

id objc_msgSend_tertiaryLabelColor(void *a1, const char *a2, ...)
{
  return _[a1 tertiaryLabelColor];
}

id objc_msgSend_tertiarySystemFillColor(void *a1, const char *a2, ...)
{
  return _[a1 tertiarySystemFillColor];
}

id objc_msgSend_testName(void *a1, const char *a2, ...)
{
  return _[a1 testName];
}

id objc_msgSend_tester(void *a1, const char *a2, ...)
{
  return _[a1 tester];
}

id objc_msgSend_testingRotationDidEndNotificationName(void *a1, const char *a2, ...)
{
  return _[a1 testingRotationDidEndNotificationName];
}

id objc_msgSend_testingRotationWillStartNotificationName(void *a1, const char *a2, ...)
{
  return _[a1 testingRotationWillStartNotificationName];
}

id objc_msgSend_testingSessionStarted(void *a1, const char *a2, ...)
{
  return _[a1 testingSessionStarted];
}

id objc_msgSend_text(void *a1, const char *a2, ...)
{
  return _[a1 text];
}

id objc_msgSend_textColor(void *a1, const char *a2, ...)
{
  return _[a1 textColor];
}

id objc_msgSend_textFont(void *a1, const char *a2, ...)
{
  return _[a1 textFont];
}

id objc_msgSend_textFrameForFrame_(void *a1, const char *a2, ...)
{
  return [a1 textFrameForFrame:];
}

id objc_msgSend_textLabel(void *a1, const char *a2, ...)
{
  return _[a1 textLabel];
}

id objc_msgSend_textProperties(void *a1, const char *a2, ...)
{
  return _[a1 textProperties];
}

id objc_msgSend_textWraps(void *a1, const char *a2, ...)
{
  return _[a1 textWraps];
}

id objc_msgSend_timeBaselineToDateBaselineConstraint(void *a1, const char *a2, ...)
{
  return _[a1 timeBaselineToDateBaselineConstraint];
}

id objc_msgSend_timeBaselineToLocationBaselineConstraint(void *a1, const char *a2, ...)
{
  return _[a1 timeBaselineToLocationBaselineConstraint];
}

id objc_msgSend_timeBaselineToTitleBaselineConstraint(void *a1, const char *a2, ...)
{
  return _[a1 timeBaselineToTitleBaselineConstraint];
}

id objc_msgSend_timeChanged(void *a1, const char *a2, ...)
{
  return _[a1 timeChanged];
}

id objc_msgSend_timeFrameForFrame_(void *a1, const char *a2, ...)
{
  return [a1 timeFrameForFrame:];
}

id objc_msgSend_timeInsetForSizeClass_orientation_(void *a1, const char *a2, ...)
{
  return [a1 timeInsetForSizeClass:orientation:];
}

id objc_msgSend_timeInterval(void *a1, const char *a2, ...)
{
  return _[a1 timeInterval];
}

id objc_msgSend_timeIntervalSinceDate_(void *a1, const char *a2, ...)
{
  return [a1 timeIntervalSinceDate:];
}

id objc_msgSend_timeIntervalSinceReferenceDate(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSinceReferenceDate];
}

id objc_msgSend_timeMarker(void *a1, const char *a2, ...)
{
  return _[a1 timeMarker];
}

id objc_msgSend_timeString(void *a1, const char *a2, ...)
{
  return _[a1 timeString];
}

id objc_msgSend_timeToLeaveAndAutomaticGeocodingFeatureText(void *a1, const char *a2, ...)
{
  return _[a1 timeToLeaveAndAutomaticGeocodingFeatureText];
}

id objc_msgSend_timeToLeaveAndAutomaticGeocodingIcon(void *a1, const char *a2, ...)
{
  return _[a1 timeToLeaveAndAutomaticGeocodingIcon];
}

id objc_msgSend_timeToLeaveAndAutomaticGeocodingTitleText(void *a1, const char *a2, ...)
{
  return _[a1 timeToLeaveAndAutomaticGeocodingTitleText];
}

id objc_msgSend_timeView(void *a1, const char *a2, ...)
{
  return _[a1 timeView];
}

id objc_msgSend_timeWidthForOrientation_inViewHierarchy_(void *a1, const char *a2, ...)
{
  return [a1 timeWidthForOrientation:inViewHierarchy:];
}

id objc_msgSend_timeZone(void *a1, const char *a2, ...)
{
  return _[a1 timeZone];
}

id objc_msgSend_timeZoneChanged(void *a1, const char *a2, ...)
{
  return _[a1 timeZoneChanged];
}

id objc_msgSend_timeZoneDidChange(void *a1, const char *a2, ...)
{
  return _[a1 timeZoneDidChange];
}

id objc_msgSend_timeZoneWithName_(void *a1, const char *a2, ...)
{
  return [a1 timeZoneWithName:];
}

id objc_msgSend_timedDayViewContentGridSubviews(void *a1, const char *a2, ...)
{
  return _[a1 timedDayViewContentGridSubviews];
}

id objc_msgSend_timedOccurrences(void *a1, const char *a2, ...)
{
  return _[a1 timedOccurrences];
}

id objc_msgSend_timer(void *a1, const char *a2, ...)
{
  return _[a1 timer];
}

id objc_msgSend_timerWithTimeInterval_target_selector_userInfo_repeats_(void *a1, const char *a2, ...)
{
  return [a1 timerWithTimeInterval:target:selector:userInfo:repeats:];
}

id objc_msgSend_tintColor(void *a1, const char *a2, ...)
{
  return _[a1 tintColor];
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return _[a1 title];
}

id objc_msgSend_titleChanged(void *a1, const char *a2, ...)
{
  return _[a1 titleChanged];
}

id objc_msgSend_titleForHeader(void *a1, const char *a2, ...)
{
  return _[a1 titleForHeader];
}

id objc_msgSend_titleForState_(void *a1, const char *a2, ...)
{
  return [a1 titleForState:];
}

id objc_msgSend_titleLabel(void *a1, const char *a2, ...)
{
  return _[a1 titleLabel];
}

id objc_msgSend_titleStrings(void *a1, const char *a2, ...)
{
  return _[a1 titleStrings];
}

id objc_msgSend_toISO8601String(void *a1, const char *a2, ...)
{
  return _[a1 toISO8601String];
}

id objc_msgSend_today(void *a1, const char *a2, ...)
{
  return _[a1 today];
}

id objc_msgSend_todayBarButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 todayBarButtonItem];
}

id objc_msgSend_todayButtonFont(void *a1, const char *a2, ...)
{
  return _[a1 todayButtonFont];
}

id objc_msgSend_todayButtonVisible(void *a1, const char *a2, ...)
{
  return _[a1 todayButtonVisible];
}

id objc_msgSend_todayIndex(void *a1, const char *a2, ...)
{
  return _[a1 todayIndex];
}

id objc_msgSend_todayPressed(void *a1, const char *a2, ...)
{
  return _[a1 todayPressed];
}

id objc_msgSend_todayTextSize(void *a1, const char *a2, ...)
{
  return _[a1 todayTextSize];
}

id objc_msgSend_toggleDayViewMode_(void *a1, const char *a2, ...)
{
  return [a1 toggleDayViewMode:];
}

id objc_msgSend_tomorrowLoadedEventCollection(void *a1, const char *a2, ...)
{
  return _[a1 tomorrowLoadedEventCollection];
}

id objc_msgSend_toolBarTintColor(void *a1, const char *a2, ...)
{
  return _[a1 toolBarTintColor];
}

id objc_msgSend_toolbar(void *a1, const char *a2, ...)
{
  return _[a1 toolbar];
}

id objc_msgSend_toolbarItems(void *a1, const char *a2, ...)
{
  return _[a1 toolbarItems];
}

id objc_msgSend_toolbarVisibleInSplitBehavior_(void *a1, const char *a2, ...)
{
  return [a1 toolbarVisibleInSplitBehavior:];
}

id objc_msgSend_topAnchor(void *a1, const char *a2, ...)
{
  return _[a1 topAnchor];
}

id objc_msgSend_topInset(void *a1, const char *a2, ...)
{
  return _[a1 topInset];
}

id objc_msgSend_topInsetForSubviewWithCalendarDate_(void *a1, const char *a2, ...)
{
  return [a1 topInsetForSubviewWithCalendarDate:];
}

id objc_msgSend_topLabelsContainer(void *a1, const char *a2, ...)
{
  return _[a1 topLabelsContainer];
}

id objc_msgSend_topMainViewControllerContainer(void *a1, const char *a2, ...)
{
  return _[a1 topMainViewControllerContainer];
}

id objc_msgSend_topOfMonthNameLabelToGrayLineDistance(void *a1, const char *a2, ...)
{
  return _[a1 topOfMonthNameLabelToGrayLineDistance];
}

id objc_msgSend_topOffset(void *a1, const char *a2, ...)
{
  return _[a1 topOffset];
}

id objc_msgSend_topPinningProximity(void *a1, const char *a2, ...)
{
  return _[a1 topPinningProximity];
}

id objc_msgSend_topView(void *a1, const char *a2, ...)
{
  return _[a1 topView];
}

id objc_msgSend_topViewController(void *a1, const char *a2, ...)
{
  return _[a1 topViewController];
}

id objc_msgSend_totalConflictsInSeries(void *a1, const char *a2, ...)
{
  return _[a1 totalConflictsInSeries];
}

id objc_msgSend_totalEventUnits(void *a1, const char *a2, ...)
{
  return _[a1 totalEventUnits];
}

id objc_msgSend_totalLanguageAwareHeightPadding(void *a1, const char *a2, ...)
{
  return _[a1 totalLanguageAwareHeightPadding];
}

id objc_msgSend_totalOccurrencesInSeries(void *a1, const char *a2, ...)
{
  return _[a1 totalOccurrencesInSeries];
}

id objc_msgSend_totalRowCount(void *a1, const char *a2, ...)
{
  return _[a1 totalRowCount];
}

id objc_msgSend_touchOffset(void *a1, const char *a2, ...)
{
  return _[a1 touchOffset];
}

id objc_msgSend_touchTrackingViewForEventGestureController_(void *a1, const char *a2, ...)
{
  return [a1 touchTrackingViewForEventGestureController:];
}

id objc_msgSend_touches(void *a1, const char *a2, ...)
{
  return _[a1 touches];
}

id objc_msgSend_trackRootUIInteractedWithError(void *a1, const char *a2, ...)
{
  return _[a1 trackRootUIInteractedWithError];
}

id objc_msgSend_trailingAnchor(void *a1, const char *a2, ...)
{
  return _[a1 trailingAnchor];
}

id objc_msgSend_trailingButton(void *a1, const char *a2, ...)
{
  return _[a1 trailingButton];
}

id objc_msgSend_traitCollection(void *a1, const char *a2, ...)
{
  return _[a1 traitCollection];
}

id objc_msgSend_traitCollectionByModifyingTraits_(void *a1, const char *a2, ...)
{
  return [a1 traitCollectionByModifyingTraits:];
}

id objc_msgSend_traitCollectionDidChange_(void *a1, const char *a2, ...)
{
  return [a1 traitCollectionDidChange:];
}

id objc_msgSend_traitCollectionToUseWhileLoadingViewsDuringTransitioningToTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "traitCollectionToUseWhileLoadingViewsDuringTransitioningToTraitCollection:");
}

id objc_msgSend_traitOverrides(void *a1, const char *a2, ...)
{
  return _[a1 traitOverrides];
}

id objc_msgSend_transform(void *a1, const char *a2, ...)
{
  return _[a1 transform];
}

id objc_msgSend_transitionCoordinator(void *a1, const char *a2, ...)
{
  return _[a1 transitionCoordinator];
}

id objc_msgSend_transitionFromView_toView_duration_options_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionFromView:toView:duration:options:completion:");
}

id objc_msgSend_transitionToSizeWillStart(void *a1, const char *a2, ...)
{
  return _[a1 transitionToSizeWillStart];
}

id objc_msgSend_transitionView(void *a1, const char *a2, ...)
{
  return _[a1 transitionView];
}

id objc_msgSend_transitionWithView_duration_options_animations_completion_(void *a1, const char *a2, ...)
{
  return [a1 transitionWithView:duration:options:animations:completion:];
}

id objc_msgSend_travelTimeSubviewHeightInPoints(void *a1, const char *a2, ...)
{
  return _[a1 travelTimeSubviewHeightInPoints];
}

id objc_msgSend_twoDigitWeekNumberWidth(void *a1, const char *a2, ...)
{
  return _[a1 twoDigitWeekNumberWidth];
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return _[a1 type];
}

id objc_msgSend_typeDescription_(void *a1, const char *a2, ...)
{
  return [a1 typeDescription:];
}

id objc_msgSend_undimOccurrence_occurrenceDate_(void *a1, const char *a2, ...)
{
  return [a1 undimOccurrence:occurrenceDate:];
}

id objc_msgSend_undoManager(void *a1, const char *a2, ...)
{
  return _[a1 undoManager];
}

id objc_msgSend_undoableEditor(void *a1, const char *a2, ...)
{
  return _[a1 undoableEditor];
}

id objc_msgSend_unifiedContactWithIdentifier_keysToFetch_(void *a1, const char *a2, ...)
{
  return [a1 unifiedContactWithIdentifier:keysToFetch:];
}

id objc_msgSend_unifiedMeContact(void *a1, const char *a2, ...)
{
  return _[a1 unifiedMeContact];
}

id objc_msgSend_uniqueID(void *a1, const char *a2, ...)
{
  return _[a1 uniqueID];
}

id objc_msgSend_uniqueId(void *a1, const char *a2, ...)
{
  return _[a1 uniqueId];
}

id objc_msgSend_uniqueIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 uniqueIdentifier];
}

id objc_msgSend_uniqueKey(void *a1, const char *a2, ...)
{
  return _[a1 uniqueKey];
}

id objc_msgSend_unobstructedScrollViewHeight(void *a1, const char *a2, ...)
{
  return _[a1 unobstructedScrollViewHeight];
}

id objc_msgSend_unselectedCalendarIdentifiersForFocusMode(void *a1, const char *a2, ...)
{
  return _[a1 unselectedCalendarIdentifiersForFocusMode];
}

id objc_msgSend_unselectedCalendarsForFocusMode(void *a1, const char *a2, ...)
{
  return _[a1 unselectedCalendarsForFocusMode];
}

id objc_msgSend_unselectedCalendarsForFocusModeInEventStore_(void *a1, const char *a2, ...)
{
  return [a1 unselectedCalendarsForFocusModeInEventStore:];
}

id objc_msgSend_unselectedCalendarsIgnoringFocus(void *a1, const char *a2, ...)
{
  return _[a1 unselectedCalendarsIgnoringFocus];
}

id objc_msgSend_unsignedIntegerValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedIntegerValue];
}

id objc_msgSend_update(void *a1, const char *a2, ...)
{
  return _[a1 update];
}

id objc_msgSend_updateActivity_(void *a1, const char *a2, ...)
{
  return [a1 updateActivity:];
}

id objc_msgSend_updateAfterAppResume(void *a1, const char *a2, ...)
{
  return _[a1 updateAfterAppResume];
}

id objc_msgSend_updateAuthor(void *a1, const char *a2, ...)
{
  return _[a1 updateAuthor];
}

id objc_msgSend_updateBackButtonToDate_(void *a1, const char *a2, ...)
{
  return [a1 updateBackButtonToDate:];
}

id objc_msgSend_updateBackButtonWhileTopViewControllerToDate_(void *a1, const char *a2, ...)
{
  return [a1 updateBackButtonWhileTopViewControllerToDate:];
}

id objc_msgSend_updateBackgroundWithEdgeInsets_color_alpha_cornerMask_(void *a1, const char *a2, ...)
{
  return [a1 updateBackgroundWithEdgeInsets:color:alpha:cornerMask:];
}

id objc_msgSend_updateBannerDateStrings_(void *a1, const char *a2, ...)
{
  return [a1 updateBannerDateStrings:];
}

id objc_msgSend_updateButtonStateForSidebar_(void *a1, const char *a2, ...)
{
  return [a1 updateButtonStateForSidebar:];
}

id objc_msgSend_updateCompactMonthMenu(void *a1, const char *a2, ...)
{
  return _[a1 updateCompactMonthMenu];
}

id objc_msgSend_updateCurrentIdentity(void *a1, const char *a2, ...)
{
  return _[a1 updateCurrentIdentity];
}

id objc_msgSend_updateDayBadges(void *a1, const char *a2, ...)
{
  return _[a1 updateDayBadges];
}

id objc_msgSend_updateDayNumber(void *a1, const char *a2, ...)
{
  return _[a1 updateDayNumber];
}

id objc_msgSend_updateDayViewModeContainer(void *a1, const char *a2, ...)
{
  return _[a1 updateDayViewModeContainer];
}

id objc_msgSend_updateDayWidth(void *a1, const char *a2, ...)
{
  return _[a1 updateDayWidth];
}

id objc_msgSend_updateDisplayedDateForCurrentScrollOffset(void *a1, const char *a2, ...)
{
  return _[a1 updateDisplayedDateForCurrentScrollOffset];
}

id objc_msgSend_updateDividedMonthBarButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 updateDividedMonthBarButtonItem];
}

id objc_msgSend_updateDraggedOccurrenceView(void *a1, const char *a2, ...)
{
  return _[a1 updateDraggedOccurrenceView];
}

id objc_msgSend_updateDraggingOccurrenceForced_animated_(void *a1, const char *a2, ...)
{
  return [a1 updateDraggingOccurrenceForced:animated:];
}

id objc_msgSend_updateDraggingOccurrenceFrame(void *a1, const char *a2, ...)
{
  return _[a1 updateDraggingOccurrenceFrame];
}

id objc_msgSend_updateDraggingOccurrenceFrameFromSource(void *a1, const char *a2, ...)
{
  return _[a1 updateDraggingOccurrenceFrameFromSource];
}

id objc_msgSend_updateDraggingOccurrenceOrigin(void *a1, const char *a2, ...)
{
  return _[a1 updateDraggingOccurrenceOrigin];
}

id objc_msgSend_updateErrorState(void *a1, const char *a2, ...)
{
  return _[a1 updateErrorState];
}

id objc_msgSend_updateFonts(void *a1, const char *a2, ...)
{
  return _[a1 updateFonts];
}

id objc_msgSend_updateForChangeToTraitCollection_(void *a1, const char *a2, ...)
{
  return [a1 updateForChangeToTraitCollection:];
}

id objc_msgSend_updateHeaderText_(void *a1, const char *a2, ...)
{
  return [a1 updateHeaderText:];
}

id objc_msgSend_updateHighlightIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 updateHighlightIfNeeded];
}

id objc_msgSend_updateIdentity_(void *a1, const char *a2, ...)
{
  return [a1 updateIdentity:];
}

id objc_msgSend_updateInboxCount(void *a1, const char *a2, ...)
{
  return _[a1 updateInboxCount];
}

id objc_msgSend_updateMarkerPosition(void *a1, const char *a2, ...)
{
  return _[a1 updateMarkerPosition];
}

id objc_msgSend_updateMonthLabel(void *a1, const char *a2, ...)
{
  return _[a1 updateMonthLabel];
}

id objc_msgSend_updateMultiDayHighlightViewAnimated_(void *a1, const char *a2, ...)
{
  return [a1 updateMultiDayHighlightViewAnimated:];
}

id objc_msgSend_updateNavigationBarButtonItemsWithViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateNavigationBarButtonItemsWithViewController:");
}

id objc_msgSend_updateNavigationBarDisplayedDateString(void *a1, const char *a2, ...)
{
  return _[a1 updateNavigationBarDisplayedDateString];
}

id objc_msgSend_updateNavigationBarDisplayedDateStringWithDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateNavigationBarDisplayedDateStringWithDate:");
}

id objc_msgSend_updateNewEventButtonEnabledness(void *a1, const char *a2, ...)
{
  return _[a1 updateNewEventButtonEnabledness];
}

id objc_msgSend_updateNoContentConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 updateNoContentConfiguration];
}

id objc_msgSend_updateOverlay(void *a1, const char *a2, ...)
{
  return _[a1 updateOverlay];
}

id objc_msgSend_updatePalette_(void *a1, const char *a2, ...)
{
  return [a1 updatePalette:];
}

id objc_msgSend_updatePreferredReloadRange(void *a1, const char *a2, ...)
{
  return _[a1 updatePreferredReloadRange];
}

id objc_msgSend_updatePresentedController_(void *a1, const char *a2, ...)
{
  return [a1 updatePresentedController:];
}

id objc_msgSend_updatePresentedControllerTo_(void *a1, const char *a2, ...)
{
  return [a1 updatePresentedControllerTo:];
}

id objc_msgSend_updatePrimaryViewControllerNavBar(void *a1, const char *a2, ...)
{
  return _[a1 updatePrimaryViewControllerNavBar];
}

id objc_msgSend_updatePrimaryViewControllerToolbar(void *a1, const char *a2, ...)
{
  return _[a1 updatePrimaryViewControllerToolbar];
}

id objc_msgSend_updateSearchViewControllerToolbar(void *a1, const char *a2, ...)
{
  return _[a1 updateSearchViewControllerToolbar];
}

id objc_msgSend_updateSelectedDateForJumpToTodayTip(void *a1, const char *a2, ...)
{
  return _[a1 updateSelectedDateForJumpToTodayTip];
}

id objc_msgSend_updateSelectedDateTimeZone(void *a1, const char *a2, ...)
{
  return _[a1 updateSelectedDateTimeZone];
}

id objc_msgSend_updateSelectedResponseButton(void *a1, const char *a2, ...)
{
  return _[a1 updateSelectedResponseButton];
}

id objc_msgSend_updateSeparatorVisibiltyForSelectionChangeForRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 updateSeparatorVisibiltyForSelectionChangeForRowAtIndexPath:];
}

id objc_msgSend_updateShouldDisplayJumpToTodayTip(void *a1, const char *a2, ...)
{
  return _[a1 updateShouldDisplayJumpToTodayTip];
}

id objc_msgSend_updateShowWeekNumber(void *a1, const char *a2, ...)
{
  return _[a1 updateShowWeekNumber];
}

id objc_msgSend_updateSourceForSelectedIdentity_selectedCalendars_(void *a1, const char *a2, ...)
{
  return [a1 updateSourceForSelectedIdentity:selectedCalendars:];
}

id objc_msgSend_updateStateFromUI_(void *a1, const char *a2, ...)
{
  return [a1 updateStateFromUI:];
}

id objc_msgSend_updateTimeMarkerForDayChange(void *a1, const char *a2, ...)
{
  return _[a1 updateTimeMarkerForDayChange];
}

id objc_msgSend_updateTimeViewBaseline(void *a1, const char *a2, ...)
{
  return _[a1 updateTimeViewBaseline];
}

id objc_msgSend_updateToolbarItems(void *a1, const char *a2, ...)
{
  return _[a1 updateToolbarItems];
}

id objc_msgSend_updateToolbarItemsWithViewController_(void *a1, const char *a2, ...)
{
  return [a1 updateToolbarItemsWithViewController:];
}

id objc_msgSend_updateTotalRowCountWithContainerRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateTotalRowCountWithContainerRect:");
}

id objc_msgSend_updateUIFromState_(void *a1, const char *a2, ...)
{
  return [a1 updateUIFromState:];
}

id objc_msgSend_updateUIToTopHeaderDate(void *a1, const char *a2, ...)
{
  return _[a1 updateUIToTopHeaderDate];
}

id objc_msgSend_updateVisibleRects(void *a1, const char *a2, ...)
{
  return _[a1 updateVisibleRects];
}

id objc_msgSend_updateWeekNumber(void *a1, const char *a2, ...)
{
  return _[a1 updateWeekNumber];
}

id objc_msgSend_updateWithAddress_fullName_firstName_lastName_(void *a1, const char *a2, ...)
{
  return [a1 updateWithAddress:fullName:firstName:lastName:];
}

id objc_msgSend_updateWithContacts_(void *a1, const char *a2, ...)
{
  return [a1 updateWithContacts:];
}

id objc_msgSend_updateWithEvent_(void *a1, const char *a2, ...)
{
  return [a1 updateWithEvent:];
}

id objc_msgSend_updateWithEvent_dimmed_(void *a1, const char *a2, ...)
{
  return [a1 updateWithEvent:dimmed:];
}

id objc_msgSend_updateWithEvent_isMultiday_occurrenceStartDate_dimmed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithEvent:isMultiday:occurrenceStartDate:dimmed:");
}

id objc_msgSend_updateWithEvents_(void *a1, const char *a2, ...)
{
  return [a1 updateWithEvents:];
}

id objc_msgSend_updatedConfigurationForState_(void *a1, const char *a2, ...)
{
  return [a1 updatedConfigurationForState:];
}

id objc_msgSend_usableSpaceForOccurrencesWithHeight_(void *a1, const char *a2, ...)
{
  return [a1 usableSpaceForOccurrencesWithHeight:];
}

id objc_msgSend_useCustomBackButton(void *a1, const char *a2, ...)
{
  return _[a1 useCustomBackButton];
}

id objc_msgSend_useLayoutMargins(void *a1, const char *a2, ...)
{
  return _[a1 useLayoutMargins];
}

id objc_msgSend_useMultiDayHeaderStyle(void *a1, const char *a2, ...)
{
  return _[a1 useMultiDayHeaderStyle];
}

id objc_msgSend_useMultiDayStyle(void *a1, const char *a2, ...)
{
  return _[a1 useMultiDayStyle];
}

id objc_msgSend_usePortraitLayoutForSize_(void *a1, const char *a2, ...)
{
  return [a1 usePortraitLayoutForSize:];
}

id objc_msgSend_useTodayColors(void *a1, const char *a2, ...)
{
  return _[a1 useTodayColors];
}

id objc_msgSend_useUIKitLayoutMargins(void *a1, const char *a2, ...)
{
  return _[a1 useUIKitLayoutMargins];
}

id objc_msgSend_userActivities(void *a1, const char *a2, ...)
{
  return _[a1 userActivities];
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return _[a1 userInfo];
}

id objc_msgSend_userInitiatedScroll(void *a1, const char *a2, ...)
{
  return _[a1 userInitiatedScroll];
}

id objc_msgSend_userInterfaceIdiom(void *a1, const char *a2, ...)
{
  return _[a1 userInterfaceIdiom];
}

id objc_msgSend_userInterfaceStyle(void *a1, const char *a2, ...)
{
  return _[a1 userInterfaceStyle];
}

id objc_msgSend_userIsScrolling(void *a1, const char *a2, ...)
{
  return _[a1 userIsScrolling];
}

id objc_msgSend_userNotificationCenter(void *a1, const char *a2, ...)
{
  return _[a1 userNotificationCenter];
}

id objc_msgSend_usesMultiDayWeekView(void *a1, const char *a2, ...)
{
  return _[a1 usesMultiDayWeekView];
}

id objc_msgSend_usesRoundedRectInsteadOfCircle(void *a1, const char *a2, ...)
{
  return _[a1 usesRoundedRectInsteadOfCircle];
}

id objc_msgSend_usesSmallTextForIsCompact_(void *a1, const char *a2, ...)
{
  return [a1 usesSmallTextForIsCompact:];
}

id objc_msgSend_validateInterfaceOrientationWithFutureOrientation_(void *a1, const char *a2, ...)
{
  return [a1 validateInterfaceOrientationWithFutureOrientation:];
}

id objc_msgSend_value(void *a1, const char *a2, ...)
{
  return _[a1 value];
}

id objc_msgSend_valueForKey_(void *a1, const char *a2, ...)
{
  return [a1 valueForKey:];
}

id objc_msgSend_valueForSize_(void *a1, const char *a2, ...)
{
  return [a1 valueForSize:];
}

id objc_msgSend_valueWithCGRect_(void *a1, const char *a2, ...)
{
  return [a1 valueWithCGRect:];
}

id objc_msgSend_valueWithRange_(void *a1, const char *a2, ...)
{
  return [a1 valueWithRange:];
}

id objc_msgSend_valueWithSize_(void *a1, const char *a2, ...)
{
  return [a1 valueWithSize:];
}

id objc_msgSend_verticalEventPadding_(void *a1, const char *a2, ...)
{
  return [a1 verticalEventPadding];
}

id objc_msgSend_verticalScrollView(void *a1, const char *a2, ...)
{
  return _[a1 verticalScrollView];
}

id objc_msgSend_verticalSizeClass(void *a1, const char *a2, ...)
{
  return _[a1 verticalSizeClass];
}

id objc_msgSend_verticalSpaceBetweenOccurrences(void *a1, const char *a2, ...)
{
  return _[a1 verticalSpaceBetweenOccurrences];
}

id objc_msgSend_verticallyCompressedState(void *a1, const char *a2, ...)
{
  return _[a1 verticallyCompressedState];
}

id objc_msgSend_view(void *a1, const char *a2, ...)
{
  return _[a1 view];
}

id objc_msgSend_viewController(void *a1, const char *a2, ...)
{
  return _[a1 viewController];
}

id objc_msgSend_viewControllerForContact_(void *a1, const char *a2, ...)
{
  return [a1 viewControllerForContact:];
}

id objc_msgSend_viewControllerForKey_(void *a1, const char *a2, ...)
{
  return [a1 viewControllerForKey:];
}

id objc_msgSend_viewControllerForSidebarState_(void *a1, const char *a2, ...)
{
  return [a1 viewControllerForSidebarState:];
}

id objc_msgSend_viewControllerToShowFrom(void *a1, const char *a2, ...)
{
  return _[a1 viewControllerToShowFrom];
}

id objc_msgSend_viewControllers(void *a1, const char *a2, ...)
{
  return _[a1 viewControllers];
}

id objc_msgSend_viewDidAppear_(void *a1, const char *a2, ...)
{
  return [a1 viewDidAppear:];
}

id objc_msgSend_viewDidLayoutSubviews(void *a1, const char *a2, ...)
{
  return _[a1 viewDidLayoutSubviews];
}

id objc_msgSend_viewInterfaceOrientation(void *a1, const char *a2, ...)
{
  return _[a1 viewInterfaceOrientation];
}

id objc_msgSend_viewIsVisible(void *a1, const char *a2, ...)
{
  return _[a1 viewIsVisible];
}

id objc_msgSend_viewSwitcher(void *a1, const char *a2, ...)
{
  return _[a1 viewSwitcher];
}

id objc_msgSend_viewSwitcherLayoutHandler(void *a1, const char *a2, ...)
{
  return _[a1 viewSwitcherLayoutHandler];
}

id objc_msgSend_viewSwitcherSwitchedToViewWithDate_(void *a1, const char *a2, ...)
{
  return [a1 viewSwitcherSwitchedToViewWithDate:];
}

id objc_msgSend_viewWidthForSizing(void *a1, const char *a2, ...)
{
  return _[a1 viewWidthForSizing];
}

id objc_msgSend_viewWillAppear_(void *a1, const char *a2, ...)
{
  return [a1 viewWillAppear:];
}

id objc_msgSend_viewWillLayoutSubviews(void *a1, const char *a2, ...)
{
  return _[a1 viewWillLayoutSubviews];
}

id objc_msgSend_viewWillTransitionToSize_withTransitionCoordinator_(void *a1, const char *a2, ...)
{
  return [a1 viewWillTransitionToSize:withTransitionCoordinator:];
}

id objc_msgSend_virtualConference(void *a1, const char *a2, ...)
{
  return _[a1 virtualConference];
}

id objc_msgSend_visible(void *a1, const char *a2, ...)
{
  return _[a1 visible];
}

id objc_msgSend_visibleCalendars(void *a1, const char *a2, ...)
{
  return _[a1 visibleCalendars];
}

id objc_msgSend_visibleCalendarsForAllIdentities(void *a1, const char *a2, ...)
{
  return _[a1 visibleCalendarsForAllIdentities];
}

id objc_msgSend_visibleCellBadgeColors(void *a1, const char *a2, ...)
{
  return _[a1 visibleCellBadgeColors];
}

id objc_msgSend_visibleCellBadgeLocales(void *a1, const char *a2, ...)
{
  return _[a1 visibleCellBadgeLocales];
}

id objc_msgSend_visibleCellDayTypes(void *a1, const char *a2, ...)
{
  return _[a1 visibleCellDayTypes];
}

id objc_msgSend_visibleCells(void *a1, const char *a2, ...)
{
  return _[a1 visibleCells];
}

id objc_msgSend_visibleDaySummaryViews(void *a1, const char *a2, ...)
{
  return _[a1 visibleDaySummaryViews];
}

id objc_msgSend_visibleGroups(void *a1, const char *a2, ...)
{
  return _[a1 visibleGroups];
}

id objc_msgSend_visibleRangeForOffset_(void *a1, const char *a2, ...)
{
  return [a1 visibleRangeForOffset:];
}

id objc_msgSend_visibleViewController(void *a1, const char *a2, ...)
{
  return _[a1 visibleViewController];
}

id objc_msgSend_visibleWeeks(void *a1, const char *a2, ...)
{
  return _[a1 visibleWeeks];
}

id objc_msgSend_wantsCommentPromptWhenDeclining(void *a1, const char *a2, ...)
{
  return _[a1 wantsCommentPromptWhenDeclining];
}

id objc_msgSend_wantsManagement(void *a1, const char *a2, ...)
{
  return _[a1 wantsManagement];
}

id objc_msgSend_wantsScrollingMessagesOnEveryFrameFromListViewController_(void *a1, const char *a2, ...)
{
  return [a1 wantsScrollingMessagesOnEveryFrameFromListViewController:];
}

id objc_msgSend_wasAllowedToChangeDate(void *a1, const char *a2, ...)
{
  return _[a1 wasAllowedToChangeDate];
}

id objc_msgSend_week(void *a1, const char *a2, ...)
{
  return _[a1 week];
}

id objc_msgSend_weekAllDayBaselineForLargeFormatWeekView(void *a1, const char *a2, ...)
{
  return _[a1 weekAllDayBaselineForLargeFormatWeekView];
}

id objc_msgSend_weekAllDayBaselineForSmallFormatWeekView(void *a1, const char *a2, ...)
{
  return _[a1 weekAllDayBaselineForSmallFormatWeekView];
}

id objc_msgSend_weekAllDayLabelFontCompact(void *a1, const char *a2, ...)
{
  return _[a1 weekAllDayLabelFontCompact];
}

id objc_msgSend_weekAllDayLabelFontRegular(void *a1, const char *a2, ...)
{
  return _[a1 weekAllDayLabelFontRegular];
}

id objc_msgSend_weekAllDayOccurrenceHeight(void *a1, const char *a2, ...)
{
  return _[a1 weekAllDayOccurrenceHeight];
}

id objc_msgSend_weekAllDayOccurrenceHeightSmallText(void *a1, const char *a2, ...)
{
  return _[a1 weekAllDayOccurrenceHeightSmallText];
}

id objc_msgSend_weekAllDayTodayLabelFontCompact(void *a1, const char *a2, ...)
{
  return _[a1 weekAllDayTodayLabelFontCompact];
}

id objc_msgSend_weekAllDayTodayLabelFontRegular(void *a1, const char *a2, ...)
{
  return _[a1 weekAllDayTodayLabelFontRegular];
}

id objc_msgSend_weekAllDayView_didCreateOccurrenceViews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "weekAllDayView:didCreateOccurrenceViews:");
}

id objc_msgSend_weekAllDayView_didFinishScrollingToOccurrence_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "weekAllDayView:didFinishScrollingToOccurrence:");
}

id objc_msgSend_weekAllDayView_didSelectEvent_userInitiated_dateSelected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "weekAllDayView:didSelectEvent:userInitiated:dateSelected:");
}

id objc_msgSend_weekAllDayViewDidScroll_(void *a1, const char *a2, ...)
{
  return [a1 weekAllDayViewDidScroll:];
}

id objc_msgSend_weekAllDayViewEmptySpaceClick_onDay_(void *a1, const char *a2, ...)
{
  return [a1 weekAllDayViewEmptySpaceClick:onDay:];
}

id objc_msgSend_weekAllDayViewForTimeframeAfter_(void *a1, const char *a2, ...)
{
  return [a1 weekAllDayViewForTimeframeAfter:];
}

id objc_msgSend_weekAllDayViewForTimeframeBefore_(void *a1, const char *a2, ...)
{
  return [a1 weekAllDayViewForTimeframeBefore:];
}

id objc_msgSend_weekAllDayViewShouldAnnotateAppEntities_onDayStarting_(void *a1, const char *a2, ...)
{
  return [a1 weekAllDayViewShouldAnnotateAppEntities:onDayStarting:];
}

id objc_msgSend_weekAllDayViewStartDrag_(void *a1, const char *a2, ...)
{
  return [a1 weekAllDayViewStartDrag:];
}

id objc_msgSend_weekDayInitialsDay(void *a1, const char *a2, ...)
{
  return _[a1 weekDayInitialsDay];
}

id objc_msgSend_weekDayInitialsMonth(void *a1, const char *a2, ...)
{
  return _[a1 weekDayInitialsMonth];
}

id objc_msgSend_weekDelegate(void *a1, const char *a2, ...)
{
  return _[a1 weekDelegate];
}

id objc_msgSend_weekGroup_didReceiveTapForDate_(void *a1, const char *a2, ...)
{
  return [a1 weekGroup:didReceiveTapForDate:];
}

id objc_msgSend_weekGroup_didSelectEvent_userInitiated_dateSelected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "weekGroup:didSelectEvent:userInitiated:dateSelected:");
}

id objc_msgSend_weekGroup_didSelectEvents_userInitiated_(void *a1, const char *a2, ...)
{
  return [a1 weekGroup:didSelectEvents:userInitiated:];
}

id objc_msgSend_weekGroupAllDaySectionDidScroll_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "weekGroupAllDaySectionDidScroll:");
}

id objc_msgSend_weekGroupDidBeginDragging_(void *a1, const char *a2, ...)
{
  return [a1 weekGroupDidBeginDragging:];
}

id objc_msgSend_weekGroupDidEndDecelerating_(void *a1, const char *a2, ...)
{
  return [a1 weekGroupDidEndDecelerating:];
}

id objc_msgSend_weekGroupDidEndDragging_willDecelerate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "weekGroupDidEndDragging:willDecelerate:");
}

id objc_msgSend_weekGroupDidScroll_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "weekGroupDidScroll:");
}

id objc_msgSend_weekGroupForWeekAfter_(void *a1, const char *a2, ...)
{
  return [a1 weekGroupForWeekAfter:];
}

id objc_msgSend_weekGroupForWeekBefore_(void *a1, const char *a2, ...)
{
  return [a1 weekGroupForWeekBefore:];
}

id objc_msgSend_weekGroupViewDidLayout_(void *a1, const char *a2, ...)
{
  return [a1 weekGroupViewDidLayout:];
}

id objc_msgSend_weekGroupViewFirstVisibleSecondChanged_(void *a1, const char *a2, ...)
{
  return [a1 weekGroupViewFirstVisibleSecondChanged:];
}

id objc_msgSend_weekGroupViewOccurrenceLayoutDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "weekGroupViewOccurrenceLayoutDidChange:");
}

id objc_msgSend_weekGroupViewShouldAnnotateAppEntities_onDayStarting_(void *a1, const char *a2, ...)
{
  return [a1 weekGroupViewShouldAnnotateAppEntities:onDayStarting:];
}

id objc_msgSend_weekNumberColorForThisWeek_(void *a1, const char *a2, ...)
{
  return [a1 weekNumberColorForThisWeek:];
}

id objc_msgSend_weekNumberDistanceFromGrayLine(void *a1, const char *a2, ...)
{
  return _[a1 weekNumberDistanceFromGrayLine];
}

id objc_msgSend_weekNumberFont(void *a1, const char *a2, ...)
{
  return _[a1 weekNumberFont];
}

id objc_msgSend_weekOfMonth(void *a1, const char *a2, ...)
{
  return _[a1 weekOfMonth];
}

id objc_msgSend_weekOfYear(void *a1, const char *a2, ...)
{
  return _[a1 weekOfYear];
}

id objc_msgSend_weekScrollView(void *a1, const char *a2, ...)
{
  return _[a1 weekScrollView];
}

id objc_msgSend_weekScroller(void *a1, const char *a2, ...)
{
  return _[a1 weekScroller];
}

id objc_msgSend_weekSeparatorColor(void *a1, const char *a2, ...)
{
  return _[a1 weekSeparatorColor];
}

id objc_msgSend_weekStartDate(void *a1, const char *a2, ...)
{
  return _[a1 weekStartDate];
}

id objc_msgSend_weekView(void *a1, const char *a2, ...)
{
  return _[a1 weekView];
}

id objc_msgSend_weekView_allEventsForStartDate_endDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "weekView:allEventsForStartDate:endDate:");
}

id objc_msgSend_weekView_didSelectEvent_userInitiated_dateSelected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "weekView:didSelectEvent:userInitiated:dateSelected:");
}

id objc_msgSend_weekView_didSelectEvents_userInitiated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "weekView:didSelectEvents:userInitiated:");
}

id objc_msgSend_weekView_receivedTapInAllDayAreaOnDate_(void *a1, const char *a2, ...)
{
  return [a1 weekView:receivedTapInAllDayAreaOnDate:];
}

id objc_msgSend_weekViewAllDaySectionDidScroll_(void *a1, const char *a2, ...)
{
  return [a1 weekViewAllDaySectionDidScroll:];
}

id objc_msgSend_weekViewClass(void *a1, const char *a2, ...)
{
  return _[a1 weekViewClass];
}

id objc_msgSend_weekViewController_didEditEvent_creationMethod_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "weekViewController:didEditEvent:creationMethod:");
}

id objc_msgSend_weekViewDidBeginDragging_(void *a1, const char *a2, ...)
{
  return [a1 weekViewDidBeginDragging:];
}

id objc_msgSend_weekViewDidEndDecelerating_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "weekViewDidEndDecelerating:");
}

id objc_msgSend_weekViewDidEndDragging_willDecelerate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "weekViewDidEndDragging:willDecelerate:");
}

id objc_msgSend_weekViewDidLayout_(void *a1, const char *a2, ...)
{
  return [a1 weekViewDidLayout:];
}

id objc_msgSend_weekViewDidScroll_(void *a1, const char *a2, ...)
{
  return [a1 weekViewDidScroll:];
}

id objc_msgSend_weekViewFirstVisibleSecond(void *a1, const char *a2, ...)
{
  return _[a1 weekViewFirstVisibleSecond];
}

id objc_msgSend_weekViewFirstVisibleSecondChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "weekViewFirstVisibleSecondChanged:");
}

id objc_msgSend_weekViewForWeekAfter_(void *a1, const char *a2, ...)
{
  return [a1 weekViewForWeekAfter:];
}

id objc_msgSend_weekViewForWeekBefore_(void *a1, const char *a2, ...)
{
  return [a1 weekViewForWeekBefore:];
}

id objc_msgSend_weekViewHourScale(void *a1, const char *a2, ...)
{
  return _[a1 weekViewHourScale];
}

id objc_msgSend_weekViewOccurrenceLayoutDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "weekViewOccurrenceLayoutDidChange:");
}

id objc_msgSend_weekViewShouldAnnotateAppEntities_onDayStarting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "weekViewShouldAnnotateAppEntities:onDayStarting:");
}

id objc_msgSend_weekViewStartsOnToday(void *a1, const char *a2, ...)
{
  return _[a1 weekViewStartsOnToday];
}

id objc_msgSend_weekViews(void *a1, const char *a2, ...)
{
  return _[a1 weekViews];
}

id objc_msgSend_weekWidth(void *a1, const char *a2, ...)
{
  return _[a1 weekWidth];
}

id objc_msgSend_weekWidthForOrientation_(void *a1, const char *a2, ...)
{
  return [a1 weekWidthForOrientation:];
}

id objc_msgSend_weekday(void *a1, const char *a2, ...)
{
  return _[a1 weekday];
}

id objc_msgSend_weekdayAbbreviations(void *a1, const char *a2, ...)
{
  return _[a1 weekdayAbbreviations];
}

id objc_msgSend_weekdayHeaderFillsHalfWidth(void *a1, const char *a2, ...)
{
  return _[a1 weekdayHeaderFillsHalfWidth];
}

id objc_msgSend_weekdayHeaderMovedBeyondLeftEdge(void *a1, const char *a2, ...)
{
  return _[a1 weekdayHeaderMovedBeyondLeftEdge];
}

id objc_msgSend_weekdayHeaderVisible(void *a1, const char *a2, ...)
{
  return _[a1 weekdayHeaderVisible];
}

id objc_msgSend_weekendColor(void *a1, const char *a2, ...)
{
  return _[a1 weekendColor];
}

id objc_msgSend_weekendIndices(void *a1, const char *a2, ...)
{
  return _[a1 weekendIndices];
}

id objc_msgSend_weeksInMonth(void *a1, const char *a2, ...)
{
  return _[a1 weeksInMonth];
}

id objc_msgSend_whiteColor(void *a1, const char *a2, ...)
{
  return _[a1 whiteColor];
}

id objc_msgSend_width(void *a1, const char *a2, ...)
{
  return _[a1 width];
}

id objc_msgSend_widthAnchor(void *a1, const char *a2, ...)
{
  return _[a1 widthAnchor];
}

id objc_msgSend_widthDrawingTime_textRect_(void *a1, const char *a2, ...)
{
  return [a1 widthDrawingTime:textRect:];
}

id objc_msgSend_widthForOrientation_inViewHierarchy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "widthForOrientation:inViewHierarchy:");
}

id objc_msgSend_willChangeValueForKey_(void *a1, const char *a2, ...)
{
  return [a1 willChangeValueForKey:];
}

id objc_msgSend_willCommitPreview(void *a1, const char *a2, ...)
{
  return _[a1 willCommitPreview];
}

id objc_msgSend_willEnterForeground(void *a1, const char *a2, ...)
{
  return _[a1 willEnterForeground];
}

id objc_msgSend_willMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return [a1 willMoveToParentViewController:];
}

id objc_msgSend_willPresentDialogOnSave(void *a1, const char *a2, ...)
{
  return _[a1 willPresentDialogOnSave];
}

id objc_msgSend_window(void *a1, const char *a2, ...)
{
  return _[a1 window];
}

id objc_msgSend_windowScene(void *a1, const char *a2, ...)
{
  return _[a1 windowScene];
}

id objc_msgSend_windowScene_performActionForShortcutItem_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "windowScene:performActionForShortcutItem:completionHandler:");
}

id objc_msgSend_windowSpaceForOrientation_withViewInViewHierarchy_(void *a1, const char *a2, ...)
{
  return [a1 windowSpaceForOrientation:withViewInViewHierarchy:];
}

id objc_msgSend_windows(void *a1, const char *a2, ...)
{
  return _[a1 windows];
}

id objc_msgSend_xSpacing(void *a1, const char *a2, ...)
{
  return _[a1 xSpacing];
}

id objc_msgSend_yCenterForDayNumbers(void *a1, const char *a2, ...)
{
  return _[a1 yCenterForDayNumbers];
}

id objc_msgSend_yInset(void *a1, const char *a2, ...)
{
  return _[a1 yInset];
}

id objc_msgSend_yPositionPerhapsMatchingAllDayOccurrence_atPoint_(void *a1, const char *a2, ...)
{
  return [a1 yPositionPerhapsMatchingAllDayOccurrence:atPoint:];
}

id objc_msgSend_ySpacing(void *a1, const char *a2, ...)
{
  return _[a1 ySpacing];
}

id objc_msgSend_year(void *a1, const char *a2, ...)
{
  return _[a1 year];
}

id objc_msgSend_yearNumberFont(void *a1, const char *a2, ...)
{
  return _[a1 yearNumberFont];
}

id objc_msgSend_yearNumberKerning(void *a1, const char *a2, ...)
{
  return _[a1 yearNumberKerning];
}